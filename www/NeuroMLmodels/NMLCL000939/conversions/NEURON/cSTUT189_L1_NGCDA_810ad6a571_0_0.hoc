// Cell: cSTUT189_L1_NGCDA_810ad6a571_0_0
/*
{
  "id" : "cSTUT189_L1_NGCDA_810ad6a571_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.205194, -7.89507, 0.00372411, 3.42211", "-0.281494, -7.06579, 0.00341118, 5.97591", "-0.357793, -6.23651, 0.00309826, 8.37531", "-0.434093, -5.40723, 0.00278533, 10.3432", "-0.510393, -4.57795, 0.00247241, 11.4369", "-0.586693, -3.74867, 0.00215949, 12.475", "-0.662992, -2.91939, 0.00184656, 13.2762", "-0.739292, -2.09011, 0.00153364, 13.7985", "-0.815592, -1.26083, 0.00122072, 14.2879", "-0.891892, -0.431544, 9.07792E-4, 14.5959", "-0.968191, 0.397736, 5.94868E-4, 14.8765", "-1.04449, 1.22702, 2.81944E-4, 14.5629", "-1.12079, 2.0563, -3.09798E-5, 14.1775", "-1.19709, 2.88558, -3.43904E-4, 13.7921", "-1.27339, 3.71486, -6.56827E-4, 13.3649", "-1.34969, 4.54414, -9.69751E-4, 12.6101", "-1.42599, 5.37342, -0.00128267, 11.631", "-1.50229, 6.2027, -0.0015956, 10.4071", "-1.57859, 7.03198, -0.00190852, 8.83417", "-1.65489, 7.86126, -0.00222145, 6.03993", "-1.73119, 8.69054, -0.00253437, 3.30147" ]
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.549955, -2.76326, -6.95669, 0.92", "-0.0693697, -4.02225, -7.15351, 0.92", "0.316297, -5.71769, -7.42357, 0.92", "0.512238, -6.85961, -7.59736, 0.92", "0.737393, -8.33824, -7.92516, 0.69", "0.934444, -9.58678, -8.32663, 0.69", "1.11429, -10.7609, -8.75663, 0.69", "1.22497, -11.9152, -9.25443, 0.92", "1.26796, -12.6232, -9.61579, 0.92", "1.35957, -14.6271, -10.8044, 0.69", "1.42351, -16.0809, -11.7753, 0.69", "1.45136, -16.5826, -12.1275, 1.15", "1.45526, -17.4174, -12.7687, 1.61", "1.26784, -19.528, -14.6243, 0.92", "0.987219, -21.1613, -16.1477, 1.15", "0.553749, -22.8839, -17.8323, 0.92", "0.272239, -23.7923, -18.7349, 1.15", "-0.306349, -25.5412, -20.507, 1.15", "-0.953518, -27.217, -22.1918, 0.69", "-1.35867, -28.1511, -23.0813, 0.69", "-1.7451, -28.9768, -23.8661, 0.92", "-2.18287, -29.8808, -24.6796, 0.92", "-2.57228, -30.7523, -25.3662, 0.92", "-2.99584, -32.0918, -26.1032, 0.46", "-3.27466, -33.2687, -26.4801, 0.69" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-6.09994, 1.54174, -15.2267, 1.15", "-6.14425, 2.79687, -15.7063, 1.15", "-6.20975, 4.39493, -16.2109, 1.15", "-6.22138, 5.18562, -16.3715, 1.15", "-6.21006, 6.23997, -16.4923, 1.15", "-6.18888, 8.21235, -16.7182, 0.92", "-6.18307, 8.7534, -16.7801, 1.15", "-6.18763, 9.82456, -16.7971, 1.15", "-6.22106, 11.3577, -16.662, 1.15", "-6.212, 12.9476, -16.4398, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.78994, -8.47526, 1.77331, 2.29", "-3.60719, -9.76224, 2.2036, 2.06", "-4.64489, -11.3964, 2.74996, 2.29", "-5.59421, -12.8914, 3.24979, 2.52", "-6.34016, -14.0661, 3.64254, 2.52" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "6.41007, -0.243264, 2.29331, 1.15", "8.05727, -0.938505, 3.22344, 1.15", "9.79074, -1.67015, 4.20229, 1.15", "11.1169, -2.2299, 4.95114, 1.15", "12.5194, -2.82184, 5.74308, 1.38", "13.2687, -3.1381, 6.16619, 1.61", "14.1133, -3.49459, 6.64311, 1.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.6199, 8.34574, 3.15331, 1.38", "-5.48565, 10.5167, 4.24643, 1.38", "-6.06195, 11.923, 4.79618, 1.38", "-6.68576, 13.8047, 5.3351, 1.15", "-7.12831, 15.643, 5.71846, 1.38", "-7.39886, 17.0949, 5.93652, 1.38", "-7.56173, 18.3033, 6.04447, 1.15", "-7.63676, 20.1974, 6.0296, 1.15", "-7.58656, 22.3701, 5.83225, 0.92", "-7.454, 23.9015, 5.55905, 0.92", "-7.24122, 25.4152, 5.19421, 1.15", "-6.93026, 26.9859, 4.81756, 1.15", "-6.56418, 28.3953, 4.5216, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.22007, 4.68124, -7.50669, 0.92", "3.15789, 5.38005, -8.21312, 0.92", "4.06959, 6.05939, -8.89987, 0.92", "4.71085, 6.53721, -9.38291, 0.92", "5.4172, 7.06354, -9.91498, 1.15", "6.32691, 7.7414, -10.6002, 1.15", "7.25891, 8.43587, -11.3023, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000008858052515
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.73119, 8.69054, -0.00253437, 0.669433", "-3.10549, 23.6275, -0.00253437, 0.669433", "-4.4798, 38.5644, -0.00253437, 0.669433" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.212, 12.9476, -16.4398, 1.38", "-7.56394, 13.2915, -19.6808, 1.38", "-8.98438, 13.6562, -22.3029, 1.38", "-11.1655, 14.0632, -25.6528, 1.38", "-13.5783, 14.2789, -29.0438, 1.38", "-14.6598, 14.293, -30.4158, 1.15", "-16.4198, 14.2126, -32.4611, 1.15", "-18.693, 13.8991, -34.492, 1.15", "-20.7328, 13.5133, -36.004, 1.61", "-22.9358, 13.0008, -37.2878, 1.61", "-24.6595, 12.5086, -38.111, 1.15", "-26.5274, 11.7702, -39.0682, 1.15", "-27.9712, 10.9356, -39.8738, 1.61" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.212, 12.9476, -16.4398, 1.15", "-6.43835, 14.8892, -18.8465, 1.15", "-6.69754, 17.0416, -21.3278, 1.15", "-6.9345, 18.4871, -22.8376, 1.15", "-7.15025, 19.9819, -24.2455, 1.15", "-7.38582, 21.614, -25.7828, 0.92", "-7.57337, 22.9134, -27.0068, 0.92", "-7.742, 23.6754, -27.6463, 0.92", "-8.19546, 25.4216, -28.897, 0.69", "-8.65319, 27.4191, -30.0869, 0.69" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.34016, -14.0661, 3.64254, 1.38", "-6.36258, -14.7317, 5.0799, 1.38", "-6.39398, -15.6639, 7.09306, 1.38", "-6.42706, -16.6463, 9.21443, 1.38" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.34016, -14.0661, 3.64254, 1.38", "-8.23369, -15.4089, 3.95505, 1.38", "-9.92942, -16.5097, 3.92171, 1.38", "-11.6759, -17.4868, 3.60395, 1.38", "-13.1813, -18.1853, 3.10791, 1.15", "-14.9039, -18.7255, 2.28174, 1.38", "-16.4849, -19.2213, 1.52349, 1.15", "-18.3041, -19.4957, 0.240776, 1.15", "-19.4996, -19.4857, -0.942343, 0.92", "-20.5038, -19.2954, -2.23378, 0.92", "-21.5719, -18.8228, -3.96423, 1.15" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "14.1133, -3.49459, 6.64311, 1.38", "14.2552, -5.29902, 6.50708, 1.38", "14.3424, -6.40849, 6.42345, 1.38", "14.4787, -8.14129, 6.29282, 1.38", "14.6355, -10.1346, 6.14255, 0.92", "14.7381, -11.4397, 6.04417, 1.15", "14.8887, -13.3541, 5.89985, 1.38" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "14.1133, -3.49459, 6.64311, 0.92", "14.3466, -2.83333, 8.43151, 0.92", "14.5995, -2.11683, 10.3694, 0.92", "14.8318, -1.45856, 12.1497, 0.92", "15.1211, -0.63871, 14.367, 0.92", "15.317, -0.0834749, 15.8686, 0.92", "15.4502, 0.293958, 16.8894, 1.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.56418, 28.3953, 4.5216, 0.92", "-5.34762, 28.8465, 3.82495, 0.92", "-4.15998, 29.2869, 3.14487, 0.92", "-2.92209, 29.746, 2.43601, 0.92", "-1.8623, 30.1391, 1.82914, 0.92", "-0.698765, 30.5706, 1.16285, 0.92", "0.119439, 30.874, 0.694319, 0.46" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.56418, 28.3953, 4.5216, 1.61", "-6.32647, 30.3961, 2.75668, 1.61", "-6.12029, 32.1315, 1.22591, 1.15", "-5.89844, 33.9989, -0.421245, 0.92", "-5.70353, 35.6394, -1.86835, 0.92", "-5.47953, 37.5249, -3.53144, 0.69", "-5.32236, 38.8478, -4.69836, 0.69" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.25891, 8.43587, -11.3023, 1.15", "8.93009, 7.19606, -11.0178, 1.15", "10.8102, 5.80123, -10.6977, 1.15", "12.6359, 4.44681, -10.3869, 0.92", "14.0602, 3.39015, -10.1444, 1.15" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.25891, 8.43587, -11.3023, 0.69", "7.6493, 8.84009, -10.6414, 0.69", "8.37646, 9.55641, -9.27003, 0.69", "8.71681, 9.93304, -8.55732, 0.69", "9.01296, 10.349, -7.75999, 0.92", "9.37962, 10.864, -6.77282, 0.69", "9.88794, 11.5779, -5.40425, 0.69", "10.2943, 12.0384, -4.36896, 0.69", "10.6474, 12.3693, -3.51934, 0.92", "11.0588, 12.8974, -2.20981, 0.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.4798, 38.5644, -0.00253437, 0.23", "-5.8541, 53.5013, -0.00253437, 0.23", "-7.2284, 68.4382, -0.00253437, 0.23" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-27.9712, 10.9356, -39.8738, 1.38", "-29.5346, 8.59872, -37.4324, 1.38", "-32.2128, 5.69634, -35.0574, 1.38", "-34.6823, 3.73732, -33.7974, 1.38", "-35.7179, 3.15367, -33.6094, 0.92", "-37.5475, 2.46892, -33.718, 1.61", "-40.4582, 1.91194, -34.5348, 0.92", "-43.23, 1.97203, -35.9564, 0.92", "-45.3417, 2.32683, -37.2974, 1.61", "-49.0085, 3.35891, -39.8083, 0.69", "-51.8601, 4.49746, -41.725, 0.92", "-54.1184, 5.62522, -43.1674, 0.92", "-55.4943, 6.36898, -43.9708, 0.92", "-57.0218, 7.26075, -44.8702, 1.38", "-59.6905, 8.8323, -46.3183, 0.69", "-62.8459, 10.5367, -47.5943, 0.69", "-65.8059, 11.9027, -48.511, 0.69", "-68.0718, 12.8886, -49.1157, 0.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-27.9712, 10.9356, -39.8738, 0.69", "-29.3456, 10.9151, -41.2529, 0.69", "-31.162, 11.0108, -42.9379, 1.15", "-32.4388, 11.2224, -44.1496, 1.15", "-33.5193, 11.5134, -45.1678, 1.15", "-35.0505, 12.0615, -46.5297, 1.15", "-35.7387, 12.3719, -47.0763, 0.92", "-36.6706, 13.062, -47.8049, 0.92", "-37.8574, 14.1892, -48.501, 1.15", "-38.3512, 14.7077, -48.7156, 0.92", "-39.4001, 15.9088, -49.0669, 1.15", "-40.4168, 17.162, -49.3586, 0.92", "-41.8134, 19.0468, -49.9268, 0.92", "-42.7492, 20.4229, -50.362, 0.92", "-43.2547, 21.2841, -50.7056, 0.92", "-43.9294, 22.7436, -51.4274, 1.15", "-44.2725, 23.6206, -51.8878, 1.15", "-45.2086, 26.41, -53.5043, 0.92", "-45.4859, 27.4963, -54.1427, 0.92", "-46.0069, 30.4514, -56.1377, 0.92", "-46.1225, 31.3875, -56.8676, 0.92" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-6.42706, -16.6463, 9.21443, 0.92", "-7.48845, -15.861, 9.02801, 0.92", "-8.92615, -14.7974, 8.77549, 0.92", "-9.9682, -14.0264, 8.59247, 0.92", "-11.1633, -13.1423, 8.38257, 0.92", "-12.1514, -12.4112, 8.20903, 0.92", "-13.3268, -11.5416, 8.00259, 1.15" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.42706, -16.6463, 9.21443, 0.92", "-5.67667, -16.1768, 10.0017, 0.92", "-4.69722, -15.684, 10.823, 0.92", "-4.27975, -15.54, 11.1488, 0.92", "-3.62491, -15.388, 11.6981, 0.92", "-2.50631, -15.1899, 12.8323, 0.92", "-1.63375, -15.1095, 13.8614, 0.92", "-0.804134, -15.0944, 15.103, 0.92", "-0.367175, -15.2705, 15.9939, 0.92", "0.222842, -15.7114, 17.3674, 0.92", "0.689759, -16.3253, 18.6132, 0.92", "0.91525, -16.9298, 19.4213, 0.92", "0.920489, -17.3671, 19.9117, 0.92", "0.754501, -17.9793, 20.6068, 0.92" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-21.5719, -18.8228, -3.96423, 0.92", "-21.8518, -17.7187, -5.07008, 0.92", "-22.3081, -16.3175, -6.33403, 0.92", "-22.824, -14.7901, -7.59162, 0.92", "-23.0718, -14.0889, -8.14681, 0.92", "-23.6213, -12.5339, -9.37792, 0.92", "-23.9419, -11.6265, -10.0963, 0.92", "-24.4611, -10.2798, -11.1542, 0.92", "-24.8543, -9.24815, -11.83, 1.15", "-25.3208, -8.16707, -12.4174, 1.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-21.5719, -18.8228, -3.96423, 0.69", "-22.3529, -19.7455, -5.26631, 0.69", "-22.9883, -20.6546, -6.45218, 0.69", "-23.2735, -21.121, -7.06508, 0.92", "-23.8888, -22.0884, -8.3852, 0.92", "-24.4437, -22.918, -9.62394, 0.92", "-24.957, -23.7089, -10.8698, 0.92", "-25.3607, -24.4781, -12.0701, 0.92", "-25.6293, -25.2004, -13.2297, 0.92", "-25.7703, -26.0611, -14.6674, 0.92", "-25.6461, -26.6458, -15.6966, 0.92", "-25.4002, -26.998, -16.3458, 0.92", "-24.622, -27.5846, -17.5846, 0.92", "-23.8563, -28.012, -18.5194, 0.92", "-23.0176, -28.4554, -19.4551, 0.69", "-21.6652, -29.2263, -20.9842, 0.69", "-20.586, -29.8935, -22.235, 0.69", "-19.8481, -30.4061, -23.1885, 2.29", "-18.7023, -31.3039, -24.8921, 0.69", "-17.8845, -32.083, -26.269, 0.69", "-17.0409, -32.9887, -27.8665, 0.69", "-16.3886, -33.8179, -29.2247, 0.69", "-15.7276, -34.7776, -30.6994, 0.69", "-14.8788, -36.1772, -32.7693, 0.69", "-14.5697, -36.662, -33.4804, 1.38" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "14.8887, -13.3541, 5.89985, 0.69", "15.5053, -14.7019, 6.48937, 0.69", "16.0395, -15.8776, 7.0694, 0.69", "16.7625, -17.3409, 7.90307, 0.69", "17.0776, -17.9787, 8.26638, 0.92", "17.6671, -19.1719, 8.94613, 0.92", "18.4139, -20.6834, 9.80722, 0.92", "19.3066, -22.4436, 10.8389, 0.92", "19.9442, -23.5604, 11.5706, 0.69" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "14.8887, -13.3541, 5.89985, 0.46", "16.425, -13.2504, 5.20229, 0.46", "18.7231, -13.0954, 4.15884, 0.46", "21.0571, -12.938, 3.09911, 0.69", "23.0715, -12.8021, 2.18446, 0.46", "24.5339, -12.7034, 1.52048, 0.46", "26.3761, -12.5792, 0.684027, 0.46" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "14.0602, 3.39015, -10.1444, 1.15", "14.4267, 3.54231, -8.85563, 1.15", "14.9343, 3.8779, -6.69915, 1.15", "15.4217, 4.38104, -4.35501, 1.15", "15.7811, 4.9618, -2.33783, 1.15", "16.0789, 5.60483, -0.566486, 1.15", "16.2982, 6.10218, 0.628549, 1.15", "16.4444, 6.56594, 1.44977, 0.69", "16.6442, 7.2738, 2.32772, 0.69", "17.0041, 8.12242, 3.14079, 0.69", "17.5011, 8.80689, 3.80105, 0.92", "17.9835, 9.3219, 4.39277, 0.92", "18.3408, 9.68227, 4.92029, 0.92", "19.0415, 10.3144, 6.36947, 0.92", "19.628, 10.7854, 7.9457, 0.92", "20.0178, 11.1117, 9.33738, 0.92", "20.3087, 11.4473, 10.7679, 0.92", "20.4589, 11.7413, 12.0021, 0.92", "20.5135, 12.0761, 13.3796, 0.92", "20.4566, 12.2322, 14.0919, 0.92", "20.2511, 12.4638, 15.4171, 1.38", "20.1117, 12.5879, 16.7847, 1.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "14.0602, 3.39015, -10.1444, 0.92", "14.6465, 2.90656, -10.801, 0.92", "15.5587, 2.15407, -11.8228, 0.69", "16.56, 1.32816, -12.9443, 0.69", "17.1827, 0.814512, -13.6417, 0.92", "17.6741, 0.409194, -14.1921, 1.15", "18.749, -0.477399, -15.3959, 1.15" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-13.3268, -11.5416, 8.00259, 0.92", "-14.288, -11.5423, 9.19558, 0.92", "-16.537, -11.5439, 11.9868, 0.92", "-18.4554, -11.5453, 14.3676, 0.92", "-19.9505, -11.5463, 16.2231, 0.92", "-21.887, -11.5477, 18.6264, 0.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-13.3268, -11.5416, 8.00259, 0.69", "-14.5189, -11.03, 6.91303, 0.69", "-15.3425, -10.6659, 6.23113, 0.69", "-16.4538, -10.2331, 5.42068, 0.69", "-17.2739, -10.0161, 4.86525, 0.69", "-18.3616, -9.8703, 4.22744, 0.69", "-19.1442, -9.76539, 3.76857, 0.69", "-19.9168, -9.72471, 3.37559, 0.92", "-20.9961, -9.71416, 2.86859, 1.61", "-22.9435, -9.72845, 2.03661, 0.69", "-25.193, -9.87394, 1.09152, 0.69" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "0.754501, -17.9793, 20.6068, 0.69", "1.80401, -17.3614, 21.8246, 0.69", "2.76059, -16.7981, 22.9346, 0.46", "3.46602, -16.3827, 23.7532, 1.15", "4.03104, -16.05, 24.4089, 2.06", "4.64576, -15.688, 25.1222, 2.06" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "0.754501, -17.9793, 20.6068, 0.92", "1.05206, -18.7921, 20.3391, 0.92", "1.69631, -20.552, 19.7595, 0.69", "2.42435, -22.5407, 19.1046, 0.69", "2.89475, -23.8256, 18.6814, 0.92", "3.69038, -25.9989, 17.9656, 0.69" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_24", "dend_13", "dend_8", "dend_5", "dend_0", "dend_26", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_15", "dend_12", "dend_11", "dend_4", "dend_3", "dend_23", "dend_22", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_29", "dend_24", "dend_13", "dend_8", "dend_5", "dend_0", "dend_26", "dend_25", "dend_17", "dend_14", "dend_10", "dend_9", "dend_7", "dend_6", "dend_2", "dend_1", "dend_28", "dend_27", "dend_21", "dend_18", "dend_16", "dend_15", "dend_12", "dend_11", "dend_4", "dend_3", "dend_23", "dend_22", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L1_NGCDA_810ad6a571_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_21
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_29(0), soma_0(0.45000008858052515)
    connect dend_24(0), soma_0(0.45000008858052515)
    connect dend_13(0), soma_0(0.45000008858052515)
    connect dend_8(0), soma_0(0.45000008858052515)
    connect dend_5(0), soma_0(0.45000008858052515)
    connect dend_0(0), soma_0(0.45000008858052515)
    connect axon_0(0), soma_0(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.205194, -7.89507, 0.00372411, 3.42211 ) }
    soma_0 { pt3dadd( -0.281494, -7.06579, 0.00341118, 5.97591 ) }
    soma_0 { pt3dadd( -0.357793, -6.23651, 0.00309826, 8.37531 ) }
    soma_0 { pt3dadd( -0.434093, -5.40723, 0.00278533, 10.3432 ) }
    soma_0 { pt3dadd( -0.510393, -4.57795, 0.00247241, 11.4369 ) }
    soma_0 { pt3dadd( -0.586693, -3.74867, 0.00215949, 12.475 ) }
    soma_0 { pt3dadd( -0.662992, -2.91939, 0.00184656, 13.2762 ) }
    soma_0 { pt3dadd( -0.739292, -2.09011, 0.00153364, 13.7985 ) }
    soma_0 { pt3dadd( -0.815592, -1.26083, 0.00122072, 14.2879 ) }
    soma_0 { pt3dadd( -0.891892, -0.431544, 9.07792E-4, 14.5959 ) }
    soma_0 { pt3dadd( -0.968191, 0.397736, 5.94868E-4, 14.8765 ) }
    soma_0 { pt3dadd( -1.04449, 1.22702, 2.81944E-4, 14.5629 ) }
    soma_0 { pt3dadd( -1.12079, 2.0563, -3.09798E-5, 14.1775 ) }
    soma_0 { pt3dadd( -1.19709, 2.88558, -3.43904E-4, 13.7921 ) }
    soma_0 { pt3dadd( -1.27339, 3.71486, -6.56827E-4, 13.3649 ) }
    soma_0 { pt3dadd( -1.34969, 4.54414, -9.69751E-4, 12.6101 ) }
    soma_0 { pt3dadd( -1.42599, 5.37342, -0.00128267, 11.631 ) }
    soma_0 { pt3dadd( -1.50229, 6.2027, -0.0015956, 10.4071 ) }
    soma_0 { pt3dadd( -1.57859, 7.03198, -0.00190852, 8.83417 ) }
    soma_0 { pt3dadd( -1.65489, 7.86126, -0.00222145, 6.03993 ) }
    soma_0 { pt3dadd( -1.73119, 8.69054, -0.00253437, 3.30147 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 21/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.549955, -2.76326, -6.95669, 0.92 ) }
    dend_29 { pt3dadd( -0.0693697, -4.02225, -7.15351, 0.92 ) }
    dend_29 { pt3dadd( 0.316297, -5.71769, -7.42357, 0.92 ) }
    dend_29 { pt3dadd( 0.512238, -6.85961, -7.59736, 0.92 ) }
    dend_29 { pt3dadd( 0.737393, -8.33824, -7.92516, 0.69 ) }
    dend_29 { pt3dadd( 0.934444, -9.58678, -8.32663, 0.69 ) }
    dend_29 { pt3dadd( 1.11429, -10.7609, -8.75663, 0.69 ) }
    dend_29 { pt3dadd( 1.22497, -11.9152, -9.25443, 0.92 ) }
    dend_29 { pt3dadd( 1.26796, -12.6232, -9.61579, 0.92 ) }
    dend_29 { pt3dadd( 1.35957, -14.6271, -10.8044, 0.69 ) }
    dend_29 { pt3dadd( 1.42351, -16.0809, -11.7753, 0.69 ) }
    dend_29 { pt3dadd( 1.45136, -16.5826, -12.1275, 1.15 ) }
    dend_29 { pt3dadd( 1.45526, -17.4174, -12.7687, 1.61 ) }
    dend_29 { pt3dadd( 1.26784, -19.528, -14.6243, 0.92 ) }
    dend_29 { pt3dadd( 0.987219, -21.1613, -16.1477, 1.15 ) }
    dend_29 { pt3dadd( 0.553749, -22.8839, -17.8323, 0.92 ) }
    dend_29 { pt3dadd( 0.272239, -23.7923, -18.7349, 1.15 ) }
    dend_29 { pt3dadd( -0.306349, -25.5412, -20.507, 1.15 ) }
    dend_29 { pt3dadd( -0.953518, -27.217, -22.1918, 0.69 ) }
    dend_29 { pt3dadd( -1.35867, -28.1511, -23.0813, 0.69 ) }
    dend_29 { pt3dadd( -1.7451, -28.9768, -23.8661, 0.92 ) }
    dend_29 { pt3dadd( -2.18287, -29.8808, -24.6796, 0.92 ) }
    dend_29 { pt3dadd( -2.57228, -30.7523, -25.3662, 0.92 ) }
    dend_29 { pt3dadd( -2.99584, -32.0918, -26.1032, 0.46 ) }
    dend_29 { pt3dadd( -3.27466, -33.2687, -26.4801, 0.69 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -6.09994, 1.54174, -15.2267, 1.15 ) }
    dend_24 { pt3dadd( -6.14425, 2.79687, -15.7063, 1.15 ) }
    dend_24 { pt3dadd( -6.20975, 4.39493, -16.2109, 1.15 ) }
    dend_24 { pt3dadd( -6.22138, 5.18562, -16.3715, 1.15 ) }
    dend_24 { pt3dadd( -6.21006, 6.23997, -16.4923, 1.15 ) }
    dend_24 { pt3dadd( -6.18888, 8.21235, -16.7182, 0.92 ) }
    dend_24 { pt3dadd( -6.18307, 8.7534, -16.7801, 1.15 ) }
    dend_24 { pt3dadd( -6.18763, 9.82456, -16.7971, 1.15 ) }
    dend_24 { pt3dadd( -6.22106, 11.3577, -16.662, 1.15 ) }
    dend_24 { pt3dadd( -6.212, 12.9476, -16.4398, 1.61 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 56/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.78994, -8.47526, 1.77331, 2.29 ) }
    dend_13 { pt3dadd( -3.60719, -9.76224, 2.2036, 2.06 ) }
    dend_13 { pt3dadd( -4.64489, -11.3964, 2.74996, 2.29 ) }
    dend_13 { pt3dadd( -5.59421, -12.8914, 3.24979, 2.52 ) }
    dend_13 { pt3dadd( -6.34016, -14.0661, 3.64254, 2.52 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 61/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 6.41007, -0.243264, 2.29331, 1.15 ) }
    dend_8 { pt3dadd( 8.05727, -0.938505, 3.22344, 1.15 ) }
    dend_8 { pt3dadd( 9.79074, -1.67015, 4.20229, 1.15 ) }
    dend_8 { pt3dadd( 11.1169, -2.2299, 4.95114, 1.15 ) }
    dend_8 { pt3dadd( 12.5194, -2.82184, 5.74308, 1.38 ) }
    dend_8 { pt3dadd( 13.2687, -3.1381, 6.16619, 1.61 ) }
    dend_8 { pt3dadd( 14.1133, -3.49459, 6.64311, 1.61 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 68/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.6199, 8.34574, 3.15331, 1.38 ) }
    dend_5 { pt3dadd( -5.48565, 10.5167, 4.24643, 1.38 ) }
    dend_5 { pt3dadd( -6.06195, 11.923, 4.79618, 1.38 ) }
    dend_5 { pt3dadd( -6.68576, 13.8047, 5.3351, 1.15 ) }
    dend_5 { pt3dadd( -7.12831, 15.643, 5.71846, 1.38 ) }
    dend_5 { pt3dadd( -7.39886, 17.0949, 5.93652, 1.38 ) }
    dend_5 { pt3dadd( -7.56173, 18.3033, 6.04447, 1.15 ) }
    dend_5 { pt3dadd( -7.63676, 20.1974, 6.0296, 1.15 ) }
    dend_5 { pt3dadd( -7.58656, 22.3701, 5.83225, 0.92 ) }
    dend_5 { pt3dadd( -7.454, 23.9015, 5.55905, 0.92 ) }
    dend_5 { pt3dadd( -7.24122, 25.4152, 5.19421, 1.15 ) }
    dend_5 { pt3dadd( -6.93026, 26.9859, 4.81756, 1.15 ) }
    dend_5 { pt3dadd( -6.56418, 28.3953, 4.5216, 1.38 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 81/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.22007, 4.68124, -7.50669, 0.92 ) }
    dend_0 { pt3dadd( 3.15789, 5.38005, -8.21312, 0.92 ) }
    dend_0 { pt3dadd( 4.06959, 6.05939, -8.89987, 0.92 ) }
    dend_0 { pt3dadd( 4.71085, 6.53721, -9.38291, 0.92 ) }
    dend_0 { pt3dadd( 5.4172, 7.06354, -9.91498, 1.15 ) }
    dend_0 { pt3dadd( 6.32691, 7.7414, -10.6002, 1.15 ) }
    dend_0 { pt3dadd( 7.25891, 8.43587, -11.3023, 1.38 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.73119, 8.69054, -0.00253437, 0.669433 ) }
    axon_0 { pt3dadd( -3.10549, 23.6275, -0.00253437, 0.669433 ) }
    axon_0 { pt3dadd( -4.4798, 38.5644, -0.00253437, 0.669433 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 91/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.212, 12.9476, -16.4398, 1.38 ) }
    dend_26 { pt3dadd( -7.56394, 13.2915, -19.6808, 1.38 ) }
    dend_26 { pt3dadd( -8.98438, 13.6562, -22.3029, 1.38 ) }
    dend_26 { pt3dadd( -11.1655, 14.0632, -25.6528, 1.38 ) }
    dend_26 { pt3dadd( -13.5783, 14.2789, -29.0438, 1.38 ) }
    dend_26 { pt3dadd( -14.6598, 14.293, -30.4158, 1.15 ) }
    dend_26 { pt3dadd( -16.4198, 14.2126, -32.4611, 1.15 ) }
    dend_26 { pt3dadd( -18.693, 13.8991, -34.492, 1.15 ) }
    dend_26 { pt3dadd( -20.7328, 13.5133, -36.004, 1.61 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( -22.9358, 13.0008, -37.2878, 1.61 ) }
    dend_26 { pt3dadd( -24.6595, 12.5086, -38.111, 1.15 ) }
    dend_26 { pt3dadd( -26.5274, 11.7702, -39.0682, 1.15 ) }
    dend_26 { pt3dadd( -27.9712, 10.9356, -39.8738, 1.61 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.212, 12.9476, -16.4398, 1.15 ) }
    dend_25 { pt3dadd( -6.43835, 14.8892, -18.8465, 1.15 ) }
    dend_25 { pt3dadd( -6.69754, 17.0416, -21.3278, 1.15 ) }
    dend_25 { pt3dadd( -6.9345, 18.4871, -22.8376, 1.15 ) }
    dend_25 { pt3dadd( -7.15025, 19.9819, -24.2455, 1.15 ) }
    dend_25 { pt3dadd( -7.38582, 21.614, -25.7828, 0.92 ) }
    dend_25 { pt3dadd( -7.57337, 22.9134, -27.0068, 0.92 ) }
    dend_25 { pt3dadd( -7.742, 23.6754, -27.6463, 0.92 ) }
    dend_25 { pt3dadd( -8.19546, 25.4216, -28.897, 0.69 ) }
    dend_25 { pt3dadd( -8.65319, 27.4191, -30.0869, 0.69 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 14/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.34016, -14.0661, 3.64254, 1.38 ) }
    dend_17 { pt3dadd( -6.36258, -14.7317, 5.0799, 1.38 ) }
    dend_17 { pt3dadd( -6.39398, -15.6639, 7.09306, 1.38 ) }
    dend_17 { pt3dadd( -6.42706, -16.6463, 9.21443, 1.38 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 18/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.34016, -14.0661, 3.64254, 1.38 ) }
    dend_14 { pt3dadd( -8.23369, -15.4089, 3.95505, 1.38 ) }
    dend_14 { pt3dadd( -9.92942, -16.5097, 3.92171, 1.38 ) }
    dend_14 { pt3dadd( -11.6759, -17.4868, 3.60395, 1.38 ) }
    dend_14 { pt3dadd( -13.1813, -18.1853, 3.10791, 1.15 ) }
    dend_14 { pt3dadd( -14.9039, -18.7255, 2.28174, 1.38 ) }
    dend_14 { pt3dadd( -16.4849, -19.2213, 1.52349, 1.15 ) }
    dend_14 { pt3dadd( -18.3041, -19.4957, 0.240776, 1.15 ) }
    dend_14 { pt3dadd( -19.4996, -19.4857, -0.942343, 0.92 ) }
    dend_14 { pt3dadd( -20.5038, -19.2954, -2.23378, 0.92 ) }
    dend_14 { pt3dadd( -21.5719, -18.8228, -3.96423, 1.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 14.1133, -3.49459, 6.64311, 1.38 ) }
    dend_10 { pt3dadd( 14.2552, -5.29902, 6.50708, 1.38 ) }
    dend_10 { pt3dadd( 14.3424, -6.40849, 6.42345, 1.38 ) }
    dend_10 { pt3dadd( 14.4787, -8.14129, 6.29282, 1.38 ) }
    dend_10 { pt3dadd( 14.6355, -10.1346, 6.14255, 0.92 ) }
    dend_10 { pt3dadd( 14.7381, -11.4397, 6.04417, 1.15 ) }
    dend_10 { pt3dadd( 14.8887, -13.3541, 5.89985, 1.38 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 36/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 14.1133, -3.49459, 6.64311, 0.92 ) }
    dend_9 { pt3dadd( 14.3466, -2.83333, 8.43151, 0.92 ) }
    dend_9 { pt3dadd( 14.5995, -2.11683, 10.3694, 0.92 ) }
    dend_9 { pt3dadd( 14.8318, -1.45856, 12.1497, 0.92 ) }
    dend_9 { pt3dadd( 15.1211, -0.63871, 14.367, 0.92 ) }
    dend_9 { pt3dadd( 15.317, -0.0834749, 15.8686, 0.92 ) }
    dend_9 { pt3dadd( 15.4502, 0.293958, 16.8894, 1.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 43/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.56418, 28.3953, 4.5216, 0.92 ) }
    dend_7 { pt3dadd( -5.34762, 28.8465, 3.82495, 0.92 ) }
    dend_7 { pt3dadd( -4.15998, 29.2869, 3.14487, 0.92 ) }
    dend_7 { pt3dadd( -2.92209, 29.746, 2.43601, 0.92 ) }
    dend_7 { pt3dadd( -1.8623, 30.1391, 1.82914, 0.92 ) }
    dend_7 { pt3dadd( -0.698765, 30.5706, 1.16285, 0.92 ) }
    dend_7 { pt3dadd( 0.119439, 30.874, 0.694319, 0.46 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 50/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.56418, 28.3953, 4.5216, 1.61 ) }
    dend_6 { pt3dadd( -6.32647, 30.3961, 2.75668, 1.61 ) }
    dend_6 { pt3dadd( -6.12029, 32.1315, 1.22591, 1.15 ) }
    dend_6 { pt3dadd( -5.89844, 33.9989, -0.421245, 0.92 ) }
    dend_6 { pt3dadd( -5.70353, 35.6394, -1.86835, 0.92 ) }
    dend_6 { pt3dadd( -5.47953, 37.5249, -3.53144, 0.69 ) }
    dend_6 { pt3dadd( -5.32236, 38.8478, -4.69836, 0.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 57/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.25891, 8.43587, -11.3023, 1.15 ) }
    dend_2 { pt3dadd( 8.93009, 7.19606, -11.0178, 1.15 ) }
    dend_2 { pt3dadd( 10.8102, 5.80123, -10.6977, 1.15 ) }
    dend_2 { pt3dadd( 12.6359, 4.44681, -10.3869, 0.92 ) }
    dend_2 { pt3dadd( 14.0602, 3.39015, -10.1444, 1.15 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 62/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.25891, 8.43587, -11.3023, 0.69 ) }
    dend_1 { pt3dadd( 7.6493, 8.84009, -10.6414, 0.69 ) }
    dend_1 { pt3dadd( 8.37646, 9.55641, -9.27003, 0.69 ) }
    dend_1 { pt3dadd( 8.71681, 9.93304, -8.55732, 0.69 ) }
    dend_1 { pt3dadd( 9.01296, 10.349, -7.75999, 0.92 ) }
    dend_1 { pt3dadd( 9.37962, 10.864, -6.77282, 0.69 ) }
    dend_1 { pt3dadd( 9.88794, 11.5779, -5.40425, 0.69 ) }
    dend_1 { pt3dadd( 10.2943, 12.0384, -4.36896, 0.69 ) }
    dend_1 { pt3dadd( 10.6474, 12.3693, -3.51934, 0.92 ) }
    dend_1 { pt3dadd( 11.0588, 12.8974, -2.20981, 0.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 72/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.4798, 38.5644, -0.00253437, 0.23 ) }
    axon_1 { pt3dadd( -5.8541, 53.5013, -0.00253437, 0.23 ) }
    axon_1 { pt3dadd( -7.2284, 68.4382, -0.00253437, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -27.9712, 10.9356, -39.8738, 1.38 ) }
    dend_28 { pt3dadd( -29.5346, 8.59872, -37.4324, 1.38 ) }
    dend_28 { pt3dadd( -32.2128, 5.69634, -35.0574, 1.38 ) }
    dend_28 { pt3dadd( -34.6823, 3.73732, -33.7974, 1.38 ) }
    dend_28 { pt3dadd( -35.7179, 3.15367, -33.6094, 0.92 ) }
    dend_28 { pt3dadd( -37.5475, 2.46892, -33.718, 1.61 ) }
    dend_28 { pt3dadd( -40.4582, 1.91194, -34.5348, 0.92 ) }
    dend_28 { pt3dadd( -43.23, 1.97203, -35.9564, 0.92 ) }
    dend_28 { pt3dadd( -45.3417, 2.32683, -37.2974, 1.61 ) }
    dend_28 { pt3dadd( -49.0085, 3.35891, -39.8083, 0.69 ) }
    dend_28 { pt3dadd( -51.8601, 4.49746, -41.725, 0.92 ) }
    dend_28 { pt3dadd( -54.1184, 5.62522, -43.1674, 0.92 ) }
    dend_28 { pt3dadd( -55.4943, 6.36898, -43.9708, 0.92 ) }
    dend_28 { pt3dadd( -57.0218, 7.26075, -44.8702, 1.38 ) }
    dend_28 { pt3dadd( -59.6905, 8.8323, -46.3183, 0.69 ) }
    dend_28 { pt3dadd( -62.8459, 10.5367, -47.5943, 0.69 ) }
    dend_28 { pt3dadd( -65.8059, 11.9027, -48.511, 0.69 ) }
    dend_28 { pt3dadd( -68.0718, 12.8886, -49.1157, 0.69 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -27.9712, 10.9356, -39.8738, 0.69 ) }
    dend_27 { pt3dadd( -29.3456, 10.9151, -41.2529, 0.69 ) }
    dend_27 { pt3dadd( -31.162, 11.0108, -42.9379, 1.15 ) }
    dend_27 { pt3dadd( -32.4388, 11.2224, -44.1496, 1.15 ) }
    dend_27 { pt3dadd( -33.5193, 11.5134, -45.1678, 1.15 ) }
    dend_27 { pt3dadd( -35.0505, 12.0615, -46.5297, 1.15 ) }
    dend_27 { pt3dadd( -35.7387, 12.3719, -47.0763, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_27 { pt3dadd( -36.6706, 13.062, -47.8049, 0.92 ) }
    dend_27 { pt3dadd( -37.8574, 14.1892, -48.501, 1.15 ) }
    dend_27 { pt3dadd( -38.3512, 14.7077, -48.7156, 0.92 ) }
    dend_27 { pt3dadd( -39.4001, 15.9088, -49.0669, 1.15 ) }
    dend_27 { pt3dadd( -40.4168, 17.162, -49.3586, 0.92 ) }
    dend_27 { pt3dadd( -41.8134, 19.0468, -49.9268, 0.92 ) }
    dend_27 { pt3dadd( -42.7492, 20.4229, -50.362, 0.92 ) }
    dend_27 { pt3dadd( -43.2547, 21.2841, -50.7056, 0.92 ) }
    dend_27 { pt3dadd( -43.9294, 22.7436, -51.4274, 1.15 ) }
    dend_27 { pt3dadd( -44.2725, 23.6206, -51.8878, 1.15 ) }
    dend_27 { pt3dadd( -45.2086, 26.41, -53.5043, 0.92 ) }
    dend_27 { pt3dadd( -45.4859, 27.4963, -54.1427, 0.92 ) }
    dend_27 { pt3dadd( -46.0069, 30.4514, -56.1377, 0.92 ) }
    dend_27 { pt3dadd( -46.1225, 31.3875, -56.8676, 0.92 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 14/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -6.42706, -16.6463, 9.21443, 0.92 ) }
    dend_21 { pt3dadd( -7.48845, -15.861, 9.02801, 0.92 ) }
    dend_21 { pt3dadd( -8.92615, -14.7974, 8.77549, 0.92 ) }
    dend_21 { pt3dadd( -9.9682, -14.0264, 8.59247, 0.92 ) }
    dend_21 { pt3dadd( -11.1633, -13.1423, 8.38257, 0.92 ) }
    dend_21 { pt3dadd( -12.1514, -12.4112, 8.20903, 0.92 ) }
    dend_21 { pt3dadd( -13.3268, -11.5416, 8.00259, 1.15 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 21/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.42706, -16.6463, 9.21443, 0.92 ) }
    dend_18 { pt3dadd( -5.67667, -16.1768, 10.0017, 0.92 ) }
    dend_18 { pt3dadd( -4.69722, -15.684, 10.823, 0.92 ) }
    dend_18 { pt3dadd( -4.27975, -15.54, 11.1488, 0.92 ) }
    dend_18 { pt3dadd( -3.62491, -15.388, 11.6981, 0.92 ) }
    dend_18 { pt3dadd( -2.50631, -15.1899, 12.8323, 0.92 ) }
    dend_18 { pt3dadd( -1.63375, -15.1095, 13.8614, 0.92 ) }
    dend_18 { pt3dadd( -0.804134, -15.0944, 15.103, 0.92 ) }
    dend_18 { pt3dadd( -0.367175, -15.2705, 15.9939, 0.92 ) }
    dend_18 { pt3dadd( 0.222842, -15.7114, 17.3674, 0.92 ) }
    dend_18 { pt3dadd( 0.689759, -16.3253, 18.6132, 0.92 ) }
    dend_18 { pt3dadd( 0.91525, -16.9298, 19.4213, 0.92 ) }
    dend_18 { pt3dadd( 0.920489, -17.3671, 19.9117, 0.92 ) }
    dend_18 { pt3dadd( 0.754501, -17.9793, 20.6068, 0.92 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 35/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -21.5719, -18.8228, -3.96423, 0.92 ) }
    dend_16 { pt3dadd( -21.8518, -17.7187, -5.07008, 0.92 ) }
    dend_16 { pt3dadd( -22.3081, -16.3175, -6.33403, 0.92 ) }
    dend_16 { pt3dadd( -22.824, -14.7901, -7.59162, 0.92 ) }
    dend_16 { pt3dadd( -23.0718, -14.0889, -8.14681, 0.92 ) }
    dend_16 { pt3dadd( -23.6213, -12.5339, -9.37792, 0.92 ) }
    dend_16 { pt3dadd( -23.9419, -11.6265, -10.0963, 0.92 ) }
    dend_16 { pt3dadd( -24.4611, -10.2798, -11.1542, 0.92 ) }
    dend_16 { pt3dadd( -24.8543, -9.24815, -11.83, 1.15 ) }
    dend_16 { pt3dadd( -25.3208, -8.16707, -12.4174, 1.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -21.5719, -18.8228, -3.96423, 0.69 ) }
    dend_15 { pt3dadd( -22.3529, -19.7455, -5.26631, 0.69 ) }
    dend_15 { pt3dadd( -22.9883, -20.6546, -6.45218, 0.69 ) }
    dend_15 { pt3dadd( -23.2735, -21.121, -7.06508, 0.92 ) }
    dend_15 { pt3dadd( -23.8888, -22.0884, -8.3852, 0.92 ) }
    dend_15 { pt3dadd( -24.4437, -22.918, -9.62394, 0.92 ) }
    dend_15 { pt3dadd( -24.957, -23.7089, -10.8698, 0.92 ) }
    dend_15 { pt3dadd( -25.3607, -24.4781, -12.0701, 0.92 ) }
    dend_15 { pt3dadd( -25.6293, -25.2004, -13.2297, 0.92 ) }
    dend_15 { pt3dadd( -25.7703, -26.0611, -14.6674, 0.92 ) }
    dend_15 { pt3dadd( -25.6461, -26.6458, -15.6966, 0.92 ) }
    dend_15 { pt3dadd( -25.4002, -26.998, -16.3458, 0.92 ) }
    dend_15 { pt3dadd( -24.622, -27.5846, -17.5846, 0.92 ) }
    dend_15 { pt3dadd( -23.8563, -28.012, -18.5194, 0.92 ) }
    dend_15 { pt3dadd( -23.0176, -28.4554, -19.4551, 0.69 ) }
    dend_15 { pt3dadd( -21.6652, -29.2263, -20.9842, 0.69 ) }
    dend_15 { pt3dadd( -20.586, -29.8935, -22.235, 0.69 ) }
    dend_15 { pt3dadd( -19.8481, -30.4061, -23.1885, 2.29 ) }
    dend_15 { pt3dadd( -18.7023, -31.3039, -24.8921, 0.69 ) }
    dend_15 { pt3dadd( -17.8845, -32.083, -26.269, 0.69 ) }
    dend_15 { pt3dadd( -17.0409, -32.9887, -27.8665, 0.69 ) }
    dend_15 { pt3dadd( -16.3886, -33.8179, -29.2247, 0.69 ) }
    dend_15 { pt3dadd( -15.7276, -34.7776, -30.6994, 0.69 ) }
    dend_15 { pt3dadd( -14.8788, -36.1772, -32.7693, 0.69 ) }
    dend_15 { pt3dadd( -14.5697, -36.662, -33.4804, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 14.8887, -13.3541, 5.89985, 0.69 ) }
    dend_12 { pt3dadd( 15.5053, -14.7019, 6.48937, 0.69 ) }
    dend_12 { pt3dadd( 16.0395, -15.8776, 7.0694, 0.69 ) }
    dend_12 { pt3dadd( 16.7625, -17.3409, 7.90307, 0.69 ) }
    dend_12 { pt3dadd( 17.0776, -17.9787, 8.26638, 0.92 ) }
    dend_12 { pt3dadd( 17.6671, -19.1719, 8.94613, 0.92 ) }
    dend_12 { pt3dadd( 18.4139, -20.6834, 9.80722, 0.92 ) }
    dend_12 { pt3dadd( 19.3066, -22.4436, 10.8389, 0.92 ) }
    dend_12 { pt3dadd( 19.9442, -23.5604, 11.5706, 0.69 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 79/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 14.8887, -13.3541, 5.89985, 0.46 ) }
    dend_11 { pt3dadd( 16.425, -13.2504, 5.20229, 0.46 ) }
    dend_11 { pt3dadd( 18.7231, -13.0954, 4.15884, 0.46 ) }
    dend_11 { pt3dadd( 21.0571, -12.938, 3.09911, 0.69 ) }
    dend_11 { pt3dadd( 23.0715, -12.8021, 2.18446, 0.46 ) }
    dend_11 { pt3dadd( 24.5339, -12.7034, 1.52048, 0.46 ) }
    dend_11 { pt3dadd( 26.3761, -12.5792, 0.684027, 0.46 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 14.0602, 3.39015, -10.1444, 1.15 ) }
    dend_4 { pt3dadd( 14.4267, 3.54231, -8.85563, 1.15 ) }
    dend_4 { pt3dadd( 14.9343, 3.8779, -6.69915, 1.15 ) }
    dend_4 { pt3dadd( 15.4217, 4.38104, -4.35501, 1.15 ) }
    dend_4 { pt3dadd( 15.7811, 4.9618, -2.33783, 1.15 ) }
    dend_4 { pt3dadd( 16.0789, 5.60483, -0.566486, 1.15 ) }
    dend_4 { pt3dadd( 16.2982, 6.10218, 0.628549, 1.15 ) }
    dend_4 { pt3dadd( 16.4444, 6.56594, 1.44977, 0.69 ) }
    dend_4 { pt3dadd( 16.6442, 7.2738, 2.32772, 0.69 ) }
    dend_4 { pt3dadd( 17.0041, 8.12242, 3.14079, 0.69 ) }
    dend_4 { pt3dadd( 17.5011, 8.80689, 3.80105, 0.92 ) }
    dend_4 { pt3dadd( 17.9835, 9.3219, 4.39277, 0.92 ) }
    dend_4 { pt3dadd( 18.3408, 9.68227, 4.92029, 0.92 ) }
    dend_4 { pt3dadd( 19.0415, 10.3144, 6.36947, 0.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( 19.628, 10.7854, 7.9457, 0.92 ) }
    dend_4 { pt3dadd( 20.0178, 11.1117, 9.33738, 0.92 ) }
    dend_4 { pt3dadd( 20.3087, 11.4473, 10.7679, 0.92 ) }
    dend_4 { pt3dadd( 20.4589, 11.7413, 12.0021, 0.92 ) }
    dend_4 { pt3dadd( 20.5135, 12.0761, 13.3796, 0.92 ) }
    dend_4 { pt3dadd( 20.4566, 12.2322, 14.0919, 0.92 ) }
    dend_4 { pt3dadd( 20.2511, 12.4638, 15.4171, 1.38 ) }
    dend_4 { pt3dadd( 20.1117, 12.5879, 16.7847, 1.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 8/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 14.0602, 3.39015, -10.1444, 0.92 ) }
    dend_3 { pt3dadd( 14.6465, 2.90656, -10.801, 0.92 ) }
    dend_3 { pt3dadd( 15.5587, 2.15407, -11.8228, 0.69 ) }
    dend_3 { pt3dadd( 16.56, 1.32816, -12.9443, 0.69 ) }
    dend_3 { pt3dadd( 17.1827, 0.814512, -13.6417, 0.92 ) }
    dend_3 { pt3dadd( 17.6741, 0.409194, -14.1921, 1.15 ) }
    dend_3 { pt3dadd( 18.749, -0.477399, -15.3959, 1.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -13.3268, -11.5416, 8.00259, 0.92 ) }
    dend_23 { pt3dadd( -14.288, -11.5423, 9.19558, 0.92 ) }
    dend_23 { pt3dadd( -16.537, -11.5439, 11.9868, 0.92 ) }
    dend_23 { pt3dadd( -18.4554, -11.5453, 14.3676, 0.92 ) }
    dend_23 { pt3dadd( -19.9505, -11.5463, 16.2231, 0.92 ) }
    dend_23 { pt3dadd( -21.887, -11.5477, 18.6264, 0.92 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -13.3268, -11.5416, 8.00259, 0.69 ) }
    dend_22 { pt3dadd( -14.5189, -11.03, 6.91303, 0.69 ) }
    dend_22 { pt3dadd( -15.3425, -10.6659, 6.23113, 0.69 ) }
    dend_22 { pt3dadd( -16.4538, -10.2331, 5.42068, 0.69 ) }
    dend_22 { pt3dadd( -17.2739, -10.0161, 4.86525, 0.69 ) }
    dend_22 { pt3dadd( -18.3616, -9.8703, 4.22744, 0.69 ) }
    dend_22 { pt3dadd( -19.1442, -9.76539, 3.76857, 0.69 ) }
    dend_22 { pt3dadd( -19.9168, -9.72471, 3.37559, 0.92 ) }
    dend_22 { pt3dadd( -20.9961, -9.71416, 2.86859, 1.61 ) }
    dend_22 { pt3dadd( -22.9435, -9.72845, 2.03661, 0.69 ) }
    dend_22 { pt3dadd( -25.193, -9.87394, 1.09152, 0.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 32/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 0.754501, -17.9793, 20.6068, 0.69 ) }
    dend_20 { pt3dadd( 1.80401, -17.3614, 21.8246, 0.69 ) }
    dend_20 { pt3dadd( 2.76059, -16.7981, 22.9346, 0.46 ) }
    dend_20 { pt3dadd( 3.46602, -16.3827, 23.7532, 1.15 ) }
    dend_20 { pt3dadd( 4.03104, -16.05, 24.4089, 2.06 ) }
    dend_20 { pt3dadd( 4.64576, -15.688, 25.1222, 2.06 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 38/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 0.754501, -17.9793, 20.6068, 0.92 ) }
    dend_19 { pt3dadd( 1.05206, -18.7921, 20.3391, 0.92 ) }
    dend_19 { pt3dadd( 1.69631, -20.552, 19.7595, 0.69 ) }
    dend_19 { pt3dadd( 2.42435, -22.5407, 19.1046, 0.69 ) }
    dend_19 { pt3dadd( 2.89475, -23.8256, 18.6814, 0.92 ) }
    dend_19 { pt3dadd( 3.69038, -25.9989, 17.9656, 0.69 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_29, dend_24, dend_13, dend_8, dend_5, dend_0, dend_26, dend_25, dend_17, dend_14, dend_10, dend_9, dend_7, dend_6, dend_2, dend_1, dend_28, dend_27, dend_21, dend_18, dend_16, dend_15, dend_12, dend_11, dend_4, dend_3, dend_23, dend_22, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_28 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_13 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_10 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_9 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_21 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_18 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_7 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_25 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_6 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_29 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_16 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_15 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_27 OneSecGrp_SectionRef_21.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_28 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L1_NGCDA_810ad6a571_0_0


