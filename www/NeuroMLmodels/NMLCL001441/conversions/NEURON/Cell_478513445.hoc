// Cell: Cell_478513445
/*
{
  "id" : "Cell_478513445",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "524.101, 686.629, 56.56, 13.4294", "530.816, 686.629, 56.56, 13.4294", "537.531, 686.629, 56.56, 13.4294" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "530.816, 686.629, 56.56, 1.0", "536.657, 700.445, 56.56, 1.0", "542.499, 714.261, 56.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "531.801, 678.648, 53.9342, 0.9152", "531.877, 677.506, 53.3509, 0.9152", "532.18, 676.422, 52.9032, 0.9152", "532.45, 675.356, 52.3978, 0.9152", "532.724, 674.405, 51.7569, 0.9152", "533.046, 673.357, 51.1227, 0.9152", "533.125, 672.248, 50.4596, 0.9152", "533.223, 671.234, 49.7056, 0.9152", "533.645, 670.184, 49.0566, 0.9152", "534.17, 669.171, 48.5358, 0.9152", "534.588, 668.274, 47.955, 0.8008" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "529.365, 680.363, 50.8936, 0.2288", "529.134, 679.316, 49.4934, 0.3108", "529.052, 678.241, 48.8846, 0.3672", "529.029, 677.152, 48.1925, 0.322", "529.318, 676.052, 47.5815, 0.2796", "529.671, 675.156, 46.9655, 0.2288", "530.128, 674.768, 45.0285, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "536.767, 686.169, 64.367, 1.144", "537.909, 686.157, 64.2222, 0.7528", "539.047, 686.058, 64.1684, 0.5046", "539.917, 685.37, 64.1668, 0.4556" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "524.888, 685.988, 64.1645, 0.6864", "523.822, 685.616, 64.892, 0.6282", "522.89, 684.967, 65.1675, 0.5702", "522.278, 684.041, 65.5645, 0.5122", "522.426, 683.052, 66.0979, 0.6192", "522.827, 682.052, 66.736, 0.6948", "523.47, 681.106, 67.3378, 0.5128" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "524.142, 687.067, 53.7418, 0.2288", "523.038, 686.935, 53.5755, 0.4512", "522.068, 686.399, 53.5066, 0.6432", "521.074, 685.854, 53.4528, 0.7582", "519.995, 685.48, 53.4341, 0.767", "518.872, 685.294, 53.4528, 0.863", "517.729, 685.257, 53.5105, 0.882", "516.586, 685.259, 53.6113, 0.774", "515.468, 685.278, 53.8, 0.583", "514.36, 685.405, 54.0523, 0.4128", "513.491, 686.016, 54.3469, 0.3468", "512.666, 686.788, 54.5728, 0.387", "511.744, 687.417, 54.644, 0.3588", "510.725, 687.912, 54.633, 0.347", "509.643, 688.204, 54.6381, 0.3562", "508.574, 687.967, 54.6596, 0.4538", "507.534, 687.503, 54.6238, 0.473", "506.485, 687.168, 54.4617, 0.6056", "505.402, 687.09, 54.1881, 0.6092", "504.277, 687.085, 53.8829, 0.6478", "503.136, 687.08, 53.622, 0.5662", "501.994, 687.03, 53.4304, 0.4708", "500.896, 686.735, 53.3159, 0.4808", "499.941, 686.122, 53.2706, 0.507", "498.856, 685.834, 53.2706, 0.5174", "497.761, 686.089, 53.2913, 0.4942", "496.7, 686.513, 53.3257, 0.427", "495.716, 687.065, 53.4164, 0.421", "494.656, 687.467, 53.4652, 0.5212", "493.524, 687.591, 53.4985, 0.6242", "492.421, 687.864, 53.4867, 0.758", "491.341, 688.235, 53.4649, 0.8274", "490.331, 688.769, 53.4598, 0.9084", "489.411, 689.449, 53.4772, 0.8316", "488.351, 689.863, 53.5318, 0.875", "487.262, 690.183, 53.6581, 0.971", "486.2, 690.521, 53.8776, 1.071", "485.11, 690.859, 54.075, 0.9498", "484.036, 691.252, 54.2349, 0.8406", "482.98, 691.693, 54.3642, 0.7646", "482.005, 692.291, 54.4718, 0.6948", "480.939, 692.702, 54.5644, 0.6794", "479.859, 693.076, 54.6552, 0.7832", "478.774, 693.429, 54.7795, 0.7906", "477.71, 693.616, 55.0197, 0.5582", "476.637, 693.627, 55.3322, 0.4064", "475.5, 693.51, 55.5268, 0.373", "474.395, 693.605, 55.5232, 0.4782", "473.36, 694.058, 55.4084, 0.5502", "472.57, 694.879, 55.2331, 0.593", "471.818, 695.669, 54.927, 0.656", "470.809, 696.145, 54.605, 0.6244", "469.684, 696.315, 54.4093, 0.5988", "468.606, 696.67, 54.3547, 0.619", "467.545, 697.093, 54.3542, 0.5586", "466.421, 697.307, 54.3897, 0.4626", "465.307, 697.554, 54.4667, 0.436", "464.22, 697.4, 54.6255, 0.5674", "463.279, 696.755, 54.7204, 0.6206", "462.273, 696.211, 54.726, 0.5", "461.188, 695.927, 54.5978, 0.4244", "460.105, 696.11, 54.3301, 0.4808", "459.065, 696.471, 53.9753, 0.5484", "458.076, 697.04, 53.6687, 0.621", "457.251, 697.831, 53.4444, 0.5572", "456.601, 698.772, 53.2991, 0.484", "455.929, 699.698, 53.2232, 0.36", "455.169, 700.543, 53.1944, 0.3014", "454.103, 700.92, 53.1843, 0.2768", "452.963, 700.83, 53.1756, 0.279", "451.832, 700.925, 53.1857, 0.2826", "450.784, 701.339, 53.2067, 0.2892", "449.806, 701.82, 53.0989, 0.303", "448.753, 702.183, 52.943, 0.3216", "447.679, 702.573, 52.8497, 0.3876", "446.634, 702.986, 52.859, 0.36", "445.585, 703.18, 53.0438, 0.3492", "444.524, 703.41, 53.3198, 0.3612", "443.436, 703.759, 53.531, 0.4564", "442.369, 704.127, 53.6141, 0.509", "441.292, 704.413, 53.5634, 0.5224", "440.163, 704.587, 53.4836, 0.4986", "439.103, 704.968, 53.3974, 0.4596", "438.181, 705.643, 53.3338, 0.362", "437.216, 706.259, 53.3142, 0.3048", "436.194, 706.748, 53.3358, 0.2834", "435.109, 707.085, 53.3865, 0.2908", "434.157, 707.704, 53.4551, 0.3056", "433.344, 708.501, 53.5598, 0.3268", "432.471, 709.184, 53.7342, 0.3978", "431.412, 709.563, 53.9328, 0.374", "430.32, 709.884, 54.0862, 0.4002", "429.265, 710.323, 54.196, 0.3362", "428.196, 710.726, 54.262, 0.3044", "427.164, 711.218, 54.2875, 0.2826", "426.151, 711.72, 54.3043, 0.289", "425.122, 712.155, 54.3281, 0.3024", "424.036, 712.506, 54.2718, 0.3212", "422.994, 712.874, 54.0543, 0.3866", "422.067, 713.277, 53.6049, 0.3586", "421.224, 713.795, 52.9869, 0.3452", "420.475, 714.561, 52.3429, 0.3602", "419.835, 715.494, 51.7969, 0.4252", "419.224, 716.455, 51.4245, 0.594", "418.631, 717.414, 51.2338, 0.6706", "417.935, 718.302, 51.1484, 0.5882", "417.197, 719.168, 51.0353, 0.6098", "416.7, 720.096, 50.7741, 0.72", "416.403, 721.116, 50.3681, 0.81", "416.025, 722.184, 49.9408, 0.8466", "415.526, 723.184, 49.4936, 0.861", "414.811, 724.035, 49.0594, 0.918", "413.924, 724.752, 48.7077, 0.8758", "412.965, 725.35, 48.4098, 0.8298", "411.988, 725.885, 48.116, 0.8166", "410.944, 726.291, 47.8369, 0.672", "409.861, 726.542, 47.6218, 0.529", "408.774, 726.761, 47.5762, 0.572", "407.698, 726.904, 47.6706, 0.5274", "406.566, 726.973, 47.7767, 0.5912", "405.524, 727.339, 47.7156, 0.6848", "404.64, 727.887, 47.4499, 0.7504", "403.727, 728.529, 47.1156, 0.7092", "402.591, 728.631, 46.814, 0.7362", "401.483, 728.375, 46.559, 0.7436", "400.377, 728.664, 46.3593, 0.734", "399.304, 729.056, 46.2053, 0.6006", "398.188, 729.235, 46.0774, 0.6866", "397.111, 729.515, 45.9799, 0.5992", "396.102, 729.984, 45.7512, 0.4932", "395.278, 730.454, 45.239, 0.4814", "394.43, 730.801, 44.5035, 0.4786", "393.617, 731.509, 43.7237, 0.6086", "392.711, 732.185, 43.0097, 0.651", "391.615, 732.39, 42.3951, 0.551", "390.582, 732.465, 41.781, 0.5444", "389.516, 732.868, 41.3442, 0.5788", "388.555, 733.472, 41.0444, 0.6466", "387.629, 734.138, 40.8293, 0.7522", "386.592, 734.601, 40.663, 0.8178", "385.489, 734.903, 40.5233, 0.8852", "384.418, 735.28, 40.3668, 0.8132", "383.337, 735.524, 40.1386, 0.723", "382.238, 735.495, 39.8378, 0.5734", "381.121, 735.291, 39.587, 0.4406", "379.98, 735.249, 39.403, 0.4068", "379.007, 734.906, 39.2, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "536.423, 690.399, 53.2815, 0.2288", "537.497, 690.715, 53.1241, 0.3482", "538.63, 690.811, 53.0706, 0.4002", "539.601, 691.111, 52.8167, 0.5606", "540.316, 691.956, 52.5361, 0.5466", "541.006, 692.868, 52.2894, 0.6588", "541.957, 693.435, 52.0167, 0.6556", "543.086, 693.47, 51.8641, 0.7584", "544.211, 693.331, 51.8448, 0.65", "545.306, 693.074, 51.8067, 0.53" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "525.468, 688.281, 46.846, 0.2288", "524.389, 688.647, 46.4195, 0.3426", "523.294, 688.785, 46.2462, 0.4258", "522.17, 688.583, 46.048, 0.4324", "521.057, 688.574, 45.7792, 0.475", "519.953, 688.751, 45.4334, 0.6354", "518.842, 688.681, 45.0794, 0.7678", "517.78, 688.281, 44.6989, 0.6696", "516.73, 687.886, 44.2548, 0.5556", "515.629, 687.663, 43.7819, 0.4708", "514.602, 687.847, 43.2555, 0.3828", "513.926, 688.534, 42.6059, 0.3446", "513.451, 689.467, 41.9308, 0.353", "512.865, 690.429, 41.3543, 0.44", "512.207, 691.342, 40.8758, 0.484", "511.474, 692.199, 40.514, 0.4496", "510.639, 692.977, 40.313, 0.4888", "509.717, 693.579, 40.3024, 0.5218", "508.636, 693.918, 40.3813, 0.5456", "507.493, 693.935, 40.4452, 0.5424", "506.357, 693.817, 40.4611, 0.537", "505.273, 694.0, 40.3421, 0.5266", "504.679, 694.859, 40.2304, 0.5066", "504.275, 695.578, 40.1867, 0.4748", "503.489, 696.379, 40.154, 0.3898", "502.533, 696.968, 40.049, 0.3574", "501.556, 697.448, 39.8261, 0.3766", "500.545, 697.874, 39.5438, 0.4846", "499.449, 698.16, 39.2921, 0.5636", "498.425, 698.605, 39.118, 0.6114", "497.615, 699.385, 39.0628, 0.7204", "496.876, 700.245, 39.1216, 0.5946", "495.986, 700.896, 39.1692, 0.583", "494.917, 701.218, 39.2003, 0.6288", "493.805, 701.196, 39.314, 0.6138", "492.698, 701.01, 39.4453, 0.6144", "491.576, 700.953, 39.5343, 0.4798", "490.568, 701.4, 39.5886, 0.4284", "489.752, 702.195, 39.6169, 0.5162", "489.139, 703.16, 39.6119, 0.4752", "488.525, 704.123, 39.5696, 0.4752", "487.882, 705.065, 39.4996, 0.564", "487.032, 705.76, 39.3686, 0.7538", "486.057, 706.323, 39.2006, 0.7538", "485.099, 706.944, 39.0662, 0.6346", "484.115, 707.507, 39.0102, 0.534", "483.257, 708.203, 39.0527, 0.4486", "482.616, 709.129, 39.1076, 0.4866", "482.079, 710.109, 39.0771, 0.518", "481.484, 711.067, 39.0034, 0.5386", "480.718, 711.906, 38.9388, 0.5282", "479.834, 712.628, 38.8895, 0.5174", "479.065, 713.46, 38.8676, 0.458", "478.751, 714.492, 38.9337, 0.5354", "478.941, 715.583, 39.037, 0.4578", "479.468, 716.588, 39.0891, 0.4716", "480.18, 717.471, 39.0384, 0.4174", "480.824, 718.378, 38.85, 0.4748", "481.273, 719.414, 38.6022, 0.5006", "481.527, 720.526, 38.3303, 0.482", "481.464, 721.655, 38.0377, 0.5432", "480.939, 722.644, 37.7098, 0.6494", "480.162, 723.38, 37.2529, 0.6532", "479.194, 723.7, 36.6559, 0.6818", "478.12, 723.85, 35.9996, 0.6298", "477.169, 724.413, 35.3461, 0.585", "476.531, 725.329, 34.7133, 0.71", "475.968, 726.31, 34.1578, 0.8486", "475.628, 727.386, 33.6781, 0.869", "475.444, 728.444, 33.1691, 0.683", "475.435, 729.546, 32.6598, 0.5084", "475.372, 730.676, 32.296, 0.5034", "475.083, 731.76, 32.0617, 0.5496", "474.984, 732.87, 31.7422, 0.5932", "474.945, 734.0, 31.3664, 0.6502", "474.698, 735.107, 30.9537, 0.642", "474.509, 736.077, 30.3481, 0.494", "474.379, 737.138, 29.6593, 0.4074", "473.745, 737.941, 28.9282, 0.478", "472.953, 737.946, 28.2915, 0.4036", "472.32, 738.894, 27.8264, 0.3446", "471.426, 739.579, 27.5033, 0.31", "470.542, 740.223, 27.2938, 0.3412", "470.049, 741.246, 27.1446, 0.3944", "469.755, 742.342, 26.9895, 0.5136", "469.726, 743.481, 26.8153, 0.6356", "469.726, 744.618, 26.5821, 0.6572", "469.726, 745.747, 26.2772, 0.5452", "469.695, 746.85, 25.9014, 0.3898", "468.882, 747.603, 25.5083, 0.305", "468.474, 748.558, 25.0748, 0.305", "468.697, 749.549, 24.36, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5000000000000042,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "542.499, 714.261, 56.56, 1.0", "548.34, 728.077, 56.56, 1.0", "554.181, 741.893, 56.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "534.588, 668.274, 47.955, 0.8008", "533.864, 668.191, 44.3442, 0.8008", "533.226, 668.157, 42.4007, 0.8008", "532.462, 668.28, 41.5313, 0.8008", "531.418, 668.746, 40.7856, 0.8008", "530.372, 669.211, 40.1481, 0.8008", "529.395, 669.726, 39.5158, 0.8008", "528.447, 670.262, 38.8702, 0.8008", "527.497, 670.797, 38.2393, 0.8008", "526.548, 671.331, 37.5939, 0.8008", "525.598, 671.867, 36.9275, 0.8008", "524.649, 672.402, 36.2729, 0.8008", "523.6, 672.804, 35.744, 0.8008", "522.509, 673.149, 35.3492, 0.8008", "521.383, 673.328, 35.0426, 0.8008", "520.247, 673.464, 34.7816, 0.8008", "519.423, 672.714, 34.5271, 0.8008", "518.624, 671.895, 34.2482, 0.8008", "517.75, 671.662, 33.7053, 0.8008", "516.842, 671.831, 33.0246, 0.8008", "516.768, 672.379, 32.3086, 0.8008", "517.348, 673.062, 31.5403, 0.8008", "516.819, 673.96, 30.8762, 0.8008", "515.802, 674.287, 30.2134, 0.8008", "514.724, 674.435, 29.5263, 0.8008", "514.122, 674.851, 28.7818, 0.8008", "514.301, 675.785, 27.9446, 0.8008", "513.22, 675.986, 27.2163, 0.8008", "512.331, 675.384, 26.4519, 0.8008", "511.396, 675.032, 25.7275, 0.8008", "510.734, 674.77, 24.9925, 0.8008", "510.407, 674.024, 23.0258, 0.8008" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "534.588, 668.274, 47.955, 0.8008", "534.439, 666.576, 45.1629, 0.6864", "534.171, 665.649, 43.5624, 0.483", "533.328, 665.183, 42.8411, 0.3936", "532.233, 665.347, 42.1142, 0.421", "531.381, 666.049, 41.3977, 0.4476", "530.691, 666.962, 40.8094, 0.3878", "530.04, 667.887, 40.29, 0.3478", "529.234, 668.432, 39.6766, 0.3886", "528.176, 668.477, 39.1885, 0.3622", "527.615, 667.659, 38.9175, 0.3518", "526.749, 666.993, 38.537, 0.3734", "526.032, 666.547, 37.8272, 0.4444", "525.193, 666.661, 36.9331, 0.6556", "524.568, 667.505, 35.947, 0.6598", "523.672, 667.934, 34.8788, 0.4872", "522.745, 667.484, 33.7876, 0.3588", "522.388, 666.657, 32.6654, 0.3334", "522.702, 665.807, 31.542, 0.3984", "523.393, 665.178, 30.4525, 0.4322", "524.12, 664.64, 28.0997, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "534.588, 668.274, 47.955, 0.8008", "534.905, 667.145, 47.5283, 0.8008", "534.933, 666.024, 47.2956, 0.8008", "534.932, 664.881, 47.1176, 0.8008", "534.924, 663.765, 46.8779, 0.8008", "534.858, 662.636, 46.6214, 0.8008", "534.427, 661.578, 46.4131, 0.8008" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "539.917, 685.37, 64.1668, 0.4556", "540.414, 685.692, 63.9912, 0.4284", "541.247, 686.319, 63.6387, 0.5272", "542.15, 686.9, 63.2276, 0.4428", "543.214, 687.169, 62.8995, 0.4422", "544.344, 686.991, 62.65, 0.3686", "545.244, 687.403, 62.4744, 0.359", "546.22, 687.899, 62.3784, 0.409", "547.323, 688.204, 62.3319, 0.4022", "548.328, 687.852, 62.3, 0.4168", "549.302, 687.812, 62.2432, 0.5382", "550.282, 688.389, 62.1482, 0.5356", "551.114, 689.153, 62.0547, 0.491", "551.867, 690.014, 61.98, 0.373" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "539.917, 685.37, 64.1668, 0.4556", "540.723, 684.694, 64.7391, 0.4576", "541.471, 683.944, 66.0848, 0.4864", "542.284, 683.587, 66.7257, 0.4126", "543.172, 683.95, 67.4262, 0.3956", "544.051, 684.674, 68.0274, 0.4668", "545.0, 685.297, 68.5779, 0.5576", "546.083, 685.625, 69.1158, 0.4688", "547.193, 685.612, 69.734, 0.408", "547.95, 685.15, 70.6079, 0.4788", "548.073, 684.518, 71.7945, 0.4052", "548.073, 683.873, 73.2214, 0.3478" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "523.47, 681.106, 67.3378, 0.5128", "524.106, 679.828, 67.7328, 0.2288", "524.469, 678.851, 68.173, 0.2848", "523.817, 677.911, 68.3242, 0.294", "523.141, 676.993, 68.4435, 0.31", "522.283, 676.236, 68.5339, 0.3426", "521.426, 675.478, 68.5989, 0.3896", "520.451, 674.897, 68.6445, 0.5408", "519.37, 674.756, 68.6773, 0.511", "518.241, 674.946, 68.7232, 0.5894", "517.16, 674.762, 68.7817, 0.5422", "516.115, 674.3, 68.8506, 0.4748", "515.429, 673.5, 68.9923, 0.4818", "514.956, 672.504, 69.2196, 0.5386", "514.173, 671.797, 69.4226, 0.4318", "513.131, 671.333, 69.5321, 0.3496", "512.089, 670.869, 69.5666, 0.3204", "511.047, 670.406, 69.5442, 0.3548", "510.004, 669.942, 69.4848, 0.445", "508.889, 670.008, 69.4434, 0.4868", "507.799, 669.823, 69.4501, 0.485", "506.871, 669.263, 69.5215, 0.41", "506.396, 668.23, 69.6842, 0.3908", "505.923, 667.197, 69.9171, 0.4578", "505.448, 666.164, 70.2019, 0.5416", "504.973, 665.131, 70.5214, 0.437", "504.461, 664.121, 70.8688, 0.3592", "503.895, 663.138, 71.2398, 0.3396", "503.331, 662.155, 71.6257, 0.3844", "502.766, 661.174, 72.0247, 0.529", "502.226, 660.181, 72.4399, 0.4996", "501.713, 659.175, 72.8734, 0.5154", "501.199, 658.171, 73.3183, 0.6632", "500.659, 657.186, 73.7708, 0.82", "499.929, 656.349, 74.2484, 0.7632", "499.2, 655.513, 74.732, 0.7438", "498.47, 654.676, 75.203, 0.7482", "498.0, 653.732, 75.612, 0.5592", "498.008, 652.588, 75.8957, 0.481", "498.215, 651.464, 76.0757, 0.3864", "498.441, 650.342, 76.1734, 0.4228", "498.122, 649.372, 76.2143, 0.3794", "497.349, 648.529, 76.2208, 0.3798", "496.576, 647.685, 76.2126, 0.4438", "496.449, 646.6, 76.2014, 0.4848", "496.48, 645.456, 76.1863, 0.4824", "496.187, 644.374, 76.1634, 0.3988", "495.743, 643.319, 76.1306, 0.3988", "495.113, 642.418, 76.0872, 0.3338", "494.166, 641.777, 76.0337, 0.2998", "493.217, 641.136, 75.9713, 0.2742", "492.435, 640.581, 75.7708, 0.2736", "491.602, 639.832, 75.6101, 0.2728", "490.609, 639.297, 75.4874, 0.2712", "490.116, 638.318, 75.4004, 0.2684", "489.631, 637.338, 75.3455, 0.2626", "488.488, 637.322, 75.32, 0.2542", "487.344, 637.322, 75.32, 0.2288", "486.2, 637.322, 75.32, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "523.47, 681.106, 67.3378, 0.5128", "523.036, 680.976, 68.1733, 0.3686", "522.437, 680.844, 69.2219, 0.3068", "521.353, 681.205, 70.0717, 0.3366", "520.304, 681.128, 70.7599, 0.38", "519.657, 680.253, 71.4011, 0.516", "519.113, 679.283, 72.0292, 0.4994", "518.57, 678.312, 72.6284, 0.3986", "517.956, 677.42, 73.2617, 0.3252", "517.303, 676.574, 73.9724, 0.3236", "516.456, 676.44, 74.7261, 0.3548", "515.869, 677.256, 75.3984, 0.4746", "515.541, 678.353, 75.9385, 0.3972", "515.435, 679.454, 76.4786, 0.3326", "515.332, 680.555, 77.0157, 0.2882", "515.124, 681.58, 77.544, 0.2994", "514.062, 681.966, 78.0321, 0.3232", "513.0, 682.351, 78.4963, 0.3542", "511.938, 682.737, 78.9398, 0.4734", "510.827, 682.863, 79.3198, 0.395", "509.684, 682.815, 79.6398, 0.3288", "508.541, 682.767, 79.9358, 0.2808", "507.43, 682.601, 80.2908, 0.2862", "506.339, 682.357, 80.7447, 0.296", "505.25, 682.133, 81.2938, 0.315", "504.197, 682.438, 81.9594, 0.3458", "503.145, 682.744, 82.714, 0.4268", "502.092, 683.05, 83.5288, 0.4578", "501.064, 683.26, 84.4004, 0.4078", "500.13, 683.09, 85.3938, 0.3794", "499.159, 683.045, 86.4094, 0.473", "498.067, 683.384, 87.2547, 0.3944", "497.168, 683.885, 88.1384, 0.3276", "496.24, 684.137, 89.0355, 0.279", "495.223, 683.776, 89.8926, 0.2826", "494.205, 683.414, 90.7021, 0.289", "493.186, 683.052, 91.4712, 0.3024", "492.169, 682.69, 92.1964, 0.321", "491.18, 682.232, 92.8063, 0.386", "490.258, 681.556, 93.2268, 0.358", "489.336, 680.879, 93.5052, 0.3396", "488.465, 680.137, 93.6816, 0.3736", "487.601, 679.386, 93.7944, 0.3342", "486.739, 678.636, 93.882, 0.3006", "485.779, 678.064, 93.9809, 0.2758", "484.677, 677.756, 94.1156, 0.2768", "483.576, 677.448, 94.2917, 0.279", "482.639, 676.945, 94.5585, 0.2826", "482.004, 676.082, 94.9824, 0.289", "481.37, 675.221, 95.5091, 0.3024", "480.736, 674.359, 96.091, 0.321", "480.027, 673.555, 96.6552, 0.386", "479.057, 672.949, 97.069, 0.358", "477.781, 672.484, 97.2381, 0.3734", "476.724, 672.061, 97.3641, 0.3338", "475.667, 671.638, 97.5517, 0.3002", "474.61, 671.216, 97.82, 0.2748", "473.553, 670.792, 98.1775, 0.2748", "472.475, 670.617, 98.6807, 0.2752", "471.392, 670.505, 99.2802, 0.2758", "470.309, 670.393, 99.9541, 0.2766", "469.355, 670.923, 100.582, 0.2782", "468.465, 671.596, 101.209, 0.2814", "467.636, 672.267, 101.93, 0.287", "466.808, 672.939, 102.715, 0.2988", "465.979, 673.61, 103.546, 0.3142", "465.15, 674.282, 104.41, 0.3734", "464.237, 674.786, 105.277, 0.3338", "463.135, 674.918, 106.092, 0.3", "462.033, 675.048, 106.849, 0.2746", "460.931, 675.18, 107.56, 0.2746", "459.828, 675.311, 108.236, 0.2746", "458.727, 675.443, 108.884, 0.2746", "457.625, 675.574, 109.511, 0.2746", "456.523, 675.706, 110.117, 0.2746", "455.421, 675.837, 110.696, 0.2746", "454.319, 675.968, 111.243, 0.2746", "453.208, 675.915, 111.716, 0.2746", "452.088, 675.69, 112.089, 0.2746", "450.968, 675.463, 112.386, 0.2746", "449.848, 675.238, 112.628, 0.2746", "448.728, 675.011, 112.838, 0.2746", "447.609, 674.786, 113.037, 0.2746", "446.49, 674.56, 113.244, 0.2746", "445.37, 674.333, 113.475, 0.2746", "444.25, 674.108, 113.734, 0.2746", "443.129, 673.881, 114.029, 0.2746", "442.029, 673.87, 114.396, 0.2746", "440.955, 674.151, 114.873, 0.2744", "439.879, 674.433, 115.442, 0.2744", "438.805, 674.714, 116.084, 0.2742", "437.73, 674.995, 116.781, 0.2736", "436.666, 675.294, 117.519, 0.2728", "435.779, 675.888, 118.345, 0.2712", "434.894, 676.48, 119.213, 0.2684", "434.007, 677.074, 120.087, 0.2626", "433.122, 677.668, 120.937, 0.2542", "432.235, 678.26, 121.739, 0.2288", "431.35, 678.854, 123.316, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "545.306, 693.074, 51.8067, 0.53", "546.243, 693.01, 51.8552, 0.5988", "547.385, 692.951, 51.9378, 0.4564", "548.525, 692.89, 52.0439, 0.3584", "549.667, 692.83, 52.1525, 0.2882", "550.807, 692.771, 52.2648, 0.3008", "551.949, 692.711, 52.3846, 0.3182", "553.091, 692.652, 52.4947, 0.3812", "554.231, 692.593, 52.5988, 0.348", "555.362, 692.772, 52.6789, 0.3272", "556.491, 692.953, 52.7425, 0.3196", "557.621, 693.134, 52.7974, 0.3834", "558.55, 693.734, 52.8528, 0.3524", "559.402, 694.497, 52.9178, 0.3354", "560.177, 693.935, 53.0012, 0.335", "560.933, 693.078, 53.1115, 0.4118", "562.006, 693.024, 53.2944, 0.407", "563.136, 693.119, 53.5438, 0.4262", "564.268, 693.215, 53.844, 0.5552", "565.277, 693.682, 54.2147, 0.5684", "566.274, 694.182, 54.635, 0.5464", "567.268, 694.713, 55.0469, 0.5022", "568.257, 695.29, 55.3876, 0.4366", "569.219, 695.063, 55.7197, 0.4644", "570.169, 694.456, 56.072, 0.476", "571.119, 693.85, 56.4407, 0.465", "572.11, 693.302, 56.7935, 0.372", "573.15, 692.825, 57.1012, 0.3236", "574.186, 692.346, 57.3768, 0.3178", "574.708, 691.929, 57.9435, 0.357", "575.938, 692.12, 58.3755, 0.4176", "577.076, 692.225, 58.6944, 0.5872", "578.106, 692.647, 58.9221, 0.6234", "579.167, 693.072, 59.0736, 0.6688", "580.101, 693.726, 59.1576, 0.6296", "581.143, 694.153, 59.1833, 0.47", "582.271, 694.294, 59.2413, 0.368", "583.412, 694.294, 59.3096, 0.3792", "584.557, 694.294, 59.3726, 0.3444", "585.701, 694.294, 59.4328, 0.3192", "586.844, 694.294, 59.4952, 0.3112", "587.989, 694.294, 59.5652, 0.3384", "589.127, 694.326, 59.6512, 0.413", "590.028, 694.98, 59.7677, 0.4328", "590.926, 695.63, 59.9222, 0.3596", "592.053, 695.761, 60.1549, 0.3006", "593.157, 695.781, 60.4825, 0.2758", "594.158, 695.781, 60.9297, 0.2766", "594.933, 695.788, 61.5434, 0.2782", "595.977, 696.183, 62.0206, 0.2814", "597.057, 696.524, 62.3711, 0.287", "598.196, 696.582, 62.606, 0.2988", "599.341, 696.582, 62.7472, 0.3142", "600.484, 696.582, 62.8197, 0.3734", "601.628, 696.582, 62.8594, 0.334", "602.764, 696.675, 62.914, 0.3002", "603.794, 697.124, 62.986, 0.2748", "604.533, 697.974, 63.1151, 0.2752", "605.382, 698.734, 63.2472, 0.2758", "606.415, 699.07, 63.4648, 0.2766", "607.454, 699.415, 63.7297, 0.2784", "608.592, 699.442, 63.9537, 0.2822", "609.729, 699.442, 64.1508, 0.288", "610.873, 699.442, 64.29, 0.3008", "611.911, 699.815, 64.384, 0.318", "612.967, 700.248, 64.4386, 0.3808", "613.867, 700.878, 64.4725, 0.3476", "614.945, 701.196, 64.5042, 0.3254", "616.019, 701.493, 64.5725, 0.3224", "617.163, 701.501, 64.6352, 0.3592", "618.3, 701.409, 64.6926, 0.4514", "619.427, 701.386, 64.7044, 0.505", "620.571, 701.389, 64.7609, 0.4896", "621.607, 701.786, 64.8682, 0.5588", "622.694, 702.107, 65.0247, 0.6718", "623.279, 701.771, 65.5091, 0.7248", "624.299, 701.378, 66.0688, 0.6674", "625.337, 700.958, 66.5815, 0.6314", "626.45, 701.16, 66.9488, 0.68", "627.568, 701.353, 67.289, 0.6686", "628.622, 701.62, 67.6752, 0.6828", "629.679, 701.933, 68.0548, 0.7658", "630.77, 702.256, 68.3897, 0.8736", "631.875, 702.551, 68.6538, 0.8396", "632.972, 702.867, 68.85, 0.767", "634.076, 703.108, 68.9562, 0.6812", "635.213, 703.145, 69.0774, 0.5116", "636.317, 702.979, 69.2675, 0.4772", "637.352, 702.562, 69.5383, 0.4264", "638.409, 702.414, 69.8838, 0.499", "639.459, 702.792, 70.2128, 0.5104", "640.528, 703.091, 70.408, 0.6712", "641.665, 703.14, 70.5564, 0.7504", "642.77, 703.305, 70.74, 0.8156", "643.826, 703.677, 70.9526, 0.6464", "644.849, 704.143, 71.1654, 0.5964", "645.774, 704.766, 71.388, 0.824", "646.699, 705.429, 71.5254, 0.8386", "647.698, 705.948, 71.5212, 0.7806", "648.722, 706.399, 71.3983, 0.6286", "649.815, 706.675, 71.2533, 0.5652", "650.925, 706.582, 71.0794, 0.5302", "652.005, 706.285, 70.9092, 0.5206", "653.119, 706.163, 70.8557, 0.464", "654.177, 706.436, 70.9758, 0.5464", "655.171, 706.862, 71.2572, 0.4788", "656.251, 707.026, 71.5719, 0.5054", "657.376, 706.958, 71.7976, 0.5058", "658.471, 707.133, 71.9334, 0.515", "659.515, 707.535, 72.1028, 0.4912", "660.558, 707.935, 72.3363, 0.415", "661.668, 708.169, 72.5936, 0.4302", "662.686, 708.539, 72.9355, 0.3864", "663.594, 709.193, 73.3326, 0.423", "664.551, 709.814, 73.7178, 0.3796", "665.46, 710.465, 74.132, 0.3802", "666.404, 711.053, 74.5839, 0.4448", "667.472, 711.287, 75.0674, 0.4862", "668.53, 711.162, 75.6067, 0.4848", "669.549, 710.945, 76.2121, 0.4036", "670.646, 710.843, 76.7645, 0.4074", "671.744, 710.638, 77.1291, 0.35", "672.65, 710.502, 77.1831, 0.3298", "673.475, 710.744, 77.3318, 0.3302", "674.306, 710.702, 77.74, 0.3748", "675.331, 710.326, 78.1609, 0.4752", "676.295, 709.718, 78.521, 0.5746", "677.12, 708.928, 78.8312, 0.4938", "677.898, 708.089, 79.093, 0.4862", "678.537, 707.143, 79.2929, 0.4688", "679.097, 706.145, 79.4511, 0.4518", "679.721, 705.188, 79.6205, 0.3476", "679.687, 704.083, 79.8622, 0.2796", "679.034, 703.372, 80.2931, 0.2288", "677.934, 703.102, 81.2, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "545.306, 693.074, 51.8067, 0.53", "546.203, 693.147, 50.9029, 0.2288", "547.251, 693.436, 49.4242, 0.631", "548.347, 693.688, 48.8359, 0.565", "549.454, 693.923, 48.1505, 0.5518", "549.806, 693.23, 47.1898, 0.683", "550.219, 692.403, 46.0449, 0.8594", "550.82, 691.503, 44.9, 0.8244", "551.477, 690.891, 43.6727, 0.9134", "552.054, 690.471, 42.3489, 0.789", "553.016, 690.372, 41.1155, 0.5908", "554.04, 690.748, 40.098, 0.524", "554.834, 691.567, 39.3481, 0.5408", "555.37, 692.578, 38.8245, 0.5758" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "534.427, 661.578, 46.4131, 0.8008", "534.466, 660.752, 47.8313, 0.4576", "534.436, 659.737, 50.1082, 0.4066", "534.2, 658.946, 51.0787, 0.413", "533.71, 658.802, 52.3446, 0.3602", "533.24, 659.352, 53.7149, 0.3492", "532.904, 660.398, 54.9304, 0.3628", "532.442, 661.43, 55.9507, 0.4532", "531.716, 662.271, 56.8652, 0.5328", "530.888, 662.828, 57.8222, 0.421", "530.048, 663.26, 58.8787, 0.3298" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "534.427, 661.578, 46.4131, 0.8008", "533.081, 660.591, 46.1994, 0.4506", "532.164, 659.974, 45.9217, 0.4734", "531.226, 659.45, 45.5958, 0.5756", "530.305, 658.788, 45.3541, 0.7032", "529.402, 658.091, 45.2631, 0.784", "528.751, 657.197, 45.3746, 0.7726", "528.109, 656.289, 45.6369, 0.8486", "527.481, 655.374, 46.0062, 0.977", "526.786, 654.48, 46.3826, 1.0464", "525.779, 652.463, 46.7648, 1.0778", "525.375, 651.393, 47.0067, 0.9198", "525.327, 650.25, 47.1164, 0.7648", "525.337, 649.106, 47.1136, 0.7198" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "551.867, 690.014, 61.98, 0.373", "552.288, 690.244, 61.9214, 0.3264", "553.141, 691.006, 61.8761, 0.3184", "553.995, 691.766, 61.8408, 0.3814", "554.85, 692.527, 61.8092, 0.3486", "555.701, 693.29, 61.7728, 0.3276", "556.452, 694.149, 61.7016, 0.3256", "557.201, 695.01, 61.6095, 0.3696", "557.951, 695.87, 61.5101, 0.4496", "558.701, 696.729, 61.413, 0.6054", "559.407, 697.372, 61.3544, 0.8564", "560.219, 698.176, 61.3444, 0.8196", "561.037, 698.961, 61.4247, 0.6732", "561.948, 699.618, 61.5871, 0.553", "562.738, 700.381, 61.6328, 0.5086", "563.331, 701.358, 61.6826, 0.478", "563.894, 702.343, 61.7921, 0.3972", "564.197, 703.365, 62.048, 0.3648", "564.252, 704.496, 62.3193, 0.4212", "564.427, 705.594, 62.6027, 0.418", "565.027, 706.55, 62.8438, 0.477", "565.927, 707.246, 63.0224, 0.5002", "566.915, 707.76, 63.0762, 0.5048", "567.665, 708.392, 62.9264, 0.4706", "567.887, 709.505, 62.7827, 0.3836", "567.917, 710.648, 62.692, 0.34", "568.081, 711.772, 62.6724, 0.3744", "568.494, 712.829, 62.7522, 0.3354", "569.03, 713.81, 62.9639, 0.303", "569.848, 714.493, 63.243, 0.28", "570.883, 714.878, 63.5421, 0.2848", "571.704, 715.622, 63.873, 0.2936", "572.393, 716.529, 64.1556, 0.311", "573.032, 717.479, 64.3717, 0.3364", "573.67, 718.429, 64.5403, 0.4158", "574.272, 719.4, 64.689, 0.4068", "574.753, 720.434, 64.8379, 0.4626", "575.2, 721.482, 65.0079, 0.4428", "575.58, 722.515, 65.2602, 0.5478", "575.66, 723.583, 65.6404, 0.5116", "575.651, 724.644, 66.1128, 0.4206", "575.601, 725.733, 66.5347, 0.3684", "575.384, 726.83, 66.7755, 0.3914", "575.035, 727.909, 66.9012, 0.5384", "574.82, 729.025, 66.9782, 0.5358", "574.831, 730.164, 67.037, 0.4916", "574.803, 731.278, 67.1499, 0.374", "574.58, 732.378, 67.3137, 0.3284", "574.426, 733.506, 67.4702, 0.3222", "574.63, 734.591, 67.6477, 0.3878", "575.122, 735.606, 67.7989, 0.3618", "575.767, 736.537, 67.8446, 0.3466", "576.537, 737.375, 67.8236, 0.3862", "577.359, 738.158, 67.8188, 0.3588", "577.857, 739.117, 67.7807, 0.3406", "577.966, 740.213, 67.6242, 0.3754", "578.079, 741.325, 67.4176, 0.3378", "578.322, 742.422, 67.3016, 0.307", "578.522, 743.491, 67.3347, 0.2878", "578.918, 744.437, 67.2801, 0.2988", "579.851, 744.598, 67.0922, 0.3206", "579.529, 745.338, 66.9978, 0.3554", "579.637, 746.383, 67.0323, 0.446", "579.792, 747.5, 67.0558, 0.4884", "580.005, 748.594, 66.9684, 0.488", "580.491, 749.603, 66.8394, 0.4152", "581.215, 750.48, 66.7156, 0.4004", "582.051, 751.259, 66.5823, 0.476", "583.034, 751.826, 66.4412, 0.5746", "584.051, 752.313, 66.267, 0.5004", "584.964, 752.965, 66.0828, 0.4672", "585.781, 753.76, 65.9425, 0.5852", "586.512, 754.637, 65.8549, 0.6186", "587.199, 755.549, 65.8244, 0.6652", "587.892, 756.397, 65.912, 0.5992", "588.371, 757.385, 66.0615, 0.5276", "588.492, 758.485, 66.0794, 0.6068", "588.654, 759.598, 65.9548, 0.641", "589.004, 760.594, 65.6396, 0.5626", "589.219, 761.644, 65.2274, 0.421", "589.197, 762.783, 64.848, 0.368", "589.166, 763.925, 64.5484, 0.3974", "589.197, 765.053, 64.3014, 0.518", "589.378, 766.156, 64.0937, 0.65", "589.625, 767.267, 63.9836, 0.6536", "589.885, 768.362, 64.017, 0.685", "590.012, 769.467, 64.1598, 0.625", "589.88, 770.594, 64.3387, 0.6302", "589.936, 771.69, 64.563, 0.5322", "590.075, 772.802, 64.7987, 0.4132", "590.176, 773.938, 64.9614, 0.3476", "590.352, 775.068, 65.0264, 0.388", "590.133, 776.13, 64.9849, 0.361", "589.407, 776.95, 64.8166, 0.3512", "588.722, 777.83, 64.5896, 0.3652", "588.34, 778.892, 64.3577, 0.4634", "588.264, 780.024, 64.1766, 0.523", "588.348, 781.135, 63.9772, 0.5418", "588.728, 782.184, 63.793, 0.5656", "589.413, 783.085, 63.6765, 0.4348", "590.238, 783.865, 63.6488, 0.3548", "590.844, 784.792, 63.7185, 0.3302", "591.273, 785.842, 63.784, 0.3734", "591.368, 786.932, 63.7529, 0.4786", "591.422, 788.063, 63.6983, 0.5512", "591.729, 789.157, 63.6644, 0.5948", "592.148, 790.221, 63.6608, 0.6594", "592.337, 791.341, 63.7059, 0.6306", "592.362, 792.476, 63.8478, 0.6114", "592.357, 793.617, 64.0231, 0.637", "592.328, 794.724, 64.3082, 0.6178", "592.115, 795.829, 64.6369, 0.4468", "591.622, 796.806, 65.0325, 0.3306", "590.898, 797.617, 65.4732, 0.284", "589.986, 798.274, 65.8647, 0.2922", "589.08, 798.971, 66.145, 0.307", "588.115, 799.583, 66.3118, 0.3354", "587.076, 800.054, 66.3818, 0.3842", "586.325, 800.854, 66.3174, 0.4938", "585.823, 801.866, 66.2147, 0.604", "585.58, 802.979, 66.1682, 0.573", "585.812, 804.089, 66.2052, 0.5142", "585.934, 805.223, 66.3494, 0.4102", "585.882, 806.321, 66.6644, 0.4212", "585.555, 807.407, 67.0502, 0.37", "585.132, 808.409, 67.552, 0.3926", "584.768, 809.404, 68.1416, 0.322", "584.283, 810.432, 68.6546, 0.2796", "583.357, 811.089, 69.0771, 0.2288", "582.296, 811.325, 70.0, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "551.867, 690.014, 61.98, 0.373", "553.069, 689.656, 61.9142, 0.2288", "554.165, 689.329, 61.9564, 0.3014", "555.272, 689.039, 61.9735, 0.3188", "556.381, 688.755, 61.9982, 0.382", "557.458, 688.379, 62.0318, 0.3498", "558.503, 687.918, 62.074, 0.3306", "559.565, 687.545, 62.132, 0.326", "560.695, 687.608, 62.2471, 0.3956", "561.826, 687.672, 62.3952, 0.3746", "562.965, 687.708, 62.5201, 0.3768", "564.109, 687.726, 62.5884, 0.4088", "565.166, 687.45, 62.6004, 0.564", "566.123, 686.84, 62.5512, 0.6152", "567.265, 686.848, 62.41, 0.484", "568.406, 686.857, 62.1933, 0.4248", "569.461, 686.522, 61.9338, 0.335", "570.463, 685.97, 61.6498, 0.3022", "571.426, 685.6, 61.1708, 0.2786", "572.339, 685.598, 60.6136, 0.2822", "572.794, 686.24, 59.9754, 0.2886", "573.508, 686.411, 59.3258, 0.3002", "574.587, 686.781, 58.8412, 0.3242", "575.718, 686.858, 58.5063, 0.356", "576.862, 686.858, 58.3061, 0.4766", "577.985, 686.683, 58.1946, 0.4014", "579.068, 686.321, 58.137, 0.3404", "580.211, 686.286, 58.0944, 0.3022", "581.354, 686.286, 58.039, 0.327", "582.498, 686.286, 57.9709, 0.3672", "583.633, 686.286, 57.8542, 0.4688", "584.711, 686.49, 57.638, 0.5256", "585.771, 686.9, 57.4428, 0.5834", "586.894, 687.074, 57.2916, 0.4622", "588.018, 687.201, 57.1805, 0.4318", "589.03, 687.574, 57.104, 0.3476", "590.145, 687.773, 57.0573, 0.3264", "591.289, 687.773, 57.0276, 0.3182", "592.433, 687.773, 56.9904, 0.3814", "593.577, 687.773, 56.9383, 0.3482", "594.721, 687.773, 56.8655, 0.3278", "595.865, 687.773, 56.7678, 0.321", "596.955, 688.049, 56.639, 0.386", "597.964, 688.473, 56.4035, 0.358", "599.096, 688.609, 56.1344, 0.3398", "600.17, 688.877, 55.7654, 0.3738", "601.258, 689.201, 55.3745, 0.3348", "602.361, 689.406, 55.0066, 0.3014", "603.222, 690.091, 54.602, 0.277", "604.246, 690.429, 54.1128, 0.2794", "604.955, 690.961, 53.492, 0.2834", "606.083, 691.09, 52.9267, 0.2908", "607.209, 691.09, 52.3454, 0.3056", "608.252, 691.325, 51.6958, 0.327", "609.281, 691.721, 51.0132, 0.3984", "610.389, 691.777, 50.3462, 0.3748", "611.532, 691.777, 49.7448, 0.4016", "612.368, 691.922, 49.0031, 0.3386", "612.398, 692.349, 48.0068, 0.3088", "613.07, 692.349, 46.9042, 0.2912", "614.179, 692.55, 46.058, 0.3054", "615.321, 692.578, 45.451, 0.3324", "616.465, 692.578, 45.0531, 0.3786", "617.6, 692.463, 44.8428, 0.4826", "618.744, 692.463, 44.7681, 0.5878", "619.888, 692.463, 44.7513, 0.5196", "621.028, 692.42, 44.7314, 0.5278", "622.169, 692.35, 44.7042, 0.5766", "623.312, 692.334, 44.6687, 0.5038", "624.362, 691.97, 44.6225, 0.475", "625.443, 691.658, 44.5228, 0.592", "626.391, 691.176, 44.4214, 0.669", "627.498, 690.923, 44.3092, 0.5734", "628.381, 690.275, 44.1815, 0.6414", "629.327, 689.646, 44.0163, 0.4894", "630.351, 689.216, 43.7833, 0.415", "631.488, 689.146, 43.5655, 0.4138", "632.291, 688.574, 42.7022, 0.3626", "633.435, 688.574, 42.4284, 0.3064", "634.579, 688.574, 42.2498, 0.286", "635.709, 688.5, 42.1868, 0.297", "636.7, 687.964, 42.1834, 0.3108", "637.651, 687.337, 42.2226, 0.3672", "638.552, 686.685, 42.2509, 0.322", "639.252, 685.8, 42.2694, 0.2796", "640.094, 685.056, 42.2786, 0.2288", "640.983, 684.341, 42.28, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "548.073, 683.873, 73.2214, 0.3478", "548.371, 684.677, 74.653, 0.316", "548.599, 685.603, 76.0446, 0.3528", "548.829, 686.528, 77.3422, 0.4116", "549.915, 686.792, 78.2989, 0.5688", "551.02, 686.786, 78.9872, 0.6244", "551.702, 687.65, 79.6004, 0.5004", "552.373, 688.523, 80.183, 0.4566", "552.749, 689.603, 80.6512, 0.3888", "553.124, 690.684, 81.0631, 0.427", "553.892, 691.175, 81.6379, 0.388", "554.819, 691.404, 82.3628, 0.3902", "555.943, 691.184, 82.987, 0.4924", "557.059, 691.006, 83.5629, 0.4318", "558.129, 691.148, 84.236, 0.3914", "559.199, 691.288, 84.9722, 0.423", "560.268, 691.43, 85.7402, 0.423", "561.039, 692.118, 86.5382, 0.4802", "561.742, 692.932, 87.3636, 0.5358", "562.444, 693.747, 88.177, 0.4264", "563.147, 694.561, 88.9462, 0.3398", "563.848, 695.376, 89.6652, 0.3024", "564.952, 695.666, 90.1989, 0.321", "566.06, 695.951, 90.5909, 0.386", "567.17, 695.981, 90.8841, 0.358", "568.282, 695.713, 91.1168, 0.3396", "569.323, 695.809, 91.4035, 0.3734", "570.297, 696.245, 91.8282, 0.3338", "570.94, 697.191, 92.232, 0.3", "571.58, 698.139, 92.6187, 0.2746", "572.221, 699.087, 92.9891, 0.2746", "572.307, 699.343, 93.5542, 0.2746", "572.0, 699.169, 94.3751, 0.2746", "572.153, 700.284, 95.0012, 0.2746", "572.842, 701.179, 95.4688, 0.2746", "573.271, 702.233, 95.7905, 0.2746", "573.869, 703.186, 95.979, 0.2746", "574.356, 704.217, 96.0498, 0.2746", "574.657, 705.312, 96.0537, 0.2746", "575.551, 705.872, 96.059, 0.2748", "576.299, 706.722, 96.0666, 0.2748", "576.855, 707.702, 96.0772, 0.2752", "577.316, 708.742, 96.0921, 0.2758", "577.504, 709.868, 96.1122, 0.2766", "577.607, 711.006, 96.1425, 0.2782", "578.119, 712.019, 96.1848, 0.2814", "578.817, 712.903, 96.2399, 0.287", "579.812, 713.429, 96.3071, 0.2988", "580.834, 713.856, 96.4155, 0.3142", "581.756, 714.192, 96.6498, 0.3734", "581.953, 715.225, 96.836, 0.3338", "581.953, 716.369, 96.9769, 0.3", "581.953, 717.513, 97.0752, 0.2746", "581.953, 718.657, 97.1348, 0.2746", "581.953, 719.801, 97.16, 0.2746", "581.953, 720.945, 97.16, 0.2746", "581.962, 722.089, 97.16, 0.2746", "582.067, 723.227, 97.16, 0.2746", "582.067, 724.37, 97.16, 0.2746", "582.067, 725.515, 97.16, 0.2746", "582.067, 726.659, 97.16, 0.2748", "582.067, 727.802, 97.16, 0.2748", "582.067, 728.946, 97.16, 0.275", "582.067, 730.091, 97.16, 0.2754", "582.067, 731.234, 97.16, 0.2764", "582.067, 732.378, 97.16, 0.278", "582.067, 733.523, 97.16, 0.2808", "582.067, 734.667, 97.16, 0.2862", "582.067, 735.81, 97.16, 0.2958", "581.968, 736.938, 97.16, 0.3148", "581.648, 738.037, 97.16, 0.345", "581.198, 739.086, 97.16, 0.4254", "580.716, 740.113, 97.16, 0.457", "580.291, 741.14, 97.16, 0.3988", "580.166, 742.278, 97.16, 0.3988", "579.989, 743.403, 97.16, 0.3338", "579.524, 744.44, 97.16, 0.3", "579.205, 745.514, 97.16, 0.2746", "578.251, 746.112, 97.16, 0.2748", "577.636, 747.05, 97.16, 0.275", "576.779, 747.797, 97.16, 0.2752", "576.007, 748.638, 97.16, 0.276", "575.432, 749.553, 97.16, 0.2768", "575.359, 750.694, 97.16, 0.2796", "575.318, 751.837, 97.16, 0.2796", "575.318, 752.981, 97.16, 0.305", "575.318, 754.125, 97.16, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "548.073, 683.873, 73.2214, 0.3478", "547.219, 683.388, 74.1944, 0.4576", "546.224, 682.822, 75.2937, 0.3592", "545.701, 681.93, 75.7772, 0.3", "545.343, 680.926, 76.459, 0.2746", "544.984, 679.92, 77.3016, 0.2746", "544.626, 678.915, 78.2695, 0.2746", "544.268, 677.909, 79.3279, 0.2746", "543.919, 676.922, 80.4577, 0.2746", "543.624, 676.032, 81.6978, 0.2746", "543.329, 675.142, 83.015, 0.2746", "543.345, 674.15, 84.3282, 0.2746", "543.566, 673.092, 85.6013, 0.2746", "543.786, 672.034, 86.8507, 0.2746", "543.947, 671.01, 88.1194, 0.2746", "543.942, 670.079, 89.4919, 0.2746", "543.939, 669.148, 90.9625, 0.2746", "543.934, 668.218, 92.5243, 0.2746", "543.93, 667.288, 94.1592, 0.2746", "544.11, 666.461, 95.8756, 0.2746", "544.319, 665.651, 97.6438, 0.2746", "544.528, 664.84, 99.4339, 0.2746", "544.736, 664.029, 101.231, 0.2746", "544.938, 663.162, 103.0, 0.2746", "545.133, 662.254, 104.719, 0.2746", "545.328, 661.345, 106.391, 0.2746", "545.333, 660.43, 108.018, 0.2746", "545.098, 659.506, 109.605, 0.2746", "544.861, 658.581, 111.164, 0.2746", "544.625, 657.658, 112.705, 0.2744", "544.39, 656.734, 114.232, 0.2744", "544.153, 655.811, 115.745, 0.2742", "543.917, 654.886, 117.241, 0.2736", "543.681, 653.962, 118.714, 0.2728", "543.445, 653.039, 120.183, 0.2712", "543.13, 652.101, 121.594, 0.2684", "542.8, 651.16, 122.921, 0.2626", "542.471, 650.219, 124.148, 0.2542", "542.142, 649.278, 125.264, 0.2288", "541.812, 648.338, 127.41, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "555.37, 692.578, 38.8245, 0.5758", "555.571, 693.695, 38.6361, 0.2288", "555.85, 694.797, 38.3286, 0.3046", "556.238, 695.871, 38.2144, 0.3246", "556.435, 696.938, 37.9974, 0.3934", "556.507, 698.041, 37.716, 0.3702", "556.826, 699.111, 37.5091, 0.3692", "557.502, 700.006, 37.3582, 0.3936", "558.339, 700.785, 37.2207, 0.5406", "559.288, 701.415, 37.0866, 0.5466", "560.335, 701.867, 36.9415, 0.4814", "561.244, 702.543, 36.7399, 0.5002", "561.86, 703.409, 36.3759, 0.5438", "562.564, 704.224, 35.9106, 0.5814", "563.306, 705.088, 35.4922, 0.6336", "563.842, 706.095, 35.1266, 0.5862", "564.152, 707.193, 34.799, 0.51", "564.367, 708.26, 34.4946, 0.5432", "564.454, 709.335, 34.0785, 0.673", "564.54, 710.41, 33.5678, 0.582", "565.344, 711.017, 32.9543, 0.42", "566.374, 711.271, 32.3742, 0.3182", "567.518, 711.29, 31.915, 0.3096", "568.662, 711.31, 31.5636, 0.334", "569.765, 711.481, 31.2295, 0.4114", "570.765, 711.849, 30.9058, 0.4", "571.437, 712.774, 30.6575, 0.4428", "572.117, 713.685, 30.4254, 0.4408", "572.812, 714.563, 30.144, 0.374", "573.508, 715.442, 29.8357, 0.3286", "574.091, 716.407, 29.5674, 0.3224", "574.746, 716.83, 29.4669, 0.3888", "575.566, 717.619, 29.3552, 0.362", "575.661, 718.725, 29.1802, 0.3528", "575.215, 719.737, 28.9803, 0.3682", "575.089, 720.824, 28.681, 0.469", "575.089, 721.903, 28.2092, 0.5334", "575.089, 723.016, 27.6503, 0.561", "575.359, 723.904, 26.9676, 0.6008", "576.4, 724.038, 26.2573, 0.5016", "577.213, 724.527, 25.5903, 0.4706", "577.674, 725.543, 25.102, 0.5858", "578.172, 726.552, 24.7685, 0.6488", "578.91, 727.416, 24.5532, 0.5784", "579.987, 727.698, 24.4292, 0.4452", "580.857, 727.863, 24.1912, 0.4372", "581.495, 728.521, 24.0612, 0.4068", "581.582, 729.649, 24.0078, 0.4264", "582.004, 730.699, 23.9999, 0.5508", "582.649, 731.641, 24.0083, 0.5848", "583.255, 732.591, 24.0307, 0.4576", "584.126, 733.19, 24.08, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "555.37, 692.578, 38.8245, 0.5758", "556.691, 692.908, 38.397, 0.5682", "557.781, 692.933, 38.113, 0.4738", "558.702, 692.467, 37.6365, 0.4878", "559.3, 691.502, 37.1451, 0.5136", "559.361, 690.458, 36.5347, 0.5604", "559.478, 689.657, 35.7661, 0.4246", "560.388, 689.367, 35.0106, 0.3368", "561.524, 689.332, 34.5352, 0.2956", "562.614, 689.167, 34.3622, 0.3146", "563.64, 688.82, 34.4263, 0.3434", "564.68, 688.647, 34.6791, 0.4286", "565.756, 688.795, 34.9751, 0.4318", "566.682, 688.985, 34.9913, 0.502", "567.622, 689.237, 34.7152, 0.5488", "568.761, 689.268, 34.3879, 0.5844", "569.871, 689.0, 34.0581, 0.67", "570.958, 689.263, 33.7999, 0.5036" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "530.048, 663.26, 58.8787, 0.3298", "530.455, 663.482, 59.9393, 0.2826", "531.183, 663.977, 61.1388, 0.2894", "531.912, 664.471, 62.4103, 0.3018", "532.641, 664.965, 63.6846, 0.3272", "532.803, 665.975, 64.7077, 0.3616", "533.224, 666.735, 65.4996, 0.4872", "534.336, 666.843, 66.1702, 0.4204", "535.447, 666.951, 66.7346, 0.3778", "536.559, 667.06, 67.2283, 0.361" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "530.048, 663.26, 58.8787, 0.3298", "528.909, 663.545, 61.0904, 0.2288", "528.034, 663.765, 63.3144, 0.402", "527.097, 663.766, 64.2704, 0.5514", "526.036, 663.338, 65.247, 0.591", "524.976, 662.909, 66.2718, 0.4442", "524.588, 663.287, 67.7121, 0.3254", "524.428, 663.63, 69.4966, 0.2746", "524.461, 663.925, 71.5425, 0.2746", "524.607, 664.422, 73.7467, 0.2746", "524.893, 665.169, 75.9954, 0.2746", "525.134, 665.648, 78.2676, 0.2746", "525.303, 665.718, 80.5582, 0.2746", "525.472, 665.786, 82.8414, 0.2746", "525.649, 666.539, 84.9649, 0.2746", "525.826, 667.458, 86.928, 0.2746", "526.003, 668.377, 88.7634, 0.2746", "526.18, 669.296, 90.4929, 0.2746", "526.358, 670.215, 92.1449, 0.2746", "526.535, 671.133, 93.7563, 0.2746", "526.713, 672.052, 95.359, 0.2746", "526.868, 672.975, 96.959, 0.2746", "527.018, 673.899, 98.5547, 0.2746", "527.169, 674.824, 100.145, 0.2746", "527.319, 675.747, 101.727, 0.2746", "527.469, 676.671, 103.298, 0.2746", "527.62, 677.596, 104.853, 0.2746", "527.769, 678.52, 106.386, 0.2746", "527.92, 679.443, 107.89, 0.2746", "528.07, 680.368, 109.358, 0.2746", "528.323, 681.285, 110.765, 0.2746", "528.847, 682.187, 112.06, 0.2746", "529.37, 683.088, 113.255, 0.2744", "529.894, 683.99, 114.362, 0.2744", "530.418, 684.891, 115.393, 0.2742", "530.941, 685.794, 116.363, 0.2736", "531.995, 686.191, 117.126, 0.2728", "533.002, 686.636, 117.768, 0.2712", "533.476, 687.61, 118.428, 0.2684", "533.948, 688.585, 119.095, 0.2626", "534.422, 689.56, 119.757, 0.2542", "534.894, 690.534, 120.405, 0.2288", "535.368, 691.509, 121.781, 0.2288" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "525.337, 649.106, 47.1136, 0.7198", "523.838, 648.921, 46.5679, 0.4576", "522.756, 649.127, 45.8604, 0.4924", "521.685, 649.354, 45.5479, 0.5638", "520.642, 649.739, 45.2029, 0.6812", "519.567, 649.784, 44.877, 0.7424", "518.449, 649.747, 44.6762, 0.7006", "517.507, 650.195, 44.6897, 0.69", "516.479, 650.576, 44.7902, 0.8028", "515.44, 651.031, 44.8781, 0.828", "514.525, 651.711, 44.9252, 0.6238", "513.701, 652.501, 44.9089, 0.5466", "512.903, 653.32, 44.8081, 0.5422", "512.107, 654.107, 44.5696, 0.547", "511.179, 654.736, 44.2504, 0.7216", "510.23, 655.37, 43.9146, 0.6998", "509.363, 656.081, 43.5182, 0.7334", "508.42, 656.685, 43.0688, 0.6672", "507.302, 656.875, 42.6395, 0.7082", "506.196, 656.905, 42.1523, 0.6766", "505.148, 657.008, 41.5635, 0.6838", "504.177, 657.561, 40.9884, 0.8336", "503.528, 658.462, 40.423, 0.68", "502.84, 659.364, 39.9255, 0.6574", "502.346, 660.38, 39.4738, 0.7152", "501.928, 661.42, 39.058, 0.7964", "501.483, 662.473, 38.7503, 0.844", "501.079, 663.543, 38.5132, 0.7472", "500.517, 664.528, 38.3169, 0.5498", "499.486, 664.972, 38.0971, 0.5004", "498.384, 665.077, 37.8151, 0.472", "497.309, 665.402, 37.5659, 0.5714", "496.479, 666.177, 37.3416, 0.7036", "495.569, 666.834, 37.1238, 0.744", "494.508, 667.066, 36.841, 0.8964", "493.498, 667.481, 36.5159, 0.8044", "492.624, 668.18, 36.2289, 0.62", "491.921, 669.057, 36.0716, 0.5748", "491.423, 670.027, 36.0744, 0.6532", "490.98, 671.068, 36.0906, 0.697", "490.576, 672.117, 36.0181, 0.585", "490.08, 673.147, 35.9061, 0.6274", "489.681, 674.177, 35.6863, 0.6374", "489.349, 675.192, 35.3226, 0.5308", "488.784, 676.137, 34.9429, 0.4842", "488.029, 676.969, 34.664, 0.5796", "486.973, 677.226, 34.5164, 0.789", "485.873, 677.043, 34.4924, 0.7896", "484.744, 677.056, 34.4596, 0.8416", "483.651, 677.221, 34.3571, 0.9206", "482.579, 677.615, 34.2558, 0.9214", "481.576, 678.152, 34.1502, 0.9458", "480.767, 678.935, 34.0362, 0.879", "480.217, 679.936, 33.9172, 0.8412", "479.677, 680.938, 33.7982, 0.8104", "478.991, 681.852, 33.6532, 0.7932", "478.203, 682.638, 33.427, 0.7964", "477.244, 683.215, 33.1274, 0.6322", "476.25, 683.779, 32.8294, 0.4662", "475.364, 684.471, 32.508, 0.4006", "474.666, 685.333, 32.1275, 0.4772", "474.245, 686.376, 31.7478, 0.5722", "473.621, 686.795, 31.2914, 0.5194", "473.007, 687.734, 30.9476, 0.3886", "472.601, 688.797, 30.6936, 0.3068", "472.319, 689.894, 30.5169, 0.2872", "471.505, 690.513, 30.3976, 0.2988", "470.371, 690.621, 30.3052, 0.3144", "469.353, 691.128, 30.2179, 0.3736", "468.423, 691.794, 30.1025, 0.3346", "467.812, 692.746, 29.9603, 0.3008", "467.202, 693.623, 29.6887, 0.2764", "466.609, 694.536, 29.314, 0.278", "466.089, 695.456, 28.8722, 0.2808", "465.388, 696.338, 28.5267, 0.286", "464.994, 697.406, 28.2794, 0.2958", "464.727, 698.515, 28.1226, 0.3146", "464.56, 699.637, 28.0445, 0.3448", "463.954, 700.596, 28.0162, 0.4248", "462.953, 700.996, 28.0498, 0.456", "461.823, 701.158, 28.0661, 0.397", "460.678, 701.158, 28.0652, 0.3954", "459.576, 701.193, 27.9728, 0.3276", "458.548, 701.636, 27.8905, 0.288", "457.801, 702.479, 27.8225, 0.2542", "456.71, 702.731, 27.7684, 0.2288", "456.342, 703.674, 27.72, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "525.337, 649.106, 47.1136, 0.7198", "525.38, 648.353, 47.0016, 0.8356", "525.622, 647.273, 46.7558, 0.9982", "525.802, 646.155, 46.4724, 1.0926", "526.032, 645.083, 46.1224, 1.131", "525.893, 643.972, 45.8125, 1.1784", "526.096, 642.863, 45.5832, 1.1514", "526.544, 641.813, 45.4289, 0.9734", "526.872, 640.718, 45.3247, 0.8074", "527.137, 639.628, 45.1951, 0.8474", "527.148, 638.51, 45.211, 0.8348", "527.104, 637.368, 45.2547, 0.775", "526.82, 636.261, 45.2992, 0.842", "526.482, 635.172, 45.3636, 0.7874" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "570.958, 689.263, 33.7999, 0.5036", "572.196, 689.795, 35.2789, 0.6864", "573.186, 690.367, 35.1361, 0.689", "574.255, 690.701, 35.0862, 0.527", "575.387, 690.763, 34.998, 0.5006", "576.506, 690.849, 34.8544, 0.4956", "577.569, 691.188, 34.7197, 0.5024", "578.647, 691.415, 34.6517, 0.4368", "579.737, 691.134, 34.6564, 0.4652", "580.812, 690.832, 34.7738, 0.477", "581.936, 690.791, 34.9616, 0.467", "583.016, 691.044, 35.208, 0.3756", "583.938, 691.623, 35.5214, 0.3302", "584.887, 692.223, 35.7946, 0.3326", "585.963, 692.584, 35.9747, 0.3718", "587.05, 692.931, 36.0674, 0.5054", "588.093, 693.399, 36.0828, 0.4566", "589.157, 693.661, 35.9708, 0.4336", "590.275, 693.651, 35.8044, 0.521", "591.41, 693.519, 35.6798, 0.509", "592.546, 693.391, 35.607, 0.4162", "593.63, 693.584, 35.5365, 0.359", "594.674, 693.902, 35.6177, 0.3804", "595.693, 694.218, 35.903, 0.4874", "596.8, 694.271, 36.2376, 0.5906", "597.902, 694.128, 36.6128, 0.5546", "598.972, 694.403, 36.9611, 0.4482", "599.998, 694.904, 37.2266, 0.4438", "600.995, 695.466, 37.3951, 0.4134", "601.904, 696.155, 37.4881, 0.4672", "602.794, 696.875, 37.5388, 0.4884", "603.83, 697.338, 37.5637, 0.4516", "604.939, 697.229, 37.5827, 0.5234", "606.059, 696.997, 37.6085, 0.4358", "607.145, 696.641, 37.6454, 0.4302", "608.268, 696.695, 37.6936, 0.3448", "609.369, 696.998, 37.7546, 0.32", "610.498, 697.138, 37.847, 0.3128", "611.598, 697.153, 38.0279, 0.34", "612.724, 697.146, 38.2245, 0.4228", "613.858, 697.096, 38.3127, 0.4198", "614.976, 696.873, 38.3163, 0.4866", "616.084, 697.064, 38.2348, 0.4872", "617.07, 697.565, 38.029, 0.6314", "618.122, 698.004, 37.8106, 0.6584", "619.259, 698.056, 37.625, 0.7344", "620.4, 697.992, 37.4741, 0.748", "621.505, 697.706, 37.3615, 0.706", "622.645, 697.655, 37.2784, 0.723", "623.757, 697.878, 37.1571, 0.7542", "624.813, 698.245, 36.9566, 0.5848", "625.754, 698.869, 36.4008, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "570.958, 689.263, 33.7999, 0.5036", "571.966, 689.585, 33.3066, 0.3998", "572.323, 688.868, 32.734, 0.3592", "572.721, 688.078, 32.2703, 0.4604", "573.771, 687.894, 31.7747, 0.4794", "574.782, 688.181, 31.2981, 0.6462", "575.823, 688.653, 30.9397, 0.5462", "576.863, 688.559, 30.6541, 0.5158", "577.709, 687.853, 30.4052, 0.623", "578.55, 687.088, 30.2347, 0.713", "579.576, 686.641, 30.1865, 0.7232", "580.641, 686.305, 30.2669, 0.5866", "581.699, 685.897, 30.3761, 0.6304", "582.698, 685.345, 30.4643, 0.6438", "583.713, 684.824, 30.515, 0.5376", "584.792, 684.451, 30.5152, 0.52", "585.92, 684.354, 30.4441, 0.5338", "587.041, 684.414, 30.28, 0.5614", "588.173, 684.505, 30.0989, 0.6028", "589.289, 684.417, 29.9449, 0.4994", "590.376, 684.063, 29.8362, 0.4954", "591.494, 683.865, 29.7704, 0.4922", "592.63, 683.763, 29.7436, 0.4658", "593.627, 683.31, 29.7483, 0.5138", "594.305, 682.412, 29.7713, 0.5928", "594.7, 681.345, 29.808, 0.5588", "595.172, 680.329, 29.8595, 0.4556", "595.977, 679.53, 29.9309, 0.4576", "596.9, 678.855, 30.0283, 0.4396", "597.858, 678.235, 30.1619, 0.512", "598.895, 677.834, 30.373, 0.5894", "599.974, 677.545, 30.6569, 0.5526", "601.024, 677.183, 30.9845, 0.4442", "602.025, 676.805, 31.3706, 0.4366", "603.031, 676.362, 31.6988, 0.3994", "603.975, 675.785, 31.8116, 0.442", "604.755, 675.009, 31.7335, 0.4392", "605.336, 674.062, 31.5277, 0.3716", "606.047, 673.223, 31.269, 0.3226", "607.022, 672.656, 31.0218, 0.3174", "608.075, 672.246, 30.8862, 0.3496", "608.863, 671.499, 30.8543, 0.434", "609.243, 670.44, 30.8798, 0.4716", "609.448, 669.338, 30.9918, 0.4332", "609.678, 668.229, 31.1122, 0.4286", "609.783, 667.126, 31.1108, 0.5534", "609.971, 666.015, 31.0442, 0.5948", "610.348, 664.939, 30.9733, 0.4514", "611.052, 664.062, 30.9117, 0.339", "612.025, 663.486, 30.8669, 0.3008", "612.903, 662.769, 30.851, 0.318", "613.494, 661.838, 30.8098, 0.3808", "613.875, 660.777, 30.7978, 0.3476", "614.304, 659.737, 30.935, 0.3252", "614.929, 658.81, 31.2304, 0.3222", "615.18, 657.72, 31.612, 0.3586", "615.033, 656.658, 32.1608, 0.4516", "614.345, 655.93, 32.8852, 0.499", "613.605, 655.165, 33.6868, 0.5084", "612.999, 654.281, 34.5033, 0.4494", "612.541, 653.25, 35.2458, 0.482", "612.247, 652.188, 35.9548, 0.5396", "611.628, 651.264, 36.5901, 0.4322", "610.816, 650.522, 37.1731, 0.356", "610.049, 649.679, 37.6286, 0.305", "609.752, 648.648, 38.64, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "536.559, 667.06, 67.2283, 0.361", "537.523, 667.228, 67.6438, 0.4858", "538.646, 667.397, 68.0288, 0.4192", "539.753, 667.604, 68.383, 0.3682", "540.698, 668.249, 68.6608, 0.3794", "541.643, 668.893, 68.8912, 0.345", "542.687, 668.985, 69.1373, 0.3204", "543.791, 668.741, 69.4324, 0.3132", "544.896, 668.499, 69.7726, 0.342", "546.002, 668.255, 70.154, 0.4198", "546.967, 667.672, 70.5704, 0.4454", "547.92, 667.061, 71.0125, 0.384", "548.874, 666.45, 71.4753, 0.3404", "549.827, 665.839, 71.962, 0.375", "550.781, 665.228, 72.4794, 0.337", "551.734, 664.617, 73.029, 0.3056", "552.646, 664.055, 73.6716, 0.2854", "553.511, 663.549, 74.4495, 0.2942", "554.375, 663.041, 75.3091, 0.3118", "555.24, 662.534, 76.2034, 0.3396", "556.239, 662.083, 76.9608, 0.4156", "557.302, 661.66, 77.5298, 0.4374", "558.366, 661.237, 77.9442, 0.368", "559.419, 660.798, 78.2558, 0.3162", "560.407, 660.242, 78.5669, 0.3044", "561.394, 659.687, 78.909, 0.3318", "562.381, 659.13, 79.3103, 0.3698", "563.326, 658.53, 79.7784, 0.5034", "563.985, 657.635, 80.3373, 0.4452", "564.643, 656.741, 80.9626, 0.4484", "565.287, 655.839, 81.6329, 0.3736", "565.654, 654.833, 82.3763, 0.3992", "565.817, 653.818, 83.1838, 0.3346", "565.754, 652.796, 84.0431, 0.3012", "566.055, 651.723, 84.7683, 0.2766", "566.774, 651.022, 85.4266, 0.2782", "567.787, 650.64, 86.0852, 0.2814", "568.865, 650.828, 86.6785, 0.287", "569.957, 651.113, 87.2155, 0.2988", "571.047, 651.398, 87.7195, 0.3142", "572.138, 651.683, 88.212, 0.3734", "573.027, 652.299, 88.6466, 0.3338", "573.88, 653.041, 89.0025, 0.3", "574.167, 653.196, 89.5154, 0.2746", "574.76, 653.11, 90.0721, 0.2746", "575.874, 653.337, 90.496, 0.2746", "576.996, 653.465, 90.8118, 0.2746", "578.132, 653.567, 91.0445, 0.2746", "579.166, 653.941, 91.2139, 0.2746", "580.241, 654.313, 91.343, 0.2746", "581.336, 654.482, 91.4934, 0.2746", "582.45, 654.696, 91.6546, 0.2746", "583.56, 654.711, 91.9131, 0.2746", "584.674, 654.711, 92.2519, 0.2746", "585.814, 654.711, 92.5803, 0.2746", "586.957, 654.672, 92.8704, 0.2746", "588.097, 654.597, 93.135, 0.2746", "589.155, 654.586, 93.5124, 0.2746", "590.215, 654.235, 93.8722, 0.2746", "591.352, 654.139, 94.2374, 0.2746", "592.496, 654.139, 94.6338, 0.2746", "593.505, 654.139, 95.1437, 0.2746", "593.557, 654.139, 96.0613, 0.2746", "594.446, 654.382, 96.9884, 0.2746", "595.344, 654.804, 97.9213, 0.2746", "596.109, 655.455, 98.7683, 0.2746", "596.969, 656.181, 99.4706, 0.2746", "597.842, 656.914, 100.005, 0.2746", "598.426, 657.576, 100.498, 0.2746", "598.623, 658.675, 100.97, 0.2746", "598.774, 659.786, 101.441, 0.2744", "599.719, 660.088, 101.968, 0.2744", "600.187, 660.353, 102.78, 0.2742", "600.941, 660.66, 103.678, 0.2736", "602.072, 660.65, 104.412, 0.2728", "603.212, 660.559, 104.942, 0.2712", "604.356, 660.546, 105.292, 0.2684", "605.5, 660.546, 105.484, 0.2626", "606.641, 660.526, 105.55, 0.2542", "607.764, 660.302, 105.56, 0.2288", "608.722, 659.859, 105.56, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "536.559, 667.06, 67.2283, 0.361", "537.36, 667.793, 68.8447, 0.2288", "538.118, 668.486, 71.2544, 0.2838", "538.218, 669.054, 72.2946, 0.2912", "537.812, 669.524, 73.626, 0.3066", "537.405, 669.994, 75.1433, 0.3288", "537.352, 670.958, 76.5027, 0.4004", "537.424, 672.1, 77.6115, 0.3846", "538.073, 672.831, 78.6954, 0.3912", "538.75, 673.541, 79.7577, 0.4586", "539.624, 673.927, 80.7587, 0.543", "540.729, 673.928, 81.6774, 0.4396", "541.833, 673.93, 82.5625, 0.364", "542.938, 673.932, 83.4159, 0.3478", "544.042, 673.934, 84.2268, 0.402", "545.147, 673.936, 85.0195, 0.5514", "546.247, 673.94, 85.822, 0.591", "547.33, 673.951, 86.6676, 0.4442", "548.412, 673.964, 87.5515, 0.3254", "549.494, 673.976, 88.4691, 0.2746", "550.575, 673.988, 89.418, 0.2746", "551.657, 674.0, 90.3988, 0.2746", "552.74, 674.013, 91.4172, 0.2746", "553.697, 674.524, 92.4736, 0.2746", "554.649, 675.06, 93.5875, 0.2744", "555.601, 675.595, 94.7786, 0.2744", "556.405, 675.813, 96.1139, 0.2742", "556.82, 675.204, 97.72, 0.2736", "557.235, 674.594, 99.5383, 0.2728", "557.643, 674.779, 101.607, 0.2712", "558.049, 675.066, 103.81, 0.2684", "558.455, 675.354, 106.034, 0.2626", "558.861, 675.641, 108.183, 0.2542", "559.267, 675.929, 110.185, 0.2288", "559.673, 676.216, 114.106, 0.2288" ],
    "parent" : "apic_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "526.482, 635.172, 45.3636, 0.7874", "525.999, 633.669, 45.3729, 0.8686", "525.652, 632.606, 45.4124, 0.8194", "525.349, 631.538, 45.4373, 0.7822", "525.229, 630.414, 45.3538, 0.6806", "525.156, 629.417, 45.0097, 0.6502", "525.668, 628.726, 44.3814, 0.7442", "525.668, 627.91, 43.5254, 0.6444", "525.668, 626.897, 42.572, 0.647", "525.668, 625.787, 41.7096, 0.8832", "525.209, 624.778, 40.9979, 1.1138", "524.279, 622.951, 39.7765, 1.0062", "523.833, 622.001, 39.2784, 0.9246", "523.838, 620.963, 38.771, 0.7906", "523.838, 620.24, 38.414, 0.6864", "523.838, 619.096, 38.1889, 0.48", "523.838, 617.952, 38.085, 0.3912", "523.838, 616.808, 38.066, 0.4002", "523.919, 615.67, 38.1265, 0.4908", "524.404, 614.645, 38.2365, 0.756", "524.793, 613.658, 38.4594, 0.7768", "525.21, 612.727, 38.759, 1.042", "525.325, 611.61, 39.0594, 1.1198", "525.325, 610.484, 39.3344, 1.2134", "525.325, 609.34, 39.5343, 1.1748", "525.325, 608.196, 39.6651, 0.988", "525.439, 607.061, 39.734, 0.9742", "525.439, 605.917, 39.7642, 1.165", "525.439, 604.773, 39.7768, 1.1536", "525.439, 603.629, 39.7835, 1.0768", "525.487, 602.487, 39.7928, 0.9738", "525.707, 601.37, 39.8059, 0.821", "526.08, 600.3, 39.8241, 0.8108", "526.218, 599.176, 39.849, 0.8374", "526.621, 598.121, 39.8846, 0.8948" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "526.482, 635.172, 45.3636, 0.7874", "525.676, 635.169, 46.3593, 0.6864", "524.665, 635.681, 46.8672, 0.7284", "523.534, 635.801, 47.0714, 0.8022", "522.451, 635.556, 47.3822, 0.7178", "521.383, 635.188, 47.7184, 0.7182", "520.287, 634.969, 48.085, 0.6452", "519.169, 634.983, 48.4882, 0.6386", "518.084, 635.255, 48.8947, 0.688", "517.041, 635.67, 49.301, 0.7096", "515.962, 636.021, 49.651, 0.6318", "515.03, 636.643, 49.9402, 0.6004", "514.342, 637.545, 50.19, 0.4516", "513.82, 638.56, 50.4252, 0.3876", "513.484, 639.645, 50.689, 0.3856", "513.331, 640.698, 51.0846, 0.5022", "512.857, 641.622, 51.595, 0.5898", "512.068, 642.357, 52.1534, 0.691", "511.216, 643.102, 52.6352, 0.7194", "510.4, 643.904, 53.0062, 0.6288", "509.603, 644.724, 53.2804, 0.6978", "508.847, 645.582, 53.4828, 0.8204", "508.357, 646.604, 53.6578, 0.6164", "507.983, 647.685, 53.849, 0.501", "507.629, 648.772, 54.0971, 0.383", "507.072, 649.735, 54.4684, 0.387", "506.492, 650.612, 55.0147, 0.4556", "505.618, 651.137, 55.697, 0.5132", "504.575, 651.174, 56.4463, 0.5002", "503.465, 650.977, 57.0531, 0.602", "502.365, 651.046, 57.6498, 0.6372", "501.408, 651.57, 58.242, 0.5316", "500.651, 652.406, 58.7723, 0.4788", "500.205, 653.453, 59.2228, 0.6018", "500.208, 654.548, 59.7156, 0.6738", "500.452, 655.535, 60.3221, 0.6486", "499.753, 656.387, 60.8824, 0.457", "498.671, 656.732, 61.3077, 0.349", "497.802, 657.463, 61.6283, 0.3192", "497.059, 658.281, 61.9889, 0.3516", "496.011, 658.671, 62.3356, 0.4452", "494.87, 658.585, 62.6472, 0.4572", "493.743, 658.521, 62.9955, 0.5754", "492.68, 658.616, 63.4785, 0.5574", "491.66, 658.432, 64.0819, 0.5334", "490.59, 658.581, 64.6596, 0.4412", "489.726, 659.315, 65.2016, 0.503", "488.845, 659.94, 65.7418, 0.403", "487.739, 660.089, 66.2502, 0.3432", "486.615, 660.095, 66.7027, 0.3086", "485.524, 660.133, 67.1852, 0.3324", "484.414, 660.317, 67.6301, 0.4086", "483.342, 660.706, 68.0145, 0.3936", "482.326, 661.174, 68.3967, 0.4372", "481.38, 661.737, 68.8125, 0.3994", "480.398, 662.271, 69.2121, 0.4492", "479.346, 662.659, 69.4996, 0.4166", "478.249, 662.733, 69.6816, 0.5046", "477.147, 662.457, 69.8746, 0.4056", "476.062, 662.242, 70.1392, 0.3496", "474.999, 662.498, 70.5533, 0.3142", "474.05, 662.872, 71.1813, 0.3734", "473.187, 663.375, 71.9737, 0.3338", "472.503, 664.209, 72.7997, 0.3", "472.185, 664.546, 73.7458, 0.2746", "471.562, 664.53, 74.6712, 0.2746", "470.463, 664.818, 75.336, 0.2746", "469.437, 665.324, 75.7795, 0.2746", "468.326, 665.465, 76.0536, 0.2748", "467.182, 665.465, 76.2082, 0.2748", "466.038, 665.465, 76.2796, 0.2752", "464.894, 665.465, 76.3286, 0.2758", "463.75, 665.465, 76.3977, 0.2766", "462.616, 665.536, 76.4901, 0.2782", "461.54, 665.808, 76.6077, 0.2814", "460.412, 665.808, 76.7805, 0.287", "459.453, 665.808, 77.1347, 0.2988", "458.315, 665.808, 77.4696, 0.3142", "457.178, 665.808, 77.7809, 0.3734", "456.069, 665.966, 78.1007, 0.3338", "455.047, 666.435, 78.3493, 0.3", "453.992, 666.878, 78.5336, 0.2746", "452.884, 667.13, 78.7013, 0.2746", "451.854, 667.579, 78.8855, 0.2746", "450.783, 667.753, 79.1064, 0.2746", "449.639, 667.753, 79.268, 0.2746", "448.495, 667.753, 79.3862, 0.2744", "447.354, 667.82, 79.4637, 0.2744", "446.3, 668.252, 79.5052, 0.2742", "445.222, 668.613, 79.52, 0.2736", "444.118, 668.816, 79.52, 0.2728", "443.092, 669.305, 79.52, 0.2712", "442.133, 669.917, 79.52, 0.2684", "441.099, 670.391, 79.52, 0.2626", "440.212, 671.112, 79.52, 0.2542", "439.243, 671.648, 79.52, 0.2288", "438.266, 672.214, 79.52, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "526.621, 598.121, 39.8846, 0.8948", "526.905, 598.096, 37.4903, 0.2288", "527.714, 597.998, 36.8133, 0.2918", "528.637, 597.332, 36.5758, 0.3078", "529.449, 596.527, 36.3703, 0.3306", "530.459, 596.072, 36.1581, 0.404", "531.58, 595.911, 35.9817, 0.3912", "532.464, 595.342, 35.7269, 0.403", "533.531, 595.109, 35.544, 0.4814", "534.675, 595.109, 35.4032, 0.58", "535.799, 595.007, 35.2934, 0.5338", "536.767, 594.405, 35.203, 0.416", "537.593, 593.651, 35.1579, 0.3526", "538.571, 593.192, 35.17, 0.3988", "539.669, 593.05, 35.0834, 0.3754", "540.672, 593.062, 34.7488, 0.4026", "541.764, 593.164, 34.3294, 0.341", "542.888, 593.164, 33.9172, 0.313", "543.994, 593.122, 33.4802, 0.2986", "545.011, 592.623, 33.133, 0.3198", "545.719, 591.75, 32.8395, 0.3544", "546.353, 590.854, 32.5682, 0.4424", "547.177, 590.106, 32.3781, 0.4882", "548.11, 589.501, 32.2092, 0.459", "549.145, 589.033, 32.1, 0.5002", "550.277, 588.931, 32.0424, 0.5722", "551.417, 588.931, 32.0429, 0.496", "552.553, 588.831, 32.0527, 0.4592", "553.693, 588.817, 32.0376, 0.5694", "554.832, 588.817, 32.0029, 0.5944", "555.973, 588.771, 31.9693, 0.5964", "556.849, 588.193, 31.9376, 0.5858", "557.976, 588.13, 31.9091, 0.6362", "559.119, 588.148, 31.883, 0.6166", "560.259, 588.236, 31.8514, 0.4446", "561.393, 588.245, 31.8472, 0.3264", "562.492, 588.142, 31.8413, 0.2766", "563.453, 587.67, 31.7951, 0.2784", "564.25, 587.122, 31.5664, 0.2818", "564.766, 586.3, 31.2138, 0.2878", "565.706, 586.3, 30.7787, 0.3004", "566.85, 586.3, 30.4276, 0.3172", "567.994, 586.3, 30.1622, 0.3788", "569.131, 586.405, 29.9807, 0.3442", "570.269, 586.333, 29.8735, 0.3188", "571.373, 586.061, 29.8046, 0.3102", "572.391, 585.553, 29.7427, 0.3366", "573.229, 584.823, 29.6548, 0.4096", "574.372, 584.813, 29.5352, 0.4264", "575.501, 584.927, 29.3762, 0.3476", "576.487, 584.853, 29.1155, 0.2796", "577.371, 584.392, 28.8011, 0.2288", "578.063, 583.554, 28.28, 0.2288" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "526.621, 598.121, 39.8846, 0.8948", "527.041, 596.636, 39.9361, 0.572", "526.934, 595.501, 40.0072, 0.572", "526.926, 594.358, 40.1008, 0.572", "526.891, 593.216, 40.2178, 0.572", "526.378, 592.308, 40.4356, 0.572", "525.884, 591.461, 40.7744, 0.572" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "525.884, 591.461, 40.7744, 0.572", "526.295, 591.449, 41.8933, 0.2288", "527.059, 592.009, 42.1235, 0.451", "528.202, 592.022, 42.2136, 0.4988", "529.333, 592.186, 42.3262, 0.5022", "530.46, 592.363, 42.4637, 0.4662", "531.596, 592.363, 42.658, 0.3746", "532.646, 592.288, 42.9696, 0.328", "533.115, 591.418, 43.3586, 0.3272", "533.733, 590.604, 43.8057, 0.3692", "534.372, 589.748, 44.1582, 0.465", "535.477, 589.478, 44.429, 0.5558", "536.599, 589.265, 44.6326, 0.4582", "537.736, 589.157, 44.788, 0.4244", "538.711, 588.673, 44.886, 0.3342", "539.713, 588.195, 45.0369, 0.3006", "540.694, 587.759, 45.3564, 0.2758", "541.752, 587.471, 45.7509, 0.2766", "542.892, 587.425, 46.1224, 0.2782", "544.033, 587.338, 46.4741, 0.2816", "544.995, 587.104, 46.926, 0.2874", "545.85, 586.79, 47.5177, 0.2992", "546.742, 586.168, 48.0687, 0.3152", "547.573, 585.417, 48.552, 0.3754", "548.374, 584.601, 48.9126, 0.338", "549.365, 584.1, 49.1599, 0.3076", "550.49, 584.012, 49.2839, 0.288", "551.573, 583.779, 49.3133, 0.3006", "552.582, 583.253, 49.3847, 0.3178", "553.337, 582.647, 49.6672, 0.3802", "553.905, 581.809, 50.0539, 0.3464", "554.583, 581.022, 50.5618, 0.3242", "555.086, 580.021, 51.0642, 0.3142", "555.783, 579.116, 51.4858, 0.3734", "556.777, 578.861, 51.8994, 0.3338", "557.89, 578.665, 52.206, 0.3", "558.851, 578.13, 52.5053, 0.2746", "559.622, 577.357, 52.815, 0.2748", "560.108, 576.438, 53.1532, 0.275", "560.919, 575.687, 53.4206, 0.2752", "561.893, 575.146, 53.5254, 0.276", "562.996, 575.089, 53.4562, 0.2768", "563.947, 574.625, 53.3137, 0.2796", "564.106, 573.567, 53.0835, 0.2796", "564.106, 572.423, 52.8886, 0.305", "564.335, 571.428, 52.64, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "525.884, 591.461, 40.7744, 0.572", "525.725, 590.417, 41.0721, 0.6106", "525.554, 589.297, 41.3692, 0.6814", "525.554, 588.16, 41.6506, 0.478", "525.554, 587.017, 41.8776, 0.351", "525.738, 586.406, 42.24, 0.2748", "526.412, 585.53, 42.488, 0.275", "527.101, 584.62, 42.6415, 0.2752", "527.787, 583.735, 42.6966, 0.2758", "528.565, 583.027, 42.6611, 0.2768", "529.146, 582.066, 42.5443, 0.279", "529.329, 580.982, 42.3422, 0.2826", "529.329, 579.926, 41.9712, 0.2894", "529.329, 579.132, 41.3885, 0.3018", "529.329, 577.988, 40.917, 0.3258", "529.329, 576.869, 40.4936, 0.3664" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "529.329, 576.869, 40.4936, 0.3664", "528.618, 576.029, 41.4817, 0.2288", "527.971, 575.167, 42.672, 0.3288", "527.323, 574.305, 43.1911, 0.3764", "526.676, 573.443, 43.8054, 0.456", "525.675, 573.03, 44.3794, 0.647", "524.564, 572.757, 44.8876, 0.7906", "523.46, 572.546, 45.3594, 0.7064", "522.429, 572.932, 45.911, 0.6488", "521.397, 573.318, 46.5475, 0.52", "520.367, 573.705, 47.2716, 0.3894", "519.353, 574.033, 48.0861, 0.3088", "518.676, 573.273, 49.0375, 0.2906", "517.999, 572.513, 50.0755, 0.3056", "517.321, 571.753, 51.1543, 0.3264", "516.659, 570.98, 52.2488, 0.3976", "516.303, 569.926, 53.2599, 0.3734", "515.946, 568.873, 54.2049, 0.3988", "515.591, 567.82, 55.1046, 0.3338", "515.234, 566.766, 55.9896, 0.3", "514.781, 565.809, 56.9248, 0.2746", "514.171, 565.006, 57.9813, 0.2746", "513.561, 564.201, 59.1489, 0.2746", "512.951, 563.398, 60.4044, 0.2746", "512.517, 562.624, 61.7268, 0.2746", "513.357, 562.062, 63.0974, 0.2746", "514.198, 561.5, 64.5002, 0.2746", "515.039, 560.939, 65.9268, 0.2746", "514.195, 560.735, 67.447, 0.2746", "513.338, 560.535, 69.0365, 0.2746", "512.481, 560.333, 70.6703, 0.2746", "511.623, 560.133, 72.3232, 0.2748", "510.766, 559.933, 73.9718, 0.275", "509.909, 559.732, 75.5944, 0.2752", "510.022, 558.746, 77.1044, 0.2758", "510.153, 557.745, 78.5154, 0.2768", "510.284, 556.745, 79.8412, 0.2786", "510.414, 555.744, 81.0947, 0.2822", "510.546, 554.743, 82.2872, 0.2886", "510.412, 553.67, 83.3678, 0.3002", "510.259, 552.592, 84.3615, 0.3242", "510.107, 551.513, 85.2849, 0.356", "509.956, 550.436, 86.1686, 0.4764", "509.804, 549.357, 87.0083, 0.401", "509.652, 548.279, 87.8013, 0.3388", "509.5, 547.2, 88.5461, 0.305", "509.349, 546.122, 89.2326, 0.305", "509.197, 545.044, 90.5685, 0.4576" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "529.329, 576.869, 40.4936, 0.3664", "529.248, 575.469, 40.1766, 0.4596", "528.959, 574.364, 39.984, 0.5448", "528.233, 573.566, 39.9031, 0.4432", "527.819, 572.505, 39.8969, 0.3706", "527.393, 571.453, 39.9134, 0.3604", "526.56, 570.699, 39.9431, 0.4254", "526.032, 569.983, 40.1262, 0.5944", "525.459, 569.035, 40.2578, 0.6716", "524.867, 568.091, 40.2889, 0.5896", "524.77, 566.955, 40.2237, 0.6134", "524.672, 565.877, 40.0128, 0.7218", "524.452, 565.159, 39.4621, 0.8374", "523.93, 564.328, 38.803, 0.7818", "523.609, 563.268, 38.2239, 0.6154", "523.609, 562.124, 37.8272, 0.6138", "523.294, 561.065, 37.6026, 0.7228", "523.147, 559.983, 37.6379, 0.8402", "523.041, 558.869, 37.8406, 0.7816", "523.037, 557.727, 38.0481, 0.6402", "523.037, 556.583, 38.2186, 0.5384", "523.037, 555.44, 38.3429, 0.4862", "523.037, 554.295, 38.428, 0.412", "523.037, 553.151, 38.4832, 0.3938", "522.991, 552.01, 38.5328, 0.4686", "522.894, 550.874, 38.593, 0.536", "522.499, 549.813, 38.7019, 0.5498", "522.408, 548.68, 38.845, 0.658", "522.35, 547.585, 39.0516, 0.9154", "522.35, 546.441, 39.2106, 0.8886", "522.35, 545.297, 39.3246, 0.9972", "522.452, 544.162, 39.396, 0.8872", "522.683, 543.042, 39.4276, 0.8202", "522.919, 541.93, 39.4293, 0.7212", "523.585, 541.007, 39.4092, 0.6422", "524.373, 540.18, 39.3817, 0.445", "525.146, 539.344, 39.3428, 0.3272", "525.811, 538.422, 39.2857, 0.2778", "526.524, 537.54, 39.2062, 0.2806", "527.082, 536.561, 39.1028, 0.2856", "527.6, 535.542, 38.9771, 0.2946", "528.138, 534.644, 38.7495, 0.3128", "528.324, 533.899, 38.3351, 0.3414", "529.022, 532.994, 37.9994, 0.4188", "529.61, 532.022, 37.735, 0.4434", "529.672, 530.888, 37.5351, 0.3794", "529.672, 529.744, 37.3926, 0.337", "529.672, 528.604, 37.2856, 0.343", "529.643, 527.469, 37.1902, 0.403", "529.329, 526.481, 37.023, 0.5056", "529.162, 525.351, 36.8911, 0.7372", "528.809, 524.276, 36.792, 0.9658", "528.332, 523.261, 36.7231, 0.9928", "528.299, 522.117, 36.6811, 0.679", "528.53, 521.013, 36.6601, 0.4922", "529.285, 520.298, 36.6523, 0.5164", "530.071, 519.471, 36.6411, 0.5922", "530.474, 518.43, 36.626, 0.8122", "530.654, 517.301, 36.605, 1.0608", "530.781, 516.175, 36.5739, 1.154", "530.483, 515.071, 36.5299, 1.0516", "530.473, 513.928, 36.4714, 0.8258", "530.473, 512.784, 36.3983, 0.8098", "530.435, 511.652, 36.293, 0.6544", "530.207, 510.58, 36.0657, 0.7496", "529.939, 509.479, 35.8403, 0.6654", "529.56, 508.401, 35.6535, 0.6312", "529.129, 507.343, 35.5023, 0.6626", "528.591, 506.347, 35.3478, 0.4904", "528.194, 505.305, 35.1896, 0.3738", "528.009, 504.176, 35.0778, 0.3168", "527.727, 503.077, 34.986, 0.3556", "527.55, 501.964, 34.9045, 0.4134", "527.188, 500.88, 34.8314, 0.5866", "526.889, 499.777, 34.7592, 0.5888", "526.698, 498.659, 34.6433, 0.7672", "526.698, 497.534, 34.4697, 0.7088", "526.698, 496.39, 34.3202, 0.8894", "526.698, 495.246, 34.1984, 0.9654", "526.699, 494.102, 34.1046, 0.9902", "526.787, 492.971, 34.0119, 0.913", "527.207, 491.918, 33.9324, 0.6826", "527.494, 490.95, 33.8156, 0.6774", "528.517, 490.504, 33.7473, 0.6782", "529.341, 489.964, 33.8013, 0.6318", "530.002, 489.05, 33.871, 0.547", "530.015, 487.906, 33.9531, 0.6128", "529.836, 486.795, 34.0399, 0.7972", "529.268, 485.853, 34.1958, 0.8356", "528.847, 484.834, 34.386, 0.7776", "528.612, 483.728, 34.4924, 0.841", "528.424, 482.6, 34.5262, 0.8142", "528.299, 481.483, 34.552, 0.7792", "528.515, 480.48, 34.5058, 0.644", "528.414, 479.809, 34.0144, 0.7338", "528.414, 478.664, 33.5829, 0.8504", "528.796, 477.636, 33.2114, 0.8486", "528.986, 476.538, 32.8479, 0.7608", "528.986, 475.402, 32.5405, 0.779", "528.986, 474.259, 32.3364, 0.85", "528.986, 473.115, 32.2336, 0.7996", "529.002, 471.983, 32.1328, 0.675", "529.622, 471.073, 32.0561, 0.597", "530.457, 470.327, 32.0152, 0.6228", "531.033, 469.345, 31.9962, 0.5296", "531.38, 468.259, 31.9945, 0.5846", "531.591, 467.135, 32.0104, 0.4976", "532.072, 466.108, 32.0424, 0.565", "532.189, 464.989, 32.0821, 0.496", "531.989, 463.933, 32.1213, 0.3922", "531.617, 463.215, 32.3131, 0.3136", "531.359, 462.118, 32.4369, 0.2998", "531.132, 460.996, 32.4923, 0.3224", "530.93, 459.883, 32.4828, 0.3578", "530.93, 458.956, 32.2913, 0.4564", "531.063, 457.837, 32.0524, 0.4778", "531.425, 456.802, 31.7139, 0.6148", "532.192, 455.956, 31.4348, 0.6254", "532.63, 454.906, 31.2287, 0.683", "532.646, 453.767, 31.0652, 0.6052", "532.508, 452.641, 30.9585, 0.6702", "531.814, 451.739, 30.9011, 0.9188", "531.02, 450.931, 30.8818, 0.7574", "530.039, 450.341, 30.8756, 0.7354", "529.172, 449.599, 30.8753, 0.7216", "528.871, 448.614, 30.9501, 0.5628", "528.888, 447.477, 31.0122, 0.4582", "528.995, 446.345, 31.0422, 0.4884", "529.266, 445.261, 30.938, 0.6002", "529.865, 444.286, 30.8022, 0.5364", "530.427, 443.3, 30.6071, 0.5894", "530.702, 442.29, 30.3332, 0.5428", "530.816, 441.205, 29.9617, 0.473", "530.816, 440.085, 29.5736, 0.4912", "530.816, 438.941, 29.2583, 0.4954", "530.707, 437.825, 28.9632, 0.6482", "530.702, 436.707, 28.6675, 0.6828", "530.702, 435.563, 28.462, 0.8114", "530.497, 434.452, 28.3144, 0.7358", "530.461, 433.316, 28.1932, 0.7466", "530.237, 432.211, 28.1154, 0.722", "529.996, 431.106, 28.0767, 0.6626", "529.909, 429.967, 28.0692, 0.6222", "529.812, 428.827, 28.0778, 0.664", "529.57, 427.722, 28.1, 0.633", "529.558, 426.578, 28.1302, 0.645", "529.558, 425.434, 28.163, 0.5596", "529.661, 424.423, 28.3441, 0.4646", "530.036, 423.412, 28.4236, 0.4386", "530.748, 422.572, 28.4138, 0.5782", "530.816, 421.435, 28.3973, 0.6118", "530.816, 420.291, 28.3758, 0.6228", "530.524, 419.224, 28.352, 0.663", "530.932, 418.161, 28.3279, 0.6424", "531.502, 417.184, 28.3304, 0.6086", "531.418, 416.06, 28.3497, 0.7528", "530.405, 415.603, 28.3788, 0.9308", "529.619, 414.817, 28.4206, 1.0078", "528.893, 413.955, 28.4749, 1.0058", "528.757, 412.834, 28.5376, 0.7906", "528.642, 411.777, 28.637, 0.5036", "528.711, 410.772, 28.8728, 0.3414", "528.87, 409.668, 29.0825, 0.3044", "529.345, 408.634, 29.1922, 0.3294", "529.443, 407.531, 29.1617, 0.3782", "529.432, 406.539, 28.926, 0.4582", "528.963, 405.502, 28.7, 0.6572", "528.745, 404.389, 28.4987, 0.7798", "528.458, 403.288, 28.3483, 0.83", "527.911, 402.284, 28.2542, 0.8662", "527.365, 401.304, 28.1733, 0.753", "527.27, 400.169, 28.1347, 0.7312", "527.394, 399.034, 28.1117, 0.6942", "527.651, 397.92, 28.103, 0.6096", "527.804, 396.791, 28.1252, 0.5288", "527.996, 395.665, 28.1747, 0.4686", "528.069, 394.526, 28.2215, 0.3784", "528.2, 393.396, 28.2593, 0.3354", "528.299, 392.268, 28.2887, 0.3412", "528.299, 391.124, 28.3108, 0.393", "528.299, 389.98, 28.3296, 0.5176", "528.299, 388.836, 28.3508, 0.613", "528.29, 387.692, 28.3797, 0.7608", "527.939, 386.618, 28.415, 0.718", "527.503, 385.564, 28.4488, 0.5736", "527.384, 384.496, 28.5701, 0.3942", "527.384, 383.383, 28.7008, 0.3178", "527.384, 382.268, 28.8103, 0.3072", "527.384, 381.124, 28.8103, 0.3372", "527.384, 380.075, 28.5726, 0.38", "527.384, 379.231, 28.0756, 0.5222", "527.689, 378.362, 27.44, 0.4824", "527.727, 377.229, 26.922, 0.5056", "527.495, 376.14, 26.5518, 0.5358", "527.384, 375.019, 26.2996, 0.4268", "527.384, 373.875, 26.2136, 0.3402", "527.06, 372.783, 26.2612, 0.303", "526.755, 371.683, 26.3939, 0.322", "526.698, 370.547, 26.5871, 0.388", "526.698, 369.65, 27.0374, 0.361", "526.469, 368.752, 27.578, 0.35", "526.469, 367.627, 28.068, 0.369", "526.469, 366.49, 28.4236, 0.4412", "526.084, 365.507, 28.5902, 0.626", "526.011, 364.374, 28.6684, 0.7198", "526.272, 363.277, 28.6759, 0.7296", "526.589, 362.182, 28.6653, 0.628", "527.299, 361.287, 28.6644, 0.5638", "527.492, 360.172, 28.6762, 0.5286", "526.698, 359.47, 28.6894, 0.5148", "526.182, 358.715, 28.8422, 0.4662", "525.733, 357.72, 29.0016, 0.4896", "524.9, 357.042, 29.029, 0.6692", "524.644, 356.342, 28.7039, 0.7966", "524.638, 355.22, 28.3402, 0.8866", "524.638, 354.076, 28.0179, 0.85", "524.638, 352.947, 27.673, 0.6234", "524.612, 351.811, 27.405, 0.5178", "524.309, 350.708, 27.2378, 0.6266", "524.295, 349.573, 27.1256, 0.721", "524.307, 348.429, 27.0617, 0.7314", "524.622, 347.333, 27.0326, 0.6328", "524.846, 346.218, 27.0547, 0.5668", "525.043, 345.1, 27.1113, 0.5644", "525.385, 344.009, 27.1715, 0.4326", "526.098, 343.118, 27.2342, 0.351", "526.543, 342.07, 27.2908, 0.3232", "526.525, 340.948, 27.3792, 0.359", "526.234, 339.862, 27.4968, 0.4596", "525.857, 338.797, 27.6069, 0.4788", "525.422, 337.753, 27.6746, 0.6404", "524.897, 336.816, 27.6265, 0.5592", "524.876, 335.674, 27.5663, 0.4246", "525.089, 334.583, 27.5321, 0.3264", "525.096, 333.439, 27.4778, 0.3258", "525.271, 332.309, 27.414, 0.359", "525.325, 331.175, 27.3235, 0.4824", "525.325, 330.098, 27.0992, 0.4114", "525.325, 328.956, 26.8999, 0.3602", "525.718, 328.094, 26.7714, 0.3336", "526.24, 327.256, 26.6633, 0.4104", "526.19, 326.154, 26.4925, 0.3972", "526.126, 325.015, 26.3614, 0.4438", "526.126, 323.871, 26.2559, 0.4132", "526.126, 322.727, 26.1467, 0.4672", "526.584, 321.692, 26.0347, 0.4882", "526.693, 320.576, 25.8916, 0.4516", "526.536, 319.464, 25.7337, 0.5218", "526.622, 318.573, 25.3988, 0.4392", "526.794, 317.454, 25.1415, 0.405", "526.926, 316.531, 25.0998, 0.4496", "527.636, 315.933, 25.1667, 0.4668", "528.07, 315.028, 25.214, 0.5868", "527.521, 314.137, 25.1224, 0.6096", "527.498, 313.249, 24.8335, 0.4782", "527.613, 312.134, 24.5952, 0.3892", "527.613, 310.995, 24.4784, 0.3908", "527.613, 310.124, 24.624, 0.5002", "527.72, 309.293, 25.0194, 0.645", "527.956, 308.218, 25.4187, 0.5062", "527.812, 307.115, 25.8087, 0.3976", "527.613, 306.004, 26.0504, 0.3872", "527.613, 305.266, 25.928, 0.359", "527.933, 304.193, 25.7782, 0.3484", "528.176, 303.086, 25.6656, 0.3542", "528.299, 301.952, 25.5833, 0.4732", "528.426, 300.818, 25.5396, 0.395", "528.622, 299.694, 25.5464, 0.3286", "528.798, 298.563, 25.5973, 0.2802", "528.871, 297.426, 25.6469, 0.285", "528.845, 296.283, 25.6956, 0.294", "528.757, 295.197, 25.8404, 0.3114", "528.986, 294.167, 26.0151, 0.3386", "529.332, 293.091, 26.101, 0.4136", "529.526, 291.972, 26.1184, 0.434", "529.77, 290.86, 26.0921, 0.362", "530.075, 289.758, 26.045, 0.3048", "530.444, 288.676, 25.9762, 0.2834", "530.799, 287.589, 25.9025, 0.291", "531.021, 286.471, 25.835, 0.3062", "531.261, 285.363, 25.7569, 0.3278", "531.076, 284.278, 25.6186, 0.3986", "530.832, 283.291, 25.401, 0.3826", "531.045, 282.216, 25.2431, 0.3796", "531.045, 281.074, 25.1574, 0.4732", "531.045, 279.966, 25.1997, 0.3946", "531.045, 278.88, 25.373, 0.3284", "531.045, 277.769, 25.5763, 0.28", "531.045, 276.672, 25.6376, 0.2846", "531.047, 275.547, 25.6337, 0.293", "531.131, 274.409, 25.6066, 0.31", "531.183, 273.27, 25.5615, 0.335", "531.274, 272.132, 25.5139, 0.413", "531.253, 270.99, 25.4834, 0.4032", "531.163, 269.852, 25.4766, 0.4486", "531.311, 268.727, 25.4755, 0.4514", "531.886, 267.754, 25.4736, 0.3952", "532.556, 266.866, 25.471, 0.3608", "532.561, 265.735, 25.4674, 0.4136", "532.245, 264.658, 25.4624, 0.4046", "531.96, 263.571, 25.4554, 0.4508", "531.969, 262.427, 25.4453, 0.457", "532.268, 261.334, 25.4327, 0.3988", "532.53, 260.221, 25.4134, 0.3988", "532.75, 259.103, 25.3845, 0.3338", "532.786, 257.962, 25.3448, 0.3", "532.905, 256.823, 25.293, 0.2748", "533.508, 255.868, 25.2697, 0.2748", "533.951, 254.908, 25.0821, 0.275", "534.302, 253.825, 24.8976, 0.2754", "534.541, 252.706, 24.7414, 0.2764", "534.82, 251.62, 24.6134, 0.2778", "534.636, 250.502, 24.5059, 0.2808", "534.477, 249.405, 24.365, 0.286", "534.431, 248.294, 24.2404, 0.2956", "534.362, 247.173, 24.1382, 0.3144", "534.362, 246.056, 24.1506, 0.3442", "534.7, 245.088, 24.2987, 0.4236", "535.37, 244.252, 24.4406, 0.4534", "536.185, 243.703, 24.5874, 0.3926", "536.193, 242.57, 24.7299, 0.387", "536.287, 241.431, 24.8287, 0.3134", "536.536, 240.321, 24.8822, 0.2542", "537.108, 239.668, 24.92, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_472",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_473",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_19", "dend_12", "dend_9", "dend_8", "dend_1", "dend_0", "apic_19", "apic_18", "apic_1", "dend_16", "dend_13", "dend_11", "dend_10", "dend_7", "dend_2", "apic_13", "apic_2", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "apic_15", "apic_14", "apic_12", "apic_3", "dend_5", "dend_4", "apic_17", "apic_16", "apic_5", "apic_4", "apic_11", "apic_6", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_19", "dend_12", "dend_9", "dend_8", "dend_1", "dend_0", "dend_16", "dend_13", "dend_11", "dend_10", "dend_7", "dend_2", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_3", "dend_5", "dend_4" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_19", "apic_18", "apic_1", "apic_13", "apic_2", "apic_15", "apic_14", "apic_12", "apic_3", "apic_17", "apic_16", "apic_5", "apic_4", "apic_11", "apic_6", "apic_10", "apic_7", "apic_9", "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20041",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.705007"
  }, {
    "group" : "apic",
    "value" : "2.705007"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "85.05132"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.00090976E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.015796905",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.516012",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0010771219",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "7.408866E-9",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.016319761",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.021550491",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.23853439",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.0143474E-4",
    "erev" : "-90.83724"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "3.3269252E-4",
    "erev" : "-90.83724"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.7472439E-4",
    "erev" : "-90.83724"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "6.3080806E-4",
    "erev" : "-90.83724"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.642555E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0092224395",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513445",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513445

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: soma_0
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_19, id: apic_19, parent: apic_0
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_2
create apic_12
public apic_12
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_17, id: apic_17, parent: apic_15
create apic_17
public apic_17
// Section: apic_16, id: apic_16, parent: apic_15
create apic_16
public apic_16
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_11, id: apic_11, parent: apic_5
create apic_11
public apic_11
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: apic_10, id: apic_10, parent: apic_6
create apic_10
public apic_10
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_9, id: apic_9, parent: apic_7
create apic_9
public apic_9
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_472, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_472
// Group: {name=ModelViewParmSubset_473, groups=[], sections=[apic_0, dend_19, dend_12, dend_9, dend_8, dend_1, dend_0, apic_19, apic_18, apic_1, dend_16, dend_13, dend_11, dend_10, dend_7, dend_2, apic_13, apic_2, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, apic_15, apic_14, apic_12, apic_3, dend_5, dend_4, apic_17, apic_16, apic_5, apic_4, apic_11, apic_6, apic_10, apic_7, apic_9, apic_8]}
objref ModelViewParmSubset_473
// Group: {name=dend, groups=[], sections=[dend_19, dend_12, dend_9, dend_8, dend_1, dend_0, dend_16, dend_13, dend_11, dend_10, dend_7, dend_2, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_5, dend_4]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_19, apic_18, apic_1, apic_13, apic_2, apic_15, apic_14, apic_12, apic_3, apic_17, apic_16, apic_5, apic_4, apic_11, apic_6, apic_10, apic_7, apic_9, apic_8]}
objref apic
// Group: {name=OneSecGrp_SectionRef_20041, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_20041
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513445
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5000000000000042)
    connect apic_0(0), soma_0(0.5000000000000042)
    connect dend_19(0), soma_0(0.5000000000000042)
    connect dend_12(0), soma_0(0.5000000000000042)
    connect dend_9(0), soma_0(0.5000000000000042)
    connect dend_8(0), soma_0(0.5000000000000042)
    connect dend_1(0), soma_0(0.5000000000000042)
    connect dend_0(0), soma_0(0.5000000000000042)
    connect axon_1(0), axon_0(1.0)
    connect apic_19(0), apic_0(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_17(0), apic_15(1.0)
    connect apic_16(0), apic_15(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_11(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect apic_10(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_9(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 524.101, 686.629, 56.56, 13.4294 ) }
    soma_0 { pt3dadd( 530.816, 686.629, 56.56, 13.4294 ) }
    soma_0 { pt3dadd( 537.531, 686.629, 56.56, 13.4294 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 530.816, 686.629, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 536.657, 700.445, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 542.499, 714.261, 56.56, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 531.801, 678.648, 53.9342, 0.9152 ) }
    apic_0 { pt3dadd( 531.877, 677.506, 53.3509, 0.9152 ) }
    apic_0 { pt3dadd( 532.18, 676.422, 52.9032, 0.9152 ) }
    apic_0 { pt3dadd( 532.45, 675.356, 52.3978, 0.9152 ) }
    apic_0 { pt3dadd( 532.724, 674.405, 51.7569, 0.9152 ) }
    apic_0 { pt3dadd( 533.046, 673.357, 51.1227, 0.9152 ) }
    apic_0 { pt3dadd( 533.125, 672.248, 50.4596, 0.9152 ) }
    apic_0 { pt3dadd( 533.223, 671.234, 49.7056, 0.9152 ) }
    apic_0 { pt3dadd( 533.645, 670.184, 49.0566, 0.9152 ) }
    apic_0 { pt3dadd( 534.17, 669.171, 48.5358, 0.9152 ) }
    apic_0 { pt3dadd( 534.588, 668.274, 47.955, 0.8008 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 17/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 529.365, 680.363, 50.8936, 0.2288 ) }
    dend_19 { pt3dadd( 529.134, 679.316, 49.4934, 0.3108 ) }
    dend_19 { pt3dadd( 529.052, 678.241, 48.8846, 0.3672 ) }
    dend_19 { pt3dadd( 529.029, 677.152, 48.1925, 0.322 ) }
    dend_19 { pt3dadd( 529.318, 676.052, 47.5815, 0.2796 ) }
    dend_19 { pt3dadd( 529.671, 675.156, 46.9655, 0.2288 ) }
    dend_19 { pt3dadd( 530.128, 674.768, 45.0285, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: soma_0 (entry count 24/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 536.767, 686.169, 64.367, 1.144 ) }
    dend_12 { pt3dadd( 537.909, 686.157, 64.2222, 0.7528 ) }
    dend_12 { pt3dadd( 539.047, 686.058, 64.1684, 0.5046 ) }
    dend_12 { pt3dadd( 539.917, 685.37, 64.1668, 0.4556 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 28/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 524.888, 685.988, 64.1645, 0.6864 ) }
    dend_9 { pt3dadd( 523.822, 685.616, 64.892, 0.6282 ) }
    dend_9 { pt3dadd( 522.89, 684.967, 65.1675, 0.5702 ) }
    dend_9 { pt3dadd( 522.278, 684.041, 65.5645, 0.5122 ) }
    dend_9 { pt3dadd( 522.426, 683.052, 66.0979, 0.6192 ) }
    dend_9 { pt3dadd( 522.827, 682.052, 66.736, 0.6948 ) }
    dend_9 { pt3dadd( 523.47, 681.106, 67.3378, 0.5128 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 524.142, 687.067, 53.7418, 0.2288 ) }
    dend_8 { pt3dadd( 523.038, 686.935, 53.5755, 0.4512 ) }
    dend_8 { pt3dadd( 522.068, 686.399, 53.5066, 0.6432 ) }
    dend_8 { pt3dadd( 521.074, 685.854, 53.4528, 0.7582 ) }
    dend_8 { pt3dadd( 519.995, 685.48, 53.4341, 0.767 ) }
    dend_8 { pt3dadd( 518.872, 685.294, 53.4528, 0.863 ) }
    dend_8 { pt3dadd( 517.729, 685.257, 53.5105, 0.882 ) }
    dend_8 { pt3dadd( 516.586, 685.259, 53.6113, 0.774 ) }
    dend_8 { pt3dadd( 515.468, 685.278, 53.8, 0.583 ) }
    dend_8 { pt3dadd( 514.36, 685.405, 54.0523, 0.4128 ) }
    dend_8 { pt3dadd( 513.491, 686.016, 54.3469, 0.3468 ) }
    dend_8 { pt3dadd( 512.666, 686.788, 54.5728, 0.387 ) }
    dend_8 { pt3dadd( 511.744, 687.417, 54.644, 0.3588 ) }
    dend_8 { pt3dadd( 510.725, 687.912, 54.633, 0.347 ) }
    dend_8 { pt3dadd( 509.643, 688.204, 54.6381, 0.3562 ) }
    dend_8 { pt3dadd( 508.574, 687.967, 54.6596, 0.4538 ) }
    dend_8 { pt3dadd( 507.534, 687.503, 54.6238, 0.473 ) }
    dend_8 { pt3dadd( 506.485, 687.168, 54.4617, 0.6056 ) }
    dend_8 { pt3dadd( 505.402, 687.09, 54.1881, 0.6092 ) }
    dend_8 { pt3dadd( 504.277, 687.085, 53.8829, 0.6478 ) }
    dend_8 { pt3dadd( 503.136, 687.08, 53.622, 0.5662 ) }
    dend_8 { pt3dadd( 501.994, 687.03, 53.4304, 0.4708 ) }
    dend_8 { pt3dadd( 500.896, 686.735, 53.3159, 0.4808 ) }
    dend_8 { pt3dadd( 499.941, 686.122, 53.2706, 0.507 ) }
    dend_8 { pt3dadd( 498.856, 685.834, 53.2706, 0.5174 ) }
    dend_8 { pt3dadd( 497.761, 686.089, 53.2913, 0.4942 ) }
    dend_8 { pt3dadd( 496.7, 686.513, 53.3257, 0.427 ) }
    dend_8 { pt3dadd( 495.716, 687.065, 53.4164, 0.421 ) }
    dend_8 { pt3dadd( 494.656, 687.467, 53.4652, 0.5212 ) }
    dend_8 { pt3dadd( 493.524, 687.591, 53.4985, 0.6242 ) }
    dend_8 { pt3dadd( 492.421, 687.864, 53.4867, 0.758 ) }
    dend_8 { pt3dadd( 491.341, 688.235, 53.4649, 0.8274 ) }
    dend_8 { pt3dadd( 490.331, 688.769, 53.4598, 0.9084 ) }
    dend_8 { pt3dadd( 489.411, 689.449, 53.4772, 0.8316 ) }
    dend_8 { pt3dadd( 488.351, 689.863, 53.5318, 0.875 ) }
    dend_8 { pt3dadd( 487.262, 690.183, 53.6581, 0.971 ) }
    dend_8 { pt3dadd( 486.2, 690.521, 53.8776, 1.071 ) }
    dend_8 { pt3dadd( 485.11, 690.859, 54.075, 0.9498 ) }
    dend_8 { pt3dadd( 484.036, 691.252, 54.2349, 0.8406 ) }
    dend_8 { pt3dadd( 482.98, 691.693, 54.3642, 0.7646 ) }
    dend_8 { pt3dadd( 482.005, 692.291, 54.4718, 0.6948 ) }
    dend_8 { pt3dadd( 480.939, 692.702, 54.5644, 0.6794 ) }
    dend_8 { pt3dadd( 479.859, 693.076, 54.6552, 0.7832 ) }
    dend_8 { pt3dadd( 478.774, 693.429, 54.7795, 0.7906 ) }
    dend_8 { pt3dadd( 477.71, 693.616, 55.0197, 0.5582 ) }
    dend_8 { pt3dadd( 476.637, 693.627, 55.3322, 0.4064 ) }
    dend_8 { pt3dadd( 475.5, 693.51, 55.5268, 0.373 ) }
    dend_8 { pt3dadd( 474.395, 693.605, 55.5232, 0.4782 ) }
    dend_8 { pt3dadd( 473.36, 694.058, 55.4084, 0.5502 ) }
    dend_8 { pt3dadd( 472.57, 694.879, 55.2331, 0.593 ) }
    dend_8 { pt3dadd( 471.818, 695.669, 54.927, 0.656 ) }
    dend_8 { pt3dadd( 470.809, 696.145, 54.605, 0.6244 ) }
    dend_8 { pt3dadd( 469.684, 696.315, 54.4093, 0.5988 ) }
    dend_8 { pt3dadd( 468.606, 696.67, 54.3547, 0.619 ) }
    dend_8 { pt3dadd( 467.545, 697.093, 54.3542, 0.5586 ) }
    dend_8 { pt3dadd( 466.421, 697.307, 54.3897, 0.4626 ) }
    dend_8 { pt3dadd( 465.307, 697.554, 54.4667, 0.436 ) }
    dend_8 { pt3dadd( 464.22, 697.4, 54.6255, 0.5674 ) }
    dend_8 { pt3dadd( 463.279, 696.755, 54.7204, 0.6206 ) }
    dend_8 { pt3dadd( 462.273, 696.211, 54.726, 0.5 ) }
    dend_8 { pt3dadd( 461.188, 695.927, 54.5978, 0.4244 ) }
    dend_8 { pt3dadd( 460.105, 696.11, 54.3301, 0.4808 ) }
    dend_8 { pt3dadd( 459.065, 696.471, 53.9753, 0.5484 ) }
    dend_8 { pt3dadd( 458.076, 697.04, 53.6687, 0.621 ) }
    dend_8 { pt3dadd( 457.251, 697.831, 53.4444, 0.5572 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_8 { pt3dadd( 456.601, 698.772, 53.2991, 0.484 ) }
    dend_8 { pt3dadd( 455.929, 699.698, 53.2232, 0.36 ) }
    dend_8 { pt3dadd( 455.169, 700.543, 53.1944, 0.3014 ) }
    dend_8 { pt3dadd( 454.103, 700.92, 53.1843, 0.2768 ) }
    dend_8 { pt3dadd( 452.963, 700.83, 53.1756, 0.279 ) }
    dend_8 { pt3dadd( 451.832, 700.925, 53.1857, 0.2826 ) }
    dend_8 { pt3dadd( 450.784, 701.339, 53.2067, 0.2892 ) }
    dend_8 { pt3dadd( 449.806, 701.82, 53.0989, 0.303 ) }
    dend_8 { pt3dadd( 448.753, 702.183, 52.943, 0.3216 ) }
    dend_8 { pt3dadd( 447.679, 702.573, 52.8497, 0.3876 ) }
    dend_8 { pt3dadd( 446.634, 702.986, 52.859, 0.36 ) }
    dend_8 { pt3dadd( 445.585, 703.18, 53.0438, 0.3492 ) }
    dend_8 { pt3dadd( 444.524, 703.41, 53.3198, 0.3612 ) }
    dend_8 { pt3dadd( 443.436, 703.759, 53.531, 0.4564 ) }
    dend_8 { pt3dadd( 442.369, 704.127, 53.6141, 0.509 ) }
    dend_8 { pt3dadd( 441.292, 704.413, 53.5634, 0.5224 ) }
    dend_8 { pt3dadd( 440.163, 704.587, 53.4836, 0.4986 ) }
    dend_8 { pt3dadd( 439.103, 704.968, 53.3974, 0.4596 ) }
    dend_8 { pt3dadd( 438.181, 705.643, 53.3338, 0.362 ) }
    dend_8 { pt3dadd( 437.216, 706.259, 53.3142, 0.3048 ) }
    dend_8 { pt3dadd( 436.194, 706.748, 53.3358, 0.2834 ) }
    dend_8 { pt3dadd( 435.109, 707.085, 53.3865, 0.2908 ) }
    dend_8 { pt3dadd( 434.157, 707.704, 53.4551, 0.3056 ) }
    dend_8 { pt3dadd( 433.344, 708.501, 53.5598, 0.3268 ) }
    dend_8 { pt3dadd( 432.471, 709.184, 53.7342, 0.3978 ) }
    dend_8 { pt3dadd( 431.412, 709.563, 53.9328, 0.374 ) }
    dend_8 { pt3dadd( 430.32, 709.884, 54.0862, 0.4002 ) }
    dend_8 { pt3dadd( 429.265, 710.323, 54.196, 0.3362 ) }
    dend_8 { pt3dadd( 428.196, 710.726, 54.262, 0.3044 ) }
    dend_8 { pt3dadd( 427.164, 711.218, 54.2875, 0.2826 ) }
    dend_8 { pt3dadd( 426.151, 711.72, 54.3043, 0.289 ) }
    dend_8 { pt3dadd( 425.122, 712.155, 54.3281, 0.3024 ) }
    dend_8 { pt3dadd( 424.036, 712.506, 54.2718, 0.3212 ) }
    dend_8 { pt3dadd( 422.994, 712.874, 54.0543, 0.3866 ) }
    dend_8 { pt3dadd( 422.067, 713.277, 53.6049, 0.3586 ) }
    dend_8 { pt3dadd( 421.224, 713.795, 52.9869, 0.3452 ) }
    dend_8 { pt3dadd( 420.475, 714.561, 52.3429, 0.3602 ) }
    dend_8 { pt3dadd( 419.835, 715.494, 51.7969, 0.4252 ) }
    dend_8 { pt3dadd( 419.224, 716.455, 51.4245, 0.594 ) }
    dend_8 { pt3dadd( 418.631, 717.414, 51.2338, 0.6706 ) }
    dend_8 { pt3dadd( 417.935, 718.302, 51.1484, 0.5882 ) }
    dend_8 { pt3dadd( 417.197, 719.168, 51.0353, 0.6098 ) }
    dend_8 { pt3dadd( 416.7, 720.096, 50.7741, 0.72 ) }
    dend_8 { pt3dadd( 416.403, 721.116, 50.3681, 0.81 ) }
    dend_8 { pt3dadd( 416.025, 722.184, 49.9408, 0.8466 ) }
    dend_8 { pt3dadd( 415.526, 723.184, 49.4936, 0.861 ) }
    dend_8 { pt3dadd( 414.811, 724.035, 49.0594, 0.918 ) }
    dend_8 { pt3dadd( 413.924, 724.752, 48.7077, 0.8758 ) }
    dend_8 { pt3dadd( 412.965, 725.35, 48.4098, 0.8298 ) }
    dend_8 { pt3dadd( 411.988, 725.885, 48.116, 0.8166 ) }
    dend_8 { pt3dadd( 410.944, 726.291, 47.8369, 0.672 ) }
    dend_8 { pt3dadd( 409.861, 726.542, 47.6218, 0.529 ) }
    dend_8 { pt3dadd( 408.774, 726.761, 47.5762, 0.572 ) }
    dend_8 { pt3dadd( 407.698, 726.904, 47.6706, 0.5274 ) }
    dend_8 { pt3dadd( 406.566, 726.973, 47.7767, 0.5912 ) }
    dend_8 { pt3dadd( 405.524, 727.339, 47.7156, 0.6848 ) }
    dend_8 { pt3dadd( 404.64, 727.887, 47.4499, 0.7504 ) }
    dend_8 { pt3dadd( 403.727, 728.529, 47.1156, 0.7092 ) }
    dend_8 { pt3dadd( 402.591, 728.631, 46.814, 0.7362 ) }
    dend_8 { pt3dadd( 401.483, 728.375, 46.559, 0.7436 ) }
    dend_8 { pt3dadd( 400.377, 728.664, 46.3593, 0.734 ) }
    dend_8 { pt3dadd( 399.304, 729.056, 46.2053, 0.6006 ) }
    dend_8 { pt3dadd( 398.188, 729.235, 46.0774, 0.6866 ) }
    dend_8 { pt3dadd( 397.111, 729.515, 45.9799, 0.5992 ) }
    dend_8 { pt3dadd( 396.102, 729.984, 45.7512, 0.4932 ) }
    dend_8 { pt3dadd( 395.278, 730.454, 45.239, 0.4814 ) }
    dend_8 { pt3dadd( 394.43, 730.801, 44.5035, 0.4786 ) }
    dend_8 { pt3dadd( 393.617, 731.509, 43.7237, 0.6086 ) }
    dend_8 { pt3dadd( 392.711, 732.185, 43.0097, 0.651 ) }
    dend_8 { pt3dadd( 391.615, 732.39, 42.3951, 0.551 ) }
    dend_8 { pt3dadd( 390.582, 732.465, 41.781, 0.5444 ) }
    dend_8 { pt3dadd( 389.516, 732.868, 41.3442, 0.5788 ) }
    dend_8 { pt3dadd( 388.555, 733.472, 41.0444, 0.6466 ) }
    dend_8 { pt3dadd( 387.629, 734.138, 40.8293, 0.7522 ) }
    dend_8 { pt3dadd( 386.592, 734.601, 40.663, 0.8178 ) }
    dend_8 { pt3dadd( 385.489, 734.903, 40.5233, 0.8852 ) }
    dend_8 { pt3dadd( 384.418, 735.28, 40.3668, 0.8132 ) }
    dend_8 { pt3dadd( 383.337, 735.524, 40.1386, 0.723 ) }
    dend_8 { pt3dadd( 382.238, 735.495, 39.8378, 0.5734 ) }
    dend_8 { pt3dadd( 381.121, 735.291, 39.587, 0.4406 ) }
    dend_8 { pt3dadd( 379.98, 735.249, 39.403, 0.4068 ) }
    dend_8 { pt3dadd( 379.007, 734.906, 39.2, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 82/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 536.423, 690.399, 53.2815, 0.2288 ) }
    dend_1 { pt3dadd( 537.497, 690.715, 53.1241, 0.3482 ) }
    dend_1 { pt3dadd( 538.63, 690.811, 53.0706, 0.4002 ) }
    dend_1 { pt3dadd( 539.601, 691.111, 52.8167, 0.5606 ) }
    dend_1 { pt3dadd( 540.316, 691.956, 52.5361, 0.5466 ) }
    dend_1 { pt3dadd( 541.006, 692.868, 52.2894, 0.6588 ) }
    dend_1 { pt3dadd( 541.957, 693.435, 52.0167, 0.6556 ) }
    dend_1 { pt3dadd( 543.086, 693.47, 51.8641, 0.7584 ) }
    dend_1 { pt3dadd( 544.211, 693.331, 51.8448, 0.65 ) }
    dend_1 { pt3dadd( 545.306, 693.074, 51.8067, 0.53 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 92/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 525.468, 688.281, 46.846, 0.2288 ) }
    dend_0 { pt3dadd( 524.389, 688.647, 46.4195, 0.3426 ) }
    dend_0 { pt3dadd( 523.294, 688.785, 46.2462, 0.4258 ) }
    dend_0 { pt3dadd( 522.17, 688.583, 46.048, 0.4324 ) }
    dend_0 { pt3dadd( 521.057, 688.574, 45.7792, 0.475 ) }
    dend_0 { pt3dadd( 519.953, 688.751, 45.4334, 0.6354 ) }
    dend_0 { pt3dadd( 518.842, 688.681, 45.0794, 0.7678 ) }
    dend_0 { pt3dadd( 517.78, 688.281, 44.6989, 0.6696 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 516.73, 687.886, 44.2548, 0.5556 ) }
    dend_0 { pt3dadd( 515.629, 687.663, 43.7819, 0.4708 ) }
    dend_0 { pt3dadd( 514.602, 687.847, 43.2555, 0.3828 ) }
    dend_0 { pt3dadd( 513.926, 688.534, 42.6059, 0.3446 ) }
    dend_0 { pt3dadd( 513.451, 689.467, 41.9308, 0.353 ) }
    dend_0 { pt3dadd( 512.865, 690.429, 41.3543, 0.44 ) }
    dend_0 { pt3dadd( 512.207, 691.342, 40.8758, 0.484 ) }
    dend_0 { pt3dadd( 511.474, 692.199, 40.514, 0.4496 ) }
    dend_0 { pt3dadd( 510.639, 692.977, 40.313, 0.4888 ) }
    dend_0 { pt3dadd( 509.717, 693.579, 40.3024, 0.5218 ) }
    dend_0 { pt3dadd( 508.636, 693.918, 40.3813, 0.5456 ) }
    dend_0 { pt3dadd( 507.493, 693.935, 40.4452, 0.5424 ) }
    dend_0 { pt3dadd( 506.357, 693.817, 40.4611, 0.537 ) }
    dend_0 { pt3dadd( 505.273, 694.0, 40.3421, 0.5266 ) }
    dend_0 { pt3dadd( 504.679, 694.859, 40.2304, 0.5066 ) }
    dend_0 { pt3dadd( 504.275, 695.578, 40.1867, 0.4748 ) }
    dend_0 { pt3dadd( 503.489, 696.379, 40.154, 0.3898 ) }
    dend_0 { pt3dadd( 502.533, 696.968, 40.049, 0.3574 ) }
    dend_0 { pt3dadd( 501.556, 697.448, 39.8261, 0.3766 ) }
    dend_0 { pt3dadd( 500.545, 697.874, 39.5438, 0.4846 ) }
    dend_0 { pt3dadd( 499.449, 698.16, 39.2921, 0.5636 ) }
    dend_0 { pt3dadd( 498.425, 698.605, 39.118, 0.6114 ) }
    dend_0 { pt3dadd( 497.615, 699.385, 39.0628, 0.7204 ) }
    dend_0 { pt3dadd( 496.876, 700.245, 39.1216, 0.5946 ) }
    dend_0 { pt3dadd( 495.986, 700.896, 39.1692, 0.583 ) }
    dend_0 { pt3dadd( 494.917, 701.218, 39.2003, 0.6288 ) }
    dend_0 { pt3dadd( 493.805, 701.196, 39.314, 0.6138 ) }
    dend_0 { pt3dadd( 492.698, 701.01, 39.4453, 0.6144 ) }
    dend_0 { pt3dadd( 491.576, 700.953, 39.5343, 0.4798 ) }
    dend_0 { pt3dadd( 490.568, 701.4, 39.5886, 0.4284 ) }
    dend_0 { pt3dadd( 489.752, 702.195, 39.6169, 0.5162 ) }
    dend_0 { pt3dadd( 489.139, 703.16, 39.6119, 0.4752 ) }
    dend_0 { pt3dadd( 488.525, 704.123, 39.5696, 0.4752 ) }
    dend_0 { pt3dadd( 487.882, 705.065, 39.4996, 0.564 ) }
    dend_0 { pt3dadd( 487.032, 705.76, 39.3686, 0.7538 ) }
    dend_0 { pt3dadd( 486.057, 706.323, 39.2006, 0.7538 ) }
    dend_0 { pt3dadd( 485.099, 706.944, 39.0662, 0.6346 ) }
    dend_0 { pt3dadd( 484.115, 707.507, 39.0102, 0.534 ) }
    dend_0 { pt3dadd( 483.257, 708.203, 39.0527, 0.4486 ) }
    dend_0 { pt3dadd( 482.616, 709.129, 39.1076, 0.4866 ) }
    dend_0 { pt3dadd( 482.079, 710.109, 39.0771, 0.518 ) }
    dend_0 { pt3dadd( 481.484, 711.067, 39.0034, 0.5386 ) }
    dend_0 { pt3dadd( 480.718, 711.906, 38.9388, 0.5282 ) }
    dend_0 { pt3dadd( 479.834, 712.628, 38.8895, 0.5174 ) }
    dend_0 { pt3dadd( 479.065, 713.46, 38.8676, 0.458 ) }
    dend_0 { pt3dadd( 478.751, 714.492, 38.9337, 0.5354 ) }
    dend_0 { pt3dadd( 478.941, 715.583, 39.037, 0.4578 ) }
    dend_0 { pt3dadd( 479.468, 716.588, 39.0891, 0.4716 ) }
    dend_0 { pt3dadd( 480.18, 717.471, 39.0384, 0.4174 ) }
    dend_0 { pt3dadd( 480.824, 718.378, 38.85, 0.4748 ) }
    dend_0 { pt3dadd( 481.273, 719.414, 38.6022, 0.5006 ) }
    dend_0 { pt3dadd( 481.527, 720.526, 38.3303, 0.482 ) }
    dend_0 { pt3dadd( 481.464, 721.655, 38.0377, 0.5432 ) }
    dend_0 { pt3dadd( 480.939, 722.644, 37.7098, 0.6494 ) }
    dend_0 { pt3dadd( 480.162, 723.38, 37.2529, 0.6532 ) }
    dend_0 { pt3dadd( 479.194, 723.7, 36.6559, 0.6818 ) }
    dend_0 { pt3dadd( 478.12, 723.85, 35.9996, 0.6298 ) }
    dend_0 { pt3dadd( 477.169, 724.413, 35.3461, 0.585 ) }
    dend_0 { pt3dadd( 476.531, 725.329, 34.7133, 0.71 ) }
    dend_0 { pt3dadd( 475.968, 726.31, 34.1578, 0.8486 ) }
    dend_0 { pt3dadd( 475.628, 727.386, 33.6781, 0.869 ) }
    dend_0 { pt3dadd( 475.444, 728.444, 33.1691, 0.683 ) }
    dend_0 { pt3dadd( 475.435, 729.546, 32.6598, 0.5084 ) }
    dend_0 { pt3dadd( 475.372, 730.676, 32.296, 0.5034 ) }
    dend_0 { pt3dadd( 475.083, 731.76, 32.0617, 0.5496 ) }
    dend_0 { pt3dadd( 474.984, 732.87, 31.7422, 0.5932 ) }
    dend_0 { pt3dadd( 474.945, 734.0, 31.3664, 0.6502 ) }
    dend_0 { pt3dadd( 474.698, 735.107, 30.9537, 0.642 ) }
    dend_0 { pt3dadd( 474.509, 736.077, 30.3481, 0.494 ) }
    dend_0 { pt3dadd( 474.379, 737.138, 29.6593, 0.4074 ) }
    dend_0 { pt3dadd( 473.745, 737.941, 28.9282, 0.478 ) }
    dend_0 { pt3dadd( 472.953, 737.946, 28.2915, 0.4036 ) }
    dend_0 { pt3dadd( 472.32, 738.894, 27.8264, 0.3446 ) }
    dend_0 { pt3dadd( 471.426, 739.579, 27.5033, 0.31 ) }
    dend_0 { pt3dadd( 470.542, 740.223, 27.2938, 0.3412 ) }
    dend_0 { pt3dadd( 470.049, 741.246, 27.1446, 0.3944 ) }
    dend_0 { pt3dadd( 469.755, 742.342, 26.9895, 0.5136 ) }
    dend_0 { pt3dadd( 469.726, 743.481, 26.8153, 0.6356 ) }
    dend_0 { pt3dadd( 469.726, 744.618, 26.5821, 0.6572 ) }
    dend_0 { pt3dadd( 469.726, 745.747, 26.2772, 0.5452 ) }
    dend_0 { pt3dadd( 469.695, 746.85, 25.9014, 0.3898 ) }
    dend_0 { pt3dadd( 468.882, 747.603, 25.5083, 0.305 ) }
    dend_0 { pt3dadd( 468.474, 748.558, 25.0748, 0.305 ) }
    dend_0 { pt3dadd( 468.697, 749.549, 24.36, 0.2288 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 84/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 542.499, 714.261, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 548.34, 728.077, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 554.181, 741.893, 56.56, 1.0 ) }
    // Section: apic_19, id: apic_19, parent: apic_0 (entry count 87/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 534.588, 668.274, 47.955, 0.8008 ) }
    apic_19 { pt3dadd( 533.864, 668.191, 44.3442, 0.8008 ) }
    apic_19 { pt3dadd( 533.226, 668.157, 42.4007, 0.8008 ) }
    apic_19 { pt3dadd( 532.462, 668.28, 41.5313, 0.8008 ) }
    apic_19 { pt3dadd( 531.418, 668.746, 40.7856, 0.8008 ) }
    apic_19 { pt3dadd( 530.372, 669.211, 40.1481, 0.8008 ) }
    apic_19 { pt3dadd( 529.395, 669.726, 39.5158, 0.8008 ) }
    apic_19 { pt3dadd( 528.447, 670.262, 38.8702, 0.8008 ) }
    apic_19 { pt3dadd( 527.497, 670.797, 38.2393, 0.8008 ) }
    apic_19 { pt3dadd( 526.548, 671.331, 37.5939, 0.8008 ) }
    apic_19 { pt3dadd( 525.598, 671.867, 36.9275, 0.8008 ) }
    apic_19 { pt3dadd( 524.649, 672.402, 36.2729, 0.8008 ) }
    apic_19 { pt3dadd( 523.6, 672.804, 35.744, 0.8008 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_19 { pt3dadd( 522.509, 673.149, 35.3492, 0.8008 ) }
    apic_19 { pt3dadd( 521.383, 673.328, 35.0426, 0.8008 ) }
    apic_19 { pt3dadd( 520.247, 673.464, 34.7816, 0.8008 ) }
    apic_19 { pt3dadd( 519.423, 672.714, 34.5271, 0.8008 ) }
    apic_19 { pt3dadd( 518.624, 671.895, 34.2482, 0.8008 ) }
    apic_19 { pt3dadd( 517.75, 671.662, 33.7053, 0.8008 ) }
    apic_19 { pt3dadd( 516.842, 671.831, 33.0246, 0.8008 ) }
    apic_19 { pt3dadd( 516.768, 672.379, 32.3086, 0.8008 ) }
    apic_19 { pt3dadd( 517.348, 673.062, 31.5403, 0.8008 ) }
    apic_19 { pt3dadd( 516.819, 673.96, 30.8762, 0.8008 ) }
    apic_19 { pt3dadd( 515.802, 674.287, 30.2134, 0.8008 ) }
    apic_19 { pt3dadd( 514.724, 674.435, 29.5263, 0.8008 ) }
    apic_19 { pt3dadd( 514.122, 674.851, 28.7818, 0.8008 ) }
    apic_19 { pt3dadd( 514.301, 675.785, 27.9446, 0.8008 ) }
    apic_19 { pt3dadd( 513.22, 675.986, 27.2163, 0.8008 ) }
    apic_19 { pt3dadd( 512.331, 675.384, 26.4519, 0.8008 ) }
    apic_19 { pt3dadd( 511.396, 675.032, 25.7275, 0.8008 ) }
    apic_19 { pt3dadd( 510.734, 674.77, 24.9925, 0.8008 ) }
    apic_19 { pt3dadd( 510.407, 674.024, 23.0258, 0.8008 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 19/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 534.588, 668.274, 47.955, 0.8008 ) }
    apic_18 { pt3dadd( 534.439, 666.576, 45.1629, 0.6864 ) }
    apic_18 { pt3dadd( 534.171, 665.649, 43.5624, 0.483 ) }
    apic_18 { pt3dadd( 533.328, 665.183, 42.8411, 0.3936 ) }
    apic_18 { pt3dadd( 532.233, 665.347, 42.1142, 0.421 ) }
    apic_18 { pt3dadd( 531.381, 666.049, 41.3977, 0.4476 ) }
    apic_18 { pt3dadd( 530.691, 666.962, 40.8094, 0.3878 ) }
    apic_18 { pt3dadd( 530.04, 667.887, 40.29, 0.3478 ) }
    apic_18 { pt3dadd( 529.234, 668.432, 39.6766, 0.3886 ) }
    apic_18 { pt3dadd( 528.176, 668.477, 39.1885, 0.3622 ) }
    apic_18 { pt3dadd( 527.615, 667.659, 38.9175, 0.3518 ) }
    apic_18 { pt3dadd( 526.749, 666.993, 38.537, 0.3734 ) }
    apic_18 { pt3dadd( 526.032, 666.547, 37.8272, 0.4444 ) }
    apic_18 { pt3dadd( 525.193, 666.661, 36.9331, 0.6556 ) }
    apic_18 { pt3dadd( 524.568, 667.505, 35.947, 0.6598 ) }
    apic_18 { pt3dadd( 523.672, 667.934, 34.8788, 0.4872 ) }
    apic_18 { pt3dadd( 522.745, 667.484, 33.7876, 0.3588 ) }
    apic_18 { pt3dadd( 522.388, 666.657, 32.6654, 0.3334 ) }
    apic_18 { pt3dadd( 522.702, 665.807, 31.542, 0.3984 ) }
    apic_18 { pt3dadd( 523.393, 665.178, 30.4525, 0.4322 ) }
    apic_18 { pt3dadd( 524.12, 664.64, 28.0997, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 40/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 534.588, 668.274, 47.955, 0.8008 ) }
    apic_1 { pt3dadd( 534.905, 667.145, 47.5283, 0.8008 ) }
    apic_1 { pt3dadd( 534.933, 666.024, 47.2956, 0.8008 ) }
    apic_1 { pt3dadd( 534.932, 664.881, 47.1176, 0.8008 ) }
    apic_1 { pt3dadd( 534.924, 663.765, 46.8779, 0.8008 ) }
    apic_1 { pt3dadd( 534.858, 662.636, 46.6214, 0.8008 ) }
    apic_1 { pt3dadd( 534.427, 661.578, 46.4131, 0.8008 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 47/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 539.917, 685.37, 64.1668, 0.4556 ) }
    dend_16 { pt3dadd( 540.414, 685.692, 63.9912, 0.4284 ) }
    dend_16 { pt3dadd( 541.247, 686.319, 63.6387, 0.5272 ) }
    dend_16 { pt3dadd( 542.15, 686.9, 63.2276, 0.4428 ) }
    dend_16 { pt3dadd( 543.214, 687.169, 62.8995, 0.4422 ) }
    dend_16 { pt3dadd( 544.344, 686.991, 62.65, 0.3686 ) }
    dend_16 { pt3dadd( 545.244, 687.403, 62.4744, 0.359 ) }
    dend_16 { pt3dadd( 546.22, 687.899, 62.3784, 0.409 ) }
    dend_16 { pt3dadd( 547.323, 688.204, 62.3319, 0.4022 ) }
    dend_16 { pt3dadd( 548.328, 687.852, 62.3, 0.4168 ) }
    dend_16 { pt3dadd( 549.302, 687.812, 62.2432, 0.5382 ) }
    dend_16 { pt3dadd( 550.282, 688.389, 62.1482, 0.5356 ) }
    dend_16 { pt3dadd( 551.114, 689.153, 62.0547, 0.491 ) }
    dend_16 { pt3dadd( 551.867, 690.014, 61.98, 0.373 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 61/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 539.917, 685.37, 64.1668, 0.4556 ) }
    dend_13 { pt3dadd( 540.723, 684.694, 64.7391, 0.4576 ) }
    dend_13 { pt3dadd( 541.471, 683.944, 66.0848, 0.4864 ) }
    dend_13 { pt3dadd( 542.284, 683.587, 66.7257, 0.4126 ) }
    dend_13 { pt3dadd( 543.172, 683.95, 67.4262, 0.3956 ) }
    dend_13 { pt3dadd( 544.051, 684.674, 68.0274, 0.4668 ) }
    dend_13 { pt3dadd( 545.0, 685.297, 68.5779, 0.5576 ) }
    dend_13 { pt3dadd( 546.083, 685.625, 69.1158, 0.4688 ) }
    dend_13 { pt3dadd( 547.193, 685.612, 69.734, 0.408 ) }
    dend_13 { pt3dadd( 547.95, 685.15, 70.6079, 0.4788 ) }
    dend_13 { pt3dadd( 548.073, 684.518, 71.7945, 0.4052 ) }
    dend_13 { pt3dadd( 548.073, 683.873, 73.2214, 0.3478 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 73/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 523.47, 681.106, 67.3378, 0.5128 ) }
    dend_11 { pt3dadd( 524.106, 679.828, 67.7328, 0.2288 ) }
    dend_11 { pt3dadd( 524.469, 678.851, 68.173, 0.2848 ) }
    dend_11 { pt3dadd( 523.817, 677.911, 68.3242, 0.294 ) }
    dend_11 { pt3dadd( 523.141, 676.993, 68.4435, 0.31 ) }
    dend_11 { pt3dadd( 522.283, 676.236, 68.5339, 0.3426 ) }
    dend_11 { pt3dadd( 521.426, 675.478, 68.5989, 0.3896 ) }
    dend_11 { pt3dadd( 520.451, 674.897, 68.6445, 0.5408 ) }
    dend_11 { pt3dadd( 519.37, 674.756, 68.6773, 0.511 ) }
    dend_11 { pt3dadd( 518.241, 674.946, 68.7232, 0.5894 ) }
    dend_11 { pt3dadd( 517.16, 674.762, 68.7817, 0.5422 ) }
    dend_11 { pt3dadd( 516.115, 674.3, 68.8506, 0.4748 ) }
    dend_11 { pt3dadd( 515.429, 673.5, 68.9923, 0.4818 ) }
    dend_11 { pt3dadd( 514.956, 672.504, 69.2196, 0.5386 ) }
    dend_11 { pt3dadd( 514.173, 671.797, 69.4226, 0.4318 ) }
    dend_11 { pt3dadd( 513.131, 671.333, 69.5321, 0.3496 ) }
    dend_11 { pt3dadd( 512.089, 670.869, 69.5666, 0.3204 ) }
    dend_11 { pt3dadd( 511.047, 670.406, 69.5442, 0.3548 ) }
    dend_11 { pt3dadd( 510.004, 669.942, 69.4848, 0.445 ) }
    dend_11 { pt3dadd( 508.889, 670.008, 69.4434, 0.4868 ) }
    dend_11 { pt3dadd( 507.799, 669.823, 69.4501, 0.485 ) }
    dend_11 { pt3dadd( 506.871, 669.263, 69.5215, 0.41 ) }
    dend_11 { pt3dadd( 506.396, 668.23, 69.6842, 0.3908 ) }
    dend_11 { pt3dadd( 505.923, 667.197, 69.9171, 0.4578 ) }
    dend_11 { pt3dadd( 505.448, 666.164, 70.2019, 0.5416 ) }
    dend_11 { pt3dadd( 504.973, 665.131, 70.5214, 0.437 ) }
    dend_11 { pt3dadd( 504.461, 664.121, 70.8688, 0.3592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( 503.895, 663.138, 71.2398, 0.3396 ) }
    dend_11 { pt3dadd( 503.331, 662.155, 71.6257, 0.3844 ) }
    dend_11 { pt3dadd( 502.766, 661.174, 72.0247, 0.529 ) }
    dend_11 { pt3dadd( 502.226, 660.181, 72.4399, 0.4996 ) }
    dend_11 { pt3dadd( 501.713, 659.175, 72.8734, 0.5154 ) }
    dend_11 { pt3dadd( 501.199, 658.171, 73.3183, 0.6632 ) }
    dend_11 { pt3dadd( 500.659, 657.186, 73.7708, 0.82 ) }
    dend_11 { pt3dadd( 499.929, 656.349, 74.2484, 0.7632 ) }
    dend_11 { pt3dadd( 499.2, 655.513, 74.732, 0.7438 ) }
    dend_11 { pt3dadd( 498.47, 654.676, 75.203, 0.7482 ) }
    dend_11 { pt3dadd( 498.0, 653.732, 75.612, 0.5592 ) }
    dend_11 { pt3dadd( 498.008, 652.588, 75.8957, 0.481 ) }
    dend_11 { pt3dadd( 498.215, 651.464, 76.0757, 0.3864 ) }
    dend_11 { pt3dadd( 498.441, 650.342, 76.1734, 0.4228 ) }
    dend_11 { pt3dadd( 498.122, 649.372, 76.2143, 0.3794 ) }
    dend_11 { pt3dadd( 497.349, 648.529, 76.2208, 0.3798 ) }
    dend_11 { pt3dadd( 496.576, 647.685, 76.2126, 0.4438 ) }
    dend_11 { pt3dadd( 496.449, 646.6, 76.2014, 0.4848 ) }
    dend_11 { pt3dadd( 496.48, 645.456, 76.1863, 0.4824 ) }
    dend_11 { pt3dadd( 496.187, 644.374, 76.1634, 0.3988 ) }
    dend_11 { pt3dadd( 495.743, 643.319, 76.1306, 0.3988 ) }
    dend_11 { pt3dadd( 495.113, 642.418, 76.0872, 0.3338 ) }
    dend_11 { pt3dadd( 494.166, 641.777, 76.0337, 0.2998 ) }
    dend_11 { pt3dadd( 493.217, 641.136, 75.9713, 0.2742 ) }
    dend_11 { pt3dadd( 492.435, 640.581, 75.7708, 0.2736 ) }
    dend_11 { pt3dadd( 491.602, 639.832, 75.6101, 0.2728 ) }
    dend_11 { pt3dadd( 490.609, 639.297, 75.4874, 0.2712 ) }
    dend_11 { pt3dadd( 490.116, 638.318, 75.4004, 0.2684 ) }
    dend_11 { pt3dadd( 489.631, 637.338, 75.3455, 0.2626 ) }
    dend_11 { pt3dadd( 488.488, 637.322, 75.32, 0.2542 ) }
    dend_11 { pt3dadd( 487.344, 637.322, 75.32, 0.2288 ) }
    dend_11 { pt3dadd( 486.2, 637.322, 75.32, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 32/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 523.47, 681.106, 67.3378, 0.5128 ) }
    dend_10 { pt3dadd( 523.036, 680.976, 68.1733, 0.3686 ) }
    dend_10 { pt3dadd( 522.437, 680.844, 69.2219, 0.3068 ) }
    dend_10 { pt3dadd( 521.353, 681.205, 70.0717, 0.3366 ) }
    dend_10 { pt3dadd( 520.304, 681.128, 70.7599, 0.38 ) }
    dend_10 { pt3dadd( 519.657, 680.253, 71.4011, 0.516 ) }
    dend_10 { pt3dadd( 519.113, 679.283, 72.0292, 0.4994 ) }
    dend_10 { pt3dadd( 518.57, 678.312, 72.6284, 0.3986 ) }
    dend_10 { pt3dadd( 517.956, 677.42, 73.2617, 0.3252 ) }
    dend_10 { pt3dadd( 517.303, 676.574, 73.9724, 0.3236 ) }
    dend_10 { pt3dadd( 516.456, 676.44, 74.7261, 0.3548 ) }
    dend_10 { pt3dadd( 515.869, 677.256, 75.3984, 0.4746 ) }
    dend_10 { pt3dadd( 515.541, 678.353, 75.9385, 0.3972 ) }
    dend_10 { pt3dadd( 515.435, 679.454, 76.4786, 0.3326 ) }
    dend_10 { pt3dadd( 515.332, 680.555, 77.0157, 0.2882 ) }
    dend_10 { pt3dadd( 515.124, 681.58, 77.544, 0.2994 ) }
    dend_10 { pt3dadd( 514.062, 681.966, 78.0321, 0.3232 ) }
    dend_10 { pt3dadd( 513.0, 682.351, 78.4963, 0.3542 ) }
    dend_10 { pt3dadd( 511.938, 682.737, 78.9398, 0.4734 ) }
    dend_10 { pt3dadd( 510.827, 682.863, 79.3198, 0.395 ) }
    dend_10 { pt3dadd( 509.684, 682.815, 79.6398, 0.3288 ) }
    dend_10 { pt3dadd( 508.541, 682.767, 79.9358, 0.2808 ) }
    dend_10 { pt3dadd( 507.43, 682.601, 80.2908, 0.2862 ) }
    dend_10 { pt3dadd( 506.339, 682.357, 80.7447, 0.296 ) }
    dend_10 { pt3dadd( 505.25, 682.133, 81.2938, 0.315 ) }
    dend_10 { pt3dadd( 504.197, 682.438, 81.9594, 0.3458 ) }
    dend_10 { pt3dadd( 503.145, 682.744, 82.714, 0.4268 ) }
    dend_10 { pt3dadd( 502.092, 683.05, 83.5288, 0.4578 ) }
    dend_10 { pt3dadd( 501.064, 683.26, 84.4004, 0.4078 ) }
    dend_10 { pt3dadd( 500.13, 683.09, 85.3938, 0.3794 ) }
    dend_10 { pt3dadd( 499.159, 683.045, 86.4094, 0.473 ) }
    dend_10 { pt3dadd( 498.067, 683.384, 87.2547, 0.3944 ) }
    dend_10 { pt3dadd( 497.168, 683.885, 88.1384, 0.3276 ) }
    dend_10 { pt3dadd( 496.24, 684.137, 89.0355, 0.279 ) }
    dend_10 { pt3dadd( 495.223, 683.776, 89.8926, 0.2826 ) }
    dend_10 { pt3dadd( 494.205, 683.414, 90.7021, 0.289 ) }
    dend_10 { pt3dadd( 493.186, 683.052, 91.4712, 0.3024 ) }
    dend_10 { pt3dadd( 492.169, 682.69, 92.1964, 0.321 ) }
    dend_10 { pt3dadd( 491.18, 682.232, 92.8063, 0.386 ) }
    dend_10 { pt3dadd( 490.258, 681.556, 93.2268, 0.358 ) }
    dend_10 { pt3dadd( 489.336, 680.879, 93.5052, 0.3396 ) }
    dend_10 { pt3dadd( 488.465, 680.137, 93.6816, 0.3736 ) }
    dend_10 { pt3dadd( 487.601, 679.386, 93.7944, 0.3342 ) }
    dend_10 { pt3dadd( 486.739, 678.636, 93.882, 0.3006 ) }
    dend_10 { pt3dadd( 485.779, 678.064, 93.9809, 0.2758 ) }
    dend_10 { pt3dadd( 484.677, 677.756, 94.1156, 0.2768 ) }
    dend_10 { pt3dadd( 483.576, 677.448, 94.2917, 0.279 ) }
    dend_10 { pt3dadd( 482.639, 676.945, 94.5585, 0.2826 ) }
    dend_10 { pt3dadd( 482.004, 676.082, 94.9824, 0.289 ) }
    dend_10 { pt3dadd( 481.37, 675.221, 95.5091, 0.3024 ) }
    dend_10 { pt3dadd( 480.736, 674.359, 96.091, 0.321 ) }
    dend_10 { pt3dadd( 480.027, 673.555, 96.6552, 0.386 ) }
    dend_10 { pt3dadd( 479.057, 672.949, 97.069, 0.358 ) }
    dend_10 { pt3dadd( 477.781, 672.484, 97.2381, 0.3734 ) }
    dend_10 { pt3dadd( 476.724, 672.061, 97.3641, 0.3338 ) }
    dend_10 { pt3dadd( 475.667, 671.638, 97.5517, 0.3002 ) }
    dend_10 { pt3dadd( 474.61, 671.216, 97.82, 0.2748 ) }
    dend_10 { pt3dadd( 473.553, 670.792, 98.1775, 0.2748 ) }
    dend_10 { pt3dadd( 472.475, 670.617, 98.6807, 0.2752 ) }
    dend_10 { pt3dadd( 471.392, 670.505, 99.2802, 0.2758 ) }
    dend_10 { pt3dadd( 470.309, 670.393, 99.9541, 0.2766 ) }
    dend_10 { pt3dadd( 469.355, 670.923, 100.582, 0.2782 ) }
    dend_10 { pt3dadd( 468.465, 671.596, 101.209, 0.2814 ) }
    dend_10 { pt3dadd( 467.636, 672.267, 101.93, 0.287 ) }
    dend_10 { pt3dadd( 466.808, 672.939, 102.715, 0.2988 ) }
    dend_10 { pt3dadd( 465.979, 673.61, 103.546, 0.3142 ) }
    dend_10 { pt3dadd( 465.15, 674.282, 104.41, 0.3734 ) }
    dend_10 { pt3dadd( 464.237, 674.786, 105.277, 0.3338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_10 { pt3dadd( 463.135, 674.918, 106.092, 0.3 ) }
    dend_10 { pt3dadd( 462.033, 675.048, 106.849, 0.2746 ) }
    dend_10 { pt3dadd( 460.931, 675.18, 107.56, 0.2746 ) }
    dend_10 { pt3dadd( 459.828, 675.311, 108.236, 0.2746 ) }
    dend_10 { pt3dadd( 458.727, 675.443, 108.884, 0.2746 ) }
    dend_10 { pt3dadd( 457.625, 675.574, 109.511, 0.2746 ) }
    dend_10 { pt3dadd( 456.523, 675.706, 110.117, 0.2746 ) }
    dend_10 { pt3dadd( 455.421, 675.837, 110.696, 0.2746 ) }
    dend_10 { pt3dadd( 454.319, 675.968, 111.243, 0.2746 ) }
    dend_10 { pt3dadd( 453.208, 675.915, 111.716, 0.2746 ) }
    dend_10 { pt3dadd( 452.088, 675.69, 112.089, 0.2746 ) }
    dend_10 { pt3dadd( 450.968, 675.463, 112.386, 0.2746 ) }
    dend_10 { pt3dadd( 449.848, 675.238, 112.628, 0.2746 ) }
    dend_10 { pt3dadd( 448.728, 675.011, 112.838, 0.2746 ) }
    dend_10 { pt3dadd( 447.609, 674.786, 113.037, 0.2746 ) }
    dend_10 { pt3dadd( 446.49, 674.56, 113.244, 0.2746 ) }
    dend_10 { pt3dadd( 445.37, 674.333, 113.475, 0.2746 ) }
    dend_10 { pt3dadd( 444.25, 674.108, 113.734, 0.2746 ) }
    dend_10 { pt3dadd( 443.129, 673.881, 114.029, 0.2746 ) }
    dend_10 { pt3dadd( 442.029, 673.87, 114.396, 0.2746 ) }
    dend_10 { pt3dadd( 440.955, 674.151, 114.873, 0.2744 ) }
    dend_10 { pt3dadd( 439.879, 674.433, 115.442, 0.2744 ) }
    dend_10 { pt3dadd( 438.805, 674.714, 116.084, 0.2742 ) }
    dend_10 { pt3dadd( 437.73, 674.995, 116.781, 0.2736 ) }
    dend_10 { pt3dadd( 436.666, 675.294, 117.519, 0.2728 ) }
    dend_10 { pt3dadd( 435.779, 675.888, 118.345, 0.2712 ) }
    dend_10 { pt3dadd( 434.894, 676.48, 119.213, 0.2684 ) }
    dend_10 { pt3dadd( 434.007, 677.074, 120.087, 0.2626 ) }
    dend_10 { pt3dadd( 433.122, 677.668, 120.937, 0.2542 ) }
    dend_10 { pt3dadd( 432.235, 678.26, 121.739, 0.2288 ) }
    dend_10 { pt3dadd( 431.35, 678.854, 123.316, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 31/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 545.306, 693.074, 51.8067, 0.53 ) }
    dend_7 { pt3dadd( 546.243, 693.01, 51.8552, 0.5988 ) }
    dend_7 { pt3dadd( 547.385, 692.951, 51.9378, 0.4564 ) }
    dend_7 { pt3dadd( 548.525, 692.89, 52.0439, 0.3584 ) }
    dend_7 { pt3dadd( 549.667, 692.83, 52.1525, 0.2882 ) }
    dend_7 { pt3dadd( 550.807, 692.771, 52.2648, 0.3008 ) }
    dend_7 { pt3dadd( 551.949, 692.711, 52.3846, 0.3182 ) }
    dend_7 { pt3dadd( 553.091, 692.652, 52.4947, 0.3812 ) }
    dend_7 { pt3dadd( 554.231, 692.593, 52.5988, 0.348 ) }
    dend_7 { pt3dadd( 555.362, 692.772, 52.6789, 0.3272 ) }
    dend_7 { pt3dadd( 556.491, 692.953, 52.7425, 0.3196 ) }
    dend_7 { pt3dadd( 557.621, 693.134, 52.7974, 0.3834 ) }
    dend_7 { pt3dadd( 558.55, 693.734, 52.8528, 0.3524 ) }
    dend_7 { pt3dadd( 559.402, 694.497, 52.9178, 0.3354 ) }
    dend_7 { pt3dadd( 560.177, 693.935, 53.0012, 0.335 ) }
    dend_7 { pt3dadd( 560.933, 693.078, 53.1115, 0.4118 ) }
    dend_7 { pt3dadd( 562.006, 693.024, 53.2944, 0.407 ) }
    dend_7 { pt3dadd( 563.136, 693.119, 53.5438, 0.4262 ) }
    dend_7 { pt3dadd( 564.268, 693.215, 53.844, 0.5552 ) }
    dend_7 { pt3dadd( 565.277, 693.682, 54.2147, 0.5684 ) }
    dend_7 { pt3dadd( 566.274, 694.182, 54.635, 0.5464 ) }
    dend_7 { pt3dadd( 567.268, 694.713, 55.0469, 0.5022 ) }
    dend_7 { pt3dadd( 568.257, 695.29, 55.3876, 0.4366 ) }
    dend_7 { pt3dadd( 569.219, 695.063, 55.7197, 0.4644 ) }
    dend_7 { pt3dadd( 570.169, 694.456, 56.072, 0.476 ) }
    dend_7 { pt3dadd( 571.119, 693.85, 56.4407, 0.465 ) }
    dend_7 { pt3dadd( 572.11, 693.302, 56.7935, 0.372 ) }
    dend_7 { pt3dadd( 573.15, 692.825, 57.1012, 0.3236 ) }
    dend_7 { pt3dadd( 574.186, 692.346, 57.3768, 0.3178 ) }
    dend_7 { pt3dadd( 574.708, 691.929, 57.9435, 0.357 ) }
    dend_7 { pt3dadd( 575.938, 692.12, 58.3755, 0.4176 ) }
    dend_7 { pt3dadd( 577.076, 692.225, 58.6944, 0.5872 ) }
    dend_7 { pt3dadd( 578.106, 692.647, 58.9221, 0.6234 ) }
    dend_7 { pt3dadd( 579.167, 693.072, 59.0736, 0.6688 ) }
    dend_7 { pt3dadd( 580.101, 693.726, 59.1576, 0.6296 ) }
    dend_7 { pt3dadd( 581.143, 694.153, 59.1833, 0.47 ) }
    dend_7 { pt3dadd( 582.271, 694.294, 59.2413, 0.368 ) }
    dend_7 { pt3dadd( 583.412, 694.294, 59.3096, 0.3792 ) }
    dend_7 { pt3dadd( 584.557, 694.294, 59.3726, 0.3444 ) }
    dend_7 { pt3dadd( 585.701, 694.294, 59.4328, 0.3192 ) }
    dend_7 { pt3dadd( 586.844, 694.294, 59.4952, 0.3112 ) }
    dend_7 { pt3dadd( 587.989, 694.294, 59.5652, 0.3384 ) }
    dend_7 { pt3dadd( 589.127, 694.326, 59.6512, 0.413 ) }
    dend_7 { pt3dadd( 590.028, 694.98, 59.7677, 0.4328 ) }
    dend_7 { pt3dadd( 590.926, 695.63, 59.9222, 0.3596 ) }
    dend_7 { pt3dadd( 592.053, 695.761, 60.1549, 0.3006 ) }
    dend_7 { pt3dadd( 593.157, 695.781, 60.4825, 0.2758 ) }
    dend_7 { pt3dadd( 594.158, 695.781, 60.9297, 0.2766 ) }
    dend_7 { pt3dadd( 594.933, 695.788, 61.5434, 0.2782 ) }
    dend_7 { pt3dadd( 595.977, 696.183, 62.0206, 0.2814 ) }
    dend_7 { pt3dadd( 597.057, 696.524, 62.3711, 0.287 ) }
    dend_7 { pt3dadd( 598.196, 696.582, 62.606, 0.2988 ) }
    dend_7 { pt3dadd( 599.341, 696.582, 62.7472, 0.3142 ) }
    dend_7 { pt3dadd( 600.484, 696.582, 62.8197, 0.3734 ) }
    dend_7 { pt3dadd( 601.628, 696.582, 62.8594, 0.334 ) }
    dend_7 { pt3dadd( 602.764, 696.675, 62.914, 0.3002 ) }
    dend_7 { pt3dadd( 603.794, 697.124, 62.986, 0.2748 ) }
    dend_7 { pt3dadd( 604.533, 697.974, 63.1151, 0.2752 ) }
    dend_7 { pt3dadd( 605.382, 698.734, 63.2472, 0.2758 ) }
    dend_7 { pt3dadd( 606.415, 699.07, 63.4648, 0.2766 ) }
    dend_7 { pt3dadd( 607.454, 699.415, 63.7297, 0.2784 ) }
    dend_7 { pt3dadd( 608.592, 699.442, 63.9537, 0.2822 ) }
    dend_7 { pt3dadd( 609.729, 699.442, 64.1508, 0.288 ) }
    dend_7 { pt3dadd( 610.873, 699.442, 64.29, 0.3008 ) }
    dend_7 { pt3dadd( 611.911, 699.815, 64.384, 0.318 ) }
    dend_7 { pt3dadd( 612.967, 700.248, 64.4386, 0.3808 ) }
    dend_7 { pt3dadd( 613.867, 700.878, 64.4725, 0.3476 ) }
    dend_7 { pt3dadd( 614.945, 701.196, 64.5042, 0.3254 ) }
    dend_7 { pt3dadd( 616.019, 701.493, 64.5725, 0.3224 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_7 { pt3dadd( 617.163, 701.501, 64.6352, 0.3592 ) }
    dend_7 { pt3dadd( 618.3, 701.409, 64.6926, 0.4514 ) }
    dend_7 { pt3dadd( 619.427, 701.386, 64.7044, 0.505 ) }
    dend_7 { pt3dadd( 620.571, 701.389, 64.7609, 0.4896 ) }
    dend_7 { pt3dadd( 621.607, 701.786, 64.8682, 0.5588 ) }
    dend_7 { pt3dadd( 622.694, 702.107, 65.0247, 0.6718 ) }
    dend_7 { pt3dadd( 623.279, 701.771, 65.5091, 0.7248 ) }
    dend_7 { pt3dadd( 624.299, 701.378, 66.0688, 0.6674 ) }
    dend_7 { pt3dadd( 625.337, 700.958, 66.5815, 0.6314 ) }
    dend_7 { pt3dadd( 626.45, 701.16, 66.9488, 0.68 ) }
    dend_7 { pt3dadd( 627.568, 701.353, 67.289, 0.6686 ) }
    dend_7 { pt3dadd( 628.622, 701.62, 67.6752, 0.6828 ) }
    dend_7 { pt3dadd( 629.679, 701.933, 68.0548, 0.7658 ) }
    dend_7 { pt3dadd( 630.77, 702.256, 68.3897, 0.8736 ) }
    dend_7 { pt3dadd( 631.875, 702.551, 68.6538, 0.8396 ) }
    dend_7 { pt3dadd( 632.972, 702.867, 68.85, 0.767 ) }
    dend_7 { pt3dadd( 634.076, 703.108, 68.9562, 0.6812 ) }
    dend_7 { pt3dadd( 635.213, 703.145, 69.0774, 0.5116 ) }
    dend_7 { pt3dadd( 636.317, 702.979, 69.2675, 0.4772 ) }
    dend_7 { pt3dadd( 637.352, 702.562, 69.5383, 0.4264 ) }
    dend_7 { pt3dadd( 638.409, 702.414, 69.8838, 0.499 ) }
    dend_7 { pt3dadd( 639.459, 702.792, 70.2128, 0.5104 ) }
    dend_7 { pt3dadd( 640.528, 703.091, 70.408, 0.6712 ) }
    dend_7 { pt3dadd( 641.665, 703.14, 70.5564, 0.7504 ) }
    dend_7 { pt3dadd( 642.77, 703.305, 70.74, 0.8156 ) }
    dend_7 { pt3dadd( 643.826, 703.677, 70.9526, 0.6464 ) }
    dend_7 { pt3dadd( 644.849, 704.143, 71.1654, 0.5964 ) }
    dend_7 { pt3dadd( 645.774, 704.766, 71.388, 0.824 ) }
    dend_7 { pt3dadd( 646.699, 705.429, 71.5254, 0.8386 ) }
    dend_7 { pt3dadd( 647.698, 705.948, 71.5212, 0.7806 ) }
    dend_7 { pt3dadd( 648.722, 706.399, 71.3983, 0.6286 ) }
    dend_7 { pt3dadd( 649.815, 706.675, 71.2533, 0.5652 ) }
    dend_7 { pt3dadd( 650.925, 706.582, 71.0794, 0.5302 ) }
    dend_7 { pt3dadd( 652.005, 706.285, 70.9092, 0.5206 ) }
    dend_7 { pt3dadd( 653.119, 706.163, 70.8557, 0.464 ) }
    dend_7 { pt3dadd( 654.177, 706.436, 70.9758, 0.5464 ) }
    dend_7 { pt3dadd( 655.171, 706.862, 71.2572, 0.4788 ) }
    dend_7 { pt3dadd( 656.251, 707.026, 71.5719, 0.5054 ) }
    dend_7 { pt3dadd( 657.376, 706.958, 71.7976, 0.5058 ) }
    dend_7 { pt3dadd( 658.471, 707.133, 71.9334, 0.515 ) }
    dend_7 { pt3dadd( 659.515, 707.535, 72.1028, 0.4912 ) }
    dend_7 { pt3dadd( 660.558, 707.935, 72.3363, 0.415 ) }
    dend_7 { pt3dadd( 661.668, 708.169, 72.5936, 0.4302 ) }
    dend_7 { pt3dadd( 662.686, 708.539, 72.9355, 0.3864 ) }
    dend_7 { pt3dadd( 663.594, 709.193, 73.3326, 0.423 ) }
    dend_7 { pt3dadd( 664.551, 709.814, 73.7178, 0.3796 ) }
    dend_7 { pt3dadd( 665.46, 710.465, 74.132, 0.3802 ) }
    dend_7 { pt3dadd( 666.404, 711.053, 74.5839, 0.4448 ) }
    dend_7 { pt3dadd( 667.472, 711.287, 75.0674, 0.4862 ) }
    dend_7 { pt3dadd( 668.53, 711.162, 75.6067, 0.4848 ) }
    dend_7 { pt3dadd( 669.549, 710.945, 76.2121, 0.4036 ) }
    dend_7 { pt3dadd( 670.646, 710.843, 76.7645, 0.4074 ) }
    dend_7 { pt3dadd( 671.744, 710.638, 77.1291, 0.35 ) }
    dend_7 { pt3dadd( 672.65, 710.502, 77.1831, 0.3298 ) }
    dend_7 { pt3dadd( 673.475, 710.744, 77.3318, 0.3302 ) }
    dend_7 { pt3dadd( 674.306, 710.702, 77.74, 0.3748 ) }
    dend_7 { pt3dadd( 675.331, 710.326, 78.1609, 0.4752 ) }
    dend_7 { pt3dadd( 676.295, 709.718, 78.521, 0.5746 ) }
    dend_7 { pt3dadd( 677.12, 708.928, 78.8312, 0.4938 ) }
    dend_7 { pt3dadd( 677.898, 708.089, 79.093, 0.4862 ) }
    dend_7 { pt3dadd( 678.537, 707.143, 79.2929, 0.4688 ) }
    dend_7 { pt3dadd( 679.097, 706.145, 79.4511, 0.4518 ) }
    dend_7 { pt3dadd( 679.721, 705.188, 79.6205, 0.3476 ) }
    dend_7 { pt3dadd( 679.687, 704.083, 79.8622, 0.2796 ) }
    dend_7 { pt3dadd( 679.034, 703.372, 80.2931, 0.2288 ) }
    dend_7 { pt3dadd( 677.934, 703.102, 81.2, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 66/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 545.306, 693.074, 51.8067, 0.53 ) }
    dend_2 { pt3dadd( 546.203, 693.147, 50.9029, 0.2288 ) }
    dend_2 { pt3dadd( 547.251, 693.436, 49.4242, 0.631 ) }
    dend_2 { pt3dadd( 548.347, 693.688, 48.8359, 0.565 ) }
    dend_2 { pt3dadd( 549.454, 693.923, 48.1505, 0.5518 ) }
    dend_2 { pt3dadd( 549.806, 693.23, 47.1898, 0.683 ) }
    dend_2 { pt3dadd( 550.219, 692.403, 46.0449, 0.8594 ) }
    dend_2 { pt3dadd( 550.82, 691.503, 44.9, 0.8244 ) }
    dend_2 { pt3dadd( 551.477, 690.891, 43.6727, 0.9134 ) }
    dend_2 { pt3dadd( 552.054, 690.471, 42.3489, 0.789 ) }
    dend_2 { pt3dadd( 553.016, 690.372, 41.1155, 0.5908 ) }
    dend_2 { pt3dadd( 554.04, 690.748, 40.098, 0.524 ) }
    dend_2 { pt3dadd( 554.834, 691.567, 39.3481, 0.5408 ) }
    dend_2 { pt3dadd( 555.37, 692.578, 38.8245, 0.5758 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 80/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 534.427, 661.578, 46.4131, 0.8008 ) }
    apic_13 { pt3dadd( 534.466, 660.752, 47.8313, 0.4576 ) }
    apic_13 { pt3dadd( 534.436, 659.737, 50.1082, 0.4066 ) }
    apic_13 { pt3dadd( 534.2, 658.946, 51.0787, 0.413 ) }
    apic_13 { pt3dadd( 533.71, 658.802, 52.3446, 0.3602 ) }
    apic_13 { pt3dadd( 533.24, 659.352, 53.7149, 0.3492 ) }
    apic_13 { pt3dadd( 532.904, 660.398, 54.9304, 0.3628 ) }
    apic_13 { pt3dadd( 532.442, 661.43, 55.9507, 0.4532 ) }
    apic_13 { pt3dadd( 531.716, 662.271, 56.8652, 0.5328 ) }
    apic_13 { pt3dadd( 530.888, 662.828, 57.8222, 0.421 ) }
    apic_13 { pt3dadd( 530.048, 663.26, 58.8787, 0.3298 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 91/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 534.427, 661.578, 46.4131, 0.8008 ) }
    apic_2 { pt3dadd( 533.081, 660.591, 46.1994, 0.4506 ) }
    apic_2 { pt3dadd( 532.164, 659.974, 45.9217, 0.4734 ) }
    apic_2 { pt3dadd( 531.226, 659.45, 45.5958, 0.5756 ) }
    apic_2 { pt3dadd( 530.305, 658.788, 45.3541, 0.7032 ) }
    apic_2 { pt3dadd( 529.402, 658.091, 45.2631, 0.784 ) }
    apic_2 { pt3dadd( 528.751, 657.197, 45.3746, 0.7726 ) }
    apic_2 { pt3dadd( 528.109, 656.289, 45.6369, 0.8486 ) }
    apic_2 { pt3dadd( 527.481, 655.374, 46.0062, 0.977 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_2 { pt3dadd( 526.786, 654.48, 46.3826, 1.0464 ) }
    apic_2 { pt3dadd( 525.779, 652.463, 46.7648, 1.0778 ) }
    apic_2 { pt3dadd( 525.375, 651.393, 47.0067, 0.9198 ) }
    apic_2 { pt3dadd( 525.327, 650.25, 47.1164, 0.7648 ) }
    apic_2 { pt3dadd( 525.337, 649.106, 47.1136, 0.7198 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 5/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 551.867, 690.014, 61.98, 0.373 ) }
    dend_18 { pt3dadd( 552.288, 690.244, 61.9214, 0.3264 ) }
    dend_18 { pt3dadd( 553.141, 691.006, 61.8761, 0.3184 ) }
    dend_18 { pt3dadd( 553.995, 691.766, 61.8408, 0.3814 ) }
    dend_18 { pt3dadd( 554.85, 692.527, 61.8092, 0.3486 ) }
    dend_18 { pt3dadd( 555.701, 693.29, 61.7728, 0.3276 ) }
    dend_18 { pt3dadd( 556.452, 694.149, 61.7016, 0.3256 ) }
    dend_18 { pt3dadd( 557.201, 695.01, 61.6095, 0.3696 ) }
    dend_18 { pt3dadd( 557.951, 695.87, 61.5101, 0.4496 ) }
    dend_18 { pt3dadd( 558.701, 696.729, 61.413, 0.6054 ) }
    dend_18 { pt3dadd( 559.407, 697.372, 61.3544, 0.8564 ) }
    dend_18 { pt3dadd( 560.219, 698.176, 61.3444, 0.8196 ) }
    dend_18 { pt3dadd( 561.037, 698.961, 61.4247, 0.6732 ) }
    dend_18 { pt3dadd( 561.948, 699.618, 61.5871, 0.553 ) }
    dend_18 { pt3dadd( 562.738, 700.381, 61.6328, 0.5086 ) }
    dend_18 { pt3dadd( 563.331, 701.358, 61.6826, 0.478 ) }
    dend_18 { pt3dadd( 563.894, 702.343, 61.7921, 0.3972 ) }
    dend_18 { pt3dadd( 564.197, 703.365, 62.048, 0.3648 ) }
    dend_18 { pt3dadd( 564.252, 704.496, 62.3193, 0.4212 ) }
    dend_18 { pt3dadd( 564.427, 705.594, 62.6027, 0.418 ) }
    dend_18 { pt3dadd( 565.027, 706.55, 62.8438, 0.477 ) }
    dend_18 { pt3dadd( 565.927, 707.246, 63.0224, 0.5002 ) }
    dend_18 { pt3dadd( 566.915, 707.76, 63.0762, 0.5048 ) }
    dend_18 { pt3dadd( 567.665, 708.392, 62.9264, 0.4706 ) }
    dend_18 { pt3dadd( 567.887, 709.505, 62.7827, 0.3836 ) }
    dend_18 { pt3dadd( 567.917, 710.648, 62.692, 0.34 ) }
    dend_18 { pt3dadd( 568.081, 711.772, 62.6724, 0.3744 ) }
    dend_18 { pt3dadd( 568.494, 712.829, 62.7522, 0.3354 ) }
    dend_18 { pt3dadd( 569.03, 713.81, 62.9639, 0.303 ) }
    dend_18 { pt3dadd( 569.848, 714.493, 63.243, 0.28 ) }
    dend_18 { pt3dadd( 570.883, 714.878, 63.5421, 0.2848 ) }
    dend_18 { pt3dadd( 571.704, 715.622, 63.873, 0.2936 ) }
    dend_18 { pt3dadd( 572.393, 716.529, 64.1556, 0.311 ) }
    dend_18 { pt3dadd( 573.032, 717.479, 64.3717, 0.3364 ) }
    dend_18 { pt3dadd( 573.67, 718.429, 64.5403, 0.4158 ) }
    dend_18 { pt3dadd( 574.272, 719.4, 64.689, 0.4068 ) }
    dend_18 { pt3dadd( 574.753, 720.434, 64.8379, 0.4626 ) }
    dend_18 { pt3dadd( 575.2, 721.482, 65.0079, 0.4428 ) }
    dend_18 { pt3dadd( 575.58, 722.515, 65.2602, 0.5478 ) }
    dend_18 { pt3dadd( 575.66, 723.583, 65.6404, 0.5116 ) }
    dend_18 { pt3dadd( 575.651, 724.644, 66.1128, 0.4206 ) }
    dend_18 { pt3dadd( 575.601, 725.733, 66.5347, 0.3684 ) }
    dend_18 { pt3dadd( 575.384, 726.83, 66.7755, 0.3914 ) }
    dend_18 { pt3dadd( 575.035, 727.909, 66.9012, 0.5384 ) }
    dend_18 { pt3dadd( 574.82, 729.025, 66.9782, 0.5358 ) }
    dend_18 { pt3dadd( 574.831, 730.164, 67.037, 0.4916 ) }
    dend_18 { pt3dadd( 574.803, 731.278, 67.1499, 0.374 ) }
    dend_18 { pt3dadd( 574.58, 732.378, 67.3137, 0.3284 ) }
    dend_18 { pt3dadd( 574.426, 733.506, 67.4702, 0.3222 ) }
    dend_18 { pt3dadd( 574.63, 734.591, 67.6477, 0.3878 ) }
    dend_18 { pt3dadd( 575.122, 735.606, 67.7989, 0.3618 ) }
    dend_18 { pt3dadd( 575.767, 736.537, 67.8446, 0.3466 ) }
    dend_18 { pt3dadd( 576.537, 737.375, 67.8236, 0.3862 ) }
    dend_18 { pt3dadd( 577.359, 738.158, 67.8188, 0.3588 ) }
    dend_18 { pt3dadd( 577.857, 739.117, 67.7807, 0.3406 ) }
    dend_18 { pt3dadd( 577.966, 740.213, 67.6242, 0.3754 ) }
    dend_18 { pt3dadd( 578.079, 741.325, 67.4176, 0.3378 ) }
    dend_18 { pt3dadd( 578.322, 742.422, 67.3016, 0.307 ) }
    dend_18 { pt3dadd( 578.522, 743.491, 67.3347, 0.2878 ) }
    dend_18 { pt3dadd( 578.918, 744.437, 67.2801, 0.2988 ) }
    dend_18 { pt3dadd( 579.851, 744.598, 67.0922, 0.3206 ) }
    dend_18 { pt3dadd( 579.529, 745.338, 66.9978, 0.3554 ) }
    dend_18 { pt3dadd( 579.637, 746.383, 67.0323, 0.446 ) }
    dend_18 { pt3dadd( 579.792, 747.5, 67.0558, 0.4884 ) }
    dend_18 { pt3dadd( 580.005, 748.594, 66.9684, 0.488 ) }
    dend_18 { pt3dadd( 580.491, 749.603, 66.8394, 0.4152 ) }
    dend_18 { pt3dadd( 581.215, 750.48, 66.7156, 0.4004 ) }
    dend_18 { pt3dadd( 582.051, 751.259, 66.5823, 0.476 ) }
    dend_18 { pt3dadd( 583.034, 751.826, 66.4412, 0.5746 ) }
    dend_18 { pt3dadd( 584.051, 752.313, 66.267, 0.5004 ) }
    dend_18 { pt3dadd( 584.964, 752.965, 66.0828, 0.4672 ) }
    dend_18 { pt3dadd( 585.781, 753.76, 65.9425, 0.5852 ) }
    dend_18 { pt3dadd( 586.512, 754.637, 65.8549, 0.6186 ) }
    dend_18 { pt3dadd( 587.199, 755.549, 65.8244, 0.6652 ) }
    dend_18 { pt3dadd( 587.892, 756.397, 65.912, 0.5992 ) }
    dend_18 { pt3dadd( 588.371, 757.385, 66.0615, 0.5276 ) }
    dend_18 { pt3dadd( 588.492, 758.485, 66.0794, 0.6068 ) }
    dend_18 { pt3dadd( 588.654, 759.598, 65.9548, 0.641 ) }
    dend_18 { pt3dadd( 589.004, 760.594, 65.6396, 0.5626 ) }
    dend_18 { pt3dadd( 589.219, 761.644, 65.2274, 0.421 ) }
    dend_18 { pt3dadd( 589.197, 762.783, 64.848, 0.368 ) }
    dend_18 { pt3dadd( 589.166, 763.925, 64.5484, 0.3974 ) }
    dend_18 { pt3dadd( 589.197, 765.053, 64.3014, 0.518 ) }
    dend_18 { pt3dadd( 589.378, 766.156, 64.0937, 0.65 ) }
    dend_18 { pt3dadd( 589.625, 767.267, 63.9836, 0.6536 ) }
    dend_18 { pt3dadd( 589.885, 768.362, 64.017, 0.685 ) }
    dend_18 { pt3dadd( 590.012, 769.467, 64.1598, 0.625 ) }
    dend_18 { pt3dadd( 589.88, 770.594, 64.3387, 0.6302 ) }
    dend_18 { pt3dadd( 589.936, 771.69, 64.563, 0.5322 ) }
    dend_18 { pt3dadd( 590.075, 772.802, 64.7987, 0.4132 ) }
    dend_18 { pt3dadd( 590.176, 773.938, 64.9614, 0.3476 ) }
    dend_18 { pt3dadd( 590.352, 775.068, 65.0264, 0.388 ) }
    dend_18 { pt3dadd( 590.133, 776.13, 64.9849, 0.361 ) }
    dend_18 { pt3dadd( 589.407, 776.95, 64.8166, 0.3512 ) }
    dend_18 { pt3dadd( 588.722, 777.83, 64.5896, 0.3652 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_18 { pt3dadd( 588.34, 778.892, 64.3577, 0.4634 ) }
    dend_18 { pt3dadd( 588.264, 780.024, 64.1766, 0.523 ) }
    dend_18 { pt3dadd( 588.348, 781.135, 63.9772, 0.5418 ) }
    dend_18 { pt3dadd( 588.728, 782.184, 63.793, 0.5656 ) }
    dend_18 { pt3dadd( 589.413, 783.085, 63.6765, 0.4348 ) }
    dend_18 { pt3dadd( 590.238, 783.865, 63.6488, 0.3548 ) }
    dend_18 { pt3dadd( 590.844, 784.792, 63.7185, 0.3302 ) }
    dend_18 { pt3dadd( 591.273, 785.842, 63.784, 0.3734 ) }
    dend_18 { pt3dadd( 591.368, 786.932, 63.7529, 0.4786 ) }
    dend_18 { pt3dadd( 591.422, 788.063, 63.6983, 0.5512 ) }
    dend_18 { pt3dadd( 591.729, 789.157, 63.6644, 0.5948 ) }
    dend_18 { pt3dadd( 592.148, 790.221, 63.6608, 0.6594 ) }
    dend_18 { pt3dadd( 592.337, 791.341, 63.7059, 0.6306 ) }
    dend_18 { pt3dadd( 592.362, 792.476, 63.8478, 0.6114 ) }
    dend_18 { pt3dadd( 592.357, 793.617, 64.0231, 0.637 ) }
    dend_18 { pt3dadd( 592.328, 794.724, 64.3082, 0.6178 ) }
    dend_18 { pt3dadd( 592.115, 795.829, 64.6369, 0.4468 ) }
    dend_18 { pt3dadd( 591.622, 796.806, 65.0325, 0.3306 ) }
    dend_18 { pt3dadd( 590.898, 797.617, 65.4732, 0.284 ) }
    dend_18 { pt3dadd( 589.986, 798.274, 65.8647, 0.2922 ) }
    dend_18 { pt3dadd( 589.08, 798.971, 66.145, 0.307 ) }
    dend_18 { pt3dadd( 588.115, 799.583, 66.3118, 0.3354 ) }
    dend_18 { pt3dadd( 587.076, 800.054, 66.3818, 0.3842 ) }
    dend_18 { pt3dadd( 586.325, 800.854, 66.3174, 0.4938 ) }
    dend_18 { pt3dadd( 585.823, 801.866, 66.2147, 0.604 ) }
    dend_18 { pt3dadd( 585.58, 802.979, 66.1682, 0.573 ) }
    dend_18 { pt3dadd( 585.812, 804.089, 66.2052, 0.5142 ) }
    dend_18 { pt3dadd( 585.934, 805.223, 66.3494, 0.4102 ) }
    dend_18 { pt3dadd( 585.882, 806.321, 66.6644, 0.4212 ) }
    dend_18 { pt3dadd( 585.555, 807.407, 67.0502, 0.37 ) }
    dend_18 { pt3dadd( 585.132, 808.409, 67.552, 0.3926 ) }
    dend_18 { pt3dadd( 584.768, 809.404, 68.1416, 0.322 ) }
    dend_18 { pt3dadd( 584.283, 810.432, 68.6546, 0.2796 ) }
    dend_18 { pt3dadd( 583.357, 811.089, 69.0771, 0.2288 ) }
    dend_18 { pt3dadd( 582.296, 811.325, 70.0, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 35/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 551.867, 690.014, 61.98, 0.373 ) }
    dend_17 { pt3dadd( 553.069, 689.656, 61.9142, 0.2288 ) }
    dend_17 { pt3dadd( 554.165, 689.329, 61.9564, 0.3014 ) }
    dend_17 { pt3dadd( 555.272, 689.039, 61.9735, 0.3188 ) }
    dend_17 { pt3dadd( 556.381, 688.755, 61.9982, 0.382 ) }
    dend_17 { pt3dadd( 557.458, 688.379, 62.0318, 0.3498 ) }
    dend_17 { pt3dadd( 558.503, 687.918, 62.074, 0.3306 ) }
    dend_17 { pt3dadd( 559.565, 687.545, 62.132, 0.326 ) }
    dend_17 { pt3dadd( 560.695, 687.608, 62.2471, 0.3956 ) }
    dend_17 { pt3dadd( 561.826, 687.672, 62.3952, 0.3746 ) }
    dend_17 { pt3dadd( 562.965, 687.708, 62.5201, 0.3768 ) }
    dend_17 { pt3dadd( 564.109, 687.726, 62.5884, 0.4088 ) }
    dend_17 { pt3dadd( 565.166, 687.45, 62.6004, 0.564 ) }
    dend_17 { pt3dadd( 566.123, 686.84, 62.5512, 0.6152 ) }
    dend_17 { pt3dadd( 567.265, 686.848, 62.41, 0.484 ) }
    dend_17 { pt3dadd( 568.406, 686.857, 62.1933, 0.4248 ) }
    dend_17 { pt3dadd( 569.461, 686.522, 61.9338, 0.335 ) }
    dend_17 { pt3dadd( 570.463, 685.97, 61.6498, 0.3022 ) }
    dend_17 { pt3dadd( 571.426, 685.6, 61.1708, 0.2786 ) }
    dend_17 { pt3dadd( 572.339, 685.598, 60.6136, 0.2822 ) }
    dend_17 { pt3dadd( 572.794, 686.24, 59.9754, 0.2886 ) }
    dend_17 { pt3dadd( 573.508, 686.411, 59.3258, 0.3002 ) }
    dend_17 { pt3dadd( 574.587, 686.781, 58.8412, 0.3242 ) }
    dend_17 { pt3dadd( 575.718, 686.858, 58.5063, 0.356 ) }
    dend_17 { pt3dadd( 576.862, 686.858, 58.3061, 0.4766 ) }
    dend_17 { pt3dadd( 577.985, 686.683, 58.1946, 0.4014 ) }
    dend_17 { pt3dadd( 579.068, 686.321, 58.137, 0.3404 ) }
    dend_17 { pt3dadd( 580.211, 686.286, 58.0944, 0.3022 ) }
    dend_17 { pt3dadd( 581.354, 686.286, 58.039, 0.327 ) }
    dend_17 { pt3dadd( 582.498, 686.286, 57.9709, 0.3672 ) }
    dend_17 { pt3dadd( 583.633, 686.286, 57.8542, 0.4688 ) }
    dend_17 { pt3dadd( 584.711, 686.49, 57.638, 0.5256 ) }
    dend_17 { pt3dadd( 585.771, 686.9, 57.4428, 0.5834 ) }
    dend_17 { pt3dadd( 586.894, 687.074, 57.2916, 0.4622 ) }
    dend_17 { pt3dadd( 588.018, 687.201, 57.1805, 0.4318 ) }
    dend_17 { pt3dadd( 589.03, 687.574, 57.104, 0.3476 ) }
    dend_17 { pt3dadd( 590.145, 687.773, 57.0573, 0.3264 ) }
    dend_17 { pt3dadd( 591.289, 687.773, 57.0276, 0.3182 ) }
    dend_17 { pt3dadd( 592.433, 687.773, 56.9904, 0.3814 ) }
    dend_17 { pt3dadd( 593.577, 687.773, 56.9383, 0.3482 ) }
    dend_17 { pt3dadd( 594.721, 687.773, 56.8655, 0.3278 ) }
    dend_17 { pt3dadd( 595.865, 687.773, 56.7678, 0.321 ) }
    dend_17 { pt3dadd( 596.955, 688.049, 56.639, 0.386 ) }
    dend_17 { pt3dadd( 597.964, 688.473, 56.4035, 0.358 ) }
    dend_17 { pt3dadd( 599.096, 688.609, 56.1344, 0.3398 ) }
    dend_17 { pt3dadd( 600.17, 688.877, 55.7654, 0.3738 ) }
    dend_17 { pt3dadd( 601.258, 689.201, 55.3745, 0.3348 ) }
    dend_17 { pt3dadd( 602.361, 689.406, 55.0066, 0.3014 ) }
    dend_17 { pt3dadd( 603.222, 690.091, 54.602, 0.277 ) }
    dend_17 { pt3dadd( 604.246, 690.429, 54.1128, 0.2794 ) }
    dend_17 { pt3dadd( 604.955, 690.961, 53.492, 0.2834 ) }
    dend_17 { pt3dadd( 606.083, 691.09, 52.9267, 0.2908 ) }
    dend_17 { pt3dadd( 607.209, 691.09, 52.3454, 0.3056 ) }
    dend_17 { pt3dadd( 608.252, 691.325, 51.6958, 0.327 ) }
    dend_17 { pt3dadd( 609.281, 691.721, 51.0132, 0.3984 ) }
    dend_17 { pt3dadd( 610.389, 691.777, 50.3462, 0.3748 ) }
    dend_17 { pt3dadd( 611.532, 691.777, 49.7448, 0.4016 ) }
    dend_17 { pt3dadd( 612.368, 691.922, 49.0031, 0.3386 ) }
    dend_17 { pt3dadd( 612.398, 692.349, 48.0068, 0.3088 ) }
    dend_17 { pt3dadd( 613.07, 692.349, 46.9042, 0.2912 ) }
    dend_17 { pt3dadd( 614.179, 692.55, 46.058, 0.3054 ) }
    dend_17 { pt3dadd( 615.321, 692.578, 45.451, 0.3324 ) }
    dend_17 { pt3dadd( 616.465, 692.578, 45.0531, 0.3786 ) }
    dend_17 { pt3dadd( 617.6, 692.463, 44.8428, 0.4826 ) }
    dend_17 { pt3dadd( 618.744, 692.463, 44.7681, 0.5878 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_17 { pt3dadd( 619.888, 692.463, 44.7513, 0.5196 ) }
    dend_17 { pt3dadd( 621.028, 692.42, 44.7314, 0.5278 ) }
    dend_17 { pt3dadd( 622.169, 692.35, 44.7042, 0.5766 ) }
    dend_17 { pt3dadd( 623.312, 692.334, 44.6687, 0.5038 ) }
    dend_17 { pt3dadd( 624.362, 691.97, 44.6225, 0.475 ) }
    dend_17 { pt3dadd( 625.443, 691.658, 44.5228, 0.592 ) }
    dend_17 { pt3dadd( 626.391, 691.176, 44.4214, 0.669 ) }
    dend_17 { pt3dadd( 627.498, 690.923, 44.3092, 0.5734 ) }
    dend_17 { pt3dadd( 628.381, 690.275, 44.1815, 0.6414 ) }
    dend_17 { pt3dadd( 629.327, 689.646, 44.0163, 0.4894 ) }
    dend_17 { pt3dadd( 630.351, 689.216, 43.7833, 0.415 ) }
    dend_17 { pt3dadd( 631.488, 689.146, 43.5655, 0.4138 ) }
    dend_17 { pt3dadd( 632.291, 688.574, 42.7022, 0.3626 ) }
    dend_17 { pt3dadd( 633.435, 688.574, 42.4284, 0.3064 ) }
    dend_17 { pt3dadd( 634.579, 688.574, 42.2498, 0.286 ) }
    dend_17 { pt3dadd( 635.709, 688.5, 42.1868, 0.297 ) }
    dend_17 { pt3dadd( 636.7, 687.964, 42.1834, 0.3108 ) }
    dend_17 { pt3dadd( 637.651, 687.337, 42.2226, 0.3672 ) }
    dend_17 { pt3dadd( 638.552, 686.685, 42.2509, 0.322 ) }
    dend_17 { pt3dadd( 639.252, 685.8, 42.2694, 0.2796 ) }
    dend_17 { pt3dadd( 640.094, 685.056, 42.2786, 0.2288 ) }
    dend_17 { pt3dadd( 640.983, 684.341, 42.28, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 548.073, 683.873, 73.2214, 0.3478 ) }
    dend_15 { pt3dadd( 548.371, 684.677, 74.653, 0.316 ) }
    dend_15 { pt3dadd( 548.599, 685.603, 76.0446, 0.3528 ) }
    dend_15 { pt3dadd( 548.829, 686.528, 77.3422, 0.4116 ) }
    dend_15 { pt3dadd( 549.915, 686.792, 78.2989, 0.5688 ) }
    dend_15 { pt3dadd( 551.02, 686.786, 78.9872, 0.6244 ) }
    dend_15 { pt3dadd( 551.702, 687.65, 79.6004, 0.5004 ) }
    dend_15 { pt3dadd( 552.373, 688.523, 80.183, 0.4566 ) }
    dend_15 { pt3dadd( 552.749, 689.603, 80.6512, 0.3888 ) }
    dend_15 { pt3dadd( 553.124, 690.684, 81.0631, 0.427 ) }
    dend_15 { pt3dadd( 553.892, 691.175, 81.6379, 0.388 ) }
    dend_15 { pt3dadd( 554.819, 691.404, 82.3628, 0.3902 ) }
    dend_15 { pt3dadd( 555.943, 691.184, 82.987, 0.4924 ) }
    dend_15 { pt3dadd( 557.059, 691.006, 83.5629, 0.4318 ) }
    dend_15 { pt3dadd( 558.129, 691.148, 84.236, 0.3914 ) }
    dend_15 { pt3dadd( 559.199, 691.288, 84.9722, 0.423 ) }
    dend_15 { pt3dadd( 560.268, 691.43, 85.7402, 0.423 ) }
    dend_15 { pt3dadd( 561.039, 692.118, 86.5382, 0.4802 ) }
    dend_15 { pt3dadd( 561.742, 692.932, 87.3636, 0.5358 ) }
    dend_15 { pt3dadd( 562.444, 693.747, 88.177, 0.4264 ) }
    dend_15 { pt3dadd( 563.147, 694.561, 88.9462, 0.3398 ) }
    dend_15 { pt3dadd( 563.848, 695.376, 89.6652, 0.3024 ) }
    dend_15 { pt3dadd( 564.952, 695.666, 90.1989, 0.321 ) }
    dend_15 { pt3dadd( 566.06, 695.951, 90.5909, 0.386 ) }
    dend_15 { pt3dadd( 567.17, 695.981, 90.8841, 0.358 ) }
    dend_15 { pt3dadd( 568.282, 695.713, 91.1168, 0.3396 ) }
    dend_15 { pt3dadd( 569.323, 695.809, 91.4035, 0.3734 ) }
    dend_15 { pt3dadd( 570.297, 696.245, 91.8282, 0.3338 ) }
    dend_15 { pt3dadd( 570.94, 697.191, 92.232, 0.3 ) }
    dend_15 { pt3dadd( 571.58, 698.139, 92.6187, 0.2746 ) }
    dend_15 { pt3dadd( 572.221, 699.087, 92.9891, 0.2746 ) }
    dend_15 { pt3dadd( 572.307, 699.343, 93.5542, 0.2746 ) }
    dend_15 { pt3dadd( 572.0, 699.169, 94.3751, 0.2746 ) }
    dend_15 { pt3dadd( 572.153, 700.284, 95.0012, 0.2746 ) }
    dend_15 { pt3dadd( 572.842, 701.179, 95.4688, 0.2746 ) }
    dend_15 { pt3dadd( 573.271, 702.233, 95.7905, 0.2746 ) }
    dend_15 { pt3dadd( 573.869, 703.186, 95.979, 0.2746 ) }
    dend_15 { pt3dadd( 574.356, 704.217, 96.0498, 0.2746 ) }
    dend_15 { pt3dadd( 574.657, 705.312, 96.0537, 0.2746 ) }
    dend_15 { pt3dadd( 575.551, 705.872, 96.059, 0.2748 ) }
    dend_15 { pt3dadd( 576.299, 706.722, 96.0666, 0.2748 ) }
    dend_15 { pt3dadd( 576.855, 707.702, 96.0772, 0.2752 ) }
    dend_15 { pt3dadd( 577.316, 708.742, 96.0921, 0.2758 ) }
    dend_15 { pt3dadd( 577.504, 709.868, 96.1122, 0.2766 ) }
    dend_15 { pt3dadd( 577.607, 711.006, 96.1425, 0.2782 ) }
    dend_15 { pt3dadd( 578.119, 712.019, 96.1848, 0.2814 ) }
    dend_15 { pt3dadd( 578.817, 712.903, 96.2399, 0.287 ) }
    dend_15 { pt3dadd( 579.812, 713.429, 96.3071, 0.2988 ) }
    dend_15 { pt3dadd( 580.834, 713.856, 96.4155, 0.3142 ) }
    dend_15 { pt3dadd( 581.756, 714.192, 96.6498, 0.3734 ) }
    dend_15 { pt3dadd( 581.953, 715.225, 96.836, 0.3338 ) }
    dend_15 { pt3dadd( 581.953, 716.369, 96.9769, 0.3 ) }
    dend_15 { pt3dadd( 581.953, 717.513, 97.0752, 0.2746 ) }
    dend_15 { pt3dadd( 581.953, 718.657, 97.1348, 0.2746 ) }
    dend_15 { pt3dadd( 581.953, 719.801, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 581.953, 720.945, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 581.962, 722.089, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 582.067, 723.227, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 582.067, 724.37, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 582.067, 725.515, 97.16, 0.2746 ) }
    dend_15 { pt3dadd( 582.067, 726.659, 97.16, 0.2748 ) }
    dend_15 { pt3dadd( 582.067, 727.802, 97.16, 0.2748 ) }
    dend_15 { pt3dadd( 582.067, 728.946, 97.16, 0.275 ) }
    dend_15 { pt3dadd( 582.067, 730.091, 97.16, 0.2754 ) }
    dend_15 { pt3dadd( 582.067, 731.234, 97.16, 0.2764 ) }
    dend_15 { pt3dadd( 582.067, 732.378, 97.16, 0.278 ) }
    dend_15 { pt3dadd( 582.067, 733.523, 97.16, 0.2808 ) }
    dend_15 { pt3dadd( 582.067, 734.667, 97.16, 0.2862 ) }
    dend_15 { pt3dadd( 582.067, 735.81, 97.16, 0.2958 ) }
    dend_15 { pt3dadd( 581.968, 736.938, 97.16, 0.3148 ) }
    dend_15 { pt3dadd( 581.648, 738.037, 97.16, 0.345 ) }
    dend_15 { pt3dadd( 581.198, 739.086, 97.16, 0.4254 ) }
    dend_15 { pt3dadd( 580.716, 740.113, 97.16, 0.457 ) }
    dend_15 { pt3dadd( 580.291, 741.14, 97.16, 0.3988 ) }
    dend_15 { pt3dadd( 580.166, 742.278, 97.16, 0.3988 ) }
    dend_15 { pt3dadd( 579.989, 743.403, 97.16, 0.3338 ) }
    dend_15 { pt3dadd( 579.524, 744.44, 97.16, 0.3 ) }
    dend_15 { pt3dadd( 579.205, 745.514, 97.16, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_15 { pt3dadd( 578.251, 746.112, 97.16, 0.2748 ) }
    dend_15 { pt3dadd( 577.636, 747.05, 97.16, 0.275 ) }
    dend_15 { pt3dadd( 576.779, 747.797, 97.16, 0.2752 ) }
    dend_15 { pt3dadd( 576.007, 748.638, 97.16, 0.276 ) }
    dend_15 { pt3dadd( 575.432, 749.553, 97.16, 0.2768 ) }
    dend_15 { pt3dadd( 575.359, 750.694, 97.16, 0.2796 ) }
    dend_15 { pt3dadd( 575.318, 751.837, 97.16, 0.2796 ) }
    dend_15 { pt3dadd( 575.318, 752.981, 97.16, 0.305 ) }
    dend_15 { pt3dadd( 575.318, 754.125, 97.16, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 9/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 548.073, 683.873, 73.2214, 0.3478 ) }
    dend_14 { pt3dadd( 547.219, 683.388, 74.1944, 0.4576 ) }
    dend_14 { pt3dadd( 546.224, 682.822, 75.2937, 0.3592 ) }
    dend_14 { pt3dadd( 545.701, 681.93, 75.7772, 0.3 ) }
    dend_14 { pt3dadd( 545.343, 680.926, 76.459, 0.2746 ) }
    dend_14 { pt3dadd( 544.984, 679.92, 77.3016, 0.2746 ) }
    dend_14 { pt3dadd( 544.626, 678.915, 78.2695, 0.2746 ) }
    dend_14 { pt3dadd( 544.268, 677.909, 79.3279, 0.2746 ) }
    dend_14 { pt3dadd( 543.919, 676.922, 80.4577, 0.2746 ) }
    dend_14 { pt3dadd( 543.624, 676.032, 81.6978, 0.2746 ) }
    dend_14 { pt3dadd( 543.329, 675.142, 83.015, 0.2746 ) }
    dend_14 { pt3dadd( 543.345, 674.15, 84.3282, 0.2746 ) }
    dend_14 { pt3dadd( 543.566, 673.092, 85.6013, 0.2746 ) }
    dend_14 { pt3dadd( 543.786, 672.034, 86.8507, 0.2746 ) }
    dend_14 { pt3dadd( 543.947, 671.01, 88.1194, 0.2746 ) }
    dend_14 { pt3dadd( 543.942, 670.079, 89.4919, 0.2746 ) }
    dend_14 { pt3dadd( 543.939, 669.148, 90.9625, 0.2746 ) }
    dend_14 { pt3dadd( 543.934, 668.218, 92.5243, 0.2746 ) }
    dend_14 { pt3dadd( 543.93, 667.288, 94.1592, 0.2746 ) }
    dend_14 { pt3dadd( 544.11, 666.461, 95.8756, 0.2746 ) }
    dend_14 { pt3dadd( 544.319, 665.651, 97.6438, 0.2746 ) }
    dend_14 { pt3dadd( 544.528, 664.84, 99.4339, 0.2746 ) }
    dend_14 { pt3dadd( 544.736, 664.029, 101.231, 0.2746 ) }
    dend_14 { pt3dadd( 544.938, 663.162, 103.0, 0.2746 ) }
    dend_14 { pt3dadd( 545.133, 662.254, 104.719, 0.2746 ) }
    dend_14 { pt3dadd( 545.328, 661.345, 106.391, 0.2746 ) }
    dend_14 { pt3dadd( 545.333, 660.43, 108.018, 0.2746 ) }
    dend_14 { pt3dadd( 545.098, 659.506, 109.605, 0.2746 ) }
    dend_14 { pt3dadd( 544.861, 658.581, 111.164, 0.2746 ) }
    dend_14 { pt3dadd( 544.625, 657.658, 112.705, 0.2744 ) }
    dend_14 { pt3dadd( 544.39, 656.734, 114.232, 0.2744 ) }
    dend_14 { pt3dadd( 544.153, 655.811, 115.745, 0.2742 ) }
    dend_14 { pt3dadd( 543.917, 654.886, 117.241, 0.2736 ) }
    dend_14 { pt3dadd( 543.681, 653.962, 118.714, 0.2728 ) }
    dend_14 { pt3dadd( 543.445, 653.039, 120.183, 0.2712 ) }
    dend_14 { pt3dadd( 543.13, 652.101, 121.594, 0.2684 ) }
    dend_14 { pt3dadd( 542.8, 651.16, 122.921, 0.2626 ) }
    dend_14 { pt3dadd( 542.471, 650.219, 124.148, 0.2542 ) }
    dend_14 { pt3dadd( 542.142, 649.278, 125.264, 0.2288 ) }
    dend_14 { pt3dadd( 541.812, 648.338, 127.41, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 49/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 555.37, 692.578, 38.8245, 0.5758 ) }
    dend_6 { pt3dadd( 555.571, 693.695, 38.6361, 0.2288 ) }
    dend_6 { pt3dadd( 555.85, 694.797, 38.3286, 0.3046 ) }
    dend_6 { pt3dadd( 556.238, 695.871, 38.2144, 0.3246 ) }
    dend_6 { pt3dadd( 556.435, 696.938, 37.9974, 0.3934 ) }
    dend_6 { pt3dadd( 556.507, 698.041, 37.716, 0.3702 ) }
    dend_6 { pt3dadd( 556.826, 699.111, 37.5091, 0.3692 ) }
    dend_6 { pt3dadd( 557.502, 700.006, 37.3582, 0.3936 ) }
    dend_6 { pt3dadd( 558.339, 700.785, 37.2207, 0.5406 ) }
    dend_6 { pt3dadd( 559.288, 701.415, 37.0866, 0.5466 ) }
    dend_6 { pt3dadd( 560.335, 701.867, 36.9415, 0.4814 ) }
    dend_6 { pt3dadd( 561.244, 702.543, 36.7399, 0.5002 ) }
    dend_6 { pt3dadd( 561.86, 703.409, 36.3759, 0.5438 ) }
    dend_6 { pt3dadd( 562.564, 704.224, 35.9106, 0.5814 ) }
    dend_6 { pt3dadd( 563.306, 705.088, 35.4922, 0.6336 ) }
    dend_6 { pt3dadd( 563.842, 706.095, 35.1266, 0.5862 ) }
    dend_6 { pt3dadd( 564.152, 707.193, 34.799, 0.51 ) }
    dend_6 { pt3dadd( 564.367, 708.26, 34.4946, 0.5432 ) }
    dend_6 { pt3dadd( 564.454, 709.335, 34.0785, 0.673 ) }
    dend_6 { pt3dadd( 564.54, 710.41, 33.5678, 0.582 ) }
    dend_6 { pt3dadd( 565.344, 711.017, 32.9543, 0.42 ) }
    dend_6 { pt3dadd( 566.374, 711.271, 32.3742, 0.3182 ) }
    dend_6 { pt3dadd( 567.518, 711.29, 31.915, 0.3096 ) }
    dend_6 { pt3dadd( 568.662, 711.31, 31.5636, 0.334 ) }
    dend_6 { pt3dadd( 569.765, 711.481, 31.2295, 0.4114 ) }
    dend_6 { pt3dadd( 570.765, 711.849, 30.9058, 0.4 ) }
    dend_6 { pt3dadd( 571.437, 712.774, 30.6575, 0.4428 ) }
    dend_6 { pt3dadd( 572.117, 713.685, 30.4254, 0.4408 ) }
    dend_6 { pt3dadd( 572.812, 714.563, 30.144, 0.374 ) }
    dend_6 { pt3dadd( 573.508, 715.442, 29.8357, 0.3286 ) }
    dend_6 { pt3dadd( 574.091, 716.407, 29.5674, 0.3224 ) }
    dend_6 { pt3dadd( 574.746, 716.83, 29.4669, 0.3888 ) }
    dend_6 { pt3dadd( 575.566, 717.619, 29.3552, 0.362 ) }
    dend_6 { pt3dadd( 575.661, 718.725, 29.1802, 0.3528 ) }
    dend_6 { pt3dadd( 575.215, 719.737, 28.9803, 0.3682 ) }
    dend_6 { pt3dadd( 575.089, 720.824, 28.681, 0.469 ) }
    dend_6 { pt3dadd( 575.089, 721.903, 28.2092, 0.5334 ) }
    dend_6 { pt3dadd( 575.089, 723.016, 27.6503, 0.561 ) }
    dend_6 { pt3dadd( 575.359, 723.904, 26.9676, 0.6008 ) }
    dend_6 { pt3dadd( 576.4, 724.038, 26.2573, 0.5016 ) }
    dend_6 { pt3dadd( 577.213, 724.527, 25.5903, 0.4706 ) }
    dend_6 { pt3dadd( 577.674, 725.543, 25.102, 0.5858 ) }
    dend_6 { pt3dadd( 578.172, 726.552, 24.7685, 0.6488 ) }
    dend_6 { pt3dadd( 578.91, 727.416, 24.5532, 0.5784 ) }
    dend_6 { pt3dadd( 579.987, 727.698, 24.4292, 0.4452 ) }
    dend_6 { pt3dadd( 580.857, 727.863, 24.1912, 0.4372 ) }
    dend_6 { pt3dadd( 581.495, 728.521, 24.0612, 0.4068 ) }
    dend_6 { pt3dadd( 581.582, 729.649, 24.0078, 0.4264 ) }
    dend_6 { pt3dadd( 582.004, 730.699, 23.9999, 0.5508 ) }
    dend_6 { pt3dadd( 582.649, 731.641, 24.0083, 0.5848 ) }
    dend_6 { pt3dadd( 583.255, 732.591, 24.0307, 0.4576 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_6 { pt3dadd( 584.126, 733.19, 24.08, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 1/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 555.37, 692.578, 38.8245, 0.5758 ) }
    dend_3 { pt3dadd( 556.691, 692.908, 38.397, 0.5682 ) }
    dend_3 { pt3dadd( 557.781, 692.933, 38.113, 0.4738 ) }
    dend_3 { pt3dadd( 558.702, 692.467, 37.6365, 0.4878 ) }
    dend_3 { pt3dadd( 559.3, 691.502, 37.1451, 0.5136 ) }
    dend_3 { pt3dadd( 559.361, 690.458, 36.5347, 0.5604 ) }
    dend_3 { pt3dadd( 559.478, 689.657, 35.7661, 0.4246 ) }
    dend_3 { pt3dadd( 560.388, 689.367, 35.0106, 0.3368 ) }
    dend_3 { pt3dadd( 561.524, 689.332, 34.5352, 0.2956 ) }
    dend_3 { pt3dadd( 562.614, 689.167, 34.3622, 0.3146 ) }
    dend_3 { pt3dadd( 563.64, 688.82, 34.4263, 0.3434 ) }
    dend_3 { pt3dadd( 564.68, 688.647, 34.6791, 0.4286 ) }
    dend_3 { pt3dadd( 565.756, 688.795, 34.9751, 0.4318 ) }
    dend_3 { pt3dadd( 566.682, 688.985, 34.9913, 0.502 ) }
    dend_3 { pt3dadd( 567.622, 689.237, 34.7152, 0.5488 ) }
    dend_3 { pt3dadd( 568.761, 689.268, 34.3879, 0.5844 ) }
    dend_3 { pt3dadd( 569.871, 689.0, 34.0581, 0.67 ) }
    dend_3 { pt3dadd( 570.958, 689.263, 33.7999, 0.5036 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 19/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 530.048, 663.26, 58.8787, 0.3298 ) }
    apic_15 { pt3dadd( 530.455, 663.482, 59.9393, 0.2826 ) }
    apic_15 { pt3dadd( 531.183, 663.977, 61.1388, 0.2894 ) }
    apic_15 { pt3dadd( 531.912, 664.471, 62.4103, 0.3018 ) }
    apic_15 { pt3dadd( 532.641, 664.965, 63.6846, 0.3272 ) }
    apic_15 { pt3dadd( 532.803, 665.975, 64.7077, 0.3616 ) }
    apic_15 { pt3dadd( 533.224, 666.735, 65.4996, 0.4872 ) }
    apic_15 { pt3dadd( 534.336, 666.843, 66.1702, 0.4204 ) }
    apic_15 { pt3dadd( 535.447, 666.951, 66.7346, 0.3778 ) }
    apic_15 { pt3dadd( 536.559, 667.06, 67.2283, 0.361 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 29/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 530.048, 663.26, 58.8787, 0.3298 ) }
    apic_14 { pt3dadd( 528.909, 663.545, 61.0904, 0.2288 ) }
    apic_14 { pt3dadd( 528.034, 663.765, 63.3144, 0.402 ) }
    apic_14 { pt3dadd( 527.097, 663.766, 64.2704, 0.5514 ) }
    apic_14 { pt3dadd( 526.036, 663.338, 65.247, 0.591 ) }
    apic_14 { pt3dadd( 524.976, 662.909, 66.2718, 0.4442 ) }
    apic_14 { pt3dadd( 524.588, 663.287, 67.7121, 0.3254 ) }
    apic_14 { pt3dadd( 524.428, 663.63, 69.4966, 0.2746 ) }
    apic_14 { pt3dadd( 524.461, 663.925, 71.5425, 0.2746 ) }
    apic_14 { pt3dadd( 524.607, 664.422, 73.7467, 0.2746 ) }
    apic_14 { pt3dadd( 524.893, 665.169, 75.9954, 0.2746 ) }
    apic_14 { pt3dadd( 525.134, 665.648, 78.2676, 0.2746 ) }
    apic_14 { pt3dadd( 525.303, 665.718, 80.5582, 0.2746 ) }
    apic_14 { pt3dadd( 525.472, 665.786, 82.8414, 0.2746 ) }
    apic_14 { pt3dadd( 525.649, 666.539, 84.9649, 0.2746 ) }
    apic_14 { pt3dadd( 525.826, 667.458, 86.928, 0.2746 ) }
    apic_14 { pt3dadd( 526.003, 668.377, 88.7634, 0.2746 ) }
    apic_14 { pt3dadd( 526.18, 669.296, 90.4929, 0.2746 ) }
    apic_14 { pt3dadd( 526.358, 670.215, 92.1449, 0.2746 ) }
    apic_14 { pt3dadd( 526.535, 671.133, 93.7563, 0.2746 ) }
    apic_14 { pt3dadd( 526.713, 672.052, 95.359, 0.2746 ) }
    apic_14 { pt3dadd( 526.868, 672.975, 96.959, 0.2746 ) }
    apic_14 { pt3dadd( 527.018, 673.899, 98.5547, 0.2746 ) }
    apic_14 { pt3dadd( 527.169, 674.824, 100.145, 0.2746 ) }
    apic_14 { pt3dadd( 527.319, 675.747, 101.727, 0.2746 ) }
    apic_14 { pt3dadd( 527.469, 676.671, 103.298, 0.2746 ) }
    apic_14 { pt3dadd( 527.62, 677.596, 104.853, 0.2746 ) }
    apic_14 { pt3dadd( 527.769, 678.52, 106.386, 0.2746 ) }
    apic_14 { pt3dadd( 527.92, 679.443, 107.89, 0.2746 ) }
    apic_14 { pt3dadd( 528.07, 680.368, 109.358, 0.2746 ) }
    apic_14 { pt3dadd( 528.323, 681.285, 110.765, 0.2746 ) }
    apic_14 { pt3dadd( 528.847, 682.187, 112.06, 0.2746 ) }
    apic_14 { pt3dadd( 529.37, 683.088, 113.255, 0.2744 ) }
    apic_14 { pt3dadd( 529.894, 683.99, 114.362, 0.2744 ) }
    apic_14 { pt3dadd( 530.418, 684.891, 115.393, 0.2742 ) }
    apic_14 { pt3dadd( 530.941, 685.794, 116.363, 0.2736 ) }
    apic_14 { pt3dadd( 531.995, 686.191, 117.126, 0.2728 ) }
    apic_14 { pt3dadd( 533.002, 686.636, 117.768, 0.2712 ) }
    apic_14 { pt3dadd( 533.476, 687.61, 118.428, 0.2684 ) }
    apic_14 { pt3dadd( 533.948, 688.585, 119.095, 0.2626 ) }
    apic_14 { pt3dadd( 534.422, 689.56, 119.757, 0.2542 ) }
    apic_14 { pt3dadd( 534.894, 690.534, 120.405, 0.2288 ) }
    apic_14 { pt3dadd( 535.368, 691.509, 121.781, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_2 (entry count 72/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 525.337, 649.106, 47.1136, 0.7198 ) }
    apic_12 { pt3dadd( 523.838, 648.921, 46.5679, 0.4576 ) }
    apic_12 { pt3dadd( 522.756, 649.127, 45.8604, 0.4924 ) }
    apic_12 { pt3dadd( 521.685, 649.354, 45.5479, 0.5638 ) }
    apic_12 { pt3dadd( 520.642, 649.739, 45.2029, 0.6812 ) }
    apic_12 { pt3dadd( 519.567, 649.784, 44.877, 0.7424 ) }
    apic_12 { pt3dadd( 518.449, 649.747, 44.6762, 0.7006 ) }
    apic_12 { pt3dadd( 517.507, 650.195, 44.6897, 0.69 ) }
    apic_12 { pt3dadd( 516.479, 650.576, 44.7902, 0.8028 ) }
    apic_12 { pt3dadd( 515.44, 651.031, 44.8781, 0.828 ) }
    apic_12 { pt3dadd( 514.525, 651.711, 44.9252, 0.6238 ) }
    apic_12 { pt3dadd( 513.701, 652.501, 44.9089, 0.5466 ) }
    apic_12 { pt3dadd( 512.903, 653.32, 44.8081, 0.5422 ) }
    apic_12 { pt3dadd( 512.107, 654.107, 44.5696, 0.547 ) }
    apic_12 { pt3dadd( 511.179, 654.736, 44.2504, 0.7216 ) }
    apic_12 { pt3dadd( 510.23, 655.37, 43.9146, 0.6998 ) }
    apic_12 { pt3dadd( 509.363, 656.081, 43.5182, 0.7334 ) }
    apic_12 { pt3dadd( 508.42, 656.685, 43.0688, 0.6672 ) }
    apic_12 { pt3dadd( 507.302, 656.875, 42.6395, 0.7082 ) }
    apic_12 { pt3dadd( 506.196, 656.905, 42.1523, 0.6766 ) }
    apic_12 { pt3dadd( 505.148, 657.008, 41.5635, 0.6838 ) }
    apic_12 { pt3dadd( 504.177, 657.561, 40.9884, 0.8336 ) }
    apic_12 { pt3dadd( 503.528, 658.462, 40.423, 0.68 ) }
    apic_12 { pt3dadd( 502.84, 659.364, 39.9255, 0.6574 ) }
    apic_12 { pt3dadd( 502.346, 660.38, 39.4738, 0.7152 ) }
    apic_12 { pt3dadd( 501.928, 661.42, 39.058, 0.7964 ) }
    apic_12 { pt3dadd( 501.483, 662.473, 38.7503, 0.844 ) }
    apic_12 { pt3dadd( 501.079, 663.543, 38.5132, 0.7472 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_12 { pt3dadd( 500.517, 664.528, 38.3169, 0.5498 ) }
    apic_12 { pt3dadd( 499.486, 664.972, 38.0971, 0.5004 ) }
    apic_12 { pt3dadd( 498.384, 665.077, 37.8151, 0.472 ) }
    apic_12 { pt3dadd( 497.309, 665.402, 37.5659, 0.5714 ) }
    apic_12 { pt3dadd( 496.479, 666.177, 37.3416, 0.7036 ) }
    apic_12 { pt3dadd( 495.569, 666.834, 37.1238, 0.744 ) }
    apic_12 { pt3dadd( 494.508, 667.066, 36.841, 0.8964 ) }
    apic_12 { pt3dadd( 493.498, 667.481, 36.5159, 0.8044 ) }
    apic_12 { pt3dadd( 492.624, 668.18, 36.2289, 0.62 ) }
    apic_12 { pt3dadd( 491.921, 669.057, 36.0716, 0.5748 ) }
    apic_12 { pt3dadd( 491.423, 670.027, 36.0744, 0.6532 ) }
    apic_12 { pt3dadd( 490.98, 671.068, 36.0906, 0.697 ) }
    apic_12 { pt3dadd( 490.576, 672.117, 36.0181, 0.585 ) }
    apic_12 { pt3dadd( 490.08, 673.147, 35.9061, 0.6274 ) }
    apic_12 { pt3dadd( 489.681, 674.177, 35.6863, 0.6374 ) }
    apic_12 { pt3dadd( 489.349, 675.192, 35.3226, 0.5308 ) }
    apic_12 { pt3dadd( 488.784, 676.137, 34.9429, 0.4842 ) }
    apic_12 { pt3dadd( 488.029, 676.969, 34.664, 0.5796 ) }
    apic_12 { pt3dadd( 486.973, 677.226, 34.5164, 0.789 ) }
    apic_12 { pt3dadd( 485.873, 677.043, 34.4924, 0.7896 ) }
    apic_12 { pt3dadd( 484.744, 677.056, 34.4596, 0.8416 ) }
    apic_12 { pt3dadd( 483.651, 677.221, 34.3571, 0.9206 ) }
    apic_12 { pt3dadd( 482.579, 677.615, 34.2558, 0.9214 ) }
    apic_12 { pt3dadd( 481.576, 678.152, 34.1502, 0.9458 ) }
    apic_12 { pt3dadd( 480.767, 678.935, 34.0362, 0.879 ) }
    apic_12 { pt3dadd( 480.217, 679.936, 33.9172, 0.8412 ) }
    apic_12 { pt3dadd( 479.677, 680.938, 33.7982, 0.8104 ) }
    apic_12 { pt3dadd( 478.991, 681.852, 33.6532, 0.7932 ) }
    apic_12 { pt3dadd( 478.203, 682.638, 33.427, 0.7964 ) }
    apic_12 { pt3dadd( 477.244, 683.215, 33.1274, 0.6322 ) }
    apic_12 { pt3dadd( 476.25, 683.779, 32.8294, 0.4662 ) }
    apic_12 { pt3dadd( 475.364, 684.471, 32.508, 0.4006 ) }
    apic_12 { pt3dadd( 474.666, 685.333, 32.1275, 0.4772 ) }
    apic_12 { pt3dadd( 474.245, 686.376, 31.7478, 0.5722 ) }
    apic_12 { pt3dadd( 473.621, 686.795, 31.2914, 0.5194 ) }
    apic_12 { pt3dadd( 473.007, 687.734, 30.9476, 0.3886 ) }
    apic_12 { pt3dadd( 472.601, 688.797, 30.6936, 0.3068 ) }
    apic_12 { pt3dadd( 472.319, 689.894, 30.5169, 0.2872 ) }
    apic_12 { pt3dadd( 471.505, 690.513, 30.3976, 0.2988 ) }
    apic_12 { pt3dadd( 470.371, 690.621, 30.3052, 0.3144 ) }
    apic_12 { pt3dadd( 469.353, 691.128, 30.2179, 0.3736 ) }
    apic_12 { pt3dadd( 468.423, 691.794, 30.1025, 0.3346 ) }
    apic_12 { pt3dadd( 467.812, 692.746, 29.9603, 0.3008 ) }
    apic_12 { pt3dadd( 467.202, 693.623, 29.6887, 0.2764 ) }
    apic_12 { pt3dadd( 466.609, 694.536, 29.314, 0.278 ) }
    apic_12 { pt3dadd( 466.089, 695.456, 28.8722, 0.2808 ) }
    apic_12 { pt3dadd( 465.388, 696.338, 28.5267, 0.286 ) }
    apic_12 { pt3dadd( 464.994, 697.406, 28.2794, 0.2958 ) }
    apic_12 { pt3dadd( 464.727, 698.515, 28.1226, 0.3146 ) }
    apic_12 { pt3dadd( 464.56, 699.637, 28.0445, 0.3448 ) }
    apic_12 { pt3dadd( 463.954, 700.596, 28.0162, 0.4248 ) }
    apic_12 { pt3dadd( 462.953, 700.996, 28.0498, 0.456 ) }
    apic_12 { pt3dadd( 461.823, 701.158, 28.0661, 0.397 ) }
    apic_12 { pt3dadd( 460.678, 701.158, 28.0652, 0.3954 ) }
    apic_12 { pt3dadd( 459.576, 701.193, 27.9728, 0.3276 ) }
    apic_12 { pt3dadd( 458.548, 701.636, 27.8905, 0.288 ) }
    apic_12 { pt3dadd( 457.801, 702.479, 27.8225, 0.2542 ) }
    apic_12 { pt3dadd( 456.71, 702.731, 27.7684, 0.2288 ) }
    apic_12 { pt3dadd( 456.342, 703.674, 27.72, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 59/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 525.337, 649.106, 47.1136, 0.7198 ) }
    apic_3 { pt3dadd( 525.38, 648.353, 47.0016, 0.8356 ) }
    apic_3 { pt3dadd( 525.622, 647.273, 46.7558, 0.9982 ) }
    apic_3 { pt3dadd( 525.802, 646.155, 46.4724, 1.0926 ) }
    apic_3 { pt3dadd( 526.032, 645.083, 46.1224, 1.131 ) }
    apic_3 { pt3dadd( 525.893, 643.972, 45.8125, 1.1784 ) }
    apic_3 { pt3dadd( 526.096, 642.863, 45.5832, 1.1514 ) }
    apic_3 { pt3dadd( 526.544, 641.813, 45.4289, 0.9734 ) }
    apic_3 { pt3dadd( 526.872, 640.718, 45.3247, 0.8074 ) }
    apic_3 { pt3dadd( 527.137, 639.628, 45.1951, 0.8474 ) }
    apic_3 { pt3dadd( 527.148, 638.51, 45.211, 0.8348 ) }
    apic_3 { pt3dadd( 527.104, 637.368, 45.2547, 0.775 ) }
    apic_3 { pt3dadd( 526.82, 636.261, 45.2992, 0.842 ) }
    apic_3 { pt3dadd( 526.482, 635.172, 45.3636, 0.7874 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 73/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 570.958, 689.263, 33.7999, 0.5036 ) }
    dend_5 { pt3dadd( 572.196, 689.795, 35.2789, 0.6864 ) }
    dend_5 { pt3dadd( 573.186, 690.367, 35.1361, 0.689 ) }
    dend_5 { pt3dadd( 574.255, 690.701, 35.0862, 0.527 ) }
    dend_5 { pt3dadd( 575.387, 690.763, 34.998, 0.5006 ) }
    dend_5 { pt3dadd( 576.506, 690.849, 34.8544, 0.4956 ) }
    dend_5 { pt3dadd( 577.569, 691.188, 34.7197, 0.5024 ) }
    dend_5 { pt3dadd( 578.647, 691.415, 34.6517, 0.4368 ) }
    dend_5 { pt3dadd( 579.737, 691.134, 34.6564, 0.4652 ) }
    dend_5 { pt3dadd( 580.812, 690.832, 34.7738, 0.477 ) }
    dend_5 { pt3dadd( 581.936, 690.791, 34.9616, 0.467 ) }
    dend_5 { pt3dadd( 583.016, 691.044, 35.208, 0.3756 ) }
    dend_5 { pt3dadd( 583.938, 691.623, 35.5214, 0.3302 ) }
    dend_5 { pt3dadd( 584.887, 692.223, 35.7946, 0.3326 ) }
    dend_5 { pt3dadd( 585.963, 692.584, 35.9747, 0.3718 ) }
    dend_5 { pt3dadd( 587.05, 692.931, 36.0674, 0.5054 ) }
    dend_5 { pt3dadd( 588.093, 693.399, 36.0828, 0.4566 ) }
    dend_5 { pt3dadd( 589.157, 693.661, 35.9708, 0.4336 ) }
    dend_5 { pt3dadd( 590.275, 693.651, 35.8044, 0.521 ) }
    dend_5 { pt3dadd( 591.41, 693.519, 35.6798, 0.509 ) }
    dend_5 { pt3dadd( 592.546, 693.391, 35.607, 0.4162 ) }
    dend_5 { pt3dadd( 593.63, 693.584, 35.5365, 0.359 ) }
    dend_5 { pt3dadd( 594.674, 693.902, 35.6177, 0.3804 ) }
    dend_5 { pt3dadd( 595.693, 694.218, 35.903, 0.4874 ) }
    dend_5 { pt3dadd( 596.8, 694.271, 36.2376, 0.5906 ) }
    dend_5 { pt3dadd( 597.902, 694.128, 36.6128, 0.5546 ) }
    dend_5 { pt3dadd( 598.972, 694.403, 36.9611, 0.4482 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_5 { pt3dadd( 599.998, 694.904, 37.2266, 0.4438 ) }
    dend_5 { pt3dadd( 600.995, 695.466, 37.3951, 0.4134 ) }
    dend_5 { pt3dadd( 601.904, 696.155, 37.4881, 0.4672 ) }
    dend_5 { pt3dadd( 602.794, 696.875, 37.5388, 0.4884 ) }
    dend_5 { pt3dadd( 603.83, 697.338, 37.5637, 0.4516 ) }
    dend_5 { pt3dadd( 604.939, 697.229, 37.5827, 0.5234 ) }
    dend_5 { pt3dadd( 606.059, 696.997, 37.6085, 0.4358 ) }
    dend_5 { pt3dadd( 607.145, 696.641, 37.6454, 0.4302 ) }
    dend_5 { pt3dadd( 608.268, 696.695, 37.6936, 0.3448 ) }
    dend_5 { pt3dadd( 609.369, 696.998, 37.7546, 0.32 ) }
    dend_5 { pt3dadd( 610.498, 697.138, 37.847, 0.3128 ) }
    dend_5 { pt3dadd( 611.598, 697.153, 38.0279, 0.34 ) }
    dend_5 { pt3dadd( 612.724, 697.146, 38.2245, 0.4228 ) }
    dend_5 { pt3dadd( 613.858, 697.096, 38.3127, 0.4198 ) }
    dend_5 { pt3dadd( 614.976, 696.873, 38.3163, 0.4866 ) }
    dend_5 { pt3dadd( 616.084, 697.064, 38.2348, 0.4872 ) }
    dend_5 { pt3dadd( 617.07, 697.565, 38.029, 0.6314 ) }
    dend_5 { pt3dadd( 618.122, 698.004, 37.8106, 0.6584 ) }
    dend_5 { pt3dadd( 619.259, 698.056, 37.625, 0.7344 ) }
    dend_5 { pt3dadd( 620.4, 697.992, 37.4741, 0.748 ) }
    dend_5 { pt3dadd( 621.505, 697.706, 37.3615, 0.706 ) }
    dend_5 { pt3dadd( 622.645, 697.655, 37.2784, 0.723 ) }
    dend_5 { pt3dadd( 623.757, 697.878, 37.1571, 0.7542 ) }
    dend_5 { pt3dadd( 624.813, 698.245, 36.9566, 0.5848 ) }
    dend_5 { pt3dadd( 625.754, 698.869, 36.4008, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 570.958, 689.263, 33.7999, 0.5036 ) }
    dend_4 { pt3dadd( 571.966, 689.585, 33.3066, 0.3998 ) }
    dend_4 { pt3dadd( 572.323, 688.868, 32.734, 0.3592 ) }
    dend_4 { pt3dadd( 572.721, 688.078, 32.2703, 0.4604 ) }
    dend_4 { pt3dadd( 573.771, 687.894, 31.7747, 0.4794 ) }
    dend_4 { pt3dadd( 574.782, 688.181, 31.2981, 0.6462 ) }
    dend_4 { pt3dadd( 575.823, 688.653, 30.9397, 0.5462 ) }
    dend_4 { pt3dadd( 576.863, 688.559, 30.6541, 0.5158 ) }
    dend_4 { pt3dadd( 577.709, 687.853, 30.4052, 0.623 ) }
    dend_4 { pt3dadd( 578.55, 687.088, 30.2347, 0.713 ) }
    dend_4 { pt3dadd( 579.576, 686.641, 30.1865, 0.7232 ) }
    dend_4 { pt3dadd( 580.641, 686.305, 30.2669, 0.5866 ) }
    dend_4 { pt3dadd( 581.699, 685.897, 30.3761, 0.6304 ) }
    dend_4 { pt3dadd( 582.698, 685.345, 30.4643, 0.6438 ) }
    dend_4 { pt3dadd( 583.713, 684.824, 30.515, 0.5376 ) }
    dend_4 { pt3dadd( 584.792, 684.451, 30.5152, 0.52 ) }
    dend_4 { pt3dadd( 585.92, 684.354, 30.4441, 0.5338 ) }
    dend_4 { pt3dadd( 587.041, 684.414, 30.28, 0.5614 ) }
    dend_4 { pt3dadd( 588.173, 684.505, 30.0989, 0.6028 ) }
    dend_4 { pt3dadd( 589.289, 684.417, 29.9449, 0.4994 ) }
    dend_4 { pt3dadd( 590.376, 684.063, 29.8362, 0.4954 ) }
    dend_4 { pt3dadd( 591.494, 683.865, 29.7704, 0.4922 ) }
    dend_4 { pt3dadd( 592.63, 683.763, 29.7436, 0.4658 ) }
    dend_4 { pt3dadd( 593.627, 683.31, 29.7483, 0.5138 ) }
    dend_4 { pt3dadd( 594.305, 682.412, 29.7713, 0.5928 ) }
    dend_4 { pt3dadd( 594.7, 681.345, 29.808, 0.5588 ) }
    dend_4 { pt3dadd( 595.172, 680.329, 29.8595, 0.4556 ) }
    dend_4 { pt3dadd( 595.977, 679.53, 29.9309, 0.4576 ) }
    dend_4 { pt3dadd( 596.9, 678.855, 30.0283, 0.4396 ) }
    dend_4 { pt3dadd( 597.858, 678.235, 30.1619, 0.512 ) }
    dend_4 { pt3dadd( 598.895, 677.834, 30.373, 0.5894 ) }
    dend_4 { pt3dadd( 599.974, 677.545, 30.6569, 0.5526 ) }
    dend_4 { pt3dadd( 601.024, 677.183, 30.9845, 0.4442 ) }
    dend_4 { pt3dadd( 602.025, 676.805, 31.3706, 0.4366 ) }
    dend_4 { pt3dadd( 603.031, 676.362, 31.6988, 0.3994 ) }
    dend_4 { pt3dadd( 603.975, 675.785, 31.8116, 0.442 ) }
    dend_4 { pt3dadd( 604.755, 675.009, 31.7335, 0.4392 ) }
    dend_4 { pt3dadd( 605.336, 674.062, 31.5277, 0.3716 ) }
    dend_4 { pt3dadd( 606.047, 673.223, 31.269, 0.3226 ) }
    dend_4 { pt3dadd( 607.022, 672.656, 31.0218, 0.3174 ) }
    dend_4 { pt3dadd( 608.075, 672.246, 30.8862, 0.3496 ) }
    dend_4 { pt3dadd( 608.863, 671.499, 30.8543, 0.434 ) }
    dend_4 { pt3dadd( 609.243, 670.44, 30.8798, 0.4716 ) }
    dend_4 { pt3dadd( 609.448, 669.338, 30.9918, 0.4332 ) }
    dend_4 { pt3dadd( 609.678, 668.229, 31.1122, 0.4286 ) }
    dend_4 { pt3dadd( 609.783, 667.126, 31.1108, 0.5534 ) }
    dend_4 { pt3dadd( 609.971, 666.015, 31.0442, 0.5948 ) }
    dend_4 { pt3dadd( 610.348, 664.939, 30.9733, 0.4514 ) }
    dend_4 { pt3dadd( 611.052, 664.062, 30.9117, 0.339 ) }
    dend_4 { pt3dadd( 612.025, 663.486, 30.8669, 0.3008 ) }
    dend_4 { pt3dadd( 612.903, 662.769, 30.851, 0.318 ) }
    dend_4 { pt3dadd( 613.494, 661.838, 30.8098, 0.3808 ) }
    dend_4 { pt3dadd( 613.875, 660.777, 30.7978, 0.3476 ) }
    dend_4 { pt3dadd( 614.304, 659.737, 30.935, 0.3252 ) }
    dend_4 { pt3dadd( 614.929, 658.81, 31.2304, 0.3222 ) }
    dend_4 { pt3dadd( 615.18, 657.72, 31.612, 0.3586 ) }
    dend_4 { pt3dadd( 615.033, 656.658, 32.1608, 0.4516 ) }
    dend_4 { pt3dadd( 614.345, 655.93, 32.8852, 0.499 ) }
    dend_4 { pt3dadd( 613.605, 655.165, 33.6868, 0.5084 ) }
    dend_4 { pt3dadd( 612.999, 654.281, 34.5033, 0.4494 ) }
    dend_4 { pt3dadd( 612.541, 653.25, 35.2458, 0.482 ) }
    dend_4 { pt3dadd( 612.247, 652.188, 35.9548, 0.5396 ) }
    dend_4 { pt3dadd( 611.628, 651.264, 36.5901, 0.4322 ) }
    dend_4 { pt3dadd( 610.816, 650.522, 37.1731, 0.356 ) }
    dend_4 { pt3dadd( 610.049, 649.679, 37.6286, 0.305 ) }
    dend_4 { pt3dadd( 609.752, 648.648, 38.64, 0.4576 ) }
    // Section: apic_17, id: apic_17, parent: apic_15 (entry count 91/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 536.559, 667.06, 67.2283, 0.361 ) }
    apic_17 { pt3dadd( 537.523, 667.228, 67.6438, 0.4858 ) }
    apic_17 { pt3dadd( 538.646, 667.397, 68.0288, 0.4192 ) }
    apic_17 { pt3dadd( 539.753, 667.604, 68.383, 0.3682 ) }
    apic_17 { pt3dadd( 540.698, 668.249, 68.6608, 0.3794 ) }
    apic_17 { pt3dadd( 541.643, 668.893, 68.8912, 0.345 ) }
    apic_17 { pt3dadd( 542.687, 668.985, 69.1373, 0.3204 ) }
    apic_17 { pt3dadd( 543.791, 668.741, 69.4324, 0.3132 ) }
    apic_17 { pt3dadd( 544.896, 668.499, 69.7726, 0.342 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_17 { pt3dadd( 546.002, 668.255, 70.154, 0.4198 ) }
    apic_17 { pt3dadd( 546.967, 667.672, 70.5704, 0.4454 ) }
    apic_17 { pt3dadd( 547.92, 667.061, 71.0125, 0.384 ) }
    apic_17 { pt3dadd( 548.874, 666.45, 71.4753, 0.3404 ) }
    apic_17 { pt3dadd( 549.827, 665.839, 71.962, 0.375 ) }
    apic_17 { pt3dadd( 550.781, 665.228, 72.4794, 0.337 ) }
    apic_17 { pt3dadd( 551.734, 664.617, 73.029, 0.3056 ) }
    apic_17 { pt3dadd( 552.646, 664.055, 73.6716, 0.2854 ) }
    apic_17 { pt3dadd( 553.511, 663.549, 74.4495, 0.2942 ) }
    apic_17 { pt3dadd( 554.375, 663.041, 75.3091, 0.3118 ) }
    apic_17 { pt3dadd( 555.24, 662.534, 76.2034, 0.3396 ) }
    apic_17 { pt3dadd( 556.239, 662.083, 76.9608, 0.4156 ) }
    apic_17 { pt3dadd( 557.302, 661.66, 77.5298, 0.4374 ) }
    apic_17 { pt3dadd( 558.366, 661.237, 77.9442, 0.368 ) }
    apic_17 { pt3dadd( 559.419, 660.798, 78.2558, 0.3162 ) }
    apic_17 { pt3dadd( 560.407, 660.242, 78.5669, 0.3044 ) }
    apic_17 { pt3dadd( 561.394, 659.687, 78.909, 0.3318 ) }
    apic_17 { pt3dadd( 562.381, 659.13, 79.3103, 0.3698 ) }
    apic_17 { pt3dadd( 563.326, 658.53, 79.7784, 0.5034 ) }
    apic_17 { pt3dadd( 563.985, 657.635, 80.3373, 0.4452 ) }
    apic_17 { pt3dadd( 564.643, 656.741, 80.9626, 0.4484 ) }
    apic_17 { pt3dadd( 565.287, 655.839, 81.6329, 0.3736 ) }
    apic_17 { pt3dadd( 565.654, 654.833, 82.3763, 0.3992 ) }
    apic_17 { pt3dadd( 565.817, 653.818, 83.1838, 0.3346 ) }
    apic_17 { pt3dadd( 565.754, 652.796, 84.0431, 0.3012 ) }
    apic_17 { pt3dadd( 566.055, 651.723, 84.7683, 0.2766 ) }
    apic_17 { pt3dadd( 566.774, 651.022, 85.4266, 0.2782 ) }
    apic_17 { pt3dadd( 567.787, 650.64, 86.0852, 0.2814 ) }
    apic_17 { pt3dadd( 568.865, 650.828, 86.6785, 0.287 ) }
    apic_17 { pt3dadd( 569.957, 651.113, 87.2155, 0.2988 ) }
    apic_17 { pt3dadd( 571.047, 651.398, 87.7195, 0.3142 ) }
    apic_17 { pt3dadd( 572.138, 651.683, 88.212, 0.3734 ) }
    apic_17 { pt3dadd( 573.027, 652.299, 88.6466, 0.3338 ) }
    apic_17 { pt3dadd( 573.88, 653.041, 89.0025, 0.3 ) }
    apic_17 { pt3dadd( 574.167, 653.196, 89.5154, 0.2746 ) }
    apic_17 { pt3dadd( 574.76, 653.11, 90.0721, 0.2746 ) }
    apic_17 { pt3dadd( 575.874, 653.337, 90.496, 0.2746 ) }
    apic_17 { pt3dadd( 576.996, 653.465, 90.8118, 0.2746 ) }
    apic_17 { pt3dadd( 578.132, 653.567, 91.0445, 0.2746 ) }
    apic_17 { pt3dadd( 579.166, 653.941, 91.2139, 0.2746 ) }
    apic_17 { pt3dadd( 580.241, 654.313, 91.343, 0.2746 ) }
    apic_17 { pt3dadd( 581.336, 654.482, 91.4934, 0.2746 ) }
    apic_17 { pt3dadd( 582.45, 654.696, 91.6546, 0.2746 ) }
    apic_17 { pt3dadd( 583.56, 654.711, 91.9131, 0.2746 ) }
    apic_17 { pt3dadd( 584.674, 654.711, 92.2519, 0.2746 ) }
    apic_17 { pt3dadd( 585.814, 654.711, 92.5803, 0.2746 ) }
    apic_17 { pt3dadd( 586.957, 654.672, 92.8704, 0.2746 ) }
    apic_17 { pt3dadd( 588.097, 654.597, 93.135, 0.2746 ) }
    apic_17 { pt3dadd( 589.155, 654.586, 93.5124, 0.2746 ) }
    apic_17 { pt3dadd( 590.215, 654.235, 93.8722, 0.2746 ) }
    apic_17 { pt3dadd( 591.352, 654.139, 94.2374, 0.2746 ) }
    apic_17 { pt3dadd( 592.496, 654.139, 94.6338, 0.2746 ) }
    apic_17 { pt3dadd( 593.505, 654.139, 95.1437, 0.2746 ) }
    apic_17 { pt3dadd( 593.557, 654.139, 96.0613, 0.2746 ) }
    apic_17 { pt3dadd( 594.446, 654.382, 96.9884, 0.2746 ) }
    apic_17 { pt3dadd( 595.344, 654.804, 97.9213, 0.2746 ) }
    apic_17 { pt3dadd( 596.109, 655.455, 98.7683, 0.2746 ) }
    apic_17 { pt3dadd( 596.969, 656.181, 99.4706, 0.2746 ) }
    apic_17 { pt3dadd( 597.842, 656.914, 100.005, 0.2746 ) }
    apic_17 { pt3dadd( 598.426, 657.576, 100.498, 0.2746 ) }
    apic_17 { pt3dadd( 598.623, 658.675, 100.97, 0.2746 ) }
    apic_17 { pt3dadd( 598.774, 659.786, 101.441, 0.2744 ) }
    apic_17 { pt3dadd( 599.719, 660.088, 101.968, 0.2744 ) }
    apic_17 { pt3dadd( 600.187, 660.353, 102.78, 0.2742 ) }
    apic_17 { pt3dadd( 600.941, 660.66, 103.678, 0.2736 ) }
    apic_17 { pt3dadd( 602.072, 660.65, 104.412, 0.2728 ) }
    apic_17 { pt3dadd( 603.212, 660.559, 104.942, 0.2712 ) }
    apic_17 { pt3dadd( 604.356, 660.546, 105.292, 0.2684 ) }
    apic_17 { pt3dadd( 605.5, 660.546, 105.484, 0.2626 ) }
    apic_17 { pt3dadd( 606.641, 660.526, 105.55, 0.2542 ) }
    apic_17 { pt3dadd( 607.764, 660.302, 105.56, 0.2288 ) }
    apic_17 { pt3dadd( 608.722, 659.859, 105.56, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_15 (entry count 72/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 536.559, 667.06, 67.2283, 0.361 ) }
    apic_16 { pt3dadd( 537.36, 667.793, 68.8447, 0.2288 ) }
    apic_16 { pt3dadd( 538.118, 668.486, 71.2544, 0.2838 ) }
    apic_16 { pt3dadd( 538.218, 669.054, 72.2946, 0.2912 ) }
    apic_16 { pt3dadd( 537.812, 669.524, 73.626, 0.3066 ) }
    apic_16 { pt3dadd( 537.405, 669.994, 75.1433, 0.3288 ) }
    apic_16 { pt3dadd( 537.352, 670.958, 76.5027, 0.4004 ) }
    apic_16 { pt3dadd( 537.424, 672.1, 77.6115, 0.3846 ) }
    apic_16 { pt3dadd( 538.073, 672.831, 78.6954, 0.3912 ) }
    apic_16 { pt3dadd( 538.75, 673.541, 79.7577, 0.4586 ) }
    apic_16 { pt3dadd( 539.624, 673.927, 80.7587, 0.543 ) }
    apic_16 { pt3dadd( 540.729, 673.928, 81.6774, 0.4396 ) }
    apic_16 { pt3dadd( 541.833, 673.93, 82.5625, 0.364 ) }
    apic_16 { pt3dadd( 542.938, 673.932, 83.4159, 0.3478 ) }
    apic_16 { pt3dadd( 544.042, 673.934, 84.2268, 0.402 ) }
    apic_16 { pt3dadd( 545.147, 673.936, 85.0195, 0.5514 ) }
    apic_16 { pt3dadd( 546.247, 673.94, 85.822, 0.591 ) }
    apic_16 { pt3dadd( 547.33, 673.951, 86.6676, 0.4442 ) }
    apic_16 { pt3dadd( 548.412, 673.964, 87.5515, 0.3254 ) }
    apic_16 { pt3dadd( 549.494, 673.976, 88.4691, 0.2746 ) }
    apic_16 { pt3dadd( 550.575, 673.988, 89.418, 0.2746 ) }
    apic_16 { pt3dadd( 551.657, 674.0, 90.3988, 0.2746 ) }
    apic_16 { pt3dadd( 552.74, 674.013, 91.4172, 0.2746 ) }
    apic_16 { pt3dadd( 553.697, 674.524, 92.4736, 0.2746 ) }
    apic_16 { pt3dadd( 554.649, 675.06, 93.5875, 0.2744 ) }
    apic_16 { pt3dadd( 555.601, 675.595, 94.7786, 0.2744 ) }
    apic_16 { pt3dadd( 556.405, 675.813, 96.1139, 0.2742 ) }
    apic_16 { pt3dadd( 556.82, 675.204, 97.72, 0.2736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_16 { pt3dadd( 557.235, 674.594, 99.5383, 0.2728 ) }
    apic_16 { pt3dadd( 557.643, 674.779, 101.607, 0.2712 ) }
    apic_16 { pt3dadd( 558.049, 675.066, 103.81, 0.2684 ) }
    apic_16 { pt3dadd( 558.455, 675.354, 106.034, 0.2626 ) }
    apic_16 { pt3dadd( 558.861, 675.641, 108.183, 0.2542 ) }
    apic_16 { pt3dadd( 559.267, 675.929, 110.185, 0.2288 ) }
    apic_16 { pt3dadd( 559.673, 676.216, 114.106, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 7/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 526.482, 635.172, 45.3636, 0.7874 ) }
    apic_5 { pt3dadd( 525.999, 633.669, 45.3729, 0.8686 ) }
    apic_5 { pt3dadd( 525.652, 632.606, 45.4124, 0.8194 ) }
    apic_5 { pt3dadd( 525.349, 631.538, 45.4373, 0.7822 ) }
    apic_5 { pt3dadd( 525.229, 630.414, 45.3538, 0.6806 ) }
    apic_5 { pt3dadd( 525.156, 629.417, 45.0097, 0.6502 ) }
    apic_5 { pt3dadd( 525.668, 628.726, 44.3814, 0.7442 ) }
    apic_5 { pt3dadd( 525.668, 627.91, 43.5254, 0.6444 ) }
    apic_5 { pt3dadd( 525.668, 626.897, 42.572, 0.647 ) }
    apic_5 { pt3dadd( 525.668, 625.787, 41.7096, 0.8832 ) }
    apic_5 { pt3dadd( 525.209, 624.778, 40.9979, 1.1138 ) }
    apic_5 { pt3dadd( 524.279, 622.951, 39.7765, 1.0062 ) }
    apic_5 { pt3dadd( 523.833, 622.001, 39.2784, 0.9246 ) }
    apic_5 { pt3dadd( 523.838, 620.963, 38.771, 0.7906 ) }
    apic_5 { pt3dadd( 523.838, 620.24, 38.414, 0.6864 ) }
    apic_5 { pt3dadd( 523.838, 619.096, 38.1889, 0.48 ) }
    apic_5 { pt3dadd( 523.838, 617.952, 38.085, 0.3912 ) }
    apic_5 { pt3dadd( 523.838, 616.808, 38.066, 0.4002 ) }
    apic_5 { pt3dadd( 523.919, 615.67, 38.1265, 0.4908 ) }
    apic_5 { pt3dadd( 524.404, 614.645, 38.2365, 0.756 ) }
    apic_5 { pt3dadd( 524.793, 613.658, 38.4594, 0.7768 ) }
    apic_5 { pt3dadd( 525.21, 612.727, 38.759, 1.042 ) }
    apic_5 { pt3dadd( 525.325, 611.61, 39.0594, 1.1198 ) }
    apic_5 { pt3dadd( 525.325, 610.484, 39.3344, 1.2134 ) }
    apic_5 { pt3dadd( 525.325, 609.34, 39.5343, 1.1748 ) }
    apic_5 { pt3dadd( 525.325, 608.196, 39.6651, 0.988 ) }
    apic_5 { pt3dadd( 525.439, 607.061, 39.734, 0.9742 ) }
    apic_5 { pt3dadd( 525.439, 605.917, 39.7642, 1.165 ) }
    apic_5 { pt3dadd( 525.439, 604.773, 39.7768, 1.1536 ) }
    apic_5 { pt3dadd( 525.439, 603.629, 39.7835, 1.0768 ) }
    apic_5 { pt3dadd( 525.487, 602.487, 39.7928, 0.9738 ) }
    apic_5 { pt3dadd( 525.707, 601.37, 39.8059, 0.821 ) }
    apic_5 { pt3dadd( 526.08, 600.3, 39.8241, 0.8108 ) }
    apic_5 { pt3dadd( 526.218, 599.176, 39.849, 0.8374 ) }
    apic_5 { pt3dadd( 526.621, 598.121, 39.8846, 0.8948 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 42/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 526.482, 635.172, 45.3636, 0.7874 ) }
    apic_4 { pt3dadd( 525.676, 635.169, 46.3593, 0.6864 ) }
    apic_4 { pt3dadd( 524.665, 635.681, 46.8672, 0.7284 ) }
    apic_4 { pt3dadd( 523.534, 635.801, 47.0714, 0.8022 ) }
    apic_4 { pt3dadd( 522.451, 635.556, 47.3822, 0.7178 ) }
    apic_4 { pt3dadd( 521.383, 635.188, 47.7184, 0.7182 ) }
    apic_4 { pt3dadd( 520.287, 634.969, 48.085, 0.6452 ) }
    apic_4 { pt3dadd( 519.169, 634.983, 48.4882, 0.6386 ) }
    apic_4 { pt3dadd( 518.084, 635.255, 48.8947, 0.688 ) }
    apic_4 { pt3dadd( 517.041, 635.67, 49.301, 0.7096 ) }
    apic_4 { pt3dadd( 515.962, 636.021, 49.651, 0.6318 ) }
    apic_4 { pt3dadd( 515.03, 636.643, 49.9402, 0.6004 ) }
    apic_4 { pt3dadd( 514.342, 637.545, 50.19, 0.4516 ) }
    apic_4 { pt3dadd( 513.82, 638.56, 50.4252, 0.3876 ) }
    apic_4 { pt3dadd( 513.484, 639.645, 50.689, 0.3856 ) }
    apic_4 { pt3dadd( 513.331, 640.698, 51.0846, 0.5022 ) }
    apic_4 { pt3dadd( 512.857, 641.622, 51.595, 0.5898 ) }
    apic_4 { pt3dadd( 512.068, 642.357, 52.1534, 0.691 ) }
    apic_4 { pt3dadd( 511.216, 643.102, 52.6352, 0.7194 ) }
    apic_4 { pt3dadd( 510.4, 643.904, 53.0062, 0.6288 ) }
    apic_4 { pt3dadd( 509.603, 644.724, 53.2804, 0.6978 ) }
    apic_4 { pt3dadd( 508.847, 645.582, 53.4828, 0.8204 ) }
    apic_4 { pt3dadd( 508.357, 646.604, 53.6578, 0.6164 ) }
    apic_4 { pt3dadd( 507.983, 647.685, 53.849, 0.501 ) }
    apic_4 { pt3dadd( 507.629, 648.772, 54.0971, 0.383 ) }
    apic_4 { pt3dadd( 507.072, 649.735, 54.4684, 0.387 ) }
    apic_4 { pt3dadd( 506.492, 650.612, 55.0147, 0.4556 ) }
    apic_4 { pt3dadd( 505.618, 651.137, 55.697, 0.5132 ) }
    apic_4 { pt3dadd( 504.575, 651.174, 56.4463, 0.5002 ) }
    apic_4 { pt3dadd( 503.465, 650.977, 57.0531, 0.602 ) }
    apic_4 { pt3dadd( 502.365, 651.046, 57.6498, 0.6372 ) }
    apic_4 { pt3dadd( 501.408, 651.57, 58.242, 0.5316 ) }
    apic_4 { pt3dadd( 500.651, 652.406, 58.7723, 0.4788 ) }
    apic_4 { pt3dadd( 500.205, 653.453, 59.2228, 0.6018 ) }
    apic_4 { pt3dadd( 500.208, 654.548, 59.7156, 0.6738 ) }
    apic_4 { pt3dadd( 500.452, 655.535, 60.3221, 0.6486 ) }
    apic_4 { pt3dadd( 499.753, 656.387, 60.8824, 0.457 ) }
    apic_4 { pt3dadd( 498.671, 656.732, 61.3077, 0.349 ) }
    apic_4 { pt3dadd( 497.802, 657.463, 61.6283, 0.3192 ) }
    apic_4 { pt3dadd( 497.059, 658.281, 61.9889, 0.3516 ) }
    apic_4 { pt3dadd( 496.011, 658.671, 62.3356, 0.4452 ) }
    apic_4 { pt3dadd( 494.87, 658.585, 62.6472, 0.4572 ) }
    apic_4 { pt3dadd( 493.743, 658.521, 62.9955, 0.5754 ) }
    apic_4 { pt3dadd( 492.68, 658.616, 63.4785, 0.5574 ) }
    apic_4 { pt3dadd( 491.66, 658.432, 64.0819, 0.5334 ) }
    apic_4 { pt3dadd( 490.59, 658.581, 64.6596, 0.4412 ) }
    apic_4 { pt3dadd( 489.726, 659.315, 65.2016, 0.503 ) }
    apic_4 { pt3dadd( 488.845, 659.94, 65.7418, 0.403 ) }
    apic_4 { pt3dadd( 487.739, 660.089, 66.2502, 0.3432 ) }
    apic_4 { pt3dadd( 486.615, 660.095, 66.7027, 0.3086 ) }
    apic_4 { pt3dadd( 485.524, 660.133, 67.1852, 0.3324 ) }
    apic_4 { pt3dadd( 484.414, 660.317, 67.6301, 0.4086 ) }
    apic_4 { pt3dadd( 483.342, 660.706, 68.0145, 0.3936 ) }
    apic_4 { pt3dadd( 482.326, 661.174, 68.3967, 0.4372 ) }
    apic_4 { pt3dadd( 481.38, 661.737, 68.8125, 0.3994 ) }
    apic_4 { pt3dadd( 480.398, 662.271, 69.2121, 0.4492 ) }
    apic_4 { pt3dadd( 479.346, 662.659, 69.4996, 0.4166 ) }
    apic_4 { pt3dadd( 478.249, 662.733, 69.6816, 0.5046 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_4 { pt3dadd( 477.147, 662.457, 69.8746, 0.4056 ) }
    apic_4 { pt3dadd( 476.062, 662.242, 70.1392, 0.3496 ) }
    apic_4 { pt3dadd( 474.999, 662.498, 70.5533, 0.3142 ) }
    apic_4 { pt3dadd( 474.05, 662.872, 71.1813, 0.3734 ) }
    apic_4 { pt3dadd( 473.187, 663.375, 71.9737, 0.3338 ) }
    apic_4 { pt3dadd( 472.503, 664.209, 72.7997, 0.3 ) }
    apic_4 { pt3dadd( 472.185, 664.546, 73.7458, 0.2746 ) }
    apic_4 { pt3dadd( 471.562, 664.53, 74.6712, 0.2746 ) }
    apic_4 { pt3dadd( 470.463, 664.818, 75.336, 0.2746 ) }
    apic_4 { pt3dadd( 469.437, 665.324, 75.7795, 0.2746 ) }
    apic_4 { pt3dadd( 468.326, 665.465, 76.0536, 0.2748 ) }
    apic_4 { pt3dadd( 467.182, 665.465, 76.2082, 0.2748 ) }
    apic_4 { pt3dadd( 466.038, 665.465, 76.2796, 0.2752 ) }
    apic_4 { pt3dadd( 464.894, 665.465, 76.3286, 0.2758 ) }
    apic_4 { pt3dadd( 463.75, 665.465, 76.3977, 0.2766 ) }
    apic_4 { pt3dadd( 462.616, 665.536, 76.4901, 0.2782 ) }
    apic_4 { pt3dadd( 461.54, 665.808, 76.6077, 0.2814 ) }
    apic_4 { pt3dadd( 460.412, 665.808, 76.7805, 0.287 ) }
    apic_4 { pt3dadd( 459.453, 665.808, 77.1347, 0.2988 ) }
    apic_4 { pt3dadd( 458.315, 665.808, 77.4696, 0.3142 ) }
    apic_4 { pt3dadd( 457.178, 665.808, 77.7809, 0.3734 ) }
    apic_4 { pt3dadd( 456.069, 665.966, 78.1007, 0.3338 ) }
    apic_4 { pt3dadd( 455.047, 666.435, 78.3493, 0.3 ) }
    apic_4 { pt3dadd( 453.992, 666.878, 78.5336, 0.2746 ) }
    apic_4 { pt3dadd( 452.884, 667.13, 78.7013, 0.2746 ) }
    apic_4 { pt3dadd( 451.854, 667.579, 78.8855, 0.2746 ) }
    apic_4 { pt3dadd( 450.783, 667.753, 79.1064, 0.2746 ) }
    apic_4 { pt3dadd( 449.639, 667.753, 79.268, 0.2746 ) }
    apic_4 { pt3dadd( 448.495, 667.753, 79.3862, 0.2744 ) }
    apic_4 { pt3dadd( 447.354, 667.82, 79.4637, 0.2744 ) }
    apic_4 { pt3dadd( 446.3, 668.252, 79.5052, 0.2742 ) }
    apic_4 { pt3dadd( 445.222, 668.613, 79.52, 0.2736 ) }
    apic_4 { pt3dadd( 444.118, 668.816, 79.52, 0.2728 ) }
    apic_4 { pt3dadd( 443.092, 669.305, 79.52, 0.2712 ) }
    apic_4 { pt3dadd( 442.133, 669.917, 79.52, 0.2684 ) }
    apic_4 { pt3dadd( 441.099, 670.391, 79.52, 0.2626 ) }
    apic_4 { pt3dadd( 440.212, 671.112, 79.52, 0.2542 ) }
    apic_4 { pt3dadd( 439.243, 671.648, 79.52, 0.2288 ) }
    apic_4 { pt3dadd( 438.266, 672.214, 79.52, 0.2288 ) }
    // Section: apic_11, id: apic_11, parent: apic_5 (entry count 39/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 526.621, 598.121, 39.8846, 0.8948 ) }
    apic_11 { pt3dadd( 526.905, 598.096, 37.4903, 0.2288 ) }
    apic_11 { pt3dadd( 527.714, 597.998, 36.8133, 0.2918 ) }
    apic_11 { pt3dadd( 528.637, 597.332, 36.5758, 0.3078 ) }
    apic_11 { pt3dadd( 529.449, 596.527, 36.3703, 0.3306 ) }
    apic_11 { pt3dadd( 530.459, 596.072, 36.1581, 0.404 ) }
    apic_11 { pt3dadd( 531.58, 595.911, 35.9817, 0.3912 ) }
    apic_11 { pt3dadd( 532.464, 595.342, 35.7269, 0.403 ) }
    apic_11 { pt3dadd( 533.531, 595.109, 35.544, 0.4814 ) }
    apic_11 { pt3dadd( 534.675, 595.109, 35.4032, 0.58 ) }
    apic_11 { pt3dadd( 535.799, 595.007, 35.2934, 0.5338 ) }
    apic_11 { pt3dadd( 536.767, 594.405, 35.203, 0.416 ) }
    apic_11 { pt3dadd( 537.593, 593.651, 35.1579, 0.3526 ) }
    apic_11 { pt3dadd( 538.571, 593.192, 35.17, 0.3988 ) }
    apic_11 { pt3dadd( 539.669, 593.05, 35.0834, 0.3754 ) }
    apic_11 { pt3dadd( 540.672, 593.062, 34.7488, 0.4026 ) }
    apic_11 { pt3dadd( 541.764, 593.164, 34.3294, 0.341 ) }
    apic_11 { pt3dadd( 542.888, 593.164, 33.9172, 0.313 ) }
    apic_11 { pt3dadd( 543.994, 593.122, 33.4802, 0.2986 ) }
    apic_11 { pt3dadd( 545.011, 592.623, 33.133, 0.3198 ) }
    apic_11 { pt3dadd( 545.719, 591.75, 32.8395, 0.3544 ) }
    apic_11 { pt3dadd( 546.353, 590.854, 32.5682, 0.4424 ) }
    apic_11 { pt3dadd( 547.177, 590.106, 32.3781, 0.4882 ) }
    apic_11 { pt3dadd( 548.11, 589.501, 32.2092, 0.459 ) }
    apic_11 { pt3dadd( 549.145, 589.033, 32.1, 0.5002 ) }
    apic_11 { pt3dadd( 550.277, 588.931, 32.0424, 0.5722 ) }
    apic_11 { pt3dadd( 551.417, 588.931, 32.0429, 0.496 ) }
    apic_11 { pt3dadd( 552.553, 588.831, 32.0527, 0.4592 ) }
    apic_11 { pt3dadd( 553.693, 588.817, 32.0376, 0.5694 ) }
    apic_11 { pt3dadd( 554.832, 588.817, 32.0029, 0.5944 ) }
    apic_11 { pt3dadd( 555.973, 588.771, 31.9693, 0.5964 ) }
    apic_11 { pt3dadd( 556.849, 588.193, 31.9376, 0.5858 ) }
    apic_11 { pt3dadd( 557.976, 588.13, 31.9091, 0.6362 ) }
    apic_11 { pt3dadd( 559.119, 588.148, 31.883, 0.6166 ) }
    apic_11 { pt3dadd( 560.259, 588.236, 31.8514, 0.4446 ) }
    apic_11 { pt3dadd( 561.393, 588.245, 31.8472, 0.3264 ) }
    apic_11 { pt3dadd( 562.492, 588.142, 31.8413, 0.2766 ) }
    apic_11 { pt3dadd( 563.453, 587.67, 31.7951, 0.2784 ) }
    apic_11 { pt3dadd( 564.25, 587.122, 31.5664, 0.2818 ) }
    apic_11 { pt3dadd( 564.766, 586.3, 31.2138, 0.2878 ) }
    apic_11 { pt3dadd( 565.706, 586.3, 30.7787, 0.3004 ) }
    apic_11 { pt3dadd( 566.85, 586.3, 30.4276, 0.3172 ) }
    apic_11 { pt3dadd( 567.994, 586.3, 30.1622, 0.3788 ) }
    apic_11 { pt3dadd( 569.131, 586.405, 29.9807, 0.3442 ) }
    apic_11 { pt3dadd( 570.269, 586.333, 29.8735, 0.3188 ) }
    apic_11 { pt3dadd( 571.373, 586.061, 29.8046, 0.3102 ) }
    apic_11 { pt3dadd( 572.391, 585.553, 29.7427, 0.3366 ) }
    apic_11 { pt3dadd( 573.229, 584.823, 29.6548, 0.4096 ) }
    apic_11 { pt3dadd( 574.372, 584.813, 29.5352, 0.4264 ) }
    apic_11 { pt3dadd( 575.501, 584.927, 29.3762, 0.3476 ) }
    apic_11 { pt3dadd( 576.487, 584.853, 29.1155, 0.2796 ) }
    apic_11 { pt3dadd( 577.371, 584.392, 28.8011, 0.2288 ) }
    apic_11 { pt3dadd( 578.063, 583.554, 28.28, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 92/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 526.621, 598.121, 39.8846, 0.8948 ) }
    apic_6 { pt3dadd( 527.041, 596.636, 39.9361, 0.572 ) }
    apic_6 { pt3dadd( 526.934, 595.501, 40.0072, 0.572 ) }
    apic_6 { pt3dadd( 526.926, 594.358, 40.1008, 0.572 ) }
    apic_6 { pt3dadd( 526.891, 593.216, 40.2178, 0.572 ) }
    apic_6 { pt3dadd( 526.378, 592.308, 40.4356, 0.572 ) }
    apic_6 { pt3dadd( 525.884, 591.461, 40.7744, 0.572 ) }
    // Section: apic_10, id: apic_10, parent: apic_6 (entry count 99/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 525.884, 591.461, 40.7744, 0.572 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_10 { pt3dadd( 526.295, 591.449, 41.8933, 0.2288 ) }
    apic_10 { pt3dadd( 527.059, 592.009, 42.1235, 0.451 ) }
    apic_10 { pt3dadd( 528.202, 592.022, 42.2136, 0.4988 ) }
    apic_10 { pt3dadd( 529.333, 592.186, 42.3262, 0.5022 ) }
    apic_10 { pt3dadd( 530.46, 592.363, 42.4637, 0.4662 ) }
    apic_10 { pt3dadd( 531.596, 592.363, 42.658, 0.3746 ) }
    apic_10 { pt3dadd( 532.646, 592.288, 42.9696, 0.328 ) }
    apic_10 { pt3dadd( 533.115, 591.418, 43.3586, 0.3272 ) }
    apic_10 { pt3dadd( 533.733, 590.604, 43.8057, 0.3692 ) }
    apic_10 { pt3dadd( 534.372, 589.748, 44.1582, 0.465 ) }
    apic_10 { pt3dadd( 535.477, 589.478, 44.429, 0.5558 ) }
    apic_10 { pt3dadd( 536.599, 589.265, 44.6326, 0.4582 ) }
    apic_10 { pt3dadd( 537.736, 589.157, 44.788, 0.4244 ) }
    apic_10 { pt3dadd( 538.711, 588.673, 44.886, 0.3342 ) }
    apic_10 { pt3dadd( 539.713, 588.195, 45.0369, 0.3006 ) }
    apic_10 { pt3dadd( 540.694, 587.759, 45.3564, 0.2758 ) }
    apic_10 { pt3dadd( 541.752, 587.471, 45.7509, 0.2766 ) }
    apic_10 { pt3dadd( 542.892, 587.425, 46.1224, 0.2782 ) }
    apic_10 { pt3dadd( 544.033, 587.338, 46.4741, 0.2816 ) }
    apic_10 { pt3dadd( 544.995, 587.104, 46.926, 0.2874 ) }
    apic_10 { pt3dadd( 545.85, 586.79, 47.5177, 0.2992 ) }
    apic_10 { pt3dadd( 546.742, 586.168, 48.0687, 0.3152 ) }
    apic_10 { pt3dadd( 547.573, 585.417, 48.552, 0.3754 ) }
    apic_10 { pt3dadd( 548.374, 584.601, 48.9126, 0.338 ) }
    apic_10 { pt3dadd( 549.365, 584.1, 49.1599, 0.3076 ) }
    apic_10 { pt3dadd( 550.49, 584.012, 49.2839, 0.288 ) }
    apic_10 { pt3dadd( 551.573, 583.779, 49.3133, 0.3006 ) }
    apic_10 { pt3dadd( 552.582, 583.253, 49.3847, 0.3178 ) }
    apic_10 { pt3dadd( 553.337, 582.647, 49.6672, 0.3802 ) }
    apic_10 { pt3dadd( 553.905, 581.809, 50.0539, 0.3464 ) }
    apic_10 { pt3dadd( 554.583, 581.022, 50.5618, 0.3242 ) }
    apic_10 { pt3dadd( 555.086, 580.021, 51.0642, 0.3142 ) }
    apic_10 { pt3dadd( 555.783, 579.116, 51.4858, 0.3734 ) }
    apic_10 { pt3dadd( 556.777, 578.861, 51.8994, 0.3338 ) }
    apic_10 { pt3dadd( 557.89, 578.665, 52.206, 0.3 ) }
    apic_10 { pt3dadd( 558.851, 578.13, 52.5053, 0.2746 ) }
    apic_10 { pt3dadd( 559.622, 577.357, 52.815, 0.2748 ) }
    apic_10 { pt3dadd( 560.108, 576.438, 53.1532, 0.275 ) }
    apic_10 { pt3dadd( 560.919, 575.687, 53.4206, 0.2752 ) }
    apic_10 { pt3dadd( 561.893, 575.146, 53.5254, 0.276 ) }
    apic_10 { pt3dadd( 562.996, 575.089, 53.4562, 0.2768 ) }
    apic_10 { pt3dadd( 563.947, 574.625, 53.3137, 0.2796 ) }
    apic_10 { pt3dadd( 564.106, 573.567, 53.0835, 0.2796 ) }
    apic_10 { pt3dadd( 564.106, 572.423, 52.8886, 0.305 ) }
    apic_10 { pt3dadd( 564.335, 571.428, 52.64, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 45/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 525.884, 591.461, 40.7744, 0.572 ) }
    apic_7 { pt3dadd( 525.725, 590.417, 41.0721, 0.6106 ) }
    apic_7 { pt3dadd( 525.554, 589.297, 41.3692, 0.6814 ) }
    apic_7 { pt3dadd( 525.554, 588.16, 41.6506, 0.478 ) }
    apic_7 { pt3dadd( 525.554, 587.017, 41.8776, 0.351 ) }
    apic_7 { pt3dadd( 525.738, 586.406, 42.24, 0.2748 ) }
    apic_7 { pt3dadd( 526.412, 585.53, 42.488, 0.275 ) }
    apic_7 { pt3dadd( 527.101, 584.62, 42.6415, 0.2752 ) }
    apic_7 { pt3dadd( 527.787, 583.735, 42.6966, 0.2758 ) }
    apic_7 { pt3dadd( 528.565, 583.027, 42.6611, 0.2768 ) }
    apic_7 { pt3dadd( 529.146, 582.066, 42.5443, 0.279 ) }
    apic_7 { pt3dadd( 529.329, 580.982, 42.3422, 0.2826 ) }
    apic_7 { pt3dadd( 529.329, 579.926, 41.9712, 0.2894 ) }
    apic_7 { pt3dadd( 529.329, 579.132, 41.3885, 0.3018 ) }
    apic_7 { pt3dadd( 529.329, 577.988, 40.917, 0.3258 ) }
    apic_7 { pt3dadd( 529.329, 576.869, 40.4936, 0.3664 ) }
    // Section: apic_9, id: apic_9, parent: apic_7 (entry count 61/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 529.329, 576.869, 40.4936, 0.3664 ) }
    apic_9 { pt3dadd( 528.618, 576.029, 41.4817, 0.2288 ) }
    apic_9 { pt3dadd( 527.971, 575.167, 42.672, 0.3288 ) }
    apic_9 { pt3dadd( 527.323, 574.305, 43.1911, 0.3764 ) }
    apic_9 { pt3dadd( 526.676, 573.443, 43.8054, 0.456 ) }
    apic_9 { pt3dadd( 525.675, 573.03, 44.3794, 0.647 ) }
    apic_9 { pt3dadd( 524.564, 572.757, 44.8876, 0.7906 ) }
    apic_9 { pt3dadd( 523.46, 572.546, 45.3594, 0.7064 ) }
    apic_9 { pt3dadd( 522.429, 572.932, 45.911, 0.6488 ) }
    apic_9 { pt3dadd( 521.397, 573.318, 46.5475, 0.52 ) }
    apic_9 { pt3dadd( 520.367, 573.705, 47.2716, 0.3894 ) }
    apic_9 { pt3dadd( 519.353, 574.033, 48.0861, 0.3088 ) }
    apic_9 { pt3dadd( 518.676, 573.273, 49.0375, 0.2906 ) }
    apic_9 { pt3dadd( 517.999, 572.513, 50.0755, 0.3056 ) }
    apic_9 { pt3dadd( 517.321, 571.753, 51.1543, 0.3264 ) }
    apic_9 { pt3dadd( 516.659, 570.98, 52.2488, 0.3976 ) }
    apic_9 { pt3dadd( 516.303, 569.926, 53.2599, 0.3734 ) }
    apic_9 { pt3dadd( 515.946, 568.873, 54.2049, 0.3988 ) }
    apic_9 { pt3dadd( 515.591, 567.82, 55.1046, 0.3338 ) }
    apic_9 { pt3dadd( 515.234, 566.766, 55.9896, 0.3 ) }
    apic_9 { pt3dadd( 514.781, 565.809, 56.9248, 0.2746 ) }
    apic_9 { pt3dadd( 514.171, 565.006, 57.9813, 0.2746 ) }
    apic_9 { pt3dadd( 513.561, 564.201, 59.1489, 0.2746 ) }
    apic_9 { pt3dadd( 512.951, 563.398, 60.4044, 0.2746 ) }
    apic_9 { pt3dadd( 512.517, 562.624, 61.7268, 0.2746 ) }
    apic_9 { pt3dadd( 513.357, 562.062, 63.0974, 0.2746 ) }
    apic_9 { pt3dadd( 514.198, 561.5, 64.5002, 0.2746 ) }
    apic_9 { pt3dadd( 515.039, 560.939, 65.9268, 0.2746 ) }
    apic_9 { pt3dadd( 514.195, 560.735, 67.447, 0.2746 ) }
    apic_9 { pt3dadd( 513.338, 560.535, 69.0365, 0.2746 ) }
    apic_9 { pt3dadd( 512.481, 560.333, 70.6703, 0.2746 ) }
    apic_9 { pt3dadd( 511.623, 560.133, 72.3232, 0.2748 ) }
    apic_9 { pt3dadd( 510.766, 559.933, 73.9718, 0.275 ) }
    apic_9 { pt3dadd( 509.909, 559.732, 75.5944, 0.2752 ) }
    apic_9 { pt3dadd( 510.022, 558.746, 77.1044, 0.2758 ) }
    apic_9 { pt3dadd( 510.153, 557.745, 78.5154, 0.2768 ) }
    apic_9 { pt3dadd( 510.284, 556.745, 79.8412, 0.2786 ) }
    apic_9 { pt3dadd( 510.414, 555.744, 81.0947, 0.2822 ) }
    apic_9 { pt3dadd( 510.546, 554.743, 82.2872, 0.2886 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_9 { pt3dadd( 510.412, 553.67, 83.3678, 0.3002 ) }
    apic_9 { pt3dadd( 510.259, 552.592, 84.3615, 0.3242 ) }
    apic_9 { pt3dadd( 510.107, 551.513, 85.2849, 0.356 ) }
    apic_9 { pt3dadd( 509.956, 550.436, 86.1686, 0.4764 ) }
    apic_9 { pt3dadd( 509.804, 549.357, 87.0083, 0.401 ) }
    apic_9 { pt3dadd( 509.652, 548.279, 87.8013, 0.3388 ) }
    apic_9 { pt3dadd( 509.5, 547.2, 88.5461, 0.305 ) }
    apic_9 { pt3dadd( 509.349, 546.122, 89.2326, 0.305 ) }
    apic_9 { pt3dadd( 509.197, 545.044, 90.5685, 0.4576 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 9/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 529.329, 576.869, 40.4936, 0.3664 ) }
    apic_8 { pt3dadd( 529.248, 575.469, 40.1766, 0.4596 ) }
    apic_8 { pt3dadd( 528.959, 574.364, 39.984, 0.5448 ) }
    apic_8 { pt3dadd( 528.233, 573.566, 39.9031, 0.4432 ) }
    apic_8 { pt3dadd( 527.819, 572.505, 39.8969, 0.3706 ) }
    apic_8 { pt3dadd( 527.393, 571.453, 39.9134, 0.3604 ) }
    apic_8 { pt3dadd( 526.56, 570.699, 39.9431, 0.4254 ) }
    apic_8 { pt3dadd( 526.032, 569.983, 40.1262, 0.5944 ) }
    apic_8 { pt3dadd( 525.459, 569.035, 40.2578, 0.6716 ) }
    apic_8 { pt3dadd( 524.867, 568.091, 40.2889, 0.5896 ) }
    apic_8 { pt3dadd( 524.77, 566.955, 40.2237, 0.6134 ) }
    apic_8 { pt3dadd( 524.672, 565.877, 40.0128, 0.7218 ) }
    apic_8 { pt3dadd( 524.452, 565.159, 39.4621, 0.8374 ) }
    apic_8 { pt3dadd( 523.93, 564.328, 38.803, 0.7818 ) }
    apic_8 { pt3dadd( 523.609, 563.268, 38.2239, 0.6154 ) }
    apic_8 { pt3dadd( 523.609, 562.124, 37.8272, 0.6138 ) }
    apic_8 { pt3dadd( 523.294, 561.065, 37.6026, 0.7228 ) }
    apic_8 { pt3dadd( 523.147, 559.983, 37.6379, 0.8402 ) }
    apic_8 { pt3dadd( 523.041, 558.869, 37.8406, 0.7816 ) }
    apic_8 { pt3dadd( 523.037, 557.727, 38.0481, 0.6402 ) }
    apic_8 { pt3dadd( 523.037, 556.583, 38.2186, 0.5384 ) }
    apic_8 { pt3dadd( 523.037, 555.44, 38.3429, 0.4862 ) }
    apic_8 { pt3dadd( 523.037, 554.295, 38.428, 0.412 ) }
    apic_8 { pt3dadd( 523.037, 553.151, 38.4832, 0.3938 ) }
    apic_8 { pt3dadd( 522.991, 552.01, 38.5328, 0.4686 ) }
    apic_8 { pt3dadd( 522.894, 550.874, 38.593, 0.536 ) }
    apic_8 { pt3dadd( 522.499, 549.813, 38.7019, 0.5498 ) }
    apic_8 { pt3dadd( 522.408, 548.68, 38.845, 0.658 ) }
    apic_8 { pt3dadd( 522.35, 547.585, 39.0516, 0.9154 ) }
    apic_8 { pt3dadd( 522.35, 546.441, 39.2106, 0.8886 ) }
    apic_8 { pt3dadd( 522.35, 545.297, 39.3246, 0.9972 ) }
    apic_8 { pt3dadd( 522.452, 544.162, 39.396, 0.8872 ) }
    apic_8 { pt3dadd( 522.683, 543.042, 39.4276, 0.8202 ) }
    apic_8 { pt3dadd( 522.919, 541.93, 39.4293, 0.7212 ) }
    apic_8 { pt3dadd( 523.585, 541.007, 39.4092, 0.6422 ) }
    apic_8 { pt3dadd( 524.373, 540.18, 39.3817, 0.445 ) }
    apic_8 { pt3dadd( 525.146, 539.344, 39.3428, 0.3272 ) }
    apic_8 { pt3dadd( 525.811, 538.422, 39.2857, 0.2778 ) }
    apic_8 { pt3dadd( 526.524, 537.54, 39.2062, 0.2806 ) }
    apic_8 { pt3dadd( 527.082, 536.561, 39.1028, 0.2856 ) }
    apic_8 { pt3dadd( 527.6, 535.542, 38.9771, 0.2946 ) }
    apic_8 { pt3dadd( 528.138, 534.644, 38.7495, 0.3128 ) }
    apic_8 { pt3dadd( 528.324, 533.899, 38.3351, 0.3414 ) }
    apic_8 { pt3dadd( 529.022, 532.994, 37.9994, 0.4188 ) }
    apic_8 { pt3dadd( 529.61, 532.022, 37.735, 0.4434 ) }
    apic_8 { pt3dadd( 529.672, 530.888, 37.5351, 0.3794 ) }
    apic_8 { pt3dadd( 529.672, 529.744, 37.3926, 0.337 ) }
    apic_8 { pt3dadd( 529.672, 528.604, 37.2856, 0.343 ) }
    apic_8 { pt3dadd( 529.643, 527.469, 37.1902, 0.403 ) }
    apic_8 { pt3dadd( 529.329, 526.481, 37.023, 0.5056 ) }
    apic_8 { pt3dadd( 529.162, 525.351, 36.8911, 0.7372 ) }
    apic_8 { pt3dadd( 528.809, 524.276, 36.792, 0.9658 ) }
    apic_8 { pt3dadd( 528.332, 523.261, 36.7231, 0.9928 ) }
    apic_8 { pt3dadd( 528.299, 522.117, 36.6811, 0.679 ) }
    apic_8 { pt3dadd( 528.53, 521.013, 36.6601, 0.4922 ) }
    apic_8 { pt3dadd( 529.285, 520.298, 36.6523, 0.5164 ) }
    apic_8 { pt3dadd( 530.071, 519.471, 36.6411, 0.5922 ) }
    apic_8 { pt3dadd( 530.474, 518.43, 36.626, 0.8122 ) }
    apic_8 { pt3dadd( 530.654, 517.301, 36.605, 1.0608 ) }
    apic_8 { pt3dadd( 530.781, 516.175, 36.5739, 1.154 ) }
    apic_8 { pt3dadd( 530.483, 515.071, 36.5299, 1.0516 ) }
    apic_8 { pt3dadd( 530.473, 513.928, 36.4714, 0.8258 ) }
    apic_8 { pt3dadd( 530.473, 512.784, 36.3983, 0.8098 ) }
    apic_8 { pt3dadd( 530.435, 511.652, 36.293, 0.6544 ) }
    apic_8 { pt3dadd( 530.207, 510.58, 36.0657, 0.7496 ) }
    apic_8 { pt3dadd( 529.939, 509.479, 35.8403, 0.6654 ) }
    apic_8 { pt3dadd( 529.56, 508.401, 35.6535, 0.6312 ) }
    apic_8 { pt3dadd( 529.129, 507.343, 35.5023, 0.6626 ) }
    apic_8 { pt3dadd( 528.591, 506.347, 35.3478, 0.4904 ) }
    apic_8 { pt3dadd( 528.194, 505.305, 35.1896, 0.3738 ) }
    apic_8 { pt3dadd( 528.009, 504.176, 35.0778, 0.3168 ) }
    apic_8 { pt3dadd( 527.727, 503.077, 34.986, 0.3556 ) }
    apic_8 { pt3dadd( 527.55, 501.964, 34.9045, 0.4134 ) }
    apic_8 { pt3dadd( 527.188, 500.88, 34.8314, 0.5866 ) }
    apic_8 { pt3dadd( 526.889, 499.777, 34.7592, 0.5888 ) }
    apic_8 { pt3dadd( 526.698, 498.659, 34.6433, 0.7672 ) }
    apic_8 { pt3dadd( 526.698, 497.534, 34.4697, 0.7088 ) }
    apic_8 { pt3dadd( 526.698, 496.39, 34.3202, 0.8894 ) }
    apic_8 { pt3dadd( 526.698, 495.246, 34.1984, 0.9654 ) }
    apic_8 { pt3dadd( 526.699, 494.102, 34.1046, 0.9902 ) }
    apic_8 { pt3dadd( 526.787, 492.971, 34.0119, 0.913 ) }
    apic_8 { pt3dadd( 527.207, 491.918, 33.9324, 0.6826 ) }
    apic_8 { pt3dadd( 527.494, 490.95, 33.8156, 0.6774 ) }
    apic_8 { pt3dadd( 528.517, 490.504, 33.7473, 0.6782 ) }
    apic_8 { pt3dadd( 529.341, 489.964, 33.8013, 0.6318 ) }
    apic_8 { pt3dadd( 530.002, 489.05, 33.871, 0.547 ) }
    apic_8 { pt3dadd( 530.015, 487.906, 33.9531, 0.6128 ) }
    apic_8 { pt3dadd( 529.836, 486.795, 34.0399, 0.7972 ) }
    apic_8 { pt3dadd( 529.268, 485.853, 34.1958, 0.8356 ) }
    apic_8 { pt3dadd( 528.847, 484.834, 34.386, 0.7776 ) }
    apic_8 { pt3dadd( 528.612, 483.728, 34.4924, 0.841 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_8 { pt3dadd( 528.424, 482.6, 34.5262, 0.8142 ) }
    apic_8 { pt3dadd( 528.299, 481.483, 34.552, 0.7792 ) }
    apic_8 { pt3dadd( 528.515, 480.48, 34.5058, 0.644 ) }
    apic_8 { pt3dadd( 528.414, 479.809, 34.0144, 0.7338 ) }
    apic_8 { pt3dadd( 528.414, 478.664, 33.5829, 0.8504 ) }
    apic_8 { pt3dadd( 528.796, 477.636, 33.2114, 0.8486 ) }
    apic_8 { pt3dadd( 528.986, 476.538, 32.8479, 0.7608 ) }
    apic_8 { pt3dadd( 528.986, 475.402, 32.5405, 0.779 ) }
    apic_8 { pt3dadd( 528.986, 474.259, 32.3364, 0.85 ) }
    apic_8 { pt3dadd( 528.986, 473.115, 32.2336, 0.7996 ) }
    apic_8 { pt3dadd( 529.002, 471.983, 32.1328, 0.675 ) }
    apic_8 { pt3dadd( 529.622, 471.073, 32.0561, 0.597 ) }
    apic_8 { pt3dadd( 530.457, 470.327, 32.0152, 0.6228 ) }
    apic_8 { pt3dadd( 531.033, 469.345, 31.9962, 0.5296 ) }
    apic_8 { pt3dadd( 531.38, 468.259, 31.9945, 0.5846 ) }
    apic_8 { pt3dadd( 531.591, 467.135, 32.0104, 0.4976 ) }
    apic_8 { pt3dadd( 532.072, 466.108, 32.0424, 0.565 ) }
    apic_8 { pt3dadd( 532.189, 464.989, 32.0821, 0.496 ) }
    apic_8 { pt3dadd( 531.989, 463.933, 32.1213, 0.3922 ) }
    apic_8 { pt3dadd( 531.617, 463.215, 32.3131, 0.3136 ) }
    apic_8 { pt3dadd( 531.359, 462.118, 32.4369, 0.2998 ) }
    apic_8 { pt3dadd( 531.132, 460.996, 32.4923, 0.3224 ) }
    apic_8 { pt3dadd( 530.93, 459.883, 32.4828, 0.3578 ) }
    apic_8 { pt3dadd( 530.93, 458.956, 32.2913, 0.4564 ) }
    apic_8 { pt3dadd( 531.063, 457.837, 32.0524, 0.4778 ) }
    apic_8 { pt3dadd( 531.425, 456.802, 31.7139, 0.6148 ) }
    apic_8 { pt3dadd( 532.192, 455.956, 31.4348, 0.6254 ) }
    apic_8 { pt3dadd( 532.63, 454.906, 31.2287, 0.683 ) }
    apic_8 { pt3dadd( 532.646, 453.767, 31.0652, 0.6052 ) }
    apic_8 { pt3dadd( 532.508, 452.641, 30.9585, 0.6702 ) }
    apic_8 { pt3dadd( 531.814, 451.739, 30.9011, 0.9188 ) }
    apic_8 { pt3dadd( 531.02, 450.931, 30.8818, 0.7574 ) }
    apic_8 { pt3dadd( 530.039, 450.341, 30.8756, 0.7354 ) }
    apic_8 { pt3dadd( 529.172, 449.599, 30.8753, 0.7216 ) }
    apic_8 { pt3dadd( 528.871, 448.614, 30.9501, 0.5628 ) }
    apic_8 { pt3dadd( 528.888, 447.477, 31.0122, 0.4582 ) }
    apic_8 { pt3dadd( 528.995, 446.345, 31.0422, 0.4884 ) }
    apic_8 { pt3dadd( 529.266, 445.261, 30.938, 0.6002 ) }
    apic_8 { pt3dadd( 529.865, 444.286, 30.8022, 0.5364 ) }
    apic_8 { pt3dadd( 530.427, 443.3, 30.6071, 0.5894 ) }
    apic_8 { pt3dadd( 530.702, 442.29, 30.3332, 0.5428 ) }
    apic_8 { pt3dadd( 530.816, 441.205, 29.9617, 0.473 ) }
    apic_8 { pt3dadd( 530.816, 440.085, 29.5736, 0.4912 ) }
    apic_8 { pt3dadd( 530.816, 438.941, 29.2583, 0.4954 ) }
    apic_8 { pt3dadd( 530.707, 437.825, 28.9632, 0.6482 ) }
    apic_8 { pt3dadd( 530.702, 436.707, 28.6675, 0.6828 ) }
    apic_8 { pt3dadd( 530.702, 435.563, 28.462, 0.8114 ) }
    apic_8 { pt3dadd( 530.497, 434.452, 28.3144, 0.7358 ) }
    apic_8 { pt3dadd( 530.461, 433.316, 28.1932, 0.7466 ) }
    apic_8 { pt3dadd( 530.237, 432.211, 28.1154, 0.722 ) }
    apic_8 { pt3dadd( 529.996, 431.106, 28.0767, 0.6626 ) }
    apic_8 { pt3dadd( 529.909, 429.967, 28.0692, 0.6222 ) }
    apic_8 { pt3dadd( 529.812, 428.827, 28.0778, 0.664 ) }
    apic_8 { pt3dadd( 529.57, 427.722, 28.1, 0.633 ) }
    apic_8 { pt3dadd( 529.558, 426.578, 28.1302, 0.645 ) }
    apic_8 { pt3dadd( 529.558, 425.434, 28.163, 0.5596 ) }
    apic_8 { pt3dadd( 529.661, 424.423, 28.3441, 0.4646 ) }
    apic_8 { pt3dadd( 530.036, 423.412, 28.4236, 0.4386 ) }
    apic_8 { pt3dadd( 530.748, 422.572, 28.4138, 0.5782 ) }
    apic_8 { pt3dadd( 530.816, 421.435, 28.3973, 0.6118 ) }
    apic_8 { pt3dadd( 530.816, 420.291, 28.3758, 0.6228 ) }
    apic_8 { pt3dadd( 530.524, 419.224, 28.352, 0.663 ) }
    apic_8 { pt3dadd( 530.932, 418.161, 28.3279, 0.6424 ) }
    apic_8 { pt3dadd( 531.502, 417.184, 28.3304, 0.6086 ) }
    apic_8 { pt3dadd( 531.418, 416.06, 28.3497, 0.7528 ) }
    apic_8 { pt3dadd( 530.405, 415.603, 28.3788, 0.9308 ) }
    apic_8 { pt3dadd( 529.619, 414.817, 28.4206, 1.0078 ) }
    apic_8 { pt3dadd( 528.893, 413.955, 28.4749, 1.0058 ) }
    apic_8 { pt3dadd( 528.757, 412.834, 28.5376, 0.7906 ) }
    apic_8 { pt3dadd( 528.642, 411.777, 28.637, 0.5036 ) }
    apic_8 { pt3dadd( 528.711, 410.772, 28.8728, 0.3414 ) }
    apic_8 { pt3dadd( 528.87, 409.668, 29.0825, 0.3044 ) }
    apic_8 { pt3dadd( 529.345, 408.634, 29.1922, 0.3294 ) }
    apic_8 { pt3dadd( 529.443, 407.531, 29.1617, 0.3782 ) }
    apic_8 { pt3dadd( 529.432, 406.539, 28.926, 0.4582 ) }
    apic_8 { pt3dadd( 528.963, 405.502, 28.7, 0.6572 ) }
    apic_8 { pt3dadd( 528.745, 404.389, 28.4987, 0.7798 ) }
    apic_8 { pt3dadd( 528.458, 403.288, 28.3483, 0.83 ) }
    apic_8 { pt3dadd( 527.911, 402.284, 28.2542, 0.8662 ) }
    apic_8 { pt3dadd( 527.365, 401.304, 28.1733, 0.753 ) }
    apic_8 { pt3dadd( 527.27, 400.169, 28.1347, 0.7312 ) }
    apic_8 { pt3dadd( 527.394, 399.034, 28.1117, 0.6942 ) }
    apic_8 { pt3dadd( 527.651, 397.92, 28.103, 0.6096 ) }
    apic_8 { pt3dadd( 527.804, 396.791, 28.1252, 0.5288 ) }
    apic_8 { pt3dadd( 527.996, 395.665, 28.1747, 0.4686 ) }
    apic_8 { pt3dadd( 528.069, 394.526, 28.2215, 0.3784 ) }
    apic_8 { pt3dadd( 528.2, 393.396, 28.2593, 0.3354 ) }
    apic_8 { pt3dadd( 528.299, 392.268, 28.2887, 0.3412 ) }
    apic_8 { pt3dadd( 528.299, 391.124, 28.3108, 0.393 ) }
    apic_8 { pt3dadd( 528.299, 389.98, 28.3296, 0.5176 ) }
    apic_8 { pt3dadd( 528.299, 388.836, 28.3508, 0.613 ) }
    apic_8 { pt3dadd( 528.29, 387.692, 28.3797, 0.7608 ) }
    apic_8 { pt3dadd( 527.939, 386.618, 28.415, 0.718 ) }
    apic_8 { pt3dadd( 527.503, 385.564, 28.4488, 0.5736 ) }
    apic_8 { pt3dadd( 527.384, 384.496, 28.5701, 0.3942 ) }
    apic_8 { pt3dadd( 527.384, 383.383, 28.7008, 0.3178 ) }
    apic_8 { pt3dadd( 527.384, 382.268, 28.8103, 0.3072 ) }
    apic_8 { pt3dadd( 527.384, 381.124, 28.8103, 0.3372 ) }
    apic_8 { pt3dadd( 527.384, 380.075, 28.5726, 0.38 ) }
    apic_8 { pt3dadd( 527.384, 379.231, 28.0756, 0.5222 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_8 { pt3dadd( 527.689, 378.362, 27.44, 0.4824 ) }
    apic_8 { pt3dadd( 527.727, 377.229, 26.922, 0.5056 ) }
    apic_8 { pt3dadd( 527.495, 376.14, 26.5518, 0.5358 ) }
    apic_8 { pt3dadd( 527.384, 375.019, 26.2996, 0.4268 ) }
    apic_8 { pt3dadd( 527.384, 373.875, 26.2136, 0.3402 ) }
    apic_8 { pt3dadd( 527.06, 372.783, 26.2612, 0.303 ) }
    apic_8 { pt3dadd( 526.755, 371.683, 26.3939, 0.322 ) }
    apic_8 { pt3dadd( 526.698, 370.547, 26.5871, 0.388 ) }
    apic_8 { pt3dadd( 526.698, 369.65, 27.0374, 0.361 ) }
    apic_8 { pt3dadd( 526.469, 368.752, 27.578, 0.35 ) }
    apic_8 { pt3dadd( 526.469, 367.627, 28.068, 0.369 ) }
    apic_8 { pt3dadd( 526.469, 366.49, 28.4236, 0.4412 ) }
    apic_8 { pt3dadd( 526.084, 365.507, 28.5902, 0.626 ) }
    apic_8 { pt3dadd( 526.011, 364.374, 28.6684, 0.7198 ) }
    apic_8 { pt3dadd( 526.272, 363.277, 28.6759, 0.7296 ) }
    apic_8 { pt3dadd( 526.589, 362.182, 28.6653, 0.628 ) }
    apic_8 { pt3dadd( 527.299, 361.287, 28.6644, 0.5638 ) }
    apic_8 { pt3dadd( 527.492, 360.172, 28.6762, 0.5286 ) }
    apic_8 { pt3dadd( 526.698, 359.47, 28.6894, 0.5148 ) }
    apic_8 { pt3dadd( 526.182, 358.715, 28.8422, 0.4662 ) }
    apic_8 { pt3dadd( 525.733, 357.72, 29.0016, 0.4896 ) }
    apic_8 { pt3dadd( 524.9, 357.042, 29.029, 0.6692 ) }
    apic_8 { pt3dadd( 524.644, 356.342, 28.7039, 0.7966 ) }
    apic_8 { pt3dadd( 524.638, 355.22, 28.3402, 0.8866 ) }
    apic_8 { pt3dadd( 524.638, 354.076, 28.0179, 0.85 ) }
    apic_8 { pt3dadd( 524.638, 352.947, 27.673, 0.6234 ) }
    apic_8 { pt3dadd( 524.612, 351.811, 27.405, 0.5178 ) }
    apic_8 { pt3dadd( 524.309, 350.708, 27.2378, 0.6266 ) }
    apic_8 { pt3dadd( 524.295, 349.573, 27.1256, 0.721 ) }
    apic_8 { pt3dadd( 524.307, 348.429, 27.0617, 0.7314 ) }
    apic_8 { pt3dadd( 524.622, 347.333, 27.0326, 0.6328 ) }
    apic_8 { pt3dadd( 524.846, 346.218, 27.0547, 0.5668 ) }
    apic_8 { pt3dadd( 525.043, 345.1, 27.1113, 0.5644 ) }
    apic_8 { pt3dadd( 525.385, 344.009, 27.1715, 0.4326 ) }
    apic_8 { pt3dadd( 526.098, 343.118, 27.2342, 0.351 ) }
    apic_8 { pt3dadd( 526.543, 342.07, 27.2908, 0.3232 ) }
    apic_8 { pt3dadd( 526.525, 340.948, 27.3792, 0.359 ) }
    apic_8 { pt3dadd( 526.234, 339.862, 27.4968, 0.4596 ) }
    apic_8 { pt3dadd( 525.857, 338.797, 27.6069, 0.4788 ) }
    apic_8 { pt3dadd( 525.422, 337.753, 27.6746, 0.6404 ) }
    apic_8 { pt3dadd( 524.897, 336.816, 27.6265, 0.5592 ) }
    apic_8 { pt3dadd( 524.876, 335.674, 27.5663, 0.4246 ) }
    apic_8 { pt3dadd( 525.089, 334.583, 27.5321, 0.3264 ) }
    apic_8 { pt3dadd( 525.096, 333.439, 27.4778, 0.3258 ) }
    apic_8 { pt3dadd( 525.271, 332.309, 27.414, 0.359 ) }
    apic_8 { pt3dadd( 525.325, 331.175, 27.3235, 0.4824 ) }
    apic_8 { pt3dadd( 525.325, 330.098, 27.0992, 0.4114 ) }
    apic_8 { pt3dadd( 525.325, 328.956, 26.8999, 0.3602 ) }
    apic_8 { pt3dadd( 525.718, 328.094, 26.7714, 0.3336 ) }
    apic_8 { pt3dadd( 526.24, 327.256, 26.6633, 0.4104 ) }
    apic_8 { pt3dadd( 526.19, 326.154, 26.4925, 0.3972 ) }
    apic_8 { pt3dadd( 526.126, 325.015, 26.3614, 0.4438 ) }
    apic_8 { pt3dadd( 526.126, 323.871, 26.2559, 0.4132 ) }
    apic_8 { pt3dadd( 526.126, 322.727, 26.1467, 0.4672 ) }
    apic_8 { pt3dadd( 526.584, 321.692, 26.0347, 0.4882 ) }
    apic_8 { pt3dadd( 526.693, 320.576, 25.8916, 0.4516 ) }
    apic_8 { pt3dadd( 526.536, 319.464, 25.7337, 0.5218 ) }
    apic_8 { pt3dadd( 526.622, 318.573, 25.3988, 0.4392 ) }
    apic_8 { pt3dadd( 526.794, 317.454, 25.1415, 0.405 ) }
    apic_8 { pt3dadd( 526.926, 316.531, 25.0998, 0.4496 ) }
    apic_8 { pt3dadd( 527.636, 315.933, 25.1667, 0.4668 ) }
    apic_8 { pt3dadd( 528.07, 315.028, 25.214, 0.5868 ) }
    apic_8 { pt3dadd( 527.521, 314.137, 25.1224, 0.6096 ) }
    apic_8 { pt3dadd( 527.498, 313.249, 24.8335, 0.4782 ) }
    apic_8 { pt3dadd( 527.613, 312.134, 24.5952, 0.3892 ) }
    apic_8 { pt3dadd( 527.613, 310.995, 24.4784, 0.3908 ) }
    apic_8 { pt3dadd( 527.613, 310.124, 24.624, 0.5002 ) }
    apic_8 { pt3dadd( 527.72, 309.293, 25.0194, 0.645 ) }
    apic_8 { pt3dadd( 527.956, 308.218, 25.4187, 0.5062 ) }
    apic_8 { pt3dadd( 527.812, 307.115, 25.8087, 0.3976 ) }
    apic_8 { pt3dadd( 527.613, 306.004, 26.0504, 0.3872 ) }
    apic_8 { pt3dadd( 527.613, 305.266, 25.928, 0.359 ) }
    apic_8 { pt3dadd( 527.933, 304.193, 25.7782, 0.3484 ) }
    apic_8 { pt3dadd( 528.176, 303.086, 25.6656, 0.3542 ) }
    apic_8 { pt3dadd( 528.299, 301.952, 25.5833, 0.4732 ) }
    apic_8 { pt3dadd( 528.426, 300.818, 25.5396, 0.395 ) }
    apic_8 { pt3dadd( 528.622, 299.694, 25.5464, 0.3286 ) }
    apic_8 { pt3dadd( 528.798, 298.563, 25.5973, 0.2802 ) }
    apic_8 { pt3dadd( 528.871, 297.426, 25.6469, 0.285 ) }
    apic_8 { pt3dadd( 528.845, 296.283, 25.6956, 0.294 ) }
    apic_8 { pt3dadd( 528.757, 295.197, 25.8404, 0.3114 ) }
    apic_8 { pt3dadd( 528.986, 294.167, 26.0151, 0.3386 ) }
    apic_8 { pt3dadd( 529.332, 293.091, 26.101, 0.4136 ) }
    apic_8 { pt3dadd( 529.526, 291.972, 26.1184, 0.434 ) }
    apic_8 { pt3dadd( 529.77, 290.86, 26.0921, 0.362 ) }
    apic_8 { pt3dadd( 530.075, 289.758, 26.045, 0.3048 ) }
    apic_8 { pt3dadd( 530.444, 288.676, 25.9762, 0.2834 ) }
    apic_8 { pt3dadd( 530.799, 287.589, 25.9025, 0.291 ) }
    apic_8 { pt3dadd( 531.021, 286.471, 25.835, 0.3062 ) }
    apic_8 { pt3dadd( 531.261, 285.363, 25.7569, 0.3278 ) }
    apic_8 { pt3dadd( 531.076, 284.278, 25.6186, 0.3986 ) }
    apic_8 { pt3dadd( 530.832, 283.291, 25.401, 0.3826 ) }
    apic_8 { pt3dadd( 531.045, 282.216, 25.2431, 0.3796 ) }
    apic_8 { pt3dadd( 531.045, 281.074, 25.1574, 0.4732 ) }
    apic_8 { pt3dadd( 531.045, 279.966, 25.1997, 0.3946 ) }
    apic_8 { pt3dadd( 531.045, 278.88, 25.373, 0.3284 ) }
    apic_8 { pt3dadd( 531.045, 277.769, 25.5763, 0.28 ) }
    apic_8 { pt3dadd( 531.045, 276.672, 25.6376, 0.2846 ) }
    apic_8 { pt3dadd( 531.047, 275.547, 25.6337, 0.293 ) }
    apic_8 { pt3dadd( 531.131, 274.409, 25.6066, 0.31 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_8 { pt3dadd( 531.183, 273.27, 25.5615, 0.335 ) }
    apic_8 { pt3dadd( 531.274, 272.132, 25.5139, 0.413 ) }
    apic_8 { pt3dadd( 531.253, 270.99, 25.4834, 0.4032 ) }
    apic_8 { pt3dadd( 531.163, 269.852, 25.4766, 0.4486 ) }
    apic_8 { pt3dadd( 531.311, 268.727, 25.4755, 0.4514 ) }
    apic_8 { pt3dadd( 531.886, 267.754, 25.4736, 0.3952 ) }
    apic_8 { pt3dadd( 532.556, 266.866, 25.471, 0.3608 ) }
    apic_8 { pt3dadd( 532.561, 265.735, 25.4674, 0.4136 ) }
    apic_8 { pt3dadd( 532.245, 264.658, 25.4624, 0.4046 ) }
    apic_8 { pt3dadd( 531.96, 263.571, 25.4554, 0.4508 ) }
    apic_8 { pt3dadd( 531.969, 262.427, 25.4453, 0.457 ) }
    apic_8 { pt3dadd( 532.268, 261.334, 25.4327, 0.3988 ) }
    apic_8 { pt3dadd( 532.53, 260.221, 25.4134, 0.3988 ) }
    apic_8 { pt3dadd( 532.75, 259.103, 25.3845, 0.3338 ) }
    apic_8 { pt3dadd( 532.786, 257.962, 25.3448, 0.3 ) }
    apic_8 { pt3dadd( 532.905, 256.823, 25.293, 0.2748 ) }
    apic_8 { pt3dadd( 533.508, 255.868, 25.2697, 0.2748 ) }
    apic_8 { pt3dadd( 533.951, 254.908, 25.0821, 0.275 ) }
    apic_8 { pt3dadd( 534.302, 253.825, 24.8976, 0.2754 ) }
    apic_8 { pt3dadd( 534.541, 252.706, 24.7414, 0.2764 ) }
    apic_8 { pt3dadd( 534.82, 251.62, 24.6134, 0.2778 ) }
    apic_8 { pt3dadd( 534.636, 250.502, 24.5059, 0.2808 ) }
    apic_8 { pt3dadd( 534.477, 249.405, 24.365, 0.286 ) }
    apic_8 { pt3dadd( 534.431, 248.294, 24.2404, 0.2956 ) }
    apic_8 { pt3dadd( 534.362, 247.173, 24.1382, 0.3144 ) }
    apic_8 { pt3dadd( 534.362, 246.056, 24.1506, 0.3442 ) }
    apic_8 { pt3dadd( 534.7, 245.088, 24.2987, 0.4236 ) }
    apic_8 { pt3dadd( 535.37, 244.252, 24.4406, 0.4534 ) }
    apic_8 { pt3dadd( 536.185, 243.703, 24.5874, 0.3926 ) }
    apic_8 { pt3dadd( 536.193, 242.57, 24.7299, 0.387 ) }
    apic_8 { pt3dadd( 536.287, 241.431, 24.8287, 0.3134 ) }
    apic_8 { pt3dadd( 536.536, 240.321, 24.8822, 0.2542 ) }
    apic_8 { pt3dadd( 537.108, 239.668, 24.92, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_472, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_472 = new SectionList()
    soma_0 ModelViewParmSubset_472.append()
    axon_0 ModelViewParmSubset_472.append()
    axon_1 ModelViewParmSubset_472.append()

    // Group: {name=ModelViewParmSubset_473, groups=[], sections=[apic_0, dend_19, dend_12, dend_9, dend_8, dend_1, dend_0, apic_19, apic_18, apic_1, dend_16, dend_13, dend_11, dend_10, dend_7, dend_2, apic_13, apic_2, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, apic_15, apic_14, apic_12, apic_3, dend_5, dend_4, apic_17, apic_16, apic_5, apic_4, apic_11, apic_6, apic_10, apic_7, apic_9, apic_8]}
    ModelViewParmSubset_473 = new SectionList()
    apic_0 ModelViewParmSubset_473.append()
    dend_19 ModelViewParmSubset_473.append()
    dend_12 ModelViewParmSubset_473.append()
    dend_9 ModelViewParmSubset_473.append()
    dend_8 ModelViewParmSubset_473.append()
    dend_1 ModelViewParmSubset_473.append()
    dend_0 ModelViewParmSubset_473.append()
    apic_19 ModelViewParmSubset_473.append()
    apic_18 ModelViewParmSubset_473.append()
    apic_1 ModelViewParmSubset_473.append()
    dend_16 ModelViewParmSubset_473.append()
    dend_13 ModelViewParmSubset_473.append()
    dend_11 ModelViewParmSubset_473.append()
    dend_10 ModelViewParmSubset_473.append()
    dend_7 ModelViewParmSubset_473.append()
    dend_2 ModelViewParmSubset_473.append()
    apic_13 ModelViewParmSubset_473.append()
    apic_2 ModelViewParmSubset_473.append()
    dend_18 ModelViewParmSubset_473.append()
    dend_17 ModelViewParmSubset_473.append()
    dend_15 ModelViewParmSubset_473.append()
    dend_14 ModelViewParmSubset_473.append()
    dend_6 ModelViewParmSubset_473.append()
    dend_3 ModelViewParmSubset_473.append()
    apic_15 ModelViewParmSubset_473.append()
    apic_14 ModelViewParmSubset_473.append()
    apic_12 ModelViewParmSubset_473.append()
    apic_3 ModelViewParmSubset_473.append()
    dend_5 ModelViewParmSubset_473.append()
    dend_4 ModelViewParmSubset_473.append()
    apic_17 ModelViewParmSubset_473.append()
    apic_16 ModelViewParmSubset_473.append()
    apic_5 ModelViewParmSubset_473.append()
    apic_4 ModelViewParmSubset_473.append()
    apic_11 ModelViewParmSubset_473.append()
    apic_6 ModelViewParmSubset_473.append()
    apic_10 ModelViewParmSubset_473.append()
    apic_7 ModelViewParmSubset_473.append()
    apic_9 ModelViewParmSubset_473.append()
    apic_8 ModelViewParmSubset_473.append()

    // Group: {name=dend, groups=[], sections=[dend_19, dend_12, dend_9, dend_8, dend_1, dend_0, dend_16, dend_13, dend_11, dend_10, dend_7, dend_2, dend_18, dend_17, dend_15, dend_14, dend_6, dend_3, dend_5, dend_4]}
    dend = new SectionList()
    dend_19 dend.append()
    dend_12 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_2 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_19, apic_18, apic_1, apic_13, apic_2, apic_15, apic_14, apic_12, apic_3, apic_17, apic_16, apic_5, apic_4, apic_11, apic_6, apic_10, apic_7, apic_9, apic_8]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_19 apic.append()
    apic_18 apic.append()
    apic_1 apic.append()
    apic_13 apic.append()
    apic_2 apic.append()
    apic_15 apic.append()
    apic_14 apic.append()
    apic_12 apic.append()
    apic_3 apic.append()
    apic_17 apic.append()
    apic_16 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_11 apic.append()
    apic_6 apic.append()
    apic_10 apic.append()
    apic_7 apic.append()
    apic_9 apic.append()
    apic_8 apic.append()

    // Group: {name=OneSecGrp_SectionRef_20041, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_20041 = new SectionList()
    soma_0 OneSecGrp_SectionRef_20041.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_0 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.705007  // units: uF/cm2
    forsec apic cm = 2.705007  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 85.05132  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 1.00090976E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.015796905  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.516012  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0010771219  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 7.408866E-9  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.016319761  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.021550491  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.23853439  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.0143474E-4  // units: S cm-2
        e_pas_nml2 = -90.83724  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 3.3269252E-4  // units: S cm-2
        e_pas_nml2 = -90.83724  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.7472439E-4  // units: S cm-2
        e_pas_nml2 = -90.83724  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 6.3080806E-4  // units: S cm-2
        e_pas_nml2 = -90.83724  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.642555E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0092224395  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513445
    forsec soma {
        insert CaDynamics_478513445
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_8 nseg = 9
    dend_0 nseg = 5
    apic_19 nseg = 3
    dend_11 nseg = 3
    dend_10 nseg = 7
    dend_7 nseg = 7
    dend_18 nseg = 7
    dend_17 nseg = 5
    dend_15 nseg = 5
    dend_14 nseg = 3
    dend_6 nseg = 3
    apic_14 nseg = 3
    apic_12 nseg = 5
    dend_5 nseg = 3
    dend_4 nseg = 3
    apic_17 nseg = 5
    apic_16 nseg = 3
    apic_5 nseg = 3
    apic_4 nseg = 5
    apic_11 nseg = 3
    apic_10 nseg = 3
    apic_9 nseg = 3
    apic_8 nseg = 19
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513445


