// Cell: cNAC187_L4_DBC_cf9508af7b_0_0
/*
{
  "id" : "cNAC187_L4_DBC_cf9508af7b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.72142, 10.9655, 0.761584, 2.84462", "1.58182, 9.77504, 0.687603, 4.62864", "1.44222, 8.58452, 0.613623, 7.50202", "1.30262, 7.39401, 0.539642, 9.47415", "1.16302, 6.2035, 0.465661, 11.0555", "1.02343, 5.01299, 0.391681, 12.4342", "0.883829, 3.82247, 0.3177, 13.5523", "0.744231, 2.63196, 0.243719, 14.3411", "0.604633, 1.44145, 0.169739, 14.9091", "0.465035, 0.250937, 0.0957582, 15.2878", "0.325437, -0.939575, 0.0217776, 15.5461", "0.185839, -2.13009, -0.0522031, 15.5537", "0.0462405, -3.3206, -0.126184, 15.1598", "-0.0933575, -4.51111, -0.200164, 14.7587", "-0.232956, -5.70162, -0.274145, 14.0408", "-0.372554, -6.89214, -0.348126, 13.1988", "-0.512152, -8.08265, -0.422106, 12.1253", "-0.65175, -9.27316, -0.496087, 10.5491", "-0.791348, -10.4637, -0.570068, 8.74654", "-0.930946, -11.6542, -0.644048, 6.27284", "-1.07054, -12.8447, -0.718029, 3.68979" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "3.07622, -6.09889, -17.6726, 3.85", "3.94615, -5.55738, -16.8912, 3.85", "4.84971, -4.99493, -16.0797, 3.85" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-0.643782, -12.1029, -2.03262, 2.64", "-0.482193, -13.619, -0.858869, 1.92", "-0.34721, -14.7583, -0.0824965, 1.8", "-0.216222, -15.6679, 0.426484, 1.92", "0.185703, -18.0931, 1.52715, 1.32", "0.402867, -19.1912, 1.93041, 1.56", "0.655814, -20.2782, 2.24724, 1.8", "0.899104, -21.153, 2.34584, 2.04", "1.33281, -22.5091, 2.31856, 2.16", "1.63354, -23.3874, 2.1773, 1.32", "1.96871, -24.3827, 1.94842, 1.44", "2.35016, -25.6832, 1.71036, 1.44", "2.58576, -26.704, 1.58201, 1.8", "2.6914, -27.4158, 1.52355, 2.04", "2.72964, -28.4281, 1.48927, 1.68", "2.62976, -29.9431, 1.4613, 1.44", "2.49962, -30.6978, 1.45664, 1.8", "2.33746, -31.3171, 1.46401, 2.04", "2.07161, -32.1628, 1.49394, 1.92", "1.78571, -32.9426, 1.51856, 1.56", "1.40927, -33.8976, 1.50002, 1.56", "1.15591, -34.5354, 1.39999, 0.72", "0.978182, -35.0139, 1.31285, 0.48", "0.842574, -35.3924, 1.25807, 0.48", "0.529551, -36.2888, 1.16772, 1.32", "0.270822, -37.0411, 1.09606, 1.68", "-0.208095, -38.441, 0.91758, 1.56", "-0.477864, -39.2281, 0.818954, 1.92", "-0.868599, -40.3982, 0.680283, 2.64", "-1.13938, -41.2679, 0.606182, 2.76", "-1.34086, -42.0409, 0.579762, 2.76", "-1.55998, -43.1363, 0.614995, 1.68", "-1.6478, -43.8403, 0.667713, 0.96", "-1.69315, -44.7685, 0.727468, 0.96", "-1.66653, -45.9654, 0.793193, 1.32", "-1.552, -47.6868, 0.909579, 1.8", "-1.4852, -48.4381, 0.971354, 2.16", "-1.40165, -49.3005, 1.0358, 2.28", "-1.30036, -50.3585, 1.08849, 0.84", "-1.25319, -51.052, 1.1017, 0.84", "-1.2257, -52.0781, 1.0756, 1.08", "-1.30066, -53.1537, 1.01259, 1.68", "-1.46403, -53.9888, 0.95678, 2.52", "-1.57404, -54.3314, 0.913541, 3.0", "-1.7298, -54.7011, 0.847553, 2.88", "-1.83107, -54.9046, 0.808936, 2.88", "-2.256, -55.6758, 0.65242, 2.16", "-2.95118, -56.8684, 0.523151, 0.96", "-3.48414, -57.7753, 0.452685, 0.48", "-3.67086, -58.0883, 0.429521, 0.48", "-4.32579, -59.1747, 0.357937, 1.92", "-4.96217, -60.2048, 0.306683, 3.12", "-5.67902, -61.3793, 0.297863, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.64622, 10.4691, 0.167383, 2.16", "3.15808, 12.3778, 0.894906, 1.44", "3.67896, 14.2088, 1.55697, 2.16", "4.26355, 16.2069, 2.23104, 3.25", "4.67494, 17.5589, 2.67041, 3.49", "5.15145, 19.0859, 3.24425, 3.25", "5.48576, 20.1573, 3.64685, 2.88", "5.74318, 20.9704, 3.99392, 2.88", "6.02128, 21.8085, 4.31722, 2.52", "6.54935, 23.2876, 4.91169, 2.16", "7.31149, 25.2978, 5.74237, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499998982464247
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.07054, -12.8447, -0.718029, 0.780957", "-2.81746, -27.7426, -0.718029, 0.780957", "-4.56437, -42.6406, -0.718029, 0.780957" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "4.84971, -4.99493, -16.0797, 1.56", "3.72131, -2.35624, -17.1468, 1.56", "3.30309, -1.23461, -17.5993, 1.2", "3.05319, -0.434067, -17.9287, 0.96", "2.81146, 0.527315, -18.2819, 0.96", "2.46559, 2.23385, -18.8951, 1.32", "2.15523, 4.19408, -19.4654, 1.32", "2.007, 5.80926, -19.7536, 1.44", "1.97895, 7.20558, -19.9409, 1.44", "2.04839, 8.70165, -20.0616, 1.44", "2.14665, 9.88764, -20.0794, 1.68", "2.33367, 12.0528, -19.966, 2.88", "2.38947, 12.9762, -19.8554, 3.73", "2.38943, 14.4355, -19.6486, 3.73", "2.24319, 16.333, -19.385, 2.88", "1.9229, 18.4659, -19.15, 1.68", "1.70401, 19.4547, -19.0599, 1.2", "1.4592, 20.3555, -19.0295, 0.96", "1.08576, 21.5136, -18.9894, 1.68", "0.585778, 22.7898, -18.9459, 2.88", "0.30954, 23.3446, -18.9318, 3.49", "-0.0730332, 23.9691, -18.9382, 3.61" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.84971, -4.99493, -16.0797, 1.32", "6.81932, -5.81421, -16.018, 1.32", "7.61314, -6.13027, -16.1073, 0.84", "8.76733, -6.61528, -16.3392, 1.2", "10.0315, -7.22343, -16.7115, 1.44", "11.304, -8.01724, -17.2433, 1.32", "12.3157, -8.8539, -17.772, 1.56", "13.2898, -10.087, -18.5959, 1.2", "13.5637, -10.5497, -18.9205, 1.2", "13.8609, -11.36, -19.5007, 1.2", "14.0982, -12.7672, -20.4647, 2.64", "14.129, -13.9575, -21.1636, 4.45", "14.1093, -14.902, -21.5392, 4.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-5.67902, -61.3793, 0.297863, 3.0", "-6.47958, -62.1377, 0.471154, 3.0", "-6.93454, -62.6359, 0.57688, 2.76", "-7.63855, -63.5198, 0.800748, 1.92", "-7.86341, -63.8589, 0.896953, 1.92", "-8.29381, -64.6504, 1.12479, 0.6", "-8.53905, -65.2036, 1.2695, 0.48", "-8.58884, -65.4222, 1.31621, 0.48", "-8.65127, -65.9959, 1.42132, 0.48", "-8.64968, -66.6932, 1.51809, 0.84", "-8.57031, -67.4845, 1.60872, 1.08", "-8.41922, -68.2632, 1.71393, 1.32", "-8.20769, -69.0294, 1.80357, 0.96", "-8.01804, -69.5673, 1.86261, 0.72", "-7.78489, -70.1247, 1.91394, 0.6", "-7.3457, -70.9981, 2.02881, 0.48", "-6.86033, -71.8065, 2.11858, 0.48", "-6.33615, -72.5696, 2.19394, 1.44", "-5.75047, -73.3559, 2.2566, 1.92", "-5.30173, -73.9346, 2.31667, 2.04", "-4.71775, -74.7199, 2.40942, 1.44", "-4.02283, -75.7025, 2.50874, 0.84", "-3.83033, -76.0077, 2.56964, 0.12", "-3.60691, -76.4444, 2.71863, 0.12", "-3.3548, -77.17, 3.10419, 1.32", "-3.18471, -77.948, 3.61461, 1.68", "-3.13104, -78.3171, 3.87352, 1.8", "-2.92419, -79.8406, 4.98104, 1.2", "-2.85598, -80.4944, 5.43983, 1.68", "-2.7245, -81.5747, 6.19905, 1.2", "-2.65125, -82.261, 6.69034, 0.24", "-2.61719, -82.7217, 7.03541, 0.24", "-2.58745, -83.5408, 7.62583, 1.92", "-2.61614, -84.098, 7.97557, 1.8", "-2.98772, -85.824, 9.04363, 0.72", "-3.31496, -86.6982, 9.56337, 0.72", "-3.63564, -87.2762, 9.90604, 0.48", "-3.93504, -87.6764, 10.161, 0.36", "-4.47608, -88.2787, 10.5311, 0.36", "-4.78828, -88.6571, 10.7195, 0.36", "-5.39892, -89.592, 11.2233, 0.6", "-5.53107, -89.9402, 11.4356, 0.6", "-5.66433, -90.3797, 11.7988, 0.36", "-5.76804, -90.7052, 12.1185, 0.36", "-5.87731, -91.105, 12.535, 0.36", "-6.23163, -92.2534, 13.7925, 0.36", "-6.33134, -92.4766, 14.0464, 0.36", "-6.67589, -93.1955, 14.9564, 1.44", "-6.81078, -93.4713, 15.3383, 1.68" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-5.67902, -61.3793, 0.297863, 0.12", "-5.9682, -62.9642, 0.0598785, 0.12", "-6.10641, -63.5336, -0.105371, 0.12", "-6.2452, -64.0604, -0.287956, 0.96", "-6.38743, -64.6676, -0.508972, 1.32", "-6.47794, -65.1324, -0.684875, 1.32", "-6.63132, -66.1471, -1.07376, 0.6", "-6.73877, -66.9055, -1.46579, 0.36", "-6.75184, -67.1045, -1.5823, 0.36", "-6.72434, -67.5914, -1.87731, 0.36", "-6.67886, -67.9028, -2.04006, 0.36", "-6.63369, -68.226, -2.17497, 0.36", "-6.59986, -68.8296, -2.35492, 0.36", "-6.62179, -69.2331, -2.43474, 0.36", "-6.69204, -69.811, -2.60991, 0.36", "-6.81377, -70.4698, -2.81748, 1.08", "-7.01956, -71.3548, -3.09234, 1.68", "-7.19146, -71.9993, -3.2882, 1.8", "-7.43637, -72.836, -3.51718, 1.56", "-7.7739, -74.0769, -3.90011, 1.2", "-7.90326, -74.6478, -4.08372, 0.36", "-7.95155, -74.9579, -4.16359, 0.36", "-7.98581, -75.3157, -4.19411, 0.36", "-8.02175, -76.1743, -4.17284, 1.56", "-8.02261, -76.8336, -4.11309, 1.92", "-8.00273, -77.6535, -3.97922, 1.92", "-7.93253, -78.7755, -3.8016, 1.08", "-7.83751, -79.7294, -3.6175, 0.36", "-7.74709, -80.5044, -3.44542, 0.36", "-7.6823, -81.0427, -3.25231, 0.36", "-7.66159, -81.2531, -3.16225, 0.36", "-7.61793, -81.7803, -2.93286, 0.96", "-7.58012, -82.3433, -2.67115, 1.8", "-7.54759, -82.9808, -2.41191, 2.16", "-7.49783, -84.833, -1.69821, 1.92", "-7.50179, -85.7412, -1.40299, 1.8", "-7.53018, -86.5207, -1.2321, 1.8", "-7.59921, -87.4527, -1.22827, 1.2", "-7.73369, -88.7927, -1.6289, 0.12", "-7.75534, -88.9972, -1.73278, 0.12", "-7.817, -89.5563, -2.09535, 0.12", "-7.88972, -90.2304, -2.53656, 0.84", "-7.99195, -91.3498, -3.2895, 1.08", "-8.06448, -92.355, -3.94499, 1.92", "-8.10574, -93.1548, -4.38311, 2.88", "-8.13247, -93.6612, -4.63463, 2.88", "-8.1677, -94.3101, -4.94232, 1.92", "-8.23427, -95.2356, -5.341, 0.36", "-8.27817, -95.6725, -5.4888, 0.36", "-8.34064, -96.2247, -5.62426, 1.08", "-8.43217, -96.9154, -5.78102, 1.2", "-8.57643, -97.9503, -5.97413, 0.48", "-8.69797, -98.8424, -6.11668, 0.48", "-8.81255, -99.6234, -6.21618, 0.48", "-8.9981, -100.755, -6.3611, 1.92", "-9.1461, -101.527, -6.45499, 2.4", "-9.28474, -102.185, -6.5235, 2.64", "-9.48974, -103.083, -6.5899, 2.64", "-9.65396, -103.723, -6.65321, 2.04", "-9.90474, -104.552, -6.7557, 0.72", "-10.0418, -104.941, -6.79784, 0.72", "-10.2337, -105.493, -6.81753, 0.72", "-10.403, -106.03, -6.82741, 0.72", "-10.593, -106.733, -6.8208, 0.24", "-10.7309, -107.36, -6.73837, 0.12", "-10.7792, -107.708, -6.65391, 0.12", "-10.8145, -108.363, -6.44693, 0.12", "-10.7695, -109.015, -6.20789, 1.2", "-10.6751, -109.587, -5.99322, 2.28", "-10.2976, -111.238, -5.39501, 1.8", "-10.0579, -112.133, -5.10052, 0.36", "-9.93797, -112.592, -4.99619, 0.36", "-9.75396, -113.531, -4.88675, 0.36", "-9.65581, -114.429, -4.88322, 0.36", "-9.62766, -115.003, -4.97488, 0.36", "-9.66149, -115.891, -5.26601, 0.36", "-9.82898, -116.99, -5.67751, 1.56", "-10.0175, -117.83, -5.99989, 2.4", "-10.1447, -118.297, -6.17677, 2.4", "-10.3519, -119.099, -6.45894, 2.4", "-10.6067, -120.33, -6.82649, 0.48", "-10.6836, -120.823, -6.93861, 0.48", "-10.7406, -121.604, -7.04421, 0.6", "-10.7355, -122.275, -7.11003, 0.36", "-10.6939, -123.069, -7.17427, 0.36", "-10.6362, -123.83, -7.21594, 0.48", "-10.576, -124.386, -7.26316, 0.36", "-10.497, -125.06, -7.3588, 0.36", "-10.4403, -125.72, -7.49206, 0.36", "-10.4361, -126.143, -7.61544, 0.48", "-10.4801, -126.774, -7.86473, 0.48", "-10.5935, -127.533, -8.18286, 0.36", "-10.6928, -128.071, -8.40939, 0.84", "-10.8743, -128.942, -8.73387, 1.32", "-11.1319, -130.081, -9.10007, 2.16", "-11.3516, -130.947, -9.35168, 2.64", "-11.5955, -131.839, -9.5816, 2.28", "-11.888, -132.838, -9.76335, 1.8", "-12.1795, -133.868, -9.90487, 1.2", "-12.3298, -134.46, -9.89377, 0.48", "-12.5327, -135.444, -9.7601, 0.36", "-12.6481, -136.114, -9.61312, 0.36", "-12.7356, -136.798, -9.42426, 1.08", "-12.781, -137.484, -9.18426, 1.08", "-12.7601, -139.438, -8.45554, 1.44", "-12.681, -140.54, -8.04702, 1.44", "-12.5969, -141.304, -7.73321, 1.32", "-12.5126, -142.048, -7.45959, 0.48", "-12.4465, -142.662, -7.29104, 0.48", "-12.4186, -143.038, -7.20896, 1.08", "-12.386, -143.744, -7.11415, 1.68", "-12.3835, -144.899, -6.91619, 2.28", "-12.4306, -145.689, -6.80591, 2.4", "-12.5514, -146.703, -6.72721, 1.32", "-12.6803, -147.388, -6.70028, 0.6", "-12.7914, -147.835, -6.73988, 0.48", "-13.0288, -148.54, -6.94326, 0.48", "-13.275, -149.167, -7.22995, 0.48", "-13.5461, -149.864, -7.69632, 1.08", "-13.7407, -150.463, -8.14196, 1.92", "-14.0821, -151.739, -9.19228, 1.92", "-14.3089, -152.787, -10.0891, 2.28", "-14.4266, -153.48, -10.6862, 2.76", "-14.6573, -155.164, -12.0741, 2.76", "-14.8045, -156.464, -13.0428, 0.72", "-14.8899, -157.466, -13.6921, 0.72", "-14.9443, -158.245, -14.0886, 0.96", "-15.0007, -158.894, -14.3503, 1.56", "-15.1077, -159.675, -14.5927, 1.8", "-15.2286, -160.37, -14.7068, 1.44", "-15.3432, -161.177, -14.8105, 0.48", "-15.3573, -161.498, -14.8374, 0.6", "-15.3314, -162.355, -14.9015, 0.6", "-15.3035, -162.757, -14.9205, 0.48", "-15.2327, -163.684, -14.9468, 0.48", "-15.1935, -164.407, -14.9572, 0.48", "-15.1796, -165.3, -14.9292, 0.48", "-15.2056, -166.185, -14.9043, 0.84", "-15.3014, -167.332, -14.8716, 1.68", "-15.4702, -168.577, -14.8342, 2.4", "-15.6018, -169.388, -14.8071, 2.4", "-15.7804, -170.519, -14.7811, 0.6", "-15.8704, -171.304, -14.7663, 0.6", "-15.8968, -172.327, -14.7848, 0.6", "-15.8208, -173.233, -14.8241, 0.6", "-15.6768, -173.978, -14.8482, 1.08", "-15.4782, -174.71, -14.8596, 1.44", "-15.2694, -175.359, -14.8608, 0.84", "-15.0326, -176.08, -14.8269, 0.96", "-14.7926, -176.907, -14.7711, 0.96", "-14.6603, -177.521, -14.7252, 0.72", "-14.5979, -177.982, -14.6913, 0.48", "-14.5693, -178.396, -14.6594, 0.48", "-14.576, -178.969, -14.6048, 1.32", "-14.6603, -179.913, -14.4999, 1.8", "-14.758, -180.601, -14.4644, 2.04", "-14.9239, -181.528, -14.4698, 1.92", "-15.06, -182.218, -14.5012, 1.44", "-15.2364, -183.078, -14.5873, 0.48", "-15.3928, -183.809, -14.7176, 0.48", "-15.6369, -184.986, -15.0001, 1.44", "-15.8416, -186.009, -15.2676, 2.52", "-16.0057, -186.898, -15.5083, 3.25", "-16.2, -188.17, -15.8628, 2.28", "-16.2887, -189.053, -16.0979, 1.8", "-16.3256, -190.05, -16.333, 0.96", "-16.3161, -191.39, -16.5951, 0.96", "-16.2743, -192.396, -16.7879, 0.96", "-16.1977, -193.687, -17.0176, 2.52", "-16.1286, -194.643, -17.1377, 2.52", "-15.9984, -196.241, -17.2662, 1.44", "-15.9281, -197.028, -17.3088, 0.96", "-15.8389, -197.945, -17.357, 0.72", "-15.799, -198.413, -17.3766, 0.72", "-15.7522, -199.318, -17.4454, 0.72", "-15.7584, -199.997, -17.5365, 0.72", "-15.7865, -200.76, -17.7418, 1.08", "-15.7847, -201.509, -18.1128, 1.44", "-15.7691, -201.784, -18.29, 1.44", "-15.6753, -202.92, -19.1639, 0.36", "-15.5715, -203.883, -19.9874, 0.36", "-15.4186, -205.018, -20.9671, 1.32", "-15.2025, -206.324, -22.0465, 0.48", "-15.0999, -206.861, -22.4542, 0.48", "-14.8642, -207.975, -23.2244, 1.92", "-14.7895, -208.321, -23.4298, 2.76", "-14.632, -209.136, -23.8306, 2.4", "-14.54, -209.908, -24.0538, 1.32", "-14.5303, -210.354, -24.195, 0.12", "-14.5642, -210.787, -24.3855, 0.12", "-14.6088, -211.002, -24.5033, 0.12", "-14.7865, -211.659, -24.944, 1.08", "-14.9088, -212.106, -25.2949, 1.08", "-15.3428, -214.0, -27.0156, 0.24", "-15.3688, -214.267, -27.2688, 0.24", "-15.3378, -214.771, -27.7239, 0.24", "-15.173, -215.376, -28.1809, 0.24", "-14.8511, -216.033, -28.5674, 0.24", "-14.3556, -216.868, -29.0113, 1.08", "-13.8905, -217.6, -29.3093, 2.04", "-13.4875, -218.278, -29.5973, 2.04", "-13.0251, -219.12, -29.9615, 1.44", "-12.8477, -219.546, -30.127, 0.96", "-12.3845, -221.139, -30.6454, 0.72", "-12.2556, -221.795, -30.804, 0.36", "-12.1981, -222.574, -30.974, 0.36", "-12.2072, -222.923, -31.0224, 0.36", "-12.2919, -223.774, -31.0439, 1.32", "-12.3783, -224.489, -30.9907, 2.04", "-12.4205, -224.834, -30.935, 2.4", "-12.4886, -225.333, -30.8503, 2.4", "-12.6666, -226.643, -30.6279, 0.48", "-12.7571, -227.314, -30.5205, 0.36", "-12.9083, -228.532, -30.3691, 0.36", "-12.9883, -229.217, -30.292, 0.36", "-13.0756, -229.97, -30.2193, 1.68", "-13.1215, -230.531, -30.1768, 2.16", "-13.1331, -230.891, -30.1621, 2.16", "-13.1188, -231.838, -30.1184, 0.96", "-13.082, -232.401, -30.118, 0.36", "-13.0488, -232.74, -30.1571, 0.36", "-12.9446, -233.574, -30.3598, 0.36", "-12.8415, -234.391, -30.6231, 0.36", "-12.7687, -234.962, -30.8152, 0.36", "-12.6682, -235.867, -31.1172, 1.44", "-12.5844, -237.112, -31.5005, 2.4", "-12.5675, -237.761, -31.6673, 2.52", "-12.578, -238.071, -31.7297, 2.52", "-12.6722, -239.186, -31.875, 0.48", "-12.7396, -239.879, -31.9262, 0.36", "-12.879, -241.111, -31.8713, 0.36", "-12.9448, -241.666, -31.784, 1.32", "-13.0355, -242.36, -31.646, 1.92", "-13.1098, -242.952, -31.536, 1.92" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.31149, 25.2978, 5.74237, 1.92", "7.37445, 28.3386, 5.68177, 1.92", "7.3726, 29.8075, 5.67279, 2.28", "7.36052, 31.1558, 5.71599, 1.8", "7.35304, 32.7351, 5.79456, 1.8", "7.36177, 34.8818, 5.92052, 1.68", "7.39932, 37.3836, 6.07868, 2.4", "7.44165, 39.2899, 6.33617, 2.88", "7.47728, 40.2984, 6.45599, 2.76", "7.53343, 41.2196, 6.58431, 2.76", "7.60449, 41.916, 6.72347, 2.76", "7.73328, 42.7055, 6.92157, 2.52", "8.12448, 44.3827, 7.39354, 1.68", "8.37909, 45.3582, 7.68181, 1.44", "8.67738, 46.4644, 7.99933, 1.68", "9.22662, 48.4787, 8.62308, 2.64", "9.56719, 49.7057, 9.02582, 2.88", "9.77113, 50.4007, 9.26444, 3.12" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.31149, 25.2978, 5.74237, 0.84", "6.69559, 25.1092, 5.88983, 0.84", "5.71605, 25.0053, 6.11576, 0.84", "5.04453, 25.099, 6.35601, 0.84", "4.84841, 25.1771, 6.46727, 0.84", "4.39348, 25.5223, 6.81526, 0.72", "4.07846, 25.9357, 7.29466, 0.72", "3.96269, 26.2222, 7.66939, 0.72", "3.9526, 26.7597, 8.38478, 0.96", "4.0811, 27.1628, 8.96614, 1.44", "4.3251, 27.5845, 9.58021, 1.56", "4.93134, 28.3089, 10.6937, 1.32", "5.39497, 28.7422, 11.4036, 0.48", "5.82135, 29.071, 11.9367, 0.6", "6.70346, 29.6185, 12.8314, 0.6", "7.26235, 29.8907, 13.2575, 1.68", "8.2968, 30.2335, 13.7018, 1.92", "9.11169, 30.3986, 13.6178, 1.56", "11.5189, 30.4427, 11.9004, 0.48", "11.9856, 30.3913, 11.3235, 0.48", "12.3481, 30.3321, 10.7921, 0.84", "12.5414, 30.273, 10.41, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-4.56437, -42.6406, -0.718029, 0.460382", "-6.31129, -57.5385, -0.718029, 0.460382", "-8.0582, -72.4364, -0.718029, 0.460382" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-0.0730332, 23.9691, -18.9382, 0.96", "0.986722, 25.9446, -19.594, 0.96", "1.51494, 27.0992, -19.8858, 0.6", "1.94533, 28.2316, -20.1249, 0.6", "2.13703, 28.8529, -20.2401, 1.32", "2.26974, 29.4162, -20.312, 1.56", "2.44286, 30.5151, -20.3974, 0.96", "2.45406, 31.8669, -20.3197, 0.6", "2.39963, 32.5068, -20.2556, 0.48", "2.32567, 33.0639, -20.1969, 0.48", "2.17022, 34.1992, -20.0871, 0.72", "2.00325, 35.5649, -19.999, 1.8", "1.89835, 36.8125, -19.9621, 2.04", "1.87372, 37.8257, -19.9637, 2.64", "1.91449, 38.9591, -20.0378, 3.25", "1.99938, 39.9819, -20.1616, 3.25", "2.13042, 41.0139, -20.3442, 2.88", "2.35358, 42.3776, -20.6097, 0.84", "2.45156, 42.9328, -20.716, 0.6", "2.68251, 44.356, -20.9691, 2.4", "2.8218, 45.3591, -21.1276, 3.25", "2.93463, 46.3115, -21.2469, 2.88", "3.1044, 47.8903, -21.3964, 0.96", "3.2856, 49.569, -21.5631, 0.84", "3.39905, 50.6026, -21.6734, 0.48", "3.48047, 51.3071, -21.7449, 0.48", "3.635, 52.6684, -21.904, 0.48", "3.75243, 53.7354, -22.051, 1.92", "3.91373, 55.007, -22.2697, 3.37", "4.05369, 55.8391, -22.4477, 3.49", "4.27863, 56.8318, -22.6928, 3.0" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-0.0730332, 23.9691, -18.9382, 0.84", "-1.90552, 24.8951, -19.2577, 0.84", "-2.34199, 25.2482, -19.4348, 0.72", "-2.62331, 25.5772, -19.6116, 0.72", "-2.86261, 26.0225, -19.8997, 0.72", "-3.20189, 26.8469, -20.6119, 0.84", "-3.59398, 27.848, -21.5761, 0.72", "-3.76599, 28.567, -22.3202, 0.48", "-3.90714, 29.2442, -23.0401, 0.48", "-4.15296, 30.4256, -24.309, 0.72", "-4.46549, 31.652, -25.6377, 0.48", "-4.5765, 31.9548, -25.9995, 0.48", "-4.70867, 32.2113, -26.2991, 0.48", "-5.00503, 32.6675, -26.8205, 1.32", "-5.34508, 33.1085, -27.3276, 2.04", "-5.85547, 33.7084, -27.9658, 1.56", "-6.92125, 35.0226, -29.2792, 0.36", "-7.166, 35.3351, -29.6114, 0.36", "-8.08362, 36.5158, -30.9768, 2.4", "-8.46039, 37.0094, -31.6088, 3.25", "-8.69288, 37.3222, -32.0451, 3.73" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "14.1093, -14.902, -21.5392, 0.24", "13.6139, -16.5083, -21.9243, 0.24", "13.4719, -17.078, -22.0851, 0.24", "13.2715, -18.1525, -22.3764, 1.92", "13.1062, -19.006, -22.5886, 2.52", "12.9545, -19.6963, -22.7467, 2.4", "12.7845, -20.4071, -22.9009, 1.8", "12.5826, -21.3353, -23.0929, 0.24", "12.3204, -22.4325, -23.2739, 0.24", "12.0392, -23.5265, -23.3992, 0.24", "11.8295, -24.2809, -23.4549, 0.24", "11.6196, -24.9751, -23.5131, 1.68", "11.258, -26.0747, -23.6023, 1.92", "10.8262, -27.294, -23.7123, 2.28", "10.4666, -28.2429, -23.817, 3.12", "10.0831, -29.2123, -23.9359, 3.12", "9.35095, -30.9376, -24.1279, 0.24", "9.04151, -31.5968, -24.1883, 0.24", "8.96499, -31.7404, -24.199, 0.48", "8.62452, -32.2979, -24.2211, 0.48", "8.11698, -33.0391, -24.2058, 0.48", "7.77951, -33.5415, -24.1482, 0.48", "7.6307, -33.8011, -24.0784, 0.12", "7.41834, -34.3567, -23.9421, 0.12", "7.3343, -34.6621, -23.8731, 0.12", "7.25581, -35.1094, -23.7867, 0.72", "7.15368, -36.0048, -23.6522, 0.96", "7.09727, -36.5706, -23.6063, 0.24", "6.98411, -37.6856, -23.5603, 0.24", "6.93567, -38.1709, -23.5276, 0.96", "6.87536, -38.7307, -23.4816, 1.44", "6.7846, -39.4164, -23.4216, 1.56", "6.62694, -40.3519, -23.3411, 0.48", "6.51287, -40.9602, -23.2933, 0.24", "6.29872, -42.0795, -23.1989, 1.68", "6.1725, -42.8672, -23.15, 2.88", "6.0232, -44.0087, -23.0635, 2.88", "5.88243, -45.5115, -22.9408, 0.24", "5.81751, -46.7628, -22.8253, 0.24", "5.81018, -47.2312, -22.7858, 0.24", "5.83588, -48.6794, -22.705, 0.24", "5.88541, -49.5992, -22.6545, 1.8", "5.98115, -50.6067, -22.5905, 2.76", "6.1584, -51.9825, -22.4953, 0.48", "6.25627, -52.7636, -22.4391, 0.48", "6.31, -53.3765, -22.3959, 0.6", "6.3394, -54.0603, -22.3282, 0.6", "6.33871, -54.591, -22.289, 0.36", "6.31607, -55.1591, -22.2455, 0.36", "6.21071, -56.0846, -22.2396, 0.48", "6.01754, -57.3115, -22.2811, 0.48", "5.85525, -58.1369, -22.3326, 1.44", "5.63405, -59.1836, -22.4674, 2.76", "5.46567, -60.0581, -22.6306, 3.0", "5.1627, -61.8788, -23.1375, 0.12", "5.08246, -62.4145, -23.326, 0.12", "4.97207, -63.173, -23.6373, 0.12", "4.85573, -64.0429, -24.0232, 1.32", "4.75234, -64.8805, -24.3856, 2.4", "4.51919, -66.5446, -25.0519, 0.12", "4.39248, -67.3555, -25.3233, 0.12", "4.29258, -67.8375, -25.4669, 0.84", "4.15667, -68.368, -25.6004, 0.96", "3.79926, -69.6134, -25.8235, 0.12", "3.5212, -70.5419, -25.9514, 0.12", "3.32008, -71.2716, -26.009, 1.32", "3.15074, -71.9635, -26.0598, 1.8", "2.94825, -72.8965, -26.1136, 0.12", "2.69286, -74.1217, -26.1596, 0.12", "2.56908, -74.7858, -26.1697, 1.56", "2.45969, -75.5756, -26.1757, 2.52", "2.38732, -76.2657, -26.1747, 2.64", "2.2745, -77.7438, -26.1574, 1.32", "2.22573, -78.4111, -26.141, 0.12", "2.21529, -78.5342, -26.1379, 0.24", "2.12999, -79.3986, -26.133, 0.24", "2.02651, -80.4103, -26.145, 0.24", "1.95364, -81.088, -26.2096, 0.24", "1.90325, -81.5568, -26.2876, 0.24", "1.85228, -82.0156, -26.3822, 1.56", "1.756, -82.734, -26.5441, 2.28", "1.65298, -83.3939, -26.7178, 2.28", "1.42049, -84.8798, -27.1468, 0.48", "1.28053, -85.7398, -27.3986, 0.48", "1.26255, -85.8488, -27.4287, 0.72", "1.12259, -86.6124, -27.623, 0.96", "0.992292, -87.2534, -27.7545, 0.48", "0.907433, -87.5892, -27.8236, 0.48", "0.753934, -88.1361, -27.8942, 0.48", "0.542159, -88.8609, -27.9763, 0.6", "0.47334, -89.1063, -27.9992, 0.24", "0.280133, -89.8793, -28.0616, 0.24", "0.0510877, -91.0064, -28.1272, 1.56", "-0.103732, -91.9137, -28.1796, 2.4", "-0.220781, -92.7258, -28.2242, 2.52", "-0.27778, -93.1781, -28.2458, 2.52", "-0.452257, -94.6508, -28.2766, 0.24", "-0.613115, -96.4529, -28.2629, 0.24", "-0.640349, -96.9267, -28.2482, 0.96", "-0.66153, -97.6103, -28.2333, 1.44", "-0.658802, -98.0709, -28.2174, 1.68", "-0.620223, -99.0671, -28.1932, 0.24", "-0.470871, -100.787, -28.1616, 0.24", "-0.353958, -101.692, -28.1604, 1.56", "-0.269558, -102.258, -28.1726, 2.16", "-0.172139, -102.868, -28.2039, 1.8", "-0.0398079, -103.915, -28.2959, 0.12", "0.00244794, -104.514, -28.379, 0.12", "-0.00371066, -104.627, -28.3958, 0.6", "-0.0787242, -105.097, -28.4603, 0.12", "-0.163175, -105.447, -28.4998, 0.12", "-0.412169, -106.296, -28.5667, 0.12", "-0.527719, -106.692, -28.5766, 0.6", "-0.697401, -107.358, -28.5188, 0.6", "-0.791653, -107.804, -28.4419, 0.12", "-0.891467, -108.344, -28.3169, 0.12", "-0.979063, -108.793, -28.2019, 0.6", "-1.09071, -109.448, -28.024, 0.6", "-1.28332, -110.692, -27.6845, 0.12", "-1.39857, -111.519, -27.4659, 0.12", "-1.50333, -112.351, -27.2636, 1.44", "-1.60083, -113.212, -27.0828, 2.4", "-1.64105, -113.616, -27.0158, 2.52", "-1.69745, -114.268, -26.9491, 2.16", "-1.70285, -115.067, -26.9368, 0.12", "-1.65483, -115.748, -26.8893, 0.36", "-1.59985, -116.189, -26.8381, 0.12", "-1.54873, -116.524, -26.7854, 0.12", "-1.46813, -117.013, -26.7067, 0.12", "-1.31278, -117.881, -26.5655, 0.12", "-1.11408, -118.881, -26.4133, 0.12", "-1.07837, -119.105, -26.3875, 0.12", "-1.02035, -119.788, -26.3367, 0.12", "-1.00779, -120.585, -26.3406, 1.8", "-1.01651, -120.926, -26.3647, 2.28", "-1.06964, -121.608, -26.3905, 1.92", "-1.15766, -122.727, -26.374, 0.36", "-1.23239, -123.582, -26.3211, 0.36", "-1.29502, -124.37, -26.2426, 1.2", "-1.32666, -125.067, -26.0919, 0.72", "-1.29197, -126.489, -25.7976, 0.12", "-1.2152, -127.771, -25.5415, 0.12", "-1.14003, -128.61, -25.3824, 1.68", "-1.08424, -129.262, -25.2604, 1.8", "-0.960663, -130.996, -24.9147, 1.44", "-0.865802, -132.746, -24.6465, 0.24", "-0.759326, -134.427, -24.4197, 0.12", "-0.707976, -135.205, -24.2937, 0.12", "-0.640368, -136.543, -24.0335, 0.12", "-0.619403, -137.194, -23.9156, 1.2", "-0.587337, -138.088, -23.7823, 2.52", "-0.509219, -139.48, -23.4152, 0.48", "-0.472159, -139.8, -23.3265, 0.48", "-0.349382, -140.588, -23.1075, 0.48", "-0.182938, -141.445, -22.8917, 0.72", "0.0385509, -142.556, -22.6325, 0.24", "0.261308, -143.728, -22.2805, 0.12", "0.457221, -144.607, -22.024, 0.12", "0.593313, -145.086, -21.8987, 1.08", "0.773643, -145.612, -21.7453, 1.32", "0.943051, -146.039, -21.6283, 1.08", "1.4066, -147.153, -21.3569, 0.36", "2.12005, -148.821, -21.0684, 0.36", "2.60914, -149.943, -20.8669, 1.56", "3.03228, -150.923, -20.6983, 2.16", "3.40761, -151.704, -20.5807, 1.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.1093, -14.902, -21.5392, 0.36", "15.7922, -16.0321, -21.9831, 0.36", "16.3366, -16.1923, -22.2878, 0.36", "16.6263, -16.2026, -22.5176, 0.36", "16.8884, -16.1946, -22.7332, 0.36", "17.5242, -16.177, -23.2413, 0.72", "18.5024, -16.1829, -24.0058, 0.96", "19.1146, -16.126, -24.5436, 0.96", "19.978, -16.0669, -25.3048, 0.48", "20.7829, -16.0767, -25.9909, 0.36", "21.2017, -16.1694, -26.3195, 0.36", "21.554, -16.4261, -26.5149, 0.36", "21.6751, -16.6103, -26.5397, 0.36", "22.003, -17.2439, -26.5508, 0.36", "22.3144, -17.8388, -26.5249, 1.56", "22.7365, -18.5539, -26.4825, 2.52", "23.1771, -19.1836, -26.4881, 2.4", "24.1359, -20.2856, -26.5713, 0.36", "24.4958, -20.6234, -26.6279, 0.36", "25.2446, -21.221, -26.7788, 0.36", "25.9663, -21.726, -26.957, 0.36", "26.9694, -22.3655, -27.2183, 1.44", "28.0388, -22.995, -27.5147, 3.25", "29.2363, -23.6518, -27.8697, 4.69", "29.4579, -23.7789, -27.9406, 4.93", "30.7665, -24.6229, -28.4019, 3.61" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-13.1098, -242.952, -31.536, 0.12", "-13.5667, -244.009, -32.593, 0.12", "-13.7499, -244.488, -33.0734, 0.12", "-13.8075, -244.626, -33.2559, 0.12", "-13.8949, -244.78, -33.4627, 0.36", "-14.4383, -245.629, -34.552, 0.12", "-14.6105, -245.878, -34.9152, 0.12", "-14.6105, -245.878, -34.9152, 0.36", "-15.2322, -246.783, -36.3112, 0.36", "-15.6065, -247.372, -37.1815, 2.52", "-15.7385, -247.605, -37.5017, 2.88", "-16.8717, -249.706, -40.1122, 0.24", "-17.0219, -250.002, -40.4521, 0.12", "-17.1425, -250.289, -40.7382, 0.12", "-17.2524, -250.669, -41.0326, 0.48", "-17.3247, -251.09, -41.3104, 0.48", "-17.3814, -251.525, -41.5408, 0.12", "-17.4365, -252.301, -41.7337, 0.12", "-17.4644, -252.759, -41.8957, 0.12", "-17.4934, -253.282, -42.1048, 0.84", "-17.5253, -253.621, -42.2292, 0.84", "-17.6403, -254.902, -42.6622, 0.12", "-17.6796, -255.461, -42.8265, 0.12", "-17.8273, -256.907, -43.2069, 2.64", "-17.9001, -257.361, -43.3113, 2.28", "-18.1826, -258.618, -43.4406, 0.12", "-18.3154, -259.061, -43.4156, 0.12", "-18.6632, -259.884, -43.2038, 0.12", "-19.0194, -260.448, -42.9723, 1.2", "-19.0876, -260.529, -42.9226, 1.44", "-20.1522, -261.595, -42.133, 0.12", "-20.5046, -261.873, -41.8537, 0.12", "-20.8449, -262.086, -41.5731, 0.12", "-21.313, -262.31, -41.1416, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.1098, -242.952, -31.536, 0.6", "-12.7422, -243.877, -32.9394, 0.6", "-12.7096, -243.992, -33.1323, 0.6", "-12.5885, -244.486, -33.955, 1.32", "-12.4711, -245.026, -34.8101, 2.28", "-12.339, -245.634, -35.7714, 2.04", "-11.9049, -247.631, -38.9315, 0.96", "-11.8231, -248.103, -39.7674, 0.48", "-11.7874, -248.349, -40.2272, 0.48", "-11.7677, -248.61, -40.7601, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "9.77113, 50.4007, 9.26444, 1.2", "9.91167, 51.8049, 8.9728, 1.2", "10.0257, 53.124, 8.83484, 1.32", "10.0911, 53.9088, 8.78786, 1.44", "10.1814, 54.9161, 8.76699, 0.96", "10.3372, 56.2714, 8.76494, 1.08", "10.6055, 58.0922, 8.78313, 1.56", "10.9544, 59.6589, 8.88408, 0.96", "11.2155, 60.5299, 8.97492, 0.6", "11.5284, 61.3579, 9.08154, 1.2", "11.8769, 62.133, 9.19754, 2.04", "12.1798, 62.7343, 9.29355, 2.16", "12.8063, 63.947, 9.50478, 1.2", "13.2266, 64.8238, 9.6474, 0.84", "13.5949, 65.7548, 9.74199, 0.48", "13.7945, 66.4114, 9.77219, 0.48", "14.09, 67.8967, 9.75443, 0.48", "14.221, 68.993, 9.68918, 0.84", "14.3016, 70.2319, 9.55966, 1.92", "14.39, 71.7875, 9.33577, 2.52", "14.447, 72.5811, 9.19834, 2.28", "14.5885, 73.8869, 8.98595, 0.6", "14.6596, 74.3345, 8.92803, 0.6", "14.7768, 74.9798, 8.87665, 0.48", "14.9837, 76.0763, 8.86146, 0.48", "15.1475, 76.905, 8.91545, 0.96", "15.3012, 77.6441, 8.98446, 1.8", "15.5338, 78.691, 9.12694, 2.04", "15.7635, 79.7962, 9.28294, 2.04", "16.0312, 81.3913, 9.51098, 2.28" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "9.77113, 50.4007, 9.26444, 1.32", "10.9576, 51.9226, 9.62662, 1.32", "11.4835, 52.5766, 9.68431, 0.96", "12.4216, 53.6379, 9.68031, 1.32", "13.0184, 54.2075, 9.61446, 1.68", "13.801, 54.8441, 9.49529, 1.2", "14.7688, 55.548, 9.32495, 0.84", "15.8306, 56.2168, 9.05768, 0.72", "16.4402, 56.573, 8.9141, 0.84", "17.5051, 57.0624, 8.64094, 0.6", "18.197, 57.31, 8.46714, 0.6", "18.7697, 57.4476, 8.34101, 1.32", "20.2184, 57.7198, 8.25928, 1.8", "21.0821, 58.0318, 8.44485, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "4.27863, 56.8318, -22.6928, 0.48", "4.28081, 58.5994, -22.5361, 0.48", "4.23365, 59.6446, -22.4299, 0.48", "4.17797, 60.35, -22.3446, 0.48", "4.06398, 61.6041, -22.2025, 0.72", "3.98865, 62.3564, -22.1258, 0.48", "3.89149, 63.258, -22.0432, 0.48", "3.66309, 64.5447, -21.9676, 0.48", "3.43845, 65.7003, -21.9042, 1.8", "3.3355, 66.2956, -21.8743, 2.64", "3.2443, 66.9779, -21.847, 2.88", "3.16016, 67.7708, -21.8023, 2.88", "3.07975, 68.6758, -21.7471, 2.04", "2.9975, 69.8247, -21.6814, 0.48", "2.9698, 70.2839, -21.6514, 0.36", "2.88184, 71.9828, -21.5388, 0.36", "2.83765, 73.0743, -21.472, 1.44", "2.84731, 74.0895, -21.4184, 2.52", "2.90742, 75.094, -21.375, 2.64", "2.98155, 75.8113, -21.3534, 2.52", "3.19357, 77.3961, -21.3329, 0.48", "3.29487, 78.0637, -21.3393, 0.36", "3.48327, 79.3525, -21.3729, 0.36", "3.56464, 79.9614, -21.3813, 0.36", "3.68134, 80.9717, -21.4, 0.36", "3.78773, 82.1033, -21.4219, 1.44", "3.81922, 82.7865, -21.4395, 1.56", "3.80917, 83.668, -21.4769, 0.24", "3.7227, 84.686, -21.5361, 0.24", "3.62067, 85.5635, -21.5777, 0.72", "3.56672, 86.0069, -21.5919, 0.72", "3.50599, 86.5219, -21.5996, 0.48", "3.47632, 86.8628, -21.5978, 0.36", "3.45188, 87.4219, -21.5638, 0.36", "3.45394, 88.0988, -21.4675, 0.84", "3.52231, 89.2073, -21.2599, 2.4", "3.56022, 89.6556, -21.181, 3.0", "3.6477, 90.543, -21.0315, 3.0", "3.75194, 91.6558, -20.8688, 1.68", "3.8479, 92.7671, -20.7296, 0.36", "3.91177, 93.6748, -20.6449, 0.36", "3.94048, 94.8429, -20.5748, 0.36", "3.91678, 95.7562, -20.5586, 1.68", "3.87443, 96.3645, -20.5752, 2.52", "3.82386, 96.8371, -20.6105, 2.64", "3.74583, 97.44, -20.667, 2.28", "3.6244, 98.4151, -20.7543, 0.48", "3.53512, 99.7693, -20.8929, 0.48", "3.52001, 100.785, -21.0124, 0.48", "3.53713, 101.243, -21.0647, 0.96", "3.59249, 102.036, -21.1485, 1.56", "3.65264, 102.612, -21.1996, 1.56", "3.79934, 103.745, -21.2767, 0.48", "3.84863, 104.093, -21.3035, 0.12", "3.98346, 105.098, -21.3865, 0.12", "4.1184, 106.224, -21.48, 2.16", "4.1754, 106.791, -21.5247, 2.88", "4.20705, 107.246, -21.5516, 3.0" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "4.27863, 56.8318, -22.6928, 0.48", "3.98897, 59.2752, -24.7812, 0.48", "3.93178, 59.629, -25.0785, 0.48", "3.79508, 60.3822, -25.7633, 0.72", "3.71028, 60.8979, -26.273, 0.72", "3.57363, 61.8703, -27.2333, 0.24", "3.51741, 62.3067, -27.6691, 0.12", "3.4407, 62.9253, -28.2576, 0.84", "3.3761, 63.7311, -29.084, 0.12", "3.34038, 64.6055, -29.9988, 0.12", "3.33521, 65.1086, -30.4867, 1.68", "3.33938, 65.7238, -30.9975, 2.4", "3.34805, 66.7938, -31.858, 1.8", "3.35538, 67.8206, -32.6694, 0.12", "3.33483, 68.2863, -33.0184, 0.12", "3.22907, 69.2043, -33.7152, 1.92", "3.13584, 69.8167, -34.2297, 2.4", "2.86968, 71.4139, -35.6659, 0.6", "2.72133, 72.1474, -36.3537, 0.48", "2.59262, 72.7361, -36.9082, 0.48", "2.41584, 73.5962, -37.7308, 1.2", "2.23005, 74.5683, -38.718, 0.48", "2.17425, 74.9389, -39.0807, 0.12", "2.10848, 75.711, -39.6868, 0.12", "2.097, 76.2001, -40.0173, 0.72", "2.11882, 76.692, -40.3875, 0.72", "2.14339, 77.8469, -41.2801, 0.12", "2.14127, 78.1078, -41.4971, 0.12", "2.14757, 78.8887, -42.1925, 2.28", "2.16706, 79.3015, -42.6229, 2.52", "2.29972, 81.1059, -44.705, 0.12", "2.39332, 81.8469, -45.5683, 0.12", "2.52355, 82.6056, -46.4417, 1.44", "2.60458, 83.0294, -46.9375, 1.8", "2.79106, 83.9393, -48.0365, 1.32", "2.87489, 84.4656, -48.6559, 0.12", "2.98701, 85.2902, -49.5155, 0.12", "3.11692, 86.4299, -50.6534, 1.56", "3.13911, 86.8103, -51.01, 1.92", "3.13201, 88.0451, -52.1315, 0.12", "3.10008, 88.8003, -52.7869, 0.12", "3.07167, 89.2646, -53.1943, 0.96", "3.05986, 89.4365, -53.3516, 0.96", "3.04022, 90.1689, -54.0885, 0.12", "3.03532, 90.7373, -54.7083, 0.12", "3.014, 91.5638, -55.6564, 1.32", "3.00125, 91.9478, -56.1025, 1.8", "2.96928, 92.4475, -56.6685, 1.32", "2.87095, 93.8669, -58.1966, 0.12", "2.86137, 94.0312, -58.4015, 0.12", "2.84255, 94.6187, -59.1754, 0.36", "2.80252, 95.1133, -59.8206, 0.36", "2.77356, 95.7881, -60.7298, 1.92", "2.7896, 96.3588, -61.4828, 2.76", "2.99479, 98.9541, -64.6965, 0.36", "3.01848, 99.1721, -64.9728, 0.36", "3.13078, 99.9922, -66.0266, 0.36", "3.24812, 100.807, -67.0749, 0.36", "3.32602, 101.268, -67.6577, 0.36", "3.50009, 102.066, -68.6314, 0.72", "3.79747, 103.027, -69.7401, 0.12", "3.87541, 103.257, -70.0222, 0.12", "4.03482, 103.674, -70.574, 1.92", "4.26953, 104.51, -71.7011, 2.52", "4.53635, 105.39, -73.036, 1.44", "4.79638, 105.912, -73.961, 0.12" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-8.69288, 37.3222, -32.0451, 0.12", "-9.15419, 39.5267, -32.8531, 0.12", "-9.3656, 40.4851, -33.2274, 0.6", "-9.5088, 41.2199, -33.518, 0.12", "-9.56975, 41.5551, -33.6439, 0.12", "-9.65151, 42.0092, -33.7987, 0.12", "-9.74578, 42.5552, -33.9667, 0.24", "-9.82588, 43.0641, -34.1358, 0.12", "-9.88048, 43.5005, -34.3485, 0.12", "-9.95471, 44.2224, -34.753, 0.12", "-10.0108, 44.93, -35.1872, 1.32", "-10.0188, 45.4119, -35.4883, 1.8", "-9.97298, 46.7798, -36.3207, 0.84", "-9.90001, 47.6179, -36.9618, 0.12", "-9.85413, 47.8821, -37.1857, 0.12", "-9.64874, 48.7181, -37.8933, 1.8", "-9.50558, 49.2224, -38.2994, 2.16", "-9.35199, 49.6924, -38.67, 1.8", "-8.51041, 51.8802, -40.5376, 0.24", "-8.12902, 52.7618, -41.348, 0.24", "-7.7344, 53.6475, -42.1795, 0.24", "-7.55778, 54.0396, -42.5622, 0.24", "-6.99229, 55.3232, -43.8814, 2.28", "-6.21947, 57.0947, -45.7515, 0.24", "-6.09741, 57.3802, -46.0378, 0.24", "-5.74408, 58.2249, -46.9406, 0.24", "-5.35014, 59.1333, -47.9288, 1.44", "-5.04316, 59.8894, -48.6924, 1.8", "-4.70941, 60.8671, -49.5014, 0.12", "-4.49007, 61.6371, -50.0111, 0.12", "-4.37954, 62.0421, -50.2805, 0.96", "-4.28128, 62.3841, -50.4995, 1.2", "-4.04085, 63.2647, -50.9894, 0.12", "-3.84958, 63.9584, -51.3547, 0.12", "-3.7305, 64.3633, -51.5841, 0.36", "-3.48485, 65.2125, -52.1782, 0.12", "-3.38592, 65.6261, -52.476, 0.12", "-3.24136, 66.345, -52.9984, 0.48", "-3.07279, 67.2896, -53.7145, 0.48", "-2.91989, 68.2816, -54.4698, 2.28", "-2.69788, 69.9114, -55.6646, 0.12", "-2.61118, 70.7544, -56.2459, 0.12", "-2.57732, 71.2195, -56.5733, 0.12", "-2.54848, 72.0991, -57.1756, 1.08", "-2.56475, 72.5619, -57.5081, 1.2", "-2.67352, 73.3344, -58.2409, 0.12", "-2.82077, 73.9098, -58.896, 0.12", "-3.06056, 74.7717, -59.9927, 1.44", "-3.14931, 75.0698, -60.3837, 2.04", "-3.3357, 75.611, -61.0958, 1.68", "-3.96305, 77.2432, -63.313, 0.24", "-4.19276, 77.7735, -64.0579, 0.24", "-4.44638, 78.3342, -64.8556, 0.12", "-4.70458, 78.8686, -65.5603, 0.72", "-4.82188, 79.1291, -65.8737, 0.72", "-4.94039, 79.373, -66.1285, 0.12", "-5.3614, 80.1979, -66.8452, 0.12", "-5.58837, 80.5525, -67.2141, 0.12", "-6.11288, 81.1723, -67.9275, 1.68", "-6.23034, 81.3039, -68.0844, 1.68", "-7.15286, 82.4614, -69.4708, 0.12", "-7.45156, 82.8899, -69.9459, 0.12", "-7.67953, 83.312, -70.3988, 0.24", "-7.88805, 83.788, -70.8896, 0.24", "-8.17672, 84.5962, -71.6776, 0.24", "-8.44555, 85.4485, -72.3892, 1.56", "-8.57713, 85.9987, -72.7783, 2.04", "-8.90791, 87.5618, -73.7708, 0.36", "-8.98964, 88.0461, -74.0485, 0.48", "-9.09069, 88.7913, -74.4877, 0.48", "-9.22924, 89.6042, -74.9447, 0.48", "-9.3189, 90.0174, -75.1789, 0.24", "-9.43861, 90.4768, -75.4949, 0.24", "-9.63107, 91.1206, -76.0023, 0.24", "-9.92663, 91.9911, -76.8513, 1.08", "-10.0865, 92.3589, -77.2883, 1.08", "-10.3909, 92.8032, -78.0448, 0.36", "-10.8319, 93.2365, -78.9708, 0.36", "-10.9961, 93.3477, -79.269, 0.36", "-11.1934, 93.4461, -79.5762, 0.36", "-11.4675, 93.5633, -79.9692, 0.36", "-12.6647, 94.0626, -81.6362, 1.68", "-12.8917, 94.1544, -81.9246, 2.4", "-13.0583, 94.2244, -82.1216, 2.64", "-14.8347, 94.974, -84.1264, 0.6", "-15.0614, 95.0596, -84.3624, 0.12", "-15.3706, 95.1653, -84.6354, 0.12", "-15.7566, 95.273, -84.9151, 0.6", "-16.1566, 95.3754, -85.2032, 0.12", "-16.6077, 95.4763, -85.4739, 0.12", "-17.3522, 95.5784, -85.7605, 1.44", "-17.9706, 95.6631, -85.9924, 1.08", "-19.5343, 95.9302, -86.5353, 0.12", "-20.1811, 96.0835, -86.7177, 0.12", "-20.9633, 96.3173, -86.8764, 0.84", "-21.2749, 96.4296, -86.9406, 0.84", "-21.4938, 96.5155, -86.9799, 0.12", "-21.9944, 96.69, -87.0405, 0.12", "-22.7135, 96.9191, -87.066, 1.44", "-22.9659, 96.9905, -87.0844, 1.56", "-23.985, 97.284, -87.2062, 0.12", "-24.7561, 97.5157, -87.2984, 0.12", "-25.2285, 97.6535, -87.354, 1.08", "-25.7996, 97.8023, -87.4505, 1.92", "-26.267, 97.9147, -87.5616, 1.56", "-27.1367, 98.1271, -87.8181, 0.12", "-27.4862, 98.2109, -87.9366, 0.12", "-27.7016, 98.2647, -88.026, 0.48", "-28.6111, 98.508, -88.4715, 0.48", "-29.0074, 98.6245, -88.6754, 0.12", "-29.6184, 98.8473, -88.8689, 0.12", "-29.88, 99.0125, -89.0582, 0.84", "-30.1239, 99.1833, -89.2866, 1.2", "-30.5313, 99.4665, -89.5999, 0.12", "-31.1478, 99.7782, -89.6818, 0.12", "-32.7405, 100.053, -88.6393, 2.88", "-35.9161, 100.068, -85.2281, 0.96", "-36.4489, 99.9796, -84.411, 0.96", "-39.0591, 99.1057, -79.2673, 0.12", "-39.3499, 98.9657, -78.5854, 0.12", "-39.553, 98.8314, -78.0258, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.69288, 37.3222, -32.0451, 0.48", "-10.4681, 37.4308, -32.8193, 0.48", "-11.2363, 37.5559, -33.4674, 0.48", "-12.1993, 37.8775, -34.7065, 0.48", "-12.6799, 38.0868, -35.3741, 2.16", "-12.9139, 38.2063, -35.7156, 2.52", "-13.2352, 38.3891, -36.1994, 2.52", "-14.4902, 39.2778, -38.5734, 1.44", "-15.2812, 39.835, -40.1491, 0.36", "-15.573, 40.0166, -40.7275, 0.48", "-16.1268, 40.3035, -41.8104, 0.6", "-16.7061, 40.5188, -43.1442, 0.6", "-17.4148, 40.7212, -44.9837, 0.6", "-17.7215, 40.786, -45.7842, 1.92", "-17.9863, 40.8214, -46.4716, 2.64", "-18.2487, 40.8464, -47.1541, 2.64", "-20.6467, 40.9955, -53.2803, 1.68", "-21.7224, 41.0585, -55.9364, 0.72", "-21.9341, 41.078, -56.4291, 1.56", "-22.3855, 41.134, -57.4375, 1.92", "-22.5956, 41.1646, -57.8679, 2.28", "-22.7809, 41.1952, -58.1975, 2.28", "-24.8005, 41.5232, -60.4273, 0.24", "-25.1414, 41.569, -60.7827, 0.12", "-25.3781, 41.5928, -61.0783, 0.12", "-25.7918, 41.6239, -61.646, 0.12", "-26.5447, 41.6527, -62.7075, 1.32", "-26.8954, 41.6496, -63.2169, 2.16", "-27.4633, 41.61, -64.0284, 2.4", "-29.0888, 41.4053, -66.3624, 0.72", "-29.5383, 41.3221, -67.0064, 0.84", "-29.8183, 41.2495, -67.4131, 1.08", "-30.6739, 40.972, -68.5877, 0.48", "-30.8886, 40.8952, -68.8651, 0.12", "-31.3153, 40.7258, -69.362, 0.48", "-31.4751, 40.654, -69.5092, 0.48", "-32.1802, 40.3023, -70.1556, 0.12", "-32.44, 40.1616, -70.3892, 0.12", "-32.7752, 39.9652, -70.7118, 0.12", "-32.9715, 39.8549, -70.9904, 0.12", "-33.1802, 39.7456, -71.3515, 0.12", "-33.3776, 39.6479, -71.6706, 0.48", "-33.4649, 39.5993, -71.8069, 0.48", "-34.1114, 39.1559, -72.8213, 0.48", "-34.5004, 38.828, -73.4149, 0.12", "-34.6445, 38.7145, -73.6072, 0.12", "-35.0069, 38.4103, -74.0358, 0.12", "-35.6358, 37.8571, -74.7862, 1.8", "-36.0728, 37.5036, -75.2382, 2.76", "-36.348, 37.2771, -75.4821, 2.76", "-36.8507, 36.84, -75.9107, 1.92", "-37.3688, 36.3513, -76.3727, 1.92", "-38.5252, 35.1213, -77.569, 0.12", "-38.9751, 34.5918, -78.0645, 0.12", "-39.1982, 34.2986, -78.365, 0.12", "-39.4141, 33.9892, -78.6684, 0.48", "-39.6046, 33.687, -78.9572, 0.6", "-40.0081, 33.0783, -79.5447, 0.12", "-40.1496, 32.8201, -79.7519, 0.12", "-40.7648, 31.5627, -80.8071, 2.4", "-41.1176, 30.9489, -81.3871, 3.25" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "3.40761, -151.704, -20.5807, 0.12", "3.23634, -152.758, -20.8159, 0.12", "3.1247, -153.098, -20.8538, 0.12", "2.95303, -153.481, -20.8365, 0.36", "2.65735, -154.073, -20.761, 0.48", "2.50917, -154.36, -20.7148, 0.12", "2.30213, -154.796, -20.6423, 0.12", "1.96657, -155.462, -20.4581, 0.36", "1.73332, -155.886, -20.2013, 0.12", "1.50627, -156.208, -19.9211, 0.12", "1.29798, -156.421, -19.6974, 0.12", "0.972369, -156.747, -19.3248, 0.12", "0.470242, -157.226, -18.7231, 0.36", "-0.33226, -157.92, -17.7717, 0.12", "-0.899781, -158.347, -17.1302, 0.12", "-1.79722, -158.873, -16.1359, 0.12" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "3.40761, -151.704, -20.5807, 0.12", "4.13132, -152.056, -21.0526, 0.12", "4.70345, -152.32, -21.4721, 0.12", "5.3285, -152.613, -21.9345, 0.48", "5.79865, -152.834, -22.2829, 0.12", "6.7236, -153.271, -22.9684, 0.12", "7.68652, -153.725, -23.6821, 0.12", "8.75696, -154.198, -24.5712, 2.52", "8.99773, -154.302, -24.784, 2.28", "9.0279, -154.316, -24.8101, 2.28" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "30.7665, -24.6229, -28.4019, 0.48", "30.4829, -27.1035, -30.0878, 0.48", "30.4585, -27.4908, -30.308, 0.36", "30.4469, -27.902, -30.5151, 0.36", "30.4432, -28.3671, -30.725, 0.84", "30.452, -29.1004, -31.03, 1.32", "30.5194, -30.0681, -31.3998, 0.48", "30.6755, -30.8145, -31.5518, 0.36", "30.7649, -31.1502, -31.6159, 0.36", "30.9035, -31.5782, -31.7065, 0.48", "31.0684, -32.0222, -31.8025, 0.36", "31.411, -32.8616, -31.9971, 0.36", "31.6059, -33.3317, -32.1126, 0.36", "31.734, -33.759, -32.2207, 0.48", "31.8587, -34.2928, -32.3595, 0.36", "31.9514, -34.8399, -32.4999, 0.36", "31.9774, -35.0606, -32.5543, 0.36", "32.1226, -37.0095, -33.0153, 3.49", "32.2273, -38.8664, -33.4129, 0.12", "32.2428, -39.1929, -33.4771, 0.12", "32.2638, -39.696, -33.5613, 0.36", "32.2693, -39.8685, -33.5879, 0.12", "32.2733, -40.4732, -33.6612, 0.12", "32.2332, -41.0566, -33.6864, 0.6", "32.2058, -41.4071, -33.6814, 0.6", "32.1308, -41.984, -33.6746, 0.36", "32.0924, -42.2094, -33.6787, 0.24", "32.0138, -42.568, -33.6928, 0.24", "31.9011, -42.9644, -33.7127, 1.08", "31.6378, -43.8595, -33.7675, 1.8", "31.4403, -44.5462, -33.7823, 1.56", "31.2817, -45.1622, -33.7499, 0.96", "31.1998, -45.6244, -33.7132, 0.24", "31.0884, -46.5259, -33.6328, 0.24", "31.0513, -46.9833, -33.5875, 0.24", "31.009, -47.8503, -33.4943, 0.24", "30.9651, -49.5998, -33.2955, 3.25", "30.9706, -51.2168, -33.1162, 0.24", "30.9813, -51.5635, -33.0823, 0.24", "31.0453, -52.6972, -32.9978, 0.24", "31.0857, -53.256, -32.9739, 0.48", "31.1094, -53.4828, -32.9774, 0.12", "31.3515, -55.0576, -33.0587, 0.12", "31.3804, -55.2163, -33.067, 0.84", "31.4947, -55.7812, -33.0989, 1.08", "31.6313, -56.432, -33.1397, 0.12", "31.8674, -57.5711, -33.2105, 0.12", "32.1208, -58.837, -33.2876, 2.4", "32.376, -60.1925, -33.3674, 0.24", "32.4677, -60.7448, -33.4079, 0.24", "32.5577, -61.4214, -33.4643, 0.36", "32.59, -61.779, -33.5001, 0.24", "32.6022, -62.0053, -33.5265, 0.24", "32.6049, -62.3329, -33.5863, 0.24", "32.5902, -62.9649, -33.7477, 0.24", "32.5991, -63.3626, -33.8567, 0.84", "32.6289, -63.7516, -33.9644, 0.84", "32.6686, -64.1019, -34.0443, 0.84", "32.7441, -64.6108, -34.1262, 0.12", "32.7811, -64.8704, -34.1551, 0.12", "32.9027, -65.6192, -34.2054, 0.12", "32.9646, -65.9805, -34.2261, 1.32", "33.0829, -66.7692, -34.2971, 1.68", "33.2197, -67.7785, -34.4054, 1.2", "33.2945, -68.379, -34.5374, 0.12", "33.3165, -68.6069, -34.6049, 0.12", "33.3567, -69.2561, -34.8283, 0.12", "33.3882, -70.1953, -35.1748, 1.32", "33.3958, -70.8274, -35.4224, 2.04", "33.431, -72.5296, -36.085, 0.36", "33.4667, -73.4971, -36.4327, 0.36", "33.4889, -74.257, -36.653, 0.36", "33.5061, -74.6591, -36.7411, 0.36", "33.5274, -75.102, -36.7962, 0.36", "33.5746, -76.0222, -36.8408, 1.92", "33.6193, -76.7043, -36.8083, 2.52", "33.7298, -77.9689, -36.7426, 0.24", "33.7952, -78.5746, -36.6607, 0.24", "33.8657, -79.1707, -36.5515, 0.84", "33.9472, -79.8358, -36.4043, 1.08", "34.0302, -80.516, -36.1991, 0.36", "34.1663, -81.3687, -35.8946, 0.36", "34.4641, -82.8299, -35.318, 1.44", "34.6117, -83.4695, -35.0476, 1.92", "34.7338, -83.9302, -34.8529, 1.56", "35.03, -84.977, -34.3551, 0.12", "35.1765, -85.4792, -34.1121, 0.12", "35.3279, -85.9863, -33.8782, 0.12", "35.3711, -86.1324, -33.8211, 0.48", "35.6168, -86.9545, -33.4929, 0.84", "36.0645, -88.5498, -32.9032, 0.12", "36.2445, -89.2112, -32.6918, 0.12", "36.324, -89.5196, -32.588, 0.24", "36.4376, -89.955, -32.4403, 0.24", "36.5236, -90.2911, -32.3335, 0.24", "36.6259, -90.7119, -32.214, 0.48", "36.6778, -90.9584, -32.1697, 0.6", "36.7576, -91.3713, -32.0899, 0.12", "36.823, -91.7108, -32.0197, 0.12", "36.8838, -92.0407, -31.947, 0.12", "37.0883, -93.2024, -31.683, 2.4", "37.2019, -93.8627, -31.533, 2.88", "37.3038, -94.5268, -31.3935, 2.4" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "30.7665, -24.6229, -28.4019, 0.12", "31.6736, -25.0809, -26.9979, 0.12", "32.0527, -25.2137, -26.4525, 0.12", "32.6458, -25.3519, -25.6893, 0.72", "33.9163, -25.5225, -24.2213, 0.72", "34.4878, -25.5473, -23.6645, 0.12", "34.9531, -25.548, -23.2858, 0.12", "35.7331, -25.4642, -22.691, 1.68", "36.2713, -25.3828, -22.3505, 2.28", "37.2194, -25.2195, -21.9019, 1.92", "38.3511, -25.0761, -21.3633, 0.36", "39.3008, -25.0322, -20.8373, 0.36", "40.0287, -25.1034, -20.2736, 0.6", "40.3367, -25.1857, -19.8962, 0.36", "40.6047, -25.2891, -19.4947, 0.36", "41.9528, -25.9181, -17.2488, 0.36", "42.1876, -26.0425, -16.8334, 1.2", "42.943, -26.4787, -15.3861, 1.92", "44.0808, -27.1638, -13.1796, 0.24", "44.6597, -27.5061, -12.0471, 2.16", "44.8819, -27.6263, -11.6409, 3.0", "45.1994, -27.737, -11.2127, 3.0" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-11.7677, -248.61, -40.7601, 0.12", "-10.7934, -248.541, -41.2937, 0.12", "-10.3451, -248.538, -41.5029, 0.12", "-10.0982, -248.55, -41.6073, 0.12", "-9.3153, -248.596, -41.9137, 0.6", "-8.97601, -248.617, -42.0464, 0.6", "-8.35712, -248.654, -42.2886, 0.12", "-7.40809, -248.755, -42.5829, 0.12", "-7.09541, -248.8, -42.6849, 0.84", "-6.84368, -248.845, -42.7648, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-11.7677, -248.61, -40.7601, 1.56", "-11.6594, -249.175, -40.7438, 1.56", "-11.5092, -249.959, -40.7214, 2.28", "-11.4206, -250.421, -40.7081, 2.64" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "16.0312, 81.3913, 9.51098, 0.48", "16.779, 83.8179, 10.2276, 0.48", "17.0026, 84.6765, 10.4164, 0.36", "17.1888, 85.5592, 10.5626, 0.36", "17.329, 86.4741, 10.6762, 0.36", "17.4051, 87.2549, 10.7577, 0.36", "17.4251, 87.7032, 10.7953, 0.72", "17.3889, 88.1699, 10.7483, 0.72", "17.3212, 88.736, 10.6955, 0.36", "17.2135, 89.4386, 10.6391, 0.36", "17.1306, 90.0628, 10.6015, 1.2", "17.0602, 90.7743, 10.5749, 1.8", "16.9853, 91.7624, 10.5769, 1.8", "16.9121, 93.1296, 10.6278, 0.36", "16.901, 93.5759, 10.6224, 0.36", "16.9091, 94.5066, 10.6033, 0.72", "16.9288, 94.962, 10.5911, 0.84", "16.9873, 95.9577, 10.5746, 0.36", "17.0347, 96.7531, 10.5727, 1.08", "17.1254, 98.4325, 10.5124, 2.64", "17.1814, 99.5233, 10.4413, 3.61", "17.202, 100.029, 10.377, 3.61" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "16.0312, 81.3913, 9.51098, 0.6", "15.7867, 82.6906, 9.37306, 0.6", "15.7214, 83.5686, 9.22281, 0.6", "15.7164, 84.78, 8.8993, 0.6", "15.7311, 85.311, 8.66223, 0.6", "15.7374, 86.0814, 8.27928, 1.68", "15.7227, 86.8408, 7.88526, 2.04", "15.7431, 87.3253, 7.5698, 1.8", "15.723, 87.9145, 7.09248, 2.04", "15.4523, 88.8908, 6.15852, 0.48", "15.1917, 89.3458, 5.73629, 0.48", "15.0467, 89.5102, 5.60243, 0.72", "14.6788, 89.8794, 5.34451, 0.96", "14.1801, 90.3746, 5.02217, 0.72", "13.7747, 90.8059, 4.78025, 1.32", "13.4374, 91.2335, 4.57131, 1.8", "12.9972, 91.9226, 4.2438, 1.8", "12.6879, 92.5095, 3.99574, 0.96", "12.3951, 93.17, 3.71488, 0.72", "12.1933, 93.6641, 3.49376, 0.84", "11.8171, 94.5724, 3.01828, 1.56", "11.6178, 95.0435, 2.73471, 2.52", "11.4397, 95.4452, 2.47392, 2.52", "10.9095, 96.5119, 1.75442, 2.4", "10.4338, 97.392, 1.13161, 1.56", "10.0628, 98.0477, 0.631488, 0.84", "9.78535, 98.5195, 0.257652, 0.48", "9.67837, 98.7087, 0.101099, 0.24", "9.38481, 99.2282, -0.318983, 0.24", "9.17236, 99.6459, -0.762725, 0.48", "9.06602, 99.9033, -1.10463, 0.12", "8.99173, 100.146, -1.44613, 0.12", "8.82061, 100.766, -2.34817, 1.2", "8.73236, 101.112, -2.84464, 1.56", "8.31671, 102.801, -5.22683, 0.36", "8.18479, 103.349, -5.9272, 0.12", "7.94266, 104.318, -6.98607, 2.64", "7.86598, 104.623, -7.25262, 3.0", "7.71004, 105.145, -7.47221, 2.76", "7.08074, 106.82, -7.5384, 0.48", "5.70818, 110.022, -6.92722, 0.48", "5.44349, 110.706, -6.89673, 0.48", "5.36126, 111.149, -7.09848, 0.48", "5.38563, 111.635, -7.53271, 0.36", "5.57469, 112.493, -8.54744, 0.36", "5.89496, 113.33, -9.68616, 0.36", "6.42191, 114.479, -11.222, 2.16", "6.66682, 114.903, -11.7849, 3.0", "6.79053, 115.093, -12.0202, 3.12", "7.40022, 115.921, -12.9732, 3.0", "8.35436, 117.158, -14.2667, 0.12", "8.79404, 117.747, -14.8159, 0.12", "8.91883, 117.925, -14.962, 0.12", "9.48419, 118.699, -15.6271, 2.52", "9.71669, 119.016, -15.883, 2.52" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "21.0821, 58.0318, 8.44485, 0.6", "20.0555, 58.5401, 9.60581, 0.6", "19.6566, 58.7376, 10.0569, 0.6", "19.0926, 59.0168, 10.6947, 0.24", "18.7076, 59.2074, 11.13, 0.24", "18.3013, 59.4086, 11.5896, 0.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "21.0821, 58.0318, 8.44485, 0.6", "21.5654, 58.8155, 8.82587, 0.6", "22.1169, 59.7876, 9.28968, 0.72", "22.487, 60.4912, 9.59475, 1.08", "22.6896, 60.8975, 9.73912, 1.44", "22.9285, 61.3943, 9.91808, 1.56", "23.3064, 62.1905, 10.1902, 1.44", "23.8056, 63.3125, 10.5475, 1.56", "24.1056, 64.0534, 10.7671, 1.68", "24.3439, 64.6968, 11.0, 1.68", "24.5802, 65.3716, 11.2794, 1.68", "24.9177, 66.4029, 11.7405, 0.6", "25.1506, 67.1892, 12.1039, 0.36", "25.342, 67.8005, 12.3351, 0.36", "25.61, 68.6093, 12.6038, 1.44", "25.7649, 69.0313, 12.7221, 1.56", "26.0295, 69.7011, 12.8339, 1.56", "26.1685, 70.0262, 12.8543, 1.44", "26.69, 71.1599, 12.89, 0.72", "26.9082, 71.5815, 12.9071, 0.6", "27.2923, 72.2583, 12.9485, 1.2", "27.4819, 72.5685, 12.987, 1.32", "27.9467, 73.2574, 13.1065, 0.84", "28.7442, 74.3162, 13.4014, 1.08", "29.3032, 74.9886, 13.6559, 0.96", "29.7894, 75.5093, 13.8482, 0.48", "30.1918, 75.9164, 13.9875, 0.48", "30.6665, 76.3666, 14.1268, 0.6", "31.399, 77.0311, 14.2942, 0.96", "31.642, 77.2541, 14.3387, 0.96", "32.5219, 78.1297, 14.5073, 1.68", "33.3434, 79.021, 14.6582, 2.28", "34.018, 79.8372, 14.7862, 2.16", "34.4399, 80.4478, 14.8698, 1.92", "34.9236, 81.3269, 14.9345, 0.6", "35.3349, 82.3199, 14.962, 0.6", "35.5454, 82.9452, 14.9735, 0.6", "35.7131, 83.6103, 14.9597, 0.48", "35.8839, 84.7505, 14.8969, 0.48", "35.9551, 85.8377, 14.7781, 0.48", "35.9271, 86.8037, 14.5584, 1.2" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "4.20705, 107.246, -21.5516, 0.48", "4.21732, 108.809, -21.2073, 0.48", "4.24769, 109.315, -21.0662, 0.12", "4.31864, 110.325, -20.7679, 0.36", "4.38077, 111.082, -20.545, 0.48", "4.44064, 111.632, -20.3882, 0.48", "4.52922, 112.317, -20.204, 0.48", "4.75556, 113.473, -19.9367, 1.68", "4.84141, 113.811, -19.8836, 2.16", "4.97512, 114.263, -19.8566, 2.4", "5.14901, 114.8, -19.8499, 2.4", "5.37067, 115.451, -19.8328, 1.92", "5.70964, 116.427, -19.8094, 0.12", "5.853, 116.812, -19.8064, 0.24", "5.98343, 117.16, -19.7894, 0.24", "6.25893, 117.913, -19.7217, 0.48", "6.60299, 118.863, -19.5948, 0.48", "6.71527, 119.173, -19.5403, 1.32", "6.91431, 119.702, -19.4339, 1.68", "7.11691, 120.224, -19.3632, 1.8", "7.30555, 120.7, -19.3323, 1.92", "7.42336, 120.995, -19.3409, 1.92", "7.70841, 121.741, -19.4215, 0.48", "8.04744, 122.655, -19.5783, 0.48", "8.32558, 123.46, -19.7343, 0.72", "8.61384, 124.337, -19.8913, 0.72", "8.87965, 125.187, -20.1524, 0.36", "9.05843, 125.807, -20.4058, 0.36", "9.25191, 126.596, -20.7822, 0.72", "9.41143, 127.386, -21.124, 1.08", "9.55142, 128.156, -21.4081, 1.32", "9.92399, 130.625, -22.1262, 0.48", "10.0053, 131.296, -22.2535, 0.36", "10.1287, 132.525, -22.373, 0.36", "10.2649, 134.2, -22.4643, 0.36", "10.3131, 134.769, -22.4915, 1.92", "10.4144, 135.57, -22.5016, 3.0", "10.5151, 136.121, -22.4721, 3.25", "10.727, 137.008, -22.492, 3.25", "11.2047, 138.717, -22.6632, 0.36", "11.388, 139.35, -22.7707, 0.48", "11.7634, 140.662, -22.9943, 0.48", "12.0406, 141.684, -23.1629, 0.48", "12.256, 142.65, -23.3105, 0.48", "12.328, 143.097, -23.3681, 0.96", "12.3795, 143.554, -23.4077, 1.2", "12.44, 144.38, -23.4692, 0.84", "12.4937, 145.402, -23.5326, 0.48", "12.5713, 146.439, -23.5785, 0.36", "12.6824, 147.23, -23.5982, 0.36", "12.9223, 148.273, -23.6259, 0.36", "13.1223, 148.914, -23.6559, 1.32", "13.4586, 149.83, -23.7109, 2.28", "13.6846, 150.395, -23.7505, 2.76", "13.9935, 151.163, -23.81, 2.4", "14.5436, 152.688, -23.9409, 1.08", "14.875, 153.784, -24.0368, 0.36", "15.0857, 154.662, -24.1075, 0.36", "15.2607, 155.576, -24.1962, 1.68", "15.346, 156.139, -24.2565, 2.28", "15.4472, 157.041, -24.3273, 2.4", "15.5576, 158.437, -24.396, 1.68", "15.6717, 160.124, -24.4257, 1.08", "15.7221, 160.945, -24.4345, 0.6", "15.7519, 161.628, -24.4404, 0.6", "15.8056, 162.768, -24.4493, 1.44", "15.8349, 163.328, -24.4594, 1.8", "15.8731, 164.01, -24.4848, 1.8", "15.9504, 164.938, -24.5297, 0.48", "16.0976, 166.291, -24.5942, 0.48", "16.2445, 167.493, -24.7231, 1.2", "16.4421, 168.867, -24.9355, 1.68", "16.6078, 169.813, -25.0922, 2.28", "16.859, 171.169, -25.3065, 2.52", "17.1851, 172.97, -25.5358, 1.2", "17.3783, 174.17, -25.618, 0.6", "17.4636, 174.922, -25.6185, 0.48", "17.522, 176.031, -25.5215, 0.48", "17.5209, 176.926, -25.341, 0.48", "17.484, 177.823, -25.0559, 0.48", "17.4309, 178.868, -24.6156, 0.48", "17.4145, 179.493, -24.3231, 0.48", "17.4293, 180.144, -24.1053, 0.48", "17.5221, 181.063, -23.9701, 1.08", "17.6927, 181.913, -24.0113, 1.68", "17.8653, 182.594, -24.1436, 2.04", "18.0496, 183.233, -24.3226, 2.04", "18.5875, 185.007, -24.8719, 0.96", "18.7828, 185.668, -25.0911, 0.48", "18.9625, 186.297, -25.3095, 0.48", "19.2211, 187.251, -25.6067, 1.56", "19.3058, 187.617, -25.6971, 2.16", "19.4689, 188.369, -25.9233, 2.64", "19.5767, 188.899, -26.0819, 2.64", "19.7215, 189.578, -26.3224, 3.12", "19.8645, 190.193, -26.5768, 3.12", "20.1591, 191.351, -27.0848, 0.6", "20.7144, 193.342, -27.939, 0.48", "20.9449, 194.09, -28.2402, 0.36", "21.0939, 194.546, -28.4003, 0.36", "21.3475, 195.352, -28.5877, 0.96", "21.6707, 196.373, -28.7051, 0.96", "21.9619, 197.35, -28.6971, 0.72", "22.1469, 198.149, -28.6216, 0.48", "22.3313, 199.175, -28.5655, 0.48", "22.5431, 200.742, -28.5322, 1.2", "22.6223, 201.535, -28.5411, 1.68", "22.6961, 202.548, -28.5818, 2.04", "22.7681, 203.651, -28.6546, 1.8", "22.8682, 205.029, -28.7806, 0.6", "22.9483, 205.939, -28.8891, 0.48", "23.0727, 207.067, -29.0597, 0.48", "23.2294, 208.183, -29.2249, 0.48", "23.3488, 208.825, -29.3072, 0.48", "23.4838, 209.39, -29.3533, 1.08", "23.6865, 210.163, -29.3707, 1.32", "23.8129, 210.603, -29.3787, 1.32", "24.066, 211.393, -29.3735, 0.72", "24.2348, 211.884, -29.3748, 0.48", "24.4717, 212.583, -29.3812, 0.72", "24.7331, 213.352, -29.4093, 1.08", "25.0085, 214.179, -29.4731, 1.32", "25.3239, 215.174, -29.5901, 0.48", "25.5765, 216.044, -29.7606, 0.48", "25.8232, 216.898, -29.9811, 0.48", "26.0972, 217.841, -30.2567, 1.44", "26.3352, 218.671, -30.5012, 2.28", "26.6174, 219.679, -30.787, 1.92", "27.0162, 221.118, -31.1667, 0.48", "27.3255, 222.223, -31.3995, 0.48", "27.544, 223.02, -31.5101, 0.72", "27.6902, 223.615, -31.5374, 0.48", "27.8042, 224.219, -31.5029, 0.36", "27.8954, 225.145, -31.4826, 0.36", "27.8956, 226.054, -31.5345, 0.36", "27.8138, 227.053, -31.7054, 1.8", "27.6833, 228.041, -31.9619, 3.0", "27.5138, 229.01, -32.2785, 3.25", "26.9767, 231.379, -33.2527, 1.8", "26.7195, 232.366, -33.7261, 0.48", "26.5632, 232.954, -34.0376, 0.48", "26.4678, 233.363, -34.2606, 0.72", "26.3754, 233.909, -34.5203, 0.48", "26.3173, 234.985, -34.8694, 0.36", "26.3853, 235.882, -34.9525, 0.36", "26.4763, 236.456, -34.9641, 0.72", "26.6844, 237.481, -34.929, 1.08", "26.871, 238.316, -34.8656, 1.2", "27.1734, 239.601, -34.692, 0.72", "27.4617, 240.812, -34.4668, 0.36", "27.6438, 241.609, -34.3093, 0.36", "27.8598, 242.68, -34.0728, 0.36", "28.0315, 243.666, -33.8407, 0.36", "28.1891, 244.789, -33.6174, 1.92", "28.2557, 245.47, -33.4994, 2.76", "28.2699, 245.687, -33.4691, 3.12", "28.3347, 246.767, -33.3482, 2.76", "28.3577, 247.126, -33.3244, 2.76", "28.4527, 248.474, -33.2662, 0.48", "28.5203, 249.489, -33.256, 0.48", "28.5522, 250.052, -33.2522, 0.96", "28.5789, 250.58, -33.2516, 0.6", "28.6074, 251.253, -33.2574, 0.48", "28.6319, 251.829, -33.2463, 0.36", "28.7117, 253.185, -33.1282, 0.36", "28.7553, 253.753, -33.0714, 0.48", "28.8121, 254.319, -33.0218, 0.36", "28.8991, 254.985, -32.9581, 0.36", "28.9703, 255.479, -32.9022, 0.36", "29.1082, 256.364, -32.8418, 1.2", "29.1862, 256.919, -32.8341, 2.04", "29.263, 257.572, -32.8193, 2.16", "29.3334, 258.393, -32.7995, 1.68", "29.3823, 259.302, -32.7807, 0.48", "29.4263, 260.345, -32.7667, 0.36", "29.4962, 262.38, -32.7378, 0.36", "29.5305, 263.308, -32.7126, 1.2", "29.5538, 263.777, -32.7035, 0.84", "29.5997, 264.45, -32.7039, 0.48", "29.7279, 265.663, -32.741, 0.36", "29.8, 266.18, -32.7975, 0.36", "29.9104, 266.769, -32.9455, 1.44", "30.0733, 267.609, -33.22, 1.92", "30.177, 268.134, -33.3993, 2.04", "30.3528, 269.016, -33.6989, 2.04", "30.5894, 270.299, -34.0526, 0.48", "30.8247, 271.737, -34.3431, 0.48", "30.9084, 272.288, -34.4102, 0.6", "30.9566, 272.653, -34.4262, 0.48", "31.0848, 273.719, -34.4236, 0.48", "31.227, 275.202, -34.3209, 2.64", "31.2954, 276.123, -34.1975, 3.49", "31.3161, 276.522, -34.1383, 3.49", "31.3424, 277.097, -34.0537, 3.49", "31.4054, 278.7, -33.8354, 0.48", "31.4441, 279.751, -33.6973, 0.72", "31.4823, 280.5, -33.6137, 0.48", "31.5276, 281.069, -33.5477, 0.48", "31.6017, 281.807, -33.4636, 1.32", "31.674, 282.26, -33.4148, 1.56", "31.833, 282.924, -33.346, 1.56", "32.036, 283.579, -33.3075, 0.48", "32.3036, 284.359, -33.2883, 0.48", "32.501, 284.934, -33.2695, 0.6", "32.7798, 285.805, -33.2331, 0.6", "32.9922, 286.525, -33.1983, 0.36", "33.1487, 287.111, -33.1783, 0.36", "33.3101, 287.893, -33.1646, 0.36", "33.3875, 288.518, -33.1785, 1.32", "33.4158, 289.089, -33.197, 1.56", "33.4023, 289.545, -33.2097, 1.32", "33.3656, 290.106, -33.223, 0.36", "33.3358, 290.926, -33.2326, 0.36", "33.3484, 291.586, -33.2391, 1.2", "33.4106, 292.281, -33.257, 1.2", "33.5206, 293.095, -33.2882, 0.36", "33.6566, 293.88, -33.3228, 0.36", "33.8256, 294.686, -33.357, 0.48", "33.9694, 295.287, -33.406, 0.48", "34.1736, 296.125, -33.5033, 0.48", "34.2275, 296.346, -33.5414, 0.48", "34.365, 296.894, -33.6463, 0.72", "34.5578, 297.668, -33.7863, 0.72", "34.655, 298.083, -33.844, 0.48", "34.8162, 298.757, -33.9052, 0.48", "35.0114, 299.556, -33.9401, 1.08", "35.1916, 300.247, -33.937, 1.68", "35.3654, 300.883, -33.9197, 1.68", "35.5513, 301.582, -33.901, 0.84", "35.6721, 302.028, -33.9048, 0.72", "35.908, 302.904, -34.0098, 0.72", "36.1627, 303.86, -34.2079, 1.32", "36.3092, 304.419, -34.3592, 2.4", "36.5158, 305.231, -34.6189, 2.76", "36.7101, 306.041, -34.8957, 2.04", "37.0298, 307.453, -35.3776, 0.48", "37.1731, 308.12, -35.6001, 0.48", "37.2832, 308.668, -35.7702, 0.6", "37.3475, 308.987, -35.8473, 0.48", "37.6157, 310.307, -36.0525, 0.48", "37.7225, 310.868, -36.0894, 0.72", "37.8452, 311.438, -36.0763, 1.08", "37.9515, 311.887, -36.0584, 0.72", "38.1055, 312.482, -36.0119, 0.48", "38.2492, 313.036, -35.978, 0.24", "38.4056, 313.622, -35.9514, 0.24", "38.7749, 315.091, -35.9374, 3.12", "38.8832, 315.526, -35.9445, 3.37", "39.0761, 316.314, -35.9733, 3.0", "39.3803, 317.792, -36.0515, 0.48", "39.5502, 318.85, -36.1234, 0.48", "39.6741, 319.818, -36.1844, 0.84", "39.7471, 320.478, -36.2198, 0.48", "39.8807, 321.503, -36.213, 0.48", "40.0664, 322.706, -36.1294, 0.48", "40.1544, 323.184, -36.0516, 0.48", "40.3246, 324.053, -35.8667, 0.48", "40.4444, 324.578, -35.7327, 0.96", "40.7066, 325.583, -35.5063, 1.56", "40.8332, 325.967, -35.4191, 1.56", "41.1156, 326.679, -35.332, 0.48", "41.1964, 326.893, -35.3373, 0.36", "41.3843, 327.576, -35.4351, 0.36", "41.6153, 328.611, -35.6368, 1.8", "41.753, 329.322, -35.7957, 2.64", "41.9954, 330.66, -36.0749, 1.56", "42.1695, 331.628, -36.2478, 0.36", "42.369, 332.715, -36.4219, 0.48", "42.6082, 334.059, -36.5575, 0.48", "42.6852, 334.512, -36.6004, 0.48", "42.8181, 335.192, -36.6602, 1.32", "42.9094, 335.551, -36.669, 1.68", "43.0655, 336.029, -36.6411, 1.92", "43.4881, 337.25, -36.5426, 0.84", "43.8394, 338.471, -36.4251, 0.48", "44.0777, 339.485, -36.2994, 0.48", "44.177, 340.037, -36.2233, 0.48", "44.3289, 341.247, -36.055, 0.48", "44.412, 342.426, -35.8454, 0.72", "44.4348, 343.208, -35.6865, 1.32", "44.433, 343.98, -35.503, 0.84", "44.4151, 344.536, -35.3622, 0.36", "44.4048, 345.202, -35.1968, 0.36", "44.4397, 346.067, -34.9904, 0.84", "44.5028, 346.527, -34.8627, 0.36", "44.6999, 347.494, -34.5606, 0.36", "44.9888, 348.608, -34.2078, 0.84", "45.1308, 349.077, -34.0524, 0.84", "45.3086, 349.61, -33.8956, 0.36", "45.7021, 350.733, -33.6315, 0.36", "45.9229, 351.408, -33.5043, 1.2", "46.1509, 352.194, -33.4062, 2.16", "46.2095, 352.443, -33.3968, 2.28", "46.4848, 353.741, -33.3912, 0.6", "46.6015, 354.329, -33.3933, 0.36", "46.7476, 355.027, -33.3938, 0.36", "46.8505, 355.426, -33.394, 0.36", "46.9787, 355.856, -33.3782, 0.36", "47.371, 357.02, -33.2963, 0.36", "47.6639, 357.827, -33.2214, 1.08", "47.9902, 358.689, -33.1454, 1.56", "48.3821, 359.687, -33.0723, 0.72", "48.51, 360.039, -33.056, 0.48", "48.7546, 360.826, -33.0399, 0.48", "48.9702, 361.727, -33.048, 1.68", "49.115, 362.405, -33.0903, 2.52", "49.2794, 363.205, -33.1932, 1.92", "49.519, 364.305, -33.3872, 0.72", "49.6834, 364.947, -33.5323, 0.6", "49.9667, 365.9, -33.802, 0.6", "50.3916, 367.129, -34.1871, 0.6", "50.8127, 368.278, -34.5627, 1.44", "51.0064, 368.786, -34.7295, 1.92", "51.3871, 369.775, -35.0268, 0.96", "51.6499, 370.489, -35.2085, 0.36", "51.9147, 371.318, -35.3397, 0.36", "52.0988, 372.008, -35.3719, 0.36", "52.2645, 372.673, -35.3401, 0.72", "52.4701, 373.493, -35.3594, 0.36", "52.6579, 374.19, -35.4123, 0.24", "53.0007, 375.309, -35.5639, 2.04", "53.074, 375.522, -35.6109, 2.04", "53.4173, 376.417, -35.8546, 1.92", "54.2056, 378.313, -36.4525, 0.48", "54.5381, 379.073, -36.7119, 0.48", "54.8729, 379.831, -36.9761, 0.72", "55.3325, 380.906, -37.3394, 0.84", "55.8365, 382.199, -37.7439, 0.36", "56.0124, 382.704, -37.879, 0.24", "56.2369, 383.486, -38.0169, 1.2", "56.2919, 383.732, -38.0603, 1.68", "56.4319, 384.614, -38.209, 1.56", "56.5241, 385.522, -38.3443, 0.36", "56.5547, 386.191, -38.4288, 0.36", "56.5809, 387.451, -38.5486, 0.36", "56.5869, 388.014, -38.5917, 1.32", "56.5924, 388.587, -38.6235, 1.8", "56.6011, 389.047, -38.638, 1.68", "56.6274, 390.064, -38.6394, 0.48", "56.6844, 391.426, -38.6423, 0.48", "56.7295, 392.213, -38.6444, 1.8", "56.7547, 392.887, -38.6466, 2.4", "56.7575, 393.357, -38.627, 1.92", "56.7306, 394.472, -38.5067, 0.6", "56.7165, 394.779, -38.4461, 0.6", "56.6479, 395.764, -38.188, 0.6", "56.5834, 396.689, -37.9066, 0.6", "56.4903, 397.959, -37.5256, 0.6", "56.391, 399.289, -37.1627, 0.6", "56.3172, 400.394, -36.9067, 1.56", "56.2813, 401.071, -36.8037, 2.04", "56.2537, 401.794, -36.7648, 1.68", "56.2351, 402.795, -36.8076, 0.84", "56.2163, 403.645, -36.937, 0.48", "56.1385, 404.976, -37.214, 0.48", "56.0377, 406.271, -37.5079, 0.6", "55.9454, 407.242, -37.7104, 1.32", "55.8582, 408.017, -37.8523, 1.44", "55.739, 408.969, -37.992, 0.48", "55.5221, 410.729, -38.2083, 0.48", "55.462, 411.296, -38.2664, 1.32", "55.3877, 412.201, -38.3292, 2.04", "55.3534, 412.883, -38.3726, 1.68", "55.3353, 413.835, -38.4402, 0.6", "55.3498, 414.797, -38.5195, 0.48", "55.4029, 415.832, -38.6272, 0.48", "55.4375, 416.502, -38.7034, 0.48", "55.492, 417.456, -38.8169, 0.72", "55.5308, 418.126, -38.8934, 0.72", "55.5705, 418.667, -38.9451, 0.36", "55.6173, 419.46, -39.0132, 0.36", "55.6822, 420.13, -39.0595, 1.8", "55.8005, 420.795, -39.0892, 2.4", "56.0045, 421.683, -39.1014, 2.4", "56.2743, 422.727, -39.1256, 0.48", "56.3399, 422.974, -39.1321, 0.48", "56.5813, 423.904, -39.2122, 0.48", "56.7988, 424.762, -39.3382, 0.48", "56.9858, 425.655, -39.5436, 0.48", "57.0535, 426.169, -39.699, 1.08", "57.0538, 426.654, -39.8651, 1.92", "56.9706, 427.483, -40.1398, 2.16", "56.8929, 427.934, -40.271, 2.16", "56.6997, 428.988, -40.5312, 0.72", "56.6328, 429.479, -40.6154, 0.48", "56.5439, 430.444, -40.7068, 0.48", "56.5053, 431.352, -40.7508, 0.48", "56.5086, 432.729, -40.7217, 0.48", "56.5435, 433.3, -40.6909, 0.48", "56.6379, 434.116, -40.6153, 1.32", "56.7605, 434.9, -40.534, 1.92", "56.9299, 435.828, -40.389, 1.56", "57.0707, 436.619, -40.2319, 0.36", "57.2456, 437.65, -39.9719, 0.36", "57.378, 438.434, -39.7523, 0.6", "57.5098, 439.179, -39.515, 0.6", "57.709, 440.213, -39.1546, 0.24", "57.8536, 440.848, -38.929, 0.24", "58.098, 441.762, -38.6404, 1.92", "58.2401, 442.233, -38.4904, 2.4", "58.5815, 443.258, -38.1952, 1.92", "58.9035, 444.234, -37.9601, 0.48", "59.1877, 445.154, -37.7891, 0.48", "59.4909, 446.277, -37.6038, 0.48", "59.7168, 447.297, -37.4677, 1.44", "59.9272, 448.417, -37.3376, 2.04", "60.1075, 449.532, -37.2348, 1.08", "60.2327, 450.323, -37.1656, 0.6", "60.3814, 451.214, -37.1022, 0.48", "60.5925, 452.21, -37.0556, 0.48", "60.7456, 452.797, -37.0488, 0.48", "60.9149, 453.381, -37.0424, 0.96", "61.1712, 454.237, -37.0345, 1.44", "61.4504, 455.213, -37.0313, 0.84", "61.6381, 455.919, -37.0313, 0.48", "61.9193, 457.14, -37.0313, 0.48", "62.075, 458.037, -37.0164, 0.6", "62.1904, 459.054, -36.9853, 0.72", "62.2188, 459.625, -36.9607, 0.12", "62.2182, 459.851, -36.9283, 0.12", "62.1901, 460.63, -36.7578, 1.56", "62.1519, 461.463, -36.5354, 2.28", "62.1195, 462.112, -36.3477, 2.52", "62.0874, 462.66, -36.1844, 2.52", "61.9526, 464.58, -35.6439, 0.72", "61.8374, 466.249, -35.2989, 0.72", "61.7838, 467.143, -35.1286, 0.96", "61.7578, 467.705, -35.0206, 0.6", "61.7382, 468.268, -34.9005, 0.48", "61.7009, 469.495, -34.6528, 0.48", "61.6829, 471.237, -34.3729, 0.48", "61.7139, 472.51, -34.1535, 0.48", "61.7856, 473.583, -33.9745, 1.92", "61.9345, 474.956, -33.7995, 0.96", "62.1141, 476.109, -33.6926, 0.48", "62.5324, 478.22, -33.5979, 0.48", "62.8568, 479.623, -33.5873, 0.48", "63.192, 480.942, -33.6781, 0.48", "63.5406, 482.166, -33.8228, 1.2", "63.7854, 482.927, -33.9342, 1.92", "64.191, 484.072, -34.1121, 1.44", "64.4458, 484.816, -34.2298, 1.08", "64.6077, 485.362, -34.3049, 0.48", "64.7998, 486.144, -34.3848, 0.96", "64.9678, 486.948, -34.4275, 0.96", "65.0776, 487.545, -34.4534, 0.48", "65.4119, 489.336, -34.4755, 0.48", "65.5415, 490.019, -34.4788, 0.6", "65.6278, 490.458, -34.4723, 0.48", "65.8275, 491.481, -34.4203, 0.48", "66.0879, 492.936, -34.2975, 0.48", "66.216, 493.787, -34.2088, 0.96", "66.299, 494.461, -34.1208, 1.2", "66.369, 495.248, -34.01, 0.6", "66.3925, 495.866, -33.9367, 0.36", "66.3524, 497.323, -33.8, 0.36", "66.2582, 498.272, -33.7479, 0.72", "66.1433, 499.007, -33.7513, 1.44", "65.9981, 499.801, -33.7708, 2.4", "65.7659, 501.045, -33.8226, 1.56", "65.6364, 501.755, -33.8525, 0.48", "65.3288, 503.568, -33.9061, 0.48", "65.2188, 504.455, -33.8788, 0.6", "65.1839, 504.946, -33.8279, 0.48", "65.1833, 505.961, -33.6135, 0.48", "65.2532, 506.59, -33.4199, 0.48", "65.4108, 507.292, -33.1401, 0.84", "65.8605, 508.678, -32.4757, 0.96", "66.2124, 509.582, -32.0198, 0.48", "66.5148, 510.28, -31.6573, 0.36", "67.0529, 511.44, -31.0587, 0.36", "67.5305, 512.456, -30.5805, 0.96", "67.627, 512.664, -30.48, 1.08", "67.9379, 513.363, -30.1461, 0.48", "68.3076, 514.25, -29.6477, 0.48", "68.628, 515.085, -29.1271, 0.48", "68.888, 515.818, -28.6378, 0.48", "69.2476, 516.886, -27.9862, 0.48", "69.6453, 518.135, -27.2923, 0.48", "70.075, 519.669, -26.5422, 1.68", "70.218, 520.217, -26.3131, 2.4", "70.3359, 520.688, -26.1445, 2.64", "70.6695, 522.16, -25.8117, 0.24", "70.8283, 523.279, -25.7634, 0.24", "70.8642, 524.317, -25.8482, 0.24", "70.8625, 524.43, -25.8659, 0.72", "70.826, 525.216, -25.9959, 0.84", "70.7425, 526.244, -26.1738, 0.24", "70.5336, 527.894, -26.4727, 0.24", "70.3416, 529.248, -26.753, 0.24", "70.2929, 529.579, -26.8262, 0.48" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "4.20705, 107.246, -21.5516, 0.12", "3.72501, 107.578, -22.8945, 0.12", "3.63388, 107.639, -23.1384, 0.12", "3.32758, 107.842, -23.8781, 1.2", "3.03409, 108.018, -24.5472, 1.44", "1.33743, 108.974, -28.1348, 0.36", "0.96187, 109.2, -28.8855, 0.36", "0.75779, 109.339, -29.3117, 1.8", "0.461509, 109.562, -29.9003, 2.16", "-0.736745, 110.58, -32.1284, 0.36", "-1.14254, 110.965, -32.8759, 0.36", "-1.59137, 111.436, -33.5922, 1.32", "-1.98808, 111.912, -34.3593, 0.24", "-2.20099, 112.213, -34.8375, 0.24", "-2.72686, 113.031, -36.0672, 0.6", "-3.3986, 114.152, -37.5481, 1.68", "-3.61034, 114.487, -37.9735, 2.04", "-4.60821, 115.917, -39.8027, 0.36", "-4.99585, 116.445, -40.4167, 0.36", "-5.46402, 117.076, -41.0438, 1.56", "-5.90707, 117.694, -41.5418, 0.36", "-6.41885, 118.406, -42.0024, 0.6", "-6.72841, 118.832, -42.2601, 0.12", "-7.21661, 119.5, -42.5791, 0.12", "-7.45291, 119.86, -42.7695, 0.48", "-8.06354, 121.02, -43.4774, 0.12", "-8.23817, 121.41, -43.7229, 0.12", "-8.37086, 121.749, -43.9272, 0.12", "-8.54859, 122.234, -44.1931, 1.68", "-8.74321, 122.846, -44.4841, 2.04", "-9.09161, 124.148, -44.9934, 0.24", "-9.22872, 124.717, -45.1633, 0.24", "-9.32676, 125.157, -45.305, 0.48", "-9.42804, 125.649, -45.4947, 0.12", "-9.7038, 126.995, -46.0435, 0.12", "-9.95242, 128.22, -46.5397, 0.12", "-10.1142, 129.015, -46.8428, 0.12", "-10.3483, 130.172, -47.2659, 1.68", "-10.6556, 131.579, -47.7425, 0.12", "-10.9132, 132.688, -48.0837, 0.12", "-11.0468, 133.237, -48.2367, 1.32", "-11.2012, 133.921, -48.3742, 1.68", "-11.3867, 134.867, -48.4885, 0.12", "-11.5309, 135.768, -48.5002, 0.12", "-11.5622, 136.108, -48.4837, 0.36", "-11.5795, 136.568, -48.4657, 0.12", "-11.5832, 137.704, -48.4331, 0.12", "-11.5641, 138.388, -48.4227, 1.56", "-11.5149, 139.409, -48.4227, 0.12", "-11.4005, 141.243, -48.4227, 0.12", "-11.3792, 141.603, -48.4236, 0.48", "-11.3619, 141.935, -48.4251, 0.12", "-11.2967, 143.178, -48.4447, 0.12", "-11.2534, 143.965, -48.4651, 1.2", "-11.2213, 144.534, -48.4876, 1.2", "-11.1889, 145.108, -48.516, 0.12", "-11.1062, 146.006, -48.5619, 0.12", "-11.0346, 146.607, -48.5933, 1.32", "-10.9515, 147.171, -48.6228, 1.68", "-10.7383, 148.524, -48.6888, 0.12", "-10.5748, 149.528, -48.7373, 0.12", "-10.4178, 150.527, -48.7805, 0.12", "-10.365, 150.884, -48.7943, 0.12", "-10.2795, 151.563, -48.8124, 0.12", "-10.2318, 152.031, -48.8233, 1.2", "-10.1664, 152.836, -48.8382, 0.12", "-10.0951, 153.85, -48.8678, 0.12", "-10.076, 154.2, -48.8805, 0.36", "-10.0514, 154.564, -48.8946, 0.12", "-9.95083, 155.696, -48.9391, 0.12", "-9.89187, 156.194, -48.9579, 0.96", "-9.81794, 156.699, -48.9725, 0.12", "-9.61823, 157.819, -48.9286, 0.12", "-9.5122, 158.381, -48.8955, 0.84", "-9.40232, 158.942, -48.8531, 0.36", "-9.3309, 159.295, -48.8197, 0.12", "-8.8529, 161.527, -48.61, 0.12", "-8.57153, 162.734, -48.4976, 0.24", "-8.44958, 163.224, -48.4588, 0.48", "-8.36277, 163.575, -48.4384, 0.12", "-8.12584, 164.623, -48.419, 0.12", "-8.00836, 165.319, -48.4423, 0.84", "-7.97276, 165.684, -48.4845, 0.12", "-7.87235, 166.805, -48.6689, 0.12", "-7.8642, 166.975, -48.693, 0.6", "-7.90365, 167.519, -48.8122, 0.12", "-8.04349, 168.205, -49.0066, 0.12", "-8.22275, 168.85, -49.207, 1.08", "-8.46115, 169.585, -49.4965, 1.32", "-8.70391, 170.183, -49.7753, 1.68", "-9.1858, 171.283, -50.2979, 0.12", "-9.5012, 171.938, -50.658, 0.12", "-9.6541, 172.206, -50.8205, 0.48", "-9.97668, 172.693, -51.1101, 0.12", "-10.4568, 173.366, -51.4779, 0.12", "-10.7451, 173.761, -51.6663, 0.48", "-11.2962, 174.447, -51.9433, 0.12", "-11.8914, 175.095, -52.1855, 0.12", "-12.4825, 175.721, -52.3742, 0.12", "-12.7669, 176.025, -52.4389, 0.84", "-13.1665, 176.447, -52.5164, 0.84", "-13.4181, 176.697, -52.548, 0.12", "-14.0865, 177.31, -52.5732, 0.12", "-14.5372, 177.688, -52.5951, 0.12", "-14.6307, 177.76, -52.5969, 0.48", "-15.0022, 178.027, -52.5925, 0.12", "-15.4424, 178.318, -52.5802, 0.12", "-16.0377, 178.654, -52.5231, 1.32", "-16.2804, 178.757, -52.4872, 1.56", "-17.1258, 179.05, -52.3344, 0.12", "-17.6987, 179.233, -52.2274, 0.12", "-18.0954, 179.347, -52.1018, 0.48", "-18.6426, 179.484, -51.8758, 0.12", "-18.9612, 179.572, -51.7364, 0.12", "-19.3376, 179.692, -51.5788, 0.12", "-19.7052, 179.831, -51.4016, 0.72", "-20.8436, 180.361, -50.8376, 0.12", "-21.3334, 180.631, -50.6059, 0.12", "-22.0892, 181.092, -50.2364, 1.8", "-22.5863, 181.415, -49.9691, 2.04", "-23.7498, 182.2, -49.3243, 0.24", "-24.1886, 182.509, -49.0829, 0.24", "-24.7483, 182.935, -48.8058, 0.24", "-25.5625, 183.6, -48.3971, 0.24", "-26.0726, 184.033, -48.1353, 0.96", "-26.368, 184.295, -47.9977, 1.32", "-26.8488, 184.738, -47.8095, 0.12", "-27.3755, 185.223, -47.6103, 0.12", "-28.1452, 185.942, -47.3685, 0.12", "-28.431, 186.24, -47.3102, 0.96", "-28.6635, 186.523, -47.2736, 0.96", "-28.9395, 186.901, -47.235, 0.24", "-29.2616, 187.384, -47.2112, 0.24", "-29.4598, 187.713, -47.209, 0.12", "-29.9644, 188.637, -47.2421, 0.12", "-30.3322, 189.351, -47.2938, 0.12", "-30.5471, 189.788, -47.3327, 0.96", "-30.7382, 190.162, -47.42, 0.12", "-31.0247, 190.675, -47.6002, 0.12", "-31.154, 190.881, -47.6898, 0.12", "-31.2795, 191.071, -47.7987, 1.2", "-31.4804, 191.383, -47.9957, 1.2", "-32.193, 192.591, -48.741, 0.12", "-32.4614, 193.072, -49.0922, 0.12", "-32.704, 193.57, -49.4714, 0.12", "-32.9232, 194.068, -49.8476, 0.12", "-33.0611, 194.423, -50.1242, 0.72", "-33.2105, 194.829, -50.4121, 0.84", "-33.6451, 196.112, -51.1924, 0.12", "-33.9197, 196.943, -51.7442, 0.12", "-33.9666, 197.069, -51.827, 0.24", "-34.1956, 197.587, -52.1695, 0.12", "-34.705, 198.664, -52.9291, 0.12", "-34.797, 198.839, -53.0526, 1.2", "-35.2696, 199.63, -53.61, 0.12", "-35.7341, 200.306, -54.1853, 0.12", "-36.0777, 200.804, -54.6354, 0.72", "-36.4366, 201.272, -55.1341, 0.12", "-36.697, 201.552, -55.5062, 0.12", "-37.1647, 201.965, -56.1141, 0.12", "-37.5367, 202.251, -56.5733, 1.08", "-37.8112, 202.437, -56.929, 1.08", "-38.5001, 202.856, -57.7693, 0.12", "-39.0295, 203.131, -58.3659, 0.12", "-39.1783, 203.199, -58.5398, 0.36" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "4.79638, 105.912, -73.961, 0.12", "5.31734, 106.955, -74.4165, 0.12", "5.89595, 108.153, -74.9571, 2.64", "6.11396, 108.638, -75.1843, 2.16", "6.52479, 109.691, -75.6768, 0.24", "6.86005, 110.632, -76.0897, 0.24", "7.09515, 111.343, -76.3845, 0.24", "7.40421, 112.429, -76.7565, 0.96", "7.58192, 113.173, -76.9873, 0.12", "7.77877, 114.1, -77.1924, 0.12", "7.92475, 114.831, -77.2764, 0.24", "8.00895, 115.27, -77.2888, 0.24", "8.19501, 116.185, -77.2393, 1.68", "8.33919, 116.882, -77.184, 2.52", "8.60449, 118.041, -77.136, 1.56", "8.71503, 118.532, -77.1419, 0.48", "9.01391, 120.096, -77.259, 0.48", "9.16188, 120.988, -77.368, 1.32", "9.30095, 122.015, -77.5751, 0.96", "9.39257, 122.798, -77.7842, 0.12", "9.47185, 123.577, -78.0443, 0.12", "9.56321, 124.536, -78.3852, 1.8", "9.62515, 125.192, -78.6248, 1.92", "9.71961, 126.187, -78.9424, 0.12", "9.80259, 126.989, -79.1078, 0.12", "9.82428, 127.227, -79.1396, 0.48", "9.87464, 127.755, -79.1882, 0.12", "9.92651, 128.322, -79.2092, 0.12", "9.97642, 129.223, -79.1775, 0.72", "9.99944, 129.98, -79.0932, 0.12", "9.99244, 130.799, -79.0022, 0.12", "9.98594, 131.14, -78.9672, 0.48", "9.97559, 131.468, -78.9412, 0.12", "9.94026, 132.29, -78.922, 0.12", "9.92181, 132.641, -78.9365, 1.2", "9.88992, 133.287, -78.9865, 1.32", "9.89281, 133.971, -79.0204, 0.84", "9.9046, 134.273, -79.0271, 0.12", "9.94893, 134.956, -79.0176, 0.12", "9.97637, 135.182, -79.006, 0.6", "10.0566, 135.657, -78.9742, 0.12", "10.2904, 136.706, -78.8855, 0.12", "10.4084, 137.151, -78.8496, 0.6", "10.5109, 137.507, -78.8829, 0.12", "10.6845, 138.044, -78.9976, 0.12", "10.9665, 138.949, -79.2562, 1.56", "11.0626, 139.281, -79.3693, 2.04", "11.248, 139.975, -79.6263, 1.68", "11.7896, 141.925, -80.4349, 0.12", "12.0455, 142.854, -80.8711, 0.12", "12.196, 143.45, -81.1897, 0.12", "12.3056, 143.94, -81.4759, 1.08", "12.3845, 144.323, -81.705, 1.56", "12.5651, 145.238, -82.3115, 0.12", "12.8158, 146.355, -83.0663, 0.12", "13.0094, 147.049, -83.6332, 0.48", "13.2348, 147.713, -84.2618, 0.48", "13.3694, 148.039, -84.6009, 0.48", "13.7569, 148.864, -85.5948, 1.44", "13.939, 149.212, -86.0332, 1.92", "14.2646, 149.726, -86.6946, 1.44", "14.7117, 150.338, -87.5458, 0.48", "15.2741, 151.051, -88.5683, 0.36", "16.0134, 151.935, -89.8386, 0.12", "16.449, 152.436, -90.5233, 1.56", "16.7932, 152.828, -91.0637, 1.2", "17.7183, 153.856, -92.3925, 0.12", "18.0221, 154.162, -92.7853, 0.12", "18.2235, 154.344, -93.0223, 0.6", "18.4856, 154.567, -93.2739, 0.6", "19.0093, 155.003, -93.7907, 0.36", "19.3803, 155.312, -94.1185, 0.36", "20.0356, 155.859, -94.5655, 0.12", "20.4426, 156.212, -94.8037, 0.12", "21.0893, 156.801, -95.1441, 0.12", "21.9111, 157.592, -95.5762, 1.56", "22.4372, 158.116, -95.8349, 2.16", "23.1953, 158.926, -96.2095, 0.24", "24.1907, 160.111, -96.7887, 0.24", "24.5821, 160.658, -97.071, 0.12", "25.2148, 161.659, -97.6069, 1.68", "25.389, 161.989, -97.7981, 2.28", "25.5502, 162.368, -98.0411, 2.28", "26.0115, 163.765, -99.071, 0.12", "26.2231, 164.669, -99.7947, 0.12", "26.2682, 164.944, -100.02, 0.6", "26.3522, 165.894, -100.858, 0.24", "26.359, 166.396, -101.348, 0.24", "26.3507, 167.028, -101.987, 0.24", "26.3216, 167.463, -102.429, 0.96", "26.2483, 168.046, -103.062, 1.44", "26.0683, 169.105, -104.199, 0.12", "25.8725, 170.109, -105.164, 0.12", "25.7866, 170.532, -105.544, 0.12", "25.756, 170.671, -105.651, 0.48", "25.6964, 170.97, -105.854, 0.48", "25.6708, 171.11, -105.933, 0.48", "25.5192, 171.966, -106.289, 0.48", "25.3572, 172.902, -106.629, 1.32", "25.2753, 173.385, -106.802, 1.8", "25.1906, 174.114, -107.045, 0.96", "25.1357, 174.784, -107.241, 0.12", "25.0788, 175.77, -107.523, 0.12", "25.0528, 176.325, -107.666, 1.2", "25.0596, 176.767, -107.783, 1.56", "25.11, 177.375, -108.005, 0.12", "25.2308, 178.338, -108.406, 0.12", "25.387, 179.21, -108.808, 0.12", "25.5951, 180.068, -109.355, 0.12", "25.9752, 181.462, -110.381, 0.12", "26.3165, 182.612, -111.366, 0.12", "26.4578, 183.057, -111.773, 0.84", "26.5588, 183.358, -112.058, 0.96", "27.0491, 184.879, -113.487, 0.12", "27.2322, 185.543, -114.104, 0.12", "27.315, 186.221, -114.632, 0.12", "27.3394, 186.933, -115.09, 0.12", "27.3194, 187.551, -115.481, 0.36", "27.3063, 187.653, -115.532, 0.12", "27.1539, 188.146, -115.54, 0.12", "26.8903, 188.656, -115.488, 0.48" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "4.79638, 105.912, -73.961, 0.12", "3.09114, 107.078, -78.0308, 0.12", "2.73245, 107.337, -78.7739, 0.12", "2.20168, 107.713, -79.6447, 0.12", "1.82941, 107.978, -80.1677, 0.84", "0.991004, 108.573, -81.2172, 1.8", "0.688287, 108.788, -81.558, 1.92", "-0.0640132, 109.357, -82.0743, 0.12", "-0.972313, 110.126, -82.6394, 0.12", "-1.57531, 110.671, -82.9452, 0.96", "-1.86568, 110.951, -83.0711, 1.2", "-2.54418, 111.65, -83.2953, 0.12", "-2.9818, 112.144, -83.4627, 0.12", "-3.78993, 113.227, -83.8085, 0.12", "-4.05903, 113.649, -83.9438, 1.2", "-4.2211, 113.922, -84.0247, 1.44", "-4.55806, 114.52, -84.2406, 0.6", "-4.97837, 115.264, -84.5469, 0.12", "-5.37815, 115.892, -84.8488, 0.12", "-5.69532, 116.306, -85.1135, 0.96", "-5.93179, 116.581, -85.3136, 1.32", "-6.62588, 117.28, -85.8563, 0.12", "-7.02037, 117.612, -86.1313, 0.12", "-7.51588, 117.958, -86.4641, 0.12", "-8.44092, 118.509, -87.0905, 0.12", "-9.00104, 118.825, -87.469, 1.08", "-9.41148, 119.042, -87.7285, 1.8", "-9.95625, 119.303, -88.0881, 1.2", "-10.8069, 119.701, -88.6923, 0.12", "-11.2098, 119.887, -88.9795, 0.12", "-11.5442, 120.034, -89.2064, 0.12", "-11.941, 120.199, -89.5235, 0.12", "-13.3847, 120.76, -90.7478, 0.12", "-13.7016, 120.878, -91.015, 1.44", "-14.0721, 121.009, -91.3781, 2.04", "-14.6584, 121.19, -91.9934, 1.32", "-15.9638, 121.526, -93.3191, 0.12", "-16.3964, 121.619, -93.7379, 0.12", "-16.8032, 121.679, -94.0821, 0.96", "-18.5986, 121.832, -95.513, 0.12", "-19.2916, 121.852, -96.0021, 0.12", "-20.0644, 121.841, -96.4898, 1.56", "-20.4033, 121.821, -96.6594, 1.8", "-21.3356, 121.76, -97.1228, 0.12", "-21.591, 121.745, -97.2365, 0.12", "-22.1577, 121.717, -97.4472, 0.48", "-23.3223, 121.677, -97.9709, 0.12", "-24.0889, 121.661, -98.3569, 0.12", "-24.7245, 121.652, -98.6543, 1.32", "-25.1827, 121.635, -98.8399, 1.56", "-26.1704, 121.53, -99.1305, 0.12", "-26.6462, 121.426, -99.21, 0.12", "-26.8741, 121.354, -99.2173, 0.48", "-27.5876, 121.073, -99.2138, 0.12", "-28.2848, 120.768, -99.1831, 0.12", "-29.1985, 120.34, -99.1026, 0.12", "-30.0264, 119.936, -98.9938, 0.12", "-30.3589, 119.772, -98.9537, 0.72", "-30.6588, 119.632, -98.8883, 0.12", "-31.442, 119.304, -98.6705, 0.12", "-31.9502, 119.128, -98.4982, 0.12", "-32.4907, 118.975, -98.2936, 1.44", "-33.073, 118.837, -98.0641, 1.8", "-34.8014, 118.46, -97.3865, 0.12", "-35.3463, 118.354, -97.1619, 0.12", "-36.7845, 118.111, -96.5639, 0.12", "-37.0998, 118.071, -96.4457, 0.24", "-37.3472, 118.05, -96.3441, 0.12", "-37.6955, 118.028, -96.1952, 0.12", "-38.6576, 118.012, -95.8214, 1.32", "-38.7666, 118.016, -95.7714, 1.56", "-39.5156, 118.091, -95.3805, 1.56", "-40.6051, 118.247, -94.8412, 0.24", "-40.8261, 118.291, -94.74, 0.12", "-41.526, 118.468, -94.4837, 0.12", "-42.1295, 118.64, -94.3403, 0.12", "-42.3772, 118.713, -94.2896, 0.48", "-42.7833, 118.845, -94.2349, 0.48", "-43.0084, 118.924, -94.2333, 0.12", "-43.9361, 119.251, -94.2333, 0.12", "-44.6346, 119.452, -94.2333, 0.72" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-41.1176, 30.9489, -81.3871, 0.12", "-41.8361, 29.5461, -82.7637, 0.12", "-42.262, 28.7773, -83.6731, 0.12", "-42.8054, 27.8204, -84.8065, 0.12", "-42.9326, 27.5987, -85.064, 1.56", "-43.221, 27.0983, -85.6191, 1.56", "-43.5208, 26.5915, -86.1479, 0.96", "-44.1125, 25.6977, -87.0715, 0.12", "-44.4832, 25.1632, -87.6753, 0.12", "-44.6009, 24.9954, -87.8395, 0.12", "-44.8422, 24.6367, -88.1348, 0.12", "-45.1285, 24.1703, -88.4929, 0.6", "-45.3067, 23.8565, -88.7082, 0.72", "-46.0189, 22.4926, -89.492, 0.12", "-46.3111, 21.8771, -89.9833, 0.12", "-46.6922, 20.9727, -90.7484, 2.04", "-47.2801, 19.4122, -92.1689, 0.12", "-47.5274, 18.7128, -92.8239, 0.12", "-47.7981, 17.9605, -93.5816, 2.28", "-48.6936, 15.5388, -96.0336, 0.12", "-48.9928, 14.7903, -96.8682, 0.12", "-49.2439, 14.2723, -97.6529, 0.12", "-49.3609, 14.0706, -98.0112, 0.12", "-49.8349, 13.3839, -99.3369, 0.12", "-50.1754, 12.9884, -100.159, 1.92", "-50.4227, 12.7441, -100.642, 2.28", "-52.5747, 10.7456, -104.759, 0.12", "-52.8086, 10.5299, -105.174, 0.12", "-53.3943, 9.96695, -106.191, 1.8", "-53.6397, 9.72008, -106.591, 1.8", "-54.0221, 9.31357, -107.191, 1.2", "-54.7045, 8.43953, -108.135, 0.12", "-55.052, 7.91033, -108.362, 0.12", "-55.1658, 7.7192, -108.457, 0.6", "-55.4153, 7.19334, -108.719, 0.12", "-55.7329, 6.39612, -109.113, 0.12", "-55.806, 6.20681, -109.201, 0.36", "-55.9594, 5.77858, -109.449, 0.36", "-56.056, 5.4824, -109.658, 0.12", "-56.3526, 4.57221, -110.292, 0.12", "-56.5953, 3.78005, -111.023, 0.12", "-56.6791, 3.48559, -111.313, 0.96", "-57.0223, 2.15694, -112.613, 0.12", "-57.1426, 1.63263, -113.236, 0.12", "-57.3154, 0.805449, -114.293, 2.76", "-57.7026, -1.23125, -117.235, 0.12", "-57.8143, -1.88835, -118.205, 0.12", "-57.8474, -2.15293, -118.6, 0.96", "-57.949, -4.09566, -121.595, 0.12", "-57.9273, -4.51013, -122.316, 0.12", "-57.7724, -5.30843, -123.805, 0.12", "-57.6902, -5.53165, -124.205, 1.2", "-57.5122, -5.88921, -124.846, 2.28", "-56.968, -6.78702, -126.28, 1.68", "-56.3963, -7.53731, -127.165, 0.12", "-56.0591, -7.89728, -127.635, 0.12", "-55.8592, -8.09378, -127.882, 0.12", "-55.5935, -8.34863, -128.264, 0.12", "-55.3235, -8.62626, -128.656, 0.6", "-55.1342, -8.83147, -128.899, 0.6", "-54.5495, -9.59463, -129.995, 0.24", "-54.4508, -9.76641, -130.291, 0.24", "-54.1974, -10.3366, -131.361, 0.12", "-53.9758, -10.9998, -132.526, 2.4", "-53.9414, -11.1233, -132.724, 2.4", "-53.634, -12.7317, -135.438, 0.12", "-53.4845, -13.8603, -137.299, 0.12", "-53.4145, -14.5563, -138.446, 0.12", "-53.3741, -15.2181, -139.557, 3.12", "-53.3725, -15.5132, -140.061, 3.12", "-53.4622, -18.1732, -144.297, 0.12", "-53.4905, -18.5723, -144.881, 0.12", "-53.5111, -18.7772, -145.169, 0.48", "-53.5622, -19.2363, -145.79, 0.12", "-53.6176, -19.5993, -146.302, 0.12", "-53.6928, -19.8547, -146.699, 0.48", "-53.8825, -20.3137, -147.381, 0.12", "-54.0627, -20.7033, -147.981, 0.12", "-54.5386, -21.7854, -149.545, 2.76", "-54.6277, -22.0029, -149.834, 2.76", "-55.581, -24.4583, -152.96, 0.12", "-55.7104, -24.8316, -153.394, 0.12", "-55.862, -25.3161, -153.922, 0.12", "-56.0714, -26.0401, -154.682, 0.12", "-56.2979, -26.8926, -155.526, 1.8", "-56.4133, -27.4813, -156.079, 2.16", "-56.5039, -28.0853, -156.564, 1.92", "-56.7855, -29.5793, -157.962, 0.12", "-56.8709, -29.9043, -158.295, 0.72", "-57.1213, -30.4992, -158.965, 0.72", "-57.2928, -30.8258, -159.307, 0.12", "-57.6589, -31.4349, -159.884, 0.12", "-58.0713, -32.0646, -160.411, 0.12", "-58.4935, -32.7152, -160.834, 2.4", "-59.4577, -34.2451, -161.707, 0.12", "-60.0457, -35.2213, -162.202, 0.12", "-60.2705, -35.6402, -162.385, 0.6", "-60.4164, -35.9466, -162.522, 0.12", "-60.691, -36.5625, -162.779, 0.12", "-60.7741, -36.7615, -162.861, 0.48", "-60.9906, -37.3474, -163.163, 0.12", "-61.4721, -38.6986, -164.018, 0.12", "-61.8323, -39.7277, -164.718, 1.68", "-61.9714, -40.1282, -165.003, 2.16", "-62.0777, -40.4599, -165.236, 2.16", "-62.6137, -42.3083, -166.527, 0.12", "-62.7701, -42.8749, -166.905, 0.12", "-62.8497, -43.1605, -167.106, 0.48", "-62.8786, -43.256, -167.164, 0.12", "-63.1733, -44.125, -167.65, 0.12", "-63.5097, -44.9265, -168.008, 0.12", "-63.7944, -45.4562, -168.251, 1.68", "-64.0177, -45.8083, -168.459, 1.92", "-64.5247, -46.5036, -168.918, 0.12", "-64.8813, -46.928, -169.219, 0.12", "-65.355, -47.4038, -169.57, 1.32", "-66.6338, -48.6192, -170.505, 0.12", "-67.1079, -49.0616, -170.875, 0.12", "-67.4326, -49.3562, -171.169, 0.48", "-67.664, -49.5487, -171.391, 0.12", "-68.2249, -49.976, -171.983, 0.12", "-68.9798, -50.5051, -172.76, 0.12", "-69.1633, -50.6125, -172.934, 0.96", "-70.079, -51.0506, -173.746, 0.12", "-70.445, -51.2056, -174.049, 0.12", "-71.2934, -51.5234, -174.691, 1.44", "-72.0243, -51.7704, -175.174, 1.8", "-73.1753, -52.1327, -175.773, 0.12", "-74.6225, -52.5765, -176.388, 0.12", "-74.9752, -52.6807, -176.5, 0.48", "-75.207, -52.7466, -176.563, 0.12", "-75.8435, -52.9349, -176.691, 0.12", "-76.3084, -53.0758, -176.773, 1.08", "-76.8823, -53.2626, -176.837, 1.68", "-77.9587, -53.6168, -176.916, 0.12", "-78.4246, -53.7729, -176.944, 0.12", "-78.739, -53.8935, -176.959, 0.48", "-78.9664, -53.9921, -176.967, 0.12", "-79.8631, -54.4484, -177.062, 0.12", "-80.8363, -55.0648, -177.227, 1.68", "-81.5083, -55.6189, -177.43, 0.12", "-82.1046, -56.2055, -177.716, 0.12", "-82.5023, -56.6599, -177.97, 0.6", "-83.2876, -57.6985, -178.595, 0.12", "-83.7517, -58.438, -179.055, 0.12", "-84.3388, -59.4776, -179.773, 0.12", "-84.5417, -59.8473, -180.027, 0.12", "-84.7593, -60.231, -180.288, 1.68", "-84.9796, -60.6083, -180.518, 2.28", "-85.4229, -61.2876, -180.85, 1.56", "-86.0853, -62.1832, -181.237, 0.12", "-86.4326, -62.6352, -181.35, 0.12", "-86.7393, -63.0337, -181.442, 0.12", "-87.0875, -63.4874, -181.546, 1.32", "-87.3746, -63.863, -181.623, 1.56", "-87.8093, -64.429, -181.734, 0.12", "-88.9467, -65.9384, -181.971, 0.12", "-89.6365, -66.8603, -182.128, 1.8", "-89.869, -67.193, -182.186, 2.52", "-90.0596, -67.4641, -182.235, 2.52", "-90.6692, -68.3364, -182.412, 0.12", "-91.4579, -69.4753, -182.661, 0.12", "-91.8342, -70.0256, -182.773, 1.56", "-92.2862, -70.7171, -182.884, 2.04", "-92.7753, -71.4931, -183.007, 2.04", "-93.4446, -72.5983, -183.175, 0.12", "-93.8413, -73.2951, -183.265, 0.12", "-94.0672, -73.7453, -183.318, 0.72", "-94.1688, -73.981, -183.33, 0.12", "-94.3848, -74.5501, -183.316, 0.12", "-94.4573, -74.7945, -183.292, 0.48", "-94.5459, -75.1339, -183.27, 0.12", "-94.8192, -76.3625, -183.29, 0.12", "-94.9756, -77.1884, -183.351, 1.56", "-95.0418, -77.5895, -183.399, 1.8", "-95.1027, -78.0639, -183.478, 1.8", "-95.2714, -79.5894, -183.791, 0.12", "-95.3664, -80.5799, -184.043, 0.12", "-95.3664, -80.5799, -184.043, 0.48", "-95.3766, -80.7915, -184.131, 0.12", "-95.3695, -81.4114, -184.436, 0.12", "-95.3518, -81.6358, -184.562, 0.48", "-95.3326, -81.845, -184.679, 0.12", "-95.2552, -82.7838, -185.362, 0.12", "-95.1778, -83.9814, -186.28, 0.48", "-95.1646, -84.331, -186.523, 0.12", "-95.1408, -85.0906, -187.019, 1.56", "-95.1236, -85.7826, -187.435, 1.92", "-95.1029, -86.8342, -187.999, 1.56", "-95.0931, -87.3474, -188.274, 0.12", "-95.1161, -89.6927, -189.36, 0.12", "-95.122, -90.0165, -189.503, 0.84", "-95.1301, -90.3575, -189.65, 0.12", "-95.1351, -90.8868, -189.878, 0.12", "-95.1275, -92.5047, -190.509, 0.12", "-95.1043, -93.9678, -191.206, 2.4" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-41.1176, 30.9489, -81.3871, 0.12", "-41.8455, 31.7296, -82.626, 0.12", "-42.3521, 32.3015, -83.5025, 0.12", "-43.1874, 33.3084, -84.8457, 2.4", "-44.5457, 35.0167, -87.0672, 0.24", "-44.8213, 35.3693, -87.5054, 0.24", "-45.1022, 35.7397, -87.9374, 1.44", "-45.6676, 36.512, -88.7993, 0.12", "-46.2754, 37.4352, -89.7588, 0.12", "-46.7837, 38.2693, -90.4708, 0.12", "-47.2811, 39.0841, -91.115, 2.28", "-47.8872, 40.079, -91.9505, 0.12", "-48.3893, 40.8774, -92.6234, 0.12", "-49.0609, 41.933, -93.4862, 0.12", "-49.8134, 43.0935, -94.4245, 2.76", "-50.7404, 44.4978, -95.5519, 0.24", "-50.7404, 44.4978, -95.5519, 0.12", "-51.2723, 45.3182, -96.1819, 0.12", "-51.5244, 45.7089, -96.4818, 0.96", "-51.8494, 46.2072, -96.8116, 0.96", "-52.5514, 47.3178, -97.5014, 0.12", "-53.1697, 48.4424, -98.1821, 0.12", "-53.37, 48.8536, -98.4378, 0.72", "-53.6796, 49.5496, -98.9281, 0.12", "-53.9951, 50.2804, -99.4511, 0.12", "-54.336, 51.0778, -99.9771, 2.16", "-54.9673, 52.5512, -101.031, 0.12", "-55.153, 52.9821, -101.377, 0.12", "-55.565, 53.9338, -102.179, 0.12", "-55.8343, 54.5549, -102.692, 0.12", "-56.1614, 55.3165, -103.395, 1.44", "-56.8938, 57.1159, -105.079, 0.12", "-57.1445, 57.7173, -105.611, 0.12", "-57.3263, 58.1774, -106.011, 1.56", "-57.5222, 58.718, -106.457, 1.56", "-57.949, 59.9141, -107.458, 0.12", "-58.1295, 60.4431, -107.894, 0.12", "-58.2917, 60.903, -108.194, 0.12", "-58.393, 61.152, -108.384, 0.12", "-58.8311, 62.066, -109.108, 0.12", "-59.0367, 62.4305, -109.422, 0.12", "-59.4201, 62.9968, -109.909, 1.92", "-59.6964, 63.3656, -110.273, 2.16", "-60.6877, 64.555, -111.517, 0.12", "-61.0941, 64.9886, -111.973, 0.12", "-61.4337, 65.3192, -112.332, 1.08", "-61.8501, 65.6703, -112.755, 1.32", "-62.5981, 66.204, -113.468, 0.12", "-63.1387, 66.5282, -113.957, 0.12", "-63.5593, 66.7315, -114.318, 0.48", "-63.9863, 66.8969, -114.693, 0.12", "-64.9526, 67.2467, -115.538, 0.12", "-65.5535, 67.467, -116.071, 1.44", "-65.8933, 67.6066, -116.377, 1.68", "-66.9142, 68.1277, -117.355, 0.12", "-67.6562, 68.5681, -118.048, 0.12", "-68.2479, 68.9797, -118.57, 1.8", "-68.8063, 69.4451, -119.03, 2.16", "-69.6671, 70.2069, -119.669, 0.12", "-70.1964, 70.6781, -120.09, 0.12", "-70.6119, 71.0234, -120.393, 0.48", "-70.6876, 71.0808, -120.445, 0.12", "-71.1527, 71.3707, -120.774, 0.12", "-71.9122, 71.775, -121.365, 1.68", "-73.4773, 72.5152, -122.65, 0.12", "-74.102, 72.7966, -123.184, 0.12", "-74.4793, 72.9878, -123.521, 0.48", "-75.1545, 73.3713, -124.106, 0.12", "-75.5986, 73.6548, -124.496, 0.12", "-76.1105, 74.0296, -124.951, 1.56", "-76.5366, 74.357, -125.294, 2.28", "-77.5268, 75.1548, -126.034, 0.12", "-77.9902, 75.5151, -126.354, 0.12", "-78.317, 75.7502, -126.53, 0.48", "-78.8968, 76.1372, -126.794, 0.12", "-79.3194, 76.3981, -126.978, 0.12", "-80.3692, 76.9674, -127.39, 2.16", "-81.8263, 77.6163, -127.838, 0.12", "-82.8514, 78.0122, -128.106, 0.12", "-83.4358, 78.2166, -128.264, 0.6", "-83.8247, 78.3387, -128.375, 0.12", "-84.6015, 78.5608, -128.593, 0.12", "-85.5326, 78.8082, -128.845, 2.4", "-85.9853, 78.9315, -128.938, 2.4", "-87.629, 79.3925, -129.251, 0.12", "-88.9824, 79.7899, -129.453, 0.12", "-89.8567, 80.058, -129.548, 1.68", "-90.5208, 80.2622, -129.597, 2.16", "-91.883, 80.6719, -129.613, 0.12", "-92.7015, 80.9134, -129.565, 0.12", "-93.3543, 81.0958, -129.466, 0.6", "-93.5825, 81.1573, -129.429, 0.12", "-94.8503, 81.4937, -129.274, 0.12", "-95.3788, 81.6295, -129.174, 0.84", "-95.8814, 81.7582, -129.043, 1.08", "-96.1308, 81.8304, -128.98, 1.08", "-96.5036, 81.9552, -128.894, 0.12", "-97.1893, 82.223, -128.732, 0.12", "-98.0163, 82.5822, -128.532, 1.44", "-98.6681, 82.8608, -128.393, 1.68", "-99.3746, 83.1606, -128.24, 0.12", "-100.407, 83.5968, -128.037, 0.12", "-100.659, 83.6995, -127.995, 1.32", "-101.238, 83.9198, -127.931, 0.12", "-101.686, 84.0801, -127.897, 0.12", "-101.941, 84.1561, -127.868, 0.36", "-102.362, 84.2382, -127.813, 0.12", "-102.952, 84.3136, -127.737, 0.12", "-103.426, 84.3612, -127.675, 0.48", "-104.135, 84.4171, -127.598, 0.12", "-105.089, 84.474, -127.515, 0.12", "-105.817, 84.5047, -127.463, 1.8", "-106.326, 84.5172, -127.435, 2.64", "-106.686, 84.5219, -127.425, 2.64", "-107.906, 84.5155, -127.43, 0.12", "-108.985, 84.4883, -127.477, 0.12", "-109.464, 84.4789, -127.501, 0.12", "-109.849, 84.4745, -127.52, 0.48", "-110.089, 84.4714, -127.526, 0.12", "-110.584, 84.4767, -127.522, 0.12", "-111.062, 84.5059, -127.493, 0.6", "-111.488, 84.57, -127.458, 0.12", "-112.071, 84.6959, -127.406, 0.12", "-112.557, 84.8208, -127.328, 0.72", "-113.065, 84.9676, -127.227, 0.96", "-113.663, 85.1796, -127.125, 0.12", "-114.366, 85.463, -127.035, 0.12", "-114.813, 85.6531, -126.984, 1.2", "-115.632, 86.0364, -126.909, 1.56", "-116.198, 86.3314, -126.889, 1.68", "-117.208, 86.9407, -126.897, 0.12", "-118.089, 87.5222, -126.931, 0.12", "-118.534, 87.8392, -127.049, 1.56", "-119.046, 88.222, -127.213, 1.56", "-119.643, 88.6913, -127.451, 0.12", "-121.539, 90.2407, -128.292, 0.12", "-121.777, 90.4417, -128.409, 0.48", "-123.883, 92.3459, -129.773, 0.12" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-1.79722, -158.873, -16.1359, 3.37", "-1.34276, -159.217, -14.825, 3.37", "0.0104588, -160.085, -11.1874, 0.12", "0.121817, -160.132, -10.9483, 0.12", "0.465615, -160.243, -10.3037, 0.12", "0.705019, -160.298, -9.91549, 0.72", "1.0145, -160.347, -9.48019, 0.72", "1.21367, -160.349, -9.30038, 0.12", "2.63276, -160.184, -8.56222, 0.12", "2.77884, -160.182, -8.45105, 0.96", "3.19273, -160.263, -7.96225, 0.96", "3.60289, -160.488, -7.06069, 0.12", "3.65314, -160.551, -6.83572, 0.12", "3.67461, -160.668, -6.42144, 0.84", "3.52991, -161.372, -4.11589, 0.24", "3.40213, -161.793, -2.84095, 1.92", "3.13676, -162.471, -0.991997, 0.24", "2.99631, -162.782, -0.23138, 1.68", "2.58593, -163.679, 1.74599, 1.68", "2.46117, -163.945, 2.25019, 0.12", "2.31123, -164.284, 2.70881, 0.12", "2.19885, -164.605, 3.01516, 0.6", "2.09129, -165.092, 3.30886, 1.08", "1.98678, -165.721, 3.5902, 1.08", "1.82631, -166.658, 3.8377, 0.12", "1.73343, -167.204, 3.97984, 0.12", "1.65474, -167.758, 4.10999, 0.12", "1.59699, -168.315, 4.22142, 0.12", "1.57478, -168.869, 4.30631, 0.12", "1.58057, -169.338, 4.34426, 0.96", "1.60624, -169.913, 4.36491, 0.12", "1.63053, -170.624, 4.39061, 0.12", "1.62726, -171.034, 4.42014, 1.32", "1.6072, -171.287, 4.4463, 1.32", "1.51602, -172.033, 4.54416, 0.12", "1.39714, -172.701, 4.64615, 0.12", "1.36682, -172.857, 4.67184, 0.48", "1.27211, -173.369, 4.76449, 0.12", "1.24662, -173.619, 4.81002, 0.12", "1.24318, -173.947, 4.86887, 0.12", "1.30013, -174.174, 4.97636, 0.48", "1.42781, -174.586, 5.26604, 0.36", "1.50406, -174.891, 5.43318, 0.36", "1.56817, -175.187, 5.55186, 1.2", "1.63248, -175.507, 5.65863, 1.2", "1.9435, -177.155, 6.30851, 0.12", "2.06841, -177.764, 6.55532, 0.12", "2.29906, -179.091, 7.09598, 0.12", "2.39522, -179.753, 7.35353, 0.12", "2.44365, -180.198, 7.50474, 0.12", "2.5242, -181.218, 7.74591, 1.32", "2.60064, -182.029, 7.73787, 1.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.79722, -158.873, -16.1359, 0.12", "-3.10278, -159.676, -16.2451, 0.12", "-3.96913, -160.209, -16.3175, 0.12", "-4.24327, -160.378, -16.3404, 0.96", "-4.56636, -160.577, -16.3674, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "9.0279, -154.316, -24.8101, 0.12", "9.51176, -155.072, -24.6456, 0.12", "9.85187, -155.71, -24.5167, 0.12", "10.1691, -156.31, -24.4016, 0.72", "10.5827, -157.086, -24.2736, 0.84", "10.8142, -157.509, -24.1884, 0.48", "10.976, -157.798, -24.1255, 0.12", "11.3305, -158.42, -23.9779, 0.12", "11.5574, -158.821, -23.8674, 0.12", "11.7791, -159.186, -23.7671, 0.84", "12.2054, -159.908, -23.6649, 0.36", "12.4091, -160.261, -23.6335, 0.12", "12.9003, -161.105, -23.5925, 0.12", "13.3269, -161.836, -23.5864, 1.8", "13.6619, -162.486, -23.6059, 1.56", "14.2045, -163.637, -23.6898, 0.12", "14.2937, -163.846, -23.7207, 0.12", "14.3358, -163.952, -23.7379, 0.36", "14.4701, -164.329, -23.8058, 0.12", "14.6535, -164.998, -23.9067, 0.12", "14.7034, -165.22, -23.9235, 0.12", "14.7824, -165.57, -23.9245, 0.72", "14.8975, -166.13, -23.9266, 0.96", "14.9812, -166.569, -23.9268, 0.12", "15.2162, -167.914, -23.9244, 0.12", "15.2869, -168.355, -23.9231, 0.84", "15.3525, -168.821, -23.93, 0.12", "15.4098, -169.379, -23.9426, 0.12", "15.4393, -169.744, -23.9527, 0.96", "15.4764, -170.203, -23.9691, 0.12", "15.534, -170.989, -24.0102, 0.12", "15.5831, -171.747, -24.0602, 1.68", "15.5961, -172.068, -24.0879, 1.68" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.0279, -154.316, -24.8101, 0.6", "9.53656, -153.591, -20.9359, 0.6", "9.72541, -153.912, -21.4652, 0.6", "10.3703, -154.821, -22.6741, 0.12", "10.6423, -155.185, -23.1038, 0.12", "10.9822, -155.641, -23.6409, 0.96", "11.3235, -156.098, -24.1801, 0.96", "12.0682, -157.171, -25.6317, 0.12", "12.3649, -157.634, -26.2596, 0.12", "12.526, -157.874, -26.56, 0.48" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.3038, -94.5268, -31.3935, 0.12", "38.6393, -95.2908, -29.1928, 0.12", "38.9439, -95.4603, -28.7175, 0.12", "39.0878, -95.5407, -28.5075, 0.6", "39.5006, -95.757, -27.9394, 0.12", "40.263, -96.1312, -26.9533, 0.12", "40.4758, -96.232, -26.683, 0.12", "40.6404, -96.2993, -26.5233, 0.12", "40.8715, -96.3957, -26.307, 0.12", "41.4276, -96.6336, -25.7893, 0.12", "41.6068, -96.7155, -25.6377, 0.6", "41.9917, -96.9332, -25.3766, 0.12", "42.3787, -97.1613, -25.0928, 0.12", "42.8866, -97.441, -24.7213, 0.6" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "37.3038, -94.5268, -31.3935, 0.24", "37.5046, -95.5952, -31.734, 0.24", "37.6256, -96.5636, -32.0588, 0.24", "37.6652, -97.0141, -32.207, 0.96", "37.7187, -97.7973, -32.4601, 1.8", "37.7856, -98.566, -32.7554, 0.84", "37.8277, -99.0612, -32.9757, 0.12", "37.8911, -99.8196, -33.3973, 0.12", "37.912, -100.215, -33.6357, 0.72", "37.915, -100.308, -33.6854, 0.72", "37.9754, -101.265, -34.1392, 0.24", "38.0286, -101.668, -34.2766, 0.24", "38.1544, -102.327, -34.4247, 0.24", "38.3039, -103.002, -34.4968, 0.24", "38.4286, -103.626, -34.5015, 0.24", "38.5441, -104.339, -34.4581, 0.24", "38.6314, -105.046, -34.3361, 1.44", "38.7167, -105.813, -34.165, 1.92", "38.7757, -106.569, -33.9757, 1.92", "38.8179, -107.336, -33.7867, 1.2", "38.8484, -108.128, -33.6129, 0.48", "38.8608, -108.904, -33.4561, 0.12", "38.8703, -109.461, -33.3303, 0.12", "38.8805, -109.805, -33.2557, 0.6", "38.9017, -110.238, -33.1795, 0.12", "38.975, -111.133, -33.0168, 0.12", "39.0329, -111.58, -32.9446, 0.12", "39.2867, -113.168, -32.8071, 2.4" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "45.1994, -27.737, -11.2127, 0.96", "44.562, -25.2226, -4.01363, 0.96", "44.4726, -24.8948, -3.25454, 0.72", "44.4089, -24.6686, -2.84263, 0.24", "44.3432, -24.3872, -2.45181, 0.24", "44.2679, -23.9297, -1.98425, 0.24", "44.2028, -23.3079, -1.45939, 0.84", "44.1941, -22.4248, -1.22961, 1.2", "44.2257, -21.62, -0.976435, 0.48", "44.3065, -20.5871, -0.544428, 0.24", "44.4521, -19.5279, -0.0368723, 0.24", "44.7155, -18.2036, 0.691167, 1.68", "44.8728, -17.5377, 1.07399, 2.28", "44.9989, -17.0511, 1.36424, 2.4", "45.4092, -15.4688, 2.32423, 0.36", "45.5564, -14.8486, 2.69879, 0.36", "45.7375, -13.9955, 3.18295, 0.84", "45.9593, -12.7822, 3.81053, 0.84", "46.1473, -11.5524, 4.41944, 0.6", "46.3069, -10.4069, 4.9565, 0.6", "46.4021, -9.67811, 5.25869, 0.96", "46.4524, -9.10425, 5.49329, 0.96", "46.497, -8.03255, 5.90356, 0.12", "46.4887, -7.50351, 6.09827, 0.12", "46.4672, -7.05283, 6.23711, 0.12", "46.4353, -6.56227, 6.36217, 0.12", "46.4057, -6.06776, 6.48929, 0.6", "46.3928, -5.67177, 6.56797, 0.96", "46.3502, -5.02816, 6.56797, 1.08" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "45.1994, -27.737, -11.2127, 0.12", "46.742, -27.9793, -10.7363, 0.12", "47.1958, -28.0399, -10.5935, 0.12", "47.7634, -28.1057, -10.4117, 0.6", "48.4578, -28.1633, -10.195, 0.6", "49.4588, -28.2222, -9.903, 0.12", "50.3863, -28.2397, -9.65568, 0.12", "50.5028, -28.2305, -9.62865, 0.36", "50.8774, -28.1792, -9.55171, 0.12", "51.3889, -28.0806, -9.42661, 0.12", "51.8389, -27.9478, -9.3115, 0.48", "52.4936, -27.7336, -9.16235, 0.6", "52.9468, -27.5872, -9.04697, 0.48", "53.3524, -27.4787, -8.94877, 0.48", "54.314, -27.2539, -8.5628, 0.12", "55.2917, -27.0957, -8.08227, 2.04", "55.8567, -27.0485, -7.78013, 3.25", "56.3867, -27.0638, -7.49938, 3.37", "57.0637, -27.1498, -7.16126, 2.88", "59.2171, -27.6137, -6.15348, 0.24", "60.1343, -27.8907, -5.76716, 0.24", "60.7216, -28.1203, -5.52743, 0.72", "61.76, -28.5542, -5.15513, 0.96", "62.429, -28.8528, -4.96913, 0.24", "62.646, -28.9479, -4.94707, 0.24", "62.9596, -29.0651, -4.98725, 0.24", "63.6638, -29.2107, -5.10345, 0.24", "64.2614, -29.2367, -5.20068, 1.2", "64.7399, -29.2011, -5.20555, 1.92", "65.7182, -29.0672, -5.1129, 1.92", "66.701, -28.899, -4.9513, 0.36", "67.315, -28.7776, -4.77326, 0.36", "68.5259, -28.5126, -4.32792, 0.36", "70.4297, -28.0924, -3.5346, 1.68", "71.0147, -27.9702, -3.29211, 2.52", "71.9161, -27.804, -2.91671, 2.64", "73.9071, -27.5139, -2.1989, 0.24", "74.7799, -27.4206, -1.94616, 0.24", "75.3778, -27.37, -1.83773, 0.36", "76.4144, -27.3029, -1.81691, 1.08", "76.95, -27.2714, -1.80954, 1.08", "77.8988, -27.2029, -1.82807, 0.48", "78.3741, -27.1529, -1.86953, 0.24", "79.0339, -27.0337, -1.85315, 0.24", "79.6023, -26.873, -1.76183, 0.6", "80.719, -26.4715, -1.42939, 0.36", "81.2545, -26.2944, -1.25223, 0.36", "81.6968, -26.1911, -1.05908, 0.36", "82.0185, -26.1578, -0.901233, 0.48", "82.2622, -26.1612, -0.789062, 0.24", "82.7118, -26.1948, -0.585469, 0.24", "83.5262, -26.279, -0.298101, 0.24", "84.6963, -26.4011, 0.0588446, 0.24", "85.1837, -26.4507, 0.187482, 1.2", "86.0224, -26.5022, 0.3698, 2.16", "87.2312, -26.5141, 0.632057, 1.8", "88.182, -26.4734, 0.822891, 0.36", "89.5553, -26.3144, 1.22248, 0.36", "90.1597, -26.2143, 1.42566, 0.36", "91.1464, -26.0149, 1.81743, 0.36", "92.0912, -25.7953, 2.32632, 1.56", "92.8086, -25.6129, 2.7865, 2.04", "94.7802, -25.0972, 4.27206, 0.24", "95.3484, -24.9561, 4.7528, 0.24", "95.6335, -24.8957, 4.99496, 0.24", "96.9439, -24.7114, 6.08939, 1.68", "97.3387, -24.6781, 6.38554, 2.04", "97.6378, -24.6634, 6.61858, 2.04", "98.9522, -24.594, 7.56215, 0.24", "99.5181, -24.5304, 8.0022, 0.24", "99.9823, -24.4373, 8.37932, 1.2", "100.347, -24.3017, 8.68234, 1.2", "101.68, -23.5379, 9.92783, 0.12", "102.151, -23.1298, 10.4043, 0.12", "102.405, -22.8035, 10.654, 0.24", "102.575, -22.5433, 10.8546, 0.24", "102.906, -22.0513, 11.2093, 0.24", "103.096, -21.7995, 11.3845, 0.24", "103.472, -21.4087, 11.6066, 0.24", "104.103, -20.9156, 11.9159, 0.24", "105.283, -20.1146, 12.49, 0.12", "106.088, -19.6406, 12.8735, 0.12", "106.315, -19.5265, 12.9794, 1.44", "107.181, -19.1213, 13.3722, 2.52", "108.125, -18.6757, 13.7786, 2.04" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-11.4206, -250.421, -40.7081, 0.12", "-10.7959, -251.709, -40.7235, 0.12", "-10.4742, -252.362, -40.7278, 0.12", "-10.3259, -252.663, -40.7308, 0.48", "-10.0685, -253.183, -40.7171, 0.48", "-9.79142, -253.728, -40.6914, 0.48", "-9.62859, -254.01, -40.7046, 0.48", "-9.46343, -254.243, -40.7417, 0.48", "-9.0665, -254.705, -40.868, 1.68", "-8.63633, -255.13, -41.0255, 2.28", "-8.21959, -255.499, -41.1884, 2.4", "-7.01151, -256.462, -41.6959, 0.48", "-6.17711, -257.093, -42.0748, 0.36", "-5.66482, -257.451, -42.3279, 0.12", "-5.38309, -257.626, -42.4792, 0.12", "-5.16846, -257.745, -42.6086, 0.12", "-4.83365, -257.907, -42.8118, 0.72" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-11.4206, -250.421, -40.7081, 0.12", "-11.5794, -251.806, -40.7215, 0.12", "-11.5999, -252.156, -40.7455, 0.12", "-11.5995, -252.515, -40.7804, 0.12", "-11.5898, -253.111, -40.8946, 0.12", "-11.591, -253.406, -40.9639, 0.48", "-11.6112, -253.951, -41.1019, 0.48", "-11.6171, -254.155, -41.1734, 0.12", "-11.7498, -254.766, -41.492, 0.12", "-11.9593, -255.346, -41.8521, 0.12", "-12.0986, -255.681, -42.0616, 1.68", "-12.2089, -255.935, -42.2386, 1.8", "-12.4028, -256.367, -42.5637, 1.8", "-12.9904, -257.713, -43.5435, 0.12", "-13.14, -258.074, -43.8049, 0.12", "-13.3882, -258.825, -44.2864, 0.12", "-13.5196, -259.397, -44.6576, 0.48", "-13.5473, -259.593, -44.778, 0.48", "-13.5621, -260.074, -45.016, 0.48", "-13.5619, -260.223, -45.079, 0.12", "-13.5884, -260.637, -45.2789, 0.12", "-13.6581, -261.222, -45.567, 0.12", "-13.7016, -261.51, -45.6983, 0.96", "-13.8183, -262.126, -45.987, 1.44", "-14.083, -263.272, -46.6082, 0.12", "-14.2657, -263.956, -46.978, 0.12", "-14.3491, -264.253, -47.1365, 0.12", "-14.414, -264.47, -47.2422, 0.6", "-14.5322, -264.819, -47.4361, 0.6", "-14.7763, -265.409, -47.8745, 0.12", "-15.0249, -265.933, -48.3171, 0.12", "-15.0637, -266.014, -48.3924, 0.48", "-15.1693, -266.262, -48.5944, 0.48", "-15.4173, -266.996, -49.0685, 0.48", "-15.6445, -267.818, -49.4854, 0.24", "-15.7023, -268.093, -49.6731, 0.12", "-15.8154, -268.93, -50.2528, 0.12", "-15.8761, -269.475, -50.6574, 1.44", "-15.9096, -269.932, -50.9975, 2.16", "-15.9349, -270.543, -51.4313, 2.28", "-16.0015, -272.791, -52.9746, 0.12", "-16.0116, -274.015, -53.8444, 0.12", "-16.0016, -274.69, -54.3408, 0.84", "-15.9873, -275.164, -54.6874, 1.44", "-15.97, -275.558, -54.9684, 0.96", "-15.9451, -275.974, -55.1878, 0.12", "-15.9305, -276.372, -55.2958, 0.12", "-15.9371, -276.805, -55.4073, 0.12", "-15.9507, -277.055, -55.4596, 0.36", "-16.0205, -277.698, -54.8139, 0.12", "-16.1575, -278.718, -53.4013, 0.12", "-16.1935, -278.953, -52.9699, 1.08", "-16.2364, -279.205, -52.3924, 1.8", "-16.2583, -279.332, -52.0381, 2.04", "-16.6052, -281.409, -45.2755, 0.12" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "17.202, 100.029, 10.377, 0.48", "17.7062, 101.885, 10.6923, 0.48", "17.9083, 102.686, 10.7979, 0.48", "18.0206, 103.132, 10.8462, 0.48", "18.1595, 103.692, 10.8783, 0.48", "18.438, 104.903, 10.8926, 0.48", "18.6807, 106.126, 10.8691, 0.48", "18.7202, 106.383, 10.8398, 0.72", "18.7912, 106.879, 10.8128, 0.96", "18.9106, 107.704, 10.8104, 0.96", "19.0231, 108.414, 10.9093, 0.36", "19.2327, 109.492, 11.183, 0.36", "19.3745, 110.169, 11.4032, 0.36", "19.6744, 111.614, 11.9212, 1.56", "19.8079, 112.272, 12.1732, 2.16", "20.1552, 114.009, 12.8811, 0.48", "20.4037, 115.313, 13.3353, 0.48", "20.533, 116.075, 13.5618, 0.48", "20.5849, 116.517, 13.6539, 0.48", "20.6064, 117.303, 13.7107, 1.68", "20.5827, 117.773, 13.7063, 1.92", "20.4684, 119.279, 13.5418, 1.08", "20.4143, 120.086, 13.4575, 0.48", "20.403, 120.665, 13.4031, 0.36", "20.4708, 121.728, 13.3265, 0.36", "20.5894, 122.434, 13.3291, 0.36", "20.9385, 123.709, 13.3791, 0.72", "21.1222, 124.193, 13.416, 0.36", "21.3586, 124.754, 13.4389, 0.36", "21.7406, 125.566, 13.4752, 0.36", "22.2563, 126.596, 13.5248, 0.84", "22.8024, 127.69, 13.7683, 1.92", "23.1258, 128.442, 13.836, 2.28", "23.327, 128.99, 13.818, 2.64", "23.4676, 129.437, 13.7506, 2.76", "23.6359, 130.072, 13.5806, 2.76", "24.3288, 132.651, 12.6157, 1.56", "25.3505, 136.055, 11.1241, 0.12", "25.4556, 136.373, 10.9775, 0.12", "25.55, 136.655, 10.8615, 0.12", "25.6825, 137.119, 10.683, 0.72", "25.8408, 137.79, 10.4511, 0.96", "25.9873, 138.593, 10.1685, 0.48", "26.1167, 139.285, 10.1343, 0.36", "26.3698, 140.846, 10.0624, 0.36", "26.4326, 141.352, 10.0835, 0.36", "26.4666, 141.745, 10.1167, 0.12", "26.5214, 142.764, 10.2791, 0.96", "26.554, 143.476, 10.4378, 1.32", "26.5965, 143.925, 10.5085, 1.2", "26.7726, 145.319, 10.9032, 0.48", "26.9244, 146.316, 11.2253, 0.24", "27.0518, 147.057, 11.4717, 1.2", "27.1761, 147.689, 11.6842, 1.68", "27.4629, 148.994, 12.1338, 1.68", "27.9818, 151.178, 12.8821, 1.8", "28.2033, 152.016, 13.1369, 0.96", "28.4569, 152.886, 13.4949, 1.08", "28.6726, 153.565, 13.7829, 0.36", "29.1484, 154.994, 14.3277, 0.36", "29.4242, 155.849, 14.598, 0.36", "29.6299, 156.449, 14.7009, 1.08", "30.1581, 158.026, 14.9465, 1.2", "30.5849, 159.341, 15.0979, 0.96", "31.0033, 160.7, 15.1719, 0.36", "31.3659, 161.898, 15.0765, 0.24", "31.5849, 162.657, 14.9468, 0.6", "31.7246, 163.161, 14.8519, 0.12", "31.8564, 163.591, 14.762, 0.24", "32.2836, 164.88, 14.5377, 0.24", "32.6482, 165.954, 14.3599, 0.24", "32.938, 166.816, 14.1318, 1.68", "33.3384, 168.094, 13.7534, 2.52", "33.6271, 169.174, 13.4343, 0.48", "33.8759, 170.219, 13.1285, 0.48", "34.0684, 171.238, 12.8536, 0.72", "34.2044, 172.368, 12.6044, 1.08", "34.2426, 173.135, 12.4597, 1.68", "34.2138, 174.142, 12.2801, 1.2", "34.1311, 174.993, 12.1911, 0.36", "33.9926, 176.108, 12.1389, 0.36", "33.8867, 176.865, 12.1676, 0.36", "33.7532, 177.726, 12.24, 0.36", "33.5926, 178.784, 12.3239, 2.04", "33.5311, 179.249, 12.3696, 2.4", "33.4439, 180.345, 12.4356, 2.4", "33.4632, 181.998, 12.4126, 0.36", "33.5733, 183.008, 12.3298, 0.36", "33.7324, 183.902, 12.2612, 1.44", "33.9082, 184.593, 12.2153, 2.16", "34.3611, 186.188, 12.1291, 0.48", "34.6324, 187.102, 12.0965, 0.12", "34.8274, 187.731, 12.0605, 0.6", "35.2595, 189.205, 12.0804, 0.36", "35.4368, 189.927, 12.1495, 0.24", "35.5769, 190.766, 12.3011, 0.24", "35.615, 191.237, 12.4022, 0.24", "35.6543, 192.105, 12.5296, 0.36", "35.7097, 193.069, 12.5768, 0.36", "35.8013, 193.774, 12.5729, 0.36", "35.9165, 194.335, 12.588, 0.36", "36.1984, 195.294, 12.6085, 1.68", "36.4415, 195.976, 12.559, 2.4", "36.6266, 196.444, 12.4812, 2.4", "37.1757, 197.699, 12.2809, 0.24", "37.4489, 198.297, 12.1963, 0.24", "37.6166, 198.674, 12.1521, 0.48", "38.1377, 199.976, 12.0659, 0.24", "38.3702, 200.766, 12.0257, 0.24", "38.5325, 201.614, 11.9575, 0.24", "38.5902, 202.305, 11.9259, 0.72", "38.619, 202.909, 11.9444, 0.84", "38.6344, 203.326, 11.9747, 0.36", "38.672, 204.123, 12.0201, 0.36", "38.7343, 204.978, 11.9673, 0.48", "38.8682, 206.216, 11.7431, 0.36", "38.9925, 206.898, 11.5661, 0.36", "39.1034, 207.365, 11.4529, 0.96", "39.4329, 208.455, 11.1306, 0.96", "39.6235, 208.957, 11.017, 0.36", "39.7888, 209.379, 10.9619, 0.36", "40.2218, 210.551, 10.8683, 2.4", "40.6388, 211.808, 10.8743, 3.25", "40.9681, 212.978, 10.9719, 2.16", "41.3628, 214.637, 11.1698, 0.24", "41.6171, 215.856, 11.304, 0.12", "41.8029, 216.88, 11.3874, 0.24", "41.8459, 217.229, 11.4017, 0.36", "41.9193, 218.134, 11.3465, 0.36", "41.9735, 219.271, 11.216, 1.32", "42.0081, 219.971, 11.0817, 0.48", "42.0525, 220.375, 11.0113, 0.12", "42.1714, 221.073, 10.898, 0.12", "42.3323, 221.876, 10.7937, 0.12", "42.4513, 222.371, 10.7488, 0.84", "42.7994, 223.752, 10.6896, 1.56", "42.9483, 224.306, 10.6768, 1.68", "43.2551, 225.31, 10.6787, 0.12", "43.5807, 226.165, 10.6842, 0.12", "43.7963, 226.582, 10.8253, 0.24", "43.9237, 226.743, 10.9529, 0.12", "44.2914, 227.009, 11.3917, 0.12", "44.5361, 227.138, 11.7216, 0.12", "45.3828, 227.444, 12.992, 3.25", "47.7699, 227.975, 16.8481, 0.12", "47.9846, 228.003, 17.2227, 0.12", "48.1643, 228.007, 17.5569, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "17.202, 100.029, 10.377, 0.12", "15.2024, 100.67, 10.349, 0.12", "14.7203, 100.826, 10.3579, 0.12", "14.3628, 100.944, 10.3333, 0.96", "13.4713, 101.223, 10.2269, 0.12", "12.8675, 101.401, 10.0938, 0.12", "12.5161, 101.507, 10.0038, 0.12", "12.0105, 101.665, 9.84793, 1.08", "10.9558, 101.974, 9.58253, 0.36", "9.93259, 102.261, 9.33423, 0.36", "8.6554, 102.648, 9.1656, 0.36", "8.07962, 102.811, 9.10321, 0.36", "7.00191, 103.071, 9.23964, 0.36", "6.40642, 103.175, 9.45517, 0.36", "5.76826, 103.232, 9.84354, 0.36", "4.39827, 103.301, 10.9122, 1.92", "3.65364, 103.299, 11.6215, 1.92", "1.41827, 103.145, 13.9736, 0.12", "0.928587, 103.078, 14.5491, 0.12", "0.654157, 103.021, 14.9207, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "9.71669, 119.016, -15.883, 0.12", "9.35178, 120.326, -17.3048, 0.12", "9.2996, 120.576, -17.5211, 0.12", "9.23358, 121.05, -17.8386, 0.24", "9.17444, 122.635, -18.843, 0.24", "9.19006, 123.226, -19.185, 0.24", "9.21612, 123.644, -19.4102, 0.24", "9.37078, 124.53, -19.7869, 1.68", "9.51487, 125.143, -20.0735, 1.68", "10.0586, 126.966, -20.9427, 0.12", "10.2995, 127.69, -21.2713, 0.12", "10.3896, 127.93, -21.4012, 0.6", "10.5812, 128.393, -21.6885, 0.48", "11.0891, 129.51, -22.4686, 0.12", "11.3738, 130.084, -22.903, 0.12", "11.4486, 130.227, -22.9947, 0.12", "11.614, 130.555, -23.1969, 0.96", "11.7836, 130.894, -23.3857, 0.96", "11.9667, 131.275, -23.5891, 0.48", "12.3912, 132.187, -23.9952, 0.12", "12.9694, 133.437, -24.5535, 0.12", "13.3303, 134.221, -24.9136, 1.8", "13.5176, 134.633, -25.1037, 2.16", "14.1014, 135.904, -25.6595, 0.12", "14.5393, 136.829, -26.0369, 0.12", "14.7094, 137.187, -26.1619, 0.96", "14.9773, 137.748, -26.352, 0.24", "15.2315, 138.282, -26.525, 0.24", "15.6321, 139.082, -26.7858, 1.68", "15.9558, 139.674, -26.9655, 0.12", "16.2517, 140.153, -27.11, 0.12", "16.6761, 140.749, -27.3831, 0.6", "17.0247, 141.188, -27.6221, 0.12", "17.7973, 142.1, -28.1959, 0.12", "17.9526, 142.275, -28.3158, 0.12", "18.58, 142.987, -28.8147, 1.92", "20.0834, 144.702, -29.9738, 0.12", "20.8186, 145.568, -30.5143, 0.12", "21.0319, 145.838, -30.6472, 0.84", "21.2558, 146.161, -30.7664, 0.12", "21.7648, 147.03, -30.987, 0.12", "22.0914, 147.723, -30.9991, 1.68", "22.2727, 148.18, -30.8776, 1.2", "22.5806, 148.974, -30.5929, 0.12", "22.8604, 149.671, -30.2699, 0.12", "23.0635, 150.145, -30.0024, 0.6", "23.6364, 151.368, -29.2047, 0.48", "23.923, 151.967, -28.8128, 0.48", "24.1461, 152.411, -28.5207, 0.48", "24.4042, 152.92, -28.2294, 0.12", "24.5794, 153.263, -28.0681, 0.12", "24.8924, 153.935, -27.8802, 1.44", "25.0547, 154.362, -27.8345, 1.68", "25.3326, 155.215, -27.7853, 0.12", "25.649, 156.328, -27.7656, 0.12", "25.904, 157.314, -27.787, 1.92", "26.1799, 158.47, -27.827, 0.12", "26.4627, 159.689, -27.8876, 0.12", "26.5689, 160.137, -27.9169, 0.6", "26.6199, 160.359, -27.936, 0.12", "26.8396, 161.377, -28.0228, 0.12", "26.9761, 162.068, -28.1371, 1.08", "27.0441, 162.416, -28.2137, 0.72", "27.0893, 162.655, -28.2873, 0.12", "27.2483, 163.502, -28.5978, 0.12", "27.3957, 164.298, -28.9214, 1.44", "27.6459, 165.691, -29.6467, 0.12", "27.7249, 166.085, -29.8635, 0.12", "27.7475, 166.185, -29.9178, 0.48", "27.8049, 166.409, -30.0313, 0.12", "28.0207, 167.123, -30.3352, 0.48", "28.3303, 168.0, -30.582, 0.12", "28.7658, 169.115, -30.8614, 0.12", "28.8493, 169.323, -30.9212, 0.72", "29.1348, 170.045, -31.1335, 1.44", "29.3541, 170.598, -31.2927, 1.8", "29.6429, 171.279, -31.4802, 1.68", "30.2416, 172.716, -31.8339, 0.12", "30.45, 173.238, -32.0065, 0.12", "30.6467, 173.746, -32.1993, 0.12", "30.851, 174.328, -32.4681, 1.32", "30.9873, 174.744, -32.6745, 1.32", "31.0739, 175.042, -32.8269, 1.32", "31.2759, 175.888, -33.2038, 0.12", "31.433, 176.633, -33.6276, 0.12", "31.5465, 177.375, -34.1623, 0.72" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "9.71669, 119.016, -15.883, 0.12", "11.7143, 119.291, -0.0647838, 0.12", "11.7954, 119.303, 0.54157, 0.12", "11.8487, 119.31, 0.917207, 0.12", "12.0394, 119.334, 2.18776, 0.84", "12.1034, 119.342, 2.61558, 0.84", "12.2158, 119.353, 3.59259, 0.36", "12.467, 119.411, 3.24571, 0.36", "12.6832, 119.483, 2.87862, 0.36", "12.921, 119.57, 2.43803, 0.36", "13.4655, 119.779, 1.41197, 0.36", "14.597, 120.247, -0.763887, 0.36", "15.2068, 120.514, -1.89735, 2.04", "16.1552, 120.93, -3.60224, 1.56", "16.5884, 121.122, -4.3136, 0.12", "16.8007, 121.216, -4.62066, 0.12", "17.4427, 121.455, -5.34054, 1.2", "17.9839, 121.599, -5.75727, 0.48", "18.2913, 121.661, -5.94275, 0.12", "19.1557, 121.829, -6.34432, 0.12", "20.0466, 122.008, -6.82425, 1.32", "20.45, 122.093, -7.06875, 1.68", "21.6397, 122.381, -7.89728, 0.12", "22.0003, 122.485, -8.2142, 0.12", "22.5309, 122.654, -8.78674, 0.6", "23.5106, 122.957, -9.98932, 0.12", "23.8434, 123.048, -10.411, 0.12", "24.7673, 123.279, -11.6279, 1.8", "25.7275, 123.496, -12.8784, 1.8", "26.7082, 123.663, -14.2257, 0.48", "27.0571, 123.699, -14.6888, 0.48", "27.4116, 123.713, -15.0974, 0.48", "28.1305, 123.714, -15.8785, 1.44", "28.5626, 123.701, -16.3115, 1.68", "30.1489, 123.697, -17.8148, 0.36", "30.8543, 123.76, -18.4881, 0.36", "31.4713, 123.897, -19.2192, 1.68", "32.0298, 124.083, -19.9671, 1.2", "32.7864, 124.424, -21.0989, 0.36", "33.282, 124.708, -21.9032, 0.36", "33.9149, 125.182, -23.0388, 1.68", "35.0224, 126.179, -25.2623, 0.24", "35.2592, 126.416, -25.7538, 0.24", "35.5469, 126.7, -26.3023, 0.84", "35.7806, 126.91, -26.6969, 0.96", "36.382, 127.325, -27.5426, 0.24", "36.7617, 127.504, -27.9592, 0.24", "37.5255, 127.719, -28.6264, 1.44", "37.8672, 127.763, -28.9812, 1.68", "38.4525, 127.746, -29.7919, 0.36", "38.7307, 127.699, -30.243, 0.36", "38.9319, 127.636, -30.614, 0.36", "39.7408, 127.316, -32.225, 0.96", "40.6416, 126.902, -34.0866, 1.68", "41.7137, 126.375, -36.3199, 0.6", "41.9188, 126.262, -36.7431, 0.48", "42.6825, 125.794, -38.2781, 2.04", "42.9472, 125.606, -38.779, 2.52", "43.7484, 124.973, -40.0807, 0.36", "43.9863, 124.787, -40.3843, 0.36", "44.3967, 124.509, -40.7744, 0.48", "45.2895, 123.935, -41.5395, 0.36", "45.6159, 123.715, -41.7857, 0.36", "45.8008, 123.583, -41.9215, 0.36", "46.7313, 122.912, -42.5043, 0.36", "47.5049, 122.363, -42.932, 1.08", "48.0397, 122.006, -43.1644, 1.8", "48.7333, 121.574, -43.3678, 1.2", "49.3303, 121.244, -43.5188, 0.36", "50.1554, 120.835, -43.6315, 0.36", "51.0004, 120.465, -43.661, 0.36", "51.6625, 120.223, -43.6383, 1.2", "52.4866, 119.987, -43.6052, 1.8", "53.5802, 119.747, -43.5762, 0.12", "55.1342, 119.473, -43.576, 0.12", "55.9875, 119.337, -43.6042, 1.44", "56.4749, 119.243, -43.6379, 2.16", "57.3419, 119.022, -43.7129, 2.4", "58.4678, 118.649, -43.8061, 0.24", "58.9134, 118.447, -43.8386, 0.24", "59.3279, 118.195, -43.8896, 0.24", "60.0428, 117.663, -43.9269, 0.48", "60.5064, 117.27, -43.9283, 0.12", "61.0521, 116.814, -43.881, 0.12", "61.4358, 116.528, -43.7999, 0.12", "61.8386, 116.287, -43.7067, 0.12", "62.3528, 116.051, -43.5223, 0.36", "62.6927, 115.937, -43.3796, 0.12", "63.7525, 115.624, -42.9176, 0.12", "64.6759, 115.378, -42.4964, 1.44", "64.9129, 115.319, -42.3869, 1.56", "66.2745, 114.972, -41.7346, 0.36", "66.7058, 114.838, -41.4484, 0.36", "66.9582, 114.737, -41.2324, 0.36", "67.2517, 114.562, -40.9124, 0.36", "67.4705, 114.4, -40.6991, 0.36", "67.6249, 114.268, -40.5296, 0.36", "68.6607, 113.271, -39.3989, 0.12", "68.8615, 113.078, -39.1799, 0.12", "69.0877, 112.869, -38.9215, 0.12", "69.8617, 112.2, -38.0678, 2.4", "71.2027, 111.132, -36.7425, 0.12", "71.5863, 110.84, -36.4129, 0.12", "72.0756, 110.481, -36.0158, 0.36", "72.5495, 110.134, -35.5972, 0.12", "72.9398, 109.849, -35.2339, 0.12", "73.3081, 109.57, -34.8718, 1.08", "73.6243, 109.33, -34.5634, 1.08", "74.6944, 108.468, -33.4159, 0.36", "74.9704, 108.216, -33.1185, 0.36", "75.1917, 108.0, -32.915, 0.12", "75.3234, 107.867, -32.7716, 0.12", "76.0491, 107.13, -31.9369, 0.12", "76.3808, 106.81, -31.5804, 1.32", "76.8914, 106.347, -31.079, 2.04", "77.491, 105.858, -30.4984, 1.32", "78.8431, 104.857, -29.1941, 0.12", "79.0276, 104.741, -29.0272, 0.12", "79.3429, 104.597, -28.6706, 0.24", "79.8134, 104.42, -28.0868, 0.24", "80.1715, 104.321, -27.595, 0.24", "80.6608, 104.232, -26.8543, 0.24", "80.911, 104.21, -26.497, 0.84", "82.6588, 104.135, -23.6788, 0.6" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "35.9271, 86.8037, 14.5584, 0.72", "35.5854, 86.3418, 13.5568, 0.72", "35.0398, 85.7972, 12.2474, 0.6", "34.685, 85.443, 11.3956, 0.36", "34.553, 85.3113, 11.079, 0.48", "34.2236, 84.9825, 10.2885, 0.36", "33.8214, 84.581, 9.32304, 0.12", "33.6607, 84.4736, 8.99442, 0.12" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.9271, 86.8037, 14.5584, 0.48", "35.9406, 87.6253, 14.5329, 0.48", "35.9323, 88.337, 14.552, 0.48", "35.8711, 89.0951, 14.573, 0.6", "35.7875, 89.707, 14.5997, 0.48", "35.6475, 90.6272, 14.6456, 0.48", "35.4893, 91.6677, 14.7002, 2.04", "35.3909, 92.523, 14.7556, 1.92", "35.2937, 93.5138, 14.7691, 1.44", "35.2242, 94.2952, 14.7434, 1.08", "35.1825, 94.9864, 14.7029, 0.96", "35.1875, 95.3351, 14.6563, 0.72", "35.2836, 96.1394, 14.4634, 1.08", "35.5623, 97.4544, 14.1349, 0.48", "35.7159, 98.0042, 14.0087, 0.48", "35.9947, 98.9144, 13.824, 1.32", "36.2325, 99.7199, 13.6597, 1.92", "36.5226, 100.793, 13.5071, 1.08", "36.7212, 101.553, 13.4618, 0.72", "36.8236, 101.957, 13.4891, 0.24", "37.115, 102.878, 13.5749, 0.24", "37.3228, 103.559, 13.6401, 0.72", "37.5172, 104.354, 13.7546, 0.12", "37.7007, 105.046, 13.8746, 0.12", "37.9625, 106.018, 14.0218, 1.8", "38.2778, 107.253, 14.2102, 2.76", "38.466, 108.055, 14.3539, 2.64", "38.769, 109.394, 14.6138, 1.08" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "39.2867, -113.168, -32.8071, 0.12", "40.0952, -113.677, -32.8177, 0.12", "40.7661, -114.1, -32.8266, 0.12", "41.4445, -114.527, -32.8355, 0.6", "41.8006, -114.751, -32.8402, 0.12", "42.6542, -115.289, -32.8514, 0.12", "43.1015, -115.57, -32.8573, 0.72" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "39.2867, -113.168, -32.8071, 0.12", "39.3517, -114.395, -32.5984, 0.12", "39.3845, -115.144, -32.3415, 0.12", "39.4312, -115.688, -32.117, 0.96", "39.4925, -116.22, -31.8951, 1.56", "39.6141, -117.057, -31.5595, 0.12", "39.6936, -117.493, -31.3934, 0.12", "40.0287, -118.829, -30.7884, 1.08", "40.2, -119.399, -30.5209, 0.72", "40.3496, -119.842, -30.3236, 0.12", "40.5318, -120.367, -30.041, 0.12", "40.6883, -120.842, -29.7663, 0.12", "40.9123, -121.6, -29.359, 1.44", "41.0234, -122.01, -29.1675, 1.68", "41.0933, -122.333, -29.012, 1.68", "41.3455, -123.695, -28.3862, 0.12", "41.4248, -124.324, -28.1147, 0.12", "41.4661, -125.003, -27.8634, 0.12", "41.4692, -125.241, -27.7956, 0.96", "41.4571, -125.796, -27.6614, 0.96", "41.4438, -126.308, -27.5667, 0.12", "41.3795, -127.695, -27.4368, 0.12", "41.3356, -128.403, -27.3725, 0.96", "41.2847, -129.048, -27.3295, 1.68", "41.2522, -129.503, -27.3069, 1.92", "41.2214, -129.979, -27.3057, 1.92", "41.1515, -131.159, -27.3577, 0.12", "41.1171, -131.61, -27.4155, 0.12", "41.0114, -132.619, -27.5856, 0.12", "40.9427, -133.074, -27.7118, 0.6", "40.8102, -133.68, -27.9237, 0.12", "40.6337, -134.3, -28.1713, 0.12", "40.4337, -134.943, -28.4531, 1.2", "40.1337, -135.84, -28.8575, 1.68", "39.6697, -137.133, -29.4222, 0.12", "39.4499, -137.78, -29.7015, 0.12", "39.3237, -138.237, -29.878, 0.12", "39.2199, -138.773, -30.0905, 0.12", "39.1874, -139.091, -30.2104, 1.2", "39.1701, -139.777, -30.4518, 1.56", "39.2209, -140.98, -30.8353, 0.24", "39.2971, -141.863, -31.136, 0.24", "39.3724, -142.747, -31.4517, 0.72", "39.3994, -143.183, -31.6074, 0.84", "39.422, -143.649, -31.7671, 0.12", "39.4287, -143.974, -31.8781, 0.12", "39.4069, -144.515, -32.073, 0.12", "39.3808, -144.905, -32.2293, 0.12", "39.3642, -145.372, -32.2159, 0.12", "39.3621, -145.594, -32.1627, 0.12", "39.3516, -146.377, -31.8657, 1.32", "39.3089, -147.233, -31.4723, 0.12", "39.2991, -147.984, -31.0324, 0.12", "39.3867, -151.227, -28.6521, 0.6", "39.4423, -152.403, -27.5174, 1.32", "39.4604, -152.71, -27.1244, 2.04", "39.4853, -153.018, -26.5698, 2.4" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "108.125, -18.6757, 13.7786, 0.24", "109.146, -18.5814, 14.2355, 0.24", "109.595, -18.5319, 14.4359, 0.24", "111.233, -18.3457, 15.1555, 0.24", "111.715, -18.2831, 15.35, 0.96", "112.621, -18.1545, 15.6459, 1.56", "113.415, -18.0316, 15.9152, 0.36", "114.948, -17.7717, 16.4068, 0.12", "115.294, -17.7067, 16.5122, 1.2", "116.374, -17.4767, 16.7797, 2.16", "117.711, -17.1253, 17.1346, 0.12", "119.084, -16.68, 17.4981, 0.12", "119.323, -16.5801, 17.558, 0.84", "119.783, -16.3325, 17.6526, 0.96", "120.392, -15.9564, 17.7892, 0.12", "120.942, -15.5207, 17.9414, 0.12", "121.115, -15.3216, 17.9968, 0.6", "121.496, -14.7529, 17.9936, 0.12", "121.739, -14.2933, 18.0008, 0.12" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "108.125, -18.6757, 13.7786, 0.6", "107.937, -17.5323, 13.9399, 0.6", "107.892, -17.2156, 13.9851, 0.6", "107.835, -16.537, 14.0566, 0.84", "107.826, -15.6088, 14.1293, 0.12", "107.814, -14.552, 14.1949, 0.12", "107.813, -14.1919, 14.2126, 0.96", "107.855, -13.4051, 14.2451, 1.2", "107.943, -12.5094, 14.2583, 0.12", "108.085, -11.5074, 14.2455, 0.12", "108.227, -10.721, 14.1915, 0.12", "108.434, -9.83821, 14.0881, 0.12", "108.542, -9.44291, 14.0392, 0.12", "108.822, -8.55363, 13.9265, 1.68", "108.938, -8.26511, 13.8289, 1.92", "109.446, -7.26807, 13.2894, 0.12", "109.924, -6.47312, 12.7019, 0.12", "110.129, -6.12074, 12.3874, 1.32", "110.287, -5.804, 12.0365, 1.68", "111.178, -3.90336, 9.35955, 0.36", "111.288, -3.69184, 9.00526, 0.36", "111.438, -3.41728, 8.46586, 0.12", "111.654, -3.01786, 7.57187, 0.12", "112.047, -2.22441, 5.69486, 0.48", "112.254, -1.70789, 4.47008, 1.44", "112.36, -1.21651, 3.49525, 2.16" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.83365, -257.907, -42.8118, 0.24", "-4.58442, -257.577, -43.0211, 0.24", "-4.26815, -257.158, -43.2868, 0.24", "-3.88563, -256.651, -43.608, 0.6", "-3.49915, -256.14, -43.9327, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.83365, -257.907, -42.8118, 0.12", "-4.30214, -258.302, -42.2883, 0.12", "-3.95745, -258.519, -41.9462, 0.12", "-3.64806, -258.667, -41.6963, 0.12", "-3.23566, -258.811, -41.4391, 0.12", "-3.00406, -258.871, -41.3191, 0.12", "-1.10034, -259.234, -40.4813, 0.12", "-0.274835, -259.284, -40.2087, 2.04", "0.611423, -259.271, -39.9369, 1.56", "1.55266, -259.203, -39.6829, 0.36", "2.06219, -259.137, -39.5292, 0.36", "2.64112, -259.042, -39.3583, 0.36", "3.80782, -258.821, -39.0711, 0.36", "4.26866, -258.729, -38.8906, 0.6", "4.58106, -258.667, -38.724, 0.6", "5.92725, -258.377, -37.8808, 0.36", "6.22429, -258.314, -37.6886, 0.6", "6.6475, -258.231, -37.4477, 0.6", "7.42655, -258.1, -37.0967, 0.12", "7.75486, -258.071, -37.0162, 0.12", "8.3618, -258.068, -36.98, 0.12", "8.94583, -258.128, -37.1019, 1.08", "10.0554, -258.367, -37.4526, 0.12", "10.2898, -258.453, -37.5468, 0.12", "10.9213, -258.753, -37.8295, 0.12", "11.3156, -258.98, -38.0101, 0.48", "11.9455, -259.397, -38.3052, 0.12", "12.3154, -259.666, -38.4719, 0.12", "12.9487, -260.148, -38.6947, 0.12", "13.3979, -260.49, -38.8642, 0.12", "13.7759, -260.768, -39.0172, 1.08" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "39.4853, -153.018, -26.5698, 0.48", "39.4959, -154.799, -29.9405, 0.48", "39.4877, -155.09, -30.4635, 0.48", "39.4653, -155.768, -31.5594, 0.12", "39.4632, -156.101, -32.0606, 0.12", "39.4601, -156.563, -32.7551, 1.2", "39.4563, -157.145, -33.6297, 0.12", "39.4465, -157.296, -33.7959, 0.12", "39.4156, -157.767, -34.33, 0.72", "39.3879, -158.045, -34.571, 0.72" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "39.4853, -153.018, -26.5698, 0.12", "38.4495, -154.808, -27.9851, 0.12", "38.0696, -155.573, -28.3365, 0.12", "37.9616, -155.794, -28.4159, 0.6", "37.6509, -156.408, -28.5962, 0.24", "37.5331, -156.635, -28.6239, 0.24", "37.2125, -157.226, -28.6389, 0.24", "36.9666, -157.653, -28.5137, 0.6", "36.5628, -158.213, -28.3252, 0.12", "36.1977, -158.634, -28.1839, 0.12", "35.3968, -159.39, -27.944, 0.84", "35.2023, -159.555, -27.8811, 0.84", "34.8288, -159.833, -27.7396, 0.12", "34.6199, -159.967, -27.648, 0.12", "34.0707, -160.267, -27.3629, 0.84", "33.8412, -160.368, -27.2725, 0.96" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_15", "dend_0", "dend_48", "dend_27", "dend_25", "dend_16", "dend_2", "dend_1", "dend_54", "dend_49", "dend_41", "dend_28", "dend_24", "dend_17", "dend_8", "dend_3", "dend_58", "dend_55", "dend_53", "dend_50", "dend_45", "dend_42", "dend_34", "dend_29", "dend_23", "dend_18", "dend_12", "dend_9", "dend_7", "dend_4", "dend_60", "dend_59", "dend_57", "dend_56", "dend_52", "dend_51", "dend_47", "dend_46", "dend_44", "dend_43", "dend_40", "dend_35", "dend_33", "dend_30", "dend_20", "dend_19", "dend_14", "dend_13", "dend_11", "dend_10", "dend_6", "dend_5", "dend_39", "dend_36", "dend_32", "dend_31", "dend_22", "dend_21", "dend_38", "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L4_DBC_cf9508af7b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_48, id: dend_48, parent: dend_26
create dend_48
public dend_48
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_15
create dend_25
public dend_25
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_48
create dend_54
public dend_54
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_27
create dend_41
public dend_41
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_49
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.499998982464247)
    connect dend_15(0), soma_0(0.499998982464247)
    connect dend_0(0), soma_0(0.499998982464247)
    connect axon_0(0), soma_0(1.0)
    connect dend_48(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.72142, 10.9655, 0.761584, 2.84462 ) }
    soma_0 { pt3dadd( 1.58182, 9.77504, 0.687603, 4.62864 ) }
    soma_0 { pt3dadd( 1.44222, 8.58452, 0.613623, 7.50202 ) }
    soma_0 { pt3dadd( 1.30262, 7.39401, 0.539642, 9.47415 ) }
    soma_0 { pt3dadd( 1.16302, 6.2035, 0.465661, 11.0555 ) }
    soma_0 { pt3dadd( 1.02343, 5.01299, 0.391681, 12.4342 ) }
    soma_0 { pt3dadd( 0.883829, 3.82247, 0.3177, 13.5523 ) }
    soma_0 { pt3dadd( 0.744231, 2.63196, 0.243719, 14.3411 ) }
    soma_0 { pt3dadd( 0.604633, 1.44145, 0.169739, 14.9091 ) }
    soma_0 { pt3dadd( 0.465035, 0.250937, 0.0957582, 15.2878 ) }
    soma_0 { pt3dadd( 0.325437, -0.939575, 0.0217776, 15.5461 ) }
    soma_0 { pt3dadd( 0.185839, -2.13009, -0.0522031, 15.5537 ) }
    soma_0 { pt3dadd( 0.0462405, -3.3206, -0.126184, 15.1598 ) }
    soma_0 { pt3dadd( -0.0933575, -4.51111, -0.200164, 14.7587 ) }
    soma_0 { pt3dadd( -0.232956, -5.70162, -0.274145, 14.0408 ) }
    soma_0 { pt3dadd( -0.372554, -6.89214, -0.348126, 13.1988 ) }
    soma_0 { pt3dadd( -0.512152, -8.08265, -0.422106, 12.1253 ) }
    soma_0 { pt3dadd( -0.65175, -9.27316, -0.496087, 10.5491 ) }
    soma_0 { pt3dadd( -0.791348, -10.4637, -0.570068, 8.74654 ) }
    soma_0 { pt3dadd( -0.930946, -11.6542, -0.644048, 6.27284 ) }
    soma_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 3.68979 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 3.07622, -6.09889, -17.6726, 3.85 ) }
    dend_26 { pt3dadd( 3.94615, -5.55738, -16.8912, 3.85 ) }
    dend_26 { pt3dadd( 4.84971, -4.99493, -16.0797, 3.85 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 24/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -0.643782, -12.1029, -2.03262, 2.64 ) }
    dend_15 { pt3dadd( -0.482193, -13.619, -0.858869, 1.92 ) }
    dend_15 { pt3dadd( -0.34721, -14.7583, -0.0824965, 1.8 ) }
    dend_15 { pt3dadd( -0.216222, -15.6679, 0.426484, 1.92 ) }
    dend_15 { pt3dadd( 0.185703, -18.0931, 1.52715, 1.32 ) }
    dend_15 { pt3dadd( 0.402867, -19.1912, 1.93041, 1.56 ) }
    dend_15 { pt3dadd( 0.655814, -20.2782, 2.24724, 1.8 ) }
    dend_15 { pt3dadd( 0.899104, -21.153, 2.34584, 2.04 ) }
    dend_15 { pt3dadd( 1.33281, -22.5091, 2.31856, 2.16 ) }
    dend_15 { pt3dadd( 1.63354, -23.3874, 2.1773, 1.32 ) }
    dend_15 { pt3dadd( 1.96871, -24.3827, 1.94842, 1.44 ) }
    dend_15 { pt3dadd( 2.35016, -25.6832, 1.71036, 1.44 ) }
    dend_15 { pt3dadd( 2.58576, -26.704, 1.58201, 1.8 ) }
    dend_15 { pt3dadd( 2.6914, -27.4158, 1.52355, 2.04 ) }
    dend_15 { pt3dadd( 2.72964, -28.4281, 1.48927, 1.68 ) }
    dend_15 { pt3dadd( 2.62976, -29.9431, 1.4613, 1.44 ) }
    dend_15 { pt3dadd( 2.49962, -30.6978, 1.45664, 1.8 ) }
    dend_15 { pt3dadd( 2.33746, -31.3171, 1.46401, 2.04 ) }
    dend_15 { pt3dadd( 2.07161, -32.1628, 1.49394, 1.92 ) }
    dend_15 { pt3dadd( 1.78571, -32.9426, 1.51856, 1.56 ) }
    dend_15 { pt3dadd( 1.40927, -33.8976, 1.50002, 1.56 ) }
    dend_15 { pt3dadd( 1.15591, -34.5354, 1.39999, 0.72 ) }
    dend_15 { pt3dadd( 0.978182, -35.0139, 1.31285, 0.48 ) }
    dend_15 { pt3dadd( 0.842574, -35.3924, 1.25807, 0.48 ) }
    dend_15 { pt3dadd( 0.529551, -36.2888, 1.16772, 1.32 ) }
    dend_15 { pt3dadd( 0.270822, -37.0411, 1.09606, 1.68 ) }
    dend_15 { pt3dadd( -0.208095, -38.441, 0.91758, 1.56 ) }
    dend_15 { pt3dadd( -0.477864, -39.2281, 0.818954, 1.92 ) }
    dend_15 { pt3dadd( -0.868599, -40.3982, 0.680283, 2.64 ) }
    dend_15 { pt3dadd( -1.13938, -41.2679, 0.606182, 2.76 ) }
    dend_15 { pt3dadd( -1.34086, -42.0409, 0.579762, 2.76 ) }
    dend_15 { pt3dadd( -1.55998, -43.1363, 0.614995, 1.68 ) }
    dend_15 { pt3dadd( -1.6478, -43.8403, 0.667713, 0.96 ) }
    dend_15 { pt3dadd( -1.69315, -44.7685, 0.727468, 0.96 ) }
    dend_15 { pt3dadd( -1.66653, -45.9654, 0.793193, 1.32 ) }
    dend_15 { pt3dadd( -1.552, -47.6868, 0.909579, 1.8 ) }
    dend_15 { pt3dadd( -1.4852, -48.4381, 0.971354, 2.16 ) }
    dend_15 { pt3dadd( -1.40165, -49.3005, 1.0358, 2.28 ) }
    dend_15 { pt3dadd( -1.30036, -50.3585, 1.08849, 0.84 ) }
    dend_15 { pt3dadd( -1.25319, -51.052, 1.1017, 0.84 ) }
    dend_15 { pt3dadd( -1.2257, -52.0781, 1.0756, 1.08 ) }
    dend_15 { pt3dadd( -1.30066, -53.1537, 1.01259, 1.68 ) }
    dend_15 { pt3dadd( -1.46403, -53.9888, 0.95678, 2.52 ) }
    dend_15 { pt3dadd( -1.57404, -54.3314, 0.913541, 3.0 ) }
    dend_15 { pt3dadd( -1.7298, -54.7011, 0.847553, 2.88 ) }
    dend_15 { pt3dadd( -1.83107, -54.9046, 0.808936, 2.88 ) }
    dend_15 { pt3dadd( -2.256, -55.6758, 0.65242, 2.16 ) }
    dend_15 { pt3dadd( -2.95118, -56.8684, 0.523151, 0.96 ) }
    dend_15 { pt3dadd( -3.48414, -57.7753, 0.452685, 0.48 ) }
    dend_15 { pt3dadd( -3.67086, -58.0883, 0.429521, 0.48 ) }
    dend_15 { pt3dadd( -4.32579, -59.1747, 0.357937, 1.92 ) }
    dend_15 { pt3dadd( -4.96217, -60.2048, 0.306683, 3.12 ) }
    dend_15 { pt3dadd( -5.67902, -61.3793, 0.297863, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.64622, 10.4691, 0.167383, 2.16 ) }
    dend_0 { pt3dadd( 3.15808, 12.3778, 0.894906, 1.44 ) }
    dend_0 { pt3dadd( 3.67896, 14.2088, 1.55697, 2.16 ) }
    dend_0 { pt3dadd( 4.26355, 16.2069, 2.23104, 3.25 ) }
    dend_0 { pt3dadd( 4.67494, 17.5589, 2.67041, 3.49 ) }
    dend_0 { pt3dadd( 5.15145, 19.0859, 3.24425, 3.25 ) }
    dend_0 { pt3dadd( 5.48576, 20.1573, 3.64685, 2.88 ) }
    dend_0 { pt3dadd( 5.74318, 20.9704, 3.99392, 2.88 ) }
    dend_0 { pt3dadd( 6.02128, 21.8085, 4.31722, 2.52 ) }
    dend_0 { pt3dadd( 6.54935, 23.2876, 4.91169, 2.16 ) }
    dend_0 { pt3dadd( 7.31149, 25.2978, 5.74237, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.07054, -12.8447, -0.718029, 0.780957 ) }
    axon_0 { pt3dadd( -2.81746, -27.7426, -0.718029, 0.780957 ) }
    axon_0 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.780957 ) }
    // Section: dend_48, id: dend_48, parent: dend_26 (entry count 91/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 4.84971, -4.99493, -16.0797, 1.56 ) }
    dend_48 { pt3dadd( 3.72131, -2.35624, -17.1468, 1.56 ) }
    dend_48 { pt3dadd( 3.30309, -1.23461, -17.5993, 1.2 ) }
    dend_48 { pt3dadd( 3.05319, -0.434067, -17.9287, 0.96 ) }
    dend_48 { pt3dadd( 2.81146, 0.527315, -18.2819, 0.96 ) }
    dend_48 { pt3dadd( 2.46559, 2.23385, -18.8951, 1.32 ) }
    dend_48 { pt3dadd( 2.15523, 4.19408, -19.4654, 1.32 ) }
    dend_48 { pt3dadd( 2.007, 5.80926, -19.7536, 1.44 ) }
    dend_48 { pt3dadd( 1.97895, 7.20558, -19.9409, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_48 { pt3dadd( 2.04839, 8.70165, -20.0616, 1.44 ) }
    dend_48 { pt3dadd( 2.14665, 9.88764, -20.0794, 1.68 ) }
    dend_48 { pt3dadd( 2.33367, 12.0528, -19.966, 2.88 ) }
    dend_48 { pt3dadd( 2.38947, 12.9762, -19.8554, 3.73 ) }
    dend_48 { pt3dadd( 2.38943, 14.4355, -19.6486, 3.73 ) }
    dend_48 { pt3dadd( 2.24319, 16.333, -19.385, 2.88 ) }
    dend_48 { pt3dadd( 1.9229, 18.4659, -19.15, 1.68 ) }
    dend_48 { pt3dadd( 1.70401, 19.4547, -19.0599, 1.2 ) }
    dend_48 { pt3dadd( 1.4592, 20.3555, -19.0295, 0.96 ) }
    dend_48 { pt3dadd( 1.08576, 21.5136, -18.9894, 1.68 ) }
    dend_48 { pt3dadd( 0.585778, 22.7898, -18.9459, 2.88 ) }
    dend_48 { pt3dadd( 0.30954, 23.3446, -18.9318, 3.49 ) }
    dend_48 { pt3dadd( -0.0730332, 23.9691, -18.9382, 3.61 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 13/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.84971, -4.99493, -16.0797, 1.32 ) }
    dend_27 { pt3dadd( 6.81932, -5.81421, -16.018, 1.32 ) }
    dend_27 { pt3dadd( 7.61314, -6.13027, -16.1073, 0.84 ) }
    dend_27 { pt3dadd( 8.76733, -6.61528, -16.3392, 1.2 ) }
    dend_27 { pt3dadd( 10.0315, -7.22343, -16.7115, 1.44 ) }
    dend_27 { pt3dadd( 11.304, -8.01724, -17.2433, 1.32 ) }
    dend_27 { pt3dadd( 12.3157, -8.8539, -17.772, 1.56 ) }
    dend_27 { pt3dadd( 13.2898, -10.087, -18.5959, 1.2 ) }
    dend_27 { pt3dadd( 13.5637, -10.5497, -18.9205, 1.2 ) }
    dend_27 { pt3dadd( 13.8609, -11.36, -19.5007, 1.2 ) }
    dend_27 { pt3dadd( 14.0982, -12.7672, -20.4647, 2.64 ) }
    dend_27 { pt3dadd( 14.129, -13.9575, -21.1636, 4.45 ) }
    dend_27 { pt3dadd( 14.1093, -14.902, -21.5392, 4.33 ) }
    // Section: dend_25, id: dend_25, parent: dend_15 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -5.67902, -61.3793, 0.297863, 3.0 ) }
    dend_25 { pt3dadd( -6.47958, -62.1377, 0.471154, 3.0 ) }
    dend_25 { pt3dadd( -6.93454, -62.6359, 0.57688, 2.76 ) }
    dend_25 { pt3dadd( -7.63855, -63.5198, 0.800748, 1.92 ) }
    dend_25 { pt3dadd( -7.86341, -63.8589, 0.896953, 1.92 ) }
    dend_25 { pt3dadd( -8.29381, -64.6504, 1.12479, 0.6 ) }
    dend_25 { pt3dadd( -8.53905, -65.2036, 1.2695, 0.48 ) }
    dend_25 { pt3dadd( -8.58884, -65.4222, 1.31621, 0.48 ) }
    dend_25 { pt3dadd( -8.65127, -65.9959, 1.42132, 0.48 ) }
    dend_25 { pt3dadd( -8.64968, -66.6932, 1.51809, 0.84 ) }
    dend_25 { pt3dadd( -8.57031, -67.4845, 1.60872, 1.08 ) }
    dend_25 { pt3dadd( -8.41922, -68.2632, 1.71393, 1.32 ) }
    dend_25 { pt3dadd( -8.20769, -69.0294, 1.80357, 0.96 ) }
    dend_25 { pt3dadd( -8.01804, -69.5673, 1.86261, 0.72 ) }
    dend_25 { pt3dadd( -7.78489, -70.1247, 1.91394, 0.6 ) }
    dend_25 { pt3dadd( -7.3457, -70.9981, 2.02881, 0.48 ) }
    dend_25 { pt3dadd( -6.86033, -71.8065, 2.11858, 0.48 ) }
    dend_25 { pt3dadd( -6.33615, -72.5696, 2.19394, 1.44 ) }
    dend_25 { pt3dadd( -5.75047, -73.3559, 2.2566, 1.92 ) }
    dend_25 { pt3dadd( -5.30173, -73.9346, 2.31667, 2.04 ) }
    dend_25 { pt3dadd( -4.71775, -74.7199, 2.40942, 1.44 ) }
    dend_25 { pt3dadd( -4.02283, -75.7025, 2.50874, 0.84 ) }
    dend_25 { pt3dadd( -3.83033, -76.0077, 2.56964, 0.12 ) }
    dend_25 { pt3dadd( -3.60691, -76.4444, 2.71863, 0.12 ) }
    dend_25 { pt3dadd( -3.3548, -77.17, 3.10419, 1.32 ) }
    dend_25 { pt3dadd( -3.18471, -77.948, 3.61461, 1.68 ) }
    dend_25 { pt3dadd( -3.13104, -78.3171, 3.87352, 1.8 ) }
    dend_25 { pt3dadd( -2.92419, -79.8406, 4.98104, 1.2 ) }
    dend_25 { pt3dadd( -2.85598, -80.4944, 5.43983, 1.68 ) }
    dend_25 { pt3dadd( -2.7245, -81.5747, 6.19905, 1.2 ) }
    dend_25 { pt3dadd( -2.65125, -82.261, 6.69034, 0.24 ) }
    dend_25 { pt3dadd( -2.61719, -82.7217, 7.03541, 0.24 ) }
    dend_25 { pt3dadd( -2.58745, -83.5408, 7.62583, 1.92 ) }
    dend_25 { pt3dadd( -2.61614, -84.098, 7.97557, 1.8 ) }
    dend_25 { pt3dadd( -2.98772, -85.824, 9.04363, 0.72 ) }
    dend_25 { pt3dadd( -3.31496, -86.6982, 9.56337, 0.72 ) }
    dend_25 { pt3dadd( -3.63564, -87.2762, 9.90604, 0.48 ) }
    dend_25 { pt3dadd( -3.93504, -87.6764, 10.161, 0.36 ) }
    dend_25 { pt3dadd( -4.47608, -88.2787, 10.5311, 0.36 ) }
    dend_25 { pt3dadd( -4.78828, -88.6571, 10.7195, 0.36 ) }
    dend_25 { pt3dadd( -5.39892, -89.592, 11.2233, 0.6 ) }
    dend_25 { pt3dadd( -5.53107, -89.9402, 11.4356, 0.6 ) }
    dend_25 { pt3dadd( -5.66433, -90.3797, 11.7988, 0.36 ) }
    dend_25 { pt3dadd( -5.76804, -90.7052, 12.1185, 0.36 ) }
    dend_25 { pt3dadd( -5.87731, -91.105, 12.535, 0.36 ) }
    dend_25 { pt3dadd( -6.23163, -92.2534, 13.7925, 0.36 ) }
    dend_25 { pt3dadd( -6.33134, -92.4766, 14.0464, 0.36 ) }
    dend_25 { pt3dadd( -6.67589, -93.1955, 14.9564, 1.44 ) }
    dend_25 { pt3dadd( -6.81078, -93.4713, 15.3383, 1.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 75/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -5.67902, -61.3793, 0.297863, 0.12 ) }
    dend_16 { pt3dadd( -5.9682, -62.9642, 0.0598785, 0.12 ) }
    dend_16 { pt3dadd( -6.10641, -63.5336, -0.105371, 0.12 ) }
    dend_16 { pt3dadd( -6.2452, -64.0604, -0.287956, 0.96 ) }
    dend_16 { pt3dadd( -6.38743, -64.6676, -0.508972, 1.32 ) }
    dend_16 { pt3dadd( -6.47794, -65.1324, -0.684875, 1.32 ) }
    dend_16 { pt3dadd( -6.63132, -66.1471, -1.07376, 0.6 ) }
    dend_16 { pt3dadd( -6.73877, -66.9055, -1.46579, 0.36 ) }
    dend_16 { pt3dadd( -6.75184, -67.1045, -1.5823, 0.36 ) }
    dend_16 { pt3dadd( -6.72434, -67.5914, -1.87731, 0.36 ) }
    dend_16 { pt3dadd( -6.67886, -67.9028, -2.04006, 0.36 ) }
    dend_16 { pt3dadd( -6.63369, -68.226, -2.17497, 0.36 ) }
    dend_16 { pt3dadd( -6.59986, -68.8296, -2.35492, 0.36 ) }
    dend_16 { pt3dadd( -6.62179, -69.2331, -2.43474, 0.36 ) }
    dend_16 { pt3dadd( -6.69204, -69.811, -2.60991, 0.36 ) }
    dend_16 { pt3dadd( -6.81377, -70.4698, -2.81748, 1.08 ) }
    dend_16 { pt3dadd( -7.01956, -71.3548, -3.09234, 1.68 ) }
    dend_16 { pt3dadd( -7.19146, -71.9993, -3.2882, 1.8 ) }
    dend_16 { pt3dadd( -7.43637, -72.836, -3.51718, 1.56 ) }
    dend_16 { pt3dadd( -7.7739, -74.0769, -3.90011, 1.2 ) }
    dend_16 { pt3dadd( -7.90326, -74.6478, -4.08372, 0.36 ) }
    dend_16 { pt3dadd( -7.95155, -74.9579, -4.16359, 0.36 ) }
    dend_16 { pt3dadd( -7.98581, -75.3157, -4.19411, 0.36 ) }
    dend_16 { pt3dadd( -8.02175, -76.1743, -4.17284, 1.56 ) }
    dend_16 { pt3dadd( -8.02261, -76.8336, -4.11309, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_16 { pt3dadd( -8.00273, -77.6535, -3.97922, 1.92 ) }
    dend_16 { pt3dadd( -7.93253, -78.7755, -3.8016, 1.08 ) }
    dend_16 { pt3dadd( -7.83751, -79.7294, -3.6175, 0.36 ) }
    dend_16 { pt3dadd( -7.74709, -80.5044, -3.44542, 0.36 ) }
    dend_16 { pt3dadd( -7.6823, -81.0427, -3.25231, 0.36 ) }
    dend_16 { pt3dadd( -7.66159, -81.2531, -3.16225, 0.36 ) }
    dend_16 { pt3dadd( -7.61793, -81.7803, -2.93286, 0.96 ) }
    dend_16 { pt3dadd( -7.58012, -82.3433, -2.67115, 1.8 ) }
    dend_16 { pt3dadd( -7.54759, -82.9808, -2.41191, 2.16 ) }
    dend_16 { pt3dadd( -7.49783, -84.833, -1.69821, 1.92 ) }
    dend_16 { pt3dadd( -7.50179, -85.7412, -1.40299, 1.8 ) }
    dend_16 { pt3dadd( -7.53018, -86.5207, -1.2321, 1.8 ) }
    dend_16 { pt3dadd( -7.59921, -87.4527, -1.22827, 1.2 ) }
    dend_16 { pt3dadd( -7.73369, -88.7927, -1.6289, 0.12 ) }
    dend_16 { pt3dadd( -7.75534, -88.9972, -1.73278, 0.12 ) }
    dend_16 { pt3dadd( -7.817, -89.5563, -2.09535, 0.12 ) }
    dend_16 { pt3dadd( -7.88972, -90.2304, -2.53656, 0.84 ) }
    dend_16 { pt3dadd( -7.99195, -91.3498, -3.2895, 1.08 ) }
    dend_16 { pt3dadd( -8.06448, -92.355, -3.94499, 1.92 ) }
    dend_16 { pt3dadd( -8.10574, -93.1548, -4.38311, 2.88 ) }
    dend_16 { pt3dadd( -8.13247, -93.6612, -4.63463, 2.88 ) }
    dend_16 { pt3dadd( -8.1677, -94.3101, -4.94232, 1.92 ) }
    dend_16 { pt3dadd( -8.23427, -95.2356, -5.341, 0.36 ) }
    dend_16 { pt3dadd( -8.27817, -95.6725, -5.4888, 0.36 ) }
    dend_16 { pt3dadd( -8.34064, -96.2247, -5.62426, 1.08 ) }
    dend_16 { pt3dadd( -8.43217, -96.9154, -5.78102, 1.2 ) }
    dend_16 { pt3dadd( -8.57643, -97.9503, -5.97413, 0.48 ) }
    dend_16 { pt3dadd( -8.69797, -98.8424, -6.11668, 0.48 ) }
    dend_16 { pt3dadd( -8.81255, -99.6234, -6.21618, 0.48 ) }
    dend_16 { pt3dadd( -8.9981, -100.755, -6.3611, 1.92 ) }
    dend_16 { pt3dadd( -9.1461, -101.527, -6.45499, 2.4 ) }
    dend_16 { pt3dadd( -9.28474, -102.185, -6.5235, 2.64 ) }
    dend_16 { pt3dadd( -9.48974, -103.083, -6.5899, 2.64 ) }
    dend_16 { pt3dadd( -9.65396, -103.723, -6.65321, 2.04 ) }
    dend_16 { pt3dadd( -9.90474, -104.552, -6.7557, 0.72 ) }
    dend_16 { pt3dadd( -10.0418, -104.941, -6.79784, 0.72 ) }
    dend_16 { pt3dadd( -10.2337, -105.493, -6.81753, 0.72 ) }
    dend_16 { pt3dadd( -10.403, -106.03, -6.82741, 0.72 ) }
    dend_16 { pt3dadd( -10.593, -106.733, -6.8208, 0.24 ) }
    dend_16 { pt3dadd( -10.7309, -107.36, -6.73837, 0.12 ) }
    dend_16 { pt3dadd( -10.7792, -107.708, -6.65391, 0.12 ) }
    dend_16 { pt3dadd( -10.8145, -108.363, -6.44693, 0.12 ) }
    dend_16 { pt3dadd( -10.7695, -109.015, -6.20789, 1.2 ) }
    dend_16 { pt3dadd( -10.6751, -109.587, -5.99322, 2.28 ) }
    dend_16 { pt3dadd( -10.2976, -111.238, -5.39501, 1.8 ) }
    dend_16 { pt3dadd( -10.0579, -112.133, -5.10052, 0.36 ) }
    dend_16 { pt3dadd( -9.93797, -112.592, -4.99619, 0.36 ) }
    dend_16 { pt3dadd( -9.75396, -113.531, -4.88675, 0.36 ) }
    dend_16 { pt3dadd( -9.65581, -114.429, -4.88322, 0.36 ) }
    dend_16 { pt3dadd( -9.62766, -115.003, -4.97488, 0.36 ) }
    dend_16 { pt3dadd( -9.66149, -115.891, -5.26601, 0.36 ) }
    dend_16 { pt3dadd( -9.82898, -116.99, -5.67751, 1.56 ) }
    dend_16 { pt3dadd( -10.0175, -117.83, -5.99989, 2.4 ) }
    dend_16 { pt3dadd( -10.1447, -118.297, -6.17677, 2.4 ) }
    dend_16 { pt3dadd( -10.3519, -119.099, -6.45894, 2.4 ) }
    dend_16 { pt3dadd( -10.6067, -120.33, -6.82649, 0.48 ) }
    dend_16 { pt3dadd( -10.6836, -120.823, -6.93861, 0.48 ) }
    dend_16 { pt3dadd( -10.7406, -121.604, -7.04421, 0.6 ) }
    dend_16 { pt3dadd( -10.7355, -122.275, -7.11003, 0.36 ) }
    dend_16 { pt3dadd( -10.6939, -123.069, -7.17427, 0.36 ) }
    dend_16 { pt3dadd( -10.6362, -123.83, -7.21594, 0.48 ) }
    dend_16 { pt3dadd( -10.576, -124.386, -7.26316, 0.36 ) }
    dend_16 { pt3dadd( -10.497, -125.06, -7.3588, 0.36 ) }
    dend_16 { pt3dadd( -10.4403, -125.72, -7.49206, 0.36 ) }
    dend_16 { pt3dadd( -10.4361, -126.143, -7.61544, 0.48 ) }
    dend_16 { pt3dadd( -10.4801, -126.774, -7.86473, 0.48 ) }
    dend_16 { pt3dadd( -10.5935, -127.533, -8.18286, 0.36 ) }
    dend_16 { pt3dadd( -10.6928, -128.071, -8.40939, 0.84 ) }
    dend_16 { pt3dadd( -10.8743, -128.942, -8.73387, 1.32 ) }
    dend_16 { pt3dadd( -11.1319, -130.081, -9.10007, 2.16 ) }
    dend_16 { pt3dadd( -11.3516, -130.947, -9.35168, 2.64 ) }
    dend_16 { pt3dadd( -11.5955, -131.839, -9.5816, 2.28 ) }
    dend_16 { pt3dadd( -11.888, -132.838, -9.76335, 1.8 ) }
    dend_16 { pt3dadd( -12.1795, -133.868, -9.90487, 1.2 ) }
    dend_16 { pt3dadd( -12.3298, -134.46, -9.89377, 0.48 ) }
    dend_16 { pt3dadd( -12.5327, -135.444, -9.7601, 0.36 ) }
    dend_16 { pt3dadd( -12.6481, -136.114, -9.61312, 0.36 ) }
    dend_16 { pt3dadd( -12.7356, -136.798, -9.42426, 1.08 ) }
    dend_16 { pt3dadd( -12.781, -137.484, -9.18426, 1.08 ) }
    dend_16 { pt3dadd( -12.7601, -139.438, -8.45554, 1.44 ) }
    dend_16 { pt3dadd( -12.681, -140.54, -8.04702, 1.44 ) }
    dend_16 { pt3dadd( -12.5969, -141.304, -7.73321, 1.32 ) }
    dend_16 { pt3dadd( -12.5126, -142.048, -7.45959, 0.48 ) }
    dend_16 { pt3dadd( -12.4465, -142.662, -7.29104, 0.48 ) }
    dend_16 { pt3dadd( -12.4186, -143.038, -7.20896, 1.08 ) }
    dend_16 { pt3dadd( -12.386, -143.744, -7.11415, 1.68 ) }
    dend_16 { pt3dadd( -12.3835, -144.899, -6.91619, 2.28 ) }
    dend_16 { pt3dadd( -12.4306, -145.689, -6.80591, 2.4 ) }
    dend_16 { pt3dadd( -12.5514, -146.703, -6.72721, 1.32 ) }
    dend_16 { pt3dadd( -12.6803, -147.388, -6.70028, 0.6 ) }
    dend_16 { pt3dadd( -12.7914, -147.835, -6.73988, 0.48 ) }
    dend_16 { pt3dadd( -13.0288, -148.54, -6.94326, 0.48 ) }
    dend_16 { pt3dadd( -13.275, -149.167, -7.22995, 0.48 ) }
    dend_16 { pt3dadd( -13.5461, -149.864, -7.69632, 1.08 ) }
    dend_16 { pt3dadd( -13.7407, -150.463, -8.14196, 1.92 ) }
    dend_16 { pt3dadd( -14.0821, -151.739, -9.19228, 1.92 ) }
    dend_16 { pt3dadd( -14.3089, -152.787, -10.0891, 2.28 ) }
    dend_16 { pt3dadd( -14.4266, -153.48, -10.6862, 2.76 ) }
    dend_16 { pt3dadd( -14.6573, -155.164, -12.0741, 2.76 ) }
    dend_16 { pt3dadd( -14.8045, -156.464, -13.0428, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_16 { pt3dadd( -14.8899, -157.466, -13.6921, 0.72 ) }
    dend_16 { pt3dadd( -14.9443, -158.245, -14.0886, 0.96 ) }
    dend_16 { pt3dadd( -15.0007, -158.894, -14.3503, 1.56 ) }
    dend_16 { pt3dadd( -15.1077, -159.675, -14.5927, 1.8 ) }
    dend_16 { pt3dadd( -15.2286, -160.37, -14.7068, 1.44 ) }
    dend_16 { pt3dadd( -15.3432, -161.177, -14.8105, 0.48 ) }
    dend_16 { pt3dadd( -15.3573, -161.498, -14.8374, 0.6 ) }
    dend_16 { pt3dadd( -15.3314, -162.355, -14.9015, 0.6 ) }
    dend_16 { pt3dadd( -15.3035, -162.757, -14.9205, 0.48 ) }
    dend_16 { pt3dadd( -15.2327, -163.684, -14.9468, 0.48 ) }
    dend_16 { pt3dadd( -15.1935, -164.407, -14.9572, 0.48 ) }
    dend_16 { pt3dadd( -15.1796, -165.3, -14.9292, 0.48 ) }
    dend_16 { pt3dadd( -15.2056, -166.185, -14.9043, 0.84 ) }
    dend_16 { pt3dadd( -15.3014, -167.332, -14.8716, 1.68 ) }
    dend_16 { pt3dadd( -15.4702, -168.577, -14.8342, 2.4 ) }
    dend_16 { pt3dadd( -15.6018, -169.388, -14.8071, 2.4 ) }
    dend_16 { pt3dadd( -15.7804, -170.519, -14.7811, 0.6 ) }
    dend_16 { pt3dadd( -15.8704, -171.304, -14.7663, 0.6 ) }
    dend_16 { pt3dadd( -15.8968, -172.327, -14.7848, 0.6 ) }
    dend_16 { pt3dadd( -15.8208, -173.233, -14.8241, 0.6 ) }
    dend_16 { pt3dadd( -15.6768, -173.978, -14.8482, 1.08 ) }
    dend_16 { pt3dadd( -15.4782, -174.71, -14.8596, 1.44 ) }
    dend_16 { pt3dadd( -15.2694, -175.359, -14.8608, 0.84 ) }
    dend_16 { pt3dadd( -15.0326, -176.08, -14.8269, 0.96 ) }
    dend_16 { pt3dadd( -14.7926, -176.907, -14.7711, 0.96 ) }
    dend_16 { pt3dadd( -14.6603, -177.521, -14.7252, 0.72 ) }
    dend_16 { pt3dadd( -14.5979, -177.982, -14.6913, 0.48 ) }
    dend_16 { pt3dadd( -14.5693, -178.396, -14.6594, 0.48 ) }
    dend_16 { pt3dadd( -14.576, -178.969, -14.6048, 1.32 ) }
    dend_16 { pt3dadd( -14.6603, -179.913, -14.4999, 1.8 ) }
    dend_16 { pt3dadd( -14.758, -180.601, -14.4644, 2.04 ) }
    dend_16 { pt3dadd( -14.9239, -181.528, -14.4698, 1.92 ) }
    dend_16 { pt3dadd( -15.06, -182.218, -14.5012, 1.44 ) }
    dend_16 { pt3dadd( -15.2364, -183.078, -14.5873, 0.48 ) }
    dend_16 { pt3dadd( -15.3928, -183.809, -14.7176, 0.48 ) }
    dend_16 { pt3dadd( -15.6369, -184.986, -15.0001, 1.44 ) }
    dend_16 { pt3dadd( -15.8416, -186.009, -15.2676, 2.52 ) }
    dend_16 { pt3dadd( -16.0057, -186.898, -15.5083, 3.25 ) }
    dend_16 { pt3dadd( -16.2, -188.17, -15.8628, 2.28 ) }
    dend_16 { pt3dadd( -16.2887, -189.053, -16.0979, 1.8 ) }
    dend_16 { pt3dadd( -16.3256, -190.05, -16.333, 0.96 ) }
    dend_16 { pt3dadd( -16.3161, -191.39, -16.5951, 0.96 ) }
    dend_16 { pt3dadd( -16.2743, -192.396, -16.7879, 0.96 ) }
    dend_16 { pt3dadd( -16.1977, -193.687, -17.0176, 2.52 ) }
    dend_16 { pt3dadd( -16.1286, -194.643, -17.1377, 2.52 ) }
    dend_16 { pt3dadd( -15.9984, -196.241, -17.2662, 1.44 ) }
    dend_16 { pt3dadd( -15.9281, -197.028, -17.3088, 0.96 ) }
    dend_16 { pt3dadd( -15.8389, -197.945, -17.357, 0.72 ) }
    dend_16 { pt3dadd( -15.799, -198.413, -17.3766, 0.72 ) }
    dend_16 { pt3dadd( -15.7522, -199.318, -17.4454, 0.72 ) }
    dend_16 { pt3dadd( -15.7584, -199.997, -17.5365, 0.72 ) }
    dend_16 { pt3dadd( -15.7865, -200.76, -17.7418, 1.08 ) }
    dend_16 { pt3dadd( -15.7847, -201.509, -18.1128, 1.44 ) }
    dend_16 { pt3dadd( -15.7691, -201.784, -18.29, 1.44 ) }
    dend_16 { pt3dadd( -15.6753, -202.92, -19.1639, 0.36 ) }
    dend_16 { pt3dadd( -15.5715, -203.883, -19.9874, 0.36 ) }
    dend_16 { pt3dadd( -15.4186, -205.018, -20.9671, 1.32 ) }
    dend_16 { pt3dadd( -15.2025, -206.324, -22.0465, 0.48 ) }
    dend_16 { pt3dadd( -15.0999, -206.861, -22.4542, 0.48 ) }
    dend_16 { pt3dadd( -14.8642, -207.975, -23.2244, 1.92 ) }
    dend_16 { pt3dadd( -14.7895, -208.321, -23.4298, 2.76 ) }
    dend_16 { pt3dadd( -14.632, -209.136, -23.8306, 2.4 ) }
    dend_16 { pt3dadd( -14.54, -209.908, -24.0538, 1.32 ) }
    dend_16 { pt3dadd( -14.5303, -210.354, -24.195, 0.12 ) }
    dend_16 { pt3dadd( -14.5642, -210.787, -24.3855, 0.12 ) }
    dend_16 { pt3dadd( -14.6088, -211.002, -24.5033, 0.12 ) }
    dend_16 { pt3dadd( -14.7865, -211.659, -24.944, 1.08 ) }
    dend_16 { pt3dadd( -14.9088, -212.106, -25.2949, 1.08 ) }
    dend_16 { pt3dadd( -15.3428, -214.0, -27.0156, 0.24 ) }
    dend_16 { pt3dadd( -15.3688, -214.267, -27.2688, 0.24 ) }
    dend_16 { pt3dadd( -15.3378, -214.771, -27.7239, 0.24 ) }
    dend_16 { pt3dadd( -15.173, -215.376, -28.1809, 0.24 ) }
    dend_16 { pt3dadd( -14.8511, -216.033, -28.5674, 0.24 ) }
    dend_16 { pt3dadd( -14.3556, -216.868, -29.0113, 1.08 ) }
    dend_16 { pt3dadd( -13.8905, -217.6, -29.3093, 2.04 ) }
    dend_16 { pt3dadd( -13.4875, -218.278, -29.5973, 2.04 ) }
    dend_16 { pt3dadd( -13.0251, -219.12, -29.9615, 1.44 ) }
    dend_16 { pt3dadd( -12.8477, -219.546, -30.127, 0.96 ) }
    dend_16 { pt3dadd( -12.3845, -221.139, -30.6454, 0.72 ) }
    dend_16 { pt3dadd( -12.2556, -221.795, -30.804, 0.36 ) }
    dend_16 { pt3dadd( -12.1981, -222.574, -30.974, 0.36 ) }
    dend_16 { pt3dadd( -12.2072, -222.923, -31.0224, 0.36 ) }
    dend_16 { pt3dadd( -12.2919, -223.774, -31.0439, 1.32 ) }
    dend_16 { pt3dadd( -12.3783, -224.489, -30.9907, 2.04 ) }
    dend_16 { pt3dadd( -12.4205, -224.834, -30.935, 2.4 ) }
    dend_16 { pt3dadd( -12.4886, -225.333, -30.8503, 2.4 ) }
    dend_16 { pt3dadd( -12.6666, -226.643, -30.6279, 0.48 ) }
    dend_16 { pt3dadd( -12.7571, -227.314, -30.5205, 0.36 ) }
    dend_16 { pt3dadd( -12.9083, -228.532, -30.3691, 0.36 ) }
    dend_16 { pt3dadd( -12.9883, -229.217, -30.292, 0.36 ) }
    dend_16 { pt3dadd( -13.0756, -229.97, -30.2193, 1.68 ) }
    dend_16 { pt3dadd( -13.1215, -230.531, -30.1768, 2.16 ) }
    dend_16 { pt3dadd( -13.1331, -230.891, -30.1621, 2.16 ) }
    dend_16 { pt3dadd( -13.1188, -231.838, -30.1184, 0.96 ) }
    dend_16 { pt3dadd( -13.082, -232.401, -30.118, 0.36 ) }
    dend_16 { pt3dadd( -13.0488, -232.74, -30.1571, 0.36 ) }
    dend_16 { pt3dadd( -12.9446, -233.574, -30.3598, 0.36 ) }
    dend_16 { pt3dadd( -12.8415, -234.391, -30.6231, 0.36 ) }
    dend_16 { pt3dadd( -12.7687, -234.962, -30.8152, 0.36 ) }
    dend_16 { pt3dadd( -12.6682, -235.867, -31.1172, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_16 { pt3dadd( -12.5844, -237.112, -31.5005, 2.4 ) }
    dend_16 { pt3dadd( -12.5675, -237.761, -31.6673, 2.52 ) }
    dend_16 { pt3dadd( -12.578, -238.071, -31.7297, 2.52 ) }
    dend_16 { pt3dadd( -12.6722, -239.186, -31.875, 0.48 ) }
    dend_16 { pt3dadd( -12.7396, -239.879, -31.9262, 0.36 ) }
    dend_16 { pt3dadd( -12.879, -241.111, -31.8713, 0.36 ) }
    dend_16 { pt3dadd( -12.9448, -241.666, -31.784, 1.32 ) }
    dend_16 { pt3dadd( -13.0355, -242.36, -31.646, 1.92 ) }
    dend_16 { pt3dadd( -13.1098, -242.952, -31.536, 1.92 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 9/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.31149, 25.2978, 5.74237, 1.92 ) }
    dend_2 { pt3dadd( 7.37445, 28.3386, 5.68177, 1.92 ) }
    dend_2 { pt3dadd( 7.3726, 29.8075, 5.67279, 2.28 ) }
    dend_2 { pt3dadd( 7.36052, 31.1558, 5.71599, 1.8 ) }
    dend_2 { pt3dadd( 7.35304, 32.7351, 5.79456, 1.8 ) }
    dend_2 { pt3dadd( 7.36177, 34.8818, 5.92052, 1.68 ) }
    dend_2 { pt3dadd( 7.39932, 37.3836, 6.07868, 2.4 ) }
    dend_2 { pt3dadd( 7.44165, 39.2899, 6.33617, 2.88 ) }
    dend_2 { pt3dadd( 7.47728, 40.2984, 6.45599, 2.76 ) }
    dend_2 { pt3dadd( 7.53343, 41.2196, 6.58431, 2.76 ) }
    dend_2 { pt3dadd( 7.60449, 41.916, 6.72347, 2.76 ) }
    dend_2 { pt3dadd( 7.73328, 42.7055, 6.92157, 2.52 ) }
    dend_2 { pt3dadd( 8.12448, 44.3827, 7.39354, 1.68 ) }
    dend_2 { pt3dadd( 8.37909, 45.3582, 7.68181, 1.44 ) }
    dend_2 { pt3dadd( 8.67738, 46.4644, 7.99933, 1.68 ) }
    dend_2 { pt3dadd( 9.22662, 48.4787, 8.62308, 2.64 ) }
    dend_2 { pt3dadd( 9.56719, 49.7057, 9.02582, 2.88 ) }
    dend_2 { pt3dadd( 9.77113, 50.4007, 9.26444, 3.12 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 27/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.31149, 25.2978, 5.74237, 0.84 ) }
    dend_1 { pt3dadd( 6.69559, 25.1092, 5.88983, 0.84 ) }
    dend_1 { pt3dadd( 5.71605, 25.0053, 6.11576, 0.84 ) }
    dend_1 { pt3dadd( 5.04453, 25.099, 6.35601, 0.84 ) }
    dend_1 { pt3dadd( 4.84841, 25.1771, 6.46727, 0.84 ) }
    dend_1 { pt3dadd( 4.39348, 25.5223, 6.81526, 0.72 ) }
    dend_1 { pt3dadd( 4.07846, 25.9357, 7.29466, 0.72 ) }
    dend_1 { pt3dadd( 3.96269, 26.2222, 7.66939, 0.72 ) }
    dend_1 { pt3dadd( 3.9526, 26.7597, 8.38478, 0.96 ) }
    dend_1 { pt3dadd( 4.0811, 27.1628, 8.96614, 1.44 ) }
    dend_1 { pt3dadd( 4.3251, 27.5845, 9.58021, 1.56 ) }
    dend_1 { pt3dadd( 4.93134, 28.3089, 10.6937, 1.32 ) }
    dend_1 { pt3dadd( 5.39497, 28.7422, 11.4036, 0.48 ) }
    dend_1 { pt3dadd( 5.82135, 29.071, 11.9367, 0.6 ) }
    dend_1 { pt3dadd( 6.70346, 29.6185, 12.8314, 0.6 ) }
    dend_1 { pt3dadd( 7.26235, 29.8907, 13.2575, 1.68 ) }
    dend_1 { pt3dadd( 8.2968, 30.2335, 13.7018, 1.92 ) }
    dend_1 { pt3dadd( 9.11169, 30.3986, 13.6178, 1.56 ) }
    dend_1 { pt3dadd( 11.5189, 30.4427, 11.9004, 0.48 ) }
    dend_1 { pt3dadd( 11.9856, 30.3913, 11.3235, 0.48 ) }
    dend_1 { pt3dadd( 12.3481, 30.3321, 10.7921, 0.84 ) }
    dend_1 { pt3dadd( 12.5414, 30.273, 10.41, 0.72 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 49/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -4.56437, -42.6406, -0.718029, 0.460382 ) }
    axon_1 { pt3dadd( -6.31129, -57.5385, -0.718029, 0.460382 ) }
    axon_1 { pt3dadd( -8.0582, -72.4364, -0.718029, 0.460382 ) }
    // Section: dend_54, id: dend_54, parent: dend_48 (entry count 52/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -0.0730332, 23.9691, -18.9382, 0.96 ) }
    dend_54 { pt3dadd( 0.986722, 25.9446, -19.594, 0.96 ) }
    dend_54 { pt3dadd( 1.51494, 27.0992, -19.8858, 0.6 ) }
    dend_54 { pt3dadd( 1.94533, 28.2316, -20.1249, 0.6 ) }
    dend_54 { pt3dadd( 2.13703, 28.8529, -20.2401, 1.32 ) }
    dend_54 { pt3dadd( 2.26974, 29.4162, -20.312, 1.56 ) }
    dend_54 { pt3dadd( 2.44286, 30.5151, -20.3974, 0.96 ) }
    dend_54 { pt3dadd( 2.45406, 31.8669, -20.3197, 0.6 ) }
    dend_54 { pt3dadd( 2.39963, 32.5068, -20.2556, 0.48 ) }
    dend_54 { pt3dadd( 2.32567, 33.0639, -20.1969, 0.48 ) }
    dend_54 { pt3dadd( 2.17022, 34.1992, -20.0871, 0.72 ) }
    dend_54 { pt3dadd( 2.00325, 35.5649, -19.999, 1.8 ) }
    dend_54 { pt3dadd( 1.89835, 36.8125, -19.9621, 2.04 ) }
    dend_54 { pt3dadd( 1.87372, 37.8257, -19.9637, 2.64 ) }
    dend_54 { pt3dadd( 1.91449, 38.9591, -20.0378, 3.25 ) }
    dend_54 { pt3dadd( 1.99938, 39.9819, -20.1616, 3.25 ) }
    dend_54 { pt3dadd( 2.13042, 41.0139, -20.3442, 2.88 ) }
    dend_54 { pt3dadd( 2.35358, 42.3776, -20.6097, 0.84 ) }
    dend_54 { pt3dadd( 2.45156, 42.9328, -20.716, 0.6 ) }
    dend_54 { pt3dadd( 2.68251, 44.356, -20.9691, 2.4 ) }
    dend_54 { pt3dadd( 2.8218, 45.3591, -21.1276, 3.25 ) }
    dend_54 { pt3dadd( 2.93463, 46.3115, -21.2469, 2.88 ) }
    dend_54 { pt3dadd( 3.1044, 47.8903, -21.3964, 0.96 ) }
    dend_54 { pt3dadd( 3.2856, 49.569, -21.5631, 0.84 ) }
    dend_54 { pt3dadd( 3.39905, 50.6026, -21.6734, 0.48 ) }
    dend_54 { pt3dadd( 3.48047, 51.3071, -21.7449, 0.48 ) }
    dend_54 { pt3dadd( 3.635, 52.6684, -21.904, 0.48 ) }
    dend_54 { pt3dadd( 3.75243, 53.7354, -22.051, 1.92 ) }
    dend_54 { pt3dadd( 3.91373, 55.007, -22.2697, 3.37 ) }
    dend_54 { pt3dadd( 4.05369, 55.8391, -22.4477, 3.49 ) }
    dend_54 { pt3dadd( 4.27863, 56.8318, -22.6928, 3.0 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 83/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -0.0730332, 23.9691, -18.9382, 0.84 ) }
    dend_49 { pt3dadd( -1.90552, 24.8951, -19.2577, 0.84 ) }
    dend_49 { pt3dadd( -2.34199, 25.2482, -19.4348, 0.72 ) }
    dend_49 { pt3dadd( -2.62331, 25.5772, -19.6116, 0.72 ) }
    dend_49 { pt3dadd( -2.86261, 26.0225, -19.8997, 0.72 ) }
    dend_49 { pt3dadd( -3.20189, 26.8469, -20.6119, 0.84 ) }
    dend_49 { pt3dadd( -3.59398, 27.848, -21.5761, 0.72 ) }
    dend_49 { pt3dadd( -3.76599, 28.567, -22.3202, 0.48 ) }
    dend_49 { pt3dadd( -3.90714, 29.2442, -23.0401, 0.48 ) }
    dend_49 { pt3dadd( -4.15296, 30.4256, -24.309, 0.72 ) }
    dend_49 { pt3dadd( -4.46549, 31.652, -25.6377, 0.48 ) }
    dend_49 { pt3dadd( -4.5765, 31.9548, -25.9995, 0.48 ) }
    dend_49 { pt3dadd( -4.70867, 32.2113, -26.2991, 0.48 ) }
    dend_49 { pt3dadd( -5.00503, 32.6675, -26.8205, 1.32 ) }
    dend_49 { pt3dadd( -5.34508, 33.1085, -27.3276, 2.04 ) }
    dend_49 { pt3dadd( -5.85547, 33.7084, -27.9658, 1.56 ) }
    dend_49 { pt3dadd( -6.92125, 35.0226, -29.2792, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -7.166, 35.3351, -29.6114, 0.36 ) }
    dend_49 { pt3dadd( -8.08362, 36.5158, -30.9768, 2.4 ) }
    dend_49 { pt3dadd( -8.46039, 37.0094, -31.6088, 3.25 ) }
    dend_49 { pt3dadd( -8.69288, 37.3222, -32.0451, 3.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_27 (entry count 4/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 14.1093, -14.902, -21.5392, 0.24 ) }
    dend_41 { pt3dadd( 13.6139, -16.5083, -21.9243, 0.24 ) }
    dend_41 { pt3dadd( 13.4719, -17.078, -22.0851, 0.24 ) }
    dend_41 { pt3dadd( 13.2715, -18.1525, -22.3764, 1.92 ) }
    dend_41 { pt3dadd( 13.1062, -19.006, -22.5886, 2.52 ) }
    dend_41 { pt3dadd( 12.9545, -19.6963, -22.7467, 2.4 ) }
    dend_41 { pt3dadd( 12.7845, -20.4071, -22.9009, 1.8 ) }
    dend_41 { pt3dadd( 12.5826, -21.3353, -23.0929, 0.24 ) }
    dend_41 { pt3dadd( 12.3204, -22.4325, -23.2739, 0.24 ) }
    dend_41 { pt3dadd( 12.0392, -23.5265, -23.3992, 0.24 ) }
    dend_41 { pt3dadd( 11.8295, -24.2809, -23.4549, 0.24 ) }
    dend_41 { pt3dadd( 11.6196, -24.9751, -23.5131, 1.68 ) }
    dend_41 { pt3dadd( 11.258, -26.0747, -23.6023, 1.92 ) }
    dend_41 { pt3dadd( 10.8262, -27.294, -23.7123, 2.28 ) }
    dend_41 { pt3dadd( 10.4666, -28.2429, -23.817, 3.12 ) }
    dend_41 { pt3dadd( 10.0831, -29.2123, -23.9359, 3.12 ) }
    dend_41 { pt3dadd( 9.35095, -30.9376, -24.1279, 0.24 ) }
    dend_41 { pt3dadd( 9.04151, -31.5968, -24.1883, 0.24 ) }
    dend_41 { pt3dadd( 8.96499, -31.7404, -24.199, 0.48 ) }
    dend_41 { pt3dadd( 8.62452, -32.2979, -24.2211, 0.48 ) }
    dend_41 { pt3dadd( 8.11698, -33.0391, -24.2058, 0.48 ) }
    dend_41 { pt3dadd( 7.77951, -33.5415, -24.1482, 0.48 ) }
    dend_41 { pt3dadd( 7.6307, -33.8011, -24.0784, 0.12 ) }
    dend_41 { pt3dadd( 7.41834, -34.3567, -23.9421, 0.12 ) }
    dend_41 { pt3dadd( 7.3343, -34.6621, -23.8731, 0.12 ) }
    dend_41 { pt3dadd( 7.25581, -35.1094, -23.7867, 0.72 ) }
    dend_41 { pt3dadd( 7.15368, -36.0048, -23.6522, 0.96 ) }
    dend_41 { pt3dadd( 7.09727, -36.5706, -23.6063, 0.24 ) }
    dend_41 { pt3dadd( 6.98411, -37.6856, -23.5603, 0.24 ) }
    dend_41 { pt3dadd( 6.93567, -38.1709, -23.5276, 0.96 ) }
    dend_41 { pt3dadd( 6.87536, -38.7307, -23.4816, 1.44 ) }
    dend_41 { pt3dadd( 6.7846, -39.4164, -23.4216, 1.56 ) }
    dend_41 { pt3dadd( 6.62694, -40.3519, -23.3411, 0.48 ) }
    dend_41 { pt3dadd( 6.51287, -40.9602, -23.2933, 0.24 ) }
    dend_41 { pt3dadd( 6.29872, -42.0795, -23.1989, 1.68 ) }
    dend_41 { pt3dadd( 6.1725, -42.8672, -23.15, 2.88 ) }
    dend_41 { pt3dadd( 6.0232, -44.0087, -23.0635, 2.88 ) }
    dend_41 { pt3dadd( 5.88243, -45.5115, -22.9408, 0.24 ) }
    dend_41 { pt3dadd( 5.81751, -46.7628, -22.8253, 0.24 ) }
    dend_41 { pt3dadd( 5.81018, -47.2312, -22.7858, 0.24 ) }
    dend_41 { pt3dadd( 5.83588, -48.6794, -22.705, 0.24 ) }
    dend_41 { pt3dadd( 5.88541, -49.5992, -22.6545, 1.8 ) }
    dend_41 { pt3dadd( 5.98115, -50.6067, -22.5905, 2.76 ) }
    dend_41 { pt3dadd( 6.1584, -51.9825, -22.4953, 0.48 ) }
    dend_41 { pt3dadd( 6.25627, -52.7636, -22.4391, 0.48 ) }
    dend_41 { pt3dadd( 6.31, -53.3765, -22.3959, 0.6 ) }
    dend_41 { pt3dadd( 6.3394, -54.0603, -22.3282, 0.6 ) }
    dend_41 { pt3dadd( 6.33871, -54.591, -22.289, 0.36 ) }
    dend_41 { pt3dadd( 6.31607, -55.1591, -22.2455, 0.36 ) }
    dend_41 { pt3dadd( 6.21071, -56.0846, -22.2396, 0.48 ) }
    dend_41 { pt3dadd( 6.01754, -57.3115, -22.2811, 0.48 ) }
    dend_41 { pt3dadd( 5.85525, -58.1369, -22.3326, 1.44 ) }
    dend_41 { pt3dadd( 5.63405, -59.1836, -22.4674, 2.76 ) }
    dend_41 { pt3dadd( 5.46567, -60.0581, -22.6306, 3.0 ) }
    dend_41 { pt3dadd( 5.1627, -61.8788, -23.1375, 0.12 ) }
    dend_41 { pt3dadd( 5.08246, -62.4145, -23.326, 0.12 ) }
    dend_41 { pt3dadd( 4.97207, -63.173, -23.6373, 0.12 ) }
    dend_41 { pt3dadd( 4.85573, -64.0429, -24.0232, 1.32 ) }
    dend_41 { pt3dadd( 4.75234, -64.8805, -24.3856, 2.4 ) }
    dend_41 { pt3dadd( 4.51919, -66.5446, -25.0519, 0.12 ) }
    dend_41 { pt3dadd( 4.39248, -67.3555, -25.3233, 0.12 ) }
    dend_41 { pt3dadd( 4.29258, -67.8375, -25.4669, 0.84 ) }
    dend_41 { pt3dadd( 4.15667, -68.368, -25.6004, 0.96 ) }
    dend_41 { pt3dadd( 3.79926, -69.6134, -25.8235, 0.12 ) }
    dend_41 { pt3dadd( 3.5212, -70.5419, -25.9514, 0.12 ) }
    dend_41 { pt3dadd( 3.32008, -71.2716, -26.009, 1.32 ) }
    dend_41 { pt3dadd( 3.15074, -71.9635, -26.0598, 1.8 ) }
    dend_41 { pt3dadd( 2.94825, -72.8965, -26.1136, 0.12 ) }
    dend_41 { pt3dadd( 2.69286, -74.1217, -26.1596, 0.12 ) }
    dend_41 { pt3dadd( 2.56908, -74.7858, -26.1697, 1.56 ) }
    dend_41 { pt3dadd( 2.45969, -75.5756, -26.1757, 2.52 ) }
    dend_41 { pt3dadd( 2.38732, -76.2657, -26.1747, 2.64 ) }
    dend_41 { pt3dadd( 2.2745, -77.7438, -26.1574, 1.32 ) }
    dend_41 { pt3dadd( 2.22573, -78.4111, -26.141, 0.12 ) }
    dend_41 { pt3dadd( 2.21529, -78.5342, -26.1379, 0.24 ) }
    dend_41 { pt3dadd( 2.12999, -79.3986, -26.133, 0.24 ) }
    dend_41 { pt3dadd( 2.02651, -80.4103, -26.145, 0.24 ) }
    dend_41 { pt3dadd( 1.95364, -81.088, -26.2096, 0.24 ) }
    dend_41 { pt3dadd( 1.90325, -81.5568, -26.2876, 0.24 ) }
    dend_41 { pt3dadd( 1.85228, -82.0156, -26.3822, 1.56 ) }
    dend_41 { pt3dadd( 1.756, -82.734, -26.5441, 2.28 ) }
    dend_41 { pt3dadd( 1.65298, -83.3939, -26.7178, 2.28 ) }
    dend_41 { pt3dadd( 1.42049, -84.8798, -27.1468, 0.48 ) }
    dend_41 { pt3dadd( 1.28053, -85.7398, -27.3986, 0.48 ) }
    dend_41 { pt3dadd( 1.26255, -85.8488, -27.4287, 0.72 ) }
    dend_41 { pt3dadd( 1.12259, -86.6124, -27.623, 0.96 ) }
    dend_41 { pt3dadd( 0.992292, -87.2534, -27.7545, 0.48 ) }
    dend_41 { pt3dadd( 0.907433, -87.5892, -27.8236, 0.48 ) }
    dend_41 { pt3dadd( 0.753934, -88.1361, -27.8942, 0.48 ) }
    dend_41 { pt3dadd( 0.542159, -88.8609, -27.9763, 0.6 ) }
    dend_41 { pt3dadd( 0.47334, -89.1063, -27.9992, 0.24 ) }
    dend_41 { pt3dadd( 0.280133, -89.8793, -28.0616, 0.24 ) }
    dend_41 { pt3dadd( 0.0510877, -91.0064, -28.1272, 1.56 ) }
    dend_41 { pt3dadd( -0.103732, -91.9137, -28.1796, 2.4 ) }
    dend_41 { pt3dadd( -0.220781, -92.7258, -28.2242, 2.52 ) }
    dend_41 { pt3dadd( -0.27778, -93.1781, -28.2458, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_41 { pt3dadd( -0.452257, -94.6508, -28.2766, 0.24 ) }
    dend_41 { pt3dadd( -0.613115, -96.4529, -28.2629, 0.24 ) }
    dend_41 { pt3dadd( -0.640349, -96.9267, -28.2482, 0.96 ) }
    dend_41 { pt3dadd( -0.66153, -97.6103, -28.2333, 1.44 ) }
    dend_41 { pt3dadd( -0.658802, -98.0709, -28.2174, 1.68 ) }
    dend_41 { pt3dadd( -0.620223, -99.0671, -28.1932, 0.24 ) }
    dend_41 { pt3dadd( -0.470871, -100.787, -28.1616, 0.24 ) }
    dend_41 { pt3dadd( -0.353958, -101.692, -28.1604, 1.56 ) }
    dend_41 { pt3dadd( -0.269558, -102.258, -28.1726, 2.16 ) }
    dend_41 { pt3dadd( -0.172139, -102.868, -28.2039, 1.8 ) }
    dend_41 { pt3dadd( -0.0398079, -103.915, -28.2959, 0.12 ) }
    dend_41 { pt3dadd( 0.00244794, -104.514, -28.379, 0.12 ) }
    dend_41 { pt3dadd( -0.00371066, -104.627, -28.3958, 0.6 ) }
    dend_41 { pt3dadd( -0.0787242, -105.097, -28.4603, 0.12 ) }
    dend_41 { pt3dadd( -0.163175, -105.447, -28.4998, 0.12 ) }
    dend_41 { pt3dadd( -0.412169, -106.296, -28.5667, 0.12 ) }
    dend_41 { pt3dadd( -0.527719, -106.692, -28.5766, 0.6 ) }
    dend_41 { pt3dadd( -0.697401, -107.358, -28.5188, 0.6 ) }
    dend_41 { pt3dadd( -0.791653, -107.804, -28.4419, 0.12 ) }
    dend_41 { pt3dadd( -0.891467, -108.344, -28.3169, 0.12 ) }
    dend_41 { pt3dadd( -0.979063, -108.793, -28.2019, 0.6 ) }
    dend_41 { pt3dadd( -1.09071, -109.448, -28.024, 0.6 ) }
    dend_41 { pt3dadd( -1.28332, -110.692, -27.6845, 0.12 ) }
    dend_41 { pt3dadd( -1.39857, -111.519, -27.4659, 0.12 ) }
    dend_41 { pt3dadd( -1.50333, -112.351, -27.2636, 1.44 ) }
    dend_41 { pt3dadd( -1.60083, -113.212, -27.0828, 2.4 ) }
    dend_41 { pt3dadd( -1.64105, -113.616, -27.0158, 2.52 ) }
    dend_41 { pt3dadd( -1.69745, -114.268, -26.9491, 2.16 ) }
    dend_41 { pt3dadd( -1.70285, -115.067, -26.9368, 0.12 ) }
    dend_41 { pt3dadd( -1.65483, -115.748, -26.8893, 0.36 ) }
    dend_41 { pt3dadd( -1.59985, -116.189, -26.8381, 0.12 ) }
    dend_41 { pt3dadd( -1.54873, -116.524, -26.7854, 0.12 ) }
    dend_41 { pt3dadd( -1.46813, -117.013, -26.7067, 0.12 ) }
    dend_41 { pt3dadd( -1.31278, -117.881, -26.5655, 0.12 ) }
    dend_41 { pt3dadd( -1.11408, -118.881, -26.4133, 0.12 ) }
    dend_41 { pt3dadd( -1.07837, -119.105, -26.3875, 0.12 ) }
    dend_41 { pt3dadd( -1.02035, -119.788, -26.3367, 0.12 ) }
    dend_41 { pt3dadd( -1.00779, -120.585, -26.3406, 1.8 ) }
    dend_41 { pt3dadd( -1.01651, -120.926, -26.3647, 2.28 ) }
    dend_41 { pt3dadd( -1.06964, -121.608, -26.3905, 1.92 ) }
    dend_41 { pt3dadd( -1.15766, -122.727, -26.374, 0.36 ) }
    dend_41 { pt3dadd( -1.23239, -123.582, -26.3211, 0.36 ) }
    dend_41 { pt3dadd( -1.29502, -124.37, -26.2426, 1.2 ) }
    dend_41 { pt3dadd( -1.32666, -125.067, -26.0919, 0.72 ) }
    dend_41 { pt3dadd( -1.29197, -126.489, -25.7976, 0.12 ) }
    dend_41 { pt3dadd( -1.2152, -127.771, -25.5415, 0.12 ) }
    dend_41 { pt3dadd( -1.14003, -128.61, -25.3824, 1.68 ) }
    dend_41 { pt3dadd( -1.08424, -129.262, -25.2604, 1.8 ) }
    dend_41 { pt3dadd( -0.960663, -130.996, -24.9147, 1.44 ) }
    dend_41 { pt3dadd( -0.865802, -132.746, -24.6465, 0.24 ) }
    dend_41 { pt3dadd( -0.759326, -134.427, -24.4197, 0.12 ) }
    dend_41 { pt3dadd( -0.707976, -135.205, -24.2937, 0.12 ) }
    dend_41 { pt3dadd( -0.640368, -136.543, -24.0335, 0.12 ) }
    dend_41 { pt3dadd( -0.619403, -137.194, -23.9156, 1.2 ) }
    dend_41 { pt3dadd( -0.587337, -138.088, -23.7823, 2.52 ) }
    dend_41 { pt3dadd( -0.509219, -139.48, -23.4152, 0.48 ) }
    dend_41 { pt3dadd( -0.472159, -139.8, -23.3265, 0.48 ) }
    dend_41 { pt3dadd( -0.349382, -140.588, -23.1075, 0.48 ) }
    dend_41 { pt3dadd( -0.182938, -141.445, -22.8917, 0.72 ) }
    dend_41 { pt3dadd( 0.0385509, -142.556, -22.6325, 0.24 ) }
    dend_41 { pt3dadd( 0.261308, -143.728, -22.2805, 0.12 ) }
    dend_41 { pt3dadd( 0.457221, -144.607, -22.024, 0.12 ) }
    dend_41 { pt3dadd( 0.593313, -145.086, -21.8987, 1.08 ) }
    dend_41 { pt3dadd( 0.773643, -145.612, -21.7453, 1.32 ) }
    dend_41 { pt3dadd( 0.943051, -146.039, -21.6283, 1.08 ) }
    dend_41 { pt3dadd( 1.4066, -147.153, -21.3569, 0.36 ) }
    dend_41 { pt3dadd( 2.12005, -148.821, -21.0684, 0.36 ) }
    dend_41 { pt3dadd( 2.60914, -149.943, -20.8669, 1.56 ) }
    dend_41 { pt3dadd( 3.03228, -150.923, -20.6983, 2.16 ) }
    dend_41 { pt3dadd( 3.40761, -151.704, -20.5807, 1.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 70/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.1093, -14.902, -21.5392, 0.36 ) }
    dend_28 { pt3dadd( 15.7922, -16.0321, -21.9831, 0.36 ) }
    dend_28 { pt3dadd( 16.3366, -16.1923, -22.2878, 0.36 ) }
    dend_28 { pt3dadd( 16.6263, -16.2026, -22.5176, 0.36 ) }
    dend_28 { pt3dadd( 16.8884, -16.1946, -22.7332, 0.36 ) }
    dend_28 { pt3dadd( 17.5242, -16.177, -23.2413, 0.72 ) }
    dend_28 { pt3dadd( 18.5024, -16.1829, -24.0058, 0.96 ) }
    dend_28 { pt3dadd( 19.1146, -16.126, -24.5436, 0.96 ) }
    dend_28 { pt3dadd( 19.978, -16.0669, -25.3048, 0.48 ) }
    dend_28 { pt3dadd( 20.7829, -16.0767, -25.9909, 0.36 ) }
    dend_28 { pt3dadd( 21.2017, -16.1694, -26.3195, 0.36 ) }
    dend_28 { pt3dadd( 21.554, -16.4261, -26.5149, 0.36 ) }
    dend_28 { pt3dadd( 21.6751, -16.6103, -26.5397, 0.36 ) }
    dend_28 { pt3dadd( 22.003, -17.2439, -26.5508, 0.36 ) }
    dend_28 { pt3dadd( 22.3144, -17.8388, -26.5249, 1.56 ) }
    dend_28 { pt3dadd( 22.7365, -18.5539, -26.4825, 2.52 ) }
    dend_28 { pt3dadd( 23.1771, -19.1836, -26.4881, 2.4 ) }
    dend_28 { pt3dadd( 24.1359, -20.2856, -26.5713, 0.36 ) }
    dend_28 { pt3dadd( 24.4958, -20.6234, -26.6279, 0.36 ) }
    dend_28 { pt3dadd( 25.2446, -21.221, -26.7788, 0.36 ) }
    dend_28 { pt3dadd( 25.9663, -21.726, -26.957, 0.36 ) }
    dend_28 { pt3dadd( 26.9694, -22.3655, -27.2183, 1.44 ) }
    dend_28 { pt3dadd( 28.0388, -22.995, -27.5147, 3.25 ) }
    dend_28 { pt3dadd( 29.2363, -23.6518, -27.8697, 4.69 ) }
    dend_28 { pt3dadd( 29.4579, -23.7789, -27.9406, 4.93 ) }
    dend_28 { pt3dadd( 30.7665, -24.6229, -28.4019, 3.61 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 96/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -13.1098, -242.952, -31.536, 0.12 ) }
    dend_24 { pt3dadd( -13.5667, -244.009, -32.593, 0.12 ) }
    dend_24 { pt3dadd( -13.7499, -244.488, -33.0734, 0.12 ) }
    dend_24 { pt3dadd( -13.8075, -244.626, -33.2559, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_24 { pt3dadd( -13.8949, -244.78, -33.4627, 0.36 ) }
    dend_24 { pt3dadd( -14.4383, -245.629, -34.552, 0.12 ) }
    dend_24 { pt3dadd( -14.6105, -245.878, -34.9152, 0.12 ) }
    dend_24 { pt3dadd( -14.6105, -245.878, -34.9152, 0.36 ) }
    dend_24 { pt3dadd( -15.2322, -246.783, -36.3112, 0.36 ) }
    dend_24 { pt3dadd( -15.6065, -247.372, -37.1815, 2.52 ) }
    dend_24 { pt3dadd( -15.7385, -247.605, -37.5017, 2.88 ) }
    dend_24 { pt3dadd( -16.8717, -249.706, -40.1122, 0.24 ) }
    dend_24 { pt3dadd( -17.0219, -250.002, -40.4521, 0.12 ) }
    dend_24 { pt3dadd( -17.1425, -250.289, -40.7382, 0.12 ) }
    dend_24 { pt3dadd( -17.2524, -250.669, -41.0326, 0.48 ) }
    dend_24 { pt3dadd( -17.3247, -251.09, -41.3104, 0.48 ) }
    dend_24 { pt3dadd( -17.3814, -251.525, -41.5408, 0.12 ) }
    dend_24 { pt3dadd( -17.4365, -252.301, -41.7337, 0.12 ) }
    dend_24 { pt3dadd( -17.4644, -252.759, -41.8957, 0.12 ) }
    dend_24 { pt3dadd( -17.4934, -253.282, -42.1048, 0.84 ) }
    dend_24 { pt3dadd( -17.5253, -253.621, -42.2292, 0.84 ) }
    dend_24 { pt3dadd( -17.6403, -254.902, -42.6622, 0.12 ) }
    dend_24 { pt3dadd( -17.6796, -255.461, -42.8265, 0.12 ) }
    dend_24 { pt3dadd( -17.8273, -256.907, -43.2069, 2.64 ) }
    dend_24 { pt3dadd( -17.9001, -257.361, -43.3113, 2.28 ) }
    dend_24 { pt3dadd( -18.1826, -258.618, -43.4406, 0.12 ) }
    dend_24 { pt3dadd( -18.3154, -259.061, -43.4156, 0.12 ) }
    dend_24 { pt3dadd( -18.6632, -259.884, -43.2038, 0.12 ) }
    dend_24 { pt3dadd( -19.0194, -260.448, -42.9723, 1.2 ) }
    dend_24 { pt3dadd( -19.0876, -260.529, -42.9226, 1.44 ) }
    dend_24 { pt3dadd( -20.1522, -261.595, -42.133, 0.12 ) }
    dend_24 { pt3dadd( -20.5046, -261.873, -41.8537, 0.12 ) }
    dend_24 { pt3dadd( -20.8449, -262.086, -41.5731, 0.12 ) }
    dend_24 { pt3dadd( -21.313, -262.31, -41.1416, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.1098, -242.952, -31.536, 0.6 ) }
    dend_17 { pt3dadd( -12.7422, -243.877, -32.9394, 0.6 ) }
    dend_17 { pt3dadd( -12.7096, -243.992, -33.1323, 0.6 ) }
    dend_17 { pt3dadd( -12.5885, -244.486, -33.955, 1.32 ) }
    dend_17 { pt3dadd( -12.4711, -245.026, -34.8101, 2.28 ) }
    dend_17 { pt3dadd( -12.339, -245.634, -35.7714, 2.04 ) }
    dend_17 { pt3dadd( -11.9049, -247.631, -38.9315, 0.96 ) }
    dend_17 { pt3dadd( -11.8231, -248.103, -39.7674, 0.48 ) }
    dend_17 { pt3dadd( -11.7874, -248.349, -40.2272, 0.48 ) }
    dend_17 { pt3dadd( -11.7677, -248.61, -40.7601, 0.48 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 9.77113, 50.4007, 9.26444, 1.2 ) }
    dend_8 { pt3dadd( 9.91167, 51.8049, 8.9728, 1.2 ) }
    dend_8 { pt3dadd( 10.0257, 53.124, 8.83484, 1.32 ) }
    dend_8 { pt3dadd( 10.0911, 53.9088, 8.78786, 1.44 ) }
    dend_8 { pt3dadd( 10.1814, 54.9161, 8.76699, 0.96 ) }
    dend_8 { pt3dadd( 10.3372, 56.2714, 8.76494, 1.08 ) }
    dend_8 { pt3dadd( 10.6055, 58.0922, 8.78313, 1.56 ) }
    dend_8 { pt3dadd( 10.9544, 59.6589, 8.88408, 0.96 ) }
    dend_8 { pt3dadd( 11.2155, 60.5299, 8.97492, 0.6 ) }
    dend_8 { pt3dadd( 11.5284, 61.3579, 9.08154, 1.2 ) }
    dend_8 { pt3dadd( 11.8769, 62.133, 9.19754, 2.04 ) }
    dend_8 { pt3dadd( 12.1798, 62.7343, 9.29355, 2.16 ) }
    dend_8 { pt3dadd( 12.8063, 63.947, 9.50478, 1.2 ) }
    dend_8 { pt3dadd( 13.2266, 64.8238, 9.6474, 0.84 ) }
    dend_8 { pt3dadd( 13.5949, 65.7548, 9.74199, 0.48 ) }
    dend_8 { pt3dadd( 13.7945, 66.4114, 9.77219, 0.48 ) }
    dend_8 { pt3dadd( 14.09, 67.8967, 9.75443, 0.48 ) }
    dend_8 { pt3dadd( 14.221, 68.993, 9.68918, 0.84 ) }
    dend_8 { pt3dadd( 14.3016, 70.2319, 9.55966, 1.92 ) }
    dend_8 { pt3dadd( 14.39, 71.7875, 9.33577, 2.52 ) }
    dend_8 { pt3dadd( 14.447, 72.5811, 9.19834, 2.28 ) }
    dend_8 { pt3dadd( 14.5885, 73.8869, 8.98595, 0.6 ) }
    dend_8 { pt3dadd( 14.6596, 74.3345, 8.92803, 0.6 ) }
    dend_8 { pt3dadd( 14.7768, 74.9798, 8.87665, 0.48 ) }
    dend_8 { pt3dadd( 14.9837, 76.0763, 8.86146, 0.48 ) }
    dend_8 { pt3dadd( 15.1475, 76.905, 8.91545, 0.96 ) }
    dend_8 { pt3dadd( 15.3012, 77.6441, 8.98446, 1.8 ) }
    dend_8 { pt3dadd( 15.5338, 78.691, 9.12694, 2.04 ) }
    dend_8 { pt3dadd( 15.7635, 79.7962, 9.28294, 2.04 ) }
    dend_8 { pt3dadd( 16.0312, 81.3913, 9.51098, 2.28 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 70/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 9.77113, 50.4007, 9.26444, 1.32 ) }
    dend_3 { pt3dadd( 10.9576, 51.9226, 9.62662, 1.32 ) }
    dend_3 { pt3dadd( 11.4835, 52.5766, 9.68431, 0.96 ) }
    dend_3 { pt3dadd( 12.4216, 53.6379, 9.68031, 1.32 ) }
    dend_3 { pt3dadd( 13.0184, 54.2075, 9.61446, 1.68 ) }
    dend_3 { pt3dadd( 13.801, 54.8441, 9.49529, 1.2 ) }
    dend_3 { pt3dadd( 14.7688, 55.548, 9.32495, 0.84 ) }
    dend_3 { pt3dadd( 15.8306, 56.2168, 9.05768, 0.72 ) }
    dend_3 { pt3dadd( 16.4402, 56.573, 8.9141, 0.84 ) }
    dend_3 { pt3dadd( 17.5051, 57.0624, 8.64094, 0.6 ) }
    dend_3 { pt3dadd( 18.197, 57.31, 8.46714, 0.6 ) }
    dend_3 { pt3dadd( 18.7697, 57.4476, 8.34101, 1.32 ) }
    dend_3 { pt3dadd( 20.2184, 57.7198, 8.25928, 1.8 ) }
    dend_3 { pt3dadd( 21.0821, 58.0318, 8.44485, 1.2 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 84/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 4.27863, 56.8318, -22.6928, 0.48 ) }
    dend_58 { pt3dadd( 4.28081, 58.5994, -22.5361, 0.48 ) }
    dend_58 { pt3dadd( 4.23365, 59.6446, -22.4299, 0.48 ) }
    dend_58 { pt3dadd( 4.17797, 60.35, -22.3446, 0.48 ) }
    dend_58 { pt3dadd( 4.06398, 61.6041, -22.2025, 0.72 ) }
    dend_58 { pt3dadd( 3.98865, 62.3564, -22.1258, 0.48 ) }
    dend_58 { pt3dadd( 3.89149, 63.258, -22.0432, 0.48 ) }
    dend_58 { pt3dadd( 3.66309, 64.5447, -21.9676, 0.48 ) }
    dend_58 { pt3dadd( 3.43845, 65.7003, -21.9042, 1.8 ) }
    dend_58 { pt3dadd( 3.3355, 66.2956, -21.8743, 2.64 ) }
    dend_58 { pt3dadd( 3.2443, 66.9779, -21.847, 2.88 ) }
    dend_58 { pt3dadd( 3.16016, 67.7708, -21.8023, 2.88 ) }
    dend_58 { pt3dadd( 3.07975, 68.6758, -21.7471, 2.04 ) }
    dend_58 { pt3dadd( 2.9975, 69.8247, -21.6814, 0.48 ) }
    dend_58 { pt3dadd( 2.9698, 70.2839, -21.6514, 0.36 ) }
    dend_58 { pt3dadd( 2.88184, 71.9828, -21.5388, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_58 { pt3dadd( 2.83765, 73.0743, -21.472, 1.44 ) }
    dend_58 { pt3dadd( 2.84731, 74.0895, -21.4184, 2.52 ) }
    dend_58 { pt3dadd( 2.90742, 75.094, -21.375, 2.64 ) }
    dend_58 { pt3dadd( 2.98155, 75.8113, -21.3534, 2.52 ) }
    dend_58 { pt3dadd( 3.19357, 77.3961, -21.3329, 0.48 ) }
    dend_58 { pt3dadd( 3.29487, 78.0637, -21.3393, 0.36 ) }
    dend_58 { pt3dadd( 3.48327, 79.3525, -21.3729, 0.36 ) }
    dend_58 { pt3dadd( 3.56464, 79.9614, -21.3813, 0.36 ) }
    dend_58 { pt3dadd( 3.68134, 80.9717, -21.4, 0.36 ) }
    dend_58 { pt3dadd( 3.78773, 82.1033, -21.4219, 1.44 ) }
    dend_58 { pt3dadd( 3.81922, 82.7865, -21.4395, 1.56 ) }
    dend_58 { pt3dadd( 3.80917, 83.668, -21.4769, 0.24 ) }
    dend_58 { pt3dadd( 3.7227, 84.686, -21.5361, 0.24 ) }
    dend_58 { pt3dadd( 3.62067, 85.5635, -21.5777, 0.72 ) }
    dend_58 { pt3dadd( 3.56672, 86.0069, -21.5919, 0.72 ) }
    dend_58 { pt3dadd( 3.50599, 86.5219, -21.5996, 0.48 ) }
    dend_58 { pt3dadd( 3.47632, 86.8628, -21.5978, 0.36 ) }
    dend_58 { pt3dadd( 3.45188, 87.4219, -21.5638, 0.36 ) }
    dend_58 { pt3dadd( 3.45394, 88.0988, -21.4675, 0.84 ) }
    dend_58 { pt3dadd( 3.52231, 89.2073, -21.2599, 2.4 ) }
    dend_58 { pt3dadd( 3.56022, 89.6556, -21.181, 3.0 ) }
    dend_58 { pt3dadd( 3.6477, 90.543, -21.0315, 3.0 ) }
    dend_58 { pt3dadd( 3.75194, 91.6558, -20.8688, 1.68 ) }
    dend_58 { pt3dadd( 3.8479, 92.7671, -20.7296, 0.36 ) }
    dend_58 { pt3dadd( 3.91177, 93.6748, -20.6449, 0.36 ) }
    dend_58 { pt3dadd( 3.94048, 94.8429, -20.5748, 0.36 ) }
    dend_58 { pt3dadd( 3.91678, 95.7562, -20.5586, 1.68 ) }
    dend_58 { pt3dadd( 3.87443, 96.3645, -20.5752, 2.52 ) }
    dend_58 { pt3dadd( 3.82386, 96.8371, -20.6105, 2.64 ) }
    dend_58 { pt3dadd( 3.74583, 97.44, -20.667, 2.28 ) }
    dend_58 { pt3dadd( 3.6244, 98.4151, -20.7543, 0.48 ) }
    dend_58 { pt3dadd( 3.53512, 99.7693, -20.8929, 0.48 ) }
    dend_58 { pt3dadd( 3.52001, 100.785, -21.0124, 0.48 ) }
    dend_58 { pt3dadd( 3.53713, 101.243, -21.0647, 0.96 ) }
    dend_58 { pt3dadd( 3.59249, 102.036, -21.1485, 1.56 ) }
    dend_58 { pt3dadd( 3.65264, 102.612, -21.1996, 1.56 ) }
    dend_58 { pt3dadd( 3.79934, 103.745, -21.2767, 0.48 ) }
    dend_58 { pt3dadd( 3.84863, 104.093, -21.3035, 0.12 ) }
    dend_58 { pt3dadd( 3.98346, 105.098, -21.3865, 0.12 ) }
    dend_58 { pt3dadd( 4.1184, 106.224, -21.48, 2.16 ) }
    dend_58 { pt3dadd( 4.1754, 106.791, -21.5247, 2.88 ) }
    dend_58 { pt3dadd( 4.20705, 107.246, -21.5516, 3.0 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 42/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 4.27863, 56.8318, -22.6928, 0.48 ) }
    dend_55 { pt3dadd( 3.98897, 59.2752, -24.7812, 0.48 ) }
    dend_55 { pt3dadd( 3.93178, 59.629, -25.0785, 0.48 ) }
    dend_55 { pt3dadd( 3.79508, 60.3822, -25.7633, 0.72 ) }
    dend_55 { pt3dadd( 3.71028, 60.8979, -26.273, 0.72 ) }
    dend_55 { pt3dadd( 3.57363, 61.8703, -27.2333, 0.24 ) }
    dend_55 { pt3dadd( 3.51741, 62.3067, -27.6691, 0.12 ) }
    dend_55 { pt3dadd( 3.4407, 62.9253, -28.2576, 0.84 ) }
    dend_55 { pt3dadd( 3.3761, 63.7311, -29.084, 0.12 ) }
    dend_55 { pt3dadd( 3.34038, 64.6055, -29.9988, 0.12 ) }
    dend_55 { pt3dadd( 3.33521, 65.1086, -30.4867, 1.68 ) }
    dend_55 { pt3dadd( 3.33938, 65.7238, -30.9975, 2.4 ) }
    dend_55 { pt3dadd( 3.34805, 66.7938, -31.858, 1.8 ) }
    dend_55 { pt3dadd( 3.35538, 67.8206, -32.6694, 0.12 ) }
    dend_55 { pt3dadd( 3.33483, 68.2863, -33.0184, 0.12 ) }
    dend_55 { pt3dadd( 3.22907, 69.2043, -33.7152, 1.92 ) }
    dend_55 { pt3dadd( 3.13584, 69.8167, -34.2297, 2.4 ) }
    dend_55 { pt3dadd( 2.86968, 71.4139, -35.6659, 0.6 ) }
    dend_55 { pt3dadd( 2.72133, 72.1474, -36.3537, 0.48 ) }
    dend_55 { pt3dadd( 2.59262, 72.7361, -36.9082, 0.48 ) }
    dend_55 { pt3dadd( 2.41584, 73.5962, -37.7308, 1.2 ) }
    dend_55 { pt3dadd( 2.23005, 74.5683, -38.718, 0.48 ) }
    dend_55 { pt3dadd( 2.17425, 74.9389, -39.0807, 0.12 ) }
    dend_55 { pt3dadd( 2.10848, 75.711, -39.6868, 0.12 ) }
    dend_55 { pt3dadd( 2.097, 76.2001, -40.0173, 0.72 ) }
    dend_55 { pt3dadd( 2.11882, 76.692, -40.3875, 0.72 ) }
    dend_55 { pt3dadd( 2.14339, 77.8469, -41.2801, 0.12 ) }
    dend_55 { pt3dadd( 2.14127, 78.1078, -41.4971, 0.12 ) }
    dend_55 { pt3dadd( 2.14757, 78.8887, -42.1925, 2.28 ) }
    dend_55 { pt3dadd( 2.16706, 79.3015, -42.6229, 2.52 ) }
    dend_55 { pt3dadd( 2.29972, 81.1059, -44.705, 0.12 ) }
    dend_55 { pt3dadd( 2.39332, 81.8469, -45.5683, 0.12 ) }
    dend_55 { pt3dadd( 2.52355, 82.6056, -46.4417, 1.44 ) }
    dend_55 { pt3dadd( 2.60458, 83.0294, -46.9375, 1.8 ) }
    dend_55 { pt3dadd( 2.79106, 83.9393, -48.0365, 1.32 ) }
    dend_55 { pt3dadd( 2.87489, 84.4656, -48.6559, 0.12 ) }
    dend_55 { pt3dadd( 2.98701, 85.2902, -49.5155, 0.12 ) }
    dend_55 { pt3dadd( 3.11692, 86.4299, -50.6534, 1.56 ) }
    dend_55 { pt3dadd( 3.13911, 86.8103, -51.01, 1.92 ) }
    dend_55 { pt3dadd( 3.13201, 88.0451, -52.1315, 0.12 ) }
    dend_55 { pt3dadd( 3.10008, 88.8003, -52.7869, 0.12 ) }
    dend_55 { pt3dadd( 3.07167, 89.2646, -53.1943, 0.96 ) }
    dend_55 { pt3dadd( 3.05986, 89.4365, -53.3516, 0.96 ) }
    dend_55 { pt3dadd( 3.04022, 90.1689, -54.0885, 0.12 ) }
    dend_55 { pt3dadd( 3.03532, 90.7373, -54.7083, 0.12 ) }
    dend_55 { pt3dadd( 3.014, 91.5638, -55.6564, 1.32 ) }
    dend_55 { pt3dadd( 3.00125, 91.9478, -56.1025, 1.8 ) }
    dend_55 { pt3dadd( 2.96928, 92.4475, -56.6685, 1.32 ) }
    dend_55 { pt3dadd( 2.87095, 93.8669, -58.1966, 0.12 ) }
    dend_55 { pt3dadd( 2.86137, 94.0312, -58.4015, 0.12 ) }
    dend_55 { pt3dadd( 2.84255, 94.6187, -59.1754, 0.36 ) }
    dend_55 { pt3dadd( 2.80252, 95.1133, -59.8206, 0.36 ) }
    dend_55 { pt3dadd( 2.77356, 95.7881, -60.7298, 1.92 ) }
    dend_55 { pt3dadd( 2.7896, 96.3588, -61.4828, 2.76 ) }
    dend_55 { pt3dadd( 2.99479, 98.9541, -64.6965, 0.36 ) }
    dend_55 { pt3dadd( 3.01848, 99.1721, -64.9728, 0.36 ) }
    dend_55 { pt3dadd( 3.13078, 99.9922, -66.0266, 0.36 ) }
    dend_55 { pt3dadd( 3.24812, 100.807, -67.0749, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_55 { pt3dadd( 3.32602, 101.268, -67.6577, 0.36 ) }
    dend_55 { pt3dadd( 3.50009, 102.066, -68.6314, 0.72 ) }
    dend_55 { pt3dadd( 3.79747, 103.027, -69.7401, 0.12 ) }
    dend_55 { pt3dadd( 3.87541, 103.257, -70.0222, 0.12 ) }
    dend_55 { pt3dadd( 4.03482, 103.674, -70.574, 1.92 ) }
    dend_55 { pt3dadd( 4.26953, 104.51, -71.7011, 2.52 ) }
    dend_55 { pt3dadd( 4.53635, 105.39, -73.036, 1.44 ) }
    dend_55 { pt3dadd( 4.79638, 105.912, -73.961, 0.12 ) }
    // Section: dend_53, id: dend_53, parent: dend_49 (entry count 8/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -8.69288, 37.3222, -32.0451, 0.12 ) }
    dend_53 { pt3dadd( -9.15419, 39.5267, -32.8531, 0.12 ) }
    dend_53 { pt3dadd( -9.3656, 40.4851, -33.2274, 0.6 ) }
    dend_53 { pt3dadd( -9.5088, 41.2199, -33.518, 0.12 ) }
    dend_53 { pt3dadd( -9.56975, 41.5551, -33.6439, 0.12 ) }
    dend_53 { pt3dadd( -9.65151, 42.0092, -33.7987, 0.12 ) }
    dend_53 { pt3dadd( -9.74578, 42.5552, -33.9667, 0.24 ) }
    dend_53 { pt3dadd( -9.82588, 43.0641, -34.1358, 0.12 ) }
    dend_53 { pt3dadd( -9.88048, 43.5005, -34.3485, 0.12 ) }
    dend_53 { pt3dadd( -9.95471, 44.2224, -34.753, 0.12 ) }
    dend_53 { pt3dadd( -10.0108, 44.93, -35.1872, 1.32 ) }
    dend_53 { pt3dadd( -10.0188, 45.4119, -35.4883, 1.8 ) }
    dend_53 { pt3dadd( -9.97298, 46.7798, -36.3207, 0.84 ) }
    dend_53 { pt3dadd( -9.90001, 47.6179, -36.9618, 0.12 ) }
    dend_53 { pt3dadd( -9.85413, 47.8821, -37.1857, 0.12 ) }
    dend_53 { pt3dadd( -9.64874, 48.7181, -37.8933, 1.8 ) }
    dend_53 { pt3dadd( -9.50558, 49.2224, -38.2994, 2.16 ) }
    dend_53 { pt3dadd( -9.35199, 49.6924, -38.67, 1.8 ) }
    dend_53 { pt3dadd( -8.51041, 51.8802, -40.5376, 0.24 ) }
    dend_53 { pt3dadd( -8.12902, 52.7618, -41.348, 0.24 ) }
    dend_53 { pt3dadd( -7.7344, 53.6475, -42.1795, 0.24 ) }
    dend_53 { pt3dadd( -7.55778, 54.0396, -42.5622, 0.24 ) }
    dend_53 { pt3dadd( -6.99229, 55.3232, -43.8814, 2.28 ) }
    dend_53 { pt3dadd( -6.21947, 57.0947, -45.7515, 0.24 ) }
    dend_53 { pt3dadd( -6.09741, 57.3802, -46.0378, 0.24 ) }
    dend_53 { pt3dadd( -5.74408, 58.2249, -46.9406, 0.24 ) }
    dend_53 { pt3dadd( -5.35014, 59.1333, -47.9288, 1.44 ) }
    dend_53 { pt3dadd( -5.04316, 59.8894, -48.6924, 1.8 ) }
    dend_53 { pt3dadd( -4.70941, 60.8671, -49.5014, 0.12 ) }
    dend_53 { pt3dadd( -4.49007, 61.6371, -50.0111, 0.12 ) }
    dend_53 { pt3dadd( -4.37954, 62.0421, -50.2805, 0.96 ) }
    dend_53 { pt3dadd( -4.28128, 62.3841, -50.4995, 1.2 ) }
    dend_53 { pt3dadd( -4.04085, 63.2647, -50.9894, 0.12 ) }
    dend_53 { pt3dadd( -3.84958, 63.9584, -51.3547, 0.12 ) }
    dend_53 { pt3dadd( -3.7305, 64.3633, -51.5841, 0.36 ) }
    dend_53 { pt3dadd( -3.48485, 65.2125, -52.1782, 0.12 ) }
    dend_53 { pt3dadd( -3.38592, 65.6261, -52.476, 0.12 ) }
    dend_53 { pt3dadd( -3.24136, 66.345, -52.9984, 0.48 ) }
    dend_53 { pt3dadd( -3.07279, 67.2896, -53.7145, 0.48 ) }
    dend_53 { pt3dadd( -2.91989, 68.2816, -54.4698, 2.28 ) }
    dend_53 { pt3dadd( -2.69788, 69.9114, -55.6646, 0.12 ) }
    dend_53 { pt3dadd( -2.61118, 70.7544, -56.2459, 0.12 ) }
    dend_53 { pt3dadd( -2.57732, 71.2195, -56.5733, 0.12 ) }
    dend_53 { pt3dadd( -2.54848, 72.0991, -57.1756, 1.08 ) }
    dend_53 { pt3dadd( -2.56475, 72.5619, -57.5081, 1.2 ) }
    dend_53 { pt3dadd( -2.67352, 73.3344, -58.2409, 0.12 ) }
    dend_53 { pt3dadd( -2.82077, 73.9098, -58.896, 0.12 ) }
    dend_53 { pt3dadd( -3.06056, 74.7717, -59.9927, 1.44 ) }
    dend_53 { pt3dadd( -3.14931, 75.0698, -60.3837, 2.04 ) }
    dend_53 { pt3dadd( -3.3357, 75.611, -61.0958, 1.68 ) }
    dend_53 { pt3dadd( -3.96305, 77.2432, -63.313, 0.24 ) }
    dend_53 { pt3dadd( -4.19276, 77.7735, -64.0579, 0.24 ) }
    dend_53 { pt3dadd( -4.44638, 78.3342, -64.8556, 0.12 ) }
    dend_53 { pt3dadd( -4.70458, 78.8686, -65.5603, 0.72 ) }
    dend_53 { pt3dadd( -4.82188, 79.1291, -65.8737, 0.72 ) }
    dend_53 { pt3dadd( -4.94039, 79.373, -66.1285, 0.12 ) }
    dend_53 { pt3dadd( -5.3614, 80.1979, -66.8452, 0.12 ) }
    dend_53 { pt3dadd( -5.58837, 80.5525, -67.2141, 0.12 ) }
    dend_53 { pt3dadd( -6.11288, 81.1723, -67.9275, 1.68 ) }
    dend_53 { pt3dadd( -6.23034, 81.3039, -68.0844, 1.68 ) }
    dend_53 { pt3dadd( -7.15286, 82.4614, -69.4708, 0.12 ) }
    dend_53 { pt3dadd( -7.45156, 82.8899, -69.9459, 0.12 ) }
    dend_53 { pt3dadd( -7.67953, 83.312, -70.3988, 0.24 ) }
    dend_53 { pt3dadd( -7.88805, 83.788, -70.8896, 0.24 ) }
    dend_53 { pt3dadd( -8.17672, 84.5962, -71.6776, 0.24 ) }
    dend_53 { pt3dadd( -8.44555, 85.4485, -72.3892, 1.56 ) }
    dend_53 { pt3dadd( -8.57713, 85.9987, -72.7783, 2.04 ) }
    dend_53 { pt3dadd( -8.90791, 87.5618, -73.7708, 0.36 ) }
    dend_53 { pt3dadd( -8.98964, 88.0461, -74.0485, 0.48 ) }
    dend_53 { pt3dadd( -9.09069, 88.7913, -74.4877, 0.48 ) }
    dend_53 { pt3dadd( -9.22924, 89.6042, -74.9447, 0.48 ) }
    dend_53 { pt3dadd( -9.3189, 90.0174, -75.1789, 0.24 ) }
    dend_53 { pt3dadd( -9.43861, 90.4768, -75.4949, 0.24 ) }
    dend_53 { pt3dadd( -9.63107, 91.1206, -76.0023, 0.24 ) }
    dend_53 { pt3dadd( -9.92663, 91.9911, -76.8513, 1.08 ) }
    dend_53 { pt3dadd( -10.0865, 92.3589, -77.2883, 1.08 ) }
    dend_53 { pt3dadd( -10.3909, 92.8032, -78.0448, 0.36 ) }
    dend_53 { pt3dadd( -10.8319, 93.2365, -78.9708, 0.36 ) }
    dend_53 { pt3dadd( -10.9961, 93.3477, -79.269, 0.36 ) }
    dend_53 { pt3dadd( -11.1934, 93.4461, -79.5762, 0.36 ) }
    dend_53 { pt3dadd( -11.4675, 93.5633, -79.9692, 0.36 ) }
    dend_53 { pt3dadd( -12.6647, 94.0626, -81.6362, 1.68 ) }
    dend_53 { pt3dadd( -12.8917, 94.1544, -81.9246, 2.4 ) }
    dend_53 { pt3dadd( -13.0583, 94.2244, -82.1216, 2.64 ) }
    dend_53 { pt3dadd( -14.8347, 94.974, -84.1264, 0.6 ) }
    dend_53 { pt3dadd( -15.0614, 95.0596, -84.3624, 0.12 ) }
    dend_53 { pt3dadd( -15.3706, 95.1653, -84.6354, 0.12 ) }
    dend_53 { pt3dadd( -15.7566, 95.273, -84.9151, 0.6 ) }
    dend_53 { pt3dadd( -16.1566, 95.3754, -85.2032, 0.12 ) }
    dend_53 { pt3dadd( -16.6077, 95.4763, -85.4739, 0.12 ) }
    dend_53 { pt3dadd( -17.3522, 95.5784, -85.7605, 1.44 ) }
    dend_53 { pt3dadd( -17.9706, 95.6631, -85.9924, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( -19.5343, 95.9302, -86.5353, 0.12 ) }
    dend_53 { pt3dadd( -20.1811, 96.0835, -86.7177, 0.12 ) }
    dend_53 { pt3dadd( -20.9633, 96.3173, -86.8764, 0.84 ) }
    dend_53 { pt3dadd( -21.2749, 96.4296, -86.9406, 0.84 ) }
    dend_53 { pt3dadd( -21.4938, 96.5155, -86.9799, 0.12 ) }
    dend_53 { pt3dadd( -21.9944, 96.69, -87.0405, 0.12 ) }
    dend_53 { pt3dadd( -22.7135, 96.9191, -87.066, 1.44 ) }
    dend_53 { pt3dadd( -22.9659, 96.9905, -87.0844, 1.56 ) }
    dend_53 { pt3dadd( -23.985, 97.284, -87.2062, 0.12 ) }
    dend_53 { pt3dadd( -24.7561, 97.5157, -87.2984, 0.12 ) }
    dend_53 { pt3dadd( -25.2285, 97.6535, -87.354, 1.08 ) }
    dend_53 { pt3dadd( -25.7996, 97.8023, -87.4505, 1.92 ) }
    dend_53 { pt3dadd( -26.267, 97.9147, -87.5616, 1.56 ) }
    dend_53 { pt3dadd( -27.1367, 98.1271, -87.8181, 0.12 ) }
    dend_53 { pt3dadd( -27.4862, 98.2109, -87.9366, 0.12 ) }
    dend_53 { pt3dadd( -27.7016, 98.2647, -88.026, 0.48 ) }
    dend_53 { pt3dadd( -28.6111, 98.508, -88.4715, 0.48 ) }
    dend_53 { pt3dadd( -29.0074, 98.6245, -88.6754, 0.12 ) }
    dend_53 { pt3dadd( -29.6184, 98.8473, -88.8689, 0.12 ) }
    dend_53 { pt3dadd( -29.88, 99.0125, -89.0582, 0.84 ) }
    dend_53 { pt3dadd( -30.1239, 99.1833, -89.2866, 1.2 ) }
    dend_53 { pt3dadd( -30.5313, 99.4665, -89.5999, 0.12 ) }
    dend_53 { pt3dadd( -31.1478, 99.7782, -89.6818, 0.12 ) }
    dend_53 { pt3dadd( -32.7405, 100.053, -88.6393, 2.88 ) }
    dend_53 { pt3dadd( -35.9161, 100.068, -85.2281, 0.96 ) }
    dend_53 { pt3dadd( -36.4489, 99.9796, -84.411, 0.96 ) }
    dend_53 { pt3dadd( -39.0591, 99.1057, -79.2673, 0.12 ) }
    dend_53 { pt3dadd( -39.3499, 98.9657, -78.5854, 0.12 ) }
    dend_53 { pt3dadd( -39.553, 98.8314, -78.0258, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 29/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.69288, 37.3222, -32.0451, 0.48 ) }
    dend_50 { pt3dadd( -10.4681, 37.4308, -32.8193, 0.48 ) }
    dend_50 { pt3dadd( -11.2363, 37.5559, -33.4674, 0.48 ) }
    dend_50 { pt3dadd( -12.1993, 37.8775, -34.7065, 0.48 ) }
    dend_50 { pt3dadd( -12.6799, 38.0868, -35.3741, 2.16 ) }
    dend_50 { pt3dadd( -12.9139, 38.2063, -35.7156, 2.52 ) }
    dend_50 { pt3dadd( -13.2352, 38.3891, -36.1994, 2.52 ) }
    dend_50 { pt3dadd( -14.4902, 39.2778, -38.5734, 1.44 ) }
    dend_50 { pt3dadd( -15.2812, 39.835, -40.1491, 0.36 ) }
    dend_50 { pt3dadd( -15.573, 40.0166, -40.7275, 0.48 ) }
    dend_50 { pt3dadd( -16.1268, 40.3035, -41.8104, 0.6 ) }
    dend_50 { pt3dadd( -16.7061, 40.5188, -43.1442, 0.6 ) }
    dend_50 { pt3dadd( -17.4148, 40.7212, -44.9837, 0.6 ) }
    dend_50 { pt3dadd( -17.7215, 40.786, -45.7842, 1.92 ) }
    dend_50 { pt3dadd( -17.9863, 40.8214, -46.4716, 2.64 ) }
    dend_50 { pt3dadd( -18.2487, 40.8464, -47.1541, 2.64 ) }
    dend_50 { pt3dadd( -20.6467, 40.9955, -53.2803, 1.68 ) }
    dend_50 { pt3dadd( -21.7224, 41.0585, -55.9364, 0.72 ) }
    dend_50 { pt3dadd( -21.9341, 41.078, -56.4291, 1.56 ) }
    dend_50 { pt3dadd( -22.3855, 41.134, -57.4375, 1.92 ) }
    dend_50 { pt3dadd( -22.5956, 41.1646, -57.8679, 2.28 ) }
    dend_50 { pt3dadd( -22.7809, 41.1952, -58.1975, 2.28 ) }
    dend_50 { pt3dadd( -24.8005, 41.5232, -60.4273, 0.24 ) }
    dend_50 { pt3dadd( -25.1414, 41.569, -60.7827, 0.12 ) }
    dend_50 { pt3dadd( -25.3781, 41.5928, -61.0783, 0.12 ) }
    dend_50 { pt3dadd( -25.7918, 41.6239, -61.646, 0.12 ) }
    dend_50 { pt3dadd( -26.5447, 41.6527, -62.7075, 1.32 ) }
    dend_50 { pt3dadd( -26.8954, 41.6496, -63.2169, 2.16 ) }
    dend_50 { pt3dadd( -27.4633, 41.61, -64.0284, 2.4 ) }
    dend_50 { pt3dadd( -29.0888, 41.4053, -66.3624, 0.72 ) }
    dend_50 { pt3dadd( -29.5383, 41.3221, -67.0064, 0.84 ) }
    dend_50 { pt3dadd( -29.8183, 41.2495, -67.4131, 1.08 ) }
    dend_50 { pt3dadd( -30.6739, 40.972, -68.5877, 0.48 ) }
    dend_50 { pt3dadd( -30.8886, 40.8952, -68.8651, 0.12 ) }
    dend_50 { pt3dadd( -31.3153, 40.7258, -69.362, 0.48 ) }
    dend_50 { pt3dadd( -31.4751, 40.654, -69.5092, 0.48 ) }
    dend_50 { pt3dadd( -32.1802, 40.3023, -70.1556, 0.12 ) }
    dend_50 { pt3dadd( -32.44, 40.1616, -70.3892, 0.12 ) }
    dend_50 { pt3dadd( -32.7752, 39.9652, -70.7118, 0.12 ) }
    dend_50 { pt3dadd( -32.9715, 39.8549, -70.9904, 0.12 ) }
    dend_50 { pt3dadd( -33.1802, 39.7456, -71.3515, 0.12 ) }
    dend_50 { pt3dadd( -33.3776, 39.6479, -71.6706, 0.48 ) }
    dend_50 { pt3dadd( -33.4649, 39.5993, -71.8069, 0.48 ) }
    dend_50 { pt3dadd( -34.1114, 39.1559, -72.8213, 0.48 ) }
    dend_50 { pt3dadd( -34.5004, 38.828, -73.4149, 0.12 ) }
    dend_50 { pt3dadd( -34.6445, 38.7145, -73.6072, 0.12 ) }
    dend_50 { pt3dadd( -35.0069, 38.4103, -74.0358, 0.12 ) }
    dend_50 { pt3dadd( -35.6358, 37.8571, -74.7862, 1.8 ) }
    dend_50 { pt3dadd( -36.0728, 37.5036, -75.2382, 2.76 ) }
    dend_50 { pt3dadd( -36.348, 37.2771, -75.4821, 2.76 ) }
    dend_50 { pt3dadd( -36.8507, 36.84, -75.9107, 1.92 ) }
    dend_50 { pt3dadd( -37.3688, 36.3513, -76.3727, 1.92 ) }
    dend_50 { pt3dadd( -38.5252, 35.1213, -77.569, 0.12 ) }
    dend_50 { pt3dadd( -38.9751, 34.5918, -78.0645, 0.12 ) }
    dend_50 { pt3dadd( -39.1982, 34.2986, -78.365, 0.12 ) }
    dend_50 { pt3dadd( -39.4141, 33.9892, -78.6684, 0.48 ) }
    dend_50 { pt3dadd( -39.6046, 33.687, -78.9572, 0.6 ) }
    dend_50 { pt3dadd( -40.0081, 33.0783, -79.5447, 0.12 ) }
    dend_50 { pt3dadd( -40.1496, 32.8201, -79.7519, 0.12 ) }
    dend_50 { pt3dadd( -40.7648, 31.5627, -80.8071, 2.4 ) }
    dend_50 { pt3dadd( -41.1176, 30.9489, -81.3871, 3.25 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 90/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 3.40761, -151.704, -20.5807, 0.12 ) }
    dend_45 { pt3dadd( 3.23634, -152.758, -20.8159, 0.12 ) }
    dend_45 { pt3dadd( 3.1247, -153.098, -20.8538, 0.12 ) }
    dend_45 { pt3dadd( 2.95303, -153.481, -20.8365, 0.36 ) }
    dend_45 { pt3dadd( 2.65735, -154.073, -20.761, 0.48 ) }
    dend_45 { pt3dadd( 2.50917, -154.36, -20.7148, 0.12 ) }
    dend_45 { pt3dadd( 2.30213, -154.796, -20.6423, 0.12 ) }
    dend_45 { pt3dadd( 1.96657, -155.462, -20.4581, 0.36 ) }
    dend_45 { pt3dadd( 1.73332, -155.886, -20.2013, 0.12 ) }
    dend_45 { pt3dadd( 1.50627, -156.208, -19.9211, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 1.29798, -156.421, -19.6974, 0.12 ) }
    dend_45 { pt3dadd( 0.972369, -156.747, -19.3248, 0.12 ) }
    dend_45 { pt3dadd( 0.470242, -157.226, -18.7231, 0.36 ) }
    dend_45 { pt3dadd( -0.33226, -157.92, -17.7717, 0.12 ) }
    dend_45 { pt3dadd( -0.899781, -158.347, -17.1302, 0.12 ) }
    dend_45 { pt3dadd( -1.79722, -158.873, -16.1359, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 6/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 3.40761, -151.704, -20.5807, 0.12 ) }
    dend_42 { pt3dadd( 4.13132, -152.056, -21.0526, 0.12 ) }
    dend_42 { pt3dadd( 4.70345, -152.32, -21.4721, 0.12 ) }
    dend_42 { pt3dadd( 5.3285, -152.613, -21.9345, 0.48 ) }
    dend_42 { pt3dadd( 5.79865, -152.834, -22.2829, 0.12 ) }
    dend_42 { pt3dadd( 6.7236, -153.271, -22.9684, 0.12 ) }
    dend_42 { pt3dadd( 7.68652, -153.725, -23.6821, 0.12 ) }
    dend_42 { pt3dadd( 8.75696, -154.198, -24.5712, 2.52 ) }
    dend_42 { pt3dadd( 8.99773, -154.302, -24.784, 2.28 ) }
    dend_42 { pt3dadd( 9.0279, -154.316, -24.8101, 2.28 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 16/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 30.7665, -24.6229, -28.4019, 0.48 ) }
    dend_34 { pt3dadd( 30.4829, -27.1035, -30.0878, 0.48 ) }
    dend_34 { pt3dadd( 30.4585, -27.4908, -30.308, 0.36 ) }
    dend_34 { pt3dadd( 30.4469, -27.902, -30.5151, 0.36 ) }
    dend_34 { pt3dadd( 30.4432, -28.3671, -30.725, 0.84 ) }
    dend_34 { pt3dadd( 30.452, -29.1004, -31.03, 1.32 ) }
    dend_34 { pt3dadd( 30.5194, -30.0681, -31.3998, 0.48 ) }
    dend_34 { pt3dadd( 30.6755, -30.8145, -31.5518, 0.36 ) }
    dend_34 { pt3dadd( 30.7649, -31.1502, -31.6159, 0.36 ) }
    dend_34 { pt3dadd( 30.9035, -31.5782, -31.7065, 0.48 ) }
    dend_34 { pt3dadd( 31.0684, -32.0222, -31.8025, 0.36 ) }
    dend_34 { pt3dadd( 31.411, -32.8616, -31.9971, 0.36 ) }
    dend_34 { pt3dadd( 31.6059, -33.3317, -32.1126, 0.36 ) }
    dend_34 { pt3dadd( 31.734, -33.759, -32.2207, 0.48 ) }
    dend_34 { pt3dadd( 31.8587, -34.2928, -32.3595, 0.36 ) }
    dend_34 { pt3dadd( 31.9514, -34.8399, -32.4999, 0.36 ) }
    dend_34 { pt3dadd( 31.9774, -35.0606, -32.5543, 0.36 ) }
    dend_34 { pt3dadd( 32.1226, -37.0095, -33.0153, 3.49 ) }
    dend_34 { pt3dadd( 32.2273, -38.8664, -33.4129, 0.12 ) }
    dend_34 { pt3dadd( 32.2428, -39.1929, -33.4771, 0.12 ) }
    dend_34 { pt3dadd( 32.2638, -39.696, -33.5613, 0.36 ) }
    dend_34 { pt3dadd( 32.2693, -39.8685, -33.5879, 0.12 ) }
    dend_34 { pt3dadd( 32.2733, -40.4732, -33.6612, 0.12 ) }
    dend_34 { pt3dadd( 32.2332, -41.0566, -33.6864, 0.6 ) }
    dend_34 { pt3dadd( 32.2058, -41.4071, -33.6814, 0.6 ) }
    dend_34 { pt3dadd( 32.1308, -41.984, -33.6746, 0.36 ) }
    dend_34 { pt3dadd( 32.0924, -42.2094, -33.6787, 0.24 ) }
    dend_34 { pt3dadd( 32.0138, -42.568, -33.6928, 0.24 ) }
    dend_34 { pt3dadd( 31.9011, -42.9644, -33.7127, 1.08 ) }
    dend_34 { pt3dadd( 31.6378, -43.8595, -33.7675, 1.8 ) }
    dend_34 { pt3dadd( 31.4403, -44.5462, -33.7823, 1.56 ) }
    dend_34 { pt3dadd( 31.2817, -45.1622, -33.7499, 0.96 ) }
    dend_34 { pt3dadd( 31.1998, -45.6244, -33.7132, 0.24 ) }
    dend_34 { pt3dadd( 31.0884, -46.5259, -33.6328, 0.24 ) }
    dend_34 { pt3dadd( 31.0513, -46.9833, -33.5875, 0.24 ) }
    dend_34 { pt3dadd( 31.009, -47.8503, -33.4943, 0.24 ) }
    dend_34 { pt3dadd( 30.9651, -49.5998, -33.2955, 3.25 ) }
    dend_34 { pt3dadd( 30.9706, -51.2168, -33.1162, 0.24 ) }
    dend_34 { pt3dadd( 30.9813, -51.5635, -33.0823, 0.24 ) }
    dend_34 { pt3dadd( 31.0453, -52.6972, -32.9978, 0.24 ) }
    dend_34 { pt3dadd( 31.0857, -53.256, -32.9739, 0.48 ) }
    dend_34 { pt3dadd( 31.1094, -53.4828, -32.9774, 0.12 ) }
    dend_34 { pt3dadd( 31.3515, -55.0576, -33.0587, 0.12 ) }
    dend_34 { pt3dadd( 31.3804, -55.2163, -33.067, 0.84 ) }
    dend_34 { pt3dadd( 31.4947, -55.7812, -33.0989, 1.08 ) }
    dend_34 { pt3dadd( 31.6313, -56.432, -33.1397, 0.12 ) }
    dend_34 { pt3dadd( 31.8674, -57.5711, -33.2105, 0.12 ) }
    dend_34 { pt3dadd( 32.1208, -58.837, -33.2876, 2.4 ) }
    dend_34 { pt3dadd( 32.376, -60.1925, -33.3674, 0.24 ) }
    dend_34 { pt3dadd( 32.4677, -60.7448, -33.4079, 0.24 ) }
    dend_34 { pt3dadd( 32.5577, -61.4214, -33.4643, 0.36 ) }
    dend_34 { pt3dadd( 32.59, -61.779, -33.5001, 0.24 ) }
    dend_34 { pt3dadd( 32.6022, -62.0053, -33.5265, 0.24 ) }
    dend_34 { pt3dadd( 32.6049, -62.3329, -33.5863, 0.24 ) }
    dend_34 { pt3dadd( 32.5902, -62.9649, -33.7477, 0.24 ) }
    dend_34 { pt3dadd( 32.5991, -63.3626, -33.8567, 0.84 ) }
    dend_34 { pt3dadd( 32.6289, -63.7516, -33.9644, 0.84 ) }
    dend_34 { pt3dadd( 32.6686, -64.1019, -34.0443, 0.84 ) }
    dend_34 { pt3dadd( 32.7441, -64.6108, -34.1262, 0.12 ) }
    dend_34 { pt3dadd( 32.7811, -64.8704, -34.1551, 0.12 ) }
    dend_34 { pt3dadd( 32.9027, -65.6192, -34.2054, 0.12 ) }
    dend_34 { pt3dadd( 32.9646, -65.9805, -34.2261, 1.32 ) }
    dend_34 { pt3dadd( 33.0829, -66.7692, -34.2971, 1.68 ) }
    dend_34 { pt3dadd( 33.2197, -67.7785, -34.4054, 1.2 ) }
    dend_34 { pt3dadd( 33.2945, -68.379, -34.5374, 0.12 ) }
    dend_34 { pt3dadd( 33.3165, -68.6069, -34.6049, 0.12 ) }
    dend_34 { pt3dadd( 33.3567, -69.2561, -34.8283, 0.12 ) }
    dend_34 { pt3dadd( 33.3882, -70.1953, -35.1748, 1.32 ) }
    dend_34 { pt3dadd( 33.3958, -70.8274, -35.4224, 2.04 ) }
    dend_34 { pt3dadd( 33.431, -72.5296, -36.085, 0.36 ) }
    dend_34 { pt3dadd( 33.4667, -73.4971, -36.4327, 0.36 ) }
    dend_34 { pt3dadd( 33.4889, -74.257, -36.653, 0.36 ) }
    dend_34 { pt3dadd( 33.5061, -74.6591, -36.7411, 0.36 ) }
    dend_34 { pt3dadd( 33.5274, -75.102, -36.7962, 0.36 ) }
    dend_34 { pt3dadd( 33.5746, -76.0222, -36.8408, 1.92 ) }
    dend_34 { pt3dadd( 33.6193, -76.7043, -36.8083, 2.52 ) }
    dend_34 { pt3dadd( 33.7298, -77.9689, -36.7426, 0.24 ) }
    dend_34 { pt3dadd( 33.7952, -78.5746, -36.6607, 0.24 ) }
    dend_34 { pt3dadd( 33.8657, -79.1707, -36.5515, 0.84 ) }
    dend_34 { pt3dadd( 33.9472, -79.8358, -36.4043, 1.08 ) }
    dend_34 { pt3dadd( 34.0302, -80.516, -36.1991, 0.36 ) }
    dend_34 { pt3dadd( 34.1663, -81.3687, -35.8946, 0.36 ) }
    dend_34 { pt3dadd( 34.4641, -82.8299, -35.318, 1.44 ) }
    dend_34 { pt3dadd( 34.6117, -83.4695, -35.0476, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_34 { pt3dadd( 34.7338, -83.9302, -34.8529, 1.56 ) }
    dend_34 { pt3dadd( 35.03, -84.977, -34.3551, 0.12 ) }
    dend_34 { pt3dadd( 35.1765, -85.4792, -34.1121, 0.12 ) }
    dend_34 { pt3dadd( 35.3279, -85.9863, -33.8782, 0.12 ) }
    dend_34 { pt3dadd( 35.3711, -86.1324, -33.8211, 0.48 ) }
    dend_34 { pt3dadd( 35.6168, -86.9545, -33.4929, 0.84 ) }
    dend_34 { pt3dadd( 36.0645, -88.5498, -32.9032, 0.12 ) }
    dend_34 { pt3dadd( 36.2445, -89.2112, -32.6918, 0.12 ) }
    dend_34 { pt3dadd( 36.324, -89.5196, -32.588, 0.24 ) }
    dend_34 { pt3dadd( 36.4376, -89.955, -32.4403, 0.24 ) }
    dend_34 { pt3dadd( 36.5236, -90.2911, -32.3335, 0.24 ) }
    dend_34 { pt3dadd( 36.6259, -90.7119, -32.214, 0.48 ) }
    dend_34 { pt3dadd( 36.6778, -90.9584, -32.1697, 0.6 ) }
    dend_34 { pt3dadd( 36.7576, -91.3713, -32.0899, 0.12 ) }
    dend_34 { pt3dadd( 36.823, -91.7108, -32.0197, 0.12 ) }
    dend_34 { pt3dadd( 36.8838, -92.0407, -31.947, 0.12 ) }
    dend_34 { pt3dadd( 37.0883, -93.2024, -31.683, 2.4 ) }
    dend_34 { pt3dadd( 37.2019, -93.8627, -31.533, 2.88 ) }
    dend_34 { pt3dadd( 37.3038, -94.5268, -31.3935, 2.4 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 19/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 30.7665, -24.6229, -28.4019, 0.12 ) }
    dend_29 { pt3dadd( 31.6736, -25.0809, -26.9979, 0.12 ) }
    dend_29 { pt3dadd( 32.0527, -25.2137, -26.4525, 0.12 ) }
    dend_29 { pt3dadd( 32.6458, -25.3519, -25.6893, 0.72 ) }
    dend_29 { pt3dadd( 33.9163, -25.5225, -24.2213, 0.72 ) }
    dend_29 { pt3dadd( 34.4878, -25.5473, -23.6645, 0.12 ) }
    dend_29 { pt3dadd( 34.9531, -25.548, -23.2858, 0.12 ) }
    dend_29 { pt3dadd( 35.7331, -25.4642, -22.691, 1.68 ) }
    dend_29 { pt3dadd( 36.2713, -25.3828, -22.3505, 2.28 ) }
    dend_29 { pt3dadd( 37.2194, -25.2195, -21.9019, 1.92 ) }
    dend_29 { pt3dadd( 38.3511, -25.0761, -21.3633, 0.36 ) }
    dend_29 { pt3dadd( 39.3008, -25.0322, -20.8373, 0.36 ) }
    dend_29 { pt3dadd( 40.0287, -25.1034, -20.2736, 0.6 ) }
    dend_29 { pt3dadd( 40.3367, -25.1857, -19.8962, 0.36 ) }
    dend_29 { pt3dadd( 40.6047, -25.2891, -19.4947, 0.36 ) }
    dend_29 { pt3dadd( 41.9528, -25.9181, -17.2488, 0.36 ) }
    dend_29 { pt3dadd( 42.1876, -26.0425, -16.8334, 1.2 ) }
    dend_29 { pt3dadd( 42.943, -26.4787, -15.3861, 1.92 ) }
    dend_29 { pt3dadd( 44.0808, -27.1638, -13.1796, 0.24 ) }
    dend_29 { pt3dadd( 44.6597, -27.5061, -12.0471, 2.16 ) }
    dend_29 { pt3dadd( 44.8819, -27.6263, -11.6409, 3.0 ) }
    dend_29 { pt3dadd( 45.1994, -27.737, -11.2127, 3.0 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 41/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -11.7677, -248.61, -40.7601, 0.12 ) }
    dend_23 { pt3dadd( -10.7934, -248.541, -41.2937, 0.12 ) }
    dend_23 { pt3dadd( -10.3451, -248.538, -41.5029, 0.12 ) }
    dend_23 { pt3dadd( -10.0982, -248.55, -41.6073, 0.12 ) }
    dend_23 { pt3dadd( -9.3153, -248.596, -41.9137, 0.6 ) }
    dend_23 { pt3dadd( -8.97601, -248.617, -42.0464, 0.6 ) }
    dend_23 { pt3dadd( -8.35712, -248.654, -42.2886, 0.12 ) }
    dend_23 { pt3dadd( -7.40809, -248.755, -42.5829, 0.12 ) }
    dend_23 { pt3dadd( -7.09541, -248.8, -42.6849, 0.84 ) }
    dend_23 { pt3dadd( -6.84368, -248.845, -42.7648, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 51/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -11.7677, -248.61, -40.7601, 1.56 ) }
    dend_18 { pt3dadd( -11.6594, -249.175, -40.7438, 1.56 ) }
    dend_18 { pt3dadd( -11.5092, -249.959, -40.7214, 2.28 ) }
    dend_18 { pt3dadd( -11.4206, -250.421, -40.7081, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 16.0312, 81.3913, 9.51098, 0.48 ) }
    dend_12 { pt3dadd( 16.779, 83.8179, 10.2276, 0.48 ) }
    dend_12 { pt3dadd( 17.0026, 84.6765, 10.4164, 0.36 ) }
    dend_12 { pt3dadd( 17.1888, 85.5592, 10.5626, 0.36 ) }
    dend_12 { pt3dadd( 17.329, 86.4741, 10.6762, 0.36 ) }
    dend_12 { pt3dadd( 17.4051, 87.2549, 10.7577, 0.36 ) }
    dend_12 { pt3dadd( 17.4251, 87.7032, 10.7953, 0.72 ) }
    dend_12 { pt3dadd( 17.3889, 88.1699, 10.7483, 0.72 ) }
    dend_12 { pt3dadd( 17.3212, 88.736, 10.6955, 0.36 ) }
    dend_12 { pt3dadd( 17.2135, 89.4386, 10.6391, 0.36 ) }
    dend_12 { pt3dadd( 17.1306, 90.0628, 10.6015, 1.2 ) }
    dend_12 { pt3dadd( 17.0602, 90.7743, 10.5749, 1.8 ) }
    dend_12 { pt3dadd( 16.9853, 91.7624, 10.5769, 1.8 ) }
    dend_12 { pt3dadd( 16.9121, 93.1296, 10.6278, 0.36 ) }
    dend_12 { pt3dadd( 16.901, 93.5759, 10.6224, 0.36 ) }
    dend_12 { pt3dadd( 16.9091, 94.5066, 10.6033, 0.72 ) }
    dend_12 { pt3dadd( 16.9288, 94.962, 10.5911, 0.84 ) }
    dend_12 { pt3dadd( 16.9873, 95.9577, 10.5746, 0.36 ) }
    dend_12 { pt3dadd( 17.0347, 96.7531, 10.5727, 1.08 ) }
    dend_12 { pt3dadd( 17.1254, 98.4325, 10.5124, 2.64 ) }
    dend_12 { pt3dadd( 17.1814, 99.5233, 10.4413, 3.61 ) }
    dend_12 { pt3dadd( 17.202, 100.029, 10.377, 3.61 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 77/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 16.0312, 81.3913, 9.51098, 0.6 ) }
    dend_9 { pt3dadd( 15.7867, 82.6906, 9.37306, 0.6 ) }
    dend_9 { pt3dadd( 15.7214, 83.5686, 9.22281, 0.6 ) }
    dend_9 { pt3dadd( 15.7164, 84.78, 8.8993, 0.6 ) }
    dend_9 { pt3dadd( 15.7311, 85.311, 8.66223, 0.6 ) }
    dend_9 { pt3dadd( 15.7374, 86.0814, 8.27928, 1.68 ) }
    dend_9 { pt3dadd( 15.7227, 86.8408, 7.88526, 2.04 ) }
    dend_9 { pt3dadd( 15.7431, 87.3253, 7.5698, 1.8 ) }
    dend_9 { pt3dadd( 15.723, 87.9145, 7.09248, 2.04 ) }
    dend_9 { pt3dadd( 15.4523, 88.8908, 6.15852, 0.48 ) }
    dend_9 { pt3dadd( 15.1917, 89.3458, 5.73629, 0.48 ) }
    dend_9 { pt3dadd( 15.0467, 89.5102, 5.60243, 0.72 ) }
    dend_9 { pt3dadd( 14.6788, 89.8794, 5.34451, 0.96 ) }
    dend_9 { pt3dadd( 14.1801, 90.3746, 5.02217, 0.72 ) }
    dend_9 { pt3dadd( 13.7747, 90.8059, 4.78025, 1.32 ) }
    dend_9 { pt3dadd( 13.4374, 91.2335, 4.57131, 1.8 ) }
    dend_9 { pt3dadd( 12.9972, 91.9226, 4.2438, 1.8 ) }
    dend_9 { pt3dadd( 12.6879, 92.5095, 3.99574, 0.96 ) }
    dend_9 { pt3dadd( 12.3951, 93.17, 3.71488, 0.72 ) }
    dend_9 { pt3dadd( 12.1933, 93.6641, 3.49376, 0.84 ) }
    dend_9 { pt3dadd( 11.8171, 94.5724, 3.01828, 1.56 ) }
    dend_9 { pt3dadd( 11.6178, 95.0435, 2.73471, 2.52 ) }
    dend_9 { pt3dadd( 11.4397, 95.4452, 2.47392, 2.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( 10.9095, 96.5119, 1.75442, 2.4 ) }
    dend_9 { pt3dadd( 10.4338, 97.392, 1.13161, 1.56 ) }
    dend_9 { pt3dadd( 10.0628, 98.0477, 0.631488, 0.84 ) }
    dend_9 { pt3dadd( 9.78535, 98.5195, 0.257652, 0.48 ) }
    dend_9 { pt3dadd( 9.67837, 98.7087, 0.101099, 0.24 ) }
    dend_9 { pt3dadd( 9.38481, 99.2282, -0.318983, 0.24 ) }
    dend_9 { pt3dadd( 9.17236, 99.6459, -0.762725, 0.48 ) }
    dend_9 { pt3dadd( 9.06602, 99.9033, -1.10463, 0.12 ) }
    dend_9 { pt3dadd( 8.99173, 100.146, -1.44613, 0.12 ) }
    dend_9 { pt3dadd( 8.82061, 100.766, -2.34817, 1.2 ) }
    dend_9 { pt3dadd( 8.73236, 101.112, -2.84464, 1.56 ) }
    dend_9 { pt3dadd( 8.31671, 102.801, -5.22683, 0.36 ) }
    dend_9 { pt3dadd( 8.18479, 103.349, -5.9272, 0.12 ) }
    dend_9 { pt3dadd( 7.94266, 104.318, -6.98607, 2.64 ) }
    dend_9 { pt3dadd( 7.86598, 104.623, -7.25262, 3.0 ) }
    dend_9 { pt3dadd( 7.71004, 105.145, -7.47221, 2.76 ) }
    dend_9 { pt3dadd( 7.08074, 106.82, -7.5384, 0.48 ) }
    dend_9 { pt3dadd( 5.70818, 110.022, -6.92722, 0.48 ) }
    dend_9 { pt3dadd( 5.44349, 110.706, -6.89673, 0.48 ) }
    dend_9 { pt3dadd( 5.36126, 111.149, -7.09848, 0.48 ) }
    dend_9 { pt3dadd( 5.38563, 111.635, -7.53271, 0.36 ) }
    dend_9 { pt3dadd( 5.57469, 112.493, -8.54744, 0.36 ) }
    dend_9 { pt3dadd( 5.89496, 113.33, -9.68616, 0.36 ) }
    dend_9 { pt3dadd( 6.42191, 114.479, -11.222, 2.16 ) }
    dend_9 { pt3dadd( 6.66682, 114.903, -11.7849, 3.0 ) }
    dend_9 { pt3dadd( 6.79053, 115.093, -12.0202, 3.12 ) }
    dend_9 { pt3dadd( 7.40022, 115.921, -12.9732, 3.0 ) }
    dend_9 { pt3dadd( 8.35436, 117.158, -14.2667, 0.12 ) }
    dend_9 { pt3dadd( 8.79404, 117.747, -14.8159, 0.12 ) }
    dend_9 { pt3dadd( 8.91883, 117.925, -14.962, 0.12 ) }
    dend_9 { pt3dadd( 9.48419, 118.699, -15.6271, 2.52 ) }
    dend_9 { pt3dadd( 9.71669, 119.016, -15.883, 2.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 32/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 21.0821, 58.0318, 8.44485, 0.6 ) }
    dend_7 { pt3dadd( 20.0555, 58.5401, 9.60581, 0.6 ) }
    dend_7 { pt3dadd( 19.6566, 58.7376, 10.0569, 0.6 ) }
    dend_7 { pt3dadd( 19.0926, 59.0168, 10.6947, 0.24 ) }
    dend_7 { pt3dadd( 18.7076, 59.2074, 11.13, 0.24 ) }
    dend_7 { pt3dadd( 18.3013, 59.4086, 11.5896, 0.36 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 21.0821, 58.0318, 8.44485, 0.6 ) }
    dend_4 { pt3dadd( 21.5654, 58.8155, 8.82587, 0.6 ) }
    dend_4 { pt3dadd( 22.1169, 59.7876, 9.28968, 0.72 ) }
    dend_4 { pt3dadd( 22.487, 60.4912, 9.59475, 1.08 ) }
    dend_4 { pt3dadd( 22.6896, 60.8975, 9.73912, 1.44 ) }
    dend_4 { pt3dadd( 22.9285, 61.3943, 9.91808, 1.56 ) }
    dend_4 { pt3dadd( 23.3064, 62.1905, 10.1902, 1.44 ) }
    dend_4 { pt3dadd( 23.8056, 63.3125, 10.5475, 1.56 ) }
    dend_4 { pt3dadd( 24.1056, 64.0534, 10.7671, 1.68 ) }
    dend_4 { pt3dadd( 24.3439, 64.6968, 11.0, 1.68 ) }
    dend_4 { pt3dadd( 24.5802, 65.3716, 11.2794, 1.68 ) }
    dend_4 { pt3dadd( 24.9177, 66.4029, 11.7405, 0.6 ) }
    dend_4 { pt3dadd( 25.1506, 67.1892, 12.1039, 0.36 ) }
    dend_4 { pt3dadd( 25.342, 67.8005, 12.3351, 0.36 ) }
    dend_4 { pt3dadd( 25.61, 68.6093, 12.6038, 1.44 ) }
    dend_4 { pt3dadd( 25.7649, 69.0313, 12.7221, 1.56 ) }
    dend_4 { pt3dadd( 26.0295, 69.7011, 12.8339, 1.56 ) }
    dend_4 { pt3dadd( 26.1685, 70.0262, 12.8543, 1.44 ) }
    dend_4 { pt3dadd( 26.69, 71.1599, 12.89, 0.72 ) }
    dend_4 { pt3dadd( 26.9082, 71.5815, 12.9071, 0.6 ) }
    dend_4 { pt3dadd( 27.2923, 72.2583, 12.9485, 1.2 ) }
    dend_4 { pt3dadd( 27.4819, 72.5685, 12.987, 1.32 ) }
    dend_4 { pt3dadd( 27.9467, 73.2574, 13.1065, 0.84 ) }
    dend_4 { pt3dadd( 28.7442, 74.3162, 13.4014, 1.08 ) }
    dend_4 { pt3dadd( 29.3032, 74.9886, 13.6559, 0.96 ) }
    dend_4 { pt3dadd( 29.7894, 75.5093, 13.8482, 0.48 ) }
    dend_4 { pt3dadd( 30.1918, 75.9164, 13.9875, 0.48 ) }
    dend_4 { pt3dadd( 30.6665, 76.3666, 14.1268, 0.6 ) }
    dend_4 { pt3dadd( 31.399, 77.0311, 14.2942, 0.96 ) }
    dend_4 { pt3dadd( 31.642, 77.2541, 14.3387, 0.96 ) }
    dend_4 { pt3dadd( 32.5219, 78.1297, 14.5073, 1.68 ) }
    dend_4 { pt3dadd( 33.3434, 79.021, 14.6582, 2.28 ) }
    dend_4 { pt3dadd( 34.018, 79.8372, 14.7862, 2.16 ) }
    dend_4 { pt3dadd( 34.4399, 80.4478, 14.8698, 1.92 ) }
    dend_4 { pt3dadd( 34.9236, 81.3269, 14.9345, 0.6 ) }
    dend_4 { pt3dadd( 35.3349, 82.3199, 14.962, 0.6 ) }
    dend_4 { pt3dadd( 35.5454, 82.9452, 14.9735, 0.6 ) }
    dend_4 { pt3dadd( 35.7131, 83.6103, 14.9597, 0.48 ) }
    dend_4 { pt3dadd( 35.8839, 84.7505, 14.8969, 0.48 ) }
    dend_4 { pt3dadd( 35.9551, 85.8377, 14.7781, 0.48 ) }
    dend_4 { pt3dadd( 35.9271, 86.8037, 14.5584, 1.2 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 79/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 4.20705, 107.246, -21.5516, 0.48 ) }
    dend_60 { pt3dadd( 4.21732, 108.809, -21.2073, 0.48 ) }
    dend_60 { pt3dadd( 4.24769, 109.315, -21.0662, 0.12 ) }
    dend_60 { pt3dadd( 4.31864, 110.325, -20.7679, 0.36 ) }
    dend_60 { pt3dadd( 4.38077, 111.082, -20.545, 0.48 ) }
    dend_60 { pt3dadd( 4.44064, 111.632, -20.3882, 0.48 ) }
    dend_60 { pt3dadd( 4.52922, 112.317, -20.204, 0.48 ) }
    dend_60 { pt3dadd( 4.75556, 113.473, -19.9367, 1.68 ) }
    dend_60 { pt3dadd( 4.84141, 113.811, -19.8836, 2.16 ) }
    dend_60 { pt3dadd( 4.97512, 114.263, -19.8566, 2.4 ) }
    dend_60 { pt3dadd( 5.14901, 114.8, -19.8499, 2.4 ) }
    dend_60 { pt3dadd( 5.37067, 115.451, -19.8328, 1.92 ) }
    dend_60 { pt3dadd( 5.70964, 116.427, -19.8094, 0.12 ) }
    dend_60 { pt3dadd( 5.853, 116.812, -19.8064, 0.24 ) }
    dend_60 { pt3dadd( 5.98343, 117.16, -19.7894, 0.24 ) }
    dend_60 { pt3dadd( 6.25893, 117.913, -19.7217, 0.48 ) }
    dend_60 { pt3dadd( 6.60299, 118.863, -19.5948, 0.48 ) }
    dend_60 { pt3dadd( 6.71527, 119.173, -19.5403, 1.32 ) }
    dend_60 { pt3dadd( 6.91431, 119.702, -19.4339, 1.68 ) }
    dend_60 { pt3dadd( 7.11691, 120.224, -19.3632, 1.8 ) }
    dend_60 { pt3dadd( 7.30555, 120.7, -19.3323, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( 7.42336, 120.995, -19.3409, 1.92 ) }
    dend_60 { pt3dadd( 7.70841, 121.741, -19.4215, 0.48 ) }
    dend_60 { pt3dadd( 8.04744, 122.655, -19.5783, 0.48 ) }
    dend_60 { pt3dadd( 8.32558, 123.46, -19.7343, 0.72 ) }
    dend_60 { pt3dadd( 8.61384, 124.337, -19.8913, 0.72 ) }
    dend_60 { pt3dadd( 8.87965, 125.187, -20.1524, 0.36 ) }
    dend_60 { pt3dadd( 9.05843, 125.807, -20.4058, 0.36 ) }
    dend_60 { pt3dadd( 9.25191, 126.596, -20.7822, 0.72 ) }
    dend_60 { pt3dadd( 9.41143, 127.386, -21.124, 1.08 ) }
    dend_60 { pt3dadd( 9.55142, 128.156, -21.4081, 1.32 ) }
    dend_60 { pt3dadd( 9.92399, 130.625, -22.1262, 0.48 ) }
    dend_60 { pt3dadd( 10.0053, 131.296, -22.2535, 0.36 ) }
    dend_60 { pt3dadd( 10.1287, 132.525, -22.373, 0.36 ) }
    dend_60 { pt3dadd( 10.2649, 134.2, -22.4643, 0.36 ) }
    dend_60 { pt3dadd( 10.3131, 134.769, -22.4915, 1.92 ) }
    dend_60 { pt3dadd( 10.4144, 135.57, -22.5016, 3.0 ) }
    dend_60 { pt3dadd( 10.5151, 136.121, -22.4721, 3.25 ) }
    dend_60 { pt3dadd( 10.727, 137.008, -22.492, 3.25 ) }
    dend_60 { pt3dadd( 11.2047, 138.717, -22.6632, 0.36 ) }
    dend_60 { pt3dadd( 11.388, 139.35, -22.7707, 0.48 ) }
    dend_60 { pt3dadd( 11.7634, 140.662, -22.9943, 0.48 ) }
    dend_60 { pt3dadd( 12.0406, 141.684, -23.1629, 0.48 ) }
    dend_60 { pt3dadd( 12.256, 142.65, -23.3105, 0.48 ) }
    dend_60 { pt3dadd( 12.328, 143.097, -23.3681, 0.96 ) }
    dend_60 { pt3dadd( 12.3795, 143.554, -23.4077, 1.2 ) }
    dend_60 { pt3dadd( 12.44, 144.38, -23.4692, 0.84 ) }
    dend_60 { pt3dadd( 12.4937, 145.402, -23.5326, 0.48 ) }
    dend_60 { pt3dadd( 12.5713, 146.439, -23.5785, 0.36 ) }
    dend_60 { pt3dadd( 12.6824, 147.23, -23.5982, 0.36 ) }
    dend_60 { pt3dadd( 12.9223, 148.273, -23.6259, 0.36 ) }
    dend_60 { pt3dadd( 13.1223, 148.914, -23.6559, 1.32 ) }
    dend_60 { pt3dadd( 13.4586, 149.83, -23.7109, 2.28 ) }
    dend_60 { pt3dadd( 13.6846, 150.395, -23.7505, 2.76 ) }
    dend_60 { pt3dadd( 13.9935, 151.163, -23.81, 2.4 ) }
    dend_60 { pt3dadd( 14.5436, 152.688, -23.9409, 1.08 ) }
    dend_60 { pt3dadd( 14.875, 153.784, -24.0368, 0.36 ) }
    dend_60 { pt3dadd( 15.0857, 154.662, -24.1075, 0.36 ) }
    dend_60 { pt3dadd( 15.2607, 155.576, -24.1962, 1.68 ) }
    dend_60 { pt3dadd( 15.346, 156.139, -24.2565, 2.28 ) }
    dend_60 { pt3dadd( 15.4472, 157.041, -24.3273, 2.4 ) }
    dend_60 { pt3dadd( 15.5576, 158.437, -24.396, 1.68 ) }
    dend_60 { pt3dadd( 15.6717, 160.124, -24.4257, 1.08 ) }
    dend_60 { pt3dadd( 15.7221, 160.945, -24.4345, 0.6 ) }
    dend_60 { pt3dadd( 15.7519, 161.628, -24.4404, 0.6 ) }
    dend_60 { pt3dadd( 15.8056, 162.768, -24.4493, 1.44 ) }
    dend_60 { pt3dadd( 15.8349, 163.328, -24.4594, 1.8 ) }
    dend_60 { pt3dadd( 15.8731, 164.01, -24.4848, 1.8 ) }
    dend_60 { pt3dadd( 15.9504, 164.938, -24.5297, 0.48 ) }
    dend_60 { pt3dadd( 16.0976, 166.291, -24.5942, 0.48 ) }
    dend_60 { pt3dadd( 16.2445, 167.493, -24.7231, 1.2 ) }
    dend_60 { pt3dadd( 16.4421, 168.867, -24.9355, 1.68 ) }
    dend_60 { pt3dadd( 16.6078, 169.813, -25.0922, 2.28 ) }
    dend_60 { pt3dadd( 16.859, 171.169, -25.3065, 2.52 ) }
    dend_60 { pt3dadd( 17.1851, 172.97, -25.5358, 1.2 ) }
    dend_60 { pt3dadd( 17.3783, 174.17, -25.618, 0.6 ) }
    dend_60 { pt3dadd( 17.4636, 174.922, -25.6185, 0.48 ) }
    dend_60 { pt3dadd( 17.522, 176.031, -25.5215, 0.48 ) }
    dend_60 { pt3dadd( 17.5209, 176.926, -25.341, 0.48 ) }
    dend_60 { pt3dadd( 17.484, 177.823, -25.0559, 0.48 ) }
    dend_60 { pt3dadd( 17.4309, 178.868, -24.6156, 0.48 ) }
    dend_60 { pt3dadd( 17.4145, 179.493, -24.3231, 0.48 ) }
    dend_60 { pt3dadd( 17.4293, 180.144, -24.1053, 0.48 ) }
    dend_60 { pt3dadd( 17.5221, 181.063, -23.9701, 1.08 ) }
    dend_60 { pt3dadd( 17.6927, 181.913, -24.0113, 1.68 ) }
    dend_60 { pt3dadd( 17.8653, 182.594, -24.1436, 2.04 ) }
    dend_60 { pt3dadd( 18.0496, 183.233, -24.3226, 2.04 ) }
    dend_60 { pt3dadd( 18.5875, 185.007, -24.8719, 0.96 ) }
    dend_60 { pt3dadd( 18.7828, 185.668, -25.0911, 0.48 ) }
    dend_60 { pt3dadd( 18.9625, 186.297, -25.3095, 0.48 ) }
    dend_60 { pt3dadd( 19.2211, 187.251, -25.6067, 1.56 ) }
    dend_60 { pt3dadd( 19.3058, 187.617, -25.6971, 2.16 ) }
    dend_60 { pt3dadd( 19.4689, 188.369, -25.9233, 2.64 ) }
    dend_60 { pt3dadd( 19.5767, 188.899, -26.0819, 2.64 ) }
    dend_60 { pt3dadd( 19.7215, 189.578, -26.3224, 3.12 ) }
    dend_60 { pt3dadd( 19.8645, 190.193, -26.5768, 3.12 ) }
    dend_60 { pt3dadd( 20.1591, 191.351, -27.0848, 0.6 ) }
    dend_60 { pt3dadd( 20.7144, 193.342, -27.939, 0.48 ) }
    dend_60 { pt3dadd( 20.9449, 194.09, -28.2402, 0.36 ) }
    dend_60 { pt3dadd( 21.0939, 194.546, -28.4003, 0.36 ) }
    dend_60 { pt3dadd( 21.3475, 195.352, -28.5877, 0.96 ) }
    dend_60 { pt3dadd( 21.6707, 196.373, -28.7051, 0.96 ) }
    dend_60 { pt3dadd( 21.9619, 197.35, -28.6971, 0.72 ) }
    dend_60 { pt3dadd( 22.1469, 198.149, -28.6216, 0.48 ) }
    dend_60 { pt3dadd( 22.3313, 199.175, -28.5655, 0.48 ) }
    dend_60 { pt3dadd( 22.5431, 200.742, -28.5322, 1.2 ) }
    dend_60 { pt3dadd( 22.6223, 201.535, -28.5411, 1.68 ) }
    dend_60 { pt3dadd( 22.6961, 202.548, -28.5818, 2.04 ) }
    dend_60 { pt3dadd( 22.7681, 203.651, -28.6546, 1.8 ) }
    dend_60 { pt3dadd( 22.8682, 205.029, -28.7806, 0.6 ) }
    dend_60 { pt3dadd( 22.9483, 205.939, -28.8891, 0.48 ) }
    dend_60 { pt3dadd( 23.0727, 207.067, -29.0597, 0.48 ) }
    dend_60 { pt3dadd( 23.2294, 208.183, -29.2249, 0.48 ) }
    dend_60 { pt3dadd( 23.3488, 208.825, -29.3072, 0.48 ) }
    dend_60 { pt3dadd( 23.4838, 209.39, -29.3533, 1.08 ) }
    dend_60 { pt3dadd( 23.6865, 210.163, -29.3707, 1.32 ) }
    dend_60 { pt3dadd( 23.8129, 210.603, -29.3787, 1.32 ) }
    dend_60 { pt3dadd( 24.066, 211.393, -29.3735, 0.72 ) }
    dend_60 { pt3dadd( 24.2348, 211.884, -29.3748, 0.48 ) }
    dend_60 { pt3dadd( 24.4717, 212.583, -29.3812, 0.72 ) }
    dend_60 { pt3dadd( 24.7331, 213.352, -29.4093, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_60 { pt3dadd( 25.0085, 214.179, -29.4731, 1.32 ) }
    dend_60 { pt3dadd( 25.3239, 215.174, -29.5901, 0.48 ) }
    dend_60 { pt3dadd( 25.5765, 216.044, -29.7606, 0.48 ) }
    dend_60 { pt3dadd( 25.8232, 216.898, -29.9811, 0.48 ) }
    dend_60 { pt3dadd( 26.0972, 217.841, -30.2567, 1.44 ) }
    dend_60 { pt3dadd( 26.3352, 218.671, -30.5012, 2.28 ) }
    dend_60 { pt3dadd( 26.6174, 219.679, -30.787, 1.92 ) }
    dend_60 { pt3dadd( 27.0162, 221.118, -31.1667, 0.48 ) }
    dend_60 { pt3dadd( 27.3255, 222.223, -31.3995, 0.48 ) }
    dend_60 { pt3dadd( 27.544, 223.02, -31.5101, 0.72 ) }
    dend_60 { pt3dadd( 27.6902, 223.615, -31.5374, 0.48 ) }
    dend_60 { pt3dadd( 27.8042, 224.219, -31.5029, 0.36 ) }
    dend_60 { pt3dadd( 27.8954, 225.145, -31.4826, 0.36 ) }
    dend_60 { pt3dadd( 27.8956, 226.054, -31.5345, 0.36 ) }
    dend_60 { pt3dadd( 27.8138, 227.053, -31.7054, 1.8 ) }
    dend_60 { pt3dadd( 27.6833, 228.041, -31.9619, 3.0 ) }
    dend_60 { pt3dadd( 27.5138, 229.01, -32.2785, 3.25 ) }
    dend_60 { pt3dadd( 26.9767, 231.379, -33.2527, 1.8 ) }
    dend_60 { pt3dadd( 26.7195, 232.366, -33.7261, 0.48 ) }
    dend_60 { pt3dadd( 26.5632, 232.954, -34.0376, 0.48 ) }
    dend_60 { pt3dadd( 26.4678, 233.363, -34.2606, 0.72 ) }
    dend_60 { pt3dadd( 26.3754, 233.909, -34.5203, 0.48 ) }
    dend_60 { pt3dadd( 26.3173, 234.985, -34.8694, 0.36 ) }
    dend_60 { pt3dadd( 26.3853, 235.882, -34.9525, 0.36 ) }
    dend_60 { pt3dadd( 26.4763, 236.456, -34.9641, 0.72 ) }
    dend_60 { pt3dadd( 26.6844, 237.481, -34.929, 1.08 ) }
    dend_60 { pt3dadd( 26.871, 238.316, -34.8656, 1.2 ) }
    dend_60 { pt3dadd( 27.1734, 239.601, -34.692, 0.72 ) }
    dend_60 { pt3dadd( 27.4617, 240.812, -34.4668, 0.36 ) }
    dend_60 { pt3dadd( 27.6438, 241.609, -34.3093, 0.36 ) }
    dend_60 { pt3dadd( 27.8598, 242.68, -34.0728, 0.36 ) }
    dend_60 { pt3dadd( 28.0315, 243.666, -33.8407, 0.36 ) }
    dend_60 { pt3dadd( 28.1891, 244.789, -33.6174, 1.92 ) }
    dend_60 { pt3dadd( 28.2557, 245.47, -33.4994, 2.76 ) }
    dend_60 { pt3dadd( 28.2699, 245.687, -33.4691, 3.12 ) }
    dend_60 { pt3dadd( 28.3347, 246.767, -33.3482, 2.76 ) }
    dend_60 { pt3dadd( 28.3577, 247.126, -33.3244, 2.76 ) }
    dend_60 { pt3dadd( 28.4527, 248.474, -33.2662, 0.48 ) }
    dend_60 { pt3dadd( 28.5203, 249.489, -33.256, 0.48 ) }
    dend_60 { pt3dadd( 28.5522, 250.052, -33.2522, 0.96 ) }
    dend_60 { pt3dadd( 28.5789, 250.58, -33.2516, 0.6 ) }
    dend_60 { pt3dadd( 28.6074, 251.253, -33.2574, 0.48 ) }
    dend_60 { pt3dadd( 28.6319, 251.829, -33.2463, 0.36 ) }
    dend_60 { pt3dadd( 28.7117, 253.185, -33.1282, 0.36 ) }
    dend_60 { pt3dadd( 28.7553, 253.753, -33.0714, 0.48 ) }
    dend_60 { pt3dadd( 28.8121, 254.319, -33.0218, 0.36 ) }
    dend_60 { pt3dadd( 28.8991, 254.985, -32.9581, 0.36 ) }
    dend_60 { pt3dadd( 28.9703, 255.479, -32.9022, 0.36 ) }
    dend_60 { pt3dadd( 29.1082, 256.364, -32.8418, 1.2 ) }
    dend_60 { pt3dadd( 29.1862, 256.919, -32.8341, 2.04 ) }
    dend_60 { pt3dadd( 29.263, 257.572, -32.8193, 2.16 ) }
    dend_60 { pt3dadd( 29.3334, 258.393, -32.7995, 1.68 ) }
    dend_60 { pt3dadd( 29.3823, 259.302, -32.7807, 0.48 ) }
    dend_60 { pt3dadd( 29.4263, 260.345, -32.7667, 0.36 ) }
    dend_60 { pt3dadd( 29.4962, 262.38, -32.7378, 0.36 ) }
    dend_60 { pt3dadd( 29.5305, 263.308, -32.7126, 1.2 ) }
    dend_60 { pt3dadd( 29.5538, 263.777, -32.7035, 0.84 ) }
    dend_60 { pt3dadd( 29.5997, 264.45, -32.7039, 0.48 ) }
    dend_60 { pt3dadd( 29.7279, 265.663, -32.741, 0.36 ) }
    dend_60 { pt3dadd( 29.8, 266.18, -32.7975, 0.36 ) }
    dend_60 { pt3dadd( 29.9104, 266.769, -32.9455, 1.44 ) }
    dend_60 { pt3dadd( 30.0733, 267.609, -33.22, 1.92 ) }
    dend_60 { pt3dadd( 30.177, 268.134, -33.3993, 2.04 ) }
    dend_60 { pt3dadd( 30.3528, 269.016, -33.6989, 2.04 ) }
    dend_60 { pt3dadd( 30.5894, 270.299, -34.0526, 0.48 ) }
    dend_60 { pt3dadd( 30.8247, 271.737, -34.3431, 0.48 ) }
    dend_60 { pt3dadd( 30.9084, 272.288, -34.4102, 0.6 ) }
    dend_60 { pt3dadd( 30.9566, 272.653, -34.4262, 0.48 ) }
    dend_60 { pt3dadd( 31.0848, 273.719, -34.4236, 0.48 ) }
    dend_60 { pt3dadd( 31.227, 275.202, -34.3209, 2.64 ) }
    dend_60 { pt3dadd( 31.2954, 276.123, -34.1975, 3.49 ) }
    dend_60 { pt3dadd( 31.3161, 276.522, -34.1383, 3.49 ) }
    dend_60 { pt3dadd( 31.3424, 277.097, -34.0537, 3.49 ) }
    dend_60 { pt3dadd( 31.4054, 278.7, -33.8354, 0.48 ) }
    dend_60 { pt3dadd( 31.4441, 279.751, -33.6973, 0.72 ) }
    dend_60 { pt3dadd( 31.4823, 280.5, -33.6137, 0.48 ) }
    dend_60 { pt3dadd( 31.5276, 281.069, -33.5477, 0.48 ) }
    dend_60 { pt3dadd( 31.6017, 281.807, -33.4636, 1.32 ) }
    dend_60 { pt3dadd( 31.674, 282.26, -33.4148, 1.56 ) }
    dend_60 { pt3dadd( 31.833, 282.924, -33.346, 1.56 ) }
    dend_60 { pt3dadd( 32.036, 283.579, -33.3075, 0.48 ) }
    dend_60 { pt3dadd( 32.3036, 284.359, -33.2883, 0.48 ) }
    dend_60 { pt3dadd( 32.501, 284.934, -33.2695, 0.6 ) }
    dend_60 { pt3dadd( 32.7798, 285.805, -33.2331, 0.6 ) }
    dend_60 { pt3dadd( 32.9922, 286.525, -33.1983, 0.36 ) }
    dend_60 { pt3dadd( 33.1487, 287.111, -33.1783, 0.36 ) }
    dend_60 { pt3dadd( 33.3101, 287.893, -33.1646, 0.36 ) }
    dend_60 { pt3dadd( 33.3875, 288.518, -33.1785, 1.32 ) }
    dend_60 { pt3dadd( 33.4158, 289.089, -33.197, 1.56 ) }
    dend_60 { pt3dadd( 33.4023, 289.545, -33.2097, 1.32 ) }
    dend_60 { pt3dadd( 33.3656, 290.106, -33.223, 0.36 ) }
    dend_60 { pt3dadd( 33.3358, 290.926, -33.2326, 0.36 ) }
    dend_60 { pt3dadd( 33.3484, 291.586, -33.2391, 1.2 ) }
    dend_60 { pt3dadd( 33.4106, 292.281, -33.257, 1.2 ) }
    dend_60 { pt3dadd( 33.5206, 293.095, -33.2882, 0.36 ) }
    dend_60 { pt3dadd( 33.6566, 293.88, -33.3228, 0.36 ) }
    dend_60 { pt3dadd( 33.8256, 294.686, -33.357, 0.48 ) }
    dend_60 { pt3dadd( 33.9694, 295.287, -33.406, 0.48 ) }
    dend_60 { pt3dadd( 34.1736, 296.125, -33.5033, 0.48 ) }
    dend_60 { pt3dadd( 34.2275, 296.346, -33.5414, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_60 { pt3dadd( 34.365, 296.894, -33.6463, 0.72 ) }
    dend_60 { pt3dadd( 34.5578, 297.668, -33.7863, 0.72 ) }
    dend_60 { pt3dadd( 34.655, 298.083, -33.844, 0.48 ) }
    dend_60 { pt3dadd( 34.8162, 298.757, -33.9052, 0.48 ) }
    dend_60 { pt3dadd( 35.0114, 299.556, -33.9401, 1.08 ) }
    dend_60 { pt3dadd( 35.1916, 300.247, -33.937, 1.68 ) }
    dend_60 { pt3dadd( 35.3654, 300.883, -33.9197, 1.68 ) }
    dend_60 { pt3dadd( 35.5513, 301.582, -33.901, 0.84 ) }
    dend_60 { pt3dadd( 35.6721, 302.028, -33.9048, 0.72 ) }
    dend_60 { pt3dadd( 35.908, 302.904, -34.0098, 0.72 ) }
    dend_60 { pt3dadd( 36.1627, 303.86, -34.2079, 1.32 ) }
    dend_60 { pt3dadd( 36.3092, 304.419, -34.3592, 2.4 ) }
    dend_60 { pt3dadd( 36.5158, 305.231, -34.6189, 2.76 ) }
    dend_60 { pt3dadd( 36.7101, 306.041, -34.8957, 2.04 ) }
    dend_60 { pt3dadd( 37.0298, 307.453, -35.3776, 0.48 ) }
    dend_60 { pt3dadd( 37.1731, 308.12, -35.6001, 0.48 ) }
    dend_60 { pt3dadd( 37.2832, 308.668, -35.7702, 0.6 ) }
    dend_60 { pt3dadd( 37.3475, 308.987, -35.8473, 0.48 ) }
    dend_60 { pt3dadd( 37.6157, 310.307, -36.0525, 0.48 ) }
    dend_60 { pt3dadd( 37.7225, 310.868, -36.0894, 0.72 ) }
    dend_60 { pt3dadd( 37.8452, 311.438, -36.0763, 1.08 ) }
    dend_60 { pt3dadd( 37.9515, 311.887, -36.0584, 0.72 ) }
    dend_60 { pt3dadd( 38.1055, 312.482, -36.0119, 0.48 ) }
    dend_60 { pt3dadd( 38.2492, 313.036, -35.978, 0.24 ) }
    dend_60 { pt3dadd( 38.4056, 313.622, -35.9514, 0.24 ) }
    dend_60 { pt3dadd( 38.7749, 315.091, -35.9374, 3.12 ) }
    dend_60 { pt3dadd( 38.8832, 315.526, -35.9445, 3.37 ) }
    dend_60 { pt3dadd( 39.0761, 316.314, -35.9733, 3.0 ) }
    dend_60 { pt3dadd( 39.3803, 317.792, -36.0515, 0.48 ) }
    dend_60 { pt3dadd( 39.5502, 318.85, -36.1234, 0.48 ) }
    dend_60 { pt3dadd( 39.6741, 319.818, -36.1844, 0.84 ) }
    dend_60 { pt3dadd( 39.7471, 320.478, -36.2198, 0.48 ) }
    dend_60 { pt3dadd( 39.8807, 321.503, -36.213, 0.48 ) }
    dend_60 { pt3dadd( 40.0664, 322.706, -36.1294, 0.48 ) }
    dend_60 { pt3dadd( 40.1544, 323.184, -36.0516, 0.48 ) }
    dend_60 { pt3dadd( 40.3246, 324.053, -35.8667, 0.48 ) }
    dend_60 { pt3dadd( 40.4444, 324.578, -35.7327, 0.96 ) }
    dend_60 { pt3dadd( 40.7066, 325.583, -35.5063, 1.56 ) }
    dend_60 { pt3dadd( 40.8332, 325.967, -35.4191, 1.56 ) }
    dend_60 { pt3dadd( 41.1156, 326.679, -35.332, 0.48 ) }
    dend_60 { pt3dadd( 41.1964, 326.893, -35.3373, 0.36 ) }
    dend_60 { pt3dadd( 41.3843, 327.576, -35.4351, 0.36 ) }
    dend_60 { pt3dadd( 41.6153, 328.611, -35.6368, 1.8 ) }
    dend_60 { pt3dadd( 41.753, 329.322, -35.7957, 2.64 ) }
    dend_60 { pt3dadd( 41.9954, 330.66, -36.0749, 1.56 ) }
    dend_60 { pt3dadd( 42.1695, 331.628, -36.2478, 0.36 ) }
    dend_60 { pt3dadd( 42.369, 332.715, -36.4219, 0.48 ) }
    dend_60 { pt3dadd( 42.6082, 334.059, -36.5575, 0.48 ) }
    dend_60 { pt3dadd( 42.6852, 334.512, -36.6004, 0.48 ) }
    dend_60 { pt3dadd( 42.8181, 335.192, -36.6602, 1.32 ) }
    dend_60 { pt3dadd( 42.9094, 335.551, -36.669, 1.68 ) }
    dend_60 { pt3dadd( 43.0655, 336.029, -36.6411, 1.92 ) }
    dend_60 { pt3dadd( 43.4881, 337.25, -36.5426, 0.84 ) }
    dend_60 { pt3dadd( 43.8394, 338.471, -36.4251, 0.48 ) }
    dend_60 { pt3dadd( 44.0777, 339.485, -36.2994, 0.48 ) }
    dend_60 { pt3dadd( 44.177, 340.037, -36.2233, 0.48 ) }
    dend_60 { pt3dadd( 44.3289, 341.247, -36.055, 0.48 ) }
    dend_60 { pt3dadd( 44.412, 342.426, -35.8454, 0.72 ) }
    dend_60 { pt3dadd( 44.4348, 343.208, -35.6865, 1.32 ) }
    dend_60 { pt3dadd( 44.433, 343.98, -35.503, 0.84 ) }
    dend_60 { pt3dadd( 44.4151, 344.536, -35.3622, 0.36 ) }
    dend_60 { pt3dadd( 44.4048, 345.202, -35.1968, 0.36 ) }
    dend_60 { pt3dadd( 44.4397, 346.067, -34.9904, 0.84 ) }
    dend_60 { pt3dadd( 44.5028, 346.527, -34.8627, 0.36 ) }
    dend_60 { pt3dadd( 44.6999, 347.494, -34.5606, 0.36 ) }
    dend_60 { pt3dadd( 44.9888, 348.608, -34.2078, 0.84 ) }
    dend_60 { pt3dadd( 45.1308, 349.077, -34.0524, 0.84 ) }
    dend_60 { pt3dadd( 45.3086, 349.61, -33.8956, 0.36 ) }
    dend_60 { pt3dadd( 45.7021, 350.733, -33.6315, 0.36 ) }
    dend_60 { pt3dadd( 45.9229, 351.408, -33.5043, 1.2 ) }
    dend_60 { pt3dadd( 46.1509, 352.194, -33.4062, 2.16 ) }
    dend_60 { pt3dadd( 46.2095, 352.443, -33.3968, 2.28 ) }
    dend_60 { pt3dadd( 46.4848, 353.741, -33.3912, 0.6 ) }
    dend_60 { pt3dadd( 46.6015, 354.329, -33.3933, 0.36 ) }
    dend_60 { pt3dadd( 46.7476, 355.027, -33.3938, 0.36 ) }
    dend_60 { pt3dadd( 46.8505, 355.426, -33.394, 0.36 ) }
    dend_60 { pt3dadd( 46.9787, 355.856, -33.3782, 0.36 ) }
    dend_60 { pt3dadd( 47.371, 357.02, -33.2963, 0.36 ) }
    dend_60 { pt3dadd( 47.6639, 357.827, -33.2214, 1.08 ) }
    dend_60 { pt3dadd( 47.9902, 358.689, -33.1454, 1.56 ) }
    dend_60 { pt3dadd( 48.3821, 359.687, -33.0723, 0.72 ) }
    dend_60 { pt3dadd( 48.51, 360.039, -33.056, 0.48 ) }
    dend_60 { pt3dadd( 48.7546, 360.826, -33.0399, 0.48 ) }
    dend_60 { pt3dadd( 48.9702, 361.727, -33.048, 1.68 ) }
    dend_60 { pt3dadd( 49.115, 362.405, -33.0903, 2.52 ) }
    dend_60 { pt3dadd( 49.2794, 363.205, -33.1932, 1.92 ) }
    dend_60 { pt3dadd( 49.519, 364.305, -33.3872, 0.72 ) }
    dend_60 { pt3dadd( 49.6834, 364.947, -33.5323, 0.6 ) }
    dend_60 { pt3dadd( 49.9667, 365.9, -33.802, 0.6 ) }
    dend_60 { pt3dadd( 50.3916, 367.129, -34.1871, 0.6 ) }
    dend_60 { pt3dadd( 50.8127, 368.278, -34.5627, 1.44 ) }
    dend_60 { pt3dadd( 51.0064, 368.786, -34.7295, 1.92 ) }
    dend_60 { pt3dadd( 51.3871, 369.775, -35.0268, 0.96 ) }
    dend_60 { pt3dadd( 51.6499, 370.489, -35.2085, 0.36 ) }
    dend_60 { pt3dadd( 51.9147, 371.318, -35.3397, 0.36 ) }
    dend_60 { pt3dadd( 52.0988, 372.008, -35.3719, 0.36 ) }
    dend_60 { pt3dadd( 52.2645, 372.673, -35.3401, 0.72 ) }
    dend_60 { pt3dadd( 52.4701, 373.493, -35.3594, 0.36 ) }
    dend_60 { pt3dadd( 52.6579, 374.19, -35.4123, 0.24 ) }
    dend_60 { pt3dadd( 53.0007, 375.309, -35.5639, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_60 { pt3dadd( 53.074, 375.522, -35.6109, 2.04 ) }
    dend_60 { pt3dadd( 53.4173, 376.417, -35.8546, 1.92 ) }
    dend_60 { pt3dadd( 54.2056, 378.313, -36.4525, 0.48 ) }
    dend_60 { pt3dadd( 54.5381, 379.073, -36.7119, 0.48 ) }
    dend_60 { pt3dadd( 54.8729, 379.831, -36.9761, 0.72 ) }
    dend_60 { pt3dadd( 55.3325, 380.906, -37.3394, 0.84 ) }
    dend_60 { pt3dadd( 55.8365, 382.199, -37.7439, 0.36 ) }
    dend_60 { pt3dadd( 56.0124, 382.704, -37.879, 0.24 ) }
    dend_60 { pt3dadd( 56.2369, 383.486, -38.0169, 1.2 ) }
    dend_60 { pt3dadd( 56.2919, 383.732, -38.0603, 1.68 ) }
    dend_60 { pt3dadd( 56.4319, 384.614, -38.209, 1.56 ) }
    dend_60 { pt3dadd( 56.5241, 385.522, -38.3443, 0.36 ) }
    dend_60 { pt3dadd( 56.5547, 386.191, -38.4288, 0.36 ) }
    dend_60 { pt3dadd( 56.5809, 387.451, -38.5486, 0.36 ) }
    dend_60 { pt3dadd( 56.5869, 388.014, -38.5917, 1.32 ) }
    dend_60 { pt3dadd( 56.5924, 388.587, -38.6235, 1.8 ) }
    dend_60 { pt3dadd( 56.6011, 389.047, -38.638, 1.68 ) }
    dend_60 { pt3dadd( 56.6274, 390.064, -38.6394, 0.48 ) }
    dend_60 { pt3dadd( 56.6844, 391.426, -38.6423, 0.48 ) }
    dend_60 { pt3dadd( 56.7295, 392.213, -38.6444, 1.8 ) }
    dend_60 { pt3dadd( 56.7547, 392.887, -38.6466, 2.4 ) }
    dend_60 { pt3dadd( 56.7575, 393.357, -38.627, 1.92 ) }
    dend_60 { pt3dadd( 56.7306, 394.472, -38.5067, 0.6 ) }
    dend_60 { pt3dadd( 56.7165, 394.779, -38.4461, 0.6 ) }
    dend_60 { pt3dadd( 56.6479, 395.764, -38.188, 0.6 ) }
    dend_60 { pt3dadd( 56.5834, 396.689, -37.9066, 0.6 ) }
    dend_60 { pt3dadd( 56.4903, 397.959, -37.5256, 0.6 ) }
    dend_60 { pt3dadd( 56.391, 399.289, -37.1627, 0.6 ) }
    dend_60 { pt3dadd( 56.3172, 400.394, -36.9067, 1.56 ) }
    dend_60 { pt3dadd( 56.2813, 401.071, -36.8037, 2.04 ) }
    dend_60 { pt3dadd( 56.2537, 401.794, -36.7648, 1.68 ) }
    dend_60 { pt3dadd( 56.2351, 402.795, -36.8076, 0.84 ) }
    dend_60 { pt3dadd( 56.2163, 403.645, -36.937, 0.48 ) }
    dend_60 { pt3dadd( 56.1385, 404.976, -37.214, 0.48 ) }
    dend_60 { pt3dadd( 56.0377, 406.271, -37.5079, 0.6 ) }
    dend_60 { pt3dadd( 55.9454, 407.242, -37.7104, 1.32 ) }
    dend_60 { pt3dadd( 55.8582, 408.017, -37.8523, 1.44 ) }
    dend_60 { pt3dadd( 55.739, 408.969, -37.992, 0.48 ) }
    dend_60 { pt3dadd( 55.5221, 410.729, -38.2083, 0.48 ) }
    dend_60 { pt3dadd( 55.462, 411.296, -38.2664, 1.32 ) }
    dend_60 { pt3dadd( 55.3877, 412.201, -38.3292, 2.04 ) }
    dend_60 { pt3dadd( 55.3534, 412.883, -38.3726, 1.68 ) }
    dend_60 { pt3dadd( 55.3353, 413.835, -38.4402, 0.6 ) }
    dend_60 { pt3dadd( 55.3498, 414.797, -38.5195, 0.48 ) }
    dend_60 { pt3dadd( 55.4029, 415.832, -38.6272, 0.48 ) }
    dend_60 { pt3dadd( 55.4375, 416.502, -38.7034, 0.48 ) }
    dend_60 { pt3dadd( 55.492, 417.456, -38.8169, 0.72 ) }
    dend_60 { pt3dadd( 55.5308, 418.126, -38.8934, 0.72 ) }
    dend_60 { pt3dadd( 55.5705, 418.667, -38.9451, 0.36 ) }
    dend_60 { pt3dadd( 55.6173, 419.46, -39.0132, 0.36 ) }
    dend_60 { pt3dadd( 55.6822, 420.13, -39.0595, 1.8 ) }
    dend_60 { pt3dadd( 55.8005, 420.795, -39.0892, 2.4 ) }
    dend_60 { pt3dadd( 56.0045, 421.683, -39.1014, 2.4 ) }
    dend_60 { pt3dadd( 56.2743, 422.727, -39.1256, 0.48 ) }
    dend_60 { pt3dadd( 56.3399, 422.974, -39.1321, 0.48 ) }
    dend_60 { pt3dadd( 56.5813, 423.904, -39.2122, 0.48 ) }
    dend_60 { pt3dadd( 56.7988, 424.762, -39.3382, 0.48 ) }
    dend_60 { pt3dadd( 56.9858, 425.655, -39.5436, 0.48 ) }
    dend_60 { pt3dadd( 57.0535, 426.169, -39.699, 1.08 ) }
    dend_60 { pt3dadd( 57.0538, 426.654, -39.8651, 1.92 ) }
    dend_60 { pt3dadd( 56.9706, 427.483, -40.1398, 2.16 ) }
    dend_60 { pt3dadd( 56.8929, 427.934, -40.271, 2.16 ) }
    dend_60 { pt3dadd( 56.6997, 428.988, -40.5312, 0.72 ) }
    dend_60 { pt3dadd( 56.6328, 429.479, -40.6154, 0.48 ) }
    dend_60 { pt3dadd( 56.5439, 430.444, -40.7068, 0.48 ) }
    dend_60 { pt3dadd( 56.5053, 431.352, -40.7508, 0.48 ) }
    dend_60 { pt3dadd( 56.5086, 432.729, -40.7217, 0.48 ) }
    dend_60 { pt3dadd( 56.5435, 433.3, -40.6909, 0.48 ) }
    dend_60 { pt3dadd( 56.6379, 434.116, -40.6153, 1.32 ) }
    dend_60 { pt3dadd( 56.7605, 434.9, -40.534, 1.92 ) }
    dend_60 { pt3dadd( 56.9299, 435.828, -40.389, 1.56 ) }
    dend_60 { pt3dadd( 57.0707, 436.619, -40.2319, 0.36 ) }
    dend_60 { pt3dadd( 57.2456, 437.65, -39.9719, 0.36 ) }
    dend_60 { pt3dadd( 57.378, 438.434, -39.7523, 0.6 ) }
    dend_60 { pt3dadd( 57.5098, 439.179, -39.515, 0.6 ) }
    dend_60 { pt3dadd( 57.709, 440.213, -39.1546, 0.24 ) }
    dend_60 { pt3dadd( 57.8536, 440.848, -38.929, 0.24 ) }
    dend_60 { pt3dadd( 58.098, 441.762, -38.6404, 1.92 ) }
    dend_60 { pt3dadd( 58.2401, 442.233, -38.4904, 2.4 ) }
    dend_60 { pt3dadd( 58.5815, 443.258, -38.1952, 1.92 ) }
    dend_60 { pt3dadd( 58.9035, 444.234, -37.9601, 0.48 ) }
    dend_60 { pt3dadd( 59.1877, 445.154, -37.7891, 0.48 ) }
    dend_60 { pt3dadd( 59.4909, 446.277, -37.6038, 0.48 ) }
    dend_60 { pt3dadd( 59.7168, 447.297, -37.4677, 1.44 ) }
    dend_60 { pt3dadd( 59.9272, 448.417, -37.3376, 2.04 ) }
    dend_60 { pt3dadd( 60.1075, 449.532, -37.2348, 1.08 ) }
    dend_60 { pt3dadd( 60.2327, 450.323, -37.1656, 0.6 ) }
    dend_60 { pt3dadd( 60.3814, 451.214, -37.1022, 0.48 ) }
    dend_60 { pt3dadd( 60.5925, 452.21, -37.0556, 0.48 ) }
    dend_60 { pt3dadd( 60.7456, 452.797, -37.0488, 0.48 ) }
    dend_60 { pt3dadd( 60.9149, 453.381, -37.0424, 0.96 ) }
    dend_60 { pt3dadd( 61.1712, 454.237, -37.0345, 1.44 ) }
    dend_60 { pt3dadd( 61.4504, 455.213, -37.0313, 0.84 ) }
    dend_60 { pt3dadd( 61.6381, 455.919, -37.0313, 0.48 ) }
    dend_60 { pt3dadd( 61.9193, 457.14, -37.0313, 0.48 ) }
    dend_60 { pt3dadd( 62.075, 458.037, -37.0164, 0.6 ) }
    dend_60 { pt3dadd( 62.1904, 459.054, -36.9853, 0.72 ) }
    dend_60 { pt3dadd( 62.2188, 459.625, -36.9607, 0.12 ) }
    dend_60 { pt3dadd( 62.2182, 459.851, -36.9283, 0.12 ) }
    dend_60 { pt3dadd( 62.1901, 460.63, -36.7578, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_60 { pt3dadd( 62.1519, 461.463, -36.5354, 2.28 ) }
    dend_60 { pt3dadd( 62.1195, 462.112, -36.3477, 2.52 ) }
    dend_60 { pt3dadd( 62.0874, 462.66, -36.1844, 2.52 ) }
    dend_60 { pt3dadd( 61.9526, 464.58, -35.6439, 0.72 ) }
    dend_60 { pt3dadd( 61.8374, 466.249, -35.2989, 0.72 ) }
    dend_60 { pt3dadd( 61.7838, 467.143, -35.1286, 0.96 ) }
    dend_60 { pt3dadd( 61.7578, 467.705, -35.0206, 0.6 ) }
    dend_60 { pt3dadd( 61.7382, 468.268, -34.9005, 0.48 ) }
    dend_60 { pt3dadd( 61.7009, 469.495, -34.6528, 0.48 ) }
    dend_60 { pt3dadd( 61.6829, 471.237, -34.3729, 0.48 ) }
    dend_60 { pt3dadd( 61.7139, 472.51, -34.1535, 0.48 ) }
    dend_60 { pt3dadd( 61.7856, 473.583, -33.9745, 1.92 ) }
    dend_60 { pt3dadd( 61.9345, 474.956, -33.7995, 0.96 ) }
    dend_60 { pt3dadd( 62.1141, 476.109, -33.6926, 0.48 ) }
    dend_60 { pt3dadd( 62.5324, 478.22, -33.5979, 0.48 ) }
    dend_60 { pt3dadd( 62.8568, 479.623, -33.5873, 0.48 ) }
    dend_60 { pt3dadd( 63.192, 480.942, -33.6781, 0.48 ) }
    dend_60 { pt3dadd( 63.5406, 482.166, -33.8228, 1.2 ) }
    dend_60 { pt3dadd( 63.7854, 482.927, -33.9342, 1.92 ) }
    dend_60 { pt3dadd( 64.191, 484.072, -34.1121, 1.44 ) }
    dend_60 { pt3dadd( 64.4458, 484.816, -34.2298, 1.08 ) }
    dend_60 { pt3dadd( 64.6077, 485.362, -34.3049, 0.48 ) }
    dend_60 { pt3dadd( 64.7998, 486.144, -34.3848, 0.96 ) }
    dend_60 { pt3dadd( 64.9678, 486.948, -34.4275, 0.96 ) }
    dend_60 { pt3dadd( 65.0776, 487.545, -34.4534, 0.48 ) }
    dend_60 { pt3dadd( 65.4119, 489.336, -34.4755, 0.48 ) }
    dend_60 { pt3dadd( 65.5415, 490.019, -34.4788, 0.6 ) }
    dend_60 { pt3dadd( 65.6278, 490.458, -34.4723, 0.48 ) }
    dend_60 { pt3dadd( 65.8275, 491.481, -34.4203, 0.48 ) }
    dend_60 { pt3dadd( 66.0879, 492.936, -34.2975, 0.48 ) }
    dend_60 { pt3dadd( 66.216, 493.787, -34.2088, 0.96 ) }
    dend_60 { pt3dadd( 66.299, 494.461, -34.1208, 1.2 ) }
    dend_60 { pt3dadd( 66.369, 495.248, -34.01, 0.6 ) }
    dend_60 { pt3dadd( 66.3925, 495.866, -33.9367, 0.36 ) }
    dend_60 { pt3dadd( 66.3524, 497.323, -33.8, 0.36 ) }
    dend_60 { pt3dadd( 66.2582, 498.272, -33.7479, 0.72 ) }
    dend_60 { pt3dadd( 66.1433, 499.007, -33.7513, 1.44 ) }
    dend_60 { pt3dadd( 65.9981, 499.801, -33.7708, 2.4 ) }
    dend_60 { pt3dadd( 65.7659, 501.045, -33.8226, 1.56 ) }
    dend_60 { pt3dadd( 65.6364, 501.755, -33.8525, 0.48 ) }
    dend_60 { pt3dadd( 65.3288, 503.568, -33.9061, 0.48 ) }
    dend_60 { pt3dadd( 65.2188, 504.455, -33.8788, 0.6 ) }
    dend_60 { pt3dadd( 65.1839, 504.946, -33.8279, 0.48 ) }
    dend_60 { pt3dadd( 65.1833, 505.961, -33.6135, 0.48 ) }
    dend_60 { pt3dadd( 65.2532, 506.59, -33.4199, 0.48 ) }
    dend_60 { pt3dadd( 65.4108, 507.292, -33.1401, 0.84 ) }
    dend_60 { pt3dadd( 65.8605, 508.678, -32.4757, 0.96 ) }
    dend_60 { pt3dadd( 66.2124, 509.582, -32.0198, 0.48 ) }
    dend_60 { pt3dadd( 66.5148, 510.28, -31.6573, 0.36 ) }
    dend_60 { pt3dadd( 67.0529, 511.44, -31.0587, 0.36 ) }
    dend_60 { pt3dadd( 67.5305, 512.456, -30.5805, 0.96 ) }
    dend_60 { pt3dadd( 67.627, 512.664, -30.48, 1.08 ) }
    dend_60 { pt3dadd( 67.9379, 513.363, -30.1461, 0.48 ) }
    dend_60 { pt3dadd( 68.3076, 514.25, -29.6477, 0.48 ) }
    dend_60 { pt3dadd( 68.628, 515.085, -29.1271, 0.48 ) }
    dend_60 { pt3dadd( 68.888, 515.818, -28.6378, 0.48 ) }
    dend_60 { pt3dadd( 69.2476, 516.886, -27.9862, 0.48 ) }
    dend_60 { pt3dadd( 69.6453, 518.135, -27.2923, 0.48 ) }
    dend_60 { pt3dadd( 70.075, 519.669, -26.5422, 1.68 ) }
    dend_60 { pt3dadd( 70.218, 520.217, -26.3131, 2.4 ) }
    dend_60 { pt3dadd( 70.3359, 520.688, -26.1445, 2.64 ) }
    dend_60 { pt3dadd( 70.6695, 522.16, -25.8117, 0.24 ) }
    dend_60 { pt3dadd( 70.8283, 523.279, -25.7634, 0.24 ) }
    dend_60 { pt3dadd( 70.8642, 524.317, -25.8482, 0.24 ) }
    dend_60 { pt3dadd( 70.8625, 524.43, -25.8659, 0.72 ) }
    dend_60 { pt3dadd( 70.826, 525.216, -25.9959, 0.84 ) }
    dend_60 { pt3dadd( 70.7425, 526.244, -26.1738, 0.24 ) }
    dend_60 { pt3dadd( 70.5336, 527.894, -26.4727, 0.24 ) }
    dend_60 { pt3dadd( 70.3416, 529.248, -26.753, 0.24 ) }
    dend_60 { pt3dadd( 70.2929, 529.579, -26.8262, 0.48 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 70/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 4.20705, 107.246, -21.5516, 0.12 ) }
    dend_59 { pt3dadd( 3.72501, 107.578, -22.8945, 0.12 ) }
    dend_59 { pt3dadd( 3.63388, 107.639, -23.1384, 0.12 ) }
    dend_59 { pt3dadd( 3.32758, 107.842, -23.8781, 1.2 ) }
    dend_59 { pt3dadd( 3.03409, 108.018, -24.5472, 1.44 ) }
    dend_59 { pt3dadd( 1.33743, 108.974, -28.1348, 0.36 ) }
    dend_59 { pt3dadd( 0.96187, 109.2, -28.8855, 0.36 ) }
    dend_59 { pt3dadd( 0.75779, 109.339, -29.3117, 1.8 ) }
    dend_59 { pt3dadd( 0.461509, 109.562, -29.9003, 2.16 ) }
    dend_59 { pt3dadd( -0.736745, 110.58, -32.1284, 0.36 ) }
    dend_59 { pt3dadd( -1.14254, 110.965, -32.8759, 0.36 ) }
    dend_59 { pt3dadd( -1.59137, 111.436, -33.5922, 1.32 ) }
    dend_59 { pt3dadd( -1.98808, 111.912, -34.3593, 0.24 ) }
    dend_59 { pt3dadd( -2.20099, 112.213, -34.8375, 0.24 ) }
    dend_59 { pt3dadd( -2.72686, 113.031, -36.0672, 0.6 ) }
    dend_59 { pt3dadd( -3.3986, 114.152, -37.5481, 1.68 ) }
    dend_59 { pt3dadd( -3.61034, 114.487, -37.9735, 2.04 ) }
    dend_59 { pt3dadd( -4.60821, 115.917, -39.8027, 0.36 ) }
    dend_59 { pt3dadd( -4.99585, 116.445, -40.4167, 0.36 ) }
    dend_59 { pt3dadd( -5.46402, 117.076, -41.0438, 1.56 ) }
    dend_59 { pt3dadd( -5.90707, 117.694, -41.5418, 0.36 ) }
    dend_59 { pt3dadd( -6.41885, 118.406, -42.0024, 0.6 ) }
    dend_59 { pt3dadd( -6.72841, 118.832, -42.2601, 0.12 ) }
    dend_59 { pt3dadd( -7.21661, 119.5, -42.5791, 0.12 ) }
    dend_59 { pt3dadd( -7.45291, 119.86, -42.7695, 0.48 ) }
    dend_59 { pt3dadd( -8.06354, 121.02, -43.4774, 0.12 ) }
    dend_59 { pt3dadd( -8.23817, 121.41, -43.7229, 0.12 ) }
    dend_59 { pt3dadd( -8.37086, 121.749, -43.9272, 0.12 ) }
    dend_59 { pt3dadd( -8.54859, 122.234, -44.1931, 1.68 ) }
    dend_59 { pt3dadd( -8.74321, 122.846, -44.4841, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_59 { pt3dadd( -9.09161, 124.148, -44.9934, 0.24 ) }
    dend_59 { pt3dadd( -9.22872, 124.717, -45.1633, 0.24 ) }
    dend_59 { pt3dadd( -9.32676, 125.157, -45.305, 0.48 ) }
    dend_59 { pt3dadd( -9.42804, 125.649, -45.4947, 0.12 ) }
    dend_59 { pt3dadd( -9.7038, 126.995, -46.0435, 0.12 ) }
    dend_59 { pt3dadd( -9.95242, 128.22, -46.5397, 0.12 ) }
    dend_59 { pt3dadd( -10.1142, 129.015, -46.8428, 0.12 ) }
    dend_59 { pt3dadd( -10.3483, 130.172, -47.2659, 1.68 ) }
    dend_59 { pt3dadd( -10.6556, 131.579, -47.7425, 0.12 ) }
    dend_59 { pt3dadd( -10.9132, 132.688, -48.0837, 0.12 ) }
    dend_59 { pt3dadd( -11.0468, 133.237, -48.2367, 1.32 ) }
    dend_59 { pt3dadd( -11.2012, 133.921, -48.3742, 1.68 ) }
    dend_59 { pt3dadd( -11.3867, 134.867, -48.4885, 0.12 ) }
    dend_59 { pt3dadd( -11.5309, 135.768, -48.5002, 0.12 ) }
    dend_59 { pt3dadd( -11.5622, 136.108, -48.4837, 0.36 ) }
    dend_59 { pt3dadd( -11.5795, 136.568, -48.4657, 0.12 ) }
    dend_59 { pt3dadd( -11.5832, 137.704, -48.4331, 0.12 ) }
    dend_59 { pt3dadd( -11.5641, 138.388, -48.4227, 1.56 ) }
    dend_59 { pt3dadd( -11.5149, 139.409, -48.4227, 0.12 ) }
    dend_59 { pt3dadd( -11.4005, 141.243, -48.4227, 0.12 ) }
    dend_59 { pt3dadd( -11.3792, 141.603, -48.4236, 0.48 ) }
    dend_59 { pt3dadd( -11.3619, 141.935, -48.4251, 0.12 ) }
    dend_59 { pt3dadd( -11.2967, 143.178, -48.4447, 0.12 ) }
    dend_59 { pt3dadd( -11.2534, 143.965, -48.4651, 1.2 ) }
    dend_59 { pt3dadd( -11.2213, 144.534, -48.4876, 1.2 ) }
    dend_59 { pt3dadd( -11.1889, 145.108, -48.516, 0.12 ) }
    dend_59 { pt3dadd( -11.1062, 146.006, -48.5619, 0.12 ) }
    dend_59 { pt3dadd( -11.0346, 146.607, -48.5933, 1.32 ) }
    dend_59 { pt3dadd( -10.9515, 147.171, -48.6228, 1.68 ) }
    dend_59 { pt3dadd( -10.7383, 148.524, -48.6888, 0.12 ) }
    dend_59 { pt3dadd( -10.5748, 149.528, -48.7373, 0.12 ) }
    dend_59 { pt3dadd( -10.4178, 150.527, -48.7805, 0.12 ) }
    dend_59 { pt3dadd( -10.365, 150.884, -48.7943, 0.12 ) }
    dend_59 { pt3dadd( -10.2795, 151.563, -48.8124, 0.12 ) }
    dend_59 { pt3dadd( -10.2318, 152.031, -48.8233, 1.2 ) }
    dend_59 { pt3dadd( -10.1664, 152.836, -48.8382, 0.12 ) }
    dend_59 { pt3dadd( -10.0951, 153.85, -48.8678, 0.12 ) }
    dend_59 { pt3dadd( -10.076, 154.2, -48.8805, 0.36 ) }
    dend_59 { pt3dadd( -10.0514, 154.564, -48.8946, 0.12 ) }
    dend_59 { pt3dadd( -9.95083, 155.696, -48.9391, 0.12 ) }
    dend_59 { pt3dadd( -9.89187, 156.194, -48.9579, 0.96 ) }
    dend_59 { pt3dadd( -9.81794, 156.699, -48.9725, 0.12 ) }
    dend_59 { pt3dadd( -9.61823, 157.819, -48.9286, 0.12 ) }
    dend_59 { pt3dadd( -9.5122, 158.381, -48.8955, 0.84 ) }
    dend_59 { pt3dadd( -9.40232, 158.942, -48.8531, 0.36 ) }
    dend_59 { pt3dadd( -9.3309, 159.295, -48.8197, 0.12 ) }
    dend_59 { pt3dadd( -8.8529, 161.527, -48.61, 0.12 ) }
    dend_59 { pt3dadd( -8.57153, 162.734, -48.4976, 0.24 ) }
    dend_59 { pt3dadd( -8.44958, 163.224, -48.4588, 0.48 ) }
    dend_59 { pt3dadd( -8.36277, 163.575, -48.4384, 0.12 ) }
    dend_59 { pt3dadd( -8.12584, 164.623, -48.419, 0.12 ) }
    dend_59 { pt3dadd( -8.00836, 165.319, -48.4423, 0.84 ) }
    dend_59 { pt3dadd( -7.97276, 165.684, -48.4845, 0.12 ) }
    dend_59 { pt3dadd( -7.87235, 166.805, -48.6689, 0.12 ) }
    dend_59 { pt3dadd( -7.8642, 166.975, -48.693, 0.6 ) }
    dend_59 { pt3dadd( -7.90365, 167.519, -48.8122, 0.12 ) }
    dend_59 { pt3dadd( -8.04349, 168.205, -49.0066, 0.12 ) }
    dend_59 { pt3dadd( -8.22275, 168.85, -49.207, 1.08 ) }
    dend_59 { pt3dadd( -8.46115, 169.585, -49.4965, 1.32 ) }
    dend_59 { pt3dadd( -8.70391, 170.183, -49.7753, 1.68 ) }
    dend_59 { pt3dadd( -9.1858, 171.283, -50.2979, 0.12 ) }
    dend_59 { pt3dadd( -9.5012, 171.938, -50.658, 0.12 ) }
    dend_59 { pt3dadd( -9.6541, 172.206, -50.8205, 0.48 ) }
    dend_59 { pt3dadd( -9.97668, 172.693, -51.1101, 0.12 ) }
    dend_59 { pt3dadd( -10.4568, 173.366, -51.4779, 0.12 ) }
    dend_59 { pt3dadd( -10.7451, 173.761, -51.6663, 0.48 ) }
    dend_59 { pt3dadd( -11.2962, 174.447, -51.9433, 0.12 ) }
    dend_59 { pt3dadd( -11.8914, 175.095, -52.1855, 0.12 ) }
    dend_59 { pt3dadd( -12.4825, 175.721, -52.3742, 0.12 ) }
    dend_59 { pt3dadd( -12.7669, 176.025, -52.4389, 0.84 ) }
    dend_59 { pt3dadd( -13.1665, 176.447, -52.5164, 0.84 ) }
    dend_59 { pt3dadd( -13.4181, 176.697, -52.548, 0.12 ) }
    dend_59 { pt3dadd( -14.0865, 177.31, -52.5732, 0.12 ) }
    dend_59 { pt3dadd( -14.5372, 177.688, -52.5951, 0.12 ) }
    dend_59 { pt3dadd( -14.6307, 177.76, -52.5969, 0.48 ) }
    dend_59 { pt3dadd( -15.0022, 178.027, -52.5925, 0.12 ) }
    dend_59 { pt3dadd( -15.4424, 178.318, -52.5802, 0.12 ) }
    dend_59 { pt3dadd( -16.0377, 178.654, -52.5231, 1.32 ) }
    dend_59 { pt3dadd( -16.2804, 178.757, -52.4872, 1.56 ) }
    dend_59 { pt3dadd( -17.1258, 179.05, -52.3344, 0.12 ) }
    dend_59 { pt3dadd( -17.6987, 179.233, -52.2274, 0.12 ) }
    dend_59 { pt3dadd( -18.0954, 179.347, -52.1018, 0.48 ) }
    dend_59 { pt3dadd( -18.6426, 179.484, -51.8758, 0.12 ) }
    dend_59 { pt3dadd( -18.9612, 179.572, -51.7364, 0.12 ) }
    dend_59 { pt3dadd( -19.3376, 179.692, -51.5788, 0.12 ) }
    dend_59 { pt3dadd( -19.7052, 179.831, -51.4016, 0.72 ) }
    dend_59 { pt3dadd( -20.8436, 180.361, -50.8376, 0.12 ) }
    dend_59 { pt3dadd( -21.3334, 180.631, -50.6059, 0.12 ) }
    dend_59 { pt3dadd( -22.0892, 181.092, -50.2364, 1.8 ) }
    dend_59 { pt3dadd( -22.5863, 181.415, -49.9691, 2.04 ) }
    dend_59 { pt3dadd( -23.7498, 182.2, -49.3243, 0.24 ) }
    dend_59 { pt3dadd( -24.1886, 182.509, -49.0829, 0.24 ) }
    dend_59 { pt3dadd( -24.7483, 182.935, -48.8058, 0.24 ) }
    dend_59 { pt3dadd( -25.5625, 183.6, -48.3971, 0.24 ) }
    dend_59 { pt3dadd( -26.0726, 184.033, -48.1353, 0.96 ) }
    dend_59 { pt3dadd( -26.368, 184.295, -47.9977, 1.32 ) }
    dend_59 { pt3dadd( -26.8488, 184.738, -47.8095, 0.12 ) }
    dend_59 { pt3dadd( -27.3755, 185.223, -47.6103, 0.12 ) }
    dend_59 { pt3dadd( -28.1452, 185.942, -47.3685, 0.12 ) }
    dend_59 { pt3dadd( -28.431, 186.24, -47.3102, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_59 { pt3dadd( -28.6635, 186.523, -47.2736, 0.96 ) }
    dend_59 { pt3dadd( -28.9395, 186.901, -47.235, 0.24 ) }
    dend_59 { pt3dadd( -29.2616, 187.384, -47.2112, 0.24 ) }
    dend_59 { pt3dadd( -29.4598, 187.713, -47.209, 0.12 ) }
    dend_59 { pt3dadd( -29.9644, 188.637, -47.2421, 0.12 ) }
    dend_59 { pt3dadd( -30.3322, 189.351, -47.2938, 0.12 ) }
    dend_59 { pt3dadd( -30.5471, 189.788, -47.3327, 0.96 ) }
    dend_59 { pt3dadd( -30.7382, 190.162, -47.42, 0.12 ) }
    dend_59 { pt3dadd( -31.0247, 190.675, -47.6002, 0.12 ) }
    dend_59 { pt3dadd( -31.154, 190.881, -47.6898, 0.12 ) }
    dend_59 { pt3dadd( -31.2795, 191.071, -47.7987, 1.2 ) }
    dend_59 { pt3dadd( -31.4804, 191.383, -47.9957, 1.2 ) }
    dend_59 { pt3dadd( -32.193, 192.591, -48.741, 0.12 ) }
    dend_59 { pt3dadd( -32.4614, 193.072, -49.0922, 0.12 ) }
    dend_59 { pt3dadd( -32.704, 193.57, -49.4714, 0.12 ) }
    dend_59 { pt3dadd( -32.9232, 194.068, -49.8476, 0.12 ) }
    dend_59 { pt3dadd( -33.0611, 194.423, -50.1242, 0.72 ) }
    dend_59 { pt3dadd( -33.2105, 194.829, -50.4121, 0.84 ) }
    dend_59 { pt3dadd( -33.6451, 196.112, -51.1924, 0.12 ) }
    dend_59 { pt3dadd( -33.9197, 196.943, -51.7442, 0.12 ) }
    dend_59 { pt3dadd( -33.9666, 197.069, -51.827, 0.24 ) }
    dend_59 { pt3dadd( -34.1956, 197.587, -52.1695, 0.12 ) }
    dend_59 { pt3dadd( -34.705, 198.664, -52.9291, 0.12 ) }
    dend_59 { pt3dadd( -34.797, 198.839, -53.0526, 1.2 ) }
    dend_59 { pt3dadd( -35.2696, 199.63, -53.61, 0.12 ) }
    dend_59 { pt3dadd( -35.7341, 200.306, -54.1853, 0.12 ) }
    dend_59 { pt3dadd( -36.0777, 200.804, -54.6354, 0.72 ) }
    dend_59 { pt3dadd( -36.4366, 201.272, -55.1341, 0.12 ) }
    dend_59 { pt3dadd( -36.697, 201.552, -55.5062, 0.12 ) }
    dend_59 { pt3dadd( -37.1647, 201.965, -56.1141, 0.12 ) }
    dend_59 { pt3dadd( -37.5367, 202.251, -56.5733, 1.08 ) }
    dend_59 { pt3dadd( -37.8112, 202.437, -56.929, 1.08 ) }
    dend_59 { pt3dadd( -38.5001, 202.856, -57.7693, 0.12 ) }
    dend_59 { pt3dadd( -39.0295, 203.131, -58.3659, 0.12 ) }
    dend_59 { pt3dadd( -39.1783, 203.199, -58.5398, 0.36 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 4.79638, 105.912, -73.961, 0.12 ) }
    dend_57 { pt3dadd( 5.31734, 106.955, -74.4165, 0.12 ) }
    dend_57 { pt3dadd( 5.89595, 108.153, -74.9571, 2.64 ) }
    dend_57 { pt3dadd( 6.11396, 108.638, -75.1843, 2.16 ) }
    dend_57 { pt3dadd( 6.52479, 109.691, -75.6768, 0.24 ) }
    dend_57 { pt3dadd( 6.86005, 110.632, -76.0897, 0.24 ) }
    dend_57 { pt3dadd( 7.09515, 111.343, -76.3845, 0.24 ) }
    dend_57 { pt3dadd( 7.40421, 112.429, -76.7565, 0.96 ) }
    dend_57 { pt3dadd( 7.58192, 113.173, -76.9873, 0.12 ) }
    dend_57 { pt3dadd( 7.77877, 114.1, -77.1924, 0.12 ) }
    dend_57 { pt3dadd( 7.92475, 114.831, -77.2764, 0.24 ) }
    dend_57 { pt3dadd( 8.00895, 115.27, -77.2888, 0.24 ) }
    dend_57 { pt3dadd( 8.19501, 116.185, -77.2393, 1.68 ) }
    dend_57 { pt3dadd( 8.33919, 116.882, -77.184, 2.52 ) }
    dend_57 { pt3dadd( 8.60449, 118.041, -77.136, 1.56 ) }
    dend_57 { pt3dadd( 8.71503, 118.532, -77.1419, 0.48 ) }
    dend_57 { pt3dadd( 9.01391, 120.096, -77.259, 0.48 ) }
    dend_57 { pt3dadd( 9.16188, 120.988, -77.368, 1.32 ) }
    dend_57 { pt3dadd( 9.30095, 122.015, -77.5751, 0.96 ) }
    dend_57 { pt3dadd( 9.39257, 122.798, -77.7842, 0.12 ) }
    dend_57 { pt3dadd( 9.47185, 123.577, -78.0443, 0.12 ) }
    dend_57 { pt3dadd( 9.56321, 124.536, -78.3852, 1.8 ) }
    dend_57 { pt3dadd( 9.62515, 125.192, -78.6248, 1.92 ) }
    dend_57 { pt3dadd( 9.71961, 126.187, -78.9424, 0.12 ) }
    dend_57 { pt3dadd( 9.80259, 126.989, -79.1078, 0.12 ) }
    dend_57 { pt3dadd( 9.82428, 127.227, -79.1396, 0.48 ) }
    dend_57 { pt3dadd( 9.87464, 127.755, -79.1882, 0.12 ) }
    dend_57 { pt3dadd( 9.92651, 128.322, -79.2092, 0.12 ) }
    dend_57 { pt3dadd( 9.97642, 129.223, -79.1775, 0.72 ) }
    dend_57 { pt3dadd( 9.99944, 129.98, -79.0932, 0.12 ) }
    dend_57 { pt3dadd( 9.99244, 130.799, -79.0022, 0.12 ) }
    dend_57 { pt3dadd( 9.98594, 131.14, -78.9672, 0.48 ) }
    dend_57 { pt3dadd( 9.97559, 131.468, -78.9412, 0.12 ) }
    dend_57 { pt3dadd( 9.94026, 132.29, -78.922, 0.12 ) }
    dend_57 { pt3dadd( 9.92181, 132.641, -78.9365, 1.2 ) }
    dend_57 { pt3dadd( 9.88992, 133.287, -78.9865, 1.32 ) }
    dend_57 { pt3dadd( 9.89281, 133.971, -79.0204, 0.84 ) }
    dend_57 { pt3dadd( 9.9046, 134.273, -79.0271, 0.12 ) }
    dend_57 { pt3dadd( 9.94893, 134.956, -79.0176, 0.12 ) }
    dend_57 { pt3dadd( 9.97637, 135.182, -79.006, 0.6 ) }
    dend_57 { pt3dadd( 10.0566, 135.657, -78.9742, 0.12 ) }
    dend_57 { pt3dadd( 10.2904, 136.706, -78.8855, 0.12 ) }
    dend_57 { pt3dadd( 10.4084, 137.151, -78.8496, 0.6 ) }
    dend_57 { pt3dadd( 10.5109, 137.507, -78.8829, 0.12 ) }
    dend_57 { pt3dadd( 10.6845, 138.044, -78.9976, 0.12 ) }
    dend_57 { pt3dadd( 10.9665, 138.949, -79.2562, 1.56 ) }
    dend_57 { pt3dadd( 11.0626, 139.281, -79.3693, 2.04 ) }
    dend_57 { pt3dadd( 11.248, 139.975, -79.6263, 1.68 ) }
    dend_57 { pt3dadd( 11.7896, 141.925, -80.4349, 0.12 ) }
    dend_57 { pt3dadd( 12.0455, 142.854, -80.8711, 0.12 ) }
    dend_57 { pt3dadd( 12.196, 143.45, -81.1897, 0.12 ) }
    dend_57 { pt3dadd( 12.3056, 143.94, -81.4759, 1.08 ) }
    dend_57 { pt3dadd( 12.3845, 144.323, -81.705, 1.56 ) }
    dend_57 { pt3dadd( 12.5651, 145.238, -82.3115, 0.12 ) }
    dend_57 { pt3dadd( 12.8158, 146.355, -83.0663, 0.12 ) }
    dend_57 { pt3dadd( 13.0094, 147.049, -83.6332, 0.48 ) }
    dend_57 { pt3dadd( 13.2348, 147.713, -84.2618, 0.48 ) }
    dend_57 { pt3dadd( 13.3694, 148.039, -84.6009, 0.48 ) }
    dend_57 { pt3dadd( 13.7569, 148.864, -85.5948, 1.44 ) }
    dend_57 { pt3dadd( 13.939, 149.212, -86.0332, 1.92 ) }
    dend_57 { pt3dadd( 14.2646, 149.726, -86.6946, 1.44 ) }
    dend_57 { pt3dadd( 14.7117, 150.338, -87.5458, 0.48 ) }
    dend_57 { pt3dadd( 15.2741, 151.051, -88.5683, 0.36 ) }
    dend_57 { pt3dadd( 16.0134, 151.935, -89.8386, 0.12 ) }
    dend_57 { pt3dadd( 16.449, 152.436, -90.5233, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_57 { pt3dadd( 16.7932, 152.828, -91.0637, 1.2 ) }
    dend_57 { pt3dadd( 17.7183, 153.856, -92.3925, 0.12 ) }
    dend_57 { pt3dadd( 18.0221, 154.162, -92.7853, 0.12 ) }
    dend_57 { pt3dadd( 18.2235, 154.344, -93.0223, 0.6 ) }
    dend_57 { pt3dadd( 18.4856, 154.567, -93.2739, 0.6 ) }
    dend_57 { pt3dadd( 19.0093, 155.003, -93.7907, 0.36 ) }
    dend_57 { pt3dadd( 19.3803, 155.312, -94.1185, 0.36 ) }
    dend_57 { pt3dadd( 20.0356, 155.859, -94.5655, 0.12 ) }
    dend_57 { pt3dadd( 20.4426, 156.212, -94.8037, 0.12 ) }
    dend_57 { pt3dadd( 21.0893, 156.801, -95.1441, 0.12 ) }
    dend_57 { pt3dadd( 21.9111, 157.592, -95.5762, 1.56 ) }
    dend_57 { pt3dadd( 22.4372, 158.116, -95.8349, 2.16 ) }
    dend_57 { pt3dadd( 23.1953, 158.926, -96.2095, 0.24 ) }
    dend_57 { pt3dadd( 24.1907, 160.111, -96.7887, 0.24 ) }
    dend_57 { pt3dadd( 24.5821, 160.658, -97.071, 0.12 ) }
    dend_57 { pt3dadd( 25.2148, 161.659, -97.6069, 1.68 ) }
    dend_57 { pt3dadd( 25.389, 161.989, -97.7981, 2.28 ) }
    dend_57 { pt3dadd( 25.5502, 162.368, -98.0411, 2.28 ) }
    dend_57 { pt3dadd( 26.0115, 163.765, -99.071, 0.12 ) }
    dend_57 { pt3dadd( 26.2231, 164.669, -99.7947, 0.12 ) }
    dend_57 { pt3dadd( 26.2682, 164.944, -100.02, 0.6 ) }
    dend_57 { pt3dadd( 26.3522, 165.894, -100.858, 0.24 ) }
    dend_57 { pt3dadd( 26.359, 166.396, -101.348, 0.24 ) }
    dend_57 { pt3dadd( 26.3507, 167.028, -101.987, 0.24 ) }
    dend_57 { pt3dadd( 26.3216, 167.463, -102.429, 0.96 ) }
    dend_57 { pt3dadd( 26.2483, 168.046, -103.062, 1.44 ) }
    dend_57 { pt3dadd( 26.0683, 169.105, -104.199, 0.12 ) }
    dend_57 { pt3dadd( 25.8725, 170.109, -105.164, 0.12 ) }
    dend_57 { pt3dadd( 25.7866, 170.532, -105.544, 0.12 ) }
    dend_57 { pt3dadd( 25.756, 170.671, -105.651, 0.48 ) }
    dend_57 { pt3dadd( 25.6964, 170.97, -105.854, 0.48 ) }
    dend_57 { pt3dadd( 25.6708, 171.11, -105.933, 0.48 ) }
    dend_57 { pt3dadd( 25.5192, 171.966, -106.289, 0.48 ) }
    dend_57 { pt3dadd( 25.3572, 172.902, -106.629, 1.32 ) }
    dend_57 { pt3dadd( 25.2753, 173.385, -106.802, 1.8 ) }
    dend_57 { pt3dadd( 25.1906, 174.114, -107.045, 0.96 ) }
    dend_57 { pt3dadd( 25.1357, 174.784, -107.241, 0.12 ) }
    dend_57 { pt3dadd( 25.0788, 175.77, -107.523, 0.12 ) }
    dend_57 { pt3dadd( 25.0528, 176.325, -107.666, 1.2 ) }
    dend_57 { pt3dadd( 25.0596, 176.767, -107.783, 1.56 ) }
    dend_57 { pt3dadd( 25.11, 177.375, -108.005, 0.12 ) }
    dend_57 { pt3dadd( 25.2308, 178.338, -108.406, 0.12 ) }
    dend_57 { pt3dadd( 25.387, 179.21, -108.808, 0.12 ) }
    dend_57 { pt3dadd( 25.5951, 180.068, -109.355, 0.12 ) }
    dend_57 { pt3dadd( 25.9752, 181.462, -110.381, 0.12 ) }
    dend_57 { pt3dadd( 26.3165, 182.612, -111.366, 0.12 ) }
    dend_57 { pt3dadd( 26.4578, 183.057, -111.773, 0.84 ) }
    dend_57 { pt3dadd( 26.5588, 183.358, -112.058, 0.96 ) }
    dend_57 { pt3dadd( 27.0491, 184.879, -113.487, 0.12 ) }
    dend_57 { pt3dadd( 27.2322, 185.543, -114.104, 0.12 ) }
    dend_57 { pt3dadd( 27.315, 186.221, -114.632, 0.12 ) }
    dend_57 { pt3dadd( 27.3394, 186.933, -115.09, 0.12 ) }
    dend_57 { pt3dadd( 27.3194, 187.551, -115.481, 0.36 ) }
    dend_57 { pt3dadd( 27.3063, 187.653, -115.532, 0.12 ) }
    dend_57 { pt3dadd( 27.1539, 188.146, -115.54, 0.12 ) }
    dend_57 { pt3dadd( 26.8903, 188.656, -115.488, 0.48 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 56/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 4.79638, 105.912, -73.961, 0.12 ) }
    dend_56 { pt3dadd( 3.09114, 107.078, -78.0308, 0.12 ) }
    dend_56 { pt3dadd( 2.73245, 107.337, -78.7739, 0.12 ) }
    dend_56 { pt3dadd( 2.20168, 107.713, -79.6447, 0.12 ) }
    dend_56 { pt3dadd( 1.82941, 107.978, -80.1677, 0.84 ) }
    dend_56 { pt3dadd( 0.991004, 108.573, -81.2172, 1.8 ) }
    dend_56 { pt3dadd( 0.688287, 108.788, -81.558, 1.92 ) }
    dend_56 { pt3dadd( -0.0640132, 109.357, -82.0743, 0.12 ) }
    dend_56 { pt3dadd( -0.972313, 110.126, -82.6394, 0.12 ) }
    dend_56 { pt3dadd( -1.57531, 110.671, -82.9452, 0.96 ) }
    dend_56 { pt3dadd( -1.86568, 110.951, -83.0711, 1.2 ) }
    dend_56 { pt3dadd( -2.54418, 111.65, -83.2953, 0.12 ) }
    dend_56 { pt3dadd( -2.9818, 112.144, -83.4627, 0.12 ) }
    dend_56 { pt3dadd( -3.78993, 113.227, -83.8085, 0.12 ) }
    dend_56 { pt3dadd( -4.05903, 113.649, -83.9438, 1.2 ) }
    dend_56 { pt3dadd( -4.2211, 113.922, -84.0247, 1.44 ) }
    dend_56 { pt3dadd( -4.55806, 114.52, -84.2406, 0.6 ) }
    dend_56 { pt3dadd( -4.97837, 115.264, -84.5469, 0.12 ) }
    dend_56 { pt3dadd( -5.37815, 115.892, -84.8488, 0.12 ) }
    dend_56 { pt3dadd( -5.69532, 116.306, -85.1135, 0.96 ) }
    dend_56 { pt3dadd( -5.93179, 116.581, -85.3136, 1.32 ) }
    dend_56 { pt3dadd( -6.62588, 117.28, -85.8563, 0.12 ) }
    dend_56 { pt3dadd( -7.02037, 117.612, -86.1313, 0.12 ) }
    dend_56 { pt3dadd( -7.51588, 117.958, -86.4641, 0.12 ) }
    dend_56 { pt3dadd( -8.44092, 118.509, -87.0905, 0.12 ) }
    dend_56 { pt3dadd( -9.00104, 118.825, -87.469, 1.08 ) }
    dend_56 { pt3dadd( -9.41148, 119.042, -87.7285, 1.8 ) }
    dend_56 { pt3dadd( -9.95625, 119.303, -88.0881, 1.2 ) }
    dend_56 { pt3dadd( -10.8069, 119.701, -88.6923, 0.12 ) }
    dend_56 { pt3dadd( -11.2098, 119.887, -88.9795, 0.12 ) }
    dend_56 { pt3dadd( -11.5442, 120.034, -89.2064, 0.12 ) }
    dend_56 { pt3dadd( -11.941, 120.199, -89.5235, 0.12 ) }
    dend_56 { pt3dadd( -13.3847, 120.76, -90.7478, 0.12 ) }
    dend_56 { pt3dadd( -13.7016, 120.878, -91.015, 1.44 ) }
    dend_56 { pt3dadd( -14.0721, 121.009, -91.3781, 2.04 ) }
    dend_56 { pt3dadd( -14.6584, 121.19, -91.9934, 1.32 ) }
    dend_56 { pt3dadd( -15.9638, 121.526, -93.3191, 0.12 ) }
    dend_56 { pt3dadd( -16.3964, 121.619, -93.7379, 0.12 ) }
    dend_56 { pt3dadd( -16.8032, 121.679, -94.0821, 0.96 ) }
    dend_56 { pt3dadd( -18.5986, 121.832, -95.513, 0.12 ) }
    dend_56 { pt3dadd( -19.2916, 121.852, -96.0021, 0.12 ) }
    dend_56 { pt3dadd( -20.0644, 121.841, -96.4898, 1.56 ) }
    dend_56 { pt3dadd( -20.4033, 121.821, -96.6594, 1.8 ) }
    dend_56 { pt3dadd( -21.3356, 121.76, -97.1228, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_56 { pt3dadd( -21.591, 121.745, -97.2365, 0.12 ) }
    dend_56 { pt3dadd( -22.1577, 121.717, -97.4472, 0.48 ) }
    dend_56 { pt3dadd( -23.3223, 121.677, -97.9709, 0.12 ) }
    dend_56 { pt3dadd( -24.0889, 121.661, -98.3569, 0.12 ) }
    dend_56 { pt3dadd( -24.7245, 121.652, -98.6543, 1.32 ) }
    dend_56 { pt3dadd( -25.1827, 121.635, -98.8399, 1.56 ) }
    dend_56 { pt3dadd( -26.1704, 121.53, -99.1305, 0.12 ) }
    dend_56 { pt3dadd( -26.6462, 121.426, -99.21, 0.12 ) }
    dend_56 { pt3dadd( -26.8741, 121.354, -99.2173, 0.48 ) }
    dend_56 { pt3dadd( -27.5876, 121.073, -99.2138, 0.12 ) }
    dend_56 { pt3dadd( -28.2848, 120.768, -99.1831, 0.12 ) }
    dend_56 { pt3dadd( -29.1985, 120.34, -99.1026, 0.12 ) }
    dend_56 { pt3dadd( -30.0264, 119.936, -98.9938, 0.12 ) }
    dend_56 { pt3dadd( -30.3589, 119.772, -98.9537, 0.72 ) }
    dend_56 { pt3dadd( -30.6588, 119.632, -98.8883, 0.12 ) }
    dend_56 { pt3dadd( -31.442, 119.304, -98.6705, 0.12 ) }
    dend_56 { pt3dadd( -31.9502, 119.128, -98.4982, 0.12 ) }
    dend_56 { pt3dadd( -32.4907, 118.975, -98.2936, 1.44 ) }
    dend_56 { pt3dadd( -33.073, 118.837, -98.0641, 1.8 ) }
    dend_56 { pt3dadd( -34.8014, 118.46, -97.3865, 0.12 ) }
    dend_56 { pt3dadd( -35.3463, 118.354, -97.1619, 0.12 ) }
    dend_56 { pt3dadd( -36.7845, 118.111, -96.5639, 0.12 ) }
    dend_56 { pt3dadd( -37.0998, 118.071, -96.4457, 0.24 ) }
    dend_56 { pt3dadd( -37.3472, 118.05, -96.3441, 0.12 ) }
    dend_56 { pt3dadd( -37.6955, 118.028, -96.1952, 0.12 ) }
    dend_56 { pt3dadd( -38.6576, 118.012, -95.8214, 1.32 ) }
    dend_56 { pt3dadd( -38.7666, 118.016, -95.7714, 1.56 ) }
    dend_56 { pt3dadd( -39.5156, 118.091, -95.3805, 1.56 ) }
    dend_56 { pt3dadd( -40.6051, 118.247, -94.8412, 0.24 ) }
    dend_56 { pt3dadd( -40.8261, 118.291, -94.74, 0.12 ) }
    dend_56 { pt3dadd( -41.526, 118.468, -94.4837, 0.12 ) }
    dend_56 { pt3dadd( -42.1295, 118.64, -94.3403, 0.12 ) }
    dend_56 { pt3dadd( -42.3772, 118.713, -94.2896, 0.48 ) }
    dend_56 { pt3dadd( -42.7833, 118.845, -94.2349, 0.48 ) }
    dend_56 { pt3dadd( -43.0084, 118.924, -94.2333, 0.12 ) }
    dend_56 { pt3dadd( -43.9361, 119.251, -94.2333, 0.12 ) }
    dend_56 { pt3dadd( -44.6346, 119.452, -94.2333, 0.72 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 37/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -41.1176, 30.9489, -81.3871, 0.12 ) }
    dend_52 { pt3dadd( -41.8361, 29.5461, -82.7637, 0.12 ) }
    dend_52 { pt3dadd( -42.262, 28.7773, -83.6731, 0.12 ) }
    dend_52 { pt3dadd( -42.8054, 27.8204, -84.8065, 0.12 ) }
    dend_52 { pt3dadd( -42.9326, 27.5987, -85.064, 1.56 ) }
    dend_52 { pt3dadd( -43.221, 27.0983, -85.6191, 1.56 ) }
    dend_52 { pt3dadd( -43.5208, 26.5915, -86.1479, 0.96 ) }
    dend_52 { pt3dadd( -44.1125, 25.6977, -87.0715, 0.12 ) }
    dend_52 { pt3dadd( -44.4832, 25.1632, -87.6753, 0.12 ) }
    dend_52 { pt3dadd( -44.6009, 24.9954, -87.8395, 0.12 ) }
    dend_52 { pt3dadd( -44.8422, 24.6367, -88.1348, 0.12 ) }
    dend_52 { pt3dadd( -45.1285, 24.1703, -88.4929, 0.6 ) }
    dend_52 { pt3dadd( -45.3067, 23.8565, -88.7082, 0.72 ) }
    dend_52 { pt3dadd( -46.0189, 22.4926, -89.492, 0.12 ) }
    dend_52 { pt3dadd( -46.3111, 21.8771, -89.9833, 0.12 ) }
    dend_52 { pt3dadd( -46.6922, 20.9727, -90.7484, 2.04 ) }
    dend_52 { pt3dadd( -47.2801, 19.4122, -92.1689, 0.12 ) }
    dend_52 { pt3dadd( -47.5274, 18.7128, -92.8239, 0.12 ) }
    dend_52 { pt3dadd( -47.7981, 17.9605, -93.5816, 2.28 ) }
    dend_52 { pt3dadd( -48.6936, 15.5388, -96.0336, 0.12 ) }
    dend_52 { pt3dadd( -48.9928, 14.7903, -96.8682, 0.12 ) }
    dend_52 { pt3dadd( -49.2439, 14.2723, -97.6529, 0.12 ) }
    dend_52 { pt3dadd( -49.3609, 14.0706, -98.0112, 0.12 ) }
    dend_52 { pt3dadd( -49.8349, 13.3839, -99.3369, 0.12 ) }
    dend_52 { pt3dadd( -50.1754, 12.9884, -100.159, 1.92 ) }
    dend_52 { pt3dadd( -50.4227, 12.7441, -100.642, 2.28 ) }
    dend_52 { pt3dadd( -52.5747, 10.7456, -104.759, 0.12 ) }
    dend_52 { pt3dadd( -52.8086, 10.5299, -105.174, 0.12 ) }
    dend_52 { pt3dadd( -53.3943, 9.96695, -106.191, 1.8 ) }
    dend_52 { pt3dadd( -53.6397, 9.72008, -106.591, 1.8 ) }
    dend_52 { pt3dadd( -54.0221, 9.31357, -107.191, 1.2 ) }
    dend_52 { pt3dadd( -54.7045, 8.43953, -108.135, 0.12 ) }
    dend_52 { pt3dadd( -55.052, 7.91033, -108.362, 0.12 ) }
    dend_52 { pt3dadd( -55.1658, 7.7192, -108.457, 0.6 ) }
    dend_52 { pt3dadd( -55.4153, 7.19334, -108.719, 0.12 ) }
    dend_52 { pt3dadd( -55.7329, 6.39612, -109.113, 0.12 ) }
    dend_52 { pt3dadd( -55.806, 6.20681, -109.201, 0.36 ) }
    dend_52 { pt3dadd( -55.9594, 5.77858, -109.449, 0.36 ) }
    dend_52 { pt3dadd( -56.056, 5.4824, -109.658, 0.12 ) }
    dend_52 { pt3dadd( -56.3526, 4.57221, -110.292, 0.12 ) }
    dend_52 { pt3dadd( -56.5953, 3.78005, -111.023, 0.12 ) }
    dend_52 { pt3dadd( -56.6791, 3.48559, -111.313, 0.96 ) }
    dend_52 { pt3dadd( -57.0223, 2.15694, -112.613, 0.12 ) }
    dend_52 { pt3dadd( -57.1426, 1.63263, -113.236, 0.12 ) }
    dend_52 { pt3dadd( -57.3154, 0.805449, -114.293, 2.76 ) }
    dend_52 { pt3dadd( -57.7026, -1.23125, -117.235, 0.12 ) }
    dend_52 { pt3dadd( -57.8143, -1.88835, -118.205, 0.12 ) }
    dend_52 { pt3dadd( -57.8474, -2.15293, -118.6, 0.96 ) }
    dend_52 { pt3dadd( -57.949, -4.09566, -121.595, 0.12 ) }
    dend_52 { pt3dadd( -57.9273, -4.51013, -122.316, 0.12 ) }
    dend_52 { pt3dadd( -57.7724, -5.30843, -123.805, 0.12 ) }
    dend_52 { pt3dadd( -57.6902, -5.53165, -124.205, 1.2 ) }
    dend_52 { pt3dadd( -57.5122, -5.88921, -124.846, 2.28 ) }
    dend_52 { pt3dadd( -56.968, -6.78702, -126.28, 1.68 ) }
    dend_52 { pt3dadd( -56.3963, -7.53731, -127.165, 0.12 ) }
    dend_52 { pt3dadd( -56.0591, -7.89728, -127.635, 0.12 ) }
    dend_52 { pt3dadd( -55.8592, -8.09378, -127.882, 0.12 ) }
    dend_52 { pt3dadd( -55.5935, -8.34863, -128.264, 0.12 ) }
    dend_52 { pt3dadd( -55.3235, -8.62626, -128.656, 0.6 ) }
    dend_52 { pt3dadd( -55.1342, -8.83147, -128.899, 0.6 ) }
    dend_52 { pt3dadd( -54.5495, -9.59463, -129.995, 0.24 ) }
    dend_52 { pt3dadd( -54.4508, -9.76641, -130.291, 0.24 ) }
    dend_52 { pt3dadd( -54.1974, -10.3366, -131.361, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_52 { pt3dadd( -53.9758, -10.9998, -132.526, 2.4 ) }
    dend_52 { pt3dadd( -53.9414, -11.1233, -132.724, 2.4 ) }
    dend_52 { pt3dadd( -53.634, -12.7317, -135.438, 0.12 ) }
    dend_52 { pt3dadd( -53.4845, -13.8603, -137.299, 0.12 ) }
    dend_52 { pt3dadd( -53.4145, -14.5563, -138.446, 0.12 ) }
    dend_52 { pt3dadd( -53.3741, -15.2181, -139.557, 3.12 ) }
    dend_52 { pt3dadd( -53.3725, -15.5132, -140.061, 3.12 ) }
    dend_52 { pt3dadd( -53.4622, -18.1732, -144.297, 0.12 ) }
    dend_52 { pt3dadd( -53.4905, -18.5723, -144.881, 0.12 ) }
    dend_52 { pt3dadd( -53.5111, -18.7772, -145.169, 0.48 ) }
    dend_52 { pt3dadd( -53.5622, -19.2363, -145.79, 0.12 ) }
    dend_52 { pt3dadd( -53.6176, -19.5993, -146.302, 0.12 ) }
    dend_52 { pt3dadd( -53.6928, -19.8547, -146.699, 0.48 ) }
    dend_52 { pt3dadd( -53.8825, -20.3137, -147.381, 0.12 ) }
    dend_52 { pt3dadd( -54.0627, -20.7033, -147.981, 0.12 ) }
    dend_52 { pt3dadd( -54.5386, -21.7854, -149.545, 2.76 ) }
    dend_52 { pt3dadd( -54.6277, -22.0029, -149.834, 2.76 ) }
    dend_52 { pt3dadd( -55.581, -24.4583, -152.96, 0.12 ) }
    dend_52 { pt3dadd( -55.7104, -24.8316, -153.394, 0.12 ) }
    dend_52 { pt3dadd( -55.862, -25.3161, -153.922, 0.12 ) }
    dend_52 { pt3dadd( -56.0714, -26.0401, -154.682, 0.12 ) }
    dend_52 { pt3dadd( -56.2979, -26.8926, -155.526, 1.8 ) }
    dend_52 { pt3dadd( -56.4133, -27.4813, -156.079, 2.16 ) }
    dend_52 { pt3dadd( -56.5039, -28.0853, -156.564, 1.92 ) }
    dend_52 { pt3dadd( -56.7855, -29.5793, -157.962, 0.12 ) }
    dend_52 { pt3dadd( -56.8709, -29.9043, -158.295, 0.72 ) }
    dend_52 { pt3dadd( -57.1213, -30.4992, -158.965, 0.72 ) }
    dend_52 { pt3dadd( -57.2928, -30.8258, -159.307, 0.12 ) }
    dend_52 { pt3dadd( -57.6589, -31.4349, -159.884, 0.12 ) }
    dend_52 { pt3dadd( -58.0713, -32.0646, -160.411, 0.12 ) }
    dend_52 { pt3dadd( -58.4935, -32.7152, -160.834, 2.4 ) }
    dend_52 { pt3dadd( -59.4577, -34.2451, -161.707, 0.12 ) }
    dend_52 { pt3dadd( -60.0457, -35.2213, -162.202, 0.12 ) }
    dend_52 { pt3dadd( -60.2705, -35.6402, -162.385, 0.6 ) }
    dend_52 { pt3dadd( -60.4164, -35.9466, -162.522, 0.12 ) }
    dend_52 { pt3dadd( -60.691, -36.5625, -162.779, 0.12 ) }
    dend_52 { pt3dadd( -60.7741, -36.7615, -162.861, 0.48 ) }
    dend_52 { pt3dadd( -60.9906, -37.3474, -163.163, 0.12 ) }
    dend_52 { pt3dadd( -61.4721, -38.6986, -164.018, 0.12 ) }
    dend_52 { pt3dadd( -61.8323, -39.7277, -164.718, 1.68 ) }
    dend_52 { pt3dadd( -61.9714, -40.1282, -165.003, 2.16 ) }
    dend_52 { pt3dadd( -62.0777, -40.4599, -165.236, 2.16 ) }
    dend_52 { pt3dadd( -62.6137, -42.3083, -166.527, 0.12 ) }
    dend_52 { pt3dadd( -62.7701, -42.8749, -166.905, 0.12 ) }
    dend_52 { pt3dadd( -62.8497, -43.1605, -167.106, 0.48 ) }
    dend_52 { pt3dadd( -62.8786, -43.256, -167.164, 0.12 ) }
    dend_52 { pt3dadd( -63.1733, -44.125, -167.65, 0.12 ) }
    dend_52 { pt3dadd( -63.5097, -44.9265, -168.008, 0.12 ) }
    dend_52 { pt3dadd( -63.7944, -45.4562, -168.251, 1.68 ) }
    dend_52 { pt3dadd( -64.0177, -45.8083, -168.459, 1.92 ) }
    dend_52 { pt3dadd( -64.5247, -46.5036, -168.918, 0.12 ) }
    dend_52 { pt3dadd( -64.8813, -46.928, -169.219, 0.12 ) }
    dend_52 { pt3dadd( -65.355, -47.4038, -169.57, 1.32 ) }
    dend_52 { pt3dadd( -66.6338, -48.6192, -170.505, 0.12 ) }
    dend_52 { pt3dadd( -67.1079, -49.0616, -170.875, 0.12 ) }
    dend_52 { pt3dadd( -67.4326, -49.3562, -171.169, 0.48 ) }
    dend_52 { pt3dadd( -67.664, -49.5487, -171.391, 0.12 ) }
    dend_52 { pt3dadd( -68.2249, -49.976, -171.983, 0.12 ) }
    dend_52 { pt3dadd( -68.9798, -50.5051, -172.76, 0.12 ) }
    dend_52 { pt3dadd( -69.1633, -50.6125, -172.934, 0.96 ) }
    dend_52 { pt3dadd( -70.079, -51.0506, -173.746, 0.12 ) }
    dend_52 { pt3dadd( -70.445, -51.2056, -174.049, 0.12 ) }
    dend_52 { pt3dadd( -71.2934, -51.5234, -174.691, 1.44 ) }
    dend_52 { pt3dadd( -72.0243, -51.7704, -175.174, 1.8 ) }
    dend_52 { pt3dadd( -73.1753, -52.1327, -175.773, 0.12 ) }
    dend_52 { pt3dadd( -74.6225, -52.5765, -176.388, 0.12 ) }
    dend_52 { pt3dadd( -74.9752, -52.6807, -176.5, 0.48 ) }
    dend_52 { pt3dadd( -75.207, -52.7466, -176.563, 0.12 ) }
    dend_52 { pt3dadd( -75.8435, -52.9349, -176.691, 0.12 ) }
    dend_52 { pt3dadd( -76.3084, -53.0758, -176.773, 1.08 ) }
    dend_52 { pt3dadd( -76.8823, -53.2626, -176.837, 1.68 ) }
    dend_52 { pt3dadd( -77.9587, -53.6168, -176.916, 0.12 ) }
    dend_52 { pt3dadd( -78.4246, -53.7729, -176.944, 0.12 ) }
    dend_52 { pt3dadd( -78.739, -53.8935, -176.959, 0.48 ) }
    dend_52 { pt3dadd( -78.9664, -53.9921, -176.967, 0.12 ) }
    dend_52 { pt3dadd( -79.8631, -54.4484, -177.062, 0.12 ) }
    dend_52 { pt3dadd( -80.8363, -55.0648, -177.227, 1.68 ) }
    dend_52 { pt3dadd( -81.5083, -55.6189, -177.43, 0.12 ) }
    dend_52 { pt3dadd( -82.1046, -56.2055, -177.716, 0.12 ) }
    dend_52 { pt3dadd( -82.5023, -56.6599, -177.97, 0.6 ) }
    dend_52 { pt3dadd( -83.2876, -57.6985, -178.595, 0.12 ) }
    dend_52 { pt3dadd( -83.7517, -58.438, -179.055, 0.12 ) }
    dend_52 { pt3dadd( -84.3388, -59.4776, -179.773, 0.12 ) }
    dend_52 { pt3dadd( -84.5417, -59.8473, -180.027, 0.12 ) }
    dend_52 { pt3dadd( -84.7593, -60.231, -180.288, 1.68 ) }
    dend_52 { pt3dadd( -84.9796, -60.6083, -180.518, 2.28 ) }
    dend_52 { pt3dadd( -85.4229, -61.2876, -180.85, 1.56 ) }
    dend_52 { pt3dadd( -86.0853, -62.1832, -181.237, 0.12 ) }
    dend_52 { pt3dadd( -86.4326, -62.6352, -181.35, 0.12 ) }
    dend_52 { pt3dadd( -86.7393, -63.0337, -181.442, 0.12 ) }
    dend_52 { pt3dadd( -87.0875, -63.4874, -181.546, 1.32 ) }
    dend_52 { pt3dadd( -87.3746, -63.863, -181.623, 1.56 ) }
    dend_52 { pt3dadd( -87.8093, -64.429, -181.734, 0.12 ) }
    dend_52 { pt3dadd( -88.9467, -65.9384, -181.971, 0.12 ) }
    dend_52 { pt3dadd( -89.6365, -66.8603, -182.128, 1.8 ) }
    dend_52 { pt3dadd( -89.869, -67.193, -182.186, 2.52 ) }
    dend_52 { pt3dadd( -90.0596, -67.4641, -182.235, 2.52 ) }
    dend_52 { pt3dadd( -90.6692, -68.3364, -182.412, 0.12 ) }
    dend_52 { pt3dadd( -91.4579, -69.4753, -182.661, 0.12 ) }
    dend_52 { pt3dadd( -91.8342, -70.0256, -182.773, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_52 { pt3dadd( -92.2862, -70.7171, -182.884, 2.04 ) }
    dend_52 { pt3dadd( -92.7753, -71.4931, -183.007, 2.04 ) }
    dend_52 { pt3dadd( -93.4446, -72.5983, -183.175, 0.12 ) }
    dend_52 { pt3dadd( -93.8413, -73.2951, -183.265, 0.12 ) }
    dend_52 { pt3dadd( -94.0672, -73.7453, -183.318, 0.72 ) }
    dend_52 { pt3dadd( -94.1688, -73.981, -183.33, 0.12 ) }
    dend_52 { pt3dadd( -94.3848, -74.5501, -183.316, 0.12 ) }
    dend_52 { pt3dadd( -94.4573, -74.7945, -183.292, 0.48 ) }
    dend_52 { pt3dadd( -94.5459, -75.1339, -183.27, 0.12 ) }
    dend_52 { pt3dadd( -94.8192, -76.3625, -183.29, 0.12 ) }
    dend_52 { pt3dadd( -94.9756, -77.1884, -183.351, 1.56 ) }
    dend_52 { pt3dadd( -95.0418, -77.5895, -183.399, 1.8 ) }
    dend_52 { pt3dadd( -95.1027, -78.0639, -183.478, 1.8 ) }
    dend_52 { pt3dadd( -95.2714, -79.5894, -183.791, 0.12 ) }
    dend_52 { pt3dadd( -95.3664, -80.5799, -184.043, 0.12 ) }
    dend_52 { pt3dadd( -95.3664, -80.5799, -184.043, 0.48 ) }
    dend_52 { pt3dadd( -95.3766, -80.7915, -184.131, 0.12 ) }
    dend_52 { pt3dadd( -95.3695, -81.4114, -184.436, 0.12 ) }
    dend_52 { pt3dadd( -95.3518, -81.6358, -184.562, 0.48 ) }
    dend_52 { pt3dadd( -95.3326, -81.845, -184.679, 0.12 ) }
    dend_52 { pt3dadd( -95.2552, -82.7838, -185.362, 0.12 ) }
    dend_52 { pt3dadd( -95.1778, -83.9814, -186.28, 0.48 ) }
    dend_52 { pt3dadd( -95.1646, -84.331, -186.523, 0.12 ) }
    dend_52 { pt3dadd( -95.1408, -85.0906, -187.019, 1.56 ) }
    dend_52 { pt3dadd( -95.1236, -85.7826, -187.435, 1.92 ) }
    dend_52 { pt3dadd( -95.1029, -86.8342, -187.999, 1.56 ) }
    dend_52 { pt3dadd( -95.0931, -87.3474, -188.274, 0.12 ) }
    dend_52 { pt3dadd( -95.1161, -89.6927, -189.36, 0.12 ) }
    dend_52 { pt3dadd( -95.122, -90.0165, -189.503, 0.84 ) }
    dend_52 { pt3dadd( -95.1301, -90.3575, -189.65, 0.12 ) }
    dend_52 { pt3dadd( -95.1351, -90.8868, -189.878, 0.12 ) }
    dend_52 { pt3dadd( -95.1275, -92.5047, -190.509, 0.12 ) }
    dend_52 { pt3dadd( -95.1043, -93.9678, -191.206, 2.4 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 33/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -41.1176, 30.9489, -81.3871, 0.12 ) }
    dend_51 { pt3dadd( -41.8455, 31.7296, -82.626, 0.12 ) }
    dend_51 { pt3dadd( -42.3521, 32.3015, -83.5025, 0.12 ) }
    dend_51 { pt3dadd( -43.1874, 33.3084, -84.8457, 2.4 ) }
    dend_51 { pt3dadd( -44.5457, 35.0167, -87.0672, 0.24 ) }
    dend_51 { pt3dadd( -44.8213, 35.3693, -87.5054, 0.24 ) }
    dend_51 { pt3dadd( -45.1022, 35.7397, -87.9374, 1.44 ) }
    dend_51 { pt3dadd( -45.6676, 36.512, -88.7993, 0.12 ) }
    dend_51 { pt3dadd( -46.2754, 37.4352, -89.7588, 0.12 ) }
    dend_51 { pt3dadd( -46.7837, 38.2693, -90.4708, 0.12 ) }
    dend_51 { pt3dadd( -47.2811, 39.0841, -91.115, 2.28 ) }
    dend_51 { pt3dadd( -47.8872, 40.079, -91.9505, 0.12 ) }
    dend_51 { pt3dadd( -48.3893, 40.8774, -92.6234, 0.12 ) }
    dend_51 { pt3dadd( -49.0609, 41.933, -93.4862, 0.12 ) }
    dend_51 { pt3dadd( -49.8134, 43.0935, -94.4245, 2.76 ) }
    dend_51 { pt3dadd( -50.7404, 44.4978, -95.5519, 0.24 ) }
    dend_51 { pt3dadd( -50.7404, 44.4978, -95.5519, 0.12 ) }
    dend_51 { pt3dadd( -51.2723, 45.3182, -96.1819, 0.12 ) }
    dend_51 { pt3dadd( -51.5244, 45.7089, -96.4818, 0.96 ) }
    dend_51 { pt3dadd( -51.8494, 46.2072, -96.8116, 0.96 ) }
    dend_51 { pt3dadd( -52.5514, 47.3178, -97.5014, 0.12 ) }
    dend_51 { pt3dadd( -53.1697, 48.4424, -98.1821, 0.12 ) }
    dend_51 { pt3dadd( -53.37, 48.8536, -98.4378, 0.72 ) }
    dend_51 { pt3dadd( -53.6796, 49.5496, -98.9281, 0.12 ) }
    dend_51 { pt3dadd( -53.9951, 50.2804, -99.4511, 0.12 ) }
    dend_51 { pt3dadd( -54.336, 51.0778, -99.9771, 2.16 ) }
    dend_51 { pt3dadd( -54.9673, 52.5512, -101.031, 0.12 ) }
    dend_51 { pt3dadd( -55.153, 52.9821, -101.377, 0.12 ) }
    dend_51 { pt3dadd( -55.565, 53.9338, -102.179, 0.12 ) }
    dend_51 { pt3dadd( -55.8343, 54.5549, -102.692, 0.12 ) }
    dend_51 { pt3dadd( -56.1614, 55.3165, -103.395, 1.44 ) }
    dend_51 { pt3dadd( -56.8938, 57.1159, -105.079, 0.12 ) }
    dend_51 { pt3dadd( -57.1445, 57.7173, -105.611, 0.12 ) }
    dend_51 { pt3dadd( -57.3263, 58.1774, -106.011, 1.56 ) }
    dend_51 { pt3dadd( -57.5222, 58.718, -106.457, 1.56 ) }
    dend_51 { pt3dadd( -57.949, 59.9141, -107.458, 0.12 ) }
    dend_51 { pt3dadd( -58.1295, 60.4431, -107.894, 0.12 ) }
    dend_51 { pt3dadd( -58.2917, 60.903, -108.194, 0.12 ) }
    dend_51 { pt3dadd( -58.393, 61.152, -108.384, 0.12 ) }
    dend_51 { pt3dadd( -58.8311, 62.066, -109.108, 0.12 ) }
    dend_51 { pt3dadd( -59.0367, 62.4305, -109.422, 0.12 ) }
    dend_51 { pt3dadd( -59.4201, 62.9968, -109.909, 1.92 ) }
    dend_51 { pt3dadd( -59.6964, 63.3656, -110.273, 2.16 ) }
    dend_51 { pt3dadd( -60.6877, 64.555, -111.517, 0.12 ) }
    dend_51 { pt3dadd( -61.0941, 64.9886, -111.973, 0.12 ) }
    dend_51 { pt3dadd( -61.4337, 65.3192, -112.332, 1.08 ) }
    dend_51 { pt3dadd( -61.8501, 65.6703, -112.755, 1.32 ) }
    dend_51 { pt3dadd( -62.5981, 66.204, -113.468, 0.12 ) }
    dend_51 { pt3dadd( -63.1387, 66.5282, -113.957, 0.12 ) }
    dend_51 { pt3dadd( -63.5593, 66.7315, -114.318, 0.48 ) }
    dend_51 { pt3dadd( -63.9863, 66.8969, -114.693, 0.12 ) }
    dend_51 { pt3dadd( -64.9526, 67.2467, -115.538, 0.12 ) }
    dend_51 { pt3dadd( -65.5535, 67.467, -116.071, 1.44 ) }
    dend_51 { pt3dadd( -65.8933, 67.6066, -116.377, 1.68 ) }
    dend_51 { pt3dadd( -66.9142, 68.1277, -117.355, 0.12 ) }
    dend_51 { pt3dadd( -67.6562, 68.5681, -118.048, 0.12 ) }
    dend_51 { pt3dadd( -68.2479, 68.9797, -118.57, 1.8 ) }
    dend_51 { pt3dadd( -68.8063, 69.4451, -119.03, 2.16 ) }
    dend_51 { pt3dadd( -69.6671, 70.2069, -119.669, 0.12 ) }
    dend_51 { pt3dadd( -70.1964, 70.6781, -120.09, 0.12 ) }
    dend_51 { pt3dadd( -70.6119, 71.0234, -120.393, 0.48 ) }
    dend_51 { pt3dadd( -70.6876, 71.0808, -120.445, 0.12 ) }
    dend_51 { pt3dadd( -71.1527, 71.3707, -120.774, 0.12 ) }
    dend_51 { pt3dadd( -71.9122, 71.775, -121.365, 1.68 ) }
    dend_51 { pt3dadd( -73.4773, 72.5152, -122.65, 0.12 ) }
    dend_51 { pt3dadd( -74.102, 72.7966, -123.184, 0.12 ) }
    dend_51 { pt3dadd( -74.4793, 72.9878, -123.521, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_51 { pt3dadd( -75.1545, 73.3713, -124.106, 0.12 ) }
    dend_51 { pt3dadd( -75.5986, 73.6548, -124.496, 0.12 ) }
    dend_51 { pt3dadd( -76.1105, 74.0296, -124.951, 1.56 ) }
    dend_51 { pt3dadd( -76.5366, 74.357, -125.294, 2.28 ) }
    dend_51 { pt3dadd( -77.5268, 75.1548, -126.034, 0.12 ) }
    dend_51 { pt3dadd( -77.9902, 75.5151, -126.354, 0.12 ) }
    dend_51 { pt3dadd( -78.317, 75.7502, -126.53, 0.48 ) }
    dend_51 { pt3dadd( -78.8968, 76.1372, -126.794, 0.12 ) }
    dend_51 { pt3dadd( -79.3194, 76.3981, -126.978, 0.12 ) }
    dend_51 { pt3dadd( -80.3692, 76.9674, -127.39, 2.16 ) }
    dend_51 { pt3dadd( -81.8263, 77.6163, -127.838, 0.12 ) }
    dend_51 { pt3dadd( -82.8514, 78.0122, -128.106, 0.12 ) }
    dend_51 { pt3dadd( -83.4358, 78.2166, -128.264, 0.6 ) }
    dend_51 { pt3dadd( -83.8247, 78.3387, -128.375, 0.12 ) }
    dend_51 { pt3dadd( -84.6015, 78.5608, -128.593, 0.12 ) }
    dend_51 { pt3dadd( -85.5326, 78.8082, -128.845, 2.4 ) }
    dend_51 { pt3dadd( -85.9853, 78.9315, -128.938, 2.4 ) }
    dend_51 { pt3dadd( -87.629, 79.3925, -129.251, 0.12 ) }
    dend_51 { pt3dadd( -88.9824, 79.7899, -129.453, 0.12 ) }
    dend_51 { pt3dadd( -89.8567, 80.058, -129.548, 1.68 ) }
    dend_51 { pt3dadd( -90.5208, 80.2622, -129.597, 2.16 ) }
    dend_51 { pt3dadd( -91.883, 80.6719, -129.613, 0.12 ) }
    dend_51 { pt3dadd( -92.7015, 80.9134, -129.565, 0.12 ) }
    dend_51 { pt3dadd( -93.3543, 81.0958, -129.466, 0.6 ) }
    dend_51 { pt3dadd( -93.5825, 81.1573, -129.429, 0.12 ) }
    dend_51 { pt3dadd( -94.8503, 81.4937, -129.274, 0.12 ) }
    dend_51 { pt3dadd( -95.3788, 81.6295, -129.174, 0.84 ) }
    dend_51 { pt3dadd( -95.8814, 81.7582, -129.043, 1.08 ) }
    dend_51 { pt3dadd( -96.1308, 81.8304, -128.98, 1.08 ) }
    dend_51 { pt3dadd( -96.5036, 81.9552, -128.894, 0.12 ) }
    dend_51 { pt3dadd( -97.1893, 82.223, -128.732, 0.12 ) }
    dend_51 { pt3dadd( -98.0163, 82.5822, -128.532, 1.44 ) }
    dend_51 { pt3dadd( -98.6681, 82.8608, -128.393, 1.68 ) }
    dend_51 { pt3dadd( -99.3746, 83.1606, -128.24, 0.12 ) }
    dend_51 { pt3dadd( -100.407, 83.5968, -128.037, 0.12 ) }
    dend_51 { pt3dadd( -100.659, 83.6995, -127.995, 1.32 ) }
    dend_51 { pt3dadd( -101.238, 83.9198, -127.931, 0.12 ) }
    dend_51 { pt3dadd( -101.686, 84.0801, -127.897, 0.12 ) }
    dend_51 { pt3dadd( -101.941, 84.1561, -127.868, 0.36 ) }
    dend_51 { pt3dadd( -102.362, 84.2382, -127.813, 0.12 ) }
    dend_51 { pt3dadd( -102.952, 84.3136, -127.737, 0.12 ) }
    dend_51 { pt3dadd( -103.426, 84.3612, -127.675, 0.48 ) }
    dend_51 { pt3dadd( -104.135, 84.4171, -127.598, 0.12 ) }
    dend_51 { pt3dadd( -105.089, 84.474, -127.515, 0.12 ) }
    dend_51 { pt3dadd( -105.817, 84.5047, -127.463, 1.8 ) }
    dend_51 { pt3dadd( -106.326, 84.5172, -127.435, 2.64 ) }
    dend_51 { pt3dadd( -106.686, 84.5219, -127.425, 2.64 ) }
    dend_51 { pt3dadd( -107.906, 84.5155, -127.43, 0.12 ) }
    dend_51 { pt3dadd( -108.985, 84.4883, -127.477, 0.12 ) }
    dend_51 { pt3dadd( -109.464, 84.4789, -127.501, 0.12 ) }
    dend_51 { pt3dadd( -109.849, 84.4745, -127.52, 0.48 ) }
    dend_51 { pt3dadd( -110.089, 84.4714, -127.526, 0.12 ) }
    dend_51 { pt3dadd( -110.584, 84.4767, -127.522, 0.12 ) }
    dend_51 { pt3dadd( -111.062, 84.5059, -127.493, 0.6 ) }
    dend_51 { pt3dadd( -111.488, 84.57, -127.458, 0.12 ) }
    dend_51 { pt3dadd( -112.071, 84.6959, -127.406, 0.12 ) }
    dend_51 { pt3dadd( -112.557, 84.8208, -127.328, 0.72 ) }
    dend_51 { pt3dadd( -113.065, 84.9676, -127.227, 0.96 ) }
    dend_51 { pt3dadd( -113.663, 85.1796, -127.125, 0.12 ) }
    dend_51 { pt3dadd( -114.366, 85.463, -127.035, 0.12 ) }
    dend_51 { pt3dadd( -114.813, 85.6531, -126.984, 1.2 ) }
    dend_51 { pt3dadd( -115.632, 86.0364, -126.909, 1.56 ) }
    dend_51 { pt3dadd( -116.198, 86.3314, -126.889, 1.68 ) }
    dend_51 { pt3dadd( -117.208, 86.9407, -126.897, 0.12 ) }
    dend_51 { pt3dadd( -118.089, 87.5222, -126.931, 0.12 ) }
    dend_51 { pt3dadd( -118.534, 87.8392, -127.049, 1.56 ) }
    dend_51 { pt3dadd( -119.046, 88.222, -127.213, 1.56 ) }
    dend_51 { pt3dadd( -119.643, 88.6913, -127.451, 0.12 ) }
    dend_51 { pt3dadd( -121.539, 90.2407, -128.292, 0.12 ) }
    dend_51 { pt3dadd( -121.777, 90.4417, -128.409, 0.48 ) }
    dend_51 { pt3dadd( -123.883, 92.3459, -129.773, 0.12 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 71/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -1.79722, -158.873, -16.1359, 3.37 ) }
    dend_47 { pt3dadd( -1.34276, -159.217, -14.825, 3.37 ) }
    dend_47 { pt3dadd( 0.0104588, -160.085, -11.1874, 0.12 ) }
    dend_47 { pt3dadd( 0.121817, -160.132, -10.9483, 0.12 ) }
    dend_47 { pt3dadd( 0.465615, -160.243, -10.3037, 0.12 ) }
    dend_47 { pt3dadd( 0.705019, -160.298, -9.91549, 0.72 ) }
    dend_47 { pt3dadd( 1.0145, -160.347, -9.48019, 0.72 ) }
    dend_47 { pt3dadd( 1.21367, -160.349, -9.30038, 0.12 ) }
    dend_47 { pt3dadd( 2.63276, -160.184, -8.56222, 0.12 ) }
    dend_47 { pt3dadd( 2.77884, -160.182, -8.45105, 0.96 ) }
    dend_47 { pt3dadd( 3.19273, -160.263, -7.96225, 0.96 ) }
    dend_47 { pt3dadd( 3.60289, -160.488, -7.06069, 0.12 ) }
    dend_47 { pt3dadd( 3.65314, -160.551, -6.83572, 0.12 ) }
    dend_47 { pt3dadd( 3.67461, -160.668, -6.42144, 0.84 ) }
    dend_47 { pt3dadd( 3.52991, -161.372, -4.11589, 0.24 ) }
    dend_47 { pt3dadd( 3.40213, -161.793, -2.84095, 1.92 ) }
    dend_47 { pt3dadd( 3.13676, -162.471, -0.991997, 0.24 ) }
    dend_47 { pt3dadd( 2.99631, -162.782, -0.23138, 1.68 ) }
    dend_47 { pt3dadd( 2.58593, -163.679, 1.74599, 1.68 ) }
    dend_47 { pt3dadd( 2.46117, -163.945, 2.25019, 0.12 ) }
    dend_47 { pt3dadd( 2.31123, -164.284, 2.70881, 0.12 ) }
    dend_47 { pt3dadd( 2.19885, -164.605, 3.01516, 0.6 ) }
    dend_47 { pt3dadd( 2.09129, -165.092, 3.30886, 1.08 ) }
    dend_47 { pt3dadd( 1.98678, -165.721, 3.5902, 1.08 ) }
    dend_47 { pt3dadd( 1.82631, -166.658, 3.8377, 0.12 ) }
    dend_47 { pt3dadd( 1.73343, -167.204, 3.97984, 0.12 ) }
    dend_47 { pt3dadd( 1.65474, -167.758, 4.10999, 0.12 ) }
    dend_47 { pt3dadd( 1.59699, -168.315, 4.22142, 0.12 ) }
    dend_47 { pt3dadd( 1.57478, -168.869, 4.30631, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_47 { pt3dadd( 1.58057, -169.338, 4.34426, 0.96 ) }
    dend_47 { pt3dadd( 1.60624, -169.913, 4.36491, 0.12 ) }
    dend_47 { pt3dadd( 1.63053, -170.624, 4.39061, 0.12 ) }
    dend_47 { pt3dadd( 1.62726, -171.034, 4.42014, 1.32 ) }
    dend_47 { pt3dadd( 1.6072, -171.287, 4.4463, 1.32 ) }
    dend_47 { pt3dadd( 1.51602, -172.033, 4.54416, 0.12 ) }
    dend_47 { pt3dadd( 1.39714, -172.701, 4.64615, 0.12 ) }
    dend_47 { pt3dadd( 1.36682, -172.857, 4.67184, 0.48 ) }
    dend_47 { pt3dadd( 1.27211, -173.369, 4.76449, 0.12 ) }
    dend_47 { pt3dadd( 1.24662, -173.619, 4.81002, 0.12 ) }
    dend_47 { pt3dadd( 1.24318, -173.947, 4.86887, 0.12 ) }
    dend_47 { pt3dadd( 1.30013, -174.174, 4.97636, 0.48 ) }
    dend_47 { pt3dadd( 1.42781, -174.586, 5.26604, 0.36 ) }
    dend_47 { pt3dadd( 1.50406, -174.891, 5.43318, 0.36 ) }
    dend_47 { pt3dadd( 1.56817, -175.187, 5.55186, 1.2 ) }
    dend_47 { pt3dadd( 1.63248, -175.507, 5.65863, 1.2 ) }
    dend_47 { pt3dadd( 1.9435, -177.155, 6.30851, 0.12 ) }
    dend_47 { pt3dadd( 2.06841, -177.764, 6.55532, 0.12 ) }
    dend_47 { pt3dadd( 2.29906, -179.091, 7.09598, 0.12 ) }
    dend_47 { pt3dadd( 2.39522, -179.753, 7.35353, 0.12 ) }
    dend_47 { pt3dadd( 2.44365, -180.198, 7.50474, 0.12 ) }
    dend_47 { pt3dadd( 2.5242, -181.218, 7.74591, 1.32 ) }
    dend_47 { pt3dadd( 2.60064, -182.029, 7.73787, 1.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 23/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.79722, -158.873, -16.1359, 0.12 ) }
    dend_46 { pt3dadd( -3.10278, -159.676, -16.2451, 0.12 ) }
    dend_46 { pt3dadd( -3.96913, -160.209, -16.3175, 0.12 ) }
    dend_46 { pt3dadd( -4.24327, -160.378, -16.3404, 0.96 ) }
    dend_46 { pt3dadd( -4.56636, -160.577, -16.3674, 1.08 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 28/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 9.0279, -154.316, -24.8101, 0.12 ) }
    dend_44 { pt3dadd( 9.51176, -155.072, -24.6456, 0.12 ) }
    dend_44 { pt3dadd( 9.85187, -155.71, -24.5167, 0.12 ) }
    dend_44 { pt3dadd( 10.1691, -156.31, -24.4016, 0.72 ) }
    dend_44 { pt3dadd( 10.5827, -157.086, -24.2736, 0.84 ) }
    dend_44 { pt3dadd( 10.8142, -157.509, -24.1884, 0.48 ) }
    dend_44 { pt3dadd( 10.976, -157.798, -24.1255, 0.12 ) }
    dend_44 { pt3dadd( 11.3305, -158.42, -23.9779, 0.12 ) }
    dend_44 { pt3dadd( 11.5574, -158.821, -23.8674, 0.12 ) }
    dend_44 { pt3dadd( 11.7791, -159.186, -23.7671, 0.84 ) }
    dend_44 { pt3dadd( 12.2054, -159.908, -23.6649, 0.36 ) }
    dend_44 { pt3dadd( 12.4091, -160.261, -23.6335, 0.12 ) }
    dend_44 { pt3dadd( 12.9003, -161.105, -23.5925, 0.12 ) }
    dend_44 { pt3dadd( 13.3269, -161.836, -23.5864, 1.8 ) }
    dend_44 { pt3dadd( 13.6619, -162.486, -23.6059, 1.56 ) }
    dend_44 { pt3dadd( 14.2045, -163.637, -23.6898, 0.12 ) }
    dend_44 { pt3dadd( 14.2937, -163.846, -23.7207, 0.12 ) }
    dend_44 { pt3dadd( 14.3358, -163.952, -23.7379, 0.36 ) }
    dend_44 { pt3dadd( 14.4701, -164.329, -23.8058, 0.12 ) }
    dend_44 { pt3dadd( 14.6535, -164.998, -23.9067, 0.12 ) }
    dend_44 { pt3dadd( 14.7034, -165.22, -23.9235, 0.12 ) }
    dend_44 { pt3dadd( 14.7824, -165.57, -23.9245, 0.72 ) }
    dend_44 { pt3dadd( 14.8975, -166.13, -23.9266, 0.96 ) }
    dend_44 { pt3dadd( 14.9812, -166.569, -23.9268, 0.12 ) }
    dend_44 { pt3dadd( 15.2162, -167.914, -23.9244, 0.12 ) }
    dend_44 { pt3dadd( 15.2869, -168.355, -23.9231, 0.84 ) }
    dend_44 { pt3dadd( 15.3525, -168.821, -23.93, 0.12 ) }
    dend_44 { pt3dadd( 15.4098, -169.379, -23.9426, 0.12 ) }
    dend_44 { pt3dadd( 15.4393, -169.744, -23.9527, 0.96 ) }
    dend_44 { pt3dadd( 15.4764, -170.203, -23.9691, 0.12 ) }
    dend_44 { pt3dadd( 15.534, -170.989, -24.0102, 0.12 ) }
    dend_44 { pt3dadd( 15.5831, -171.747, -24.0602, 1.68 ) }
    dend_44 { pt3dadd( 15.5961, -172.068, -24.0879, 1.68 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.0279, -154.316, -24.8101, 0.6 ) }
    dend_43 { pt3dadd( 9.53656, -153.591, -20.9359, 0.6 ) }
    dend_43 { pt3dadd( 9.72541, -153.912, -21.4652, 0.6 ) }
    dend_43 { pt3dadd( 10.3703, -154.821, -22.6741, 0.12 ) }
    dend_43 { pt3dadd( 10.6423, -155.185, -23.1038, 0.12 ) }
    dend_43 { pt3dadd( 10.9822, -155.641, -23.6409, 0.96 ) }
    dend_43 { pt3dadd( 11.3235, -156.098, -24.1801, 0.96 ) }
    dend_43 { pt3dadd( 12.0682, -157.171, -25.6317, 0.12 ) }
    dend_43 { pt3dadd( 12.3649, -157.634, -26.2596, 0.12 ) }
    dend_43 { pt3dadd( 12.526, -157.874, -26.56, 0.48 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.3038, -94.5268, -31.3935, 0.12 ) }
    dend_40 { pt3dadd( 38.6393, -95.2908, -29.1928, 0.12 ) }
    dend_40 { pt3dadd( 38.9439, -95.4603, -28.7175, 0.12 ) }
    dend_40 { pt3dadd( 39.0878, -95.5407, -28.5075, 0.6 ) }
    dend_40 { pt3dadd( 39.5006, -95.757, -27.9394, 0.12 ) }
    dend_40 { pt3dadd( 40.263, -96.1312, -26.9533, 0.12 ) }
    dend_40 { pt3dadd( 40.4758, -96.232, -26.683, 0.12 ) }
    dend_40 { pt3dadd( 40.6404, -96.2993, -26.5233, 0.12 ) }
    dend_40 { pt3dadd( 40.8715, -96.3957, -26.307, 0.12 ) }
    dend_40 { pt3dadd( 41.4276, -96.6336, -25.7893, 0.12 ) }
    dend_40 { pt3dadd( 41.6068, -96.7155, -25.6377, 0.6 ) }
    dend_40 { pt3dadd( 41.9917, -96.9332, -25.3766, 0.12 ) }
    dend_40 { pt3dadd( 42.3787, -97.1613, -25.0928, 0.12 ) }
    dend_40 { pt3dadd( 42.8866, -97.441, -24.7213, 0.6 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 85/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 37.3038, -94.5268, -31.3935, 0.24 ) }
    dend_35 { pt3dadd( 37.5046, -95.5952, -31.734, 0.24 ) }
    dend_35 { pt3dadd( 37.6256, -96.5636, -32.0588, 0.24 ) }
    dend_35 { pt3dadd( 37.6652, -97.0141, -32.207, 0.96 ) }
    dend_35 { pt3dadd( 37.7187, -97.7973, -32.4601, 1.8 ) }
    dend_35 { pt3dadd( 37.7856, -98.566, -32.7554, 0.84 ) }
    dend_35 { pt3dadd( 37.8277, -99.0612, -32.9757, 0.12 ) }
    dend_35 { pt3dadd( 37.8911, -99.8196, -33.3973, 0.12 ) }
    dend_35 { pt3dadd( 37.912, -100.215, -33.6357, 0.72 ) }
    dend_35 { pt3dadd( 37.915, -100.308, -33.6854, 0.72 ) }
    dend_35 { pt3dadd( 37.9754, -101.265, -34.1392, 0.24 ) }
    dend_35 { pt3dadd( 38.0286, -101.668, -34.2766, 0.24 ) }
    dend_35 { pt3dadd( 38.1544, -102.327, -34.4247, 0.24 ) }
    dend_35 { pt3dadd( 38.3039, -103.002, -34.4968, 0.24 ) }
    dend_35 { pt3dadd( 38.4286, -103.626, -34.5015, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_35 { pt3dadd( 38.5441, -104.339, -34.4581, 0.24 ) }
    dend_35 { pt3dadd( 38.6314, -105.046, -34.3361, 1.44 ) }
    dend_35 { pt3dadd( 38.7167, -105.813, -34.165, 1.92 ) }
    dend_35 { pt3dadd( 38.7757, -106.569, -33.9757, 1.92 ) }
    dend_35 { pt3dadd( 38.8179, -107.336, -33.7867, 1.2 ) }
    dend_35 { pt3dadd( 38.8484, -108.128, -33.6129, 0.48 ) }
    dend_35 { pt3dadd( 38.8608, -108.904, -33.4561, 0.12 ) }
    dend_35 { pt3dadd( 38.8703, -109.461, -33.3303, 0.12 ) }
    dend_35 { pt3dadd( 38.8805, -109.805, -33.2557, 0.6 ) }
    dend_35 { pt3dadd( 38.9017, -110.238, -33.1795, 0.12 ) }
    dend_35 { pt3dadd( 38.975, -111.133, -33.0168, 0.12 ) }
    dend_35 { pt3dadd( 39.0329, -111.58, -32.9446, 0.12 ) }
    dend_35 { pt3dadd( 39.2867, -113.168, -32.8071, 2.4 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 45.1994, -27.737, -11.2127, 0.96 ) }
    dend_33 { pt3dadd( 44.562, -25.2226, -4.01363, 0.96 ) }
    dend_33 { pt3dadd( 44.4726, -24.8948, -3.25454, 0.72 ) }
    dend_33 { pt3dadd( 44.4089, -24.6686, -2.84263, 0.24 ) }
    dend_33 { pt3dadd( 44.3432, -24.3872, -2.45181, 0.24 ) }
    dend_33 { pt3dadd( 44.2679, -23.9297, -1.98425, 0.24 ) }
    dend_33 { pt3dadd( 44.2028, -23.3079, -1.45939, 0.84 ) }
    dend_33 { pt3dadd( 44.1941, -22.4248, -1.22961, 1.2 ) }
    dend_33 { pt3dadd( 44.2257, -21.62, -0.976435, 0.48 ) }
    dend_33 { pt3dadd( 44.3065, -20.5871, -0.544428, 0.24 ) }
    dend_33 { pt3dadd( 44.4521, -19.5279, -0.0368723, 0.24 ) }
    dend_33 { pt3dadd( 44.7155, -18.2036, 0.691167, 1.68 ) }
    dend_33 { pt3dadd( 44.8728, -17.5377, 1.07399, 2.28 ) }
    dend_33 { pt3dadd( 44.9989, -17.0511, 1.36424, 2.4 ) }
    dend_33 { pt3dadd( 45.4092, -15.4688, 2.32423, 0.36 ) }
    dend_33 { pt3dadd( 45.5564, -14.8486, 2.69879, 0.36 ) }
    dend_33 { pt3dadd( 45.7375, -13.9955, 3.18295, 0.84 ) }
    dend_33 { pt3dadd( 45.9593, -12.7822, 3.81053, 0.84 ) }
    dend_33 { pt3dadd( 46.1473, -11.5524, 4.41944, 0.6 ) }
    dend_33 { pt3dadd( 46.3069, -10.4069, 4.9565, 0.6 ) }
    dend_33 { pt3dadd( 46.4021, -9.67811, 5.25869, 0.96 ) }
    dend_33 { pt3dadd( 46.4524, -9.10425, 5.49329, 0.96 ) }
    dend_33 { pt3dadd( 46.497, -8.03255, 5.90356, 0.12 ) }
    dend_33 { pt3dadd( 46.4887, -7.50351, 6.09827, 0.12 ) }
    dend_33 { pt3dadd( 46.4672, -7.05283, 6.23711, 0.12 ) }
    dend_33 { pt3dadd( 46.4353, -6.56227, 6.36217, 0.12 ) }
    dend_33 { pt3dadd( 46.4057, -6.06776, 6.48929, 0.6 ) }
    dend_33 { pt3dadd( 46.3928, -5.67177, 6.56797, 0.96 ) }
    dend_33 { pt3dadd( 46.3502, -5.02816, 6.56797, 1.08 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 42/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 45.1994, -27.737, -11.2127, 0.12 ) }
    dend_30 { pt3dadd( 46.742, -27.9793, -10.7363, 0.12 ) }
    dend_30 { pt3dadd( 47.1958, -28.0399, -10.5935, 0.12 ) }
    dend_30 { pt3dadd( 47.7634, -28.1057, -10.4117, 0.6 ) }
    dend_30 { pt3dadd( 48.4578, -28.1633, -10.195, 0.6 ) }
    dend_30 { pt3dadd( 49.4588, -28.2222, -9.903, 0.12 ) }
    dend_30 { pt3dadd( 50.3863, -28.2397, -9.65568, 0.12 ) }
    dend_30 { pt3dadd( 50.5028, -28.2305, -9.62865, 0.36 ) }
    dend_30 { pt3dadd( 50.8774, -28.1792, -9.55171, 0.12 ) }
    dend_30 { pt3dadd( 51.3889, -28.0806, -9.42661, 0.12 ) }
    dend_30 { pt3dadd( 51.8389, -27.9478, -9.3115, 0.48 ) }
    dend_30 { pt3dadd( 52.4936, -27.7336, -9.16235, 0.6 ) }
    dend_30 { pt3dadd( 52.9468, -27.5872, -9.04697, 0.48 ) }
    dend_30 { pt3dadd( 53.3524, -27.4787, -8.94877, 0.48 ) }
    dend_30 { pt3dadd( 54.314, -27.2539, -8.5628, 0.12 ) }
    dend_30 { pt3dadd( 55.2917, -27.0957, -8.08227, 2.04 ) }
    dend_30 { pt3dadd( 55.8567, -27.0485, -7.78013, 3.25 ) }
    dend_30 { pt3dadd( 56.3867, -27.0638, -7.49938, 3.37 ) }
    dend_30 { pt3dadd( 57.0637, -27.1498, -7.16126, 2.88 ) }
    dend_30 { pt3dadd( 59.2171, -27.6137, -6.15348, 0.24 ) }
    dend_30 { pt3dadd( 60.1343, -27.8907, -5.76716, 0.24 ) }
    dend_30 { pt3dadd( 60.7216, -28.1203, -5.52743, 0.72 ) }
    dend_30 { pt3dadd( 61.76, -28.5542, -5.15513, 0.96 ) }
    dend_30 { pt3dadd( 62.429, -28.8528, -4.96913, 0.24 ) }
    dend_30 { pt3dadd( 62.646, -28.9479, -4.94707, 0.24 ) }
    dend_30 { pt3dadd( 62.9596, -29.0651, -4.98725, 0.24 ) }
    dend_30 { pt3dadd( 63.6638, -29.2107, -5.10345, 0.24 ) }
    dend_30 { pt3dadd( 64.2614, -29.2367, -5.20068, 1.2 ) }
    dend_30 { pt3dadd( 64.7399, -29.2011, -5.20555, 1.92 ) }
    dend_30 { pt3dadd( 65.7182, -29.0672, -5.1129, 1.92 ) }
    dend_30 { pt3dadd( 66.701, -28.899, -4.9513, 0.36 ) }
    dend_30 { pt3dadd( 67.315, -28.7776, -4.77326, 0.36 ) }
    dend_30 { pt3dadd( 68.5259, -28.5126, -4.32792, 0.36 ) }
    dend_30 { pt3dadd( 70.4297, -28.0924, -3.5346, 1.68 ) }
    dend_30 { pt3dadd( 71.0147, -27.9702, -3.29211, 2.52 ) }
    dend_30 { pt3dadd( 71.9161, -27.804, -2.91671, 2.64 ) }
    dend_30 { pt3dadd( 73.9071, -27.5139, -2.1989, 0.24 ) }
    dend_30 { pt3dadd( 74.7799, -27.4206, -1.94616, 0.24 ) }
    dend_30 { pt3dadd( 75.3778, -27.37, -1.83773, 0.36 ) }
    dend_30 { pt3dadd( 76.4144, -27.3029, -1.81691, 1.08 ) }
    dend_30 { pt3dadd( 76.95, -27.2714, -1.80954, 1.08 ) }
    dend_30 { pt3dadd( 77.8988, -27.2029, -1.82807, 0.48 ) }
    dend_30 { pt3dadd( 78.3741, -27.1529, -1.86953, 0.24 ) }
    dend_30 { pt3dadd( 79.0339, -27.0337, -1.85315, 0.24 ) }
    dend_30 { pt3dadd( 79.6023, -26.873, -1.76183, 0.6 ) }
    dend_30 { pt3dadd( 80.719, -26.4715, -1.42939, 0.36 ) }
    dend_30 { pt3dadd( 81.2545, -26.2944, -1.25223, 0.36 ) }
    dend_30 { pt3dadd( 81.6968, -26.1911, -1.05908, 0.36 ) }
    dend_30 { pt3dadd( 82.0185, -26.1578, -0.901233, 0.48 ) }
    dend_30 { pt3dadd( 82.2622, -26.1612, -0.789062, 0.24 ) }
    dend_30 { pt3dadd( 82.7118, -26.1948, -0.585469, 0.24 ) }
    dend_30 { pt3dadd( 83.5262, -26.279, -0.298101, 0.24 ) }
    dend_30 { pt3dadd( 84.6963, -26.4011, 0.0588446, 0.24 ) }
    dend_30 { pt3dadd( 85.1837, -26.4507, 0.187482, 1.2 ) }
    dend_30 { pt3dadd( 86.0224, -26.5022, 0.3698, 2.16 ) }
    dend_30 { pt3dadd( 87.2312, -26.5141, 0.632057, 1.8 ) }
    dend_30 { pt3dadd( 88.182, -26.4734, 0.822891, 0.36 ) }
    dend_30 { pt3dadd( 89.5553, -26.3144, 1.22248, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_30 { pt3dadd( 90.1597, -26.2143, 1.42566, 0.36 ) }
    dend_30 { pt3dadd( 91.1464, -26.0149, 1.81743, 0.36 ) }
    dend_30 { pt3dadd( 92.0912, -25.7953, 2.32632, 1.56 ) }
    dend_30 { pt3dadd( 92.8086, -25.6129, 2.7865, 2.04 ) }
    dend_30 { pt3dadd( 94.7802, -25.0972, 4.27206, 0.24 ) }
    dend_30 { pt3dadd( 95.3484, -24.9561, 4.7528, 0.24 ) }
    dend_30 { pt3dadd( 95.6335, -24.8957, 4.99496, 0.24 ) }
    dend_30 { pt3dadd( 96.9439, -24.7114, 6.08939, 1.68 ) }
    dend_30 { pt3dadd( 97.3387, -24.6781, 6.38554, 2.04 ) }
    dend_30 { pt3dadd( 97.6378, -24.6634, 6.61858, 2.04 ) }
    dend_30 { pt3dadd( 98.9522, -24.594, 7.56215, 0.24 ) }
    dend_30 { pt3dadd( 99.5181, -24.5304, 8.0022, 0.24 ) }
    dend_30 { pt3dadd( 99.9823, -24.4373, 8.37932, 1.2 ) }
    dend_30 { pt3dadd( 100.347, -24.3017, 8.68234, 1.2 ) }
    dend_30 { pt3dadd( 101.68, -23.5379, 9.92783, 0.12 ) }
    dend_30 { pt3dadd( 102.151, -23.1298, 10.4043, 0.12 ) }
    dend_30 { pt3dadd( 102.405, -22.8035, 10.654, 0.24 ) }
    dend_30 { pt3dadd( 102.575, -22.5433, 10.8546, 0.24 ) }
    dend_30 { pt3dadd( 102.906, -22.0513, 11.2093, 0.24 ) }
    dend_30 { pt3dadd( 103.096, -21.7995, 11.3845, 0.24 ) }
    dend_30 { pt3dadd( 103.472, -21.4087, 11.6066, 0.24 ) }
    dend_30 { pt3dadd( 104.103, -20.9156, 11.9159, 0.24 ) }
    dend_30 { pt3dadd( 105.283, -20.1146, 12.49, 0.12 ) }
    dend_30 { pt3dadd( 106.088, -19.6406, 12.8735, 0.12 ) }
    dend_30 { pt3dadd( 106.315, -19.5265, 12.9794, 1.44 ) }
    dend_30 { pt3dadd( 107.181, -19.1213, 13.3722, 2.52 ) }
    dend_30 { pt3dadd( 108.125, -18.6757, 13.7786, 2.04 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 27/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -11.4206, -250.421, -40.7081, 0.12 ) }
    dend_20 { pt3dadd( -10.7959, -251.709, -40.7235, 0.12 ) }
    dend_20 { pt3dadd( -10.4742, -252.362, -40.7278, 0.12 ) }
    dend_20 { pt3dadd( -10.3259, -252.663, -40.7308, 0.48 ) }
    dend_20 { pt3dadd( -10.0685, -253.183, -40.7171, 0.48 ) }
    dend_20 { pt3dadd( -9.79142, -253.728, -40.6914, 0.48 ) }
    dend_20 { pt3dadd( -9.62859, -254.01, -40.7046, 0.48 ) }
    dend_20 { pt3dadd( -9.46343, -254.243, -40.7417, 0.48 ) }
    dend_20 { pt3dadd( -9.0665, -254.705, -40.868, 1.68 ) }
    dend_20 { pt3dadd( -8.63633, -255.13, -41.0255, 2.28 ) }
    dend_20 { pt3dadd( -8.21959, -255.499, -41.1884, 2.4 ) }
    dend_20 { pt3dadd( -7.01151, -256.462, -41.6959, 0.48 ) }
    dend_20 { pt3dadd( -6.17711, -257.093, -42.0748, 0.36 ) }
    dend_20 { pt3dadd( -5.66482, -257.451, -42.3279, 0.12 ) }
    dend_20 { pt3dadd( -5.38309, -257.626, -42.4792, 0.12 ) }
    dend_20 { pt3dadd( -5.16846, -257.745, -42.6086, 0.12 ) }
    dend_20 { pt3dadd( -4.83365, -257.907, -42.8118, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 44/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -11.4206, -250.421, -40.7081, 0.12 ) }
    dend_19 { pt3dadd( -11.5794, -251.806, -40.7215, 0.12 ) }
    dend_19 { pt3dadd( -11.5999, -252.156, -40.7455, 0.12 ) }
    dend_19 { pt3dadd( -11.5995, -252.515, -40.7804, 0.12 ) }
    dend_19 { pt3dadd( -11.5898, -253.111, -40.8946, 0.12 ) }
    dend_19 { pt3dadd( -11.591, -253.406, -40.9639, 0.48 ) }
    dend_19 { pt3dadd( -11.6112, -253.951, -41.1019, 0.48 ) }
    dend_19 { pt3dadd( -11.6171, -254.155, -41.1734, 0.12 ) }
    dend_19 { pt3dadd( -11.7498, -254.766, -41.492, 0.12 ) }
    dend_19 { pt3dadd( -11.9593, -255.346, -41.8521, 0.12 ) }
    dend_19 { pt3dadd( -12.0986, -255.681, -42.0616, 1.68 ) }
    dend_19 { pt3dadd( -12.2089, -255.935, -42.2386, 1.8 ) }
    dend_19 { pt3dadd( -12.4028, -256.367, -42.5637, 1.8 ) }
    dend_19 { pt3dadd( -12.9904, -257.713, -43.5435, 0.12 ) }
    dend_19 { pt3dadd( -13.14, -258.074, -43.8049, 0.12 ) }
    dend_19 { pt3dadd( -13.3882, -258.825, -44.2864, 0.12 ) }
    dend_19 { pt3dadd( -13.5196, -259.397, -44.6576, 0.48 ) }
    dend_19 { pt3dadd( -13.5473, -259.593, -44.778, 0.48 ) }
    dend_19 { pt3dadd( -13.5621, -260.074, -45.016, 0.48 ) }
    dend_19 { pt3dadd( -13.5619, -260.223, -45.079, 0.12 ) }
    dend_19 { pt3dadd( -13.5884, -260.637, -45.2789, 0.12 ) }
    dend_19 { pt3dadd( -13.6581, -261.222, -45.567, 0.12 ) }
    dend_19 { pt3dadd( -13.7016, -261.51, -45.6983, 0.96 ) }
    dend_19 { pt3dadd( -13.8183, -262.126, -45.987, 1.44 ) }
    dend_19 { pt3dadd( -14.083, -263.272, -46.6082, 0.12 ) }
    dend_19 { pt3dadd( -14.2657, -263.956, -46.978, 0.12 ) }
    dend_19 { pt3dadd( -14.3491, -264.253, -47.1365, 0.12 ) }
    dend_19 { pt3dadd( -14.414, -264.47, -47.2422, 0.6 ) }
    dend_19 { pt3dadd( -14.5322, -264.819, -47.4361, 0.6 ) }
    dend_19 { pt3dadd( -14.7763, -265.409, -47.8745, 0.12 ) }
    dend_19 { pt3dadd( -15.0249, -265.933, -48.3171, 0.12 ) }
    dend_19 { pt3dadd( -15.0637, -266.014, -48.3924, 0.48 ) }
    dend_19 { pt3dadd( -15.1693, -266.262, -48.5944, 0.48 ) }
    dend_19 { pt3dadd( -15.4173, -266.996, -49.0685, 0.48 ) }
    dend_19 { pt3dadd( -15.6445, -267.818, -49.4854, 0.24 ) }
    dend_19 { pt3dadd( -15.7023, -268.093, -49.6731, 0.12 ) }
    dend_19 { pt3dadd( -15.8154, -268.93, -50.2528, 0.12 ) }
    dend_19 { pt3dadd( -15.8761, -269.475, -50.6574, 1.44 ) }
    dend_19 { pt3dadd( -15.9096, -269.932, -50.9975, 2.16 ) }
    dend_19 { pt3dadd( -15.9349, -270.543, -51.4313, 2.28 ) }
    dend_19 { pt3dadd( -16.0015, -272.791, -52.9746, 0.12 ) }
    dend_19 { pt3dadd( -16.0116, -274.015, -53.8444, 0.12 ) }
    dend_19 { pt3dadd( -16.0016, -274.69, -54.3408, 0.84 ) }
    dend_19 { pt3dadd( -15.9873, -275.164, -54.6874, 1.44 ) }
    dend_19 { pt3dadd( -15.97, -275.558, -54.9684, 0.96 ) }
    dend_19 { pt3dadd( -15.9451, -275.974, -55.1878, 0.12 ) }
    dend_19 { pt3dadd( -15.9305, -276.372, -55.2958, 0.12 ) }
    dend_19 { pt3dadd( -15.9371, -276.805, -55.4073, 0.12 ) }
    dend_19 { pt3dadd( -15.9507, -277.055, -55.4596, 0.36 ) }
    dend_19 { pt3dadd( -16.0205, -277.698, -54.8139, 0.12 ) }
    dend_19 { pt3dadd( -16.1575, -278.718, -53.4013, 0.12 ) }
    dend_19 { pt3dadd( -16.1935, -278.953, -52.9699, 1.08 ) }
    dend_19 { pt3dadd( -16.2364, -279.205, -52.3924, 1.8 ) }
    dend_19 { pt3dadd( -16.2583, -279.332, -52.0381, 2.04 ) }
    dend_19 { pt3dadd( -16.6052, -281.409, -45.2755, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 99/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 17.202, 100.029, 10.377, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_14 { pt3dadd( 17.7062, 101.885, 10.6923, 0.48 ) }
    dend_14 { pt3dadd( 17.9083, 102.686, 10.7979, 0.48 ) }
    dend_14 { pt3dadd( 18.0206, 103.132, 10.8462, 0.48 ) }
    dend_14 { pt3dadd( 18.1595, 103.692, 10.8783, 0.48 ) }
    dend_14 { pt3dadd( 18.438, 104.903, 10.8926, 0.48 ) }
    dend_14 { pt3dadd( 18.6807, 106.126, 10.8691, 0.48 ) }
    dend_14 { pt3dadd( 18.7202, 106.383, 10.8398, 0.72 ) }
    dend_14 { pt3dadd( 18.7912, 106.879, 10.8128, 0.96 ) }
    dend_14 { pt3dadd( 18.9106, 107.704, 10.8104, 0.96 ) }
    dend_14 { pt3dadd( 19.0231, 108.414, 10.9093, 0.36 ) }
    dend_14 { pt3dadd( 19.2327, 109.492, 11.183, 0.36 ) }
    dend_14 { pt3dadd( 19.3745, 110.169, 11.4032, 0.36 ) }
    dend_14 { pt3dadd( 19.6744, 111.614, 11.9212, 1.56 ) }
    dend_14 { pt3dadd( 19.8079, 112.272, 12.1732, 2.16 ) }
    dend_14 { pt3dadd( 20.1552, 114.009, 12.8811, 0.48 ) }
    dend_14 { pt3dadd( 20.4037, 115.313, 13.3353, 0.48 ) }
    dend_14 { pt3dadd( 20.533, 116.075, 13.5618, 0.48 ) }
    dend_14 { pt3dadd( 20.5849, 116.517, 13.6539, 0.48 ) }
    dend_14 { pt3dadd( 20.6064, 117.303, 13.7107, 1.68 ) }
    dend_14 { pt3dadd( 20.5827, 117.773, 13.7063, 1.92 ) }
    dend_14 { pt3dadd( 20.4684, 119.279, 13.5418, 1.08 ) }
    dend_14 { pt3dadd( 20.4143, 120.086, 13.4575, 0.48 ) }
    dend_14 { pt3dadd( 20.403, 120.665, 13.4031, 0.36 ) }
    dend_14 { pt3dadd( 20.4708, 121.728, 13.3265, 0.36 ) }
    dend_14 { pt3dadd( 20.5894, 122.434, 13.3291, 0.36 ) }
    dend_14 { pt3dadd( 20.9385, 123.709, 13.3791, 0.72 ) }
    dend_14 { pt3dadd( 21.1222, 124.193, 13.416, 0.36 ) }
    dend_14 { pt3dadd( 21.3586, 124.754, 13.4389, 0.36 ) }
    dend_14 { pt3dadd( 21.7406, 125.566, 13.4752, 0.36 ) }
    dend_14 { pt3dadd( 22.2563, 126.596, 13.5248, 0.84 ) }
    dend_14 { pt3dadd( 22.8024, 127.69, 13.7683, 1.92 ) }
    dend_14 { pt3dadd( 23.1258, 128.442, 13.836, 2.28 ) }
    dend_14 { pt3dadd( 23.327, 128.99, 13.818, 2.64 ) }
    dend_14 { pt3dadd( 23.4676, 129.437, 13.7506, 2.76 ) }
    dend_14 { pt3dadd( 23.6359, 130.072, 13.5806, 2.76 ) }
    dend_14 { pt3dadd( 24.3288, 132.651, 12.6157, 1.56 ) }
    dend_14 { pt3dadd( 25.3505, 136.055, 11.1241, 0.12 ) }
    dend_14 { pt3dadd( 25.4556, 136.373, 10.9775, 0.12 ) }
    dend_14 { pt3dadd( 25.55, 136.655, 10.8615, 0.12 ) }
    dend_14 { pt3dadd( 25.6825, 137.119, 10.683, 0.72 ) }
    dend_14 { pt3dadd( 25.8408, 137.79, 10.4511, 0.96 ) }
    dend_14 { pt3dadd( 25.9873, 138.593, 10.1685, 0.48 ) }
    dend_14 { pt3dadd( 26.1167, 139.285, 10.1343, 0.36 ) }
    dend_14 { pt3dadd( 26.3698, 140.846, 10.0624, 0.36 ) }
    dend_14 { pt3dadd( 26.4326, 141.352, 10.0835, 0.36 ) }
    dend_14 { pt3dadd( 26.4666, 141.745, 10.1167, 0.12 ) }
    dend_14 { pt3dadd( 26.5214, 142.764, 10.2791, 0.96 ) }
    dend_14 { pt3dadd( 26.554, 143.476, 10.4378, 1.32 ) }
    dend_14 { pt3dadd( 26.5965, 143.925, 10.5085, 1.2 ) }
    dend_14 { pt3dadd( 26.7726, 145.319, 10.9032, 0.48 ) }
    dend_14 { pt3dadd( 26.9244, 146.316, 11.2253, 0.24 ) }
    dend_14 { pt3dadd( 27.0518, 147.057, 11.4717, 1.2 ) }
    dend_14 { pt3dadd( 27.1761, 147.689, 11.6842, 1.68 ) }
    dend_14 { pt3dadd( 27.4629, 148.994, 12.1338, 1.68 ) }
    dend_14 { pt3dadd( 27.9818, 151.178, 12.8821, 1.8 ) }
    dend_14 { pt3dadd( 28.2033, 152.016, 13.1369, 0.96 ) }
    dend_14 { pt3dadd( 28.4569, 152.886, 13.4949, 1.08 ) }
    dend_14 { pt3dadd( 28.6726, 153.565, 13.7829, 0.36 ) }
    dend_14 { pt3dadd( 29.1484, 154.994, 14.3277, 0.36 ) }
    dend_14 { pt3dadd( 29.4242, 155.849, 14.598, 0.36 ) }
    dend_14 { pt3dadd( 29.6299, 156.449, 14.7009, 1.08 ) }
    dend_14 { pt3dadd( 30.1581, 158.026, 14.9465, 1.2 ) }
    dend_14 { pt3dadd( 30.5849, 159.341, 15.0979, 0.96 ) }
    dend_14 { pt3dadd( 31.0033, 160.7, 15.1719, 0.36 ) }
    dend_14 { pt3dadd( 31.3659, 161.898, 15.0765, 0.24 ) }
    dend_14 { pt3dadd( 31.5849, 162.657, 14.9468, 0.6 ) }
    dend_14 { pt3dadd( 31.7246, 163.161, 14.8519, 0.12 ) }
    dend_14 { pt3dadd( 31.8564, 163.591, 14.762, 0.24 ) }
    dend_14 { pt3dadd( 32.2836, 164.88, 14.5377, 0.24 ) }
    dend_14 { pt3dadd( 32.6482, 165.954, 14.3599, 0.24 ) }
    dend_14 { pt3dadd( 32.938, 166.816, 14.1318, 1.68 ) }
    dend_14 { pt3dadd( 33.3384, 168.094, 13.7534, 2.52 ) }
    dend_14 { pt3dadd( 33.6271, 169.174, 13.4343, 0.48 ) }
    dend_14 { pt3dadd( 33.8759, 170.219, 13.1285, 0.48 ) }
    dend_14 { pt3dadd( 34.0684, 171.238, 12.8536, 0.72 ) }
    dend_14 { pt3dadd( 34.2044, 172.368, 12.6044, 1.08 ) }
    dend_14 { pt3dadd( 34.2426, 173.135, 12.4597, 1.68 ) }
    dend_14 { pt3dadd( 34.2138, 174.142, 12.2801, 1.2 ) }
    dend_14 { pt3dadd( 34.1311, 174.993, 12.1911, 0.36 ) }
    dend_14 { pt3dadd( 33.9926, 176.108, 12.1389, 0.36 ) }
    dend_14 { pt3dadd( 33.8867, 176.865, 12.1676, 0.36 ) }
    dend_14 { pt3dadd( 33.7532, 177.726, 12.24, 0.36 ) }
    dend_14 { pt3dadd( 33.5926, 178.784, 12.3239, 2.04 ) }
    dend_14 { pt3dadd( 33.5311, 179.249, 12.3696, 2.4 ) }
    dend_14 { pt3dadd( 33.4439, 180.345, 12.4356, 2.4 ) }
    dend_14 { pt3dadd( 33.4632, 181.998, 12.4126, 0.36 ) }
    dend_14 { pt3dadd( 33.5733, 183.008, 12.3298, 0.36 ) }
    dend_14 { pt3dadd( 33.7324, 183.902, 12.2612, 1.44 ) }
    dend_14 { pt3dadd( 33.9082, 184.593, 12.2153, 2.16 ) }
    dend_14 { pt3dadd( 34.3611, 186.188, 12.1291, 0.48 ) }
    dend_14 { pt3dadd( 34.6324, 187.102, 12.0965, 0.12 ) }
    dend_14 { pt3dadd( 34.8274, 187.731, 12.0605, 0.6 ) }
    dend_14 { pt3dadd( 35.2595, 189.205, 12.0804, 0.36 ) }
    dend_14 { pt3dadd( 35.4368, 189.927, 12.1495, 0.24 ) }
    dend_14 { pt3dadd( 35.5769, 190.766, 12.3011, 0.24 ) }
    dend_14 { pt3dadd( 35.615, 191.237, 12.4022, 0.24 ) }
    dend_14 { pt3dadd( 35.6543, 192.105, 12.5296, 0.36 ) }
    dend_14 { pt3dadd( 35.7097, 193.069, 12.5768, 0.36 ) }
    dend_14 { pt3dadd( 35.8013, 193.774, 12.5729, 0.36 ) }
    dend_14 { pt3dadd( 35.9165, 194.335, 12.588, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_14 { pt3dadd( 36.1984, 195.294, 12.6085, 1.68 ) }
    dend_14 { pt3dadd( 36.4415, 195.976, 12.559, 2.4 ) }
    dend_14 { pt3dadd( 36.6266, 196.444, 12.4812, 2.4 ) }
    dend_14 { pt3dadd( 37.1757, 197.699, 12.2809, 0.24 ) }
    dend_14 { pt3dadd( 37.4489, 198.297, 12.1963, 0.24 ) }
    dend_14 { pt3dadd( 37.6166, 198.674, 12.1521, 0.48 ) }
    dend_14 { pt3dadd( 38.1377, 199.976, 12.0659, 0.24 ) }
    dend_14 { pt3dadd( 38.3702, 200.766, 12.0257, 0.24 ) }
    dend_14 { pt3dadd( 38.5325, 201.614, 11.9575, 0.24 ) }
    dend_14 { pt3dadd( 38.5902, 202.305, 11.9259, 0.72 ) }
    dend_14 { pt3dadd( 38.619, 202.909, 11.9444, 0.84 ) }
    dend_14 { pt3dadd( 38.6344, 203.326, 11.9747, 0.36 ) }
    dend_14 { pt3dadd( 38.672, 204.123, 12.0201, 0.36 ) }
    dend_14 { pt3dadd( 38.7343, 204.978, 11.9673, 0.48 ) }
    dend_14 { pt3dadd( 38.8682, 206.216, 11.7431, 0.36 ) }
    dend_14 { pt3dadd( 38.9925, 206.898, 11.5661, 0.36 ) }
    dend_14 { pt3dadd( 39.1034, 207.365, 11.4529, 0.96 ) }
    dend_14 { pt3dadd( 39.4329, 208.455, 11.1306, 0.96 ) }
    dend_14 { pt3dadd( 39.6235, 208.957, 11.017, 0.36 ) }
    dend_14 { pt3dadd( 39.7888, 209.379, 10.9619, 0.36 ) }
    dend_14 { pt3dadd( 40.2218, 210.551, 10.8683, 2.4 ) }
    dend_14 { pt3dadd( 40.6388, 211.808, 10.8743, 3.25 ) }
    dend_14 { pt3dadd( 40.9681, 212.978, 10.9719, 2.16 ) }
    dend_14 { pt3dadd( 41.3628, 214.637, 11.1698, 0.24 ) }
    dend_14 { pt3dadd( 41.6171, 215.856, 11.304, 0.12 ) }
    dend_14 { pt3dadd( 41.8029, 216.88, 11.3874, 0.24 ) }
    dend_14 { pt3dadd( 41.8459, 217.229, 11.4017, 0.36 ) }
    dend_14 { pt3dadd( 41.9193, 218.134, 11.3465, 0.36 ) }
    dend_14 { pt3dadd( 41.9735, 219.271, 11.216, 1.32 ) }
    dend_14 { pt3dadd( 42.0081, 219.971, 11.0817, 0.48 ) }
    dend_14 { pt3dadd( 42.0525, 220.375, 11.0113, 0.12 ) }
    dend_14 { pt3dadd( 42.1714, 221.073, 10.898, 0.12 ) }
    dend_14 { pt3dadd( 42.3323, 221.876, 10.7937, 0.12 ) }
    dend_14 { pt3dadd( 42.4513, 222.371, 10.7488, 0.84 ) }
    dend_14 { pt3dadd( 42.7994, 223.752, 10.6896, 1.56 ) }
    dend_14 { pt3dadd( 42.9483, 224.306, 10.6768, 1.68 ) }
    dend_14 { pt3dadd( 43.2551, 225.31, 10.6787, 0.12 ) }
    dend_14 { pt3dadd( 43.5807, 226.165, 10.6842, 0.12 ) }
    dend_14 { pt3dadd( 43.7963, 226.582, 10.8253, 0.24 ) }
    dend_14 { pt3dadd( 43.9237, 226.743, 10.9529, 0.12 ) }
    dend_14 { pt3dadd( 44.2914, 227.009, 11.3917, 0.12 ) }
    dend_14 { pt3dadd( 44.5361, 227.138, 11.7216, 0.12 ) }
    dend_14 { pt3dadd( 45.3828, 227.444, 12.992, 3.25 ) }
    dend_14 { pt3dadd( 47.7699, 227.975, 16.8481, 0.12 ) }
    dend_14 { pt3dadd( 47.9846, 228.003, 17.2227, 0.12 ) }
    dend_14 { pt3dadd( 48.1643, 228.007, 17.5569, 0.72 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 17.202, 100.029, 10.377, 0.12 ) }
    dend_13 { pt3dadd( 15.2024, 100.67, 10.349, 0.12 ) }
    dend_13 { pt3dadd( 14.7203, 100.826, 10.3579, 0.12 ) }
    dend_13 { pt3dadd( 14.3628, 100.944, 10.3333, 0.96 ) }
    dend_13 { pt3dadd( 13.4713, 101.223, 10.2269, 0.12 ) }
    dend_13 { pt3dadd( 12.8675, 101.401, 10.0938, 0.12 ) }
    dend_13 { pt3dadd( 12.5161, 101.507, 10.0038, 0.12 ) }
    dend_13 { pt3dadd( 12.0105, 101.665, 9.84793, 1.08 ) }
    dend_13 { pt3dadd( 10.9558, 101.974, 9.58253, 0.36 ) }
    dend_13 { pt3dadd( 9.93259, 102.261, 9.33423, 0.36 ) }
    dend_13 { pt3dadd( 8.6554, 102.648, 9.1656, 0.36 ) }
    dend_13 { pt3dadd( 8.07962, 102.811, 9.10321, 0.36 ) }
    dend_13 { pt3dadd( 7.00191, 103.071, 9.23964, 0.36 ) }
    dend_13 { pt3dadd( 6.40642, 103.175, 9.45517, 0.36 ) }
    dend_13 { pt3dadd( 5.76826, 103.232, 9.84354, 0.36 ) }
    dend_13 { pt3dadd( 4.39827, 103.301, 10.9122, 1.92 ) }
    dend_13 { pt3dadd( 3.65364, 103.299, 11.6215, 1.92 ) }
    dend_13 { pt3dadd( 1.41827, 103.145, 13.9736, 0.12 ) }
    dend_13 { pt3dadd( 0.928587, 103.078, 14.5491, 0.12 ) }
    dend_13 { pt3dadd( 0.654157, 103.021, 14.9207, 0.72 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 66/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 9.71669, 119.016, -15.883, 0.12 ) }
    dend_11 { pt3dadd( 9.35178, 120.326, -17.3048, 0.12 ) }
    dend_11 { pt3dadd( 9.2996, 120.576, -17.5211, 0.12 ) }
    dend_11 { pt3dadd( 9.23358, 121.05, -17.8386, 0.24 ) }
    dend_11 { pt3dadd( 9.17444, 122.635, -18.843, 0.24 ) }
    dend_11 { pt3dadd( 9.19006, 123.226, -19.185, 0.24 ) }
    dend_11 { pt3dadd( 9.21612, 123.644, -19.4102, 0.24 ) }
    dend_11 { pt3dadd( 9.37078, 124.53, -19.7869, 1.68 ) }
    dend_11 { pt3dadd( 9.51487, 125.143, -20.0735, 1.68 ) }
    dend_11 { pt3dadd( 10.0586, 126.966, -20.9427, 0.12 ) }
    dend_11 { pt3dadd( 10.2995, 127.69, -21.2713, 0.12 ) }
    dend_11 { pt3dadd( 10.3896, 127.93, -21.4012, 0.6 ) }
    dend_11 { pt3dadd( 10.5812, 128.393, -21.6885, 0.48 ) }
    dend_11 { pt3dadd( 11.0891, 129.51, -22.4686, 0.12 ) }
    dend_11 { pt3dadd( 11.3738, 130.084, -22.903, 0.12 ) }
    dend_11 { pt3dadd( 11.4486, 130.227, -22.9947, 0.12 ) }
    dend_11 { pt3dadd( 11.614, 130.555, -23.1969, 0.96 ) }
    dend_11 { pt3dadd( 11.7836, 130.894, -23.3857, 0.96 ) }
    dend_11 { pt3dadd( 11.9667, 131.275, -23.5891, 0.48 ) }
    dend_11 { pt3dadd( 12.3912, 132.187, -23.9952, 0.12 ) }
    dend_11 { pt3dadd( 12.9694, 133.437, -24.5535, 0.12 ) }
    dend_11 { pt3dadd( 13.3303, 134.221, -24.9136, 1.8 ) }
    dend_11 { pt3dadd( 13.5176, 134.633, -25.1037, 2.16 ) }
    dend_11 { pt3dadd( 14.1014, 135.904, -25.6595, 0.12 ) }
    dend_11 { pt3dadd( 14.5393, 136.829, -26.0369, 0.12 ) }
    dend_11 { pt3dadd( 14.7094, 137.187, -26.1619, 0.96 ) }
    dend_11 { pt3dadd( 14.9773, 137.748, -26.352, 0.24 ) }
    dend_11 { pt3dadd( 15.2315, 138.282, -26.525, 0.24 ) }
    dend_11 { pt3dadd( 15.6321, 139.082, -26.7858, 1.68 ) }
    dend_11 { pt3dadd( 15.9558, 139.674, -26.9655, 0.12 ) }
    dend_11 { pt3dadd( 16.2517, 140.153, -27.11, 0.12 ) }
    dend_11 { pt3dadd( 16.6761, 140.749, -27.3831, 0.6 ) }
    dend_11 { pt3dadd( 17.0247, 141.188, -27.6221, 0.12 ) }
    dend_11 { pt3dadd( 17.7973, 142.1, -28.1959, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_11 { pt3dadd( 17.9526, 142.275, -28.3158, 0.12 ) }
    dend_11 { pt3dadd( 18.58, 142.987, -28.8147, 1.92 ) }
    dend_11 { pt3dadd( 20.0834, 144.702, -29.9738, 0.12 ) }
    dend_11 { pt3dadd( 20.8186, 145.568, -30.5143, 0.12 ) }
    dend_11 { pt3dadd( 21.0319, 145.838, -30.6472, 0.84 ) }
    dend_11 { pt3dadd( 21.2558, 146.161, -30.7664, 0.12 ) }
    dend_11 { pt3dadd( 21.7648, 147.03, -30.987, 0.12 ) }
    dend_11 { pt3dadd( 22.0914, 147.723, -30.9991, 1.68 ) }
    dend_11 { pt3dadd( 22.2727, 148.18, -30.8776, 1.2 ) }
    dend_11 { pt3dadd( 22.5806, 148.974, -30.5929, 0.12 ) }
    dend_11 { pt3dadd( 22.8604, 149.671, -30.2699, 0.12 ) }
    dend_11 { pt3dadd( 23.0635, 150.145, -30.0024, 0.6 ) }
    dend_11 { pt3dadd( 23.6364, 151.368, -29.2047, 0.48 ) }
    dend_11 { pt3dadd( 23.923, 151.967, -28.8128, 0.48 ) }
    dend_11 { pt3dadd( 24.1461, 152.411, -28.5207, 0.48 ) }
    dend_11 { pt3dadd( 24.4042, 152.92, -28.2294, 0.12 ) }
    dend_11 { pt3dadd( 24.5794, 153.263, -28.0681, 0.12 ) }
    dend_11 { pt3dadd( 24.8924, 153.935, -27.8802, 1.44 ) }
    dend_11 { pt3dadd( 25.0547, 154.362, -27.8345, 1.68 ) }
    dend_11 { pt3dadd( 25.3326, 155.215, -27.7853, 0.12 ) }
    dend_11 { pt3dadd( 25.649, 156.328, -27.7656, 0.12 ) }
    dend_11 { pt3dadd( 25.904, 157.314, -27.787, 1.92 ) }
    dend_11 { pt3dadd( 26.1799, 158.47, -27.827, 0.12 ) }
    dend_11 { pt3dadd( 26.4627, 159.689, -27.8876, 0.12 ) }
    dend_11 { pt3dadd( 26.5689, 160.137, -27.9169, 0.6 ) }
    dend_11 { pt3dadd( 26.6199, 160.359, -27.936, 0.12 ) }
    dend_11 { pt3dadd( 26.8396, 161.377, -28.0228, 0.12 ) }
    dend_11 { pt3dadd( 26.9761, 162.068, -28.1371, 1.08 ) }
    dend_11 { pt3dadd( 27.0441, 162.416, -28.2137, 0.72 ) }
    dend_11 { pt3dadd( 27.0893, 162.655, -28.2873, 0.12 ) }
    dend_11 { pt3dadd( 27.2483, 163.502, -28.5978, 0.12 ) }
    dend_11 { pt3dadd( 27.3957, 164.298, -28.9214, 1.44 ) }
    dend_11 { pt3dadd( 27.6459, 165.691, -29.6467, 0.12 ) }
    dend_11 { pt3dadd( 27.7249, 166.085, -29.8635, 0.12 ) }
    dend_11 { pt3dadd( 27.7475, 166.185, -29.9178, 0.48 ) }
    dend_11 { pt3dadd( 27.8049, 166.409, -30.0313, 0.12 ) }
    dend_11 { pt3dadd( 28.0207, 167.123, -30.3352, 0.48 ) }
    dend_11 { pt3dadd( 28.3303, 168.0, -30.582, 0.12 ) }
    dend_11 { pt3dadd( 28.7658, 169.115, -30.8614, 0.12 ) }
    dend_11 { pt3dadd( 28.8493, 169.323, -30.9212, 0.72 ) }
    dend_11 { pt3dadd( 29.1348, 170.045, -31.1335, 1.44 ) }
    dend_11 { pt3dadd( 29.3541, 170.598, -31.2927, 1.8 ) }
    dend_11 { pt3dadd( 29.6429, 171.279, -31.4802, 1.68 ) }
    dend_11 { pt3dadd( 30.2416, 172.716, -31.8339, 0.12 ) }
    dend_11 { pt3dadd( 30.45, 173.238, -32.0065, 0.12 ) }
    dend_11 { pt3dadd( 30.6467, 173.746, -32.1993, 0.12 ) }
    dend_11 { pt3dadd( 30.851, 174.328, -32.4681, 1.32 ) }
    dend_11 { pt3dadd( 30.9873, 174.744, -32.6745, 1.32 ) }
    dend_11 { pt3dadd( 31.0739, 175.042, -32.8269, 1.32 ) }
    dend_11 { pt3dadd( 31.2759, 175.888, -33.2038, 0.12 ) }
    dend_11 { pt3dadd( 31.433, 176.633, -33.6276, 0.12 ) }
    dend_11 { pt3dadd( 31.5465, 177.375, -34.1623, 0.72 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 52/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 9.71669, 119.016, -15.883, 0.12 ) }
    dend_10 { pt3dadd( 11.7143, 119.291, -0.0647838, 0.12 ) }
    dend_10 { pt3dadd( 11.7954, 119.303, 0.54157, 0.12 ) }
    dend_10 { pt3dadd( 11.8487, 119.31, 0.917207, 0.12 ) }
    dend_10 { pt3dadd( 12.0394, 119.334, 2.18776, 0.84 ) }
    dend_10 { pt3dadd( 12.1034, 119.342, 2.61558, 0.84 ) }
    dend_10 { pt3dadd( 12.2158, 119.353, 3.59259, 0.36 ) }
    dend_10 { pt3dadd( 12.467, 119.411, 3.24571, 0.36 ) }
    dend_10 { pt3dadd( 12.6832, 119.483, 2.87862, 0.36 ) }
    dend_10 { pt3dadd( 12.921, 119.57, 2.43803, 0.36 ) }
    dend_10 { pt3dadd( 13.4655, 119.779, 1.41197, 0.36 ) }
    dend_10 { pt3dadd( 14.597, 120.247, -0.763887, 0.36 ) }
    dend_10 { pt3dadd( 15.2068, 120.514, -1.89735, 2.04 ) }
    dend_10 { pt3dadd( 16.1552, 120.93, -3.60224, 1.56 ) }
    dend_10 { pt3dadd( 16.5884, 121.122, -4.3136, 0.12 ) }
    dend_10 { pt3dadd( 16.8007, 121.216, -4.62066, 0.12 ) }
    dend_10 { pt3dadd( 17.4427, 121.455, -5.34054, 1.2 ) }
    dend_10 { pt3dadd( 17.9839, 121.599, -5.75727, 0.48 ) }
    dend_10 { pt3dadd( 18.2913, 121.661, -5.94275, 0.12 ) }
    dend_10 { pt3dadd( 19.1557, 121.829, -6.34432, 0.12 ) }
    dend_10 { pt3dadd( 20.0466, 122.008, -6.82425, 1.32 ) }
    dend_10 { pt3dadd( 20.45, 122.093, -7.06875, 1.68 ) }
    dend_10 { pt3dadd( 21.6397, 122.381, -7.89728, 0.12 ) }
    dend_10 { pt3dadd( 22.0003, 122.485, -8.2142, 0.12 ) }
    dend_10 { pt3dadd( 22.5309, 122.654, -8.78674, 0.6 ) }
    dend_10 { pt3dadd( 23.5106, 122.957, -9.98932, 0.12 ) }
    dend_10 { pt3dadd( 23.8434, 123.048, -10.411, 0.12 ) }
    dend_10 { pt3dadd( 24.7673, 123.279, -11.6279, 1.8 ) }
    dend_10 { pt3dadd( 25.7275, 123.496, -12.8784, 1.8 ) }
    dend_10 { pt3dadd( 26.7082, 123.663, -14.2257, 0.48 ) }
    dend_10 { pt3dadd( 27.0571, 123.699, -14.6888, 0.48 ) }
    dend_10 { pt3dadd( 27.4116, 123.713, -15.0974, 0.48 ) }
    dend_10 { pt3dadd( 28.1305, 123.714, -15.8785, 1.44 ) }
    dend_10 { pt3dadd( 28.5626, 123.701, -16.3115, 1.68 ) }
    dend_10 { pt3dadd( 30.1489, 123.697, -17.8148, 0.36 ) }
    dend_10 { pt3dadd( 30.8543, 123.76, -18.4881, 0.36 ) }
    dend_10 { pt3dadd( 31.4713, 123.897, -19.2192, 1.68 ) }
    dend_10 { pt3dadd( 32.0298, 124.083, -19.9671, 1.2 ) }
    dend_10 { pt3dadd( 32.7864, 124.424, -21.0989, 0.36 ) }
    dend_10 { pt3dadd( 33.282, 124.708, -21.9032, 0.36 ) }
    dend_10 { pt3dadd( 33.9149, 125.182, -23.0388, 1.68 ) }
    dend_10 { pt3dadd( 35.0224, 126.179, -25.2623, 0.24 ) }
    dend_10 { pt3dadd( 35.2592, 126.416, -25.7538, 0.24 ) }
    dend_10 { pt3dadd( 35.5469, 126.7, -26.3023, 0.84 ) }
    dend_10 { pt3dadd( 35.7806, 126.91, -26.6969, 0.96 ) }
    dend_10 { pt3dadd( 36.382, 127.325, -27.5426, 0.24 ) }
    dend_10 { pt3dadd( 36.7617, 127.504, -27.9592, 0.24 ) }
    dend_10 { pt3dadd( 37.5255, 127.719, -28.6264, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( 37.8672, 127.763, -28.9812, 1.68 ) }
    dend_10 { pt3dadd( 38.4525, 127.746, -29.7919, 0.36 ) }
    dend_10 { pt3dadd( 38.7307, 127.699, -30.243, 0.36 ) }
    dend_10 { pt3dadd( 38.9319, 127.636, -30.614, 0.36 ) }
    dend_10 { pt3dadd( 39.7408, 127.316, -32.225, 0.96 ) }
    dend_10 { pt3dadd( 40.6416, 126.902, -34.0866, 1.68 ) }
    dend_10 { pt3dadd( 41.7137, 126.375, -36.3199, 0.6 ) }
    dend_10 { pt3dadd( 41.9188, 126.262, -36.7431, 0.48 ) }
    dend_10 { pt3dadd( 42.6825, 125.794, -38.2781, 2.04 ) }
    dend_10 { pt3dadd( 42.9472, 125.606, -38.779, 2.52 ) }
    dend_10 { pt3dadd( 43.7484, 124.973, -40.0807, 0.36 ) }
    dend_10 { pt3dadd( 43.9863, 124.787, -40.3843, 0.36 ) }
    dend_10 { pt3dadd( 44.3967, 124.509, -40.7744, 0.48 ) }
    dend_10 { pt3dadd( 45.2895, 123.935, -41.5395, 0.36 ) }
    dend_10 { pt3dadd( 45.6159, 123.715, -41.7857, 0.36 ) }
    dend_10 { pt3dadd( 45.8008, 123.583, -41.9215, 0.36 ) }
    dend_10 { pt3dadd( 46.7313, 122.912, -42.5043, 0.36 ) }
    dend_10 { pt3dadd( 47.5049, 122.363, -42.932, 1.08 ) }
    dend_10 { pt3dadd( 48.0397, 122.006, -43.1644, 1.8 ) }
    dend_10 { pt3dadd( 48.7333, 121.574, -43.3678, 1.2 ) }
    dend_10 { pt3dadd( 49.3303, 121.244, -43.5188, 0.36 ) }
    dend_10 { pt3dadd( 50.1554, 120.835, -43.6315, 0.36 ) }
    dend_10 { pt3dadd( 51.0004, 120.465, -43.661, 0.36 ) }
    dend_10 { pt3dadd( 51.6625, 120.223, -43.6383, 1.2 ) }
    dend_10 { pt3dadd( 52.4866, 119.987, -43.6052, 1.8 ) }
    dend_10 { pt3dadd( 53.5802, 119.747, -43.5762, 0.12 ) }
    dend_10 { pt3dadd( 55.1342, 119.473, -43.576, 0.12 ) }
    dend_10 { pt3dadd( 55.9875, 119.337, -43.6042, 1.44 ) }
    dend_10 { pt3dadd( 56.4749, 119.243, -43.6379, 2.16 ) }
    dend_10 { pt3dadd( 57.3419, 119.022, -43.7129, 2.4 ) }
    dend_10 { pt3dadd( 58.4678, 118.649, -43.8061, 0.24 ) }
    dend_10 { pt3dadd( 58.9134, 118.447, -43.8386, 0.24 ) }
    dend_10 { pt3dadd( 59.3279, 118.195, -43.8896, 0.24 ) }
    dend_10 { pt3dadd( 60.0428, 117.663, -43.9269, 0.48 ) }
    dend_10 { pt3dadd( 60.5064, 117.27, -43.9283, 0.12 ) }
    dend_10 { pt3dadd( 61.0521, 116.814, -43.881, 0.12 ) }
    dend_10 { pt3dadd( 61.4358, 116.528, -43.7999, 0.12 ) }
    dend_10 { pt3dadd( 61.8386, 116.287, -43.7067, 0.12 ) }
    dend_10 { pt3dadd( 62.3528, 116.051, -43.5223, 0.36 ) }
    dend_10 { pt3dadd( 62.6927, 115.937, -43.3796, 0.12 ) }
    dend_10 { pt3dadd( 63.7525, 115.624, -42.9176, 0.12 ) }
    dend_10 { pt3dadd( 64.6759, 115.378, -42.4964, 1.44 ) }
    dend_10 { pt3dadd( 64.9129, 115.319, -42.3869, 1.56 ) }
    dend_10 { pt3dadd( 66.2745, 114.972, -41.7346, 0.36 ) }
    dend_10 { pt3dadd( 66.7058, 114.838, -41.4484, 0.36 ) }
    dend_10 { pt3dadd( 66.9582, 114.737, -41.2324, 0.36 ) }
    dend_10 { pt3dadd( 67.2517, 114.562, -40.9124, 0.36 ) }
    dend_10 { pt3dadd( 67.4705, 114.4, -40.6991, 0.36 ) }
    dend_10 { pt3dadd( 67.6249, 114.268, -40.5296, 0.36 ) }
    dend_10 { pt3dadd( 68.6607, 113.271, -39.3989, 0.12 ) }
    dend_10 { pt3dadd( 68.8615, 113.078, -39.1799, 0.12 ) }
    dend_10 { pt3dadd( 69.0877, 112.869, -38.9215, 0.12 ) }
    dend_10 { pt3dadd( 69.8617, 112.2, -38.0678, 2.4 ) }
    dend_10 { pt3dadd( 71.2027, 111.132, -36.7425, 0.12 ) }
    dend_10 { pt3dadd( 71.5863, 110.84, -36.4129, 0.12 ) }
    dend_10 { pt3dadd( 72.0756, 110.481, -36.0158, 0.36 ) }
    dend_10 { pt3dadd( 72.5495, 110.134, -35.5972, 0.12 ) }
    dend_10 { pt3dadd( 72.9398, 109.849, -35.2339, 0.12 ) }
    dend_10 { pt3dadd( 73.3081, 109.57, -34.8718, 1.08 ) }
    dend_10 { pt3dadd( 73.6243, 109.33, -34.5634, 1.08 ) }
    dend_10 { pt3dadd( 74.6944, 108.468, -33.4159, 0.36 ) }
    dend_10 { pt3dadd( 74.9704, 108.216, -33.1185, 0.36 ) }
    dend_10 { pt3dadd( 75.1917, 108.0, -32.915, 0.12 ) }
    dend_10 { pt3dadd( 75.3234, 107.867, -32.7716, 0.12 ) }
    dend_10 { pt3dadd( 76.0491, 107.13, -31.9369, 0.12 ) }
    dend_10 { pt3dadd( 76.3808, 106.81, -31.5804, 1.32 ) }
    dend_10 { pt3dadd( 76.8914, 106.347, -31.079, 2.04 ) }
    dend_10 { pt3dadd( 77.491, 105.858, -30.4984, 1.32 ) }
    dend_10 { pt3dadd( 78.8431, 104.857, -29.1941, 0.12 ) }
    dend_10 { pt3dadd( 79.0276, 104.741, -29.0272, 0.12 ) }
    dend_10 { pt3dadd( 79.3429, 104.597, -28.6706, 0.24 ) }
    dend_10 { pt3dadd( 79.8134, 104.42, -28.0868, 0.24 ) }
    dend_10 { pt3dadd( 80.1715, 104.321, -27.595, 0.24 ) }
    dend_10 { pt3dadd( 80.6608, 104.232, -26.8543, 0.24 ) }
    dend_10 { pt3dadd( 80.911, 104.21, -26.497, 0.84 ) }
    dend_10 { pt3dadd( 82.6588, 104.135, -23.6788, 0.6 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 76/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 35.9271, 86.8037, 14.5584, 0.72 ) }
    dend_6 { pt3dadd( 35.5854, 86.3418, 13.5568, 0.72 ) }
    dend_6 { pt3dadd( 35.0398, 85.7972, 12.2474, 0.6 ) }
    dend_6 { pt3dadd( 34.685, 85.443, 11.3956, 0.36 ) }
    dend_6 { pt3dadd( 34.553, 85.3113, 11.079, 0.48 ) }
    dend_6 { pt3dadd( 34.2236, 84.9825, 10.2885, 0.36 ) }
    dend_6 { pt3dadd( 33.8214, 84.581, 9.32304, 0.12 ) }
    dend_6 { pt3dadd( 33.6607, 84.4736, 8.99442, 0.12 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.9271, 86.8037, 14.5584, 0.48 ) }
    dend_5 { pt3dadd( 35.9406, 87.6253, 14.5329, 0.48 ) }
    dend_5 { pt3dadd( 35.9323, 88.337, 14.552, 0.48 ) }
    dend_5 { pt3dadd( 35.8711, 89.0951, 14.573, 0.6 ) }
    dend_5 { pt3dadd( 35.7875, 89.707, 14.5997, 0.48 ) }
    dend_5 { pt3dadd( 35.6475, 90.6272, 14.6456, 0.48 ) }
    dend_5 { pt3dadd( 35.4893, 91.6677, 14.7002, 2.04 ) }
    dend_5 { pt3dadd( 35.3909, 92.523, 14.7556, 1.92 ) }
    dend_5 { pt3dadd( 35.2937, 93.5138, 14.7691, 1.44 ) }
    dend_5 { pt3dadd( 35.2242, 94.2952, 14.7434, 1.08 ) }
    dend_5 { pt3dadd( 35.1825, 94.9864, 14.7029, 0.96 ) }
    dend_5 { pt3dadd( 35.1875, 95.3351, 14.6563, 0.72 ) }
    dend_5 { pt3dadd( 35.2836, 96.1394, 14.4634, 1.08 ) }
    dend_5 { pt3dadd( 35.5623, 97.4544, 14.1349, 0.48 ) }
    dend_5 { pt3dadd( 35.7159, 98.0042, 14.0087, 0.48 ) }
    dend_5 { pt3dadd( 35.9947, 98.9144, 13.824, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( 36.2325, 99.7199, 13.6597, 1.92 ) }
    dend_5 { pt3dadd( 36.5226, 100.793, 13.5071, 1.08 ) }
    dend_5 { pt3dadd( 36.7212, 101.553, 13.4618, 0.72 ) }
    dend_5 { pt3dadd( 36.8236, 101.957, 13.4891, 0.24 ) }
    dend_5 { pt3dadd( 37.115, 102.878, 13.5749, 0.24 ) }
    dend_5 { pt3dadd( 37.3228, 103.559, 13.6401, 0.72 ) }
    dend_5 { pt3dadd( 37.5172, 104.354, 13.7546, 0.12 ) }
    dend_5 { pt3dadd( 37.7007, 105.046, 13.8746, 0.12 ) }
    dend_5 { pt3dadd( 37.9625, 106.018, 14.0218, 1.8 ) }
    dend_5 { pt3dadd( 38.2778, 107.253, 14.2102, 2.76 ) }
    dend_5 { pt3dadd( 38.466, 108.055, 14.3539, 2.64 ) }
    dend_5 { pt3dadd( 38.769, 109.394, 14.6138, 1.08 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 39.2867, -113.168, -32.8071, 0.12 ) }
    dend_39 { pt3dadd( 40.0952, -113.677, -32.8177, 0.12 ) }
    dend_39 { pt3dadd( 40.7661, -114.1, -32.8266, 0.12 ) }
    dend_39 { pt3dadd( 41.4445, -114.527, -32.8355, 0.6 ) }
    dend_39 { pt3dadd( 41.8006, -114.751, -32.8402, 0.12 ) }
    dend_39 { pt3dadd( 42.6542, -115.289, -32.8514, 0.12 ) }
    dend_39 { pt3dadd( 43.1015, -115.57, -32.8573, 0.72 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 39.2867, -113.168, -32.8071, 0.12 ) }
    dend_36 { pt3dadd( 39.3517, -114.395, -32.5984, 0.12 ) }
    dend_36 { pt3dadd( 39.3845, -115.144, -32.3415, 0.12 ) }
    dend_36 { pt3dadd( 39.4312, -115.688, -32.117, 0.96 ) }
    dend_36 { pt3dadd( 39.4925, -116.22, -31.8951, 1.56 ) }
    dend_36 { pt3dadd( 39.6141, -117.057, -31.5595, 0.12 ) }
    dend_36 { pt3dadd( 39.6936, -117.493, -31.3934, 0.12 ) }
    dend_36 { pt3dadd( 40.0287, -118.829, -30.7884, 1.08 ) }
    dend_36 { pt3dadd( 40.2, -119.399, -30.5209, 0.72 ) }
    dend_36 { pt3dadd( 40.3496, -119.842, -30.3236, 0.12 ) }
    dend_36 { pt3dadd( 40.5318, -120.367, -30.041, 0.12 ) }
    dend_36 { pt3dadd( 40.6883, -120.842, -29.7663, 0.12 ) }
    dend_36 { pt3dadd( 40.9123, -121.6, -29.359, 1.44 ) }
    dend_36 { pt3dadd( 41.0234, -122.01, -29.1675, 1.68 ) }
    dend_36 { pt3dadd( 41.0933, -122.333, -29.012, 1.68 ) }
    dend_36 { pt3dadd( 41.3455, -123.695, -28.3862, 0.12 ) }
    dend_36 { pt3dadd( 41.4248, -124.324, -28.1147, 0.12 ) }
    dend_36 { pt3dadd( 41.4661, -125.003, -27.8634, 0.12 ) }
    dend_36 { pt3dadd( 41.4692, -125.241, -27.7956, 0.96 ) }
    dend_36 { pt3dadd( 41.4571, -125.796, -27.6614, 0.96 ) }
    dend_36 { pt3dadd( 41.4438, -126.308, -27.5667, 0.12 ) }
    dend_36 { pt3dadd( 41.3795, -127.695, -27.4368, 0.12 ) }
    dend_36 { pt3dadd( 41.3356, -128.403, -27.3725, 0.96 ) }
    dend_36 { pt3dadd( 41.2847, -129.048, -27.3295, 1.68 ) }
    dend_36 { pt3dadd( 41.2522, -129.503, -27.3069, 1.92 ) }
    dend_36 { pt3dadd( 41.2214, -129.979, -27.3057, 1.92 ) }
    dend_36 { pt3dadd( 41.1515, -131.159, -27.3577, 0.12 ) }
    dend_36 { pt3dadd( 41.1171, -131.61, -27.4155, 0.12 ) }
    dend_36 { pt3dadd( 41.0114, -132.619, -27.5856, 0.12 ) }
    dend_36 { pt3dadd( 40.9427, -133.074, -27.7118, 0.6 ) }
    dend_36 { pt3dadd( 40.8102, -133.68, -27.9237, 0.12 ) }
    dend_36 { pt3dadd( 40.6337, -134.3, -28.1713, 0.12 ) }
    dend_36 { pt3dadd( 40.4337, -134.943, -28.4531, 1.2 ) }
    dend_36 { pt3dadd( 40.1337, -135.84, -28.8575, 1.68 ) }
    dend_36 { pt3dadd( 39.6697, -137.133, -29.4222, 0.12 ) }
    dend_36 { pt3dadd( 39.4499, -137.78, -29.7015, 0.12 ) }
    dend_36 { pt3dadd( 39.3237, -138.237, -29.878, 0.12 ) }
    dend_36 { pt3dadd( 39.2199, -138.773, -30.0905, 0.12 ) }
    dend_36 { pt3dadd( 39.1874, -139.091, -30.2104, 1.2 ) }
    dend_36 { pt3dadd( 39.1701, -139.777, -30.4518, 1.56 ) }
    dend_36 { pt3dadd( 39.2209, -140.98, -30.8353, 0.24 ) }
    dend_36 { pt3dadd( 39.2971, -141.863, -31.136, 0.24 ) }
    dend_36 { pt3dadd( 39.3724, -142.747, -31.4517, 0.72 ) }
    dend_36 { pt3dadd( 39.3994, -143.183, -31.6074, 0.84 ) }
    dend_36 { pt3dadd( 39.422, -143.649, -31.7671, 0.12 ) }
    dend_36 { pt3dadd( 39.4287, -143.974, -31.8781, 0.12 ) }
    dend_36 { pt3dadd( 39.4069, -144.515, -32.073, 0.12 ) }
    dend_36 { pt3dadd( 39.3808, -144.905, -32.2293, 0.12 ) }
    dend_36 { pt3dadd( 39.3642, -145.372, -32.2159, 0.12 ) }
    dend_36 { pt3dadd( 39.3621, -145.594, -32.1627, 0.12 ) }
    dend_36 { pt3dadd( 39.3516, -146.377, -31.8657, 1.32 ) }
    dend_36 { pt3dadd( 39.3089, -147.233, -31.4723, 0.12 ) }
    dend_36 { pt3dadd( 39.2991, -147.984, -31.0324, 0.12 ) }
    dend_36 { pt3dadd( 39.3867, -151.227, -28.6521, 0.6 ) }
    dend_36 { pt3dadd( 39.4423, -152.403, -27.5174, 1.32 ) }
    dend_36 { pt3dadd( 39.4604, -152.71, -27.1244, 2.04 ) }
    dend_36 { pt3dadd( 39.4853, -153.018, -26.5698, 2.4 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 108.125, -18.6757, 13.7786, 0.24 ) }
    dend_32 { pt3dadd( 109.146, -18.5814, 14.2355, 0.24 ) }
    dend_32 { pt3dadd( 109.595, -18.5319, 14.4359, 0.24 ) }
    dend_32 { pt3dadd( 111.233, -18.3457, 15.1555, 0.24 ) }
    dend_32 { pt3dadd( 111.715, -18.2831, 15.35, 0.96 ) }
    dend_32 { pt3dadd( 112.621, -18.1545, 15.6459, 1.56 ) }
    dend_32 { pt3dadd( 113.415, -18.0316, 15.9152, 0.36 ) }
    dend_32 { pt3dadd( 114.948, -17.7717, 16.4068, 0.12 ) }
    dend_32 { pt3dadd( 115.294, -17.7067, 16.5122, 1.2 ) }
    dend_32 { pt3dadd( 116.374, -17.4767, 16.7797, 2.16 ) }
    dend_32 { pt3dadd( 117.711, -17.1253, 17.1346, 0.12 ) }
    dend_32 { pt3dadd( 119.084, -16.68, 17.4981, 0.12 ) }
    dend_32 { pt3dadd( 119.323, -16.5801, 17.558, 0.84 ) }
    dend_32 { pt3dadd( 119.783, -16.3325, 17.6526, 0.96 ) }
    dend_32 { pt3dadd( 120.392, -15.9564, 17.7892, 0.12 ) }
    dend_32 { pt3dadd( 120.942, -15.5207, 17.9414, 0.12 ) }
    dend_32 { pt3dadd( 121.115, -15.3216, 17.9968, 0.6 ) }
    dend_32 { pt3dadd( 121.496, -14.7529, 17.9936, 0.12 ) }
    dend_32 { pt3dadd( 121.739, -14.2933, 18.0008, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 95/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 108.125, -18.6757, 13.7786, 0.6 ) }
    dend_31 { pt3dadd( 107.937, -17.5323, 13.9399, 0.6 ) }
    dend_31 { pt3dadd( 107.892, -17.2156, 13.9851, 0.6 ) }
    dend_31 { pt3dadd( 107.835, -16.537, 14.0566, 0.84 ) }
    dend_31 { pt3dadd( 107.826, -15.6088, 14.1293, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_31 { pt3dadd( 107.814, -14.552, 14.1949, 0.12 ) }
    dend_31 { pt3dadd( 107.813, -14.1919, 14.2126, 0.96 ) }
    dend_31 { pt3dadd( 107.855, -13.4051, 14.2451, 1.2 ) }
    dend_31 { pt3dadd( 107.943, -12.5094, 14.2583, 0.12 ) }
    dend_31 { pt3dadd( 108.085, -11.5074, 14.2455, 0.12 ) }
    dend_31 { pt3dadd( 108.227, -10.721, 14.1915, 0.12 ) }
    dend_31 { pt3dadd( 108.434, -9.83821, 14.0881, 0.12 ) }
    dend_31 { pt3dadd( 108.542, -9.44291, 14.0392, 0.12 ) }
    dend_31 { pt3dadd( 108.822, -8.55363, 13.9265, 1.68 ) }
    dend_31 { pt3dadd( 108.938, -8.26511, 13.8289, 1.92 ) }
    dend_31 { pt3dadd( 109.446, -7.26807, 13.2894, 0.12 ) }
    dend_31 { pt3dadd( 109.924, -6.47312, 12.7019, 0.12 ) }
    dend_31 { pt3dadd( 110.129, -6.12074, 12.3874, 1.32 ) }
    dend_31 { pt3dadd( 110.287, -5.804, 12.0365, 1.68 ) }
    dend_31 { pt3dadd( 111.178, -3.90336, 9.35955, 0.36 ) }
    dend_31 { pt3dadd( 111.288, -3.69184, 9.00526, 0.36 ) }
    dend_31 { pt3dadd( 111.438, -3.41728, 8.46586, 0.12 ) }
    dend_31 { pt3dadd( 111.654, -3.01786, 7.57187, 0.12 ) }
    dend_31 { pt3dadd( 112.047, -2.22441, 5.69486, 0.48 ) }
    dend_31 { pt3dadd( 112.254, -1.70789, 4.47008, 1.44 ) }
    dend_31 { pt3dadd( 112.36, -1.21651, 3.49525, 2.16 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 21/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.83365, -257.907, -42.8118, 0.24 ) }
    dend_22 { pt3dadd( -4.58442, -257.577, -43.0211, 0.24 ) }
    dend_22 { pt3dadd( -4.26815, -257.158, -43.2868, 0.24 ) }
    dend_22 { pt3dadd( -3.88563, -256.651, -43.608, 0.6 ) }
    dend_22 { pt3dadd( -3.49915, -256.14, -43.9327, 1.08 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.83365, -257.907, -42.8118, 0.12 ) }
    dend_21 { pt3dadd( -4.30214, -258.302, -42.2883, 0.12 ) }
    dend_21 { pt3dadd( -3.95745, -258.519, -41.9462, 0.12 ) }
    dend_21 { pt3dadd( -3.64806, -258.667, -41.6963, 0.12 ) }
    dend_21 { pt3dadd( -3.23566, -258.811, -41.4391, 0.12 ) }
    dend_21 { pt3dadd( -3.00406, -258.871, -41.3191, 0.12 ) }
    dend_21 { pt3dadd( -1.10034, -259.234, -40.4813, 0.12 ) }
    dend_21 { pt3dadd( -0.274835, -259.284, -40.2087, 2.04 ) }
    dend_21 { pt3dadd( 0.611423, -259.271, -39.9369, 1.56 ) }
    dend_21 { pt3dadd( 1.55266, -259.203, -39.6829, 0.36 ) }
    dend_21 { pt3dadd( 2.06219, -259.137, -39.5292, 0.36 ) }
    dend_21 { pt3dadd( 2.64112, -259.042, -39.3583, 0.36 ) }
    dend_21 { pt3dadd( 3.80782, -258.821, -39.0711, 0.36 ) }
    dend_21 { pt3dadd( 4.26866, -258.729, -38.8906, 0.6 ) }
    dend_21 { pt3dadd( 4.58106, -258.667, -38.724, 0.6 ) }
    dend_21 { pt3dadd( 5.92725, -258.377, -37.8808, 0.36 ) }
    dend_21 { pt3dadd( 6.22429, -258.314, -37.6886, 0.6 ) }
    dend_21 { pt3dadd( 6.6475, -258.231, -37.4477, 0.6 ) }
    dend_21 { pt3dadd( 7.42655, -258.1, -37.0967, 0.12 ) }
    dend_21 { pt3dadd( 7.75486, -258.071, -37.0162, 0.12 ) }
    dend_21 { pt3dadd( 8.3618, -258.068, -36.98, 0.12 ) }
    dend_21 { pt3dadd( 8.94583, -258.128, -37.1019, 1.08 ) }
    dend_21 { pt3dadd( 10.0554, -258.367, -37.4526, 0.12 ) }
    dend_21 { pt3dadd( 10.2898, -258.453, -37.5468, 0.12 ) }
    dend_21 { pt3dadd( 10.9213, -258.753, -37.8295, 0.12 ) }
    dend_21 { pt3dadd( 11.3156, -258.98, -38.0101, 0.48 ) }
    dend_21 { pt3dadd( 11.9455, -259.397, -38.3052, 0.12 ) }
    dend_21 { pt3dadd( 12.3154, -259.666, -38.4719, 0.12 ) }
    dend_21 { pt3dadd( 12.9487, -260.148, -38.6947, 0.12 ) }
    dend_21 { pt3dadd( 13.3979, -260.49, -38.8642, 0.12 ) }
    dend_21 { pt3dadd( 13.7759, -260.768, -39.0172, 1.08 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 39.4853, -153.018, -26.5698, 0.48 ) }
    dend_38 { pt3dadd( 39.4959, -154.799, -29.9405, 0.48 ) }
    dend_38 { pt3dadd( 39.4877, -155.09, -30.4635, 0.48 ) }
    dend_38 { pt3dadd( 39.4653, -155.768, -31.5594, 0.12 ) }
    dend_38 { pt3dadd( 39.4632, -156.101, -32.0606, 0.12 ) }
    dend_38 { pt3dadd( 39.4601, -156.563, -32.7551, 1.2 ) }
    dend_38 { pt3dadd( 39.4563, -157.145, -33.6297, 0.12 ) }
    dend_38 { pt3dadd( 39.4465, -157.296, -33.7959, 0.12 ) }
    dend_38 { pt3dadd( 39.4156, -157.767, -34.33, 0.72 ) }
    dend_38 { pt3dadd( 39.3879, -158.045, -34.571, 0.72 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 39.4853, -153.018, -26.5698, 0.12 ) }
    dend_37 { pt3dadd( 38.4495, -154.808, -27.9851, 0.12 ) }
    dend_37 { pt3dadd( 38.0696, -155.573, -28.3365, 0.12 ) }
    dend_37 { pt3dadd( 37.9616, -155.794, -28.4159, 0.6 ) }
    dend_37 { pt3dadd( 37.6509, -156.408, -28.5962, 0.24 ) }
    dend_37 { pt3dadd( 37.5331, -156.635, -28.6239, 0.24 ) }
    dend_37 { pt3dadd( 37.2125, -157.226, -28.6389, 0.24 ) }
    dend_37 { pt3dadd( 36.9666, -157.653, -28.5137, 0.6 ) }
    dend_37 { pt3dadd( 36.5628, -158.213, -28.3252, 0.12 ) }
    dend_37 { pt3dadd( 36.1977, -158.634, -28.1839, 0.12 ) }
    dend_37 { pt3dadd( 35.3968, -159.39, -27.944, 0.84 ) }
    dend_37 { pt3dadd( 35.2023, -159.555, -27.8811, 0.84 ) }
    dend_37 { pt3dadd( 34.8288, -159.833, -27.7396, 0.12 ) }
    dend_37 { pt3dadd( 34.6199, -159.967, -27.648, 0.12 ) }
    dend_37 { pt3dadd( 34.0707, -160.267, -27.3629, 0.84 ) }
    dend_37 { pt3dadd( 33.8412, -160.368, -27.2725, 0.96 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_15, dend_0, dend_48, dend_27, dend_25, dend_16, dend_2, dend_1, dend_54, dend_49, dend_41, dend_28, dend_24, dend_17, dend_8, dend_3, dend_58, dend_55, dend_53, dend_50, dend_45, dend_42, dend_34, dend_29, dend_23, dend_18, dend_12, dend_9, dend_7, dend_4, dend_60, dend_59, dend_57, dend_56, dend_52, dend_51, dend_47, dend_46, dend_44, dend_43, dend_40, dend_35, dend_33, dend_30, dend_20, dend_19, dend_14, dend_13, dend_11, dend_10, dend_6, dend_5, dend_39, dend_36, dend_32, dend_31, dend_22, dend_21, dend_38, dend_37]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_15 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_16 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_41 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_58 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_55 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_53 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_50 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_34 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_9 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_60 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_59 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_57 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_56 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_52 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_51 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_30 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_19 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_14 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_11 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_10 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_36 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_48 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_2 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_49 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_3 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_29 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_54 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_8 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_4 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_25 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_12 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_33 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_13 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_40 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_39 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_32 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_31 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_42 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_45 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_46 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_43 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_44 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_38 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_37 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_17 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_18 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_20 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_22 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_24 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_21 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_16 nseg = 9
    dend_41 nseg = 7
    dend_58 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 5
    dend_50 nseg = 3
    dend_34 nseg = 3
    dend_9 nseg = 3
    dend_60 nseg = 23
    dend_59 nseg = 7
    dend_57 nseg = 5
    dend_56 nseg = 3
    dend_52 nseg = 9
    dend_51 nseg = 7
    dend_47 nseg = 3
    dend_30 nseg = 3
    dend_19 nseg = 3
    dend_14 nseg = 7
    dend_11 nseg = 3
    dend_10 nseg = 7
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L4_DBC_cf9508af7b_0_0


