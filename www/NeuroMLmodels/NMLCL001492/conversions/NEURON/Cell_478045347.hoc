// Cell: Cell_478045347
/*
{
  "id" : "Cell_478045347",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "374.219, 773.573, 56.56, 10.492", "379.465, 773.573, 56.56, 10.492", "384.711, 773.573, 56.56, 10.492" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "379.465, 773.573, 56.56, 1.0", "385.306, 787.389, 56.56, 1.0", "391.148, 801.205, 56.56, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "375.144, 775.629, 58.7213, 0.9274", "374.255, 776.301, 59.346, 0.752", "373.367, 776.976, 59.9704, 0.6256" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "380.71, 778.737, 56.3976, 1.4324", "381.159, 779.769, 55.8964, 0.9922", "381.199, 780.833, 55.2457, 0.8258", "380.99, 781.915, 54.5042, 0.8262", "381.02, 783.016, 53.9017, 0.842", "381.182, 784.128, 53.3753, 0.8662", "381.261, 785.256, 52.9768, 0.8296", "381.296, 786.391, 52.6481, 0.7602", "381.552, 787.49, 52.3894, 0.7108", "381.924, 788.567, 52.1682, 0.6722", "382.223, 789.664, 51.8941, 0.6808", "382.487, 790.771, 51.5948, 0.712", "382.275, 791.844, 51.1689, 0.6682", "381.893, 792.905, 50.6976, 0.5978", "381.478, 793.931, 50.0055, 0.5862", "381.052, 794.946, 49.2411, 0.5934", "380.781, 796.005, 48.4498, 0.5666", "380.56, 797.079, 47.6501, 0.529", "380.539, 798.172, 46.879, 0.5136", "380.58, 799.273, 46.1166, 0.505", "380.493, 800.376, 45.4258, 0.5906", "380.371, 801.479, 44.7555, 0.703", "380.034, 802.53, 44.0544, 0.7338", "379.65, 803.567, 43.3462, 0.7462", "379.317, 804.635, 42.7529, 0.6688", "378.995, 805.708, 42.1848, 0.572", "378.6, 806.759, 41.6598, 0.6364", "378.193, 807.807, 41.1426, 0.729", "377.708, 808.823, 40.6543, 0.6542", "377.211, 809.834, 40.1708, 0.5508", "377.116, 810.932, 39.536, 0.5166", "377.085, 812.043, 38.8769, 0.4934", "376.88, 813.153, 38.4348, 0.4232", "376.66, 814.261, 38.0125, 0.3484", "375.793, 814.979, 37.7614, 0.2882", "374.889, 815.672, 37.52, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "374.757, 774.181, 58.2238, 1.151", "373.734, 773.69, 58.4774, 0.93", "372.717, 773.176, 58.7241, 0.7898", "371.67, 772.719, 58.5698, 0.792", "370.623, 772.264, 58.4128, 0.7954", "369.487, 772.231, 58.098, 0.786", "368.351, 772.199, 57.7825, 0.7766", "367.207, 772.182, 57.7094, 0.8584", "366.064, 772.164, 57.6363, 0.9404", "364.941, 771.948, 57.6974, 0.9286", "363.817, 771.733, 57.7584, 0.9168" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "382.949, 777.612, 55.6413, 0.7696", "383.834, 778.32, 55.7082, 0.5892", "384.773, 778.972, 55.8174, 0.7364", "385.833, 778.564, 55.8032, 0.8062", "386.895, 778.138, 55.7869, 0.875" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "375.15, 771.779, 53.3019, 1.193", "374.598, 771.048, 52.6294, 0.3698", "374.63, 769.927, 52.0825, 0.4752", "374.512, 768.878, 51.0782, 0.467", "374.333, 767.86, 49.882, 0.411", "375.084, 767.43, 48.2695, 0.367", "376.008, 767.45, 46.9392, 0.3798", "377.0, 767.831, 45.908, 0.4442", "376.582, 768.561, 44.3909, 0.4728", "375.961, 769.23, 42.7123, 0.571", "375.416, 769.923, 41.0732, 0.6844", "375.436, 770.961, 39.8964, 0.7344", "375.604, 771.925, 38.6089, 0.7594", "376.146, 772.702, 37.0398, 0.7206", "376.281, 773.614, 35.4662, 0.763", "376.311, 774.559, 33.8918, 0.8256", "376.934, 775.188, 32.1978, 0.9326", "377.617, 775.785, 30.492, 1.044", "378.371, 776.489, 29.2835, 1.0202", "379.127, 777.195, 28.0848, 0.9938", "379.945, 777.869, 27.0292, 0.7516", "380.763, 778.541, 25.9748, 0.5074" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "375.789, 770.878, 54.0282, 0.2422", "374.829, 770.256, 54.0915, 0.28", "373.867, 769.642, 54.215, 0.3204", "372.896, 769.051, 54.5342, 0.3696", "371.943, 768.435, 54.871, 0.4294", "371.043, 767.746, 55.2583, 0.5202", "370.169, 767.026, 55.5612, 0.612", "369.361, 766.216, 55.6469, 0.7056", "368.467, 765.542, 55.6968, 0.789", "367.39, 765.155, 55.6704, 0.85", "366.311, 764.775, 55.6657, 0.8686", "365.228, 764.408, 55.7052, 0.7998", "364.156, 764.013, 55.743, 0.775", "363.104, 763.56, 55.7774, 0.8408", "362.048, 763.123, 55.8256, 0.8596", "360.978, 762.722, 55.902, 0.7848", "359.893, 762.364, 55.9538, 0.728", "358.781, 762.094, 55.9574, 0.706", "357.677, 761.798, 55.9636, 0.7186", "356.586, 761.454, 55.9745, 0.7982", "355.495, 761.112, 56.0232, 0.839", "354.402, 760.776, 56.1422, 0.8066", "353.306, 760.452, 56.2036, 0.7566", "352.202, 760.151, 56.1562, 0.6732", "351.12, 759.801, 55.9941, 0.6402", "350.074, 759.362, 55.6203, 0.7002", "349.013, 758.957, 55.3596, 0.7454", "347.924, 758.606, 55.2776, 0.7676", "346.857, 758.201, 55.2737, 0.7722", "345.822, 757.716, 55.3865, 0.7506", "344.788, 757.229, 55.4828, 0.6994", "343.756, 756.737, 55.554, 0.6034", "342.718, 756.254, 55.6324, 0.5648", "341.676, 755.786, 55.7214, 0.612", "340.636, 755.309, 55.7662, 0.6366", "339.602, 754.819, 55.7452, 0.6278", "338.568, 754.332, 55.6598, 0.5804", "337.534, 753.849, 55.4792, 0.4758", "336.485, 753.407, 55.2521, 0.4428", "335.412, 753.028, 54.957, 0.5158", "334.324, 752.707, 54.637, 0.5744", "333.214, 752.471, 54.2816, 0.613", "332.11, 752.205, 53.9512, 0.6174", "331.015, 751.897, 53.6556, 0.5746", "329.925, 751.578, 53.3358, 0.5596", "328.839, 751.244, 52.9836, 0.5824", "327.743, 750.963, 52.6033, 0.6276", "326.633, 750.751, 52.1861, 0.703", "325.522, 750.539, 51.7642, 0.7274", "324.411, 750.328, 51.3352, 0.6842", "323.301, 750.135, 50.8525, 0.6476", "322.193, 749.965, 50.2984, 0.619", "321.076, 749.868, 49.775, 0.6494", "319.949, 749.866, 49.2912, 0.7558", "318.825, 749.865, 48.7872, 0.8274", "317.701, 749.865, 48.2572, 0.8546", "316.593, 749.725, 47.7988, 0.8526", "315.505, 749.407, 47.4331, 0.8134", "314.399, 749.174, 47.075, 0.793", "313.271, 749.049, 46.7264, 0.7966", "312.138, 748.937, 46.4472, 0.8052", "311.001, 748.838, 46.256, 0.82", "309.932, 748.521, 46.1686, 0.8192", "308.948, 747.939, 46.207, 0.7996", "307.901, 747.516, 46.2078, 0.7624", "306.783, 747.276, 46.1653, 0.7046", "305.653, 747.142, 46.1418, 0.6708", "304.509, 747.126, 46.1398, 0.6638", "303.365, 747.094, 46.1255, 0.6654", "302.222, 747.045, 46.0975, 0.677", "301.084, 746.951, 46.1252, 0.6756", "299.949, 746.81, 46.2132, 0.6602", "298.835, 746.903, 46.3702, 0.6012", "297.741, 747.225, 46.5959, 0.4988", "296.636, 747.492, 46.8664, 0.4236", "295.518, 747.703, 47.1792, 0.3738", "294.39, 747.769, 47.4429, 0.3696", "293.252, 747.697, 47.661, 0.4082", "292.113, 747.685, 47.6314, 0.4678", "290.975, 747.73, 47.3768, 0.5468", "289.866, 747.931, 47.0938, 0.5604", "288.78, 748.271, 46.7855, 0.5164", "287.669, 748.504, 46.571, 0.4764", "286.535, 748.644, 46.4391, 0.4396", "285.426, 748.9, 46.4016, 0.487", "284.339, 749.256, 46.4458, 0.6072", "283.251, 749.606, 46.5508, 0.6418", "282.162, 749.951, 46.7051, 0.6058", "281.059, 750.232, 46.9232, 0.632", "279.943, 750.459, 47.192, 0.708", "278.826, 750.687, 47.4345, 0.707", "277.708, 750.916, 47.6563, 0.6444", "276.594, 751.163, 47.826, 0.577", "275.482, 751.425, 47.9545, 0.5058", "274.4, 751.779, 48.1306, 0.4824", "273.342, 752.205, 48.3448, 0.4972", "272.258, 752.555, 48.547, 0.4988", "271.155, 752.847, 48.7399, 0.4906", "270.076, 753.214, 48.8933, 0.5024", "269.015, 753.639, 49.0174, 0.5286", "267.975, 754.112, 49.063, 0.4914", "266.95, 754.62, 49.0535, 0.4098", "265.899, 755.068, 48.9787, 0.3734", "264.83, 755.472, 48.8578, 0.3686", "263.725, 755.742, 48.8278, 0.3842", "262.595, 755.917, 48.8606, 0.4142", "261.534, 756.306, 48.9381, 0.4766", "260.521, 756.834, 49.0454, 0.5608", "259.444, 757.19, 49.1596, 0.614", "258.328, 757.435, 49.278, 0.6478", "257.194, 757.501, 49.3573, 0.644", "256.051, 757.468, 49.415, 0.6194", "254.908, 757.49, 49.4721, 0.618", "253.766, 757.543, 49.5286, 0.6288", "252.624, 757.532, 49.4418, 0.5786", "251.482, 757.488, 49.2839, 0.4982", "250.34, 757.521, 49.2215, 0.4712", "249.199, 757.582, 49.1932, 0.4632", "248.063, 757.48, 49.1985, 0.4448", "246.93, 757.322, 49.2156, 0.4224", "245.846, 756.977, 49.1534, 0.398", "244.777, 756.568, 49.065, 0.3726", "243.656, 756.396, 48.9838, 0.4178", "242.517, 756.302, 48.9051, 0.4862", "241.407, 756.04, 48.9608, 0.5612", "240.309, 755.724, 49.0605, 0.6386", "239.206, 755.432, 49.2582, 0.5888", "238.102, 755.148, 49.485, 0.501", "236.984, 754.916, 49.6807, 0.4544", "235.864, 754.7, 49.8669, 0.4204", "234.743, 754.471, 49.9668, 0.399", "233.624, 754.239, 50.0413, 0.3812", "232.521, 753.938, 49.9657, 0.4006", "231.424, 753.618, 49.8462, 0.431", "230.41, 753.103, 49.7991, 0.4382", "229.418, 752.534, 49.7731, 0.4386", "228.4, 752.023, 50.0018, 0.4528", "227.375, 751.529, 50.2953, 0.4706", "226.324, 751.115, 50.7349, 0.4292", "225.268, 750.72, 51.2089, 0.3738", "224.169, 750.486, 51.6866, 0.3436", "223.059, 750.288, 52.1651, 0.3194", "221.966, 750.478, 52.6652, 0.357", "220.874, 750.753, 53.1703, 0.408", "219.78, 751.034, 53.615, 0.4382", "218.686, 751.315, 54.047, 0.464", "217.68, 751.823, 54.4522, 0.512", "216.693, 752.378, 54.852, 0.5644", "215.841, 753.119, 55.2258, 0.5464", "215.016, 753.896, 55.5943, 0.5144", "213.903, 754.01, 55.9191, 0.511", "212.768, 754.071, 56.2405, 0.5096", "211.629, 754.154, 56.3091, 0.533", "210.488, 754.239, 56.3587, 0.5584", "209.362, 754.046, 56.3186, 0.5042", "208.238, 753.838, 56.2741, 0.4462", "207.197, 753.367, 56.2128, 0.4672", "206.16, 752.885, 56.1504, 0.4918", "205.046, 752.626, 56.1246, 0.4754", "203.931, 752.373, 56.0997, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "382.546, 769.53, 58.2448, 2.5196", "383.04, 767.347, 58.9893, 1.2926", "383.481, 766.318, 59.3589, 1.1018", "384.025, 765.322, 59.731, 0.9878", "384.777, 764.511, 60.3442, 0.935", "385.582, 763.745, 61.0176, 0.8974", "385.754, 762.661, 61.5132, 0.9596", "385.847, 761.538, 61.9867, 1.0344", "385.86, 760.396, 62.0883, 1.0948", "385.866, 759.252, 62.1522, 1.1538", "386.191, 758.161, 62.0836, 1.2658", "386.546, 757.073, 62.0035, 1.3824", "386.57, 755.936, 62.2006, 1.2924", "386.568, 754.796, 62.4196, 1.1862", "386.688, 753.661, 62.6122, 1.1422", "386.814, 752.527, 62.8034, 1.1008", "387.102, 751.43, 63.1694, 1.1114", "387.394, 750.335, 63.539, 1.1232", "387.952, 749.361, 64.0783, 1.0308", "388.515, 748.39, 64.6198, 0.9372", "388.853, 747.311, 65.0415, 0.991", "389.188, 746.231, 65.462, 1.0468", "389.616, 745.174, 65.6986, 1.099", "390.044, 744.118, 65.935, 1.1514" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999973
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "391.148, 801.205, 56.56, 1.0", "396.989, 815.021, 56.56, 1.0", "402.83, 828.837, 56.56, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "373.367, 776.976, 59.9704, 0.6256", "373.014, 778.427, 60.4316, 0.5066", "372.743, 779.536, 60.5662, 0.5112", "372.406, 780.629, 60.6967, 0.6358", "372.062, 781.718, 60.8266, 0.7728", "371.806, 782.82, 61.241, 0.8168", "371.559, 783.921, 61.6848, 0.8512", "371.705, 785.015, 62.3647, 0.7742", "371.887, 786.108, 63.0661, 0.6872", "372.086, 787.209, 63.6303, 0.7072", "372.286, 788.313, 64.1833, 0.736", "372.409, 789.447, 64.3762, 0.694", "372.526, 790.583, 64.54, 0.646", "372.565, 791.726, 64.5929, 0.6908", "372.6, 792.869, 64.6394, 0.7406", "372.822, 793.991, 64.5938, 0.6856", "373.04, 795.113, 64.5481, 0.6308", "372.788, 796.229, 64.596, 0.6828", "372.553, 797.345, 64.6481, 0.7332", "372.707, 798.477, 64.8035, 0.7372", "372.952, 799.573, 64.9874, 0.7162", "373.617, 800.493, 65.3066, 0.576", "374.166, 801.461, 65.6057, 0.4652", "374.293, 802.594, 65.8325, 0.4604", "374.436, 803.724, 66.0596, 0.4648", "374.637, 804.847, 66.2878, 0.5016", "374.82, 805.972, 66.5064, 0.5202", "374.944, 807.107, 66.6929, 0.4744", "375.028, 808.243, 66.8959, 0.468", "374.979, 809.38, 67.1566, 0.5964", "375.015, 810.508, 67.429, 0.7136", "375.322, 811.603, 67.7398, 0.7948", "375.557, 812.707, 68.052, 0.8424", "375.559, 813.844, 68.369, 0.7846", "375.588, 814.98, 68.675, 0.7258", "375.695, 816.112, 68.9458, 0.6632", "375.775, 817.246, 69.2434, 0.6014", "375.764, 818.38, 69.6237, 0.5422", "375.774, 819.512, 70.0022, 0.4876", "375.85, 820.644, 70.3755, 0.4472", "376.025, 821.752, 70.7109, 0.4462", "376.496, 822.79, 70.9335, 0.5628", "377.03, 823.792, 71.1374, 0.6966", "377.713, 824.707, 71.297, 0.8716", "378.424, 825.601, 71.4428, 1.0302", "379.198, 826.442, 71.5565, 1.1496", "379.978, 827.277, 71.6184, 1.2276", "380.773, 828.098, 71.5585, 1.2082", "381.555, 828.933, 71.4885, 1.1738", "382.303, 829.798, 71.3947, 1.104", "383.081, 830.632, 71.2558, 1.0502", "383.926, 831.396, 71.0136, 1.032", "384.771, 832.163, 70.7871, 1.0034", "385.607, 832.938, 70.5953, 0.951", "386.48, 833.668, 70.3707, 0.9034", "387.431, 834.292, 70.0722, 0.8664", "388.342, 834.966, 69.7788, 0.8104", "389.169, 835.748, 69.4971, 0.7136", "389.895, 836.609, 69.3524, 0.6742", "390.422, 837.623, 69.4694, 0.744", "391.02, 838.59, 69.4882, 0.7834", "391.745, 839.473, 69.3294, 0.768", "392.559, 840.251, 69.1256, 0.787", "393.528, 840.848, 68.8442, 0.866", "394.516, 841.409, 68.542, 0.9338", "395.536, 841.91, 68.206, 0.9836", "396.42, 842.562, 67.7796, 1.0116", "397.085, 843.463, 67.2042, 1.004", "397.562, 844.447, 66.6243, 0.8988", "397.787, 845.543, 66.0386, 0.6628", "398.097, 846.625, 65.7236, 0.5608", "398.51, 847.693, 65.735, 0.6206", "399.028, 848.704, 65.728, 0.6612", "399.676, 849.648, 65.6986, 0.6792", "400.334, 850.582, 65.6222, 0.6802", "401.005, 851.507, 65.492, 0.662", "401.687, 852.424, 65.366, 0.625", "402.378, 853.335, 65.2439, 0.5666", "402.996, 854.292, 65.1977, 0.4988", "403.539, 855.299, 65.2277, 0.4218", "404.198, 856.224, 65.214, 0.4286", "404.958, 857.08, 65.1616, 0.5084", "405.698, 857.951, 65.0462, 0.545", "406.421, 858.834, 64.8785, 0.545", "407.224, 859.641, 64.7214, 0.5298", "408.092, 860.382, 64.5725, 0.5016", "409.011, 861.056, 64.3812, 0.5362", "409.97, 861.673, 64.1561, 0.621", "410.912, 862.316, 63.9727, 0.652", "411.842, 862.979, 63.8226, 0.6408", "412.553, 863.838, 63.609, 0.6814", "413.111, 864.83, 63.3522, 0.7572", "413.801, 865.725, 63.042, 0.7664", "414.564, 866.566, 62.7015, 0.738", "415.418, 867.306, 62.3476, 0.7256", "416.318, 868.0, 61.987, 0.7212", "417.253, 868.648, 61.749, 0.6556", "418.206, 869.276, 61.5692, 0.561", "418.99, 870.091, 61.5306, 0.4822", "419.695, 870.992, 61.5566, 0.4106", "420.475, 871.824, 61.6599, 0.4138", "421.289, 872.626, 61.7968, 0.4496", "422.193, 873.308, 62.1135, 0.502", "423.13, 873.946, 62.4949, 0.5602", "423.739, 874.855, 63.114, 0.622", "424.262, 875.833, 63.7949, 0.6848", "424.705, 876.849, 64.482, 0.7354", "425.13, 877.872, 65.1708, 0.783", "425.235, 878.831, 66.5893, 0.6934", "425.628, 879.472, 68.0935, 0.6192", "426.614, 879.608, 69.4764, 0.6206", "427.54, 879.982, 70.6376, 0.6118", "428.392, 880.654, 71.5218, 0.5904", "429.144, 881.429, 72.3506, 0.5774", "429.772, 882.334, 73.1114, 0.5746", "430.288, 883.309, 73.7559, 0.5274", "430.677, 884.365, 74.2664, 0.429", "431.225, 885.334, 74.7485, 0.3782", "431.919, 886.224, 75.2044, 0.3714", "432.529, 887.171, 75.6498, 0.3626", "433.089, 888.152, 76.0892, 0.3528", "433.924, 888.893, 76.4613, 0.3974", "434.841, 889.561, 76.8135, 0.4582", "435.43, 890.514, 76.932, 0.4428", "435.935, 891.54, 76.9899, 0.4078", "436.509, 892.525, 76.8219, 0.3876", "437.101, 893.501, 76.6002, 0.371", "437.905, 894.267, 76.0586, 0.3056", "438.759, 894.984, 75.4421, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "373.367, 776.976, 59.9704, 0.6256", "372.968, 777.402, 60.4621, 0.5264", "371.996, 777.959, 60.643, 0.5358", "370.967, 778.459, 60.6483, 0.5916", "370.009, 779.08, 60.59, 0.7132", "369.064, 779.724, 60.5192, 0.8478", "367.947, 779.92, 60.3705, 0.7772", "366.816, 780.073, 60.2146, 0.6872", "365.673, 780.093, 60.1709, 0.7826", "364.529, 780.107, 60.1317, 0.8858", "363.406, 780.313, 60.2916, 0.8898", "362.284, 780.528, 60.4593, 0.89", "361.151, 780.653, 60.6483, 0.7378", "360.014, 780.774, 60.8381, 0.5798", "358.912, 781.066, 61.0025, 0.5794", "357.809, 781.365, 61.1657, 0.5852", "356.695, 781.615, 61.3388, 0.5928", "355.58, 781.863, 61.5121, 0.6006", "354.44, 781.89, 61.6594, 0.484", "353.297, 781.909, 61.8061, 0.3632", "352.175, 782.123, 61.8929, 0.3736", "351.055, 782.351, 61.9772, 0.389", "350.103, 782.984, 62.0306, 0.435", "349.129, 783.57, 62.1149, 0.4828", "348.034, 783.884, 62.3764, 0.5424", "346.952, 784.227, 62.6545, 0.5892", "345.946, 784.748, 63.0286, 0.5622", "344.944, 785.277, 63.4088, 0.5408", "343.963, 785.843, 63.8212, 0.5486", "343.067, 786.484, 64.2841, 0.5486", "342.541, 787.461, 64.9709, 0.5142", "341.969, 788.383, 65.7653, 0.4862", "341.224, 789.1, 66.9634, 0.483", "340.473, 789.826, 68.1038, 0.4464", "339.707, 790.566, 69.1239, 0.3412", "339.188, 791.481, 69.9541, 0.2978", "338.887, 792.552, 70.616, 0.3092", "338.466, 793.58, 71.2155, 0.3208", "337.951, 794.577, 71.7668, 0.3328", "337.186, 795.356, 72.27, 0.3224", "336.255, 795.992, 72.7409, 0.2972", "335.639, 796.862, 73.3771, 0.2986", "335.23, 797.886, 74.1205, 0.3172", "334.854, 798.93, 74.8098, 0.3258", "334.502, 799.984, 75.4645, 0.3278", "333.629, 800.413, 76.0469, 0.3098", "332.516, 800.553, 76.5962, 0.2826", "331.41, 800.595, 77.2794, 0.2746", "330.306, 800.595, 78.02, 0.2746", "329.27, 800.56, 79.1664, 0.2748", "328.262, 800.511, 80.4838, 0.2748", "327.351, 800.19, 81.9168, 0.2754", "326.48, 799.761, 83.3969, 0.276", "325.517, 799.482, 84.7333, 0.2778", "324.539, 799.229, 86.044, 0.2798", "323.712, 798.703, 87.481, 0.2888", "322.871, 798.307, 89.0011, 0.3048", "321.977, 798.307, 90.7469, 0.3396", "321.066, 798.31, 92.4378, 0.385", "320.111, 798.316, 93.9778, 0.46", "319.217, 798.49, 95.5287, 0.4816", "318.482, 799.082, 97.1082, 0.3678", "318.296, 799.705, 98.5589, 0.291", "319.07, 800.384, 99.7864, 0.2784", "319.79, 800.944, 101.433, 0.2746", "320.488, 801.452, 103.27, 0.2746", "321.09, 802.195, 104.775, 0.2746", "321.669, 802.99, 106.203, 0.2746", "322.456, 803.213, 108.04, 0.2744", "323.282, 803.327, 109.956, 0.2742", "324.046, 803.563, 111.955, 0.2736", "324.799, 803.818, 113.967, 0.2728", "325.203, 804.753, 115.059, 0.2706", "325.572, 805.756, 116.059, 0.2684", "325.826, 806.856, 116.482, 0.2614", "326.079, 807.96, 116.891, 0.2544", "326.287, 809.084, 117.0, 0.2416", "326.494, 810.208, 117.104, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "363.817, 771.733, 57.7584, 0.9168", "361.917, 771.786, 57.9146, 0.8026", "360.774, 771.764, 58.0278, 0.6726", "359.684, 771.472, 58.3178, 0.5762", "358.61, 771.106, 58.658, 0.4892", "357.479, 770.997, 58.7871, 0.4042", "356.337, 770.942, 58.8722, 0.3194", "355.21, 771.094, 58.7227, 0.3366", "354.085, 771.287, 58.5256, 0.3744", "353.113, 771.799, 57.8665, 0.4506", "352.169, 772.369, 57.1214, 0.5338", "351.185, 772.843, 56.2943, 0.5486", "350.194, 773.3, 55.4534, 0.5518", "349.099, 773.497, 54.889, 0.5258", "347.984, 773.652, 54.3696, 0.4952", "346.847, 773.732, 54.2027, 0.5576", "345.707, 773.803, 54.0848, 0.633", "344.6, 774.078, 53.9448, 0.603", "343.499, 774.383, 53.802, 0.5586", "342.421, 774.752, 53.5805, 0.602", "341.344, 775.13, 53.3487, 0.6566", "340.234, 775.39, 53.1958, 0.7838", "339.117, 775.635, 53.0522, 0.9194", "338.009, 775.903, 52.848, 0.8592", "336.9, 776.173, 52.6372, 0.776", "335.82, 776.542, 52.4538, 0.6578", "334.744, 776.92, 52.2738, 0.5356", "333.688, 777.359, 52.2281, 0.6268", "332.634, 777.806, 52.1965, 0.741", "331.554, 778.18, 52.3174, 0.592", "330.473, 778.547, 52.4538, 0.4168", "329.438, 779.03, 52.603, 0.3904", "328.408, 779.525, 52.7534, 0.3786", "327.368, 779.996, 52.92, 0.4378", "326.327, 780.466, 53.0883, 0.5038", "325.309, 780.974, 53.359, 0.4392", "324.292, 781.487, 53.6385, 0.3636", "323.347, 782.109, 54.0341, 0.4108", "322.405, 782.739, 54.4365, 0.4652", "321.343, 783.105, 54.9315, 0.559", "320.273, 783.456, 55.4313, 0.6548", "319.2, 783.791, 55.937, 0.7946", "318.126, 784.126, 56.443, 0.936", "317.12, 784.63, 56.9598, 0.8496", "316.117, 785.138, 57.4773, 0.7554", "315.172, 785.748, 57.9813, 0.7674", "314.227, 786.359, 58.4853, 0.7796", "313.276, 786.975, 58.879, 0.7232", "312.326, 787.59, 59.2726, 0.6668", "311.395, 788.223, 59.7772, 0.7196", "310.462, 788.851, 60.2812, 0.7718", "309.348, 789.048, 60.6976, 0.7644", "308.235, 789.236, 61.1262, 0.7586", "307.13, 789.249, 61.8565, 0.7872", "306.027, 789.264, 62.5954, 0.817", "304.949, 789.299, 63.53, 0.8756", "303.874, 789.351, 64.4605, 0.9302", "302.852, 789.739, 65.2912, 0.8978", "301.832, 790.128, 66.1259, 0.8688", "300.82, 790.515, 67.0256, 0.8912", "299.822, 790.926, 67.919, 0.9048", "298.999, 791.651, 68.721, 0.7854", "298.184, 792.384, 69.5092, 0.676", "297.442, 793.221, 70.103, 0.711", "296.719, 794.07, 70.7003, 0.7316", "296.194, 795.054, 71.3342, 0.5842", "295.633, 796.0, 71.9855, 0.4514", "294.712, 796.591, 72.8042, 0.4574", "293.789, 797.177, 73.6324, 0.4612", "292.851, 797.72, 74.5248, 0.4496", "291.898, 798.239, 75.395, 0.448", "290.86, 798.61, 76.1351, 0.5042", "289.862, 799.043, 76.9149, 0.5386", "289.051, 799.749, 77.8722, 0.4746", "288.301, 800.527, 78.7346, 0.4412", "287.642, 801.416, 79.4483, 0.455", "287.197, 802.405, 80.0666, 0.503", "287.0, 803.514, 80.5736, 0.5906", "286.565, 804.517, 81.0214, 0.6274", "285.859, 805.404, 81.4013, 0.6066", "285.125, 806.264, 81.8236, 0.5694", "284.366, 807.099, 82.2836, 0.5176", "283.586, 807.913, 82.7464, 0.4382", "282.788, 808.71, 83.2112, 0.3344", "281.981, 809.5, 83.657, 0.2826", "281.169, 810.286, 84.0857, 0.2772", "280.341, 811.062, 84.446, 0.2746", "279.5, 811.827, 84.7454, 0.2746", "278.627, 812.556, 85.0385, 0.2746", "277.728, 813.254, 85.3269, 0.2746", "276.775, 813.855, 85.7139, 0.2746", "275.774, 814.376, 86.1857, 0.2746", "274.728, 814.757, 86.7336, 0.2746", "273.642, 815.02, 87.3471, 0.2746", "272.54, 815.129, 87.9603, 0.2746", "271.423, 815.129, 88.5735, 0.2748", "270.307, 815.129, 89.178, 0.275", "269.189, 815.129, 89.7761, 0.2754", "268.071, 815.129, 90.3759, 0.2764", "266.955, 815.129, 90.977, 0.2776", "265.837, 815.129, 91.5762, 0.2806", "264.719, 815.129, 92.1738, 0.2848", "263.658, 814.873, 92.8088, 0.3116", "262.636, 814.435, 93.4704, 0.3548", "261.847, 813.703, 94.1968, 0.335", "261.158, 812.843, 94.9511, 0.2876", "260.816, 811.979, 96.4527, 0.2556", "260.587, 811.115, 98.1999, 0.2288" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "363.817, 771.733, 57.7584, 0.9168", "362.487, 771.321, 56.6818, 0.7422", "361.48, 770.904, 55.8667, 0.6866", "360.613, 770.185, 55.3734, 0.7274", "359.739, 769.477, 54.8713, 0.7684", "358.781, 768.903, 54.2654, 0.8104", "357.819, 768.339, 53.6486, 0.8524", "356.806, 767.905, 52.8998, 0.894", "355.79, 767.479, 52.1514, 0.924", "354.746, 767.121, 51.4058, 0.8286", "353.703, 766.764, 50.6593, 0.7366", "352.653, 766.433, 49.9016, 0.6826", "351.609, 766.163, 49.1053, 0.6456", "350.641, 766.526, 47.913, 0.787", "349.688, 766.907, 46.6883, 0.8972", "348.84, 767.407, 45.2575, 0.8074", "347.977, 767.797, 43.8318, 0.7396", "347.019, 767.541, 42.4374, 0.8024", "346.132, 767.182, 41.0124, 0.8438", "345.498, 766.464, 39.4808, 0.8094", "344.911, 766.148, 37.6866, 0.7644", "344.413, 766.583, 35.4021, 0.6998", "344.007, 766.473, 33.201, 0.6184", "343.698, 765.789, 31.0873, 0.5192", "343.259, 765.222, 28.9164, 0.4588", "342.851, 764.685, 26.7548, 0.4202", "343.534, 764.099, 25.025, 0.5564", "344.225, 763.507, 23.3341, 0.6548", "344.949, 762.886, 21.7858, 0.6142", "345.805, 762.536, 20.3449, 0.5918", "346.814, 762.492, 19.0267, 0.59", "347.61, 762.888, 17.5056, 0.6698", "348.294, 763.518, 15.8759, 0.7932", "348.42, 764.414, 14.2033, 0.7068", "348.51, 765.326, 12.5279, 0.607", "348.076, 764.947, 10.2185, 0.6438", "347.618, 764.513, 7.882, 0.6864" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "386.895, 778.138, 55.7869, 0.875", "387.34, 777.925, 56.0398, 0.7726", "388.458, 777.859, 56.572, 0.7652", "389.58, 777.809, 57.1026, 0.7662", "390.542, 778.414, 57.3524, 0.7478", "391.502, 779.029, 57.5985, 0.729" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "386.895, 778.138, 55.7869, 0.875", "386.976, 779.255, 53.2798, 0.5962", "387.052, 780.241, 51.8722, 0.6638", "387.377, 781.266, 50.9222, 0.8364", "387.705, 782.292, 49.9789, 1.0104", "388.44, 783.09, 49.0871, 1.0234", "389.176, 783.886, 48.1956, 1.0354", "389.974, 784.678, 47.6776, 1.0218", "390.771, 785.47, 47.1604, 1.0084" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "380.763, 778.541, 25.9748, 0.5074", "382.22, 778.413, 25.1089, 0.6156", "383.326, 778.58, 24.5284, 0.7962", "384.453, 778.68, 24.1118, 0.8122", "385.582, 778.767, 23.7254, 0.7976", "386.706, 778.871, 23.2807, 0.7904", "387.831, 778.976, 22.8297, 0.7836", "388.941, 779.2, 22.4356, 0.752", "390.049, 779.435, 22.0468, 0.7178", "391.184, 779.495, 21.7643, 0.7394", "392.322, 779.543, 21.4895, 0.765", "393.443, 779.741, 21.238, 0.682", "394.565, 779.947, 20.9876, 0.5938", "395.686, 780.16, 21.1501, 0.5256", "396.808, 780.373, 21.3178, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "380.763, 778.541, 25.9748, 0.5074", "380.822, 779.081, 24.7348, 0.5358", "380.814, 780.094, 23.6206, 0.6136", "380.755, 781.199, 22.9192, 0.709", "380.627, 782.31, 22.3431, 0.8326", "380.467, 783.423, 21.8242, 0.969", "380.084, 784.472, 21.3531, 0.9894", "379.601, 785.492, 20.9036, 0.9574", "378.988, 786.436, 20.4398, 0.7972", "378.337, 787.357, 19.9719, 0.6004", "377.811, 788.338, 19.3512, 0.554", "377.312, 789.333, 18.6962, 0.5416", "377.003, 790.403, 18.1194, 0.4914", "376.734, 791.492, 17.5598, 0.433", "376.567, 792.587, 16.8731, 0.509", "376.421, 793.684, 16.1593, 0.6136", "376.218, 794.753, 15.2995, 0.6304", "376.003, 795.816, 14.4091, 0.6288", "375.556, 796.81, 13.595, 0.554", "375.065, 797.79, 12.795, 0.4658", "374.379, 798.64, 12.0009, 0.4598", "373.657, 799.466, 11.2079, 0.4692", "372.748, 800.035, 10.2693, 0.5238", "371.817, 800.572, 9.3133, 0.5836", "371.505, 801.552, 8.2085, 0.5852", "371.242, 802.568, 7.0918, 0.582", "371.242, 803.671, 6.3508, 0.6342", "371.242, 804.774, 5.6101, 0.6864" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "390.044, 744.118, 65.935, 1.1514", "391.791, 744.002, 65.1879, 0.5302", "392.905, 743.832, 64.7906, 0.3284", "393.997, 743.511, 64.5291, 0.398", "395.106, 743.327, 64.2376, 0.443", "396.24, 743.363, 63.8994, 0.4494", "397.365, 743.491, 63.5718, 0.43", "398.476, 743.73, 63.2573, 0.3792", "399.592, 743.771, 63.0022, 0.3748", "400.716, 743.567, 62.8191, 0.427", "401.825, 743.616, 62.7043, 0.4992", "402.918, 743.955, 62.6674, 0.5946", "403.985, 744.359, 62.5864, 0.6476", "405.025, 744.832, 62.4571, 0.6552", "406.072, 745.29, 62.3658, 0.6276", "407.128, 745.73, 62.3154, 0.5618", "408.171, 746.197, 62.214, 0.5444", "409.2, 746.692, 62.0578, 0.579", "410.182, 747.268, 61.9024, 0.6452", "411.116, 747.925, 61.7484, 0.7444", "412.038, 748.598, 61.5692, 0.816", "412.948, 749.287, 61.3634, 0.8584", "413.941, 749.811, 61.0795, 0.883", "415.017, 750.17, 60.7166, 0.8896", "416.084, 750.543, 60.2997, 0.8104", "417.146, 750.926, 59.8394, 0.6614", "418.119, 751.496, 59.6481, 0.6734", "419.046, 752.167, 59.6061, 0.7748", "420.07, 752.651, 59.5216, 0.7234", "421.148, 753.033, 59.4146, 0.591", "422.167, 753.54, 59.2861, 0.5728", "423.155, 754.113, 59.1461, 0.6146", "424.187, 754.603, 59.0724, 0.6928", "425.24, 755.049, 59.0332, 0.7896", "426.31, 755.443, 58.8778, 0.8332", "427.39, 755.813, 58.6684, 0.852", "428.445, 756.233, 58.3579, 0.8522", "429.49, 756.677, 58.0012, 0.844", "430.587, 756.968, 57.7704, 0.8044", "431.707, 757.19, 57.5966, 0.7506", "432.832, 757.382, 57.472, 0.7186", "433.961, 757.561, 57.3678, 0.6958", "435.047, 757.885, 57.0844, 0.7068", "436.116, 758.268, 56.7291, 0.7316", "437.223, 758.439, 56.2766, 0.728", "438.346, 758.528, 55.7866, 0.7134", "439.464, 758.668, 55.3092, 0.7574", "440.581, 758.826, 54.8369, 0.8228", "441.674, 759.104, 54.4079, 0.7824", "442.761, 759.418, 53.9924, 0.7098", "443.889, 759.491, 53.6841, 0.7476", "445.027, 759.507, 53.4013, 0.812", "446.113, 759.789, 52.9547, 0.8084", "447.186, 760.132, 52.4703, 0.7888", "448.002, 760.881, 52.015, 0.8428", "448.766, 761.713, 51.5659, 0.9116", "449.632, 762.424, 51.0317, 0.8926", "450.516, 763.114, 50.4818, 0.8576", "451.462, 763.737, 50.0867, 0.8254", "452.412, 764.354, 49.7034, 0.7934", "453.365, 764.981, 49.4687, 0.7046", "454.329, 765.57, 49.2388, 0.6184", "455.469, 765.645, 49.0462, 0.581", "456.594, 765.759, 48.8435, 0.5448", "457.545, 766.379, 48.5058, 0.5252", "458.511, 766.97, 48.1426, 0.4998", "459.554, 767.386, 47.6216, 0.4404", "460.617, 767.722, 47.1246, 0.3928", "461.748, 767.768, 46.713, 0.3878", "462.877, 767.843, 46.3397, 0.3864", "464.004, 768.014, 46.1012, 0.397", "465.126, 768.211, 45.8724, 0.4282", "466.232, 768.495, 45.6772, 0.5306", "467.325, 768.812, 45.4672, 0.6118", "468.38, 769.242, 45.2057, 0.6194", "469.405, 769.726, 44.9302, 0.6064", "470.336, 770.378, 44.6102, 0.5278", "471.162, 771.12, 44.2756, 0.4524", "471.686, 772.126, 43.8992, 0.3862", "472.394, 772.78, 43.5604, 0.3516", "473.523, 772.63, 43.3084, 0.39", "474.658, 772.588, 43.1315, 0.425", "475.799, 772.671, 43.0441, 0.4566", "476.895, 772.933, 42.9719, 0.4448", "477.944, 773.389, 42.9162, 0.386", "478.876, 774.014, 42.8277, 0.34", "479.683, 774.824, 42.7042, 0.308", "480.256, 775.784, 42.5846, 0.3098", "480.656, 776.855, 42.4682, 0.3366", "481.253, 777.811, 42.5093, 0.3602", "481.986, 778.688, 42.6586, 0.3816", "482.99, 779.035, 42.8915, 0.3734", "484.125, 779.129, 43.1642, 0.3512", "485.257, 779.091, 43.4683, 0.3472", "486.39, 778.993, 43.7864, 0.3516", "487.526, 778.938, 44.0614, 0.4052", "488.665, 778.905, 44.3164, 0.481", "489.788, 779.043, 44.6362, 0.5028", "490.903, 779.253, 44.982, 0.5026", "491.992, 779.571, 45.3132, 0.5082", "493.074, 779.917, 45.6403, 0.5154", "494.179, 780.139, 46.0872, 0.5632", "495.29, 780.335, 46.5609, 0.62", "496.034, 781.096, 47.3264, 0.6152", "496.716, 781.951, 48.141, 0.6002", "497.439, 782.818, 48.6013, 0.5542", "498.166, 783.683, 49.0199, 0.5048", "498.569, 784.744, 49.2279, 0.4412", "498.945, 785.822, 49.4178, 0.3766", "499.754, 786.621, 49.4844, 0.303", "500.588, 787.404, 49.544, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "390.044, 744.118, 65.935, 1.1514", "390.334, 742.206, 66.386, 0.9128", "390.323, 741.067, 66.6425, 0.8266", "389.843, 740.049, 67.1107, 0.9078", "389.35, 739.035, 67.585, 0.994" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "391.502, 779.029, 57.5985, 0.729", "392.227, 779.544, 58.8333, 0.4902", "393.004, 780.337, 59.4656, 0.6282", "393.779, 781.146, 60.0407, 0.7974", "394.844, 781.52, 60.3509, 0.844", "395.927, 781.868, 60.6452, 0.8834" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "391.502, 779.029, 57.5985, 0.729", "391.941, 780.175, 57.1528, 0.4604", "392.336, 781.219, 56.548, 0.4314", "392.717, 782.268, 55.9437, 0.4112", "392.843, 783.379, 55.3501, 0.5616", "392.959, 784.491, 54.7616, 0.7052", "392.959, 785.616, 54.2466, 0.7492", "392.967, 786.74, 53.741, 0.786", "393.098, 787.866, 53.3733, 0.718", "393.2, 788.993, 53.0256, 0.6528", "392.99, 790.116, 52.9012, 0.617", "392.78, 791.24, 52.7873, 0.5866", "392.566, 792.364, 52.7472, 0.5948", "392.336, 793.483, 52.7058, 0.5998", "391.988, 794.572, 52.6523, 0.5824", "391.638, 795.661, 52.5888, 0.5684", "391.277, 796.746, 52.4563, 0.5784", "390.964, 797.837, 52.3001, 0.5954", "390.952, 798.974, 51.998, 0.6576", "390.924, 800.109, 51.6664, 0.7094", "390.832, 801.235, 51.2204, 0.721", "390.773, 802.362, 50.7867, 0.7328", "390.827, 803.493, 50.3927, 0.7444", "390.955, 804.6, 49.896, 0.7426", "391.314, 805.633, 49.0767, 0.6984", "391.441, 806.658, 48.2373, 0.6194", "391.034, 807.664, 47.3502, 0.4604", "390.496, 808.602, 46.578, 0.3444", "389.732, 809.421, 46.0071, 0.3034", "389.085, 810.319, 45.472, 0.2792", "388.635, 811.353, 44.998, 0.2832", "388.223, 812.394, 44.4483, 0.2914", "387.87, 813.448, 43.7814, 0.3064", "387.56, 814.512, 43.1007, 0.3348", "387.317, 815.593, 42.3984, 0.3842", "387.099, 816.683, 41.7469, 0.475", "386.92, 817.788, 41.1729, 0.629", "386.612, 818.851, 40.5891, 0.712", "386.118, 819.854, 39.9916, 0.6918", "385.69, 820.888, 39.4383, 0.6636", "385.358, 821.963, 38.9483, 0.6234", "385.062, 823.053, 38.5302, 0.6406", "384.813, 824.162, 38.2026, 0.7298", "384.556, 825.27, 37.9047, 0.7424", "384.29, 826.378, 37.6359, 0.679", "384.2, 827.504, 37.4548, 0.655", "384.241, 828.647, 37.3388, 0.6602", "383.842, 829.631, 37.0412, 0.7316", "383.118, 830.498, 36.6094, 0.852", "383.153, 831.535, 36.0634, 0.9684", "383.42, 832.623, 35.4833, 1.0836", "383.208, 833.675, 34.727, 1.1122", "382.875, 834.72, 33.9262, 1.1186", "382.524, 835.786, 33.395, 1.0938", "382.172, 836.855, 32.8952, 1.0654", "381.639, 837.854, 32.5175, 0.9296", "381.096, 838.849, 32.1474, 0.7872", "380.504, 839.818, 31.8044, 0.6954", "379.909, 840.785, 31.4622, 0.606", "379.466, 841.827, 31.0643, 0.6728", "379.027, 842.871, 30.6648, 0.7444", "378.312, 843.755, 30.3646, 0.7718", "377.595, 844.638, 30.0653, 0.7988", "377.053, 845.643, 29.8564, 0.8318", "376.511, 846.646, 29.647, 0.8644", "375.933, 847.627, 29.3899, 0.857", "375.354, 848.609, 29.129, 0.8496", "374.748, 849.565, 28.7333, 0.8362", "374.16, 850.533, 28.357, 0.8194", "373.709, 851.58, 28.1243, 0.7766", "373.237, 852.617, 27.9174, 0.7362", "372.695, 853.623, 27.7995, 0.7044", "372.069, 854.566, 27.8347, 0.6724", "371.281, 855.384, 28.168, 0.64", "370.384, 856.079, 28.2761, 0.6746", "369.428, 856.707, 28.2629, 0.745", "368.552, 857.435, 28.4105, 0.698", "367.709, 858.204, 28.6236, 0.6032", "367.346, 859.256, 28.6924, 0.5736", "367.089, 860.37, 28.73, 0.5582", "366.495, 861.339, 28.607, 0.6908", "365.868, 862.295, 28.4684, 0.838", "365.087, 863.129, 28.3234, 0.8962", "364.305, 863.96, 28.18, 0.9522", "363.506, 864.778, 28.3063, 0.8426", "362.704, 865.592, 28.4326, 0.7352", "361.689, 866.117, 28.5555, 0.7394", "360.668, 866.606, 28.6821, 0.743", "359.528, 866.534, 28.8649, 0.7392", "358.392, 866.493, 29.0318, 0.7344", "357.296, 866.82, 29.0038, 0.7184", "356.202, 867.152, 28.9766, 0.7036", "355.117, 867.517, 28.959, 0.6992", "354.044, 867.906, 28.9439, 0.6892", "353.076, 868.515, 28.9528, 0.6254", "352.114, 869.135, 28.9512, 0.5656", "351.193, 869.812, 28.8898, 0.529", "350.345, 870.552, 28.7546, 0.5314", "349.78, 871.531, 28.3357, 0.6828", "349.223, 872.504, 27.7916, 0.7616", "348.676, 873.467, 27.088, 0.748", "348.245, 874.481, 26.4011, 0.7634", "347.938, 875.548, 25.7317, 0.8098", "347.768, 876.628, 24.9751, 0.827", "347.722, 877.718, 24.1389, 0.8176", "347.429, 878.742, 23.2629, 0.775", "346.963, 879.719, 22.3588, 0.709", "346.713, 880.773, 21.5417, 0.7326", "346.567, 881.862, 20.7651, 0.7978", "346.418, 882.964, 20.1205, 0.7696", "346.268, 884.072, 19.5198, 0.7104", "346.15, 885.194, 19.0761, 0.6824", "346.042, 886.322, 18.6798, 0.6636", "346.581, 887.229, 18.0926, 0.613", "347.306, 888.075, 17.4501, 0.553", "347.348, 889.167, 17.0423, 0.5554", "347.281, 890.299, 16.6718, 0.5678", "347.777, 891.306, 16.3223, 0.4964", "348.318, 892.304, 15.9746, 0.4182", "348.809, 893.332, 15.7244, 0.3768", "349.299, 894.362, 15.4759, 0.3362", "349.991, 895.271, 15.4761, 0.422", "350.686, 896.18, 15.4792, 0.5094", "350.974, 897.286, 15.6043, 0.4518", "351.257, 898.392, 15.7303, 0.3932", "351.727, 899.436, 15.7475, 0.311", "352.199, 900.478, 15.764, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "390.771, 785.47, 47.1604, 1.0084", "391.112, 786.143, 47.1741, 0.7794", "391.271, 787.262, 46.9885, 0.7442", "391.363, 788.398, 46.765, 0.766", "391.094, 789.496, 46.452, 0.7294", "390.785, 790.59, 46.1297, 0.687", "390.419, 791.667, 45.8422, 0.6368", "390.048, 792.743, 45.5582, 0.586", "389.903, 793.874, 45.4826, 0.5046", "389.779, 795.011, 45.428, 0.42", "389.61, 796.143, 45.4664, 0.5068", "389.437, 797.273, 45.5115, 0.6064", "388.865, 798.257, 45.6316, 0.6324", "388.269, 799.233, 45.7562, 0.654", "387.596, 800.151, 46.0155, 0.6152", "386.92, 801.069, 46.279, 0.5742", "386.493, 802.12, 46.6094, 0.546", "386.073, 803.175, 46.9412, 0.5178", "385.647, 804.219, 47.4071, 0.5218", "385.223, 805.265, 47.8758, 0.5256", "385.057, 806.379, 48.3546, 0.4332", "384.886, 807.494, 48.8183, 0.3428", "384.568, 808.593, 48.7362, 0.328", "384.247, 809.69, 48.6506, 0.315", "383.812, 810.745, 48.4504, 0.364", "383.372, 811.796, 48.2488, 0.4118", "382.755, 812.756, 48.0155, 0.4302", "382.133, 813.71, 47.7812, 0.4468", "381.347, 814.534, 47.5149, 0.415", "380.562, 815.359, 47.2455, 0.3848", "379.817, 816.216, 46.9048, 0.3906", "379.067, 817.068, 46.5606, 0.396", "378.224, 817.823, 46.1605, 0.3934", "377.332, 818.468, 45.7747, 0.3888", "376.199, 818.555, 45.4605, 0.3746", "375.071, 818.658, 45.0923, 0.3608", "373.971, 818.837, 44.4623, 0.3484", "372.87, 818.985, 43.8208, 0.341", "371.761, 818.989, 43.1259, 0.356", "370.671, 819.057, 42.376, 0.3688", "369.662, 819.411, 41.382, 0.3722", "368.805, 819.94, 40.4026, 0.3878", "368.327, 820.906, 39.4593, 0.4336", "367.801, 821.858, 38.6288, 0.4592", "367.16, 822.776, 38.0646, 0.4376", "366.438, 823.625, 37.5931, 0.4524", "365.529, 824.312, 37.333, 0.5496", "364.555, 824.862, 37.1577, 0.6356", "363.44, 825.116, 37.1669, 0.6972", "362.324, 825.354, 37.2856, 0.7358", "361.208, 825.561, 37.6326, 0.7262", "360.259, 826.006, 38.0974, 0.6848", "359.652, 826.931, 38.7996, 0.579", "358.976, 827.809, 39.4741, 0.5484", "358.234, 828.638, 40.1215, 0.5914", "357.501, 829.481, 40.7226, 0.615", "356.777, 830.337, 41.2796, 0.62", "356.589, 831.333, 41.7382, 0.6524", "356.828, 832.441, 42.1193, 0.7066", "357.236, 833.492, 42.4402, 0.696", "357.752, 834.507, 42.7224, 0.6436", "357.918, 835.601, 43.0788, 0.6092", "357.912, 836.733, 43.4717, 0.5834", "358.393, 837.71, 43.7945, 0.5984", "359.068, 838.625, 44.0894, 0.6294", "359.879, 839.421, 44.2856, 0.7274", "360.736, 840.175, 44.4478, 0.8486", "361.26, 841.16, 44.6754, 0.8922", "361.669, 842.224, 44.9252, 0.9094", "361.652, 843.327, 45.4916, 0.8808", "361.557, 844.439, 46.116, 0.844", "361.431, 845.503, 47.0856, 0.7912", "361.302, 846.56, 48.1065, 0.7362", "360.892, 847.544, 49.1005, 0.6574", "360.452, 848.518, 50.0914, 0.5762", "360.524, 849.628, 50.7248, 0.6528", "360.606, 850.74, 51.3514, 0.7324", "360.892, 851.841, 51.6491, 0.6252", "361.18, 852.941, 51.9422, 0.5156", "361.401, 854.061, 52.1128, 0.478", "361.621, 855.182, 52.2822, 0.441", "361.719, 856.314, 52.6014, 0.4492", "361.816, 857.446, 52.922, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "390.771, 785.47, 47.1604, 1.0084", "392.02, 785.871, 46.2955, 0.941", "393.099, 786.23, 46.0718, 0.8", "394.182, 786.594, 45.9337, 0.6444", "395.114, 787.244, 46.153, 0.6806", "396.032, 787.919, 46.403, 0.733", "397.078, 788.378, 46.384, 0.7456", "398.13, 788.826, 46.3498, 0.7558", "399.206, 789.172, 45.9158, 0.733", "400.281, 789.514, 45.463, 0.7088", "401.367, 789.22, 44.9898, 0.632", "402.452, 788.916, 44.5164, 0.5544" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "389.35, 739.035, 67.585, 0.994", "390.434, 738.97, 68.9063, 0.508", "391.534, 739.037, 69.2112, 0.4316", "392.67, 739.161, 69.0939, 0.526", "393.809, 739.217, 69.1936, 0.5546", "394.951, 739.244, 69.3857, 0.5554", "396.093, 739.28, 69.4764, 0.494", "397.237, 739.32, 69.5248, 0.4062", "398.375, 739.422, 69.5702, 0.4018", "399.512, 739.549, 69.6142, 0.4306", "400.548, 739.986, 69.8099, 0.502", "401.546, 740.534, 70.0605, 0.5886", "402.551, 741.054, 70.4729, 0.5798", "403.556, 741.565, 70.9344, 0.542", "404.593, 742.014, 71.3653, 0.5388", "405.636, 742.451, 71.79, 0.5424", "406.725, 742.582, 72.506, 0.5132", "407.822, 742.657, 73.274, 0.478", "408.89, 742.523, 74.226, 0.451", "409.957, 742.386, 75.1803, 0.424", "410.093, 743.301, 76.7945, 0.4114", "410.179, 744.277, 78.216, 0.417", "410.221, 745.306, 79.4349, 0.441", "410.366, 746.298, 80.7727, 0.4224", "410.554, 747.274, 82.1579, 0.387", "410.473, 748.253, 83.5864, 0.4492", "410.396, 749.227, 85.0293, 0.5148", "410.622, 750.108, 86.7306, 0.5738", "410.594, 750.962, 88.3764, 0.618", "410.071, 751.762, 89.9139, 0.6332", "409.607, 752.612, 91.3847, 0.588", "409.224, 753.531, 92.7634, 0.4592", "408.994, 754.436, 94.3124, 0.3626", "408.957, 755.325, 96.0747, 0.3062", "409.134, 756.208, 97.7343, 0.289", "409.479, 757.088, 99.3143, 0.3022", "409.595, 758.105, 100.425, 0.3342", "409.6, 759.192, 101.304, 0.3754", "410.054, 760.109, 102.296, 0.4566", "410.693, 760.959, 103.334, 0.5544", "411.594, 761.321, 104.551, 0.5426", "412.595, 761.499, 105.837, 0.4894", "413.557, 761.238, 107.129, 0.4708", "414.512, 760.896, 108.424, 0.4584", "414.738, 760.675, 111.086, 0.614", "414.906, 760.283, 113.507, 0.7344", "414.956, 759.315, 114.997, 0.7234", "414.792, 758.433, 116.462, 0.7116", "414.044, 757.781, 117.86, 0.698", "413.311, 757.346, 119.558, 0.6252", "412.597, 757.258, 121.736, 0.4576" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "389.35, 739.035, 67.585, 0.994", "389.307, 737.83, 67.9762, 0.8206", "389.237, 736.696, 68.3018, 0.665", "389.127, 735.562, 68.5675, 0.52", "389.063, 734.429, 68.8621, 0.4502", "389.061, 733.293, 69.195, 0.4808", "388.89, 732.192, 69.6167, 0.5902", "388.512, 731.134, 70.1473, 0.7966", "388.37, 730.048, 70.6667, 0.9538", "388.5, 728.93, 71.1726, 1.0544", "388.753, 727.833, 71.5285, 1.066", "389.127, 726.756, 71.7366, 0.9906", "389.122, 725.676, 71.9446, 0.9626", "388.76, 724.595, 72.1526, 0.9794", "388.258, 723.587, 72.508, 0.9756", "387.657, 722.63, 72.9666, 0.957", "387.258, 721.596, 73.4896, 0.9542", "386.997, 720.507, 74.0572, 0.962", "387.171, 719.451, 74.5833, 0.9858", "387.617, 718.418, 75.0837, 1.0194", "387.926, 717.338, 75.5314, 0.9634", "388.157, 716.23, 75.9483, 0.8556", "388.076, 715.118, 76.3042, 0.7612", "387.855, 714.004, 76.6326, 0.6728", "387.956, 712.889, 76.911, 0.6716", "388.195, 711.775, 77.1674, 0.708", "388.502, 710.677, 77.2957, 0.7188", "388.84, 709.584, 77.3696, 0.7186", "388.863, 708.46, 77.2982, 0.7766", "388.754, 707.323, 77.1669, 0.8586", "388.576, 706.193, 77.0423, 0.806", "388.373, 705.069, 76.9202, 0.7034", "388.807, 704.075, 76.8849, 0.7246", "389.437, 703.12, 76.8765, 0.784", "390.256, 702.333, 76.7715, 0.8324", "391.12, 701.583, 76.6444, 0.8784", "391.862, 700.722, 76.4114, 0.8748", "392.577, 699.835, 76.1547, 0.8602", "393.212, 698.888, 75.9478, 0.7746", "393.828, 697.928, 75.752, 0.673", "394.4, 696.937, 75.686, 0.6054", "394.961, 695.941, 75.6479, 0.5452", "395.242, 694.84, 75.6823, 0.6154", "395.464, 693.718, 75.7319, 0.7128", "395.689, 692.597, 75.7492, 0.777", "395.917, 691.476, 75.761, 0.8352", "396.323, 690.423, 76.1541, 0.8336", "396.758, 689.381, 76.6052, 0.823", "397.23, 688.375, 77.2554, 0.875", "397.709, 687.373, 77.9346, 0.9364", "398.106, 686.352, 78.7368, 0.9326", "398.491, 685.328, 79.5558, 0.92", "398.622, 684.252, 80.416, 0.841", "398.72, 683.168, 81.2815, 0.7532", "398.218, 682.2, 82.0308, 0.7772", "397.674, 681.241, 82.7719, 0.8092", "397.185, 680.224, 83.2216, 0.8142", "396.7, 679.203, 83.6578, 0.8178", "396.29, 678.144, 83.9773, 0.6926", "395.88, 677.083, 84.294, 0.5644", "395.28, 676.118, 84.6098, 0.6104", "394.675, 675.156, 84.9257, 0.6602", "394.237, 674.116, 85.3866, 0.786", "393.801, 673.075, 85.8494, 0.9128", "393.463, 671.988, 86.1176, 0.8134", "393.126, 670.9, 86.3831, 0.7112" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "395.927, 781.868, 60.6452, 0.8834", "396.29, 782.321, 61.9704, 0.7082", "396.82, 782.975, 63.8588, 0.464", "397.522, 783.671, 65.2711, 0.3998", "398.172, 784.325, 66.74, 0.3454", "397.795, 784.155, 69.3504, 0.4898", "397.343, 783.698, 71.5154, 0.593", "396.818, 782.973, 73.2586, 0.6574", "396.49, 782.204, 75.1072, 0.6922", "396.345, 781.396, 77.0549, 0.699", "396.644, 780.622, 78.7822, 0.6776", "397.207, 779.869, 80.3796, 0.6396", "397.851, 779.159, 81.8972, 0.5874", "398.542, 778.474, 83.3694, 0.5268", "399.287, 777.881, 84.9078, 0.4872", "400.062, 777.339, 86.4816, 0.4586", "400.816, 776.872, 88.2409, 0.3964", "401.558, 776.444, 90.0973, 0.3164", "402.459, 776.183, 91.6485, 0.3022", "403.424, 775.99, 93.0754, 0.3146", "404.383, 775.793, 94.5216, 0.3666", "405.341, 775.595, 95.9756, 0.4342", "406.345, 775.362, 97.1765, 0.3978", "407.367, 775.116, 98.2862, 0.3242", "408.438, 774.859, 99.0038, 0.2952", "409.525, 774.598, 99.596, 0.2808", "410.622, 774.316, 99.9824, 0.28", "411.721, 774.029, 100.304, 0.2834", "412.703, 773.473, 100.517, 0.2934", "413.647, 772.833, 100.697, 0.3056", "414.689, 772.372, 100.836, 0.3472", "415.754, 771.96, 100.964, 0.3966", "416.842, 771.612, 101.102, 0.387", "417.934, 771.276, 101.242, 0.3674", "419.039, 771.001, 101.5, 0.3256", "420.147, 770.734, 101.776, 0.2808", "421.268, 770.676, 102.26, 0.2764", "422.392, 770.645, 102.773, 0.2774", "423.504, 770.713, 103.408, 0.2808", "424.614, 770.792, 104.058, 0.2844", "425.687, 770.962, 104.931, 0.2962", "426.755, 771.142, 105.828, 0.3086", "427.816, 771.114, 106.863, 0.3254", "428.875, 771.065, 107.911, 0.3426", "429.888, 770.713, 108.876, 0.314", "430.897, 770.343, 109.836, 0.2828", "431.917, 769.965, 110.691, 0.2788", "432.939, 769.585, 111.541, 0.2766", "433.974, 769.171, 112.174, 0.2786", "435.008, 768.754, 112.794, 0.2808", "436.054, 768.32, 113.201, 0.2884", "437.099, 767.885, 113.596, 0.2962", "438.08, 767.336, 114.112, 0.331", "439.058, 766.781, 114.634, 0.3674", "440.096, 766.38, 115.28, 0.3398", "441.137, 765.988, 115.933, 0.309", "442.15, 765.495, 116.406, 0.3052", "443.163, 765.0, 116.878, 0.3016", "444.136, 764.413, 117.214, 0.3424", "445.109, 763.827, 117.551, 0.3834", "446.119, 763.296, 117.752, 0.3586", "447.129, 762.767, 117.953, 0.3336", "448.179, 762.312, 118.035, 0.3236", "449.228, 761.858, 118.116, 0.3134", "450.352, 761.64, 118.131, 0.2712", "451.474, 761.42, 118.146, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "395.927, 781.868, 60.6452, 0.8834", "397.28, 782.228, 60.9126, 0.8258", "398.375, 782.549, 61.1092, 0.7584", "399.461, 782.902, 61.278, 0.6638", "400.564, 783.036, 61.5294, 0.6488", "401.688, 782.885, 61.8867, 0.7356", "402.821, 782.791, 62.1586, 0.775", "403.962, 782.758, 62.3372, 0.7624", "405.098, 782.819, 62.4226, 0.7408", "406.231, 782.981, 62.4086, 0.7096", "407.368, 783.101, 62.3851, 0.6772", "408.51, 783.177, 62.3515, 0.6438", "409.645, 783.307, 62.3655, 0.6462", "410.773, 783.495, 62.4285, 0.6852", "411.909, 783.601, 62.5005, 0.689", "413.052, 783.627, 62.5817, 0.6566", "414.195, 783.645, 62.5789, 0.7024", "415.338, 783.655, 62.4918, 0.8268", "416.48, 783.641, 62.5582, 0.8616", "417.621, 783.603, 62.7774, 0.8072", "418.677, 783.297, 63.2349, 0.7056", "419.673, 782.798, 63.8644, 0.5704", "420.402, 782.038, 64.6447, 0.575", "420.942, 781.097, 65.5298, 0.6772", "421.074, 780.057, 66.3107, 0.7148", "420.959, 778.958, 67.0281, 0.7132", "421.381, 777.982, 67.366, 0.7434", "422.064, 777.067, 67.5189, 0.789", "422.889, 776.283, 67.5363, 0.7736", "423.764, 775.546, 67.5044, 0.736", "424.584, 774.752, 67.3562, 0.629", "425.384, 773.939, 67.1661, 0.4968", "425.968, 773.076, 66.1637, 0.4394", "426.476, 772.198, 64.8746, 0.4084", "426.733, 771.133, 64.2275, 0.4226", "426.929, 770.024, 63.7314, 0.4476", "427.478, 769.047, 63.9335, 0.5162", "428.1, 768.096, 64.2776, 0.5936", "428.799, 767.202, 64.615, 0.707", "429.507, 766.314, 64.9516, 0.8248", "430.412, 765.62, 64.934, 0.7796", "431.335, 764.945, 64.883, 0.719", "432.258, 764.289, 64.5112, 0.7828", "433.184, 763.635, 64.1102, 0.858", "433.884, 762.751, 63.6784, 0.8604", "434.572, 761.855, 63.2453, 0.8592", "435.552, 761.292, 62.8463, 0.738", "436.541, 760.741, 62.4484, 0.613", "437.508, 760.141, 62.1508, 0.5896", "438.474, 759.541, 61.8562, 0.5692", "439.31, 758.768, 61.5972, 0.6968", "440.144, 757.992, 61.3393, 0.8282", "440.642, 756.971, 61.0459, 0.8822", "441.107, 755.936, 60.7572, 0.9182", "441.289, 754.811, 60.5237, 0.793", "441.393, 753.7, 60.2798, 0.6798", "440.828, 752.715, 59.9497, 0.6708", "440.316, 751.712, 59.5868, 0.6622", "440.122, 750.608, 59.0349, 0.6548", "440.082, 749.544, 58.3596, 0.6564", "440.593, 748.629, 57.2435, 0.6902", "441.257, 747.833, 56.2153, 0.7022", "442.148, 747.215, 55.3185, 0.6812", "442.992, 746.517, 54.5765, 0.6452", "443.775, 745.712, 54.047, 0.5882", "444.475, 744.834, 53.6175, 0.5242", "445.068, 743.863, 53.3184, 0.4512", "445.231, 742.83, 53.1306, 0.3988", "444.92, 741.73, 53.0664, 0.3692", "444.784, 740.608, 52.929, 0.3814", "444.808, 739.468, 52.7246, 0.4316", "444.879, 738.336, 52.3855, 0.4636", "444.992, 737.213, 51.9266, 0.4798", "445.032, 736.1, 51.3302, 0.4846", "445.009, 734.995, 50.6114, 0.4792", "445.121, 733.955, 49.5678, 0.5188", "445.345, 732.97, 48.2549, 0.5956", "445.747, 732.014, 47.101, 0.6168", "446.208, 731.069, 46.0012, 0.6192", "446.327, 730.012, 45.1052, 0.5642", "446.337, 728.919, 44.2742, 0.4912", "446.772, 727.908, 43.6948, 0.491", "447.295, 726.912, 43.1682, 0.5058", "447.904, 725.959, 42.7633, 0.6218", "448.529, 725.015, 42.3828, 0.758", "449.154, 724.067, 42.0283, 0.765", "449.779, 723.119, 41.6791, 0.7464", "450.493, 722.235, 41.4053, 0.5986", "451.227, 721.364, 41.1463, 0.4258", "452.214, 720.84, 40.7442, 0.3916", "453.247, 720.383, 40.3155, 0.3834", "454.248, 720.013, 39.3252, 0.309", "455.247, 719.65, 38.2841, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "402.452, 788.916, 44.5164, 0.5544", "403.203, 788.78, 44.767, 0.3954", "404.275, 788.433, 45.0887, 0.4246", "405.307, 787.953, 45.3625, 0.6998", "406.366, 787.555, 45.7136, 0.8346", "407.448, 787.224, 46.1294, 0.8514", "408.493, 786.797, 46.5506, 0.8384", "409.51, 786.304, 46.9756, 0.8048", "410.358, 785.604, 47.5065, 0.7792", "411.092, 784.761, 48.1096, 0.7592", "411.314, 783.8, 49.1187, 0.7724", "411.254, 782.774, 50.3496, 0.8034", "411.336, 781.707, 51.2884, 0.8018", "411.475, 780.622, 52.11, 0.787", "411.333, 779.542, 52.8836, 0.7308", "411.109, 778.463, 53.643, 0.6624", "411.334, 777.451, 54.6941, 0.6062", "411.657, 776.452, 55.8085, 0.5528", "412.031, 775.417, 56.558, 0.6914", "412.412, 774.379, 57.2768, 0.8454", "412.929, 773.41, 58.0639, 0.8804", "413.461, 772.456, 58.8666, 0.9136", "414.236, 771.737, 59.9332, 0.9124", "415.015, 771.029, 61.0308, 0.914", "415.801, 770.349, 62.2026, 0.9216", "416.573, 769.625, 63.2377, 0.887", "417.319, 768.822, 64.0366, 0.7794", "418.157, 768.112, 64.6828, 0.751", "419.139, 767.549, 65.095, 0.8436", "420.173, 767.107, 65.4377, 0.8668", "421.275, 766.819, 65.6919, 0.8018", "422.38, 766.537, 65.9378, 0.7544", "423.486, 766.264, 66.1732, 0.7286", "424.538, 765.871, 66.5465, 0.7", "425.522, 765.333, 67.0883, 0.6682", "426.542, 764.89, 67.688, 0.665", "427.603, 764.562, 68.3586, 0.6966", "428.693, 764.368, 68.9657, 0.75", "429.815, 764.321, 69.5036, 0.8274", "430.867, 764.019, 69.9661, 0.8394", "431.846, 763.448, 70.3486, 0.7824", "432.83, 762.892, 70.7672, 0.7406", "433.821, 762.35, 71.2174, 0.7122", "434.855, 761.906, 71.6668, 0.6992", "435.926, 761.549, 72.1157, 0.6994", "437.013, 761.234, 72.4996, 0.6526", "438.114, 760.953, 72.8274, 0.5652", "439.211, 760.647, 73.0461, 0.5574", "440.306, 760.317, 73.1707, 0.6184", "441.131, 759.646, 73.4527, 0.623", "441.727, 758.685, 73.8693, 0.5792", "442.129, 757.649, 74.4691, 0.5872", "442.468, 756.591, 75.1279, 0.612", "442.677, 755.5, 75.7806, 0.5294", "442.841, 754.401, 76.4313, 0.4126", "442.903, 753.291, 77.0781, 0.43", "442.931, 752.178, 77.7232, 0.4902", "443.021, 751.055, 78.2043, 0.4926", "443.131, 749.93, 78.6332, 0.4766", "443.077, 748.799, 78.9608, 0.487", "442.972, 747.667, 79.2574, 0.5054", "442.95, 746.529, 79.5088, 0.5526", "442.954, 745.388, 79.7471, 0.6084", "443.124, 744.268, 80.0948, 0.539", "443.311, 743.149, 80.4558, 0.455", "443.721, 742.083, 80.4572, 0.4132", "444.15, 741.023, 80.4264, 0.3754", "444.982, 740.242, 80.3177, 0.381", "445.821, 739.468, 80.2071, 0.3876", "446.914, 739.175, 79.8095, 0.505", "448.01, 738.89, 79.4077, 0.624", "449.118, 739.109, 78.9684, 0.5578", "450.227, 739.327, 78.5288, 0.4912", "451.366, 739.332, 78.2734, 0.428", "452.505, 739.335, 78.0184, 0.3646", "453.647, 739.335, 77.8562, 0.4112", "454.789, 739.335, 77.6941, 0.4576" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "402.452, 788.916, 44.5164, 0.5544", "403.078, 789.259, 43.3294, 0.646", "403.986, 789.529, 41.9776, 0.7392", "405.066, 789.404, 41.1029, 0.7714", "406.162, 789.352, 40.3942, 0.8006", "407.292, 789.449, 40.0173, 0.824", "408.424, 789.478, 39.7572, 0.848", "409.562, 789.369, 39.7214, 0.8728", "410.703, 789.281, 39.6654, 0.87", "411.845, 789.233, 39.5718, 0.817", "412.983, 789.254, 39.4167, 0.7894", "414.112, 789.401, 39.1488, 0.8086", "415.245, 789.508, 38.8833, 0.8262", "416.383, 789.541, 38.6218, 0.8402", "417.503, 789.427, 38.3855, 0.8468", "418.596, 789.103, 38.1856, 0.842", "419.688, 788.764, 38.0478, 0.8078", "420.775, 788.408, 37.9991, 0.7318", "421.885, 788.248, 38.0131, 0.7374", "423.026, 788.329, 38.1044, 0.8442", "424.168, 788.349, 38.1772, 0.9008", "425.31, 788.294, 38.2273, 0.8958", "426.447, 788.182, 38.2819, 0.8386", "427.576, 788.0, 38.3415, 0.7172", "428.697, 787.784, 38.4695, 0.7234", "429.808, 787.526, 38.68, 0.8844", "430.842, 787.107, 39.0426, 0.921", "431.782, 786.495, 39.587, 0.8094", "432.821, 786.152, 40.0151, 0.7232", "433.955, 786.071, 40.3301, 0.662", "435.093, 786.031, 40.565, 0.6246", "436.235, 786.031, 40.7238, 0.6096", "437.378, 786.031, 40.7543, 0.6362", "438.52, 786.031, 40.6624, 0.7024", "439.662, 786.031, 40.4919, 0.736", "440.802, 786.031, 40.2464, 0.7386", "441.935, 786.046, 39.8885, 0.7382", "443.063, 786.076, 39.4243, 0.735", "444.156, 786.284, 38.9197, 0.7004", "445.214, 786.656, 38.3776, 0.6364", "446.272, 787.043, 37.9028, 0.5552", "447.33, 787.443, 37.4858, 0.4588", "448.38, 787.846, 36.9872, 0.429", "449.424, 788.255, 36.419, 0.4554", "450.445, 788.647, 35.6266, 0.475", "451.449, 789.027, 34.6564, 0.4894", "452.266, 789.665, 33.6633, 0.5014", "452.952, 790.482, 32.6544, 0.5116", "453.882, 791.016, 31.9614, 0.5144", "454.933, 791.414, 31.4227, 0.5134", "456.048, 791.51, 31.0685, 0.4838", "457.186, 791.498, 30.7804, 0.444", "458.315, 791.353, 30.6197, 0.381", "459.442, 791.158, 30.5046, 0.3096", "460.372, 790.545, 30.4424, 0.3104", "461.242, 789.803, 30.3962, 0.3334", "461.868, 788.857, 30.4217, 0.3496", "462.438, 787.865, 30.4632, 0.3642", "462.86, 786.804, 30.5161, 0.3938", "463.251, 785.73, 30.5712, 0.4266", "463.47, 784.61, 30.6046, 0.4552", "463.653, 783.481, 30.6337, 0.483", "464.07, 782.422, 30.6594, 0.457", "464.534, 781.375, 30.6849, 0.421", "465.241, 780.485, 30.7936, 0.3916", "465.987, 779.618, 30.9156, 0.3632", "466.439, 778.576, 30.994, 0.3252", "466.853, 777.509, 31.0666, 0.2862", "467.415, 776.521, 31.3138, 0.2908", "467.997, 775.542, 31.5823, 0.3008", "468.731, 774.672, 31.8343, 0.3308", "469.48, 773.813, 32.0846, 0.3628", "470.258, 772.982, 32.352, 0.417", "471.04, 772.153, 32.6208, 0.4732", "471.821, 771.326, 32.9034, 0.508", "472.602, 770.499, 33.1867, 0.5416", "473.509, 769.808, 33.4121, 0.5204", "474.422, 769.127, 33.6336, 0.4958", "475.251, 768.339, 33.7616, 0.444", "476.072, 767.545, 33.8836, 0.3906", "476.501, 766.491, 34.013, 0.3742", "476.908, 765.424, 34.1424, 0.3598", "477.721, 764.623, 34.2115, 0.4266", "478.548, 763.834, 34.2784, 0.4964", "479.508, 763.214, 34.1765, 0.435", "480.471, 762.598, 34.0704, 0.3704", "481.371, 761.954, 33.3696, 0.2996", "482.269, 761.309, 32.6539, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "393.126, 670.9, 86.3831, 0.7112", "391.968, 670.635, 85.8018, 0.3782", "390.859, 670.382, 85.5254, 0.3174", "389.747, 670.128, 85.3166, 0.3192", "388.63, 669.889, 85.1234, 0.3098", "387.514, 669.653, 84.9341, 0.2976", "386.381, 669.699, 84.7932, 0.314", "385.244, 669.813, 84.6642, 0.3374", "384.114, 669.988, 84.6026, 0.3756", "382.986, 670.176, 84.5552, 0.4168", "381.849, 670.296, 84.5404, 0.3708", "380.71, 670.402, 84.5326, 0.3056", "379.567, 670.421, 84.5312, 0.2862", "378.423, 670.421, 84.5312, 0.2762", "377.279, 670.421, 84.5309, 0.2746", "376.135, 670.421, 84.5306, 0.2748", "374.991, 670.421, 84.5303, 0.275", "373.847, 670.421, 84.53, 0.2752", "372.703, 670.421, 84.5295, 0.276", "371.559, 670.421, 84.5289, 0.277", "370.415, 670.422, 84.5278, 0.28", "369.271, 670.424, 84.5267, 0.2832", "368.131, 670.519, 84.5244, 0.2932", "366.993, 670.635, 84.5219, 0.3044", "365.858, 670.773, 84.5177, 0.3372", "364.722, 670.915, 84.5132, 0.3746", "363.604, 671.154, 84.5046, 0.4626", "362.491, 671.415, 84.4953, 0.5614", "361.454, 671.888, 84.4785, 0.4894", "360.431, 672.4, 84.4603, 0.3876", "359.393, 672.883, 84.4278, 0.3324", "358.355, 673.361, 84.3926, 0.2854", "357.26, 673.687, 84.3279, 0.2828", "356.157, 673.988, 84.2579, 0.2876", "355.036, 674.205, 84.1302, 0.3024", "353.911, 674.411, 83.9933, 0.3188", "352.934, 674.978, 83.7312, 0.3506", "351.974, 675.591, 83.4534, 0.3844", "351.163, 676.361, 82.9072, 0.3802", "350.367, 677.15, 82.3323, 0.372", "349.457, 677.798, 81.7572, 0.3632", "348.534, 678.433, 81.1821, 0.3544", "347.528, 678.94, 80.7178, 0.3814", "346.513, 679.433, 80.2645, 0.4122", "345.409, 679.711, 80.0083, 0.3602", "344.301, 679.974, 79.7656, 0.3026", "343.191, 680.238, 79.5768, 0.3074", "342.08, 680.504, 79.3918, 0.3162", "340.983, 680.804, 79.0919, 0.3388", "339.887, 681.107, 78.7844, 0.3624", "338.796, 681.402, 78.3563, 0.3652", "337.705, 681.698, 77.9204, 0.3666", "336.604, 681.934, 77.4239, 0.3382", "335.503, 682.165, 76.9236, 0.308", "334.4, 682.398, 76.4403, 0.2912", "333.297, 682.63, 75.9584, 0.2756", "332.212, 682.961, 75.6157, 0.2746", "331.127, 683.297, 75.2819, 0.2746", "330.041, 683.643, 75.049, 0.2746", "328.954, 683.988, 74.8224, 0.2748", "327.821, 684.08, 74.5562, 0.2752", "326.684, 684.156, 74.2874, 0.2756", "325.55, 684.159, 73.9172, 0.2768", "324.417, 684.159, 73.5412, 0.278", "323.288, 684.159, 73.089, 0.2818", "322.16, 684.159, 72.6323, 0.2858", "321.035, 684.159, 72.1109, 0.2982", "319.912, 684.159, 71.5856, 0.311", "318.792, 684.159, 71.0153, 0.3254", "317.672, 684.159, 70.4424, 0.3398", "316.563, 684.159, 69.7547, 0.3108", "315.455, 684.159, 69.0603, 0.2792", "314.349, 684.159, 68.334, 0.2766", "313.246, 684.159, 67.6057, 0.2758", "312.121, 684.159, 67.0967, 0.2768", "310.995, 684.159, 66.6002, 0.278", "309.856, 684.159, 66.3516, 0.2822", "308.715, 684.159, 66.117, 0.2866", "307.572, 684.159, 65.9834, 0.301", "306.43, 684.159, 65.8552, 0.316", "305.29, 684.159, 65.6314, 0.3726", "304.15, 684.159, 65.403, 0.4314", "303.012, 684.159, 65.0958, 0.4462", "301.875, 684.159, 64.7844, 0.4586", "300.761, 683.931, 64.5145, 0.3844", "299.648, 683.691, 64.2466, 0.3056", "298.585, 683.271, 64.1323, 0.2946", "297.523, 682.847, 64.0223, 0.2852", "296.41, 682.585, 63.9951, 0.2964", "295.296, 682.327, 63.9699, 0.308", "294.152, 682.327, 63.9699, 0.3108", "293.008, 682.327, 63.9699, 0.3134", "291.864, 682.327, 63.9699, 0.2712", "290.72, 682.327, 63.9699, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "393.126, 670.9, 86.3831, 0.7112", "392.632, 669.493, 86.8274, 0.571", "392.622, 668.39, 87.0587, 0.5712", "392.831, 667.268, 87.2256, 0.636", "392.746, 666.152, 87.435, 0.6466", "392.49, 665.04, 87.6686, 0.6262", "392.416, 663.909, 87.8444, 0.6188", "392.435, 662.767, 87.99, 0.618", "392.629, 661.646, 88.0606, 0.6144", "392.905, 660.536, 88.0947, 0.6092", "392.911, 659.407, 88.1275, 0.5854", "392.789, 658.27, 88.1597, 0.553", "392.607, 657.143, 88.2899, 0.5714", "392.401, 656.02, 88.4587, 0.61", "392.63, 654.931, 88.5923, 0.6632", "393.013, 653.854, 88.7135, 0.7214", "393.372, 652.769, 88.8412, 0.717", "393.723, 651.682, 88.9708, 0.6934", "393.757, 650.549, 89.0683, 0.6338", "393.713, 649.408, 89.1582, 0.5656", "393.569, 648.274, 89.2514, 0.599", "393.401, 647.144, 89.3458, 0.6566", "393.39, 646.004, 89.5177, 0.716", "393.412, 644.862, 89.7067, 0.7756", "393.669, 643.756, 89.913, 0.8508", "393.97, 642.656, 90.1225, 0.9288", "394.143, 641.528, 90.295, 0.831", "394.294, 640.396, 90.4602, 0.7004", "394.17, 639.268, 90.6707, 0.7692", "393.994, 638.141, 90.8897, 0.8748", "393.669, 637.052, 91.1448, 0.8142", "393.316, 635.969, 91.4057, 0.7238", "393.163, 634.844, 91.7053, 0.6746", "393.044, 633.714, 92.0116, 0.6326", "393.312, 632.618, 92.3185, 0.5824", "393.631, 631.527, 92.626, 0.531", "393.875, 630.411, 92.7878, 0.5962", "394.109, 629.293, 92.9342, 0.6734", "394.538, 628.236, 93.077, 0.7804", "394.983, 627.184, 93.2196, 0.89", "395.31, 626.091, 93.4007, 0.8852", "395.627, 624.994, 93.585, 0.8706", "395.795, 623.867, 93.8084, 0.9328", "395.953, 622.737, 94.0346, 1.0008", "396.271, 621.643, 94.2435, 0.9818", "396.6, 620.55, 94.4516, 0.9574", "397.248, 619.613, 94.6683, 0.932", "397.904, 618.68, 94.8856, 0.9066", "398.405, 617.653, 94.9354, 0.91", "398.905, 616.623, 94.9822, 0.914", "399.326, 615.559, 94.995, 0.9328", "399.746, 614.495, 95.0074, 0.9518", "400.243, 613.465, 95.0872, 0.9004", "400.741, 612.436, 95.1675, 0.848", "401.284, 611.444, 95.5844, 0.6522", "401.828, 610.452, 96.0056, 0.4546" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "401.828, 610.452, 96.0056, 0.4546", "402.087, 610.48, 96.9032, 0.4558", "402.889, 610.564, 98.8554, 0.4154", "403.776, 610.658, 100.607, 0.3486", "404.746, 610.79, 102.027, 0.316", "405.759, 610.941, 103.276, 0.301", "406.686, 611.303, 104.598, 0.3168", "407.571, 611.771, 105.956, 0.3484", "408.242, 612.436, 107.455, 0.3394", "408.816, 613.191, 109.019, 0.3116", "409.003, 614.123, 110.412, 0.2934", "409.021, 615.132, 111.73, 0.2794", "409.026, 616.162, 112.95, 0.2756", "409.026, 617.199, 114.128, 0.2762", "409.095, 618.219, 115.383, 0.2782", "409.196, 619.229, 116.671, 0.2806", "409.759, 619.9, 118.25, 0.2878", "410.491, 620.448, 119.934, 0.2966", "411.073, 620.93, 122.014, 0.3252", "411.615, 621.394, 124.204, 0.3594", "411.742, 621.845, 126.708, 0.3682", "411.771, 622.291, 129.284, 0.371", "411.777, 622.714, 131.886, 0.3322", "411.777, 623.131, 134.493, 0.2836", "411.913, 623.647, 136.961, 0.2746", "412.08, 624.187, 139.396, 0.2744", "412.326, 624.807, 141.666, 0.2744", "412.588, 625.444, 143.901, 0.2742", "412.781, 626.211, 145.916, 0.2736", "412.961, 627.003, 147.885, 0.2728", "413.236, 628.008, 148.952, 0.271", "413.527, 629.051, 149.856, 0.269", "413.876, 630.122, 150.295, 0.2622", "414.234, 631.199, 150.661, 0.2548", "415.274, 631.6, 150.734, 0.242", "416.362, 631.954, 150.786, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "401.828, 610.452, 96.0056, 0.4546", "401.514, 609.045, 96.0666, 0.5192", "401.521, 607.909, 96.1005, 0.589", "401.605, 606.768, 96.1299, 0.664", "401.702, 605.63, 96.2895, 0.7056", "401.801, 604.494, 96.4855, 0.7378", "401.61, 603.38, 96.7033, 0.6736", "401.34, 602.273, 96.927, 0.5836", "401.439, 601.149, 97.0964, 0.5352", "401.631, 600.023, 97.2524, 0.4972", "402.074, 598.977, 97.3888, 0.5834", "402.561, 597.943, 97.5218, 0.6914", "402.868, 596.851, 97.8326, 0.707", "403.141, 595.749, 98.1742, 0.7068", "403.152, 594.622, 98.5779, 0.637", "403.131, 593.49, 98.9895, 0.5584", "403.752, 592.561, 99.3376, 0.598", "404.428, 591.649, 99.68, 0.6478", "404.759, 590.565, 99.9869, 0.7334", "405.07, 589.471, 100.292, 0.8206", "405.602, 588.467, 100.589, 0.7602", "406.143, 587.466, 100.887, 0.6942", "406.278, 586.336, 101.099, 0.6132", "406.4, 585.202, 101.309, 0.5318", "406.041, 584.126, 101.664, 0.5416", "405.677, 583.051, 102.02, 0.5522", "405.62, 581.92, 102.398, 0.6312", "405.564, 580.787, 102.777, 0.7106" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "405.564, 580.787, 102.777, 0.7106", "406.062, 579.231, 103.203, 0.5722", "406.245, 578.102, 103.135, 0.4452", "406.369, 576.967, 103.049, 0.371", "406.422, 575.826, 102.94, 0.362", "406.836, 574.882, 102.557, 0.3434", "407.691, 574.179, 101.841, 0.3126", "408.322, 573.317, 100.977, 0.3224", "408.834, 572.37, 100.035, 0.3538", "409.038, 571.375, 98.8753, 0.3454", "409.082, 570.357, 97.6041, 0.316", "409.097, 569.3, 96.5423, 0.3036", "409.097, 568.226, 95.5811, 0.2994", "409.428, 567.232, 94.6156, 0.3234", "409.919, 566.278, 93.6477, 0.3612", "410.044, 565.261, 92.5562, 0.3428", "410.014, 564.216, 91.4119, 0.3002", "409.763, 563.193, 90.3266, 0.2872", "409.506, 562.17, 89.2424, 0.2746", "409.677, 561.111, 88.2711, 0.2748", "409.846, 560.051, 87.3076, 0.2748", "409.875, 558.945, 86.5922, 0.2752", "409.896, 557.84, 85.878, 0.2756", "409.752, 556.74, 85.185, 0.277", "409.607, 555.643, 84.4827, 0.2786", "409.433, 554.576, 83.5724, 0.2842", "409.263, 553.508, 82.6529, 0.2906", "409.177, 552.458, 81.5646, 0.3116", "409.11, 551.406, 80.4947, 0.3358", "409.305, 550.329, 79.6746, 0.4058", "409.534, 549.268, 78.8502, 0.4742", "410.156, 548.376, 77.9778, 0.5248", "410.753, 547.485, 77.0392, 0.5692", "411.162, 546.594, 75.5924, 0.5674", "411.064, 545.794, 74.2344, 0.5086", "410.297, 545.114, 72.9938, 0.374", "409.729, 544.271, 71.8816, 0.31", "409.363, 543.264, 70.9005, 0.3174", "409.315, 542.218, 70.0778, 0.3532", "409.567, 541.136, 69.405, 0.4154", "410.312, 540.529, 68.763, 0.531", "411.389, 540.238, 68.1422, 0.6826", "412.136, 539.62, 67.0256, 0.6468", "412.677, 538.798, 65.6004, 0.4944", "413.207, 538.03, 63.9878, 0.4554", "413.73, 537.29, 62.2784, 0.4746", "414.395, 536.648, 60.6536, 0.4776", "415.129, 536.055, 59.0708, 0.4722", "415.858, 535.414, 57.5963, 0.4646", "416.583, 534.747, 56.175, 0.456", "417.252, 533.994, 54.8629, 0.4088", "417.895, 533.199, 53.6029, 0.3434", "418.452, 532.34, 52.3673, 0.3362", "418.968, 531.45, 51.1431, 0.3568", "419.429, 530.516, 49.9904, 0.3472", "419.865, 529.563, 48.8692, 0.324", "420.664, 528.872, 47.9766, 0.3314", "421.567, 528.257, 47.1486, 0.3476", "422.369, 527.501, 46.4377, 0.3254", "423.143, 526.705, 45.7598, 0.2924", "423.829, 525.821, 45.1934, 0.2812", "424.493, 524.916, 44.6555, 0.2756", "425.105, 523.975, 44.121, 0.2746", "425.704, 523.025, 43.5868, 0.2746", "426.195, 522.023, 42.9814, 0.2748", "426.658, 521.01, 42.3584, 0.275", "427.199, 520.03, 41.7791, 0.2756", "427.759, 519.06, 41.2107, 0.2762", "428.325, 518.086, 40.7378, 0.2778", "428.894, 517.11, 40.2881, 0.28", "429.261, 516.055, 39.7393, 0.2864", "429.581, 514.982, 39.1678, 0.2938", "429.832, 513.904, 38.465, 0.3202", "430.066, 512.826, 37.7325, 0.3508", "430.169, 511.737, 36.9127, 0.34", "430.242, 510.648, 36.0738, 0.3202", "429.98, 509.597, 35.2654, 0.309", "429.646, 508.553, 34.4635, 0.2996", "429.175, 507.553, 33.7599, 0.322", "428.678, 506.561, 33.0739, 0.35", "428.063, 505.634, 32.4422, 0.4238", "427.426, 504.718, 31.8206, 0.5056", "426.703, 503.871, 31.1948, 0.4608", "425.964, 503.035, 30.5684, 0.394", "425.132, 502.303, 29.8936, 0.3886", "424.284, 501.587, 29.211, 0.393", "423.527, 500.791, 28.4466, 0.3884", "422.784, 499.981, 27.6692, 0.3826", "422.345, 498.981, 26.9032, 0.3454", "421.956, 497.952, 26.1389, 0.3036", "421.89, 496.832, 25.6232, 0.3304", "421.839, 495.708, 25.1199, 0.3608", "421.594, 494.6, 24.774, 0.3372", "421.341, 493.493, 24.4353, 0.3112", "420.815, 492.497, 23.9753, 0.2988", "420.28, 491.502, 23.5119, 0.287", "420.208, 490.396, 22.8519, 0.3016", "420.148, 489.286, 22.1868, 0.317", "420.38, 488.204, 21.4773, 0.3756", "420.616, 487.123, 20.7672, 0.4346", "421.104, 486.121, 20.1414, 0.4516", "421.594, 485.12, 19.5162, 0.4682", "422.172, 484.145, 19.1267, 0.4036", "422.748, 483.169, 18.7376, 0.3388", "423.328, 482.187, 18.5633, 0.3812", "423.909, 481.204, 18.3892, 0.4236", "424.299, 480.129, 18.3331, 0.4406", "424.689, 479.053, 18.277, 0.4576" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "405.564, 580.787, 102.777, 0.7106", "405.745, 579.548, 103.053, 0.6646", "405.951, 578.426, 103.222, 0.6874", "406.162, 577.304, 103.377, 0.7216", "406.111, 576.178, 103.774, 0.6946", "406.013, 575.052, 104.213, 0.6566", "405.955, 573.928, 104.696, 0.6902", "405.901, 572.802, 105.184, 0.7322", "406.303, 571.744, 105.482, 0.7334", "406.731, 570.689, 105.769, 0.7322", "406.865, 569.556, 105.941, 0.7004", "406.983, 568.422, 106.107, 0.6668", "407.351, 567.341, 106.24, 0.7136", "407.731, 566.263, 106.373, 0.7646", "408.224, 565.232, 106.301, 0.8442", "408.721, 564.201, 106.22, 0.925", "409.362, 563.255, 106.162, 0.9456", "410.009, 562.312, 106.105, 0.964", "410.331, 561.217, 106.164, 0.8594", "410.642, 560.116, 106.228, 0.7506", "410.813, 558.987, 106.048, 0.782", "410.98, 557.858, 105.86, 0.8174", "410.8, 556.739, 105.497, 0.7988", "410.617, 555.619, 105.132, 0.7796", "410.599, 554.475, 105.148, 0.7306", "410.582, 553.331, 105.165, 0.6824", "410.582, 552.197, 105.521, 0.8258", "410.582, 551.062, 105.876, 0.9684", "410.582, 549.935, 106.342, 0.9496", "410.582, 548.805, 106.808, 0.9312", "410.584, 547.673, 107.193, 0.9366", "410.587, 546.54, 107.578, 0.941", "410.725, 545.408, 107.784, 0.8224", "410.863, 544.275, 107.979, 0.7082", "411.045, 543.148, 107.787, 0.75", "411.228, 542.021, 107.595, 0.7912", "411.444, 540.9, 107.446, 0.8212", "411.644, 539.777, 107.308, 0.8528", "411.615, 538.633, 107.342, 0.9072", "411.615, 537.495, 107.376, 0.9572", "411.997, 536.417, 107.404, 0.949", "412.351, 535.334, 107.44, 0.933", "412.387, 534.191, 107.564, 0.83", "412.351, 533.06, 107.691, 0.7378", "411.936, 531.997, 107.828, 0.703", "411.655, 530.93, 107.967, 0.6966", "412.031, 529.852, 108.109, 0.8284", "412.359, 528.761, 108.23, 0.941", "412.498, 527.625, 108.264, 0.9758", "412.653, 526.493, 108.304, 0.9742", "412.878, 525.372, 108.37, 0.8248", "413.166, 524.272, 108.448, 0.7224", "413.702, 523.263, 108.57, 0.806", "414.218, 522.244, 108.668, 0.8928", "414.654, 521.187, 108.672, 0.9908", "415.041, 520.115, 108.624, 1.067", "415.254, 518.995, 108.389, 1.0658", "415.451, 517.873, 108.171, 1.037", "415.592, 516.739, 108.008, 0.9108", "415.77, 515.613, 107.876, 0.7944", "416.075, 514.511, 107.851, 0.7108", "416.322, 513.399, 107.862, 0.6326", "416.379, 512.257, 107.995, 0.5714", "416.408, 511.116, 108.126, 0.5476", "416.353, 509.975, 108.251, 0.635", "416.455, 508.866, 108.347, 0.6758", "416.964, 507.841, 108.368, 0.5966", "417.466, 506.814, 108.397, 0.5242", "417.957, 505.781, 108.449, 0.4686", "418.411, 504.733, 108.535, 0.4134", "418.778, 503.652, 108.707, 0.3588", "419.141, 502.569, 108.911, 0.3138", "419.493, 501.488, 109.196, 0.2918", "419.831, 500.403, 109.502, 0.2768", "420.128, 499.307, 109.855, 0.2788", "420.392, 498.206, 110.228, 0.2822", "420.582, 497.091, 110.642, 0.2892", "420.766, 495.974, 111.064, 0.302", "420.929, 494.857, 111.507, 0.3284", "421.065, 493.737, 111.95, 0.3464", "421.133, 492.609, 112.391, 0.3446", "421.201, 491.481, 112.822, 0.3466", "421.272, 490.35, 113.229, 0.3572", "421.357, 489.22, 113.606, 0.3696", "421.47, 488.089, 113.912, 0.3866", "421.586, 486.957, 114.192, 0.4142", "421.709, 485.824, 114.412, 0.4668", "421.842, 484.691, 114.633, 0.4802", "421.995, 483.561, 114.858, 0.4026", "422.16, 482.433, 115.107, 0.3378", "422.351, 481.313, 115.413, 0.3028", "422.544, 480.192, 115.72, 0.28", "422.741, 479.072, 116.033, 0.285", "422.943, 477.952, 116.313, 0.2934", "423.154, 476.831, 116.517, 0.3102", "423.367, 475.71, 116.705, 0.3398", "423.58, 474.587, 116.857, 0.3992", "423.795, 473.466, 117.035, 0.4674", "424.017, 472.348, 117.278, 0.555", "424.237, 471.231, 117.55, 0.5828", "424.457, 470.118, 117.891, 0.4716", "424.659, 468.999, 118.208, 0.3812", "424.816, 467.871, 118.472, 0.3394", "424.97, 466.742, 118.697, 0.323", "425.112, 465.608, 118.833, 0.3652", "425.306, 464.485, 118.955, 0.432", "425.621, 463.385, 119.045, 0.555", "426.042, 462.335, 119.165, 0.6174", "426.666, 461.38, 119.348, 0.5622", "427.139, 460.366, 119.549, 0.4856", "427.318, 459.241, 119.788, 0.3672", "427.457, 458.109, 119.953, 0.29", "427.529, 456.967, 119.995, 0.2806", "427.644, 455.831, 120.079, 0.2746", "427.831, 454.704, 120.229, 0.2746", "427.863, 453.583, 120.468, 0.2746", "427.643, 452.471, 120.855, 0.2746", "427.513, 451.355, 121.291, 0.2746", "427.517, 450.23, 121.803, 0.2746", "427.71, 449.141, 122.246, 0.2746", "428.167, 448.103, 122.592, 0.2746", "428.572, 447.04, 122.816, 0.2746", "428.905, 445.946, 122.882, 0.2748", "429.112, 444.828, 122.924, 0.275", "429.188, 443.687, 122.94, 0.2754", "429.285, 442.547, 122.96, 0.276", "429.405, 441.41, 122.984, 0.2772", "429.536, 440.273, 122.994, 0.2798", "429.682, 439.138, 122.989, 0.2838", "429.839, 438.006, 122.945, 0.2928", "430.009, 436.875, 122.862, 0.307", "430.236, 435.758, 122.698, 0.338", "430.518, 434.654, 122.45, 0.3864", "430.751, 433.54, 122.18, 0.4522", "430.935, 432.417, 121.889, 0.536", "430.925, 431.294, 121.69, 0.514", "430.726, 430.168, 121.583, 0.3878", "430.527, 429.041, 121.549, 0.3166", "430.326, 427.915, 121.588, 0.2996", "430.1, 426.794, 121.624, 0.3018", "429.85, 425.678, 121.658, 0.3224", "429.627, 424.557, 121.68, 0.3712", "429.428, 423.43, 121.69, 0.4478", "429.44, 422.305, 121.771, 0.4624", "429.651, 421.183, 121.921, 0.4188", "429.868, 420.063, 122.134, 0.4358", "430.092, 418.947, 122.408, 0.5108", "430.417, 417.862, 122.706, 0.6042", "430.84, 416.806, 123.029, 0.7148", "431.266, 415.753, 123.339, 0.6574", "431.699, 414.701, 123.638, 0.442", "432.045, 413.619, 123.89, 0.3218", "432.311, 412.509, 124.096, 0.2898", "432.561, 411.395, 124.248, 0.2746", "432.796, 410.276, 124.349, 0.2746", "432.918, 409.145, 124.362, 0.2746", "432.936, 408.002, 124.295, 0.2746", "432.946, 406.859, 124.172, 0.2746", "432.946, 405.717, 123.999, 0.2746", "432.959, 404.576, 123.827, 0.2746", "432.986, 403.434, 123.656, 0.2746", "433.028, 402.292, 123.534, 0.2746", "433.085, 401.149, 123.455, 0.2746", "433.144, 400.008, 123.409, 0.2746", "433.203, 398.865, 123.391, 0.2746", "433.287, 397.724, 123.384, 0.2746", "433.393, 396.585, 123.386, 0.2746", "433.507, 395.447, 123.396, 0.2746", "433.629, 394.309, 123.411, 0.2746", "433.689, 393.169, 123.452, 0.2746", "433.694, 392.025, 123.517, 0.2746", "433.547, 390.9, 123.638, 0.2746", "433.269, 389.793, 123.81, 0.2746", "433.138, 388.669, 124.034, 0.2746", "433.133, 387.53, 124.304, 0.2748", "433.207, 386.397, 124.603, 0.2752", "433.344, 385.27, 124.926, 0.2756", "433.464, 384.139, 125.244, 0.2768", "433.571, 383.008, 125.558, 0.2784", "433.657, 381.873, 125.837, 0.282", "433.728, 380.736, 126.09, 0.2874", "433.827, 379.599, 126.277, 0.301", "433.945, 378.463, 126.412, 0.321", "434.132, 377.336, 126.421, 0.3282", "434.37, 376.218, 126.331, 0.3256", "434.641, 375.11, 126.149, 0.3104", "434.937, 374.01, 125.894, 0.2852", "435.428, 372.997, 125.675, 0.275", "436.061, 372.047, 125.483, 0.2754", "436.504, 371.008, 125.368, 0.2764", "436.81, 369.907, 125.31, 0.2776", "437.097, 368.799, 125.301, 0.2804", "437.368, 367.689, 125.328, 0.2846", "437.761, 366.619, 125.344, 0.294", "438.238, 365.579, 125.353, 0.3072", "438.721, 364.543, 125.339, 0.32", "439.209, 363.507, 125.309, 0.3326", "439.446, 362.41, 125.295, 0.3196", "439.509, 361.267, 125.294, 0.2886", "439.502, 360.124, 125.327, 0.2758", "439.448, 358.983, 125.383, 0.275", "439.436, 357.839, 125.455, 0.2746", "439.449, 356.696, 125.537, 0.2746", "439.545, 355.559, 125.613, 0.2746", "439.695, 354.424, 125.686, 0.2746", "439.846, 353.291, 125.755, 0.2746", "439.998, 352.158, 125.822, 0.2746", "440.188, 351.03, 125.893, 0.2746", "440.402, 349.906, 125.968, 0.2748", "440.696, 348.803, 126.054, 0.275", "441.042, 347.713, 126.149, 0.2752", "441.308, 346.604, 126.282, 0.2756", "441.526, 345.483, 126.44, 0.2764", "441.646, 344.352, 126.668, 0.278", "441.71, 343.215, 126.938, 0.2804", "441.765, 342.079, 127.228, 0.2866", "441.815, 340.942, 127.529, 0.2952", "441.816, 339.803, 127.779, 0.3212", "441.79, 338.663, 127.998, 0.3574", "441.763, 337.521, 128.16, 0.349", "441.735, 336.379, 128.289, 0.3142", "441.708, 335.237, 128.376, 0.293", "441.679, 334.093, 128.437, 0.2796", "441.562, 332.957, 128.424, 0.2746", "441.392, 331.826, 128.367, 0.2746", "441.19, 330.702, 128.239, 0.2746", "440.97, 329.581, 128.071, 0.2746", "440.913, 328.446, 127.998, 0.2746", "440.95, 327.303, 127.98, 0.2746", "440.997, 326.161, 128.066, 0.2746", "441.049, 325.02, 128.212, 0.2746", "441.1, 323.879, 128.383, 0.2746", "441.152, 322.738, 128.569, 0.2746", "441.177, 321.596, 128.656, 0.2746", "441.188, 320.452, 128.686, 0.2746", "441.195, 319.309, 128.617, 0.2746", "441.202, 318.166, 128.491, 0.2746", "441.208, 317.024, 128.318, 0.2746", "441.212, 315.884, 128.119, 0.2746", "441.205, 314.743, 127.912, 0.2746", "441.193, 313.601, 127.7, 0.2746", "441.18, 312.461, 127.49, 0.2746", "441.169, 311.32, 127.279, 0.2746", "441.156, 310.18, 127.07, 0.2746", "441.144, 309.039, 126.862, 0.2746", "441.13, 307.898, 126.656, 0.2746", "441.115, 306.757, 126.451, 0.2746", "441.036, 305.62, 126.253, 0.2746", "440.919, 304.485, 126.058, 0.2746", "440.802, 303.35, 125.867, 0.2746", "440.681, 302.214, 125.676, 0.2748", "440.561, 301.079, 125.481, 0.275", "440.441, 299.944, 125.284, 0.2752", "440.41, 298.807, 125.068, 0.2758", "440.431, 297.667, 124.84, 0.2764", "440.541, 296.535, 124.585, 0.2784", "440.698, 295.407, 124.314, 0.281", "440.856, 294.279, 124.034, 0.2878", "441.013, 293.152, 123.749, 0.2968", "441.174, 292.025, 123.483, 0.3232", "441.338, 290.897, 123.229, 0.3588", "441.504, 289.77, 123.005, 0.3486", "441.67, 288.64, 122.8, 0.3134", "441.822, 287.509, 122.628, 0.2952", "441.967, 286.376, 122.475, 0.2866", "442.07, 285.238, 122.375, 0.2906", "442.15, 284.098, 122.305, 0.3012", "442.232, 282.956, 122.255, 0.328", "442.313, 281.815, 122.217, 0.3632", "442.434, 280.678, 122.135, 0.394", "442.576, 279.544, 122.03, 0.4224", "442.712, 278.411, 121.866, 0.4", "442.845, 277.277, 121.67, 0.3496", "442.926, 276.14, 121.471, 0.3146", "442.98, 274.999, 121.272, 0.288", "443.129, 273.87, 121.099, 0.2818", "443.332, 272.746, 120.939, 0.2866", "443.668, 271.658, 120.819, 0.299", "444.072, 270.589, 120.719, 0.315", "444.475, 269.518, 120.666, 0.324", "444.876, 268.448, 120.637, 0.3294", "445.135, 267.338, 120.693, 0.3134", "445.32, 266.21, 120.793, 0.2864", "445.535, 265.095, 121.088, 0.2812", "445.764, 263.985, 121.473, 0.2862", "446.193, 262.984, 122.228, 0.3042", "446.694, 262.022, 123.118, 0.327", "446.484, 260.992, 123.664, 0.4124", "446.065, 259.943, 124.111, 0.516", "445.86, 258.824, 124.186, 0.5182", "445.7, 257.692, 124.185, 0.4998", "445.806, 256.558, 124.15, 0.5186", "445.956, 255.426, 124.105, 0.5414", "446.576, 254.483, 123.639, 0.4874", "447.095, 253.51, 123.193, 0.4482", "447.048, 252.376, 122.856, 0.4902", "447.009, 251.241, 122.517, 0.524", "446.999, 250.106, 122.166, 0.5186", "447.16, 249.023, 121.812, 0.5212", "447.784, 248.075, 121.448, 0.5456", "448.38, 247.11, 121.127, 0.5336", "448.905, 246.096, 120.919, 0.4282", "449.322, 245.046, 120.767, 0.3492", "449.511, 243.918, 120.737, 0.3278", "449.67, 242.786, 120.748, 0.323", "449.766, 241.647, 120.848, 0.3546", "449.999, 240.547, 120.9, 0.3768", "450.527, 239.532, 120.85, 0.3786", "451.046, 238.513, 120.832, 0.3822", "451.551, 237.486, 120.871, 0.3894", "451.674, 236.469, 120.86, 0.3778", "451.119, 235.469, 120.758, 0.3328", "450.652, 234.431, 120.838, 0.3198", "450.259, 233.361, 121.071, 0.334", "450.119, 232.255, 121.023, 0.335", "450.187, 231.119, 120.744, 0.3252", "450.21, 229.98, 120.514, 0.3268", "450.21, 228.839, 120.308, 0.3338", "450.138, 227.699, 120.216, 0.3928", "450.031, 226.56, 120.178, 0.477", "450.419, 225.56, 120.548, 0.527", "450.978, 224.615, 121.092, 0.5542", "450.643, 223.531, 121.43, 0.4734", "450.333, 222.441, 121.718, 0.415", "450.253, 221.301, 121.554, 0.5558", "450.35, 220.203, 121.363, 0.6344", "450.904, 219.206, 121.104, 0.5528", "451.349, 218.173, 120.88, 0.4956", "451.517, 217.043, 120.743, 0.499", "451.737, 215.924, 120.632, 0.4976", "452.074, 214.832, 120.582, 0.4842", "452.371, 213.729, 120.539, 0.5016", "452.58, 212.604, 120.512, 0.585", "452.643, 211.481, 120.497, 0.6544", "452.41, 210.361, 120.507, 0.6952", "452.181, 209.24, 120.483, 0.65", "451.96, 208.118, 120.406, 0.4692", "451.702, 207.006, 120.332, 0.361", "451.384, 205.906, 120.263, 0.3612", "451.294, 204.794, 120.24, 0.375", "451.488, 203.667, 120.272, 0.4058", "451.747, 202.555, 120.304, 0.4014", "452.091, 201.464, 120.336, 0.3542", "452.652, 200.496, 120.325, 0.3622", "453.406, 199.636, 120.275, 0.4188", "453.686, 198.61, 120.305, 0.4472", "453.636, 197.468, 120.392, 0.456", "453.645, 196.325, 120.49, 0.496", "453.692, 195.184, 120.594, 0.5546", "453.761, 194.042, 120.709, 0.5136", "453.843, 192.902, 120.83, 0.4176", "453.908, 191.762, 120.979, 0.3556", "453.962, 190.621, 121.143, 0.3124", "454.121, 189.492, 121.269, 0.3192", "454.336, 188.369, 121.375, 0.3524", "454.46, 187.236, 121.562, 0.3618", "454.538, 186.099, 121.791, 0.3586", "454.533, 184.963, 122.081, 0.3902", "454.485, 183.827, 122.401, 0.44", "454.162, 182.753, 122.699, 0.4452", "453.722, 181.704, 122.986, 0.4314", "453.42, 180.607, 123.156, 0.386", "453.176, 179.49, 123.276, 0.3268", "453.278, 178.374, 123.47, 0.2998", "453.509, 177.257, 123.692, 0.2848", "453.532, 176.136, 124.153, 0.288", "453.484, 175.015, 124.696, 0.2976", "453.628, 173.902, 125.167, 0.3298", "453.831, 172.791, 125.616, 0.3686", "453.875, 171.657, 125.898, 0.351", "453.877, 170.518, 126.136, 0.3184", "453.993, 169.383, 126.335, 0.3148", "454.137, 168.251, 126.523, 0.319", "454.475, 167.164, 126.594, 0.3226", "454.862, 166.087, 126.634, 0.3258", "454.468, 165.059, 126.571, 0.302", "453.964, 164.035, 126.493, 0.2746", "454.151, 162.907, 126.47, 0.2746", "454.314, 161.78, 126.444, 0.2746", "453.937, 160.701, 126.317, 0.2746", "453.571, 159.618, 126.199, 0.2746", "453.23, 158.526, 126.097, 0.2748", "453.206, 157.428, 126.005, 0.2752", "453.493, 156.321, 125.924, 0.2758", "453.941, 155.282, 125.803, 0.277", "454.533, 154.305, 125.648, 0.279", "454.518, 153.27, 125.483, 0.2844", "454.122, 152.199, 125.311, 0.2918", "453.522, 151.239, 125.165, 0.3148", "452.828, 150.331, 125.031, 0.3448", "452.053, 149.496, 125.088, 0.339", "451.242, 148.691, 125.23, 0.317", "450.348, 147.991, 125.501, 0.298", "449.419, 147.337, 125.827, 0.28", "448.566, 146.646, 126.554, 0.2746", "447.746, 145.938, 127.453, 0.2746", "446.987, 145.115, 127.951, 0.2744", "446.251, 144.251, 128.31, 0.2744", "445.554, 143.356, 128.637, 0.2744", "444.868, 142.449, 128.954, 0.2744", "444.57, 141.388, 129.413, 0.2742", "444.404, 140.276, 129.923, 0.274", "444.449, 139.148, 130.309, 0.2736", "444.537, 138.017, 130.67, 0.2734", "444.69, 136.889, 130.926, 0.2728", "444.856, 135.761, 131.16, 0.2722", "445.341, 134.745, 131.521, 0.2704", "445.879, 133.747, 131.903, 0.2682", "446.19, 132.707, 132.741, 0.2622", "446.464, 131.662, 133.654, 0.2554", "446.231, 130.584, 134.388, 0.242", "445.991, 129.507, 135.12, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_524",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_525",
    "groups" : [ ],
    "sections" : [ "dend_19", "dend_18", "dend_15", "dend_4", "dend_1", "dend_0", "apic_0", "dend_21", "dend_20", "dend_17", "dend_16", "dend_10", "dend_5", "dend_3", "dend_2", "apic_10", "apic_1", "dend_12", "dend_11", "dend_9", "dend_6", "apic_9", "apic_2", "dend_14", "dend_13", "dend_8", "dend_7", "apic_8", "apic_3", "apic_7", "apic_4", "apic_6", "apic_5" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_19", "dend_18", "dend_15", "dend_4", "dend_1", "dend_0", "dend_21", "dend_20", "dend_17", "dend_16", "dend_10", "dend_5", "dend_3", "dend_2", "dend_12", "dend_11", "dend_9", "dend_6", "dend_14", "dend_13", "dend_8", "dend_7" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_10", "apic_1", "apic_9", "apic_2", "apic_8", "apic_3", "apic_7", "apic_4", "apic_6", "apic_5" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21857",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_1", "apic_1", "apic_1", "apic_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.4212074"
  }, {
    "group" : "apic",
    "value" : "2.4212074"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "222.10457"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0033831976",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "6.793627E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.47756097",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "1.9884222E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "9.098079E-9",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "8.187409E-8",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0018017729",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.36055973",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.9758757E-4",
    "erev" : "-78.73946"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "4.585195E-6",
    "erev" : "-78.73946"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.11042574E-7",
    "erev" : "-78.73946"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "9.3602915E-7",
    "erev" : "-78.73946"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.035676E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0016698058",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478045347",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478045347

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_4, id: dend_4, parent: soma_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_10, id: apic_10, parent: apic_0
create apic_10
public apic_10
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: apic_9, id: apic_9, parent: apic_1
create apic_9
public apic_9
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: apic_8, id: apic_8, parent: apic_2
create apic_8
public apic_8
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_7, id: apic_7, parent: apic_3
create apic_7
public apic_7
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_524, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_524
// Group: {name=ModelViewParmSubset_525, groups=[], sections=[dend_19, dend_18, dend_15, dend_4, dend_1, dend_0, apic_0, dend_21, dend_20, dend_17, dend_16, dend_10, dend_5, dend_3, dend_2, apic_10, apic_1, dend_12, dend_11, dend_9, dend_6, apic_9, apic_2, dend_14, dend_13, dend_8, dend_7, apic_8, apic_3, apic_7, apic_4, apic_6, apic_5]}
objref ModelViewParmSubset_525
// Group: {name=dend, groups=[], sections=[dend_19, dend_18, dend_15, dend_4, dend_1, dend_0, dend_21, dend_20, dend_17, dend_16, dend_10, dend_5, dend_3, dend_2, dend_12, dend_11, dend_9, dend_6, dend_14, dend_13, dend_8, dend_7]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_10, apic_1, apic_9, apic_2, apic_8, apic_3, apic_7, apic_4, apic_6, apic_5]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_21857, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_21857
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478045347
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999999999999973)
    connect dend_19(0), soma_0(0.4999999999999973)
    connect dend_18(0), soma_0(0.4999999999999973)
    connect dend_15(0), soma_0(0.4999999999999973)
    connect dend_4(0), soma_0(0.4999999999999973)
    connect dend_1(0), soma_0(0.4999999999999973)
    connect dend_0(0), soma_0(0.4999999999999973)
    connect apic_0(0), soma_0(0.4999999999999973)
    connect axon_1(0), axon_0(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_10(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect apic_9(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect apic_8(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_7(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 374.219, 773.573, 56.56, 10.492 ) }
    soma_0 { pt3dadd( 379.465, 773.573, 56.56, 10.492 ) }
    soma_0 { pt3dadd( 384.711, 773.573, 56.56, 10.492 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 379.465, 773.573, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 385.306, 787.389, 56.56, 1.0 ) }
    axon_0 { pt3dadd( 391.148, 801.205, 56.56, 1.0 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 375.144, 775.629, 58.7213, 0.9274 ) }
    dend_19 { pt3dadd( 374.255, 776.301, 59.346, 0.752 ) }
    dend_19 { pt3dadd( 373.367, 776.976, 59.9704, 0.6256 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 9/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 380.71, 778.737, 56.3976, 1.4324 ) }
    dend_18 { pt3dadd( 381.159, 779.769, 55.8964, 0.9922 ) }
    dend_18 { pt3dadd( 381.199, 780.833, 55.2457, 0.8258 ) }
    dend_18 { pt3dadd( 380.99, 781.915, 54.5042, 0.8262 ) }
    dend_18 { pt3dadd( 381.02, 783.016, 53.9017, 0.842 ) }
    dend_18 { pt3dadd( 381.182, 784.128, 53.3753, 0.8662 ) }
    dend_18 { pt3dadd( 381.261, 785.256, 52.9768, 0.8296 ) }
    dend_18 { pt3dadd( 381.296, 786.391, 52.6481, 0.7602 ) }
    dend_18 { pt3dadd( 381.552, 787.49, 52.3894, 0.7108 ) }
    dend_18 { pt3dadd( 381.924, 788.567, 52.1682, 0.6722 ) }
    dend_18 { pt3dadd( 382.223, 789.664, 51.8941, 0.6808 ) }
    dend_18 { pt3dadd( 382.487, 790.771, 51.5948, 0.712 ) }
    dend_18 { pt3dadd( 382.275, 791.844, 51.1689, 0.6682 ) }
    dend_18 { pt3dadd( 381.893, 792.905, 50.6976, 0.5978 ) }
    dend_18 { pt3dadd( 381.478, 793.931, 50.0055, 0.5862 ) }
    dend_18 { pt3dadd( 381.052, 794.946, 49.2411, 0.5934 ) }
    dend_18 { pt3dadd( 380.781, 796.005, 48.4498, 0.5666 ) }
    dend_18 { pt3dadd( 380.56, 797.079, 47.6501, 0.529 ) }
    dend_18 { pt3dadd( 380.539, 798.172, 46.879, 0.5136 ) }
    dend_18 { pt3dadd( 380.58, 799.273, 46.1166, 0.505 ) }
    dend_18 { pt3dadd( 380.493, 800.376, 45.4258, 0.5906 ) }
    dend_18 { pt3dadd( 380.371, 801.479, 44.7555, 0.703 ) }
    dend_18 { pt3dadd( 380.034, 802.53, 44.0544, 0.7338 ) }
    dend_18 { pt3dadd( 379.65, 803.567, 43.3462, 0.7462 ) }
    dend_18 { pt3dadd( 379.317, 804.635, 42.7529, 0.6688 ) }
    dend_18 { pt3dadd( 378.995, 805.708, 42.1848, 0.572 ) }
    dend_18 { pt3dadd( 378.6, 806.759, 41.6598, 0.6364 ) }
    dend_18 { pt3dadd( 378.193, 807.807, 41.1426, 0.729 ) }
    dend_18 { pt3dadd( 377.708, 808.823, 40.6543, 0.6542 ) }
    dend_18 { pt3dadd( 377.211, 809.834, 40.1708, 0.5508 ) }
    dend_18 { pt3dadd( 377.116, 810.932, 39.536, 0.5166 ) }
    dend_18 { pt3dadd( 377.085, 812.043, 38.8769, 0.4934 ) }
    dend_18 { pt3dadd( 376.88, 813.153, 38.4348, 0.4232 ) }
    dend_18 { pt3dadd( 376.66, 814.261, 38.0125, 0.3484 ) }
    dend_18 { pt3dadd( 375.793, 814.979, 37.7614, 0.2882 ) }
    dend_18 { pt3dadd( 374.889, 815.672, 37.52, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 45/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 374.757, 774.181, 58.2238, 1.151 ) }
    dend_15 { pt3dadd( 373.734, 773.69, 58.4774, 0.93 ) }
    dend_15 { pt3dadd( 372.717, 773.176, 58.7241, 0.7898 ) }
    dend_15 { pt3dadd( 371.67, 772.719, 58.5698, 0.792 ) }
    dend_15 { pt3dadd( 370.623, 772.264, 58.4128, 0.7954 ) }
    dend_15 { pt3dadd( 369.487, 772.231, 58.098, 0.786 ) }
    dend_15 { pt3dadd( 368.351, 772.199, 57.7825, 0.7766 ) }
    dend_15 { pt3dadd( 367.207, 772.182, 57.7094, 0.8584 ) }
    dend_15 { pt3dadd( 366.064, 772.164, 57.6363, 0.9404 ) }
    dend_15 { pt3dadd( 364.941, 771.948, 57.6974, 0.9286 ) }
    dend_15 { pt3dadd( 363.817, 771.733, 57.7584, 0.9168 ) }
    // Section: dend_4, id: dend_4, parent: soma_0 (entry count 56/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 382.949, 777.612, 55.6413, 0.7696 ) }
    dend_4 { pt3dadd( 383.834, 778.32, 55.7082, 0.5892 ) }
    dend_4 { pt3dadd( 384.773, 778.972, 55.8174, 0.7364 ) }
    dend_4 { pt3dadd( 385.833, 778.564, 55.8032, 0.8062 ) }
    dend_4 { pt3dadd( 386.895, 778.138, 55.7869, 0.875 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 375.15, 771.779, 53.3019, 1.193 ) }
    dend_1 { pt3dadd( 374.598, 771.048, 52.6294, 0.3698 ) }
    dend_1 { pt3dadd( 374.63, 769.927, 52.0825, 0.4752 ) }
    dend_1 { pt3dadd( 374.512, 768.878, 51.0782, 0.467 ) }
    dend_1 { pt3dadd( 374.333, 767.86, 49.882, 0.411 ) }
    dend_1 { pt3dadd( 375.084, 767.43, 48.2695, 0.367 ) }
    dend_1 { pt3dadd( 376.008, 767.45, 46.9392, 0.3798 ) }
    dend_1 { pt3dadd( 377.0, 767.831, 45.908, 0.4442 ) }
    dend_1 { pt3dadd( 376.582, 768.561, 44.3909, 0.4728 ) }
    dend_1 { pt3dadd( 375.961, 769.23, 42.7123, 0.571 ) }
    dend_1 { pt3dadd( 375.416, 769.923, 41.0732, 0.6844 ) }
    dend_1 { pt3dadd( 375.436, 770.961, 39.8964, 0.7344 ) }
    dend_1 { pt3dadd( 375.604, 771.925, 38.6089, 0.7594 ) }
    dend_1 { pt3dadd( 376.146, 772.702, 37.0398, 0.7206 ) }
    dend_1 { pt3dadd( 376.281, 773.614, 35.4662, 0.763 ) }
    dend_1 { pt3dadd( 376.311, 774.559, 33.8918, 0.8256 ) }
    dend_1 { pt3dadd( 376.934, 775.188, 32.1978, 0.9326 ) }
    dend_1 { pt3dadd( 377.617, 775.785, 30.492, 1.044 ) }
    dend_1 { pt3dadd( 378.371, 776.489, 29.2835, 1.0202 ) }
    dend_1 { pt3dadd( 379.127, 777.195, 28.0848, 0.9938 ) }
    dend_1 { pt3dadd( 379.945, 777.869, 27.0292, 0.7516 ) }
    dend_1 { pt3dadd( 380.763, 778.541, 25.9748, 0.5074 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 83/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 375.789, 770.878, 54.0282, 0.2422 ) }
    dend_0 { pt3dadd( 374.829, 770.256, 54.0915, 0.28 ) }
    dend_0 { pt3dadd( 373.867, 769.642, 54.215, 0.3204 ) }
    dend_0 { pt3dadd( 372.896, 769.051, 54.5342, 0.3696 ) }
    dend_0 { pt3dadd( 371.943, 768.435, 54.871, 0.4294 ) }
    dend_0 { pt3dadd( 371.043, 767.746, 55.2583, 0.5202 ) }
    dend_0 { pt3dadd( 370.169, 767.026, 55.5612, 0.612 ) }
    dend_0 { pt3dadd( 369.361, 766.216, 55.6469, 0.7056 ) }
    dend_0 { pt3dadd( 368.467, 765.542, 55.6968, 0.789 ) }
    dend_0 { pt3dadd( 367.39, 765.155, 55.6704, 0.85 ) }
    dend_0 { pt3dadd( 366.311, 764.775, 55.6657, 0.8686 ) }
    dend_0 { pt3dadd( 365.228, 764.408, 55.7052, 0.7998 ) }
    dend_0 { pt3dadd( 364.156, 764.013, 55.743, 0.775 ) }
    dend_0 { pt3dadd( 363.104, 763.56, 55.7774, 0.8408 ) }
    dend_0 { pt3dadd( 362.048, 763.123, 55.8256, 0.8596 ) }
    dend_0 { pt3dadd( 360.978, 762.722, 55.902, 0.7848 ) }
    dend_0 { pt3dadd( 359.893, 762.364, 55.9538, 0.728 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 358.781, 762.094, 55.9574, 0.706 ) }
    dend_0 { pt3dadd( 357.677, 761.798, 55.9636, 0.7186 ) }
    dend_0 { pt3dadd( 356.586, 761.454, 55.9745, 0.7982 ) }
    dend_0 { pt3dadd( 355.495, 761.112, 56.0232, 0.839 ) }
    dend_0 { pt3dadd( 354.402, 760.776, 56.1422, 0.8066 ) }
    dend_0 { pt3dadd( 353.306, 760.452, 56.2036, 0.7566 ) }
    dend_0 { pt3dadd( 352.202, 760.151, 56.1562, 0.6732 ) }
    dend_0 { pt3dadd( 351.12, 759.801, 55.9941, 0.6402 ) }
    dend_0 { pt3dadd( 350.074, 759.362, 55.6203, 0.7002 ) }
    dend_0 { pt3dadd( 349.013, 758.957, 55.3596, 0.7454 ) }
    dend_0 { pt3dadd( 347.924, 758.606, 55.2776, 0.7676 ) }
    dend_0 { pt3dadd( 346.857, 758.201, 55.2737, 0.7722 ) }
    dend_0 { pt3dadd( 345.822, 757.716, 55.3865, 0.7506 ) }
    dend_0 { pt3dadd( 344.788, 757.229, 55.4828, 0.6994 ) }
    dend_0 { pt3dadd( 343.756, 756.737, 55.554, 0.6034 ) }
    dend_0 { pt3dadd( 342.718, 756.254, 55.6324, 0.5648 ) }
    dend_0 { pt3dadd( 341.676, 755.786, 55.7214, 0.612 ) }
    dend_0 { pt3dadd( 340.636, 755.309, 55.7662, 0.6366 ) }
    dend_0 { pt3dadd( 339.602, 754.819, 55.7452, 0.6278 ) }
    dend_0 { pt3dadd( 338.568, 754.332, 55.6598, 0.5804 ) }
    dend_0 { pt3dadd( 337.534, 753.849, 55.4792, 0.4758 ) }
    dend_0 { pt3dadd( 336.485, 753.407, 55.2521, 0.4428 ) }
    dend_0 { pt3dadd( 335.412, 753.028, 54.957, 0.5158 ) }
    dend_0 { pt3dadd( 334.324, 752.707, 54.637, 0.5744 ) }
    dend_0 { pt3dadd( 333.214, 752.471, 54.2816, 0.613 ) }
    dend_0 { pt3dadd( 332.11, 752.205, 53.9512, 0.6174 ) }
    dend_0 { pt3dadd( 331.015, 751.897, 53.6556, 0.5746 ) }
    dend_0 { pt3dadd( 329.925, 751.578, 53.3358, 0.5596 ) }
    dend_0 { pt3dadd( 328.839, 751.244, 52.9836, 0.5824 ) }
    dend_0 { pt3dadd( 327.743, 750.963, 52.6033, 0.6276 ) }
    dend_0 { pt3dadd( 326.633, 750.751, 52.1861, 0.703 ) }
    dend_0 { pt3dadd( 325.522, 750.539, 51.7642, 0.7274 ) }
    dend_0 { pt3dadd( 324.411, 750.328, 51.3352, 0.6842 ) }
    dend_0 { pt3dadd( 323.301, 750.135, 50.8525, 0.6476 ) }
    dend_0 { pt3dadd( 322.193, 749.965, 50.2984, 0.619 ) }
    dend_0 { pt3dadd( 321.076, 749.868, 49.775, 0.6494 ) }
    dend_0 { pt3dadd( 319.949, 749.866, 49.2912, 0.7558 ) }
    dend_0 { pt3dadd( 318.825, 749.865, 48.7872, 0.8274 ) }
    dend_0 { pt3dadd( 317.701, 749.865, 48.2572, 0.8546 ) }
    dend_0 { pt3dadd( 316.593, 749.725, 47.7988, 0.8526 ) }
    dend_0 { pt3dadd( 315.505, 749.407, 47.4331, 0.8134 ) }
    dend_0 { pt3dadd( 314.399, 749.174, 47.075, 0.793 ) }
    dend_0 { pt3dadd( 313.271, 749.049, 46.7264, 0.7966 ) }
    dend_0 { pt3dadd( 312.138, 748.937, 46.4472, 0.8052 ) }
    dend_0 { pt3dadd( 311.001, 748.838, 46.256, 0.82 ) }
    dend_0 { pt3dadd( 309.932, 748.521, 46.1686, 0.8192 ) }
    dend_0 { pt3dadd( 308.948, 747.939, 46.207, 0.7996 ) }
    dend_0 { pt3dadd( 307.901, 747.516, 46.2078, 0.7624 ) }
    dend_0 { pt3dadd( 306.783, 747.276, 46.1653, 0.7046 ) }
    dend_0 { pt3dadd( 305.653, 747.142, 46.1418, 0.6708 ) }
    dend_0 { pt3dadd( 304.509, 747.126, 46.1398, 0.6638 ) }
    dend_0 { pt3dadd( 303.365, 747.094, 46.1255, 0.6654 ) }
    dend_0 { pt3dadd( 302.222, 747.045, 46.0975, 0.677 ) }
    dend_0 { pt3dadd( 301.084, 746.951, 46.1252, 0.6756 ) }
    dend_0 { pt3dadd( 299.949, 746.81, 46.2132, 0.6602 ) }
    dend_0 { pt3dadd( 298.835, 746.903, 46.3702, 0.6012 ) }
    dend_0 { pt3dadd( 297.741, 747.225, 46.5959, 0.4988 ) }
    dend_0 { pt3dadd( 296.636, 747.492, 46.8664, 0.4236 ) }
    dend_0 { pt3dadd( 295.518, 747.703, 47.1792, 0.3738 ) }
    dend_0 { pt3dadd( 294.39, 747.769, 47.4429, 0.3696 ) }
    dend_0 { pt3dadd( 293.252, 747.697, 47.661, 0.4082 ) }
    dend_0 { pt3dadd( 292.113, 747.685, 47.6314, 0.4678 ) }
    dend_0 { pt3dadd( 290.975, 747.73, 47.3768, 0.5468 ) }
    dend_0 { pt3dadd( 289.866, 747.931, 47.0938, 0.5604 ) }
    dend_0 { pt3dadd( 288.78, 748.271, 46.7855, 0.5164 ) }
    dend_0 { pt3dadd( 287.669, 748.504, 46.571, 0.4764 ) }
    dend_0 { pt3dadd( 286.535, 748.644, 46.4391, 0.4396 ) }
    dend_0 { pt3dadd( 285.426, 748.9, 46.4016, 0.487 ) }
    dend_0 { pt3dadd( 284.339, 749.256, 46.4458, 0.6072 ) }
    dend_0 { pt3dadd( 283.251, 749.606, 46.5508, 0.6418 ) }
    dend_0 { pt3dadd( 282.162, 749.951, 46.7051, 0.6058 ) }
    dend_0 { pt3dadd( 281.059, 750.232, 46.9232, 0.632 ) }
    dend_0 { pt3dadd( 279.943, 750.459, 47.192, 0.708 ) }
    dend_0 { pt3dadd( 278.826, 750.687, 47.4345, 0.707 ) }
    dend_0 { pt3dadd( 277.708, 750.916, 47.6563, 0.6444 ) }
    dend_0 { pt3dadd( 276.594, 751.163, 47.826, 0.577 ) }
    dend_0 { pt3dadd( 275.482, 751.425, 47.9545, 0.5058 ) }
    dend_0 { pt3dadd( 274.4, 751.779, 48.1306, 0.4824 ) }
    dend_0 { pt3dadd( 273.342, 752.205, 48.3448, 0.4972 ) }
    dend_0 { pt3dadd( 272.258, 752.555, 48.547, 0.4988 ) }
    dend_0 { pt3dadd( 271.155, 752.847, 48.7399, 0.4906 ) }
    dend_0 { pt3dadd( 270.076, 753.214, 48.8933, 0.5024 ) }
    dend_0 { pt3dadd( 269.015, 753.639, 49.0174, 0.5286 ) }
    dend_0 { pt3dadd( 267.975, 754.112, 49.063, 0.4914 ) }
    dend_0 { pt3dadd( 266.95, 754.62, 49.0535, 0.4098 ) }
    dend_0 { pt3dadd( 265.899, 755.068, 48.9787, 0.3734 ) }
    dend_0 { pt3dadd( 264.83, 755.472, 48.8578, 0.3686 ) }
    dend_0 { pt3dadd( 263.725, 755.742, 48.8278, 0.3842 ) }
    dend_0 { pt3dadd( 262.595, 755.917, 48.8606, 0.4142 ) }
    dend_0 { pt3dadd( 261.534, 756.306, 48.9381, 0.4766 ) }
    dend_0 { pt3dadd( 260.521, 756.834, 49.0454, 0.5608 ) }
    dend_0 { pt3dadd( 259.444, 757.19, 49.1596, 0.614 ) }
    dend_0 { pt3dadd( 258.328, 757.435, 49.278, 0.6478 ) }
    dend_0 { pt3dadd( 257.194, 757.501, 49.3573, 0.644 ) }
    dend_0 { pt3dadd( 256.051, 757.468, 49.415, 0.6194 ) }
    dend_0 { pt3dadd( 254.908, 757.49, 49.4721, 0.618 ) }
    dend_0 { pt3dadd( 253.766, 757.543, 49.5286, 0.6288 ) }
    dend_0 { pt3dadd( 252.624, 757.532, 49.4418, 0.5786 ) }
    dend_0 { pt3dadd( 251.482, 757.488, 49.2839, 0.4982 ) }
    dend_0 { pt3dadd( 250.34, 757.521, 49.2215, 0.4712 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( 249.199, 757.582, 49.1932, 0.4632 ) }
    dend_0 { pt3dadd( 248.063, 757.48, 49.1985, 0.4448 ) }
    dend_0 { pt3dadd( 246.93, 757.322, 49.2156, 0.4224 ) }
    dend_0 { pt3dadd( 245.846, 756.977, 49.1534, 0.398 ) }
    dend_0 { pt3dadd( 244.777, 756.568, 49.065, 0.3726 ) }
    dend_0 { pt3dadd( 243.656, 756.396, 48.9838, 0.4178 ) }
    dend_0 { pt3dadd( 242.517, 756.302, 48.9051, 0.4862 ) }
    dend_0 { pt3dadd( 241.407, 756.04, 48.9608, 0.5612 ) }
    dend_0 { pt3dadd( 240.309, 755.724, 49.0605, 0.6386 ) }
    dend_0 { pt3dadd( 239.206, 755.432, 49.2582, 0.5888 ) }
    dend_0 { pt3dadd( 238.102, 755.148, 49.485, 0.501 ) }
    dend_0 { pt3dadd( 236.984, 754.916, 49.6807, 0.4544 ) }
    dend_0 { pt3dadd( 235.864, 754.7, 49.8669, 0.4204 ) }
    dend_0 { pt3dadd( 234.743, 754.471, 49.9668, 0.399 ) }
    dend_0 { pt3dadd( 233.624, 754.239, 50.0413, 0.3812 ) }
    dend_0 { pt3dadd( 232.521, 753.938, 49.9657, 0.4006 ) }
    dend_0 { pt3dadd( 231.424, 753.618, 49.8462, 0.431 ) }
    dend_0 { pt3dadd( 230.41, 753.103, 49.7991, 0.4382 ) }
    dend_0 { pt3dadd( 229.418, 752.534, 49.7731, 0.4386 ) }
    dend_0 { pt3dadd( 228.4, 752.023, 50.0018, 0.4528 ) }
    dend_0 { pt3dadd( 227.375, 751.529, 50.2953, 0.4706 ) }
    dend_0 { pt3dadd( 226.324, 751.115, 50.7349, 0.4292 ) }
    dend_0 { pt3dadd( 225.268, 750.72, 51.2089, 0.3738 ) }
    dend_0 { pt3dadd( 224.169, 750.486, 51.6866, 0.3436 ) }
    dend_0 { pt3dadd( 223.059, 750.288, 52.1651, 0.3194 ) }
    dend_0 { pt3dadd( 221.966, 750.478, 52.6652, 0.357 ) }
    dend_0 { pt3dadd( 220.874, 750.753, 53.1703, 0.408 ) }
    dend_0 { pt3dadd( 219.78, 751.034, 53.615, 0.4382 ) }
    dend_0 { pt3dadd( 218.686, 751.315, 54.047, 0.464 ) }
    dend_0 { pt3dadd( 217.68, 751.823, 54.4522, 0.512 ) }
    dend_0 { pt3dadd( 216.693, 752.378, 54.852, 0.5644 ) }
    dend_0 { pt3dadd( 215.841, 753.119, 55.2258, 0.5464 ) }
    dend_0 { pt3dadd( 215.016, 753.896, 55.5943, 0.5144 ) }
    dend_0 { pt3dadd( 213.903, 754.01, 55.9191, 0.511 ) }
    dend_0 { pt3dadd( 212.768, 754.071, 56.2405, 0.5096 ) }
    dend_0 { pt3dadd( 211.629, 754.154, 56.3091, 0.533 ) }
    dend_0 { pt3dadd( 210.488, 754.239, 56.3587, 0.5584 ) }
    dend_0 { pt3dadd( 209.362, 754.046, 56.3186, 0.5042 ) }
    dend_0 { pt3dadd( 208.238, 753.838, 56.2741, 0.4462 ) }
    dend_0 { pt3dadd( 207.197, 753.367, 56.2128, 0.4672 ) }
    dend_0 { pt3dadd( 206.16, 752.885, 56.1504, 0.4918 ) }
    dend_0 { pt3dadd( 205.046, 752.626, 56.1246, 0.4754 ) }
    dend_0 { pt3dadd( 203.931, 752.373, 56.0997, 0.4576 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 43/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 382.546, 769.53, 58.2448, 2.5196 ) }
    apic_0 { pt3dadd( 383.04, 767.347, 58.9893, 1.2926 ) }
    apic_0 { pt3dadd( 383.481, 766.318, 59.3589, 1.1018 ) }
    apic_0 { pt3dadd( 384.025, 765.322, 59.731, 0.9878 ) }
    apic_0 { pt3dadd( 384.777, 764.511, 60.3442, 0.935 ) }
    apic_0 { pt3dadd( 385.582, 763.745, 61.0176, 0.8974 ) }
    apic_0 { pt3dadd( 385.754, 762.661, 61.5132, 0.9596 ) }
    apic_0 { pt3dadd( 385.847, 761.538, 61.9867, 1.0344 ) }
    apic_0 { pt3dadd( 385.86, 760.396, 62.0883, 1.0948 ) }
    apic_0 { pt3dadd( 385.866, 759.252, 62.1522, 1.1538 ) }
    apic_0 { pt3dadd( 386.191, 758.161, 62.0836, 1.2658 ) }
    apic_0 { pt3dadd( 386.546, 757.073, 62.0035, 1.3824 ) }
    apic_0 { pt3dadd( 386.57, 755.936, 62.2006, 1.2924 ) }
    apic_0 { pt3dadd( 386.568, 754.796, 62.4196, 1.1862 ) }
    apic_0 { pt3dadd( 386.688, 753.661, 62.6122, 1.1422 ) }
    apic_0 { pt3dadd( 386.814, 752.527, 62.8034, 1.1008 ) }
    apic_0 { pt3dadd( 387.102, 751.43, 63.1694, 1.1114 ) }
    apic_0 { pt3dadd( 387.394, 750.335, 63.539, 1.1232 ) }
    apic_0 { pt3dadd( 387.952, 749.361, 64.0783, 1.0308 ) }
    apic_0 { pt3dadd( 388.515, 748.39, 64.6198, 0.9372 ) }
    apic_0 { pt3dadd( 388.853, 747.311, 65.0415, 0.991 ) }
    apic_0 { pt3dadd( 389.188, 746.231, 65.462, 1.0468 ) }
    apic_0 { pt3dadd( 389.616, 745.174, 65.6986, 1.099 ) }
    apic_0 { pt3dadd( 390.044, 744.118, 65.935, 1.1514 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 391.148, 801.205, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 396.989, 815.021, 56.56, 1.0 ) }
    axon_1 { pt3dadd( 402.83, 828.837, 56.56, 1.0 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 70/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 373.367, 776.976, 59.9704, 0.6256 ) }
    dend_21 { pt3dadd( 373.014, 778.427, 60.4316, 0.5066 ) }
    dend_21 { pt3dadd( 372.743, 779.536, 60.5662, 0.5112 ) }
    dend_21 { pt3dadd( 372.406, 780.629, 60.6967, 0.6358 ) }
    dend_21 { pt3dadd( 372.062, 781.718, 60.8266, 0.7728 ) }
    dend_21 { pt3dadd( 371.806, 782.82, 61.241, 0.8168 ) }
    dend_21 { pt3dadd( 371.559, 783.921, 61.6848, 0.8512 ) }
    dend_21 { pt3dadd( 371.705, 785.015, 62.3647, 0.7742 ) }
    dend_21 { pt3dadd( 371.887, 786.108, 63.0661, 0.6872 ) }
    dend_21 { pt3dadd( 372.086, 787.209, 63.6303, 0.7072 ) }
    dend_21 { pt3dadd( 372.286, 788.313, 64.1833, 0.736 ) }
    dend_21 { pt3dadd( 372.409, 789.447, 64.3762, 0.694 ) }
    dend_21 { pt3dadd( 372.526, 790.583, 64.54, 0.646 ) }
    dend_21 { pt3dadd( 372.565, 791.726, 64.5929, 0.6908 ) }
    dend_21 { pt3dadd( 372.6, 792.869, 64.6394, 0.7406 ) }
    dend_21 { pt3dadd( 372.822, 793.991, 64.5938, 0.6856 ) }
    dend_21 { pt3dadd( 373.04, 795.113, 64.5481, 0.6308 ) }
    dend_21 { pt3dadd( 372.788, 796.229, 64.596, 0.6828 ) }
    dend_21 { pt3dadd( 372.553, 797.345, 64.6481, 0.7332 ) }
    dend_21 { pt3dadd( 372.707, 798.477, 64.8035, 0.7372 ) }
    dend_21 { pt3dadd( 372.952, 799.573, 64.9874, 0.7162 ) }
    dend_21 { pt3dadd( 373.617, 800.493, 65.3066, 0.576 ) }
    dend_21 { pt3dadd( 374.166, 801.461, 65.6057, 0.4652 ) }
    dend_21 { pt3dadd( 374.293, 802.594, 65.8325, 0.4604 ) }
    dend_21 { pt3dadd( 374.436, 803.724, 66.0596, 0.4648 ) }
    dend_21 { pt3dadd( 374.637, 804.847, 66.2878, 0.5016 ) }
    dend_21 { pt3dadd( 374.82, 805.972, 66.5064, 0.5202 ) }
    dend_21 { pt3dadd( 374.944, 807.107, 66.6929, 0.4744 ) }
    dend_21 { pt3dadd( 375.028, 808.243, 66.8959, 0.468 ) }
    dend_21 { pt3dadd( 374.979, 809.38, 67.1566, 0.5964 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( 375.015, 810.508, 67.429, 0.7136 ) }
    dend_21 { pt3dadd( 375.322, 811.603, 67.7398, 0.7948 ) }
    dend_21 { pt3dadd( 375.557, 812.707, 68.052, 0.8424 ) }
    dend_21 { pt3dadd( 375.559, 813.844, 68.369, 0.7846 ) }
    dend_21 { pt3dadd( 375.588, 814.98, 68.675, 0.7258 ) }
    dend_21 { pt3dadd( 375.695, 816.112, 68.9458, 0.6632 ) }
    dend_21 { pt3dadd( 375.775, 817.246, 69.2434, 0.6014 ) }
    dend_21 { pt3dadd( 375.764, 818.38, 69.6237, 0.5422 ) }
    dend_21 { pt3dadd( 375.774, 819.512, 70.0022, 0.4876 ) }
    dend_21 { pt3dadd( 375.85, 820.644, 70.3755, 0.4472 ) }
    dend_21 { pt3dadd( 376.025, 821.752, 70.7109, 0.4462 ) }
    dend_21 { pt3dadd( 376.496, 822.79, 70.9335, 0.5628 ) }
    dend_21 { pt3dadd( 377.03, 823.792, 71.1374, 0.6966 ) }
    dend_21 { pt3dadd( 377.713, 824.707, 71.297, 0.8716 ) }
    dend_21 { pt3dadd( 378.424, 825.601, 71.4428, 1.0302 ) }
    dend_21 { pt3dadd( 379.198, 826.442, 71.5565, 1.1496 ) }
    dend_21 { pt3dadd( 379.978, 827.277, 71.6184, 1.2276 ) }
    dend_21 { pt3dadd( 380.773, 828.098, 71.5585, 1.2082 ) }
    dend_21 { pt3dadd( 381.555, 828.933, 71.4885, 1.1738 ) }
    dend_21 { pt3dadd( 382.303, 829.798, 71.3947, 1.104 ) }
    dend_21 { pt3dadd( 383.081, 830.632, 71.2558, 1.0502 ) }
    dend_21 { pt3dadd( 383.926, 831.396, 71.0136, 1.032 ) }
    dend_21 { pt3dadd( 384.771, 832.163, 70.7871, 1.0034 ) }
    dend_21 { pt3dadd( 385.607, 832.938, 70.5953, 0.951 ) }
    dend_21 { pt3dadd( 386.48, 833.668, 70.3707, 0.9034 ) }
    dend_21 { pt3dadd( 387.431, 834.292, 70.0722, 0.8664 ) }
    dend_21 { pt3dadd( 388.342, 834.966, 69.7788, 0.8104 ) }
    dend_21 { pt3dadd( 389.169, 835.748, 69.4971, 0.7136 ) }
    dend_21 { pt3dadd( 389.895, 836.609, 69.3524, 0.6742 ) }
    dend_21 { pt3dadd( 390.422, 837.623, 69.4694, 0.744 ) }
    dend_21 { pt3dadd( 391.02, 838.59, 69.4882, 0.7834 ) }
    dend_21 { pt3dadd( 391.745, 839.473, 69.3294, 0.768 ) }
    dend_21 { pt3dadd( 392.559, 840.251, 69.1256, 0.787 ) }
    dend_21 { pt3dadd( 393.528, 840.848, 68.8442, 0.866 ) }
    dend_21 { pt3dadd( 394.516, 841.409, 68.542, 0.9338 ) }
    dend_21 { pt3dadd( 395.536, 841.91, 68.206, 0.9836 ) }
    dend_21 { pt3dadd( 396.42, 842.562, 67.7796, 1.0116 ) }
    dend_21 { pt3dadd( 397.085, 843.463, 67.2042, 1.004 ) }
    dend_21 { pt3dadd( 397.562, 844.447, 66.6243, 0.8988 ) }
    dend_21 { pt3dadd( 397.787, 845.543, 66.0386, 0.6628 ) }
    dend_21 { pt3dadd( 398.097, 846.625, 65.7236, 0.5608 ) }
    dend_21 { pt3dadd( 398.51, 847.693, 65.735, 0.6206 ) }
    dend_21 { pt3dadd( 399.028, 848.704, 65.728, 0.6612 ) }
    dend_21 { pt3dadd( 399.676, 849.648, 65.6986, 0.6792 ) }
    dend_21 { pt3dadd( 400.334, 850.582, 65.6222, 0.6802 ) }
    dend_21 { pt3dadd( 401.005, 851.507, 65.492, 0.662 ) }
    dend_21 { pt3dadd( 401.687, 852.424, 65.366, 0.625 ) }
    dend_21 { pt3dadd( 402.378, 853.335, 65.2439, 0.5666 ) }
    dend_21 { pt3dadd( 402.996, 854.292, 65.1977, 0.4988 ) }
    dend_21 { pt3dadd( 403.539, 855.299, 65.2277, 0.4218 ) }
    dend_21 { pt3dadd( 404.198, 856.224, 65.214, 0.4286 ) }
    dend_21 { pt3dadd( 404.958, 857.08, 65.1616, 0.5084 ) }
    dend_21 { pt3dadd( 405.698, 857.951, 65.0462, 0.545 ) }
    dend_21 { pt3dadd( 406.421, 858.834, 64.8785, 0.545 ) }
    dend_21 { pt3dadd( 407.224, 859.641, 64.7214, 0.5298 ) }
    dend_21 { pt3dadd( 408.092, 860.382, 64.5725, 0.5016 ) }
    dend_21 { pt3dadd( 409.011, 861.056, 64.3812, 0.5362 ) }
    dend_21 { pt3dadd( 409.97, 861.673, 64.1561, 0.621 ) }
    dend_21 { pt3dadd( 410.912, 862.316, 63.9727, 0.652 ) }
    dend_21 { pt3dadd( 411.842, 862.979, 63.8226, 0.6408 ) }
    dend_21 { pt3dadd( 412.553, 863.838, 63.609, 0.6814 ) }
    dend_21 { pt3dadd( 413.111, 864.83, 63.3522, 0.7572 ) }
    dend_21 { pt3dadd( 413.801, 865.725, 63.042, 0.7664 ) }
    dend_21 { pt3dadd( 414.564, 866.566, 62.7015, 0.738 ) }
    dend_21 { pt3dadd( 415.418, 867.306, 62.3476, 0.7256 ) }
    dend_21 { pt3dadd( 416.318, 868.0, 61.987, 0.7212 ) }
    dend_21 { pt3dadd( 417.253, 868.648, 61.749, 0.6556 ) }
    dend_21 { pt3dadd( 418.206, 869.276, 61.5692, 0.561 ) }
    dend_21 { pt3dadd( 418.99, 870.091, 61.5306, 0.4822 ) }
    dend_21 { pt3dadd( 419.695, 870.992, 61.5566, 0.4106 ) }
    dend_21 { pt3dadd( 420.475, 871.824, 61.6599, 0.4138 ) }
    dend_21 { pt3dadd( 421.289, 872.626, 61.7968, 0.4496 ) }
    dend_21 { pt3dadd( 422.193, 873.308, 62.1135, 0.502 ) }
    dend_21 { pt3dadd( 423.13, 873.946, 62.4949, 0.5602 ) }
    dend_21 { pt3dadd( 423.739, 874.855, 63.114, 0.622 ) }
    dend_21 { pt3dadd( 424.262, 875.833, 63.7949, 0.6848 ) }
    dend_21 { pt3dadd( 424.705, 876.849, 64.482, 0.7354 ) }
    dend_21 { pt3dadd( 425.13, 877.872, 65.1708, 0.783 ) }
    dend_21 { pt3dadd( 425.235, 878.831, 66.5893, 0.6934 ) }
    dend_21 { pt3dadd( 425.628, 879.472, 68.0935, 0.6192 ) }
    dend_21 { pt3dadd( 426.614, 879.608, 69.4764, 0.6206 ) }
    dend_21 { pt3dadd( 427.54, 879.982, 70.6376, 0.6118 ) }
    dend_21 { pt3dadd( 428.392, 880.654, 71.5218, 0.5904 ) }
    dend_21 { pt3dadd( 429.144, 881.429, 72.3506, 0.5774 ) }
    dend_21 { pt3dadd( 429.772, 882.334, 73.1114, 0.5746 ) }
    dend_21 { pt3dadd( 430.288, 883.309, 73.7559, 0.5274 ) }
    dend_21 { pt3dadd( 430.677, 884.365, 74.2664, 0.429 ) }
    dend_21 { pt3dadd( 431.225, 885.334, 74.7485, 0.3782 ) }
    dend_21 { pt3dadd( 431.919, 886.224, 75.2044, 0.3714 ) }
    dend_21 { pt3dadd( 432.529, 887.171, 75.6498, 0.3626 ) }
    dend_21 { pt3dadd( 433.089, 888.152, 76.0892, 0.3528 ) }
    dend_21 { pt3dadd( 433.924, 888.893, 76.4613, 0.3974 ) }
    dend_21 { pt3dadd( 434.841, 889.561, 76.8135, 0.4582 ) }
    dend_21 { pt3dadd( 435.43, 890.514, 76.932, 0.4428 ) }
    dend_21 { pt3dadd( 435.935, 891.54, 76.9899, 0.4078 ) }
    dend_21 { pt3dadd( 436.509, 892.525, 76.8219, 0.3876 ) }
    dend_21 { pt3dadd( 437.101, 893.501, 76.6002, 0.371 ) }
    dend_21 { pt3dadd( 437.905, 894.267, 76.0586, 0.3056 ) }
    dend_21 { pt3dadd( 438.759, 894.984, 75.4421, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 99/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 373.367, 776.976, 59.9704, 0.6256 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_20 { pt3dadd( 372.968, 777.402, 60.4621, 0.5264 ) }
    dend_20 { pt3dadd( 371.996, 777.959, 60.643, 0.5358 ) }
    dend_20 { pt3dadd( 370.967, 778.459, 60.6483, 0.5916 ) }
    dend_20 { pt3dadd( 370.009, 779.08, 60.59, 0.7132 ) }
    dend_20 { pt3dadd( 369.064, 779.724, 60.5192, 0.8478 ) }
    dend_20 { pt3dadd( 367.947, 779.92, 60.3705, 0.7772 ) }
    dend_20 { pt3dadd( 366.816, 780.073, 60.2146, 0.6872 ) }
    dend_20 { pt3dadd( 365.673, 780.093, 60.1709, 0.7826 ) }
    dend_20 { pt3dadd( 364.529, 780.107, 60.1317, 0.8858 ) }
    dend_20 { pt3dadd( 363.406, 780.313, 60.2916, 0.8898 ) }
    dend_20 { pt3dadd( 362.284, 780.528, 60.4593, 0.89 ) }
    dend_20 { pt3dadd( 361.151, 780.653, 60.6483, 0.7378 ) }
    dend_20 { pt3dadd( 360.014, 780.774, 60.8381, 0.5798 ) }
    dend_20 { pt3dadd( 358.912, 781.066, 61.0025, 0.5794 ) }
    dend_20 { pt3dadd( 357.809, 781.365, 61.1657, 0.5852 ) }
    dend_20 { pt3dadd( 356.695, 781.615, 61.3388, 0.5928 ) }
    dend_20 { pt3dadd( 355.58, 781.863, 61.5121, 0.6006 ) }
    dend_20 { pt3dadd( 354.44, 781.89, 61.6594, 0.484 ) }
    dend_20 { pt3dadd( 353.297, 781.909, 61.8061, 0.3632 ) }
    dend_20 { pt3dadd( 352.175, 782.123, 61.8929, 0.3736 ) }
    dend_20 { pt3dadd( 351.055, 782.351, 61.9772, 0.389 ) }
    dend_20 { pt3dadd( 350.103, 782.984, 62.0306, 0.435 ) }
    dend_20 { pt3dadd( 349.129, 783.57, 62.1149, 0.4828 ) }
    dend_20 { pt3dadd( 348.034, 783.884, 62.3764, 0.5424 ) }
    dend_20 { pt3dadd( 346.952, 784.227, 62.6545, 0.5892 ) }
    dend_20 { pt3dadd( 345.946, 784.748, 63.0286, 0.5622 ) }
    dend_20 { pt3dadd( 344.944, 785.277, 63.4088, 0.5408 ) }
    dend_20 { pt3dadd( 343.963, 785.843, 63.8212, 0.5486 ) }
    dend_20 { pt3dadd( 343.067, 786.484, 64.2841, 0.5486 ) }
    dend_20 { pt3dadd( 342.541, 787.461, 64.9709, 0.5142 ) }
    dend_20 { pt3dadd( 341.969, 788.383, 65.7653, 0.4862 ) }
    dend_20 { pt3dadd( 341.224, 789.1, 66.9634, 0.483 ) }
    dend_20 { pt3dadd( 340.473, 789.826, 68.1038, 0.4464 ) }
    dend_20 { pt3dadd( 339.707, 790.566, 69.1239, 0.3412 ) }
    dend_20 { pt3dadd( 339.188, 791.481, 69.9541, 0.2978 ) }
    dend_20 { pt3dadd( 338.887, 792.552, 70.616, 0.3092 ) }
    dend_20 { pt3dadd( 338.466, 793.58, 71.2155, 0.3208 ) }
    dend_20 { pt3dadd( 337.951, 794.577, 71.7668, 0.3328 ) }
    dend_20 { pt3dadd( 337.186, 795.356, 72.27, 0.3224 ) }
    dend_20 { pt3dadd( 336.255, 795.992, 72.7409, 0.2972 ) }
    dend_20 { pt3dadd( 335.639, 796.862, 73.3771, 0.2986 ) }
    dend_20 { pt3dadd( 335.23, 797.886, 74.1205, 0.3172 ) }
    dend_20 { pt3dadd( 334.854, 798.93, 74.8098, 0.3258 ) }
    dend_20 { pt3dadd( 334.502, 799.984, 75.4645, 0.3278 ) }
    dend_20 { pt3dadd( 333.629, 800.413, 76.0469, 0.3098 ) }
    dend_20 { pt3dadd( 332.516, 800.553, 76.5962, 0.2826 ) }
    dend_20 { pt3dadd( 331.41, 800.595, 77.2794, 0.2746 ) }
    dend_20 { pt3dadd( 330.306, 800.595, 78.02, 0.2746 ) }
    dend_20 { pt3dadd( 329.27, 800.56, 79.1664, 0.2748 ) }
    dend_20 { pt3dadd( 328.262, 800.511, 80.4838, 0.2748 ) }
    dend_20 { pt3dadd( 327.351, 800.19, 81.9168, 0.2754 ) }
    dend_20 { pt3dadd( 326.48, 799.761, 83.3969, 0.276 ) }
    dend_20 { pt3dadd( 325.517, 799.482, 84.7333, 0.2778 ) }
    dend_20 { pt3dadd( 324.539, 799.229, 86.044, 0.2798 ) }
    dend_20 { pt3dadd( 323.712, 798.703, 87.481, 0.2888 ) }
    dend_20 { pt3dadd( 322.871, 798.307, 89.0011, 0.3048 ) }
    dend_20 { pt3dadd( 321.977, 798.307, 90.7469, 0.3396 ) }
    dend_20 { pt3dadd( 321.066, 798.31, 92.4378, 0.385 ) }
    dend_20 { pt3dadd( 320.111, 798.316, 93.9778, 0.46 ) }
    dend_20 { pt3dadd( 319.217, 798.49, 95.5287, 0.4816 ) }
    dend_20 { pt3dadd( 318.482, 799.082, 97.1082, 0.3678 ) }
    dend_20 { pt3dadd( 318.296, 799.705, 98.5589, 0.291 ) }
    dend_20 { pt3dadd( 319.07, 800.384, 99.7864, 0.2784 ) }
    dend_20 { pt3dadd( 319.79, 800.944, 101.433, 0.2746 ) }
    dend_20 { pt3dadd( 320.488, 801.452, 103.27, 0.2746 ) }
    dend_20 { pt3dadd( 321.09, 802.195, 104.775, 0.2746 ) }
    dend_20 { pt3dadd( 321.669, 802.99, 106.203, 0.2746 ) }
    dend_20 { pt3dadd( 322.456, 803.213, 108.04, 0.2744 ) }
    dend_20 { pt3dadd( 323.282, 803.327, 109.956, 0.2742 ) }
    dend_20 { pt3dadd( 324.046, 803.563, 111.955, 0.2736 ) }
    dend_20 { pt3dadd( 324.799, 803.818, 113.967, 0.2728 ) }
    dend_20 { pt3dadd( 325.203, 804.753, 115.059, 0.2706 ) }
    dend_20 { pt3dadd( 325.572, 805.756, 116.059, 0.2684 ) }
    dend_20 { pt3dadd( 325.826, 806.856, 116.482, 0.2614 ) }
    dend_20 { pt3dadd( 326.079, 807.96, 116.891, 0.2544 ) }
    dend_20 { pt3dadd( 326.287, 809.084, 117.0, 0.2416 ) }
    dend_20 { pt3dadd( 326.494, 810.208, 117.104, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 77/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 363.817, 771.733, 57.7584, 0.9168 ) }
    dend_17 { pt3dadd( 361.917, 771.786, 57.9146, 0.8026 ) }
    dend_17 { pt3dadd( 360.774, 771.764, 58.0278, 0.6726 ) }
    dend_17 { pt3dadd( 359.684, 771.472, 58.3178, 0.5762 ) }
    dend_17 { pt3dadd( 358.61, 771.106, 58.658, 0.4892 ) }
    dend_17 { pt3dadd( 357.479, 770.997, 58.7871, 0.4042 ) }
    dend_17 { pt3dadd( 356.337, 770.942, 58.8722, 0.3194 ) }
    dend_17 { pt3dadd( 355.21, 771.094, 58.7227, 0.3366 ) }
    dend_17 { pt3dadd( 354.085, 771.287, 58.5256, 0.3744 ) }
    dend_17 { pt3dadd( 353.113, 771.799, 57.8665, 0.4506 ) }
    dend_17 { pt3dadd( 352.169, 772.369, 57.1214, 0.5338 ) }
    dend_17 { pt3dadd( 351.185, 772.843, 56.2943, 0.5486 ) }
    dend_17 { pt3dadd( 350.194, 773.3, 55.4534, 0.5518 ) }
    dend_17 { pt3dadd( 349.099, 773.497, 54.889, 0.5258 ) }
    dend_17 { pt3dadd( 347.984, 773.652, 54.3696, 0.4952 ) }
    dend_17 { pt3dadd( 346.847, 773.732, 54.2027, 0.5576 ) }
    dend_17 { pt3dadd( 345.707, 773.803, 54.0848, 0.633 ) }
    dend_17 { pt3dadd( 344.6, 774.078, 53.9448, 0.603 ) }
    dend_17 { pt3dadd( 343.499, 774.383, 53.802, 0.5586 ) }
    dend_17 { pt3dadd( 342.421, 774.752, 53.5805, 0.602 ) }
    dend_17 { pt3dadd( 341.344, 775.13, 53.3487, 0.6566 ) }
    dend_17 { pt3dadd( 340.234, 775.39, 53.1958, 0.7838 ) }
    dend_17 { pt3dadd( 339.117, 775.635, 53.0522, 0.9194 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_17 { pt3dadd( 338.009, 775.903, 52.848, 0.8592 ) }
    dend_17 { pt3dadd( 336.9, 776.173, 52.6372, 0.776 ) }
    dend_17 { pt3dadd( 335.82, 776.542, 52.4538, 0.6578 ) }
    dend_17 { pt3dadd( 334.744, 776.92, 52.2738, 0.5356 ) }
    dend_17 { pt3dadd( 333.688, 777.359, 52.2281, 0.6268 ) }
    dend_17 { pt3dadd( 332.634, 777.806, 52.1965, 0.741 ) }
    dend_17 { pt3dadd( 331.554, 778.18, 52.3174, 0.592 ) }
    dend_17 { pt3dadd( 330.473, 778.547, 52.4538, 0.4168 ) }
    dend_17 { pt3dadd( 329.438, 779.03, 52.603, 0.3904 ) }
    dend_17 { pt3dadd( 328.408, 779.525, 52.7534, 0.3786 ) }
    dend_17 { pt3dadd( 327.368, 779.996, 52.92, 0.4378 ) }
    dend_17 { pt3dadd( 326.327, 780.466, 53.0883, 0.5038 ) }
    dend_17 { pt3dadd( 325.309, 780.974, 53.359, 0.4392 ) }
    dend_17 { pt3dadd( 324.292, 781.487, 53.6385, 0.3636 ) }
    dend_17 { pt3dadd( 323.347, 782.109, 54.0341, 0.4108 ) }
    dend_17 { pt3dadd( 322.405, 782.739, 54.4365, 0.4652 ) }
    dend_17 { pt3dadd( 321.343, 783.105, 54.9315, 0.559 ) }
    dend_17 { pt3dadd( 320.273, 783.456, 55.4313, 0.6548 ) }
    dend_17 { pt3dadd( 319.2, 783.791, 55.937, 0.7946 ) }
    dend_17 { pt3dadd( 318.126, 784.126, 56.443, 0.936 ) }
    dend_17 { pt3dadd( 317.12, 784.63, 56.9598, 0.8496 ) }
    dend_17 { pt3dadd( 316.117, 785.138, 57.4773, 0.7554 ) }
    dend_17 { pt3dadd( 315.172, 785.748, 57.9813, 0.7674 ) }
    dend_17 { pt3dadd( 314.227, 786.359, 58.4853, 0.7796 ) }
    dend_17 { pt3dadd( 313.276, 786.975, 58.879, 0.7232 ) }
    dend_17 { pt3dadd( 312.326, 787.59, 59.2726, 0.6668 ) }
    dend_17 { pt3dadd( 311.395, 788.223, 59.7772, 0.7196 ) }
    dend_17 { pt3dadd( 310.462, 788.851, 60.2812, 0.7718 ) }
    dend_17 { pt3dadd( 309.348, 789.048, 60.6976, 0.7644 ) }
    dend_17 { pt3dadd( 308.235, 789.236, 61.1262, 0.7586 ) }
    dend_17 { pt3dadd( 307.13, 789.249, 61.8565, 0.7872 ) }
    dend_17 { pt3dadd( 306.027, 789.264, 62.5954, 0.817 ) }
    dend_17 { pt3dadd( 304.949, 789.299, 63.53, 0.8756 ) }
    dend_17 { pt3dadd( 303.874, 789.351, 64.4605, 0.9302 ) }
    dend_17 { pt3dadd( 302.852, 789.739, 65.2912, 0.8978 ) }
    dend_17 { pt3dadd( 301.832, 790.128, 66.1259, 0.8688 ) }
    dend_17 { pt3dadd( 300.82, 790.515, 67.0256, 0.8912 ) }
    dend_17 { pt3dadd( 299.822, 790.926, 67.919, 0.9048 ) }
    dend_17 { pt3dadd( 298.999, 791.651, 68.721, 0.7854 ) }
    dend_17 { pt3dadd( 298.184, 792.384, 69.5092, 0.676 ) }
    dend_17 { pt3dadd( 297.442, 793.221, 70.103, 0.711 ) }
    dend_17 { pt3dadd( 296.719, 794.07, 70.7003, 0.7316 ) }
    dend_17 { pt3dadd( 296.194, 795.054, 71.3342, 0.5842 ) }
    dend_17 { pt3dadd( 295.633, 796.0, 71.9855, 0.4514 ) }
    dend_17 { pt3dadd( 294.712, 796.591, 72.8042, 0.4574 ) }
    dend_17 { pt3dadd( 293.789, 797.177, 73.6324, 0.4612 ) }
    dend_17 { pt3dadd( 292.851, 797.72, 74.5248, 0.4496 ) }
    dend_17 { pt3dadd( 291.898, 798.239, 75.395, 0.448 ) }
    dend_17 { pt3dadd( 290.86, 798.61, 76.1351, 0.5042 ) }
    dend_17 { pt3dadd( 289.862, 799.043, 76.9149, 0.5386 ) }
    dend_17 { pt3dadd( 289.051, 799.749, 77.8722, 0.4746 ) }
    dend_17 { pt3dadd( 288.301, 800.527, 78.7346, 0.4412 ) }
    dend_17 { pt3dadd( 287.642, 801.416, 79.4483, 0.455 ) }
    dend_17 { pt3dadd( 287.197, 802.405, 80.0666, 0.503 ) }
    dend_17 { pt3dadd( 287.0, 803.514, 80.5736, 0.5906 ) }
    dend_17 { pt3dadd( 286.565, 804.517, 81.0214, 0.6274 ) }
    dend_17 { pt3dadd( 285.859, 805.404, 81.4013, 0.6066 ) }
    dend_17 { pt3dadd( 285.125, 806.264, 81.8236, 0.5694 ) }
    dend_17 { pt3dadd( 284.366, 807.099, 82.2836, 0.5176 ) }
    dend_17 { pt3dadd( 283.586, 807.913, 82.7464, 0.4382 ) }
    dend_17 { pt3dadd( 282.788, 808.71, 83.2112, 0.3344 ) }
    dend_17 { pt3dadd( 281.981, 809.5, 83.657, 0.2826 ) }
    dend_17 { pt3dadd( 281.169, 810.286, 84.0857, 0.2772 ) }
    dend_17 { pt3dadd( 280.341, 811.062, 84.446, 0.2746 ) }
    dend_17 { pt3dadd( 279.5, 811.827, 84.7454, 0.2746 ) }
    dend_17 { pt3dadd( 278.627, 812.556, 85.0385, 0.2746 ) }
    dend_17 { pt3dadd( 277.728, 813.254, 85.3269, 0.2746 ) }
    dend_17 { pt3dadd( 276.775, 813.855, 85.7139, 0.2746 ) }
    dend_17 { pt3dadd( 275.774, 814.376, 86.1857, 0.2746 ) }
    dend_17 { pt3dadd( 274.728, 814.757, 86.7336, 0.2746 ) }
    dend_17 { pt3dadd( 273.642, 815.02, 87.3471, 0.2746 ) }
    dend_17 { pt3dadd( 272.54, 815.129, 87.9603, 0.2746 ) }
    dend_17 { pt3dadd( 271.423, 815.129, 88.5735, 0.2748 ) }
    dend_17 { pt3dadd( 270.307, 815.129, 89.178, 0.275 ) }
    dend_17 { pt3dadd( 269.189, 815.129, 89.7761, 0.2754 ) }
    dend_17 { pt3dadd( 268.071, 815.129, 90.3759, 0.2764 ) }
    dend_17 { pt3dadd( 266.955, 815.129, 90.977, 0.2776 ) }
    dend_17 { pt3dadd( 265.837, 815.129, 91.5762, 0.2806 ) }
    dend_17 { pt3dadd( 264.719, 815.129, 92.1738, 0.2848 ) }
    dend_17 { pt3dadd( 263.658, 814.873, 92.8088, 0.3116 ) }
    dend_17 { pt3dadd( 262.636, 814.435, 93.4704, 0.3548 ) }
    dend_17 { pt3dadd( 261.847, 813.703, 94.1968, 0.335 ) }
    dend_17 { pt3dadd( 261.158, 812.843, 94.9511, 0.2876 ) }
    dend_17 { pt3dadd( 260.816, 811.979, 96.4527, 0.2556 ) }
    dend_17 { pt3dadd( 260.587, 811.115, 98.1999, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 85/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 363.817, 771.733, 57.7584, 0.9168 ) }
    dend_16 { pt3dadd( 362.487, 771.321, 56.6818, 0.7422 ) }
    dend_16 { pt3dadd( 361.48, 770.904, 55.8667, 0.6866 ) }
    dend_16 { pt3dadd( 360.613, 770.185, 55.3734, 0.7274 ) }
    dend_16 { pt3dadd( 359.739, 769.477, 54.8713, 0.7684 ) }
    dend_16 { pt3dadd( 358.781, 768.903, 54.2654, 0.8104 ) }
    dend_16 { pt3dadd( 357.819, 768.339, 53.6486, 0.8524 ) }
    dend_16 { pt3dadd( 356.806, 767.905, 52.8998, 0.894 ) }
    dend_16 { pt3dadd( 355.79, 767.479, 52.1514, 0.924 ) }
    dend_16 { pt3dadd( 354.746, 767.121, 51.4058, 0.8286 ) }
    dend_16 { pt3dadd( 353.703, 766.764, 50.6593, 0.7366 ) }
    dend_16 { pt3dadd( 352.653, 766.433, 49.9016, 0.6826 ) }
    dend_16 { pt3dadd( 351.609, 766.163, 49.1053, 0.6456 ) }
    dend_16 { pt3dadd( 350.641, 766.526, 47.913, 0.787 ) }
    dend_16 { pt3dadd( 349.688, 766.907, 46.6883, 0.8972 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_16 { pt3dadd( 348.84, 767.407, 45.2575, 0.8074 ) }
    dend_16 { pt3dadd( 347.977, 767.797, 43.8318, 0.7396 ) }
    dend_16 { pt3dadd( 347.019, 767.541, 42.4374, 0.8024 ) }
    dend_16 { pt3dadd( 346.132, 767.182, 41.0124, 0.8438 ) }
    dend_16 { pt3dadd( 345.498, 766.464, 39.4808, 0.8094 ) }
    dend_16 { pt3dadd( 344.911, 766.148, 37.6866, 0.7644 ) }
    dend_16 { pt3dadd( 344.413, 766.583, 35.4021, 0.6998 ) }
    dend_16 { pt3dadd( 344.007, 766.473, 33.201, 0.6184 ) }
    dend_16 { pt3dadd( 343.698, 765.789, 31.0873, 0.5192 ) }
    dend_16 { pt3dadd( 343.259, 765.222, 28.9164, 0.4588 ) }
    dend_16 { pt3dadd( 342.851, 764.685, 26.7548, 0.4202 ) }
    dend_16 { pt3dadd( 343.534, 764.099, 25.025, 0.5564 ) }
    dend_16 { pt3dadd( 344.225, 763.507, 23.3341, 0.6548 ) }
    dend_16 { pt3dadd( 344.949, 762.886, 21.7858, 0.6142 ) }
    dend_16 { pt3dadd( 345.805, 762.536, 20.3449, 0.5918 ) }
    dend_16 { pt3dadd( 346.814, 762.492, 19.0267, 0.59 ) }
    dend_16 { pt3dadd( 347.61, 762.888, 17.5056, 0.6698 ) }
    dend_16 { pt3dadd( 348.294, 763.518, 15.8759, 0.7932 ) }
    dend_16 { pt3dadd( 348.42, 764.414, 14.2033, 0.7068 ) }
    dend_16 { pt3dadd( 348.51, 765.326, 12.5279, 0.607 ) }
    dend_16 { pt3dadd( 348.076, 764.947, 10.2185, 0.6438 ) }
    dend_16 { pt3dadd( 347.618, 764.513, 7.882, 0.6864 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 22/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 386.895, 778.138, 55.7869, 0.875 ) }
    dend_10 { pt3dadd( 387.34, 777.925, 56.0398, 0.7726 ) }
    dend_10 { pt3dadd( 388.458, 777.859, 56.572, 0.7652 ) }
    dend_10 { pt3dadd( 389.58, 777.809, 57.1026, 0.7662 ) }
    dend_10 { pt3dadd( 390.542, 778.414, 57.3524, 0.7478 ) }
    dend_10 { pt3dadd( 391.502, 779.029, 57.5985, 0.729 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 386.895, 778.138, 55.7869, 0.875 ) }
    dend_5 { pt3dadd( 386.976, 779.255, 53.2798, 0.5962 ) }
    dend_5 { pt3dadd( 387.052, 780.241, 51.8722, 0.6638 ) }
    dend_5 { pt3dadd( 387.377, 781.266, 50.9222, 0.8364 ) }
    dend_5 { pt3dadd( 387.705, 782.292, 49.9789, 1.0104 ) }
    dend_5 { pt3dadd( 388.44, 783.09, 49.0871, 1.0234 ) }
    dend_5 { pt3dadd( 389.176, 783.886, 48.1956, 1.0354 ) }
    dend_5 { pt3dadd( 389.974, 784.678, 47.6776, 1.0218 ) }
    dend_5 { pt3dadd( 390.771, 785.47, 47.1604, 1.0084 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 380.763, 778.541, 25.9748, 0.5074 ) }
    dend_3 { pt3dadd( 382.22, 778.413, 25.1089, 0.6156 ) }
    dend_3 { pt3dadd( 383.326, 778.58, 24.5284, 0.7962 ) }
    dend_3 { pt3dadd( 384.453, 778.68, 24.1118, 0.8122 ) }
    dend_3 { pt3dadd( 385.582, 778.767, 23.7254, 0.7976 ) }
    dend_3 { pt3dadd( 386.706, 778.871, 23.2807, 0.7904 ) }
    dend_3 { pt3dadd( 387.831, 778.976, 22.8297, 0.7836 ) }
    dend_3 { pt3dadd( 388.941, 779.2, 22.4356, 0.752 ) }
    dend_3 { pt3dadd( 390.049, 779.435, 22.0468, 0.7178 ) }
    dend_3 { pt3dadd( 391.184, 779.495, 21.7643, 0.7394 ) }
    dend_3 { pt3dadd( 392.322, 779.543, 21.4895, 0.765 ) }
    dend_3 { pt3dadd( 393.443, 779.741, 21.238, 0.682 ) }
    dend_3 { pt3dadd( 394.565, 779.947, 20.9876, 0.5938 ) }
    dend_3 { pt3dadd( 395.686, 780.16, 21.1501, 0.5256 ) }
    dend_3 { pt3dadd( 396.808, 780.373, 21.3178, 0.4576 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 380.763, 778.541, 25.9748, 0.5074 ) }
    dend_2 { pt3dadd( 380.822, 779.081, 24.7348, 0.5358 ) }
    dend_2 { pt3dadd( 380.814, 780.094, 23.6206, 0.6136 ) }
    dend_2 { pt3dadd( 380.755, 781.199, 22.9192, 0.709 ) }
    dend_2 { pt3dadd( 380.627, 782.31, 22.3431, 0.8326 ) }
    dend_2 { pt3dadd( 380.467, 783.423, 21.8242, 0.969 ) }
    dend_2 { pt3dadd( 380.084, 784.472, 21.3531, 0.9894 ) }
    dend_2 { pt3dadd( 379.601, 785.492, 20.9036, 0.9574 ) }
    dend_2 { pt3dadd( 378.988, 786.436, 20.4398, 0.7972 ) }
    dend_2 { pt3dadd( 378.337, 787.357, 19.9719, 0.6004 ) }
    dend_2 { pt3dadd( 377.811, 788.338, 19.3512, 0.554 ) }
    dend_2 { pt3dadd( 377.312, 789.333, 18.6962, 0.5416 ) }
    dend_2 { pt3dadd( 377.003, 790.403, 18.1194, 0.4914 ) }
    dend_2 { pt3dadd( 376.734, 791.492, 17.5598, 0.433 ) }
    dend_2 { pt3dadd( 376.567, 792.587, 16.8731, 0.509 ) }
    dend_2 { pt3dadd( 376.421, 793.684, 16.1593, 0.6136 ) }
    dend_2 { pt3dadd( 376.218, 794.753, 15.2995, 0.6304 ) }
    dend_2 { pt3dadd( 376.003, 795.816, 14.4091, 0.6288 ) }
    dend_2 { pt3dadd( 375.556, 796.81, 13.595, 0.554 ) }
    dend_2 { pt3dadd( 375.065, 797.79, 12.795, 0.4658 ) }
    dend_2 { pt3dadd( 374.379, 798.64, 12.0009, 0.4598 ) }
    dend_2 { pt3dadd( 373.657, 799.466, 11.2079, 0.4692 ) }
    dend_2 { pt3dadd( 372.748, 800.035, 10.2693, 0.5238 ) }
    dend_2 { pt3dadd( 371.817, 800.572, 9.3133, 0.5836 ) }
    dend_2 { pt3dadd( 371.505, 801.552, 8.2085, 0.5852 ) }
    dend_2 { pt3dadd( 371.242, 802.568, 7.0918, 0.582 ) }
    dend_2 { pt3dadd( 371.242, 803.671, 6.3508, 0.6342 ) }
    dend_2 { pt3dadd( 371.242, 804.774, 5.6101, 0.6864 ) }
    // Section: apic_10, id: apic_10, parent: apic_0 (entry count 80/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 390.044, 744.118, 65.935, 1.1514 ) }
    apic_10 { pt3dadd( 391.791, 744.002, 65.1879, 0.5302 ) }
    apic_10 { pt3dadd( 392.905, 743.832, 64.7906, 0.3284 ) }
    apic_10 { pt3dadd( 393.997, 743.511, 64.5291, 0.398 ) }
    apic_10 { pt3dadd( 395.106, 743.327, 64.2376, 0.443 ) }
    apic_10 { pt3dadd( 396.24, 743.363, 63.8994, 0.4494 ) }
    apic_10 { pt3dadd( 397.365, 743.491, 63.5718, 0.43 ) }
    apic_10 { pt3dadd( 398.476, 743.73, 63.2573, 0.3792 ) }
    apic_10 { pt3dadd( 399.592, 743.771, 63.0022, 0.3748 ) }
    apic_10 { pt3dadd( 400.716, 743.567, 62.8191, 0.427 ) }
    apic_10 { pt3dadd( 401.825, 743.616, 62.7043, 0.4992 ) }
    apic_10 { pt3dadd( 402.918, 743.955, 62.6674, 0.5946 ) }
    apic_10 { pt3dadd( 403.985, 744.359, 62.5864, 0.6476 ) }
    apic_10 { pt3dadd( 405.025, 744.832, 62.4571, 0.6552 ) }
    apic_10 { pt3dadd( 406.072, 745.29, 62.3658, 0.6276 ) }
    apic_10 { pt3dadd( 407.128, 745.73, 62.3154, 0.5618 ) }
    apic_10 { pt3dadd( 408.171, 746.197, 62.214, 0.5444 ) }
    apic_10 { pt3dadd( 409.2, 746.692, 62.0578, 0.579 ) }
    apic_10 { pt3dadd( 410.182, 747.268, 61.9024, 0.6452 ) }
    apic_10 { pt3dadd( 411.116, 747.925, 61.7484, 0.7444 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    apic_10 { pt3dadd( 412.038, 748.598, 61.5692, 0.816 ) }
    apic_10 { pt3dadd( 412.948, 749.287, 61.3634, 0.8584 ) }
    apic_10 { pt3dadd( 413.941, 749.811, 61.0795, 0.883 ) }
    apic_10 { pt3dadd( 415.017, 750.17, 60.7166, 0.8896 ) }
    apic_10 { pt3dadd( 416.084, 750.543, 60.2997, 0.8104 ) }
    apic_10 { pt3dadd( 417.146, 750.926, 59.8394, 0.6614 ) }
    apic_10 { pt3dadd( 418.119, 751.496, 59.6481, 0.6734 ) }
    apic_10 { pt3dadd( 419.046, 752.167, 59.6061, 0.7748 ) }
    apic_10 { pt3dadd( 420.07, 752.651, 59.5216, 0.7234 ) }
    apic_10 { pt3dadd( 421.148, 753.033, 59.4146, 0.591 ) }
    apic_10 { pt3dadd( 422.167, 753.54, 59.2861, 0.5728 ) }
    apic_10 { pt3dadd( 423.155, 754.113, 59.1461, 0.6146 ) }
    apic_10 { pt3dadd( 424.187, 754.603, 59.0724, 0.6928 ) }
    apic_10 { pt3dadd( 425.24, 755.049, 59.0332, 0.7896 ) }
    apic_10 { pt3dadd( 426.31, 755.443, 58.8778, 0.8332 ) }
    apic_10 { pt3dadd( 427.39, 755.813, 58.6684, 0.852 ) }
    apic_10 { pt3dadd( 428.445, 756.233, 58.3579, 0.8522 ) }
    apic_10 { pt3dadd( 429.49, 756.677, 58.0012, 0.844 ) }
    apic_10 { pt3dadd( 430.587, 756.968, 57.7704, 0.8044 ) }
    apic_10 { pt3dadd( 431.707, 757.19, 57.5966, 0.7506 ) }
    apic_10 { pt3dadd( 432.832, 757.382, 57.472, 0.7186 ) }
    apic_10 { pt3dadd( 433.961, 757.561, 57.3678, 0.6958 ) }
    apic_10 { pt3dadd( 435.047, 757.885, 57.0844, 0.7068 ) }
    apic_10 { pt3dadd( 436.116, 758.268, 56.7291, 0.7316 ) }
    apic_10 { pt3dadd( 437.223, 758.439, 56.2766, 0.728 ) }
    apic_10 { pt3dadd( 438.346, 758.528, 55.7866, 0.7134 ) }
    apic_10 { pt3dadd( 439.464, 758.668, 55.3092, 0.7574 ) }
    apic_10 { pt3dadd( 440.581, 758.826, 54.8369, 0.8228 ) }
    apic_10 { pt3dadd( 441.674, 759.104, 54.4079, 0.7824 ) }
    apic_10 { pt3dadd( 442.761, 759.418, 53.9924, 0.7098 ) }
    apic_10 { pt3dadd( 443.889, 759.491, 53.6841, 0.7476 ) }
    apic_10 { pt3dadd( 445.027, 759.507, 53.4013, 0.812 ) }
    apic_10 { pt3dadd( 446.113, 759.789, 52.9547, 0.8084 ) }
    apic_10 { pt3dadd( 447.186, 760.132, 52.4703, 0.7888 ) }
    apic_10 { pt3dadd( 448.002, 760.881, 52.015, 0.8428 ) }
    apic_10 { pt3dadd( 448.766, 761.713, 51.5659, 0.9116 ) }
    apic_10 { pt3dadd( 449.632, 762.424, 51.0317, 0.8926 ) }
    apic_10 { pt3dadd( 450.516, 763.114, 50.4818, 0.8576 ) }
    apic_10 { pt3dadd( 451.462, 763.737, 50.0867, 0.8254 ) }
    apic_10 { pt3dadd( 452.412, 764.354, 49.7034, 0.7934 ) }
    apic_10 { pt3dadd( 453.365, 764.981, 49.4687, 0.7046 ) }
    apic_10 { pt3dadd( 454.329, 765.57, 49.2388, 0.6184 ) }
    apic_10 { pt3dadd( 455.469, 765.645, 49.0462, 0.581 ) }
    apic_10 { pt3dadd( 456.594, 765.759, 48.8435, 0.5448 ) }
    apic_10 { pt3dadd( 457.545, 766.379, 48.5058, 0.5252 ) }
    apic_10 { pt3dadd( 458.511, 766.97, 48.1426, 0.4998 ) }
    apic_10 { pt3dadd( 459.554, 767.386, 47.6216, 0.4404 ) }
    apic_10 { pt3dadd( 460.617, 767.722, 47.1246, 0.3928 ) }
    apic_10 { pt3dadd( 461.748, 767.768, 46.713, 0.3878 ) }
    apic_10 { pt3dadd( 462.877, 767.843, 46.3397, 0.3864 ) }
    apic_10 { pt3dadd( 464.004, 768.014, 46.1012, 0.397 ) }
    apic_10 { pt3dadd( 465.126, 768.211, 45.8724, 0.4282 ) }
    apic_10 { pt3dadd( 466.232, 768.495, 45.6772, 0.5306 ) }
    apic_10 { pt3dadd( 467.325, 768.812, 45.4672, 0.6118 ) }
    apic_10 { pt3dadd( 468.38, 769.242, 45.2057, 0.6194 ) }
    apic_10 { pt3dadd( 469.405, 769.726, 44.9302, 0.6064 ) }
    apic_10 { pt3dadd( 470.336, 770.378, 44.6102, 0.5278 ) }
    apic_10 { pt3dadd( 471.162, 771.12, 44.2756, 0.4524 ) }
    apic_10 { pt3dadd( 471.686, 772.126, 43.8992, 0.3862 ) }
    apic_10 { pt3dadd( 472.394, 772.78, 43.5604, 0.3516 ) }
    apic_10 { pt3dadd( 473.523, 772.63, 43.3084, 0.39 ) }
    apic_10 { pt3dadd( 474.658, 772.588, 43.1315, 0.425 ) }
    apic_10 { pt3dadd( 475.799, 772.671, 43.0441, 0.4566 ) }
    apic_10 { pt3dadd( 476.895, 772.933, 42.9719, 0.4448 ) }
    apic_10 { pt3dadd( 477.944, 773.389, 42.9162, 0.386 ) }
    apic_10 { pt3dadd( 478.876, 774.014, 42.8277, 0.34 ) }
    apic_10 { pt3dadd( 479.683, 774.824, 42.7042, 0.308 ) }
    apic_10 { pt3dadd( 480.256, 775.784, 42.5846, 0.3098 ) }
    apic_10 { pt3dadd( 480.656, 776.855, 42.4682, 0.3366 ) }
    apic_10 { pt3dadd( 481.253, 777.811, 42.5093, 0.3602 ) }
    apic_10 { pt3dadd( 481.986, 778.688, 42.6586, 0.3816 ) }
    apic_10 { pt3dadd( 482.99, 779.035, 42.8915, 0.3734 ) }
    apic_10 { pt3dadd( 484.125, 779.129, 43.1642, 0.3512 ) }
    apic_10 { pt3dadd( 485.257, 779.091, 43.4683, 0.3472 ) }
    apic_10 { pt3dadd( 486.39, 778.993, 43.7864, 0.3516 ) }
    apic_10 { pt3dadd( 487.526, 778.938, 44.0614, 0.4052 ) }
    apic_10 { pt3dadd( 488.665, 778.905, 44.3164, 0.481 ) }
    apic_10 { pt3dadd( 489.788, 779.043, 44.6362, 0.5028 ) }
    apic_10 { pt3dadd( 490.903, 779.253, 44.982, 0.5026 ) }
    apic_10 { pt3dadd( 491.992, 779.571, 45.3132, 0.5082 ) }
    apic_10 { pt3dadd( 493.074, 779.917, 45.6403, 0.5154 ) }
    apic_10 { pt3dadd( 494.179, 780.139, 46.0872, 0.5632 ) }
    apic_10 { pt3dadd( 495.29, 780.335, 46.5609, 0.62 ) }
    apic_10 { pt3dadd( 496.034, 781.096, 47.3264, 0.6152 ) }
    apic_10 { pt3dadd( 496.716, 781.951, 48.141, 0.6002 ) }
    apic_10 { pt3dadd( 497.439, 782.818, 48.6013, 0.5542 ) }
    apic_10 { pt3dadd( 498.166, 783.683, 49.0199, 0.5048 ) }
    apic_10 { pt3dadd( 498.569, 784.744, 49.2279, 0.4412 ) }
    apic_10 { pt3dadd( 498.945, 785.822, 49.4178, 0.3766 ) }
    apic_10 { pt3dadd( 499.754, 786.621, 49.4844, 0.303 ) }
    apic_10 { pt3dadd( 500.588, 787.404, 49.544, 0.2288 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 91/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 390.044, 744.118, 65.935, 1.1514 ) }
    apic_1 { pt3dadd( 390.334, 742.206, 66.386, 0.9128 ) }
    apic_1 { pt3dadd( 390.323, 741.067, 66.6425, 0.8266 ) }
    apic_1 { pt3dadd( 389.843, 740.049, 67.1107, 0.9078 ) }
    apic_1 { pt3dadd( 389.35, 739.035, 67.585, 0.994 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 391.502, 779.029, 57.5985, 0.729 ) }
    dend_12 { pt3dadd( 392.227, 779.544, 58.8333, 0.4902 ) }
    dend_12 { pt3dadd( 393.004, 780.337, 59.4656, 0.6282 ) }
    dend_12 { pt3dadd( 393.779, 781.146, 60.0407, 0.7974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( 394.844, 781.52, 60.3509, 0.844 ) }
    dend_12 { pt3dadd( 395.927, 781.868, 60.6452, 0.8834 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 391.502, 779.029, 57.5985, 0.729 ) }
    dend_11 { pt3dadd( 391.941, 780.175, 57.1528, 0.4604 ) }
    dend_11 { pt3dadd( 392.336, 781.219, 56.548, 0.4314 ) }
    dend_11 { pt3dadd( 392.717, 782.268, 55.9437, 0.4112 ) }
    dend_11 { pt3dadd( 392.843, 783.379, 55.3501, 0.5616 ) }
    dend_11 { pt3dadd( 392.959, 784.491, 54.7616, 0.7052 ) }
    dend_11 { pt3dadd( 392.959, 785.616, 54.2466, 0.7492 ) }
    dend_11 { pt3dadd( 392.967, 786.74, 53.741, 0.786 ) }
    dend_11 { pt3dadd( 393.098, 787.866, 53.3733, 0.718 ) }
    dend_11 { pt3dadd( 393.2, 788.993, 53.0256, 0.6528 ) }
    dend_11 { pt3dadd( 392.99, 790.116, 52.9012, 0.617 ) }
    dend_11 { pt3dadd( 392.78, 791.24, 52.7873, 0.5866 ) }
    dend_11 { pt3dadd( 392.566, 792.364, 52.7472, 0.5948 ) }
    dend_11 { pt3dadd( 392.336, 793.483, 52.7058, 0.5998 ) }
    dend_11 { pt3dadd( 391.988, 794.572, 52.6523, 0.5824 ) }
    dend_11 { pt3dadd( 391.638, 795.661, 52.5888, 0.5684 ) }
    dend_11 { pt3dadd( 391.277, 796.746, 52.4563, 0.5784 ) }
    dend_11 { pt3dadd( 390.964, 797.837, 52.3001, 0.5954 ) }
    dend_11 { pt3dadd( 390.952, 798.974, 51.998, 0.6576 ) }
    dend_11 { pt3dadd( 390.924, 800.109, 51.6664, 0.7094 ) }
    dend_11 { pt3dadd( 390.832, 801.235, 51.2204, 0.721 ) }
    dend_11 { pt3dadd( 390.773, 802.362, 50.7867, 0.7328 ) }
    dend_11 { pt3dadd( 390.827, 803.493, 50.3927, 0.7444 ) }
    dend_11 { pt3dadd( 390.955, 804.6, 49.896, 0.7426 ) }
    dend_11 { pt3dadd( 391.314, 805.633, 49.0767, 0.6984 ) }
    dend_11 { pt3dadd( 391.441, 806.658, 48.2373, 0.6194 ) }
    dend_11 { pt3dadd( 391.034, 807.664, 47.3502, 0.4604 ) }
    dend_11 { pt3dadd( 390.496, 808.602, 46.578, 0.3444 ) }
    dend_11 { pt3dadd( 389.732, 809.421, 46.0071, 0.3034 ) }
    dend_11 { pt3dadd( 389.085, 810.319, 45.472, 0.2792 ) }
    dend_11 { pt3dadd( 388.635, 811.353, 44.998, 0.2832 ) }
    dend_11 { pt3dadd( 388.223, 812.394, 44.4483, 0.2914 ) }
    dend_11 { pt3dadd( 387.87, 813.448, 43.7814, 0.3064 ) }
    dend_11 { pt3dadd( 387.56, 814.512, 43.1007, 0.3348 ) }
    dend_11 { pt3dadd( 387.317, 815.593, 42.3984, 0.3842 ) }
    dend_11 { pt3dadd( 387.099, 816.683, 41.7469, 0.475 ) }
    dend_11 { pt3dadd( 386.92, 817.788, 41.1729, 0.629 ) }
    dend_11 { pt3dadd( 386.612, 818.851, 40.5891, 0.712 ) }
    dend_11 { pt3dadd( 386.118, 819.854, 39.9916, 0.6918 ) }
    dend_11 { pt3dadd( 385.69, 820.888, 39.4383, 0.6636 ) }
    dend_11 { pt3dadd( 385.358, 821.963, 38.9483, 0.6234 ) }
    dend_11 { pt3dadd( 385.062, 823.053, 38.5302, 0.6406 ) }
    dend_11 { pt3dadd( 384.813, 824.162, 38.2026, 0.7298 ) }
    dend_11 { pt3dadd( 384.556, 825.27, 37.9047, 0.7424 ) }
    dend_11 { pt3dadd( 384.29, 826.378, 37.6359, 0.679 ) }
    dend_11 { pt3dadd( 384.2, 827.504, 37.4548, 0.655 ) }
    dend_11 { pt3dadd( 384.241, 828.647, 37.3388, 0.6602 ) }
    dend_11 { pt3dadd( 383.842, 829.631, 37.0412, 0.7316 ) }
    dend_11 { pt3dadd( 383.118, 830.498, 36.6094, 0.852 ) }
    dend_11 { pt3dadd( 383.153, 831.535, 36.0634, 0.9684 ) }
    dend_11 { pt3dadd( 383.42, 832.623, 35.4833, 1.0836 ) }
    dend_11 { pt3dadd( 383.208, 833.675, 34.727, 1.1122 ) }
    dend_11 { pt3dadd( 382.875, 834.72, 33.9262, 1.1186 ) }
    dend_11 { pt3dadd( 382.524, 835.786, 33.395, 1.0938 ) }
    dend_11 { pt3dadd( 382.172, 836.855, 32.8952, 1.0654 ) }
    dend_11 { pt3dadd( 381.639, 837.854, 32.5175, 0.9296 ) }
    dend_11 { pt3dadd( 381.096, 838.849, 32.1474, 0.7872 ) }
    dend_11 { pt3dadd( 380.504, 839.818, 31.8044, 0.6954 ) }
    dend_11 { pt3dadd( 379.909, 840.785, 31.4622, 0.606 ) }
    dend_11 { pt3dadd( 379.466, 841.827, 31.0643, 0.6728 ) }
    dend_11 { pt3dadd( 379.027, 842.871, 30.6648, 0.7444 ) }
    dend_11 { pt3dadd( 378.312, 843.755, 30.3646, 0.7718 ) }
    dend_11 { pt3dadd( 377.595, 844.638, 30.0653, 0.7988 ) }
    dend_11 { pt3dadd( 377.053, 845.643, 29.8564, 0.8318 ) }
    dend_11 { pt3dadd( 376.511, 846.646, 29.647, 0.8644 ) }
    dend_11 { pt3dadd( 375.933, 847.627, 29.3899, 0.857 ) }
    dend_11 { pt3dadd( 375.354, 848.609, 29.129, 0.8496 ) }
    dend_11 { pt3dadd( 374.748, 849.565, 28.7333, 0.8362 ) }
    dend_11 { pt3dadd( 374.16, 850.533, 28.357, 0.8194 ) }
    dend_11 { pt3dadd( 373.709, 851.58, 28.1243, 0.7766 ) }
    dend_11 { pt3dadd( 373.237, 852.617, 27.9174, 0.7362 ) }
    dend_11 { pt3dadd( 372.695, 853.623, 27.7995, 0.7044 ) }
    dend_11 { pt3dadd( 372.069, 854.566, 27.8347, 0.6724 ) }
    dend_11 { pt3dadd( 371.281, 855.384, 28.168, 0.64 ) }
    dend_11 { pt3dadd( 370.384, 856.079, 28.2761, 0.6746 ) }
    dend_11 { pt3dadd( 369.428, 856.707, 28.2629, 0.745 ) }
    dend_11 { pt3dadd( 368.552, 857.435, 28.4105, 0.698 ) }
    dend_11 { pt3dadd( 367.709, 858.204, 28.6236, 0.6032 ) }
    dend_11 { pt3dadd( 367.346, 859.256, 28.6924, 0.5736 ) }
    dend_11 { pt3dadd( 367.089, 860.37, 28.73, 0.5582 ) }
    dend_11 { pt3dadd( 366.495, 861.339, 28.607, 0.6908 ) }
    dend_11 { pt3dadd( 365.868, 862.295, 28.4684, 0.838 ) }
    dend_11 { pt3dadd( 365.087, 863.129, 28.3234, 0.8962 ) }
    dend_11 { pt3dadd( 364.305, 863.96, 28.18, 0.9522 ) }
    dend_11 { pt3dadd( 363.506, 864.778, 28.3063, 0.8426 ) }
    dend_11 { pt3dadd( 362.704, 865.592, 28.4326, 0.7352 ) }
    dend_11 { pt3dadd( 361.689, 866.117, 28.5555, 0.7394 ) }
    dend_11 { pt3dadd( 360.668, 866.606, 28.6821, 0.743 ) }
    dend_11 { pt3dadd( 359.528, 866.534, 28.8649, 0.7392 ) }
    dend_11 { pt3dadd( 358.392, 866.493, 29.0318, 0.7344 ) }
    dend_11 { pt3dadd( 357.296, 866.82, 29.0038, 0.7184 ) }
    dend_11 { pt3dadd( 356.202, 867.152, 28.9766, 0.7036 ) }
    dend_11 { pt3dadd( 355.117, 867.517, 28.959, 0.6992 ) }
    dend_11 { pt3dadd( 354.044, 867.906, 28.9439, 0.6892 ) }
    dend_11 { pt3dadd( 353.076, 868.515, 28.9528, 0.6254 ) }
    dend_11 { pt3dadd( 352.114, 869.135, 28.9512, 0.5656 ) }
    dend_11 { pt3dadd( 351.193, 869.812, 28.8898, 0.529 ) }
    dend_11 { pt3dadd( 350.345, 870.552, 28.7546, 0.5314 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_11 { pt3dadd( 349.78, 871.531, 28.3357, 0.6828 ) }
    dend_11 { pt3dadd( 349.223, 872.504, 27.7916, 0.7616 ) }
    dend_11 { pt3dadd( 348.676, 873.467, 27.088, 0.748 ) }
    dend_11 { pt3dadd( 348.245, 874.481, 26.4011, 0.7634 ) }
    dend_11 { pt3dadd( 347.938, 875.548, 25.7317, 0.8098 ) }
    dend_11 { pt3dadd( 347.768, 876.628, 24.9751, 0.827 ) }
    dend_11 { pt3dadd( 347.722, 877.718, 24.1389, 0.8176 ) }
    dend_11 { pt3dadd( 347.429, 878.742, 23.2629, 0.775 ) }
    dend_11 { pt3dadd( 346.963, 879.719, 22.3588, 0.709 ) }
    dend_11 { pt3dadd( 346.713, 880.773, 21.5417, 0.7326 ) }
    dend_11 { pt3dadd( 346.567, 881.862, 20.7651, 0.7978 ) }
    dend_11 { pt3dadd( 346.418, 882.964, 20.1205, 0.7696 ) }
    dend_11 { pt3dadd( 346.268, 884.072, 19.5198, 0.7104 ) }
    dend_11 { pt3dadd( 346.15, 885.194, 19.0761, 0.6824 ) }
    dend_11 { pt3dadd( 346.042, 886.322, 18.6798, 0.6636 ) }
    dend_11 { pt3dadd( 346.581, 887.229, 18.0926, 0.613 ) }
    dend_11 { pt3dadd( 347.306, 888.075, 17.4501, 0.553 ) }
    dend_11 { pt3dadd( 347.348, 889.167, 17.0423, 0.5554 ) }
    dend_11 { pt3dadd( 347.281, 890.299, 16.6718, 0.5678 ) }
    dend_11 { pt3dadd( 347.777, 891.306, 16.3223, 0.4964 ) }
    dend_11 { pt3dadd( 348.318, 892.304, 15.9746, 0.4182 ) }
    dend_11 { pt3dadd( 348.809, 893.332, 15.7244, 0.3768 ) }
    dend_11 { pt3dadd( 349.299, 894.362, 15.4759, 0.3362 ) }
    dend_11 { pt3dadd( 349.991, 895.271, 15.4761, 0.422 ) }
    dend_11 { pt3dadd( 350.686, 896.18, 15.4792, 0.5094 ) }
    dend_11 { pt3dadd( 350.974, 897.286, 15.6043, 0.4518 ) }
    dend_11 { pt3dadd( 351.257, 898.392, 15.7303, 0.3932 ) }
    dend_11 { pt3dadd( 351.727, 899.436, 15.7475, 0.311 ) }
    dend_11 { pt3dadd( 352.199, 900.478, 15.764, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 390.771, 785.47, 47.1604, 1.0084 ) }
    dend_9 { pt3dadd( 391.112, 786.143, 47.1741, 0.7794 ) }
    dend_9 { pt3dadd( 391.271, 787.262, 46.9885, 0.7442 ) }
    dend_9 { pt3dadd( 391.363, 788.398, 46.765, 0.766 ) }
    dend_9 { pt3dadd( 391.094, 789.496, 46.452, 0.7294 ) }
    dend_9 { pt3dadd( 390.785, 790.59, 46.1297, 0.687 ) }
    dend_9 { pt3dadd( 390.419, 791.667, 45.8422, 0.6368 ) }
    dend_9 { pt3dadd( 390.048, 792.743, 45.5582, 0.586 ) }
    dend_9 { pt3dadd( 389.903, 793.874, 45.4826, 0.5046 ) }
    dend_9 { pt3dadd( 389.779, 795.011, 45.428, 0.42 ) }
    dend_9 { pt3dadd( 389.61, 796.143, 45.4664, 0.5068 ) }
    dend_9 { pt3dadd( 389.437, 797.273, 45.5115, 0.6064 ) }
    dend_9 { pt3dadd( 388.865, 798.257, 45.6316, 0.6324 ) }
    dend_9 { pt3dadd( 388.269, 799.233, 45.7562, 0.654 ) }
    dend_9 { pt3dadd( 387.596, 800.151, 46.0155, 0.6152 ) }
    dend_9 { pt3dadd( 386.92, 801.069, 46.279, 0.5742 ) }
    dend_9 { pt3dadd( 386.493, 802.12, 46.6094, 0.546 ) }
    dend_9 { pt3dadd( 386.073, 803.175, 46.9412, 0.5178 ) }
    dend_9 { pt3dadd( 385.647, 804.219, 47.4071, 0.5218 ) }
    dend_9 { pt3dadd( 385.223, 805.265, 47.8758, 0.5256 ) }
    dend_9 { pt3dadd( 385.057, 806.379, 48.3546, 0.4332 ) }
    dend_9 { pt3dadd( 384.886, 807.494, 48.8183, 0.3428 ) }
    dend_9 { pt3dadd( 384.568, 808.593, 48.7362, 0.328 ) }
    dend_9 { pt3dadd( 384.247, 809.69, 48.6506, 0.315 ) }
    dend_9 { pt3dadd( 383.812, 810.745, 48.4504, 0.364 ) }
    dend_9 { pt3dadd( 383.372, 811.796, 48.2488, 0.4118 ) }
    dend_9 { pt3dadd( 382.755, 812.756, 48.0155, 0.4302 ) }
    dend_9 { pt3dadd( 382.133, 813.71, 47.7812, 0.4468 ) }
    dend_9 { pt3dadd( 381.347, 814.534, 47.5149, 0.415 ) }
    dend_9 { pt3dadd( 380.562, 815.359, 47.2455, 0.3848 ) }
    dend_9 { pt3dadd( 379.817, 816.216, 46.9048, 0.3906 ) }
    dend_9 { pt3dadd( 379.067, 817.068, 46.5606, 0.396 ) }
    dend_9 { pt3dadd( 378.224, 817.823, 46.1605, 0.3934 ) }
    dend_9 { pt3dadd( 377.332, 818.468, 45.7747, 0.3888 ) }
    dend_9 { pt3dadd( 376.199, 818.555, 45.4605, 0.3746 ) }
    dend_9 { pt3dadd( 375.071, 818.658, 45.0923, 0.3608 ) }
    dend_9 { pt3dadd( 373.971, 818.837, 44.4623, 0.3484 ) }
    dend_9 { pt3dadd( 372.87, 818.985, 43.8208, 0.341 ) }
    dend_9 { pt3dadd( 371.761, 818.989, 43.1259, 0.356 ) }
    dend_9 { pt3dadd( 370.671, 819.057, 42.376, 0.3688 ) }
    dend_9 { pt3dadd( 369.662, 819.411, 41.382, 0.3722 ) }
    dend_9 { pt3dadd( 368.805, 819.94, 40.4026, 0.3878 ) }
    dend_9 { pt3dadd( 368.327, 820.906, 39.4593, 0.4336 ) }
    dend_9 { pt3dadd( 367.801, 821.858, 38.6288, 0.4592 ) }
    dend_9 { pt3dadd( 367.16, 822.776, 38.0646, 0.4376 ) }
    dend_9 { pt3dadd( 366.438, 823.625, 37.5931, 0.4524 ) }
    dend_9 { pt3dadd( 365.529, 824.312, 37.333, 0.5496 ) }
    dend_9 { pt3dadd( 364.555, 824.862, 37.1577, 0.6356 ) }
    dend_9 { pt3dadd( 363.44, 825.116, 37.1669, 0.6972 ) }
    dend_9 { pt3dadd( 362.324, 825.354, 37.2856, 0.7358 ) }
    dend_9 { pt3dadd( 361.208, 825.561, 37.6326, 0.7262 ) }
    dend_9 { pt3dadd( 360.259, 826.006, 38.0974, 0.6848 ) }
    dend_9 { pt3dadd( 359.652, 826.931, 38.7996, 0.579 ) }
    dend_9 { pt3dadd( 358.976, 827.809, 39.4741, 0.5484 ) }
    dend_9 { pt3dadd( 358.234, 828.638, 40.1215, 0.5914 ) }
    dend_9 { pt3dadd( 357.501, 829.481, 40.7226, 0.615 ) }
    dend_9 { pt3dadd( 356.777, 830.337, 41.2796, 0.62 ) }
    dend_9 { pt3dadd( 356.589, 831.333, 41.7382, 0.6524 ) }
    dend_9 { pt3dadd( 356.828, 832.441, 42.1193, 0.7066 ) }
    dend_9 { pt3dadd( 357.236, 833.492, 42.4402, 0.696 ) }
    dend_9 { pt3dadd( 357.752, 834.507, 42.7224, 0.6436 ) }
    dend_9 { pt3dadd( 357.918, 835.601, 43.0788, 0.6092 ) }
    dend_9 { pt3dadd( 357.912, 836.733, 43.4717, 0.5834 ) }
    dend_9 { pt3dadd( 358.393, 837.71, 43.7945, 0.5984 ) }
    dend_9 { pt3dadd( 359.068, 838.625, 44.0894, 0.6294 ) }
    dend_9 { pt3dadd( 359.879, 839.421, 44.2856, 0.7274 ) }
    dend_9 { pt3dadd( 360.736, 840.175, 44.4478, 0.8486 ) }
    dend_9 { pt3dadd( 361.26, 841.16, 44.6754, 0.8922 ) }
    dend_9 { pt3dadd( 361.669, 842.224, 44.9252, 0.9094 ) }
    dend_9 { pt3dadd( 361.652, 843.327, 45.4916, 0.8808 ) }
    dend_9 { pt3dadd( 361.557, 844.439, 46.116, 0.844 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_9 { pt3dadd( 361.431, 845.503, 47.0856, 0.7912 ) }
    dend_9 { pt3dadd( 361.302, 846.56, 48.1065, 0.7362 ) }
    dend_9 { pt3dadd( 360.892, 847.544, 49.1005, 0.6574 ) }
    dend_9 { pt3dadd( 360.452, 848.518, 50.0914, 0.5762 ) }
    dend_9 { pt3dadd( 360.524, 849.628, 50.7248, 0.6528 ) }
    dend_9 { pt3dadd( 360.606, 850.74, 51.3514, 0.7324 ) }
    dend_9 { pt3dadd( 360.892, 851.841, 51.6491, 0.6252 ) }
    dend_9 { pt3dadd( 361.18, 852.941, 51.9422, 0.5156 ) }
    dend_9 { pt3dadd( 361.401, 854.061, 52.1128, 0.478 ) }
    dend_9 { pt3dadd( 361.621, 855.182, 52.2822, 0.441 ) }
    dend_9 { pt3dadd( 361.719, 856.314, 52.6014, 0.4492 ) }
    dend_9 { pt3dadd( 361.816, 857.446, 52.922, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 12/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 390.771, 785.47, 47.1604, 1.0084 ) }
    dend_6 { pt3dadd( 392.02, 785.871, 46.2955, 0.941 ) }
    dend_6 { pt3dadd( 393.099, 786.23, 46.0718, 0.8 ) }
    dend_6 { pt3dadd( 394.182, 786.594, 45.9337, 0.6444 ) }
    dend_6 { pt3dadd( 395.114, 787.244, 46.153, 0.6806 ) }
    dend_6 { pt3dadd( 396.032, 787.919, 46.403, 0.733 ) }
    dend_6 { pt3dadd( 397.078, 788.378, 46.384, 0.7456 ) }
    dend_6 { pt3dadd( 398.13, 788.826, 46.3498, 0.7558 ) }
    dend_6 { pt3dadd( 399.206, 789.172, 45.9158, 0.733 ) }
    dend_6 { pt3dadd( 400.281, 789.514, 45.463, 0.7088 ) }
    dend_6 { pt3dadd( 401.367, 789.22, 44.9898, 0.632 ) }
    dend_6 { pt3dadd( 402.452, 788.916, 44.5164, 0.5544 ) }
    // Section: apic_9, id: apic_9, parent: apic_1 (entry count 24/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 389.35, 739.035, 67.585, 0.994 ) }
    apic_9 { pt3dadd( 390.434, 738.97, 68.9063, 0.508 ) }
    apic_9 { pt3dadd( 391.534, 739.037, 69.2112, 0.4316 ) }
    apic_9 { pt3dadd( 392.67, 739.161, 69.0939, 0.526 ) }
    apic_9 { pt3dadd( 393.809, 739.217, 69.1936, 0.5546 ) }
    apic_9 { pt3dadd( 394.951, 739.244, 69.3857, 0.5554 ) }
    apic_9 { pt3dadd( 396.093, 739.28, 69.4764, 0.494 ) }
    apic_9 { pt3dadd( 397.237, 739.32, 69.5248, 0.4062 ) }
    apic_9 { pt3dadd( 398.375, 739.422, 69.5702, 0.4018 ) }
    apic_9 { pt3dadd( 399.512, 739.549, 69.6142, 0.4306 ) }
    apic_9 { pt3dadd( 400.548, 739.986, 69.8099, 0.502 ) }
    apic_9 { pt3dadd( 401.546, 740.534, 70.0605, 0.5886 ) }
    apic_9 { pt3dadd( 402.551, 741.054, 70.4729, 0.5798 ) }
    apic_9 { pt3dadd( 403.556, 741.565, 70.9344, 0.542 ) }
    apic_9 { pt3dadd( 404.593, 742.014, 71.3653, 0.5388 ) }
    apic_9 { pt3dadd( 405.636, 742.451, 71.79, 0.5424 ) }
    apic_9 { pt3dadd( 406.725, 742.582, 72.506, 0.5132 ) }
    apic_9 { pt3dadd( 407.822, 742.657, 73.274, 0.478 ) }
    apic_9 { pt3dadd( 408.89, 742.523, 74.226, 0.451 ) }
    apic_9 { pt3dadd( 409.957, 742.386, 75.1803, 0.424 ) }
    apic_9 { pt3dadd( 410.093, 743.301, 76.7945, 0.4114 ) }
    apic_9 { pt3dadd( 410.179, 744.277, 78.216, 0.417 ) }
    apic_9 { pt3dadd( 410.221, 745.306, 79.4349, 0.441 ) }
    apic_9 { pt3dadd( 410.366, 746.298, 80.7727, 0.4224 ) }
    apic_9 { pt3dadd( 410.554, 747.274, 82.1579, 0.387 ) }
    apic_9 { pt3dadd( 410.473, 748.253, 83.5864, 0.4492 ) }
    apic_9 { pt3dadd( 410.396, 749.227, 85.0293, 0.5148 ) }
    apic_9 { pt3dadd( 410.622, 750.108, 86.7306, 0.5738 ) }
    apic_9 { pt3dadd( 410.594, 750.962, 88.3764, 0.618 ) }
    apic_9 { pt3dadd( 410.071, 751.762, 89.9139, 0.6332 ) }
    apic_9 { pt3dadd( 409.607, 752.612, 91.3847, 0.588 ) }
    apic_9 { pt3dadd( 409.224, 753.531, 92.7634, 0.4592 ) }
    apic_9 { pt3dadd( 408.994, 754.436, 94.3124, 0.3626 ) }
    apic_9 { pt3dadd( 408.957, 755.325, 96.0747, 0.3062 ) }
    apic_9 { pt3dadd( 409.134, 756.208, 97.7343, 0.289 ) }
    apic_9 { pt3dadd( 409.479, 757.088, 99.3143, 0.3022 ) }
    apic_9 { pt3dadd( 409.595, 758.105, 100.425, 0.3342 ) }
    apic_9 { pt3dadd( 409.6, 759.192, 101.304, 0.3754 ) }
    apic_9 { pt3dadd( 410.054, 760.109, 102.296, 0.4566 ) }
    apic_9 { pt3dadd( 410.693, 760.959, 103.334, 0.5544 ) }
    apic_9 { pt3dadd( 411.594, 761.321, 104.551, 0.5426 ) }
    apic_9 { pt3dadd( 412.595, 761.499, 105.837, 0.4894 ) }
    apic_9 { pt3dadd( 413.557, 761.238, 107.129, 0.4708 ) }
    apic_9 { pt3dadd( 414.512, 760.896, 108.424, 0.4584 ) }
    apic_9 { pt3dadd( 414.738, 760.675, 111.086, 0.614 ) }
    apic_9 { pt3dadd( 414.906, 760.283, 113.507, 0.7344 ) }
    apic_9 { pt3dadd( 414.956, 759.315, 114.997, 0.7234 ) }
    apic_9 { pt3dadd( 414.792, 758.433, 116.462, 0.7116 ) }
    apic_9 { pt3dadd( 414.044, 757.781, 117.86, 0.698 ) }
    apic_9 { pt3dadd( 413.311, 757.346, 119.558, 0.6252 ) }
    apic_9 { pt3dadd( 412.597, 757.258, 121.736, 0.4576 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 75/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 389.35, 739.035, 67.585, 0.994 ) }
    apic_2 { pt3dadd( 389.307, 737.83, 67.9762, 0.8206 ) }
    apic_2 { pt3dadd( 389.237, 736.696, 68.3018, 0.665 ) }
    apic_2 { pt3dadd( 389.127, 735.562, 68.5675, 0.52 ) }
    apic_2 { pt3dadd( 389.063, 734.429, 68.8621, 0.4502 ) }
    apic_2 { pt3dadd( 389.061, 733.293, 69.195, 0.4808 ) }
    apic_2 { pt3dadd( 388.89, 732.192, 69.6167, 0.5902 ) }
    apic_2 { pt3dadd( 388.512, 731.134, 70.1473, 0.7966 ) }
    apic_2 { pt3dadd( 388.37, 730.048, 70.6667, 0.9538 ) }
    apic_2 { pt3dadd( 388.5, 728.93, 71.1726, 1.0544 ) }
    apic_2 { pt3dadd( 388.753, 727.833, 71.5285, 1.066 ) }
    apic_2 { pt3dadd( 389.127, 726.756, 71.7366, 0.9906 ) }
    apic_2 { pt3dadd( 389.122, 725.676, 71.9446, 0.9626 ) }
    apic_2 { pt3dadd( 388.76, 724.595, 72.1526, 0.9794 ) }
    apic_2 { pt3dadd( 388.258, 723.587, 72.508, 0.9756 ) }
    apic_2 { pt3dadd( 387.657, 722.63, 72.9666, 0.957 ) }
    apic_2 { pt3dadd( 387.258, 721.596, 73.4896, 0.9542 ) }
    apic_2 { pt3dadd( 386.997, 720.507, 74.0572, 0.962 ) }
    apic_2 { pt3dadd( 387.171, 719.451, 74.5833, 0.9858 ) }
    apic_2 { pt3dadd( 387.617, 718.418, 75.0837, 1.0194 ) }
    apic_2 { pt3dadd( 387.926, 717.338, 75.5314, 0.9634 ) }
    apic_2 { pt3dadd( 388.157, 716.23, 75.9483, 0.8556 ) }
    apic_2 { pt3dadd( 388.076, 715.118, 76.3042, 0.7612 ) }
    apic_2 { pt3dadd( 387.855, 714.004, 76.6326, 0.6728 ) }
    apic_2 { pt3dadd( 387.956, 712.889, 76.911, 0.6716 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    apic_2 { pt3dadd( 388.195, 711.775, 77.1674, 0.708 ) }
    apic_2 { pt3dadd( 388.502, 710.677, 77.2957, 0.7188 ) }
    apic_2 { pt3dadd( 388.84, 709.584, 77.3696, 0.7186 ) }
    apic_2 { pt3dadd( 388.863, 708.46, 77.2982, 0.7766 ) }
    apic_2 { pt3dadd( 388.754, 707.323, 77.1669, 0.8586 ) }
    apic_2 { pt3dadd( 388.576, 706.193, 77.0423, 0.806 ) }
    apic_2 { pt3dadd( 388.373, 705.069, 76.9202, 0.7034 ) }
    apic_2 { pt3dadd( 388.807, 704.075, 76.8849, 0.7246 ) }
    apic_2 { pt3dadd( 389.437, 703.12, 76.8765, 0.784 ) }
    apic_2 { pt3dadd( 390.256, 702.333, 76.7715, 0.8324 ) }
    apic_2 { pt3dadd( 391.12, 701.583, 76.6444, 0.8784 ) }
    apic_2 { pt3dadd( 391.862, 700.722, 76.4114, 0.8748 ) }
    apic_2 { pt3dadd( 392.577, 699.835, 76.1547, 0.8602 ) }
    apic_2 { pt3dadd( 393.212, 698.888, 75.9478, 0.7746 ) }
    apic_2 { pt3dadd( 393.828, 697.928, 75.752, 0.673 ) }
    apic_2 { pt3dadd( 394.4, 696.937, 75.686, 0.6054 ) }
    apic_2 { pt3dadd( 394.961, 695.941, 75.6479, 0.5452 ) }
    apic_2 { pt3dadd( 395.242, 694.84, 75.6823, 0.6154 ) }
    apic_2 { pt3dadd( 395.464, 693.718, 75.7319, 0.7128 ) }
    apic_2 { pt3dadd( 395.689, 692.597, 75.7492, 0.777 ) }
    apic_2 { pt3dadd( 395.917, 691.476, 75.761, 0.8352 ) }
    apic_2 { pt3dadd( 396.323, 690.423, 76.1541, 0.8336 ) }
    apic_2 { pt3dadd( 396.758, 689.381, 76.6052, 0.823 ) }
    apic_2 { pt3dadd( 397.23, 688.375, 77.2554, 0.875 ) }
    apic_2 { pt3dadd( 397.709, 687.373, 77.9346, 0.9364 ) }
    apic_2 { pt3dadd( 398.106, 686.352, 78.7368, 0.9326 ) }
    apic_2 { pt3dadd( 398.491, 685.328, 79.5558, 0.92 ) }
    apic_2 { pt3dadd( 398.622, 684.252, 80.416, 0.841 ) }
    apic_2 { pt3dadd( 398.72, 683.168, 81.2815, 0.7532 ) }
    apic_2 { pt3dadd( 398.218, 682.2, 82.0308, 0.7772 ) }
    apic_2 { pt3dadd( 397.674, 681.241, 82.7719, 0.8092 ) }
    apic_2 { pt3dadd( 397.185, 680.224, 83.2216, 0.8142 ) }
    apic_2 { pt3dadd( 396.7, 679.203, 83.6578, 0.8178 ) }
    apic_2 { pt3dadd( 396.29, 678.144, 83.9773, 0.6926 ) }
    apic_2 { pt3dadd( 395.88, 677.083, 84.294, 0.5644 ) }
    apic_2 { pt3dadd( 395.28, 676.118, 84.6098, 0.6104 ) }
    apic_2 { pt3dadd( 394.675, 675.156, 84.9257, 0.6602 ) }
    apic_2 { pt3dadd( 394.237, 674.116, 85.3866, 0.786 ) }
    apic_2 { pt3dadd( 393.801, 673.075, 85.8494, 0.9128 ) }
    apic_2 { pt3dadd( 393.463, 671.988, 86.1176, 0.8134 ) }
    apic_2 { pt3dadd( 393.126, 670.9, 86.3831, 0.7112 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 395.927, 781.868, 60.6452, 0.8834 ) }
    dend_14 { pt3dadd( 396.29, 782.321, 61.9704, 0.7082 ) }
    dend_14 { pt3dadd( 396.82, 782.975, 63.8588, 0.464 ) }
    dend_14 { pt3dadd( 397.522, 783.671, 65.2711, 0.3998 ) }
    dend_14 { pt3dadd( 398.172, 784.325, 66.74, 0.3454 ) }
    dend_14 { pt3dadd( 397.795, 784.155, 69.3504, 0.4898 ) }
    dend_14 { pt3dadd( 397.343, 783.698, 71.5154, 0.593 ) }
    dend_14 { pt3dadd( 396.818, 782.973, 73.2586, 0.6574 ) }
    dend_14 { pt3dadd( 396.49, 782.204, 75.1072, 0.6922 ) }
    dend_14 { pt3dadd( 396.345, 781.396, 77.0549, 0.699 ) }
    dend_14 { pt3dadd( 396.644, 780.622, 78.7822, 0.6776 ) }
    dend_14 { pt3dadd( 397.207, 779.869, 80.3796, 0.6396 ) }
    dend_14 { pt3dadd( 397.851, 779.159, 81.8972, 0.5874 ) }
    dend_14 { pt3dadd( 398.542, 778.474, 83.3694, 0.5268 ) }
    dend_14 { pt3dadd( 399.287, 777.881, 84.9078, 0.4872 ) }
    dend_14 { pt3dadd( 400.062, 777.339, 86.4816, 0.4586 ) }
    dend_14 { pt3dadd( 400.816, 776.872, 88.2409, 0.3964 ) }
    dend_14 { pt3dadd( 401.558, 776.444, 90.0973, 0.3164 ) }
    dend_14 { pt3dadd( 402.459, 776.183, 91.6485, 0.3022 ) }
    dend_14 { pt3dadd( 403.424, 775.99, 93.0754, 0.3146 ) }
    dend_14 { pt3dadd( 404.383, 775.793, 94.5216, 0.3666 ) }
    dend_14 { pt3dadd( 405.341, 775.595, 95.9756, 0.4342 ) }
    dend_14 { pt3dadd( 406.345, 775.362, 97.1765, 0.3978 ) }
    dend_14 { pt3dadd( 407.367, 775.116, 98.2862, 0.3242 ) }
    dend_14 { pt3dadd( 408.438, 774.859, 99.0038, 0.2952 ) }
    dend_14 { pt3dadd( 409.525, 774.598, 99.596, 0.2808 ) }
    dend_14 { pt3dadd( 410.622, 774.316, 99.9824, 0.28 ) }
    dend_14 { pt3dadd( 411.721, 774.029, 100.304, 0.2834 ) }
    dend_14 { pt3dadd( 412.703, 773.473, 100.517, 0.2934 ) }
    dend_14 { pt3dadd( 413.647, 772.833, 100.697, 0.3056 ) }
    dend_14 { pt3dadd( 414.689, 772.372, 100.836, 0.3472 ) }
    dend_14 { pt3dadd( 415.754, 771.96, 100.964, 0.3966 ) }
    dend_14 { pt3dadd( 416.842, 771.612, 101.102, 0.387 ) }
    dend_14 { pt3dadd( 417.934, 771.276, 101.242, 0.3674 ) }
    dend_14 { pt3dadd( 419.039, 771.001, 101.5, 0.3256 ) }
    dend_14 { pt3dadd( 420.147, 770.734, 101.776, 0.2808 ) }
    dend_14 { pt3dadd( 421.268, 770.676, 102.26, 0.2764 ) }
    dend_14 { pt3dadd( 422.392, 770.645, 102.773, 0.2774 ) }
    dend_14 { pt3dadd( 423.504, 770.713, 103.408, 0.2808 ) }
    dend_14 { pt3dadd( 424.614, 770.792, 104.058, 0.2844 ) }
    dend_14 { pt3dadd( 425.687, 770.962, 104.931, 0.2962 ) }
    dend_14 { pt3dadd( 426.755, 771.142, 105.828, 0.3086 ) }
    dend_14 { pt3dadd( 427.816, 771.114, 106.863, 0.3254 ) }
    dend_14 { pt3dadd( 428.875, 771.065, 107.911, 0.3426 ) }
    dend_14 { pt3dadd( 429.888, 770.713, 108.876, 0.314 ) }
    dend_14 { pt3dadd( 430.897, 770.343, 109.836, 0.2828 ) }
    dend_14 { pt3dadd( 431.917, 769.965, 110.691, 0.2788 ) }
    dend_14 { pt3dadd( 432.939, 769.585, 111.541, 0.2766 ) }
    dend_14 { pt3dadd( 433.974, 769.171, 112.174, 0.2786 ) }
    dend_14 { pt3dadd( 435.008, 768.754, 112.794, 0.2808 ) }
    dend_14 { pt3dadd( 436.054, 768.32, 113.201, 0.2884 ) }
    dend_14 { pt3dadd( 437.099, 767.885, 113.596, 0.2962 ) }
    dend_14 { pt3dadd( 438.08, 767.336, 114.112, 0.331 ) }
    dend_14 { pt3dadd( 439.058, 766.781, 114.634, 0.3674 ) }
    dend_14 { pt3dadd( 440.096, 766.38, 115.28, 0.3398 ) }
    dend_14 { pt3dadd( 441.137, 765.988, 115.933, 0.309 ) }
    dend_14 { pt3dadd( 442.15, 765.495, 116.406, 0.3052 ) }
    dend_14 { pt3dadd( 443.163, 765.0, 116.878, 0.3016 ) }
    dend_14 { pt3dadd( 444.136, 764.413, 117.214, 0.3424 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( 445.109, 763.827, 117.551, 0.3834 ) }
    dend_14 { pt3dadd( 446.119, 763.296, 117.752, 0.3586 ) }
    dend_14 { pt3dadd( 447.129, 762.767, 117.953, 0.3336 ) }
    dend_14 { pt3dadd( 448.179, 762.312, 118.035, 0.3236 ) }
    dend_14 { pt3dadd( 449.228, 761.858, 118.116, 0.3134 ) }
    dend_14 { pt3dadd( 450.352, 761.64, 118.131, 0.2712 ) }
    dend_14 { pt3dadd( 451.474, 761.42, 118.146, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 7/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 395.927, 781.868, 60.6452, 0.8834 ) }
    dend_13 { pt3dadd( 397.28, 782.228, 60.9126, 0.8258 ) }
    dend_13 { pt3dadd( 398.375, 782.549, 61.1092, 0.7584 ) }
    dend_13 { pt3dadd( 399.461, 782.902, 61.278, 0.6638 ) }
    dend_13 { pt3dadd( 400.564, 783.036, 61.5294, 0.6488 ) }
    dend_13 { pt3dadd( 401.688, 782.885, 61.8867, 0.7356 ) }
    dend_13 { pt3dadd( 402.821, 782.791, 62.1586, 0.775 ) }
    dend_13 { pt3dadd( 403.962, 782.758, 62.3372, 0.7624 ) }
    dend_13 { pt3dadd( 405.098, 782.819, 62.4226, 0.7408 ) }
    dend_13 { pt3dadd( 406.231, 782.981, 62.4086, 0.7096 ) }
    dend_13 { pt3dadd( 407.368, 783.101, 62.3851, 0.6772 ) }
    dend_13 { pt3dadd( 408.51, 783.177, 62.3515, 0.6438 ) }
    dend_13 { pt3dadd( 409.645, 783.307, 62.3655, 0.6462 ) }
    dend_13 { pt3dadd( 410.773, 783.495, 62.4285, 0.6852 ) }
    dend_13 { pt3dadd( 411.909, 783.601, 62.5005, 0.689 ) }
    dend_13 { pt3dadd( 413.052, 783.627, 62.5817, 0.6566 ) }
    dend_13 { pt3dadd( 414.195, 783.645, 62.5789, 0.7024 ) }
    dend_13 { pt3dadd( 415.338, 783.655, 62.4918, 0.8268 ) }
    dend_13 { pt3dadd( 416.48, 783.641, 62.5582, 0.8616 ) }
    dend_13 { pt3dadd( 417.621, 783.603, 62.7774, 0.8072 ) }
    dend_13 { pt3dadd( 418.677, 783.297, 63.2349, 0.7056 ) }
    dend_13 { pt3dadd( 419.673, 782.798, 63.8644, 0.5704 ) }
    dend_13 { pt3dadd( 420.402, 782.038, 64.6447, 0.575 ) }
    dend_13 { pt3dadd( 420.942, 781.097, 65.5298, 0.6772 ) }
    dend_13 { pt3dadd( 421.074, 780.057, 66.3107, 0.7148 ) }
    dend_13 { pt3dadd( 420.959, 778.958, 67.0281, 0.7132 ) }
    dend_13 { pt3dadd( 421.381, 777.982, 67.366, 0.7434 ) }
    dend_13 { pt3dadd( 422.064, 777.067, 67.5189, 0.789 ) }
    dend_13 { pt3dadd( 422.889, 776.283, 67.5363, 0.7736 ) }
    dend_13 { pt3dadd( 423.764, 775.546, 67.5044, 0.736 ) }
    dend_13 { pt3dadd( 424.584, 774.752, 67.3562, 0.629 ) }
    dend_13 { pt3dadd( 425.384, 773.939, 67.1661, 0.4968 ) }
    dend_13 { pt3dadd( 425.968, 773.076, 66.1637, 0.4394 ) }
    dend_13 { pt3dadd( 426.476, 772.198, 64.8746, 0.4084 ) }
    dend_13 { pt3dadd( 426.733, 771.133, 64.2275, 0.4226 ) }
    dend_13 { pt3dadd( 426.929, 770.024, 63.7314, 0.4476 ) }
    dend_13 { pt3dadd( 427.478, 769.047, 63.9335, 0.5162 ) }
    dend_13 { pt3dadd( 428.1, 768.096, 64.2776, 0.5936 ) }
    dend_13 { pt3dadd( 428.799, 767.202, 64.615, 0.707 ) }
    dend_13 { pt3dadd( 429.507, 766.314, 64.9516, 0.8248 ) }
    dend_13 { pt3dadd( 430.412, 765.62, 64.934, 0.7796 ) }
    dend_13 { pt3dadd( 431.335, 764.945, 64.883, 0.719 ) }
    dend_13 { pt3dadd( 432.258, 764.289, 64.5112, 0.7828 ) }
    dend_13 { pt3dadd( 433.184, 763.635, 64.1102, 0.858 ) }
    dend_13 { pt3dadd( 433.884, 762.751, 63.6784, 0.8604 ) }
    dend_13 { pt3dadd( 434.572, 761.855, 63.2453, 0.8592 ) }
    dend_13 { pt3dadd( 435.552, 761.292, 62.8463, 0.738 ) }
    dend_13 { pt3dadd( 436.541, 760.741, 62.4484, 0.613 ) }
    dend_13 { pt3dadd( 437.508, 760.141, 62.1508, 0.5896 ) }
    dend_13 { pt3dadd( 438.474, 759.541, 61.8562, 0.5692 ) }
    dend_13 { pt3dadd( 439.31, 758.768, 61.5972, 0.6968 ) }
    dend_13 { pt3dadd( 440.144, 757.992, 61.3393, 0.8282 ) }
    dend_13 { pt3dadd( 440.642, 756.971, 61.0459, 0.8822 ) }
    dend_13 { pt3dadd( 441.107, 755.936, 60.7572, 0.9182 ) }
    dend_13 { pt3dadd( 441.289, 754.811, 60.5237, 0.793 ) }
    dend_13 { pt3dadd( 441.393, 753.7, 60.2798, 0.6798 ) }
    dend_13 { pt3dadd( 440.828, 752.715, 59.9497, 0.6708 ) }
    dend_13 { pt3dadd( 440.316, 751.712, 59.5868, 0.6622 ) }
    dend_13 { pt3dadd( 440.122, 750.608, 59.0349, 0.6548 ) }
    dend_13 { pt3dadd( 440.082, 749.544, 58.3596, 0.6564 ) }
    dend_13 { pt3dadd( 440.593, 748.629, 57.2435, 0.6902 ) }
    dend_13 { pt3dadd( 441.257, 747.833, 56.2153, 0.7022 ) }
    dend_13 { pt3dadd( 442.148, 747.215, 55.3185, 0.6812 ) }
    dend_13 { pt3dadd( 442.992, 746.517, 54.5765, 0.6452 ) }
    dend_13 { pt3dadd( 443.775, 745.712, 54.047, 0.5882 ) }
    dend_13 { pt3dadd( 444.475, 744.834, 53.6175, 0.5242 ) }
    dend_13 { pt3dadd( 445.068, 743.863, 53.3184, 0.4512 ) }
    dend_13 { pt3dadd( 445.231, 742.83, 53.1306, 0.3988 ) }
    dend_13 { pt3dadd( 444.92, 741.73, 53.0664, 0.3692 ) }
    dend_13 { pt3dadd( 444.784, 740.608, 52.929, 0.3814 ) }
    dend_13 { pt3dadd( 444.808, 739.468, 52.7246, 0.4316 ) }
    dend_13 { pt3dadd( 444.879, 738.336, 52.3855, 0.4636 ) }
    dend_13 { pt3dadd( 444.992, 737.213, 51.9266, 0.4798 ) }
    dend_13 { pt3dadd( 445.032, 736.1, 51.3302, 0.4846 ) }
    dend_13 { pt3dadd( 445.009, 734.995, 50.6114, 0.4792 ) }
    dend_13 { pt3dadd( 445.121, 733.955, 49.5678, 0.5188 ) }
    dend_13 { pt3dadd( 445.345, 732.97, 48.2549, 0.5956 ) }
    dend_13 { pt3dadd( 445.747, 732.014, 47.101, 0.6168 ) }
    dend_13 { pt3dadd( 446.208, 731.069, 46.0012, 0.6192 ) }
    dend_13 { pt3dadd( 446.327, 730.012, 45.1052, 0.5642 ) }
    dend_13 { pt3dadd( 446.337, 728.919, 44.2742, 0.4912 ) }
    dend_13 { pt3dadd( 446.772, 727.908, 43.6948, 0.491 ) }
    dend_13 { pt3dadd( 447.295, 726.912, 43.1682, 0.5058 ) }
    dend_13 { pt3dadd( 447.904, 725.959, 42.7633, 0.6218 ) }
    dend_13 { pt3dadd( 448.529, 725.015, 42.3828, 0.758 ) }
    dend_13 { pt3dadd( 449.154, 724.067, 42.0283, 0.765 ) }
    dend_13 { pt3dadd( 449.779, 723.119, 41.6791, 0.7464 ) }
    dend_13 { pt3dadd( 450.493, 722.235, 41.4053, 0.5986 ) }
    dend_13 { pt3dadd( 451.227, 721.364, 41.1463, 0.4258 ) }
    dend_13 { pt3dadd( 452.214, 720.84, 40.7442, 0.3916 ) }
    dend_13 { pt3dadd( 453.247, 720.383, 40.3155, 0.3834 ) }
    dend_13 { pt3dadd( 454.248, 720.013, 39.3252, 0.309 ) }
    dend_13 { pt3dadd( 455.247, 719.65, 38.2841, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 0/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 402.452, 788.916, 44.5164, 0.5544 ) }
    dend_8 { pt3dadd( 403.203, 788.78, 44.767, 0.3954 ) }
    dend_8 { pt3dadd( 404.275, 788.433, 45.0887, 0.4246 ) }
    dend_8 { pt3dadd( 405.307, 787.953, 45.3625, 0.6998 ) }
    dend_8 { pt3dadd( 406.366, 787.555, 45.7136, 0.8346 ) }
    dend_8 { pt3dadd( 407.448, 787.224, 46.1294, 0.8514 ) }
    dend_8 { pt3dadd( 408.493, 786.797, 46.5506, 0.8384 ) }
    dend_8 { pt3dadd( 409.51, 786.304, 46.9756, 0.8048 ) }
    dend_8 { pt3dadd( 410.358, 785.604, 47.5065, 0.7792 ) }
    dend_8 { pt3dadd( 411.092, 784.761, 48.1096, 0.7592 ) }
    dend_8 { pt3dadd( 411.314, 783.8, 49.1187, 0.7724 ) }
    dend_8 { pt3dadd( 411.254, 782.774, 50.3496, 0.8034 ) }
    dend_8 { pt3dadd( 411.336, 781.707, 51.2884, 0.8018 ) }
    dend_8 { pt3dadd( 411.475, 780.622, 52.11, 0.787 ) }
    dend_8 { pt3dadd( 411.333, 779.542, 52.8836, 0.7308 ) }
    dend_8 { pt3dadd( 411.109, 778.463, 53.643, 0.6624 ) }
    dend_8 { pt3dadd( 411.334, 777.451, 54.6941, 0.6062 ) }
    dend_8 { pt3dadd( 411.657, 776.452, 55.8085, 0.5528 ) }
    dend_8 { pt3dadd( 412.031, 775.417, 56.558, 0.6914 ) }
    dend_8 { pt3dadd( 412.412, 774.379, 57.2768, 0.8454 ) }
    dend_8 { pt3dadd( 412.929, 773.41, 58.0639, 0.8804 ) }
    dend_8 { pt3dadd( 413.461, 772.456, 58.8666, 0.9136 ) }
    dend_8 { pt3dadd( 414.236, 771.737, 59.9332, 0.9124 ) }
    dend_8 { pt3dadd( 415.015, 771.029, 61.0308, 0.914 ) }
    dend_8 { pt3dadd( 415.801, 770.349, 62.2026, 0.9216 ) }
    dend_8 { pt3dadd( 416.573, 769.625, 63.2377, 0.887 ) }
    dend_8 { pt3dadd( 417.319, 768.822, 64.0366, 0.7794 ) }
    dend_8 { pt3dadd( 418.157, 768.112, 64.6828, 0.751 ) }
    dend_8 { pt3dadd( 419.139, 767.549, 65.095, 0.8436 ) }
    dend_8 { pt3dadd( 420.173, 767.107, 65.4377, 0.8668 ) }
    dend_8 { pt3dadd( 421.275, 766.819, 65.6919, 0.8018 ) }
    dend_8 { pt3dadd( 422.38, 766.537, 65.9378, 0.7544 ) }
    dend_8 { pt3dadd( 423.486, 766.264, 66.1732, 0.7286 ) }
    dend_8 { pt3dadd( 424.538, 765.871, 66.5465, 0.7 ) }
    dend_8 { pt3dadd( 425.522, 765.333, 67.0883, 0.6682 ) }
    dend_8 { pt3dadd( 426.542, 764.89, 67.688, 0.665 ) }
    dend_8 { pt3dadd( 427.603, 764.562, 68.3586, 0.6966 ) }
    dend_8 { pt3dadd( 428.693, 764.368, 68.9657, 0.75 ) }
    dend_8 { pt3dadd( 429.815, 764.321, 69.5036, 0.8274 ) }
    dend_8 { pt3dadd( 430.867, 764.019, 69.9661, 0.8394 ) }
    dend_8 { pt3dadd( 431.846, 763.448, 70.3486, 0.7824 ) }
    dend_8 { pt3dadd( 432.83, 762.892, 70.7672, 0.7406 ) }
    dend_8 { pt3dadd( 433.821, 762.35, 71.2174, 0.7122 ) }
    dend_8 { pt3dadd( 434.855, 761.906, 71.6668, 0.6992 ) }
    dend_8 { pt3dadd( 435.926, 761.549, 72.1157, 0.6994 ) }
    dend_8 { pt3dadd( 437.013, 761.234, 72.4996, 0.6526 ) }
    dend_8 { pt3dadd( 438.114, 760.953, 72.8274, 0.5652 ) }
    dend_8 { pt3dadd( 439.211, 760.647, 73.0461, 0.5574 ) }
    dend_8 { pt3dadd( 440.306, 760.317, 73.1707, 0.6184 ) }
    dend_8 { pt3dadd( 441.131, 759.646, 73.4527, 0.623 ) }
    dend_8 { pt3dadd( 441.727, 758.685, 73.8693, 0.5792 ) }
    dend_8 { pt3dadd( 442.129, 757.649, 74.4691, 0.5872 ) }
    dend_8 { pt3dadd( 442.468, 756.591, 75.1279, 0.612 ) }
    dend_8 { pt3dadd( 442.677, 755.5, 75.7806, 0.5294 ) }
    dend_8 { pt3dadd( 442.841, 754.401, 76.4313, 0.4126 ) }
    dend_8 { pt3dadd( 442.903, 753.291, 77.0781, 0.43 ) }
    dend_8 { pt3dadd( 442.931, 752.178, 77.7232, 0.4902 ) }
    dend_8 { pt3dadd( 443.021, 751.055, 78.2043, 0.4926 ) }
    dend_8 { pt3dadd( 443.131, 749.93, 78.6332, 0.4766 ) }
    dend_8 { pt3dadd( 443.077, 748.799, 78.9608, 0.487 ) }
    dend_8 { pt3dadd( 442.972, 747.667, 79.2574, 0.5054 ) }
    dend_8 { pt3dadd( 442.95, 746.529, 79.5088, 0.5526 ) }
    dend_8 { pt3dadd( 442.954, 745.388, 79.7471, 0.6084 ) }
    dend_8 { pt3dadd( 443.124, 744.268, 80.0948, 0.539 ) }
    dend_8 { pt3dadd( 443.311, 743.149, 80.4558, 0.455 ) }
    dend_8 { pt3dadd( 443.721, 742.083, 80.4572, 0.4132 ) }
    dend_8 { pt3dadd( 444.15, 741.023, 80.4264, 0.3754 ) }
    dend_8 { pt3dadd( 444.982, 740.242, 80.3177, 0.381 ) }
    dend_8 { pt3dadd( 445.821, 739.468, 80.2071, 0.3876 ) }
    dend_8 { pt3dadd( 446.914, 739.175, 79.8095, 0.505 ) }
    dend_8 { pt3dadd( 448.01, 738.89, 79.4077, 0.624 ) }
    dend_8 { pt3dadd( 449.118, 739.109, 78.9684, 0.5578 ) }
    dend_8 { pt3dadd( 450.227, 739.327, 78.5288, 0.4912 ) }
    dend_8 { pt3dadd( 451.366, 739.332, 78.2734, 0.428 ) }
    dend_8 { pt3dadd( 452.505, 739.335, 78.0184, 0.3646 ) }
    dend_8 { pt3dadd( 453.647, 739.335, 77.8562, 0.4112 ) }
    dend_8 { pt3dadd( 454.789, 739.335, 77.6941, 0.4576 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 77/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 402.452, 788.916, 44.5164, 0.5544 ) }
    dend_7 { pt3dadd( 403.078, 789.259, 43.3294, 0.646 ) }
    dend_7 { pt3dadd( 403.986, 789.529, 41.9776, 0.7392 ) }
    dend_7 { pt3dadd( 405.066, 789.404, 41.1029, 0.7714 ) }
    dend_7 { pt3dadd( 406.162, 789.352, 40.3942, 0.8006 ) }
    dend_7 { pt3dadd( 407.292, 789.449, 40.0173, 0.824 ) }
    dend_7 { pt3dadd( 408.424, 789.478, 39.7572, 0.848 ) }
    dend_7 { pt3dadd( 409.562, 789.369, 39.7214, 0.8728 ) }
    dend_7 { pt3dadd( 410.703, 789.281, 39.6654, 0.87 ) }
    dend_7 { pt3dadd( 411.845, 789.233, 39.5718, 0.817 ) }
    dend_7 { pt3dadd( 412.983, 789.254, 39.4167, 0.7894 ) }
    dend_7 { pt3dadd( 414.112, 789.401, 39.1488, 0.8086 ) }
    dend_7 { pt3dadd( 415.245, 789.508, 38.8833, 0.8262 ) }
    dend_7 { pt3dadd( 416.383, 789.541, 38.6218, 0.8402 ) }
    dend_7 { pt3dadd( 417.503, 789.427, 38.3855, 0.8468 ) }
    dend_7 { pt3dadd( 418.596, 789.103, 38.1856, 0.842 ) }
    dend_7 { pt3dadd( 419.688, 788.764, 38.0478, 0.8078 ) }
    dend_7 { pt3dadd( 420.775, 788.408, 37.9991, 0.7318 ) }
    dend_7 { pt3dadd( 421.885, 788.248, 38.0131, 0.7374 ) }
    dend_7 { pt3dadd( 423.026, 788.329, 38.1044, 0.8442 ) }
    dend_7 { pt3dadd( 424.168, 788.349, 38.1772, 0.9008 ) }
    dend_7 { pt3dadd( 425.31, 788.294, 38.2273, 0.8958 ) }
    dend_7 { pt3dadd( 426.447, 788.182, 38.2819, 0.8386 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 427.576, 788.0, 38.3415, 0.7172 ) }
    dend_7 { pt3dadd( 428.697, 787.784, 38.4695, 0.7234 ) }
    dend_7 { pt3dadd( 429.808, 787.526, 38.68, 0.8844 ) }
    dend_7 { pt3dadd( 430.842, 787.107, 39.0426, 0.921 ) }
    dend_7 { pt3dadd( 431.782, 786.495, 39.587, 0.8094 ) }
    dend_7 { pt3dadd( 432.821, 786.152, 40.0151, 0.7232 ) }
    dend_7 { pt3dadd( 433.955, 786.071, 40.3301, 0.662 ) }
    dend_7 { pt3dadd( 435.093, 786.031, 40.565, 0.6246 ) }
    dend_7 { pt3dadd( 436.235, 786.031, 40.7238, 0.6096 ) }
    dend_7 { pt3dadd( 437.378, 786.031, 40.7543, 0.6362 ) }
    dend_7 { pt3dadd( 438.52, 786.031, 40.6624, 0.7024 ) }
    dend_7 { pt3dadd( 439.662, 786.031, 40.4919, 0.736 ) }
    dend_7 { pt3dadd( 440.802, 786.031, 40.2464, 0.7386 ) }
    dend_7 { pt3dadd( 441.935, 786.046, 39.8885, 0.7382 ) }
    dend_7 { pt3dadd( 443.063, 786.076, 39.4243, 0.735 ) }
    dend_7 { pt3dadd( 444.156, 786.284, 38.9197, 0.7004 ) }
    dend_7 { pt3dadd( 445.214, 786.656, 38.3776, 0.6364 ) }
    dend_7 { pt3dadd( 446.272, 787.043, 37.9028, 0.5552 ) }
    dend_7 { pt3dadd( 447.33, 787.443, 37.4858, 0.4588 ) }
    dend_7 { pt3dadd( 448.38, 787.846, 36.9872, 0.429 ) }
    dend_7 { pt3dadd( 449.424, 788.255, 36.419, 0.4554 ) }
    dend_7 { pt3dadd( 450.445, 788.647, 35.6266, 0.475 ) }
    dend_7 { pt3dadd( 451.449, 789.027, 34.6564, 0.4894 ) }
    dend_7 { pt3dadd( 452.266, 789.665, 33.6633, 0.5014 ) }
    dend_7 { pt3dadd( 452.952, 790.482, 32.6544, 0.5116 ) }
    dend_7 { pt3dadd( 453.882, 791.016, 31.9614, 0.5144 ) }
    dend_7 { pt3dadd( 454.933, 791.414, 31.4227, 0.5134 ) }
    dend_7 { pt3dadd( 456.048, 791.51, 31.0685, 0.4838 ) }
    dend_7 { pt3dadd( 457.186, 791.498, 30.7804, 0.444 ) }
    dend_7 { pt3dadd( 458.315, 791.353, 30.6197, 0.381 ) }
    dend_7 { pt3dadd( 459.442, 791.158, 30.5046, 0.3096 ) }
    dend_7 { pt3dadd( 460.372, 790.545, 30.4424, 0.3104 ) }
    dend_7 { pt3dadd( 461.242, 789.803, 30.3962, 0.3334 ) }
    dend_7 { pt3dadd( 461.868, 788.857, 30.4217, 0.3496 ) }
    dend_7 { pt3dadd( 462.438, 787.865, 30.4632, 0.3642 ) }
    dend_7 { pt3dadd( 462.86, 786.804, 30.5161, 0.3938 ) }
    dend_7 { pt3dadd( 463.251, 785.73, 30.5712, 0.4266 ) }
    dend_7 { pt3dadd( 463.47, 784.61, 30.6046, 0.4552 ) }
    dend_7 { pt3dadd( 463.653, 783.481, 30.6337, 0.483 ) }
    dend_7 { pt3dadd( 464.07, 782.422, 30.6594, 0.457 ) }
    dend_7 { pt3dadd( 464.534, 781.375, 30.6849, 0.421 ) }
    dend_7 { pt3dadd( 465.241, 780.485, 30.7936, 0.3916 ) }
    dend_7 { pt3dadd( 465.987, 779.618, 30.9156, 0.3632 ) }
    dend_7 { pt3dadd( 466.439, 778.576, 30.994, 0.3252 ) }
    dend_7 { pt3dadd( 466.853, 777.509, 31.0666, 0.2862 ) }
    dend_7 { pt3dadd( 467.415, 776.521, 31.3138, 0.2908 ) }
    dend_7 { pt3dadd( 467.997, 775.542, 31.5823, 0.3008 ) }
    dend_7 { pt3dadd( 468.731, 774.672, 31.8343, 0.3308 ) }
    dend_7 { pt3dadd( 469.48, 773.813, 32.0846, 0.3628 ) }
    dend_7 { pt3dadd( 470.258, 772.982, 32.352, 0.417 ) }
    dend_7 { pt3dadd( 471.04, 772.153, 32.6208, 0.4732 ) }
    dend_7 { pt3dadd( 471.821, 771.326, 32.9034, 0.508 ) }
    dend_7 { pt3dadd( 472.602, 770.499, 33.1867, 0.5416 ) }
    dend_7 { pt3dadd( 473.509, 769.808, 33.4121, 0.5204 ) }
    dend_7 { pt3dadd( 474.422, 769.127, 33.6336, 0.4958 ) }
    dend_7 { pt3dadd( 475.251, 768.339, 33.7616, 0.444 ) }
    dend_7 { pt3dadd( 476.072, 767.545, 33.8836, 0.3906 ) }
    dend_7 { pt3dadd( 476.501, 766.491, 34.013, 0.3742 ) }
    dend_7 { pt3dadd( 476.908, 765.424, 34.1424, 0.3598 ) }
    dend_7 { pt3dadd( 477.721, 764.623, 34.2115, 0.4266 ) }
    dend_7 { pt3dadd( 478.548, 763.834, 34.2784, 0.4964 ) }
    dend_7 { pt3dadd( 479.508, 763.214, 34.1765, 0.435 ) }
    dend_7 { pt3dadd( 480.471, 762.598, 34.0704, 0.3704 ) }
    dend_7 { pt3dadd( 481.371, 761.954, 33.3696, 0.2996 ) }
    dend_7 { pt3dadd( 482.269, 761.309, 32.6539, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_2 (entry count 65/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 393.126, 670.9, 86.3831, 0.7112 ) }
    apic_8 { pt3dadd( 391.968, 670.635, 85.8018, 0.3782 ) }
    apic_8 { pt3dadd( 390.859, 670.382, 85.5254, 0.3174 ) }
    apic_8 { pt3dadd( 389.747, 670.128, 85.3166, 0.3192 ) }
    apic_8 { pt3dadd( 388.63, 669.889, 85.1234, 0.3098 ) }
    apic_8 { pt3dadd( 387.514, 669.653, 84.9341, 0.2976 ) }
    apic_8 { pt3dadd( 386.381, 669.699, 84.7932, 0.314 ) }
    apic_8 { pt3dadd( 385.244, 669.813, 84.6642, 0.3374 ) }
    apic_8 { pt3dadd( 384.114, 669.988, 84.6026, 0.3756 ) }
    apic_8 { pt3dadd( 382.986, 670.176, 84.5552, 0.4168 ) }
    apic_8 { pt3dadd( 381.849, 670.296, 84.5404, 0.3708 ) }
    apic_8 { pt3dadd( 380.71, 670.402, 84.5326, 0.3056 ) }
    apic_8 { pt3dadd( 379.567, 670.421, 84.5312, 0.2862 ) }
    apic_8 { pt3dadd( 378.423, 670.421, 84.5312, 0.2762 ) }
    apic_8 { pt3dadd( 377.279, 670.421, 84.5309, 0.2746 ) }
    apic_8 { pt3dadd( 376.135, 670.421, 84.5306, 0.2748 ) }
    apic_8 { pt3dadd( 374.991, 670.421, 84.5303, 0.275 ) }
    apic_8 { pt3dadd( 373.847, 670.421, 84.53, 0.2752 ) }
    apic_8 { pt3dadd( 372.703, 670.421, 84.5295, 0.276 ) }
    apic_8 { pt3dadd( 371.559, 670.421, 84.5289, 0.277 ) }
    apic_8 { pt3dadd( 370.415, 670.422, 84.5278, 0.28 ) }
    apic_8 { pt3dadd( 369.271, 670.424, 84.5267, 0.2832 ) }
    apic_8 { pt3dadd( 368.131, 670.519, 84.5244, 0.2932 ) }
    apic_8 { pt3dadd( 366.993, 670.635, 84.5219, 0.3044 ) }
    apic_8 { pt3dadd( 365.858, 670.773, 84.5177, 0.3372 ) }
    apic_8 { pt3dadd( 364.722, 670.915, 84.5132, 0.3746 ) }
    apic_8 { pt3dadd( 363.604, 671.154, 84.5046, 0.4626 ) }
    apic_8 { pt3dadd( 362.491, 671.415, 84.4953, 0.5614 ) }
    apic_8 { pt3dadd( 361.454, 671.888, 84.4785, 0.4894 ) }
    apic_8 { pt3dadd( 360.431, 672.4, 84.4603, 0.3876 ) }
    apic_8 { pt3dadd( 359.393, 672.883, 84.4278, 0.3324 ) }
    apic_8 { pt3dadd( 358.355, 673.361, 84.3926, 0.2854 ) }
    apic_8 { pt3dadd( 357.26, 673.687, 84.3279, 0.2828 ) }
    apic_8 { pt3dadd( 356.157, 673.988, 84.2579, 0.2876 ) }
    apic_8 { pt3dadd( 355.036, 674.205, 84.1302, 0.3024 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_8 { pt3dadd( 353.911, 674.411, 83.9933, 0.3188 ) }
    apic_8 { pt3dadd( 352.934, 674.978, 83.7312, 0.3506 ) }
    apic_8 { pt3dadd( 351.974, 675.591, 83.4534, 0.3844 ) }
    apic_8 { pt3dadd( 351.163, 676.361, 82.9072, 0.3802 ) }
    apic_8 { pt3dadd( 350.367, 677.15, 82.3323, 0.372 ) }
    apic_8 { pt3dadd( 349.457, 677.798, 81.7572, 0.3632 ) }
    apic_8 { pt3dadd( 348.534, 678.433, 81.1821, 0.3544 ) }
    apic_8 { pt3dadd( 347.528, 678.94, 80.7178, 0.3814 ) }
    apic_8 { pt3dadd( 346.513, 679.433, 80.2645, 0.4122 ) }
    apic_8 { pt3dadd( 345.409, 679.711, 80.0083, 0.3602 ) }
    apic_8 { pt3dadd( 344.301, 679.974, 79.7656, 0.3026 ) }
    apic_8 { pt3dadd( 343.191, 680.238, 79.5768, 0.3074 ) }
    apic_8 { pt3dadd( 342.08, 680.504, 79.3918, 0.3162 ) }
    apic_8 { pt3dadd( 340.983, 680.804, 79.0919, 0.3388 ) }
    apic_8 { pt3dadd( 339.887, 681.107, 78.7844, 0.3624 ) }
    apic_8 { pt3dadd( 338.796, 681.402, 78.3563, 0.3652 ) }
    apic_8 { pt3dadd( 337.705, 681.698, 77.9204, 0.3666 ) }
    apic_8 { pt3dadd( 336.604, 681.934, 77.4239, 0.3382 ) }
    apic_8 { pt3dadd( 335.503, 682.165, 76.9236, 0.308 ) }
    apic_8 { pt3dadd( 334.4, 682.398, 76.4403, 0.2912 ) }
    apic_8 { pt3dadd( 333.297, 682.63, 75.9584, 0.2756 ) }
    apic_8 { pt3dadd( 332.212, 682.961, 75.6157, 0.2746 ) }
    apic_8 { pt3dadd( 331.127, 683.297, 75.2819, 0.2746 ) }
    apic_8 { pt3dadd( 330.041, 683.643, 75.049, 0.2746 ) }
    apic_8 { pt3dadd( 328.954, 683.988, 74.8224, 0.2748 ) }
    apic_8 { pt3dadd( 327.821, 684.08, 74.5562, 0.2752 ) }
    apic_8 { pt3dadd( 326.684, 684.156, 74.2874, 0.2756 ) }
    apic_8 { pt3dadd( 325.55, 684.159, 73.9172, 0.2768 ) }
    apic_8 { pt3dadd( 324.417, 684.159, 73.5412, 0.278 ) }
    apic_8 { pt3dadd( 323.288, 684.159, 73.089, 0.2818 ) }
    apic_8 { pt3dadd( 322.16, 684.159, 72.6323, 0.2858 ) }
    apic_8 { pt3dadd( 321.035, 684.159, 72.1109, 0.2982 ) }
    apic_8 { pt3dadd( 319.912, 684.159, 71.5856, 0.311 ) }
    apic_8 { pt3dadd( 318.792, 684.159, 71.0153, 0.3254 ) }
    apic_8 { pt3dadd( 317.672, 684.159, 70.4424, 0.3398 ) }
    apic_8 { pt3dadd( 316.563, 684.159, 69.7547, 0.3108 ) }
    apic_8 { pt3dadd( 315.455, 684.159, 69.0603, 0.2792 ) }
    apic_8 { pt3dadd( 314.349, 684.159, 68.334, 0.2766 ) }
    apic_8 { pt3dadd( 313.246, 684.159, 67.6057, 0.2758 ) }
    apic_8 { pt3dadd( 312.121, 684.159, 67.0967, 0.2768 ) }
    apic_8 { pt3dadd( 310.995, 684.159, 66.6002, 0.278 ) }
    apic_8 { pt3dadd( 309.856, 684.159, 66.3516, 0.2822 ) }
    apic_8 { pt3dadd( 308.715, 684.159, 66.117, 0.2866 ) }
    apic_8 { pt3dadd( 307.572, 684.159, 65.9834, 0.301 ) }
    apic_8 { pt3dadd( 306.43, 684.159, 65.8552, 0.316 ) }
    apic_8 { pt3dadd( 305.29, 684.159, 65.6314, 0.3726 ) }
    apic_8 { pt3dadd( 304.15, 684.159, 65.403, 0.4314 ) }
    apic_8 { pt3dadd( 303.012, 684.159, 65.0958, 0.4462 ) }
    apic_8 { pt3dadd( 301.875, 684.159, 64.7844, 0.4586 ) }
    apic_8 { pt3dadd( 300.761, 683.931, 64.5145, 0.3844 ) }
    apic_8 { pt3dadd( 299.648, 683.691, 64.2466, 0.3056 ) }
    apic_8 { pt3dadd( 298.585, 683.271, 64.1323, 0.2946 ) }
    apic_8 { pt3dadd( 297.523, 682.847, 64.0223, 0.2852 ) }
    apic_8 { pt3dadd( 296.41, 682.585, 63.9951, 0.2964 ) }
    apic_8 { pt3dadd( 295.296, 682.327, 63.9699, 0.308 ) }
    apic_8 { pt3dadd( 294.152, 682.327, 63.9699, 0.3108 ) }
    apic_8 { pt3dadd( 293.008, 682.327, 63.9699, 0.3134 ) }
    apic_8 { pt3dadd( 291.864, 682.327, 63.9699, 0.2712 ) }
    apic_8 { pt3dadd( 290.72, 682.327, 63.9699, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 59/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 393.126, 670.9, 86.3831, 0.7112 ) }
    apic_3 { pt3dadd( 392.632, 669.493, 86.8274, 0.571 ) }
    apic_3 { pt3dadd( 392.622, 668.39, 87.0587, 0.5712 ) }
    apic_3 { pt3dadd( 392.831, 667.268, 87.2256, 0.636 ) }
    apic_3 { pt3dadd( 392.746, 666.152, 87.435, 0.6466 ) }
    apic_3 { pt3dadd( 392.49, 665.04, 87.6686, 0.6262 ) }
    apic_3 { pt3dadd( 392.416, 663.909, 87.8444, 0.6188 ) }
    apic_3 { pt3dadd( 392.435, 662.767, 87.99, 0.618 ) }
    apic_3 { pt3dadd( 392.629, 661.646, 88.0606, 0.6144 ) }
    apic_3 { pt3dadd( 392.905, 660.536, 88.0947, 0.6092 ) }
    apic_3 { pt3dadd( 392.911, 659.407, 88.1275, 0.5854 ) }
    apic_3 { pt3dadd( 392.789, 658.27, 88.1597, 0.553 ) }
    apic_3 { pt3dadd( 392.607, 657.143, 88.2899, 0.5714 ) }
    apic_3 { pt3dadd( 392.401, 656.02, 88.4587, 0.61 ) }
    apic_3 { pt3dadd( 392.63, 654.931, 88.5923, 0.6632 ) }
    apic_3 { pt3dadd( 393.013, 653.854, 88.7135, 0.7214 ) }
    apic_3 { pt3dadd( 393.372, 652.769, 88.8412, 0.717 ) }
    apic_3 { pt3dadd( 393.723, 651.682, 88.9708, 0.6934 ) }
    apic_3 { pt3dadd( 393.757, 650.549, 89.0683, 0.6338 ) }
    apic_3 { pt3dadd( 393.713, 649.408, 89.1582, 0.5656 ) }
    apic_3 { pt3dadd( 393.569, 648.274, 89.2514, 0.599 ) }
    apic_3 { pt3dadd( 393.401, 647.144, 89.3458, 0.6566 ) }
    apic_3 { pt3dadd( 393.39, 646.004, 89.5177, 0.716 ) }
    apic_3 { pt3dadd( 393.412, 644.862, 89.7067, 0.7756 ) }
    apic_3 { pt3dadd( 393.669, 643.756, 89.913, 0.8508 ) }
    apic_3 { pt3dadd( 393.97, 642.656, 90.1225, 0.9288 ) }
    apic_3 { pt3dadd( 394.143, 641.528, 90.295, 0.831 ) }
    apic_3 { pt3dadd( 394.294, 640.396, 90.4602, 0.7004 ) }
    apic_3 { pt3dadd( 394.17, 639.268, 90.6707, 0.7692 ) }
    apic_3 { pt3dadd( 393.994, 638.141, 90.8897, 0.8748 ) }
    apic_3 { pt3dadd( 393.669, 637.052, 91.1448, 0.8142 ) }
    apic_3 { pt3dadd( 393.316, 635.969, 91.4057, 0.7238 ) }
    apic_3 { pt3dadd( 393.163, 634.844, 91.7053, 0.6746 ) }
    apic_3 { pt3dadd( 393.044, 633.714, 92.0116, 0.6326 ) }
    apic_3 { pt3dadd( 393.312, 632.618, 92.3185, 0.5824 ) }
    apic_3 { pt3dadd( 393.631, 631.527, 92.626, 0.531 ) }
    apic_3 { pt3dadd( 393.875, 630.411, 92.7878, 0.5962 ) }
    apic_3 { pt3dadd( 394.109, 629.293, 92.9342, 0.6734 ) }
    apic_3 { pt3dadd( 394.538, 628.236, 93.077, 0.7804 ) }
    apic_3 { pt3dadd( 394.983, 627.184, 93.2196, 0.89 ) }
    apic_3 { pt3dadd( 395.31, 626.091, 93.4007, 0.8852 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_3 { pt3dadd( 395.627, 624.994, 93.585, 0.8706 ) }
    apic_3 { pt3dadd( 395.795, 623.867, 93.8084, 0.9328 ) }
    apic_3 { pt3dadd( 395.953, 622.737, 94.0346, 1.0008 ) }
    apic_3 { pt3dadd( 396.271, 621.643, 94.2435, 0.9818 ) }
    apic_3 { pt3dadd( 396.6, 620.55, 94.4516, 0.9574 ) }
    apic_3 { pt3dadd( 397.248, 619.613, 94.6683, 0.932 ) }
    apic_3 { pt3dadd( 397.904, 618.68, 94.8856, 0.9066 ) }
    apic_3 { pt3dadd( 398.405, 617.653, 94.9354, 0.91 ) }
    apic_3 { pt3dadd( 398.905, 616.623, 94.9822, 0.914 ) }
    apic_3 { pt3dadd( 399.326, 615.559, 94.995, 0.9328 ) }
    apic_3 { pt3dadd( 399.746, 614.495, 95.0074, 0.9518 ) }
    apic_3 { pt3dadd( 400.243, 613.465, 95.0872, 0.9004 ) }
    apic_3 { pt3dadd( 400.741, 612.436, 95.1675, 0.848 ) }
    apic_3 { pt3dadd( 401.284, 611.444, 95.5844, 0.6522 ) }
    apic_3 { pt3dadd( 401.828, 610.452, 96.0056, 0.4546 ) }
    // Section: apic_7, id: apic_7, parent: apic_3 (entry count 15/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 401.828, 610.452, 96.0056, 0.4546 ) }
    apic_7 { pt3dadd( 402.087, 610.48, 96.9032, 0.4558 ) }
    apic_7 { pt3dadd( 402.889, 610.564, 98.8554, 0.4154 ) }
    apic_7 { pt3dadd( 403.776, 610.658, 100.607, 0.3486 ) }
    apic_7 { pt3dadd( 404.746, 610.79, 102.027, 0.316 ) }
    apic_7 { pt3dadd( 405.759, 610.941, 103.276, 0.301 ) }
    apic_7 { pt3dadd( 406.686, 611.303, 104.598, 0.3168 ) }
    apic_7 { pt3dadd( 407.571, 611.771, 105.956, 0.3484 ) }
    apic_7 { pt3dadd( 408.242, 612.436, 107.455, 0.3394 ) }
    apic_7 { pt3dadd( 408.816, 613.191, 109.019, 0.3116 ) }
    apic_7 { pt3dadd( 409.003, 614.123, 110.412, 0.2934 ) }
    apic_7 { pt3dadd( 409.021, 615.132, 111.73, 0.2794 ) }
    apic_7 { pt3dadd( 409.026, 616.162, 112.95, 0.2756 ) }
    apic_7 { pt3dadd( 409.026, 617.199, 114.128, 0.2762 ) }
    apic_7 { pt3dadd( 409.095, 618.219, 115.383, 0.2782 ) }
    apic_7 { pt3dadd( 409.196, 619.229, 116.671, 0.2806 ) }
    apic_7 { pt3dadd( 409.759, 619.9, 118.25, 0.2878 ) }
    apic_7 { pt3dadd( 410.491, 620.448, 119.934, 0.2966 ) }
    apic_7 { pt3dadd( 411.073, 620.93, 122.014, 0.3252 ) }
    apic_7 { pt3dadd( 411.615, 621.394, 124.204, 0.3594 ) }
    apic_7 { pt3dadd( 411.742, 621.845, 126.708, 0.3682 ) }
    apic_7 { pt3dadd( 411.771, 622.291, 129.284, 0.371 ) }
    apic_7 { pt3dadd( 411.777, 622.714, 131.886, 0.3322 ) }
    apic_7 { pt3dadd( 411.777, 623.131, 134.493, 0.2836 ) }
    apic_7 { pt3dadd( 411.913, 623.647, 136.961, 0.2746 ) }
    apic_7 { pt3dadd( 412.08, 624.187, 139.396, 0.2744 ) }
    apic_7 { pt3dadd( 412.326, 624.807, 141.666, 0.2744 ) }
    apic_7 { pt3dadd( 412.588, 625.444, 143.901, 0.2742 ) }
    apic_7 { pt3dadd( 412.781, 626.211, 145.916, 0.2736 ) }
    apic_7 { pt3dadd( 412.961, 627.003, 147.885, 0.2728 ) }
    apic_7 { pt3dadd( 413.236, 628.008, 148.952, 0.271 ) }
    apic_7 { pt3dadd( 413.527, 629.051, 149.856, 0.269 ) }
    apic_7 { pt3dadd( 413.876, 630.122, 150.295, 0.2622 ) }
    apic_7 { pt3dadd( 414.234, 631.199, 150.661, 0.2548 ) }
    apic_7 { pt3dadd( 415.274, 631.6, 150.734, 0.242 ) }
    apic_7 { pt3dadd( 416.362, 631.954, 150.786, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 51/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 401.828, 610.452, 96.0056, 0.4546 ) }
    apic_4 { pt3dadd( 401.514, 609.045, 96.0666, 0.5192 ) }
    apic_4 { pt3dadd( 401.521, 607.909, 96.1005, 0.589 ) }
    apic_4 { pt3dadd( 401.605, 606.768, 96.1299, 0.664 ) }
    apic_4 { pt3dadd( 401.702, 605.63, 96.2895, 0.7056 ) }
    apic_4 { pt3dadd( 401.801, 604.494, 96.4855, 0.7378 ) }
    apic_4 { pt3dadd( 401.61, 603.38, 96.7033, 0.6736 ) }
    apic_4 { pt3dadd( 401.34, 602.273, 96.927, 0.5836 ) }
    apic_4 { pt3dadd( 401.439, 601.149, 97.0964, 0.5352 ) }
    apic_4 { pt3dadd( 401.631, 600.023, 97.2524, 0.4972 ) }
    apic_4 { pt3dadd( 402.074, 598.977, 97.3888, 0.5834 ) }
    apic_4 { pt3dadd( 402.561, 597.943, 97.5218, 0.6914 ) }
    apic_4 { pt3dadd( 402.868, 596.851, 97.8326, 0.707 ) }
    apic_4 { pt3dadd( 403.141, 595.749, 98.1742, 0.7068 ) }
    apic_4 { pt3dadd( 403.152, 594.622, 98.5779, 0.637 ) }
    apic_4 { pt3dadd( 403.131, 593.49, 98.9895, 0.5584 ) }
    apic_4 { pt3dadd( 403.752, 592.561, 99.3376, 0.598 ) }
    apic_4 { pt3dadd( 404.428, 591.649, 99.68, 0.6478 ) }
    apic_4 { pt3dadd( 404.759, 590.565, 99.9869, 0.7334 ) }
    apic_4 { pt3dadd( 405.07, 589.471, 100.292, 0.8206 ) }
    apic_4 { pt3dadd( 405.602, 588.467, 100.589, 0.7602 ) }
    apic_4 { pt3dadd( 406.143, 587.466, 100.887, 0.6942 ) }
    apic_4 { pt3dadd( 406.278, 586.336, 101.099, 0.6132 ) }
    apic_4 { pt3dadd( 406.4, 585.202, 101.309, 0.5318 ) }
    apic_4 { pt3dadd( 406.041, 584.126, 101.664, 0.5416 ) }
    apic_4 { pt3dadd( 405.677, 583.051, 102.02, 0.5522 ) }
    apic_4 { pt3dadd( 405.62, 581.92, 102.398, 0.6312 ) }
    apic_4 { pt3dadd( 405.564, 580.787, 102.777, 0.7106 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 79/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 405.564, 580.787, 102.777, 0.7106 ) }
    apic_6 { pt3dadd( 406.062, 579.231, 103.203, 0.5722 ) }
    apic_6 { pt3dadd( 406.245, 578.102, 103.135, 0.4452 ) }
    apic_6 { pt3dadd( 406.369, 576.967, 103.049, 0.371 ) }
    apic_6 { pt3dadd( 406.422, 575.826, 102.94, 0.362 ) }
    apic_6 { pt3dadd( 406.836, 574.882, 102.557, 0.3434 ) }
    apic_6 { pt3dadd( 407.691, 574.179, 101.841, 0.3126 ) }
    apic_6 { pt3dadd( 408.322, 573.317, 100.977, 0.3224 ) }
    apic_6 { pt3dadd( 408.834, 572.37, 100.035, 0.3538 ) }
    apic_6 { pt3dadd( 409.038, 571.375, 98.8753, 0.3454 ) }
    apic_6 { pt3dadd( 409.082, 570.357, 97.6041, 0.316 ) }
    apic_6 { pt3dadd( 409.097, 569.3, 96.5423, 0.3036 ) }
    apic_6 { pt3dadd( 409.097, 568.226, 95.5811, 0.2994 ) }
    apic_6 { pt3dadd( 409.428, 567.232, 94.6156, 0.3234 ) }
    apic_6 { pt3dadd( 409.919, 566.278, 93.6477, 0.3612 ) }
    apic_6 { pt3dadd( 410.044, 565.261, 92.5562, 0.3428 ) }
    apic_6 { pt3dadd( 410.014, 564.216, 91.4119, 0.3002 ) }
    apic_6 { pt3dadd( 409.763, 563.193, 90.3266, 0.2872 ) }
    apic_6 { pt3dadd( 409.506, 562.17, 89.2424, 0.2746 ) }
    apic_6 { pt3dadd( 409.677, 561.111, 88.2711, 0.2748 ) }
    apic_6 { pt3dadd( 409.846, 560.051, 87.3076, 0.2748 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_6 { pt3dadd( 409.875, 558.945, 86.5922, 0.2752 ) }
    apic_6 { pt3dadd( 409.896, 557.84, 85.878, 0.2756 ) }
    apic_6 { pt3dadd( 409.752, 556.74, 85.185, 0.277 ) }
    apic_6 { pt3dadd( 409.607, 555.643, 84.4827, 0.2786 ) }
    apic_6 { pt3dadd( 409.433, 554.576, 83.5724, 0.2842 ) }
    apic_6 { pt3dadd( 409.263, 553.508, 82.6529, 0.2906 ) }
    apic_6 { pt3dadd( 409.177, 552.458, 81.5646, 0.3116 ) }
    apic_6 { pt3dadd( 409.11, 551.406, 80.4947, 0.3358 ) }
    apic_6 { pt3dadd( 409.305, 550.329, 79.6746, 0.4058 ) }
    apic_6 { pt3dadd( 409.534, 549.268, 78.8502, 0.4742 ) }
    apic_6 { pt3dadd( 410.156, 548.376, 77.9778, 0.5248 ) }
    apic_6 { pt3dadd( 410.753, 547.485, 77.0392, 0.5692 ) }
    apic_6 { pt3dadd( 411.162, 546.594, 75.5924, 0.5674 ) }
    apic_6 { pt3dadd( 411.064, 545.794, 74.2344, 0.5086 ) }
    apic_6 { pt3dadd( 410.297, 545.114, 72.9938, 0.374 ) }
    apic_6 { pt3dadd( 409.729, 544.271, 71.8816, 0.31 ) }
    apic_6 { pt3dadd( 409.363, 543.264, 70.9005, 0.3174 ) }
    apic_6 { pt3dadd( 409.315, 542.218, 70.0778, 0.3532 ) }
    apic_6 { pt3dadd( 409.567, 541.136, 69.405, 0.4154 ) }
    apic_6 { pt3dadd( 410.312, 540.529, 68.763, 0.531 ) }
    apic_6 { pt3dadd( 411.389, 540.238, 68.1422, 0.6826 ) }
    apic_6 { pt3dadd( 412.136, 539.62, 67.0256, 0.6468 ) }
    apic_6 { pt3dadd( 412.677, 538.798, 65.6004, 0.4944 ) }
    apic_6 { pt3dadd( 413.207, 538.03, 63.9878, 0.4554 ) }
    apic_6 { pt3dadd( 413.73, 537.29, 62.2784, 0.4746 ) }
    apic_6 { pt3dadd( 414.395, 536.648, 60.6536, 0.4776 ) }
    apic_6 { pt3dadd( 415.129, 536.055, 59.0708, 0.4722 ) }
    apic_6 { pt3dadd( 415.858, 535.414, 57.5963, 0.4646 ) }
    apic_6 { pt3dadd( 416.583, 534.747, 56.175, 0.456 ) }
    apic_6 { pt3dadd( 417.252, 533.994, 54.8629, 0.4088 ) }
    apic_6 { pt3dadd( 417.895, 533.199, 53.6029, 0.3434 ) }
    apic_6 { pt3dadd( 418.452, 532.34, 52.3673, 0.3362 ) }
    apic_6 { pt3dadd( 418.968, 531.45, 51.1431, 0.3568 ) }
    apic_6 { pt3dadd( 419.429, 530.516, 49.9904, 0.3472 ) }
    apic_6 { pt3dadd( 419.865, 529.563, 48.8692, 0.324 ) }
    apic_6 { pt3dadd( 420.664, 528.872, 47.9766, 0.3314 ) }
    apic_6 { pt3dadd( 421.567, 528.257, 47.1486, 0.3476 ) }
    apic_6 { pt3dadd( 422.369, 527.501, 46.4377, 0.3254 ) }
    apic_6 { pt3dadd( 423.143, 526.705, 45.7598, 0.2924 ) }
    apic_6 { pt3dadd( 423.829, 525.821, 45.1934, 0.2812 ) }
    apic_6 { pt3dadd( 424.493, 524.916, 44.6555, 0.2756 ) }
    apic_6 { pt3dadd( 425.105, 523.975, 44.121, 0.2746 ) }
    apic_6 { pt3dadd( 425.704, 523.025, 43.5868, 0.2746 ) }
    apic_6 { pt3dadd( 426.195, 522.023, 42.9814, 0.2748 ) }
    apic_6 { pt3dadd( 426.658, 521.01, 42.3584, 0.275 ) }
    apic_6 { pt3dadd( 427.199, 520.03, 41.7791, 0.2756 ) }
    apic_6 { pt3dadd( 427.759, 519.06, 41.2107, 0.2762 ) }
    apic_6 { pt3dadd( 428.325, 518.086, 40.7378, 0.2778 ) }
    apic_6 { pt3dadd( 428.894, 517.11, 40.2881, 0.28 ) }
    apic_6 { pt3dadd( 429.261, 516.055, 39.7393, 0.2864 ) }
    apic_6 { pt3dadd( 429.581, 514.982, 39.1678, 0.2938 ) }
    apic_6 { pt3dadd( 429.832, 513.904, 38.465, 0.3202 ) }
    apic_6 { pt3dadd( 430.066, 512.826, 37.7325, 0.3508 ) }
    apic_6 { pt3dadd( 430.169, 511.737, 36.9127, 0.34 ) }
    apic_6 { pt3dadd( 430.242, 510.648, 36.0738, 0.3202 ) }
    apic_6 { pt3dadd( 429.98, 509.597, 35.2654, 0.309 ) }
    apic_6 { pt3dadd( 429.646, 508.553, 34.4635, 0.2996 ) }
    apic_6 { pt3dadd( 429.175, 507.553, 33.7599, 0.322 ) }
    apic_6 { pt3dadd( 428.678, 506.561, 33.0739, 0.35 ) }
    apic_6 { pt3dadd( 428.063, 505.634, 32.4422, 0.4238 ) }
    apic_6 { pt3dadd( 427.426, 504.718, 31.8206, 0.5056 ) }
    apic_6 { pt3dadd( 426.703, 503.871, 31.1948, 0.4608 ) }
    apic_6 { pt3dadd( 425.964, 503.035, 30.5684, 0.394 ) }
    apic_6 { pt3dadd( 425.132, 502.303, 29.8936, 0.3886 ) }
    apic_6 { pt3dadd( 424.284, 501.587, 29.211, 0.393 ) }
    apic_6 { pt3dadd( 423.527, 500.791, 28.4466, 0.3884 ) }
    apic_6 { pt3dadd( 422.784, 499.981, 27.6692, 0.3826 ) }
    apic_6 { pt3dadd( 422.345, 498.981, 26.9032, 0.3454 ) }
    apic_6 { pt3dadd( 421.956, 497.952, 26.1389, 0.3036 ) }
    apic_6 { pt3dadd( 421.89, 496.832, 25.6232, 0.3304 ) }
    apic_6 { pt3dadd( 421.839, 495.708, 25.1199, 0.3608 ) }
    apic_6 { pt3dadd( 421.594, 494.6, 24.774, 0.3372 ) }
    apic_6 { pt3dadd( 421.341, 493.493, 24.4353, 0.3112 ) }
    apic_6 { pt3dadd( 420.815, 492.497, 23.9753, 0.2988 ) }
    apic_6 { pt3dadd( 420.28, 491.502, 23.5119, 0.287 ) }
    apic_6 { pt3dadd( 420.208, 490.396, 22.8519, 0.3016 ) }
    apic_6 { pt3dadd( 420.148, 489.286, 22.1868, 0.317 ) }
    apic_6 { pt3dadd( 420.38, 488.204, 21.4773, 0.3756 ) }
    apic_6 { pt3dadd( 420.616, 487.123, 20.7672, 0.4346 ) }
    apic_6 { pt3dadd( 421.104, 486.121, 20.1414, 0.4516 ) }
    apic_6 { pt3dadd( 421.594, 485.12, 19.5162, 0.4682 ) }
    apic_6 { pt3dadd( 422.172, 484.145, 19.1267, 0.4036 ) }
    apic_6 { pt3dadd( 422.748, 483.169, 18.7376, 0.3388 ) }
    apic_6 { pt3dadd( 423.328, 482.187, 18.5633, 0.3812 ) }
    apic_6 { pt3dadd( 423.909, 481.204, 18.3892, 0.4236 ) }
    apic_6 { pt3dadd( 424.299, 480.129, 18.3331, 0.4406 ) }
    apic_6 { pt3dadd( 424.689, 479.053, 18.277, 0.4576 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 87/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 405.564, 580.787, 102.777, 0.7106 ) }
    apic_5 { pt3dadd( 405.745, 579.548, 103.053, 0.6646 ) }
    apic_5 { pt3dadd( 405.951, 578.426, 103.222, 0.6874 ) }
    apic_5 { pt3dadd( 406.162, 577.304, 103.377, 0.7216 ) }
    apic_5 { pt3dadd( 406.111, 576.178, 103.774, 0.6946 ) }
    apic_5 { pt3dadd( 406.013, 575.052, 104.213, 0.6566 ) }
    apic_5 { pt3dadd( 405.955, 573.928, 104.696, 0.6902 ) }
    apic_5 { pt3dadd( 405.901, 572.802, 105.184, 0.7322 ) }
    apic_5 { pt3dadd( 406.303, 571.744, 105.482, 0.7334 ) }
    apic_5 { pt3dadd( 406.731, 570.689, 105.769, 0.7322 ) }
    apic_5 { pt3dadd( 406.865, 569.556, 105.941, 0.7004 ) }
    apic_5 { pt3dadd( 406.983, 568.422, 106.107, 0.6668 ) }
    apic_5 { pt3dadd( 407.351, 567.341, 106.24, 0.7136 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_5 { pt3dadd( 407.731, 566.263, 106.373, 0.7646 ) }
    apic_5 { pt3dadd( 408.224, 565.232, 106.301, 0.8442 ) }
    apic_5 { pt3dadd( 408.721, 564.201, 106.22, 0.925 ) }
    apic_5 { pt3dadd( 409.362, 563.255, 106.162, 0.9456 ) }
    apic_5 { pt3dadd( 410.009, 562.312, 106.105, 0.964 ) }
    apic_5 { pt3dadd( 410.331, 561.217, 106.164, 0.8594 ) }
    apic_5 { pt3dadd( 410.642, 560.116, 106.228, 0.7506 ) }
    apic_5 { pt3dadd( 410.813, 558.987, 106.048, 0.782 ) }
    apic_5 { pt3dadd( 410.98, 557.858, 105.86, 0.8174 ) }
    apic_5 { pt3dadd( 410.8, 556.739, 105.497, 0.7988 ) }
    apic_5 { pt3dadd( 410.617, 555.619, 105.132, 0.7796 ) }
    apic_5 { pt3dadd( 410.599, 554.475, 105.148, 0.7306 ) }
    apic_5 { pt3dadd( 410.582, 553.331, 105.165, 0.6824 ) }
    apic_5 { pt3dadd( 410.582, 552.197, 105.521, 0.8258 ) }
    apic_5 { pt3dadd( 410.582, 551.062, 105.876, 0.9684 ) }
    apic_5 { pt3dadd( 410.582, 549.935, 106.342, 0.9496 ) }
    apic_5 { pt3dadd( 410.582, 548.805, 106.808, 0.9312 ) }
    apic_5 { pt3dadd( 410.584, 547.673, 107.193, 0.9366 ) }
    apic_5 { pt3dadd( 410.587, 546.54, 107.578, 0.941 ) }
    apic_5 { pt3dadd( 410.725, 545.408, 107.784, 0.8224 ) }
    apic_5 { pt3dadd( 410.863, 544.275, 107.979, 0.7082 ) }
    apic_5 { pt3dadd( 411.045, 543.148, 107.787, 0.75 ) }
    apic_5 { pt3dadd( 411.228, 542.021, 107.595, 0.7912 ) }
    apic_5 { pt3dadd( 411.444, 540.9, 107.446, 0.8212 ) }
    apic_5 { pt3dadd( 411.644, 539.777, 107.308, 0.8528 ) }
    apic_5 { pt3dadd( 411.615, 538.633, 107.342, 0.9072 ) }
    apic_5 { pt3dadd( 411.615, 537.495, 107.376, 0.9572 ) }
    apic_5 { pt3dadd( 411.997, 536.417, 107.404, 0.949 ) }
    apic_5 { pt3dadd( 412.351, 535.334, 107.44, 0.933 ) }
    apic_5 { pt3dadd( 412.387, 534.191, 107.564, 0.83 ) }
    apic_5 { pt3dadd( 412.351, 533.06, 107.691, 0.7378 ) }
    apic_5 { pt3dadd( 411.936, 531.997, 107.828, 0.703 ) }
    apic_5 { pt3dadd( 411.655, 530.93, 107.967, 0.6966 ) }
    apic_5 { pt3dadd( 412.031, 529.852, 108.109, 0.8284 ) }
    apic_5 { pt3dadd( 412.359, 528.761, 108.23, 0.941 ) }
    apic_5 { pt3dadd( 412.498, 527.625, 108.264, 0.9758 ) }
    apic_5 { pt3dadd( 412.653, 526.493, 108.304, 0.9742 ) }
    apic_5 { pt3dadd( 412.878, 525.372, 108.37, 0.8248 ) }
    apic_5 { pt3dadd( 413.166, 524.272, 108.448, 0.7224 ) }
    apic_5 { pt3dadd( 413.702, 523.263, 108.57, 0.806 ) }
    apic_5 { pt3dadd( 414.218, 522.244, 108.668, 0.8928 ) }
    apic_5 { pt3dadd( 414.654, 521.187, 108.672, 0.9908 ) }
    apic_5 { pt3dadd( 415.041, 520.115, 108.624, 1.067 ) }
    apic_5 { pt3dadd( 415.254, 518.995, 108.389, 1.0658 ) }
    apic_5 { pt3dadd( 415.451, 517.873, 108.171, 1.037 ) }
    apic_5 { pt3dadd( 415.592, 516.739, 108.008, 0.9108 ) }
    apic_5 { pt3dadd( 415.77, 515.613, 107.876, 0.7944 ) }
    apic_5 { pt3dadd( 416.075, 514.511, 107.851, 0.7108 ) }
    apic_5 { pt3dadd( 416.322, 513.399, 107.862, 0.6326 ) }
    apic_5 { pt3dadd( 416.379, 512.257, 107.995, 0.5714 ) }
    apic_5 { pt3dadd( 416.408, 511.116, 108.126, 0.5476 ) }
    apic_5 { pt3dadd( 416.353, 509.975, 108.251, 0.635 ) }
    apic_5 { pt3dadd( 416.455, 508.866, 108.347, 0.6758 ) }
    apic_5 { pt3dadd( 416.964, 507.841, 108.368, 0.5966 ) }
    apic_5 { pt3dadd( 417.466, 506.814, 108.397, 0.5242 ) }
    apic_5 { pt3dadd( 417.957, 505.781, 108.449, 0.4686 ) }
    apic_5 { pt3dadd( 418.411, 504.733, 108.535, 0.4134 ) }
    apic_5 { pt3dadd( 418.778, 503.652, 108.707, 0.3588 ) }
    apic_5 { pt3dadd( 419.141, 502.569, 108.911, 0.3138 ) }
    apic_5 { pt3dadd( 419.493, 501.488, 109.196, 0.2918 ) }
    apic_5 { pt3dadd( 419.831, 500.403, 109.502, 0.2768 ) }
    apic_5 { pt3dadd( 420.128, 499.307, 109.855, 0.2788 ) }
    apic_5 { pt3dadd( 420.392, 498.206, 110.228, 0.2822 ) }
    apic_5 { pt3dadd( 420.582, 497.091, 110.642, 0.2892 ) }
    apic_5 { pt3dadd( 420.766, 495.974, 111.064, 0.302 ) }
    apic_5 { pt3dadd( 420.929, 494.857, 111.507, 0.3284 ) }
    apic_5 { pt3dadd( 421.065, 493.737, 111.95, 0.3464 ) }
    apic_5 { pt3dadd( 421.133, 492.609, 112.391, 0.3446 ) }
    apic_5 { pt3dadd( 421.201, 491.481, 112.822, 0.3466 ) }
    apic_5 { pt3dadd( 421.272, 490.35, 113.229, 0.3572 ) }
    apic_5 { pt3dadd( 421.357, 489.22, 113.606, 0.3696 ) }
    apic_5 { pt3dadd( 421.47, 488.089, 113.912, 0.3866 ) }
    apic_5 { pt3dadd( 421.586, 486.957, 114.192, 0.4142 ) }
    apic_5 { pt3dadd( 421.709, 485.824, 114.412, 0.4668 ) }
    apic_5 { pt3dadd( 421.842, 484.691, 114.633, 0.4802 ) }
    apic_5 { pt3dadd( 421.995, 483.561, 114.858, 0.4026 ) }
    apic_5 { pt3dadd( 422.16, 482.433, 115.107, 0.3378 ) }
    apic_5 { pt3dadd( 422.351, 481.313, 115.413, 0.3028 ) }
    apic_5 { pt3dadd( 422.544, 480.192, 115.72, 0.28 ) }
    apic_5 { pt3dadd( 422.741, 479.072, 116.033, 0.285 ) }
    apic_5 { pt3dadd( 422.943, 477.952, 116.313, 0.2934 ) }
    apic_5 { pt3dadd( 423.154, 476.831, 116.517, 0.3102 ) }
    apic_5 { pt3dadd( 423.367, 475.71, 116.705, 0.3398 ) }
    apic_5 { pt3dadd( 423.58, 474.587, 116.857, 0.3992 ) }
    apic_5 { pt3dadd( 423.795, 473.466, 117.035, 0.4674 ) }
    apic_5 { pt3dadd( 424.017, 472.348, 117.278, 0.555 ) }
    apic_5 { pt3dadd( 424.237, 471.231, 117.55, 0.5828 ) }
    apic_5 { pt3dadd( 424.457, 470.118, 117.891, 0.4716 ) }
    apic_5 { pt3dadd( 424.659, 468.999, 118.208, 0.3812 ) }
    apic_5 { pt3dadd( 424.816, 467.871, 118.472, 0.3394 ) }
    apic_5 { pt3dadd( 424.97, 466.742, 118.697, 0.323 ) }
    apic_5 { pt3dadd( 425.112, 465.608, 118.833, 0.3652 ) }
    apic_5 { pt3dadd( 425.306, 464.485, 118.955, 0.432 ) }
    apic_5 { pt3dadd( 425.621, 463.385, 119.045, 0.555 ) }
    apic_5 { pt3dadd( 426.042, 462.335, 119.165, 0.6174 ) }
    apic_5 { pt3dadd( 426.666, 461.38, 119.348, 0.5622 ) }
    apic_5 { pt3dadd( 427.139, 460.366, 119.549, 0.4856 ) }
    apic_5 { pt3dadd( 427.318, 459.241, 119.788, 0.3672 ) }
    apic_5 { pt3dadd( 427.457, 458.109, 119.953, 0.29 ) }
    apic_5 { pt3dadd( 427.529, 456.967, 119.995, 0.2806 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_5 { pt3dadd( 427.644, 455.831, 120.079, 0.2746 ) }
    apic_5 { pt3dadd( 427.831, 454.704, 120.229, 0.2746 ) }
    apic_5 { pt3dadd( 427.863, 453.583, 120.468, 0.2746 ) }
    apic_5 { pt3dadd( 427.643, 452.471, 120.855, 0.2746 ) }
    apic_5 { pt3dadd( 427.513, 451.355, 121.291, 0.2746 ) }
    apic_5 { pt3dadd( 427.517, 450.23, 121.803, 0.2746 ) }
    apic_5 { pt3dadd( 427.71, 449.141, 122.246, 0.2746 ) }
    apic_5 { pt3dadd( 428.167, 448.103, 122.592, 0.2746 ) }
    apic_5 { pt3dadd( 428.572, 447.04, 122.816, 0.2746 ) }
    apic_5 { pt3dadd( 428.905, 445.946, 122.882, 0.2748 ) }
    apic_5 { pt3dadd( 429.112, 444.828, 122.924, 0.275 ) }
    apic_5 { pt3dadd( 429.188, 443.687, 122.94, 0.2754 ) }
    apic_5 { pt3dadd( 429.285, 442.547, 122.96, 0.276 ) }
    apic_5 { pt3dadd( 429.405, 441.41, 122.984, 0.2772 ) }
    apic_5 { pt3dadd( 429.536, 440.273, 122.994, 0.2798 ) }
    apic_5 { pt3dadd( 429.682, 439.138, 122.989, 0.2838 ) }
    apic_5 { pt3dadd( 429.839, 438.006, 122.945, 0.2928 ) }
    apic_5 { pt3dadd( 430.009, 436.875, 122.862, 0.307 ) }
    apic_5 { pt3dadd( 430.236, 435.758, 122.698, 0.338 ) }
    apic_5 { pt3dadd( 430.518, 434.654, 122.45, 0.3864 ) }
    apic_5 { pt3dadd( 430.751, 433.54, 122.18, 0.4522 ) }
    apic_5 { pt3dadd( 430.935, 432.417, 121.889, 0.536 ) }
    apic_5 { pt3dadd( 430.925, 431.294, 121.69, 0.514 ) }
    apic_5 { pt3dadd( 430.726, 430.168, 121.583, 0.3878 ) }
    apic_5 { pt3dadd( 430.527, 429.041, 121.549, 0.3166 ) }
    apic_5 { pt3dadd( 430.326, 427.915, 121.588, 0.2996 ) }
    apic_5 { pt3dadd( 430.1, 426.794, 121.624, 0.3018 ) }
    apic_5 { pt3dadd( 429.85, 425.678, 121.658, 0.3224 ) }
    apic_5 { pt3dadd( 429.627, 424.557, 121.68, 0.3712 ) }
    apic_5 { pt3dadd( 429.428, 423.43, 121.69, 0.4478 ) }
    apic_5 { pt3dadd( 429.44, 422.305, 121.771, 0.4624 ) }
    apic_5 { pt3dadd( 429.651, 421.183, 121.921, 0.4188 ) }
    apic_5 { pt3dadd( 429.868, 420.063, 122.134, 0.4358 ) }
    apic_5 { pt3dadd( 430.092, 418.947, 122.408, 0.5108 ) }
    apic_5 { pt3dadd( 430.417, 417.862, 122.706, 0.6042 ) }
    apic_5 { pt3dadd( 430.84, 416.806, 123.029, 0.7148 ) }
    apic_5 { pt3dadd( 431.266, 415.753, 123.339, 0.6574 ) }
    apic_5 { pt3dadd( 431.699, 414.701, 123.638, 0.442 ) }
    apic_5 { pt3dadd( 432.045, 413.619, 123.89, 0.3218 ) }
    apic_5 { pt3dadd( 432.311, 412.509, 124.096, 0.2898 ) }
    apic_5 { pt3dadd( 432.561, 411.395, 124.248, 0.2746 ) }
    apic_5 { pt3dadd( 432.796, 410.276, 124.349, 0.2746 ) }
    apic_5 { pt3dadd( 432.918, 409.145, 124.362, 0.2746 ) }
    apic_5 { pt3dadd( 432.936, 408.002, 124.295, 0.2746 ) }
    apic_5 { pt3dadd( 432.946, 406.859, 124.172, 0.2746 ) }
    apic_5 { pt3dadd( 432.946, 405.717, 123.999, 0.2746 ) }
    apic_5 { pt3dadd( 432.959, 404.576, 123.827, 0.2746 ) }
    apic_5 { pt3dadd( 432.986, 403.434, 123.656, 0.2746 ) }
    apic_5 { pt3dadd( 433.028, 402.292, 123.534, 0.2746 ) }
    apic_5 { pt3dadd( 433.085, 401.149, 123.455, 0.2746 ) }
    apic_5 { pt3dadd( 433.144, 400.008, 123.409, 0.2746 ) }
    apic_5 { pt3dadd( 433.203, 398.865, 123.391, 0.2746 ) }
    apic_5 { pt3dadd( 433.287, 397.724, 123.384, 0.2746 ) }
    apic_5 { pt3dadd( 433.393, 396.585, 123.386, 0.2746 ) }
    apic_5 { pt3dadd( 433.507, 395.447, 123.396, 0.2746 ) }
    apic_5 { pt3dadd( 433.629, 394.309, 123.411, 0.2746 ) }
    apic_5 { pt3dadd( 433.689, 393.169, 123.452, 0.2746 ) }
    apic_5 { pt3dadd( 433.694, 392.025, 123.517, 0.2746 ) }
    apic_5 { pt3dadd( 433.547, 390.9, 123.638, 0.2746 ) }
    apic_5 { pt3dadd( 433.269, 389.793, 123.81, 0.2746 ) }
    apic_5 { pt3dadd( 433.138, 388.669, 124.034, 0.2746 ) }
    apic_5 { pt3dadd( 433.133, 387.53, 124.304, 0.2748 ) }
    apic_5 { pt3dadd( 433.207, 386.397, 124.603, 0.2752 ) }
    apic_5 { pt3dadd( 433.344, 385.27, 124.926, 0.2756 ) }
    apic_5 { pt3dadd( 433.464, 384.139, 125.244, 0.2768 ) }
    apic_5 { pt3dadd( 433.571, 383.008, 125.558, 0.2784 ) }
    apic_5 { pt3dadd( 433.657, 381.873, 125.837, 0.282 ) }
    apic_5 { pt3dadd( 433.728, 380.736, 126.09, 0.2874 ) }
    apic_5 { pt3dadd( 433.827, 379.599, 126.277, 0.301 ) }
    apic_5 { pt3dadd( 433.945, 378.463, 126.412, 0.321 ) }
    apic_5 { pt3dadd( 434.132, 377.336, 126.421, 0.3282 ) }
    apic_5 { pt3dadd( 434.37, 376.218, 126.331, 0.3256 ) }
    apic_5 { pt3dadd( 434.641, 375.11, 126.149, 0.3104 ) }
    apic_5 { pt3dadd( 434.937, 374.01, 125.894, 0.2852 ) }
    apic_5 { pt3dadd( 435.428, 372.997, 125.675, 0.275 ) }
    apic_5 { pt3dadd( 436.061, 372.047, 125.483, 0.2754 ) }
    apic_5 { pt3dadd( 436.504, 371.008, 125.368, 0.2764 ) }
    apic_5 { pt3dadd( 436.81, 369.907, 125.31, 0.2776 ) }
    apic_5 { pt3dadd( 437.097, 368.799, 125.301, 0.2804 ) }
    apic_5 { pt3dadd( 437.368, 367.689, 125.328, 0.2846 ) }
    apic_5 { pt3dadd( 437.761, 366.619, 125.344, 0.294 ) }
    apic_5 { pt3dadd( 438.238, 365.579, 125.353, 0.3072 ) }
    apic_5 { pt3dadd( 438.721, 364.543, 125.339, 0.32 ) }
    apic_5 { pt3dadd( 439.209, 363.507, 125.309, 0.3326 ) }
    apic_5 { pt3dadd( 439.446, 362.41, 125.295, 0.3196 ) }
    apic_5 { pt3dadd( 439.509, 361.267, 125.294, 0.2886 ) }
    apic_5 { pt3dadd( 439.502, 360.124, 125.327, 0.2758 ) }
    apic_5 { pt3dadd( 439.448, 358.983, 125.383, 0.275 ) }
    apic_5 { pt3dadd( 439.436, 357.839, 125.455, 0.2746 ) }
    apic_5 { pt3dadd( 439.449, 356.696, 125.537, 0.2746 ) }
    apic_5 { pt3dadd( 439.545, 355.559, 125.613, 0.2746 ) }
    apic_5 { pt3dadd( 439.695, 354.424, 125.686, 0.2746 ) }
    apic_5 { pt3dadd( 439.846, 353.291, 125.755, 0.2746 ) }
    apic_5 { pt3dadd( 439.998, 352.158, 125.822, 0.2746 ) }
    apic_5 { pt3dadd( 440.188, 351.03, 125.893, 0.2746 ) }
    apic_5 { pt3dadd( 440.402, 349.906, 125.968, 0.2748 ) }
    apic_5 { pt3dadd( 440.696, 348.803, 126.054, 0.275 ) }
    apic_5 { pt3dadd( 441.042, 347.713, 126.149, 0.2752 ) }
    apic_5 { pt3dadd( 441.308, 346.604, 126.282, 0.2756 ) }
    apic_5 { pt3dadd( 441.526, 345.483, 126.44, 0.2764 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_5 { pt3dadd( 441.646, 344.352, 126.668, 0.278 ) }
    apic_5 { pt3dadd( 441.71, 343.215, 126.938, 0.2804 ) }
    apic_5 { pt3dadd( 441.765, 342.079, 127.228, 0.2866 ) }
    apic_5 { pt3dadd( 441.815, 340.942, 127.529, 0.2952 ) }
    apic_5 { pt3dadd( 441.816, 339.803, 127.779, 0.3212 ) }
    apic_5 { pt3dadd( 441.79, 338.663, 127.998, 0.3574 ) }
    apic_5 { pt3dadd( 441.763, 337.521, 128.16, 0.349 ) }
    apic_5 { pt3dadd( 441.735, 336.379, 128.289, 0.3142 ) }
    apic_5 { pt3dadd( 441.708, 335.237, 128.376, 0.293 ) }
    apic_5 { pt3dadd( 441.679, 334.093, 128.437, 0.2796 ) }
    apic_5 { pt3dadd( 441.562, 332.957, 128.424, 0.2746 ) }
    apic_5 { pt3dadd( 441.392, 331.826, 128.367, 0.2746 ) }
    apic_5 { pt3dadd( 441.19, 330.702, 128.239, 0.2746 ) }
    apic_5 { pt3dadd( 440.97, 329.581, 128.071, 0.2746 ) }
    apic_5 { pt3dadd( 440.913, 328.446, 127.998, 0.2746 ) }
    apic_5 { pt3dadd( 440.95, 327.303, 127.98, 0.2746 ) }
    apic_5 { pt3dadd( 440.997, 326.161, 128.066, 0.2746 ) }
    apic_5 { pt3dadd( 441.049, 325.02, 128.212, 0.2746 ) }
    apic_5 { pt3dadd( 441.1, 323.879, 128.383, 0.2746 ) }
    apic_5 { pt3dadd( 441.152, 322.738, 128.569, 0.2746 ) }
    apic_5 { pt3dadd( 441.177, 321.596, 128.656, 0.2746 ) }
    apic_5 { pt3dadd( 441.188, 320.452, 128.686, 0.2746 ) }
    apic_5 { pt3dadd( 441.195, 319.309, 128.617, 0.2746 ) }
    apic_5 { pt3dadd( 441.202, 318.166, 128.491, 0.2746 ) }
    apic_5 { pt3dadd( 441.208, 317.024, 128.318, 0.2746 ) }
    apic_5 { pt3dadd( 441.212, 315.884, 128.119, 0.2746 ) }
    apic_5 { pt3dadd( 441.205, 314.743, 127.912, 0.2746 ) }
    apic_5 { pt3dadd( 441.193, 313.601, 127.7, 0.2746 ) }
    apic_5 { pt3dadd( 441.18, 312.461, 127.49, 0.2746 ) }
    apic_5 { pt3dadd( 441.169, 311.32, 127.279, 0.2746 ) }
    apic_5 { pt3dadd( 441.156, 310.18, 127.07, 0.2746 ) }
    apic_5 { pt3dadd( 441.144, 309.039, 126.862, 0.2746 ) }
    apic_5 { pt3dadd( 441.13, 307.898, 126.656, 0.2746 ) }
    apic_5 { pt3dadd( 441.115, 306.757, 126.451, 0.2746 ) }
    apic_5 { pt3dadd( 441.036, 305.62, 126.253, 0.2746 ) }
    apic_5 { pt3dadd( 440.919, 304.485, 126.058, 0.2746 ) }
    apic_5 { pt3dadd( 440.802, 303.35, 125.867, 0.2746 ) }
    apic_5 { pt3dadd( 440.681, 302.214, 125.676, 0.2748 ) }
    apic_5 { pt3dadd( 440.561, 301.079, 125.481, 0.275 ) }
    apic_5 { pt3dadd( 440.441, 299.944, 125.284, 0.2752 ) }
    apic_5 { pt3dadd( 440.41, 298.807, 125.068, 0.2758 ) }
    apic_5 { pt3dadd( 440.431, 297.667, 124.84, 0.2764 ) }
    apic_5 { pt3dadd( 440.541, 296.535, 124.585, 0.2784 ) }
    apic_5 { pt3dadd( 440.698, 295.407, 124.314, 0.281 ) }
    apic_5 { pt3dadd( 440.856, 294.279, 124.034, 0.2878 ) }
    apic_5 { pt3dadd( 441.013, 293.152, 123.749, 0.2968 ) }
    apic_5 { pt3dadd( 441.174, 292.025, 123.483, 0.3232 ) }
    apic_5 { pt3dadd( 441.338, 290.897, 123.229, 0.3588 ) }
    apic_5 { pt3dadd( 441.504, 289.77, 123.005, 0.3486 ) }
    apic_5 { pt3dadd( 441.67, 288.64, 122.8, 0.3134 ) }
    apic_5 { pt3dadd( 441.822, 287.509, 122.628, 0.2952 ) }
    apic_5 { pt3dadd( 441.967, 286.376, 122.475, 0.2866 ) }
    apic_5 { pt3dadd( 442.07, 285.238, 122.375, 0.2906 ) }
    apic_5 { pt3dadd( 442.15, 284.098, 122.305, 0.3012 ) }
    apic_5 { pt3dadd( 442.232, 282.956, 122.255, 0.328 ) }
    apic_5 { pt3dadd( 442.313, 281.815, 122.217, 0.3632 ) }
    apic_5 { pt3dadd( 442.434, 280.678, 122.135, 0.394 ) }
    apic_5 { pt3dadd( 442.576, 279.544, 122.03, 0.4224 ) }
    apic_5 { pt3dadd( 442.712, 278.411, 121.866, 0.4 ) }
    apic_5 { pt3dadd( 442.845, 277.277, 121.67, 0.3496 ) }
    apic_5 { pt3dadd( 442.926, 276.14, 121.471, 0.3146 ) }
    apic_5 { pt3dadd( 442.98, 274.999, 121.272, 0.288 ) }
    apic_5 { pt3dadd( 443.129, 273.87, 121.099, 0.2818 ) }
    apic_5 { pt3dadd( 443.332, 272.746, 120.939, 0.2866 ) }
    apic_5 { pt3dadd( 443.668, 271.658, 120.819, 0.299 ) }
    apic_5 { pt3dadd( 444.072, 270.589, 120.719, 0.315 ) }
    apic_5 { pt3dadd( 444.475, 269.518, 120.666, 0.324 ) }
    apic_5 { pt3dadd( 444.876, 268.448, 120.637, 0.3294 ) }
    apic_5 { pt3dadd( 445.135, 267.338, 120.693, 0.3134 ) }
    apic_5 { pt3dadd( 445.32, 266.21, 120.793, 0.2864 ) }
    apic_5 { pt3dadd( 445.535, 265.095, 121.088, 0.2812 ) }
    apic_5 { pt3dadd( 445.764, 263.985, 121.473, 0.2862 ) }
    apic_5 { pt3dadd( 446.193, 262.984, 122.228, 0.3042 ) }
    apic_5 { pt3dadd( 446.694, 262.022, 123.118, 0.327 ) }
    apic_5 { pt3dadd( 446.484, 260.992, 123.664, 0.4124 ) }
    apic_5 { pt3dadd( 446.065, 259.943, 124.111, 0.516 ) }
    apic_5 { pt3dadd( 445.86, 258.824, 124.186, 0.5182 ) }
    apic_5 { pt3dadd( 445.7, 257.692, 124.185, 0.4998 ) }
    apic_5 { pt3dadd( 445.806, 256.558, 124.15, 0.5186 ) }
    apic_5 { pt3dadd( 445.956, 255.426, 124.105, 0.5414 ) }
    apic_5 { pt3dadd( 446.576, 254.483, 123.639, 0.4874 ) }
    apic_5 { pt3dadd( 447.095, 253.51, 123.193, 0.4482 ) }
    apic_5 { pt3dadd( 447.048, 252.376, 122.856, 0.4902 ) }
    apic_5 { pt3dadd( 447.009, 251.241, 122.517, 0.524 ) }
    apic_5 { pt3dadd( 446.999, 250.106, 122.166, 0.5186 ) }
    apic_5 { pt3dadd( 447.16, 249.023, 121.812, 0.5212 ) }
    apic_5 { pt3dadd( 447.784, 248.075, 121.448, 0.5456 ) }
    apic_5 { pt3dadd( 448.38, 247.11, 121.127, 0.5336 ) }
    apic_5 { pt3dadd( 448.905, 246.096, 120.919, 0.4282 ) }
    apic_5 { pt3dadd( 449.322, 245.046, 120.767, 0.3492 ) }
    apic_5 { pt3dadd( 449.511, 243.918, 120.737, 0.3278 ) }
    apic_5 { pt3dadd( 449.67, 242.786, 120.748, 0.323 ) }
    apic_5 { pt3dadd( 449.766, 241.647, 120.848, 0.3546 ) }
    apic_5 { pt3dadd( 449.999, 240.547, 120.9, 0.3768 ) }
    apic_5 { pt3dadd( 450.527, 239.532, 120.85, 0.3786 ) }
    apic_5 { pt3dadd( 451.046, 238.513, 120.832, 0.3822 ) }
    apic_5 { pt3dadd( 451.551, 237.486, 120.871, 0.3894 ) }
    apic_5 { pt3dadd( 451.674, 236.469, 120.86, 0.3778 ) }
    apic_5 { pt3dadd( 451.119, 235.469, 120.758, 0.3328 ) }
    apic_5 { pt3dadd( 450.652, 234.431, 120.838, 0.3198 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_5 { pt3dadd( 450.259, 233.361, 121.071, 0.334 ) }
    apic_5 { pt3dadd( 450.119, 232.255, 121.023, 0.335 ) }
    apic_5 { pt3dadd( 450.187, 231.119, 120.744, 0.3252 ) }
    apic_5 { pt3dadd( 450.21, 229.98, 120.514, 0.3268 ) }
    apic_5 { pt3dadd( 450.21, 228.839, 120.308, 0.3338 ) }
    apic_5 { pt3dadd( 450.138, 227.699, 120.216, 0.3928 ) }
    apic_5 { pt3dadd( 450.031, 226.56, 120.178, 0.477 ) }
    apic_5 { pt3dadd( 450.419, 225.56, 120.548, 0.527 ) }
    apic_5 { pt3dadd( 450.978, 224.615, 121.092, 0.5542 ) }
    apic_5 { pt3dadd( 450.643, 223.531, 121.43, 0.4734 ) }
    apic_5 { pt3dadd( 450.333, 222.441, 121.718, 0.415 ) }
    apic_5 { pt3dadd( 450.253, 221.301, 121.554, 0.5558 ) }
    apic_5 { pt3dadd( 450.35, 220.203, 121.363, 0.6344 ) }
    apic_5 { pt3dadd( 450.904, 219.206, 121.104, 0.5528 ) }
    apic_5 { pt3dadd( 451.349, 218.173, 120.88, 0.4956 ) }
    apic_5 { pt3dadd( 451.517, 217.043, 120.743, 0.499 ) }
    apic_5 { pt3dadd( 451.737, 215.924, 120.632, 0.4976 ) }
    apic_5 { pt3dadd( 452.074, 214.832, 120.582, 0.4842 ) }
    apic_5 { pt3dadd( 452.371, 213.729, 120.539, 0.5016 ) }
    apic_5 { pt3dadd( 452.58, 212.604, 120.512, 0.585 ) }
    apic_5 { pt3dadd( 452.643, 211.481, 120.497, 0.6544 ) }
    apic_5 { pt3dadd( 452.41, 210.361, 120.507, 0.6952 ) }
    apic_5 { pt3dadd( 452.181, 209.24, 120.483, 0.65 ) }
    apic_5 { pt3dadd( 451.96, 208.118, 120.406, 0.4692 ) }
    apic_5 { pt3dadd( 451.702, 207.006, 120.332, 0.361 ) }
    apic_5 { pt3dadd( 451.384, 205.906, 120.263, 0.3612 ) }
    apic_5 { pt3dadd( 451.294, 204.794, 120.24, 0.375 ) }
    apic_5 { pt3dadd( 451.488, 203.667, 120.272, 0.4058 ) }
    apic_5 { pt3dadd( 451.747, 202.555, 120.304, 0.4014 ) }
    apic_5 { pt3dadd( 452.091, 201.464, 120.336, 0.3542 ) }
    apic_5 { pt3dadd( 452.652, 200.496, 120.325, 0.3622 ) }
    apic_5 { pt3dadd( 453.406, 199.636, 120.275, 0.4188 ) }
    apic_5 { pt3dadd( 453.686, 198.61, 120.305, 0.4472 ) }
    apic_5 { pt3dadd( 453.636, 197.468, 120.392, 0.456 ) }
    apic_5 { pt3dadd( 453.645, 196.325, 120.49, 0.496 ) }
    apic_5 { pt3dadd( 453.692, 195.184, 120.594, 0.5546 ) }
    apic_5 { pt3dadd( 453.761, 194.042, 120.709, 0.5136 ) }
    apic_5 { pt3dadd( 453.843, 192.902, 120.83, 0.4176 ) }
    apic_5 { pt3dadd( 453.908, 191.762, 120.979, 0.3556 ) }
    apic_5 { pt3dadd( 453.962, 190.621, 121.143, 0.3124 ) }
    apic_5 { pt3dadd( 454.121, 189.492, 121.269, 0.3192 ) }
    apic_5 { pt3dadd( 454.336, 188.369, 121.375, 0.3524 ) }
    apic_5 { pt3dadd( 454.46, 187.236, 121.562, 0.3618 ) }
    apic_5 { pt3dadd( 454.538, 186.099, 121.791, 0.3586 ) }
    apic_5 { pt3dadd( 454.533, 184.963, 122.081, 0.3902 ) }
    apic_5 { pt3dadd( 454.485, 183.827, 122.401, 0.44 ) }
    apic_5 { pt3dadd( 454.162, 182.753, 122.699, 0.4452 ) }
    apic_5 { pt3dadd( 453.722, 181.704, 122.986, 0.4314 ) }
    apic_5 { pt3dadd( 453.42, 180.607, 123.156, 0.386 ) }
    apic_5 { pt3dadd( 453.176, 179.49, 123.276, 0.3268 ) }
    apic_5 { pt3dadd( 453.278, 178.374, 123.47, 0.2998 ) }
    apic_5 { pt3dadd( 453.509, 177.257, 123.692, 0.2848 ) }
    apic_5 { pt3dadd( 453.532, 176.136, 124.153, 0.288 ) }
    apic_5 { pt3dadd( 453.484, 175.015, 124.696, 0.2976 ) }
    apic_5 { pt3dadd( 453.628, 173.902, 125.167, 0.3298 ) }
    apic_5 { pt3dadd( 453.831, 172.791, 125.616, 0.3686 ) }
    apic_5 { pt3dadd( 453.875, 171.657, 125.898, 0.351 ) }
    apic_5 { pt3dadd( 453.877, 170.518, 126.136, 0.3184 ) }
    apic_5 { pt3dadd( 453.993, 169.383, 126.335, 0.3148 ) }
    apic_5 { pt3dadd( 454.137, 168.251, 126.523, 0.319 ) }
    apic_5 { pt3dadd( 454.475, 167.164, 126.594, 0.3226 ) }
    apic_5 { pt3dadd( 454.862, 166.087, 126.634, 0.3258 ) }
    apic_5 { pt3dadd( 454.468, 165.059, 126.571, 0.302 ) }
    apic_5 { pt3dadd( 453.964, 164.035, 126.493, 0.2746 ) }
    apic_5 { pt3dadd( 454.151, 162.907, 126.47, 0.2746 ) }
    apic_5 { pt3dadd( 454.314, 161.78, 126.444, 0.2746 ) }
    apic_5 { pt3dadd( 453.937, 160.701, 126.317, 0.2746 ) }
    apic_5 { pt3dadd( 453.571, 159.618, 126.199, 0.2746 ) }
    apic_5 { pt3dadd( 453.23, 158.526, 126.097, 0.2748 ) }
    apic_5 { pt3dadd( 453.206, 157.428, 126.005, 0.2752 ) }
    apic_5 { pt3dadd( 453.493, 156.321, 125.924, 0.2758 ) }
    apic_5 { pt3dadd( 453.941, 155.282, 125.803, 0.277 ) }
    apic_5 { pt3dadd( 454.533, 154.305, 125.648, 0.279 ) }
    apic_5 { pt3dadd( 454.518, 153.27, 125.483, 0.2844 ) }
    apic_5 { pt3dadd( 454.122, 152.199, 125.311, 0.2918 ) }
    apic_5 { pt3dadd( 453.522, 151.239, 125.165, 0.3148 ) }
    apic_5 { pt3dadd( 452.828, 150.331, 125.031, 0.3448 ) }
    apic_5 { pt3dadd( 452.053, 149.496, 125.088, 0.339 ) }
    apic_5 { pt3dadd( 451.242, 148.691, 125.23, 0.317 ) }
    apic_5 { pt3dadd( 450.348, 147.991, 125.501, 0.298 ) }
    apic_5 { pt3dadd( 449.419, 147.337, 125.827, 0.28 ) }
    apic_5 { pt3dadd( 448.566, 146.646, 126.554, 0.2746 ) }
    apic_5 { pt3dadd( 447.746, 145.938, 127.453, 0.2746 ) }
    apic_5 { pt3dadd( 446.987, 145.115, 127.951, 0.2744 ) }
    apic_5 { pt3dadd( 446.251, 144.251, 128.31, 0.2744 ) }
    apic_5 { pt3dadd( 445.554, 143.356, 128.637, 0.2744 ) }
    apic_5 { pt3dadd( 444.868, 142.449, 128.954, 0.2744 ) }
    apic_5 { pt3dadd( 444.57, 141.388, 129.413, 0.2742 ) }
    apic_5 { pt3dadd( 444.404, 140.276, 129.923, 0.274 ) }
    apic_5 { pt3dadd( 444.449, 139.148, 130.309, 0.2736 ) }
    apic_5 { pt3dadd( 444.537, 138.017, 130.67, 0.2734 ) }
    apic_5 { pt3dadd( 444.69, 136.889, 130.926, 0.2728 ) }
    apic_5 { pt3dadd( 444.856, 135.761, 131.16, 0.2722 ) }
    apic_5 { pt3dadd( 445.341, 134.745, 131.521, 0.2704 ) }
    apic_5 { pt3dadd( 445.879, 133.747, 131.903, 0.2682 ) }
    apic_5 { pt3dadd( 446.19, 132.707, 132.741, 0.2622 ) }
    apic_5 { pt3dadd( 446.464, 131.662, 133.654, 0.2554 ) }
    apic_5 { pt3dadd( 446.231, 130.584, 134.388, 0.242 ) }
    apic_5 { pt3dadd( 445.991, 129.507, 135.12, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_524, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_524 = new SectionList()
    soma_0 ModelViewParmSubset_524.append()
    axon_0 ModelViewParmSubset_524.append()
    axon_1 ModelViewParmSubset_524.append()

    // Group: {name=ModelViewParmSubset_525, groups=[], sections=[dend_19, dend_18, dend_15, dend_4, dend_1, dend_0, apic_0, dend_21, dend_20, dend_17, dend_16, dend_10, dend_5, dend_3, dend_2, apic_10, apic_1, dend_12, dend_11, dend_9, dend_6, apic_9, apic_2, dend_14, dend_13, dend_8, dend_7, apic_8, apic_3, apic_7, apic_4, apic_6, apic_5]}
    ModelViewParmSubset_525 = new SectionList()
    dend_19 ModelViewParmSubset_525.append()
    dend_18 ModelViewParmSubset_525.append()
    dend_15 ModelViewParmSubset_525.append()
    dend_4 ModelViewParmSubset_525.append()
    dend_1 ModelViewParmSubset_525.append()
    dend_0 ModelViewParmSubset_525.append()
    apic_0 ModelViewParmSubset_525.append()
    dend_21 ModelViewParmSubset_525.append()
    dend_20 ModelViewParmSubset_525.append()
    dend_17 ModelViewParmSubset_525.append()
    dend_16 ModelViewParmSubset_525.append()
    dend_10 ModelViewParmSubset_525.append()
    dend_5 ModelViewParmSubset_525.append()
    dend_3 ModelViewParmSubset_525.append()
    dend_2 ModelViewParmSubset_525.append()
    apic_10 ModelViewParmSubset_525.append()
    apic_1 ModelViewParmSubset_525.append()
    dend_12 ModelViewParmSubset_525.append()
    dend_11 ModelViewParmSubset_525.append()
    dend_9 ModelViewParmSubset_525.append()
    dend_6 ModelViewParmSubset_525.append()
    apic_9 ModelViewParmSubset_525.append()
    apic_2 ModelViewParmSubset_525.append()
    dend_14 ModelViewParmSubset_525.append()
    dend_13 ModelViewParmSubset_525.append()
    dend_8 ModelViewParmSubset_525.append()
    dend_7 ModelViewParmSubset_525.append()
    apic_8 ModelViewParmSubset_525.append()
    apic_3 ModelViewParmSubset_525.append()
    apic_7 ModelViewParmSubset_525.append()
    apic_4 ModelViewParmSubset_525.append()
    apic_6 ModelViewParmSubset_525.append()
    apic_5 ModelViewParmSubset_525.append()

    // Group: {name=dend, groups=[], sections=[dend_19, dend_18, dend_15, dend_4, dend_1, dend_0, dend_21, dend_20, dend_17, dend_16, dend_10, dend_5, dend_3, dend_2, dend_12, dend_11, dend_9, dend_6, dend_14, dend_13, dend_8, dend_7]}
    dend = new SectionList()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_10 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_12 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_6 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_8 dend.append()
    dend_7 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_10, apic_1, apic_9, apic_2, apic_8, apic_3, apic_7, apic_4, apic_6, apic_5]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_10 apic.append()
    apic_1 apic.append()
    apic_9 apic.append()
    apic_2 apic.append()
    apic_8 apic.append()
    apic_3 apic.append()
    apic_7 apic.append()
    apic_4 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_21857, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_21857 = new SectionList()
    soma_0 OneSecGrp_SectionRef_21857.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_1, apic_1, apic_1, apic_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_8 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.4212074  // units: uF/cm2
    forsec apic cm = 2.4212074  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 222.10457  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0033831976  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 6.793627E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.47756097  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 1.9884222E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 9.098079E-9  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 8.187409E-8  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.0018017729  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.36055973  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.9758757E-4  // units: S cm-2
        e_pas_nml2 = -78.73946  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 4.585195E-6  // units: S cm-2
        e_pas_nml2 = -78.73946  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.11042574E-7  // units: S cm-2
        e_pas_nml2 = -78.73946  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 9.3602915E-7  // units: S cm-2
        e_pas_nml2 = -78.73946  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.035676E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0016698058  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478045347
    forsec soma {
        insert CaDynamics_478045347
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_18 nseg = 3
    dend_0 nseg = 9
    dend_21 nseg = 7
    dend_20 nseg = 5
    dend_17 nseg = 7
    dend_16 nseg = 3
    apic_10 nseg = 7
    dend_11 nseg = 7
    dend_9 nseg = 5
    apic_9 nseg = 3
    apic_2 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 5
    apic_8 nseg = 5
    apic_3 nseg = 3
    apic_7 nseg = 3
    apic_6 nseg = 7
    apic_5 nseg = 23
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478045347


