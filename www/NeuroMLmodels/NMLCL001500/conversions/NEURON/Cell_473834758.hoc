// Cell: Cell_473834758
/*
{
  "id" : "Cell_473834758",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "316.495, 497.411, 70.0, 11.3116", "322.15, 497.411, 70.0, 11.3116", "327.806, 497.411, 70.0, 11.3116" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "322.151, 497.411, 70.0, 1.0", "327.992, 511.227, 70.0, 1.0", "333.833, 525.043, 70.0, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995579524356676
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "319.86, 493.01, 74.7468, 0.2288", "320.106, 491.912, 75.1027, 0.2288", "320.406, 490.823, 75.5429, 0.2288", "320.707, 489.734, 75.983, 0.2288", "321.007, 488.645, 76.4232, 0.2288", "321.307, 487.555, 76.8631, 0.2288", "321.471, 486.465, 77.3329, 0.2288", "321.21, 485.376, 77.8952, 0.2288", "320.949, 484.286, 78.4574, 0.2288", "320.687, 483.196, 79.0194, 0.2288", "320.426, 482.107, 79.5816, 0.2288", "320.164, 481.017, 80.1438, 0.2288", "319.675, 480.082, 80.9981, 0.2288", "319.001, 479.273, 82.089, 0.2542", "318.318, 478.54, 83.3356, 0.2796", "317.598, 478.163, 85.3079, 0.305", "316.879, 477.788, 87.2802, 0.2796", "316.159, 477.412, 89.2525, 0.2542", "315.438, 477.035, 91.2248, 0.2288", "314.72, 476.659, 93.1966, 0.2288", "314.362, 475.746, 94.6375, 0.2288", "314.003, 474.833, 96.0781, 0.2288", "313.645, 473.919, 97.519, 0.2288", "313.286, 473.006, 98.9598, 0.2288", "312.928, 472.093, 100.401, 0.2288", "312.726, 471.104, 101.356, 0.2288", "312.827, 469.964, 101.365, 0.2288", "312.927, 468.824, 101.373, 0.2288", "313.028, 467.684, 101.381, 0.2288", "313.13, 466.545, 101.389, 0.2288", "312.953, 465.595, 102.696, 0.2288", "312.711, 464.688, 104.298, 0.2288", "312.471, 463.781, 105.899, 0.2288", "312.188, 462.978, 107.664, 0.2288", "311.75, 462.563, 110.043, 0.2288", "311.312, 462.148, 112.422, 0.2288", "310.874, 461.734, 114.801, 0.2288", "310.436, 461.319, 117.18, 0.2288", "309.997, 460.905, 119.559, 0.2288", "310.059, 459.878, 119.883, 0.2288", "310.207, 458.743, 119.849, 0.2288", "309.793, 457.877, 119.839, 0.2288", "308.819, 457.274, 119.854, 0.2288", "307.847, 456.672, 119.869, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995579524356676,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "317.336, 495.044, 68.6171, 0.2288", "316.316, 494.542, 68.3239, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995579524356676
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "326.135, 492.596, 68.0826, 0.2796", "326.712, 491.836, 69.5492, 0.3814", "327.432, 491.115, 70.8075, 0.5084", "328.068, 490.179, 71.0545, 0.5848", "328.802, 489.305, 70.9055, 0.6102", "329.46, 488.402, 70.3167, 0.661", "330.33, 487.686, 70.6804, 0.7118", "331.219, 486.985, 71.0903, 0.7372", "332.071, 486.223, 71.1192, 0.661", "333.025, 485.592, 71.1186, 0.5592", "333.968, 484.945, 71.1144, 0.4576", "334.862, 484.231, 71.094, 0.4322", "335.678, 483.43, 71.006, 0.4576", "336.475, 482.646, 70.4318, 0.5338", "337.316, 481.885, 70.049, 0.5592", "338.315, 481.336, 70.2545, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995579524356676
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "327.651, 500.191, 67.599, 0.483", "328.577, 500.812, 67.0135, 0.6102", "329.406, 501.586, 66.6557, 0.6102", "330.264, 502.34, 66.5498, 0.6102", "331.351, 502.596, 66.0873, 0.6102", "332.428, 502.914, 66.5591, 0.6864", "333.482, 503.178, 67.4386, 0.7372", "334.564, 503.493, 67.004, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49995579524356676
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "333.833, 525.043, 70.0, 1.0", "339.674, 538.859, 70.0, 1.0", "345.516, 552.675, 70.0, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "316.316, 494.542, 68.3239, 0.2288", "316.068, 494.7, 65.8871, 0.2288", "315.793, 494.874, 63.2022, 0.2288", "315.518, 495.048, 60.5172, 0.2288", "315.245, 495.222, 57.8323, 0.2288", "314.594, 495.253, 56.2946, 0.2288", "313.46, 495.099, 56.2299, 0.2288", "312.473, 495.661, 56.2447, 0.2288", "311.491, 496.247, 56.2626, 0.2288", "310.508, 496.831, 56.2803, 0.2288", "309.525, 497.417, 56.2982, 0.2288", "308.542, 498.003, 56.3158, 0.2288", "307.477, 498.391, 56.3016, 0.2288", "306.368, 498.667, 56.2694, 0.2288", "305.337, 499.07, 56.1142, 0.2288", "304.557, 499.876, 55.5668, 0.2288", "303.777, 500.683, 55.0192, 0.2288", "302.997, 501.49, 54.4715, 0.2288", "302.217, 502.296, 53.9241, 0.2288", "301.368, 502.938, 52.964, 0.2288", "300.493, 503.519, 51.8524, 0.2288", "299.619, 504.099, 50.7405, 0.2288", "298.744, 504.68, 49.6289, 0.2288", "297.869, 505.26, 48.5173, 0.2288", "296.941, 505.853, 48.0127, 0.2288", "295.967, 506.453, 48.0214, 0.2288", "294.994, 507.055, 48.0301, 0.2288", "294.022, 507.656, 48.0388, 0.2288", "293.199, 508.412, 47.6431, 0.2288", "292.449, 509.241, 47.0526, 0.2288", "291.699, 510.071, 46.4621, 0.2288", "290.949, 510.9, 45.8718, 0.2288", "290.093, 511.591, 45.4762, 0.2288", "289.028, 512.01, 45.4639, 0.2288", "287.964, 512.429, 45.4516, 0.2288", "287.108, 513.092, 45.4289, 0.2288", "286.528, 514.078, 45.393, 0.2542", "285.809, 514.91, 44.9378, 0.3304", "284.966, 515.605, 44.1106, 0.4322", "284.053, 515.865, 43.5742, 0.483", "283.017, 515.377, 43.5378, 0.4576", "281.958, 515.246, 43.0497, 0.3814", "280.879, 515.402, 42.2016, 0.356", "279.8, 515.557, 41.3532, 0.3304", "278.721, 515.712, 40.5051, 0.3304", "277.746, 515.248, 40.3124, 0.2796", "276.802, 514.602, 40.3127, 0.2542", "275.758, 514.433, 40.3242, 0.2288", "274.633, 514.642, 40.3449, 0.2288", "273.507, 514.852, 40.3656, 0.2542", "272.383, 515.061, 40.3864, 0.3304", "271.289, 515.031, 40.3922, 0.4068", "270.254, 514.545, 40.3704, 0.4322", "269.218, 514.059, 40.3486, 0.356", "268.182, 513.574, 40.3267, 0.2796", "267.147, 513.087, 40.3049, 0.2288", "266.172, 512.552, 40.651, 0.2288", "265.311, 511.926, 41.6721, 0.2288", "264.448, 511.301, 42.6933, 0.2288", "263.627, 510.628, 43.5921, 0.2288", "263.103, 509.611, 43.5767, 0.2288", "262.579, 508.594, 43.561, 0.2796", "262.055, 507.577, 43.5456, 0.3304", "261.214, 506.84, 43.5389, 0.4068", "260.27, 506.194, 43.5352, 0.3814", "259.233, 505.838, 43.2446, 0.356", "258.115, 505.735, 42.7036, 0.2796", "256.995, 505.6, 42.3262, 0.2542", "255.869, 505.395, 42.3046, 0.2288", "254.745, 505.19, 42.2834, 0.2288", "253.62, 504.978, 42.2612, 0.2288", "252.516, 504.68, 42.231, 0.2288", "251.412, 504.382, 42.2008, 0.2288", "250.416, 503.872, 42.1918, 0.2288", "249.531, 503.147, 42.2044, 0.2288", "248.647, 502.421, 42.2173, 0.2288", "247.763, 501.695, 42.2302, 0.2288" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "316.316, 494.542, 68.3239, 0.2288", "315.969, 494.1, 68.3217, 0.2542", "315.262, 493.201, 68.3169, 0.305", "314.555, 492.301, 68.3124, 0.3814", "313.848, 491.402, 68.3077, 0.4576" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "338.315, 481.336, 70.2545, 0.4576", "337.899, 480.335, 70.2904, 0.305", "337.433, 479.295, 70.1229, 0.2542", "336.954, 478.262, 69.8438, 0.2796", "336.473, 477.23, 69.5646, 0.356", "335.994, 476.198, 69.2857, 0.4322", "335.422, 475.258, 68.922, 0.4068", "334.465, 474.703, 68.2027, 0.3304", "333.509, 474.148, 67.4834, 0.2542", "332.483, 473.81, 67.0359, 0.2288", "331.339, 473.836, 67.0429, 0.2288", "330.195, 473.861, 67.0496, 0.2288", "329.051, 473.885, 67.0566, 0.2288", "327.908, 473.91, 67.0636, 0.2288", "327.048, 473.257, 66.5048, 0.2288", "326.231, 472.501, 65.8594, 0.2288", "325.415, 471.743, 65.214, 0.2288", "324.597, 470.987, 64.603, 0.2288", "323.75, 470.229, 64.9034, 0.2288", "322.902, 469.47, 65.2036, 0.2288", "322.054, 468.712, 65.504, 0.2288", "321.207, 467.953, 65.8045, 0.2288", "320.359, 467.196, 66.1046, 0.2288", "319.511, 466.437, 66.4051, 0.2288", "318.949, 465.456, 66.4415, 0.2288", "318.453, 464.426, 66.4194, 0.2288", "317.955, 463.396, 66.397, 0.2288", "317.262, 462.502, 66.4079, 0.2288", "316.47, 461.676, 66.435, 0.2288", "315.679, 460.85, 66.4622, 0.2288", "315.116, 459.904, 66.477, 0.2288", "314.88, 458.784, 66.4745, 0.2288", "314.644, 457.664, 66.472, 0.2288", "314.409, 456.545, 66.4698, 0.2288", "314.173, 455.425, 66.4672, 0.2796", "313.937, 454.306, 66.4647, 0.3304", "313.42, 453.305, 66.4269, 0.4068", "312.785, 452.354, 66.3748, 0.4068", "312.827, 451.223, 66.3818, 0.4068", "312.908, 450.082, 66.3925, 0.356", "312.859, 448.972, 66.3984, 0.305", "312.277, 447.987, 66.3858, 0.2542", "311.695, 447.002, 66.3734, 0.2542", "311.52, 445.911, 66.1637, 0.2796", "311.524, 444.773, 65.8672, 0.305", "311.527, 443.635, 65.571, 0.2796", "311.532, 442.498, 65.2747, 0.2542", "311.733, 441.375, 65.2277, 0.2288", "311.963, 440.255, 65.2154, 0.2288", "312.192, 439.134, 65.203, 0.2542", "312.422, 438.012, 65.1907, 0.305", "312.231, 436.974, 65.1851, 0.3814", "311.597, 436.022, 65.1868, 0.4068", "310.962, 435.07, 65.1885, 0.3814", "310.327, 434.118, 65.1902, 0.305", "309.939, 433.081, 64.8262, 0.2542", "309.712, 431.987, 64.225, 0.2288", "309.485, 430.893, 63.6241, 0.2288", "309.257, 429.798, 63.023, 0.2542", "309.03, 428.705, 62.4218, 0.2796", "308.802, 427.611, 61.8209, 0.305", "308.574, 426.517, 61.2198, 0.2796", "308.347, 425.423, 60.6186, 0.2542", "308.15, 424.327, 60.0684, 0.2288", "308.311, 423.194, 60.1006, 0.2288", "308.473, 422.062, 60.1328, 0.2288", "308.547, 420.931, 60.0118, 0.2542", "308.435, 419.808, 59.563, 0.3304", "308.323, 418.685, 59.1144, 0.4322", "308.197, 417.606, 59.4527, 0.483", "308.055, 416.576, 60.622, 0.4576", "307.913, 415.547, 61.7915, 0.4068", "308.009, 414.454, 61.546, 0.3814", "308.164, 413.345, 60.9591, 0.356", "308.317, 412.238, 60.3722, 0.305", "308.47, 411.13, 59.7853, 0.2542", "308.625, 410.022, 59.1982, 0.2288", "308.616, 408.908, 58.844, 0.2288", "308.391, 407.787, 58.7969, 0.2288", "308.212, 406.666, 58.5455, 0.2288", "308.086, 405.548, 58.0404, 0.2288", "307.96, 404.43, 57.5355, 0.2288", "307.834, 403.311, 57.0304, 0.305", "307.708, 402.194, 56.5253, 0.4068", "307.498, 401.084, 56.2344, 0.5338", "307.175, 399.987, 56.2296, 0.5338", "306.853, 398.889, 56.2246, 0.5338", "306.53, 397.792, 56.2195, 0.5084", "306.743, 396.738, 55.2815, 0.5084", "306.966, 395.687, 54.327, 0.4576", "307.052, 394.681, 53.1574, 0.4068", "306.838, 393.779, 51.5192, 0.4068", "306.624, 392.876, 49.8809, 0.4576" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "338.315, 481.336, 70.2545, 0.4576", "338.932, 481.097, 71.0483, 0.3814", "339.944, 480.665, 71.6405, 0.305", "340.985, 480.202, 71.9099, 0.2542", "342.025, 479.74, 72.1792, 0.2288" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "334.564, 503.493, 67.004, 0.6864", "335.274, 504.339, 67.0116, 0.3814", "336.148, 505.044, 67.1835, 0.2796", "337.132, 505.615, 67.4856, 0.2288", "338.117, 506.185, 67.7874, 0.2542", "339.101, 506.754, 68.0896, 0.305", "340.085, 507.325, 68.3917, 0.356", "340.712, 508.264, 68.8344, 0.356", "341.336, 509.205, 69.2776, 0.3304", "341.961, 510.146, 69.7208, 0.305", "342.587, 511.087, 70.1641, 0.305", "343.079, 512.108, 70.2974, 0.2796", "343.503, 513.17, 70.2724, 0.2542", "343.927, 514.233, 70.2475, 0.2796", "344.353, 515.294, 70.2223, 0.356", "344.777, 516.357, 70.1974, 0.4322", "345.26, 517.393, 70.198, 0.4068", "345.749, 518.429, 70.2008, 0.356", "346.237, 519.463, 70.2038, 0.3304", "346.726, 520.497, 70.2066, 0.4576" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "334.564, 503.493, 67.004, 0.6864", "335.919, 503.796, 66.6056, 0.5338", "337.053, 503.796, 66.3732, 0.3814", "338.08, 503.644, 65.4088, 0.2796", "338.785, 503.2, 63.5415, 0.2288", "339.279, 502.511, 62.2717, 0.2288", "339.791, 501.494, 62.5621, 0.2542", "340.708, 501.241, 62.0564, 0.2796", "341.796, 501.312, 61.2133, 0.305", "342.885, 501.383, 60.37, 0.2796", "343.973, 501.454, 59.5269, 0.2542", "345.062, 501.525, 58.6838, 0.2288", "346.132, 501.424, 58.0051, 0.2288", "347.158, 500.935, 57.7007, 0.2288", "348.184, 500.444, 57.3966, 0.2288", "349.21, 499.954, 57.0923, 0.2288", "350.109, 499.301, 56.8002, 0.2288", "350.824, 498.416, 56.5264, 0.2288", "351.539, 497.529, 56.2523, 0.2288", "352.254, 496.644, 55.9782, 0.2542", "352.97, 495.758, 55.704, 0.2796", "353.685, 494.873, 55.4299, 0.356", "354.4, 493.986, 55.1558, 0.4322", "355.124, 493.103, 55.0466, 0.5592", "355.854, 492.222, 55.0441, 0.5848", "356.582, 491.341, 55.0416, 0.5592", "357.312, 490.459, 55.039, 0.4322", "358.316, 489.919, 55.015, 0.356", "359.334, 489.397, 54.9892, 0.2796", "360.352, 488.877, 54.9637, 0.2542", "361.37, 488.355, 54.9382, 0.2288", "362.328, 487.773, 55.1326, 0.2288", "363.111, 487.011, 55.9658, 0.2288", "363.894, 486.249, 56.7988, 0.2288", "364.884, 485.691, 56.8613, 0.2288", "365.891, 485.146, 56.866, 0.2288", "366.898, 484.603, 56.8705, 0.2288", "367.905, 484.058, 56.875, 0.2288", "369.021, 483.872, 56.8865, 0.2288", "370.158, 483.755, 56.8991, 0.2288", "371.297, 483.637, 56.9117, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "313.848, 491.402, 68.3077, 0.4576", "312.741, 491.406, 68.7823, 0.305", "311.607, 491.445, 68.745, 0.2542", "310.47, 491.499, 68.467, 0.2288", "309.487, 491.029, 68.357, 0.2288", "308.567, 490.349, 68.3133, 0.2288", "307.56, 489.978, 68.3984, 0.2288", "306.425, 490.06, 68.6745, 0.2288", "305.289, 490.142, 68.9506, 0.2288", "304.247, 489.862, 69.5047, 0.2288", "303.258, 489.365, 70.224, 0.2288", "302.27, 488.869, 70.9433, 0.2288", "301.283, 488.374, 71.6626, 0.2288", "300.287, 487.859, 72.1218, 0.2288", "299.282, 487.314, 72.1274, 0.2288", "298.276, 486.77, 72.133, 0.2288", "297.271, 486.225, 72.1384, 0.2288", "296.264, 485.68, 72.144, 0.2288", "295.258, 485.135, 72.1496, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "313.848, 491.402, 68.3077, 0.4576", "313.404, 490.766, 67.835, 0.356", "312.768, 489.856, 67.1588, 0.3304", "312.132, 488.946, 66.4826, 0.2796", "311.497, 488.036, 65.8062, 0.2542", "310.861, 487.125, 65.13, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "342.025, 479.74, 72.1792, 0.2288", "342.452, 480.322, 70.7946, 0.2288", "342.984, 481.049, 69.0676, 0.2288", "344.095, 481.034, 68.9699, 0.2542", "345.237, 480.979, 68.9618, 0.2796", "345.82, 481.88, 69.0018, 0.3814", "346.196, 482.958, 68.9791, 0.4322", "346.62, 483.992, 68.9478, 0.483", "347.527, 484.689, 68.9755, 0.4068", "348.061, 485.599, 68.6501, 0.3814", "348.273, 486.694, 68.0193, 0.3814", "348.485, 487.788, 67.3884, 0.4322", "348.476, 488.892, 67.055, 0.4576", "348.219, 490.006, 67.0564, 0.4322", "347.961, 491.121, 67.0578, 0.3814", "348.196, 492.205, 66.6151, 0.3304", "348.513, 493.284, 66.0974, 0.3304", "348.829, 494.362, 65.5799, 0.356", "349.146, 495.441, 65.0622, 0.356", "349.463, 496.52, 64.5448, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "342.025, 479.74, 72.1792, 0.2288", "342.588, 479.211, 72.1636, 0.2288", "343.423, 478.429, 72.1406, 0.2288", "344.257, 477.646, 72.1176, 0.2542", "345.092, 476.864, 72.0944, 0.2796", "346.015, 476.228, 72.0824, 0.305", "347.094, 475.847, 72.0888, 0.2796", "347.996, 475.196, 72.1036, 0.2542", "348.777, 474.36, 72.1241, 0.305", "349.511, 473.484, 72.1328, 0.4068", "350.214, 472.582, 72.133, 0.5338", "350.826, 471.627, 72.1389, 0.5084", "351.259, 470.567, 72.1568, 0.4322", "351.693, 469.509, 72.1748, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "346.726, 520.497, 70.2066, 0.4576", "348.009, 520.713, 70.7748, 0.305", "349.12, 520.9, 71.2662, 0.2542", "350.231, 521.086, 71.7573, 0.2796", "351.342, 521.274, 72.2487, 0.356", "352.453, 521.46, 72.7401, 0.4576", "353.563, 521.647, 73.2312, 0.5084", "354.674, 521.833, 73.7226, 0.5338", "355.784, 522.021, 74.214, 0.5338", "356.896, 522.17, 74.6626, 0.5084", "358.017, 521.94, 74.6852, 0.483", "359.137, 521.71, 74.7076, 0.4322", "360.258, 521.48, 74.7303, 0.3814", "361.226, 521.885, 74.6945, 0.305", "362.189, 522.126, 74.662, 0.2542", "363.252, 521.702, 74.6738, 0.2542", "364.313, 521.277, 74.6855, 0.3304", "365.327, 521.606, 74.6665, 0.4068", "366.325, 522.166, 74.6382, 0.4576", "367.44, 522.41, 74.643, 0.4068", "368.56, 522.64, 74.6491, 0.356", "369.681, 522.87, 74.6553, 0.2796", "370.797, 523.115, 74.6612, 0.2542", "371.777, 523.703, 74.66, 0.2542", "372.757, 524.292, 74.6592, 0.3304", "373.739, 524.88, 74.6581, 0.4068", "374.783, 525.194, 75.145, 0.4576", "375.87, 525.323, 75.9615, 0.4322", "376.956, 525.451, 76.7782, 0.4322", "378.043, 525.579, 77.5947, 0.4068", "379.13, 525.706, 78.4115, 0.3814", "380.213, 525.888, 79.084, 0.305", "381.277, 526.306, 79.1126, 0.2542", "382.342, 526.725, 79.1409, 0.2288", "383.37, 527.206, 79.1644, 0.2542", "384.264, 527.919, 79.1706, 0.2796", "385.157, 528.634, 79.1764, 0.305", "386.03, 529.333, 79.6701, 0.2796", "386.893, 530.023, 80.3936, 0.2542", "387.755, 530.714, 81.1168, 0.2288", "388.618, 531.405, 81.8404, 0.2288", "389.48, 532.096, 82.5636, 0.2288", "390.343, 532.787, 83.2871, 0.2288", "391.205, 533.478, 84.0104, 0.2288", "392.068, 534.169, 84.7336, 0.2288", "392.931, 534.86, 85.4571, 0.2288", "393.793, 535.551, 86.1804, 0.2288", "394.741, 536.147, 86.52, 0.2288", "395.808, 536.514, 86.52, 0.2288", "396.951, 536.536, 86.52, 0.2288", "398.095, 536.536, 86.52, 0.2288", "399.239, 536.536, 86.52, 0.2288", "400.383, 536.536, 86.52, 0.2796", "401.505, 536.606, 86.52, 0.356", "402.098, 537.543, 86.52, 0.4322", "402.871, 538.312, 86.52, 0.4068", "403.697, 538.964, 86.52, 0.3304", "404.786, 539.283, 86.52, 0.2542", "405.675, 539.902, 86.52, 0.2288", "406.786, 540.081, 86.52, 0.2288", "407.93, 540.095, 86.52, 0.2288", "408.719, 540.867, 86.52, 0.2288", "409.379, 541.779, 86.52, 0.2288", "409.924, 542.698, 86.52, 0.2288", "410.71, 543.449, 86.52, 0.2288", "411.75, 543.906, 86.52, 0.2288", "412.716, 544.518, 86.52, 0.2288", "413.671, 545.142, 86.52, 0.2288", "414.616, 545.776, 86.52, 0.2288", "415.544, 546.414, 86.52, 0.2288", "416.066, 547.402, 86.52, 0.2288", "416.538, 548.403, 86.52, 0.2288", "417.545, 548.842, 86.52, 0.2288", "418.488, 549.466, 86.52, 0.2288", "419.507, 549.952, 86.52, 0.2288", "420.644, 550.035, 86.52, 0.2288", "421.788, 550.035, 86.52, 0.2288", "422.93, 550.083, 86.52, 0.2288", "424.07, 550.15, 86.478, 0.2288", "425.196, 550.251, 86.24, 0.2542", "426.256, 550.418, 86.7194, 0.305", "427.118, 550.568, 88.5223, 0.356", "427.981, 550.718, 90.3249, 0.356", "428.843, 550.868, 92.1276, 0.305", "429.979, 550.951, 92.1861, 0.2542", "431.12, 551.034, 92.2121, 0.2288", "432.23, 551.225, 92.2247, 0.2288", "433.244, 551.755, 92.1956, 0.2288", "434.259, 552.283, 92.1668, 0.2288", "434.791, 553.218, 92.1928, 0.2288", "435.137, 554.308, 92.2404, 0.2288", "435.397, 555.421, 92.2356, 0.2288", "435.632, 556.541, 92.2163, 0.2796", "435.866, 557.66, 92.197, 0.3814", "436.101, 558.78, 92.1777, 0.6864" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "346.726, 520.497, 70.2066, 0.4576", "346.965, 521.132, 70.8971, 0.305", "347.335, 522.12, 71.9726, 0.2542", "347.469, 523.228, 72.1806, 0.2288", "347.532, 524.37, 72.1294, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "371.297, 483.637, 56.9117, 0.2288", "372.3, 483.373, 56.2223, 0.2288", "373.367, 483.091, 55.489, 0.2288", "374.435, 482.809, 54.756, 0.2288", "375.522, 482.548, 54.2948, 0.2288", "376.644, 482.324, 54.3119, 0.2288", "377.766, 482.1, 54.329, 0.2288", "378.888, 481.876, 54.346, 0.2288", "380.009, 481.651, 54.3631, 0.2288", "381.131, 481.427, 54.3802, 0.2288", "382.179, 481.043, 54.5972, 0.2288", "383.126, 480.431, 55.0942, 0.2288", "384.07, 479.82, 55.5909, 0.2288", "385.017, 479.209, 56.0879, 0.2288", "385.961, 478.598, 56.5846, 0.2288", "386.854, 477.904, 56.8364, 0.2288", "387.695, 477.127, 56.8459, 0.2288", "388.534, 476.35, 56.8554, 0.2288", "389.374, 475.573, 56.8652, 0.2288", "390.214, 474.797, 56.8747, 0.2288", "391.032, 473.998, 56.8809, 0.2288", "391.757, 473.114, 56.8733, 0.2288", "392.481, 472.229, 56.866, 0.2288", "393.206, 471.344, 56.8588, 0.2288", "393.932, 470.46, 56.8512, 0.2288", "394.657, 469.574, 56.8439, 0.2288", "395.382, 468.69, 56.8364, 0.2288", "396.321, 468.045, 56.8347, 0.2288", "397.282, 467.423, 56.8333, 0.2288", "398.242, 466.802, 56.8322, 0.2288", "399.203, 466.18, 56.8308, 0.2288", "400.163, 465.559, 56.8296, 0.2288", "401.124, 464.938, 56.8282, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "371.297, 483.637, 56.9117, 0.2288", "371.787, 483.871, 56.7092, 0.2288", "372.809, 484.357, 56.2878, 0.2288", "373.83, 484.842, 55.8667, 0.2288", "374.852, 485.328, 55.4456, 0.2288", "375.874, 485.813, 55.0245, 0.2288", "376.895, 486.299, 54.6034, 0.2288", "377.916, 486.786, 54.1822, 0.2288", "378.937, 487.271, 53.7611, 0.2288", "379.769, 487.997, 53.0454, 0.2542", "380.589, 488.735, 52.3146, 0.2796", "381.411, 489.474, 51.5836, 0.3304", "382.232, 490.212, 50.8528, 0.3304", "383.236, 490.476, 50.2113, 0.3304", "384.355, 490.445, 49.6252, 0.2796", "385.473, 490.416, 49.0389, 0.2542", "386.591, 490.385, 48.4526, 0.2288", "387.699, 490.487, 48.057, 0.2288", "388.786, 490.841, 48.0295, 0.2288", "389.874, 491.196, 48.0024, 0.2288", "390.962, 491.552, 47.9749, 0.2288", "392.049, 491.906, 47.9478, 0.2288", "393.087, 491.861, 47.178, 0.2288", "394.102, 491.611, 46.0337, 0.2288", "395.116, 491.363, 44.8893, 0.2288", "395.985, 490.948, 43.5299, 0.2288", "396.668, 490.318, 41.8947, 0.2288", "397.69, 490.365, 41.0329, 0.2288", "398.781, 490.552, 40.3306, 0.2288", "399.872, 490.738, 39.6287, 0.2288", "400.965, 490.925, 38.9267, 0.2288", "402.046, 491.174, 38.3869, 0.2288", "403.089, 491.641, 38.4093, 0.2288", "404.134, 492.109, 38.4317, 0.2288", "405.151, 492.517, 38.1587, 0.2288", "406.039, 492.624, 36.4101, 0.2288", "406.936, 492.443, 35.2904, 0.2288", "407.851, 491.756, 35.2761, 0.2288", "408.696, 491.151, 34.5139, 0.2288", "409.457, 490.65, 32.8222, 0.2288", "410.218, 490.148, 31.1301, 0.2288", "410.996, 489.689, 29.4473, 0.2288", "411.936, 489.648, 27.8538, 0.2542", "412.875, 489.608, 26.2604, 0.3304", "413.816, 489.567, 24.6669, 0.4068", "414.767, 489.841, 23.856, 0.4322", "415.59, 490.538, 23.595, 0.3814", "415.958, 491.504, 22.388, 0.3814", "416.325, 492.468, 21.1809, 0.4576", "416.693, 493.432, 19.9738, 0.6864" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "295.258, 485.135, 72.1496, 0.2288", "294.788, 485.821, 72.1748, 0.2288", "294.142, 486.765, 72.2092, 0.2288", "293.421, 487.647, 72.2109, 0.2288", "292.612, 488.456, 72.1745, 0.2288", "291.803, 489.265, 72.1384, 0.2288", "290.832, 489.678, 72.802, 0.2288", "289.786, 489.908, 73.7867, 0.2288", "288.741, 490.138, 74.7718, 0.2288", "287.695, 490.369, 75.7565, 0.2288", "286.655, 490.648, 76.5853, 0.2288", "285.646, 491.188, 76.5817, 0.2288", "284.639, 491.728, 76.578, 0.2288", "283.634, 492.273, 76.5744, 0.2288", "282.761, 493.014, 76.5755, 0.2288", "281.888, 493.753, 76.5766, 0.2288", "281.015, 494.493, 76.5775, 0.2288", "280.144, 495.233, 76.5786, 0.2288", "279.271, 495.972, 76.5797, 0.2288", "278.377, 496.664, 76.6189, 0.2288", "277.261, 496.827, 77.077, 0.2288", "276.144, 496.989, 77.5351, 0.2288", "275.027, 497.151, 77.9932, 0.2288", "273.91, 497.314, 78.4512, 0.2288", "272.794, 497.476, 78.9093, 0.2288", "271.73, 497.794, 79.1885, 0.2288", "270.768, 498.413, 79.1241, 0.2288", "269.685, 498.489, 79.1325, 0.2288", "268.552, 498.334, 79.1717, 0.2288", "267.434, 498.306, 79.5528, 0.2288", "266.332, 498.398, 80.2645, 0.2288", "265.229, 498.491, 80.9763, 0.2288", "264.127, 498.584, 81.688, 0.2288", "263.024, 498.678, 82.3998, 0.2288", "261.987, 498.885, 83.0183, 0.2288", "261.285, 499.608, 83.1219, 0.2288", "260.196, 499.33, 83.6391, 0.2288", "259.106, 499.053, 84.1562, 0.2288", "258.017, 498.775, 84.6737, 0.2288", "256.926, 498.497, 85.1908, 0.2288", "255.873, 498.561, 85.5078, 0.2288", "254.93, 499.148, 85.7601, 0.2288", "254.288, 499.926, 87.0822, 0.2288", "253.646, 500.704, 88.4047, 0.2288", "253.005, 501.482, 89.7271, 0.2288", "252.363, 502.259, 91.0496, 0.2288", "252.47, 503.32, 91.266, 0.2288", "252.724, 504.435, 91.2682, 0.2288", "252.561, 505.513, 91.2383, 0.2288", "252.067, 506.522, 91.1957, 0.2288", "251.044, 507.033, 91.2643, 0.2288", "250.205, 507.634, 91.8112, 0.2288", "249.811, 508.454, 93.5094, 0.2288", "249.417, 509.275, 95.2073, 0.2288", "248.947, 510.195, 96.3178, 0.2288", "248.442, 511.162, 97.1678, 0.2288", "247.939, 512.129, 98.0176, 0.2288", "247.435, 513.095, 98.8677, 0.2288", "246.409, 513.578, 98.8873, 0.2288", "245.364, 514.043, 98.8753, 0.2288", "244.891, 515.084, 98.8887, 0.2288", "244.421, 516.126, 98.9022, 0.2288", "244.38, 517.249, 98.8929, 0.2288", "244.444, 518.391, 98.8778, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "295.258, 485.135, 72.1496, 0.2288", "294.741, 484.862, 72.6734, 0.2288", "293.792, 484.358, 73.6355, 0.2288", "292.841, 483.856, 74.5973, 0.2288", "291.727, 483.888, 74.7281, 0.2288", "290.587, 483.997, 74.739, 0.2288", "289.814, 483.285, 74.7155, 0.2288", "289.133, 482.366, 74.683, 0.2288", "288.451, 481.447, 74.6505, 0.2288", "287.771, 480.528, 74.618, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "310.861, 487.125, 65.13, 0.2288", "310.642, 486.594, 65.133, 0.2288", "310.206, 485.535, 65.1392, 0.2288", "309.63, 484.553, 65.1277, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "310.861, 487.125, 65.13, 0.2288", "311.167, 486.335, 64.9701, 0.2288", "311.579, 485.271, 64.755, 0.2288", "311.99, 484.207, 64.54, 0.2288", "312.402, 483.143, 64.325, 0.2288", "312.813, 482.079, 64.1096, 0.2288", "313.324, 481.076, 63.9506, 0.2288", "314.1, 480.236, 63.9397, 0.2288", "314.877, 479.396, 63.929, 0.2288", "315.652, 478.555, 63.9184, 0.2288", "316.144, 477.543, 64.2102, 0.2288", "316.571, 476.492, 64.5714, 0.2288", "316.998, 475.441, 64.9328, 0.2288", "317.423, 474.389, 65.294, 0.2288", "317.85, 473.338, 65.6552, 0.2288", "318.277, 472.287, 66.0164, 0.2288", "318.703, 471.235, 66.3779, 0.2288", "319.405, 470.351, 66.4588, 0.2288", "320.184, 469.514, 66.4605, 0.2288", "320.964, 468.676, 66.4619, 0.2288", "321.743, 467.839, 66.4636, 0.2288", "322.182, 466.791, 66.4496, 0.2288", "322.585, 465.72, 66.4336, 0.2288", "322.987, 464.649, 66.418, 0.2288", "323.388, 463.578, 66.402, 0.2288", "323.79, 462.507, 66.386, 0.2288", "324.171, 461.432, 66.3715, 0.2288", "324.085, 460.292, 66.3824, 0.2288", "323.999, 459.151, 66.3933, 0.2288", "323.913, 458.011, 66.4042, 0.2288", "323.913, 456.9, 66.5146, 0.2288", "324.554, 456.019, 67.3674, 0.2288", "325.196, 455.138, 68.2203, 0.2288", "325.836, 454.257, 69.0732, 0.2288", "326.478, 453.376, 69.9264, 0.2288", "326.9, 452.359, 70.2747, 0.2288", "327.172, 451.247, 70.2744, 0.2288", "327.445, 450.137, 70.2738, 0.2288", "327.716, 449.026, 70.2733, 0.2288", "327.998, 447.917, 70.2736, 0.2288", "328.497, 446.889, 70.2839, 0.2288", "328.996, 445.859, 70.2943, 0.2288", "329.495, 444.829, 70.3044, 0.2542", "329.949, 443.78, 70.3018, 0.2796", "330.348, 442.709, 70.2828, 0.305", "330.747, 441.637, 70.2638, 0.2796", "331.146, 440.565, 70.2447, 0.2542", "331.545, 439.493, 70.2257, 0.2288", "332.217, 438.57, 70.236, 0.2288", "332.906, 437.657, 70.2484, 0.2288", "333.595, 436.744, 70.2607, 0.2288", "334.284, 435.83, 70.273, 0.2288", "334.973, 434.917, 70.285, 0.2288", "335.662, 434.004, 70.2974, 0.2288", "336.351, 433.09, 70.3097, 0.2288", "337.195, 432.372, 70.959, 0.2288", "338.052, 431.669, 71.654, 0.2288", "338.908, 430.964, 72.3486, 0.2288", "339.763, 430.261, 73.0436, 0.2288", "340.662, 429.598, 73.5092, 0.2288", "341.653, 429.026, 73.4852, 0.2288", "342.589, 428.401, 73.5678, 0.2288", "343.241, 427.499, 74.2115, 0.2288", "343.894, 426.596, 74.8555, 0.2288", "344.546, 425.694, 75.4992, 0.2288", "345.2, 424.792, 76.1429, 0.2288", "345.852, 423.89, 76.7869, 0.2288", "346.504, 422.988, 77.4306, 0.2288", "347.157, 422.086, 78.0744, 0.2288", "347.809, 421.184, 78.7184, 0.2288", "348.55, 420.451, 79.6807, 0.2288", "349.405, 419.934, 81.0468, 0.2288", "350.258, 419.429, 82.3984, 0.2288", "351.127, 420.174, 82.3777, 0.2288", "352.045, 420.781, 82.3446, 0.2288", "353.189, 420.785, 82.2598, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "349.463, 496.52, 64.5448, 0.2288", "348.454, 497.283, 64.2776, 0.2796", "347.546, 497.971, 64.0371, 0.305", "346.821, 498.817, 63.777, 0.2796", "346.269, 499.812, 63.499, 0.2542", "345.717, 500.808, 63.2209, 0.2288", "345.164, 501.804, 62.9426, 0.2288", "344.628, 502.796, 62.6108, 0.2288", "344.434, 503.727, 61.0554, 0.2288", "344.241, 504.66, 59.5003, 0.2288", "344.046, 505.591, 57.9449, 0.2288", "343.869, 506.392, 56.1022, 0.2542", "343.728, 506.906, 53.6253, 0.2796", "343.588, 507.421, 51.1482, 0.305", "342.967, 507.71, 49.4133, 0.2796", "341.912, 507.795, 48.3482, 0.2542", "340.857, 507.88, 47.2833, 0.2288", "339.802, 507.966, 46.2185, 0.2288", "338.79, 508.23, 45.4745, 0.2288", "337.875, 508.918, 45.4826, 0.2288", "336.943, 509.431, 44.9613, 0.2288", "335.985, 509.65, 43.5291, 0.2542", "335.026, 509.867, 42.0972, 0.2796", "334.067, 510.084, 40.665, 0.305", "333.136, 510.449, 39.3187, 0.2796", "332.213, 510.854, 37.9963, 0.2542", "331.29, 511.258, 36.6738, 0.2288", "330.365, 511.663, 35.3511, 0.2288", "329.268, 511.845, 34.7287, 0.2288", "328.164, 512.02, 34.1298, 0.2288", "327.06, 512.194, 33.5308, 0.2288", "325.956, 512.368, 32.9319, 0.2288", "324.852, 512.543, 32.333, 0.2288", "323.748, 512.717, 31.7341, 0.2288", "322.845, 512.399, 30.8806, 0.2288", "322.123, 511.63, 29.7942, 0.2288", "321.402, 510.861, 28.7078, 0.2288", "320.68, 510.091, 27.6214, 0.2288", "319.959, 509.323, 26.535, 0.2288", "319.238, 508.554, 25.4486, 0.2288", "319.115, 507.881, 23.5416, 0.2288", "319.286, 507.258, 21.233, 0.2288", "319.456, 506.633, 18.9241, 0.2288", "319.473, 506.142, 16.905, 0.2796", "318.422, 506.594, 16.9151, 0.3814", "317.371, 507.045, 16.9252, 0.483", "316.891, 508.064, 16.6617, 0.483", "316.435, 509.108, 16.3864, 0.3814", "315.978, 510.15, 16.1112, 0.2796", "315.523, 511.193, 15.836, 0.2288", "315.067, 512.236, 15.5607, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "349.463, 496.52, 64.5448, 0.2288", "349.886, 497.253, 64.6727, 0.2288", "350.456, 498.243, 64.8455, 0.2288", "351.027, 499.231, 65.018, 0.2288", "351.597, 500.221, 65.1907, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "351.693, 469.509, 72.1748, 0.2288", "352.116, 469.136, 72.8126, 0.2288", "352.895, 468.451, 73.9878, 0.2288", "353.674, 467.764, 75.1629, 0.2288", "354.277, 466.813, 75.3122, 0.2288", "354.857, 465.827, 75.3287, 0.2288", "355.437, 464.84, 75.3449, 0.2288", "356.017, 463.854, 75.3614, 0.2288" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "351.693, 469.509, 72.1748, 0.2288", "351.868, 469.09, 72.0191, 0.2288", "352.305, 468.046, 71.6307, 0.2288", "352.743, 467.0, 71.2421, 0.2288", "353.18, 465.955, 70.8534, 0.2288", "353.617, 464.91, 70.4648, 0.2288", "354.132, 463.895, 70.2957, 0.2288", "354.702, 462.905, 70.2859, 0.2288", "355.273, 461.913, 70.2761, 0.2288", "355.843, 460.921, 70.2663, 0.2288", "356.198, 459.839, 70.259, 0.2288", "356.513, 458.738, 70.2523, 0.2542", "356.824, 457.676, 69.6665, 0.2796", "357.133, 456.629, 68.8304, 0.305", "357.441, 455.581, 67.9941, 0.2796", "357.751, 454.534, 67.158, 0.2542", "357.277, 453.538, 67.0502, 0.2288", "356.703, 452.548, 67.0334, 0.2288", "356.484, 451.459, 66.6879, 0.2542", "356.391, 450.335, 66.2253, 0.2796", "356.299, 449.21, 65.7628, 0.305", "356.205, 448.085, 65.3002, 0.305", "356.184, 446.946, 65.158, 0.3304", "356.183, 445.802, 65.1031, 0.356", "356.183, 444.658, 65.1022, 0.356", "356.184, 443.514, 65.1213, 0.305", "356.621, 442.46, 65.114, 0.2542", "357.072, 441.409, 65.1056, 0.2288", "357.523, 440.357, 65.0975, 0.2288", "357.252, 439.255, 64.7853, 0.2288", "356.976, 438.152, 64.4711, 0.2288", "356.7, 437.049, 64.157, 0.2288", "356.424, 435.946, 63.8425, 0.2288", "356.148, 434.844, 63.5284, 0.2288", "355.872, 433.741, 63.2142, 0.2288", "355.596, 432.638, 62.8998, 0.2288", "355.3, 431.541, 62.6324, 0.2288", "354.887, 430.474, 62.6354, 0.2288", "354.474, 429.407, 62.6385, 0.2288", "354.061, 428.34, 62.6416, 0.2288", "353.026, 428.431, 62.1961, 0.2288", "351.922, 428.651, 61.7008, 0.2288", "350.854, 428.731, 61.1794, 0.2288", "349.993, 428.029, 60.5122, 0.2288", "349.133, 427.326, 59.8447, 0.2288", "348.542, 426.418, 59.5185, 0.2288", "348.188, 425.33, 59.4877, 0.2288", "347.833, 424.243, 59.4572, 0.2288", "347.477, 423.155, 59.4266, 0.2288", "347.122, 422.069, 59.4006, 0.2288", "346.752, 420.985, 59.4042, 0.2288", "346.383, 419.903, 59.4082, 0.2288", "346.014, 418.819, 59.4121, 0.2288", "345.645, 417.737, 59.416, 0.2288", "345.139, 416.719, 59.4255, 0.2288", "344.541, 415.743, 59.439, 0.2796", "343.944, 414.767, 59.4524, 0.3304", "343.397, 413.786, 59.4644, 0.4322", "343.717, 412.688, 59.4569, 0.4322", "344.037, 411.59, 59.449, 0.4322", "344.483, 410.542, 59.4493, 0.3304", "345.007, 409.525, 59.4552, 0.305", "345.531, 408.508, 59.4608, 0.305", "346.055, 407.491, 59.4664, 0.4576" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "347.532, 524.37, 72.1294, 0.2288", "347.553, 524.651, 71.5756, 0.2288", "347.619, 525.541, 69.8239, 0.2288", "347.686, 526.431, 68.0722, 0.2288", "347.753, 527.321, 66.3208, 0.2288", "347.62, 528.275, 65.2212, 0.2288", "347.264, 529.337, 65.1512, 0.2288", "347.543, 530.446, 65.1291, 0.2288", "347.82, 531.556, 65.107, 0.2288", "348.247, 532.585, 65.1081, 0.2288", "349.026, 533.422, 65.1647, 0.2288", "349.816, 534.235, 65.0146, 0.2288", "350.631, 534.99, 64.3499, 0.2288", "351.447, 535.744, 63.6852, 0.2288", "352.263, 536.499, 63.0204, 0.2288", "353.078, 537.254, 62.3557, 0.2542", "353.471, 538.142, 61.6644, 0.305", "353.247, 539.223, 60.9342, 0.3814", "353.023, 540.305, 60.2042, 0.4068", "352.799, 541.387, 59.474, 0.3814", "352.575, 542.468, 58.7437, 0.305", "352.328, 543.546, 58.0493, 0.2542", "351.978, 544.614, 57.5142, 0.2288", "351.628, 545.681, 56.9789, 0.2288", "351.278, 546.747, 56.4438, 0.2542", "350.928, 547.815, 55.9087, 0.2796", "350.578, 548.882, 55.3734, 0.3304", "350.227, 549.948, 54.8383, 0.3304", "349.861, 551.008, 54.325, 0.3304", "349.129, 551.886, 54.3161, 0.2796", "348.396, 552.765, 54.3071, 0.2542", "347.664, 553.643, 54.3026, 0.2288", "346.969, 554.526, 54.829, 0.2288", "346.505, 555.468, 55.2289, 0.2288", "346.739, 556.588, 55.2448, 0.2542", "346.884, 557.718, 55.2583, 0.2796", "346.917, 558.861, 55.2684, 0.305", "346.951, 560.005, 55.2787, 0.2796", "346.984, 561.148, 55.2891, 0.305", "347.017, 562.292, 55.2994, 0.3814", "347.052, 563.436, 55.3098, 0.5338", "347.19, 564.555, 55.3255, 0.6102", "347.661, 565.597, 55.358, 0.6102", "348.133, 566.639, 55.3904, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "347.532, 524.37, 72.1294, 0.2288", "347.946, 524.686, 72.1473, 0.2288", "348.855, 525.381, 72.1868, 0.2288", "349.5, 526.185, 71.7676, 0.2288", "349.659, 527.192, 70.4973, 0.2288", "349.817, 528.2, 69.2272, 0.2288", "350.635, 528.843, 68.9508, 0.2288", "351.645, 529.378, 68.9674, 0.2288", "351.871, 530.417, 69.5618, 0.2288", "351.996, 531.521, 70.2304, 0.2542", "352.122, 532.625, 70.8988, 0.305", "351.815, 533.724, 70.8817, 0.356", "351.501, 534.825, 70.8506, 0.356", "351.258, 535.925, 70.7969, 0.305", "351.525, 537.034, 70.5835, 0.2796", "351.791, 538.143, 70.3704, 0.2796", "351.99, 539.259, 70.2111, 0.305", "351.927, 540.402, 70.2579, 0.305", "352.29, 541.344, 70.2635, 0.356", "352.737, 542.237, 70.2467, 0.4576", "352.624, 543.375, 70.2666, 0.5338", "352.511, 544.513, 70.2867, 0.5338", "352.398, 545.625, 70.719, 0.4576", "352.283, 546.708, 71.5739, 0.4068", "352.261, 547.841, 71.7413, 0.356", "352.261, 548.985, 71.7475, 0.305", "352.26, 550.129, 71.7534, 0.2796", "352.26, 551.273, 71.7592, 0.2796", "352.26, 552.417, 71.7654, 0.3304", "352.751, 553.448, 71.7816, 0.3304", "353.252, 554.475, 71.7982, 0.3304", "353.753, 555.503, 71.815, 0.2796", "354.254, 556.532, 71.8315, 0.2542", "354.673, 557.593, 71.8472, 0.2542", "354.987, 558.693, 71.8617, 0.2796", "355.299, 559.792, 71.8766, 0.305", "355.612, 560.893, 71.8911, 0.2796", "355.926, 561.993, 71.9057, 0.2542", "355.899, 563.105, 71.916, 0.2288", "355.66, 564.223, 71.9236, 0.2288", "355.42, 565.342, 71.9312, 0.2288", "355.181, 566.461, 71.939, 0.2288", "354.933, 567.577, 71.9298, 0.2288", "354.678, 568.693, 71.9065, 0.2542", "354.423, 569.808, 71.8833, 0.2796", "354.169, 570.924, 71.86, 0.305", "353.913, 572.038, 71.8368, 0.2796", "353.713, 573.165, 71.8306, 0.2796", "353.52, 574.293, 71.827, 0.2796", "353.327, 575.419, 71.8234, 0.305", "353.603, 576.426, 71.7651, 0.2796", "354.315, 577.322, 71.6565, 0.2542", "355.025, 578.216, 71.5478, 0.2288", "355.736, 579.112, 71.4389, 0.2288", "356.447, 580.007, 71.3303, 0.2288", "357.158, 580.903, 71.2216, 0.2288" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "287.771, 480.528, 74.618, 0.2288", "286.967, 479.897, 75.5065, 0.2288", "286.118, 479.231, 76.4431, 0.2288", "285.259, 478.573, 77.3147, 0.2288", "284.255, 478.025, 77.299, 0.2288", "283.251, 477.478, 77.2834, 0.2288", "282.189, 477.07, 77.2971, 0.2288", "281.147, 476.666, 77.3231, 0.2288", "280.402, 475.798, 77.3066, 0.2542", "279.659, 474.928, 77.2901, 0.2796", "278.747, 474.355, 77.2808, 0.305", "277.619, 474.167, 77.2803, 0.2796", "276.49, 473.979, 77.28, 0.2542", "275.362, 473.791, 77.2797, 0.2288", "274.22, 473.76, 77.2677, 0.2288", "273.076, 473.76, 77.2534, 0.2288", "271.932, 473.761, 77.2391, 0.2288", "270.788, 473.761, 77.2248, 0.2288", "269.755, 473.408, 77.5093, 0.2288", "268.795, 472.818, 77.9937, 0.2288", "267.835, 472.227, 78.4781, 0.2288", "266.876, 471.638, 78.9622, 0.2288", "265.829, 471.567, 79.7919, 0.2288", "264.756, 471.662, 80.7316, 0.2288", "263.682, 471.758, 81.671, 0.2288", "262.646, 471.603, 82.418, 0.2288", "261.676, 471.023, 82.8366, 0.2288", "260.705, 470.441, 83.2555, 0.2288", "259.738, 469.861, 83.7054, 0.2288", "258.871, 469.297, 84.9016, 0.2288", "258.004, 468.735, 86.0978, 0.2288", "257.029, 468.389, 86.8014, 0.2288", "256.019, 468.173, 87.1514, 0.2288", "255.322, 467.45, 88.4918, 0.2288", "254.625, 466.727, 89.8321, 0.2288", "253.737, 466.345, 90.5867, 0.2288", "252.595, 466.416, 90.5584, 0.2288", "251.519, 466.207, 91.2248, 0.2288", "250.455, 465.945, 92.0279, 0.2288", "249.391, 465.682, 92.8309, 0.2288", "248.327, 465.42, 93.634, 0.2288", "247.216, 465.179, 93.7762, 0.2288", "246.097, 464.943, 93.7804, 0.2288", "245.064, 464.461, 93.7577, 0.2288", "244.04, 463.949, 93.732, 0.2288", "243.007, 463.46, 93.7202, 0.2288", "241.94, 463.05, 93.7583, 0.2288", "240.873, 462.639, 93.7964, 0.2288", "239.771, 462.385, 93.8148, 0.2288", "238.629, 462.33, 93.8084, 0.2288", "237.486, 462.274, 93.802, 0.2288", "236.343, 462.218, 93.7958, 0.2288", "235.239, 462.222, 94.2038, 0.2288", "234.206, 462.334, 95.3736, 0.2288", "233.172, 462.446, 96.5437, 0.2288", "232.572, 461.809, 96.9688, 0.2288", "232.232, 460.716, 96.941, 0.2288", "231.19, 461.021, 96.9273, 0.2288", "230.11, 461.398, 96.9144, 0.2288", "228.982, 461.566, 96.9175, 0.2288", "227.86, 461.665, 96.9248, 0.2288", "227.282, 460.677, 96.9732, 0.2288", "226.356, 460.373, 96.689, 0.2288", "225.232, 460.459, 96.2142, 0.2288", "224.108, 460.545, 95.7396, 0.2288", "223.348, 459.84, 95.6665, 0.2288", "222.616, 459.119, 95.8768, 0.2288", "221.555, 459.33, 96.784, 0.2288", "220.493, 459.539, 97.6909, 0.2288", "219.432, 459.75, 98.5981, 0.2288", "218.403, 459.877, 99.4428, 0.2288", "217.828, 458.888, 99.4456, 0.2288", "217.409, 457.831, 99.4815, 0.2288", "217.065, 456.74, 99.533, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "287.771, 480.528, 74.618, 0.2288", "287.281, 480.546, 75.026, 0.2288", "286.199, 480.585, 75.9276, 0.2288", "285.117, 480.624, 76.8295, 0.2288", "284.099, 480.988, 77.2349, 0.2542", "283.128, 481.594, 77.2694, 0.2796", "282.158, 482.199, 77.3035, 0.305", "281.076, 482.132, 77.2391, 0.2796", "279.973, 482.159, 77.1994, 0.2542", "278.885, 482.513, 77.2198, 0.2288", "277.797, 482.866, 77.2402, 0.2288", "276.709, 483.22, 77.2604, 0.2288", "275.663, 483.659, 77.2626, 0.2288", "274.704, 484.283, 77.2254, 0.2288", "273.745, 484.907, 77.1879, 0.2288", "272.608, 484.985, 77.2243, 0.2288", "271.476, 485.075, 77.3245, 0.2542", "270.444, 485.471, 78.0486, 0.2796", "269.412, 485.866, 78.7724, 0.305", "268.38, 486.262, 79.4965, 0.2796", "267.348, 486.658, 80.2206, 0.2542", "266.316, 487.053, 80.9444, 0.2542", "265.193, 486.94, 81.0466, 0.2796", "264.135, 486.567, 81.0692, 0.3304", "263.145, 485.992, 81.0737, 0.3304", "262.157, 485.418, 81.0782, 0.3304", "261.167, 484.842, 81.0827, 0.2796", "260.178, 484.268, 81.0872, 0.2542", "259.112, 483.89, 81.0986, 0.2288", "257.995, 483.648, 81.1149, 0.2288", "256.882, 483.553, 81.1202, 0.2288", "255.781, 483.868, 81.0947, 0.2288", "254.682, 484.183, 81.0692, 0.2288", "253.582, 484.498, 81.0438, 0.2288", "252.47, 484.437, 81.0533, 0.2288", "251.353, 484.195, 81.0799, 0.2288", "250.249, 484.169, 81.0849, 0.2288", "249.267, 484.673, 81.0673, 0.2288", "248.689, 485.659, 81.1266, 0.2288", "248.248, 486.435, 82.6944, 0.2288", "247.837, 487.161, 84.6104, 0.2288", "246.891, 487.794, 84.539, 0.2288", "245.948, 488.441, 84.4819, 0.2288", "245.022, 489.112, 84.4816, 0.2288", "244.094, 489.781, 84.4813, 0.2288" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "309.63, 484.553, 65.1277, 0.2288", "308.987, 484.692, 62.6951, 0.2288", "308.37, 484.826, 60.3604, 0.2288", "307.759, 484.871, 58.1372, 0.2288", "307.21, 483.961, 57.0979, 0.2288", "306.66, 483.052, 56.0588, 0.2288", "306.111, 482.142, 55.0197, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "309.63, 484.553, 65.1277, 0.2288", "309.932, 484.501, 64.5562, 0.2288", "310.828, 484.347, 62.8572, 0.2288", "311.724, 484.192, 61.1579, 0.2288", "312.621, 484.038, 59.4588, 0.2288", "313.517, 483.884, 57.7598, 0.2288", "314.413, 483.705, 56.0882, 0.2288", "315.313, 483.322, 54.6358, 0.2288", "316.213, 482.939, 53.1838, 0.2288", "316.962, 483.041, 51.5474, 0.2288", "317.547, 483.676, 49.7098, 0.2288", "318.131, 484.311, 47.8722, 0.2288", "318.56, 485.05, 46.1132, 0.2288", "318.715, 485.97, 44.494, 0.2288", "318.87, 486.891, 42.8744, 0.2288", "318.995, 487.87, 41.6844, 0.2288", "319.04, 489.013, 41.685, 0.2288", "319.084, 490.156, 41.6856, 0.2288", "318.92, 491.259, 41.2054, 0.2288", "318.689, 492.349, 40.572, 0.2288", "318.456, 493.439, 39.9386, 0.2288", "318.225, 494.53, 39.3053, 0.2288", "317.994, 495.62, 38.6719, 0.2288", "317.591, 496.67, 38.4518, 0.2288", "317.09, 497.698, 38.4709, 0.2288", "316.588, 498.727, 38.4899, 0.2288", "316.087, 499.755, 38.509, 0.2288", "315.494, 500.671, 38.2371, 0.2288", "314.623, 501.241, 37.081, 0.2288", "313.756, 501.817, 35.9324, 0.2288", "313.404, 502.906, 35.9503, 0.2288", "313.053, 503.995, 35.9682, 0.2288", "312.702, 505.083, 35.9862, 0.2288", "312.789, 506.212, 35.982, 0.2288", "312.935, 507.347, 35.9744, 0.2288", "313.082, 508.482, 35.9668, 0.2288", "313.332, 509.332, 37.606, 0.2542", "313.605, 510.194, 38.1018, 0.2796", "313.859, 511.059, 36.4655, 0.305", "313.989, 511.611, 34.0332, 0.2796", "314.119, 512.162, 31.6005, 0.2542", "314.25, 512.713, 29.1682, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "309.63, 484.553, 65.1277, 0.2288", "309.294, 483.769, 65.1423, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "351.597, 500.221, 65.1907, 0.2288", "351.687, 500.715, 65.0852, 0.2288", "351.892, 501.836, 64.8452, 0.2288", "352.097, 502.957, 64.6052, 0.2288", "352.709, 503.867, 64.9586, 0.2288", "353.452, 504.707, 65.5043, 0.2288", "354.196, 505.547, 66.05, 0.2288", "354.94, 506.387, 66.5958, 0.2288", "355.683, 507.227, 67.1415, 0.2288", "356.427, 508.068, 67.6872, 0.2288", "357.17, 508.907, 68.2329, 0.2288", "358.137, 509.472, 68.3726, 0.2288", "359.179, 509.943, 68.3732, 0.2288", "360.223, 510.413, 68.3738, 0.2288", "361.266, 510.883, 68.3743, 0.2542", "362.308, 511.353, 68.3749, 0.305", "363.366, 511.75, 68.53, 0.356", "364.469, 511.938, 69.1239, 0.3814", "365.571, 512.125, 69.7175, 0.356", "366.674, 512.314, 70.3111, 0.3304", "367.775, 512.502, 70.9047, 0.305", "368.877, 512.689, 71.4983, 0.305", "369.98, 512.877, 72.0922, 0.305", "370.976, 513.367, 72.693, 0.2796", "371.955, 513.903, 73.2953, 0.2542", "372.936, 514.44, 73.8976, 0.2288", "373.915, 514.977, 74.4999, 0.2288", "374.894, 515.514, 75.1022, 0.2288", "375.791, 516.184, 75.4062, 0.2288", "376.6, 516.993, 75.399, 0.2288", "377.409, 517.802, 75.3917, 0.2288", "378.218, 518.612, 75.3844, 0.2288", "379.027, 519.421, 75.3628, 0.2288", "379.835, 520.229, 75.3357, 0.2288", "380.644, 521.038, 75.3088, 0.2288", "381.453, 521.847, 75.2816, 0.2288", "382.262, 522.656, 75.2548, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "351.597, 500.221, 65.1907, 0.2288", "351.755, 500.248, 65.1087, 0.2796", "352.858, 500.443, 64.5344, 0.305", "353.96, 500.637, 63.9604, 0.2796", "355.063, 500.832, 63.3861, 0.2796", "356.165, 501.026, 62.8121, 0.2796", "357.29, 500.977, 62.6338, 0.305", "358.425, 500.831, 62.6122, 0.2796", "359.56, 500.684, 62.5906, 0.2542", "360.695, 500.539, 62.5691, 0.2288", "361.808, 500.675, 62.1113, 0.2288", "362.918, 500.851, 61.5924, 0.2288", "364.029, 501.027, 61.0736, 0.2288", "365.138, 501.204, 60.5548, 0.2288", "366.249, 501.38, 60.0359, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "356.017, 463.854, 75.3614, 0.2288", "356.308, 464.793, 76.4613, 0.305", "356.85, 465.498, 77.7585, 0.305", "357.786, 465.72, 79.2775, 0.3304", "358.721, 465.941, 80.7968, 0.356", "359.648, 466.177, 82.2912, 0.3814", "360.128, 467.215, 82.2987, 0.3814", "361.005, 467.631, 82.3046, 0.4068", "362.149, 467.631, 82.3094, 0.4068", "363.293, 467.631, 82.3141, 0.4068", "363.857, 468.287, 83.419, 0.3814", "364.207, 469.184, 84.9288, 0.3814", "364.713, 469.997, 86.0902, 0.356", "365.721, 470.54, 86.1297, 0.305", "365.766, 471.468, 86.9095, 0.2542", "365.527, 472.509, 87.9088, 0.2288", "365.522, 473.375, 88.7331, 0.2288", "366.666, 473.375, 88.6973, 0.2288", "367.595, 472.939, 88.6855, 0.2288", "368.292, 472.032, 88.6995, 0.2288", "369.084, 472.541, 89.3096, 0.2542", "369.892, 473.297, 90.0234, 0.2796", "370.7, 474.052, 90.7374, 0.305", "371.459, 474.579, 91.8613, 0.2796", "372.076, 474.437, 94.194, 0.2542", "372.692, 474.294, 96.5266, 0.2288", "373.309, 474.152, 98.8593, 0.2288", "373.925, 474.009, 101.192, 0.2288", "374.542, 473.866, 103.525, 0.2288", "375.159, 473.725, 105.857, 0.2288", "375.61, 473.72, 108.349, 0.2288", "375.841, 473.903, 111.055, 0.2288", "376.069, 474.086, 113.761, 0.2288", "376.299, 474.269, 116.468, 0.2288", "376.528, 474.452, 119.174, 0.2288", "376.758, 474.635, 121.88, 0.2288", "376.987, 474.818, 124.587, 0.2288", "377.217, 475.001, 127.293, 0.2288", "377.445, 475.184, 129.999, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "356.017, 463.854, 75.3614, 0.2288", "356.459, 463.176, 75.348, 0.3304", "357.082, 462.216, 75.329, 0.3304", "357.674, 461.238, 75.3245, 0.3304", "358.208, 460.227, 75.3458, 0.2796", "358.742, 459.215, 75.3673, 0.2542", "359.277, 458.204, 75.3889, 0.2288", "359.923, 457.281, 75.3967, 0.2288", "360.781, 456.523, 75.3796, 0.2288", "361.638, 455.766, 75.3623, 0.2288", "362.495, 455.008, 75.3449, 0.2288", "363.353, 454.25, 75.3276, 0.2288", "364.209, 453.493, 75.3102, 0.2288", "365.05, 452.769, 75.8699, 0.2288", "365.884, 452.059, 76.6752, 0.2288", "366.719, 451.348, 77.4808, 0.2288", "367.553, 450.638, 78.2863, 0.2288", "368.387, 449.928, 79.0916, 0.2288", "369.09, 449.026, 79.1339, 0.2288", "369.792, 448.122, 79.1756, 0.2288", "370.496, 447.219, 79.217, 0.2288", "371.07, 446.238, 79.2095, 0.2288", "371.565, 445.207, 79.1711, 0.2288", "372.061, 444.176, 79.133, 0.2288", "372.805, 443.337, 79.1115, 0.2288", "373.676, 442.595, 79.0983, 0.2288", "374.547, 441.853, 79.0852, 0.2288", "375.327, 441.053, 79.086, 0.2288", "375.643, 439.954, 79.1582, 0.2288", "375.959, 438.856, 79.2319, 0.2288", "376.728, 438.072, 80.0265, 0.2288", "377.496, 437.288, 80.8214, 0.2288", "378.264, 436.505, 81.6161, 0.2288", "379.031, 435.722, 82.411, 0.2288", "379.8, 434.939, 83.2056, 0.2288", "380.567, 434.155, 84.0006, 0.2288", "380.89, 433.152, 84.2786, 0.2288", "380.929, 432.009, 84.2279, 0.2288", "380.968, 430.866, 84.1772, 0.2288", "381.636, 429.986, 84.187, 0.2288", "382.424, 429.157, 84.2086, 0.2288", "383.177, 428.304, 84.2307, 0.2288", "383.637, 427.257, 84.261, 0.2288", "384.096, 426.209, 84.2912, 0.2288", "384.554, 425.161, 84.3212, 0.2288", "385.261, 424.302, 84.5813, 0.2796", "386.106, 423.547, 84.9696, 0.356", "386.951, 422.792, 85.3577, 0.5084", "387.795, 422.036, 85.7461, 0.6102", "388.641, 421.281, 86.1344, 0.661", "389.485, 420.526, 86.5225, 0.5592", "390.174, 419.659, 86.7731, 0.4322", "390.587, 418.592, 86.7821, 0.3304", "391.0, 417.526, 86.7908, 0.305", "391.439, 416.475, 86.7992, 0.305", "392.259, 415.678, 86.805, 0.3304", "393.079, 414.881, 86.8109, 0.3814", "393.898, 414.082, 86.8168, 0.4576", "394.719, 413.285, 86.8227, 0.483", "395.539, 412.487, 86.8286, 0.4576", "395.963, 411.621, 88.2717, 0.356", "396.364, 410.752, 89.8041, 0.2796", "396.764, 409.883, 91.3366, 0.2288", "397.049, 408.884, 92.12, 0.2288", "397.145, 407.751, 92.12, 0.2288", "397.31, 406.628, 92.12, 0.2288", "397.511, 405.503, 92.12, 0.2288", "397.882, 404.431, 92.12, 0.2288", "398.7, 403.655, 92.12, 0.2288", "399.315, 402.8, 92.12, 0.2288", "399.903, 402.107, 92.12, 0.2288", "400.639, 401.253, 92.12, 0.2288", "401.61, 400.724, 92.12, 0.2288", "402.214, 399.775, 92.12, 0.2288", "402.76, 398.777, 92.12, 0.2288", "403.479, 398.054, 92.12, 0.2288", "403.725, 396.957, 92.12, 0.2288", "404.267, 395.949, 92.12, 0.2288", "404.789, 394.933, 92.12, 0.2288", "405.011, 393.817, 92.12, 0.2288", "405.359, 392.732, 92.12, 0.2288", "405.69, 391.647, 92.12, 0.2288", "406.489, 390.835, 92.12, 0.2542", "407.073, 389.853, 92.12, 0.2796", "407.751, 388.932, 92.12, 0.305", "408.446, 388.039, 92.12, 0.2796", "409.202, 387.207, 92.12, 0.2542", "409.52, 386.113, 92.12, 0.2288", "410.027, 385.096, 92.12, 0.2288", "410.684, 384.198, 92.12, 0.2288", "411.545, 383.513, 92.12, 0.2288", "412.522, 382.947, 92.12, 0.2288", "413.165, 382.026, 92.12, 0.2288", "413.59, 381.061, 92.12, 0.2288", "414.481, 380.487, 92.12, 0.2288", "415.465, 379.92, 92.12, 0.2288", "415.959, 379.047, 92.12, 0.2288", "416.302, 377.986, 92.12, 0.2288", "416.867, 377.134, 92.12, 0.2288", "417.941, 376.742, 92.12, 0.2288", "419.07, 376.605, 92.12, 0.2288", "420.063, 376.206, 92.12, 0.2288", "421.094, 375.796, 92.2765, 0.2542", "421.492, 375.575, 94.36, 0.3304", "422.299, 375.346, 95.3299, 0.4068", "423.2, 374.797, 95.48, 0.4576", "424.076, 374.105, 95.48, 0.4068", "424.968, 373.394, 95.48, 0.356", "425.563, 372.435, 95.5413, 0.2796", "426.169, 371.496, 95.76, 0.3304", "426.819, 370.849, 95.76, 0.3814", "427.439, 369.995, 95.76, 0.4576", "428.429, 369.426, 95.76, 0.3814", "429.33, 368.756, 95.76, 0.3304", "430.153, 368.178, 95.76, 0.2796", "430.925, 367.508, 95.76, 0.305", "431.074, 366.38, 95.76, 0.2796", "431.518, 365.331, 95.76, 0.2796", "431.584, 364.192, 95.76, 0.2796", "431.79, 363.074, 95.76, 0.305", "432.532, 362.248, 95.76, 0.2796", "433.375, 361.579, 95.76, 0.2542", "434.32, 360.995, 95.76, 0.2542", "435.149, 360.349, 96.3934, 0.2796", "436.095, 359.814, 97.0628, 0.305", "436.675, 359.194, 98.4978, 0.2796", "437.134, 358.498, 99.68, 0.2542", "437.885, 357.654, 99.68, 0.2288", "438.791, 356.97, 99.68, 0.2288", "439.823, 356.57, 99.68, 0.2288", "440.647, 355.785, 99.68, 0.2288", "441.255, 354.824, 99.68, 0.2796", "441.608, 353.741, 99.68, 0.3304", "442.037, 352.902, 100.393, 0.3814", "442.393, 352.087, 101.36, 0.3304", "442.873, 351.081, 101.36, 0.305", "443.76, 350.418, 101.36, 0.2796", "444.641, 349.717, 101.36, 0.305", "445.082, 349.367, 103.285, 0.2796", "445.88, 348.724, 103.673, 0.2542", "446.399, 348.001, 105.183, 0.2288", "446.995, 347.293, 105.84, 0.2288", "447.812, 346.507, 105.84, 0.2288", "448.689, 345.793, 105.84, 0.2542", "448.896, 344.678, 105.84, 0.2796", "449.276, 343.626, 105.84, 0.305", "450.009, 342.756, 105.84, 0.2796", "451.072, 342.487, 105.84, 0.2542", "451.56, 341.462, 105.84, 0.2288", "451.995, 340.912, 106.97, 0.2288", "452.095, 340.907, 109.731, 0.2288", "452.626, 340.45, 111.599, 0.2288", "453.447, 340.028, 112.56, 0.2288", "454.363, 339.346, 112.56, 0.2288", "455.352, 338.783, 112.56, 0.2288", "455.943, 337.837, 112.56, 0.2288", "456.584, 336.891, 112.56, 0.2288", "457.113, 336.256, 113.701, 0.2288", "457.522, 335.272, 114.24, 0.2288", "458.076, 334.273, 114.24, 0.2288", "458.874, 333.471, 114.24, 0.2288", "459.629, 332.624, 114.24, 0.2288", "460.435, 331.937, 114.718, 0.2288", "461.23, 331.241, 114.8, 0.2288", "461.937, 330.355, 114.8, 0.2288", "462.494, 329.393, 114.925, 0.2542", "462.903, 328.384, 115.36, 0.2796", "463.492, 327.453, 115.582, 0.305", "464.153, 326.562, 115.92, 0.2796", "464.816, 325.666, 115.92, 0.2542", "465.513, 324.814, 115.92, 0.2288", "466.23, 324.008, 116.064, 0.2288", "466.927, 323.313, 117.04, 0.2288", "467.759, 322.536, 117.04, 0.2288", "468.073, 321.488, 117.04, 0.2542", "468.991, 320.832, 117.04, 0.2796", "469.552, 319.843, 117.04, 0.3304", "470.002, 318.795, 117.04, 0.356", "470.142, 317.66, 117.04, 0.4068", "470.518, 316.585, 117.04, 0.4068", "471.183, 315.67, 117.04, 0.3814", "471.829, 314.793, 117.04, 0.305", "472.542, 313.941, 117.04, 0.2542", "473.001, 312.897, 117.04, 0.2288", "473.631, 311.943, 117.04, 0.2288", "474.183, 310.979, 117.04, 0.2288", "474.345, 309.865, 117.04, 0.2288", "474.6, 308.754, 117.04, 0.2288", "474.776, 307.625, 117.04, 0.2288", "474.875, 306.854, 118.275, 0.2288", "475.341, 305.943, 118.72, 0.2288", "476.082, 305.118, 118.72, 0.2542", "476.785, 304.288, 118.72, 0.2796", "477.262, 303.266, 118.913, 0.305", "477.719, 302.495, 120.388, 0.2796", "477.958, 301.529, 121.324, 0.2542", "478.452, 300.584, 121.52, 0.2288", "479.04, 299.638, 121.644, 0.2288", "479.438, 298.581, 121.8, 0.2288", "480.037, 297.621, 121.8, 0.2288", "480.372, 296.537, 121.89, 0.2288", "480.86, 295.527, 122.089, 0.2288", "481.743, 294.827, 122.36, 0.2288", "482.378, 294.042, 122.36, 0.2288", "483.042, 293.241, 122.64, 0.2288", "483.705, 292.319, 122.64, 0.2288", "484.218, 291.339, 122.64, 0.2288", "484.687, 290.295, 122.64, 0.2288", "485.396, 289.402, 122.64, 0.2288", "485.967, 288.415, 122.64, 0.2288", "486.087, 288.028, 125.008, 0.2288", "486.52, 287.125, 125.44, 0.2288", "487.393, 286.392, 125.44, 0.2288", "488.181, 285.669, 125.44, 0.2288", "488.872, 284.825, 125.44, 0.2288", "489.903, 284.385, 125.44, 0.2288", "490.205, 283.428, 126.0, 0.2288", "490.247, 282.287, 126.0, 0.2288", "490.584, 281.21, 126.0, 0.2542", "490.786, 280.084, 126.0, 0.2796", "491.285, 279.06, 126.0, 0.305", "492.054, 278.245, 126.0, 0.2796", "492.48, 277.312, 126.0, 0.2542", "493.234, 276.495, 126.0, 0.2542", "493.782, 275.515, 126.0, 0.2796", "494.043, 274.401, 126.0, 0.305", "494.306, 273.291, 126.0, 0.2796", "494.531, 272.226, 126.0, 0.2542", "495.538, 271.711, 126.0, 0.2288", "496.373, 271.018, 126.0, 0.2288", "497.047, 270.222, 126.0, 0.2288", "497.274, 269.101, 126.0, 0.2288", "498.006, 268.354, 126.0, 0.2288", "498.716, 267.635, 126.0, 0.2288", "499.413, 266.734, 126.0, 0.2288", "500.091, 265.815, 126.0, 0.2288", "500.861, 264.987, 126.0, 0.2288", "501.877, 264.476, 126.0, 0.2288", "502.672, 263.781, 126.0, 0.2288", "503.207, 262.941, 126.0, 0.2288", "503.922, 262.1, 126.0, 0.2288", "504.78, 261.345, 126.0, 0.2288", "505.587, 260.554, 126.0, 0.2288", "506.072, 259.532, 126.0, 0.2288", "506.756, 258.628, 126.0, 0.2288", "507.499, 257.764, 126.0, 0.2288", "507.969, 256.726, 126.0, 0.2288", "508.371, 255.656, 126.0, 0.2288", "509.125, 254.824, 126.0, 0.2288", "509.883, 253.969, 126.0, 0.2288", "510.645, 253.121, 126.0, 0.2288", "511.26, 252.172, 126.0, 0.2288", "511.757, 251.203, 126.0, 0.2288", "512.297, 250.274, 126.0, 0.2288", "512.765, 249.232, 126.0, 0.2288", "513.311, 248.269, 126.0, 0.2288", "514.104, 247.54, 126.0, 0.2288", "514.989, 246.833, 126.0, 0.2288", "515.594, 245.875, 126.0, 0.2288", "515.831, 244.816, 126.0, 0.2288", "515.831, 243.672, 126.0, 0.2288" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "306.111, 482.142, 55.0197, 0.2288", "306.254, 482.066, 54.8817, 0.2288", "307.207, 481.558, 53.9602, 0.2288", "308.161, 481.05, 53.0387, 0.2288", "309.114, 480.542, 52.117, 0.2288", "308.985, 479.893, 50.5361, 0.2288", "308.467, 479.194, 48.7183, 0.2288", "307.949, 478.495, 46.9006, 0.2288", "307.101, 478.923, 45.7554, 0.2288", "306.211, 479.496, 44.6972, 0.2288", "305.176, 479.742, 44.2294, 0.2288", "304.032, 479.742, 44.2042, 0.2288", "302.888, 479.742, 44.1792, 0.2288", "301.823, 479.905, 44.0261, 0.2288", "301.085, 480.733, 43.3451, 0.2288", "300.348, 481.562, 42.6639, 0.2288", "299.622, 482.364, 41.7858, 0.2288", "298.913, 483.124, 40.6154, 0.2288", "298.204, 483.883, 39.4447, 0.2288", "297.496, 484.644, 38.2743, 0.2288", "297.34, 485.418, 36.5532, 0.2288", "297.483, 486.198, 34.5358, 0.2288", "297.652, 486.961, 32.4932, 0.2288", "297.854, 487.701, 30.4164, 0.2288", "298.058, 488.441, 28.3394, 0.2288", "298.163, 489.036, 25.9907, 0.2288", "298.217, 489.555, 23.499, 0.2288", "298.27, 490.074, 21.007, 0.2288", "297.609, 490.341, 19.9979, 0.2288", "296.47, 490.441, 19.9808, 0.2288", "295.759, 490.964, 19.9766, 0.2288", "295.675, 492.104, 19.9914, 0.2288", "295.59, 493.245, 20.0063, 0.2288", "294.622, 493.485, 20.0357, 0.2288", "293.528, 493.644, 20.001, 0.2288", "292.791, 494.493, 19.4872, 0.2288", "292.053, 495.342, 18.9731, 0.2288", "291.315, 496.189, 18.4593, 0.2288", "290.577, 497.038, 17.9452, 0.2288", "289.839, 497.887, 17.4314, 0.2288", "289.1, 498.735, 16.9173, 0.2288", "288.295, 499.539, 16.7975, 0.2288", "287.468, 500.331, 16.7955, 0.2288", "286.642, 501.121, 16.7936, 0.2288", "285.815, 501.912, 16.7916, 0.2288", "284.989, 502.703, 16.7894, 0.2288", "284.161, 503.494, 16.7874, 0.2288", "283.594, 504.431, 16.2014, 0.2288", "283.117, 505.419, 15.4084, 0.2288", "282.854, 506.318, 14.1389, 0.2288", "282.967, 507.059, 12.0221, 0.2288", "283.08, 507.799, 9.9053, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "306.111, 482.142, 55.0197, 0.2288", "305.566, 481.996, 55.0138, 0.2288", "304.461, 481.698, 55.0015, 0.2288", "303.357, 481.402, 54.9895, 0.2288", "302.251, 481.105, 54.9772, 0.2288", "301.162, 480.782, 54.9343, 0.2288", "300.365, 480.0, 54.3365, 0.2288", "299.567, 479.217, 53.7387, 0.2288", "298.768, 478.436, 53.1409, 0.2288", "297.97, 477.653, 52.5431, 0.2288", "297.172, 476.871, 51.9453, 0.2288", "296.676, 475.873, 51.7992, 0.2288", "296.289, 474.796, 51.8182, 0.2288", "295.902, 473.719, 51.8372, 0.2542", "295.536, 472.636, 51.8412, 0.2796", "295.204, 471.541, 51.8199, 0.305", "294.643, 470.571, 51.8011, 0.2796", "293.906, 469.695, 51.784, 0.2796", "293.225, 468.794, 51.7779, 0.2796", "293.027, 467.667, 51.8669, 0.305", "292.773, 466.587, 51.2677, 0.2796", "292.509, 465.517, 50.5263, 0.2542", "292.244, 464.446, 49.7848, 0.2288", "291.979, 463.375, 49.0434, 0.2288", "291.65, 462.302, 48.6746, 0.2288", "291.255, 461.229, 48.6878, 0.2288", "290.86, 460.156, 48.7012, 0.2288", "290.464, 459.082, 48.7144, 0.2288", "289.682, 458.255, 48.706, 0.2288", "288.872, 457.449, 48.6965, 0.2288", "288.061, 456.641, 48.6867, 0.2288", "287.418, 455.7, 48.6553, 0.2542", "286.801, 454.737, 48.6212, 0.2796", "286.147, 453.812, 48.4064, 0.3304", "285.405, 452.987, 47.7333, 0.3304", "284.662, 452.161, 47.0602, 0.3304", "283.919, 451.336, 46.3868, 0.2796", "282.946, 450.882, 46.0944, 0.2542", "281.962, 450.495, 45.9365, 0.2288", "281.444, 449.499, 45.3866, 0.2288", "280.927, 448.503, 44.8364, 0.2288", "280.41, 447.508, 44.2865, 0.2288", "279.893, 446.512, 43.7366, 0.2288", "279.367, 445.509, 43.4829, 0.2288", "278.833, 444.498, 43.4949, 0.2288", "278.257, 443.541, 43.302, 0.2288", "277.482, 442.855, 42.1109, 0.2288", "276.706, 442.169, 40.9195, 0.2542", "276.368, 441.228, 40.3886, 0.2796", "276.38, 440.084, 40.3822, 0.305", "276.391, 438.94, 40.3757, 0.2796", "276.013, 437.918, 40.9508, 0.2542", "275.483, 436.965, 41.5528, 0.2288", "274.592, 436.325, 40.759, 0.2288", "273.7, 435.685, 39.9655, 0.2288", "272.993, 434.91, 38.9231, 0.2288", "272.363, 434.078, 37.7754, 0.2288", "271.734, 433.245, 36.6274, 0.2288", "271.448, 432.375, 35.2727, 0.2288", "271.604, 431.456, 33.6515, 0.2288", "271.7, 430.527, 32.1742, 0.2288", "271.173, 429.513, 32.1605, 0.2288", "270.644, 428.498, 32.1471, 0.2288", "270.199, 427.45, 32.1418, 0.2288", "269.877, 426.352, 32.1485, 0.2288", "269.557, 425.253, 32.1552, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "309.294, 483.769, 65.1423, 0.2288", "309.138, 483.358, 65.1568, 0.2288", "308.729, 482.29, 65.1896, 0.2288", "308.308, 481.226, 65.2008, 0.2288", "307.886, 480.163, 65.212, 0.2288", "307.332, 479.18, 65.2095, 0.2288", "306.576, 478.322, 65.1862, 0.2288", "305.819, 477.464, 65.1627, 0.2288", "305.07, 476.6, 65.1431, 0.2288", "304.358, 475.705, 65.1375, 0.2288", "303.645, 474.81, 65.1319, 0.2288", "302.932, 473.915, 65.1266, 0.2288", "302.384, 472.982, 64.4249, 0.2288", "301.919, 472.029, 63.3721, 0.2288", "301.486, 471.13, 62.0794, 0.2288", "301.135, 470.364, 60.1863, 0.2288", "300.783, 469.598, 58.2935, 0.2542", "300.405, 468.752, 56.9307, 0.2796", "299.96, 467.697, 56.9282, 0.305", "299.515, 466.643, 56.9254, 0.2796", "299.07, 465.59, 56.9229, 0.2542", "298.625, 464.536, 56.9201, 0.2288", "298.132, 463.623, 55.8734, 0.2288", "297.627, 462.747, 54.5653, 0.2796", "297.257, 461.77, 53.7712, 0.3814", "297.092, 460.637, 53.7628, 0.483", "296.927, 459.506, 53.7544, 0.483", "296.763, 458.373, 53.7457, 0.3814", "296.574, 457.245, 53.7342, 0.305", "296.35, 456.123, 53.7177, 0.2796", "296.124, 455.002, 53.7012, 0.3304", "295.9, 453.881, 53.685, 0.3304", "295.675, 452.759, 53.6684, 0.3304", "295.577, 451.631, 53.6687, 0.305", "295.684, 450.491, 53.6959, 0.305", "295.791, 449.353, 53.7233, 0.305", "295.933, 448.227, 53.7488, 0.3304", "296.641, 447.329, 53.7482, 0.356", "297.35, 446.431, 53.748, 0.3814", "298.059, 445.533, 53.7474, 0.3304", "298.767, 444.634, 53.7471, 0.2796", "299.457, 443.734, 53.5018, 0.2288", "300.129, 442.83, 53.0124, 0.2288", "300.801, 441.925, 52.5232, 0.2288", "301.474, 441.021, 52.0338, 0.2288", "301.865, 439.99, 51.8126, 0.2288", "302.036, 438.86, 51.8028, 0.2288", "302.207, 437.729, 51.7933, 0.2288", "302.377, 436.597, 51.7835, 0.2288", "302.837, 435.624, 51.2355, 0.2288", "303.479, 434.749, 50.3488, 0.2288", "304.122, 433.873, 49.4617, 0.2288", "304.764, 432.998, 48.575, 0.2288", "305.388, 432.084, 48.0304, 0.2288", "305.985, 431.108, 48.0208, 0.2288", "306.583, 430.134, 48.0113, 0.2288", "307.18, 429.158, 48.0021, 0.2542", "307.777, 428.182, 47.9926, 0.2796", "308.374, 427.206, 47.983, 0.305", "308.971, 426.23, 47.9738, 0.2796", "309.472, 425.213, 48.2748, 0.2542", "309.944, 424.184, 48.6668, 0.2288", "310.416, 423.154, 49.0588, 0.2288", "310.889, 422.125, 49.4508, 0.2288", "311.361, 421.095, 49.8428, 0.2288", "311.667, 420.0, 49.9352, 0.2288", "311.913, 418.884, 49.9209, 0.2542", "312.159, 417.766, 49.9066, 0.2796", "312.405, 416.649, 49.8924, 0.305", "312.651, 415.532, 49.8781, 0.2796", "312.877, 414.432, 49.3898, 0.2542", "313.099, 413.336, 48.7956, 0.2288", "313.101, 412.213, 48.6102, 0.2288", "312.987, 411.075, 48.6396, 0.2288", "312.872, 409.936, 48.6693, 0.2288", "312.759, 408.798, 48.6987, 0.2288", "313.271, 407.842, 48.6878, 0.2288", "313.95, 406.933, 48.6422, 0.2288", "313.989, 405.813, 48.0774, 0.2288", "314.028, 404.693, 47.5126, 0.2288", "314.067, 403.575, 46.9479, 0.2542", "314.617, 402.724, 47.2399, 0.2796", "315.468, 402.033, 48.0382, 0.305", "316.034, 401.208, 48.4123, 0.2796", "315.973, 400.089, 47.8489, 0.2542", "315.912, 398.97, 47.2858, 0.2288", "315.85, 397.851, 46.7225, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "309.294, 483.769, 65.1423, 0.2288", "309.859, 483.06, 63.2453, 0.2288", "310.4, 482.379, 61.4261, 0.2288", "310.954, 481.627, 60.0356, 0.2288", "311.518, 480.639, 59.9623, 0.2288", "311.863, 479.585, 59.2788, 0.2288", "312.21, 478.532, 58.595, 0.2288", "312.433, 477.439, 58.1179, 0.2288", "312.512, 476.302, 57.8864, 0.2288", "312.591, 475.165, 57.6548, 0.2288", "312.669, 474.027, 57.4235, 0.2288", "312.748, 472.89, 57.192, 0.2288", "312.827, 471.752, 56.9604, 0.2288", "313.007, 470.628, 56.87, 0.2288", "313.26, 469.513, 56.8792, 0.2288", "313.514, 468.397, 56.8884, 0.2288", "313.767, 467.28, 56.8977, 0.2542", "314.021, 466.165, 56.9069, 0.305", "314.274, 465.05, 56.9162, 0.3814", "314.528, 463.934, 56.9254, 0.4576" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "366.249, 501.38, 60.0359, 0.2288", "366.536, 501.287, 60.7174, 0.2288", "367.336, 501.031, 62.6172, 0.2288", "368.137, 500.773, 64.5173, 0.2796", "369.25, 500.525, 64.5397, 0.3814", "370.368, 500.277, 64.545, 0.483", "371.484, 500.029, 64.5504, 0.5084", "372.601, 499.78, 64.5557, 0.4322", "373.731, 499.652, 64.5607, 0.4068", "374.875, 499.652, 64.5652, 0.3814", "376.019, 499.652, 64.5694, 0.4322", "377.163, 499.652, 64.5739, 0.3814", "378.008, 498.903, 64.4157, 0.356", "378.843, 498.123, 64.2505, 0.2796", "379.679, 497.344, 64.0856, 0.2542", "380.582, 496.664, 63.9775, 0.2288", "381.609, 496.159, 63.968, 0.2288", "382.635, 495.652, 63.9582, 0.2288", "383.661, 495.146, 63.9486, 0.2288", "384.686, 494.639, 63.9388, 0.2542", "385.712, 494.134, 63.929, 0.2796", "386.738, 493.627, 63.9195, 0.305", "387.764, 493.121, 63.9097, 0.2796", "388.77, 492.646, 63.4894, 0.2542", "389.747, 492.217, 62.4806, 0.2288", "390.725, 491.79, 61.4715, 0.2288", "391.727, 491.534, 60.6939, 0.2288", "392.817, 491.88, 60.716, 0.2288", "393.908, 492.225, 60.7384, 0.2288", "394.999, 492.571, 60.7606, 0.2288", "396.09, 492.906, 60.7816, 0.2288", "397.231, 492.818, 60.7491, 0.2288", "398.372, 492.73, 60.7163, 0.2288", "399.512, 492.642, 60.6838, 0.2288", "400.643, 492.506, 60.6581, 0.2288", "401.745, 492.198, 60.6584, 0.2288", "402.847, 491.889, 60.6584, 0.2288", "403.949, 491.581, 60.6586, 0.2288", "405.05, 491.272, 60.6589, 0.2288", "406.14, 490.934, 60.6637, 0.2288", "407.164, 490.424, 60.6956, 0.2288", "408.188, 489.912, 60.7275, 0.2288", "409.211, 489.401, 60.7592, 0.2288", "410.235, 488.891, 60.7911, 0.2288" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "366.249, 501.38, 60.0359, 0.2288", "366.889, 501.61, 59.297, 0.2288", "367.872, 501.964, 58.1608, 0.2288", "368.856, 502.319, 57.0245, 0.2288", "369.876, 502.424, 56.2713, 0.2288", "370.96, 502.063, 56.2405, 0.2542", "372.046, 501.7, 56.2094, 0.2796", "373.127, 501.547, 56.2033, 0.305", "374.198, 501.947, 56.2624, 0.305", "375.268, 502.349, 56.3214, 0.305", "376.361, 502.678, 56.1599, 0.305", "377.458, 502.987, 55.9342, 0.2796", "378.556, 503.296, 55.7088, 0.2542", "379.653, 503.604, 55.4831, 0.2288", "380.752, 503.913, 55.2574, 0.2288", "381.849, 504.221, 55.0318, 0.2288", "382.947, 504.529, 54.8061, 0.2288", "384.045, 504.838, 54.5804, 0.2288", "385.036, 505.292, 54.3922, 0.2288", "385.653, 506.255, 54.3354, 0.2288", "386.571, 506.794, 54.3119, 0.2288", "387.684, 507.059, 54.3099, 0.2288", "388.797, 507.324, 54.308, 0.2288", "389.91, 507.588, 54.306, 0.2288", "390.901, 508.004, 53.8012, 0.2288", "391.719, 508.63, 52.5865, 0.2288", "392.537, 509.257, 51.3716, 0.2288", "393.355, 509.884, 50.157, 0.2288", "393.895, 510.826, 50.4717, 0.2288", "394.366, 511.829, 50.5658, 0.2288", "394.816, 512.831, 49.784, 0.2288", "395.407, 513.738, 49.224, 0.2288", "396.313, 514.437, 49.152, 0.2288", "396.597, 515.458, 49.1789, 0.2288", "396.648, 516.601, 49.2428, 0.2288", "397.069, 517.368, 48.7416, 0.2288", "398.049, 517.568, 47.3872, 0.2542", "399.031, 517.769, 46.0326, 0.3304", "400.011, 517.969, 44.6782, 0.4322", "400.992, 518.169, 43.3236, 0.483", "402.003, 518.285, 42.2439, 0.4576", "403.126, 518.07, 42.2402, 0.3814", "404.247, 517.928, 42.2388, 0.3304", "405.354, 518.217, 42.2492, 0.2796", "406.461, 518.505, 42.2596, 0.2542", "407.535, 518.668, 41.461, 0.2288", "408.604, 518.806, 40.5216, 0.2288", "409.673, 518.946, 39.5822, 0.2288", "410.742, 519.085, 38.6428, 0.2542", "411.863, 519.239, 38.4474, 0.3304", "412.995, 519.394, 38.4252, 0.4576", "414.129, 519.55, 38.4028, 0.6864" ],
    "parent" : "apic_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "314.528, 463.934, 56.9254, 0.4576", "314.528, 463.704, 55.7508, 0.3814", "314.527, 463.209, 53.2269, 0.305", "314.526, 462.714, 50.7027, 0.2542", "314.524, 462.218, 48.1788, 0.2542", "314.59, 461.443, 46.7642, 0.2796", "314.741, 460.308, 46.7662, 0.305", "314.892, 459.174, 46.7678, 0.2796", "315.043, 458.04, 46.7698, 0.2542", "315.194, 456.907, 46.7718, 0.2288", "315.346, 455.772, 46.7734, 0.2288", "315.41, 454.637, 46.5746, 0.2288", "315.412, 453.502, 46.235, 0.2288", "315.415, 452.366, 45.8954, 0.2288", "315.419, 451.231, 45.556, 0.2288", "315.605, 450.115, 45.4202, 0.2288", "315.904, 449.011, 45.4098, 0.2288", "316.203, 447.906, 45.3998, 0.2288", "316.502, 446.802, 45.3897, 0.2288", "317.199, 445.905, 45.3902, 0.2288", "317.931, 445.025, 45.3916, 0.2288", "318.663, 444.147, 45.393, 0.2288", "319.624, 443.538, 45.3978, 0.2288", "320.612, 442.959, 45.4028, 0.2288", "321.599, 442.38, 45.4082, 0.2288", "322.437, 441.629, 45.2004, 0.2288", "323.198, 440.784, 44.8804, 0.2542", "323.96, 439.94, 44.5606, 0.2796", "324.721, 439.097, 44.2406, 0.305", "325.482, 438.253, 43.9208, 0.305", "326.243, 437.408, 43.6008, 0.305", "326.957, 436.518, 43.5008, 0.3304", "327.651, 435.609, 43.4963, 0.3304", "328.344, 434.698, 43.4916, 0.3304", "329.037, 433.789, 43.4871, 0.2796", "329.73, 432.878, 43.4826, 0.2542", "330.493, 432.029, 43.5016, 0.2288", "331.301, 431.22, 43.5364, 0.2288", "332.11, 430.411, 43.5714, 0.2288", "332.919, 429.602, 43.6061, 0.2288", "333.265, 428.523, 43.5896, 0.2288", "333.572, 427.421, 43.5683, 0.2288", "333.877, 426.319, 43.5473, 0.2288", "334.17, 425.213, 43.5719, 0.2288", "334.432, 424.101, 43.6957, 0.2542", "334.694, 422.988, 43.8192, 0.305", "334.957, 421.876, 43.9426, 0.356", "335.219, 420.764, 44.0661, 0.3814", "335.481, 419.651, 44.1899, 0.356", "335.704, 418.545, 43.7996, 0.3304", "335.919, 417.439, 43.3101, 0.2796", "336.133, 416.334, 42.8207, 0.305", "336.348, 415.227, 42.3312, 0.3304", "336.806, 414.192, 42.2332, 0.4322", "337.336, 413.178, 42.2531, 0.483", "337.865, 412.165, 42.273, 0.6102", "338.395, 411.151, 42.2929, 0.661", "338.925, 410.137, 42.313, 0.661", "339.207, 409.029, 42.2856, 0.5084", "339.485, 407.919, 42.2576, 0.356", "339.762, 406.81, 42.2293, 0.305", "340.034, 405.699, 42.2016, 0.356", "339.799, 404.58, 42.2061, 0.4576", "339.563, 403.46, 42.2106, 0.5084", "339.327, 402.341, 42.2148, 0.5084", "339.067, 401.353, 41.629, 0.4576", "338.738, 400.723, 39.4344, 0.356", "338.007, 400.244, 38.407, 0.2796", "336.916, 399.9, 38.4266, 0.2542", "335.826, 399.557, 38.446, 0.305", "334.734, 399.212, 38.4656, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "314.528, 463.934, 56.9254, 0.4576", "314.898, 463.163, 56.5256, 0.305", "315.385, 462.151, 56.0006, 0.2542", "315.872, 461.138, 55.4753, 0.2288", "316.359, 460.125, 54.9503, 0.2288", "316.846, 459.112, 54.425, 0.2288", "317.333, 458.1, 53.9, 0.2796", "317.838, 457.079, 53.7611, 0.3814", "318.35, 456.056, 53.7435, 0.483", "318.861, 455.033, 53.7256, 0.483", "319.376, 454.011, 53.7099, 0.4068", "319.922, 453.006, 53.723, 0.3304", "320.467, 452.0, 53.7362, 0.305", "321.013, 450.995, 53.7496, 0.2796", "321.499, 449.972, 53.8709, 0.2542", "321.752, 448.878, 54.4163, 0.2288", "322.005, 447.784, 54.9615, 0.2288", "322.258, 446.692, 55.5069, 0.2288", "322.51, 445.598, 56.0524, 0.2542", "322.762, 444.505, 56.5975, 0.2796", "322.923, 443.386, 56.8543, 0.305", "323.007, 442.245, 56.8739, 0.2796", "323.092, 441.103, 56.8932, 0.2542", "323.617, 440.098, 56.884, 0.2288", "324.185, 439.105, 56.8722, 0.2288", "324.394, 438.056, 57.3199, 0.2288", "324.318, 436.963, 58.1283, 0.2288", "324.244, 435.871, 58.9369, 0.2288", "324.169, 434.777, 59.7453, 0.2288", "324.095, 433.685, 60.5539, 0.2288", "324.04, 432.549, 60.6942, 0.2288", "323.988, 431.406, 60.7368, 0.2288", "324.402, 430.383, 60.7404, 0.2288", "324.997, 429.406, 60.7289, 0.2288", "325.526, 428.433, 60.8689, 0.2288", "325.429, 427.491, 62.4445, 0.2288", "325.332, 426.551, 64.0203, 0.2288", "325.236, 425.61, 65.5962, 0.2288", "325.181, 424.581, 66.4798, 0.2288", "325.182, 423.437, 66.4723, 0.2542", "325.444, 422.38, 66.4608, 0.305", "326.13, 421.465, 66.4434, 0.4068", "326.459, 420.419, 67.158, 0.5084", "326.754, 419.361, 67.9414, 0.5592", "327.049, 418.304, 68.7252, 0.5338", "327.343, 417.245, 69.5089, 0.4576", "327.638, 416.187, 70.2926, 0.4576" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_228",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_229",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_9", "apic_0", "dend_0", "dend_28", "dend_10", "apic_14", "apic_1", "dend_4", "dend_1", "dend_23", "dend_11", "apic_7", "apic_2", "dend_8", "dend_5", "dend_3", "dend_2", "dend_27", "dend_24", "dend_13", "dend_12", "apic_13", "apic_8", "apic_4", "apic_3", "dend_7", "dend_6", "dend_26", "dend_25", "dend_20", "dend_19", "dend_14", "apic_12", "apic_9", "apic_6", "apic_5", "dend_22", "dend_21", "dend_18", "dend_15", "apic_11", "apic_10", "dend_17", "dend_16" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_29", "dend_9", "dend_0", "dend_28", "dend_10", "dend_4", "dend_1", "dend_23", "dend_11", "dend_8", "dend_5", "dend_3", "dend_2", "dend_27", "dend_24", "dend_13", "dend_12", "dend_7", "dend_6", "dend_26", "dend_25", "dend_20", "dend_19", "dend_14", "dend_22", "dend_21", "dend_18", "dend_15", "dend_17", "dend_16" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_7", "apic_2", "apic_13", "apic_8", "apic_4", "apic_3", "apic_12", "apic_9", "apic_6", "apic_5", "apic_11", "apic_10" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11273",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_9", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_10", "dend_10", "dend_10", "dend_10", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_8", "apic_8", "apic_8", "apic_8", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "apic",
    "value" : "4.7200003"
  }, {
    "group" : "dend",
    "value" : "4.7200003"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "28.36"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0012354556",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "3.9588735E-6",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.6525239",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "2.6435312E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.039248057",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.003941715",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.82822E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.21611185",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "2.3543024E-4",
    "erev" : "-96.39217"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.940596E-4",
    "erev" : "-96.39217"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0E-7",
    "erev" : "-96.39217"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "2.3886892E-4",
    "erev" : "-96.39217"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.8629188E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0032607368",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_473834758

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_28, id: dend_28, parent: dend_9
create dend_28
public dend_28
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_23, id: dend_23, parent: dend_10
create dend_23
public dend_23
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: apic_7, id: apic_7, parent: apic_1
create apic_7
public apic_7
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_8, id: dend_8, parent: dend_4
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_27, id: dend_27, parent: dend_23
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: apic_13, id: apic_13, parent: apic_7
create apic_13
public apic_13
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_13
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_12, id: apic_12, parent: apic_8
create apic_12
public apic_12
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: apic_11, id: apic_11, parent: apic_9
create apic_11
public apic_11
// Section: apic_10, id: apic_10, parent: apic_9
create apic_10
public apic_10
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_228, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_228
// Group: {name=ModelViewParmSubset_229, groups=[], sections=[dend_29, dend_9, apic_0, dend_0, dend_28, dend_10, apic_14, apic_1, dend_4, dend_1, dend_23, dend_11, apic_7, apic_2, dend_8, dend_5, dend_3, dend_2, dend_27, dend_24, dend_13, dend_12, apic_13, apic_8, apic_4, apic_3, dend_7, dend_6, dend_26, dend_25, dend_20, dend_19, dend_14, apic_12, apic_9, apic_6, apic_5, dend_22, dend_21, dend_18, dend_15, apic_11, apic_10, dend_17, dend_16]}
objref ModelViewParmSubset_229
// Group: {name=dend, groups=[], sections=[dend_29, dend_9, dend_0, dend_28, dend_10, dend_4, dend_1, dend_23, dend_11, dend_8, dend_5, dend_3, dend_2, dend_27, dend_24, dend_13, dend_12, dend_7, dend_6, dend_26, dend_25, dend_20, dend_19, dend_14, dend_22, dend_21, dend_18, dend_15, dend_17, dend_16]}
objref dend
// Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_7, apic_2, apic_13, apic_8, apic_4, apic_3, apic_12, apic_9, apic_6, apic_5, apic_11, apic_10]}
objref apic
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_11273, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_11273
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.49995579524356676)
    connect dend_29(0), soma_0(0.49995579524356676)
    connect dend_9(0), soma_0(0.49995579524356676)
    connect apic_0(0), soma_0(0.49995579524356676)
    connect dend_0(0), soma_0(0.49995579524356676)
    connect axon_1(0), axon_0(1.0)
    connect dend_28(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_23(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect apic_7(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_8(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_27(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect apic_13(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_20(0), dend_13(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_12(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect apic_11(0), apic_9(1.0)
    connect apic_10(0), apic_9(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 316.495, 497.411, 70.0, 11.3116 ) }
    soma_0 { pt3dadd( 322.15, 497.411, 70.0, 11.3116 ) }
    soma_0 { pt3dadd( 327.806, 497.411, 70.0, 11.3116 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 322.151, 497.411, 70.0, 1.0 ) }
    axon_0 { pt3dadd( 327.992, 511.227, 70.0, 1.0 ) }
    axon_0 { pt3dadd( 333.833, 525.043, 70.0, 1.0 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 6/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 319.86, 493.01, 74.7468, 0.2288 ) }
    dend_29 { pt3dadd( 320.106, 491.912, 75.1027, 0.2288 ) }
    dend_29 { pt3dadd( 320.406, 490.823, 75.5429, 0.2288 ) }
    dend_29 { pt3dadd( 320.707, 489.734, 75.983, 0.2288 ) }
    dend_29 { pt3dadd( 321.007, 488.645, 76.4232, 0.2288 ) }
    dend_29 { pt3dadd( 321.307, 487.555, 76.8631, 0.2288 ) }
    dend_29 { pt3dadd( 321.471, 486.465, 77.3329, 0.2288 ) }
    dend_29 { pt3dadd( 321.21, 485.376, 77.8952, 0.2288 ) }
    dend_29 { pt3dadd( 320.949, 484.286, 78.4574, 0.2288 ) }
    dend_29 { pt3dadd( 320.687, 483.196, 79.0194, 0.2288 ) }
    dend_29 { pt3dadd( 320.426, 482.107, 79.5816, 0.2288 ) }
    dend_29 { pt3dadd( 320.164, 481.017, 80.1438, 0.2288 ) }
    dend_29 { pt3dadd( 319.675, 480.082, 80.9981, 0.2288 ) }
    dend_29 { pt3dadd( 319.001, 479.273, 82.089, 0.2542 ) }
    dend_29 { pt3dadd( 318.318, 478.54, 83.3356, 0.2796 ) }
    dend_29 { pt3dadd( 317.598, 478.163, 85.3079, 0.305 ) }
    dend_29 { pt3dadd( 316.879, 477.788, 87.2802, 0.2796 ) }
    dend_29 { pt3dadd( 316.159, 477.412, 89.2525, 0.2542 ) }
    dend_29 { pt3dadd( 315.438, 477.035, 91.2248, 0.2288 ) }
    dend_29 { pt3dadd( 314.72, 476.659, 93.1966, 0.2288 ) }
    dend_29 { pt3dadd( 314.362, 475.746, 94.6375, 0.2288 ) }
    dend_29 { pt3dadd( 314.003, 474.833, 96.0781, 0.2288 ) }
    dend_29 { pt3dadd( 313.645, 473.919, 97.519, 0.2288 ) }
    dend_29 { pt3dadd( 313.286, 473.006, 98.9598, 0.2288 ) }
    dend_29 { pt3dadd( 312.928, 472.093, 100.401, 0.2288 ) }
    dend_29 { pt3dadd( 312.726, 471.104, 101.356, 0.2288 ) }
    dend_29 { pt3dadd( 312.827, 469.964, 101.365, 0.2288 ) }
    dend_29 { pt3dadd( 312.927, 468.824, 101.373, 0.2288 ) }
    dend_29 { pt3dadd( 313.028, 467.684, 101.381, 0.2288 ) }
    dend_29 { pt3dadd( 313.13, 466.545, 101.389, 0.2288 ) }
    dend_29 { pt3dadd( 312.953, 465.595, 102.696, 0.2288 ) }
    dend_29 { pt3dadd( 312.711, 464.688, 104.298, 0.2288 ) }
    dend_29 { pt3dadd( 312.471, 463.781, 105.899, 0.2288 ) }
    dend_29 { pt3dadd( 312.188, 462.978, 107.664, 0.2288 ) }
    dend_29 { pt3dadd( 311.75, 462.563, 110.043, 0.2288 ) }
    dend_29 { pt3dadd( 311.312, 462.148, 112.422, 0.2288 ) }
    dend_29 { pt3dadd( 310.874, 461.734, 114.801, 0.2288 ) }
    dend_29 { pt3dadd( 310.436, 461.319, 117.18, 0.2288 ) }
    dend_29 { pt3dadd( 309.997, 460.905, 119.559, 0.2288 ) }
    dend_29 { pt3dadd( 310.059, 459.878, 119.883, 0.2288 ) }
    dend_29 { pt3dadd( 310.207, 458.743, 119.849, 0.2288 ) }
    dend_29 { pt3dadd( 309.793, 457.877, 119.839, 0.2288 ) }
    dend_29 { pt3dadd( 308.819, 457.274, 119.854, 0.2288 ) }
    dend_29 { pt3dadd( 307.847, 456.672, 119.869, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 50/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 317.336, 495.044, 68.6171, 0.2288 ) }
    dend_9 { pt3dadd( 316.316, 494.542, 68.3239, 0.2288 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 52/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 326.135, 492.596, 68.0826, 0.2796 ) }
    apic_0 { pt3dadd( 326.712, 491.836, 69.5492, 0.3814 ) }
    apic_0 { pt3dadd( 327.432, 491.115, 70.8075, 0.5084 ) }
    apic_0 { pt3dadd( 328.068, 490.179, 71.0545, 0.5848 ) }
    apic_0 { pt3dadd( 328.802, 489.305, 70.9055, 0.6102 ) }
    apic_0 { pt3dadd( 329.46, 488.402, 70.3167, 0.661 ) }
    apic_0 { pt3dadd( 330.33, 487.686, 70.6804, 0.7118 ) }
    apic_0 { pt3dadd( 331.219, 486.985, 71.0903, 0.7372 ) }
    apic_0 { pt3dadd( 332.071, 486.223, 71.1192, 0.661 ) }
    apic_0 { pt3dadd( 333.025, 485.592, 71.1186, 0.5592 ) }
    apic_0 { pt3dadd( 333.968, 484.945, 71.1144, 0.4576 ) }
    apic_0 { pt3dadd( 334.862, 484.231, 71.094, 0.4322 ) }
    apic_0 { pt3dadd( 335.678, 483.43, 71.006, 0.4576 ) }
    apic_0 { pt3dadd( 336.475, 482.646, 70.4318, 0.5338 ) }
    apic_0 { pt3dadd( 337.316, 481.885, 70.049, 0.5592 ) }
    apic_0 { pt3dadd( 338.315, 481.336, 70.2545, 0.4576 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 68/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 327.651, 500.191, 67.599, 0.483 ) }
    dend_0 { pt3dadd( 328.577, 500.812, 67.0135, 0.6102 ) }
    dend_0 { pt3dadd( 329.406, 501.586, 66.6557, 0.6102 ) }
    dend_0 { pt3dadd( 330.264, 502.34, 66.5498, 0.6102 ) }
    dend_0 { pt3dadd( 331.351, 502.596, 66.0873, 0.6102 ) }
    dend_0 { pt3dadd( 332.428, 502.914, 66.5591, 0.6864 ) }
    dend_0 { pt3dadd( 333.482, 503.178, 67.4386, 0.7372 ) }
    dend_0 { pt3dadd( 334.564, 503.493, 67.004, 0.6864 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 76/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 333.833, 525.043, 70.0, 1.0 ) }
    axon_1 { pt3dadd( 339.674, 538.859, 70.0, 1.0 ) }
    axon_1 { pt3dadd( 345.516, 552.675, 70.0, 1.0 ) }
    // Section: dend_28, id: dend_28, parent: dend_9 (entry count 79/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 316.316, 494.542, 68.3239, 0.2288 ) }
    dend_28 { pt3dadd( 316.068, 494.7, 65.8871, 0.2288 ) }
    dend_28 { pt3dadd( 315.793, 494.874, 63.2022, 0.2288 ) }
    dend_28 { pt3dadd( 315.518, 495.048, 60.5172, 0.2288 ) }
    dend_28 { pt3dadd( 315.245, 495.222, 57.8323, 0.2288 ) }
    dend_28 { pt3dadd( 314.594, 495.253, 56.2946, 0.2288 ) }
    dend_28 { pt3dadd( 313.46, 495.099, 56.2299, 0.2288 ) }
    dend_28 { pt3dadd( 312.473, 495.661, 56.2447, 0.2288 ) }
    dend_28 { pt3dadd( 311.491, 496.247, 56.2626, 0.2288 ) }
    dend_28 { pt3dadd( 310.508, 496.831, 56.2803, 0.2288 ) }
    dend_28 { pt3dadd( 309.525, 497.417, 56.2982, 0.2288 ) }
    dend_28 { pt3dadd( 308.542, 498.003, 56.3158, 0.2288 ) }
    dend_28 { pt3dadd( 307.477, 498.391, 56.3016, 0.2288 ) }
    dend_28 { pt3dadd( 306.368, 498.667, 56.2694, 0.2288 ) }
    dend_28 { pt3dadd( 305.337, 499.07, 56.1142, 0.2288 ) }
    dend_28 { pt3dadd( 304.557, 499.876, 55.5668, 0.2288 ) }
    dend_28 { pt3dadd( 303.777, 500.683, 55.0192, 0.2288 ) }
    dend_28 { pt3dadd( 302.997, 501.49, 54.4715, 0.2288 ) }
    dend_28 { pt3dadd( 302.217, 502.296, 53.9241, 0.2288 ) }
    dend_28 { pt3dadd( 301.368, 502.938, 52.964, 0.2288 ) }
    dend_28 { pt3dadd( 300.493, 503.519, 51.8524, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_28 { pt3dadd( 299.619, 504.099, 50.7405, 0.2288 ) }
    dend_28 { pt3dadd( 298.744, 504.68, 49.6289, 0.2288 ) }
    dend_28 { pt3dadd( 297.869, 505.26, 48.5173, 0.2288 ) }
    dend_28 { pt3dadd( 296.941, 505.853, 48.0127, 0.2288 ) }
    dend_28 { pt3dadd( 295.967, 506.453, 48.0214, 0.2288 ) }
    dend_28 { pt3dadd( 294.994, 507.055, 48.0301, 0.2288 ) }
    dend_28 { pt3dadd( 294.022, 507.656, 48.0388, 0.2288 ) }
    dend_28 { pt3dadd( 293.199, 508.412, 47.6431, 0.2288 ) }
    dend_28 { pt3dadd( 292.449, 509.241, 47.0526, 0.2288 ) }
    dend_28 { pt3dadd( 291.699, 510.071, 46.4621, 0.2288 ) }
    dend_28 { pt3dadd( 290.949, 510.9, 45.8718, 0.2288 ) }
    dend_28 { pt3dadd( 290.093, 511.591, 45.4762, 0.2288 ) }
    dend_28 { pt3dadd( 289.028, 512.01, 45.4639, 0.2288 ) }
    dend_28 { pt3dadd( 287.964, 512.429, 45.4516, 0.2288 ) }
    dend_28 { pt3dadd( 287.108, 513.092, 45.4289, 0.2288 ) }
    dend_28 { pt3dadd( 286.528, 514.078, 45.393, 0.2542 ) }
    dend_28 { pt3dadd( 285.809, 514.91, 44.9378, 0.3304 ) }
    dend_28 { pt3dadd( 284.966, 515.605, 44.1106, 0.4322 ) }
    dend_28 { pt3dadd( 284.053, 515.865, 43.5742, 0.483 ) }
    dend_28 { pt3dadd( 283.017, 515.377, 43.5378, 0.4576 ) }
    dend_28 { pt3dadd( 281.958, 515.246, 43.0497, 0.3814 ) }
    dend_28 { pt3dadd( 280.879, 515.402, 42.2016, 0.356 ) }
    dend_28 { pt3dadd( 279.8, 515.557, 41.3532, 0.3304 ) }
    dend_28 { pt3dadd( 278.721, 515.712, 40.5051, 0.3304 ) }
    dend_28 { pt3dadd( 277.746, 515.248, 40.3124, 0.2796 ) }
    dend_28 { pt3dadd( 276.802, 514.602, 40.3127, 0.2542 ) }
    dend_28 { pt3dadd( 275.758, 514.433, 40.3242, 0.2288 ) }
    dend_28 { pt3dadd( 274.633, 514.642, 40.3449, 0.2288 ) }
    dend_28 { pt3dadd( 273.507, 514.852, 40.3656, 0.2542 ) }
    dend_28 { pt3dadd( 272.383, 515.061, 40.3864, 0.3304 ) }
    dend_28 { pt3dadd( 271.289, 515.031, 40.3922, 0.4068 ) }
    dend_28 { pt3dadd( 270.254, 514.545, 40.3704, 0.4322 ) }
    dend_28 { pt3dadd( 269.218, 514.059, 40.3486, 0.356 ) }
    dend_28 { pt3dadd( 268.182, 513.574, 40.3267, 0.2796 ) }
    dend_28 { pt3dadd( 267.147, 513.087, 40.3049, 0.2288 ) }
    dend_28 { pt3dadd( 266.172, 512.552, 40.651, 0.2288 ) }
    dend_28 { pt3dadd( 265.311, 511.926, 41.6721, 0.2288 ) }
    dend_28 { pt3dadd( 264.448, 511.301, 42.6933, 0.2288 ) }
    dend_28 { pt3dadd( 263.627, 510.628, 43.5921, 0.2288 ) }
    dend_28 { pt3dadd( 263.103, 509.611, 43.5767, 0.2288 ) }
    dend_28 { pt3dadd( 262.579, 508.594, 43.561, 0.2796 ) }
    dend_28 { pt3dadd( 262.055, 507.577, 43.5456, 0.3304 ) }
    dend_28 { pt3dadd( 261.214, 506.84, 43.5389, 0.4068 ) }
    dend_28 { pt3dadd( 260.27, 506.194, 43.5352, 0.3814 ) }
    dend_28 { pt3dadd( 259.233, 505.838, 43.2446, 0.356 ) }
    dend_28 { pt3dadd( 258.115, 505.735, 42.7036, 0.2796 ) }
    dend_28 { pt3dadd( 256.995, 505.6, 42.3262, 0.2542 ) }
    dend_28 { pt3dadd( 255.869, 505.395, 42.3046, 0.2288 ) }
    dend_28 { pt3dadd( 254.745, 505.19, 42.2834, 0.2288 ) }
    dend_28 { pt3dadd( 253.62, 504.978, 42.2612, 0.2288 ) }
    dend_28 { pt3dadd( 252.516, 504.68, 42.231, 0.2288 ) }
    dend_28 { pt3dadd( 251.412, 504.382, 42.2008, 0.2288 ) }
    dend_28 { pt3dadd( 250.416, 503.872, 42.1918, 0.2288 ) }
    dend_28 { pt3dadd( 249.531, 503.147, 42.2044, 0.2288 ) }
    dend_28 { pt3dadd( 248.647, 502.421, 42.2173, 0.2288 ) }
    dend_28 { pt3dadd( 247.763, 501.695, 42.2302, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 316.316, 494.542, 68.3239, 0.2288 ) }
    dend_10 { pt3dadd( 315.969, 494.1, 68.3217, 0.2542 ) }
    dend_10 { pt3dadd( 315.262, 493.201, 68.3169, 0.305 ) }
    dend_10 { pt3dadd( 314.555, 492.301, 68.3124, 0.3814 ) }
    dend_10 { pt3dadd( 313.848, 491.402, 68.3077, 0.4576 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 61/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 338.315, 481.336, 70.2545, 0.4576 ) }
    apic_14 { pt3dadd( 337.899, 480.335, 70.2904, 0.305 ) }
    apic_14 { pt3dadd( 337.433, 479.295, 70.1229, 0.2542 ) }
    apic_14 { pt3dadd( 336.954, 478.262, 69.8438, 0.2796 ) }
    apic_14 { pt3dadd( 336.473, 477.23, 69.5646, 0.356 ) }
    apic_14 { pt3dadd( 335.994, 476.198, 69.2857, 0.4322 ) }
    apic_14 { pt3dadd( 335.422, 475.258, 68.922, 0.4068 ) }
    apic_14 { pt3dadd( 334.465, 474.703, 68.2027, 0.3304 ) }
    apic_14 { pt3dadd( 333.509, 474.148, 67.4834, 0.2542 ) }
    apic_14 { pt3dadd( 332.483, 473.81, 67.0359, 0.2288 ) }
    apic_14 { pt3dadd( 331.339, 473.836, 67.0429, 0.2288 ) }
    apic_14 { pt3dadd( 330.195, 473.861, 67.0496, 0.2288 ) }
    apic_14 { pt3dadd( 329.051, 473.885, 67.0566, 0.2288 ) }
    apic_14 { pt3dadd( 327.908, 473.91, 67.0636, 0.2288 ) }
    apic_14 { pt3dadd( 327.048, 473.257, 66.5048, 0.2288 ) }
    apic_14 { pt3dadd( 326.231, 472.501, 65.8594, 0.2288 ) }
    apic_14 { pt3dadd( 325.415, 471.743, 65.214, 0.2288 ) }
    apic_14 { pt3dadd( 324.597, 470.987, 64.603, 0.2288 ) }
    apic_14 { pt3dadd( 323.75, 470.229, 64.9034, 0.2288 ) }
    apic_14 { pt3dadd( 322.902, 469.47, 65.2036, 0.2288 ) }
    apic_14 { pt3dadd( 322.054, 468.712, 65.504, 0.2288 ) }
    apic_14 { pt3dadd( 321.207, 467.953, 65.8045, 0.2288 ) }
    apic_14 { pt3dadd( 320.359, 467.196, 66.1046, 0.2288 ) }
    apic_14 { pt3dadd( 319.511, 466.437, 66.4051, 0.2288 ) }
    apic_14 { pt3dadd( 318.949, 465.456, 66.4415, 0.2288 ) }
    apic_14 { pt3dadd( 318.453, 464.426, 66.4194, 0.2288 ) }
    apic_14 { pt3dadd( 317.955, 463.396, 66.397, 0.2288 ) }
    apic_14 { pt3dadd( 317.262, 462.502, 66.4079, 0.2288 ) }
    apic_14 { pt3dadd( 316.47, 461.676, 66.435, 0.2288 ) }
    apic_14 { pt3dadd( 315.679, 460.85, 66.4622, 0.2288 ) }
    apic_14 { pt3dadd( 315.116, 459.904, 66.477, 0.2288 ) }
    apic_14 { pt3dadd( 314.88, 458.784, 66.4745, 0.2288 ) }
    apic_14 { pt3dadd( 314.644, 457.664, 66.472, 0.2288 ) }
    apic_14 { pt3dadd( 314.409, 456.545, 66.4698, 0.2288 ) }
    apic_14 { pt3dadd( 314.173, 455.425, 66.4672, 0.2796 ) }
    apic_14 { pt3dadd( 313.937, 454.306, 66.4647, 0.3304 ) }
    apic_14 { pt3dadd( 313.42, 453.305, 66.4269, 0.4068 ) }
    apic_14 { pt3dadd( 312.785, 452.354, 66.3748, 0.4068 ) }
    apic_14 { pt3dadd( 312.827, 451.223, 66.3818, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_14 { pt3dadd( 312.908, 450.082, 66.3925, 0.356 ) }
    apic_14 { pt3dadd( 312.859, 448.972, 66.3984, 0.305 ) }
    apic_14 { pt3dadd( 312.277, 447.987, 66.3858, 0.2542 ) }
    apic_14 { pt3dadd( 311.695, 447.002, 66.3734, 0.2542 ) }
    apic_14 { pt3dadd( 311.52, 445.911, 66.1637, 0.2796 ) }
    apic_14 { pt3dadd( 311.524, 444.773, 65.8672, 0.305 ) }
    apic_14 { pt3dadd( 311.527, 443.635, 65.571, 0.2796 ) }
    apic_14 { pt3dadd( 311.532, 442.498, 65.2747, 0.2542 ) }
    apic_14 { pt3dadd( 311.733, 441.375, 65.2277, 0.2288 ) }
    apic_14 { pt3dadd( 311.963, 440.255, 65.2154, 0.2288 ) }
    apic_14 { pt3dadd( 312.192, 439.134, 65.203, 0.2542 ) }
    apic_14 { pt3dadd( 312.422, 438.012, 65.1907, 0.305 ) }
    apic_14 { pt3dadd( 312.231, 436.974, 65.1851, 0.3814 ) }
    apic_14 { pt3dadd( 311.597, 436.022, 65.1868, 0.4068 ) }
    apic_14 { pt3dadd( 310.962, 435.07, 65.1885, 0.3814 ) }
    apic_14 { pt3dadd( 310.327, 434.118, 65.1902, 0.305 ) }
    apic_14 { pt3dadd( 309.939, 433.081, 64.8262, 0.2542 ) }
    apic_14 { pt3dadd( 309.712, 431.987, 64.225, 0.2288 ) }
    apic_14 { pt3dadd( 309.485, 430.893, 63.6241, 0.2288 ) }
    apic_14 { pt3dadd( 309.257, 429.798, 63.023, 0.2542 ) }
    apic_14 { pt3dadd( 309.03, 428.705, 62.4218, 0.2796 ) }
    apic_14 { pt3dadd( 308.802, 427.611, 61.8209, 0.305 ) }
    apic_14 { pt3dadd( 308.574, 426.517, 61.2198, 0.2796 ) }
    apic_14 { pt3dadd( 308.347, 425.423, 60.6186, 0.2542 ) }
    apic_14 { pt3dadd( 308.15, 424.327, 60.0684, 0.2288 ) }
    apic_14 { pt3dadd( 308.311, 423.194, 60.1006, 0.2288 ) }
    apic_14 { pt3dadd( 308.473, 422.062, 60.1328, 0.2288 ) }
    apic_14 { pt3dadd( 308.547, 420.931, 60.0118, 0.2542 ) }
    apic_14 { pt3dadd( 308.435, 419.808, 59.563, 0.3304 ) }
    apic_14 { pt3dadd( 308.323, 418.685, 59.1144, 0.4322 ) }
    apic_14 { pt3dadd( 308.197, 417.606, 59.4527, 0.483 ) }
    apic_14 { pt3dadd( 308.055, 416.576, 60.622, 0.4576 ) }
    apic_14 { pt3dadd( 307.913, 415.547, 61.7915, 0.4068 ) }
    apic_14 { pt3dadd( 308.009, 414.454, 61.546, 0.3814 ) }
    apic_14 { pt3dadd( 308.164, 413.345, 60.9591, 0.356 ) }
    apic_14 { pt3dadd( 308.317, 412.238, 60.3722, 0.305 ) }
    apic_14 { pt3dadd( 308.47, 411.13, 59.7853, 0.2542 ) }
    apic_14 { pt3dadd( 308.625, 410.022, 59.1982, 0.2288 ) }
    apic_14 { pt3dadd( 308.616, 408.908, 58.844, 0.2288 ) }
    apic_14 { pt3dadd( 308.391, 407.787, 58.7969, 0.2288 ) }
    apic_14 { pt3dadd( 308.212, 406.666, 58.5455, 0.2288 ) }
    apic_14 { pt3dadd( 308.086, 405.548, 58.0404, 0.2288 ) }
    apic_14 { pt3dadd( 307.96, 404.43, 57.5355, 0.2288 ) }
    apic_14 { pt3dadd( 307.834, 403.311, 57.0304, 0.305 ) }
    apic_14 { pt3dadd( 307.708, 402.194, 56.5253, 0.4068 ) }
    apic_14 { pt3dadd( 307.498, 401.084, 56.2344, 0.5338 ) }
    apic_14 { pt3dadd( 307.175, 399.987, 56.2296, 0.5338 ) }
    apic_14 { pt3dadd( 306.853, 398.889, 56.2246, 0.5338 ) }
    apic_14 { pt3dadd( 306.53, 397.792, 56.2195, 0.5084 ) }
    apic_14 { pt3dadd( 306.743, 396.738, 55.2815, 0.5084 ) }
    apic_14 { pt3dadd( 306.966, 395.687, 54.327, 0.4576 ) }
    apic_14 { pt3dadd( 307.052, 394.681, 53.1574, 0.4068 ) }
    apic_14 { pt3dadd( 306.838, 393.779, 51.5192, 0.4068 ) }
    apic_14 { pt3dadd( 306.624, 392.876, 49.8809, 0.4576 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 54/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 338.315, 481.336, 70.2545, 0.4576 ) }
    apic_1 { pt3dadd( 338.932, 481.097, 71.0483, 0.3814 ) }
    apic_1 { pt3dadd( 339.944, 480.665, 71.6405, 0.305 ) }
    apic_1 { pt3dadd( 340.985, 480.202, 71.9099, 0.2542 ) }
    apic_1 { pt3dadd( 342.025, 479.74, 72.1792, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 59/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 334.564, 503.493, 67.004, 0.6864 ) }
    dend_4 { pt3dadd( 335.274, 504.339, 67.0116, 0.3814 ) }
    dend_4 { pt3dadd( 336.148, 505.044, 67.1835, 0.2796 ) }
    dend_4 { pt3dadd( 337.132, 505.615, 67.4856, 0.2288 ) }
    dend_4 { pt3dadd( 338.117, 506.185, 67.7874, 0.2542 ) }
    dend_4 { pt3dadd( 339.101, 506.754, 68.0896, 0.305 ) }
    dend_4 { pt3dadd( 340.085, 507.325, 68.3917, 0.356 ) }
    dend_4 { pt3dadd( 340.712, 508.264, 68.8344, 0.356 ) }
    dend_4 { pt3dadd( 341.336, 509.205, 69.2776, 0.3304 ) }
    dend_4 { pt3dadd( 341.961, 510.146, 69.7208, 0.305 ) }
    dend_4 { pt3dadd( 342.587, 511.087, 70.1641, 0.305 ) }
    dend_4 { pt3dadd( 343.079, 512.108, 70.2974, 0.2796 ) }
    dend_4 { pt3dadd( 343.503, 513.17, 70.2724, 0.2542 ) }
    dend_4 { pt3dadd( 343.927, 514.233, 70.2475, 0.2796 ) }
    dend_4 { pt3dadd( 344.353, 515.294, 70.2223, 0.356 ) }
    dend_4 { pt3dadd( 344.777, 516.357, 70.1974, 0.4322 ) }
    dend_4 { pt3dadd( 345.26, 517.393, 70.198, 0.4068 ) }
    dend_4 { pt3dadd( 345.749, 518.429, 70.2008, 0.356 ) }
    dend_4 { pt3dadd( 346.237, 519.463, 70.2038, 0.3304 ) }
    dend_4 { pt3dadd( 346.726, 520.497, 70.2066, 0.4576 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 79/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 334.564, 503.493, 67.004, 0.6864 ) }
    dend_1 { pt3dadd( 335.919, 503.796, 66.6056, 0.5338 ) }
    dend_1 { pt3dadd( 337.053, 503.796, 66.3732, 0.3814 ) }
    dend_1 { pt3dadd( 338.08, 503.644, 65.4088, 0.2796 ) }
    dend_1 { pt3dadd( 338.785, 503.2, 63.5415, 0.2288 ) }
    dend_1 { pt3dadd( 339.279, 502.511, 62.2717, 0.2288 ) }
    dend_1 { pt3dadd( 339.791, 501.494, 62.5621, 0.2542 ) }
    dend_1 { pt3dadd( 340.708, 501.241, 62.0564, 0.2796 ) }
    dend_1 { pt3dadd( 341.796, 501.312, 61.2133, 0.305 ) }
    dend_1 { pt3dadd( 342.885, 501.383, 60.37, 0.2796 ) }
    dend_1 { pt3dadd( 343.973, 501.454, 59.5269, 0.2542 ) }
    dend_1 { pt3dadd( 345.062, 501.525, 58.6838, 0.2288 ) }
    dend_1 { pt3dadd( 346.132, 501.424, 58.0051, 0.2288 ) }
    dend_1 { pt3dadd( 347.158, 500.935, 57.7007, 0.2288 ) }
    dend_1 { pt3dadd( 348.184, 500.444, 57.3966, 0.2288 ) }
    dend_1 { pt3dadd( 349.21, 499.954, 57.0923, 0.2288 ) }
    dend_1 { pt3dadd( 350.109, 499.301, 56.8002, 0.2288 ) }
    dend_1 { pt3dadd( 350.824, 498.416, 56.5264, 0.2288 ) }
    dend_1 { pt3dadd( 351.539, 497.529, 56.2523, 0.2288 ) }
    dend_1 { pt3dadd( 352.254, 496.644, 55.9782, 0.2542 ) }
    dend_1 { pt3dadd( 352.97, 495.758, 55.704, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_1 { pt3dadd( 353.685, 494.873, 55.4299, 0.356 ) }
    dend_1 { pt3dadd( 354.4, 493.986, 55.1558, 0.4322 ) }
    dend_1 { pt3dadd( 355.124, 493.103, 55.0466, 0.5592 ) }
    dend_1 { pt3dadd( 355.854, 492.222, 55.0441, 0.5848 ) }
    dend_1 { pt3dadd( 356.582, 491.341, 55.0416, 0.5592 ) }
    dend_1 { pt3dadd( 357.312, 490.459, 55.039, 0.4322 ) }
    dend_1 { pt3dadd( 358.316, 489.919, 55.015, 0.356 ) }
    dend_1 { pt3dadd( 359.334, 489.397, 54.9892, 0.2796 ) }
    dend_1 { pt3dadd( 360.352, 488.877, 54.9637, 0.2542 ) }
    dend_1 { pt3dadd( 361.37, 488.355, 54.9382, 0.2288 ) }
    dend_1 { pt3dadd( 362.328, 487.773, 55.1326, 0.2288 ) }
    dend_1 { pt3dadd( 363.111, 487.011, 55.9658, 0.2288 ) }
    dend_1 { pt3dadd( 363.894, 486.249, 56.7988, 0.2288 ) }
    dend_1 { pt3dadd( 364.884, 485.691, 56.8613, 0.2288 ) }
    dend_1 { pt3dadd( 365.891, 485.146, 56.866, 0.2288 ) }
    dend_1 { pt3dadd( 366.898, 484.603, 56.8705, 0.2288 ) }
    dend_1 { pt3dadd( 367.905, 484.058, 56.875, 0.2288 ) }
    dend_1 { pt3dadd( 369.021, 483.872, 56.8865, 0.2288 ) }
    dend_1 { pt3dadd( 370.158, 483.755, 56.8991, 0.2288 ) }
    dend_1 { pt3dadd( 371.297, 483.637, 56.9117, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_10 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 313.848, 491.402, 68.3077, 0.4576 ) }
    dend_23 { pt3dadd( 312.741, 491.406, 68.7823, 0.305 ) }
    dend_23 { pt3dadd( 311.607, 491.445, 68.745, 0.2542 ) }
    dend_23 { pt3dadd( 310.47, 491.499, 68.467, 0.2288 ) }
    dend_23 { pt3dadd( 309.487, 491.029, 68.357, 0.2288 ) }
    dend_23 { pt3dadd( 308.567, 490.349, 68.3133, 0.2288 ) }
    dend_23 { pt3dadd( 307.56, 489.978, 68.3984, 0.2288 ) }
    dend_23 { pt3dadd( 306.425, 490.06, 68.6745, 0.2288 ) }
    dend_23 { pt3dadd( 305.289, 490.142, 68.9506, 0.2288 ) }
    dend_23 { pt3dadd( 304.247, 489.862, 69.5047, 0.2288 ) }
    dend_23 { pt3dadd( 303.258, 489.365, 70.224, 0.2288 ) }
    dend_23 { pt3dadd( 302.27, 488.869, 70.9433, 0.2288 ) }
    dend_23 { pt3dadd( 301.283, 488.374, 71.6626, 0.2288 ) }
    dend_23 { pt3dadd( 300.287, 487.859, 72.1218, 0.2288 ) }
    dend_23 { pt3dadd( 299.282, 487.314, 72.1274, 0.2288 ) }
    dend_23 { pt3dadd( 298.276, 486.77, 72.133, 0.2288 ) }
    dend_23 { pt3dadd( 297.271, 486.225, 72.1384, 0.2288 ) }
    dend_23 { pt3dadd( 296.264, 485.68, 72.144, 0.2288 ) }
    dend_23 { pt3dadd( 295.258, 485.135, 72.1496, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 39/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 313.848, 491.402, 68.3077, 0.4576 ) }
    dend_11 { pt3dadd( 313.404, 490.766, 67.835, 0.356 ) }
    dend_11 { pt3dadd( 312.768, 489.856, 67.1588, 0.3304 ) }
    dend_11 { pt3dadd( 312.132, 488.946, 66.4826, 0.2796 ) }
    dend_11 { pt3dadd( 311.497, 488.036, 65.8062, 0.2542 ) }
    dend_11 { pt3dadd( 310.861, 487.125, 65.13, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_1 (entry count 45/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 342.025, 479.74, 72.1792, 0.2288 ) }
    apic_7 { pt3dadd( 342.452, 480.322, 70.7946, 0.2288 ) }
    apic_7 { pt3dadd( 342.984, 481.049, 69.0676, 0.2288 ) }
    apic_7 { pt3dadd( 344.095, 481.034, 68.9699, 0.2542 ) }
    apic_7 { pt3dadd( 345.237, 480.979, 68.9618, 0.2796 ) }
    apic_7 { pt3dadd( 345.82, 481.88, 69.0018, 0.3814 ) }
    apic_7 { pt3dadd( 346.196, 482.958, 68.9791, 0.4322 ) }
    apic_7 { pt3dadd( 346.62, 483.992, 68.9478, 0.483 ) }
    apic_7 { pt3dadd( 347.527, 484.689, 68.9755, 0.4068 ) }
    apic_7 { pt3dadd( 348.061, 485.599, 68.6501, 0.3814 ) }
    apic_7 { pt3dadd( 348.273, 486.694, 68.0193, 0.3814 ) }
    apic_7 { pt3dadd( 348.485, 487.788, 67.3884, 0.4322 ) }
    apic_7 { pt3dadd( 348.476, 488.892, 67.055, 0.4576 ) }
    apic_7 { pt3dadd( 348.219, 490.006, 67.0564, 0.4322 ) }
    apic_7 { pt3dadd( 347.961, 491.121, 67.0578, 0.3814 ) }
    apic_7 { pt3dadd( 348.196, 492.205, 66.6151, 0.3304 ) }
    apic_7 { pt3dadd( 348.513, 493.284, 66.0974, 0.3304 ) }
    apic_7 { pt3dadd( 348.829, 494.362, 65.5799, 0.356 ) }
    apic_7 { pt3dadd( 349.146, 495.441, 65.0622, 0.356 ) }
    apic_7 { pt3dadd( 349.463, 496.52, 64.5448, 0.2288 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 65/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 342.025, 479.74, 72.1792, 0.2288 ) }
    apic_2 { pt3dadd( 342.588, 479.211, 72.1636, 0.2288 ) }
    apic_2 { pt3dadd( 343.423, 478.429, 72.1406, 0.2288 ) }
    apic_2 { pt3dadd( 344.257, 477.646, 72.1176, 0.2542 ) }
    apic_2 { pt3dadd( 345.092, 476.864, 72.0944, 0.2796 ) }
    apic_2 { pt3dadd( 346.015, 476.228, 72.0824, 0.305 ) }
    apic_2 { pt3dadd( 347.094, 475.847, 72.0888, 0.2796 ) }
    apic_2 { pt3dadd( 347.996, 475.196, 72.1036, 0.2542 ) }
    apic_2 { pt3dadd( 348.777, 474.36, 72.1241, 0.305 ) }
    apic_2 { pt3dadd( 349.511, 473.484, 72.1328, 0.4068 ) }
    apic_2 { pt3dadd( 350.214, 472.582, 72.133, 0.5338 ) }
    apic_2 { pt3dadd( 350.826, 471.627, 72.1389, 0.5084 ) }
    apic_2 { pt3dadd( 351.259, 470.567, 72.1568, 0.4322 ) }
    apic_2 { pt3dadd( 351.693, 469.509, 72.1748, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_4 (entry count 79/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 346.726, 520.497, 70.2066, 0.4576 ) }
    dend_8 { pt3dadd( 348.009, 520.713, 70.7748, 0.305 ) }
    dend_8 { pt3dadd( 349.12, 520.9, 71.2662, 0.2542 ) }
    dend_8 { pt3dadd( 350.231, 521.086, 71.7573, 0.2796 ) }
    dend_8 { pt3dadd( 351.342, 521.274, 72.2487, 0.356 ) }
    dend_8 { pt3dadd( 352.453, 521.46, 72.7401, 0.4576 ) }
    dend_8 { pt3dadd( 353.563, 521.647, 73.2312, 0.5084 ) }
    dend_8 { pt3dadd( 354.674, 521.833, 73.7226, 0.5338 ) }
    dend_8 { pt3dadd( 355.784, 522.021, 74.214, 0.5338 ) }
    dend_8 { pt3dadd( 356.896, 522.17, 74.6626, 0.5084 ) }
    dend_8 { pt3dadd( 358.017, 521.94, 74.6852, 0.483 ) }
    dend_8 { pt3dadd( 359.137, 521.71, 74.7076, 0.4322 ) }
    dend_8 { pt3dadd( 360.258, 521.48, 74.7303, 0.3814 ) }
    dend_8 { pt3dadd( 361.226, 521.885, 74.6945, 0.305 ) }
    dend_8 { pt3dadd( 362.189, 522.126, 74.662, 0.2542 ) }
    dend_8 { pt3dadd( 363.252, 521.702, 74.6738, 0.2542 ) }
    dend_8 { pt3dadd( 364.313, 521.277, 74.6855, 0.3304 ) }
    dend_8 { pt3dadd( 365.327, 521.606, 74.6665, 0.4068 ) }
    dend_8 { pt3dadd( 366.325, 522.166, 74.6382, 0.4576 ) }
    dend_8 { pt3dadd( 367.44, 522.41, 74.643, 0.4068 ) }
    dend_8 { pt3dadd( 368.56, 522.64, 74.6491, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 369.681, 522.87, 74.6553, 0.2796 ) }
    dend_8 { pt3dadd( 370.797, 523.115, 74.6612, 0.2542 ) }
    dend_8 { pt3dadd( 371.777, 523.703, 74.66, 0.2542 ) }
    dend_8 { pt3dadd( 372.757, 524.292, 74.6592, 0.3304 ) }
    dend_8 { pt3dadd( 373.739, 524.88, 74.6581, 0.4068 ) }
    dend_8 { pt3dadd( 374.783, 525.194, 75.145, 0.4576 ) }
    dend_8 { pt3dadd( 375.87, 525.323, 75.9615, 0.4322 ) }
    dend_8 { pt3dadd( 376.956, 525.451, 76.7782, 0.4322 ) }
    dend_8 { pt3dadd( 378.043, 525.579, 77.5947, 0.4068 ) }
    dend_8 { pt3dadd( 379.13, 525.706, 78.4115, 0.3814 ) }
    dend_8 { pt3dadd( 380.213, 525.888, 79.084, 0.305 ) }
    dend_8 { pt3dadd( 381.277, 526.306, 79.1126, 0.2542 ) }
    dend_8 { pt3dadd( 382.342, 526.725, 79.1409, 0.2288 ) }
    dend_8 { pt3dadd( 383.37, 527.206, 79.1644, 0.2542 ) }
    dend_8 { pt3dadd( 384.264, 527.919, 79.1706, 0.2796 ) }
    dend_8 { pt3dadd( 385.157, 528.634, 79.1764, 0.305 ) }
    dend_8 { pt3dadd( 386.03, 529.333, 79.6701, 0.2796 ) }
    dend_8 { pt3dadd( 386.893, 530.023, 80.3936, 0.2542 ) }
    dend_8 { pt3dadd( 387.755, 530.714, 81.1168, 0.2288 ) }
    dend_8 { pt3dadd( 388.618, 531.405, 81.8404, 0.2288 ) }
    dend_8 { pt3dadd( 389.48, 532.096, 82.5636, 0.2288 ) }
    dend_8 { pt3dadd( 390.343, 532.787, 83.2871, 0.2288 ) }
    dend_8 { pt3dadd( 391.205, 533.478, 84.0104, 0.2288 ) }
    dend_8 { pt3dadd( 392.068, 534.169, 84.7336, 0.2288 ) }
    dend_8 { pt3dadd( 392.931, 534.86, 85.4571, 0.2288 ) }
    dend_8 { pt3dadd( 393.793, 535.551, 86.1804, 0.2288 ) }
    dend_8 { pt3dadd( 394.741, 536.147, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 395.808, 536.514, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 396.951, 536.536, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 398.095, 536.536, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 399.239, 536.536, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 400.383, 536.536, 86.52, 0.2796 ) }
    dend_8 { pt3dadd( 401.505, 536.606, 86.52, 0.356 ) }
    dend_8 { pt3dadd( 402.098, 537.543, 86.52, 0.4322 ) }
    dend_8 { pt3dadd( 402.871, 538.312, 86.52, 0.4068 ) }
    dend_8 { pt3dadd( 403.697, 538.964, 86.52, 0.3304 ) }
    dend_8 { pt3dadd( 404.786, 539.283, 86.52, 0.2542 ) }
    dend_8 { pt3dadd( 405.675, 539.902, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 406.786, 540.081, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 407.93, 540.095, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 408.719, 540.867, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 409.379, 541.779, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 409.924, 542.698, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 410.71, 543.449, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 411.75, 543.906, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 412.716, 544.518, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 413.671, 545.142, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 414.616, 545.776, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 415.544, 546.414, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 416.066, 547.402, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 416.538, 548.403, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 417.545, 548.842, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 418.488, 549.466, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 419.507, 549.952, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 420.644, 550.035, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 421.788, 550.035, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 422.93, 550.083, 86.52, 0.2288 ) }
    dend_8 { pt3dadd( 424.07, 550.15, 86.478, 0.2288 ) }
    dend_8 { pt3dadd( 425.196, 550.251, 86.24, 0.2542 ) }
    dend_8 { pt3dadd( 426.256, 550.418, 86.7194, 0.305 ) }
    dend_8 { pt3dadd( 427.118, 550.568, 88.5223, 0.356 ) }
    dend_8 { pt3dadd( 427.981, 550.718, 90.3249, 0.356 ) }
    dend_8 { pt3dadd( 428.843, 550.868, 92.1276, 0.305 ) }
    dend_8 { pt3dadd( 429.979, 550.951, 92.1861, 0.2542 ) }
    dend_8 { pt3dadd( 431.12, 551.034, 92.2121, 0.2288 ) }
    dend_8 { pt3dadd( 432.23, 551.225, 92.2247, 0.2288 ) }
    dend_8 { pt3dadd( 433.244, 551.755, 92.1956, 0.2288 ) }
    dend_8 { pt3dadd( 434.259, 552.283, 92.1668, 0.2288 ) }
    dend_8 { pt3dadd( 434.791, 553.218, 92.1928, 0.2288 ) }
    dend_8 { pt3dadd( 435.137, 554.308, 92.2404, 0.2288 ) }
    dend_8 { pt3dadd( 435.397, 555.421, 92.2356, 0.2288 ) }
    dend_8 { pt3dadd( 435.632, 556.541, 92.2163, 0.2796 ) }
    dend_8 { pt3dadd( 435.866, 557.66, 92.197, 0.3814 ) }
    dend_8 { pt3dadd( 436.101, 558.78, 92.1777, 0.6864 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 74/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 346.726, 520.497, 70.2066, 0.4576 ) }
    dend_5 { pt3dadd( 346.965, 521.132, 70.8971, 0.305 ) }
    dend_5 { pt3dadd( 347.335, 522.12, 71.9726, 0.2542 ) }
    dend_5 { pt3dadd( 347.469, 523.228, 72.1806, 0.2288 ) }
    dend_5 { pt3dadd( 347.532, 524.37, 72.1294, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 79/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 371.297, 483.637, 56.9117, 0.2288 ) }
    dend_3 { pt3dadd( 372.3, 483.373, 56.2223, 0.2288 ) }
    dend_3 { pt3dadd( 373.367, 483.091, 55.489, 0.2288 ) }
    dend_3 { pt3dadd( 374.435, 482.809, 54.756, 0.2288 ) }
    dend_3 { pt3dadd( 375.522, 482.548, 54.2948, 0.2288 ) }
    dend_3 { pt3dadd( 376.644, 482.324, 54.3119, 0.2288 ) }
    dend_3 { pt3dadd( 377.766, 482.1, 54.329, 0.2288 ) }
    dend_3 { pt3dadd( 378.888, 481.876, 54.346, 0.2288 ) }
    dend_3 { pt3dadd( 380.009, 481.651, 54.3631, 0.2288 ) }
    dend_3 { pt3dadd( 381.131, 481.427, 54.3802, 0.2288 ) }
    dend_3 { pt3dadd( 382.179, 481.043, 54.5972, 0.2288 ) }
    dend_3 { pt3dadd( 383.126, 480.431, 55.0942, 0.2288 ) }
    dend_3 { pt3dadd( 384.07, 479.82, 55.5909, 0.2288 ) }
    dend_3 { pt3dadd( 385.017, 479.209, 56.0879, 0.2288 ) }
    dend_3 { pt3dadd( 385.961, 478.598, 56.5846, 0.2288 ) }
    dend_3 { pt3dadd( 386.854, 477.904, 56.8364, 0.2288 ) }
    dend_3 { pt3dadd( 387.695, 477.127, 56.8459, 0.2288 ) }
    dend_3 { pt3dadd( 388.534, 476.35, 56.8554, 0.2288 ) }
    dend_3 { pt3dadd( 389.374, 475.573, 56.8652, 0.2288 ) }
    dend_3 { pt3dadd( 390.214, 474.797, 56.8747, 0.2288 ) }
    dend_3 { pt3dadd( 391.032, 473.998, 56.8809, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_3 { pt3dadd( 391.757, 473.114, 56.8733, 0.2288 ) }
    dend_3 { pt3dadd( 392.481, 472.229, 56.866, 0.2288 ) }
    dend_3 { pt3dadd( 393.206, 471.344, 56.8588, 0.2288 ) }
    dend_3 { pt3dadd( 393.932, 470.46, 56.8512, 0.2288 ) }
    dend_3 { pt3dadd( 394.657, 469.574, 56.8439, 0.2288 ) }
    dend_3 { pt3dadd( 395.382, 468.69, 56.8364, 0.2288 ) }
    dend_3 { pt3dadd( 396.321, 468.045, 56.8347, 0.2288 ) }
    dend_3 { pt3dadd( 397.282, 467.423, 56.8333, 0.2288 ) }
    dend_3 { pt3dadd( 398.242, 466.802, 56.8322, 0.2288 ) }
    dend_3 { pt3dadd( 399.203, 466.18, 56.8308, 0.2288 ) }
    dend_3 { pt3dadd( 400.163, 465.559, 56.8296, 0.2288 ) }
    dend_3 { pt3dadd( 401.124, 464.938, 56.8282, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 371.297, 483.637, 56.9117, 0.2288 ) }
    dend_2 { pt3dadd( 371.787, 483.871, 56.7092, 0.2288 ) }
    dend_2 { pt3dadd( 372.809, 484.357, 56.2878, 0.2288 ) }
    dend_2 { pt3dadd( 373.83, 484.842, 55.8667, 0.2288 ) }
    dend_2 { pt3dadd( 374.852, 485.328, 55.4456, 0.2288 ) }
    dend_2 { pt3dadd( 375.874, 485.813, 55.0245, 0.2288 ) }
    dend_2 { pt3dadd( 376.895, 486.299, 54.6034, 0.2288 ) }
    dend_2 { pt3dadd( 377.916, 486.786, 54.1822, 0.2288 ) }
    dend_2 { pt3dadd( 378.937, 487.271, 53.7611, 0.2288 ) }
    dend_2 { pt3dadd( 379.769, 487.997, 53.0454, 0.2542 ) }
    dend_2 { pt3dadd( 380.589, 488.735, 52.3146, 0.2796 ) }
    dend_2 { pt3dadd( 381.411, 489.474, 51.5836, 0.3304 ) }
    dend_2 { pt3dadd( 382.232, 490.212, 50.8528, 0.3304 ) }
    dend_2 { pt3dadd( 383.236, 490.476, 50.2113, 0.3304 ) }
    dend_2 { pt3dadd( 384.355, 490.445, 49.6252, 0.2796 ) }
    dend_2 { pt3dadd( 385.473, 490.416, 49.0389, 0.2542 ) }
    dend_2 { pt3dadd( 386.591, 490.385, 48.4526, 0.2288 ) }
    dend_2 { pt3dadd( 387.699, 490.487, 48.057, 0.2288 ) }
    dend_2 { pt3dadd( 388.786, 490.841, 48.0295, 0.2288 ) }
    dend_2 { pt3dadd( 389.874, 491.196, 48.0024, 0.2288 ) }
    dend_2 { pt3dadd( 390.962, 491.552, 47.9749, 0.2288 ) }
    dend_2 { pt3dadd( 392.049, 491.906, 47.9478, 0.2288 ) }
    dend_2 { pt3dadd( 393.087, 491.861, 47.178, 0.2288 ) }
    dend_2 { pt3dadd( 394.102, 491.611, 46.0337, 0.2288 ) }
    dend_2 { pt3dadd( 395.116, 491.363, 44.8893, 0.2288 ) }
    dend_2 { pt3dadd( 395.985, 490.948, 43.5299, 0.2288 ) }
    dend_2 { pt3dadd( 396.668, 490.318, 41.8947, 0.2288 ) }
    dend_2 { pt3dadd( 397.69, 490.365, 41.0329, 0.2288 ) }
    dend_2 { pt3dadd( 398.781, 490.552, 40.3306, 0.2288 ) }
    dend_2 { pt3dadd( 399.872, 490.738, 39.6287, 0.2288 ) }
    dend_2 { pt3dadd( 400.965, 490.925, 38.9267, 0.2288 ) }
    dend_2 { pt3dadd( 402.046, 491.174, 38.3869, 0.2288 ) }
    dend_2 { pt3dadd( 403.089, 491.641, 38.4093, 0.2288 ) }
    dend_2 { pt3dadd( 404.134, 492.109, 38.4317, 0.2288 ) }
    dend_2 { pt3dadd( 405.151, 492.517, 38.1587, 0.2288 ) }
    dend_2 { pt3dadd( 406.039, 492.624, 36.4101, 0.2288 ) }
    dend_2 { pt3dadd( 406.936, 492.443, 35.2904, 0.2288 ) }
    dend_2 { pt3dadd( 407.851, 491.756, 35.2761, 0.2288 ) }
    dend_2 { pt3dadd( 408.696, 491.151, 34.5139, 0.2288 ) }
    dend_2 { pt3dadd( 409.457, 490.65, 32.8222, 0.2288 ) }
    dend_2 { pt3dadd( 410.218, 490.148, 31.1301, 0.2288 ) }
    dend_2 { pt3dadd( 410.996, 489.689, 29.4473, 0.2288 ) }
    dend_2 { pt3dadd( 411.936, 489.648, 27.8538, 0.2542 ) }
    dend_2 { pt3dadd( 412.875, 489.608, 26.2604, 0.3304 ) }
    dend_2 { pt3dadd( 413.816, 489.567, 24.6669, 0.4068 ) }
    dend_2 { pt3dadd( 414.767, 489.841, 23.856, 0.4322 ) }
    dend_2 { pt3dadd( 415.59, 490.538, 23.595, 0.3814 ) }
    dend_2 { pt3dadd( 415.958, 491.504, 22.388, 0.3814 ) }
    dend_2 { pt3dadd( 416.325, 492.468, 21.1809, 0.4576 ) }
    dend_2 { pt3dadd( 416.693, 493.432, 19.9738, 0.6864 ) }
    // Section: dend_27, id: dend_27, parent: dend_23 (entry count 62/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 295.258, 485.135, 72.1496, 0.2288 ) }
    dend_27 { pt3dadd( 294.788, 485.821, 72.1748, 0.2288 ) }
    dend_27 { pt3dadd( 294.142, 486.765, 72.2092, 0.2288 ) }
    dend_27 { pt3dadd( 293.421, 487.647, 72.2109, 0.2288 ) }
    dend_27 { pt3dadd( 292.612, 488.456, 72.1745, 0.2288 ) }
    dend_27 { pt3dadd( 291.803, 489.265, 72.1384, 0.2288 ) }
    dend_27 { pt3dadd( 290.832, 489.678, 72.802, 0.2288 ) }
    dend_27 { pt3dadd( 289.786, 489.908, 73.7867, 0.2288 ) }
    dend_27 { pt3dadd( 288.741, 490.138, 74.7718, 0.2288 ) }
    dend_27 { pt3dadd( 287.695, 490.369, 75.7565, 0.2288 ) }
    dend_27 { pt3dadd( 286.655, 490.648, 76.5853, 0.2288 ) }
    dend_27 { pt3dadd( 285.646, 491.188, 76.5817, 0.2288 ) }
    dend_27 { pt3dadd( 284.639, 491.728, 76.578, 0.2288 ) }
    dend_27 { pt3dadd( 283.634, 492.273, 76.5744, 0.2288 ) }
    dend_27 { pt3dadd( 282.761, 493.014, 76.5755, 0.2288 ) }
    dend_27 { pt3dadd( 281.888, 493.753, 76.5766, 0.2288 ) }
    dend_27 { pt3dadd( 281.015, 494.493, 76.5775, 0.2288 ) }
    dend_27 { pt3dadd( 280.144, 495.233, 76.5786, 0.2288 ) }
    dend_27 { pt3dadd( 279.271, 495.972, 76.5797, 0.2288 ) }
    dend_27 { pt3dadd( 278.377, 496.664, 76.6189, 0.2288 ) }
    dend_27 { pt3dadd( 277.261, 496.827, 77.077, 0.2288 ) }
    dend_27 { pt3dadd( 276.144, 496.989, 77.5351, 0.2288 ) }
    dend_27 { pt3dadd( 275.027, 497.151, 77.9932, 0.2288 ) }
    dend_27 { pt3dadd( 273.91, 497.314, 78.4512, 0.2288 ) }
    dend_27 { pt3dadd( 272.794, 497.476, 78.9093, 0.2288 ) }
    dend_27 { pt3dadd( 271.73, 497.794, 79.1885, 0.2288 ) }
    dend_27 { pt3dadd( 270.768, 498.413, 79.1241, 0.2288 ) }
    dend_27 { pt3dadd( 269.685, 498.489, 79.1325, 0.2288 ) }
    dend_27 { pt3dadd( 268.552, 498.334, 79.1717, 0.2288 ) }
    dend_27 { pt3dadd( 267.434, 498.306, 79.5528, 0.2288 ) }
    dend_27 { pt3dadd( 266.332, 498.398, 80.2645, 0.2288 ) }
    dend_27 { pt3dadd( 265.229, 498.491, 80.9763, 0.2288 ) }
    dend_27 { pt3dadd( 264.127, 498.584, 81.688, 0.2288 ) }
    dend_27 { pt3dadd( 263.024, 498.678, 82.3998, 0.2288 ) }
    dend_27 { pt3dadd( 261.987, 498.885, 83.0183, 0.2288 ) }
    dend_27 { pt3dadd( 261.285, 499.608, 83.1219, 0.2288 ) }
    dend_27 { pt3dadd( 260.196, 499.33, 83.6391, 0.2288 ) }
    dend_27 { pt3dadd( 259.106, 499.053, 84.1562, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_27 { pt3dadd( 258.017, 498.775, 84.6737, 0.2288 ) }
    dend_27 { pt3dadd( 256.926, 498.497, 85.1908, 0.2288 ) }
    dend_27 { pt3dadd( 255.873, 498.561, 85.5078, 0.2288 ) }
    dend_27 { pt3dadd( 254.93, 499.148, 85.7601, 0.2288 ) }
    dend_27 { pt3dadd( 254.288, 499.926, 87.0822, 0.2288 ) }
    dend_27 { pt3dadd( 253.646, 500.704, 88.4047, 0.2288 ) }
    dend_27 { pt3dadd( 253.005, 501.482, 89.7271, 0.2288 ) }
    dend_27 { pt3dadd( 252.363, 502.259, 91.0496, 0.2288 ) }
    dend_27 { pt3dadd( 252.47, 503.32, 91.266, 0.2288 ) }
    dend_27 { pt3dadd( 252.724, 504.435, 91.2682, 0.2288 ) }
    dend_27 { pt3dadd( 252.561, 505.513, 91.2383, 0.2288 ) }
    dend_27 { pt3dadd( 252.067, 506.522, 91.1957, 0.2288 ) }
    dend_27 { pt3dadd( 251.044, 507.033, 91.2643, 0.2288 ) }
    dend_27 { pt3dadd( 250.205, 507.634, 91.8112, 0.2288 ) }
    dend_27 { pt3dadd( 249.811, 508.454, 93.5094, 0.2288 ) }
    dend_27 { pt3dadd( 249.417, 509.275, 95.2073, 0.2288 ) }
    dend_27 { pt3dadd( 248.947, 510.195, 96.3178, 0.2288 ) }
    dend_27 { pt3dadd( 248.442, 511.162, 97.1678, 0.2288 ) }
    dend_27 { pt3dadd( 247.939, 512.129, 98.0176, 0.2288 ) }
    dend_27 { pt3dadd( 247.435, 513.095, 98.8677, 0.2288 ) }
    dend_27 { pt3dadd( 246.409, 513.578, 98.8873, 0.2288 ) }
    dend_27 { pt3dadd( 245.364, 514.043, 98.8753, 0.2288 ) }
    dend_27 { pt3dadd( 244.891, 515.084, 98.8887, 0.2288 ) }
    dend_27 { pt3dadd( 244.421, 516.126, 98.9022, 0.2288 ) }
    dend_27 { pt3dadd( 244.38, 517.249, 98.8929, 0.2288 ) }
    dend_27 { pt3dadd( 244.444, 518.391, 98.8778, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 26/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 295.258, 485.135, 72.1496, 0.2288 ) }
    dend_24 { pt3dadd( 294.741, 484.862, 72.6734, 0.2288 ) }
    dend_24 { pt3dadd( 293.792, 484.358, 73.6355, 0.2288 ) }
    dend_24 { pt3dadd( 292.841, 483.856, 74.5973, 0.2288 ) }
    dend_24 { pt3dadd( 291.727, 483.888, 74.7281, 0.2288 ) }
    dend_24 { pt3dadd( 290.587, 483.997, 74.739, 0.2288 ) }
    dend_24 { pt3dadd( 289.814, 483.285, 74.7155, 0.2288 ) }
    dend_24 { pt3dadd( 289.133, 482.366, 74.683, 0.2288 ) }
    dend_24 { pt3dadd( 288.451, 481.447, 74.6505, 0.2288 ) }
    dend_24 { pt3dadd( 287.771, 480.528, 74.618, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 36/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 310.861, 487.125, 65.13, 0.2288 ) }
    dend_13 { pt3dadd( 310.642, 486.594, 65.133, 0.2288 ) }
    dend_13 { pt3dadd( 310.206, 485.535, 65.1392, 0.2288 ) }
    dend_13 { pt3dadd( 309.63, 484.553, 65.1277, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 40/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 310.861, 487.125, 65.13, 0.2288 ) }
    dend_12 { pt3dadd( 311.167, 486.335, 64.9701, 0.2288 ) }
    dend_12 { pt3dadd( 311.579, 485.271, 64.755, 0.2288 ) }
    dend_12 { pt3dadd( 311.99, 484.207, 64.54, 0.2288 ) }
    dend_12 { pt3dadd( 312.402, 483.143, 64.325, 0.2288 ) }
    dend_12 { pt3dadd( 312.813, 482.079, 64.1096, 0.2288 ) }
    dend_12 { pt3dadd( 313.324, 481.076, 63.9506, 0.2288 ) }
    dend_12 { pt3dadd( 314.1, 480.236, 63.9397, 0.2288 ) }
    dend_12 { pt3dadd( 314.877, 479.396, 63.929, 0.2288 ) }
    dend_12 { pt3dadd( 315.652, 478.555, 63.9184, 0.2288 ) }
    dend_12 { pt3dadd( 316.144, 477.543, 64.2102, 0.2288 ) }
    dend_12 { pt3dadd( 316.571, 476.492, 64.5714, 0.2288 ) }
    dend_12 { pt3dadd( 316.998, 475.441, 64.9328, 0.2288 ) }
    dend_12 { pt3dadd( 317.423, 474.389, 65.294, 0.2288 ) }
    dend_12 { pt3dadd( 317.85, 473.338, 65.6552, 0.2288 ) }
    dend_12 { pt3dadd( 318.277, 472.287, 66.0164, 0.2288 ) }
    dend_12 { pt3dadd( 318.703, 471.235, 66.3779, 0.2288 ) }
    dend_12 { pt3dadd( 319.405, 470.351, 66.4588, 0.2288 ) }
    dend_12 { pt3dadd( 320.184, 469.514, 66.4605, 0.2288 ) }
    dend_12 { pt3dadd( 320.964, 468.676, 66.4619, 0.2288 ) }
    dend_12 { pt3dadd( 321.743, 467.839, 66.4636, 0.2288 ) }
    dend_12 { pt3dadd( 322.182, 466.791, 66.4496, 0.2288 ) }
    dend_12 { pt3dadd( 322.585, 465.72, 66.4336, 0.2288 ) }
    dend_12 { pt3dadd( 322.987, 464.649, 66.418, 0.2288 ) }
    dend_12 { pt3dadd( 323.388, 463.578, 66.402, 0.2288 ) }
    dend_12 { pt3dadd( 323.79, 462.507, 66.386, 0.2288 ) }
    dend_12 { pt3dadd( 324.171, 461.432, 66.3715, 0.2288 ) }
    dend_12 { pt3dadd( 324.085, 460.292, 66.3824, 0.2288 ) }
    dend_12 { pt3dadd( 323.999, 459.151, 66.3933, 0.2288 ) }
    dend_12 { pt3dadd( 323.913, 458.011, 66.4042, 0.2288 ) }
    dend_12 { pt3dadd( 323.913, 456.9, 66.5146, 0.2288 ) }
    dend_12 { pt3dadd( 324.554, 456.019, 67.3674, 0.2288 ) }
    dend_12 { pt3dadd( 325.196, 455.138, 68.2203, 0.2288 ) }
    dend_12 { pt3dadd( 325.836, 454.257, 69.0732, 0.2288 ) }
    dend_12 { pt3dadd( 326.478, 453.376, 69.9264, 0.2288 ) }
    dend_12 { pt3dadd( 326.9, 452.359, 70.2747, 0.2288 ) }
    dend_12 { pt3dadd( 327.172, 451.247, 70.2744, 0.2288 ) }
    dend_12 { pt3dadd( 327.445, 450.137, 70.2738, 0.2288 ) }
    dend_12 { pt3dadd( 327.716, 449.026, 70.2733, 0.2288 ) }
    dend_12 { pt3dadd( 327.998, 447.917, 70.2736, 0.2288 ) }
    dend_12 { pt3dadd( 328.497, 446.889, 70.2839, 0.2288 ) }
    dend_12 { pt3dadd( 328.996, 445.859, 70.2943, 0.2288 ) }
    dend_12 { pt3dadd( 329.495, 444.829, 70.3044, 0.2542 ) }
    dend_12 { pt3dadd( 329.949, 443.78, 70.3018, 0.2796 ) }
    dend_12 { pt3dadd( 330.348, 442.709, 70.2828, 0.305 ) }
    dend_12 { pt3dadd( 330.747, 441.637, 70.2638, 0.2796 ) }
    dend_12 { pt3dadd( 331.146, 440.565, 70.2447, 0.2542 ) }
    dend_12 { pt3dadd( 331.545, 439.493, 70.2257, 0.2288 ) }
    dend_12 { pt3dadd( 332.217, 438.57, 70.236, 0.2288 ) }
    dend_12 { pt3dadd( 332.906, 437.657, 70.2484, 0.2288 ) }
    dend_12 { pt3dadd( 333.595, 436.744, 70.2607, 0.2288 ) }
    dend_12 { pt3dadd( 334.284, 435.83, 70.273, 0.2288 ) }
    dend_12 { pt3dadd( 334.973, 434.917, 70.285, 0.2288 ) }
    dend_12 { pt3dadd( 335.662, 434.004, 70.2974, 0.2288 ) }
    dend_12 { pt3dadd( 336.351, 433.09, 70.3097, 0.2288 ) }
    dend_12 { pt3dadd( 337.195, 432.372, 70.959, 0.2288 ) }
    dend_12 { pt3dadd( 338.052, 431.669, 71.654, 0.2288 ) }
    dend_12 { pt3dadd( 338.908, 430.964, 72.3486, 0.2288 ) }
    dend_12 { pt3dadd( 339.763, 430.261, 73.0436, 0.2288 ) }
    dend_12 { pt3dadd( 340.662, 429.598, 73.5092, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( 341.653, 429.026, 73.4852, 0.2288 ) }
    dend_12 { pt3dadd( 342.589, 428.401, 73.5678, 0.2288 ) }
    dend_12 { pt3dadd( 343.241, 427.499, 74.2115, 0.2288 ) }
    dend_12 { pt3dadd( 343.894, 426.596, 74.8555, 0.2288 ) }
    dend_12 { pt3dadd( 344.546, 425.694, 75.4992, 0.2288 ) }
    dend_12 { pt3dadd( 345.2, 424.792, 76.1429, 0.2288 ) }
    dend_12 { pt3dadd( 345.852, 423.89, 76.7869, 0.2288 ) }
    dend_12 { pt3dadd( 346.504, 422.988, 77.4306, 0.2288 ) }
    dend_12 { pt3dadd( 347.157, 422.086, 78.0744, 0.2288 ) }
    dend_12 { pt3dadd( 347.809, 421.184, 78.7184, 0.2288 ) }
    dend_12 { pt3dadd( 348.55, 420.451, 79.6807, 0.2288 ) }
    dend_12 { pt3dadd( 349.405, 419.934, 81.0468, 0.2288 ) }
    dend_12 { pt3dadd( 350.258, 419.429, 82.3984, 0.2288 ) }
    dend_12 { pt3dadd( 351.127, 420.174, 82.3777, 0.2288 ) }
    dend_12 { pt3dadd( 352.045, 420.781, 82.3446, 0.2288 ) }
    dend_12 { pt3dadd( 353.189, 420.785, 82.2598, 0.2288 ) }
    // Section: apic_13, id: apic_13, parent: apic_7 (entry count 16/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 349.463, 496.52, 64.5448, 0.2288 ) }
    apic_13 { pt3dadd( 348.454, 497.283, 64.2776, 0.2796 ) }
    apic_13 { pt3dadd( 347.546, 497.971, 64.0371, 0.305 ) }
    apic_13 { pt3dadd( 346.821, 498.817, 63.777, 0.2796 ) }
    apic_13 { pt3dadd( 346.269, 499.812, 63.499, 0.2542 ) }
    apic_13 { pt3dadd( 345.717, 500.808, 63.2209, 0.2288 ) }
    apic_13 { pt3dadd( 345.164, 501.804, 62.9426, 0.2288 ) }
    apic_13 { pt3dadd( 344.628, 502.796, 62.6108, 0.2288 ) }
    apic_13 { pt3dadd( 344.434, 503.727, 61.0554, 0.2288 ) }
    apic_13 { pt3dadd( 344.241, 504.66, 59.5003, 0.2288 ) }
    apic_13 { pt3dadd( 344.046, 505.591, 57.9449, 0.2288 ) }
    apic_13 { pt3dadd( 343.869, 506.392, 56.1022, 0.2542 ) }
    apic_13 { pt3dadd( 343.728, 506.906, 53.6253, 0.2796 ) }
    apic_13 { pt3dadd( 343.588, 507.421, 51.1482, 0.305 ) }
    apic_13 { pt3dadd( 342.967, 507.71, 49.4133, 0.2796 ) }
    apic_13 { pt3dadd( 341.912, 507.795, 48.3482, 0.2542 ) }
    apic_13 { pt3dadd( 340.857, 507.88, 47.2833, 0.2288 ) }
    apic_13 { pt3dadd( 339.802, 507.966, 46.2185, 0.2288 ) }
    apic_13 { pt3dadd( 338.79, 508.23, 45.4745, 0.2288 ) }
    apic_13 { pt3dadd( 337.875, 508.918, 45.4826, 0.2288 ) }
    apic_13 { pt3dadd( 336.943, 509.431, 44.9613, 0.2288 ) }
    apic_13 { pt3dadd( 335.985, 509.65, 43.5291, 0.2542 ) }
    apic_13 { pt3dadd( 335.026, 509.867, 42.0972, 0.2796 ) }
    apic_13 { pt3dadd( 334.067, 510.084, 40.665, 0.305 ) }
    apic_13 { pt3dadd( 333.136, 510.449, 39.3187, 0.2796 ) }
    apic_13 { pt3dadd( 332.213, 510.854, 37.9963, 0.2542 ) }
    apic_13 { pt3dadd( 331.29, 511.258, 36.6738, 0.2288 ) }
    apic_13 { pt3dadd( 330.365, 511.663, 35.3511, 0.2288 ) }
    apic_13 { pt3dadd( 329.268, 511.845, 34.7287, 0.2288 ) }
    apic_13 { pt3dadd( 328.164, 512.02, 34.1298, 0.2288 ) }
    apic_13 { pt3dadd( 327.06, 512.194, 33.5308, 0.2288 ) }
    apic_13 { pt3dadd( 325.956, 512.368, 32.9319, 0.2288 ) }
    apic_13 { pt3dadd( 324.852, 512.543, 32.333, 0.2288 ) }
    apic_13 { pt3dadd( 323.748, 512.717, 31.7341, 0.2288 ) }
    apic_13 { pt3dadd( 322.845, 512.399, 30.8806, 0.2288 ) }
    apic_13 { pt3dadd( 322.123, 511.63, 29.7942, 0.2288 ) }
    apic_13 { pt3dadd( 321.402, 510.861, 28.7078, 0.2288 ) }
    apic_13 { pt3dadd( 320.68, 510.091, 27.6214, 0.2288 ) }
    apic_13 { pt3dadd( 319.959, 509.323, 26.535, 0.2288 ) }
    apic_13 { pt3dadd( 319.238, 508.554, 25.4486, 0.2288 ) }
    apic_13 { pt3dadd( 319.115, 507.881, 23.5416, 0.2288 ) }
    apic_13 { pt3dadd( 319.286, 507.258, 21.233, 0.2288 ) }
    apic_13 { pt3dadd( 319.456, 506.633, 18.9241, 0.2288 ) }
    apic_13 { pt3dadd( 319.473, 506.142, 16.905, 0.2796 ) }
    apic_13 { pt3dadd( 318.422, 506.594, 16.9151, 0.3814 ) }
    apic_13 { pt3dadd( 317.371, 507.045, 16.9252, 0.483 ) }
    apic_13 { pt3dadd( 316.891, 508.064, 16.6617, 0.483 ) }
    apic_13 { pt3dadd( 316.435, 509.108, 16.3864, 0.3814 ) }
    apic_13 { pt3dadd( 315.978, 510.15, 16.1112, 0.2796 ) }
    apic_13 { pt3dadd( 315.523, 511.193, 15.836, 0.2288 ) }
    apic_13 { pt3dadd( 315.067, 512.236, 15.5607, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 67/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 349.463, 496.52, 64.5448, 0.2288 ) }
    apic_8 { pt3dadd( 349.886, 497.253, 64.6727, 0.2288 ) }
    apic_8 { pt3dadd( 350.456, 498.243, 64.8455, 0.2288 ) }
    apic_8 { pt3dadd( 351.027, 499.231, 65.018, 0.2288 ) }
    apic_8 { pt3dadd( 351.597, 500.221, 65.1907, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 72/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 351.693, 469.509, 72.1748, 0.2288 ) }
    apic_4 { pt3dadd( 352.116, 469.136, 72.8126, 0.2288 ) }
    apic_4 { pt3dadd( 352.895, 468.451, 73.9878, 0.2288 ) }
    apic_4 { pt3dadd( 353.674, 467.764, 75.1629, 0.2288 ) }
    apic_4 { pt3dadd( 354.277, 466.813, 75.3122, 0.2288 ) }
    apic_4 { pt3dadd( 354.857, 465.827, 75.3287, 0.2288 ) }
    apic_4 { pt3dadd( 355.437, 464.84, 75.3449, 0.2288 ) }
    apic_4 { pt3dadd( 356.017, 463.854, 75.3614, 0.2288 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 80/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 351.693, 469.509, 72.1748, 0.2288 ) }
    apic_3 { pt3dadd( 351.868, 469.09, 72.0191, 0.2288 ) }
    apic_3 { pt3dadd( 352.305, 468.046, 71.6307, 0.2288 ) }
    apic_3 { pt3dadd( 352.743, 467.0, 71.2421, 0.2288 ) }
    apic_3 { pt3dadd( 353.18, 465.955, 70.8534, 0.2288 ) }
    apic_3 { pt3dadd( 353.617, 464.91, 70.4648, 0.2288 ) }
    apic_3 { pt3dadd( 354.132, 463.895, 70.2957, 0.2288 ) }
    apic_3 { pt3dadd( 354.702, 462.905, 70.2859, 0.2288 ) }
    apic_3 { pt3dadd( 355.273, 461.913, 70.2761, 0.2288 ) }
    apic_3 { pt3dadd( 355.843, 460.921, 70.2663, 0.2288 ) }
    apic_3 { pt3dadd( 356.198, 459.839, 70.259, 0.2288 ) }
    apic_3 { pt3dadd( 356.513, 458.738, 70.2523, 0.2542 ) }
    apic_3 { pt3dadd( 356.824, 457.676, 69.6665, 0.2796 ) }
    apic_3 { pt3dadd( 357.133, 456.629, 68.8304, 0.305 ) }
    apic_3 { pt3dadd( 357.441, 455.581, 67.9941, 0.2796 ) }
    apic_3 { pt3dadd( 357.751, 454.534, 67.158, 0.2542 ) }
    apic_3 { pt3dadd( 357.277, 453.538, 67.0502, 0.2288 ) }
    apic_3 { pt3dadd( 356.703, 452.548, 67.0334, 0.2288 ) }
    apic_3 { pt3dadd( 356.484, 451.459, 66.6879, 0.2542 ) }
    apic_3 { pt3dadd( 356.391, 450.335, 66.2253, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    apic_3 { pt3dadd( 356.299, 449.21, 65.7628, 0.305 ) }
    apic_3 { pt3dadd( 356.205, 448.085, 65.3002, 0.305 ) }
    apic_3 { pt3dadd( 356.184, 446.946, 65.158, 0.3304 ) }
    apic_3 { pt3dadd( 356.183, 445.802, 65.1031, 0.356 ) }
    apic_3 { pt3dadd( 356.183, 444.658, 65.1022, 0.356 ) }
    apic_3 { pt3dadd( 356.184, 443.514, 65.1213, 0.305 ) }
    apic_3 { pt3dadd( 356.621, 442.46, 65.114, 0.2542 ) }
    apic_3 { pt3dadd( 357.072, 441.409, 65.1056, 0.2288 ) }
    apic_3 { pt3dadd( 357.523, 440.357, 65.0975, 0.2288 ) }
    apic_3 { pt3dadd( 357.252, 439.255, 64.7853, 0.2288 ) }
    apic_3 { pt3dadd( 356.976, 438.152, 64.4711, 0.2288 ) }
    apic_3 { pt3dadd( 356.7, 437.049, 64.157, 0.2288 ) }
    apic_3 { pt3dadd( 356.424, 435.946, 63.8425, 0.2288 ) }
    apic_3 { pt3dadd( 356.148, 434.844, 63.5284, 0.2288 ) }
    apic_3 { pt3dadd( 355.872, 433.741, 63.2142, 0.2288 ) }
    apic_3 { pt3dadd( 355.596, 432.638, 62.8998, 0.2288 ) }
    apic_3 { pt3dadd( 355.3, 431.541, 62.6324, 0.2288 ) }
    apic_3 { pt3dadd( 354.887, 430.474, 62.6354, 0.2288 ) }
    apic_3 { pt3dadd( 354.474, 429.407, 62.6385, 0.2288 ) }
    apic_3 { pt3dadd( 354.061, 428.34, 62.6416, 0.2288 ) }
    apic_3 { pt3dadd( 353.026, 428.431, 62.1961, 0.2288 ) }
    apic_3 { pt3dadd( 351.922, 428.651, 61.7008, 0.2288 ) }
    apic_3 { pt3dadd( 350.854, 428.731, 61.1794, 0.2288 ) }
    apic_3 { pt3dadd( 349.993, 428.029, 60.5122, 0.2288 ) }
    apic_3 { pt3dadd( 349.133, 427.326, 59.8447, 0.2288 ) }
    apic_3 { pt3dadd( 348.542, 426.418, 59.5185, 0.2288 ) }
    apic_3 { pt3dadd( 348.188, 425.33, 59.4877, 0.2288 ) }
    apic_3 { pt3dadd( 347.833, 424.243, 59.4572, 0.2288 ) }
    apic_3 { pt3dadd( 347.477, 423.155, 59.4266, 0.2288 ) }
    apic_3 { pt3dadd( 347.122, 422.069, 59.4006, 0.2288 ) }
    apic_3 { pt3dadd( 346.752, 420.985, 59.4042, 0.2288 ) }
    apic_3 { pt3dadd( 346.383, 419.903, 59.4082, 0.2288 ) }
    apic_3 { pt3dadd( 346.014, 418.819, 59.4121, 0.2288 ) }
    apic_3 { pt3dadd( 345.645, 417.737, 59.416, 0.2288 ) }
    apic_3 { pt3dadd( 345.139, 416.719, 59.4255, 0.2288 ) }
    apic_3 { pt3dadd( 344.541, 415.743, 59.439, 0.2796 ) }
    apic_3 { pt3dadd( 343.944, 414.767, 59.4524, 0.3304 ) }
    apic_3 { pt3dadd( 343.397, 413.786, 59.4644, 0.4322 ) }
    apic_3 { pt3dadd( 343.717, 412.688, 59.4569, 0.4322 ) }
    apic_3 { pt3dadd( 344.037, 411.59, 59.449, 0.4322 ) }
    apic_3 { pt3dadd( 344.483, 410.542, 59.4493, 0.3304 ) }
    apic_3 { pt3dadd( 345.007, 409.525, 59.4552, 0.305 ) }
    apic_3 { pt3dadd( 345.531, 408.508, 59.4608, 0.305 ) }
    apic_3 { pt3dadd( 346.055, 407.491, 59.4664, 0.4576 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 44/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 347.532, 524.37, 72.1294, 0.2288 ) }
    dend_7 { pt3dadd( 347.553, 524.651, 71.5756, 0.2288 ) }
    dend_7 { pt3dadd( 347.619, 525.541, 69.8239, 0.2288 ) }
    dend_7 { pt3dadd( 347.686, 526.431, 68.0722, 0.2288 ) }
    dend_7 { pt3dadd( 347.753, 527.321, 66.3208, 0.2288 ) }
    dend_7 { pt3dadd( 347.62, 528.275, 65.2212, 0.2288 ) }
    dend_7 { pt3dadd( 347.264, 529.337, 65.1512, 0.2288 ) }
    dend_7 { pt3dadd( 347.543, 530.446, 65.1291, 0.2288 ) }
    dend_7 { pt3dadd( 347.82, 531.556, 65.107, 0.2288 ) }
    dend_7 { pt3dadd( 348.247, 532.585, 65.1081, 0.2288 ) }
    dend_7 { pt3dadd( 349.026, 533.422, 65.1647, 0.2288 ) }
    dend_7 { pt3dadd( 349.816, 534.235, 65.0146, 0.2288 ) }
    dend_7 { pt3dadd( 350.631, 534.99, 64.3499, 0.2288 ) }
    dend_7 { pt3dadd( 351.447, 535.744, 63.6852, 0.2288 ) }
    dend_7 { pt3dadd( 352.263, 536.499, 63.0204, 0.2288 ) }
    dend_7 { pt3dadd( 353.078, 537.254, 62.3557, 0.2542 ) }
    dend_7 { pt3dadd( 353.471, 538.142, 61.6644, 0.305 ) }
    dend_7 { pt3dadd( 353.247, 539.223, 60.9342, 0.3814 ) }
    dend_7 { pt3dadd( 353.023, 540.305, 60.2042, 0.4068 ) }
    dend_7 { pt3dadd( 352.799, 541.387, 59.474, 0.3814 ) }
    dend_7 { pt3dadd( 352.575, 542.468, 58.7437, 0.305 ) }
    dend_7 { pt3dadd( 352.328, 543.546, 58.0493, 0.2542 ) }
    dend_7 { pt3dadd( 351.978, 544.614, 57.5142, 0.2288 ) }
    dend_7 { pt3dadd( 351.628, 545.681, 56.9789, 0.2288 ) }
    dend_7 { pt3dadd( 351.278, 546.747, 56.4438, 0.2542 ) }
    dend_7 { pt3dadd( 350.928, 547.815, 55.9087, 0.2796 ) }
    dend_7 { pt3dadd( 350.578, 548.882, 55.3734, 0.3304 ) }
    dend_7 { pt3dadd( 350.227, 549.948, 54.8383, 0.3304 ) }
    dend_7 { pt3dadd( 349.861, 551.008, 54.325, 0.3304 ) }
    dend_7 { pt3dadd( 349.129, 551.886, 54.3161, 0.2796 ) }
    dend_7 { pt3dadd( 348.396, 552.765, 54.3071, 0.2542 ) }
    dend_7 { pt3dadd( 347.664, 553.643, 54.3026, 0.2288 ) }
    dend_7 { pt3dadd( 346.969, 554.526, 54.829, 0.2288 ) }
    dend_7 { pt3dadd( 346.505, 555.468, 55.2289, 0.2288 ) }
    dend_7 { pt3dadd( 346.739, 556.588, 55.2448, 0.2542 ) }
    dend_7 { pt3dadd( 346.884, 557.718, 55.2583, 0.2796 ) }
    dend_7 { pt3dadd( 346.917, 558.861, 55.2684, 0.305 ) }
    dend_7 { pt3dadd( 346.951, 560.005, 55.2787, 0.2796 ) }
    dend_7 { pt3dadd( 346.984, 561.148, 55.2891, 0.305 ) }
    dend_7 { pt3dadd( 347.017, 562.292, 55.2994, 0.3814 ) }
    dend_7 { pt3dadd( 347.052, 563.436, 55.3098, 0.5338 ) }
    dend_7 { pt3dadd( 347.19, 564.555, 55.3255, 0.6102 ) }
    dend_7 { pt3dadd( 347.661, 565.597, 55.358, 0.6102 ) }
    dend_7 { pt3dadd( 348.133, 566.639, 55.3904, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 347.532, 524.37, 72.1294, 0.2288 ) }
    dend_6 { pt3dadd( 347.946, 524.686, 72.1473, 0.2288 ) }
    dend_6 { pt3dadd( 348.855, 525.381, 72.1868, 0.2288 ) }
    dend_6 { pt3dadd( 349.5, 526.185, 71.7676, 0.2288 ) }
    dend_6 { pt3dadd( 349.659, 527.192, 70.4973, 0.2288 ) }
    dend_6 { pt3dadd( 349.817, 528.2, 69.2272, 0.2288 ) }
    dend_6 { pt3dadd( 350.635, 528.843, 68.9508, 0.2288 ) }
    dend_6 { pt3dadd( 351.645, 529.378, 68.9674, 0.2288 ) }
    dend_6 { pt3dadd( 351.871, 530.417, 69.5618, 0.2288 ) }
    dend_6 { pt3dadd( 351.996, 531.521, 70.2304, 0.2542 ) }
    dend_6 { pt3dadd( 352.122, 532.625, 70.8988, 0.305 ) }
    dend_6 { pt3dadd( 351.815, 533.724, 70.8817, 0.356 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_6 { pt3dadd( 351.501, 534.825, 70.8506, 0.356 ) }
    dend_6 { pt3dadd( 351.258, 535.925, 70.7969, 0.305 ) }
    dend_6 { pt3dadd( 351.525, 537.034, 70.5835, 0.2796 ) }
    dend_6 { pt3dadd( 351.791, 538.143, 70.3704, 0.2796 ) }
    dend_6 { pt3dadd( 351.99, 539.259, 70.2111, 0.305 ) }
    dend_6 { pt3dadd( 351.927, 540.402, 70.2579, 0.305 ) }
    dend_6 { pt3dadd( 352.29, 541.344, 70.2635, 0.356 ) }
    dend_6 { pt3dadd( 352.737, 542.237, 70.2467, 0.4576 ) }
    dend_6 { pt3dadd( 352.624, 543.375, 70.2666, 0.5338 ) }
    dend_6 { pt3dadd( 352.511, 544.513, 70.2867, 0.5338 ) }
    dend_6 { pt3dadd( 352.398, 545.625, 70.719, 0.4576 ) }
    dend_6 { pt3dadd( 352.283, 546.708, 71.5739, 0.4068 ) }
    dend_6 { pt3dadd( 352.261, 547.841, 71.7413, 0.356 ) }
    dend_6 { pt3dadd( 352.261, 548.985, 71.7475, 0.305 ) }
    dend_6 { pt3dadd( 352.26, 550.129, 71.7534, 0.2796 ) }
    dend_6 { pt3dadd( 352.26, 551.273, 71.7592, 0.2796 ) }
    dend_6 { pt3dadd( 352.26, 552.417, 71.7654, 0.3304 ) }
    dend_6 { pt3dadd( 352.751, 553.448, 71.7816, 0.3304 ) }
    dend_6 { pt3dadd( 353.252, 554.475, 71.7982, 0.3304 ) }
    dend_6 { pt3dadd( 353.753, 555.503, 71.815, 0.2796 ) }
    dend_6 { pt3dadd( 354.254, 556.532, 71.8315, 0.2542 ) }
    dend_6 { pt3dadd( 354.673, 557.593, 71.8472, 0.2542 ) }
    dend_6 { pt3dadd( 354.987, 558.693, 71.8617, 0.2796 ) }
    dend_6 { pt3dadd( 355.299, 559.792, 71.8766, 0.305 ) }
    dend_6 { pt3dadd( 355.612, 560.893, 71.8911, 0.2796 ) }
    dend_6 { pt3dadd( 355.926, 561.993, 71.9057, 0.2542 ) }
    dend_6 { pt3dadd( 355.899, 563.105, 71.916, 0.2288 ) }
    dend_6 { pt3dadd( 355.66, 564.223, 71.9236, 0.2288 ) }
    dend_6 { pt3dadd( 355.42, 565.342, 71.9312, 0.2288 ) }
    dend_6 { pt3dadd( 355.181, 566.461, 71.939, 0.2288 ) }
    dend_6 { pt3dadd( 354.933, 567.577, 71.9298, 0.2288 ) }
    dend_6 { pt3dadd( 354.678, 568.693, 71.9065, 0.2542 ) }
    dend_6 { pt3dadd( 354.423, 569.808, 71.8833, 0.2796 ) }
    dend_6 { pt3dadd( 354.169, 570.924, 71.86, 0.305 ) }
    dend_6 { pt3dadd( 353.913, 572.038, 71.8368, 0.2796 ) }
    dend_6 { pt3dadd( 353.713, 573.165, 71.8306, 0.2796 ) }
    dend_6 { pt3dadd( 353.52, 574.293, 71.827, 0.2796 ) }
    dend_6 { pt3dadd( 353.327, 575.419, 71.8234, 0.305 ) }
    dend_6 { pt3dadd( 353.603, 576.426, 71.7651, 0.2796 ) }
    dend_6 { pt3dadd( 354.315, 577.322, 71.6565, 0.2542 ) }
    dend_6 { pt3dadd( 355.025, 578.216, 71.5478, 0.2288 ) }
    dend_6 { pt3dadd( 355.736, 579.112, 71.4389, 0.2288 ) }
    dend_6 { pt3dadd( 356.447, 580.007, 71.3303, 0.2288 ) }
    dend_6 { pt3dadd( 357.158, 580.903, 71.2216, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 44/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 287.771, 480.528, 74.618, 0.2288 ) }
    dend_26 { pt3dadd( 286.967, 479.897, 75.5065, 0.2288 ) }
    dend_26 { pt3dadd( 286.118, 479.231, 76.4431, 0.2288 ) }
    dend_26 { pt3dadd( 285.259, 478.573, 77.3147, 0.2288 ) }
    dend_26 { pt3dadd( 284.255, 478.025, 77.299, 0.2288 ) }
    dend_26 { pt3dadd( 283.251, 477.478, 77.2834, 0.2288 ) }
    dend_26 { pt3dadd( 282.189, 477.07, 77.2971, 0.2288 ) }
    dend_26 { pt3dadd( 281.147, 476.666, 77.3231, 0.2288 ) }
    dend_26 { pt3dadd( 280.402, 475.798, 77.3066, 0.2542 ) }
    dend_26 { pt3dadd( 279.659, 474.928, 77.2901, 0.2796 ) }
    dend_26 { pt3dadd( 278.747, 474.355, 77.2808, 0.305 ) }
    dend_26 { pt3dadd( 277.619, 474.167, 77.2803, 0.2796 ) }
    dend_26 { pt3dadd( 276.49, 473.979, 77.28, 0.2542 ) }
    dend_26 { pt3dadd( 275.362, 473.791, 77.2797, 0.2288 ) }
    dend_26 { pt3dadd( 274.22, 473.76, 77.2677, 0.2288 ) }
    dend_26 { pt3dadd( 273.076, 473.76, 77.2534, 0.2288 ) }
    dend_26 { pt3dadd( 271.932, 473.761, 77.2391, 0.2288 ) }
    dend_26 { pt3dadd( 270.788, 473.761, 77.2248, 0.2288 ) }
    dend_26 { pt3dadd( 269.755, 473.408, 77.5093, 0.2288 ) }
    dend_26 { pt3dadd( 268.795, 472.818, 77.9937, 0.2288 ) }
    dend_26 { pt3dadd( 267.835, 472.227, 78.4781, 0.2288 ) }
    dend_26 { pt3dadd( 266.876, 471.638, 78.9622, 0.2288 ) }
    dend_26 { pt3dadd( 265.829, 471.567, 79.7919, 0.2288 ) }
    dend_26 { pt3dadd( 264.756, 471.662, 80.7316, 0.2288 ) }
    dend_26 { pt3dadd( 263.682, 471.758, 81.671, 0.2288 ) }
    dend_26 { pt3dadd( 262.646, 471.603, 82.418, 0.2288 ) }
    dend_26 { pt3dadd( 261.676, 471.023, 82.8366, 0.2288 ) }
    dend_26 { pt3dadd( 260.705, 470.441, 83.2555, 0.2288 ) }
    dend_26 { pt3dadd( 259.738, 469.861, 83.7054, 0.2288 ) }
    dend_26 { pt3dadd( 258.871, 469.297, 84.9016, 0.2288 ) }
    dend_26 { pt3dadd( 258.004, 468.735, 86.0978, 0.2288 ) }
    dend_26 { pt3dadd( 257.029, 468.389, 86.8014, 0.2288 ) }
    dend_26 { pt3dadd( 256.019, 468.173, 87.1514, 0.2288 ) }
    dend_26 { pt3dadd( 255.322, 467.45, 88.4918, 0.2288 ) }
    dend_26 { pt3dadd( 254.625, 466.727, 89.8321, 0.2288 ) }
    dend_26 { pt3dadd( 253.737, 466.345, 90.5867, 0.2288 ) }
    dend_26 { pt3dadd( 252.595, 466.416, 90.5584, 0.2288 ) }
    dend_26 { pt3dadd( 251.519, 466.207, 91.2248, 0.2288 ) }
    dend_26 { pt3dadd( 250.455, 465.945, 92.0279, 0.2288 ) }
    dend_26 { pt3dadd( 249.391, 465.682, 92.8309, 0.2288 ) }
    dend_26 { pt3dadd( 248.327, 465.42, 93.634, 0.2288 ) }
    dend_26 { pt3dadd( 247.216, 465.179, 93.7762, 0.2288 ) }
    dend_26 { pt3dadd( 246.097, 464.943, 93.7804, 0.2288 ) }
    dend_26 { pt3dadd( 245.064, 464.461, 93.7577, 0.2288 ) }
    dend_26 { pt3dadd( 244.04, 463.949, 93.732, 0.2288 ) }
    dend_26 { pt3dadd( 243.007, 463.46, 93.7202, 0.2288 ) }
    dend_26 { pt3dadd( 241.94, 463.05, 93.7583, 0.2288 ) }
    dend_26 { pt3dadd( 240.873, 462.639, 93.7964, 0.2288 ) }
    dend_26 { pt3dadd( 239.771, 462.385, 93.8148, 0.2288 ) }
    dend_26 { pt3dadd( 238.629, 462.33, 93.8084, 0.2288 ) }
    dend_26 { pt3dadd( 237.486, 462.274, 93.802, 0.2288 ) }
    dend_26 { pt3dadd( 236.343, 462.218, 93.7958, 0.2288 ) }
    dend_26 { pt3dadd( 235.239, 462.222, 94.2038, 0.2288 ) }
    dend_26 { pt3dadd( 234.206, 462.334, 95.3736, 0.2288 ) }
    dend_26 { pt3dadd( 233.172, 462.446, 96.5437, 0.2288 ) }
    dend_26 { pt3dadd( 232.572, 461.809, 96.9688, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( 232.232, 460.716, 96.941, 0.2288 ) }
    dend_26 { pt3dadd( 231.19, 461.021, 96.9273, 0.2288 ) }
    dend_26 { pt3dadd( 230.11, 461.398, 96.9144, 0.2288 ) }
    dend_26 { pt3dadd( 228.982, 461.566, 96.9175, 0.2288 ) }
    dend_26 { pt3dadd( 227.86, 461.665, 96.9248, 0.2288 ) }
    dend_26 { pt3dadd( 227.282, 460.677, 96.9732, 0.2288 ) }
    dend_26 { pt3dadd( 226.356, 460.373, 96.689, 0.2288 ) }
    dend_26 { pt3dadd( 225.232, 460.459, 96.2142, 0.2288 ) }
    dend_26 { pt3dadd( 224.108, 460.545, 95.7396, 0.2288 ) }
    dend_26 { pt3dadd( 223.348, 459.84, 95.6665, 0.2288 ) }
    dend_26 { pt3dadd( 222.616, 459.119, 95.8768, 0.2288 ) }
    dend_26 { pt3dadd( 221.555, 459.33, 96.784, 0.2288 ) }
    dend_26 { pt3dadd( 220.493, 459.539, 97.6909, 0.2288 ) }
    dend_26 { pt3dadd( 219.432, 459.75, 98.5981, 0.2288 ) }
    dend_26 { pt3dadd( 218.403, 459.877, 99.4428, 0.2288 ) }
    dend_26 { pt3dadd( 217.828, 458.888, 99.4456, 0.2288 ) }
    dend_26 { pt3dadd( 217.409, 457.831, 99.4815, 0.2288 ) }
    dend_26 { pt3dadd( 217.065, 456.74, 99.533, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 18/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 287.771, 480.528, 74.618, 0.2288 ) }
    dend_25 { pt3dadd( 287.281, 480.546, 75.026, 0.2288 ) }
    dend_25 { pt3dadd( 286.199, 480.585, 75.9276, 0.2288 ) }
    dend_25 { pt3dadd( 285.117, 480.624, 76.8295, 0.2288 ) }
    dend_25 { pt3dadd( 284.099, 480.988, 77.2349, 0.2542 ) }
    dend_25 { pt3dadd( 283.128, 481.594, 77.2694, 0.2796 ) }
    dend_25 { pt3dadd( 282.158, 482.199, 77.3035, 0.305 ) }
    dend_25 { pt3dadd( 281.076, 482.132, 77.2391, 0.2796 ) }
    dend_25 { pt3dadd( 279.973, 482.159, 77.1994, 0.2542 ) }
    dend_25 { pt3dadd( 278.885, 482.513, 77.2198, 0.2288 ) }
    dend_25 { pt3dadd( 277.797, 482.866, 77.2402, 0.2288 ) }
    dend_25 { pt3dadd( 276.709, 483.22, 77.2604, 0.2288 ) }
    dend_25 { pt3dadd( 275.663, 483.659, 77.2626, 0.2288 ) }
    dend_25 { pt3dadd( 274.704, 484.283, 77.2254, 0.2288 ) }
    dend_25 { pt3dadd( 273.745, 484.907, 77.1879, 0.2288 ) }
    dend_25 { pt3dadd( 272.608, 484.985, 77.2243, 0.2288 ) }
    dend_25 { pt3dadd( 271.476, 485.075, 77.3245, 0.2542 ) }
    dend_25 { pt3dadd( 270.444, 485.471, 78.0486, 0.2796 ) }
    dend_25 { pt3dadd( 269.412, 485.866, 78.7724, 0.305 ) }
    dend_25 { pt3dadd( 268.38, 486.262, 79.4965, 0.2796 ) }
    dend_25 { pt3dadd( 267.348, 486.658, 80.2206, 0.2542 ) }
    dend_25 { pt3dadd( 266.316, 487.053, 80.9444, 0.2542 ) }
    dend_25 { pt3dadd( 265.193, 486.94, 81.0466, 0.2796 ) }
    dend_25 { pt3dadd( 264.135, 486.567, 81.0692, 0.3304 ) }
    dend_25 { pt3dadd( 263.145, 485.992, 81.0737, 0.3304 ) }
    dend_25 { pt3dadd( 262.157, 485.418, 81.0782, 0.3304 ) }
    dend_25 { pt3dadd( 261.167, 484.842, 81.0827, 0.2796 ) }
    dend_25 { pt3dadd( 260.178, 484.268, 81.0872, 0.2542 ) }
    dend_25 { pt3dadd( 259.112, 483.89, 81.0986, 0.2288 ) }
    dend_25 { pt3dadd( 257.995, 483.648, 81.1149, 0.2288 ) }
    dend_25 { pt3dadd( 256.882, 483.553, 81.1202, 0.2288 ) }
    dend_25 { pt3dadd( 255.781, 483.868, 81.0947, 0.2288 ) }
    dend_25 { pt3dadd( 254.682, 484.183, 81.0692, 0.2288 ) }
    dend_25 { pt3dadd( 253.582, 484.498, 81.0438, 0.2288 ) }
    dend_25 { pt3dadd( 252.47, 484.437, 81.0533, 0.2288 ) }
    dend_25 { pt3dadd( 251.353, 484.195, 81.0799, 0.2288 ) }
    dend_25 { pt3dadd( 250.249, 484.169, 81.0849, 0.2288 ) }
    dend_25 { pt3dadd( 249.267, 484.673, 81.0673, 0.2288 ) }
    dend_25 { pt3dadd( 248.689, 485.659, 81.1266, 0.2288 ) }
    dend_25 { pt3dadd( 248.248, 486.435, 82.6944, 0.2288 ) }
    dend_25 { pt3dadd( 247.837, 487.161, 84.6104, 0.2288 ) }
    dend_25 { pt3dadd( 246.891, 487.794, 84.539, 0.2288 ) }
    dend_25 { pt3dadd( 245.948, 488.441, 84.4819, 0.2288 ) }
    dend_25 { pt3dadd( 245.022, 489.112, 84.4816, 0.2288 ) }
    dend_25 { pt3dadd( 244.094, 489.781, 84.4813, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_13 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 309.63, 484.553, 65.1277, 0.2288 ) }
    dend_20 { pt3dadd( 308.987, 484.692, 62.6951, 0.2288 ) }
    dend_20 { pt3dadd( 308.37, 484.826, 60.3604, 0.2288 ) }
    dend_20 { pt3dadd( 307.759, 484.871, 58.1372, 0.2288 ) }
    dend_20 { pt3dadd( 307.21, 483.961, 57.0979, 0.2288 ) }
    dend_20 { pt3dadd( 306.66, 483.052, 56.0588, 0.2288 ) }
    dend_20 { pt3dadd( 306.111, 482.142, 55.0197, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 309.63, 484.553, 65.1277, 0.2288 ) }
    dend_19 { pt3dadd( 309.932, 484.501, 64.5562, 0.2288 ) }
    dend_19 { pt3dadd( 310.828, 484.347, 62.8572, 0.2288 ) }
    dend_19 { pt3dadd( 311.724, 484.192, 61.1579, 0.2288 ) }
    dend_19 { pt3dadd( 312.621, 484.038, 59.4588, 0.2288 ) }
    dend_19 { pt3dadd( 313.517, 483.884, 57.7598, 0.2288 ) }
    dend_19 { pt3dadd( 314.413, 483.705, 56.0882, 0.2288 ) }
    dend_19 { pt3dadd( 315.313, 483.322, 54.6358, 0.2288 ) }
    dend_19 { pt3dadd( 316.213, 482.939, 53.1838, 0.2288 ) }
    dend_19 { pt3dadd( 316.962, 483.041, 51.5474, 0.2288 ) }
    dend_19 { pt3dadd( 317.547, 483.676, 49.7098, 0.2288 ) }
    dend_19 { pt3dadd( 318.131, 484.311, 47.8722, 0.2288 ) }
    dend_19 { pt3dadd( 318.56, 485.05, 46.1132, 0.2288 ) }
    dend_19 { pt3dadd( 318.715, 485.97, 44.494, 0.2288 ) }
    dend_19 { pt3dadd( 318.87, 486.891, 42.8744, 0.2288 ) }
    dend_19 { pt3dadd( 318.995, 487.87, 41.6844, 0.2288 ) }
    dend_19 { pt3dadd( 319.04, 489.013, 41.685, 0.2288 ) }
    dend_19 { pt3dadd( 319.084, 490.156, 41.6856, 0.2288 ) }
    dend_19 { pt3dadd( 318.92, 491.259, 41.2054, 0.2288 ) }
    dend_19 { pt3dadd( 318.689, 492.349, 40.572, 0.2288 ) }
    dend_19 { pt3dadd( 318.456, 493.439, 39.9386, 0.2288 ) }
    dend_19 { pt3dadd( 318.225, 494.53, 39.3053, 0.2288 ) }
    dend_19 { pt3dadd( 317.994, 495.62, 38.6719, 0.2288 ) }
    dend_19 { pt3dadd( 317.591, 496.67, 38.4518, 0.2288 ) }
    dend_19 { pt3dadd( 317.09, 497.698, 38.4709, 0.2288 ) }
    dend_19 { pt3dadd( 316.588, 498.727, 38.4899, 0.2288 ) }
    dend_19 { pt3dadd( 316.087, 499.755, 38.509, 0.2288 ) }
    dend_19 { pt3dadd( 315.494, 500.671, 38.2371, 0.2288 ) }
    dend_19 { pt3dadd( 314.623, 501.241, 37.081, 0.2288 ) }
    dend_19 { pt3dadd( 313.756, 501.817, 35.9324, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_19 { pt3dadd( 313.404, 502.906, 35.9503, 0.2288 ) }
    dend_19 { pt3dadd( 313.053, 503.995, 35.9682, 0.2288 ) }
    dend_19 { pt3dadd( 312.702, 505.083, 35.9862, 0.2288 ) }
    dend_19 { pt3dadd( 312.789, 506.212, 35.982, 0.2288 ) }
    dend_19 { pt3dadd( 312.935, 507.347, 35.9744, 0.2288 ) }
    dend_19 { pt3dadd( 313.082, 508.482, 35.9668, 0.2288 ) }
    dend_19 { pt3dadd( 313.332, 509.332, 37.606, 0.2542 ) }
    dend_19 { pt3dadd( 313.605, 510.194, 38.1018, 0.2796 ) }
    dend_19 { pt3dadd( 313.859, 511.059, 36.4655, 0.305 ) }
    dend_19 { pt3dadd( 313.989, 511.611, 34.0332, 0.2796 ) }
    dend_19 { pt3dadd( 314.119, 512.162, 31.6005, 0.2542 ) }
    dend_19 { pt3dadd( 314.25, 512.713, 29.1682, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 12/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 309.63, 484.553, 65.1277, 0.2288 ) }
    dend_14 { pt3dadd( 309.294, 483.769, 65.1423, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_8 (entry count 14/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 351.597, 500.221, 65.1907, 0.2288 ) }
    apic_12 { pt3dadd( 351.687, 500.715, 65.0852, 0.2288 ) }
    apic_12 { pt3dadd( 351.892, 501.836, 64.8452, 0.2288 ) }
    apic_12 { pt3dadd( 352.097, 502.957, 64.6052, 0.2288 ) }
    apic_12 { pt3dadd( 352.709, 503.867, 64.9586, 0.2288 ) }
    apic_12 { pt3dadd( 353.452, 504.707, 65.5043, 0.2288 ) }
    apic_12 { pt3dadd( 354.196, 505.547, 66.05, 0.2288 ) }
    apic_12 { pt3dadd( 354.94, 506.387, 66.5958, 0.2288 ) }
    apic_12 { pt3dadd( 355.683, 507.227, 67.1415, 0.2288 ) }
    apic_12 { pt3dadd( 356.427, 508.068, 67.6872, 0.2288 ) }
    apic_12 { pt3dadd( 357.17, 508.907, 68.2329, 0.2288 ) }
    apic_12 { pt3dadd( 358.137, 509.472, 68.3726, 0.2288 ) }
    apic_12 { pt3dadd( 359.179, 509.943, 68.3732, 0.2288 ) }
    apic_12 { pt3dadd( 360.223, 510.413, 68.3738, 0.2288 ) }
    apic_12 { pt3dadd( 361.266, 510.883, 68.3743, 0.2542 ) }
    apic_12 { pt3dadd( 362.308, 511.353, 68.3749, 0.305 ) }
    apic_12 { pt3dadd( 363.366, 511.75, 68.53, 0.356 ) }
    apic_12 { pt3dadd( 364.469, 511.938, 69.1239, 0.3814 ) }
    apic_12 { pt3dadd( 365.571, 512.125, 69.7175, 0.356 ) }
    apic_12 { pt3dadd( 366.674, 512.314, 70.3111, 0.3304 ) }
    apic_12 { pt3dadd( 367.775, 512.502, 70.9047, 0.305 ) }
    apic_12 { pt3dadd( 368.877, 512.689, 71.4983, 0.305 ) }
    apic_12 { pt3dadd( 369.98, 512.877, 72.0922, 0.305 ) }
    apic_12 { pt3dadd( 370.976, 513.367, 72.693, 0.2796 ) }
    apic_12 { pt3dadd( 371.955, 513.903, 73.2953, 0.2542 ) }
    apic_12 { pt3dadd( 372.936, 514.44, 73.8976, 0.2288 ) }
    apic_12 { pt3dadd( 373.915, 514.977, 74.4999, 0.2288 ) }
    apic_12 { pt3dadd( 374.894, 515.514, 75.1022, 0.2288 ) }
    apic_12 { pt3dadd( 375.791, 516.184, 75.4062, 0.2288 ) }
    apic_12 { pt3dadd( 376.6, 516.993, 75.399, 0.2288 ) }
    apic_12 { pt3dadd( 377.409, 517.802, 75.3917, 0.2288 ) }
    apic_12 { pt3dadd( 378.218, 518.612, 75.3844, 0.2288 ) }
    apic_12 { pt3dadd( 379.027, 519.421, 75.3628, 0.2288 ) }
    apic_12 { pt3dadd( 379.835, 520.229, 75.3357, 0.2288 ) }
    apic_12 { pt3dadd( 380.644, 521.038, 75.3088, 0.2288 ) }
    apic_12 { pt3dadd( 381.453, 521.847, 75.2816, 0.2288 ) }
    apic_12 { pt3dadd( 382.262, 522.656, 75.2548, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 51/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 351.597, 500.221, 65.1907, 0.2288 ) }
    apic_9 { pt3dadd( 351.755, 500.248, 65.1087, 0.2796 ) }
    apic_9 { pt3dadd( 352.858, 500.443, 64.5344, 0.305 ) }
    apic_9 { pt3dadd( 353.96, 500.637, 63.9604, 0.2796 ) }
    apic_9 { pt3dadd( 355.063, 500.832, 63.3861, 0.2796 ) }
    apic_9 { pt3dadd( 356.165, 501.026, 62.8121, 0.2796 ) }
    apic_9 { pt3dadd( 357.29, 500.977, 62.6338, 0.305 ) }
    apic_9 { pt3dadd( 358.425, 500.831, 62.6122, 0.2796 ) }
    apic_9 { pt3dadd( 359.56, 500.684, 62.5906, 0.2542 ) }
    apic_9 { pt3dadd( 360.695, 500.539, 62.5691, 0.2288 ) }
    apic_9 { pt3dadd( 361.808, 500.675, 62.1113, 0.2288 ) }
    apic_9 { pt3dadd( 362.918, 500.851, 61.5924, 0.2288 ) }
    apic_9 { pt3dadd( 364.029, 501.027, 61.0736, 0.2288 ) }
    apic_9 { pt3dadd( 365.138, 501.204, 60.5548, 0.2288 ) }
    apic_9 { pt3dadd( 366.249, 501.38, 60.0359, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 66/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 356.017, 463.854, 75.3614, 0.2288 ) }
    apic_6 { pt3dadd( 356.308, 464.793, 76.4613, 0.305 ) }
    apic_6 { pt3dadd( 356.85, 465.498, 77.7585, 0.305 ) }
    apic_6 { pt3dadd( 357.786, 465.72, 79.2775, 0.3304 ) }
    apic_6 { pt3dadd( 358.721, 465.941, 80.7968, 0.356 ) }
    apic_6 { pt3dadd( 359.648, 466.177, 82.2912, 0.3814 ) }
    apic_6 { pt3dadd( 360.128, 467.215, 82.2987, 0.3814 ) }
    apic_6 { pt3dadd( 361.005, 467.631, 82.3046, 0.4068 ) }
    apic_6 { pt3dadd( 362.149, 467.631, 82.3094, 0.4068 ) }
    apic_6 { pt3dadd( 363.293, 467.631, 82.3141, 0.4068 ) }
    apic_6 { pt3dadd( 363.857, 468.287, 83.419, 0.3814 ) }
    apic_6 { pt3dadd( 364.207, 469.184, 84.9288, 0.3814 ) }
    apic_6 { pt3dadd( 364.713, 469.997, 86.0902, 0.356 ) }
    apic_6 { pt3dadd( 365.721, 470.54, 86.1297, 0.305 ) }
    apic_6 { pt3dadd( 365.766, 471.468, 86.9095, 0.2542 ) }
    apic_6 { pt3dadd( 365.527, 472.509, 87.9088, 0.2288 ) }
    apic_6 { pt3dadd( 365.522, 473.375, 88.7331, 0.2288 ) }
    apic_6 { pt3dadd( 366.666, 473.375, 88.6973, 0.2288 ) }
    apic_6 { pt3dadd( 367.595, 472.939, 88.6855, 0.2288 ) }
    apic_6 { pt3dadd( 368.292, 472.032, 88.6995, 0.2288 ) }
    apic_6 { pt3dadd( 369.084, 472.541, 89.3096, 0.2542 ) }
    apic_6 { pt3dadd( 369.892, 473.297, 90.0234, 0.2796 ) }
    apic_6 { pt3dadd( 370.7, 474.052, 90.7374, 0.305 ) }
    apic_6 { pt3dadd( 371.459, 474.579, 91.8613, 0.2796 ) }
    apic_6 { pt3dadd( 372.076, 474.437, 94.194, 0.2542 ) }
    apic_6 { pt3dadd( 372.692, 474.294, 96.5266, 0.2288 ) }
    apic_6 { pt3dadd( 373.309, 474.152, 98.8593, 0.2288 ) }
    apic_6 { pt3dadd( 373.925, 474.009, 101.192, 0.2288 ) }
    apic_6 { pt3dadd( 374.542, 473.866, 103.525, 0.2288 ) }
    apic_6 { pt3dadd( 375.159, 473.725, 105.857, 0.2288 ) }
    apic_6 { pt3dadd( 375.61, 473.72, 108.349, 0.2288 ) }
    apic_6 { pt3dadd( 375.841, 473.903, 111.055, 0.2288 ) }
    apic_6 { pt3dadd( 376.069, 474.086, 113.761, 0.2288 ) }
    apic_6 { pt3dadd( 376.299, 474.269, 116.468, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_6 { pt3dadd( 376.528, 474.452, 119.174, 0.2288 ) }
    apic_6 { pt3dadd( 376.758, 474.635, 121.88, 0.2288 ) }
    apic_6 { pt3dadd( 376.987, 474.818, 124.587, 0.2288 ) }
    apic_6 { pt3dadd( 377.217, 475.001, 127.293, 0.2288 ) }
    apic_6 { pt3dadd( 377.445, 475.184, 129.999, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 5/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 356.017, 463.854, 75.3614, 0.2288 ) }
    apic_5 { pt3dadd( 356.459, 463.176, 75.348, 0.3304 ) }
    apic_5 { pt3dadd( 357.082, 462.216, 75.329, 0.3304 ) }
    apic_5 { pt3dadd( 357.674, 461.238, 75.3245, 0.3304 ) }
    apic_5 { pt3dadd( 358.208, 460.227, 75.3458, 0.2796 ) }
    apic_5 { pt3dadd( 358.742, 459.215, 75.3673, 0.2542 ) }
    apic_5 { pt3dadd( 359.277, 458.204, 75.3889, 0.2288 ) }
    apic_5 { pt3dadd( 359.923, 457.281, 75.3967, 0.2288 ) }
    apic_5 { pt3dadd( 360.781, 456.523, 75.3796, 0.2288 ) }
    apic_5 { pt3dadd( 361.638, 455.766, 75.3623, 0.2288 ) }
    apic_5 { pt3dadd( 362.495, 455.008, 75.3449, 0.2288 ) }
    apic_5 { pt3dadd( 363.353, 454.25, 75.3276, 0.2288 ) }
    apic_5 { pt3dadd( 364.209, 453.493, 75.3102, 0.2288 ) }
    apic_5 { pt3dadd( 365.05, 452.769, 75.8699, 0.2288 ) }
    apic_5 { pt3dadd( 365.884, 452.059, 76.6752, 0.2288 ) }
    apic_5 { pt3dadd( 366.719, 451.348, 77.4808, 0.2288 ) }
    apic_5 { pt3dadd( 367.553, 450.638, 78.2863, 0.2288 ) }
    apic_5 { pt3dadd( 368.387, 449.928, 79.0916, 0.2288 ) }
    apic_5 { pt3dadd( 369.09, 449.026, 79.1339, 0.2288 ) }
    apic_5 { pt3dadd( 369.792, 448.122, 79.1756, 0.2288 ) }
    apic_5 { pt3dadd( 370.496, 447.219, 79.217, 0.2288 ) }
    apic_5 { pt3dadd( 371.07, 446.238, 79.2095, 0.2288 ) }
    apic_5 { pt3dadd( 371.565, 445.207, 79.1711, 0.2288 ) }
    apic_5 { pt3dadd( 372.061, 444.176, 79.133, 0.2288 ) }
    apic_5 { pt3dadd( 372.805, 443.337, 79.1115, 0.2288 ) }
    apic_5 { pt3dadd( 373.676, 442.595, 79.0983, 0.2288 ) }
    apic_5 { pt3dadd( 374.547, 441.853, 79.0852, 0.2288 ) }
    apic_5 { pt3dadd( 375.327, 441.053, 79.086, 0.2288 ) }
    apic_5 { pt3dadd( 375.643, 439.954, 79.1582, 0.2288 ) }
    apic_5 { pt3dadd( 375.959, 438.856, 79.2319, 0.2288 ) }
    apic_5 { pt3dadd( 376.728, 438.072, 80.0265, 0.2288 ) }
    apic_5 { pt3dadd( 377.496, 437.288, 80.8214, 0.2288 ) }
    apic_5 { pt3dadd( 378.264, 436.505, 81.6161, 0.2288 ) }
    apic_5 { pt3dadd( 379.031, 435.722, 82.411, 0.2288 ) }
    apic_5 { pt3dadd( 379.8, 434.939, 83.2056, 0.2288 ) }
    apic_5 { pt3dadd( 380.567, 434.155, 84.0006, 0.2288 ) }
    apic_5 { pt3dadd( 380.89, 433.152, 84.2786, 0.2288 ) }
    apic_5 { pt3dadd( 380.929, 432.009, 84.2279, 0.2288 ) }
    apic_5 { pt3dadd( 380.968, 430.866, 84.1772, 0.2288 ) }
    apic_5 { pt3dadd( 381.636, 429.986, 84.187, 0.2288 ) }
    apic_5 { pt3dadd( 382.424, 429.157, 84.2086, 0.2288 ) }
    apic_5 { pt3dadd( 383.177, 428.304, 84.2307, 0.2288 ) }
    apic_5 { pt3dadd( 383.637, 427.257, 84.261, 0.2288 ) }
    apic_5 { pt3dadd( 384.096, 426.209, 84.2912, 0.2288 ) }
    apic_5 { pt3dadd( 384.554, 425.161, 84.3212, 0.2288 ) }
    apic_5 { pt3dadd( 385.261, 424.302, 84.5813, 0.2796 ) }
    apic_5 { pt3dadd( 386.106, 423.547, 84.9696, 0.356 ) }
    apic_5 { pt3dadd( 386.951, 422.792, 85.3577, 0.5084 ) }
    apic_5 { pt3dadd( 387.795, 422.036, 85.7461, 0.6102 ) }
    apic_5 { pt3dadd( 388.641, 421.281, 86.1344, 0.661 ) }
    apic_5 { pt3dadd( 389.485, 420.526, 86.5225, 0.5592 ) }
    apic_5 { pt3dadd( 390.174, 419.659, 86.7731, 0.4322 ) }
    apic_5 { pt3dadd( 390.587, 418.592, 86.7821, 0.3304 ) }
    apic_5 { pt3dadd( 391.0, 417.526, 86.7908, 0.305 ) }
    apic_5 { pt3dadd( 391.439, 416.475, 86.7992, 0.305 ) }
    apic_5 { pt3dadd( 392.259, 415.678, 86.805, 0.3304 ) }
    apic_5 { pt3dadd( 393.079, 414.881, 86.8109, 0.3814 ) }
    apic_5 { pt3dadd( 393.898, 414.082, 86.8168, 0.4576 ) }
    apic_5 { pt3dadd( 394.719, 413.285, 86.8227, 0.483 ) }
    apic_5 { pt3dadd( 395.539, 412.487, 86.8286, 0.4576 ) }
    apic_5 { pt3dadd( 395.963, 411.621, 88.2717, 0.356 ) }
    apic_5 { pt3dadd( 396.364, 410.752, 89.8041, 0.2796 ) }
    apic_5 { pt3dadd( 396.764, 409.883, 91.3366, 0.2288 ) }
    apic_5 { pt3dadd( 397.049, 408.884, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 397.145, 407.751, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 397.31, 406.628, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 397.511, 405.503, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 397.882, 404.431, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 398.7, 403.655, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 399.315, 402.8, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 399.903, 402.107, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 400.639, 401.253, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 401.61, 400.724, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 402.214, 399.775, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 402.76, 398.777, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 403.479, 398.054, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 403.725, 396.957, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 404.267, 395.949, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 404.789, 394.933, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 405.011, 393.817, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 405.359, 392.732, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 405.69, 391.647, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 406.489, 390.835, 92.12, 0.2542 ) }
    apic_5 { pt3dadd( 407.073, 389.853, 92.12, 0.2796 ) }
    apic_5 { pt3dadd( 407.751, 388.932, 92.12, 0.305 ) }
    apic_5 { pt3dadd( 408.446, 388.039, 92.12, 0.2796 ) }
    apic_5 { pt3dadd( 409.202, 387.207, 92.12, 0.2542 ) }
    apic_5 { pt3dadd( 409.52, 386.113, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 410.027, 385.096, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 410.684, 384.198, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 411.545, 383.513, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 412.522, 382.947, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 413.165, 382.026, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 413.59, 381.061, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 414.481, 380.487, 92.12, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_5 { pt3dadd( 415.465, 379.92, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 415.959, 379.047, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 416.302, 377.986, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 416.867, 377.134, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 417.941, 376.742, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 419.07, 376.605, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 420.063, 376.206, 92.12, 0.2288 ) }
    apic_5 { pt3dadd( 421.094, 375.796, 92.2765, 0.2542 ) }
    apic_5 { pt3dadd( 421.492, 375.575, 94.36, 0.3304 ) }
    apic_5 { pt3dadd( 422.299, 375.346, 95.3299, 0.4068 ) }
    apic_5 { pt3dadd( 423.2, 374.797, 95.48, 0.4576 ) }
    apic_5 { pt3dadd( 424.076, 374.105, 95.48, 0.4068 ) }
    apic_5 { pt3dadd( 424.968, 373.394, 95.48, 0.356 ) }
    apic_5 { pt3dadd( 425.563, 372.435, 95.5413, 0.2796 ) }
    apic_5 { pt3dadd( 426.169, 371.496, 95.76, 0.3304 ) }
    apic_5 { pt3dadd( 426.819, 370.849, 95.76, 0.3814 ) }
    apic_5 { pt3dadd( 427.439, 369.995, 95.76, 0.4576 ) }
    apic_5 { pt3dadd( 428.429, 369.426, 95.76, 0.3814 ) }
    apic_5 { pt3dadd( 429.33, 368.756, 95.76, 0.3304 ) }
    apic_5 { pt3dadd( 430.153, 368.178, 95.76, 0.2796 ) }
    apic_5 { pt3dadd( 430.925, 367.508, 95.76, 0.305 ) }
    apic_5 { pt3dadd( 431.074, 366.38, 95.76, 0.2796 ) }
    apic_5 { pt3dadd( 431.518, 365.331, 95.76, 0.2796 ) }
    apic_5 { pt3dadd( 431.584, 364.192, 95.76, 0.2796 ) }
    apic_5 { pt3dadd( 431.79, 363.074, 95.76, 0.305 ) }
    apic_5 { pt3dadd( 432.532, 362.248, 95.76, 0.2796 ) }
    apic_5 { pt3dadd( 433.375, 361.579, 95.76, 0.2542 ) }
    apic_5 { pt3dadd( 434.32, 360.995, 95.76, 0.2542 ) }
    apic_5 { pt3dadd( 435.149, 360.349, 96.3934, 0.2796 ) }
    apic_5 { pt3dadd( 436.095, 359.814, 97.0628, 0.305 ) }
    apic_5 { pt3dadd( 436.675, 359.194, 98.4978, 0.2796 ) }
    apic_5 { pt3dadd( 437.134, 358.498, 99.68, 0.2542 ) }
    apic_5 { pt3dadd( 437.885, 357.654, 99.68, 0.2288 ) }
    apic_5 { pt3dadd( 438.791, 356.97, 99.68, 0.2288 ) }
    apic_5 { pt3dadd( 439.823, 356.57, 99.68, 0.2288 ) }
    apic_5 { pt3dadd( 440.647, 355.785, 99.68, 0.2288 ) }
    apic_5 { pt3dadd( 441.255, 354.824, 99.68, 0.2796 ) }
    apic_5 { pt3dadd( 441.608, 353.741, 99.68, 0.3304 ) }
    apic_5 { pt3dadd( 442.037, 352.902, 100.393, 0.3814 ) }
    apic_5 { pt3dadd( 442.393, 352.087, 101.36, 0.3304 ) }
    apic_5 { pt3dadd( 442.873, 351.081, 101.36, 0.305 ) }
    apic_5 { pt3dadd( 443.76, 350.418, 101.36, 0.2796 ) }
    apic_5 { pt3dadd( 444.641, 349.717, 101.36, 0.305 ) }
    apic_5 { pt3dadd( 445.082, 349.367, 103.285, 0.2796 ) }
    apic_5 { pt3dadd( 445.88, 348.724, 103.673, 0.2542 ) }
    apic_5 { pt3dadd( 446.399, 348.001, 105.183, 0.2288 ) }
    apic_5 { pt3dadd( 446.995, 347.293, 105.84, 0.2288 ) }
    apic_5 { pt3dadd( 447.812, 346.507, 105.84, 0.2288 ) }
    apic_5 { pt3dadd( 448.689, 345.793, 105.84, 0.2542 ) }
    apic_5 { pt3dadd( 448.896, 344.678, 105.84, 0.2796 ) }
    apic_5 { pt3dadd( 449.276, 343.626, 105.84, 0.305 ) }
    apic_5 { pt3dadd( 450.009, 342.756, 105.84, 0.2796 ) }
    apic_5 { pt3dadd( 451.072, 342.487, 105.84, 0.2542 ) }
    apic_5 { pt3dadd( 451.56, 341.462, 105.84, 0.2288 ) }
    apic_5 { pt3dadd( 451.995, 340.912, 106.97, 0.2288 ) }
    apic_5 { pt3dadd( 452.095, 340.907, 109.731, 0.2288 ) }
    apic_5 { pt3dadd( 452.626, 340.45, 111.599, 0.2288 ) }
    apic_5 { pt3dadd( 453.447, 340.028, 112.56, 0.2288 ) }
    apic_5 { pt3dadd( 454.363, 339.346, 112.56, 0.2288 ) }
    apic_5 { pt3dadd( 455.352, 338.783, 112.56, 0.2288 ) }
    apic_5 { pt3dadd( 455.943, 337.837, 112.56, 0.2288 ) }
    apic_5 { pt3dadd( 456.584, 336.891, 112.56, 0.2288 ) }
    apic_5 { pt3dadd( 457.113, 336.256, 113.701, 0.2288 ) }
    apic_5 { pt3dadd( 457.522, 335.272, 114.24, 0.2288 ) }
    apic_5 { pt3dadd( 458.076, 334.273, 114.24, 0.2288 ) }
    apic_5 { pt3dadd( 458.874, 333.471, 114.24, 0.2288 ) }
    apic_5 { pt3dadd( 459.629, 332.624, 114.24, 0.2288 ) }
    apic_5 { pt3dadd( 460.435, 331.937, 114.718, 0.2288 ) }
    apic_5 { pt3dadd( 461.23, 331.241, 114.8, 0.2288 ) }
    apic_5 { pt3dadd( 461.937, 330.355, 114.8, 0.2288 ) }
    apic_5 { pt3dadd( 462.494, 329.393, 114.925, 0.2542 ) }
    apic_5 { pt3dadd( 462.903, 328.384, 115.36, 0.2796 ) }
    apic_5 { pt3dadd( 463.492, 327.453, 115.582, 0.305 ) }
    apic_5 { pt3dadd( 464.153, 326.562, 115.92, 0.2796 ) }
    apic_5 { pt3dadd( 464.816, 325.666, 115.92, 0.2542 ) }
    apic_5 { pt3dadd( 465.513, 324.814, 115.92, 0.2288 ) }
    apic_5 { pt3dadd( 466.23, 324.008, 116.064, 0.2288 ) }
    apic_5 { pt3dadd( 466.927, 323.313, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 467.759, 322.536, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 468.073, 321.488, 117.04, 0.2542 ) }
    apic_5 { pt3dadd( 468.991, 320.832, 117.04, 0.2796 ) }
    apic_5 { pt3dadd( 469.552, 319.843, 117.04, 0.3304 ) }
    apic_5 { pt3dadd( 470.002, 318.795, 117.04, 0.356 ) }
    apic_5 { pt3dadd( 470.142, 317.66, 117.04, 0.4068 ) }
    apic_5 { pt3dadd( 470.518, 316.585, 117.04, 0.4068 ) }
    apic_5 { pt3dadd( 471.183, 315.67, 117.04, 0.3814 ) }
    apic_5 { pt3dadd( 471.829, 314.793, 117.04, 0.305 ) }
    apic_5 { pt3dadd( 472.542, 313.941, 117.04, 0.2542 ) }
    apic_5 { pt3dadd( 473.001, 312.897, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 473.631, 311.943, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 474.183, 310.979, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 474.345, 309.865, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 474.6, 308.754, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 474.776, 307.625, 117.04, 0.2288 ) }
    apic_5 { pt3dadd( 474.875, 306.854, 118.275, 0.2288 ) }
    apic_5 { pt3dadd( 475.341, 305.943, 118.72, 0.2288 ) }
    apic_5 { pt3dadd( 476.082, 305.118, 118.72, 0.2542 ) }
    apic_5 { pt3dadd( 476.785, 304.288, 118.72, 0.2796 ) }
    apic_5 { pt3dadd( 477.262, 303.266, 118.913, 0.305 ) }
    apic_5 { pt3dadd( 477.719, 302.495, 120.388, 0.2796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_5 { pt3dadd( 477.958, 301.529, 121.324, 0.2542 ) }
    apic_5 { pt3dadd( 478.452, 300.584, 121.52, 0.2288 ) }
    apic_5 { pt3dadd( 479.04, 299.638, 121.644, 0.2288 ) }
    apic_5 { pt3dadd( 479.438, 298.581, 121.8, 0.2288 ) }
    apic_5 { pt3dadd( 480.037, 297.621, 121.8, 0.2288 ) }
    apic_5 { pt3dadd( 480.372, 296.537, 121.89, 0.2288 ) }
    apic_5 { pt3dadd( 480.86, 295.527, 122.089, 0.2288 ) }
    apic_5 { pt3dadd( 481.743, 294.827, 122.36, 0.2288 ) }
    apic_5 { pt3dadd( 482.378, 294.042, 122.36, 0.2288 ) }
    apic_5 { pt3dadd( 483.042, 293.241, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 483.705, 292.319, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 484.218, 291.339, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 484.687, 290.295, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 485.396, 289.402, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 485.967, 288.415, 122.64, 0.2288 ) }
    apic_5 { pt3dadd( 486.087, 288.028, 125.008, 0.2288 ) }
    apic_5 { pt3dadd( 486.52, 287.125, 125.44, 0.2288 ) }
    apic_5 { pt3dadd( 487.393, 286.392, 125.44, 0.2288 ) }
    apic_5 { pt3dadd( 488.181, 285.669, 125.44, 0.2288 ) }
    apic_5 { pt3dadd( 488.872, 284.825, 125.44, 0.2288 ) }
    apic_5 { pt3dadd( 489.903, 284.385, 125.44, 0.2288 ) }
    apic_5 { pt3dadd( 490.205, 283.428, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 490.247, 282.287, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 490.584, 281.21, 126.0, 0.2542 ) }
    apic_5 { pt3dadd( 490.786, 280.084, 126.0, 0.2796 ) }
    apic_5 { pt3dadd( 491.285, 279.06, 126.0, 0.305 ) }
    apic_5 { pt3dadd( 492.054, 278.245, 126.0, 0.2796 ) }
    apic_5 { pt3dadd( 492.48, 277.312, 126.0, 0.2542 ) }
    apic_5 { pt3dadd( 493.234, 276.495, 126.0, 0.2542 ) }
    apic_5 { pt3dadd( 493.782, 275.515, 126.0, 0.2796 ) }
    apic_5 { pt3dadd( 494.043, 274.401, 126.0, 0.305 ) }
    apic_5 { pt3dadd( 494.306, 273.291, 126.0, 0.2796 ) }
    apic_5 { pt3dadd( 494.531, 272.226, 126.0, 0.2542 ) }
    apic_5 { pt3dadd( 495.538, 271.711, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 496.373, 271.018, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 497.047, 270.222, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 497.274, 269.101, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 498.006, 268.354, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 498.716, 267.635, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 499.413, 266.734, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 500.091, 265.815, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 500.861, 264.987, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 501.877, 264.476, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 502.672, 263.781, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 503.207, 262.941, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 503.922, 262.1, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 504.78, 261.345, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 505.587, 260.554, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 506.072, 259.532, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 506.756, 258.628, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 507.499, 257.764, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 507.969, 256.726, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 508.371, 255.656, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 509.125, 254.824, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 509.883, 253.969, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 510.645, 253.121, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 511.26, 252.172, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 511.757, 251.203, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 512.297, 250.274, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 512.765, 249.232, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 513.311, 248.269, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 514.104, 247.54, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 514.989, 246.833, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 515.594, 245.875, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 515.831, 244.816, 126.0, 0.2288 ) }
    apic_5 { pt3dadd( 515.831, 243.672, 126.0, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 66/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 306.111, 482.142, 55.0197, 0.2288 ) }
    dend_22 { pt3dadd( 306.254, 482.066, 54.8817, 0.2288 ) }
    dend_22 { pt3dadd( 307.207, 481.558, 53.9602, 0.2288 ) }
    dend_22 { pt3dadd( 308.161, 481.05, 53.0387, 0.2288 ) }
    dend_22 { pt3dadd( 309.114, 480.542, 52.117, 0.2288 ) }
    dend_22 { pt3dadd( 308.985, 479.893, 50.5361, 0.2288 ) }
    dend_22 { pt3dadd( 308.467, 479.194, 48.7183, 0.2288 ) }
    dend_22 { pt3dadd( 307.949, 478.495, 46.9006, 0.2288 ) }
    dend_22 { pt3dadd( 307.101, 478.923, 45.7554, 0.2288 ) }
    dend_22 { pt3dadd( 306.211, 479.496, 44.6972, 0.2288 ) }
    dend_22 { pt3dadd( 305.176, 479.742, 44.2294, 0.2288 ) }
    dend_22 { pt3dadd( 304.032, 479.742, 44.2042, 0.2288 ) }
    dend_22 { pt3dadd( 302.888, 479.742, 44.1792, 0.2288 ) }
    dend_22 { pt3dadd( 301.823, 479.905, 44.0261, 0.2288 ) }
    dend_22 { pt3dadd( 301.085, 480.733, 43.3451, 0.2288 ) }
    dend_22 { pt3dadd( 300.348, 481.562, 42.6639, 0.2288 ) }
    dend_22 { pt3dadd( 299.622, 482.364, 41.7858, 0.2288 ) }
    dend_22 { pt3dadd( 298.913, 483.124, 40.6154, 0.2288 ) }
    dend_22 { pt3dadd( 298.204, 483.883, 39.4447, 0.2288 ) }
    dend_22 { pt3dadd( 297.496, 484.644, 38.2743, 0.2288 ) }
    dend_22 { pt3dadd( 297.34, 485.418, 36.5532, 0.2288 ) }
    dend_22 { pt3dadd( 297.483, 486.198, 34.5358, 0.2288 ) }
    dend_22 { pt3dadd( 297.652, 486.961, 32.4932, 0.2288 ) }
    dend_22 { pt3dadd( 297.854, 487.701, 30.4164, 0.2288 ) }
    dend_22 { pt3dadd( 298.058, 488.441, 28.3394, 0.2288 ) }
    dend_22 { pt3dadd( 298.163, 489.036, 25.9907, 0.2288 ) }
    dend_22 { pt3dadd( 298.217, 489.555, 23.499, 0.2288 ) }
    dend_22 { pt3dadd( 298.27, 490.074, 21.007, 0.2288 ) }
    dend_22 { pt3dadd( 297.609, 490.341, 19.9979, 0.2288 ) }
    dend_22 { pt3dadd( 296.47, 490.441, 19.9808, 0.2288 ) }
    dend_22 { pt3dadd( 295.759, 490.964, 19.9766, 0.2288 ) }
    dend_22 { pt3dadd( 295.675, 492.104, 19.9914, 0.2288 ) }
    dend_22 { pt3dadd( 295.59, 493.245, 20.0063, 0.2288 ) }
    dend_22 { pt3dadd( 294.622, 493.485, 20.0357, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_22 { pt3dadd( 293.528, 493.644, 20.001, 0.2288 ) }
    dend_22 { pt3dadd( 292.791, 494.493, 19.4872, 0.2288 ) }
    dend_22 { pt3dadd( 292.053, 495.342, 18.9731, 0.2288 ) }
    dend_22 { pt3dadd( 291.315, 496.189, 18.4593, 0.2288 ) }
    dend_22 { pt3dadd( 290.577, 497.038, 17.9452, 0.2288 ) }
    dend_22 { pt3dadd( 289.839, 497.887, 17.4314, 0.2288 ) }
    dend_22 { pt3dadd( 289.1, 498.735, 16.9173, 0.2288 ) }
    dend_22 { pt3dadd( 288.295, 499.539, 16.7975, 0.2288 ) }
    dend_22 { pt3dadd( 287.468, 500.331, 16.7955, 0.2288 ) }
    dend_22 { pt3dadd( 286.642, 501.121, 16.7936, 0.2288 ) }
    dend_22 { pt3dadd( 285.815, 501.912, 16.7916, 0.2288 ) }
    dend_22 { pt3dadd( 284.989, 502.703, 16.7894, 0.2288 ) }
    dend_22 { pt3dadd( 284.161, 503.494, 16.7874, 0.2288 ) }
    dend_22 { pt3dadd( 283.594, 504.431, 16.2014, 0.2288 ) }
    dend_22 { pt3dadd( 283.117, 505.419, 15.4084, 0.2288 ) }
    dend_22 { pt3dadd( 282.854, 506.318, 14.1389, 0.2288 ) }
    dend_22 { pt3dadd( 282.967, 507.059, 12.0221, 0.2288 ) }
    dend_22 { pt3dadd( 283.08, 507.799, 9.9053, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 18/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 306.111, 482.142, 55.0197, 0.2288 ) }
    dend_21 { pt3dadd( 305.566, 481.996, 55.0138, 0.2288 ) }
    dend_21 { pt3dadd( 304.461, 481.698, 55.0015, 0.2288 ) }
    dend_21 { pt3dadd( 303.357, 481.402, 54.9895, 0.2288 ) }
    dend_21 { pt3dadd( 302.251, 481.105, 54.9772, 0.2288 ) }
    dend_21 { pt3dadd( 301.162, 480.782, 54.9343, 0.2288 ) }
    dend_21 { pt3dadd( 300.365, 480.0, 54.3365, 0.2288 ) }
    dend_21 { pt3dadd( 299.567, 479.217, 53.7387, 0.2288 ) }
    dend_21 { pt3dadd( 298.768, 478.436, 53.1409, 0.2288 ) }
    dend_21 { pt3dadd( 297.97, 477.653, 52.5431, 0.2288 ) }
    dend_21 { pt3dadd( 297.172, 476.871, 51.9453, 0.2288 ) }
    dend_21 { pt3dadd( 296.676, 475.873, 51.7992, 0.2288 ) }
    dend_21 { pt3dadd( 296.289, 474.796, 51.8182, 0.2288 ) }
    dend_21 { pt3dadd( 295.902, 473.719, 51.8372, 0.2542 ) }
    dend_21 { pt3dadd( 295.536, 472.636, 51.8412, 0.2796 ) }
    dend_21 { pt3dadd( 295.204, 471.541, 51.8199, 0.305 ) }
    dend_21 { pt3dadd( 294.643, 470.571, 51.8011, 0.2796 ) }
    dend_21 { pt3dadd( 293.906, 469.695, 51.784, 0.2796 ) }
    dend_21 { pt3dadd( 293.225, 468.794, 51.7779, 0.2796 ) }
    dend_21 { pt3dadd( 293.027, 467.667, 51.8669, 0.305 ) }
    dend_21 { pt3dadd( 292.773, 466.587, 51.2677, 0.2796 ) }
    dend_21 { pt3dadd( 292.509, 465.517, 50.5263, 0.2542 ) }
    dend_21 { pt3dadd( 292.244, 464.446, 49.7848, 0.2288 ) }
    dend_21 { pt3dadd( 291.979, 463.375, 49.0434, 0.2288 ) }
    dend_21 { pt3dadd( 291.65, 462.302, 48.6746, 0.2288 ) }
    dend_21 { pt3dadd( 291.255, 461.229, 48.6878, 0.2288 ) }
    dend_21 { pt3dadd( 290.86, 460.156, 48.7012, 0.2288 ) }
    dend_21 { pt3dadd( 290.464, 459.082, 48.7144, 0.2288 ) }
    dend_21 { pt3dadd( 289.682, 458.255, 48.706, 0.2288 ) }
    dend_21 { pt3dadd( 288.872, 457.449, 48.6965, 0.2288 ) }
    dend_21 { pt3dadd( 288.061, 456.641, 48.6867, 0.2288 ) }
    dend_21 { pt3dadd( 287.418, 455.7, 48.6553, 0.2542 ) }
    dend_21 { pt3dadd( 286.801, 454.737, 48.6212, 0.2796 ) }
    dend_21 { pt3dadd( 286.147, 453.812, 48.4064, 0.3304 ) }
    dend_21 { pt3dadd( 285.405, 452.987, 47.7333, 0.3304 ) }
    dend_21 { pt3dadd( 284.662, 452.161, 47.0602, 0.3304 ) }
    dend_21 { pt3dadd( 283.919, 451.336, 46.3868, 0.2796 ) }
    dend_21 { pt3dadd( 282.946, 450.882, 46.0944, 0.2542 ) }
    dend_21 { pt3dadd( 281.962, 450.495, 45.9365, 0.2288 ) }
    dend_21 { pt3dadd( 281.444, 449.499, 45.3866, 0.2288 ) }
    dend_21 { pt3dadd( 280.927, 448.503, 44.8364, 0.2288 ) }
    dend_21 { pt3dadd( 280.41, 447.508, 44.2865, 0.2288 ) }
    dend_21 { pt3dadd( 279.893, 446.512, 43.7366, 0.2288 ) }
    dend_21 { pt3dadd( 279.367, 445.509, 43.4829, 0.2288 ) }
    dend_21 { pt3dadd( 278.833, 444.498, 43.4949, 0.2288 ) }
    dend_21 { pt3dadd( 278.257, 443.541, 43.302, 0.2288 ) }
    dend_21 { pt3dadd( 277.482, 442.855, 42.1109, 0.2288 ) }
    dend_21 { pt3dadd( 276.706, 442.169, 40.9195, 0.2542 ) }
    dend_21 { pt3dadd( 276.368, 441.228, 40.3886, 0.2796 ) }
    dend_21 { pt3dadd( 276.38, 440.084, 40.3822, 0.305 ) }
    dend_21 { pt3dadd( 276.391, 438.94, 40.3757, 0.2796 ) }
    dend_21 { pt3dadd( 276.013, 437.918, 40.9508, 0.2542 ) }
    dend_21 { pt3dadd( 275.483, 436.965, 41.5528, 0.2288 ) }
    dend_21 { pt3dadd( 274.592, 436.325, 40.759, 0.2288 ) }
    dend_21 { pt3dadd( 273.7, 435.685, 39.9655, 0.2288 ) }
    dend_21 { pt3dadd( 272.993, 434.91, 38.9231, 0.2288 ) }
    dend_21 { pt3dadd( 272.363, 434.078, 37.7754, 0.2288 ) }
    dend_21 { pt3dadd( 271.734, 433.245, 36.6274, 0.2288 ) }
    dend_21 { pt3dadd( 271.448, 432.375, 35.2727, 0.2288 ) }
    dend_21 { pt3dadd( 271.604, 431.456, 33.6515, 0.2288 ) }
    dend_21 { pt3dadd( 271.7, 430.527, 32.1742, 0.2288 ) }
    dend_21 { pt3dadd( 271.173, 429.513, 32.1605, 0.2288 ) }
    dend_21 { pt3dadd( 270.644, 428.498, 32.1471, 0.2288 ) }
    dend_21 { pt3dadd( 270.199, 427.45, 32.1418, 0.2288 ) }
    dend_21 { pt3dadd( 269.877, 426.352, 32.1485, 0.2288 ) }
    dend_21 { pt3dadd( 269.557, 425.253, 32.1552, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 309.294, 483.769, 65.1423, 0.2288 ) }
    dend_18 { pt3dadd( 309.138, 483.358, 65.1568, 0.2288 ) }
    dend_18 { pt3dadd( 308.729, 482.29, 65.1896, 0.2288 ) }
    dend_18 { pt3dadd( 308.308, 481.226, 65.2008, 0.2288 ) }
    dend_18 { pt3dadd( 307.886, 480.163, 65.212, 0.2288 ) }
    dend_18 { pt3dadd( 307.332, 479.18, 65.2095, 0.2288 ) }
    dend_18 { pt3dadd( 306.576, 478.322, 65.1862, 0.2288 ) }
    dend_18 { pt3dadd( 305.819, 477.464, 65.1627, 0.2288 ) }
    dend_18 { pt3dadd( 305.07, 476.6, 65.1431, 0.2288 ) }
    dend_18 { pt3dadd( 304.358, 475.705, 65.1375, 0.2288 ) }
    dend_18 { pt3dadd( 303.645, 474.81, 65.1319, 0.2288 ) }
    dend_18 { pt3dadd( 302.932, 473.915, 65.1266, 0.2288 ) }
    dend_18 { pt3dadd( 302.384, 472.982, 64.4249, 0.2288 ) }
    dend_18 { pt3dadd( 301.919, 472.029, 63.3721, 0.2288 ) }
    dend_18 { pt3dadd( 301.486, 471.13, 62.0794, 0.2288 ) }
    dend_18 { pt3dadd( 301.135, 470.364, 60.1863, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_18 { pt3dadd( 300.783, 469.598, 58.2935, 0.2542 ) }
    dend_18 { pt3dadd( 300.405, 468.752, 56.9307, 0.2796 ) }
    dend_18 { pt3dadd( 299.96, 467.697, 56.9282, 0.305 ) }
    dend_18 { pt3dadd( 299.515, 466.643, 56.9254, 0.2796 ) }
    dend_18 { pt3dadd( 299.07, 465.59, 56.9229, 0.2542 ) }
    dend_18 { pt3dadd( 298.625, 464.536, 56.9201, 0.2288 ) }
    dend_18 { pt3dadd( 298.132, 463.623, 55.8734, 0.2288 ) }
    dend_18 { pt3dadd( 297.627, 462.747, 54.5653, 0.2796 ) }
    dend_18 { pt3dadd( 297.257, 461.77, 53.7712, 0.3814 ) }
    dend_18 { pt3dadd( 297.092, 460.637, 53.7628, 0.483 ) }
    dend_18 { pt3dadd( 296.927, 459.506, 53.7544, 0.483 ) }
    dend_18 { pt3dadd( 296.763, 458.373, 53.7457, 0.3814 ) }
    dend_18 { pt3dadd( 296.574, 457.245, 53.7342, 0.305 ) }
    dend_18 { pt3dadd( 296.35, 456.123, 53.7177, 0.2796 ) }
    dend_18 { pt3dadd( 296.124, 455.002, 53.7012, 0.3304 ) }
    dend_18 { pt3dadd( 295.9, 453.881, 53.685, 0.3304 ) }
    dend_18 { pt3dadd( 295.675, 452.759, 53.6684, 0.3304 ) }
    dend_18 { pt3dadd( 295.577, 451.631, 53.6687, 0.305 ) }
    dend_18 { pt3dadd( 295.684, 450.491, 53.6959, 0.305 ) }
    dend_18 { pt3dadd( 295.791, 449.353, 53.7233, 0.305 ) }
    dend_18 { pt3dadd( 295.933, 448.227, 53.7488, 0.3304 ) }
    dend_18 { pt3dadd( 296.641, 447.329, 53.7482, 0.356 ) }
    dend_18 { pt3dadd( 297.35, 446.431, 53.748, 0.3814 ) }
    dend_18 { pt3dadd( 298.059, 445.533, 53.7474, 0.3304 ) }
    dend_18 { pt3dadd( 298.767, 444.634, 53.7471, 0.2796 ) }
    dend_18 { pt3dadd( 299.457, 443.734, 53.5018, 0.2288 ) }
    dend_18 { pt3dadd( 300.129, 442.83, 53.0124, 0.2288 ) }
    dend_18 { pt3dadd( 300.801, 441.925, 52.5232, 0.2288 ) }
    dend_18 { pt3dadd( 301.474, 441.021, 52.0338, 0.2288 ) }
    dend_18 { pt3dadd( 301.865, 439.99, 51.8126, 0.2288 ) }
    dend_18 { pt3dadd( 302.036, 438.86, 51.8028, 0.2288 ) }
    dend_18 { pt3dadd( 302.207, 437.729, 51.7933, 0.2288 ) }
    dend_18 { pt3dadd( 302.377, 436.597, 51.7835, 0.2288 ) }
    dend_18 { pt3dadd( 302.837, 435.624, 51.2355, 0.2288 ) }
    dend_18 { pt3dadd( 303.479, 434.749, 50.3488, 0.2288 ) }
    dend_18 { pt3dadd( 304.122, 433.873, 49.4617, 0.2288 ) }
    dend_18 { pt3dadd( 304.764, 432.998, 48.575, 0.2288 ) }
    dend_18 { pt3dadd( 305.388, 432.084, 48.0304, 0.2288 ) }
    dend_18 { pt3dadd( 305.985, 431.108, 48.0208, 0.2288 ) }
    dend_18 { pt3dadd( 306.583, 430.134, 48.0113, 0.2288 ) }
    dend_18 { pt3dadd( 307.18, 429.158, 48.0021, 0.2542 ) }
    dend_18 { pt3dadd( 307.777, 428.182, 47.9926, 0.2796 ) }
    dend_18 { pt3dadd( 308.374, 427.206, 47.983, 0.305 ) }
    dend_18 { pt3dadd( 308.971, 426.23, 47.9738, 0.2796 ) }
    dend_18 { pt3dadd( 309.472, 425.213, 48.2748, 0.2542 ) }
    dend_18 { pt3dadd( 309.944, 424.184, 48.6668, 0.2288 ) }
    dend_18 { pt3dadd( 310.416, 423.154, 49.0588, 0.2288 ) }
    dend_18 { pt3dadd( 310.889, 422.125, 49.4508, 0.2288 ) }
    dend_18 { pt3dadd( 311.361, 421.095, 49.8428, 0.2288 ) }
    dend_18 { pt3dadd( 311.667, 420.0, 49.9352, 0.2288 ) }
    dend_18 { pt3dadd( 311.913, 418.884, 49.9209, 0.2542 ) }
    dend_18 { pt3dadd( 312.159, 417.766, 49.9066, 0.2796 ) }
    dend_18 { pt3dadd( 312.405, 416.649, 49.8924, 0.305 ) }
    dend_18 { pt3dadd( 312.651, 415.532, 49.8781, 0.2796 ) }
    dend_18 { pt3dadd( 312.877, 414.432, 49.3898, 0.2542 ) }
    dend_18 { pt3dadd( 313.099, 413.336, 48.7956, 0.2288 ) }
    dend_18 { pt3dadd( 313.101, 412.213, 48.6102, 0.2288 ) }
    dend_18 { pt3dadd( 312.987, 411.075, 48.6396, 0.2288 ) }
    dend_18 { pt3dadd( 312.872, 409.936, 48.6693, 0.2288 ) }
    dend_18 { pt3dadd( 312.759, 408.798, 48.6987, 0.2288 ) }
    dend_18 { pt3dadd( 313.271, 407.842, 48.6878, 0.2288 ) }
    dend_18 { pt3dadd( 313.95, 406.933, 48.6422, 0.2288 ) }
    dend_18 { pt3dadd( 313.989, 405.813, 48.0774, 0.2288 ) }
    dend_18 { pt3dadd( 314.028, 404.693, 47.5126, 0.2288 ) }
    dend_18 { pt3dadd( 314.067, 403.575, 46.9479, 0.2542 ) }
    dend_18 { pt3dadd( 314.617, 402.724, 47.2399, 0.2796 ) }
    dend_18 { pt3dadd( 315.468, 402.033, 48.0382, 0.305 ) }
    dend_18 { pt3dadd( 316.034, 401.208, 48.4123, 0.2796 ) }
    dend_18 { pt3dadd( 315.973, 400.089, 47.8489, 0.2542 ) }
    dend_18 { pt3dadd( 315.912, 398.97, 47.2858, 0.2288 ) }
    dend_18 { pt3dadd( 315.85, 397.851, 46.7225, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 71/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 309.294, 483.769, 65.1423, 0.2288 ) }
    dend_15 { pt3dadd( 309.859, 483.06, 63.2453, 0.2288 ) }
    dend_15 { pt3dadd( 310.4, 482.379, 61.4261, 0.2288 ) }
    dend_15 { pt3dadd( 310.954, 481.627, 60.0356, 0.2288 ) }
    dend_15 { pt3dadd( 311.518, 480.639, 59.9623, 0.2288 ) }
    dend_15 { pt3dadd( 311.863, 479.585, 59.2788, 0.2288 ) }
    dend_15 { pt3dadd( 312.21, 478.532, 58.595, 0.2288 ) }
    dend_15 { pt3dadd( 312.433, 477.439, 58.1179, 0.2288 ) }
    dend_15 { pt3dadd( 312.512, 476.302, 57.8864, 0.2288 ) }
    dend_15 { pt3dadd( 312.591, 475.165, 57.6548, 0.2288 ) }
    dend_15 { pt3dadd( 312.669, 474.027, 57.4235, 0.2288 ) }
    dend_15 { pt3dadd( 312.748, 472.89, 57.192, 0.2288 ) }
    dend_15 { pt3dadd( 312.827, 471.752, 56.9604, 0.2288 ) }
    dend_15 { pt3dadd( 313.007, 470.628, 56.87, 0.2288 ) }
    dend_15 { pt3dadd( 313.26, 469.513, 56.8792, 0.2288 ) }
    dend_15 { pt3dadd( 313.514, 468.397, 56.8884, 0.2288 ) }
    dend_15 { pt3dadd( 313.767, 467.28, 56.8977, 0.2542 ) }
    dend_15 { pt3dadd( 314.021, 466.165, 56.9069, 0.305 ) }
    dend_15 { pt3dadd( 314.274, 465.05, 56.9162, 0.3814 ) }
    dend_15 { pt3dadd( 314.528, 463.934, 56.9254, 0.4576 ) }
    // Section: apic_11, id: apic_11, parent: apic_9 (entry count 91/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 366.249, 501.38, 60.0359, 0.2288 ) }
    apic_11 { pt3dadd( 366.536, 501.287, 60.7174, 0.2288 ) }
    apic_11 { pt3dadd( 367.336, 501.031, 62.6172, 0.2288 ) }
    apic_11 { pt3dadd( 368.137, 500.773, 64.5173, 0.2796 ) }
    apic_11 { pt3dadd( 369.25, 500.525, 64.5397, 0.3814 ) }
    apic_11 { pt3dadd( 370.368, 500.277, 64.545, 0.483 ) }
    apic_11 { pt3dadd( 371.484, 500.029, 64.5504, 0.5084 ) }
    apic_11 { pt3dadd( 372.601, 499.78, 64.5557, 0.4322 ) }
    apic_11 { pt3dadd( 373.731, 499.652, 64.5607, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_11 { pt3dadd( 374.875, 499.652, 64.5652, 0.3814 ) }
    apic_11 { pt3dadd( 376.019, 499.652, 64.5694, 0.4322 ) }
    apic_11 { pt3dadd( 377.163, 499.652, 64.5739, 0.3814 ) }
    apic_11 { pt3dadd( 378.008, 498.903, 64.4157, 0.356 ) }
    apic_11 { pt3dadd( 378.843, 498.123, 64.2505, 0.2796 ) }
    apic_11 { pt3dadd( 379.679, 497.344, 64.0856, 0.2542 ) }
    apic_11 { pt3dadd( 380.582, 496.664, 63.9775, 0.2288 ) }
    apic_11 { pt3dadd( 381.609, 496.159, 63.968, 0.2288 ) }
    apic_11 { pt3dadd( 382.635, 495.652, 63.9582, 0.2288 ) }
    apic_11 { pt3dadd( 383.661, 495.146, 63.9486, 0.2288 ) }
    apic_11 { pt3dadd( 384.686, 494.639, 63.9388, 0.2542 ) }
    apic_11 { pt3dadd( 385.712, 494.134, 63.929, 0.2796 ) }
    apic_11 { pt3dadd( 386.738, 493.627, 63.9195, 0.305 ) }
    apic_11 { pt3dadd( 387.764, 493.121, 63.9097, 0.2796 ) }
    apic_11 { pt3dadd( 388.77, 492.646, 63.4894, 0.2542 ) }
    apic_11 { pt3dadd( 389.747, 492.217, 62.4806, 0.2288 ) }
    apic_11 { pt3dadd( 390.725, 491.79, 61.4715, 0.2288 ) }
    apic_11 { pt3dadd( 391.727, 491.534, 60.6939, 0.2288 ) }
    apic_11 { pt3dadd( 392.817, 491.88, 60.716, 0.2288 ) }
    apic_11 { pt3dadd( 393.908, 492.225, 60.7384, 0.2288 ) }
    apic_11 { pt3dadd( 394.999, 492.571, 60.7606, 0.2288 ) }
    apic_11 { pt3dadd( 396.09, 492.906, 60.7816, 0.2288 ) }
    apic_11 { pt3dadd( 397.231, 492.818, 60.7491, 0.2288 ) }
    apic_11 { pt3dadd( 398.372, 492.73, 60.7163, 0.2288 ) }
    apic_11 { pt3dadd( 399.512, 492.642, 60.6838, 0.2288 ) }
    apic_11 { pt3dadd( 400.643, 492.506, 60.6581, 0.2288 ) }
    apic_11 { pt3dadd( 401.745, 492.198, 60.6584, 0.2288 ) }
    apic_11 { pt3dadd( 402.847, 491.889, 60.6584, 0.2288 ) }
    apic_11 { pt3dadd( 403.949, 491.581, 60.6586, 0.2288 ) }
    apic_11 { pt3dadd( 405.05, 491.272, 60.6589, 0.2288 ) }
    apic_11 { pt3dadd( 406.14, 490.934, 60.6637, 0.2288 ) }
    apic_11 { pt3dadd( 407.164, 490.424, 60.6956, 0.2288 ) }
    apic_11 { pt3dadd( 408.188, 489.912, 60.7275, 0.2288 ) }
    apic_11 { pt3dadd( 409.211, 489.401, 60.7592, 0.2288 ) }
    apic_11 { pt3dadd( 410.235, 488.891, 60.7911, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_9 (entry count 35/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 366.249, 501.38, 60.0359, 0.2288 ) }
    apic_10 { pt3dadd( 366.889, 501.61, 59.297, 0.2288 ) }
    apic_10 { pt3dadd( 367.872, 501.964, 58.1608, 0.2288 ) }
    apic_10 { pt3dadd( 368.856, 502.319, 57.0245, 0.2288 ) }
    apic_10 { pt3dadd( 369.876, 502.424, 56.2713, 0.2288 ) }
    apic_10 { pt3dadd( 370.96, 502.063, 56.2405, 0.2542 ) }
    apic_10 { pt3dadd( 372.046, 501.7, 56.2094, 0.2796 ) }
    apic_10 { pt3dadd( 373.127, 501.547, 56.2033, 0.305 ) }
    apic_10 { pt3dadd( 374.198, 501.947, 56.2624, 0.305 ) }
    apic_10 { pt3dadd( 375.268, 502.349, 56.3214, 0.305 ) }
    apic_10 { pt3dadd( 376.361, 502.678, 56.1599, 0.305 ) }
    apic_10 { pt3dadd( 377.458, 502.987, 55.9342, 0.2796 ) }
    apic_10 { pt3dadd( 378.556, 503.296, 55.7088, 0.2542 ) }
    apic_10 { pt3dadd( 379.653, 503.604, 55.4831, 0.2288 ) }
    apic_10 { pt3dadd( 380.752, 503.913, 55.2574, 0.2288 ) }
    apic_10 { pt3dadd( 381.849, 504.221, 55.0318, 0.2288 ) }
    apic_10 { pt3dadd( 382.947, 504.529, 54.8061, 0.2288 ) }
    apic_10 { pt3dadd( 384.045, 504.838, 54.5804, 0.2288 ) }
    apic_10 { pt3dadd( 385.036, 505.292, 54.3922, 0.2288 ) }
    apic_10 { pt3dadd( 385.653, 506.255, 54.3354, 0.2288 ) }
    apic_10 { pt3dadd( 386.571, 506.794, 54.3119, 0.2288 ) }
    apic_10 { pt3dadd( 387.684, 507.059, 54.3099, 0.2288 ) }
    apic_10 { pt3dadd( 388.797, 507.324, 54.308, 0.2288 ) }
    apic_10 { pt3dadd( 389.91, 507.588, 54.306, 0.2288 ) }
    apic_10 { pt3dadd( 390.901, 508.004, 53.8012, 0.2288 ) }
    apic_10 { pt3dadd( 391.719, 508.63, 52.5865, 0.2288 ) }
    apic_10 { pt3dadd( 392.537, 509.257, 51.3716, 0.2288 ) }
    apic_10 { pt3dadd( 393.355, 509.884, 50.157, 0.2288 ) }
    apic_10 { pt3dadd( 393.895, 510.826, 50.4717, 0.2288 ) }
    apic_10 { pt3dadd( 394.366, 511.829, 50.5658, 0.2288 ) }
    apic_10 { pt3dadd( 394.816, 512.831, 49.784, 0.2288 ) }
    apic_10 { pt3dadd( 395.407, 513.738, 49.224, 0.2288 ) }
    apic_10 { pt3dadd( 396.313, 514.437, 49.152, 0.2288 ) }
    apic_10 { pt3dadd( 396.597, 515.458, 49.1789, 0.2288 ) }
    apic_10 { pt3dadd( 396.648, 516.601, 49.2428, 0.2288 ) }
    apic_10 { pt3dadd( 397.069, 517.368, 48.7416, 0.2288 ) }
    apic_10 { pt3dadd( 398.049, 517.568, 47.3872, 0.2542 ) }
    apic_10 { pt3dadd( 399.031, 517.769, 46.0326, 0.3304 ) }
    apic_10 { pt3dadd( 400.011, 517.969, 44.6782, 0.4322 ) }
    apic_10 { pt3dadd( 400.992, 518.169, 43.3236, 0.483 ) }
    apic_10 { pt3dadd( 402.003, 518.285, 42.2439, 0.4576 ) }
    apic_10 { pt3dadd( 403.126, 518.07, 42.2402, 0.3814 ) }
    apic_10 { pt3dadd( 404.247, 517.928, 42.2388, 0.3304 ) }
    apic_10 { pt3dadd( 405.354, 518.217, 42.2492, 0.2796 ) }
    apic_10 { pt3dadd( 406.461, 518.505, 42.2596, 0.2542 ) }
    apic_10 { pt3dadd( 407.535, 518.668, 41.461, 0.2288 ) }
    apic_10 { pt3dadd( 408.604, 518.806, 40.5216, 0.2288 ) }
    apic_10 { pt3dadd( 409.673, 518.946, 39.5822, 0.2288 ) }
    apic_10 { pt3dadd( 410.742, 519.085, 38.6428, 0.2542 ) }
    apic_10 { pt3dadd( 411.863, 519.239, 38.4474, 0.3304 ) }
    apic_10 { pt3dadd( 412.995, 519.394, 38.4252, 0.4576 ) }
    apic_10 { pt3dadd( 414.129, 519.55, 38.4028, 0.6864 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 87/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 314.528, 463.934, 56.9254, 0.4576 ) }
    dend_17 { pt3dadd( 314.528, 463.704, 55.7508, 0.3814 ) }
    dend_17 { pt3dadd( 314.527, 463.209, 53.2269, 0.305 ) }
    dend_17 { pt3dadd( 314.526, 462.714, 50.7027, 0.2542 ) }
    dend_17 { pt3dadd( 314.524, 462.218, 48.1788, 0.2542 ) }
    dend_17 { pt3dadd( 314.59, 461.443, 46.7642, 0.2796 ) }
    dend_17 { pt3dadd( 314.741, 460.308, 46.7662, 0.305 ) }
    dend_17 { pt3dadd( 314.892, 459.174, 46.7678, 0.2796 ) }
    dend_17 { pt3dadd( 315.043, 458.04, 46.7698, 0.2542 ) }
    dend_17 { pt3dadd( 315.194, 456.907, 46.7718, 0.2288 ) }
    dend_17 { pt3dadd( 315.346, 455.772, 46.7734, 0.2288 ) }
    dend_17 { pt3dadd( 315.41, 454.637, 46.5746, 0.2288 ) }
    dend_17 { pt3dadd( 315.412, 453.502, 46.235, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( 315.415, 452.366, 45.8954, 0.2288 ) }
    dend_17 { pt3dadd( 315.419, 451.231, 45.556, 0.2288 ) }
    dend_17 { pt3dadd( 315.605, 450.115, 45.4202, 0.2288 ) }
    dend_17 { pt3dadd( 315.904, 449.011, 45.4098, 0.2288 ) }
    dend_17 { pt3dadd( 316.203, 447.906, 45.3998, 0.2288 ) }
    dend_17 { pt3dadd( 316.502, 446.802, 45.3897, 0.2288 ) }
    dend_17 { pt3dadd( 317.199, 445.905, 45.3902, 0.2288 ) }
    dend_17 { pt3dadd( 317.931, 445.025, 45.3916, 0.2288 ) }
    dend_17 { pt3dadd( 318.663, 444.147, 45.393, 0.2288 ) }
    dend_17 { pt3dadd( 319.624, 443.538, 45.3978, 0.2288 ) }
    dend_17 { pt3dadd( 320.612, 442.959, 45.4028, 0.2288 ) }
    dend_17 { pt3dadd( 321.599, 442.38, 45.4082, 0.2288 ) }
    dend_17 { pt3dadd( 322.437, 441.629, 45.2004, 0.2288 ) }
    dend_17 { pt3dadd( 323.198, 440.784, 44.8804, 0.2542 ) }
    dend_17 { pt3dadd( 323.96, 439.94, 44.5606, 0.2796 ) }
    dend_17 { pt3dadd( 324.721, 439.097, 44.2406, 0.305 ) }
    dend_17 { pt3dadd( 325.482, 438.253, 43.9208, 0.305 ) }
    dend_17 { pt3dadd( 326.243, 437.408, 43.6008, 0.305 ) }
    dend_17 { pt3dadd( 326.957, 436.518, 43.5008, 0.3304 ) }
    dend_17 { pt3dadd( 327.651, 435.609, 43.4963, 0.3304 ) }
    dend_17 { pt3dadd( 328.344, 434.698, 43.4916, 0.3304 ) }
    dend_17 { pt3dadd( 329.037, 433.789, 43.4871, 0.2796 ) }
    dend_17 { pt3dadd( 329.73, 432.878, 43.4826, 0.2542 ) }
    dend_17 { pt3dadd( 330.493, 432.029, 43.5016, 0.2288 ) }
    dend_17 { pt3dadd( 331.301, 431.22, 43.5364, 0.2288 ) }
    dend_17 { pt3dadd( 332.11, 430.411, 43.5714, 0.2288 ) }
    dend_17 { pt3dadd( 332.919, 429.602, 43.6061, 0.2288 ) }
    dend_17 { pt3dadd( 333.265, 428.523, 43.5896, 0.2288 ) }
    dend_17 { pt3dadd( 333.572, 427.421, 43.5683, 0.2288 ) }
    dend_17 { pt3dadd( 333.877, 426.319, 43.5473, 0.2288 ) }
    dend_17 { pt3dadd( 334.17, 425.213, 43.5719, 0.2288 ) }
    dend_17 { pt3dadd( 334.432, 424.101, 43.6957, 0.2542 ) }
    dend_17 { pt3dadd( 334.694, 422.988, 43.8192, 0.305 ) }
    dend_17 { pt3dadd( 334.957, 421.876, 43.9426, 0.356 ) }
    dend_17 { pt3dadd( 335.219, 420.764, 44.0661, 0.3814 ) }
    dend_17 { pt3dadd( 335.481, 419.651, 44.1899, 0.356 ) }
    dend_17 { pt3dadd( 335.704, 418.545, 43.7996, 0.3304 ) }
    dend_17 { pt3dadd( 335.919, 417.439, 43.3101, 0.2796 ) }
    dend_17 { pt3dadd( 336.133, 416.334, 42.8207, 0.305 ) }
    dend_17 { pt3dadd( 336.348, 415.227, 42.3312, 0.3304 ) }
    dend_17 { pt3dadd( 336.806, 414.192, 42.2332, 0.4322 ) }
    dend_17 { pt3dadd( 337.336, 413.178, 42.2531, 0.483 ) }
    dend_17 { pt3dadd( 337.865, 412.165, 42.273, 0.6102 ) }
    dend_17 { pt3dadd( 338.395, 411.151, 42.2929, 0.661 ) }
    dend_17 { pt3dadd( 338.925, 410.137, 42.313, 0.661 ) }
    dend_17 { pt3dadd( 339.207, 409.029, 42.2856, 0.5084 ) }
    dend_17 { pt3dadd( 339.485, 407.919, 42.2576, 0.356 ) }
    dend_17 { pt3dadd( 339.762, 406.81, 42.2293, 0.305 ) }
    dend_17 { pt3dadd( 340.034, 405.699, 42.2016, 0.356 ) }
    dend_17 { pt3dadd( 339.799, 404.58, 42.2061, 0.4576 ) }
    dend_17 { pt3dadd( 339.563, 403.46, 42.2106, 0.5084 ) }
    dend_17 { pt3dadd( 339.327, 402.341, 42.2148, 0.5084 ) }
    dend_17 { pt3dadd( 339.067, 401.353, 41.629, 0.4576 ) }
    dend_17 { pt3dadd( 338.738, 400.723, 39.4344, 0.356 ) }
    dend_17 { pt3dadd( 338.007, 400.244, 38.407, 0.2796 ) }
    dend_17 { pt3dadd( 336.916, 399.9, 38.4266, 0.2542 ) }
    dend_17 { pt3dadd( 335.826, 399.557, 38.446, 0.305 ) }
    dend_17 { pt3dadd( 334.734, 399.212, 38.4656, 0.4576 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 58/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 314.528, 463.934, 56.9254, 0.4576 ) }
    dend_16 { pt3dadd( 314.898, 463.163, 56.5256, 0.305 ) }
    dend_16 { pt3dadd( 315.385, 462.151, 56.0006, 0.2542 ) }
    dend_16 { pt3dadd( 315.872, 461.138, 55.4753, 0.2288 ) }
    dend_16 { pt3dadd( 316.359, 460.125, 54.9503, 0.2288 ) }
    dend_16 { pt3dadd( 316.846, 459.112, 54.425, 0.2288 ) }
    dend_16 { pt3dadd( 317.333, 458.1, 53.9, 0.2796 ) }
    dend_16 { pt3dadd( 317.838, 457.079, 53.7611, 0.3814 ) }
    dend_16 { pt3dadd( 318.35, 456.056, 53.7435, 0.483 ) }
    dend_16 { pt3dadd( 318.861, 455.033, 53.7256, 0.483 ) }
    dend_16 { pt3dadd( 319.376, 454.011, 53.7099, 0.4068 ) }
    dend_16 { pt3dadd( 319.922, 453.006, 53.723, 0.3304 ) }
    dend_16 { pt3dadd( 320.467, 452.0, 53.7362, 0.305 ) }
    dend_16 { pt3dadd( 321.013, 450.995, 53.7496, 0.2796 ) }
    dend_16 { pt3dadd( 321.499, 449.972, 53.8709, 0.2542 ) }
    dend_16 { pt3dadd( 321.752, 448.878, 54.4163, 0.2288 ) }
    dend_16 { pt3dadd( 322.005, 447.784, 54.9615, 0.2288 ) }
    dend_16 { pt3dadd( 322.258, 446.692, 55.5069, 0.2288 ) }
    dend_16 { pt3dadd( 322.51, 445.598, 56.0524, 0.2542 ) }
    dend_16 { pt3dadd( 322.762, 444.505, 56.5975, 0.2796 ) }
    dend_16 { pt3dadd( 322.923, 443.386, 56.8543, 0.305 ) }
    dend_16 { pt3dadd( 323.007, 442.245, 56.8739, 0.2796 ) }
    dend_16 { pt3dadd( 323.092, 441.103, 56.8932, 0.2542 ) }
    dend_16 { pt3dadd( 323.617, 440.098, 56.884, 0.2288 ) }
    dend_16 { pt3dadd( 324.185, 439.105, 56.8722, 0.2288 ) }
    dend_16 { pt3dadd( 324.394, 438.056, 57.3199, 0.2288 ) }
    dend_16 { pt3dadd( 324.318, 436.963, 58.1283, 0.2288 ) }
    dend_16 { pt3dadd( 324.244, 435.871, 58.9369, 0.2288 ) }
    dend_16 { pt3dadd( 324.169, 434.777, 59.7453, 0.2288 ) }
    dend_16 { pt3dadd( 324.095, 433.685, 60.5539, 0.2288 ) }
    dend_16 { pt3dadd( 324.04, 432.549, 60.6942, 0.2288 ) }
    dend_16 { pt3dadd( 323.988, 431.406, 60.7368, 0.2288 ) }
    dend_16 { pt3dadd( 324.402, 430.383, 60.7404, 0.2288 ) }
    dend_16 { pt3dadd( 324.997, 429.406, 60.7289, 0.2288 ) }
    dend_16 { pt3dadd( 325.526, 428.433, 60.8689, 0.2288 ) }
    dend_16 { pt3dadd( 325.429, 427.491, 62.4445, 0.2288 ) }
    dend_16 { pt3dadd( 325.332, 426.551, 64.0203, 0.2288 ) }
    dend_16 { pt3dadd( 325.236, 425.61, 65.5962, 0.2288 ) }
    dend_16 { pt3dadd( 325.181, 424.581, 66.4798, 0.2288 ) }
    dend_16 { pt3dadd( 325.182, 423.437, 66.4723, 0.2542 ) }
    dend_16 { pt3dadd( 325.444, 422.38, 66.4608, 0.305 ) }
    dend_16 { pt3dadd( 326.13, 421.465, 66.4434, 0.4068 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_16 { pt3dadd( 326.459, 420.419, 67.158, 0.5084 ) }
    dend_16 { pt3dadd( 326.754, 419.361, 67.9414, 0.5592 ) }
    dend_16 { pt3dadd( 327.049, 418.304, 68.7252, 0.5338 ) }
    dend_16 { pt3dadd( 327.343, 417.245, 69.5089, 0.4576 ) }
    dend_16 { pt3dadd( 327.638, 416.187, 70.2926, 0.4576 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_228, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_228 = new SectionList()
    soma_0 ModelViewParmSubset_228.append()
    axon_0 ModelViewParmSubset_228.append()
    axon_1 ModelViewParmSubset_228.append()

    // Group: {name=ModelViewParmSubset_229, groups=[], sections=[dend_29, dend_9, apic_0, dend_0, dend_28, dend_10, apic_14, apic_1, dend_4, dend_1, dend_23, dend_11, apic_7, apic_2, dend_8, dend_5, dend_3, dend_2, dend_27, dend_24, dend_13, dend_12, apic_13, apic_8, apic_4, apic_3, dend_7, dend_6, dend_26, dend_25, dend_20, dend_19, dend_14, apic_12, apic_9, apic_6, apic_5, dend_22, dend_21, dend_18, dend_15, apic_11, apic_10, dend_17, dend_16]}
    ModelViewParmSubset_229 = new SectionList()
    dend_29 ModelViewParmSubset_229.append()
    dend_9 ModelViewParmSubset_229.append()
    apic_0 ModelViewParmSubset_229.append()
    dend_0 ModelViewParmSubset_229.append()
    dend_28 ModelViewParmSubset_229.append()
    dend_10 ModelViewParmSubset_229.append()
    apic_14 ModelViewParmSubset_229.append()
    apic_1 ModelViewParmSubset_229.append()
    dend_4 ModelViewParmSubset_229.append()
    dend_1 ModelViewParmSubset_229.append()
    dend_23 ModelViewParmSubset_229.append()
    dend_11 ModelViewParmSubset_229.append()
    apic_7 ModelViewParmSubset_229.append()
    apic_2 ModelViewParmSubset_229.append()
    dend_8 ModelViewParmSubset_229.append()
    dend_5 ModelViewParmSubset_229.append()
    dend_3 ModelViewParmSubset_229.append()
    dend_2 ModelViewParmSubset_229.append()
    dend_27 ModelViewParmSubset_229.append()
    dend_24 ModelViewParmSubset_229.append()
    dend_13 ModelViewParmSubset_229.append()
    dend_12 ModelViewParmSubset_229.append()
    apic_13 ModelViewParmSubset_229.append()
    apic_8 ModelViewParmSubset_229.append()
    apic_4 ModelViewParmSubset_229.append()
    apic_3 ModelViewParmSubset_229.append()
    dend_7 ModelViewParmSubset_229.append()
    dend_6 ModelViewParmSubset_229.append()
    dend_26 ModelViewParmSubset_229.append()
    dend_25 ModelViewParmSubset_229.append()
    dend_20 ModelViewParmSubset_229.append()
    dend_19 ModelViewParmSubset_229.append()
    dend_14 ModelViewParmSubset_229.append()
    apic_12 ModelViewParmSubset_229.append()
    apic_9 ModelViewParmSubset_229.append()
    apic_6 ModelViewParmSubset_229.append()
    apic_5 ModelViewParmSubset_229.append()
    dend_22 ModelViewParmSubset_229.append()
    dend_21 ModelViewParmSubset_229.append()
    dend_18 ModelViewParmSubset_229.append()
    dend_15 ModelViewParmSubset_229.append()
    apic_11 ModelViewParmSubset_229.append()
    apic_10 ModelViewParmSubset_229.append()
    dend_17 ModelViewParmSubset_229.append()
    dend_16 ModelViewParmSubset_229.append()

    // Group: {name=dend, groups=[], sections=[dend_29, dend_9, dend_0, dend_28, dend_10, dend_4, dend_1, dend_23, dend_11, dend_8, dend_5, dend_3, dend_2, dend_27, dend_24, dend_13, dend_12, dend_7, dend_6, dend_26, dend_25, dend_20, dend_19, dend_14, dend_22, dend_21, dend_18, dend_15, dend_17, dend_16]}
    dend = new SectionList()
    dend_29 dend.append()
    dend_9 dend.append()
    dend_0 dend.append()
    dend_28 dend.append()
    dend_10 dend.append()
    dend_4 dend.append()
    dend_1 dend.append()
    dend_23 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_27 dend.append()
    dend_24 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_26 dend.append()
    dend_25 dend.append()
    dend_20 dend.append()
    dend_19 dend.append()
    dend_14 dend.append()
    dend_22 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_15 dend.append()
    dend_17 dend.append()
    dend_16 dend.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_7, apic_2, apic_13, apic_8, apic_4, apic_3, apic_12, apic_9, apic_6, apic_5, apic_11, apic_10]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_14 apic.append()
    apic_1 apic.append()
    apic_7 apic.append()
    apic_2 apic.append()
    apic_13 apic.append()
    apic_8 apic.append()
    apic_4 apic.append()
    apic_3 apic.append()
    apic_12 apic.append()
    apic_9 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_11 apic.append()
    apic_10 apic.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_11273, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_11273 = new SectionList()
    soma_0 OneSecGrp_SectionRef_11273.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_9, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_10, dend_10, dend_10, dend_10, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_11, dend_11, dend_11, dend_11, dend_11, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_8, apic_8, apic_8, apic_8, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_9 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec apic cm = 4.7200003  // units: uF/cm2
    forsec dend cm = 4.7200003  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 28.36  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 0.0012354556  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 3.9588735E-6  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.6525239  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 2.6435312E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.039248057  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.003941715  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.82822E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.21611185  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 2.3543024E-4  // units: S cm-2
        e_pas_nml2 = -96.39217  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.940596E-4  // units: S cm-2
        e_pas_nml2 = -96.39217  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-7  // units: S cm-2
        e_pas_nml2 = -96.39217  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 2.3886892E-4  // units: S cm-2
        e_pas_nml2 = -96.39217  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.8629188E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0032607368  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics
    forsec soma {
        insert CaDynamics
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_29 nseg = 3
    dend_28 nseg = 5
    apic_14 nseg = 5
    dend_1 nseg = 3
    dend_8 nseg = 5
    dend_2 nseg = 3
    dend_27 nseg = 3
    dend_12 nseg = 5
    apic_13 nseg = 3
    apic_3 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_19 nseg = 3
    apic_12 nseg = 3
    apic_6 nseg = 3
    apic_5 nseg = 15
    dend_22 nseg = 3
    dend_21 nseg = 5
    dend_18 nseg = 5
    apic_11 nseg = 3
    apic_10 nseg = 3
    dend_17 nseg = 5
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_473834758


