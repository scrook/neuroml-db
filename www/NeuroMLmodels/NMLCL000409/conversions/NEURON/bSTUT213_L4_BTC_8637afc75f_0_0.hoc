// Cell: bSTUT213_L4_BTC_8637afc75f_0_0
/*
{
  "id" : "bSTUT213_L4_BTC_8637afc75f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.5025, 1.8584, 2.77", "2.11209, -14.0027, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.2775, -3.7416, 1.38", "-6.38099, 12.3884, -3.97632, 1.38", "-8.38884, 15.6935, -4.34383, 1.66", "-10.1031, 18.5154, -4.65762, 1.38", "-11.4741, 20.7722, -4.90856, 1.11", "-12.5569, 22.5545, -5.10674, 1.11", "-15.0599, 26.6748, -5.56489, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.4475, 6.4384, 1.38", "6.01634, 10.7752, 7.6, 1.38", "6.15715, 13.4501, 8.32049, 1.38", "6.57453, 18.1272, 9.73348, 1.38", "7.14503, 23.1157, 11.3121, 1.38", "7.57443, 26.8703, 12.5003, 1.38", "7.95758, 30.2207, 13.5606, 0.83", "8.20781, 33.4777, 14.6639, 1.38", "8.57428, 37.3428, 16.0307, 1.38", "9.41159, 41.952, 17.6325, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.64226", "6.19422, -24.7888, -0.978947, 0.64226", "9.61231, -39.3941, -0.978947, 0.64226" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.11209, -14.0027, 1.8584, 2.22", "4.26569, -18.4121, 1.14952, 2.22", "5.38602, -20.7059, 0.780758, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.11209, -14.0027, 1.8584, 0.83", "-0.275169, -15.9516, 3.53898, 0.83", "-1.86454, -17.2945, 4.93847, 1.11", "-4.05734, -19.1473, 6.8693, 0.83", "-5.74161, -20.5704, 8.35234, 0.83", "-8.59732, -22.9834, 10.8668, 1.38", "-11.3268, -25.2897, 13.2703, 1.38", "-13.6689, -27.077, 15.5993, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.0599, 26.6748, -5.56489, 0.55", "-19.0037, 27.5049, -4.05503, 0.55", "-20.8794, 27.6655, -3.02469, 0.55", "-22.2125, 27.7026, -2.18734, 0.55", "-24.4036, 27.6725, -0.750616, 1.11", "-28.241, 27.4922, 1.76681, 0.83", "-32.1068, 27.149, 4.3542, 0.83", "-36.1536, 26.4734, 7.28122, 0.55", "-38.3517, 25.9754, 8.89196, 1.38", "-39.9484, 25.5177, 10.0756, 0.28", "-41.4033, 25.007, 11.1634, 0.83", "-43.1574, 24.3895, 12.5205, 0.28", "-44.3722, 23.9471, 13.5083, 0.55", "-45.9123, 23.4763, 14.685, 0.55", "-48.3583, 22.8166, 16.5396, 0.55", "-50.4711, 22.2612, 18.1256, 0.55", "-54.0676, 21.4187, 20.8704, 0.55", "-55.5888, 21.0999, 21.9915, 0.55", "-58.5076, 20.5294, 24.0564, 0.83", "-60.5628, 20.1757, 25.4524, 0.83", "-62.2057, 19.9155, 26.4837, 0.83", "-65.708, 19.4318, 28.6104, 0.83", "-67.0112, 19.2334, 29.358, 0.83", "-70.1492, 18.7157, 31.2672, 0.83", "-74.4325, 17.902, 33.9434, 0.83", "-75.5087, 17.7238, 34.609, 0.83", "-77.8588, 17.3865, 36.0086, 0.28", "-79.1799, 17.1583, 36.7054, 0.83", "-82.3567, 16.5787, 38.284, 0.28", "-84.5964, 16.1514, 39.2382, 0.83", "-87.2226, 15.6466, 40.2088, 0.28", "-87.7921, 15.535, 40.4101, 0.55", "-91.0591, 14.9893, 41.4124, 0.55", "-93.4156, 14.6705, 42.056, 0.28", "-96.1145, 14.3186, 42.5229, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-15.0599, 26.6748, -5.56489, 1.11", "-16.1184, 29.4779, -7.53756, 1.11", "-16.6938, 31.0235, -8.46276, 1.11", "-17.3878, 32.8877, -9.57863, 1.11", "-17.9713, 34.4547, -10.5167, 1.11", "-18.6583, 36.3, -11.6212, 0.83", "-19.3618, 38.1898, -12.7524, 0.83", "-19.8454, 39.6999, -13.4324, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.41159, 41.952, 17.6325, 0.83", "8.58411, 44.7187, 18.9868, 0.83", "7.96521, 46.7881, 19.9997, 0.83", "7.48584, 48.3909, 20.7842, 0.83", "6.73777, 50.8921, 22.0085, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.41159, 41.952, 17.6325, 0.83", "13.8699, 44.8428, 19.248, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.64226", "13.0304, -53.9995, -0.978947, 0.64226", "16.4485, -68.6049, -0.978947, 0.64226" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "5.38602, -20.7059, 0.780758, 0.83", "5.51269, -22.2316, -1.69018, 0.83", "5.5707, -22.9433, -3.16616, 0.83", "5.62789, -23.7072, -5.02553, 0.83", "5.77486, -26.6897, -12.6722, 0.83", "5.85945, -28.3311, -16.9121, 0.83", "5.98622, -30.791, -23.2662, 0.55", "5.90918, -31.8883, -26.3611, 0.83", "5.74475, -33.0521, -29.9472, 0.83", "5.57761, -34.0386, -33.3517, 1.11", "5.60243, -34.1928, -33.9455, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "5.38602, -20.7059, 0.780758, 1.66", "6.05133, -22.5457, 0.734421, 1.66", "7.0059, -24.7711, 0.609119, 1.11", "7.72786, -26.2497, 0.495458, 1.11", "9.15384, -28.5431, 0.447447, 1.11", "10.3713, -30.501, 0.406459, 1.11", "11.2228, -31.8705, 0.377789, 1.38", "12.2373, -33.3359, 0.328994, 1.11", "12.8885, -34.1506, 0.314634, 1.11", "15.7212, -36.9723, 0.321938, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-13.6689, -27.077, 15.5993, 0.28", "-13.8998, -28.7135, 19.8537, 0.28", "-14.0968, -29.3707, 21.7483, 1.11", "-14.8042, -31.4702, 28.3748, 0.55", "-14.9874, -32.1239, 30.3826, 0.83", "-15.3928, -33.5709, 34.8273, 0.83", "-15.8601, -35.2387, 39.95, 0.55", "-16.1624, -36.1572, 42.9628, 1.11", "-16.669, -37.6956, 48.3938, 0.55", "-16.9067, -38.257, 50.2944, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-13.6689, -27.077, 15.5993, 0.83", "-17.1504, -27.3273, 17.2917, 0.83", "-19.7666, -27.5012, 18.5191, 1.11", "-22.3665, -27.605, 19.6542, 0.83", "-25.3033, -27.6779, 20.8379, 0.83", "-28.925, -27.7679, 22.2977, 0.83", "-32.3822, -27.8537, 23.6912, 0.83", "-36.1826, -27.9545, 25.1611, 1.11", "-40.2054, -28.0234, 26.5666, 1.11", "-43.7853, -28.0519, 27.7267, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-96.1145, 14.3186, 42.5229, 0.28", "-95.8752, 12.793, 43.346, 0.28", "-95.7902, 12.2513, 43.6382, 0.83", "-95.3613, 9.51701, 45.1132, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-96.1145, 14.3186, 42.5229, 0.28", "-100.279, 15.3048, 43.7782, 0.28", "-101.679, 15.8548, 43.7821, 0.55", "-104.735, 17.1982, 43.3093, 0.28", "-107.463, 18.4163, 42.6987, 0.83", "-110.713, 19.8672, 41.9713, 0.28", "-113.83, 21.259, 41.2735, 0.28", "-119.025, 23.9387, 39.1746, 0.28", "-120.066, 24.5379, 38.6207, 0.83", "-121.62, 25.6096, 37.4954, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-19.8454, 39.6999, -13.4324, 0.55", "-20.5163, 39.8327, -13.8477, 0.55", "-21.6992, 40.067, -14.5801, 0.55", "-22.8412, 40.2931, -15.2872, 0.83", "-24.9016, 40.7011, -16.5628, 0.55", "-26.1931, 40.9568, -17.3624, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-19.8454, 39.6999, -13.4324, 0.55", "-18.3922, 43.9328, -15.4144, 0.55", "-17.7329, 46.0622, -16.2328, 0.55", "-17.1858, 47.9213, -16.7525, 0.83", "-16.4579, 50.3902, -17.3101, 0.55", "-15.9991, 51.9796, -17.6525, 0.83", "-15.3001, 54.352, -18.1312, 0.55", "-14.775, 56.1764, -18.3804, 0.83", "-13.9517, 58.7832, -18.8231, 0.28", "-13.444, 60.2304, -19.1279, 0.83", "-12.53, 62.5989, -19.7072, 0.55", "-11.7885, 64.4497, -20.2041, 0.83", "-10.6091, 67.2719, -21.0486, 0.55", "-9.22511, 70.4096, -22.1118, 0.83", "-7.91554, 73.2977, -23.2248, 0.83", "-6.14054, 77.1408, -24.7064, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "6.73777, 50.8921, 22.0085, 0.83", "7.71695, 54.7229, 22.9438, 0.83", "8.59332, 58.9293, 23.9771, 0.83", "9.05311, 61.5258, 24.7184, 0.83", "9.62345, 65.1266, 25.8449, 0.83", "10.2211, 69.1784, 27.1374, 0.83", "10.8003, 73.6645, 28.5808, 0.83", "11.2596, 77.9299, 30.0321, 0.83", "11.6657, 82.1578, 31.5745, 0.83", "11.8383, 84.6987, 32.4798, 0.55", "11.9414, 87.4684, 33.3652, 0.55", "12.0138, 89.794, 33.9499, 0.83", "12.0877, 91.8805, 34.3014, 0.83", "12.1924, 93.8109, 34.5084, 0.55", "12.3286, 96.2595, 34.5421, 0.83", "12.442, 98.2489, 34.5096, 0.55", "12.5223, 99.9576, 34.4713, 0.83", "12.606, 102.606, 34.4269, 0.55", "12.6228, 105.266, 34.3564, 0.83", "12.5538, 107.688, 34.0836, 0.55", "12.4693, 109.005, 33.8778, 0.55", "12.2838, 111.04, 33.5454, 0.83", "11.945, 113.948, 33.0507, 0.83", "11.6434, 116.356, 32.6469, 0.55", "10.8471, 121.803, 31.7154, 0.83", "10.3524, 124.961, 31.1802, 0.83", "9.76972, 128.813, 30.5833, 0.83", "9.44896, 131.152, 30.3214, 0.83", "9.17854, 133.022, 30.231, 0.83", "8.90627, 134.86, 30.292, 0.55", "8.58144, 136.948, 30.5127, 0.55", "8.12582, 139.323, 30.7637, 0.83", "7.12698, 143.722, 31.2237, 0.83", "6.31837, 147.201, 31.5602, 1.11", "5.67042, 149.842, 31.7982, 0.55", "4.886, 152.732, 32.0674, 1.11", "3.63555, 156.778, 32.4832, 0.83", "2.51877, 160.128, 32.7891, 0.83", "1.72362, 162.357, 32.9167, 0.83", "0.958036, 164.586, 32.9637, 0.55", "-0.0732439, 167.724, 32.9505, 0.55", "-0.296343, 168.467, 32.9263, 0.55", "-1.01553, 171.235, 32.8404, 0.55", "-1.49572, 173.264, 32.7132, 0.28", "-2.18539, 176.534, 32.3505, 0.55", "-2.83834, 180.281, 31.7661, 0.55", "-3.15029, 182.402, 31.3717, 0.55", "-3.66349, 186.104, 30.6651, 0.83", "-4.16997, 190.021, 29.8988, 0.83", "-4.57263, 192.804, 29.2387, 0.83", "-4.85669, 194.412, 28.7804, 0.55", "-5.12677, 195.838, 28.3346, 0.83", "-5.64282, 198.12, 27.6748, 0.83", "-6.42804, 200.996, 26.9188, 0.83", "-7.47551, 204.598, 26.2502, 0.83", "-8.16929, 206.868, 25.9133, 0.83", "-8.86218, 208.969, 25.5524, 0.83", "-9.88405, 211.94, 24.9711, 0.55", "-11.026, 215.034, 24.3589, 0.55", "-11.8472, 217.285, 23.9505, 0.55", "-12.7209, 219.789, 23.509, 0.83", "-14.0161, 223.611, 22.7684, 1.11", "-15.2285, 227.622, 22.0551, 0.55", "-15.7809, 229.97, 21.7251, 0.55", "-16.3112, 232.706, 21.4358, 0.55", "-16.7047, 235.434, 21.2149, 0.83", "-16.9578, 238.744, 21.0241, 0.83", "-17.0482, 243.322, 20.8327, 0.83", "-16.8858, 248.823, 20.4859, 0.83", "-16.6877, 252.027, 20.1837, 0.55", "-16.4343, 255.206, 19.7948, 0.55", "-16.0424, 259.196, 19.2204, 0.83", "-15.8973, 261.065, 18.903, 0.83", "-15.836, 264.008, 18.3801, 0.83", "-16.0004, 267.468, 17.8678, 0.83", "-16.3583, 270.308, 17.6334, 0.28", "-16.6598, 271.769, 17.596, 0.83", "-17.7508, 275.919, 17.6405, 0.83", "-18.7498, 279.209, 17.8001, 0.83", "-19.8949, 282.387, 18.1315, 0.83", "-21.198, 285.638, 18.6316, 0.83", "-22.1283, 287.79, 19.0356, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "6.73777, 50.8921, 22.0085, 0.83", "6.12005, 51.538, 23.2256, 0.83", "5.68645, 52.136, 24.1847, 0.55", "4.98672, 53.1074, 25.7275, 0.55", "4.33023, 54.0169, 27.1669, 0.55", "3.58718, 54.9307, 28.7426, 0.55", "3.03705, 55.5128, 29.9008, 0.55", "2.11197, 56.3012, 31.8966, 0.55", "1.44122, 56.7054, 33.2694, 0.55", "0.473713, 57.0018, 35.0038, 0.55", "-1.11997, 56.9568, 37.4908, 0.55", "-2.09987, 56.6898, 38.8123, 0.55", "-3.17894, 56.1036, 40.1204, 0.55", "-3.83739, 55.5886, 40.8012, 0.55", "-4.37466, 55.0464, 41.2812, 0.55", "-5.38764, 53.7993, 42.029, 0.28", "-5.8819, 53.0819, 42.3412, 0.83", "-6.53885, 52.0395, 42.7425, 0.55", "-6.96017, 51.276, 42.9525, 0.55", "-7.47172, 50.1185, 43.1318, 0.55", "-7.92807, 48.9081, 43.2258, 0.83", "-8.30952, 47.8321, 43.2559, 0.55", "-8.64073, 46.9187, 43.2405, 0.55", "-9.42247, 44.7772, 43.137, 0.55", "-10.2316, 42.7348, 43.0228, 0.83", "-10.9033, 41.2203, 42.9178, 0.83", "-11.6809, 39.6974, 42.7183, 0.83", "-12.6516, 37.9954, 42.4788, 0.55", "-13.1207, 37.2198, 42.4021, 0.28", "-13.717, 36.2974, 42.3696, 0.55", "-14.4461, 35.2985, 42.3661, 0.28", "-16.0101, 33.2511, 42.4616, 0.55", "-16.9783, 32.0319, 42.5809, 0.55", "-17.9047, 30.8677, 42.7704, 0.28", "-18.7276, 29.8229, 42.9846, 0.55", "-20.1091, 27.9519, 43.395, 0.55", "-20.5707, 27.2779, 43.5629, 0.83", "-21.3513, 26.021, 43.8911, 0.55", "-22.407, 24.1542, 44.2612, 0.55", "-23.0772, 22.7087, 44.4437, 0.83", "-23.6764, 20.9661, 44.5801, 0.55", "-23.9808, 19.6206, 44.6125, 0.55", "-24.1925, 18.2669, 44.5932, 0.55", "-24.2508, 17.5483, 44.5546, 0.83", "-24.3067, 15.7003, 44.3867, 0.55", "-24.2902, 13.5393, 44.1407, 0.28", "-24.214, 10.4143, 43.7655, 0.28", "-24.1962, 9.10007, 43.565, 0.83", "-24.1649, 6.5202, 43.1368, 0.28", "-24.1554, 5.6152, 42.9939, 0.83", "-24.1517, 5.05041, 42.9119, 0.28", "-24.1271, 4.16494, 42.7581, 0.83", "-24.0855, 2.39873, 42.4547, 0.28", "-24.0902, 1.71924, 42.3676, 0.55", "-24.1678, 0.17737, 42.2407, 0.28", "-24.2322, -0.715916, 42.1833, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.8699, 44.8428, 19.248, 0.83", "16.1471, 45.659, 17.6176, 0.83", "18.8417, 46.7786, 15.8226, 0.83", "20.4731, 47.5331, 14.8342, 0.83", "29.9877, 52.2476, 9.81906, 0.55", "32.5191, 53.6019, 8.7533, 0.55", "33.8479, 54.3606, 8.33756, 0.55", "35.5218, 55.3504, 7.96645, 0.55", "37.0741, 56.392, 7.88469, 1.11", "38.6789, 57.7215, 8.1904, 0.55", "41.0592, 60.128, 9.36278, 0.55", "43.0717, 62.3369, 10.442, 0.55", "44.3363, 63.792, 11.1857, 0.55", "45.7966, 65.6751, 12.2395, 0.83", "47.3843, 68.0314, 13.5641, 0.55", "48.4901, 69.9627, 14.5825, 1.11", "49.5292, 72.013, 15.6579, 0.55", "50.5, 74.0449, 16.7191, 0.83", "52.1654, 77.587, 18.4975, 0.55", "53.0516, 79.4402, 19.3915, 0.55", "54.2906, 81.9979, 20.5398, 0.55", "55.3531, 83.9744, 21.3423, 0.55", "56.0431, 85.19, 21.7815, 0.28", "57.5031, 87.5724, 22.551, 0.55", "58.6673, 89.3423, 23.0349, 0.28", "59.7733, 90.9336, 23.4623, 0.55", "61.9025, 93.908, 24.2339, 0.55", "63.0815, 95.59, 24.6247, 0.55", "64.741, 97.9211, 25.1375, 0.28", "66.7785, 100.185, 24.9749, 0.83", "68.7449, 102.084, 24.4759, 0.28", "69.2265, 102.481, 24.3033, 0.55", "70.4784, 103.296, 23.7136, 0.28", "71.319, 103.758, 23.2685, 0.83", "82.0505, 108.958, 17.2566, 0.55", "86.2008, 110.808, 15.0164, 0.55", "87.4593, 111.37, 14.3786, 0.83", "90.2691, 112.757, 13.2656, 0.55", "91.5464, 113.491, 12.9594, 0.55", "92.7058, 114.532, 13.1244, 0.83", "93.6493, 116.061, 13.992, 0.28", "94.1268, 116.893, 14.296, 0.55", "95.192, 119.341, 15.1877, 0.28", "95.6885, 121.024, 15.9048, 0.55", "96.1117, 122.483, 16.4992, 0.28", "96.5018, 123.939, 16.872, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "13.8699, 44.8428, 19.248, 0.55", "14.5072, 44.2108, 20.677, 0.55", "15.4636, 43.2625, 22.8214, 0.28", "15.9653, 42.7649, 23.9465, 0.55", "16.887, 41.8509, 26.0132, 0.55", "18.0921, 40.6559, 28.7154, 0.55", "18.7509, 40.0025, 30.1928, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "5.60243, -34.1928, -33.9455, 0.55", "2.76968, -31.9569, -35.2474, 0.55", "1.92831, -31.3431, -35.9402, 0.83", "-0.00994188, -29.963, -37.7127, 0.55", "-0.813358, -29.42, -38.4289, 0.55", "-4.4801, -27.4044, -42.3062, 0.28", "-5.24627, -27.0476, -43.1384, 0.83", "-8.33694, -25.9698, -46.9692, 0.55", "-8.67014, -25.8814, -47.3936, 0.55", "-9.56826, -25.7133, -48.5612, 0.83", "-13.5968, -25.1287, -53.6596, 0.55", "-14.384, -25.0465, -54.6131, 0.55", "-15.2684, -24.9629, -55.7115, 0.83", "-17.1773, -24.7404, -58.2506, 0.55", "-17.5652, -24.6593, -58.8106, 0.55", "-18.2451, -24.4349, -59.9177, 0.55", "-20.8776, -23.1749, -64.4771, 0.28", "-21.566, -22.7931, -65.7744, 0.83", "-23.8245, -21.3374, -70.2086, 0.55", "-24.3815, -20.9017, -71.3613, 0.83", "-27.1156, -18.3462, -77.1866, 0.55", "-27.8173, -17.4955, -78.8609, 0.28", "-28.1951, -16.9235, -79.8517, 0.83", "-28.7766, -15.8436, -81.5684, 0.55", "-29.1316, -14.9568, -82.7806, 0.83", "-29.7302, -12.8007, -85.5165, 0.55", "-30.1459, -9.51599, -89.0755, 0.28", "-30.1797, -9.01697, -89.6086, 0.55", "-30.2177, -7.69414, -91.0063, 0.28", "-30.2183, -7.1593, -91.5725, 0.55", "-30.1882, -5.3489, -93.4522, 0.28", "-30.1518, -4.71268, -94.0894, 0.55", "-30.0532, -2.71588, -96.0669, 0.28", "-30.0323, -1.97893, -96.839, 0.55", "-30.0498, -0.344327, -98.5496, 0.28", "-30.0752, 0.0254123, -98.9345, 0.55", "-30.1992, 1.51523, -100.375, 0.28", "-30.246, 2.03225, -100.867, 0.55", "-30.4473, 3.64791, -102.317, 0.28", "-30.6217, 4.45375, -103.123, 0.55", "-31.2695, 6.81481, -105.465, 0.28", "-31.5918, 7.78055, -106.443, 0.55", "-32.6401, 10.432, -109.455, 0.28", "-32.9734, 11.2307, -110.441, 0.55", "-34.0856, 13.7771, -114.052, 0.28", "-34.488, 14.6202, -115.362, 0.28", "-34.9844, 15.6001, -116.976, 0.55", "-35.9132, 17.2965, -119.752, 0.28", "-36.0772, 17.6161, -120.23, 0.55", "-36.8218, 18.9747, -122.456, 0.28", "-37.1852, 19.6267, -123.512, 0.83", "-37.979, 20.9577, -125.645, 0.55", "-38.4848, 21.8209, -127.031, 0.55", "-39.3361, 23.3707, -129.42, 0.55", "-41.3808, 27.1989, -135.639, 0.83", "-42.0588, 28.5103, -137.897, 0.28", "-42.3946, 29.197, -139.159, 0.55", "-43.543, 31.708, -144.204, 0.55", "-43.7817, 32.3612, -145.576, 0.55", "-44.477, 34.4415, -150.26, 0.83", "-44.9238, 35.7586, -153.439, 0.28", "-45.3011, 36.4217, -155.569, 0.55", "-45.8066, 36.915, -158.188, 0.28", "-46.0429, 37.0141, -159.321, 0.83", "-47.5278, 37.0971, -165.687, 0.55", "-48.1509, 36.9563, -168.121, 0.55", "-49.7516, 36.4025, -173.63, 0.55", "-52.5348, 35.5228, -181.698, 0.55", "-53.2487, 35.314, -183.553, 0.55", "-55.1497, 34.8196, -188.18, 0.55", "-57.2489, 34.3818, -192.986, 0.55", "-58.9717, 34.1226, -196.698, 0.55", "-61.7962, 33.8219, -202.205, 0.55", "-64.8591, 33.6624, -207.729, 0.55", "-65.5514, 33.6476, -208.965, 0.55", "-68.5899, 33.5464, -214.378, 0.55", "-69.3281, 33.5188, -215.679, 0.28", "-69.5035, 33.5062, -215.995, 0.55", "-76.3577, 32.6893, -228.271, 0.28", "-76.9952, 32.6048, -229.371, 0.83", "-80.7871, 31.9849, -235.84, 0.28", "-81.0336, 31.9425, -236.254, 0.55", "-82.8405, 31.6655, -239.264, 0.28", "-83.5877, 31.5484, -240.479, 0.55", "-85.1911, 31.2269, -242.714, 0.28", "-85.7375, 31.1081, -243.488, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "5.60243, -34.1928, -33.9455, 0.55", "7.01953, -34.76, -36.9513, 0.55", "8.27812, -35.1995, -39.2808, 0.55", "11.0211, -36.1617, -44.6871, 0.83", "11.7447, -36.4663, -46.1377, 0.83", "12.5901, -36.8571, -47.818, 0.83", "13.3132, -37.1813, -49.2038, 0.83", "14.6147, -37.7422, -51.5963, 0.83", "16.7755, -38.7833, -55.6052, 0.83", "18.1531, -39.3651, -57.969, 0.83", "19.6309, -39.9268, -60.6376, 0.83", "21.2849, -40.4801, -63.6043, 0.83", "22.7951, -40.9399, -66.3025, 0.83", "25.2913, -41.6532, -70.5751, 0.83", "26.8796, -42.0206, -73.1264, 0.83", "28.9108, -42.3488, -76.3973, 0.83", "30.209, -42.5042, -78.5174, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "15.7212, -36.9723, 0.321938, 0.55", "18.2951, -36.7958, 1.34729, 0.55", "20.4328, -36.7629, 2.25343, 0.28", "21.7828, -36.8337, 2.86207, 0.55", "24.0679, -37.0274, 3.92136, 1.11", "28.1932, -37.5308, 6.03294, 0.55", "29.7672, -37.763, 6.90151, 0.55", "31.4987, -38.1047, 7.96169, 0.83", "33.3263, -38.4987, 9.14773, 0.28", "33.3263, -38.4987, 9.14773, 0.83", "36.3859, -39.6333, 11.4335, 0.28", "37.2052, -39.9904, 12.0643, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "15.7212, -36.9723, 0.321938, 0.83", "17.2693, -39.8599, -0.477827, 0.83", "18.6, -42.0538, -1.49239, 0.55", "19.443, -43.321, -2.36428, 0.83", "20.1308, -44.355, -3.07568, 0.83", "21.0841, -45.788, -4.06166, 0.83", "21.9214, -47.0466, -4.92759, 0.83", "23.6049, -49.1724, -7.01738, 0.83", "24.7887, -50.5856, -8.81545, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-43.7853, -28.0519, 27.7267, 0.55", "-44.9532, -25.7127, 26.7696, 0.55", "-46.417, -22.49, 25.4441, 0.83", "-48.4515, -17.9957, 23.4851, 0.55", "-49.3467, -15.8148, 22.5798, 0.55", "-50.56, -12.6266, 21.3026, 1.11", "-51.5989, -9.78574, 20.2148, 0.83", "-52.6243, -6.79156, 19.0925, 0.55", "-53.0109, -5.56638, 18.6572, 0.55", "-54.001, -2.55876, 17.8449, 0.55", "-54.2071, -1.94826, 17.6826, 1.11", "-54.7158, -0.442126, 17.582, 0.55", "-55.2691, 1.09439, 17.9432, 0.83", "-55.8493, 2.53351, 18.6157, 0.55", "-56.5938, 4.21289, 19.553, 0.55", "-57.2006, 5.40113, 20.2299, 0.83", "-60.2188, 11.0705, 22.7146, 0.55", "-61.0444, 12.6517, 23.2441, 0.83", "-62.1569, 14.705, 23.7117, 0.55", "-63.4363, 16.8432, 24.0193, 0.55", "-64.7231, 18.824, 24.0105, 1.11", "-67.1633, 22.5495, 23.5049, 0.55", "-67.9485, 23.7628, 23.2183, 0.55", "-69.9147, 26.9786, 22.4154, 0.55", "-71.1483, 29.0855, 21.8642, 0.55", "-72.7083, 31.8114, 21.2204, 1.11", "-74.4483, 34.8562, 20.6204, 0.55", "-75.5094, 36.7174, 20.3987, 1.11", "-76.8521, 39.0286, 20.1604, 0.28", "-77.3179, 39.8355, 20.1211, 0.55", "-78.0941, 41.139, 20.146, 0.28", "-79.1781, 42.8222, 20.3828, 0.83", "-80.9512, 45.3009, 20.915, 0.28", "-81.6115, 46.2212, 21.1828, 0.55", "-84.3309, 49.9838, 22.5501, 0.28", "-85.3474, 51.4337, 23.1088, 0.83", "-86.7771, 53.5428, 23.9131, 0.55", "-88.2095, 55.7081, 24.7231, 0.55", "-89.6581, 57.9193, 25.4906, 0.55", "-90.7372, 59.6516, 26.0545, 0.83", "-91.972, 61.7357, 26.6466, 0.28", "-93.1089, 63.7893, 27.1595, 0.55", "-94.4147, 66.498, 27.6017, 0.55", "-94.6317, 67.0521, 27.6561, 0.83", "-95.4977, 69.5664, 27.5251, 0.28", "-95.8578, 70.9981, 27.2943, 0.55", "-96.1057, 72.173, 26.9005, 0.28", "-96.6214, 74.5225, 25.6767, 0.55", "-97.1322, 76.9632, 24.0951, 0.55", "-97.8952, 80.4106, 21.6566, 0.28", "-98.4333, 82.6575, 19.6123, 0.83", "-99.2003, 85.8442, 16.3296, 0.55", "-99.7323, 88.1219, 13.7866, 0.55", "-99.9736, 89.0719, 12.6811, 0.55", "-100.402, 90.4981, 10.8677, 0.83", "-101.709, 94.4329, 5.9645, 0.28", "-102.03, 95.2357, 4.94111, 0.83", "-102.52, 96.3607, 3.64024, 0.28", "-103.081, 97.5298, 2.47946, 0.55", "-104.906, 100.388, 0.0352908, 0.83", "-105.608, 101.337, -0.299814, 0.83", "-106.796, 102.919, -0.025054, 0.28", "-107.357, 103.689, 0.294143, 0.55", "-108.611, 105.524, 1.37216, 0.28", "-109.434, 106.956, 2.30041, 0.55", "-111.274, 111.043, 5.97189, 0.28", "-111.594, 111.871, 6.79677, 0.55", "-112.011, 113.239, 8.15768, 0.28", "-112.28, 114.349, 9.2761, 0.83", "-112.651, 116.199, 11.1516, 0.83", "-113.481, 121.621, 16.3181, 0.28", "-113.577, 122.44, 17.0217, 0.55", "-113.847, 125.332, 19.3889, 0.28", "-113.972, 126.992, 20.6699, 0.83", "-114.079, 128.809, 21.9669, 0.28", "-114.171, 130.32, 22.8886, 0.83", "-114.4, 133.592, 24.2809, 0.28", "-114.497, 135.087, 24.8038, 0.83", "-114.685, 137.892, 25.5036, 0.28", "-114.847, 139.594, 25.6548, 0.55", "-115.049, 141.357, 25.5399, 0.28", "-115.361, 143.393, 24.9773, 0.55", "-115.827, 145.856, 23.8971, 0.28", "-116.037, 146.877, 23.3348, 0.83", "-116.586, 149.377, 21.7773, 0.28", "-117.086, 151.214, 20.345, 0.83", "-118.01, 154.476, 17.6432, 0.28", "-118.336, 155.519, 16.6063, 0.83", "-118.94, 157.349, 14.5234, 0.28", "-119.191, 158.058, 13.5616, 0.83", "-120.655, 162.15, 7.54686, 0.28", "-121.279, 163.698, 4.96771, 0.83", "-122.708, 167.182, -1.20887, 0.28", "-123.209, 168.413, -3.58586, 0.83", "-124.145, 170.601, -8.07849, 0.28", "-124.449, 171.273, -9.52958, 0.55", "-125.39, 173.308, -13.6793, 0.28", "-125.731, 173.979, -14.9897, 0.28", "-126.62, 175.72, -17.7901, 0.55", "-128.41, 178.339, -21.8287, 0.28", "-129.832, 180.149, -24.5041, 0.83", "-131.232, 181.761, -27.1361, 0.28", "-131.954, 182.555, -28.4326, 0.55", "-133.146, 183.846, -30.3132, 0.28", "-138.807, 190.025, -38.0675, 0.28", "-139.459, 190.766, -38.9003, 0.83", "-143.669, 195.7, -44.0799, 0.28", "-144.126, 196.241, -44.6755, 0.83", "-149.117, 202.691, -50.9567, 0.28", "-149.504, 203.366, -51.3385, 0.55", "-150.453, 206.647, -50.7622, 0.28", "-150.773, 207.648, -50.6773, 0.55", "-151.291, 209.147, -50.4426, 0.28", "-151.863, 210.442, -51.032, 0.55", "-152.872, 212.468, -52.6317, 0.28", "-153.353, 213.423, -53.3986, 1.11", "-154.602, 215.595, -55.0066, 0.28", "-155.152, 216.471, -55.729, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-43.7853, -28.0519, 27.7267, 0.55", "-47.8542, -30.3658, 28.8605, 0.55", "-49.6736, -31.2732, 29.3773, 0.55", "-52.4809, -32.5445, 30.2514, 0.83", "-55.3484, -33.8406, 31.1871, 0.55", "-57.7158, -35.0165, 32.1396, 0.55", "-58.8076, -35.62, 32.6386, 0.83", "-60.3417, -36.5911, 33.5463, 0.55", "-62.8946, -38.3093, 35.6329, 0.55", "-64.1089, -39.2304, 36.9133, 0.55", "-66.1864, -41.0593, 39.5462, 0.55", "-67.0468, -41.9145, 40.8745, 0.28", "-68.8801, -43.9448, 44.0965, 0.83", "-70.9166, -46.2754, 48.1573, 0.55", "-71.2719, -46.6718, 48.9126, 0.55", "-72.4366, -47.8435, 51.2628, 0.83", "-73.9133, -49.0943, 53.8668, 0.55", "-75.0379, -49.9496, 55.6997, 0.83", "-78.2431, -52.2383, 60.1421, 0.55", "-79.7722, -53.3139, 61.8556, 0.83", "-81.7583, -54.6031, 63.7554, 0.28", "-83.39, -55.5548, 65.0096, 0.55", "-85.2652, -56.5769, 66.0722, 0.55", "-88.0995, -58.0596, 67.2822, 0.28", "-89.3676, -58.7178, 67.6184, 0.28", "-90.4742, -59.2633, 67.8727, 0.55", "-93.4413, -60.8681, 68.61, 0.28", "-94.5238, -61.5401, 69.0275, 0.55", "-95.0457, -61.9023, 69.2579, 0.28", "-96.4034, -62.9207, 70.0271, 0.28", "-97.3049, -63.6037, 70.5481, 0.55", "-99.0806, -65.0647, 71.612, 0.28", "-100.851, -66.7194, 72.683, 0.55", "-103.027, -68.7358, 74.0615, 0.28", "-104.651, -70.2969, 75.1425, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-95.3613, 9.51701, 45.1132, 0.28", "-97.4665, 11.4123, 45.1756, 0.28", "-98.0295, 11.9922, 45.1916, 0.55", "-99.2381, 13.2729, 45.2435, 0.28", "-99.5038, 13.5834, 45.2619, 0.55", "-101.974, 16.6987, 45.496, 0.28", "-103.882, 19.1717, 45.7785, 0.28", "-104.983, 20.79, 46.0086, 0.28", "-105.753, 22.0257, 46.2128, 0.55", "-107.457, 24.9709, 46.6268, 0.28", "-108.082, 26.0807, 46.8074, 0.55", "-109.032, 27.8577, 47.1724, 0.28", "-109.516, 28.8683, 47.3949, 0.55", "-110.265, 30.5394, 47.7834, 0.28", "-111.181, 32.8505, 48.2769, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-95.3613, 9.51701, 45.1132, 0.28", "-93.3962, 8.95767, 43.8966, 0.28", "-92.853, 8.81986, 43.4964, 0.83", "-90.2276, 8.32251, 41.7495, 0.28", "-89.9529, 8.27441, 41.5766, 0.83", "-87.5156, 7.89014, 40.2584, 0.28", "-86.791, 7.77581, 39.9049, 0.83", "-82.0211, 7.13568, 37.7831, 0.28", "-79.3194, 6.79317, 36.7019, 0.28", "-78.7225, 6.72628, 36.5028, 1.11", "-75.5895, 6.37928, 35.6314, 0.28", "-74.668, 6.26586, 35.3774, 0.55", "-71.2965, 5.80955, 34.3959, 0.28", "-69.7282, 5.561, 33.955, 0.28", "-68.7546, 5.38259, 33.6265, 0.55", "-67.294, 5.11171, 33.0786, 0.28", "-63.0284, 4.17868, 31.1309, 0.28", "-60.7996, 3.65911, 30.0624, 0.28", "-60.3188, 3.50837, 29.8221, 0.83", "-59.2801, 3.12179, 29.2922, 0.28", "-59.2801, 3.12179, 29.2922, 0.83", "-57.0198, 2.16599, 28.2404, 0.28", "-56.4346, 1.86281, 28.0612, 0.83", "-54.7314, 0.72916, 27.358, 0.28", "-53.7074, -0.00292569, 26.8925, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-26.1931, 40.9568, -17.3624, 0.28", "-27.6989, 38.8275, -18.5395, 0.28", "-28.8683, 37.161, -19.6246, 0.83", "-30.1395, 35.3383, -20.7836, 0.55", "-31.4481, 33.4641, -22.2144, 1.11", "-34.9859, 28.1085, -26.7026, 0.28", "-35.2326, 27.7406, -27.0625, 0.83", "-36.3346, 26.078, -28.9932, 0.83", "-37.0075, 25.0369, -30.3114, 0.83", "-39.466, 21.2354, -35.4558, 0.28", "-40.104, 20.2729, -36.7564, 0.83", "-42.4588, 17.0641, -41.7869, 0.28", "-42.8813, 16.5005, -42.746, 0.55", "-43.6073, 15.5505, -44.4474, 0.55", "-44.3534, 14.5818, -46.2755, 0.55", "-45.3355, 13.3531, -48.6027, 1.11", "-49.3046, 8.46254, -58.8611, 0.55", "-49.8457, 7.75762, -60.4485, 0.28", "-50.0048, 7.56986, -60.9325, 0.55", "-51.0739, 6.4403, -64.1637, 0.28", "-51.5057, 5.95946, -65.6082, 0.83", "-53.9625, 3.16022, -74.3267, 0.28", "-54.0749, 3.03554, -74.6991, 0.55", "-56.6045, 0.26973, -82.9962, 0.28", "-57.0462, -0.256853, -84.4952, 0.55", "-58.3424, -1.8502, -88.6573, 0.28", "-58.5684, -2.14751, -89.3735, 0.83", "-59.6666, -3.66821, -92.6211, 0.28", "-60.2142, -4.43903, -94.2279, 0.83", "-62.8394, -8.49317, -101.93, 0.28", "-63.5081, -9.48072, -103.674, 0.83", "-66.2155, -13.291, -109.945, 0.55", "-66.5588, -13.7889, -110.722, 0.83", "-68.4361, -16.6218, -114.873, 0.28", "-69.0228, -17.5291, -116.084, 0.55", "-71.4146, -21.3605, -120.646, 0.28", "-72.2625, -22.7698, -122.282, 0.83", "-76.4274, -29.8228, -129.728, 0.28", "-76.6362, -30.1824, -130.103, 0.83", "-77.8955, -32.464, -132.374, 0.28", "-78.2145, -33.035, -132.98, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-26.1931, 40.9568, -17.3624, 0.55", "-27.188, 42.8324, -17.6015, 0.55", "-27.9244, 44.2581, -17.8195, 0.55", "-28.6711, 45.7728, -18.1431, 0.28", "-29.1571, 46.7783, -18.3828, 1.38", "-29.8708, 48.2506, -18.7978, 0.55", "-30.672, 49.8955, -19.2876, 0.55", "-31.0267, 50.5923, -19.4877, 0.83", "-31.6488, 51.8404, -19.8885, 0.28", "-31.9758, 52.56, -20.1264, 0.55", "-32.5195, 53.8281, -20.5064, 0.28", "-32.9117, 54.7415, -20.7187, 0.83", "-33.6943, 56.601, -20.9619, 0.28", "-34.0817, 57.6057, -21.0921, 0.55", "-34.4983, 58.8138, -21.2255, 0.28", "-34.7869, 59.8511, -21.3818, 0.83", "-35.2004, 61.8135, -21.7023, 0.28", "-35.4875, 63.5719, -22.0839, 0.83", "-35.8158, 66.5632, -22.8364, 0.28", "-35.8768, 67.61, -23.1224, 0.83", "-35.9471, 70.5068, -24.1192, 0.28", "-35.9306, 71.8604, -24.6531, 0.83", "-35.8645, 73.5359, -25.3708, 0.28", "-35.8048, 74.8626, -25.9834, 0.55", "-35.7459, 76.1879, -26.5894, 0.83", "-35.7092, 79.1036, -27.9364, 0.28", "-35.7505, 80.2319, -28.4377, 0.83", "-35.8693, 81.7461, -29.1036, 0.83", "-36.0636, 83.2424, -29.7285, 0.28", "-36.3279, 84.3785, -30.2479, 0.83", "-36.6917, 85.4984, -30.7381, 0.28", "-37.0066, 86.2834, -31.0353, 0.55", "-37.2875, 86.8456, -31.261, 0.28", "-37.9802, 87.9783, -31.6754, 0.55", "-39.4049, 90.0407, -32.2543, 0.28", "-39.9905, 90.7592, -32.45, 0.55", "-40.6836, 91.5202, -32.6378, 0.28", "-41.482, 92.3244, -32.8146, 0.83", "-42.5684, 93.3365, -32.9792, 0.28", "-43.6606, 94.309, -33.0679, 0.83", "-45.3092, 95.74, -33.076, 0.28", "-45.9554, 96.3134, -33.1036, 0.83", "-46.6964, 96.9993, -33.146, 0.28", "-47.6495, 97.9636, -33.2219, 0.28", "-48.0598, 98.4449, -33.3047, 0.55", "-48.949, 99.7136, -33.6081, 0.28", "-49.5958, 100.874, -34.0547, 0.55", "-49.9271, 101.559, -34.3914, 0.55", "-50.3789, 102.598, -34.9637, 0.83", "-51.1957, 104.52, -36.2166, 0.28", "-51.7773, 105.929, -37.225, 0.83", "-52.5753, 107.902, -38.8384, 0.28", "-52.8786, 108.624, -39.4828, 0.28", "-53.2789, 109.636, -40.4055, 0.83", "-54.0047, 111.554, -42.2147, 0.28", "-54.2769, 112.262, -42.8602, 0.83", "-55.2411, 114.872, -45.129, 0.28", "-55.7139, 116.14, -46.2108, 1.11", "-56.6182, 118.64, -48.3687, 0.28", "-56.9634, 119.701, -49.2868, 0.55", "-57.2551, 120.694, -50.0673, 0.28", "-57.49, 121.503, -50.6529, 0.55", "-58.0479, 123.639, -52.0451, 0.28", "-58.2751, 124.495, -52.6647, 0.55", "-58.6387, 125.803, -53.6559, 0.28", "-58.8536, 126.661, -54.3647, 0.55", "-59.0742, 127.702, -55.2683, 0.28", "-59.3625, 129.248, -56.6308, 0.55", "-59.8451, 132.101, -58.9889, 0.28", "-60.0272, 133.283, -60.0045, 0.55", "-60.2611, 134.975, -61.461, 0.28", "-60.3553, 135.923, -62.309, 0.83", "-60.4294, 137.217, -63.4331, 0.28", "-60.4538, 138.15, -64.2584, 0.83", "-60.4615, 139.763, -65.6589, 0.28", "-60.4643, 140.493, -66.3581, 0.55", "-60.4458, 141.523, -67.3802, 0.28", "-60.4002, 142.397, -68.2906, 0.55", "-60.2969, 144.924, -70.8213, 0.28", "-60.284, 145.795, -71.656, 0.28", "-60.3989, 147.691, -73.2606, 0.55", "-60.5567, 149.257, -74.4499, 0.28", "-60.693, 150.093, -74.9992, 0.55", "-61.229, 152.277, -76.1941, 0.28", "-61.7064, 153.487, -76.6696, 0.83", "-62.6201, 155.181, -77.1955, 0.28", "-62.9996, 155.678, -77.3152, 0.55", "-63.7036, 156.389, -77.4815, 0.28", "-64.454, 157.028, -77.6712, 0.55", "-66.1994, 158.265, -78.0998, 0.28", "-66.6069, 158.529, -78.1825, 0.55", "-69.1797, 160.184, -78.7671, 0.28", "-69.8188, 160.651, -78.9269, 0.55", "-70.6791, 161.389, -79.1358, 0.28", "-71.529, 162.179, -79.3509, 0.55", "-72.8585, 163.601, -79.6887, 0.28", "-73.6522, 164.529, -79.8685, 0.55", "-75.2095, 166.736, -79.9709, 0.28", "-75.7671, 167.645, -80.0005, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.14054, 77.1408, -24.7064, 0.55", "-4.63484, 78.4419, -26.4092, 0.55", "-3.10636, 80.4269, -30.2443, 0.55", "-2.6687, 81.2397, -32.1355, 0.83", "-2.36499, 81.8998, -33.7802, 0.83", "-1.62914, 83.7613, -38.5547, 0.28", "-1.35701, 84.4661, -40.3194, 0.83", "-1.11089, 86.9966, -47.7065, 0.55", "-1.2499, 87.542, -49.5215, 0.28", "-1.3829, 87.7887, -50.4233, 0.28", "-1.71666, 88.1906, -51.9759, 0.55", "-2.18518, 88.6811, -53.7805, 0.55", "-3.82557, 90.4687, -59.6953, 0.28", "-4.51551, 91.3598, -62.2671, 0.83", "-5.90481, 93.3549, -67.6685, 0.83", "-7.04438, 95.1397, -72.2983, 0.83", "-8.4028, 97.4419, -78.1363, 0.28", "-8.8247, 98.2549, -80.1184, 0.28", "-8.97355, 98.7203, -81.1131, 0.55", "-9.25807, 100.836, -85.2642, 0.28", "-9.24414, 101.16, -85.8444, 0.55", "-8.822, 103.255, -89.6045, 0.28", "-8.67993, 103.918, -91.1673, 0.55", "-8.55539, 104.473, -92.7722, 0.28", "-8.50633, 104.673, -93.4126, 0.55", "-8.08143, 105.888, -97.9105, 0.28", "-7.9128, 106.23, -99.256, 0.55", "-6.83031, 107.812, -106.399, 0.28", "-6.49158, 108.258, -108.42, 0.28", "-6.09417, 108.731, -110.456, 0.55", "-5.26001, 109.73, -114.81, 0.28", "-4.96279, 110.048, -116.141, 0.55", "-3.69517, 111.323, -121.5, 0.28", "-2.99869, 111.947, -124.106, 0.28", "-2.39624, 112.485, -126.44, 0.83", "-0.132928, 114.275, -134.47, 0.28", "0.501887, 114.723, -136.515, 0.28", "1.45178, 115.327, -139.265, 0.55", "2.35193, 115.852, -141.512, 0.28", "2.99526, 116.161, -143.123, 0.55", "3.66284, 116.448, -144.61, 0.28", "4.17978, 116.66, -145.302, 0.55", "5.39443, 117.22, -146.952, 0.28", "7.24935, 118.284, -149.02, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-6.14054, 77.1408, -24.7064, 0.55", "-6.00557, 80.3417, -24.1302, 0.55", "-5.72752, 82.4752, -23.7126, 0.55", "-5.60311, 83.3817, -23.531, 0.55", "-5.39713, 84.8269, -23.2564, 0.55", "-5.2484, 86.0386, -23.0715, 0.55", "-4.87894, 88.9485, -22.6396, 0.28", "-4.73141, 89.9732, -22.4861, 0.55", "-4.42486, 91.4131, -22.2116, 0.55", "-4.27046, 92.1179, -22.026, 0.83", "-3.95514, 93.7348, -21.5037, 0.28", "-3.71368, 95.0967, -21.0591, 0.83", "-3.32556, 97.5854, -20.215, 0.28", "-3.26236, 97.8756, -20.092, 0.83", "-2.60381, 100.097, -19.0363, 0.55", "-2.24585, 101.111, -18.5086, 0.55", "-1.66743, 102.601, -17.7152, 0.83", "-0.541556, 105.311, -16.2588, 0.55", "0.373299, 107.387, -15.1487, 0.83", "0.868542, 108.437, -14.5805, 0.28", "1.30683, 109.352, -14.1345, 0.83", "1.94735, 110.711, -13.4775, 0.83", "2.97162, 113.1, -12.3548, 0.83", "3.64045, 115.076, -11.6376, 0.28", "3.82328, 115.751, -11.4159, 0.83", "4.35525, 117.8, -10.698, 0.83", "4.81192, 119.601, -10.0406, 0.28", "5.06163, 120.544, -9.67083, 0.55", "5.50074, 122.41, -8.98401, 0.28", "5.9057, 124.359, -8.17671, 0.55", "6.43161, 126.932, -6.99218, 0.28", "6.5505, 127.516, -6.68999, 0.83", "6.77938, 128.696, -6.09052, 0.28", "7.07474, 130.117, -5.32867, 0.55", "7.62369, 132.202, -4.09757, 0.28", "7.73093, 132.599, -3.88077, 0.55", "7.98932, 133.459, -3.3933, 0.28", "8.33651, 134.363, -2.82736, 0.83", "8.89427, 135.544, -2.07564, 0.28", "9.7095, 137.006, -1.11819, 0.55", "10.3444, 138.008, -0.384537, 0.28", "10.7228, 138.627, 0.0479347, 0.83", "11.5138, 139.93, 0.888449, 0.83", "12.2746, 141.234, 1.65125, 0.55", "12.673, 141.936, 1.9971, 0.83", "14.7502, 145.839, 3.6366, 0.55", "15.4665, 147.297, 4.13219, 0.83", "17.5925, 152.032, 5.27861, 0.28", "17.9305, 153.02, 5.34548, 0.55", "18.4419, 154.939, 5.15935, 0.28", "18.6975, 156.071, 4.92632, 0.83", "19.0167, 158.34, 4.05694, 0.28", "19.107, 159.691, 3.40592, 0.55", "18.8232, 163.354, 0.837165, 0.28", "18.6259, 164.959, -0.341181, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-22.1283, 287.79, 19.0356, 0.55", "-22.2566, 289.959, 18.9971, 0.55", "-22.5152, 292.533, 19.0024, 0.55", "-22.7836, 295.005, 19.0219, 0.83", "-22.9726, 296.712, 19.0558, 0.55", "-23.1912, 298.834, 19.1214, 1.11", "-23.4713, 302.093, 19.2233, 0.55", "-23.6243, 304.407, 19.2994, 1.11", "-23.7172, 306.161, 19.2962, 0.83", "-23.7193, 307.824, 19.2072, 0.55", "-23.5499, 310.022, 18.9502, 0.55", "-23.2373, 311.937, 18.5683, 0.83", "-22.7097, 313.96, 17.8967, 0.55", "-22.0365, 315.973, 16.9765, 0.83", "-21.4215, 317.51, 16.1237, 0.83", "-20.8348, 318.78, 15.2962, 0.83", "-20.3084, 319.799, 14.5769, 1.11", "-19.2062, 321.934, 12.98, 0.83", "-18.7385, 322.858, 12.2944, 0.55", "-17.9647, 324.346, 11.2434, 0.83", "-16.8607, 326.639, 9.71674, 0.55", "-16.1521, 328.071, 8.76114, 1.11", "-15.0594, 330.247, 7.35963, 0.55", "-14.6647, 331.019, 6.90682, 0.55", "-14.1289, 332.102, 6.29933, 0.55", "-12.927, 334.705, 5.01454, 0.55", "-12.4528, 335.788, 4.57707, 0.28", "-12.1589, 336.527, 4.34044, 0.55", "-11.6217, 337.949, 4.00559, 0.28", "-11.208, 339.201, 3.74279, 0.83", "-10.5227, 341.558, 3.30537, 0.55", "-10.2972, 342.347, 3.18137, 0.83", "-9.85845, 344.042, 2.91771, 0.55", "-9.59025, 345.139, 2.72994, 0.83", "-8.81277, 348.474, 2.12137, 0.28", "-8.31838, 350.681, 1.67675, 0.83", "-7.8213, 352.961, 1.1846, 0.28", "-7.40283, 354.97, 0.741376, 0.55", "-6.99295, 357.089, 0.277576, 0.55", "-6.7135, 359.004, -0.14683, 0.55", "-6.62052, 360.062, -0.375973, 0.28", "-6.57736, 361.081, -0.585583, 0.55", "-6.58924, 363.044, -0.933846, 0.28", "-6.66884, 364.197, -1.1601, 0.55", "-6.93408, 366.287, -1.6164, 0.28", "-7.15463, 367.706, -1.93832, 0.28", "-7.49019, 369.688, -2.39796, 0.83", "-7.82431, 371.461, -2.82282, 0.83", "-8.46375, 374.847, -3.63215, 0.55", "-8.77499, 376.751, -4.0723, 0.55", "-8.90579, 377.991, -4.3367, 0.55", "-8.95271, 378.7, -4.51452, 0.28", "-8.98208, 379.702, -4.78174, 0.55", "-8.95319, 380.559, -5.00023, 0.28", "-8.93121, 381.362, -5.21055, 1.11", "-9.06471, 383.773, -5.9809, 0.55", "-9.2975, 385.52, -6.55103, 0.55", "-9.6158, 387.044, -7.08702, 0.28", "-9.87065, 387.901, -7.4262, 0.83", "-10.7509, 390.356, -8.52891, 0.55", "-11.3657, 391.943, -9.29152, 0.83", "-12.1043, 393.688, -10.2013, 0.83", "-12.8457, 395.458, -11.2181, 0.55", "-13.4159, 396.856, -12.1021, 0.28", "-13.9394, 398.223, -12.9963, 0.55", "-14.3954, 399.482, -13.824, 0.55", "-15.0016, 401.134, -14.9656, 1.11", "-15.767, 403.313, -16.4453, 0.55", "-16.0776, 404.259, -17.0436, 0.55", "-16.4393, 405.278, -17.6908, 0.55", "-17.4085, 407.675, -19.1874, 0.55", "-17.9158, 408.883, -19.962, 0.83", "-18.9461, 411.445, -21.4893, 0.28", "-19.2507, 412.213, -21.9167, 0.55", "-20.0619, 414.408, -23.0791, 0.28", "-20.4196, 415.483, -23.6275, 0.55", "-20.8875, 417.179, -24.4172, 0.28", "-21.34, 418.875, -25.1053, 0.55", "-21.5545, 419.756, -25.4211, 0.28", "-21.86, 421.207, -25.8788, 0.55", "-22.2055, 423.635, -26.4931, 0.55", "-22.375, 424.891, -26.834, 0.28", "-22.5838, 425.992, -27.1199, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-22.1283, 287.79, 19.0356, 0.55", "-23.6339, 288.908, 19.2448, 0.55", "-25.3771, 290.312, 19.5727, 1.11", "-27.2629, 291.766, 20.024, 0.55", "-27.893, 292.25, 20.1433, 0.83", "-29.4067, 293.431, 20.4043, 0.55", "-30.6566, 294.365, 20.6265, 0.55", "-31.6291, 295.078, 20.7982, 0.83", "-34.5076, 297.128, 21.3119, 0.55", "-36.6158, 298.614, 21.7683, 0.55", "-37.368, 299.134, 21.9098, 0.83", "-39.4329, 300.523, 22.2782, 0.55", "-39.7688, 300.744, 22.3321, 0.83", "-40.8596, 301.497, 22.5425, 0.28", "-41.0276, 301.63, 22.5943, 0.55", "-41.9788, 302.435, 23.0596, 0.28", "-42.5555, 302.975, 23.3858, 0.55", "-43.2183, 303.566, 23.7449, 0.55", "-45.0371, 305.081, 24.6857, 0.55", "-46.2916, 306.116, 25.3034, 0.55", "-47.3036, 306.955, 25.7025, 0.83", "-48.7171, 308.145, 26.1753, 0.83", "-50.6197, 309.783, 26.5598, 0.55", "-52.0556, 311.034, 26.7108, 0.55", "-53.6484, 312.45, 26.739, 1.11", "-55.4386, 314.218, 26.6501, 0.55", "-55.9235, 314.738, 26.5951, 0.83", "-57.3999, 316.545, 26.4102, 0.28", "-58.1913, 317.538, 26.1241, 0.55", "-58.7484, 318.211, 25.832, 0.28", "-59.286, 318.877, 25.4964, 0.83", "-60.3921, 320.315, 24.701, 0.28", "-61.3757, 321.626, 23.9329, 0.83", "-65.004, 326.762, 20.8421, 0.55", "-65.6801, 327.757, 20.2236, 0.55", "-66.2641, 328.666, 19.6557, 0.83", "-66.963, 329.832, 18.964, 0.28", "-67.2529, 330.406, 18.6707, 0.55", "-67.6219, 331.272, 18.3362, 0.28", "-67.9438, 332.456, 18.1859, 0.55", "-68.4422, 334.122, 17.9655, 0.55", "-68.7354, 335.071, 17.8479, 0.55", "-69.0524, 336.131, 17.7338, 0.83", "-69.541, 337.828, 17.5367, 0.28", "-69.9377, 339.255, 17.3828, 0.83", "-70.353, 341.021, 17.2016, 0.55", "-70.5051, 341.727, 17.1473, 0.55", "-70.7415, 343.073, 17.0843, 0.83", "-70.8542, 343.78, 17.0887, 0.55", "-71.0105, 345.11, 17.2087, 0.83", "-71.218, 346.324, 17.3787, 0.28", "-71.3531, 346.821, 17.4258, 0.28", "-71.8587, 348.146, 17.4879, 0.28", "-72.1185, 348.715, 17.4751, 0.83", "-72.8351, 350.035, 17.3301, 0.55", "-73.8152, 351.484, 16.9076, 0.83", "-75.3969, 353.438, 16.1134, 0.28", "-75.9809, 354.035, 15.7822, 0.55", "-76.6936, 354.612, 15.3515, 0.28", "-77.2668, 355.015, 15.0398, 0.83", "-79.4677, 356.48, 13.899, 0.83", "-80.1841, 356.947, 13.555, 0.83", "-82.3887, 358.392, 12.6417, 0.83", "-84.925, 360.053, 11.6759, 0.55", "-86.4516, 361.029, 11.133, 0.55", "-87.8096, 361.914, 10.6777, 0.55", "-89.2619, 362.892, 10.2382, 0.55", "-91.3564, 364.436, 9.58923, 0.55", "-92.9507, 365.732, 9.17507, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "30.209, -42.5042, -78.5174, 0.55", "30.5673, -42.0452, -79.6433, 0.55", "30.9156, -41.534, -80.7908, 0.83", "31.615, -40.4494, -83.1311, 0.28", "31.972, -39.8739, -84.3002, 0.83", "32.8574, -38.4453, -87.0558, 0.28", "33.1701, -37.947, -87.9728, 0.55", "33.8316, -36.7862, -90.0805, 0.55", "34.5287, -35.484, -92.2109, 0.55", "35.1463, -34.3473, -93.9576, 0.28", "35.4068, -33.8727, -94.65, 0.28", "35.6773, -33.3897, -95.3247, 0.55", "36.2849, -32.3806, -96.7268, 0.28", "37.176, -30.9999, -98.4708, 0.55", "38.174, -29.3061, -100.623, 0.28", "38.4285, -28.87, -101.194, 0.55", "39.426, -27.0166, -103.557, 0.28", "40.0552, -25.7815, -105.117, 0.28", "40.7484, -24.3557, -106.958, 0.83", "41.7492, -22.0421, -110.001, 0.55", "41.9815, -21.479, -110.758, 0.55", "42.4154, -20.37, -112.385, 0.55", "42.8455, -19.3099, -114.083, 0.83", "43.5022, -17.8295, -116.606, 0.28", "43.7309, -17.4119, -117.335, 0.55", "44.4752, -16.3872, -118.989, 0.28", "44.6199, -16.2099, -119.281, 0.55", "45.3707, -15.485, -120.524, 0.55", "46.5852, -14.4528, -122.15, 0.28", "47.0562, -14.076, -122.684, 0.55", "48.227, -13.206, -123.923, 0.28", "48.7204, -12.8558, -124.4, 0.55", "49.8002, -12.1739, -125.405, 0.28", "50.496, -11.8334, -126.039, 0.55", "50.8934, -11.6817, -126.368, 0.55", "52.0261, -11.2306, -127.227, 0.28", "52.7956, -10.9012, -127.748, 0.28", "53.5447, -10.5142, -128.268, 0.55", "55.3472, -9.41843, -129.526, 0.28", "56.5856, -8.50769, -130.403, 0.55", "57.7362, -7.51701, -131.193, 0.55", "58.779, -6.44947, -131.886, 0.83", "60.3025, -4.64039, -132.847, 0.28", "60.8505, -3.87344, -133.181, 0.28", "61.7788, -2.30649, -133.696, 0.55", "62.6709, -0.600845, -134.152, 0.28", "63.0541, 0.18087, -134.323, 0.55", "63.6537, 1.46109, -134.521, 0.55", "64.5404, 3.38116, -134.704, 0.28", "65.0682, 4.55074, -134.806, 0.55", "65.8524, 6.36929, -134.954, 0.28", "66.6981, 8.43563, -135.142, 0.55", "67.5461, 10.5743, -135.35, 0.55", "67.9072, 11.536, -135.446, 0.55", "68.5763, 13.4714, -135.676, 0.55", "69.1672, 15.2589, -135.958, 0.55", "69.7195, 17.0975, -136.292, 0.55", "70.22, 18.8466, -136.628, 0.28", "70.4726, 19.7603, -136.841, 0.55", "71.2604, 22.6327, -137.55, 0.28", "71.7341, 24.5544, -138.08, 0.28", "71.9436, 25.5202, -138.363, 0.55", "72.3073, 27.2273, -138.889, 0.28", "72.6242, 28.7642, -139.375, 0.55", "72.8609, 29.9424, -139.737, 0.55", "73.4699, 33.2717, -140.701, 0.28", "73.797, 35.3435, -141.27, 0.28", "73.9156, 36.19, -141.49, 0.55", "74.1307, 37.9025, -141.902, 0.55", "74.4292, 40.2331, -142.373, 0.28", "74.6605, 42.0405, -142.706, 0.55", "74.8808, 43.7157, -142.954, 0.28", "75.0245, 45.16, -143.138, 0.55", "75.1058, 46.0316, -143.226, 0.28", "75.1805, 46.6288, -143.236, 0.55", "75.4321, 48.3732, -143.14, 0.28", "75.5923, 49.2329, -143.04, 0.55", "76.2222, 52.0853, -142.615, 0.28", "76.7066, 54.0469, -142.297, 0.55", "77.3964, 56.6477, -141.83, 0.28", "77.7955, 58.0486, -141.57, 0.55", "78.2891, 59.6498, -141.254, 0.28", "78.7556, 61.0817, -140.949, 0.55", "79.2112, 62.4293, -140.658, 0.28", "79.546, 63.4696, -140.437, 0.55", "80.3049, 66.0567, -139.932, 0.28", "80.6968, 67.3781, -139.642, 0.55", "81.2304, 69.2787, -139.184, 0.28", "81.4285, 69.9874, -138.989, 0.55", "81.8981, 71.7929, -138.453, 0.28", "82.3448, 73.6986, -137.876, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "30.209, -42.5042, -78.5174, 0.28", "33.424, -43.3724, -80.7484, 0.28", "34.3687, -43.6241, -81.4756, 0.55", "35.6513, -43.8715, -82.5505, 0.55", "37.6166, -44.1841, -84.2073, 0.28", "38.79, -44.3683, -85.1623, 0.55", "42.9311, -44.9452, -88.371, 0.28", "44.066, -45.0164, -89.1866, 0.55", "46.7977, -45.0413, -91.0272, 0.28", "47.9826, -44.989, -91.7636, 0.28", "49.9599, -44.8267, -92.8461, 0.55", "51.8223, -44.6755, -93.7415, 0.55", "56.429, -44.3678, -95.5062, 0.28", "58.1503, -44.3478, -96.132, 0.55", "60.0965, -44.4683, -96.8131, 0.55", "63.6408, -44.9021, -98.0851, 0.28", "65.9454, -45.3647, -98.9273, 0.55", "68.8106, -46.2682, -99.9176, 0.28", "70.3298, -46.9563, -100.406, 0.55", "73.0975, -48.5018, -101.251, 0.28", "74.2626, -49.3162, -101.561, 0.55", "75.529, -50.3918, -101.828, 0.55", "77.1666, -52.0493, -101.98, 0.28", "78.089, -53.1465, -101.976, 0.28", "79.0485, -54.5689, -101.857, 0.55", "80.1953, -56.7145, -101.559, 0.28", "80.3408, -57.0429, -101.503, 0.55", "81.472, -60.1811, -101.007, 0.28", "81.5703, -60.5461, -100.983, 0.83", "82.6792, -65.5006, -101.002, 0.28", "82.8535, -66.4442, -101.18, 0.55", "83.1898, -68.7739, -101.939, 0.28", "83.3613, -70.2202, -102.552, 0.55", "83.6872, -73.5049, -104.375, 0.28", "83.7216, -73.9195, -104.625, 0.55", "84.0642, -78.7329, -107.892, 0.28", "84.0983, -79.3934, -108.323, 0.55", "84.1282, -79.797, -108.59, 0.55", "84.2826, -81.2878, -109.407, 0.28", "84.4429, -82.5388, -109.963, 0.55", "84.7976, -84.7106, -110.749, 0.28", "84.9626, -85.6034, -111.03, 0.55", "86.0856, -90.9517, -112.889, 0.28", "86.3355, -92.0435, -113.285, 0.55", "86.6275, -93.2849, -113.806, 0.28", "87.6086, -97.2754, -115.628, 0.28", "87.9039, -98.5688, -116.182, 0.55", "88.7074, -102.297, -117.658, 0.28", "88.7602, -102.613, -117.756, 0.55", "89.2861, -106.739, -118.934, 0.28", "89.4674, -108.776, -119.332, 0.55", "89.6455, -111.403, -119.568, 0.28", "89.7451, -112.508, -119.549, 0.55", "89.9966, -114.785, -119.33, 0.28", "90.135, -115.787, -119.211, 0.55", "90.7556, -119.671, -118.984, 0.28", "91.32, -122.843, -119.015, 0.28", "91.6106, -124.211, -119.156, 0.55", "92.4, -127.541, -119.665, 0.28", "92.6799, -128.552, -119.857, 0.55", "94.603, -135.213, -121.247, 0.28", "95.3924, -137.716, -121.872, 0.55", "96.6902, -141.386, -122.865, 0.28", "96.9578, -142.104, -123.068, 0.55", "98.3589, -145.502, -124.053, 0.28", "98.5735, -145.96, -124.177, 0.55", "99.6238, -147.47, -124.436, 0.28", "100.375, -148.401, -124.669, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "37.2052, -39.9904, 12.0643, 0.55", "38.3987, -39.743, 13.266, 0.55", "40.794, -39.1555, 15.7025, 0.55", "45.171, -38.0556, 20.0686, 0.55", "48.533, -37.2285, 23.369, 0.55", "51.5748, -36.5515, 26.3162, 0.28", "53.2606, -36.2015, 27.9183, 0.83", "55.3688, -35.8075, 29.9565, 0.55", "56.9582, -35.5997, 31.4483, 0.28", "57.7437, -35.5352, 32.0687, 0.55", "59.4155, -35.4285, 33.2712, 0.28", "59.9756, -35.4089, 33.6713, 0.55", "62.3955, -35.5154, 35.1853, 0.28", "63.9412, -35.8025, 36.0482, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "37.2052, -39.9904, 12.0643, 0.28", "42.5046, -42.37, 7.75082, 0.28", "43.2509, -42.6416, 7.22319, 0.83", "45.8503, -43.4387, 5.54365, 0.28", "46.6127, -43.5816, 5.11288, 0.83", "48.3968, -43.7703, 4.17905, 0.28", "49.1533, -43.7964, 3.80955, 0.83", "51.4137, -43.4022, 3.18183, 0.28", "51.901, -43.206, 3.03393, 0.83", "54.334, -41.7249, 2.24694, 0.28", "54.9233, -41.3423, 2.04584, 0.28", "55.757, -40.7728, 1.74982, 0.55", "57.3335, -39.7179, 1.5125, 0.28", "59.7756, -38.1236, 1.51311, 0.28", "60.395, -37.7417, 1.64449, 0.83", "64.8486, -35.1672, 3.31095, 0.28", "65.6142, -34.772, 3.68001, 0.55", "71.1548, -32.1514, 7.12871, 0.28", "71.7453, -31.8868, 7.57144, 0.83", "75.2726, -30.2605, 10.7177, 0.28", "75.7386, -30.0157, 11.1881, 0.55", "77.1131, -29.1983, 12.7754, 0.28", "78.4041, -28.4035, 14.247, 0.55", "80.0267, -27.3638, 15.8589, 0.28", "80.6821, -26.9186, 16.4632, 0.55", "82.7375, -25.2568, 17.9831, 0.28", "83.4796, -24.5658, 18.5573, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "24.7887, -50.5856, -8.81545, 0.55", "26.2377, -51.3987, -10.3974, 0.55", "28.5493, -52.7268, -12.938, 0.55", "30.2101, -53.7237, -14.7998, 0.28", "31.3991, -54.4268, -16.1177, 0.55", "33.287, -55.4988, -18.1239, 0.55", "34.1142, -55.9914, -18.9427, 0.28", "34.6737, -56.344, -19.5276, 0.55", "35.3069, -56.8103, -20.1581, 0.28", "36.2406, -57.5985, -21.0755, 0.55", "37.6616, -58.8345, -22.3169, 0.55", "39.7242, -60.6355, -24.036, 0.55", "42.2668, -62.95, -26.7115, 1.38", "43.7868, -64.348, -28.5566, 0.83", "45.0319, -65.4514, -30.2067, 0.55", "46.5418, -66.746, -32.3828, 0.28", "48.3324, -68.2092, -35.1562, 0.83", "51.498, -70.6073, -40.778, 0.28", "51.8834, -70.9184, -41.5431, 0.28", "52.7519, -71.7424, -43.6161, 0.55", "53.2975, -72.2966, -45.0555, 0.55", "53.7467, -72.8358, -46.4203, 0.55", "55.0247, -74.5381, -50.1024, 0.55", "56.3073, -76.41, -53.5556, 0.28", "57.0508, -77.644, -55.7092, 0.83", "57.4874, -78.4352, -57.0478, 0.83", "58.6576, -80.5294, -60.5476, 0.55", "59.163, -81.3861, -61.9125, 0.83", "59.989, -82.5588, -63.5796, 0.28", "60.6642, -83.3375, -64.6445, 0.55", "61.1123, -83.8449, -65.2201, 0.28", "61.3454, -84.117, -65.4679, 0.55", "62.562, -85.3835, -66.4822, 0.28", "63.8428, -86.8106, -67.7095, 0.28", "64.8316, -87.9296, -68.6445, 0.83", "65.6472, -88.9803, -69.4626, 0.55", "67.6606, -91.7768, -71.5299, 0.28", "68.2198, -92.6661, -72.1867, 0.83", "69.9185, -95.6885, -74.3662, 0.28", "70.5154, -96.9728, -75.2131, 0.83", "71.5446, -99.2941, -76.611, 0.28", "71.8304, -99.9596, -77.0159, 0.83", "72.9901, -102.821, -78.6827, 0.28", "73.6936, -104.581, -79.6714, 0.28", "74.3885, -106.077, -80.4395, 0.55", "75.1922, -107.713, -81.3847, 0.55", "76.5719, -110.205, -82.9348, 0.55", "77.3331, -111.474, -83.7502, 0.28", "77.7444, -112.126, -84.1935, 0.55", "79.0406, -114.23, -85.8123, 0.28", "80.0278, -115.711, -87.0472, 0.55", "81.039, -117.305, -88.3756, 0.28", "81.3553, -117.782, -88.7452, 0.83", "82.6833, -119.796, -90.4062, 0.28", "82.9937, -120.239, -90.7988, 0.55", "83.795, -121.286, -91.8448, 0.55", "85.2632, -122.994, -93.396, 0.28", "85.3212, -123.059, -93.459, 0.55", "86.5831, -124.414, -94.9912, 0.28", "87.084, -124.911, -95.6058, 0.55", "88.3591, -126.273, -97.3964, 0.28", "89.166, -127.145, -98.6417, 0.55", "90.593, -128.621, -100.969, 0.55", "91.7975, -129.91, -103.055, 0.28", "92.5179, -130.731, -104.355, 0.83", "93.7437, -132.193, -106.601, 0.28", "94.0309, -132.48, -107.048, 0.55", "95.168, -133.42, -108.617, 0.28", "95.6131, -133.687, -109.042, 0.55", "97.8947, -134.752, -110.826, 0.28", "98.6497, -135.036, -111.358, 0.83", "101.767, -135.878, -113.113, 0.28", "102.364, -136.008, -113.413, 0.55", "104.906, -136.297, -114.435, 0.28", "107.114, -136.341, -115.265, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "24.7887, -50.5856, -8.81545, 0.55", "24.5433, -52.3061, -11.2856, 0.55", "23.838, -56.0154, -16.4177, 0.55", "23.3099, -59.1943, -20.7795, 0.28", "22.9596, -61.4568, -23.9868, 0.83", "22.5732, -65.0347, -29.2496, 0.28", "22.4748, -65.8414, -30.5252, 0.55", "22.3485, -66.5079, -31.6771, 0.55", "22.1698, -67.6928, -34.1066, 0.55", "22.0097, -69.4015, -37.8721, 0.55", "21.944, -70.2994, -39.9562, 0.55", "22.1557, -72.575, -45.6813, 0.83", "22.3145, -73.9083, -49.232, 0.28", "22.3401, -74.4178, -50.692, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-78.2145, -33.035, -132.98, 0.28", "-78.987, -32.9354, -132.842, 0.28", "-79.9908, -32.8061, -132.662, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-78.2145, -33.035, -132.98, 0.28", "-79.8582, -36.1808, -135.639, 0.28", "-80.3388, -37.1005, -136.417, 0.55", "-81.8423, -39.9781, -138.85, 0.28", "-82.5078, -41.2517, -139.927, 0.83", "-85.4202, -46.8257, -144.639, 0.28", "-85.8989, -47.7417, -145.414, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-92.9507, 365.732, 9.17507, 0.55", "-94.2971, 366.383, 8.74185, 0.55", "-95.7074, 367.176, 8.3191, 0.28", "-97.1138, 367.966, 7.89753, 0.55", "-101.181, 370.253, 6.67855, 0.28", "-101.648, 370.516, 6.53842, 0.55", "-104.664, 372.212, 5.63456, 0.28", "-106.231, 372.916, 5.05175, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-92.9507, 365.732, 9.17507, 0.28", "-94.999, 364.651, 9.76355, 0.28", "-96.1391, 364.049, 10.0911, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "82.3448, 73.6986, -137.876, 0.28", "79.0316, 75.3254, -137.022, 0.28", "77.9085, 75.8768, -136.733, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "82.3448, 73.6986, -137.876, 0.28", "82.5287, 75.0567, -137.735, 0.28", "82.8607, 77.615, -137.431, 0.28", "82.9419, 78.3037, -137.314, 0.55", "83.2059, 80.8179, -136.744, 0.28", "83.3576, 82.2628, -136.417, 0.55", "83.5536, 84.1292, -135.994, 0.28", "83.6483, 85.1135, -135.711, 0.55", "83.7841, 86.6801, -135.14, 0.28", "83.8615, 87.9481, -134.645, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "22.3401, -74.4178, -50.692, 0.55", "20.0876, -76.1786, -51.9524, 0.55", "19.0446, -77.0439, -52.5765, 0.28", "18.3364, -77.5902, -52.9917, 0.83", "13.989, -80.7685, -55.3186, 0.28", "12.7702, -81.6913, -55.9585, 0.83", "7.55071, -85.765, -58.5816, 0.28", "6.82653, -86.3269, -58.939, 0.83", "2.35732, -89.5461, -60.965, 0.28", "1.05987, -90.4423, -61.4627, 0.55", "-4.56387, -94.0653, -63.2466, 0.28", "-5.71386, -94.7668, -63.6071, 0.28", "-8.20132, -96.192, -64.3834, 0.83", "-15.5713, -100.245, -66.7374, 0.28", "-17.6129, -101.337, -67.4381, 0.55", "-21.6395, -103.427, -68.8899, 0.55", "-24.6368, -104.894, -69.9586, 0.55", "-29.7989, -107.47, -71.8264, 0.28", "-31.2311, -108.253, -72.353, 0.83", "-35.9877, -111.072, -74.0076, 0.28", "-36.8923, -111.658, -74.2973, 0.55", "-40.7405, -114.422, -75.1424, 0.28", "-41.8657, -115.219, -75.2804, 0.55", "-46.0522, -118.329, -75.4676, 0.28", "-46.4286, -118.594, -75.4809, 0.83", "-48.6068, -120.065, -75.3805, 0.28", "-50.3366, -121.211, -75.1899, 0.55", "-55.5852, -124.531, -74.4839, 0.28", "-57.1329, -125.534, -74.2006, 0.83", "-63.6665, -129.878, -72.5984, 0.28", "-66.45, -131.779, -71.8573, 0.55", "-70.1059, -134.376, -70.8922, 0.55", "-74.1122, -137.409, -69.7153, 0.28", "-77.3661, -140.089, -68.5396, 0.55", "-79.7374, -142.081, -67.7965, 0.28", "-80.0847, -142.394, -67.6934, 0.55", "-82.2717, -144.246, -67.1871, 0.28", "-84.0076, -145.579, -66.8334, 0.55", "-85.9612, -146.912, -66.4909, 0.55", "-89.4539, -148.91, -66.1005, 0.28", "-90.9539, -149.671, -65.9149, 0.55", "-93.1071, -150.717, -65.6365, 0.28", "-94.4689, -151.329, -65.4214, 0.55", "-98.1705, -152.91, -64.8535, 0.28", "-99.4359, -153.421, -64.7089, 0.55", "-102.606, -154.748, -64.3459, 0.28", "-104.708, -155.695, -64.314, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "22.3401, -74.4178, -50.692, 0.28", "25.8212, -74.8719, -53.8068, 0.28", "26.2905, -74.9722, -54.3027, 0.83", "28.4415, -75.591, -56.5803, 0.28", "29.1857, -75.7821, -57.3863, 0.28", "30.0805, -76.0845, -58.411, 0.55", "31.4757, -76.7246, -60.4384, 0.28", "32.7621, -77.5827, -62.848, 0.55", "33.5004, -78.1887, -64.2841, 0.55", "34.2946, -79.0858, -66.2002, 0.55", "35.5131, -80.7489, -69.716, 0.83", "36.7723, -82.8437, -74.1268, 0.28", "37.1606, -83.5946, -75.692, 0.28", "37.3139, -84.0404, -76.5432, 0.83", "38.1973, -87.1379, -82.339, 0.28", "38.3839, -88.1116, -84.036, 0.83", "38.4911, -89.0153, -85.5074, 0.83", "38.6953, -90.7529, -88.0594, 0.83", "38.992, -93.859, -92.4163, 0.55", "39.229, -96.8379, -96.1372, 0.55", "39.5512, -101.0, -100.554, 0.55", "39.6292, -103.27, -102.642, 0.55", "39.6371, -105.482, -104.381, 0.28", "39.6371, -105.772, -104.562, 0.55", "39.6431, -110.146, -106.567, 0.28", "39.6381, -111.795, -107.107, 0.55", "39.756, -116.64, -108.373, 0.28", "39.9333, -119.361, -108.996, 0.55", "40.2484, -122.273, -109.622, 0.28", "40.646, -124.428, -110.03, 0.55", "41.9304, -129.386, -110.806, 0.28", "42.3326, -130.559, -110.957, 1.11", "45.0028, -136.334, -111.58, 0.28", "46.5981, -139.094, -111.842, 0.55", "48.5457, -141.584, -111.844, 0.28", "49.3316, -142.33, -111.754, 0.55", "51.7034, -144.093, -111.268, 0.28", "53.4263, -145.168, -110.82, 0.28", "57.0364, -146.932, -109.694, 0.55", "62.4956, -149.515, -107.831, 0.55", "64.6403, -150.519, -107.076, 0.28", "65.0795, -150.708, -106.94, 0.55", "68.2283, -151.947, -106.152, 0.28", "68.7663, -152.154, -106.041, 0.55", "71.1568, -152.989, -105.829, 0.28", "72.1812, -153.31, -105.884, 0.55", "76.362, -154.116, -106.086, 0.28", "77.7525, -154.199, -106.059, 0.55", "79.9644, -154.08, -106.068, 0.28", "80.7301, -153.938, -105.994, 0.55", "83.0278, -153.267, -105.631, 0.28", "85.0598, -152.595, -105.23, 0.55", "88.9613, -151.075, -104.077, 0.28", "91.9987, -149.769, -103.048, 0.55", "98.5134, -146.591, -100.647, 0.28", "99.4716, -146.106, -100.264, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L4_BTC_8637afc75f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.5025, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.11209, -14.0027, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.2775, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.38099, 12.3884, -3.97632, 1.38 ) }
    dend_11 { pt3dadd( -8.38884, 15.6935, -4.34383, 1.66 ) }
    dend_11 { pt3dadd( -10.1031, 18.5154, -4.65762, 1.38 ) }
    dend_11 { pt3dadd( -11.4741, 20.7722, -4.90856, 1.11 ) }
    dend_11 { pt3dadd( -12.5569, 22.5545, -5.10674, 1.11 ) }
    dend_11 { pt3dadd( -15.0599, 26.6748, -5.56489, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.4475, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01634, 10.7752, 7.6, 1.38 ) }
    dend_0 { pt3dadd( 6.15715, 13.4501, 8.32049, 1.38 ) }
    dend_0 { pt3dadd( 6.57453, 18.1272, 9.73348, 1.38 ) }
    dend_0 { pt3dadd( 7.14503, 23.1157, 11.3121, 1.38 ) }
    dend_0 { pt3dadd( 7.57443, 26.8703, 12.5003, 1.38 ) }
    dend_0 { pt3dadd( 7.95758, 30.2207, 13.5606, 0.83 ) }
    dend_0 { pt3dadd( 8.20781, 33.4777, 14.6639, 1.38 ) }
    dend_0 { pt3dadd( 8.57428, 37.3428, 16.0307, 1.38 ) }
    dend_0 { pt3dadd( 9.41159, 41.952, 17.6325, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.64226 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.64226 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64226 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.11209, -14.0027, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.26569, -18.4121, 1.14952, 2.22 ) }
    dend_32 { pt3dadd( 5.38602, -20.7059, 0.780758, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.11209, -14.0027, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.275169, -15.9516, 3.53898, 0.83 ) }
    dend_27 { pt3dadd( -1.86454, -17.2945, 4.93847, 1.11 ) }
    dend_27 { pt3dadd( -4.05734, -19.1473, 6.8693, 0.83 ) }
    dend_27 { pt3dadd( -5.74161, -20.5704, 8.35234, 0.83 ) }
    dend_27 { pt3dadd( -8.59732, -22.9834, 10.8668, 1.38 ) }
    dend_27 { pt3dadd( -11.3268, -25.2897, 13.2703, 1.38 ) }
    dend_27 { pt3dadd( -13.6689, -27.077, 15.5993, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.0599, 26.6748, -5.56489, 0.55 ) }
    dend_21 { pt3dadd( -19.0037, 27.5049, -4.05503, 0.55 ) }
    dend_21 { pt3dadd( -20.8794, 27.6655, -3.02469, 0.55 ) }
    dend_21 { pt3dadd( -22.2125, 27.7026, -2.18734, 0.55 ) }
    dend_21 { pt3dadd( -24.4036, 27.6725, -0.750616, 1.11 ) }
    dend_21 { pt3dadd( -28.241, 27.4922, 1.76681, 0.83 ) }
    dend_21 { pt3dadd( -32.1068, 27.149, 4.3542, 0.83 ) }
    dend_21 { pt3dadd( -36.1536, 26.4734, 7.28122, 0.55 ) }
    dend_21 { pt3dadd( -38.3517, 25.9754, 8.89196, 1.38 ) }
    dend_21 { pt3dadd( -39.9484, 25.5177, 10.0756, 0.28 ) }
    dend_21 { pt3dadd( -41.4033, 25.007, 11.1634, 0.83 ) }
    dend_21 { pt3dadd( -43.1574, 24.3895, 12.5205, 0.28 ) }
    dend_21 { pt3dadd( -44.3722, 23.9471, 13.5083, 0.55 ) }
    dend_21 { pt3dadd( -45.9123, 23.4763, 14.685, 0.55 ) }
    dend_21 { pt3dadd( -48.3583, 22.8166, 16.5396, 0.55 ) }
    dend_21 { pt3dadd( -50.4711, 22.2612, 18.1256, 0.55 ) }
    dend_21 { pt3dadd( -54.0676, 21.4187, 20.8704, 0.55 ) }
    dend_21 { pt3dadd( -55.5888, 21.0999, 21.9915, 0.55 ) }
    dend_21 { pt3dadd( -58.5076, 20.5294, 24.0564, 0.83 ) }
    dend_21 { pt3dadd( -60.5628, 20.1757, 25.4524, 0.83 ) }
    dend_21 { pt3dadd( -62.2057, 19.9155, 26.4837, 0.83 ) }
    dend_21 { pt3dadd( -65.708, 19.4318, 28.6104, 0.83 ) }
    dend_21 { pt3dadd( -67.0112, 19.2334, 29.358, 0.83 ) }
    dend_21 { pt3dadd( -70.1492, 18.7157, 31.2672, 0.83 ) }
    dend_21 { pt3dadd( -74.4325, 17.902, 33.9434, 0.83 ) }
    dend_21 { pt3dadd( -75.5087, 17.7238, 34.609, 0.83 ) }
    dend_21 { pt3dadd( -77.8588, 17.3865, 36.0086, 0.28 ) }
    dend_21 { pt3dadd( -79.1799, 17.1583, 36.7054, 0.83 ) }
    dend_21 { pt3dadd( -82.3567, 16.5787, 38.284, 0.28 ) }
    dend_21 { pt3dadd( -84.5964, 16.1514, 39.2382, 0.83 ) }
    dend_21 { pt3dadd( -87.2226, 15.6466, 40.2088, 0.28 ) }
    dend_21 { pt3dadd( -87.7921, 15.535, 40.4101, 0.55 ) }
    dend_21 { pt3dadd( -91.0591, 14.9893, 41.4124, 0.55 ) }
    dend_21 { pt3dadd( -93.4156, 14.6705, 42.056, 0.28 ) }
    dend_21 { pt3dadd( -96.1145, 14.3186, 42.5229, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -15.0599, 26.6748, -5.56489, 1.11 ) }
    dend_12 { pt3dadd( -16.1184, 29.4779, -7.53756, 1.11 ) }
    dend_12 { pt3dadd( -16.6938, 31.0235, -8.46276, 1.11 ) }
    dend_12 { pt3dadd( -17.3878, 32.8877, -9.57863, 1.11 ) }
    dend_12 { pt3dadd( -17.9713, 34.4547, -10.5167, 1.11 ) }
    dend_12 { pt3dadd( -18.6583, 36.3, -11.6212, 0.83 ) }
    dend_12 { pt3dadd( -19.3618, 38.1898, -12.7524, 0.83 ) }
    dend_12 { pt3dadd( -19.8454, 39.6999, -13.4324, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.41159, 41.952, 17.6325, 0.83 ) }
    dend_4 { pt3dadd( 8.58411, 44.7187, 18.9868, 0.83 ) }
    dend_4 { pt3dadd( 7.96521, 46.7881, 19.9997, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 7.48584, 48.3909, 20.7842, 0.83 ) }
    dend_4 { pt3dadd( 6.73777, 50.8921, 22.0085, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.41159, 41.952, 17.6325, 0.83 ) }
    dend_1 { pt3dadd( 13.8699, 44.8428, 19.248, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64226 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.64226 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.64226 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 5.38602, -20.7059, 0.780758, 0.83 ) }
    dend_42 { pt3dadd( 5.51269, -22.2316, -1.69018, 0.83 ) }
    dend_42 { pt3dadd( 5.5707, -22.9433, -3.16616, 0.83 ) }
    dend_42 { pt3dadd( 5.62789, -23.7072, -5.02553, 0.83 ) }
    dend_42 { pt3dadd( 5.77486, -26.6897, -12.6722, 0.83 ) }
    dend_42 { pt3dadd( 5.85945, -28.3311, -16.9121, 0.83 ) }
    dend_42 { pt3dadd( 5.98622, -30.791, -23.2662, 0.55 ) }
    dend_42 { pt3dadd( 5.90918, -31.8883, -26.3611, 0.83 ) }
    dend_42 { pt3dadd( 5.74475, -33.0521, -29.9472, 0.83 ) }
    dend_42 { pt3dadd( 5.57761, -34.0386, -33.3517, 1.11 ) }
    dend_42 { pt3dadd( 5.60243, -34.1928, -33.9455, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 5.38602, -20.7059, 0.780758, 1.66 ) }
    dend_33 { pt3dadd( 6.05133, -22.5457, 0.734421, 1.66 ) }
    dend_33 { pt3dadd( 7.0059, -24.7711, 0.609119, 1.11 ) }
    dend_33 { pt3dadd( 7.72786, -26.2497, 0.495458, 1.11 ) }
    dend_33 { pt3dadd( 9.15384, -28.5431, 0.447447, 1.11 ) }
    dend_33 { pt3dadd( 10.3713, -30.501, 0.406459, 1.11 ) }
    dend_33 { pt3dadd( 11.2228, -31.8705, 0.377789, 1.38 ) }
    dend_33 { pt3dadd( 12.2373, -33.3359, 0.328994, 1.11 ) }
    dend_33 { pt3dadd( 12.8885, -34.1506, 0.314634, 1.11 ) }
    dend_33 { pt3dadd( 15.7212, -36.9723, 0.321938, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -13.6689, -27.077, 15.5993, 0.28 ) }
    dend_31 { pt3dadd( -13.8998, -28.7135, 19.8537, 0.28 ) }
    dend_31 { pt3dadd( -14.0968, -29.3707, 21.7483, 1.11 ) }
    dend_31 { pt3dadd( -14.8042, -31.4702, 28.3748, 0.55 ) }
    dend_31 { pt3dadd( -14.9874, -32.1239, 30.3826, 0.83 ) }
    dend_31 { pt3dadd( -15.3928, -33.5709, 34.8273, 0.83 ) }
    dend_31 { pt3dadd( -15.8601, -35.2387, 39.95, 0.55 ) }
    dend_31 { pt3dadd( -16.1624, -36.1572, 42.9628, 1.11 ) }
    dend_31 { pt3dadd( -16.669, -37.6956, 48.3938, 0.55 ) }
    dend_31 { pt3dadd( -16.9067, -38.257, 50.2944, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -13.6689, -27.077, 15.5993, 0.83 ) }
    dend_28 { pt3dadd( -17.1504, -27.3273, 17.2917, 0.83 ) }
    dend_28 { pt3dadd( -19.7666, -27.5012, 18.5191, 1.11 ) }
    dend_28 { pt3dadd( -22.3665, -27.605, 19.6542, 0.83 ) }
    dend_28 { pt3dadd( -25.3033, -27.6779, 20.8379, 0.83 ) }
    dend_28 { pt3dadd( -28.925, -27.7679, 22.2977, 0.83 ) }
    dend_28 { pt3dadd( -32.3822, -27.8537, 23.6912, 0.83 ) }
    dend_28 { pt3dadd( -36.1826, -27.9545, 25.1611, 1.11 ) }
    dend_28 { pt3dadd( -40.2054, -28.0234, 26.5666, 1.11 ) }
    dend_28 { pt3dadd( -43.7853, -28.0519, 27.7267, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -96.1145, 14.3186, 42.5229, 0.28 ) }
    dend_23 { pt3dadd( -95.8752, 12.793, 43.346, 0.28 ) }
    dend_23 { pt3dadd( -95.7902, 12.2513, 43.6382, 0.83 ) }
    dend_23 { pt3dadd( -95.3613, 9.51701, 45.1132, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -96.1145, 14.3186, 42.5229, 0.28 ) }
    dend_22 { pt3dadd( -100.279, 15.3048, 43.7782, 0.28 ) }
    dend_22 { pt3dadd( -101.679, 15.8548, 43.7821, 0.55 ) }
    dend_22 { pt3dadd( -104.735, 17.1982, 43.3093, 0.28 ) }
    dend_22 { pt3dadd( -107.463, 18.4163, 42.6987, 0.83 ) }
    dend_22 { pt3dadd( -110.713, 19.8672, 41.9713, 0.28 ) }
    dend_22 { pt3dadd( -113.83, 21.259, 41.2735, 0.28 ) }
    dend_22 { pt3dadd( -119.025, 23.9387, 39.1746, 0.28 ) }
    dend_22 { pt3dadd( -120.066, 24.5379, 38.6207, 0.83 ) }
    dend_22 { pt3dadd( -121.62, 25.6096, 37.4954, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -19.8454, 39.6999, -13.4324, 0.55 ) }
    dend_16 { pt3dadd( -20.5163, 39.8327, -13.8477, 0.55 ) }
    dend_16 { pt3dadd( -21.6992, 40.067, -14.5801, 0.55 ) }
    dend_16 { pt3dadd( -22.8412, 40.2931, -15.2872, 0.83 ) }
    dend_16 { pt3dadd( -24.9016, 40.7011, -16.5628, 0.55 ) }
    dend_16 { pt3dadd( -26.1931, 40.9568, -17.3624, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -19.8454, 39.6999, -13.4324, 0.55 ) }
    dend_13 { pt3dadd( -18.3922, 43.9328, -15.4144, 0.55 ) }
    dend_13 { pt3dadd( -17.7329, 46.0622, -16.2328, 0.55 ) }
    dend_13 { pt3dadd( -17.1858, 47.9213, -16.7525, 0.83 ) }
    dend_13 { pt3dadd( -16.4579, 50.3902, -17.3101, 0.55 ) }
    dend_13 { pt3dadd( -15.9991, 51.9796, -17.6525, 0.83 ) }
    dend_13 { pt3dadd( -15.3001, 54.352, -18.1312, 0.55 ) }
    dend_13 { pt3dadd( -14.775, 56.1764, -18.3804, 0.83 ) }
    dend_13 { pt3dadd( -13.9517, 58.7832, -18.8231, 0.28 ) }
    dend_13 { pt3dadd( -13.444, 60.2304, -19.1279, 0.83 ) }
    dend_13 { pt3dadd( -12.53, 62.5989, -19.7072, 0.55 ) }
    dend_13 { pt3dadd( -11.7885, 64.4497, -20.2041, 0.83 ) }
    dend_13 { pt3dadd( -10.6091, 67.2719, -21.0486, 0.55 ) }
    dend_13 { pt3dadd( -9.22511, 70.4096, -22.1118, 0.83 ) }
    dend_13 { pt3dadd( -7.91554, 73.2977, -23.2248, 0.83 ) }
    dend_13 { pt3dadd( -6.14054, 77.1408, -24.7064, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 6.73777, 50.8921, 22.0085, 0.83 ) }
    dend_6 { pt3dadd( 7.71695, 54.7229, 22.9438, 0.83 ) }
    dend_6 { pt3dadd( 8.59332, 58.9293, 23.9771, 0.83 ) }
    dend_6 { pt3dadd( 9.05311, 61.5258, 24.7184, 0.83 ) }
    dend_6 { pt3dadd( 9.62345, 65.1266, 25.8449, 0.83 ) }
    dend_6 { pt3dadd( 10.2211, 69.1784, 27.1374, 0.83 ) }
    dend_6 { pt3dadd( 10.8003, 73.6645, 28.5808, 0.83 ) }
    dend_6 { pt3dadd( 11.2596, 77.9299, 30.0321, 0.83 ) }
    dend_6 { pt3dadd( 11.6657, 82.1578, 31.5745, 0.83 ) }
    dend_6 { pt3dadd( 11.8383, 84.6987, 32.4798, 0.55 ) }
    dend_6 { pt3dadd( 11.9414, 87.4684, 33.3652, 0.55 ) }
    dend_6 { pt3dadd( 12.0138, 89.794, 33.9499, 0.83 ) }
    dend_6 { pt3dadd( 12.0877, 91.8805, 34.3014, 0.83 ) }
    dend_6 { pt3dadd( 12.1924, 93.8109, 34.5084, 0.55 ) }
    dend_6 { pt3dadd( 12.3286, 96.2595, 34.5421, 0.83 ) }
    dend_6 { pt3dadd( 12.442, 98.2489, 34.5096, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 12.5223, 99.9576, 34.4713, 0.83 ) }
    dend_6 { pt3dadd( 12.606, 102.606, 34.4269, 0.55 ) }
    dend_6 { pt3dadd( 12.6228, 105.266, 34.3564, 0.83 ) }
    dend_6 { pt3dadd( 12.5538, 107.688, 34.0836, 0.55 ) }
    dend_6 { pt3dadd( 12.4693, 109.005, 33.8778, 0.55 ) }
    dend_6 { pt3dadd( 12.2838, 111.04, 33.5454, 0.83 ) }
    dend_6 { pt3dadd( 11.945, 113.948, 33.0507, 0.83 ) }
    dend_6 { pt3dadd( 11.6434, 116.356, 32.6469, 0.55 ) }
    dend_6 { pt3dadd( 10.8471, 121.803, 31.7154, 0.83 ) }
    dend_6 { pt3dadd( 10.3524, 124.961, 31.1802, 0.83 ) }
    dend_6 { pt3dadd( 9.76972, 128.813, 30.5833, 0.83 ) }
    dend_6 { pt3dadd( 9.44896, 131.152, 30.3214, 0.83 ) }
    dend_6 { pt3dadd( 9.17854, 133.022, 30.231, 0.83 ) }
    dend_6 { pt3dadd( 8.90627, 134.86, 30.292, 0.55 ) }
    dend_6 { pt3dadd( 8.58144, 136.948, 30.5127, 0.55 ) }
    dend_6 { pt3dadd( 8.12582, 139.323, 30.7637, 0.83 ) }
    dend_6 { pt3dadd( 7.12698, 143.722, 31.2237, 0.83 ) }
    dend_6 { pt3dadd( 6.31837, 147.201, 31.5602, 1.11 ) }
    dend_6 { pt3dadd( 5.67042, 149.842, 31.7982, 0.55 ) }
    dend_6 { pt3dadd( 4.886, 152.732, 32.0674, 1.11 ) }
    dend_6 { pt3dadd( 3.63555, 156.778, 32.4832, 0.83 ) }
    dend_6 { pt3dadd( 2.51877, 160.128, 32.7891, 0.83 ) }
    dend_6 { pt3dadd( 1.72362, 162.357, 32.9167, 0.83 ) }
    dend_6 { pt3dadd( 0.958036, 164.586, 32.9637, 0.55 ) }
    dend_6 { pt3dadd( -0.0732439, 167.724, 32.9505, 0.55 ) }
    dend_6 { pt3dadd( -0.296343, 168.467, 32.9263, 0.55 ) }
    dend_6 { pt3dadd( -1.01553, 171.235, 32.8404, 0.55 ) }
    dend_6 { pt3dadd( -1.49572, 173.264, 32.7132, 0.28 ) }
    dend_6 { pt3dadd( -2.18539, 176.534, 32.3505, 0.55 ) }
    dend_6 { pt3dadd( -2.83834, 180.281, 31.7661, 0.55 ) }
    dend_6 { pt3dadd( -3.15029, 182.402, 31.3717, 0.55 ) }
    dend_6 { pt3dadd( -3.66349, 186.104, 30.6651, 0.83 ) }
    dend_6 { pt3dadd( -4.16997, 190.021, 29.8988, 0.83 ) }
    dend_6 { pt3dadd( -4.57263, 192.804, 29.2387, 0.83 ) }
    dend_6 { pt3dadd( -4.85669, 194.412, 28.7804, 0.55 ) }
    dend_6 { pt3dadd( -5.12677, 195.838, 28.3346, 0.83 ) }
    dend_6 { pt3dadd( -5.64282, 198.12, 27.6748, 0.83 ) }
    dend_6 { pt3dadd( -6.42804, 200.996, 26.9188, 0.83 ) }
    dend_6 { pt3dadd( -7.47551, 204.598, 26.2502, 0.83 ) }
    dend_6 { pt3dadd( -8.16929, 206.868, 25.9133, 0.83 ) }
    dend_6 { pt3dadd( -8.86218, 208.969, 25.5524, 0.83 ) }
    dend_6 { pt3dadd( -9.88405, 211.94, 24.9711, 0.55 ) }
    dend_6 { pt3dadd( -11.026, 215.034, 24.3589, 0.55 ) }
    dend_6 { pt3dadd( -11.8472, 217.285, 23.9505, 0.55 ) }
    dend_6 { pt3dadd( -12.7209, 219.789, 23.509, 0.83 ) }
    dend_6 { pt3dadd( -14.0161, 223.611, 22.7684, 1.11 ) }
    dend_6 { pt3dadd( -15.2285, 227.622, 22.0551, 0.55 ) }
    dend_6 { pt3dadd( -15.7809, 229.97, 21.7251, 0.55 ) }
    dend_6 { pt3dadd( -16.3112, 232.706, 21.4358, 0.55 ) }
    dend_6 { pt3dadd( -16.7047, 235.434, 21.2149, 0.83 ) }
    dend_6 { pt3dadd( -16.9578, 238.744, 21.0241, 0.83 ) }
    dend_6 { pt3dadd( -17.0482, 243.322, 20.8327, 0.83 ) }
    dend_6 { pt3dadd( -16.8858, 248.823, 20.4859, 0.83 ) }
    dend_6 { pt3dadd( -16.6877, 252.027, 20.1837, 0.55 ) }
    dend_6 { pt3dadd( -16.4343, 255.206, 19.7948, 0.55 ) }
    dend_6 { pt3dadd( -16.0424, 259.196, 19.2204, 0.83 ) }
    dend_6 { pt3dadd( -15.8973, 261.065, 18.903, 0.83 ) }
    dend_6 { pt3dadd( -15.836, 264.008, 18.3801, 0.83 ) }
    dend_6 { pt3dadd( -16.0004, 267.468, 17.8678, 0.83 ) }
    dend_6 { pt3dadd( -16.3583, 270.308, 17.6334, 0.28 ) }
    dend_6 { pt3dadd( -16.6598, 271.769, 17.596, 0.83 ) }
    dend_6 { pt3dadd( -17.7508, 275.919, 17.6405, 0.83 ) }
    dend_6 { pt3dadd( -18.7498, 279.209, 17.8001, 0.83 ) }
    dend_6 { pt3dadd( -19.8949, 282.387, 18.1315, 0.83 ) }
    dend_6 { pt3dadd( -21.198, 285.638, 18.6316, 0.83 ) }
    dend_6 { pt3dadd( -22.1283, 287.79, 19.0356, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 6.73777, 50.8921, 22.0085, 0.83 ) }
    dend_5 { pt3dadd( 6.12005, 51.538, 23.2256, 0.83 ) }
    dend_5 { pt3dadd( 5.68645, 52.136, 24.1847, 0.55 ) }
    dend_5 { pt3dadd( 4.98672, 53.1074, 25.7275, 0.55 ) }
    dend_5 { pt3dadd( 4.33023, 54.0169, 27.1669, 0.55 ) }
    dend_5 { pt3dadd( 3.58718, 54.9307, 28.7426, 0.55 ) }
    dend_5 { pt3dadd( 3.03705, 55.5128, 29.9008, 0.55 ) }
    dend_5 { pt3dadd( 2.11197, 56.3012, 31.8966, 0.55 ) }
    dend_5 { pt3dadd( 1.44122, 56.7054, 33.2694, 0.55 ) }
    dend_5 { pt3dadd( 0.473713, 57.0018, 35.0038, 0.55 ) }
    dend_5 { pt3dadd( -1.11997, 56.9568, 37.4908, 0.55 ) }
    dend_5 { pt3dadd( -2.09987, 56.6898, 38.8123, 0.55 ) }
    dend_5 { pt3dadd( -3.17894, 56.1036, 40.1204, 0.55 ) }
    dend_5 { pt3dadd( -3.83739, 55.5886, 40.8012, 0.55 ) }
    dend_5 { pt3dadd( -4.37466, 55.0464, 41.2812, 0.55 ) }
    dend_5 { pt3dadd( -5.38764, 53.7993, 42.029, 0.28 ) }
    dend_5 { pt3dadd( -5.8819, 53.0819, 42.3412, 0.83 ) }
    dend_5 { pt3dadd( -6.53885, 52.0395, 42.7425, 0.55 ) }
    dend_5 { pt3dadd( -6.96017, 51.276, 42.9525, 0.55 ) }
    dend_5 { pt3dadd( -7.47172, 50.1185, 43.1318, 0.55 ) }
    dend_5 { pt3dadd( -7.92807, 48.9081, 43.2258, 0.83 ) }
    dend_5 { pt3dadd( -8.30952, 47.8321, 43.2559, 0.55 ) }
    dend_5 { pt3dadd( -8.64073, 46.9187, 43.2405, 0.55 ) }
    dend_5 { pt3dadd( -9.42247, 44.7772, 43.137, 0.55 ) }
    dend_5 { pt3dadd( -10.2316, 42.7348, 43.0228, 0.83 ) }
    dend_5 { pt3dadd( -10.9033, 41.2203, 42.9178, 0.83 ) }
    dend_5 { pt3dadd( -11.6809, 39.6974, 42.7183, 0.83 ) }
    dend_5 { pt3dadd( -12.6516, 37.9954, 42.4788, 0.55 ) }
    dend_5 { pt3dadd( -13.1207, 37.2198, 42.4021, 0.28 ) }
    dend_5 { pt3dadd( -13.717, 36.2974, 42.3696, 0.55 ) }
    dend_5 { pt3dadd( -14.4461, 35.2985, 42.3661, 0.28 ) }
    dend_5 { pt3dadd( -16.0101, 33.2511, 42.4616, 0.55 ) }
    dend_5 { pt3dadd( -16.9783, 32.0319, 42.5809, 0.55 ) }
    dend_5 { pt3dadd( -17.9047, 30.8677, 42.7704, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -18.7276, 29.8229, 42.9846, 0.55 ) }
    dend_5 { pt3dadd( -20.1091, 27.9519, 43.395, 0.55 ) }
    dend_5 { pt3dadd( -20.5707, 27.2779, 43.5629, 0.83 ) }
    dend_5 { pt3dadd( -21.3513, 26.021, 43.8911, 0.55 ) }
    dend_5 { pt3dadd( -22.407, 24.1542, 44.2612, 0.55 ) }
    dend_5 { pt3dadd( -23.0772, 22.7087, 44.4437, 0.83 ) }
    dend_5 { pt3dadd( -23.6764, 20.9661, 44.5801, 0.55 ) }
    dend_5 { pt3dadd( -23.9808, 19.6206, 44.6125, 0.55 ) }
    dend_5 { pt3dadd( -24.1925, 18.2669, 44.5932, 0.55 ) }
    dend_5 { pt3dadd( -24.2508, 17.5483, 44.5546, 0.83 ) }
    dend_5 { pt3dadd( -24.3067, 15.7003, 44.3867, 0.55 ) }
    dend_5 { pt3dadd( -24.2902, 13.5393, 44.1407, 0.28 ) }
    dend_5 { pt3dadd( -24.214, 10.4143, 43.7655, 0.28 ) }
    dend_5 { pt3dadd( -24.1962, 9.10007, 43.565, 0.83 ) }
    dend_5 { pt3dadd( -24.1649, 6.5202, 43.1368, 0.28 ) }
    dend_5 { pt3dadd( -24.1554, 5.6152, 42.9939, 0.83 ) }
    dend_5 { pt3dadd( -24.1517, 5.05041, 42.9119, 0.28 ) }
    dend_5 { pt3dadd( -24.1271, 4.16494, 42.7581, 0.83 ) }
    dend_5 { pt3dadd( -24.0855, 2.39873, 42.4547, 0.28 ) }
    dend_5 { pt3dadd( -24.0902, 1.71924, 42.3676, 0.55 ) }
    dend_5 { pt3dadd( -24.1678, 0.17737, 42.2407, 0.28 ) }
    dend_5 { pt3dadd( -24.2322, -0.715916, 42.1833, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.8699, 44.8428, 19.248, 0.83 ) }
    dend_3 { pt3dadd( 16.1471, 45.659, 17.6176, 0.83 ) }
    dend_3 { pt3dadd( 18.8417, 46.7786, 15.8226, 0.83 ) }
    dend_3 { pt3dadd( 20.4731, 47.5331, 14.8342, 0.83 ) }
    dend_3 { pt3dadd( 29.9877, 52.2476, 9.81906, 0.55 ) }
    dend_3 { pt3dadd( 32.5191, 53.6019, 8.7533, 0.55 ) }
    dend_3 { pt3dadd( 33.8479, 54.3606, 8.33756, 0.55 ) }
    dend_3 { pt3dadd( 35.5218, 55.3504, 7.96645, 0.55 ) }
    dend_3 { pt3dadd( 37.0741, 56.392, 7.88469, 1.11 ) }
    dend_3 { pt3dadd( 38.6789, 57.7215, 8.1904, 0.55 ) }
    dend_3 { pt3dadd( 41.0592, 60.128, 9.36278, 0.55 ) }
    dend_3 { pt3dadd( 43.0717, 62.3369, 10.442, 0.55 ) }
    dend_3 { pt3dadd( 44.3363, 63.792, 11.1857, 0.55 ) }
    dend_3 { pt3dadd( 45.7966, 65.6751, 12.2395, 0.83 ) }
    dend_3 { pt3dadd( 47.3843, 68.0314, 13.5641, 0.55 ) }
    dend_3 { pt3dadd( 48.4901, 69.9627, 14.5825, 1.11 ) }
    dend_3 { pt3dadd( 49.5292, 72.013, 15.6579, 0.55 ) }
    dend_3 { pt3dadd( 50.5, 74.0449, 16.7191, 0.83 ) }
    dend_3 { pt3dadd( 52.1654, 77.587, 18.4975, 0.55 ) }
    dend_3 { pt3dadd( 53.0516, 79.4402, 19.3915, 0.55 ) }
    dend_3 { pt3dadd( 54.2906, 81.9979, 20.5398, 0.55 ) }
    dend_3 { pt3dadd( 55.3531, 83.9744, 21.3423, 0.55 ) }
    dend_3 { pt3dadd( 56.0431, 85.19, 21.7815, 0.28 ) }
    dend_3 { pt3dadd( 57.5031, 87.5724, 22.551, 0.55 ) }
    dend_3 { pt3dadd( 58.6673, 89.3423, 23.0349, 0.28 ) }
    dend_3 { pt3dadd( 59.7733, 90.9336, 23.4623, 0.55 ) }
    dend_3 { pt3dadd( 61.9025, 93.908, 24.2339, 0.55 ) }
    dend_3 { pt3dadd( 63.0815, 95.59, 24.6247, 0.55 ) }
    dend_3 { pt3dadd( 64.741, 97.9211, 25.1375, 0.28 ) }
    dend_3 { pt3dadd( 66.7785, 100.185, 24.9749, 0.83 ) }
    dend_3 { pt3dadd( 68.7449, 102.084, 24.4759, 0.28 ) }
    dend_3 { pt3dadd( 69.2265, 102.481, 24.3033, 0.55 ) }
    dend_3 { pt3dadd( 70.4784, 103.296, 23.7136, 0.28 ) }
    dend_3 { pt3dadd( 71.319, 103.758, 23.2685, 0.83 ) }
    dend_3 { pt3dadd( 82.0505, 108.958, 17.2566, 0.55 ) }
    dend_3 { pt3dadd( 86.2008, 110.808, 15.0164, 0.55 ) }
    dend_3 { pt3dadd( 87.4593, 111.37, 14.3786, 0.83 ) }
    dend_3 { pt3dadd( 90.2691, 112.757, 13.2656, 0.55 ) }
    dend_3 { pt3dadd( 91.5464, 113.491, 12.9594, 0.55 ) }
    dend_3 { pt3dadd( 92.7058, 114.532, 13.1244, 0.83 ) }
    dend_3 { pt3dadd( 93.6493, 116.061, 13.992, 0.28 ) }
    dend_3 { pt3dadd( 94.1268, 116.893, 14.296, 0.55 ) }
    dend_3 { pt3dadd( 95.192, 119.341, 15.1877, 0.28 ) }
    dend_3 { pt3dadd( 95.6885, 121.024, 15.9048, 0.55 ) }
    dend_3 { pt3dadd( 96.1117, 122.483, 16.4992, 0.28 ) }
    dend_3 { pt3dadd( 96.5018, 123.939, 16.872, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 13.8699, 44.8428, 19.248, 0.55 ) }
    dend_2 { pt3dadd( 14.5072, 44.2108, 20.677, 0.55 ) }
    dend_2 { pt3dadd( 15.4636, 43.2625, 22.8214, 0.28 ) }
    dend_2 { pt3dadd( 15.9653, 42.7649, 23.9465, 0.55 ) }
    dend_2 { pt3dadd( 16.887, 41.8509, 26.0132, 0.55 ) }
    dend_2 { pt3dadd( 18.0921, 40.6559, 28.7154, 0.55 ) }
    dend_2 { pt3dadd( 18.7509, 40.0025, 30.1928, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 5.60243, -34.1928, -33.9455, 0.55 ) }
    dend_48 { pt3dadd( 2.76968, -31.9569, -35.2474, 0.55 ) }
    dend_48 { pt3dadd( 1.92831, -31.3431, -35.9402, 0.83 ) }
    dend_48 { pt3dadd( -0.00994188, -29.963, -37.7127, 0.55 ) }
    dend_48 { pt3dadd( -0.813358, -29.42, -38.4289, 0.55 ) }
    dend_48 { pt3dadd( -4.4801, -27.4044, -42.3062, 0.28 ) }
    dend_48 { pt3dadd( -5.24627, -27.0476, -43.1384, 0.83 ) }
    dend_48 { pt3dadd( -8.33694, -25.9698, -46.9692, 0.55 ) }
    dend_48 { pt3dadd( -8.67014, -25.8814, -47.3936, 0.55 ) }
    dend_48 { pt3dadd( -9.56826, -25.7133, -48.5612, 0.83 ) }
    dend_48 { pt3dadd( -13.5968, -25.1287, -53.6596, 0.55 ) }
    dend_48 { pt3dadd( -14.384, -25.0465, -54.6131, 0.55 ) }
    dend_48 { pt3dadd( -15.2684, -24.9629, -55.7115, 0.83 ) }
    dend_48 { pt3dadd( -17.1773, -24.7404, -58.2506, 0.55 ) }
    dend_48 { pt3dadd( -17.5652, -24.6593, -58.8106, 0.55 ) }
    dend_48 { pt3dadd( -18.2451, -24.4349, -59.9177, 0.55 ) }
    dend_48 { pt3dadd( -20.8776, -23.1749, -64.4771, 0.28 ) }
    dend_48 { pt3dadd( -21.566, -22.7931, -65.7744, 0.83 ) }
    dend_48 { pt3dadd( -23.8245, -21.3374, -70.2086, 0.55 ) }
    dend_48 { pt3dadd( -24.3815, -20.9017, -71.3613, 0.83 ) }
    dend_48 { pt3dadd( -27.1156, -18.3462, -77.1866, 0.55 ) }
    dend_48 { pt3dadd( -27.8173, -17.4955, -78.8609, 0.28 ) }
    dend_48 { pt3dadd( -28.1951, -16.9235, -79.8517, 0.83 ) }
    dend_48 { pt3dadd( -28.7766, -15.8436, -81.5684, 0.55 ) }
    dend_48 { pt3dadd( -29.1316, -14.9568, -82.7806, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -29.7302, -12.8007, -85.5165, 0.55 ) }
    dend_48 { pt3dadd( -30.1459, -9.51599, -89.0755, 0.28 ) }
    dend_48 { pt3dadd( -30.1797, -9.01697, -89.6086, 0.55 ) }
    dend_48 { pt3dadd( -30.2177, -7.69414, -91.0063, 0.28 ) }
    dend_48 { pt3dadd( -30.2183, -7.1593, -91.5725, 0.55 ) }
    dend_48 { pt3dadd( -30.1882, -5.3489, -93.4522, 0.28 ) }
    dend_48 { pt3dadd( -30.1518, -4.71268, -94.0894, 0.55 ) }
    dend_48 { pt3dadd( -30.0532, -2.71588, -96.0669, 0.28 ) }
    dend_48 { pt3dadd( -30.0323, -1.97893, -96.839, 0.55 ) }
    dend_48 { pt3dadd( -30.0498, -0.344327, -98.5496, 0.28 ) }
    dend_48 { pt3dadd( -30.0752, 0.0254123, -98.9345, 0.55 ) }
    dend_48 { pt3dadd( -30.1992, 1.51523, -100.375, 0.28 ) }
    dend_48 { pt3dadd( -30.246, 2.03225, -100.867, 0.55 ) }
    dend_48 { pt3dadd( -30.4473, 3.64791, -102.317, 0.28 ) }
    dend_48 { pt3dadd( -30.6217, 4.45375, -103.123, 0.55 ) }
    dend_48 { pt3dadd( -31.2695, 6.81481, -105.465, 0.28 ) }
    dend_48 { pt3dadd( -31.5918, 7.78055, -106.443, 0.55 ) }
    dend_48 { pt3dadd( -32.6401, 10.432, -109.455, 0.28 ) }
    dend_48 { pt3dadd( -32.9734, 11.2307, -110.441, 0.55 ) }
    dend_48 { pt3dadd( -34.0856, 13.7771, -114.052, 0.28 ) }
    dend_48 { pt3dadd( -34.488, 14.6202, -115.362, 0.28 ) }
    dend_48 { pt3dadd( -34.9844, 15.6001, -116.976, 0.55 ) }
    dend_48 { pt3dadd( -35.9132, 17.2965, -119.752, 0.28 ) }
    dend_48 { pt3dadd( -36.0772, 17.6161, -120.23, 0.55 ) }
    dend_48 { pt3dadd( -36.8218, 18.9747, -122.456, 0.28 ) }
    dend_48 { pt3dadd( -37.1852, 19.6267, -123.512, 0.83 ) }
    dend_48 { pt3dadd( -37.979, 20.9577, -125.645, 0.55 ) }
    dend_48 { pt3dadd( -38.4848, 21.8209, -127.031, 0.55 ) }
    dend_48 { pt3dadd( -39.3361, 23.3707, -129.42, 0.55 ) }
    dend_48 { pt3dadd( -41.3808, 27.1989, -135.639, 0.83 ) }
    dend_48 { pt3dadd( -42.0588, 28.5103, -137.897, 0.28 ) }
    dend_48 { pt3dadd( -42.3946, 29.197, -139.159, 0.55 ) }
    dend_48 { pt3dadd( -43.543, 31.708, -144.204, 0.55 ) }
    dend_48 { pt3dadd( -43.7817, 32.3612, -145.576, 0.55 ) }
    dend_48 { pt3dadd( -44.477, 34.4415, -150.26, 0.83 ) }
    dend_48 { pt3dadd( -44.9238, 35.7586, -153.439, 0.28 ) }
    dend_48 { pt3dadd( -45.3011, 36.4217, -155.569, 0.55 ) }
    dend_48 { pt3dadd( -45.8066, 36.915, -158.188, 0.28 ) }
    dend_48 { pt3dadd( -46.0429, 37.0141, -159.321, 0.83 ) }
    dend_48 { pt3dadd( -47.5278, 37.0971, -165.687, 0.55 ) }
    dend_48 { pt3dadd( -48.1509, 36.9563, -168.121, 0.55 ) }
    dend_48 { pt3dadd( -49.7516, 36.4025, -173.63, 0.55 ) }
    dend_48 { pt3dadd( -52.5348, 35.5228, -181.698, 0.55 ) }
    dend_48 { pt3dadd( -53.2487, 35.314, -183.553, 0.55 ) }
    dend_48 { pt3dadd( -55.1497, 34.8196, -188.18, 0.55 ) }
    dend_48 { pt3dadd( -57.2489, 34.3818, -192.986, 0.55 ) }
    dend_48 { pt3dadd( -58.9717, 34.1226, -196.698, 0.55 ) }
    dend_48 { pt3dadd( -61.7962, 33.8219, -202.205, 0.55 ) }
    dend_48 { pt3dadd( -64.8591, 33.6624, -207.729, 0.55 ) }
    dend_48 { pt3dadd( -65.5514, 33.6476, -208.965, 0.55 ) }
    dend_48 { pt3dadd( -68.5899, 33.5464, -214.378, 0.55 ) }
    dend_48 { pt3dadd( -69.3281, 33.5188, -215.679, 0.28 ) }
    dend_48 { pt3dadd( -69.5035, 33.5062, -215.995, 0.55 ) }
    dend_48 { pt3dadd( -76.3577, 32.6893, -228.271, 0.28 ) }
    dend_48 { pt3dadd( -76.9952, 32.6048, -229.371, 0.83 ) }
    dend_48 { pt3dadd( -80.7871, 31.9849, -235.84, 0.28 ) }
    dend_48 { pt3dadd( -81.0336, 31.9425, -236.254, 0.55 ) }
    dend_48 { pt3dadd( -82.8405, 31.6655, -239.264, 0.28 ) }
    dend_48 { pt3dadd( -83.5877, 31.5484, -240.479, 0.55 ) }
    dend_48 { pt3dadd( -85.1911, 31.2269, -242.714, 0.28 ) }
    dend_48 { pt3dadd( -85.7375, 31.1081, -243.488, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 5.60243, -34.1928, -33.9455, 0.55 ) }
    dend_43 { pt3dadd( 7.01953, -34.76, -36.9513, 0.55 ) }
    dend_43 { pt3dadd( 8.27812, -35.1995, -39.2808, 0.55 ) }
    dend_43 { pt3dadd( 11.0211, -36.1617, -44.6871, 0.83 ) }
    dend_43 { pt3dadd( 11.7447, -36.4663, -46.1377, 0.83 ) }
    dend_43 { pt3dadd( 12.5901, -36.8571, -47.818, 0.83 ) }
    dend_43 { pt3dadd( 13.3132, -37.1813, -49.2038, 0.83 ) }
    dend_43 { pt3dadd( 14.6147, -37.7422, -51.5963, 0.83 ) }
    dend_43 { pt3dadd( 16.7755, -38.7833, -55.6052, 0.83 ) }
    dend_43 { pt3dadd( 18.1531, -39.3651, -57.969, 0.83 ) }
    dend_43 { pt3dadd( 19.6309, -39.9268, -60.6376, 0.83 ) }
    dend_43 { pt3dadd( 21.2849, -40.4801, -63.6043, 0.83 ) }
    dend_43 { pt3dadd( 22.7951, -40.9399, -66.3025, 0.83 ) }
    dend_43 { pt3dadd( 25.2913, -41.6532, -70.5751, 0.83 ) }
    dend_43 { pt3dadd( 26.8796, -42.0206, -73.1264, 0.83 ) }
    dend_43 { pt3dadd( 28.9108, -42.3488, -76.3973, 0.83 ) }
    dend_43 { pt3dadd( 30.209, -42.5042, -78.5174, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 15.7212, -36.9723, 0.321938, 0.55 ) }
    dend_39 { pt3dadd( 18.2951, -36.7958, 1.34729, 0.55 ) }
    dend_39 { pt3dadd( 20.4328, -36.7629, 2.25343, 0.28 ) }
    dend_39 { pt3dadd( 21.7828, -36.8337, 2.86207, 0.55 ) }
    dend_39 { pt3dadd( 24.0679, -37.0274, 3.92136, 1.11 ) }
    dend_39 { pt3dadd( 28.1932, -37.5308, 6.03294, 0.55 ) }
    dend_39 { pt3dadd( 29.7672, -37.763, 6.90151, 0.55 ) }
    dend_39 { pt3dadd( 31.4987, -38.1047, 7.96169, 0.83 ) }
    dend_39 { pt3dadd( 33.3263, -38.4987, 9.14773, 0.28 ) }
    dend_39 { pt3dadd( 33.3263, -38.4987, 9.14773, 0.83 ) }
    dend_39 { pt3dadd( 36.3859, -39.6333, 11.4335, 0.28 ) }
    dend_39 { pt3dadd( 37.2052, -39.9904, 12.0643, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 15.7212, -36.9723, 0.321938, 0.83 ) }
    dend_34 { pt3dadd( 17.2693, -39.8599, -0.477827, 0.83 ) }
    dend_34 { pt3dadd( 18.6, -42.0538, -1.49239, 0.55 ) }
    dend_34 { pt3dadd( 19.443, -43.321, -2.36428, 0.83 ) }
    dend_34 { pt3dadd( 20.1308, -44.355, -3.07568, 0.83 ) }
    dend_34 { pt3dadd( 21.0841, -45.788, -4.06166, 0.83 ) }
    dend_34 { pt3dadd( 21.9214, -47.0466, -4.92759, 0.83 ) }
    dend_34 { pt3dadd( 23.6049, -49.1724, -7.01738, 0.83 ) }
    dend_34 { pt3dadd( 24.7887, -50.5856, -8.81545, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -43.7853, -28.0519, 27.7267, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -44.9532, -25.7127, 26.7696, 0.55 ) }
    dend_30 { pt3dadd( -46.417, -22.49, 25.4441, 0.83 ) }
    dend_30 { pt3dadd( -48.4515, -17.9957, 23.4851, 0.55 ) }
    dend_30 { pt3dadd( -49.3467, -15.8148, 22.5798, 0.55 ) }
    dend_30 { pt3dadd( -50.56, -12.6266, 21.3026, 1.11 ) }
    dend_30 { pt3dadd( -51.5989, -9.78574, 20.2148, 0.83 ) }
    dend_30 { pt3dadd( -52.6243, -6.79156, 19.0925, 0.55 ) }
    dend_30 { pt3dadd( -53.0109, -5.56638, 18.6572, 0.55 ) }
    dend_30 { pt3dadd( -54.001, -2.55876, 17.8449, 0.55 ) }
    dend_30 { pt3dadd( -54.2071, -1.94826, 17.6826, 1.11 ) }
    dend_30 { pt3dadd( -54.7158, -0.442126, 17.582, 0.55 ) }
    dend_30 { pt3dadd( -55.2691, 1.09439, 17.9432, 0.83 ) }
    dend_30 { pt3dadd( -55.8493, 2.53351, 18.6157, 0.55 ) }
    dend_30 { pt3dadd( -56.5938, 4.21289, 19.553, 0.55 ) }
    dend_30 { pt3dadd( -57.2006, 5.40113, 20.2299, 0.83 ) }
    dend_30 { pt3dadd( -60.2188, 11.0705, 22.7146, 0.55 ) }
    dend_30 { pt3dadd( -61.0444, 12.6517, 23.2441, 0.83 ) }
    dend_30 { pt3dadd( -62.1569, 14.705, 23.7117, 0.55 ) }
    dend_30 { pt3dadd( -63.4363, 16.8432, 24.0193, 0.55 ) }
    dend_30 { pt3dadd( -64.7231, 18.824, 24.0105, 1.11 ) }
    dend_30 { pt3dadd( -67.1633, 22.5495, 23.5049, 0.55 ) }
    dend_30 { pt3dadd( -67.9485, 23.7628, 23.2183, 0.55 ) }
    dend_30 { pt3dadd( -69.9147, 26.9786, 22.4154, 0.55 ) }
    dend_30 { pt3dadd( -71.1483, 29.0855, 21.8642, 0.55 ) }
    dend_30 { pt3dadd( -72.7083, 31.8114, 21.2204, 1.11 ) }
    dend_30 { pt3dadd( -74.4483, 34.8562, 20.6204, 0.55 ) }
    dend_30 { pt3dadd( -75.5094, 36.7174, 20.3987, 1.11 ) }
    dend_30 { pt3dadd( -76.8521, 39.0286, 20.1604, 0.28 ) }
    dend_30 { pt3dadd( -77.3179, 39.8355, 20.1211, 0.55 ) }
    dend_30 { pt3dadd( -78.0941, 41.139, 20.146, 0.28 ) }
    dend_30 { pt3dadd( -79.1781, 42.8222, 20.3828, 0.83 ) }
    dend_30 { pt3dadd( -80.9512, 45.3009, 20.915, 0.28 ) }
    dend_30 { pt3dadd( -81.6115, 46.2212, 21.1828, 0.55 ) }
    dend_30 { pt3dadd( -84.3309, 49.9838, 22.5501, 0.28 ) }
    dend_30 { pt3dadd( -85.3474, 51.4337, 23.1088, 0.83 ) }
    dend_30 { pt3dadd( -86.7771, 53.5428, 23.9131, 0.55 ) }
    dend_30 { pt3dadd( -88.2095, 55.7081, 24.7231, 0.55 ) }
    dend_30 { pt3dadd( -89.6581, 57.9193, 25.4906, 0.55 ) }
    dend_30 { pt3dadd( -90.7372, 59.6516, 26.0545, 0.83 ) }
    dend_30 { pt3dadd( -91.972, 61.7357, 26.6466, 0.28 ) }
    dend_30 { pt3dadd( -93.1089, 63.7893, 27.1595, 0.55 ) }
    dend_30 { pt3dadd( -94.4147, 66.498, 27.6017, 0.55 ) }
    dend_30 { pt3dadd( -94.6317, 67.0521, 27.6561, 0.83 ) }
    dend_30 { pt3dadd( -95.4977, 69.5664, 27.5251, 0.28 ) }
    dend_30 { pt3dadd( -95.8578, 70.9981, 27.2943, 0.55 ) }
    dend_30 { pt3dadd( -96.1057, 72.173, 26.9005, 0.28 ) }
    dend_30 { pt3dadd( -96.6214, 74.5225, 25.6767, 0.55 ) }
    dend_30 { pt3dadd( -97.1322, 76.9632, 24.0951, 0.55 ) }
    dend_30 { pt3dadd( -97.8952, 80.4106, 21.6566, 0.28 ) }
    dend_30 { pt3dadd( -98.4333, 82.6575, 19.6123, 0.83 ) }
    dend_30 { pt3dadd( -99.2003, 85.8442, 16.3296, 0.55 ) }
    dend_30 { pt3dadd( -99.7323, 88.1219, 13.7866, 0.55 ) }
    dend_30 { pt3dadd( -99.9736, 89.0719, 12.6811, 0.55 ) }
    dend_30 { pt3dadd( -100.402, 90.4981, 10.8677, 0.83 ) }
    dend_30 { pt3dadd( -101.709, 94.4329, 5.9645, 0.28 ) }
    dend_30 { pt3dadd( -102.03, 95.2357, 4.94111, 0.83 ) }
    dend_30 { pt3dadd( -102.52, 96.3607, 3.64024, 0.28 ) }
    dend_30 { pt3dadd( -103.081, 97.5298, 2.47946, 0.55 ) }
    dend_30 { pt3dadd( -104.906, 100.388, 0.0352908, 0.83 ) }
    dend_30 { pt3dadd( -105.608, 101.337, -0.299814, 0.83 ) }
    dend_30 { pt3dadd( -106.796, 102.919, -0.025054, 0.28 ) }
    dend_30 { pt3dadd( -107.357, 103.689, 0.294143, 0.55 ) }
    dend_30 { pt3dadd( -108.611, 105.524, 1.37216, 0.28 ) }
    dend_30 { pt3dadd( -109.434, 106.956, 2.30041, 0.55 ) }
    dend_30 { pt3dadd( -111.274, 111.043, 5.97189, 0.28 ) }
    dend_30 { pt3dadd( -111.594, 111.871, 6.79677, 0.55 ) }
    dend_30 { pt3dadd( -112.011, 113.239, 8.15768, 0.28 ) }
    dend_30 { pt3dadd( -112.28, 114.349, 9.2761, 0.83 ) }
    dend_30 { pt3dadd( -112.651, 116.199, 11.1516, 0.83 ) }
    dend_30 { pt3dadd( -113.481, 121.621, 16.3181, 0.28 ) }
    dend_30 { pt3dadd( -113.577, 122.44, 17.0217, 0.55 ) }
    dend_30 { pt3dadd( -113.847, 125.332, 19.3889, 0.28 ) }
    dend_30 { pt3dadd( -113.972, 126.992, 20.6699, 0.83 ) }
    dend_30 { pt3dadd( -114.079, 128.809, 21.9669, 0.28 ) }
    dend_30 { pt3dadd( -114.171, 130.32, 22.8886, 0.83 ) }
    dend_30 { pt3dadd( -114.4, 133.592, 24.2809, 0.28 ) }
    dend_30 { pt3dadd( -114.497, 135.087, 24.8038, 0.83 ) }
    dend_30 { pt3dadd( -114.685, 137.892, 25.5036, 0.28 ) }
    dend_30 { pt3dadd( -114.847, 139.594, 25.6548, 0.55 ) }
    dend_30 { pt3dadd( -115.049, 141.357, 25.5399, 0.28 ) }
    dend_30 { pt3dadd( -115.361, 143.393, 24.9773, 0.55 ) }
    dend_30 { pt3dadd( -115.827, 145.856, 23.8971, 0.28 ) }
    dend_30 { pt3dadd( -116.037, 146.877, 23.3348, 0.83 ) }
    dend_30 { pt3dadd( -116.586, 149.377, 21.7773, 0.28 ) }
    dend_30 { pt3dadd( -117.086, 151.214, 20.345, 0.83 ) }
    dend_30 { pt3dadd( -118.01, 154.476, 17.6432, 0.28 ) }
    dend_30 { pt3dadd( -118.336, 155.519, 16.6063, 0.83 ) }
    dend_30 { pt3dadd( -118.94, 157.349, 14.5234, 0.28 ) }
    dend_30 { pt3dadd( -119.191, 158.058, 13.5616, 0.83 ) }
    dend_30 { pt3dadd( -120.655, 162.15, 7.54686, 0.28 ) }
    dend_30 { pt3dadd( -121.279, 163.698, 4.96771, 0.83 ) }
    dend_30 { pt3dadd( -122.708, 167.182, -1.20887, 0.28 ) }
    dend_30 { pt3dadd( -123.209, 168.413, -3.58586, 0.83 ) }
    dend_30 { pt3dadd( -124.145, 170.601, -8.07849, 0.28 ) }
    dend_30 { pt3dadd( -124.449, 171.273, -9.52958, 0.55 ) }
    dend_30 { pt3dadd( -125.39, 173.308, -13.6793, 0.28 ) }
    dend_30 { pt3dadd( -125.731, 173.979, -14.9897, 0.28 ) }
    dend_30 { pt3dadd( -126.62, 175.72, -17.7901, 0.55 ) }
    dend_30 { pt3dadd( -128.41, 178.339, -21.8287, 0.28 ) }
    dend_30 { pt3dadd( -129.832, 180.149, -24.5041, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -131.232, 181.761, -27.1361, 0.28 ) }
    dend_30 { pt3dadd( -131.954, 182.555, -28.4326, 0.55 ) }
    dend_30 { pt3dadd( -133.146, 183.846, -30.3132, 0.28 ) }
    dend_30 { pt3dadd( -138.807, 190.025, -38.0675, 0.28 ) }
    dend_30 { pt3dadd( -139.459, 190.766, -38.9003, 0.83 ) }
    dend_30 { pt3dadd( -143.669, 195.7, -44.0799, 0.28 ) }
    dend_30 { pt3dadd( -144.126, 196.241, -44.6755, 0.83 ) }
    dend_30 { pt3dadd( -149.117, 202.691, -50.9567, 0.28 ) }
    dend_30 { pt3dadd( -149.504, 203.366, -51.3385, 0.55 ) }
    dend_30 { pt3dadd( -150.453, 206.647, -50.7622, 0.28 ) }
    dend_30 { pt3dadd( -150.773, 207.648, -50.6773, 0.55 ) }
    dend_30 { pt3dadd( -151.291, 209.147, -50.4426, 0.28 ) }
    dend_30 { pt3dadd( -151.863, 210.442, -51.032, 0.55 ) }
    dend_30 { pt3dadd( -152.872, 212.468, -52.6317, 0.28 ) }
    dend_30 { pt3dadd( -153.353, 213.423, -53.3986, 1.11 ) }
    dend_30 { pt3dadd( -154.602, 215.595, -55.0066, 0.28 ) }
    dend_30 { pt3dadd( -155.152, 216.471, -55.729, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -43.7853, -28.0519, 27.7267, 0.55 ) }
    dend_29 { pt3dadd( -47.8542, -30.3658, 28.8605, 0.55 ) }
    dend_29 { pt3dadd( -49.6736, -31.2732, 29.3773, 0.55 ) }
    dend_29 { pt3dadd( -52.4809, -32.5445, 30.2514, 0.83 ) }
    dend_29 { pt3dadd( -55.3484, -33.8406, 31.1871, 0.55 ) }
    dend_29 { pt3dadd( -57.7158, -35.0165, 32.1396, 0.55 ) }
    dend_29 { pt3dadd( -58.8076, -35.62, 32.6386, 0.83 ) }
    dend_29 { pt3dadd( -60.3417, -36.5911, 33.5463, 0.55 ) }
    dend_29 { pt3dadd( -62.8946, -38.3093, 35.6329, 0.55 ) }
    dend_29 { pt3dadd( -64.1089, -39.2304, 36.9133, 0.55 ) }
    dend_29 { pt3dadd( -66.1864, -41.0593, 39.5462, 0.55 ) }
    dend_29 { pt3dadd( -67.0468, -41.9145, 40.8745, 0.28 ) }
    dend_29 { pt3dadd( -68.8801, -43.9448, 44.0965, 0.83 ) }
    dend_29 { pt3dadd( -70.9166, -46.2754, 48.1573, 0.55 ) }
    dend_29 { pt3dadd( -71.2719, -46.6718, 48.9126, 0.55 ) }
    dend_29 { pt3dadd( -72.4366, -47.8435, 51.2628, 0.83 ) }
    dend_29 { pt3dadd( -73.9133, -49.0943, 53.8668, 0.55 ) }
    dend_29 { pt3dadd( -75.0379, -49.9496, 55.6997, 0.83 ) }
    dend_29 { pt3dadd( -78.2431, -52.2383, 60.1421, 0.55 ) }
    dend_29 { pt3dadd( -79.7722, -53.3139, 61.8556, 0.83 ) }
    dend_29 { pt3dadd( -81.7583, -54.6031, 63.7554, 0.28 ) }
    dend_29 { pt3dadd( -83.39, -55.5548, 65.0096, 0.55 ) }
    dend_29 { pt3dadd( -85.2652, -56.5769, 66.0722, 0.55 ) }
    dend_29 { pt3dadd( -88.0995, -58.0596, 67.2822, 0.28 ) }
    dend_29 { pt3dadd( -89.3676, -58.7178, 67.6184, 0.28 ) }
    dend_29 { pt3dadd( -90.4742, -59.2633, 67.8727, 0.55 ) }
    dend_29 { pt3dadd( -93.4413, -60.8681, 68.61, 0.28 ) }
    dend_29 { pt3dadd( -94.5238, -61.5401, 69.0275, 0.55 ) }
    dend_29 { pt3dadd( -95.0457, -61.9023, 69.2579, 0.28 ) }
    dend_29 { pt3dadd( -96.4034, -62.9207, 70.0271, 0.28 ) }
    dend_29 { pt3dadd( -97.3049, -63.6037, 70.5481, 0.55 ) }
    dend_29 { pt3dadd( -99.0806, -65.0647, 71.612, 0.28 ) }
    dend_29 { pt3dadd( -100.851, -66.7194, 72.683, 0.55 ) }
    dend_29 { pt3dadd( -103.027, -68.7358, 74.0615, 0.28 ) }
    dend_29 { pt3dadd( -104.651, -70.2969, 75.1425, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -95.3613, 9.51701, 45.1132, 0.28 ) }
    dend_25 { pt3dadd( -97.4665, 11.4123, 45.1756, 0.28 ) }
    dend_25 { pt3dadd( -98.0295, 11.9922, 45.1916, 0.55 ) }
    dend_25 { pt3dadd( -99.2381, 13.2729, 45.2435, 0.28 ) }
    dend_25 { pt3dadd( -99.5038, 13.5834, 45.2619, 0.55 ) }
    dend_25 { pt3dadd( -101.974, 16.6987, 45.496, 0.28 ) }
    dend_25 { pt3dadd( -103.882, 19.1717, 45.7785, 0.28 ) }
    dend_25 { pt3dadd( -104.983, 20.79, 46.0086, 0.28 ) }
    dend_25 { pt3dadd( -105.753, 22.0257, 46.2128, 0.55 ) }
    dend_25 { pt3dadd( -107.457, 24.9709, 46.6268, 0.28 ) }
    dend_25 { pt3dadd( -108.082, 26.0807, 46.8074, 0.55 ) }
    dend_25 { pt3dadd( -109.032, 27.8577, 47.1724, 0.28 ) }
    dend_25 { pt3dadd( -109.516, 28.8683, 47.3949, 0.55 ) }
    dend_25 { pt3dadd( -110.265, 30.5394, 47.7834, 0.28 ) }
    dend_25 { pt3dadd( -111.181, 32.8505, 48.2769, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -95.3613, 9.51701, 45.1132, 0.28 ) }
    dend_24 { pt3dadd( -93.3962, 8.95767, 43.8966, 0.28 ) }
    dend_24 { pt3dadd( -92.853, 8.81986, 43.4964, 0.83 ) }
    dend_24 { pt3dadd( -90.2276, 8.32251, 41.7495, 0.28 ) }
    dend_24 { pt3dadd( -89.9529, 8.27441, 41.5766, 0.83 ) }
    dend_24 { pt3dadd( -87.5156, 7.89014, 40.2584, 0.28 ) }
    dend_24 { pt3dadd( -86.791, 7.77581, 39.9049, 0.83 ) }
    dend_24 { pt3dadd( -82.0211, 7.13568, 37.7831, 0.28 ) }
    dend_24 { pt3dadd( -79.3194, 6.79317, 36.7019, 0.28 ) }
    dend_24 { pt3dadd( -78.7225, 6.72628, 36.5028, 1.11 ) }
    dend_24 { pt3dadd( -75.5895, 6.37928, 35.6314, 0.28 ) }
    dend_24 { pt3dadd( -74.668, 6.26586, 35.3774, 0.55 ) }
    dend_24 { pt3dadd( -71.2965, 5.80955, 34.3959, 0.28 ) }
    dend_24 { pt3dadd( -69.7282, 5.561, 33.955, 0.28 ) }
    dend_24 { pt3dadd( -68.7546, 5.38259, 33.6265, 0.55 ) }
    dend_24 { pt3dadd( -67.294, 5.11171, 33.0786, 0.28 ) }
    dend_24 { pt3dadd( -63.0284, 4.17868, 31.1309, 0.28 ) }
    dend_24 { pt3dadd( -60.7996, 3.65911, 30.0624, 0.28 ) }
    dend_24 { pt3dadd( -60.3188, 3.50837, 29.8221, 0.83 ) }
    dend_24 { pt3dadd( -59.2801, 3.12179, 29.2922, 0.28 ) }
    dend_24 { pt3dadd( -59.2801, 3.12179, 29.2922, 0.83 ) }
    dend_24 { pt3dadd( -57.0198, 2.16599, 28.2404, 0.28 ) }
    dend_24 { pt3dadd( -56.4346, 1.86281, 28.0612, 0.83 ) }
    dend_24 { pt3dadd( -54.7314, 0.72916, 27.358, 0.28 ) }
    dend_24 { pt3dadd( -53.7074, -0.00292569, 26.8925, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -26.1931, 40.9568, -17.3624, 0.28 ) }
    dend_18 { pt3dadd( -27.6989, 38.8275, -18.5395, 0.28 ) }
    dend_18 { pt3dadd( -28.8683, 37.161, -19.6246, 0.83 ) }
    dend_18 { pt3dadd( -30.1395, 35.3383, -20.7836, 0.55 ) }
    dend_18 { pt3dadd( -31.4481, 33.4641, -22.2144, 1.11 ) }
    dend_18 { pt3dadd( -34.9859, 28.1085, -26.7026, 0.28 ) }
    dend_18 { pt3dadd( -35.2326, 27.7406, -27.0625, 0.83 ) }
    dend_18 { pt3dadd( -36.3346, 26.078, -28.9932, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -37.0075, 25.0369, -30.3114, 0.83 ) }
    dend_18 { pt3dadd( -39.466, 21.2354, -35.4558, 0.28 ) }
    dend_18 { pt3dadd( -40.104, 20.2729, -36.7564, 0.83 ) }
    dend_18 { pt3dadd( -42.4588, 17.0641, -41.7869, 0.28 ) }
    dend_18 { pt3dadd( -42.8813, 16.5005, -42.746, 0.55 ) }
    dend_18 { pt3dadd( -43.6073, 15.5505, -44.4474, 0.55 ) }
    dend_18 { pt3dadd( -44.3534, 14.5818, -46.2755, 0.55 ) }
    dend_18 { pt3dadd( -45.3355, 13.3531, -48.6027, 1.11 ) }
    dend_18 { pt3dadd( -49.3046, 8.46254, -58.8611, 0.55 ) }
    dend_18 { pt3dadd( -49.8457, 7.75762, -60.4485, 0.28 ) }
    dend_18 { pt3dadd( -50.0048, 7.56986, -60.9325, 0.55 ) }
    dend_18 { pt3dadd( -51.0739, 6.4403, -64.1637, 0.28 ) }
    dend_18 { pt3dadd( -51.5057, 5.95946, -65.6082, 0.83 ) }
    dend_18 { pt3dadd( -53.9625, 3.16022, -74.3267, 0.28 ) }
    dend_18 { pt3dadd( -54.0749, 3.03554, -74.6991, 0.55 ) }
    dend_18 { pt3dadd( -56.6045, 0.26973, -82.9962, 0.28 ) }
    dend_18 { pt3dadd( -57.0462, -0.256853, -84.4952, 0.55 ) }
    dend_18 { pt3dadd( -58.3424, -1.8502, -88.6573, 0.28 ) }
    dend_18 { pt3dadd( -58.5684, -2.14751, -89.3735, 0.83 ) }
    dend_18 { pt3dadd( -59.6666, -3.66821, -92.6211, 0.28 ) }
    dend_18 { pt3dadd( -60.2142, -4.43903, -94.2279, 0.83 ) }
    dend_18 { pt3dadd( -62.8394, -8.49317, -101.93, 0.28 ) }
    dend_18 { pt3dadd( -63.5081, -9.48072, -103.674, 0.83 ) }
    dend_18 { pt3dadd( -66.2155, -13.291, -109.945, 0.55 ) }
    dend_18 { pt3dadd( -66.5588, -13.7889, -110.722, 0.83 ) }
    dend_18 { pt3dadd( -68.4361, -16.6218, -114.873, 0.28 ) }
    dend_18 { pt3dadd( -69.0228, -17.5291, -116.084, 0.55 ) }
    dend_18 { pt3dadd( -71.4146, -21.3605, -120.646, 0.28 ) }
    dend_18 { pt3dadd( -72.2625, -22.7698, -122.282, 0.83 ) }
    dend_18 { pt3dadd( -76.4274, -29.8228, -129.728, 0.28 ) }
    dend_18 { pt3dadd( -76.6362, -30.1824, -130.103, 0.83 ) }
    dend_18 { pt3dadd( -77.8955, -32.464, -132.374, 0.28 ) }
    dend_18 { pt3dadd( -78.2145, -33.035, -132.98, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -26.1931, 40.9568, -17.3624, 0.55 ) }
    dend_17 { pt3dadd( -27.188, 42.8324, -17.6015, 0.55 ) }
    dend_17 { pt3dadd( -27.9244, 44.2581, -17.8195, 0.55 ) }
    dend_17 { pt3dadd( -28.6711, 45.7728, -18.1431, 0.28 ) }
    dend_17 { pt3dadd( -29.1571, 46.7783, -18.3828, 1.38 ) }
    dend_17 { pt3dadd( -29.8708, 48.2506, -18.7978, 0.55 ) }
    dend_17 { pt3dadd( -30.672, 49.8955, -19.2876, 0.55 ) }
    dend_17 { pt3dadd( -31.0267, 50.5923, -19.4877, 0.83 ) }
    dend_17 { pt3dadd( -31.6488, 51.8404, -19.8885, 0.28 ) }
    dend_17 { pt3dadd( -31.9758, 52.56, -20.1264, 0.55 ) }
    dend_17 { pt3dadd( -32.5195, 53.8281, -20.5064, 0.28 ) }
    dend_17 { pt3dadd( -32.9117, 54.7415, -20.7187, 0.83 ) }
    dend_17 { pt3dadd( -33.6943, 56.601, -20.9619, 0.28 ) }
    dend_17 { pt3dadd( -34.0817, 57.6057, -21.0921, 0.55 ) }
    dend_17 { pt3dadd( -34.4983, 58.8138, -21.2255, 0.28 ) }
    dend_17 { pt3dadd( -34.7869, 59.8511, -21.3818, 0.83 ) }
    dend_17 { pt3dadd( -35.2004, 61.8135, -21.7023, 0.28 ) }
    dend_17 { pt3dadd( -35.4875, 63.5719, -22.0839, 0.83 ) }
    dend_17 { pt3dadd( -35.8158, 66.5632, -22.8364, 0.28 ) }
    dend_17 { pt3dadd( -35.8768, 67.61, -23.1224, 0.83 ) }
    dend_17 { pt3dadd( -35.9471, 70.5068, -24.1192, 0.28 ) }
    dend_17 { pt3dadd( -35.9306, 71.8604, -24.6531, 0.83 ) }
    dend_17 { pt3dadd( -35.8645, 73.5359, -25.3708, 0.28 ) }
    dend_17 { pt3dadd( -35.8048, 74.8626, -25.9834, 0.55 ) }
    dend_17 { pt3dadd( -35.7459, 76.1879, -26.5894, 0.83 ) }
    dend_17 { pt3dadd( -35.7092, 79.1036, -27.9364, 0.28 ) }
    dend_17 { pt3dadd( -35.7505, 80.2319, -28.4377, 0.83 ) }
    dend_17 { pt3dadd( -35.8693, 81.7461, -29.1036, 0.83 ) }
    dend_17 { pt3dadd( -36.0636, 83.2424, -29.7285, 0.28 ) }
    dend_17 { pt3dadd( -36.3279, 84.3785, -30.2479, 0.83 ) }
    dend_17 { pt3dadd( -36.6917, 85.4984, -30.7381, 0.28 ) }
    dend_17 { pt3dadd( -37.0066, 86.2834, -31.0353, 0.55 ) }
    dend_17 { pt3dadd( -37.2875, 86.8456, -31.261, 0.28 ) }
    dend_17 { pt3dadd( -37.9802, 87.9783, -31.6754, 0.55 ) }
    dend_17 { pt3dadd( -39.4049, 90.0407, -32.2543, 0.28 ) }
    dend_17 { pt3dadd( -39.9905, 90.7592, -32.45, 0.55 ) }
    dend_17 { pt3dadd( -40.6836, 91.5202, -32.6378, 0.28 ) }
    dend_17 { pt3dadd( -41.482, 92.3244, -32.8146, 0.83 ) }
    dend_17 { pt3dadd( -42.5684, 93.3365, -32.9792, 0.28 ) }
    dend_17 { pt3dadd( -43.6606, 94.309, -33.0679, 0.83 ) }
    dend_17 { pt3dadd( -45.3092, 95.74, -33.076, 0.28 ) }
    dend_17 { pt3dadd( -45.9554, 96.3134, -33.1036, 0.83 ) }
    dend_17 { pt3dadd( -46.6964, 96.9993, -33.146, 0.28 ) }
    dend_17 { pt3dadd( -47.6495, 97.9636, -33.2219, 0.28 ) }
    dend_17 { pt3dadd( -48.0598, 98.4449, -33.3047, 0.55 ) }
    dend_17 { pt3dadd( -48.949, 99.7136, -33.6081, 0.28 ) }
    dend_17 { pt3dadd( -49.5958, 100.874, -34.0547, 0.55 ) }
    dend_17 { pt3dadd( -49.9271, 101.559, -34.3914, 0.55 ) }
    dend_17 { pt3dadd( -50.3789, 102.598, -34.9637, 0.83 ) }
    dend_17 { pt3dadd( -51.1957, 104.52, -36.2166, 0.28 ) }
    dend_17 { pt3dadd( -51.7773, 105.929, -37.225, 0.83 ) }
    dend_17 { pt3dadd( -52.5753, 107.902, -38.8384, 0.28 ) }
    dend_17 { pt3dadd( -52.8786, 108.624, -39.4828, 0.28 ) }
    dend_17 { pt3dadd( -53.2789, 109.636, -40.4055, 0.83 ) }
    dend_17 { pt3dadd( -54.0047, 111.554, -42.2147, 0.28 ) }
    dend_17 { pt3dadd( -54.2769, 112.262, -42.8602, 0.83 ) }
    dend_17 { pt3dadd( -55.2411, 114.872, -45.129, 0.28 ) }
    dend_17 { pt3dadd( -55.7139, 116.14, -46.2108, 1.11 ) }
    dend_17 { pt3dadd( -56.6182, 118.64, -48.3687, 0.28 ) }
    dend_17 { pt3dadd( -56.9634, 119.701, -49.2868, 0.55 ) }
    dend_17 { pt3dadd( -57.2551, 120.694, -50.0673, 0.28 ) }
    dend_17 { pt3dadd( -57.49, 121.503, -50.6529, 0.55 ) }
    dend_17 { pt3dadd( -58.0479, 123.639, -52.0451, 0.28 ) }
    dend_17 { pt3dadd( -58.2751, 124.495, -52.6647, 0.55 ) }
    dend_17 { pt3dadd( -58.6387, 125.803, -53.6559, 0.28 ) }
    dend_17 { pt3dadd( -58.8536, 126.661, -54.3647, 0.55 ) }
    dend_17 { pt3dadd( -59.0742, 127.702, -55.2683, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -59.3625, 129.248, -56.6308, 0.55 ) }
    dend_17 { pt3dadd( -59.8451, 132.101, -58.9889, 0.28 ) }
    dend_17 { pt3dadd( -60.0272, 133.283, -60.0045, 0.55 ) }
    dend_17 { pt3dadd( -60.2611, 134.975, -61.461, 0.28 ) }
    dend_17 { pt3dadd( -60.3553, 135.923, -62.309, 0.83 ) }
    dend_17 { pt3dadd( -60.4294, 137.217, -63.4331, 0.28 ) }
    dend_17 { pt3dadd( -60.4538, 138.15, -64.2584, 0.83 ) }
    dend_17 { pt3dadd( -60.4615, 139.763, -65.6589, 0.28 ) }
    dend_17 { pt3dadd( -60.4643, 140.493, -66.3581, 0.55 ) }
    dend_17 { pt3dadd( -60.4458, 141.523, -67.3802, 0.28 ) }
    dend_17 { pt3dadd( -60.4002, 142.397, -68.2906, 0.55 ) }
    dend_17 { pt3dadd( -60.2969, 144.924, -70.8213, 0.28 ) }
    dend_17 { pt3dadd( -60.284, 145.795, -71.656, 0.28 ) }
    dend_17 { pt3dadd( -60.3989, 147.691, -73.2606, 0.55 ) }
    dend_17 { pt3dadd( -60.5567, 149.257, -74.4499, 0.28 ) }
    dend_17 { pt3dadd( -60.693, 150.093, -74.9992, 0.55 ) }
    dend_17 { pt3dadd( -61.229, 152.277, -76.1941, 0.28 ) }
    dend_17 { pt3dadd( -61.7064, 153.487, -76.6696, 0.83 ) }
    dend_17 { pt3dadd( -62.6201, 155.181, -77.1955, 0.28 ) }
    dend_17 { pt3dadd( -62.9996, 155.678, -77.3152, 0.55 ) }
    dend_17 { pt3dadd( -63.7036, 156.389, -77.4815, 0.28 ) }
    dend_17 { pt3dadd( -64.454, 157.028, -77.6712, 0.55 ) }
    dend_17 { pt3dadd( -66.1994, 158.265, -78.0998, 0.28 ) }
    dend_17 { pt3dadd( -66.6069, 158.529, -78.1825, 0.55 ) }
    dend_17 { pt3dadd( -69.1797, 160.184, -78.7671, 0.28 ) }
    dend_17 { pt3dadd( -69.8188, 160.651, -78.9269, 0.55 ) }
    dend_17 { pt3dadd( -70.6791, 161.389, -79.1358, 0.28 ) }
    dend_17 { pt3dadd( -71.529, 162.179, -79.3509, 0.55 ) }
    dend_17 { pt3dadd( -72.8585, 163.601, -79.6887, 0.28 ) }
    dend_17 { pt3dadd( -73.6522, 164.529, -79.8685, 0.55 ) }
    dend_17 { pt3dadd( -75.2095, 166.736, -79.9709, 0.28 ) }
    dend_17 { pt3dadd( -75.7671, 167.645, -80.0005, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.14054, 77.1408, -24.7064, 0.55 ) }
    dend_15 { pt3dadd( -4.63484, 78.4419, -26.4092, 0.55 ) }
    dend_15 { pt3dadd( -3.10636, 80.4269, -30.2443, 0.55 ) }
    dend_15 { pt3dadd( -2.6687, 81.2397, -32.1355, 0.83 ) }
    dend_15 { pt3dadd( -2.36499, 81.8998, -33.7802, 0.83 ) }
    dend_15 { pt3dadd( -1.62914, 83.7613, -38.5547, 0.28 ) }
    dend_15 { pt3dadd( -1.35701, 84.4661, -40.3194, 0.83 ) }
    dend_15 { pt3dadd( -1.11089, 86.9966, -47.7065, 0.55 ) }
    dend_15 { pt3dadd( -1.2499, 87.542, -49.5215, 0.28 ) }
    dend_15 { pt3dadd( -1.3829, 87.7887, -50.4233, 0.28 ) }
    dend_15 { pt3dadd( -1.71666, 88.1906, -51.9759, 0.55 ) }
    dend_15 { pt3dadd( -2.18518, 88.6811, -53.7805, 0.55 ) }
    dend_15 { pt3dadd( -3.82557, 90.4687, -59.6953, 0.28 ) }
    dend_15 { pt3dadd( -4.51551, 91.3598, -62.2671, 0.83 ) }
    dend_15 { pt3dadd( -5.90481, 93.3549, -67.6685, 0.83 ) }
    dend_15 { pt3dadd( -7.04438, 95.1397, -72.2983, 0.83 ) }
    dend_15 { pt3dadd( -8.4028, 97.4419, -78.1363, 0.28 ) }
    dend_15 { pt3dadd( -8.8247, 98.2549, -80.1184, 0.28 ) }
    dend_15 { pt3dadd( -8.97355, 98.7203, -81.1131, 0.55 ) }
    dend_15 { pt3dadd( -9.25807, 100.836, -85.2642, 0.28 ) }
    dend_15 { pt3dadd( -9.24414, 101.16, -85.8444, 0.55 ) }
    dend_15 { pt3dadd( -8.822, 103.255, -89.6045, 0.28 ) }
    dend_15 { pt3dadd( -8.67993, 103.918, -91.1673, 0.55 ) }
    dend_15 { pt3dadd( -8.55539, 104.473, -92.7722, 0.28 ) }
    dend_15 { pt3dadd( -8.50633, 104.673, -93.4126, 0.55 ) }
    dend_15 { pt3dadd( -8.08143, 105.888, -97.9105, 0.28 ) }
    dend_15 { pt3dadd( -7.9128, 106.23, -99.256, 0.55 ) }
    dend_15 { pt3dadd( -6.83031, 107.812, -106.399, 0.28 ) }
    dend_15 { pt3dadd( -6.49158, 108.258, -108.42, 0.28 ) }
    dend_15 { pt3dadd( -6.09417, 108.731, -110.456, 0.55 ) }
    dend_15 { pt3dadd( -5.26001, 109.73, -114.81, 0.28 ) }
    dend_15 { pt3dadd( -4.96279, 110.048, -116.141, 0.55 ) }
    dend_15 { pt3dadd( -3.69517, 111.323, -121.5, 0.28 ) }
    dend_15 { pt3dadd( -2.99869, 111.947, -124.106, 0.28 ) }
    dend_15 { pt3dadd( -2.39624, 112.485, -126.44, 0.83 ) }
    dend_15 { pt3dadd( -0.132928, 114.275, -134.47, 0.28 ) }
    dend_15 { pt3dadd( 0.501887, 114.723, -136.515, 0.28 ) }
    dend_15 { pt3dadd( 1.45178, 115.327, -139.265, 0.55 ) }
    dend_15 { pt3dadd( 2.35193, 115.852, -141.512, 0.28 ) }
    dend_15 { pt3dadd( 2.99526, 116.161, -143.123, 0.55 ) }
    dend_15 { pt3dadd( 3.66284, 116.448, -144.61, 0.28 ) }
    dend_15 { pt3dadd( 4.17978, 116.66, -145.302, 0.55 ) }
    dend_15 { pt3dadd( 5.39443, 117.22, -146.952, 0.28 ) }
    dend_15 { pt3dadd( 7.24935, 118.284, -149.02, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -6.14054, 77.1408, -24.7064, 0.55 ) }
    dend_14 { pt3dadd( -6.00557, 80.3417, -24.1302, 0.55 ) }
    dend_14 { pt3dadd( -5.72752, 82.4752, -23.7126, 0.55 ) }
    dend_14 { pt3dadd( -5.60311, 83.3817, -23.531, 0.55 ) }
    dend_14 { pt3dadd( -5.39713, 84.8269, -23.2564, 0.55 ) }
    dend_14 { pt3dadd( -5.2484, 86.0386, -23.0715, 0.55 ) }
    dend_14 { pt3dadd( -4.87894, 88.9485, -22.6396, 0.28 ) }
    dend_14 { pt3dadd( -4.73141, 89.9732, -22.4861, 0.55 ) }
    dend_14 { pt3dadd( -4.42486, 91.4131, -22.2116, 0.55 ) }
    dend_14 { pt3dadd( -4.27046, 92.1179, -22.026, 0.83 ) }
    dend_14 { pt3dadd( -3.95514, 93.7348, -21.5037, 0.28 ) }
    dend_14 { pt3dadd( -3.71368, 95.0967, -21.0591, 0.83 ) }
    dend_14 { pt3dadd( -3.32556, 97.5854, -20.215, 0.28 ) }
    dend_14 { pt3dadd( -3.26236, 97.8756, -20.092, 0.83 ) }
    dend_14 { pt3dadd( -2.60381, 100.097, -19.0363, 0.55 ) }
    dend_14 { pt3dadd( -2.24585, 101.111, -18.5086, 0.55 ) }
    dend_14 { pt3dadd( -1.66743, 102.601, -17.7152, 0.83 ) }
    dend_14 { pt3dadd( -0.541556, 105.311, -16.2588, 0.55 ) }
    dend_14 { pt3dadd( 0.373299, 107.387, -15.1487, 0.83 ) }
    dend_14 { pt3dadd( 0.868542, 108.437, -14.5805, 0.28 ) }
    dend_14 { pt3dadd( 1.30683, 109.352, -14.1345, 0.83 ) }
    dend_14 { pt3dadd( 1.94735, 110.711, -13.4775, 0.83 ) }
    dend_14 { pt3dadd( 2.97162, 113.1, -12.3548, 0.83 ) }
    dend_14 { pt3dadd( 3.64045, 115.076, -11.6376, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( 3.82328, 115.751, -11.4159, 0.83 ) }
    dend_14 { pt3dadd( 4.35525, 117.8, -10.698, 0.83 ) }
    dend_14 { pt3dadd( 4.81192, 119.601, -10.0406, 0.28 ) }
    dend_14 { pt3dadd( 5.06163, 120.544, -9.67083, 0.55 ) }
    dend_14 { pt3dadd( 5.50074, 122.41, -8.98401, 0.28 ) }
    dend_14 { pt3dadd( 5.9057, 124.359, -8.17671, 0.55 ) }
    dend_14 { pt3dadd( 6.43161, 126.932, -6.99218, 0.28 ) }
    dend_14 { pt3dadd( 6.5505, 127.516, -6.68999, 0.83 ) }
    dend_14 { pt3dadd( 6.77938, 128.696, -6.09052, 0.28 ) }
    dend_14 { pt3dadd( 7.07474, 130.117, -5.32867, 0.55 ) }
    dend_14 { pt3dadd( 7.62369, 132.202, -4.09757, 0.28 ) }
    dend_14 { pt3dadd( 7.73093, 132.599, -3.88077, 0.55 ) }
    dend_14 { pt3dadd( 7.98932, 133.459, -3.3933, 0.28 ) }
    dend_14 { pt3dadd( 8.33651, 134.363, -2.82736, 0.83 ) }
    dend_14 { pt3dadd( 8.89427, 135.544, -2.07564, 0.28 ) }
    dend_14 { pt3dadd( 9.7095, 137.006, -1.11819, 0.55 ) }
    dend_14 { pt3dadd( 10.3444, 138.008, -0.384537, 0.28 ) }
    dend_14 { pt3dadd( 10.7228, 138.627, 0.0479347, 0.83 ) }
    dend_14 { pt3dadd( 11.5138, 139.93, 0.888449, 0.83 ) }
    dend_14 { pt3dadd( 12.2746, 141.234, 1.65125, 0.55 ) }
    dend_14 { pt3dadd( 12.673, 141.936, 1.9971, 0.83 ) }
    dend_14 { pt3dadd( 14.7502, 145.839, 3.6366, 0.55 ) }
    dend_14 { pt3dadd( 15.4665, 147.297, 4.13219, 0.83 ) }
    dend_14 { pt3dadd( 17.5925, 152.032, 5.27861, 0.28 ) }
    dend_14 { pt3dadd( 17.9305, 153.02, 5.34548, 0.55 ) }
    dend_14 { pt3dadd( 18.4419, 154.939, 5.15935, 0.28 ) }
    dend_14 { pt3dadd( 18.6975, 156.071, 4.92632, 0.83 ) }
    dend_14 { pt3dadd( 19.0167, 158.34, 4.05694, 0.28 ) }
    dend_14 { pt3dadd( 19.107, 159.691, 3.40592, 0.55 ) }
    dend_14 { pt3dadd( 18.8232, 163.354, 0.837165, 0.28 ) }
    dend_14 { pt3dadd( 18.6259, 164.959, -0.341181, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -22.1283, 287.79, 19.0356, 0.55 ) }
    dend_10 { pt3dadd( -22.2566, 289.959, 18.9971, 0.55 ) }
    dend_10 { pt3dadd( -22.5152, 292.533, 19.0024, 0.55 ) }
    dend_10 { pt3dadd( -22.7836, 295.005, 19.0219, 0.83 ) }
    dend_10 { pt3dadd( -22.9726, 296.712, 19.0558, 0.55 ) }
    dend_10 { pt3dadd( -23.1912, 298.834, 19.1214, 1.11 ) }
    dend_10 { pt3dadd( -23.4713, 302.093, 19.2233, 0.55 ) }
    dend_10 { pt3dadd( -23.6243, 304.407, 19.2994, 1.11 ) }
    dend_10 { pt3dadd( -23.7172, 306.161, 19.2962, 0.83 ) }
    dend_10 { pt3dadd( -23.7193, 307.824, 19.2072, 0.55 ) }
    dend_10 { pt3dadd( -23.5499, 310.022, 18.9502, 0.55 ) }
    dend_10 { pt3dadd( -23.2373, 311.937, 18.5683, 0.83 ) }
    dend_10 { pt3dadd( -22.7097, 313.96, 17.8967, 0.55 ) }
    dend_10 { pt3dadd( -22.0365, 315.973, 16.9765, 0.83 ) }
    dend_10 { pt3dadd( -21.4215, 317.51, 16.1237, 0.83 ) }
    dend_10 { pt3dadd( -20.8348, 318.78, 15.2962, 0.83 ) }
    dend_10 { pt3dadd( -20.3084, 319.799, 14.5769, 1.11 ) }
    dend_10 { pt3dadd( -19.2062, 321.934, 12.98, 0.83 ) }
    dend_10 { pt3dadd( -18.7385, 322.858, 12.2944, 0.55 ) }
    dend_10 { pt3dadd( -17.9647, 324.346, 11.2434, 0.83 ) }
    dend_10 { pt3dadd( -16.8607, 326.639, 9.71674, 0.55 ) }
    dend_10 { pt3dadd( -16.1521, 328.071, 8.76114, 1.11 ) }
    dend_10 { pt3dadd( -15.0594, 330.247, 7.35963, 0.55 ) }
    dend_10 { pt3dadd( -14.6647, 331.019, 6.90682, 0.55 ) }
    dend_10 { pt3dadd( -14.1289, 332.102, 6.29933, 0.55 ) }
    dend_10 { pt3dadd( -12.927, 334.705, 5.01454, 0.55 ) }
    dend_10 { pt3dadd( -12.4528, 335.788, 4.57707, 0.28 ) }
    dend_10 { pt3dadd( -12.1589, 336.527, 4.34044, 0.55 ) }
    dend_10 { pt3dadd( -11.6217, 337.949, 4.00559, 0.28 ) }
    dend_10 { pt3dadd( -11.208, 339.201, 3.74279, 0.83 ) }
    dend_10 { pt3dadd( -10.5227, 341.558, 3.30537, 0.55 ) }
    dend_10 { pt3dadd( -10.2972, 342.347, 3.18137, 0.83 ) }
    dend_10 { pt3dadd( -9.85845, 344.042, 2.91771, 0.55 ) }
    dend_10 { pt3dadd( -9.59025, 345.139, 2.72994, 0.83 ) }
    dend_10 { pt3dadd( -8.81277, 348.474, 2.12137, 0.28 ) }
    dend_10 { pt3dadd( -8.31838, 350.681, 1.67675, 0.83 ) }
    dend_10 { pt3dadd( -7.8213, 352.961, 1.1846, 0.28 ) }
    dend_10 { pt3dadd( -7.40283, 354.97, 0.741376, 0.55 ) }
    dend_10 { pt3dadd( -6.99295, 357.089, 0.277576, 0.55 ) }
    dend_10 { pt3dadd( -6.7135, 359.004, -0.14683, 0.55 ) }
    dend_10 { pt3dadd( -6.62052, 360.062, -0.375973, 0.28 ) }
    dend_10 { pt3dadd( -6.57736, 361.081, -0.585583, 0.55 ) }
    dend_10 { pt3dadd( -6.58924, 363.044, -0.933846, 0.28 ) }
    dend_10 { pt3dadd( -6.66884, 364.197, -1.1601, 0.55 ) }
    dend_10 { pt3dadd( -6.93408, 366.287, -1.6164, 0.28 ) }
    dend_10 { pt3dadd( -7.15463, 367.706, -1.93832, 0.28 ) }
    dend_10 { pt3dadd( -7.49019, 369.688, -2.39796, 0.83 ) }
    dend_10 { pt3dadd( -7.82431, 371.461, -2.82282, 0.83 ) }
    dend_10 { pt3dadd( -8.46375, 374.847, -3.63215, 0.55 ) }
    dend_10 { pt3dadd( -8.77499, 376.751, -4.0723, 0.55 ) }
    dend_10 { pt3dadd( -8.90579, 377.991, -4.3367, 0.55 ) }
    dend_10 { pt3dadd( -8.95271, 378.7, -4.51452, 0.28 ) }
    dend_10 { pt3dadd( -8.98208, 379.702, -4.78174, 0.55 ) }
    dend_10 { pt3dadd( -8.95319, 380.559, -5.00023, 0.28 ) }
    dend_10 { pt3dadd( -8.93121, 381.362, -5.21055, 1.11 ) }
    dend_10 { pt3dadd( -9.06471, 383.773, -5.9809, 0.55 ) }
    dend_10 { pt3dadd( -9.2975, 385.52, -6.55103, 0.55 ) }
    dend_10 { pt3dadd( -9.6158, 387.044, -7.08702, 0.28 ) }
    dend_10 { pt3dadd( -9.87065, 387.901, -7.4262, 0.83 ) }
    dend_10 { pt3dadd( -10.7509, 390.356, -8.52891, 0.55 ) }
    dend_10 { pt3dadd( -11.3657, 391.943, -9.29152, 0.83 ) }
    dend_10 { pt3dadd( -12.1043, 393.688, -10.2013, 0.83 ) }
    dend_10 { pt3dadd( -12.8457, 395.458, -11.2181, 0.55 ) }
    dend_10 { pt3dadd( -13.4159, 396.856, -12.1021, 0.28 ) }
    dend_10 { pt3dadd( -13.9394, 398.223, -12.9963, 0.55 ) }
    dend_10 { pt3dadd( -14.3954, 399.482, -13.824, 0.55 ) }
    dend_10 { pt3dadd( -15.0016, 401.134, -14.9656, 1.11 ) }
    dend_10 { pt3dadd( -15.767, 403.313, -16.4453, 0.55 ) }
    dend_10 { pt3dadd( -16.0776, 404.259, -17.0436, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( -16.4393, 405.278, -17.6908, 0.55 ) }
    dend_10 { pt3dadd( -17.4085, 407.675, -19.1874, 0.55 ) }
    dend_10 { pt3dadd( -17.9158, 408.883, -19.962, 0.83 ) }
    dend_10 { pt3dadd( -18.9461, 411.445, -21.4893, 0.28 ) }
    dend_10 { pt3dadd( -19.2507, 412.213, -21.9167, 0.55 ) }
    dend_10 { pt3dadd( -20.0619, 414.408, -23.0791, 0.28 ) }
    dend_10 { pt3dadd( -20.4196, 415.483, -23.6275, 0.55 ) }
    dend_10 { pt3dadd( -20.8875, 417.179, -24.4172, 0.28 ) }
    dend_10 { pt3dadd( -21.34, 418.875, -25.1053, 0.55 ) }
    dend_10 { pt3dadd( -21.5545, 419.756, -25.4211, 0.28 ) }
    dend_10 { pt3dadd( -21.86, 421.207, -25.8788, 0.55 ) }
    dend_10 { pt3dadd( -22.2055, 423.635, -26.4931, 0.55 ) }
    dend_10 { pt3dadd( -22.375, 424.891, -26.834, 0.28 ) }
    dend_10 { pt3dadd( -22.5838, 425.992, -27.1199, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -22.1283, 287.79, 19.0356, 0.55 ) }
    dend_7 { pt3dadd( -23.6339, 288.908, 19.2448, 0.55 ) }
    dend_7 { pt3dadd( -25.3771, 290.312, 19.5727, 1.11 ) }
    dend_7 { pt3dadd( -27.2629, 291.766, 20.024, 0.55 ) }
    dend_7 { pt3dadd( -27.893, 292.25, 20.1433, 0.83 ) }
    dend_7 { pt3dadd( -29.4067, 293.431, 20.4043, 0.55 ) }
    dend_7 { pt3dadd( -30.6566, 294.365, 20.6265, 0.55 ) }
    dend_7 { pt3dadd( -31.6291, 295.078, 20.7982, 0.83 ) }
    dend_7 { pt3dadd( -34.5076, 297.128, 21.3119, 0.55 ) }
    dend_7 { pt3dadd( -36.6158, 298.614, 21.7683, 0.55 ) }
    dend_7 { pt3dadd( -37.368, 299.134, 21.9098, 0.83 ) }
    dend_7 { pt3dadd( -39.4329, 300.523, 22.2782, 0.55 ) }
    dend_7 { pt3dadd( -39.7688, 300.744, 22.3321, 0.83 ) }
    dend_7 { pt3dadd( -40.8596, 301.497, 22.5425, 0.28 ) }
    dend_7 { pt3dadd( -41.0276, 301.63, 22.5943, 0.55 ) }
    dend_7 { pt3dadd( -41.9788, 302.435, 23.0596, 0.28 ) }
    dend_7 { pt3dadd( -42.5555, 302.975, 23.3858, 0.55 ) }
    dend_7 { pt3dadd( -43.2183, 303.566, 23.7449, 0.55 ) }
    dend_7 { pt3dadd( -45.0371, 305.081, 24.6857, 0.55 ) }
    dend_7 { pt3dadd( -46.2916, 306.116, 25.3034, 0.55 ) }
    dend_7 { pt3dadd( -47.3036, 306.955, 25.7025, 0.83 ) }
    dend_7 { pt3dadd( -48.7171, 308.145, 26.1753, 0.83 ) }
    dend_7 { pt3dadd( -50.6197, 309.783, 26.5598, 0.55 ) }
    dend_7 { pt3dadd( -52.0556, 311.034, 26.7108, 0.55 ) }
    dend_7 { pt3dadd( -53.6484, 312.45, 26.739, 1.11 ) }
    dend_7 { pt3dadd( -55.4386, 314.218, 26.6501, 0.55 ) }
    dend_7 { pt3dadd( -55.9235, 314.738, 26.5951, 0.83 ) }
    dend_7 { pt3dadd( -57.3999, 316.545, 26.4102, 0.28 ) }
    dend_7 { pt3dadd( -58.1913, 317.538, 26.1241, 0.55 ) }
    dend_7 { pt3dadd( -58.7484, 318.211, 25.832, 0.28 ) }
    dend_7 { pt3dadd( -59.286, 318.877, 25.4964, 0.83 ) }
    dend_7 { pt3dadd( -60.3921, 320.315, 24.701, 0.28 ) }
    dend_7 { pt3dadd( -61.3757, 321.626, 23.9329, 0.83 ) }
    dend_7 { pt3dadd( -65.004, 326.762, 20.8421, 0.55 ) }
    dend_7 { pt3dadd( -65.6801, 327.757, 20.2236, 0.55 ) }
    dend_7 { pt3dadd( -66.2641, 328.666, 19.6557, 0.83 ) }
    dend_7 { pt3dadd( -66.963, 329.832, 18.964, 0.28 ) }
    dend_7 { pt3dadd( -67.2529, 330.406, 18.6707, 0.55 ) }
    dend_7 { pt3dadd( -67.6219, 331.272, 18.3362, 0.28 ) }
    dend_7 { pt3dadd( -67.9438, 332.456, 18.1859, 0.55 ) }
    dend_7 { pt3dadd( -68.4422, 334.122, 17.9655, 0.55 ) }
    dend_7 { pt3dadd( -68.7354, 335.071, 17.8479, 0.55 ) }
    dend_7 { pt3dadd( -69.0524, 336.131, 17.7338, 0.83 ) }
    dend_7 { pt3dadd( -69.541, 337.828, 17.5367, 0.28 ) }
    dend_7 { pt3dadd( -69.9377, 339.255, 17.3828, 0.83 ) }
    dend_7 { pt3dadd( -70.353, 341.021, 17.2016, 0.55 ) }
    dend_7 { pt3dadd( -70.5051, 341.727, 17.1473, 0.55 ) }
    dend_7 { pt3dadd( -70.7415, 343.073, 17.0843, 0.83 ) }
    dend_7 { pt3dadd( -70.8542, 343.78, 17.0887, 0.55 ) }
    dend_7 { pt3dadd( -71.0105, 345.11, 17.2087, 0.83 ) }
    dend_7 { pt3dadd( -71.218, 346.324, 17.3787, 0.28 ) }
    dend_7 { pt3dadd( -71.3531, 346.821, 17.4258, 0.28 ) }
    dend_7 { pt3dadd( -71.8587, 348.146, 17.4879, 0.28 ) }
    dend_7 { pt3dadd( -72.1185, 348.715, 17.4751, 0.83 ) }
    dend_7 { pt3dadd( -72.8351, 350.035, 17.3301, 0.55 ) }
    dend_7 { pt3dadd( -73.8152, 351.484, 16.9076, 0.83 ) }
    dend_7 { pt3dadd( -75.3969, 353.438, 16.1134, 0.28 ) }
    dend_7 { pt3dadd( -75.9809, 354.035, 15.7822, 0.55 ) }
    dend_7 { pt3dadd( -76.6936, 354.612, 15.3515, 0.28 ) }
    dend_7 { pt3dadd( -77.2668, 355.015, 15.0398, 0.83 ) }
    dend_7 { pt3dadd( -79.4677, 356.48, 13.899, 0.83 ) }
    dend_7 { pt3dadd( -80.1841, 356.947, 13.555, 0.83 ) }
    dend_7 { pt3dadd( -82.3887, 358.392, 12.6417, 0.83 ) }
    dend_7 { pt3dadd( -84.925, 360.053, 11.6759, 0.55 ) }
    dend_7 { pt3dadd( -86.4516, 361.029, 11.133, 0.55 ) }
    dend_7 { pt3dadd( -87.8096, 361.914, 10.6777, 0.55 ) }
    dend_7 { pt3dadd( -89.2619, 362.892, 10.2382, 0.55 ) }
    dend_7 { pt3dadd( -91.3564, 364.436, 9.58923, 0.55 ) }
    dend_7 { pt3dadd( -92.9507, 365.732, 9.17507, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 30.209, -42.5042, -78.5174, 0.55 ) }
    dend_45 { pt3dadd( 30.5673, -42.0452, -79.6433, 0.55 ) }
    dend_45 { pt3dadd( 30.9156, -41.534, -80.7908, 0.83 ) }
    dend_45 { pt3dadd( 31.615, -40.4494, -83.1311, 0.28 ) }
    dend_45 { pt3dadd( 31.972, -39.8739, -84.3002, 0.83 ) }
    dend_45 { pt3dadd( 32.8574, -38.4453, -87.0558, 0.28 ) }
    dend_45 { pt3dadd( 33.1701, -37.947, -87.9728, 0.55 ) }
    dend_45 { pt3dadd( 33.8316, -36.7862, -90.0805, 0.55 ) }
    dend_45 { pt3dadd( 34.5287, -35.484, -92.2109, 0.55 ) }
    dend_45 { pt3dadd( 35.1463, -34.3473, -93.9576, 0.28 ) }
    dend_45 { pt3dadd( 35.4068, -33.8727, -94.65, 0.28 ) }
    dend_45 { pt3dadd( 35.6773, -33.3897, -95.3247, 0.55 ) }
    dend_45 { pt3dadd( 36.2849, -32.3806, -96.7268, 0.28 ) }
    dend_45 { pt3dadd( 37.176, -30.9999, -98.4708, 0.55 ) }
    dend_45 { pt3dadd( 38.174, -29.3061, -100.623, 0.28 ) }
    dend_45 { pt3dadd( 38.4285, -28.87, -101.194, 0.55 ) }
    dend_45 { pt3dadd( 39.426, -27.0166, -103.557, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 40.0552, -25.7815, -105.117, 0.28 ) }
    dend_45 { pt3dadd( 40.7484, -24.3557, -106.958, 0.83 ) }
    dend_45 { pt3dadd( 41.7492, -22.0421, -110.001, 0.55 ) }
    dend_45 { pt3dadd( 41.9815, -21.479, -110.758, 0.55 ) }
    dend_45 { pt3dadd( 42.4154, -20.37, -112.385, 0.55 ) }
    dend_45 { pt3dadd( 42.8455, -19.3099, -114.083, 0.83 ) }
    dend_45 { pt3dadd( 43.5022, -17.8295, -116.606, 0.28 ) }
    dend_45 { pt3dadd( 43.7309, -17.4119, -117.335, 0.55 ) }
    dend_45 { pt3dadd( 44.4752, -16.3872, -118.989, 0.28 ) }
    dend_45 { pt3dadd( 44.6199, -16.2099, -119.281, 0.55 ) }
    dend_45 { pt3dadd( 45.3707, -15.485, -120.524, 0.55 ) }
    dend_45 { pt3dadd( 46.5852, -14.4528, -122.15, 0.28 ) }
    dend_45 { pt3dadd( 47.0562, -14.076, -122.684, 0.55 ) }
    dend_45 { pt3dadd( 48.227, -13.206, -123.923, 0.28 ) }
    dend_45 { pt3dadd( 48.7204, -12.8558, -124.4, 0.55 ) }
    dend_45 { pt3dadd( 49.8002, -12.1739, -125.405, 0.28 ) }
    dend_45 { pt3dadd( 50.496, -11.8334, -126.039, 0.55 ) }
    dend_45 { pt3dadd( 50.8934, -11.6817, -126.368, 0.55 ) }
    dend_45 { pt3dadd( 52.0261, -11.2306, -127.227, 0.28 ) }
    dend_45 { pt3dadd( 52.7956, -10.9012, -127.748, 0.28 ) }
    dend_45 { pt3dadd( 53.5447, -10.5142, -128.268, 0.55 ) }
    dend_45 { pt3dadd( 55.3472, -9.41843, -129.526, 0.28 ) }
    dend_45 { pt3dadd( 56.5856, -8.50769, -130.403, 0.55 ) }
    dend_45 { pt3dadd( 57.7362, -7.51701, -131.193, 0.55 ) }
    dend_45 { pt3dadd( 58.779, -6.44947, -131.886, 0.83 ) }
    dend_45 { pt3dadd( 60.3025, -4.64039, -132.847, 0.28 ) }
    dend_45 { pt3dadd( 60.8505, -3.87344, -133.181, 0.28 ) }
    dend_45 { pt3dadd( 61.7788, -2.30649, -133.696, 0.55 ) }
    dend_45 { pt3dadd( 62.6709, -0.600845, -134.152, 0.28 ) }
    dend_45 { pt3dadd( 63.0541, 0.18087, -134.323, 0.55 ) }
    dend_45 { pt3dadd( 63.6537, 1.46109, -134.521, 0.55 ) }
    dend_45 { pt3dadd( 64.5404, 3.38116, -134.704, 0.28 ) }
    dend_45 { pt3dadd( 65.0682, 4.55074, -134.806, 0.55 ) }
    dend_45 { pt3dadd( 65.8524, 6.36929, -134.954, 0.28 ) }
    dend_45 { pt3dadd( 66.6981, 8.43563, -135.142, 0.55 ) }
    dend_45 { pt3dadd( 67.5461, 10.5743, -135.35, 0.55 ) }
    dend_45 { pt3dadd( 67.9072, 11.536, -135.446, 0.55 ) }
    dend_45 { pt3dadd( 68.5763, 13.4714, -135.676, 0.55 ) }
    dend_45 { pt3dadd( 69.1672, 15.2589, -135.958, 0.55 ) }
    dend_45 { pt3dadd( 69.7195, 17.0975, -136.292, 0.55 ) }
    dend_45 { pt3dadd( 70.22, 18.8466, -136.628, 0.28 ) }
    dend_45 { pt3dadd( 70.4726, 19.7603, -136.841, 0.55 ) }
    dend_45 { pt3dadd( 71.2604, 22.6327, -137.55, 0.28 ) }
    dend_45 { pt3dadd( 71.7341, 24.5544, -138.08, 0.28 ) }
    dend_45 { pt3dadd( 71.9436, 25.5202, -138.363, 0.55 ) }
    dend_45 { pt3dadd( 72.3073, 27.2273, -138.889, 0.28 ) }
    dend_45 { pt3dadd( 72.6242, 28.7642, -139.375, 0.55 ) }
    dend_45 { pt3dadd( 72.8609, 29.9424, -139.737, 0.55 ) }
    dend_45 { pt3dadd( 73.4699, 33.2717, -140.701, 0.28 ) }
    dend_45 { pt3dadd( 73.797, 35.3435, -141.27, 0.28 ) }
    dend_45 { pt3dadd( 73.9156, 36.19, -141.49, 0.55 ) }
    dend_45 { pt3dadd( 74.1307, 37.9025, -141.902, 0.55 ) }
    dend_45 { pt3dadd( 74.4292, 40.2331, -142.373, 0.28 ) }
    dend_45 { pt3dadd( 74.6605, 42.0405, -142.706, 0.55 ) }
    dend_45 { pt3dadd( 74.8808, 43.7157, -142.954, 0.28 ) }
    dend_45 { pt3dadd( 75.0245, 45.16, -143.138, 0.55 ) }
    dend_45 { pt3dadd( 75.1058, 46.0316, -143.226, 0.28 ) }
    dend_45 { pt3dadd( 75.1805, 46.6288, -143.236, 0.55 ) }
    dend_45 { pt3dadd( 75.4321, 48.3732, -143.14, 0.28 ) }
    dend_45 { pt3dadd( 75.5923, 49.2329, -143.04, 0.55 ) }
    dend_45 { pt3dadd( 76.2222, 52.0853, -142.615, 0.28 ) }
    dend_45 { pt3dadd( 76.7066, 54.0469, -142.297, 0.55 ) }
    dend_45 { pt3dadd( 77.3964, 56.6477, -141.83, 0.28 ) }
    dend_45 { pt3dadd( 77.7955, 58.0486, -141.57, 0.55 ) }
    dend_45 { pt3dadd( 78.2891, 59.6498, -141.254, 0.28 ) }
    dend_45 { pt3dadd( 78.7556, 61.0817, -140.949, 0.55 ) }
    dend_45 { pt3dadd( 79.2112, 62.4293, -140.658, 0.28 ) }
    dend_45 { pt3dadd( 79.546, 63.4696, -140.437, 0.55 ) }
    dend_45 { pt3dadd( 80.3049, 66.0567, -139.932, 0.28 ) }
    dend_45 { pt3dadd( 80.6968, 67.3781, -139.642, 0.55 ) }
    dend_45 { pt3dadd( 81.2304, 69.2787, -139.184, 0.28 ) }
    dend_45 { pt3dadd( 81.4285, 69.9874, -138.989, 0.55 ) }
    dend_45 { pt3dadd( 81.8981, 71.7929, -138.453, 0.28 ) }
    dend_45 { pt3dadd( 82.3448, 73.6986, -137.876, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 30.209, -42.5042, -78.5174, 0.28 ) }
    dend_44 { pt3dadd( 33.424, -43.3724, -80.7484, 0.28 ) }
    dend_44 { pt3dadd( 34.3687, -43.6241, -81.4756, 0.55 ) }
    dend_44 { pt3dadd( 35.6513, -43.8715, -82.5505, 0.55 ) }
    dend_44 { pt3dadd( 37.6166, -44.1841, -84.2073, 0.28 ) }
    dend_44 { pt3dadd( 38.79, -44.3683, -85.1623, 0.55 ) }
    dend_44 { pt3dadd( 42.9311, -44.9452, -88.371, 0.28 ) }
    dend_44 { pt3dadd( 44.066, -45.0164, -89.1866, 0.55 ) }
    dend_44 { pt3dadd( 46.7977, -45.0413, -91.0272, 0.28 ) }
    dend_44 { pt3dadd( 47.9826, -44.989, -91.7636, 0.28 ) }
    dend_44 { pt3dadd( 49.9599, -44.8267, -92.8461, 0.55 ) }
    dend_44 { pt3dadd( 51.8223, -44.6755, -93.7415, 0.55 ) }
    dend_44 { pt3dadd( 56.429, -44.3678, -95.5062, 0.28 ) }
    dend_44 { pt3dadd( 58.1503, -44.3478, -96.132, 0.55 ) }
    dend_44 { pt3dadd( 60.0965, -44.4683, -96.8131, 0.55 ) }
    dend_44 { pt3dadd( 63.6408, -44.9021, -98.0851, 0.28 ) }
    dend_44 { pt3dadd( 65.9454, -45.3647, -98.9273, 0.55 ) }
    dend_44 { pt3dadd( 68.8106, -46.2682, -99.9176, 0.28 ) }
    dend_44 { pt3dadd( 70.3298, -46.9563, -100.406, 0.55 ) }
    dend_44 { pt3dadd( 73.0975, -48.5018, -101.251, 0.28 ) }
    dend_44 { pt3dadd( 74.2626, -49.3162, -101.561, 0.55 ) }
    dend_44 { pt3dadd( 75.529, -50.3918, -101.828, 0.55 ) }
    dend_44 { pt3dadd( 77.1666, -52.0493, -101.98, 0.28 ) }
    dend_44 { pt3dadd( 78.089, -53.1465, -101.976, 0.28 ) }
    dend_44 { pt3dadd( 79.0485, -54.5689, -101.857, 0.55 ) }
    dend_44 { pt3dadd( 80.1953, -56.7145, -101.559, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 80.3408, -57.0429, -101.503, 0.55 ) }
    dend_44 { pt3dadd( 81.472, -60.1811, -101.007, 0.28 ) }
    dend_44 { pt3dadd( 81.5703, -60.5461, -100.983, 0.83 ) }
    dend_44 { pt3dadd( 82.6792, -65.5006, -101.002, 0.28 ) }
    dend_44 { pt3dadd( 82.8535, -66.4442, -101.18, 0.55 ) }
    dend_44 { pt3dadd( 83.1898, -68.7739, -101.939, 0.28 ) }
    dend_44 { pt3dadd( 83.3613, -70.2202, -102.552, 0.55 ) }
    dend_44 { pt3dadd( 83.6872, -73.5049, -104.375, 0.28 ) }
    dend_44 { pt3dadd( 83.7216, -73.9195, -104.625, 0.55 ) }
    dend_44 { pt3dadd( 84.0642, -78.7329, -107.892, 0.28 ) }
    dend_44 { pt3dadd( 84.0983, -79.3934, -108.323, 0.55 ) }
    dend_44 { pt3dadd( 84.1282, -79.797, -108.59, 0.55 ) }
    dend_44 { pt3dadd( 84.2826, -81.2878, -109.407, 0.28 ) }
    dend_44 { pt3dadd( 84.4429, -82.5388, -109.963, 0.55 ) }
    dend_44 { pt3dadd( 84.7976, -84.7106, -110.749, 0.28 ) }
    dend_44 { pt3dadd( 84.9626, -85.6034, -111.03, 0.55 ) }
    dend_44 { pt3dadd( 86.0856, -90.9517, -112.889, 0.28 ) }
    dend_44 { pt3dadd( 86.3355, -92.0435, -113.285, 0.55 ) }
    dend_44 { pt3dadd( 86.6275, -93.2849, -113.806, 0.28 ) }
    dend_44 { pt3dadd( 87.6086, -97.2754, -115.628, 0.28 ) }
    dend_44 { pt3dadd( 87.9039, -98.5688, -116.182, 0.55 ) }
    dend_44 { pt3dadd( 88.7074, -102.297, -117.658, 0.28 ) }
    dend_44 { pt3dadd( 88.7602, -102.613, -117.756, 0.55 ) }
    dend_44 { pt3dadd( 89.2861, -106.739, -118.934, 0.28 ) }
    dend_44 { pt3dadd( 89.4674, -108.776, -119.332, 0.55 ) }
    dend_44 { pt3dadd( 89.6455, -111.403, -119.568, 0.28 ) }
    dend_44 { pt3dadd( 89.7451, -112.508, -119.549, 0.55 ) }
    dend_44 { pt3dadd( 89.9966, -114.785, -119.33, 0.28 ) }
    dend_44 { pt3dadd( 90.135, -115.787, -119.211, 0.55 ) }
    dend_44 { pt3dadd( 90.7556, -119.671, -118.984, 0.28 ) }
    dend_44 { pt3dadd( 91.32, -122.843, -119.015, 0.28 ) }
    dend_44 { pt3dadd( 91.6106, -124.211, -119.156, 0.55 ) }
    dend_44 { pt3dadd( 92.4, -127.541, -119.665, 0.28 ) }
    dend_44 { pt3dadd( 92.6799, -128.552, -119.857, 0.55 ) }
    dend_44 { pt3dadd( 94.603, -135.213, -121.247, 0.28 ) }
    dend_44 { pt3dadd( 95.3924, -137.716, -121.872, 0.55 ) }
    dend_44 { pt3dadd( 96.6902, -141.386, -122.865, 0.28 ) }
    dend_44 { pt3dadd( 96.9578, -142.104, -123.068, 0.55 ) }
    dend_44 { pt3dadd( 98.3589, -145.502, -124.053, 0.28 ) }
    dend_44 { pt3dadd( 98.5735, -145.96, -124.177, 0.55 ) }
    dend_44 { pt3dadd( 99.6238, -147.47, -124.436, 0.28 ) }
    dend_44 { pt3dadd( 100.375, -148.401, -124.669, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 37.2052, -39.9904, 12.0643, 0.55 ) }
    dend_41 { pt3dadd( 38.3987, -39.743, 13.266, 0.55 ) }
    dend_41 { pt3dadd( 40.794, -39.1555, 15.7025, 0.55 ) }
    dend_41 { pt3dadd( 45.171, -38.0556, 20.0686, 0.55 ) }
    dend_41 { pt3dadd( 48.533, -37.2285, 23.369, 0.55 ) }
    dend_41 { pt3dadd( 51.5748, -36.5515, 26.3162, 0.28 ) }
    dend_41 { pt3dadd( 53.2606, -36.2015, 27.9183, 0.83 ) }
    dend_41 { pt3dadd( 55.3688, -35.8075, 29.9565, 0.55 ) }
    dend_41 { pt3dadd( 56.9582, -35.5997, 31.4483, 0.28 ) }
    dend_41 { pt3dadd( 57.7437, -35.5352, 32.0687, 0.55 ) }
    dend_41 { pt3dadd( 59.4155, -35.4285, 33.2712, 0.28 ) }
    dend_41 { pt3dadd( 59.9756, -35.4089, 33.6713, 0.55 ) }
    dend_41 { pt3dadd( 62.3955, -35.5154, 35.1853, 0.28 ) }
    dend_41 { pt3dadd( 63.9412, -35.8025, 36.0482, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 37.2052, -39.9904, 12.0643, 0.28 ) }
    dend_40 { pt3dadd( 42.5046, -42.37, 7.75082, 0.28 ) }
    dend_40 { pt3dadd( 43.2509, -42.6416, 7.22319, 0.83 ) }
    dend_40 { pt3dadd( 45.8503, -43.4387, 5.54365, 0.28 ) }
    dend_40 { pt3dadd( 46.6127, -43.5816, 5.11288, 0.83 ) }
    dend_40 { pt3dadd( 48.3968, -43.7703, 4.17905, 0.28 ) }
    dend_40 { pt3dadd( 49.1533, -43.7964, 3.80955, 0.83 ) }
    dend_40 { pt3dadd( 51.4137, -43.4022, 3.18183, 0.28 ) }
    dend_40 { pt3dadd( 51.901, -43.206, 3.03393, 0.83 ) }
    dend_40 { pt3dadd( 54.334, -41.7249, 2.24694, 0.28 ) }
    dend_40 { pt3dadd( 54.9233, -41.3423, 2.04584, 0.28 ) }
    dend_40 { pt3dadd( 55.757, -40.7728, 1.74982, 0.55 ) }
    dend_40 { pt3dadd( 57.3335, -39.7179, 1.5125, 0.28 ) }
    dend_40 { pt3dadd( 59.7756, -38.1236, 1.51311, 0.28 ) }
    dend_40 { pt3dadd( 60.395, -37.7417, 1.64449, 0.83 ) }
    dend_40 { pt3dadd( 64.8486, -35.1672, 3.31095, 0.28 ) }
    dend_40 { pt3dadd( 65.6142, -34.772, 3.68001, 0.55 ) }
    dend_40 { pt3dadd( 71.1548, -32.1514, 7.12871, 0.28 ) }
    dend_40 { pt3dadd( 71.7453, -31.8868, 7.57144, 0.83 ) }
    dend_40 { pt3dadd( 75.2726, -30.2605, 10.7177, 0.28 ) }
    dend_40 { pt3dadd( 75.7386, -30.0157, 11.1881, 0.55 ) }
    dend_40 { pt3dadd( 77.1131, -29.1983, 12.7754, 0.28 ) }
    dend_40 { pt3dadd( 78.4041, -28.4035, 14.247, 0.55 ) }
    dend_40 { pt3dadd( 80.0267, -27.3638, 15.8589, 0.28 ) }
    dend_40 { pt3dadd( 80.6821, -26.9186, 16.4632, 0.55 ) }
    dend_40 { pt3dadd( 82.7375, -25.2568, 17.9831, 0.28 ) }
    dend_40 { pt3dadd( 83.4796, -24.5658, 18.5573, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 24.7887, -50.5856, -8.81545, 0.55 ) }
    dend_38 { pt3dadd( 26.2377, -51.3987, -10.3974, 0.55 ) }
    dend_38 { pt3dadd( 28.5493, -52.7268, -12.938, 0.55 ) }
    dend_38 { pt3dadd( 30.2101, -53.7237, -14.7998, 0.28 ) }
    dend_38 { pt3dadd( 31.3991, -54.4268, -16.1177, 0.55 ) }
    dend_38 { pt3dadd( 33.287, -55.4988, -18.1239, 0.55 ) }
    dend_38 { pt3dadd( 34.1142, -55.9914, -18.9427, 0.28 ) }
    dend_38 { pt3dadd( 34.6737, -56.344, -19.5276, 0.55 ) }
    dend_38 { pt3dadd( 35.3069, -56.8103, -20.1581, 0.28 ) }
    dend_38 { pt3dadd( 36.2406, -57.5985, -21.0755, 0.55 ) }
    dend_38 { pt3dadd( 37.6616, -58.8345, -22.3169, 0.55 ) }
    dend_38 { pt3dadd( 39.7242, -60.6355, -24.036, 0.55 ) }
    dend_38 { pt3dadd( 42.2668, -62.95, -26.7115, 1.38 ) }
    dend_38 { pt3dadd( 43.7868, -64.348, -28.5566, 0.83 ) }
    dend_38 { pt3dadd( 45.0319, -65.4514, -30.2067, 0.55 ) }
    dend_38 { pt3dadd( 46.5418, -66.746, -32.3828, 0.28 ) }
    dend_38 { pt3dadd( 48.3324, -68.2092, -35.1562, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 51.498, -70.6073, -40.778, 0.28 ) }
    dend_38 { pt3dadd( 51.8834, -70.9184, -41.5431, 0.28 ) }
    dend_38 { pt3dadd( 52.7519, -71.7424, -43.6161, 0.55 ) }
    dend_38 { pt3dadd( 53.2975, -72.2966, -45.0555, 0.55 ) }
    dend_38 { pt3dadd( 53.7467, -72.8358, -46.4203, 0.55 ) }
    dend_38 { pt3dadd( 55.0247, -74.5381, -50.1024, 0.55 ) }
    dend_38 { pt3dadd( 56.3073, -76.41, -53.5556, 0.28 ) }
    dend_38 { pt3dadd( 57.0508, -77.644, -55.7092, 0.83 ) }
    dend_38 { pt3dadd( 57.4874, -78.4352, -57.0478, 0.83 ) }
    dend_38 { pt3dadd( 58.6576, -80.5294, -60.5476, 0.55 ) }
    dend_38 { pt3dadd( 59.163, -81.3861, -61.9125, 0.83 ) }
    dend_38 { pt3dadd( 59.989, -82.5588, -63.5796, 0.28 ) }
    dend_38 { pt3dadd( 60.6642, -83.3375, -64.6445, 0.55 ) }
    dend_38 { pt3dadd( 61.1123, -83.8449, -65.2201, 0.28 ) }
    dend_38 { pt3dadd( 61.3454, -84.117, -65.4679, 0.55 ) }
    dend_38 { pt3dadd( 62.562, -85.3835, -66.4822, 0.28 ) }
    dend_38 { pt3dadd( 63.8428, -86.8106, -67.7095, 0.28 ) }
    dend_38 { pt3dadd( 64.8316, -87.9296, -68.6445, 0.83 ) }
    dend_38 { pt3dadd( 65.6472, -88.9803, -69.4626, 0.55 ) }
    dend_38 { pt3dadd( 67.6606, -91.7768, -71.5299, 0.28 ) }
    dend_38 { pt3dadd( 68.2198, -92.6661, -72.1867, 0.83 ) }
    dend_38 { pt3dadd( 69.9185, -95.6885, -74.3662, 0.28 ) }
    dend_38 { pt3dadd( 70.5154, -96.9728, -75.2131, 0.83 ) }
    dend_38 { pt3dadd( 71.5446, -99.2941, -76.611, 0.28 ) }
    dend_38 { pt3dadd( 71.8304, -99.9596, -77.0159, 0.83 ) }
    dend_38 { pt3dadd( 72.9901, -102.821, -78.6827, 0.28 ) }
    dend_38 { pt3dadd( 73.6936, -104.581, -79.6714, 0.28 ) }
    dend_38 { pt3dadd( 74.3885, -106.077, -80.4395, 0.55 ) }
    dend_38 { pt3dadd( 75.1922, -107.713, -81.3847, 0.55 ) }
    dend_38 { pt3dadd( 76.5719, -110.205, -82.9348, 0.55 ) }
    dend_38 { pt3dadd( 77.3331, -111.474, -83.7502, 0.28 ) }
    dend_38 { pt3dadd( 77.7444, -112.126, -84.1935, 0.55 ) }
    dend_38 { pt3dadd( 79.0406, -114.23, -85.8123, 0.28 ) }
    dend_38 { pt3dadd( 80.0278, -115.711, -87.0472, 0.55 ) }
    dend_38 { pt3dadd( 81.039, -117.305, -88.3756, 0.28 ) }
    dend_38 { pt3dadd( 81.3553, -117.782, -88.7452, 0.83 ) }
    dend_38 { pt3dadd( 82.6833, -119.796, -90.4062, 0.28 ) }
    dend_38 { pt3dadd( 82.9937, -120.239, -90.7988, 0.55 ) }
    dend_38 { pt3dadd( 83.795, -121.286, -91.8448, 0.55 ) }
    dend_38 { pt3dadd( 85.2632, -122.994, -93.396, 0.28 ) }
    dend_38 { pt3dadd( 85.3212, -123.059, -93.459, 0.55 ) }
    dend_38 { pt3dadd( 86.5831, -124.414, -94.9912, 0.28 ) }
    dend_38 { pt3dadd( 87.084, -124.911, -95.6058, 0.55 ) }
    dend_38 { pt3dadd( 88.3591, -126.273, -97.3964, 0.28 ) }
    dend_38 { pt3dadd( 89.166, -127.145, -98.6417, 0.55 ) }
    dend_38 { pt3dadd( 90.593, -128.621, -100.969, 0.55 ) }
    dend_38 { pt3dadd( 91.7975, -129.91, -103.055, 0.28 ) }
    dend_38 { pt3dadd( 92.5179, -130.731, -104.355, 0.83 ) }
    dend_38 { pt3dadd( 93.7437, -132.193, -106.601, 0.28 ) }
    dend_38 { pt3dadd( 94.0309, -132.48, -107.048, 0.55 ) }
    dend_38 { pt3dadd( 95.168, -133.42, -108.617, 0.28 ) }
    dend_38 { pt3dadd( 95.6131, -133.687, -109.042, 0.55 ) }
    dend_38 { pt3dadd( 97.8947, -134.752, -110.826, 0.28 ) }
    dend_38 { pt3dadd( 98.6497, -135.036, -111.358, 0.83 ) }
    dend_38 { pt3dadd( 101.767, -135.878, -113.113, 0.28 ) }
    dend_38 { pt3dadd( 102.364, -136.008, -113.413, 0.55 ) }
    dend_38 { pt3dadd( 104.906, -136.297, -114.435, 0.28 ) }
    dend_38 { pt3dadd( 107.114, -136.341, -115.265, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 24.7887, -50.5856, -8.81545, 0.55 ) }
    dend_35 { pt3dadd( 24.5433, -52.3061, -11.2856, 0.55 ) }
    dend_35 { pt3dadd( 23.838, -56.0154, -16.4177, 0.55 ) }
    dend_35 { pt3dadd( 23.3099, -59.1943, -20.7795, 0.28 ) }
    dend_35 { pt3dadd( 22.9596, -61.4568, -23.9868, 0.83 ) }
    dend_35 { pt3dadd( 22.5732, -65.0347, -29.2496, 0.28 ) }
    dend_35 { pt3dadd( 22.4748, -65.8414, -30.5252, 0.55 ) }
    dend_35 { pt3dadd( 22.3485, -66.5079, -31.6771, 0.55 ) }
    dend_35 { pt3dadd( 22.1698, -67.6928, -34.1066, 0.55 ) }
    dend_35 { pt3dadd( 22.0097, -69.4015, -37.8721, 0.55 ) }
    dend_35 { pt3dadd( 21.944, -70.2994, -39.9562, 0.55 ) }
    dend_35 { pt3dadd( 22.1557, -72.575, -45.6813, 0.83 ) }
    dend_35 { pt3dadd( 22.3145, -73.9083, -49.232, 0.28 ) }
    dend_35 { pt3dadd( 22.3401, -74.4178, -50.692, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -78.2145, -33.035, -132.98, 0.28 ) }
    dend_20 { pt3dadd( -78.987, -32.9354, -132.842, 0.28 ) }
    dend_20 { pt3dadd( -79.9908, -32.8061, -132.662, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -78.2145, -33.035, -132.98, 0.28 ) }
    dend_19 { pt3dadd( -79.8582, -36.1808, -135.639, 0.28 ) }
    dend_19 { pt3dadd( -80.3388, -37.1005, -136.417, 0.55 ) }
    dend_19 { pt3dadd( -81.8423, -39.9781, -138.85, 0.28 ) }
    dend_19 { pt3dadd( -82.5078, -41.2517, -139.927, 0.83 ) }
    dend_19 { pt3dadd( -85.4202, -46.8257, -144.639, 0.28 ) }
    dend_19 { pt3dadd( -85.8989, -47.7417, -145.414, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -92.9507, 365.732, 9.17507, 0.55 ) }
    dend_9 { pt3dadd( -94.2971, 366.383, 8.74185, 0.55 ) }
    dend_9 { pt3dadd( -95.7074, 367.176, 8.3191, 0.28 ) }
    dend_9 { pt3dadd( -97.1138, 367.966, 7.89753, 0.55 ) }
    dend_9 { pt3dadd( -101.181, 370.253, 6.67855, 0.28 ) }
    dend_9 { pt3dadd( -101.648, 370.516, 6.53842, 0.55 ) }
    dend_9 { pt3dadd( -104.664, 372.212, 5.63456, 0.28 ) }
    dend_9 { pt3dadd( -106.231, 372.916, 5.05175, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -92.9507, 365.732, 9.17507, 0.28 ) }
    dend_8 { pt3dadd( -94.999, 364.651, 9.76355, 0.28 ) }
    dend_8 { pt3dadd( -96.1391, 364.049, 10.0911, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 82.3448, 73.6986, -137.876, 0.28 ) }
    dend_47 { pt3dadd( 79.0316, 75.3254, -137.022, 0.28 ) }
    dend_47 { pt3dadd( 77.9085, 75.8768, -136.733, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 82.3448, 73.6986, -137.876, 0.28 ) }
    dend_46 { pt3dadd( 82.5287, 75.0567, -137.735, 0.28 ) }
    dend_46 { pt3dadd( 82.8607, 77.615, -137.431, 0.28 ) }
    dend_46 { pt3dadd( 82.9419, 78.3037, -137.314, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 83.2059, 80.8179, -136.744, 0.28 ) }
    dend_46 { pt3dadd( 83.3576, 82.2628, -136.417, 0.55 ) }
    dend_46 { pt3dadd( 83.5536, 84.1292, -135.994, 0.28 ) }
    dend_46 { pt3dadd( 83.6483, 85.1135, -135.711, 0.55 ) }
    dend_46 { pt3dadd( 83.7841, 86.6801, -135.14, 0.28 ) }
    dend_46 { pt3dadd( 83.8615, 87.9481, -134.645, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 22.3401, -74.4178, -50.692, 0.55 ) }
    dend_37 { pt3dadd( 20.0876, -76.1786, -51.9524, 0.55 ) }
    dend_37 { pt3dadd( 19.0446, -77.0439, -52.5765, 0.28 ) }
    dend_37 { pt3dadd( 18.3364, -77.5902, -52.9917, 0.83 ) }
    dend_37 { pt3dadd( 13.989, -80.7685, -55.3186, 0.28 ) }
    dend_37 { pt3dadd( 12.7702, -81.6913, -55.9585, 0.83 ) }
    dend_37 { pt3dadd( 7.55071, -85.765, -58.5816, 0.28 ) }
    dend_37 { pt3dadd( 6.82653, -86.3269, -58.939, 0.83 ) }
    dend_37 { pt3dadd( 2.35732, -89.5461, -60.965, 0.28 ) }
    dend_37 { pt3dadd( 1.05987, -90.4423, -61.4627, 0.55 ) }
    dend_37 { pt3dadd( -4.56387, -94.0653, -63.2466, 0.28 ) }
    dend_37 { pt3dadd( -5.71386, -94.7668, -63.6071, 0.28 ) }
    dend_37 { pt3dadd( -8.20132, -96.192, -64.3834, 0.83 ) }
    dend_37 { pt3dadd( -15.5713, -100.245, -66.7374, 0.28 ) }
    dend_37 { pt3dadd( -17.6129, -101.337, -67.4381, 0.55 ) }
    dend_37 { pt3dadd( -21.6395, -103.427, -68.8899, 0.55 ) }
    dend_37 { pt3dadd( -24.6368, -104.894, -69.9586, 0.55 ) }
    dend_37 { pt3dadd( -29.7989, -107.47, -71.8264, 0.28 ) }
    dend_37 { pt3dadd( -31.2311, -108.253, -72.353, 0.83 ) }
    dend_37 { pt3dadd( -35.9877, -111.072, -74.0076, 0.28 ) }
    dend_37 { pt3dadd( -36.8923, -111.658, -74.2973, 0.55 ) }
    dend_37 { pt3dadd( -40.7405, -114.422, -75.1424, 0.28 ) }
    dend_37 { pt3dadd( -41.8657, -115.219, -75.2804, 0.55 ) }
    dend_37 { pt3dadd( -46.0522, -118.329, -75.4676, 0.28 ) }
    dend_37 { pt3dadd( -46.4286, -118.594, -75.4809, 0.83 ) }
    dend_37 { pt3dadd( -48.6068, -120.065, -75.3805, 0.28 ) }
    dend_37 { pt3dadd( -50.3366, -121.211, -75.1899, 0.55 ) }
    dend_37 { pt3dadd( -55.5852, -124.531, -74.4839, 0.28 ) }
    dend_37 { pt3dadd( -57.1329, -125.534, -74.2006, 0.83 ) }
    dend_37 { pt3dadd( -63.6665, -129.878, -72.5984, 0.28 ) }
    dend_37 { pt3dadd( -66.45, -131.779, -71.8573, 0.55 ) }
    dend_37 { pt3dadd( -70.1059, -134.376, -70.8922, 0.55 ) }
    dend_37 { pt3dadd( -74.1122, -137.409, -69.7153, 0.28 ) }
    dend_37 { pt3dadd( -77.3661, -140.089, -68.5396, 0.55 ) }
    dend_37 { pt3dadd( -79.7374, -142.081, -67.7965, 0.28 ) }
    dend_37 { pt3dadd( -80.0847, -142.394, -67.6934, 0.55 ) }
    dend_37 { pt3dadd( -82.2717, -144.246, -67.1871, 0.28 ) }
    dend_37 { pt3dadd( -84.0076, -145.579, -66.8334, 0.55 ) }
    dend_37 { pt3dadd( -85.9612, -146.912, -66.4909, 0.55 ) }
    dend_37 { pt3dadd( -89.4539, -148.91, -66.1005, 0.28 ) }
    dend_37 { pt3dadd( -90.9539, -149.671, -65.9149, 0.55 ) }
    dend_37 { pt3dadd( -93.1071, -150.717, -65.6365, 0.28 ) }
    dend_37 { pt3dadd( -94.4689, -151.329, -65.4214, 0.55 ) }
    dend_37 { pt3dadd( -98.1705, -152.91, -64.8535, 0.28 ) }
    dend_37 { pt3dadd( -99.4359, -153.421, -64.7089, 0.55 ) }
    dend_37 { pt3dadd( -102.606, -154.748, -64.3459, 0.28 ) }
    dend_37 { pt3dadd( -104.708, -155.695, -64.314, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 22.3401, -74.4178, -50.692, 0.28 ) }
    dend_36 { pt3dadd( 25.8212, -74.8719, -53.8068, 0.28 ) }
    dend_36 { pt3dadd( 26.2905, -74.9722, -54.3027, 0.83 ) }
    dend_36 { pt3dadd( 28.4415, -75.591, -56.5803, 0.28 ) }
    dend_36 { pt3dadd( 29.1857, -75.7821, -57.3863, 0.28 ) }
    dend_36 { pt3dadd( 30.0805, -76.0845, -58.411, 0.55 ) }
    dend_36 { pt3dadd( 31.4757, -76.7246, -60.4384, 0.28 ) }
    dend_36 { pt3dadd( 32.7621, -77.5827, -62.848, 0.55 ) }
    dend_36 { pt3dadd( 33.5004, -78.1887, -64.2841, 0.55 ) }
    dend_36 { pt3dadd( 34.2946, -79.0858, -66.2002, 0.55 ) }
    dend_36 { pt3dadd( 35.5131, -80.7489, -69.716, 0.83 ) }
    dend_36 { pt3dadd( 36.7723, -82.8437, -74.1268, 0.28 ) }
    dend_36 { pt3dadd( 37.1606, -83.5946, -75.692, 0.28 ) }
    dend_36 { pt3dadd( 37.3139, -84.0404, -76.5432, 0.83 ) }
    dend_36 { pt3dadd( 38.1973, -87.1379, -82.339, 0.28 ) }
    dend_36 { pt3dadd( 38.3839, -88.1116, -84.036, 0.83 ) }
    dend_36 { pt3dadd( 38.4911, -89.0153, -85.5074, 0.83 ) }
    dend_36 { pt3dadd( 38.6953, -90.7529, -88.0594, 0.83 ) }
    dend_36 { pt3dadd( 38.992, -93.859, -92.4163, 0.55 ) }
    dend_36 { pt3dadd( 39.229, -96.8379, -96.1372, 0.55 ) }
    dend_36 { pt3dadd( 39.5512, -101.0, -100.554, 0.55 ) }
    dend_36 { pt3dadd( 39.6292, -103.27, -102.642, 0.55 ) }
    dend_36 { pt3dadd( 39.6371, -105.482, -104.381, 0.28 ) }
    dend_36 { pt3dadd( 39.6371, -105.772, -104.562, 0.55 ) }
    dend_36 { pt3dadd( 39.6431, -110.146, -106.567, 0.28 ) }
    dend_36 { pt3dadd( 39.6381, -111.795, -107.107, 0.55 ) }
    dend_36 { pt3dadd( 39.756, -116.64, -108.373, 0.28 ) }
    dend_36 { pt3dadd( 39.9333, -119.361, -108.996, 0.55 ) }
    dend_36 { pt3dadd( 40.2484, -122.273, -109.622, 0.28 ) }
    dend_36 { pt3dadd( 40.646, -124.428, -110.03, 0.55 ) }
    dend_36 { pt3dadd( 41.9304, -129.386, -110.806, 0.28 ) }
    dend_36 { pt3dadd( 42.3326, -130.559, -110.957, 1.11 ) }
    dend_36 { pt3dadd( 45.0028, -136.334, -111.58, 0.28 ) }
    dend_36 { pt3dadd( 46.5981, -139.094, -111.842, 0.55 ) }
    dend_36 { pt3dadd( 48.5457, -141.584, -111.844, 0.28 ) }
    dend_36 { pt3dadd( 49.3316, -142.33, -111.754, 0.55 ) }
    dend_36 { pt3dadd( 51.7034, -144.093, -111.268, 0.28 ) }
    dend_36 { pt3dadd( 53.4263, -145.168, -110.82, 0.28 ) }
    dend_36 { pt3dadd( 57.0364, -146.932, -109.694, 0.55 ) }
    dend_36 { pt3dadd( 62.4956, -149.515, -107.831, 0.55 ) }
    dend_36 { pt3dadd( 64.6403, -150.519, -107.076, 0.28 ) }
    dend_36 { pt3dadd( 65.0795, -150.708, -106.94, 0.55 ) }
    dend_36 { pt3dadd( 68.2283, -151.947, -106.152, 0.28 ) }
    dend_36 { pt3dadd( 68.7663, -152.154, -106.041, 0.55 ) }
    dend_36 { pt3dadd( 71.1568, -152.989, -105.829, 0.28 ) }
    dend_36 { pt3dadd( 72.1812, -153.31, -105.884, 0.55 ) }
    dend_36 { pt3dadd( 76.362, -154.116, -106.086, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 77.7525, -154.199, -106.059, 0.55 ) }
    dend_36 { pt3dadd( 79.9644, -154.08, -106.068, 0.28 ) }
    dend_36 { pt3dadd( 80.7301, -153.938, -105.994, 0.55 ) }
    dend_36 { pt3dadd( 83.0278, -153.267, -105.631, 0.28 ) }
    dend_36 { pt3dadd( 85.0598, -152.595, -105.23, 0.55 ) }
    dend_36 { pt3dadd( 88.9613, -151.075, -104.077, 0.28 ) }
    dend_36 { pt3dadd( 91.9987, -149.769, -103.048, 0.55 ) }
    dend_36 { pt3dadd( 98.5134, -146.591, -100.647, 0.28 ) }
    dend_36 { pt3dadd( 99.4716, -146.106, -100.264, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_13 nseg = 3
    dend_6 nseg = 13
    dend_5 nseg = 5
    dend_3 nseg = 7
    dend_48 nseg = 13
    dend_43 nseg = 3
    dend_30 nseg = 17
    dend_29 nseg = 5
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 7
    dend_15 nseg = 7
    dend_14 nseg = 5
    dend_10 nseg = 7
    dend_7 nseg = 5
    dend_45 nseg = 7
    dend_44 nseg = 9
    dend_40 nseg = 3
    dend_38 nseg = 9
    dend_35 nseg = 3
    dend_37 nseg = 7
    dend_36 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L4_BTC_8637afc75f_0_0


