// Cell: cNAC187_L23_NBC_9d37c4b1f8_0_0
/*
{
  "id" : "cNAC187_L23_NBC_9d37c4b1f8_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-7.11709, 7.30639, -0.967776, 2.36862", "-6.36745, 6.56762, -0.862279, 4.05465", "-5.61782, 5.82885, -0.756782, 6.37159", "-4.86818, 5.09008, -0.651285, 7.6682", "-4.11855, 4.35131, -0.545788, 8.31963", "-3.36891, 3.61254, -0.440291, 8.63962", "-2.61928, 2.87377, -0.334794, 8.75226", "-1.86965, 2.135, -0.229297, 8.73568", "-1.12001, 1.39623, -0.1238, 8.76537", "-0.370378, 0.657463, -0.0183025, 8.79506", "0.379256, -0.0813072, 0.0871946, 8.85046", "1.12889, -0.820077, 0.192692, 9.12539", "1.87852, -1.55885, 0.298189, 9.37848", "2.62816, -2.29762, 0.403686, 9.54524", "3.37779, -3.03639, 0.509183, 9.52778", "4.12743, -3.77516, 0.61468, 9.63906", "4.87706, -4.51393, 0.720177, 9.78204", "5.6267, -5.2527, 0.825674, 9.68621", "6.37633, -5.99147, 0.931171, 8.82442", "7.12596, -6.73024, 1.03667, 6.80231", "7.8756, -7.46901, 1.14217, 3.72742" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-2.66963, 7.55971, -5.40351, 1.39", "-3.84648, 11.1211, -6.61756, 1.11", "-4.87191, 14.2242, -7.67539, 1.11", "-5.16247, 15.1035, -7.97513, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-0.0996272, 5.89721, 2.21649, 1.39", "0.935077, 7.41549, 2.45432, 1.39", "3.38777, 10.5251, 2.47081, 1.11", "7.15283, 14.8871, 2.10979, 1.11", "13.0726, 21.1095, 0.924127, 1.11", "16.0405, 23.9195, 0.311664, 1.11", "20.1482, 27.4958, -0.598452, 1.11", "22.649, 29.4224, -1.38174, 1.11", "24.5308, 30.7516, -2.46523, 1.11", "27.2655, 32.5443, -4.80379, 1.11", "29.0434, 33.8106, -6.89373, 1.11", "30.6766, 35.058, -9.01558, 0.83", "33.6754, 37.4419, -12.9061, 0.83", "38.5142, 41.3163, -19.7316, 0.83", "40.9801, 43.3521, -23.5683, 0.83", "42.4997, 44.6933, -26.206, 0.83", "44.4786, 46.5539, -30.0346, 0.83", "45.6404, 47.6198, -32.3367, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "7.99037, -3.45079, -7.17351, 0.83", "10.9008, -3.44282, -7.73801, 0.83", "12.9525, -3.47632, -8.12893, 0.55", "14.1032, -3.50022, -8.33414, 0.55", "16.9989, -3.56928, -8.74428, 0.55", "21.8657, -3.70796, -9.45313, 0.55", "26.8322, -3.8906, -10.0927, 0.55", "30.974, -4.0966, -10.528, 0.55", "33.0682, -4.22054, -10.6517, 0.28", "34.9648, -4.31482, -10.6987, 0.55", "38.0541, -4.41036, -10.6457, 0.55", "40.5472, -4.29988, -10.5323, 0.55", "43.0827, -4.13386, -10.3413, 0.28", "45.5051, -3.85903, -10.0612, 0.83", "48.4132, -3.42061, -9.70347, 0.28", "50.8336, -3.00312, -9.39714, 0.55", "53.2572, -2.52965, -8.96982, 0.55", "54.9629, -2.17767, -8.71864, 0.55", "58.2369, -1.49672, -8.25877, 0.55", "59.5623, -1.21432, -8.08279, 0.55", "61.5202, -0.803417, -7.78571, 0.55", "64.4981, -0.253549, -7.29313, 0.55", "67.5003, 0.244541, -6.78471, 0.55", "68.8683, 0.492221, -6.59461, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "6.35038, -5.83529, -16.6335, 1.11", "7.07104, -5.73201, -19.2489, 1.11", "9.66404, -5.36043, -28.6594, 1.11", "11.7217, -5.06554, -36.1273, 1.11", "13.1733, -4.85753, -41.3953, 1.11", "13.8172, -4.76524, -43.7324, 1.11", "15.6912, -4.4967, -50.5334, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.70037, -8.44779, -13.7535, 1.94", "2.3998, -9.8453, -15.3158, 1.94", "1.82701, -12.5084, -18.2929, 1.94", "1.36112, -14.6746, -20.7145, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-5.82962, 1.85971, 1.87649, 1.11", "-7.69206, 1.43052, 2.47023, 1.11", "-9.6947, 0.902564, 3.18696, 0.83", "-11.006, 0.487794, 3.65585, 0.83", "-14.5266, -0.606527, 5.03519, 0.83", "-16.5994, -1.19378, 5.95713, 0.83", "-20.65, -2.31276, 7.95939, 0.83", "-22.4109, -2.78295, 8.95449, 0.55", "-24.3055, -3.16367, 10.1974, 0.55", "-27.7204, -3.65714, 12.7251, 0.55", "-29.7595, -3.94994, 14.4416, 0.55", "-32.2202, -4.33141, 16.5287, 0.55", "-35.1972, -4.81704, 19.0423, 0.55", "-38.9336, -5.5859, 22.2364, 0.55", "-42.053, -6.39819, 24.9185, 0.55", "-44.3083, -7.27493, 26.8894, 0.55", "-46.454, -8.43078, 28.768, 0.55", "-47.9867, -9.48554, 30.1191, 0.55", "-48.7955, -10.4666, 30.8448, 0.28", "-49.0685, -11.1534, 31.0354, 0.55", "-49.3329, -13.4983, 31.0946, 0.28", "-49.1022, -14.7015, 31.0557, 0.55", "-56.0113, -17.0325, 36.7246, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.72962, 4.99471, -11.8535, 1.66", "-15.7864, 5.57546, -11.8535, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-6.49962, 6.75221, 3.5965, 1.94", "-9.26034, 8.21559, 3.5965, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999992974454743
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.8756, -7.46901, 1.14217, 0.620172", "18.5593, -17.9979, 1.14217, 0.620172", "29.2431, -28.5268, 1.14217, 0.620172" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.16247, 15.1035, -7.97513, 0.83", "-5.79641, 17.2956, -8.54284, 0.83", "-6.87645, 21.6193, -9.46988, 0.83", "-7.70312, 24.9732, -10.0465, 0.83", "-8.63258, 28.913, -10.5305, 0.83", "-9.59405, 32.948, -10.6626, 0.55", "-9.96715, 34.5136, -10.6087, 0.55", "-10.7166, 37.6592, -10.1681, 0.55", "-11.5244, 40.4622, -9.30043, 0.55", "-12.2254, 42.4573, -8.41739, 0.55", "-13.8901, 46.1515, -6.39451, 0.83", "-15.3011, 48.4824, -4.74316, 0.83", "-16.2428, 49.7717, -3.68152, 0.28", "-18.2804, 52.079, -1.61396, 0.83", "-19.288, 53.1149, -0.703819, 0.55", "-20.3043, 54.087, 0.00110697, 0.83", "-23.5237, 57.1564, 1.51183, 0.28", "-23.7519, 57.3662, 1.64908, 0.55", "-24.9642, 58.5086, 2.53346, 0.28", "-26.1561, 59.6031, 3.53799, 0.55", "-27.3695, 60.6904, 4.66032, 0.28", "-28.3226, 61.5081, 5.50572, 0.55", "-32.8293, 65.2896, 9.1895, 0.55", "-34.7778, 66.9203, 10.6691, 0.55", "-36.3987, 68.2692, 11.8077, 0.55", "-37.5328, 69.2559, 12.4776, 0.55", "-39.0914, 70.6968, 13.1508, 0.55", "-40.2942, 71.9547, 13.2538, 0.55", "-42.3302, 74.3569, 12.4644, 0.28", "-43.5067, 75.833, 11.7355, 0.55", "-44.7995, 77.4953, 10.6445, 0.28", "-45.4453, 78.2939, 9.9853, 0.55", "-46.7301, 79.8066, 8.48372, 0.28", "-47.8033, 80.9251, 7.14214, 0.28", "-48.1582, 81.2521, 6.68192, 0.55", "-49.4374, 82.315, 5.00248, 0.28", "-50.2815, 82.9024, 4.0095, 0.83", "-50.9148, 83.2967, 3.31288, 0.28", "-51.1432, 83.4129, 3.07374, 0.83", "-56.6801, 89.5459, 4.74073, 0.83", "-61.536, 95.9799, 7.12193, 0.83", "-67.0031, 101.765, 9.9714, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-5.16247, 15.1035, -7.97513, 0.83", "-3.26773, 15.5885, -13.8034, 0.83", "-2.22661, 15.871, -16.899, 0.83", "-0.420409, 16.2997, -22.1654, 0.83", "4.65445, 17.3792, -35.9358, 0.83", "8.44598, 18.214, -45.6881, 0.83", "9.55695, 18.4536, -48.4084, 0.28", "11.0394, 18.6551, -51.9239, 0.83", "11.7625, 18.7256, -53.6714, 0.83", "13.3721, 18.8788, -58.0515, 0.83", "14.1394, 18.9721, -59.4247, 0.83", "16.7092, 19.613, -62.4697, 0.83" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "45.6404, 47.6198, -32.3367, 0.83", "49.432, 49.2181, -36.688, 0.83", "51.5966, 50.0125, -38.8861, 0.83", "55.7419, 51.2798, -42.6857, 0.83", "58.0413, 51.9323, -44.6436, 0.83", "61.4862, 52.7739, -47.3694, 0.83", "64.0544, 53.3527, -49.2648, 0.83", "67.3975, 53.9447, -51.3279, 0.83", "69.7003, 54.2832, -52.6148, 0.83", "72.3614, 54.6589, -53.9507, 0.83", "75.2009, 55.0953, -55.3107, 0.83", "76.9859, 55.4223, -56.1169, 0.55", "78.3083, 55.6349, -56.7286, 0.55", "82.4539, 56.1256, -58.846, 0.55", "83.8874, 56.3271, -59.6329, 0.55", "87.1924, 56.7621, -61.6895, 0.83", "89.2554, 56.9708, -63.0979, 0.83", "93.1699, 57.3368, -65.9842, 0.83", "95.6998, 57.5975, -67.9038, 0.55", "98.8151, 57.987, -70.3201, 0.55", "101.953, 58.397, -72.7976, 0.55", "105.456, 58.8451, -75.4753, 0.83", "114.785, 59.7989, -82.0537, 0.55", "117.402, 59.9924, -83.7313, 0.55", "119.136, 60.0308, -84.7074, 0.28", "120.91, 59.9328, -85.5404, 0.55", "125.146, 59.525, -86.9547, 0.55", "128.091, 59.1099, -87.5497, 0.55", "130.903, 58.4791, -87.6822, 0.55", "133.74, 57.8898, -87.7333, 0.55", "137.028, 57.3391, -87.7546, 1.11", "140.915, 56.9719, -87.8381, 0.55", "143.598, 56.9334, -88.0426, 0.28", "146.497, 57.0721, -88.4909, 0.55", "148.553, 57.2515, -88.9972, 0.28", "149.816, 57.351, -89.4856, 0.55", "151.729, 57.4566, -90.4718, 0.83", "155.431, 57.5352, -92.9113, 0.55", "157.644, 57.4639, -94.481, 0.28", "162.331, 57.2079, -97.9816, 0.55", "167.572, 56.7776, -101.894, 0.28", "169.431, 56.5991, -103.318, 0.55", "172.082, 56.302, -105.263, 0.55", "175.325, 55.9162, -107.521, 0.55", "178.02, 55.5995, -109.305, 0.28", "179.001, 55.4738, -109.953, 0.55", "181.981, 55.1669, -111.583, 0.28", "184.785, 54.8664, -112.808, 0.55", "186.988, 54.6377, -113.563, 0.28", "187.965, 54.575, -113.901, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "45.6404, 47.6198, -32.3367, 0.55", "48.0499, 47.9423, -34.8175, 0.55", "51.8028, 48.5329, -38.6241, 0.55", "54.3385, 48.93, -41.099, 0.55", "57.7191, 49.6463, -44.2502, 0.55", "60.1105, 50.2573, -46.4219, 0.55", "63.0404, 51.1862, -48.9898, 0.55", "63.8763, 51.5301, -49.6667, 0.55", "65.8751, 52.5911, -51.0921, 0.55", "69.5024, 54.9868, -53.2661, 0.55", "71.8501, 56.9827, -54.4179, 0.55", "74.9748, 60.2427, -55.4331, 0.55", "76.7239, 62.395, -55.6597, 0.28", "77.802, 63.8679, -55.5716, 0.28", "80.874, 68.6772, -54.6258, 0.28", "81.4984, 69.6936, -54.2821, 0.83", "83.4239, 72.7773, -52.9557, 0.28", "84.8626, 74.7506, -52.1199, 0.83", "87.7075, 77.8515, -50.9134, 0.28", "89.1152, 79.2185, -50.4365, 0.55", "90.6469, 80.4524, -50.1741, 0.28", "92.4648, 81.7568, -49.9318, 0.55", "97.6606, 84.7356, -49.7336, 0.55", "100.424, 85.886, -50.0076, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "15.6912, -4.4967, -50.5334, 0.55", "19.1353, -4.62292, -56.4799, 0.55", "20.5411, -4.74337, -58.8821, 1.11", "24.4869, -5.15165, -65.2429, 0.28", "26.2098, -5.3548, -67.8897, 0.55", "27.7205, -5.52882, -70.1247, 0.55", "29.353, -5.65958, -72.527, 0.28", "31.1918, -5.79646, -75.1273, 1.11", "33.2431, -5.79915, -78.0701, 0.55", "35.2123, -5.63686, -80.8139, 0.28", "35.68, -5.56898, -81.5445, 1.11", "38.2258, -5.00448, -85.8501, 0.55", "40.1901, -4.33812, -89.4457, 0.28", "41.5569, -3.73094, -92.1012, 0.83", "42.5922, -3.20134, -94.3478, 0.83", "44.6791, -2.06993, -99.073, 0.55", "45.1703, -1.84913, -100.149, 0.83", "47.687, -0.849537, -105.44, 0.28", "48.7818, -0.419366, -107.733, 0.83", "50.7774, 0.287746, -111.853, 0.28", "51.4595, 0.52228, -113.245, 1.11", "57.2019, 2.28906, -124.458, 0.28", "57.4561, 2.35564, -124.95, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "15.6912, -4.4967, -50.5334, 0.28", "15.3074, -3.85597, -52.8236, 0.28", "15.1936, -3.63845, -53.5532, 0.55", "13.897, -1.07762, -61.4563, 0.28", "13.8457, -1.00085, -61.6863, 0.55", "13.53, -0.584177, -62.9221, 0.28", "13.0721, -0.144455, -64.3402, 0.55", "11.1482, 1.36143, -69.4998, 0.28", "10.8027, 1.57809, -70.3846, 0.55", "8.61072, 2.77454, -75.6196, 0.28", "8.23011, 2.96514, -76.514, 1.11", "5.63048, 4.14739, -82.541, 0.28", "4.91608, 4.43328, -84.1543, 0.83", "1.57618, 5.56729, -91.4277, 0.83", "0.218406, 6.00103, -94.5691, 0.28", "-0.231441, 6.14756, -95.729, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "1.36112, -14.6746, -20.7145, 1.11", "2.79803, -19.9374, -21.5939, 1.11", "4.21797, -25.1381, -22.4629, 1.11", "5.01885, -28.0714, -22.953, 1.11", "6.14584, -32.1991, -23.6428, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.36112, -14.6746, -20.7145, 1.11", "-0.135856, -16.1412, -28.6422, 1.11" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-56.0113, -17.0325, 36.7246, 0.55", "-65.7607, -20.6258, 43.5971, 0.55", "-74.4683, -24.4198, 51.6249, 0.55", "-82.372, -29.6812, 59.5542, 0.55", "-89.1777, -33.0092, 69.4038, 0.55", "-97.692, -35.7857, 78.0714, 0.55", "-104.732, -36.17, 88.3952, 0.55", "-111.061, -36.3446, 99.1749, 0.55", "-115.986, -34.44, 110.522, 0.55", "-120.583, -34.2389, 122.144, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-56.0113, -17.0325, 36.7246, 0.28", "-65.5716, -20.677, 43.2009, 0.55", "-76.1583, -22.7664, 48.7599, 0.55", "-87.0533, -24.2567, 53.9207, 0.55", "-97.4784, -26.6221, 59.6618, 0.55", "-108.409, -29.903, 63.6626, 0.55", "-119.715, -32.5039, 67.1288, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-15.7864, 5.57546, -11.8535, 1.11", "-22.2032, 4.01267, -24.3797, 1.11", "-24.1193, 3.54602, -28.1201, 1.66", "-26.5287, 2.95922, -32.8235, 1.11" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-15.7864, 5.57546, -11.8535, 0.83", "-17.7932, 8.34435, -18.9693, 0.83", "-18.7207, 9.79735, -22.4121, 0.83", "-20.7966, 13.2069, -30.1589, 0.83", "-22.5091, 16.162, -36.5687, 0.83", "-23.4782, 17.8049, -40.0591, 0.83", "-24.901, 20.2311, -45.0501, 0.83", "-26.2565, 22.6571, -49.6768, 0.55", "-27.0098, 24.0917, -52.1373, 1.39", "-28.0476, 26.0211, -55.1274, 0.55", "-28.5163, 26.8381, -56.3251, 0.83", "-29.7803, 29.0766, -59.8431, 0.28", "-30.2985, 30.0012, -61.3558, 0.83", "-31.8318, 32.9106, -66.2443, 0.28", "-32.1105, 33.5247, -67.3383, 0.83", "-33.0444, 35.7922, -71.6034, 0.83", "-34.6326, 39.9397, -79.8636, 0.28", "-34.8416, 40.5562, -81.1479, 0.83", "-35.5292, 42.7525, -85.8292, 0.28", "-36.4892, 45.5258, -92.0407, 0.28", "-36.6778, 46.0347, -93.2107, 0.83", "-37.0597, 46.9878, -95.3944, 0.83", "-38.808, 50.5782, -104.011, 0.28", "-38.9591, 50.8488, -104.696, 0.55", "-41.0432, 54.2278, -113.597, 0.28", "-41.5538, 55.0084, -115.643, 0.55", "-42.1411, 55.8998, -117.987, 0.55", "-43.0614, 57.2479, -121.586, 0.28", "-44.1194, 58.5364, -125.416, 0.55", "-45.6208, 60.5188, -131.283, 0.28", "-45.7487, 60.7082, -131.831, 0.55" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-9.26034, 8.21559, 3.5965, 1.11", "-13.8255, 10.9113, 4.1753, 1.11", "-15.3658, 11.8887, 4.42079, 0.83", "-16.8283, 12.9233, 4.81886, 1.66", "-20.5021, 15.7478, 6.06404, 0.83", "-21.8706, 16.8591, 6.55287, 0.83", "-28.397, 22.3995, 9.09097, 0.83", "-30.3925, 24.2239, 9.9435, 0.83", "-34.4957, 28.0266, 11.734, 1.11", "-36.1411, 29.6004, 12.5279, 0.83", "-39.2745, 32.7462, 14.2651, 0.83", "-42.2372, 35.7975, 16.0153, 0.83", "-45.0568, 38.6251, 17.7961, 0.83", "-47.8296, 41.3785, 19.3276, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-9.26034, 8.21559, 3.5965, 0.83", "-10.6436, 11.2647, 8.72764, 0.83", "-12.7183, 15.8381, 16.4238, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "29.2431, -28.5268, 1.14217, 0.55", "39.9268, -39.0557, 1.14217, 0.55", "50.6106, -49.5846, 1.14217, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-67.0031, 101.765, 9.9714, 0.83", "-71.0381, 113.505, 14.1439, 0.83", "-72.782, 125.912, 17.8252, 0.83", "-75.4806, 137.715, 22.8855, 0.83", "-77.1938, 149.254, 29.0008, 0.83", "-77.9677, 161.051, 34.7741, 0.83", "-79.8947, 171.621, 42.5589, 0.83", "-80.4479, 181.53, 51.4753, 0.83", "-81.418, 192.759, 58.3777, 0.83", "-82.1897, 204.693, 63.8222, 0.83", "-81.5384, 217.416, 66.6515, 0.83", "-80.9951, 230.373, 67.4453, 0.83", "-80.7343, 243.341, 67.254, 0.83", "-82.7075, 255.917, 64.9108, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-67.0031, 101.765, 9.9714, 0.83", "-76.2803, 105.098, 6.5713, 0.83" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "16.7092, 19.613, -62.4697, 0.55", "20.5777, 21.864, -62.3919, 0.55", "21.7928, 22.571, -62.3675, 0.83", "23.6124, 23.6298, -62.331, 0.55", "24.9987, 24.4365, -62.3031, 0.83", "28.2773, 26.3442, -62.2372, 0.55", "32.1258, 28.5836, -62.1598, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "16.7092, 19.613, -62.4697, 0.55", "16.7353, 19.6348, -62.8921, 0.55", "16.9091, 19.7806, -65.7108, 0.55", "17.0688, 19.9144, -68.2998, 0.55", "17.08, 19.9239, -68.4817, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "187.965, 54.575, -113.901, 0.28", "193.956, 56.9938, -114.738, 0.28", "197.502, 58.4, -115.2, 0.28", "204.162, 61.0691, -116.0, 0.28", "208.066, 62.6388, -116.238, 0.55", "211.393, 63.9765, -116.441, 0.28", "213.277, 64.734, -116.556, 0.55", "215.847, 65.8192, -116.703, 0.28", "217.801, 66.6414, -116.643, 0.55", "221.52, 68.26, -115.497, 0.28" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "187.965, 54.575, -113.901, 0.28", "189.466, 53.411, -114.115, 0.28", "189.738, 53.2089, -114.101, 0.55", "191.394, 52.0021, -113.845, 0.28", "191.937, 51.6148, -113.732, 0.55", "193.425, 50.6088, -113.533, 0.28", "194.077, 50.2052, -113.451, 0.55", "196.014, 49.2326, -113.196, 0.28", "196.503, 48.9968, -113.126, 0.28", "196.722, 48.9034, -113.09, 0.55", "198.804, 47.9404, -112.621, 0.28", "199.911, 47.3407, -112.225, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "57.4561, 2.35564, -124.95, 0.55", "59.3093, 4.41223, -132.158, 0.55", "60.0203, 5.10334, -134.509, 1.11", "64.53, 9.17876, -148.018, 0.28", "65.3673, 9.89433, -150.35, 0.83", "68.1668, 12.2421, -157.815, 0.28", "68.7402, 12.693, -159.242, 0.83", "70.7649, 14.2132, -163.723, 0.28", "71.1331, 14.4709, -164.461, 0.83", "73.1831, 15.6299, -167.391, 0.28", "73.5543, 15.828, -167.886, 0.55", "76.5404, 17.0947, -171.513, 0.28" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "57.4561, 2.35564, -124.95, 0.28", "60.0844, 1.67349, -126.035, 0.28", "62.1136, 1.09058, -126.833, 0.28", "62.3881, 1.02315, -126.947, 0.55", "63.8354, 0.719126, -127.53, 0.28", "64.2569, 0.658822, -127.705, 0.55", "69.3269, 0.177461, -129.668, 0.28", "70.2999, 0.114536, -130.019, 0.83", "74.9921, -0.177513, -131.76, 0.28", "76.2321, -0.229747, -132.22, 0.55", "81.246, -0.297026, -134.073, 0.28", "84.9018, -0.229794, -135.353, 0.28", "85.8792, -0.145172, -135.643, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.14584, -32.1991, -23.6428, 0.83", "6.80538, -36.7657, -25.3347, 0.83", "7.36329, -39.4625, -26.2227, 0.83", "8.5238, -43.7368, -27.7008, 0.83", "8.72808, -44.3213, -27.9292, 0.83", "10.7092, -49.1725, -30.0168, 0.83", "11.5871, -51.2116, -30.8961, 0.83", "13.074, -54.1915, -32.0488, 0.83", "16.3628, -60.5204, -34.209, 0.83", "19.3672, -66.4506, -35.7027, 0.83", "21.9844, -72.4858, -36.8664, 0.83", "23.0304, -75.3509, -37.2451, 0.83", "24.3674, -79.8292, -37.603, 0.83", "25.1568, -83.5583, -37.6505, 0.83", "25.8673, -90.6729, -37.1803, 0.83", "25.871, -95.7388, -36.6279, 0.83", "25.7052, -98.1457, -36.4593, 0.83", "25.2982, -102.32, -36.5977, 0.83", "24.9307, -105.441, -37.0109, 0.83", "24.5902, -108.582, -37.6455, 0.83", "24.1738, -112.917, -38.7415, 0.55", "23.9918, -117.559, -39.8476, 0.55", "23.957, -121.989, -40.929, 0.55", "24.1005, -125.227, -41.8098, 0.28", "24.1841, -126.486, -42.1828, 0.55", "24.2954, -128.284, -42.7549, 0.28", "24.5004, -133.242, -44.3805, 0.55", "24.526, -134.253, -44.6932, 0.55", "24.5286, -138.347, -46.1504, 0.55", "24.5065, -141.779, -47.6027, 0.55", "24.4908, -143.729, -48.4969, 0.55", "24.4783, -146.011, -49.6194, 0.55", "24.3866, -149.996, -51.6418, 0.55", "24.3477, -151.389, -52.2906, 0.55", "24.2232, -154.516, -53.5999, 0.28", "24.1768, -155.621, -54.0041, 0.55", "24.0334, -159.607, -55.4048, 0.55", "24.0224, -160.834, -55.8957, 0.55", "24.0164, -162.596, -56.5108, 0.83", "24.0114, -165.55, -57.5027, 0.28", "23.9753, -168.217, -58.2456, 0.28", "23.9504, -169.902, -58.7152, 0.55", "23.9593, -173.258, -59.5718, 0.55", "24.0658, -176.642, -60.5154, 0.55", "24.1686, -179.128, -61.2028, 1.11", "24.2194, -182.289, -62.0428, 0.55", "24.188, -184.98, -62.7474, 0.28", "24.1354, -187.052, -63.2343, 0.55", "24.0534, -189.56, -63.641, 0.28", "24.0381, -190.49, -63.7725, 0.55", "24.0029, -193.703, -63.9652, 0.28", "23.9956, -195.312, -64.0634, 0.83", "24.0159, -199.239, -64.1639, 0.28", "24.05, -202.963, -64.2726, 0.83", "24.0903, -205.591, -64.3229, 0.28", "24.1421, -207.658, -64.4344, 0.55", "24.2649, -211.208, -64.7151, 0.55", "24.3392, -214.469, -65.2058, 0.55", "24.3553, -216.889, -65.6961, 0.28", "24.36, -218.162, -66.0297, 0.83", "24.3035, -220.125, -66.5245, 0.28", "24.2621, -220.982, -66.7261, 0.83", "23.9375, -225.03, -67.5562, 0.28", "23.679, -227.91, -68.1288, 0.28", "23.6094, -228.819, -68.3419, 0.83", "23.4808, -231.664, -69.0984, 0.28", "23.4784, -231.949, -69.1906, 0.83", "23.564, -234.436, -70.1455, 0.28", "23.7126, -236.04, -70.8962, 0.83", "24.1196, -239.311, -72.6078, 0.28", "24.4435, -241.19, -73.6388, 0.83", "25.1957, -244.423, -75.4585, 0.28", "25.5503, -246.013, -76.364, 0.55", "26.5198, -250.207, -78.7477, 0.28", "26.5921, -250.526, -78.9262, 0.55", "26.9947, -252.037, -79.6483, 0.28", "27.2993, -253.104, -80.1102, 0.55", "28.0206, -255.266, -80.8362, 0.28", "28.4195, -256.379, -81.1345, 0.28", "28.5789, -256.756, -81.1783, 0.83", "29.4032, -259.092, -81.4304, 0.28", "29.6486, -259.925, -81.4971, 0.28", "29.848, -260.567, -81.5283, 0.55", "30.258, -261.704, -81.5202, 0.28", "30.5259, -262.6, -81.5288, 0.55", "31.2123, -265.281, -81.6537, 0.28", "31.3408, -265.906, -81.7453, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "6.14584, -32.1991, -23.6428, 0.55", "9.81234, -33.6585, -24.6745, 0.55", "13.724, -35.2874, -25.8927, 0.55", "17.1444, -36.5396, -26.9185, 0.55", "20.1063, -37.624, -27.8068, 0.55", "22.3441, -38.4433, -28.4779, 0.28", "25.3335, -39.5377, -29.3744, 0.55", "27.3262, -40.2463, -29.8418, 0.28", "30.3429, -41.4281, -30.607, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.135856, -16.1412, -28.6422, 0.83", "-3.45357, -16.503, -30.6771, 0.83", "-5.80914, -16.7627, -32.3649, 0.83", "-8.50197, -17.0257, -35.0454, 0.83", "-9.86305, -17.1338, -36.5981, 0.55", "-10.8631, -17.2411, -37.8439, 0.28", "-11.5018, -17.3246, -38.6745, 0.83", "-14.0563, -17.753, -42.2582, 0.83", "-17.5242, -18.3493, -47.5881, 0.83", "-18.9709, -18.6065, -49.8972, 0.83", "-20.3546, -18.8777, -52.14, 0.83", "-22.8861, -19.3815, -56.0717, 0.28", "-23.1949, -19.4431, -56.5051, 1.11", "-25.0661, -19.7941, -58.6583, 0.28", "-25.3355, -19.8229, -58.9106, 0.55", "-27.7388, -19.8962, -61.0288, 0.28", "-29.0336, -19.8726, -62.105, 0.83", "-30.8785, -19.8594, -63.6614, 0.55", "-32.7174, -19.871, -65.1984, 0.55", "-37.5732, -19.9546, -69.1716, 0.28", "-38.1583, -19.968, -69.6643, 1.11", "-41.2515, -20.0275, -72.3846, 0.83", "-45.5279, -20.1772, -76.3378, 0.28", "-46.7388, -20.2449, -77.4687, 0.28", "-47.1275, -20.2769, -77.8312, 0.55", "-50.2775, -20.581, -80.7398, 0.28", "-51.8393, -20.7173, -82.0881, 0.55", "-54.7339, -20.9172, -84.4127, 0.28", "-55.0486, -20.9465, -84.6162, 0.55", "-57.5481, -21.2466, -86.011, 0.28", "-58.069, -21.3181, -86.2771, 0.55", "-61.1789, -21.7878, -87.7108, 0.28", "-62.044, -21.9411, -88.0821, 0.83", "-67.8767, -23.0984, -90.4869, 0.28", "-69.1506, -23.3674, -91.0384, 0.55", "-74.2872, -24.5177, -93.3583, 0.28", "-75.5612, -24.8216, -94.054, 1.11", "-82.3931, -26.5169, -98.1139, 0.28", "-83.6694, -26.8628, -99.0015, 0.83", "-85.8612, -27.5442, -100.677, 0.28", "-87.0651, -27.9404, -101.538, 0.83", "-93.9742, -30.31, -106.08, 0.28", "-96.0349, -31.0021, -107.276, 1.11", "-102.383, -33.0283, -110.502, 0.28", "-104.178, -33.594, -111.223, 0.83", "-109.747, -35.3867, -112.6, 0.28", "-110.447, -35.6066, -112.666, 0.83", "-114.035, -36.7058, -111.822, 0.28", "-114.772, -36.9163, -111.559, 0.55", "-117.043, -37.4519, -110.151, 0.28", "-117.899, -37.6597, -109.796, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-0.135856, -16.1412, -28.6422, 0.55", "-0.223136, -16.4869, -30.957, 0.55", "-0.624907, -17.8085, -38.1578, 0.55", "-1.18576, -19.4507, -45.8506, 0.55", "-1.54649, -20.4662, -50.1751, 0.55", "-1.83764, -21.1763, -53.082, 0.55", "-2.03959, -21.6369, -54.9068, 0.55", "-2.47295, -22.6061, -58.5653, 0.55", "-2.71852, -23.1167, -60.0162, 0.28", "-3.03014, -23.7338, -61.5225, 0.83", "-3.64898, -24.9925, -64.6192, 0.83", "-4.42723, -26.8575, -69.3701, 0.28", "-4.49705, -27.0428, -69.8526, 0.83", "-4.78104, -28.0813, -72.417, 0.28", "-4.8441, -28.4104, -73.1861, 0.55", "-5.05227, -29.9749, -76.4152, 0.28", "-5.06337, -30.2005, -76.8174, 0.83", "-5.11344, -31.1333, -78.4277, 0.28", "-5.22829, -31.9344, -79.8876, 0.55", "-5.55203, -33.2312, -82.2518, 0.28", "-5.67967, -33.5226, -82.8401, 0.83", "-6.41243, -34.8883, -85.6427, 0.28", "-7.0205, -35.8506, -87.8271, 0.55", "-7.89335, -37.1351, -90.8879, 0.28", "-8.18617, -37.6134, -92.0738, 0.28", "-9.74493, -40.4611, -99.4869, 0.28", "-9.88076, -40.7356, -100.269, 0.55", "-10.7054, -42.8091, -106.109, 0.28", "-10.86, -43.335, -107.571, 0.55", "-11.2692, -45.4656, -113.476, 0.28", "-11.3523, -46.2512, -115.598, 0.55", "-11.4501, -48.6435, -121.422, 0.55", "-11.4323, -50.5786, -125.839, 0.28", "-11.3943, -51.063, -126.808, 0.55", "-11.3037, -52.0897, -128.67, 0.28", "-11.2391, -52.6657, -129.538, 0.55", "-10.6919, -55.5234, -133.199, 0.28", "-10.3839, -56.537, -134.219, 0.55", "-9.67187, -58.5324, -136.084, 0.28", "-9.2291, -59.7439, -136.956, 0.55", "-8.39847, -61.9065, -138.378, 0.28", "-8.02103, -62.8382, -138.952, 0.55", "-7.24841, -64.544, -139.844, 0.55", "-5.62262, -68.5134, -141.749, 0.28", "-3.57159, -73.5467, -143.444, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-26.5287, 2.95922, -32.8235, 0.83", "-28.7454, 1.6017, -34.8467, 0.83", "-29.8949, 0.842101, -35.7751, 0.83", "-34.5931, -2.21853, -39.202, 0.83", "-35.8119, -2.99799, -40.0101, 0.55", "-36.7173, -3.53738, -40.5326, 1.11", "-39.9042, -5.41235, -42.279, 0.55", "-43.0952, -7.30156, -43.772, 0.83", "-44.3633, -8.02224, -44.2755, 0.28", "-45.9614, -8.85739, -44.7305, 0.55", "-49.0856, -10.3362, -45.476, 0.55", "-51.8488, -11.5452, -46.0069, 0.28", "-53.8118, -12.3017, -46.3178, 0.83", "-56.1014, -13.0813, -46.6617, 0.55", "-58.686, -13.9643, -47.0133, 0.55", "-61.3235, -14.8127, -47.4224, 0.55", "-63.0841, -15.365, -47.7106, 0.55", "-65.1036, -15.9612, -48.0237, 0.28", "-65.8103, -16.1873, -48.1778, 0.28", "-69.2595, -17.4046, -49.0918, 0.55", "-72.0882, -18.4618, -49.9071, 0.55", "-73.5167, -19.0101, -50.3562, 0.55", "-75.4265, -19.7577, -50.9268, 0.83", "-78.865, -21.1516, -51.98, 0.55", "-81.1862, -22.0424, -52.7443, 0.55", "-83.789, -22.9378, -53.7308, 0.83", "-85.7448, -23.5319, -54.5412, 0.55", "-88.8702, -24.4381, -56.0683, 0.55", "-90.8491, -25.015, -57.1385, 0.55", "-93.5947, -25.7918, -58.9361, 0.55", "-96.1555, -26.5092, -60.8474, 0.28", "-99.2439, -27.2822, -63.5457, 0.55", "-101.742, -27.8219, -65.8673, 0.28", "-103.03, -28.0306, -67.2144, 0.83", "-107.139, -28.4493, -71.7763, 0.28", "-108.161, -28.52, -72.9289, 0.55", "-111.53, -28.5113, -76.6497, 0.28", "-113.176, -28.3702, -78.4472, 0.28", "-116.013, -27.8069, -81.3484, 0.55", "-117.503, -27.4361, -82.7567, 0.28", "-120.428, -26.6072, -85.2377, 0.83", "-124.644, -25.3633, -88.7222, 0.28", "-125.099, -25.2331, -89.0609, 0.55", "-127.551, -24.5439, -90.9292, 0.28", "-128.692, -24.2406, -91.7115, 0.55", "-131.465, -23.4488, -93.8158, 0.28", "-131.89, -23.3056, -94.2062, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-26.5287, 2.95922, -32.8235, 0.83", "-31.6373, 2.79613, -37.6966, 0.83", "-33.9181, 2.72331, -39.8723, 0.55", "-36.0164, 2.65632, -41.8739, 0.55", "-38.4019, 2.58016, -44.1495, 0.55", "-40.477, 2.51391, -46.1289, 0.83", "-43.1558, 2.42839, -48.6843, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-47.8296, 41.3785, 19.3276, 0.83", "-49.5146, 43.3756, 19.7266, 0.83", "-50.4409, 44.4538, 19.9964, 1.11", "-51.4885, 45.6468, 20.4124, 0.55", "-53.0487, 47.389, 21.097, 0.83", "-54.5144, 48.9888, 21.7756, 0.83", "-55.7268, 50.2697, 22.4367, 0.28", "-56.7998, 51.2916, 23.0766, 0.83", "-58.2421, 52.6439, 24.0541, 0.28", "-58.4702, 52.8765, 24.1792, 0.55", "-59.7132, 54.257, 24.5627, 0.28", "-61.4149, 56.0547, 24.2492, 0.83", "-62.7709, 57.502, 23.2808, 0.83", "-64.4703, 59.3117, 21.492, 0.55", "-67.4508, 62.7172, 16.7557, 0.28", "-68.3899, 63.865, 14.8625, 0.83", "-70.1399, 66.165, 10.534, 0.28", "-70.6351, 66.8334, 9.06803, 0.55", "-71.0622, 67.4131, 7.57787, 0.83", "-72.1966, 68.907, 3.30558, 0.28", "-72.704, 69.6013, 1.36598, 0.28", "-72.8855, 69.8876, 0.551791, 0.83", "-73.7277, 71.3391, -3.28395, 0.55", "-74.5658, 72.7079, -7.00496, 0.28", "-74.7175, 72.9483, -7.67954, 0.55", "-75.7449, 74.4753, -11.7739, 0.28", "-76.1916, 75.0785, -13.4297, 0.55", "-76.8952, 75.9464, -15.6492, 0.28", "-77.1541, 76.2376, -16.3033, 0.83", "-78.6277, 77.7903, -19.4663, 0.28", "-78.9606, 78.118, -20.1039, 0.83", "-81.0708, 80.1342, -23.972, 0.28", "-81.939, 80.9598, -25.5075, 0.28", "-82.4931, 81.4776, -26.4784, 0.83", "-86.7084, 85.3364, -33.7395, 0.28", "-87.1935, 85.7689, -34.5669, 0.83", "-90.1261, 88.4459, -39.8723, 0.28", "-90.6908, 89.0122, -41.0072, 0.28", "-91.3021, 89.6567, -42.3475, 0.28", "-91.6297, 90.0081, -43.087, 0.55", "-92.8863, 91.2783, -45.7572, 0.28", "-93.443, 91.879, -47.0138, 0.55", "-95.4522, 94.2054, -51.5726, 0.28", "-96.1425, 95.072, -53.3054, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-47.8296, 41.3785, 19.3276, 0.55", "-49.6233, 41.2499, 22.3269, 0.55", "-50.3813, 41.2191, 23.7154, 0.55", "-51.843, 41.1082, 26.2097, 0.28", "-52.1276, 41.0841, 26.6595, 0.28", "-53.5745, 41.0196, 29.0041, 0.55", "-54.3667, 40.9843, 30.2877, 0.83", "-57.0149, 40.8344, 34.3471, 0.55", "-57.9121, 40.8134, 35.746, 0.83", "-58.5103, 40.7707, 36.638, 0.55", "-59.8412, 40.7452, 38.7071, 0.55", "-64.8111, 41.3724, 45.6362, 0.55", "-69.0517, 41.3698, 53.0571, 0.55", "-71.4243, 40.4519, 61.1979, 0.55", "-74.5303, 38.7754, 68.9427, 0.55", "-78.4643, 35.2034, 75.501, 0.55", "-82.3852, 30.2975, 81.0318, 0.55", "-85.8137, 25.3496, 86.8342, 0.55", "-89.8661, 21.0868, 92.8402, 0.55", "-94.1151, 16.048, 97.9896, 0.55", "-97.4305, 11.7413, 104.391, 0.55", "-100.345, 7.34474, 110.914, 0.55", "-103.606, 3.58782, 117.716, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.7183, 15.8381, 16.4238, 0.83", "-12.8685, 18.5817, 15.6359, 0.83", "-13.1484, 23.6915, 14.1685, 0.83", "-13.529, 30.6397, 12.1732, 0.83", "-13.8718, 36.8987, 10.3757, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-12.7183, 15.8381, 16.4238, 0.83", "-13.0966, 15.7411, 20.9142, 0.83", "-13.3056, 15.6875, 23.3946, 0.83", "-13.5755, 15.6183, 26.5977, 0.83", "-13.8014, 15.5604, 29.2789, 0.83", "-14.0702, 15.4914, 32.4702, 0.55", "-13.6714, 16.171, 39.9029, 0.55", "-13.5657, 15.9969, 47.3698, 0.55", "-13.6938, 14.9156, 54.746, 0.55", "-12.6749, 13.4491, 61.9649, 0.55", "-10.1787, 11.3048, 68.5865, 0.55", "-8.57676, 9.90829, 75.7093, 0.55", "-5.85327, 9.4211, 82.6265, 0.55", "-4.14583, 8.32333, 89.7856, 0.55", "-3.15959, 7.18737, 97.0784, 0.55", "-1.16625, 4.71471, 103.746, 0.55", "-0.421644, 2.51577, 110.787, 0.55", "-1.70646, 0.5331, 117.846, 0.55", "-2.15846, -1.34441, 125.029, 0.55", "-2.99253, -1.9782, 132.423, 0.55", "-3.80041, -2.38936, 139.838, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "32.1258, 28.5836, -62.1598, 0.55", "37.7428, 31.3232, -60.3345, 0.55", "41.4208, 33.0341, -59.1365, 0.55", "45.6802, 34.9257, -57.7773, 0.55", "48.1495, 35.9886, -57.0123, 0.55", "52.4502, 37.7501, -55.6449, 0.55", "54.9803, 38.7567, -54.8431, 0.28", "56.5229, 39.2905, -54.352, 0.55", "58.3886, 39.9389, -53.7701, 0.28", "59.4023, 40.336, -53.4752, 0.55", "61.8357, 41.44, -52.717, 0.28", "63.2466, 42.2308, -52.1785, 0.55", "66.5752, 44.3783, -50.6569, 0.55", "68.3444, 45.7023, -49.6996, 0.55", "70.3506, 47.527, -48.389, 0.28", "71.6831, 48.9731, -47.3939, 0.55", "73.3441, 51.3152, -45.8662, 0.28", "73.6112, 51.791, -45.5507, 0.28", "74.1287, 53.0051, -44.7389, 0.83", "74.8169, 54.8625, -43.4682, 0.28", "75.1952, 55.9979, -42.7877, 0.83", "75.8249, 58.3209, -41.6383, 0.28", "75.9827, 59.0254, -41.3654, 0.28", "76.192, 60.0327, -40.9775, 0.83" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "32.1258, 28.5836, -62.1598, 0.55", "34.3531, 29.9189, -64.6572, 0.55", "34.776, 30.158, -65.0624, 0.83", "37.2014, 31.4362, -66.8452, 0.55", "38.9771, 32.3055, -67.8858, 0.28", "40.3156, 32.9606, -68.6702, 0.55", "41.7121, 33.6442, -69.4886, 0.28", "43.8632, 34.6671, -70.354, 0.55", "46.1652, 35.7035, -71.1424, 0.28", "47.4827, 36.2477, -71.3643, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-43.1558, 2.42839, -48.6843, 0.83", "-46.229, 4.97579, -57.1231, 0.83", "-48.2778, 6.65652, -62.4715, 0.83", "-49.7116, 7.89893, -66.3424, 0.28", "-51.1626, 9.2368, -70.1978, 0.83", "-52.5246, 10.5071, -73.6576, 0.83", "-54.6424, 12.7285, -79.3551, 0.28", "-55.3068, 13.5165, -81.1031, 0.55", "-57.7401, 16.8014, -87.4816, 1.39", "-58.4788, 17.8521, -89.3512, 0.28", "-58.9934, 18.6474, -90.6421, 0.83", "-62.5399, 24.5628, -99.1261, 0.28", "-63.185, 25.741, -100.528, 0.55", "-64.0193, 27.1927, -102.023, 0.28", "-64.3247, 27.6891, -102.428, 0.55", "-65.9925, 30.367, -104.391, 0.28", "-66.9651, 31.9065, -105.2, 1.11", "-68.5258, 34.0997, -105.979, 0.55", "-69.7386, 35.7774, -106.851, 0.28", "-70.1022, 36.2201, -107.136, 0.83", "-71.0298, 37.2385, -107.912, 0.28", "-71.622, 37.857, -108.428, 0.83", "-75.8363, 42.3485, -112.878, 0.28", "-76.4593, 42.9593, -113.639, 0.55", "-77.8866, 44.2999, -115.515, 0.28", "-78.7001, 44.9812, -116.583, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-43.1558, 2.42839, -48.6843, 0.55", "-46.0095, 1.70928, -50.8867, 0.55", "-47.375, 1.31137, -51.9621, 0.55", "-50.4689, 0.259793, -54.5861, 0.55", "-51.4796, -0.102026, -55.4791, 0.55", "-52.8676, -0.621397, -56.8408, 0.55", "-55.2054, -1.49547, -59.2227, 0.55", "-58.129, -2.58612, -62.4047, 0.55", "-61.0933, -3.73545, -65.8466, 0.28", "-63.2648, -4.56814, -68.4897, 0.83", "-66.8484, -5.95224, -73.2312, 0.55", "-68.8162, -6.74259, -76.191, 0.55", "-70.76, -7.55514, -79.5329, 0.55", "-72.441, -8.28879, -82.4325, 0.28", "-73.3055, -8.69233, -84.0773, 1.39", "-76.4467, -10.2097, -90.4679, 0.55", "-78.5033, -11.2249, -94.8319, 0.28", "-79.253, -11.5948, -96.4394, 0.83", "-81.5561, -12.6953, -101.166, 0.28", "-85.4094, -14.4488, -108.818, 0.55", "-88.2907, -15.744, -114.164, 0.28", "-89.2708, -16.1247, -115.695, 0.55", "-92.0069, -17.0688, -119.561, 0.28", "-92.7047, -17.285, -120.506, 0.55", "-94.4692, -17.7685, -122.882, 0.28", "-95.8962, -18.1524, -124.498, 0.55", "-100.068, -19.2811, -129.084, 0.28", "-101.308, -19.6006, -130.438, 0.55", "-105.658, -20.6274, -135.269, 0.28", "-108.125, -21.1577, -138.067, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-96.1425, 95.072, -53.3054, 0.28", "-97.0597, 95.4123, -54.8591, 0.28", "-99.4615, 96.4334, -58.9022, 0.28", "-100.286, 96.859, -60.311, 0.55", "-103.054, 98.4423, -65.3081, 0.28", "-103.876, 98.9124, -66.7921, 0.83", "-106.333, 100.318, -71.2278, 0.28", "-106.743, 100.585, -72.0099, 0.55", "-108.831, 102.111, -75.9932, 0.28", "-110.186, 103.28, -78.7221, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-96.1425, 95.072, -53.3054, 0.28", "-96.6367, 101.595, -59.3919, 0.28", "-96.6875, 102.324, -60.0569, 0.55", "-96.9831, 106.705, -63.9337, 0.28", "-97.0042, 107.464, -64.4276, 0.55", "-97.0251, 110.184, -65.8879, 0.28", "-97.0271, 112.121, -66.8037, 0.83", "-97.0011, 116.079, -68.0228, 0.28", "-96.9867, 116.686, -68.1865, 0.55", "-96.5894, 125.109, -69.973, 0.28", "-96.5326, 126.16, -70.1472, 0.55", "-96.3805, 128.759, -70.3249, 0.28", "-96.2882, 130.11, -70.3079, 0.83" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-13.8718, 36.8987, 10.3757, 0.55", "-13.5611, 37.8964, 11.3102, 0.55", "-12.9364, 39.8151, 13.1155, 0.55", "-12.4775, 41.2068, 14.4102, 0.55", "-11.5664, 43.7294, 16.7113, 0.55", "-11.1095, 44.9462, 17.7841, 0.28", "-10.9032, 45.4652, 18.2046, 0.55", "-10.6178, 46.1837, 18.7988, 0.28", "-10.4819, 46.4999, 19.0671, 0.55", "-10.0164, 47.3767, 19.7941, 0.28", "-9.63813, 47.9947, 20.2842, 0.55", "-8.37845, 49.8652, 21.8898, 0.28", "-7.2927, 51.3033, 23.1261, 0.28", "-6.86674, 51.852, 23.6229, 0.83", "-5.63583, 53.3739, 25.0765, 0.55", "-4.815, 54.3403, 26.071, 0.28", "-4.70649, 54.4494, 26.1965, 0.55", "-2.77352, 55.91, 28.2195, 0.28", "-0.661512, 59.9737, 33.6339, 0.28", "2.23341, 63.549, 39.0732, 0.28", "5.34609, 66.1701, 44.9865, 0.28", "8.39575, 68.4583, 51.088, 0.28", "10.1381, 71.2731, 57.4435, 0.28", "12.8169, 74.1854, 63.4125, 0.28", "15.0729, 78.0634, 68.9199, 0.28", "16.9528, 82.0003, 74.5206, 0.28", "18.3152, 84.8894, 80.9309, 0.28", "18.4491, 87.6317, 87.5573, 0.28" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.8718, 36.8987, 10.3757, 0.55", "-15.3642, 42.858, 13.5277, 0.55", "-16.2746, 45.7428, 15.159, 0.55", "-17.1592, 48.0331, 16.5368, 0.55", "-17.7775, 49.4835, 17.4096, 0.55", "-20.0965, 54.6611, 20.4356, 0.55", "-20.9062, 56.5517, 21.5125, 0.55", "-21.7877, 58.3175, 22.6734, 0.83", "-22.9347, 60.4443, 24.1595, 0.83", "-23.8092, 62.1343, 25.3777, 0.83", "-24.5719, 63.6371, 26.4252, 0.55", "-26.3664, 67.75, 28.9883, 0.55", "-27.4309, 70.4836, 30.7187, 0.55", "-28.0645, 72.2601, 31.928, 0.55", "-28.7491, 74.4593, 33.5011, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-28.7491, 74.4593, 33.5011, 0.55", "-31.9895, 78.0342, 33.4411, 0.55", "-34.3928, 80.6443, 33.4532, 0.55", "-35.8813, 82.3556, 33.5033, 0.28", "-37.2558, 83.9829, 33.5713, 0.55", "-38.2434, 85.2138, 33.5475, 0.55", "-39.1828, 86.4099, 33.4821, 0.28", "-39.8215, 87.2456, 33.4532, 0.55", "-41.2256, 89.1449, 33.3864, 0.28", "-41.5798, 89.6842, 33.3058, 0.55", "-43.074, 92.2639, 32.7961, 0.28", "-43.5623, 93.1732, 32.546, 0.55", "-51.3937, 100.382, 32.911, 0.55", "-58.877, 107.934, 32.7753, 0.55", "-64.4996, 116.747, 33.8398, 0.55", "-70.384, 125.425, 32.6095, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.7491, 74.4593, 33.5011, 0.28", "-29.0062, 76.1603, 37.2007, 0.28", "-29.1001, 76.782, 38.5529, 0.55", "-29.1944, 77.4054, 39.9087, 0.55", "-29.499, 79.4212, 44.2929, 0.28", "-29.7552, 81.116, 47.9791, 0.55", "-29.0425, 85.3493, 60.4019, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-70.384, 125.425, 32.6095, 0.55", "-76.065, 131.72, 32.3026, 0.55", "-81.4023, 138.249, 32.7683, 0.55", "-86.483, 144.929, 33.509, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-70.384, 125.425, 32.6095, 0.28", "-74.7744, 133.566, 31.8987, 0.55", "-79.0031, 141.468, 29.2219, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_38", "dend_37", "dend_32", "dend_25", "dend_22", "dend_15", "dend_0", "dend_49", "dend_44", "dend_40", "dend_39", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_17", "dend_16", "dend_10", "dend_1", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_48", "dend_47", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_4", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_38", "dend_37", "dend_32", "dend_25", "dend_22", "dend_15", "dend_0", "dend_49", "dend_44", "dend_40", "dend_39", "dend_34", "dend_33", "dend_29", "dend_26", "dend_24", "dend_23", "dend_17", "dend_16", "dend_10", "dend_1", "dend_51", "dend_50", "dend_46", "dend_45", "dend_42", "dend_41", "dend_36", "dend_35", "dend_31", "dend_30", "dend_28", "dend_27", "dend_21", "dend_18", "dend_12", "dend_11", "dend_3", "dend_2", "dend_48", "dend_47", "dend_20", "dend_19", "dend_14", "dend_13", "dend_9", "dend_4", "dend_6", "dend_5", "dend_8", "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_15", "dend_0", "axon_0", "axon_0", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "axon_1", "axon_1", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_NBC_9d37c4b1f8_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_49, id: dend_49, parent: dend_43
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_30
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.49999992974454743)
    connect dend_38(0), soma_0(0.49999992974454743)
    connect dend_37(0), soma_0(0.49999992974454743)
    connect dend_32(0), soma_0(0.49999992974454743)
    connect dend_25(0), soma_0(0.49999992974454743)
    connect dend_22(0), soma_0(0.49999992974454743)
    connect dend_15(0), soma_0(0.49999992974454743)
    connect dend_0(0), soma_0(0.49999992974454743)
    connect axon_0(0), soma_0(1.0)
    connect dend_49(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -7.11709, 7.30639, -0.967776, 2.36862 ) }
    soma_0 { pt3dadd( -6.36745, 6.56762, -0.862279, 4.05465 ) }
    soma_0 { pt3dadd( -5.61782, 5.82885, -0.756782, 6.37159 ) }
    soma_0 { pt3dadd( -4.86818, 5.09008, -0.651285, 7.6682 ) }
    soma_0 { pt3dadd( -4.11855, 4.35131, -0.545788, 8.31963 ) }
    soma_0 { pt3dadd( -3.36891, 3.61254, -0.440291, 8.63962 ) }
    soma_0 { pt3dadd( -2.61928, 2.87377, -0.334794, 8.75226 ) }
    soma_0 { pt3dadd( -1.86965, 2.135, -0.229297, 8.73568 ) }
    soma_0 { pt3dadd( -1.12001, 1.39623, -0.1238, 8.76537 ) }
    soma_0 { pt3dadd( -0.370378, 0.657463, -0.0183025, 8.79506 ) }
    soma_0 { pt3dadd( 0.379256, -0.0813072, 0.0871946, 8.85046 ) }
    soma_0 { pt3dadd( 1.12889, -0.820077, 0.192692, 9.12539 ) }
    soma_0 { pt3dadd( 1.87852, -1.55885, 0.298189, 9.37848 ) }
    soma_0 { pt3dadd( 2.62816, -2.29762, 0.403686, 9.54524 ) }
    soma_0 { pt3dadd( 3.37779, -3.03639, 0.509183, 9.52778 ) }
    soma_0 { pt3dadd( 4.12743, -3.77516, 0.61468, 9.63906 ) }
    soma_0 { pt3dadd( 4.87706, -4.51393, 0.720177, 9.78204 ) }
    soma_0 { pt3dadd( 5.6267, -5.2527, 0.825674, 9.68621 ) }
    soma_0 { pt3dadd( 6.37633, -5.99147, 0.931171, 8.82442 ) }
    soma_0 { pt3dadd( 7.12596, -6.73024, 1.03667, 6.80231 ) }
    soma_0 { pt3dadd( 7.8756, -7.46901, 1.14217, 3.72742 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -2.66963, 7.55971, -5.40351, 1.39 ) }
    dend_43 { pt3dadd( -3.84648, 11.1211, -6.61756, 1.11 ) }
    dend_43 { pt3dadd( -4.87191, 14.2242, -7.67539, 1.11 ) }
    dend_43 { pt3dadd( -5.16247, 15.1035, -7.97513, 1.39 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 25/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -0.0996272, 5.89721, 2.21649, 1.39 ) }
    dend_38 { pt3dadd( 0.935077, 7.41549, 2.45432, 1.39 ) }
    dend_38 { pt3dadd( 3.38777, 10.5251, 2.47081, 1.11 ) }
    dend_38 { pt3dadd( 7.15283, 14.8871, 2.10979, 1.11 ) }
    dend_38 { pt3dadd( 13.0726, 21.1095, 0.924127, 1.11 ) }
    dend_38 { pt3dadd( 16.0405, 23.9195, 0.311664, 1.11 ) }
    dend_38 { pt3dadd( 20.1482, 27.4958, -0.598452, 1.11 ) }
    dend_38 { pt3dadd( 22.649, 29.4224, -1.38174, 1.11 ) }
    dend_38 { pt3dadd( 24.5308, 30.7516, -2.46523, 1.11 ) }
    dend_38 { pt3dadd( 27.2655, 32.5443, -4.80379, 1.11 ) }
    dend_38 { pt3dadd( 29.0434, 33.8106, -6.89373, 1.11 ) }
    dend_38 { pt3dadd( 30.6766, 35.058, -9.01558, 0.83 ) }
    dend_38 { pt3dadd( 33.6754, 37.4419, -12.9061, 0.83 ) }
    dend_38 { pt3dadd( 38.5142, 41.3163, -19.7316, 0.83 ) }
    dend_38 { pt3dadd( 40.9801, 43.3521, -23.5683, 0.83 ) }
    dend_38 { pt3dadd( 42.4997, 44.6933, -26.206, 0.83 ) }
    dend_38 { pt3dadd( 44.4786, 46.5539, -30.0346, 0.83 ) }
    dend_38 { pt3dadd( 45.6404, 47.6198, -32.3367, 1.39 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 43/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 7.99037, -3.45079, -7.17351, 0.83 ) }
    dend_37 { pt3dadd( 10.9008, -3.44282, -7.73801, 0.83 ) }
    dend_37 { pt3dadd( 12.9525, -3.47632, -8.12893, 0.55 ) }
    dend_37 { pt3dadd( 14.1032, -3.50022, -8.33414, 0.55 ) }
    dend_37 { pt3dadd( 16.9989, -3.56928, -8.74428, 0.55 ) }
    dend_37 { pt3dadd( 21.8657, -3.70796, -9.45313, 0.55 ) }
    dend_37 { pt3dadd( 26.8322, -3.8906, -10.0927, 0.55 ) }
    dend_37 { pt3dadd( 30.974, -4.0966, -10.528, 0.55 ) }
    dend_37 { pt3dadd( 33.0682, -4.22054, -10.6517, 0.28 ) }
    dend_37 { pt3dadd( 34.9648, -4.31482, -10.6987, 0.55 ) }
    dend_37 { pt3dadd( 38.0541, -4.41036, -10.6457, 0.55 ) }
    dend_37 { pt3dadd( 40.5472, -4.29988, -10.5323, 0.55 ) }
    dend_37 { pt3dadd( 43.0827, -4.13386, -10.3413, 0.28 ) }
    dend_37 { pt3dadd( 45.5051, -3.85903, -10.0612, 0.83 ) }
    dend_37 { pt3dadd( 48.4132, -3.42061, -9.70347, 0.28 ) }
    dend_37 { pt3dadd( 50.8336, -3.00312, -9.39714, 0.55 ) }
    dend_37 { pt3dadd( 53.2572, -2.52965, -8.96982, 0.55 ) }
    dend_37 { pt3dadd( 54.9629, -2.17767, -8.71864, 0.55 ) }
    dend_37 { pt3dadd( 58.2369, -1.49672, -8.25877, 0.55 ) }
    dend_37 { pt3dadd( 59.5623, -1.21432, -8.08279, 0.55 ) }
    dend_37 { pt3dadd( 61.5202, -0.803417, -7.78571, 0.55 ) }
    dend_37 { pt3dadd( 64.4981, -0.253549, -7.29313, 0.55 ) }
    dend_37 { pt3dadd( 67.5003, 0.244541, -6.78471, 0.55 ) }
    dend_37 { pt3dadd( 68.8683, 0.492221, -6.59461, 0.55 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 67/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 6.35038, -5.83529, -16.6335, 1.11 ) }
    dend_32 { pt3dadd( 7.07104, -5.73201, -19.2489, 1.11 ) }
    dend_32 { pt3dadd( 9.66404, -5.36043, -28.6594, 1.11 ) }
    dend_32 { pt3dadd( 11.7217, -5.06554, -36.1273, 1.11 ) }
    dend_32 { pt3dadd( 13.1733, -4.85753, -41.3953, 1.11 ) }
    dend_32 { pt3dadd( 13.8172, -4.76524, -43.7324, 1.11 ) }
    dend_32 { pt3dadd( 15.6912, -4.4967, -50.5334, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 74/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.70037, -8.44779, -13.7535, 1.94 ) }
    dend_25 { pt3dadd( 2.3998, -9.8453, -15.3158, 1.94 ) }
    dend_25 { pt3dadd( 1.82701, -12.5084, -18.2929, 1.94 ) }
    dend_25 { pt3dadd( 1.36112, -14.6746, -20.7145, 1.94 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 78/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -5.82962, 1.85971, 1.87649, 1.11 ) }
    dend_22 { pt3dadd( -7.69206, 1.43052, 2.47023, 1.11 ) }
    dend_22 { pt3dadd( -9.6947, 0.902564, 3.18696, 0.83 ) }
    dend_22 { pt3dadd( -11.006, 0.487794, 3.65585, 0.83 ) }
    dend_22 { pt3dadd( -14.5266, -0.606527, 5.03519, 0.83 ) }
    dend_22 { pt3dadd( -16.5994, -1.19378, 5.95713, 0.83 ) }
    dend_22 { pt3dadd( -20.65, -2.31276, 7.95939, 0.83 ) }
    dend_22 { pt3dadd( -22.4109, -2.78295, 8.95449, 0.55 ) }
    dend_22 { pt3dadd( -24.3055, -3.16367, 10.1974, 0.55 ) }
    dend_22 { pt3dadd( -27.7204, -3.65714, 12.7251, 0.55 ) }
    dend_22 { pt3dadd( -29.7595, -3.94994, 14.4416, 0.55 ) }
    dend_22 { pt3dadd( -32.2202, -4.33141, 16.5287, 0.55 ) }
    dend_22 { pt3dadd( -35.1972, -4.81704, 19.0423, 0.55 ) }
    dend_22 { pt3dadd( -38.9336, -5.5859, 22.2364, 0.55 ) }
    dend_22 { pt3dadd( -42.053, -6.39819, 24.9185, 0.55 ) }
    dend_22 { pt3dadd( -44.3083, -7.27493, 26.8894, 0.55 ) }
    dend_22 { pt3dadd( -46.454, -8.43078, 28.768, 0.55 ) }
    dend_22 { pt3dadd( -47.9867, -9.48554, 30.1191, 0.55 ) }
    dend_22 { pt3dadd( -48.7955, -10.4666, 30.8448, 0.28 ) }
    dend_22 { pt3dadd( -49.0685, -11.1534, 31.0354, 0.55 ) }
    dend_22 { pt3dadd( -49.3329, -13.4983, 31.0946, 0.28 ) }
    dend_22 { pt3dadd( -49.1022, -14.7015, 31.0557, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_22 { pt3dadd( -56.0113, -17.0325, 36.7246, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.72962, 4.99471, -11.8535, 1.66 ) }
    dend_15 { pt3dadd( -15.7864, 5.57546, -11.8535, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 3/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -6.49962, 6.75221, 3.5965, 1.94 ) }
    dend_0 { pt3dadd( -9.26034, 8.21559, 3.5965, 1.66 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 5/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.8756, -7.46901, 1.14217, 0.620172 ) }
    axon_0 { pt3dadd( 18.5593, -17.9979, 1.14217, 0.620172 ) }
    axon_0 { pt3dadd( 29.2431, -28.5268, 1.14217, 0.620172 ) }
    // Section: dend_49, id: dend_49, parent: dend_43 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.16247, 15.1035, -7.97513, 0.83 ) }
    dend_49 { pt3dadd( -5.79641, 17.2956, -8.54284, 0.83 ) }
    dend_49 { pt3dadd( -6.87645, 21.6193, -9.46988, 0.83 ) }
    dend_49 { pt3dadd( -7.70312, 24.9732, -10.0465, 0.83 ) }
    dend_49 { pt3dadd( -8.63258, 28.913, -10.5305, 0.83 ) }
    dend_49 { pt3dadd( -9.59405, 32.948, -10.6626, 0.55 ) }
    dend_49 { pt3dadd( -9.96715, 34.5136, -10.6087, 0.55 ) }
    dend_49 { pt3dadd( -10.7166, 37.6592, -10.1681, 0.55 ) }
    dend_49 { pt3dadd( -11.5244, 40.4622, -9.30043, 0.55 ) }
    dend_49 { pt3dadd( -12.2254, 42.4573, -8.41739, 0.55 ) }
    dend_49 { pt3dadd( -13.8901, 46.1515, -6.39451, 0.83 ) }
    dend_49 { pt3dadd( -15.3011, 48.4824, -4.74316, 0.83 ) }
    dend_49 { pt3dadd( -16.2428, 49.7717, -3.68152, 0.28 ) }
    dend_49 { pt3dadd( -18.2804, 52.079, -1.61396, 0.83 ) }
    dend_49 { pt3dadd( -19.288, 53.1149, -0.703819, 0.55 ) }
    dend_49 { pt3dadd( -20.3043, 54.087, 0.00110697, 0.83 ) }
    dend_49 { pt3dadd( -23.5237, 57.1564, 1.51183, 0.28 ) }
    dend_49 { pt3dadd( -23.7519, 57.3662, 1.64908, 0.55 ) }
    dend_49 { pt3dadd( -24.9642, 58.5086, 2.53346, 0.28 ) }
    dend_49 { pt3dadd( -26.1561, 59.6031, 3.53799, 0.55 ) }
    dend_49 { pt3dadd( -27.3695, 60.6904, 4.66032, 0.28 ) }
    dend_49 { pt3dadd( -28.3226, 61.5081, 5.50572, 0.55 ) }
    dend_49 { pt3dadd( -32.8293, 65.2896, 9.1895, 0.55 ) }
    dend_49 { pt3dadd( -34.7778, 66.9203, 10.6691, 0.55 ) }
    dend_49 { pt3dadd( -36.3987, 68.2692, 11.8077, 0.55 ) }
    dend_49 { pt3dadd( -37.5328, 69.2559, 12.4776, 0.55 ) }
    dend_49 { pt3dadd( -39.0914, 70.6968, 13.1508, 0.55 ) }
    dend_49 { pt3dadd( -40.2942, 71.9547, 13.2538, 0.55 ) }
    dend_49 { pt3dadd( -42.3302, 74.3569, 12.4644, 0.28 ) }
    dend_49 { pt3dadd( -43.5067, 75.833, 11.7355, 0.55 ) }
    dend_49 { pt3dadd( -44.7995, 77.4953, 10.6445, 0.28 ) }
    dend_49 { pt3dadd( -45.4453, 78.2939, 9.9853, 0.55 ) }
    dend_49 { pt3dadd( -46.7301, 79.8066, 8.48372, 0.28 ) }
    dend_49 { pt3dadd( -47.8033, 80.9251, 7.14214, 0.28 ) }
    dend_49 { pt3dadd( -48.1582, 81.2521, 6.68192, 0.55 ) }
    dend_49 { pt3dadd( -49.4374, 82.315, 5.00248, 0.28 ) }
    dend_49 { pt3dadd( -50.2815, 82.9024, 4.0095, 0.83 ) }
    dend_49 { pt3dadd( -50.9148, 83.2967, 3.31288, 0.28 ) }
    dend_49 { pt3dadd( -51.1432, 83.4129, 3.07374, 0.83 ) }
    dend_49 { pt3dadd( -56.6801, 89.5459, 4.74073, 0.83 ) }
    dend_49 { pt3dadd( -61.536, 95.9799, 7.12193, 0.83 ) }
    dend_49 { pt3dadd( -67.0031, 101.765, 9.9714, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 50/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -5.16247, 15.1035, -7.97513, 0.83 ) }
    dend_44 { pt3dadd( -3.26773, 15.5885, -13.8034, 0.83 ) }
    dend_44 { pt3dadd( -2.22661, 15.871, -16.899, 0.83 ) }
    dend_44 { pt3dadd( -0.420409, 16.2997, -22.1654, 0.83 ) }
    dend_44 { pt3dadd( 4.65445, 17.3792, -35.9358, 0.83 ) }
    dend_44 { pt3dadd( 8.44598, 18.214, -45.6881, 0.83 ) }
    dend_44 { pt3dadd( 9.55695, 18.4536, -48.4084, 0.28 ) }
    dend_44 { pt3dadd( 11.0394, 18.6551, -51.9239, 0.83 ) }
    dend_44 { pt3dadd( 11.7625, 18.7256, -53.6714, 0.83 ) }
    dend_44 { pt3dadd( 13.3721, 18.8788, -58.0515, 0.83 ) }
    dend_44 { pt3dadd( 14.1394, 18.9721, -59.4247, 0.83 ) }
    dend_44 { pt3dadd( 16.7092, 19.613, -62.4697, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 62/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 45.6404, 47.6198, -32.3367, 0.83 ) }
    dend_40 { pt3dadd( 49.432, 49.2181, -36.688, 0.83 ) }
    dend_40 { pt3dadd( 51.5966, 50.0125, -38.8861, 0.83 ) }
    dend_40 { pt3dadd( 55.7419, 51.2798, -42.6857, 0.83 ) }
    dend_40 { pt3dadd( 58.0413, 51.9323, -44.6436, 0.83 ) }
    dend_40 { pt3dadd( 61.4862, 52.7739, -47.3694, 0.83 ) }
    dend_40 { pt3dadd( 64.0544, 53.3527, -49.2648, 0.83 ) }
    dend_40 { pt3dadd( 67.3975, 53.9447, -51.3279, 0.83 ) }
    dend_40 { pt3dadd( 69.7003, 54.2832, -52.6148, 0.83 ) }
    dend_40 { pt3dadd( 72.3614, 54.6589, -53.9507, 0.83 ) }
    dend_40 { pt3dadd( 75.2009, 55.0953, -55.3107, 0.83 ) }
    dend_40 { pt3dadd( 76.9859, 55.4223, -56.1169, 0.55 ) }
    dend_40 { pt3dadd( 78.3083, 55.6349, -56.7286, 0.55 ) }
    dend_40 { pt3dadd( 82.4539, 56.1256, -58.846, 0.55 ) }
    dend_40 { pt3dadd( 83.8874, 56.3271, -59.6329, 0.55 ) }
    dend_40 { pt3dadd( 87.1924, 56.7621, -61.6895, 0.83 ) }
    dend_40 { pt3dadd( 89.2554, 56.9708, -63.0979, 0.83 ) }
    dend_40 { pt3dadd( 93.1699, 57.3368, -65.9842, 0.83 ) }
    dend_40 { pt3dadd( 95.6998, 57.5975, -67.9038, 0.55 ) }
    dend_40 { pt3dadd( 98.8151, 57.987, -70.3201, 0.55 ) }
    dend_40 { pt3dadd( 101.953, 58.397, -72.7976, 0.55 ) }
    dend_40 { pt3dadd( 105.456, 58.8451, -75.4753, 0.83 ) }
    dend_40 { pt3dadd( 114.785, 59.7989, -82.0537, 0.55 ) }
    dend_40 { pt3dadd( 117.402, 59.9924, -83.7313, 0.55 ) }
    dend_40 { pt3dadd( 119.136, 60.0308, -84.7074, 0.28 ) }
    dend_40 { pt3dadd( 120.91, 59.9328, -85.5404, 0.55 ) }
    dend_40 { pt3dadd( 125.146, 59.525, -86.9547, 0.55 ) }
    dend_40 { pt3dadd( 128.091, 59.1099, -87.5497, 0.55 ) }
    dend_40 { pt3dadd( 130.903, 58.4791, -87.6822, 0.55 ) }
    dend_40 { pt3dadd( 133.74, 57.8898, -87.7333, 0.55 ) }
    dend_40 { pt3dadd( 137.028, 57.3391, -87.7546, 1.11 ) }
    dend_40 { pt3dadd( 140.915, 56.9719, -87.8381, 0.55 ) }
    dend_40 { pt3dadd( 143.598, 56.9334, -88.0426, 0.28 ) }
    dend_40 { pt3dadd( 146.497, 57.0721, -88.4909, 0.55 ) }
    dend_40 { pt3dadd( 148.553, 57.2515, -88.9972, 0.28 ) }
    dend_40 { pt3dadd( 149.816, 57.351, -89.4856, 0.55 ) }
    dend_40 { pt3dadd( 151.729, 57.4566, -90.4718, 0.83 ) }
    dend_40 { pt3dadd( 155.431, 57.5352, -92.9113, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_40 { pt3dadd( 157.644, 57.4639, -94.481, 0.28 ) }
    dend_40 { pt3dadd( 162.331, 57.2079, -97.9816, 0.55 ) }
    dend_40 { pt3dadd( 167.572, 56.7776, -101.894, 0.28 ) }
    dend_40 { pt3dadd( 169.431, 56.5991, -103.318, 0.55 ) }
    dend_40 { pt3dadd( 172.082, 56.302, -105.263, 0.55 ) }
    dend_40 { pt3dadd( 175.325, 55.9162, -107.521, 0.55 ) }
    dend_40 { pt3dadd( 178.02, 55.5995, -109.305, 0.28 ) }
    dend_40 { pt3dadd( 179.001, 55.4738, -109.953, 0.55 ) }
    dend_40 { pt3dadd( 181.981, 55.1669, -111.583, 0.28 ) }
    dend_40 { pt3dadd( 184.785, 54.8664, -112.808, 0.55 ) }
    dend_40 { pt3dadd( 186.988, 54.6377, -113.563, 0.28 ) }
    dend_40 { pt3dadd( 187.965, 54.575, -113.901, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 12/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 45.6404, 47.6198, -32.3367, 0.55 ) }
    dend_39 { pt3dadd( 48.0499, 47.9423, -34.8175, 0.55 ) }
    dend_39 { pt3dadd( 51.8028, 48.5329, -38.6241, 0.55 ) }
    dend_39 { pt3dadd( 54.3385, 48.93, -41.099, 0.55 ) }
    dend_39 { pt3dadd( 57.7191, 49.6463, -44.2502, 0.55 ) }
    dend_39 { pt3dadd( 60.1105, 50.2573, -46.4219, 0.55 ) }
    dend_39 { pt3dadd( 63.0404, 51.1862, -48.9898, 0.55 ) }
    dend_39 { pt3dadd( 63.8763, 51.5301, -49.6667, 0.55 ) }
    dend_39 { pt3dadd( 65.8751, 52.5911, -51.0921, 0.55 ) }
    dend_39 { pt3dadd( 69.5024, 54.9868, -53.2661, 0.55 ) }
    dend_39 { pt3dadd( 71.8501, 56.9827, -54.4179, 0.55 ) }
    dend_39 { pt3dadd( 74.9748, 60.2427, -55.4331, 0.55 ) }
    dend_39 { pt3dadd( 76.7239, 62.395, -55.6597, 0.28 ) }
    dend_39 { pt3dadd( 77.802, 63.8679, -55.5716, 0.28 ) }
    dend_39 { pt3dadd( 80.874, 68.6772, -54.6258, 0.28 ) }
    dend_39 { pt3dadd( 81.4984, 69.6936, -54.2821, 0.83 ) }
    dend_39 { pt3dadd( 83.4239, 72.7773, -52.9557, 0.28 ) }
    dend_39 { pt3dadd( 84.8626, 74.7506, -52.1199, 0.83 ) }
    dend_39 { pt3dadd( 87.7075, 77.8515, -50.9134, 0.28 ) }
    dend_39 { pt3dadd( 89.1152, 79.2185, -50.4365, 0.55 ) }
    dend_39 { pt3dadd( 90.6469, 80.4524, -50.1741, 0.28 ) }
    dend_39 { pt3dadd( 92.4648, 81.7568, -49.9318, 0.55 ) }
    dend_39 { pt3dadd( 97.6606, 84.7356, -49.7336, 0.55 ) }
    dend_39 { pt3dadd( 100.424, 85.886, -50.0076, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 36/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 15.6912, -4.4967, -50.5334, 0.55 ) }
    dend_34 { pt3dadd( 19.1353, -4.62292, -56.4799, 0.55 ) }
    dend_34 { pt3dadd( 20.5411, -4.74337, -58.8821, 1.11 ) }
    dend_34 { pt3dadd( 24.4869, -5.15165, -65.2429, 0.28 ) }
    dend_34 { pt3dadd( 26.2098, -5.3548, -67.8897, 0.55 ) }
    dend_34 { pt3dadd( 27.7205, -5.52882, -70.1247, 0.55 ) }
    dend_34 { pt3dadd( 29.353, -5.65958, -72.527, 0.28 ) }
    dend_34 { pt3dadd( 31.1918, -5.79646, -75.1273, 1.11 ) }
    dend_34 { pt3dadd( 33.2431, -5.79915, -78.0701, 0.55 ) }
    dend_34 { pt3dadd( 35.2123, -5.63686, -80.8139, 0.28 ) }
    dend_34 { pt3dadd( 35.68, -5.56898, -81.5445, 1.11 ) }
    dend_34 { pt3dadd( 38.2258, -5.00448, -85.8501, 0.55 ) }
    dend_34 { pt3dadd( 40.1901, -4.33812, -89.4457, 0.28 ) }
    dend_34 { pt3dadd( 41.5569, -3.73094, -92.1012, 0.83 ) }
    dend_34 { pt3dadd( 42.5922, -3.20134, -94.3478, 0.83 ) }
    dend_34 { pt3dadd( 44.6791, -2.06993, -99.073, 0.55 ) }
    dend_34 { pt3dadd( 45.1703, -1.84913, -100.149, 0.83 ) }
    dend_34 { pt3dadd( 47.687, -0.849537, -105.44, 0.28 ) }
    dend_34 { pt3dadd( 48.7818, -0.419366, -107.733, 0.83 ) }
    dend_34 { pt3dadd( 50.7774, 0.287746, -111.853, 0.28 ) }
    dend_34 { pt3dadd( 51.4595, 0.52228, -113.245, 1.11 ) }
    dend_34 { pt3dadd( 57.2019, 2.28906, -124.458, 0.28 ) }
    dend_34 { pt3dadd( 57.4561, 2.35564, -124.95, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 15.6912, -4.4967, -50.5334, 0.28 ) }
    dend_33 { pt3dadd( 15.3074, -3.85597, -52.8236, 0.28 ) }
    dend_33 { pt3dadd( 15.1936, -3.63845, -53.5532, 0.55 ) }
    dend_33 { pt3dadd( 13.897, -1.07762, -61.4563, 0.28 ) }
    dend_33 { pt3dadd( 13.8457, -1.00085, -61.6863, 0.55 ) }
    dend_33 { pt3dadd( 13.53, -0.584177, -62.9221, 0.28 ) }
    dend_33 { pt3dadd( 13.0721, -0.144455, -64.3402, 0.55 ) }
    dend_33 { pt3dadd( 11.1482, 1.36143, -69.4998, 0.28 ) }
    dend_33 { pt3dadd( 10.8027, 1.57809, -70.3846, 0.55 ) }
    dend_33 { pt3dadd( 8.61072, 2.77454, -75.6196, 0.28 ) }
    dend_33 { pt3dadd( 8.23011, 2.96514, -76.514, 1.11 ) }
    dend_33 { pt3dadd( 5.63048, 4.14739, -82.541, 0.28 ) }
    dend_33 { pt3dadd( 4.91608, 4.43328, -84.1543, 0.83 ) }
    dend_33 { pt3dadd( 1.57618, 5.56729, -91.4277, 0.83 ) }
    dend_33 { pt3dadd( 0.218406, 6.00103, -94.5691, 0.28 ) }
    dend_33 { pt3dadd( -0.231441, 6.14756, -95.729, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 75/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 1.36112, -14.6746, -20.7145, 1.11 ) }
    dend_29 { pt3dadd( 2.79803, -19.9374, -21.5939, 1.11 ) }
    dend_29 { pt3dadd( 4.21797, -25.1381, -22.4629, 1.11 ) }
    dend_29 { pt3dadd( 5.01885, -28.0714, -22.953, 1.11 ) }
    dend_29 { pt3dadd( 6.14584, -32.1991, -23.6428, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.36112, -14.6746, -20.7145, 1.11 ) }
    dend_26 { pt3dadd( -0.135856, -16.1412, -28.6422, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 82/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -56.0113, -17.0325, 36.7246, 0.55 ) }
    dend_24 { pt3dadd( -65.7607, -20.6258, 43.5971, 0.55 ) }
    dend_24 { pt3dadd( -74.4683, -24.4198, 51.6249, 0.55 ) }
    dend_24 { pt3dadd( -82.372, -29.6812, 59.5542, 0.55 ) }
    dend_24 { pt3dadd( -89.1777, -33.0092, 69.4038, 0.55 ) }
    dend_24 { pt3dadd( -97.692, -35.7857, 78.0714, 0.55 ) }
    dend_24 { pt3dadd( -104.732, -36.17, 88.3952, 0.55 ) }
    dend_24 { pt3dadd( -111.061, -36.3446, 99.1749, 0.55 ) }
    dend_24 { pt3dadd( -115.986, -34.44, 110.522, 0.55 ) }
    dend_24 { pt3dadd( -120.583, -34.2389, 122.144, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 92/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -56.0113, -17.0325, 36.7246, 0.28 ) }
    dend_23 { pt3dadd( -65.5716, -20.677, 43.2009, 0.55 ) }
    dend_23 { pt3dadd( -76.1583, -22.7664, 48.7599, 0.55 ) }
    dend_23 { pt3dadd( -87.0533, -24.2567, 53.9207, 0.55 ) }
    dend_23 { pt3dadd( -97.4784, -26.6221, 59.6618, 0.55 ) }
    dend_23 { pt3dadd( -108.409, -29.903, 63.6626, 0.55 ) }
    dend_23 { pt3dadd( -119.715, -32.5039, 67.1288, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -15.7864, 5.57546, -11.8535, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( -22.2032, 4.01267, -24.3797, 1.11 ) }
    dend_17 { pt3dadd( -24.1193, 3.54602, -28.1201, 1.66 ) }
    dend_17 { pt3dadd( -26.5287, 2.95922, -32.8235, 1.11 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 3/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -15.7864, 5.57546, -11.8535, 0.83 ) }
    dend_16 { pt3dadd( -17.7932, 8.34435, -18.9693, 0.83 ) }
    dend_16 { pt3dadd( -18.7207, 9.79735, -22.4121, 0.83 ) }
    dend_16 { pt3dadd( -20.7966, 13.2069, -30.1589, 0.83 ) }
    dend_16 { pt3dadd( -22.5091, 16.162, -36.5687, 0.83 ) }
    dend_16 { pt3dadd( -23.4782, 17.8049, -40.0591, 0.83 ) }
    dend_16 { pt3dadd( -24.901, 20.2311, -45.0501, 0.83 ) }
    dend_16 { pt3dadd( -26.2565, 22.6571, -49.6768, 0.55 ) }
    dend_16 { pt3dadd( -27.0098, 24.0917, -52.1373, 1.39 ) }
    dend_16 { pt3dadd( -28.0476, 26.0211, -55.1274, 0.55 ) }
    dend_16 { pt3dadd( -28.5163, 26.8381, -56.3251, 0.83 ) }
    dend_16 { pt3dadd( -29.7803, 29.0766, -59.8431, 0.28 ) }
    dend_16 { pt3dadd( -30.2985, 30.0012, -61.3558, 0.83 ) }
    dend_16 { pt3dadd( -31.8318, 32.9106, -66.2443, 0.28 ) }
    dend_16 { pt3dadd( -32.1105, 33.5247, -67.3383, 0.83 ) }
    dend_16 { pt3dadd( -33.0444, 35.7922, -71.6034, 0.83 ) }
    dend_16 { pt3dadd( -34.6326, 39.9397, -79.8636, 0.28 ) }
    dend_16 { pt3dadd( -34.8416, 40.5562, -81.1479, 0.83 ) }
    dend_16 { pt3dadd( -35.5292, 42.7525, -85.8292, 0.28 ) }
    dend_16 { pt3dadd( -36.4892, 45.5258, -92.0407, 0.28 ) }
    dend_16 { pt3dadd( -36.6778, 46.0347, -93.2107, 0.83 ) }
    dend_16 { pt3dadd( -37.0597, 46.9878, -95.3944, 0.83 ) }
    dend_16 { pt3dadd( -38.808, 50.5782, -104.011, 0.28 ) }
    dend_16 { pt3dadd( -38.9591, 50.8488, -104.696, 0.55 ) }
    dend_16 { pt3dadd( -41.0432, 54.2278, -113.597, 0.28 ) }
    dend_16 { pt3dadd( -41.5538, 55.0084, -115.643, 0.55 ) }
    dend_16 { pt3dadd( -42.1411, 55.8998, -117.987, 0.55 ) }
    dend_16 { pt3dadd( -43.0614, 57.2479, -121.586, 0.28 ) }
    dend_16 { pt3dadd( -44.1194, 58.5364, -125.416, 0.55 ) }
    dend_16 { pt3dadd( -45.6208, 60.5188, -131.283, 0.28 ) }
    dend_16 { pt3dadd( -45.7487, 60.7082, -131.831, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 34/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -9.26034, 8.21559, 3.5965, 1.11 ) }
    dend_10 { pt3dadd( -13.8255, 10.9113, 4.1753, 1.11 ) }
    dend_10 { pt3dadd( -15.3658, 11.8887, 4.42079, 0.83 ) }
    dend_10 { pt3dadd( -16.8283, 12.9233, 4.81886, 1.66 ) }
    dend_10 { pt3dadd( -20.5021, 15.7478, 6.06404, 0.83 ) }
    dend_10 { pt3dadd( -21.8706, 16.8591, 6.55287, 0.83 ) }
    dend_10 { pt3dadd( -28.397, 22.3995, 9.09097, 0.83 ) }
    dend_10 { pt3dadd( -30.3925, 24.2239, 9.9435, 0.83 ) }
    dend_10 { pt3dadd( -34.4957, 28.0266, 11.734, 1.11 ) }
    dend_10 { pt3dadd( -36.1411, 29.6004, 12.5279, 0.83 ) }
    dend_10 { pt3dadd( -39.2745, 32.7462, 14.2651, 0.83 ) }
    dend_10 { pt3dadd( -42.2372, 35.7975, 16.0153, 0.83 ) }
    dend_10 { pt3dadd( -45.0568, 38.6251, 17.7961, 0.83 ) }
    dend_10 { pt3dadd( -47.8296, 41.3785, 19.3276, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -9.26034, 8.21559, 3.5965, 0.83 ) }
    dend_1 { pt3dadd( -10.6436, 11.2647, 8.72764, 0.83 ) }
    dend_1 { pt3dadd( -12.7183, 15.8381, 16.4238, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 51/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 29.2431, -28.5268, 1.14217, 0.55 ) }
    axon_1 { pt3dadd( 39.9268, -39.0557, 1.14217, 0.55 ) }
    axon_1 { pt3dadd( 50.6106, -49.5846, 1.14217, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 54/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -67.0031, 101.765, 9.9714, 0.83 ) }
    dend_51 { pt3dadd( -71.0381, 113.505, 14.1439, 0.83 ) }
    dend_51 { pt3dadd( -72.782, 125.912, 17.8252, 0.83 ) }
    dend_51 { pt3dadd( -75.4806, 137.715, 22.8855, 0.83 ) }
    dend_51 { pt3dadd( -77.1938, 149.254, 29.0008, 0.83 ) }
    dend_51 { pt3dadd( -77.9677, 161.051, 34.7741, 0.83 ) }
    dend_51 { pt3dadd( -79.8947, 171.621, 42.5589, 0.83 ) }
    dend_51 { pt3dadd( -80.4479, 181.53, 51.4753, 0.83 ) }
    dend_51 { pt3dadd( -81.418, 192.759, 58.3777, 0.83 ) }
    dend_51 { pt3dadd( -82.1897, 204.693, 63.8222, 0.83 ) }
    dend_51 { pt3dadd( -81.5384, 217.416, 66.6515, 0.83 ) }
    dend_51 { pt3dadd( -80.9951, 230.373, 67.4453, 0.83 ) }
    dend_51 { pt3dadd( -80.7343, 243.341, 67.254, 0.83 ) }
    dend_51 { pt3dadd( -82.7075, 255.917, 64.9108, 0.83 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 68/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -67.0031, 101.765, 9.9714, 0.83 ) }
    dend_50 { pt3dadd( -76.2803, 105.098, 6.5713, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 70/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 16.7092, 19.613, -62.4697, 0.55 ) }
    dend_46 { pt3dadd( 20.5777, 21.864, -62.3919, 0.55 ) }
    dend_46 { pt3dadd( 21.7928, 22.571, -62.3675, 0.83 ) }
    dend_46 { pt3dadd( 23.6124, 23.6298, -62.331, 0.55 ) }
    dend_46 { pt3dadd( 24.9987, 24.4365, -62.3031, 0.83 ) }
    dend_46 { pt3dadd( 28.2773, 26.3442, -62.2372, 0.55 ) }
    dend_46 { pt3dadd( 32.1258, 28.5836, -62.1598, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 77/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 16.7092, 19.613, -62.4697, 0.55 ) }
    dend_45 { pt3dadd( 16.7353, 19.6348, -62.8921, 0.55 ) }
    dend_45 { pt3dadd( 16.9091, 19.7806, -65.7108, 0.55 ) }
    dend_45 { pt3dadd( 17.0688, 19.9144, -68.2998, 0.55 ) }
    dend_45 { pt3dadd( 17.08, 19.9239, -68.4817, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 187.965, 54.575, -113.901, 0.28 ) }
    dend_42 { pt3dadd( 193.956, 56.9938, -114.738, 0.28 ) }
    dend_42 { pt3dadd( 197.502, 58.4, -115.2, 0.28 ) }
    dend_42 { pt3dadd( 204.162, 61.0691, -116.0, 0.28 ) }
    dend_42 { pt3dadd( 208.066, 62.6388, -116.238, 0.55 ) }
    dend_42 { pt3dadd( 211.393, 63.9765, -116.441, 0.28 ) }
    dend_42 { pt3dadd( 213.277, 64.734, -116.556, 0.55 ) }
    dend_42 { pt3dadd( 215.847, 65.8192, -116.703, 0.28 ) }
    dend_42 { pt3dadd( 217.801, 66.6414, -116.643, 0.55 ) }
    dend_42 { pt3dadd( 221.52, 68.26, -115.497, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 187.965, 54.575, -113.901, 0.28 ) }
    dend_41 { pt3dadd( 189.466, 53.411, -114.115, 0.28 ) }
    dend_41 { pt3dadd( 189.738, 53.2089, -114.101, 0.55 ) }
    dend_41 { pt3dadd( 191.394, 52.0021, -113.845, 0.28 ) }
    dend_41 { pt3dadd( 191.937, 51.6148, -113.732, 0.55 ) }
    dend_41 { pt3dadd( 193.425, 50.6088, -113.533, 0.28 ) }
    dend_41 { pt3dadd( 194.077, 50.2052, -113.451, 0.55 ) }
    dend_41 { pt3dadd( 196.014, 49.2326, -113.196, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_41 { pt3dadd( 196.503, 48.9968, -113.126, 0.28 ) }
    dend_41 { pt3dadd( 196.722, 48.9034, -113.09, 0.55 ) }
    dend_41 { pt3dadd( 198.804, 47.9404, -112.621, 0.28 ) }
    dend_41 { pt3dadd( 199.911, 47.3407, -112.225, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 4/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 57.4561, 2.35564, -124.95, 0.55 ) }
    dend_36 { pt3dadd( 59.3093, 4.41223, -132.158, 0.55 ) }
    dend_36 { pt3dadd( 60.0203, 5.10334, -134.509, 1.11 ) }
    dend_36 { pt3dadd( 64.53, 9.17876, -148.018, 0.28 ) }
    dend_36 { pt3dadd( 65.3673, 9.89433, -150.35, 0.83 ) }
    dend_36 { pt3dadd( 68.1668, 12.2421, -157.815, 0.28 ) }
    dend_36 { pt3dadd( 68.7402, 12.693, -159.242, 0.83 ) }
    dend_36 { pt3dadd( 70.7649, 14.2132, -163.723, 0.28 ) }
    dend_36 { pt3dadd( 71.1331, 14.4709, -164.461, 0.83 ) }
    dend_36 { pt3dadd( 73.1831, 15.6299, -167.391, 0.28 ) }
    dend_36 { pt3dadd( 73.5543, 15.828, -167.886, 0.55 ) }
    dend_36 { pt3dadd( 76.5404, 17.0947, -171.513, 0.28 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 16/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 57.4561, 2.35564, -124.95, 0.28 ) }
    dend_35 { pt3dadd( 60.0844, 1.67349, -126.035, 0.28 ) }
    dend_35 { pt3dadd( 62.1136, 1.09058, -126.833, 0.28 ) }
    dend_35 { pt3dadd( 62.3881, 1.02315, -126.947, 0.55 ) }
    dend_35 { pt3dadd( 63.8354, 0.719126, -127.53, 0.28 ) }
    dend_35 { pt3dadd( 64.2569, 0.658822, -127.705, 0.55 ) }
    dend_35 { pt3dadd( 69.3269, 0.177461, -129.668, 0.28 ) }
    dend_35 { pt3dadd( 70.2999, 0.114536, -130.019, 0.83 ) }
    dend_35 { pt3dadd( 74.9921, -0.177513, -131.76, 0.28 ) }
    dend_35 { pt3dadd( 76.2321, -0.229747, -132.22, 0.55 ) }
    dend_35 { pt3dadd( 81.246, -0.297026, -134.073, 0.28 ) }
    dend_35 { pt3dadd( 84.9018, -0.229794, -135.353, 0.28 ) }
    dend_35 { pt3dadd( 85.8792, -0.145172, -135.643, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 29/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.14584, -32.1991, -23.6428, 0.83 ) }
    dend_31 { pt3dadd( 6.80538, -36.7657, -25.3347, 0.83 ) }
    dend_31 { pt3dadd( 7.36329, -39.4625, -26.2227, 0.83 ) }
    dend_31 { pt3dadd( 8.5238, -43.7368, -27.7008, 0.83 ) }
    dend_31 { pt3dadd( 8.72808, -44.3213, -27.9292, 0.83 ) }
    dend_31 { pt3dadd( 10.7092, -49.1725, -30.0168, 0.83 ) }
    dend_31 { pt3dadd( 11.5871, -51.2116, -30.8961, 0.83 ) }
    dend_31 { pt3dadd( 13.074, -54.1915, -32.0488, 0.83 ) }
    dend_31 { pt3dadd( 16.3628, -60.5204, -34.209, 0.83 ) }
    dend_31 { pt3dadd( 19.3672, -66.4506, -35.7027, 0.83 ) }
    dend_31 { pt3dadd( 21.9844, -72.4858, -36.8664, 0.83 ) }
    dend_31 { pt3dadd( 23.0304, -75.3509, -37.2451, 0.83 ) }
    dend_31 { pt3dadd( 24.3674, -79.8292, -37.603, 0.83 ) }
    dend_31 { pt3dadd( 25.1568, -83.5583, -37.6505, 0.83 ) }
    dend_31 { pt3dadd( 25.8673, -90.6729, -37.1803, 0.83 ) }
    dend_31 { pt3dadd( 25.871, -95.7388, -36.6279, 0.83 ) }
    dend_31 { pt3dadd( 25.7052, -98.1457, -36.4593, 0.83 ) }
    dend_31 { pt3dadd( 25.2982, -102.32, -36.5977, 0.83 ) }
    dend_31 { pt3dadd( 24.9307, -105.441, -37.0109, 0.83 ) }
    dend_31 { pt3dadd( 24.5902, -108.582, -37.6455, 0.83 ) }
    dend_31 { pt3dadd( 24.1738, -112.917, -38.7415, 0.55 ) }
    dend_31 { pt3dadd( 23.9918, -117.559, -39.8476, 0.55 ) }
    dend_31 { pt3dadd( 23.957, -121.989, -40.929, 0.55 ) }
    dend_31 { pt3dadd( 24.1005, -125.227, -41.8098, 0.28 ) }
    dend_31 { pt3dadd( 24.1841, -126.486, -42.1828, 0.55 ) }
    dend_31 { pt3dadd( 24.2954, -128.284, -42.7549, 0.28 ) }
    dend_31 { pt3dadd( 24.5004, -133.242, -44.3805, 0.55 ) }
    dend_31 { pt3dadd( 24.526, -134.253, -44.6932, 0.55 ) }
    dend_31 { pt3dadd( 24.5286, -138.347, -46.1504, 0.55 ) }
    dend_31 { pt3dadd( 24.5065, -141.779, -47.6027, 0.55 ) }
    dend_31 { pt3dadd( 24.4908, -143.729, -48.4969, 0.55 ) }
    dend_31 { pt3dadd( 24.4783, -146.011, -49.6194, 0.55 ) }
    dend_31 { pt3dadd( 24.3866, -149.996, -51.6418, 0.55 ) }
    dend_31 { pt3dadd( 24.3477, -151.389, -52.2906, 0.55 ) }
    dend_31 { pt3dadd( 24.2232, -154.516, -53.5999, 0.28 ) }
    dend_31 { pt3dadd( 24.1768, -155.621, -54.0041, 0.55 ) }
    dend_31 { pt3dadd( 24.0334, -159.607, -55.4048, 0.55 ) }
    dend_31 { pt3dadd( 24.0224, -160.834, -55.8957, 0.55 ) }
    dend_31 { pt3dadd( 24.0164, -162.596, -56.5108, 0.83 ) }
    dend_31 { pt3dadd( 24.0114, -165.55, -57.5027, 0.28 ) }
    dend_31 { pt3dadd( 23.9753, -168.217, -58.2456, 0.28 ) }
    dend_31 { pt3dadd( 23.9504, -169.902, -58.7152, 0.55 ) }
    dend_31 { pt3dadd( 23.9593, -173.258, -59.5718, 0.55 ) }
    dend_31 { pt3dadd( 24.0658, -176.642, -60.5154, 0.55 ) }
    dend_31 { pt3dadd( 24.1686, -179.128, -61.2028, 1.11 ) }
    dend_31 { pt3dadd( 24.2194, -182.289, -62.0428, 0.55 ) }
    dend_31 { pt3dadd( 24.188, -184.98, -62.7474, 0.28 ) }
    dend_31 { pt3dadd( 24.1354, -187.052, -63.2343, 0.55 ) }
    dend_31 { pt3dadd( 24.0534, -189.56, -63.641, 0.28 ) }
    dend_31 { pt3dadd( 24.0381, -190.49, -63.7725, 0.55 ) }
    dend_31 { pt3dadd( 24.0029, -193.703, -63.9652, 0.28 ) }
    dend_31 { pt3dadd( 23.9956, -195.312, -64.0634, 0.83 ) }
    dend_31 { pt3dadd( 24.0159, -199.239, -64.1639, 0.28 ) }
    dend_31 { pt3dadd( 24.05, -202.963, -64.2726, 0.83 ) }
    dend_31 { pt3dadd( 24.0903, -205.591, -64.3229, 0.28 ) }
    dend_31 { pt3dadd( 24.1421, -207.658, -64.4344, 0.55 ) }
    dend_31 { pt3dadd( 24.2649, -211.208, -64.7151, 0.55 ) }
    dend_31 { pt3dadd( 24.3392, -214.469, -65.2058, 0.55 ) }
    dend_31 { pt3dadd( 24.3553, -216.889, -65.6961, 0.28 ) }
    dend_31 { pt3dadd( 24.36, -218.162, -66.0297, 0.83 ) }
    dend_31 { pt3dadd( 24.3035, -220.125, -66.5245, 0.28 ) }
    dend_31 { pt3dadd( 24.2621, -220.982, -66.7261, 0.83 ) }
    dend_31 { pt3dadd( 23.9375, -225.03, -67.5562, 0.28 ) }
    dend_31 { pt3dadd( 23.679, -227.91, -68.1288, 0.28 ) }
    dend_31 { pt3dadd( 23.6094, -228.819, -68.3419, 0.83 ) }
    dend_31 { pt3dadd( 23.4808, -231.664, -69.0984, 0.28 ) }
    dend_31 { pt3dadd( 23.4784, -231.949, -69.1906, 0.83 ) }
    dend_31 { pt3dadd( 23.564, -234.436, -70.1455, 0.28 ) }
    dend_31 { pt3dadd( 23.7126, -236.04, -70.8962, 0.83 ) }
    dend_31 { pt3dadd( 24.1196, -239.311, -72.6078, 0.28 ) }
    dend_31 { pt3dadd( 24.4435, -241.19, -73.6388, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_31 { pt3dadd( 25.1957, -244.423, -75.4585, 0.28 ) }
    dend_31 { pt3dadd( 25.5503, -246.013, -76.364, 0.55 ) }
    dend_31 { pt3dadd( 26.5198, -250.207, -78.7477, 0.28 ) }
    dend_31 { pt3dadd( 26.5921, -250.526, -78.9262, 0.55 ) }
    dend_31 { pt3dadd( 26.9947, -252.037, -79.6483, 0.28 ) }
    dend_31 { pt3dadd( 27.2993, -253.104, -80.1102, 0.55 ) }
    dend_31 { pt3dadd( 28.0206, -255.266, -80.8362, 0.28 ) }
    dend_31 { pt3dadd( 28.4195, -256.379, -81.1345, 0.28 ) }
    dend_31 { pt3dadd( 28.5789, -256.756, -81.1783, 0.83 ) }
    dend_31 { pt3dadd( 29.4032, -259.092, -81.4304, 0.28 ) }
    dend_31 { pt3dadd( 29.6486, -259.925, -81.4971, 0.28 ) }
    dend_31 { pt3dadd( 29.848, -260.567, -81.5283, 0.55 ) }
    dend_31 { pt3dadd( 30.258, -261.704, -81.5202, 0.28 ) }
    dend_31 { pt3dadd( 30.5259, -262.6, -81.5288, 0.55 ) }
    dend_31 { pt3dadd( 31.2123, -265.281, -81.6537, 0.28 ) }
    dend_31 { pt3dadd( 31.3408, -265.906, -81.7453, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 16/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 6.14584, -32.1991, -23.6428, 0.55 ) }
    dend_30 { pt3dadd( 9.81234, -33.6585, -24.6745, 0.55 ) }
    dend_30 { pt3dadd( 13.724, -35.2874, -25.8927, 0.55 ) }
    dend_30 { pt3dadd( 17.1444, -36.5396, -26.9185, 0.55 ) }
    dend_30 { pt3dadd( 20.1063, -37.624, -27.8068, 0.55 ) }
    dend_30 { pt3dadd( 22.3441, -38.4433, -28.4779, 0.28 ) }
    dend_30 { pt3dadd( 25.3335, -39.5377, -29.3744, 0.55 ) }
    dend_30 { pt3dadd( 27.3262, -40.2463, -29.8418, 0.28 ) }
    dend_30 { pt3dadd( 30.3429, -41.4281, -30.607, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 25/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.135856, -16.1412, -28.6422, 0.83 ) }
    dend_28 { pt3dadd( -3.45357, -16.503, -30.6771, 0.83 ) }
    dend_28 { pt3dadd( -5.80914, -16.7627, -32.3649, 0.83 ) }
    dend_28 { pt3dadd( -8.50197, -17.0257, -35.0454, 0.83 ) }
    dend_28 { pt3dadd( -9.86305, -17.1338, -36.5981, 0.55 ) }
    dend_28 { pt3dadd( -10.8631, -17.2411, -37.8439, 0.28 ) }
    dend_28 { pt3dadd( -11.5018, -17.3246, -38.6745, 0.83 ) }
    dend_28 { pt3dadd( -14.0563, -17.753, -42.2582, 0.83 ) }
    dend_28 { pt3dadd( -17.5242, -18.3493, -47.5881, 0.83 ) }
    dend_28 { pt3dadd( -18.9709, -18.6065, -49.8972, 0.83 ) }
    dend_28 { pt3dadd( -20.3546, -18.8777, -52.14, 0.83 ) }
    dend_28 { pt3dadd( -22.8861, -19.3815, -56.0717, 0.28 ) }
    dend_28 { pt3dadd( -23.1949, -19.4431, -56.5051, 1.11 ) }
    dend_28 { pt3dadd( -25.0661, -19.7941, -58.6583, 0.28 ) }
    dend_28 { pt3dadd( -25.3355, -19.8229, -58.9106, 0.55 ) }
    dend_28 { pt3dadd( -27.7388, -19.8962, -61.0288, 0.28 ) }
    dend_28 { pt3dadd( -29.0336, -19.8726, -62.105, 0.83 ) }
    dend_28 { pt3dadd( -30.8785, -19.8594, -63.6614, 0.55 ) }
    dend_28 { pt3dadd( -32.7174, -19.871, -65.1984, 0.55 ) }
    dend_28 { pt3dadd( -37.5732, -19.9546, -69.1716, 0.28 ) }
    dend_28 { pt3dadd( -38.1583, -19.968, -69.6643, 1.11 ) }
    dend_28 { pt3dadd( -41.2515, -20.0275, -72.3846, 0.83 ) }
    dend_28 { pt3dadd( -45.5279, -20.1772, -76.3378, 0.28 ) }
    dend_28 { pt3dadd( -46.7388, -20.2449, -77.4687, 0.28 ) }
    dend_28 { pt3dadd( -47.1275, -20.2769, -77.8312, 0.55 ) }
    dend_28 { pt3dadd( -50.2775, -20.581, -80.7398, 0.28 ) }
    dend_28 { pt3dadd( -51.8393, -20.7173, -82.0881, 0.55 ) }
    dend_28 { pt3dadd( -54.7339, -20.9172, -84.4127, 0.28 ) }
    dend_28 { pt3dadd( -55.0486, -20.9465, -84.6162, 0.55 ) }
    dend_28 { pt3dadd( -57.5481, -21.2466, -86.011, 0.28 ) }
    dend_28 { pt3dadd( -58.069, -21.3181, -86.2771, 0.55 ) }
    dend_28 { pt3dadd( -61.1789, -21.7878, -87.7108, 0.28 ) }
    dend_28 { pt3dadd( -62.044, -21.9411, -88.0821, 0.83 ) }
    dend_28 { pt3dadd( -67.8767, -23.0984, -90.4869, 0.28 ) }
    dend_28 { pt3dadd( -69.1506, -23.3674, -91.0384, 0.55 ) }
    dend_28 { pt3dadd( -74.2872, -24.5177, -93.3583, 0.28 ) }
    dend_28 { pt3dadd( -75.5612, -24.8216, -94.054, 1.11 ) }
    dend_28 { pt3dadd( -82.3931, -26.5169, -98.1139, 0.28 ) }
    dend_28 { pt3dadd( -83.6694, -26.8628, -99.0015, 0.83 ) }
    dend_28 { pt3dadd( -85.8612, -27.5442, -100.677, 0.28 ) }
    dend_28 { pt3dadd( -87.0651, -27.9404, -101.538, 0.83 ) }
    dend_28 { pt3dadd( -93.9742, -30.31, -106.08, 0.28 ) }
    dend_28 { pt3dadd( -96.0349, -31.0021, -107.276, 1.11 ) }
    dend_28 { pt3dadd( -102.383, -33.0283, -110.502, 0.28 ) }
    dend_28 { pt3dadd( -104.178, -33.594, -111.223, 0.83 ) }
    dend_28 { pt3dadd( -109.747, -35.3867, -112.6, 0.28 ) }
    dend_28 { pt3dadd( -110.447, -35.6066, -112.666, 0.83 ) }
    dend_28 { pt3dadd( -114.035, -36.7058, -111.822, 0.28 ) }
    dend_28 { pt3dadd( -114.772, -36.9163, -111.559, 0.55 ) }
    dend_28 { pt3dadd( -117.043, -37.4519, -110.151, 0.28 ) }
    dend_28 { pt3dadd( -117.899, -37.6597, -109.796, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -0.135856, -16.1412, -28.6422, 0.55 ) }
    dend_27 { pt3dadd( -0.223136, -16.4869, -30.957, 0.55 ) }
    dend_27 { pt3dadd( -0.624907, -17.8085, -38.1578, 0.55 ) }
    dend_27 { pt3dadd( -1.18576, -19.4507, -45.8506, 0.55 ) }
    dend_27 { pt3dadd( -1.54649, -20.4662, -50.1751, 0.55 ) }
    dend_27 { pt3dadd( -1.83764, -21.1763, -53.082, 0.55 ) }
    dend_27 { pt3dadd( -2.03959, -21.6369, -54.9068, 0.55 ) }
    dend_27 { pt3dadd( -2.47295, -22.6061, -58.5653, 0.55 ) }
    dend_27 { pt3dadd( -2.71852, -23.1167, -60.0162, 0.28 ) }
    dend_27 { pt3dadd( -3.03014, -23.7338, -61.5225, 0.83 ) }
    dend_27 { pt3dadd( -3.64898, -24.9925, -64.6192, 0.83 ) }
    dend_27 { pt3dadd( -4.42723, -26.8575, -69.3701, 0.28 ) }
    dend_27 { pt3dadd( -4.49705, -27.0428, -69.8526, 0.83 ) }
    dend_27 { pt3dadd( -4.78104, -28.0813, -72.417, 0.28 ) }
    dend_27 { pt3dadd( -4.8441, -28.4104, -73.1861, 0.55 ) }
    dend_27 { pt3dadd( -5.05227, -29.9749, -76.4152, 0.28 ) }
    dend_27 { pt3dadd( -5.06337, -30.2005, -76.8174, 0.83 ) }
    dend_27 { pt3dadd( -5.11344, -31.1333, -78.4277, 0.28 ) }
    dend_27 { pt3dadd( -5.22829, -31.9344, -79.8876, 0.55 ) }
    dend_27 { pt3dadd( -5.55203, -33.2312, -82.2518, 0.28 ) }
    dend_27 { pt3dadd( -5.67967, -33.5226, -82.8401, 0.83 ) }
    dend_27 { pt3dadd( -6.41243, -34.8883, -85.6427, 0.28 ) }
    dend_27 { pt3dadd( -7.0205, -35.8506, -87.8271, 0.55 ) }
    dend_27 { pt3dadd( -7.89335, -37.1351, -90.8879, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_27 { pt3dadd( -8.18617, -37.6134, -92.0738, 0.28 ) }
    dend_27 { pt3dadd( -9.74493, -40.4611, -99.4869, 0.28 ) }
    dend_27 { pt3dadd( -9.88076, -40.7356, -100.269, 0.55 ) }
    dend_27 { pt3dadd( -10.7054, -42.8091, -106.109, 0.28 ) }
    dend_27 { pt3dadd( -10.86, -43.335, -107.571, 0.55 ) }
    dend_27 { pt3dadd( -11.2692, -45.4656, -113.476, 0.28 ) }
    dend_27 { pt3dadd( -11.3523, -46.2512, -115.598, 0.55 ) }
    dend_27 { pt3dadd( -11.4501, -48.6435, -121.422, 0.55 ) }
    dend_27 { pt3dadd( -11.4323, -50.5786, -125.839, 0.28 ) }
    dend_27 { pt3dadd( -11.3943, -51.063, -126.808, 0.55 ) }
    dend_27 { pt3dadd( -11.3037, -52.0897, -128.67, 0.28 ) }
    dend_27 { pt3dadd( -11.2391, -52.6657, -129.538, 0.55 ) }
    dend_27 { pt3dadd( -10.6919, -55.5234, -133.199, 0.28 ) }
    dend_27 { pt3dadd( -10.3839, -56.537, -134.219, 0.55 ) }
    dend_27 { pt3dadd( -9.67187, -58.5324, -136.084, 0.28 ) }
    dend_27 { pt3dadd( -9.2291, -59.7439, -136.956, 0.55 ) }
    dend_27 { pt3dadd( -8.39847, -61.9065, -138.378, 0.28 ) }
    dend_27 { pt3dadd( -8.02103, -62.8382, -138.952, 0.55 ) }
    dend_27 { pt3dadd( -7.24841, -64.544, -139.844, 0.55 ) }
    dend_27 { pt3dadd( -5.62262, -68.5134, -141.749, 0.28 ) }
    dend_27 { pt3dadd( -3.57159, -73.5467, -143.444, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -26.5287, 2.95922, -32.8235, 0.83 ) }
    dend_21 { pt3dadd( -28.7454, 1.6017, -34.8467, 0.83 ) }
    dend_21 { pt3dadd( -29.8949, 0.842101, -35.7751, 0.83 ) }
    dend_21 { pt3dadd( -34.5931, -2.21853, -39.202, 0.83 ) }
    dend_21 { pt3dadd( -35.8119, -2.99799, -40.0101, 0.55 ) }
    dend_21 { pt3dadd( -36.7173, -3.53738, -40.5326, 1.11 ) }
    dend_21 { pt3dadd( -39.9042, -5.41235, -42.279, 0.55 ) }
    dend_21 { pt3dadd( -43.0952, -7.30156, -43.772, 0.83 ) }
    dend_21 { pt3dadd( -44.3633, -8.02224, -44.2755, 0.28 ) }
    dend_21 { pt3dadd( -45.9614, -8.85739, -44.7305, 0.55 ) }
    dend_21 { pt3dadd( -49.0856, -10.3362, -45.476, 0.55 ) }
    dend_21 { pt3dadd( -51.8488, -11.5452, -46.0069, 0.28 ) }
    dend_21 { pt3dadd( -53.8118, -12.3017, -46.3178, 0.83 ) }
    dend_21 { pt3dadd( -56.1014, -13.0813, -46.6617, 0.55 ) }
    dend_21 { pt3dadd( -58.686, -13.9643, -47.0133, 0.55 ) }
    dend_21 { pt3dadd( -61.3235, -14.8127, -47.4224, 0.55 ) }
    dend_21 { pt3dadd( -63.0841, -15.365, -47.7106, 0.55 ) }
    dend_21 { pt3dadd( -65.1036, -15.9612, -48.0237, 0.28 ) }
    dend_21 { pt3dadd( -65.8103, -16.1873, -48.1778, 0.28 ) }
    dend_21 { pt3dadd( -69.2595, -17.4046, -49.0918, 0.55 ) }
    dend_21 { pt3dadd( -72.0882, -18.4618, -49.9071, 0.55 ) }
    dend_21 { pt3dadd( -73.5167, -19.0101, -50.3562, 0.55 ) }
    dend_21 { pt3dadd( -75.4265, -19.7577, -50.9268, 0.83 ) }
    dend_21 { pt3dadd( -78.865, -21.1516, -51.98, 0.55 ) }
    dend_21 { pt3dadd( -81.1862, -22.0424, -52.7443, 0.55 ) }
    dend_21 { pt3dadd( -83.789, -22.9378, -53.7308, 0.83 ) }
    dend_21 { pt3dadd( -85.7448, -23.5319, -54.5412, 0.55 ) }
    dend_21 { pt3dadd( -88.8702, -24.4381, -56.0683, 0.55 ) }
    dend_21 { pt3dadd( -90.8491, -25.015, -57.1385, 0.55 ) }
    dend_21 { pt3dadd( -93.5947, -25.7918, -58.9361, 0.55 ) }
    dend_21 { pt3dadd( -96.1555, -26.5092, -60.8474, 0.28 ) }
    dend_21 { pt3dadd( -99.2439, -27.2822, -63.5457, 0.55 ) }
    dend_21 { pt3dadd( -101.742, -27.8219, -65.8673, 0.28 ) }
    dend_21 { pt3dadd( -103.03, -28.0306, -67.2144, 0.83 ) }
    dend_21 { pt3dadd( -107.139, -28.4493, -71.7763, 0.28 ) }
    dend_21 { pt3dadd( -108.161, -28.52, -72.9289, 0.55 ) }
    dend_21 { pt3dadd( -111.53, -28.5113, -76.6497, 0.28 ) }
    dend_21 { pt3dadd( -113.176, -28.3702, -78.4472, 0.28 ) }
    dend_21 { pt3dadd( -116.013, -27.8069, -81.3484, 0.55 ) }
    dend_21 { pt3dadd( -117.503, -27.4361, -82.7567, 0.28 ) }
    dend_21 { pt3dadd( -120.428, -26.6072, -85.2377, 0.83 ) }
    dend_21 { pt3dadd( -124.644, -25.3633, -88.7222, 0.28 ) }
    dend_21 { pt3dadd( -125.099, -25.2331, -89.0609, 0.55 ) }
    dend_21 { pt3dadd( -127.551, -24.5439, -90.9292, 0.28 ) }
    dend_21 { pt3dadd( -128.692, -24.2406, -91.7115, 0.55 ) }
    dend_21 { pt3dadd( -131.465, -23.4488, -93.8158, 0.28 ) }
    dend_21 { pt3dadd( -131.89, -23.3056, -94.2062, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 68/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -26.5287, 2.95922, -32.8235, 0.83 ) }
    dend_18 { pt3dadd( -31.6373, 2.79613, -37.6966, 0.83 ) }
    dend_18 { pt3dadd( -33.9181, 2.72331, -39.8723, 0.55 ) }
    dend_18 { pt3dadd( -36.0164, 2.65632, -41.8739, 0.55 ) }
    dend_18 { pt3dadd( -38.4019, 2.58016, -44.1495, 0.55 ) }
    dend_18 { pt3dadd( -40.477, 2.51391, -46.1289, 0.83 ) }
    dend_18 { pt3dadd( -43.1558, 2.42839, -48.6843, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 75/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -47.8296, 41.3785, 19.3276, 0.83 ) }
    dend_12 { pt3dadd( -49.5146, 43.3756, 19.7266, 0.83 ) }
    dend_12 { pt3dadd( -50.4409, 44.4538, 19.9964, 1.11 ) }
    dend_12 { pt3dadd( -51.4885, 45.6468, 20.4124, 0.55 ) }
    dend_12 { pt3dadd( -53.0487, 47.389, 21.097, 0.83 ) }
    dend_12 { pt3dadd( -54.5144, 48.9888, 21.7756, 0.83 ) }
    dend_12 { pt3dadd( -55.7268, 50.2697, 22.4367, 0.28 ) }
    dend_12 { pt3dadd( -56.7998, 51.2916, 23.0766, 0.83 ) }
    dend_12 { pt3dadd( -58.2421, 52.6439, 24.0541, 0.28 ) }
    dend_12 { pt3dadd( -58.4702, 52.8765, 24.1792, 0.55 ) }
    dend_12 { pt3dadd( -59.7132, 54.257, 24.5627, 0.28 ) }
    dend_12 { pt3dadd( -61.4149, 56.0547, 24.2492, 0.83 ) }
    dend_12 { pt3dadd( -62.7709, 57.502, 23.2808, 0.83 ) }
    dend_12 { pt3dadd( -64.4703, 59.3117, 21.492, 0.55 ) }
    dend_12 { pt3dadd( -67.4508, 62.7172, 16.7557, 0.28 ) }
    dend_12 { pt3dadd( -68.3899, 63.865, 14.8625, 0.83 ) }
    dend_12 { pt3dadd( -70.1399, 66.165, 10.534, 0.28 ) }
    dend_12 { pt3dadd( -70.6351, 66.8334, 9.06803, 0.55 ) }
    dend_12 { pt3dadd( -71.0622, 67.4131, 7.57787, 0.83 ) }
    dend_12 { pt3dadd( -72.1966, 68.907, 3.30558, 0.28 ) }
    dend_12 { pt3dadd( -72.704, 69.6013, 1.36598, 0.28 ) }
    dend_12 { pt3dadd( -72.8855, 69.8876, 0.551791, 0.83 ) }
    dend_12 { pt3dadd( -73.7277, 71.3391, -3.28395, 0.55 ) }
    dend_12 { pt3dadd( -74.5658, 72.7079, -7.00496, 0.28 ) }
    dend_12 { pt3dadd( -74.7175, 72.9483, -7.67954, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_12 { pt3dadd( -75.7449, 74.4753, -11.7739, 0.28 ) }
    dend_12 { pt3dadd( -76.1916, 75.0785, -13.4297, 0.55 ) }
    dend_12 { pt3dadd( -76.8952, 75.9464, -15.6492, 0.28 ) }
    dend_12 { pt3dadd( -77.1541, 76.2376, -16.3033, 0.83 ) }
    dend_12 { pt3dadd( -78.6277, 77.7903, -19.4663, 0.28 ) }
    dend_12 { pt3dadd( -78.9606, 78.118, -20.1039, 0.83 ) }
    dend_12 { pt3dadd( -81.0708, 80.1342, -23.972, 0.28 ) }
    dend_12 { pt3dadd( -81.939, 80.9598, -25.5075, 0.28 ) }
    dend_12 { pt3dadd( -82.4931, 81.4776, -26.4784, 0.83 ) }
    dend_12 { pt3dadd( -86.7084, 85.3364, -33.7395, 0.28 ) }
    dend_12 { pt3dadd( -87.1935, 85.7689, -34.5669, 0.83 ) }
    dend_12 { pt3dadd( -90.1261, 88.4459, -39.8723, 0.28 ) }
    dend_12 { pt3dadd( -90.6908, 89.0122, -41.0072, 0.28 ) }
    dend_12 { pt3dadd( -91.3021, 89.6567, -42.3475, 0.28 ) }
    dend_12 { pt3dadd( -91.6297, 90.0081, -43.087, 0.55 ) }
    dend_12 { pt3dadd( -92.8863, 91.2783, -45.7572, 0.28 ) }
    dend_12 { pt3dadd( -93.443, 91.879, -47.0138, 0.55 ) }
    dend_12 { pt3dadd( -95.4522, 94.2054, -51.5726, 0.28 ) }
    dend_12 { pt3dadd( -96.1425, 95.072, -53.3054, 0.83 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 19/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -47.8296, 41.3785, 19.3276, 0.55 ) }
    dend_11 { pt3dadd( -49.6233, 41.2499, 22.3269, 0.55 ) }
    dend_11 { pt3dadd( -50.3813, 41.2191, 23.7154, 0.55 ) }
    dend_11 { pt3dadd( -51.843, 41.1082, 26.2097, 0.28 ) }
    dend_11 { pt3dadd( -52.1276, 41.0841, 26.6595, 0.28 ) }
    dend_11 { pt3dadd( -53.5745, 41.0196, 29.0041, 0.55 ) }
    dend_11 { pt3dadd( -54.3667, 40.9843, 30.2877, 0.83 ) }
    dend_11 { pt3dadd( -57.0149, 40.8344, 34.3471, 0.55 ) }
    dend_11 { pt3dadd( -57.9121, 40.8134, 35.746, 0.83 ) }
    dend_11 { pt3dadd( -58.5103, 40.7707, 36.638, 0.55 ) }
    dend_11 { pt3dadd( -59.8412, 40.7452, 38.7071, 0.55 ) }
    dend_11 { pt3dadd( -64.8111, 41.3724, 45.6362, 0.55 ) }
    dend_11 { pt3dadd( -69.0517, 41.3698, 53.0571, 0.55 ) }
    dend_11 { pt3dadd( -71.4243, 40.4519, 61.1979, 0.55 ) }
    dend_11 { pt3dadd( -74.5303, 38.7754, 68.9427, 0.55 ) }
    dend_11 { pt3dadd( -78.4643, 35.2034, 75.501, 0.55 ) }
    dend_11 { pt3dadd( -82.3852, 30.2975, 81.0318, 0.55 ) }
    dend_11 { pt3dadd( -85.8137, 25.3496, 86.8342, 0.55 ) }
    dend_11 { pt3dadd( -89.8661, 21.0868, 92.8402, 0.55 ) }
    dend_11 { pt3dadd( -94.1151, 16.048, 97.9896, 0.55 ) }
    dend_11 { pt3dadd( -97.4305, 11.7413, 104.391, 0.55 ) }
    dend_11 { pt3dadd( -100.345, 7.34474, 110.914, 0.55 ) }
    dend_11 { pt3dadd( -103.606, 3.58782, 117.716, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 42/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.7183, 15.8381, 16.4238, 0.83 ) }
    dend_3 { pt3dadd( -12.8685, 18.5817, 15.6359, 0.83 ) }
    dend_3 { pt3dadd( -13.1484, 23.6915, 14.1685, 0.83 ) }
    dend_3 { pt3dadd( -13.529, 30.6397, 12.1732, 0.83 ) }
    dend_3 { pt3dadd( -13.8718, 36.8987, 10.3757, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -12.7183, 15.8381, 16.4238, 0.83 ) }
    dend_2 { pt3dadd( -13.0966, 15.7411, 20.9142, 0.83 ) }
    dend_2 { pt3dadd( -13.3056, 15.6875, 23.3946, 0.83 ) }
    dend_2 { pt3dadd( -13.5755, 15.6183, 26.5977, 0.83 ) }
    dend_2 { pt3dadd( -13.8014, 15.5604, 29.2789, 0.83 ) }
    dend_2 { pt3dadd( -14.0702, 15.4914, 32.4702, 0.55 ) }
    dend_2 { pt3dadd( -13.6714, 16.171, 39.9029, 0.55 ) }
    dend_2 { pt3dadd( -13.5657, 15.9969, 47.3698, 0.55 ) }
    dend_2 { pt3dadd( -13.6938, 14.9156, 54.746, 0.55 ) }
    dend_2 { pt3dadd( -12.6749, 13.4491, 61.9649, 0.55 ) }
    dend_2 { pt3dadd( -10.1787, 11.3048, 68.5865, 0.55 ) }
    dend_2 { pt3dadd( -8.57676, 9.90829, 75.7093, 0.55 ) }
    dend_2 { pt3dadd( -5.85327, 9.4211, 82.6265, 0.55 ) }
    dend_2 { pt3dadd( -4.14583, 8.32333, 89.7856, 0.55 ) }
    dend_2 { pt3dadd( -3.15959, 7.18737, 97.0784, 0.55 ) }
    dend_2 { pt3dadd( -1.16625, 4.71471, 103.746, 0.55 ) }
    dend_2 { pt3dadd( -0.421644, 2.51577, 110.787, 0.55 ) }
    dend_2 { pt3dadd( -1.70646, 0.5331, 117.846, 0.55 ) }
    dend_2 { pt3dadd( -2.15846, -1.34441, 125.029, 0.55 ) }
    dend_2 { pt3dadd( -2.99253, -1.9782, 132.423, 0.55 ) }
    dend_2 { pt3dadd( -3.80041, -2.38936, 139.838, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 68/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 32.1258, 28.5836, -62.1598, 0.55 ) }
    dend_48 { pt3dadd( 37.7428, 31.3232, -60.3345, 0.55 ) }
    dend_48 { pt3dadd( 41.4208, 33.0341, -59.1365, 0.55 ) }
    dend_48 { pt3dadd( 45.6802, 34.9257, -57.7773, 0.55 ) }
    dend_48 { pt3dadd( 48.1495, 35.9886, -57.0123, 0.55 ) }
    dend_48 { pt3dadd( 52.4502, 37.7501, -55.6449, 0.55 ) }
    dend_48 { pt3dadd( 54.9803, 38.7567, -54.8431, 0.28 ) }
    dend_48 { pt3dadd( 56.5229, 39.2905, -54.352, 0.55 ) }
    dend_48 { pt3dadd( 58.3886, 39.9389, -53.7701, 0.28 ) }
    dend_48 { pt3dadd( 59.4023, 40.336, -53.4752, 0.55 ) }
    dend_48 { pt3dadd( 61.8357, 41.44, -52.717, 0.28 ) }
    dend_48 { pt3dadd( 63.2466, 42.2308, -52.1785, 0.55 ) }
    dend_48 { pt3dadd( 66.5752, 44.3783, -50.6569, 0.55 ) }
    dend_48 { pt3dadd( 68.3444, 45.7023, -49.6996, 0.55 ) }
    dend_48 { pt3dadd( 70.3506, 47.527, -48.389, 0.28 ) }
    dend_48 { pt3dadd( 71.6831, 48.9731, -47.3939, 0.55 ) }
    dend_48 { pt3dadd( 73.3441, 51.3152, -45.8662, 0.28 ) }
    dend_48 { pt3dadd( 73.6112, 51.791, -45.5507, 0.28 ) }
    dend_48 { pt3dadd( 74.1287, 53.0051, -44.7389, 0.83 ) }
    dend_48 { pt3dadd( 74.8169, 54.8625, -43.4682, 0.28 ) }
    dend_48 { pt3dadd( 75.1952, 55.9979, -42.7877, 0.83 ) }
    dend_48 { pt3dadd( 75.8249, 58.3209, -41.6383, 0.28 ) }
    dend_48 { pt3dadd( 75.9827, 59.0254, -41.3654, 0.28 ) }
    dend_48 { pt3dadd( 76.192, 60.0327, -40.9775, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 92/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 32.1258, 28.5836, -62.1598, 0.55 ) }
    dend_47 { pt3dadd( 34.3531, 29.9189, -64.6572, 0.55 ) }
    dend_47 { pt3dadd( 34.776, 30.158, -65.0624, 0.83 ) }
    dend_47 { pt3dadd( 37.2014, 31.4362, -66.8452, 0.55 ) }
    dend_47 { pt3dadd( 38.9771, 32.3055, -67.8858, 0.28 ) }
    dend_47 { pt3dadd( 40.3156, 32.9606, -68.6702, 0.55 ) }
    dend_47 { pt3dadd( 41.7121, 33.6442, -69.4886, 0.28 ) }
    dend_47 { pt3dadd( 43.8632, 34.6671, -70.354, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_47 { pt3dadd( 46.1652, 35.7035, -71.1424, 0.28 ) }
    dend_47 { pt3dadd( 47.4827, 36.2477, -71.3643, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 2/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -43.1558, 2.42839, -48.6843, 0.83 ) }
    dend_20 { pt3dadd( -46.229, 4.97579, -57.1231, 0.83 ) }
    dend_20 { pt3dadd( -48.2778, 6.65652, -62.4715, 0.83 ) }
    dend_20 { pt3dadd( -49.7116, 7.89893, -66.3424, 0.28 ) }
    dend_20 { pt3dadd( -51.1626, 9.2368, -70.1978, 0.83 ) }
    dend_20 { pt3dadd( -52.5246, 10.5071, -73.6576, 0.83 ) }
    dend_20 { pt3dadd( -54.6424, 12.7285, -79.3551, 0.28 ) }
    dend_20 { pt3dadd( -55.3068, 13.5165, -81.1031, 0.55 ) }
    dend_20 { pt3dadd( -57.7401, 16.8014, -87.4816, 1.39 ) }
    dend_20 { pt3dadd( -58.4788, 17.8521, -89.3512, 0.28 ) }
    dend_20 { pt3dadd( -58.9934, 18.6474, -90.6421, 0.83 ) }
    dend_20 { pt3dadd( -62.5399, 24.5628, -99.1261, 0.28 ) }
    dend_20 { pt3dadd( -63.185, 25.741, -100.528, 0.55 ) }
    dend_20 { pt3dadd( -64.0193, 27.1927, -102.023, 0.28 ) }
    dend_20 { pt3dadd( -64.3247, 27.6891, -102.428, 0.55 ) }
    dend_20 { pt3dadd( -65.9925, 30.367, -104.391, 0.28 ) }
    dend_20 { pt3dadd( -66.9651, 31.9065, -105.2, 1.11 ) }
    dend_20 { pt3dadd( -68.5258, 34.0997, -105.979, 0.55 ) }
    dend_20 { pt3dadd( -69.7386, 35.7774, -106.851, 0.28 ) }
    dend_20 { pt3dadd( -70.1022, 36.2201, -107.136, 0.83 ) }
    dend_20 { pt3dadd( -71.0298, 37.2385, -107.912, 0.28 ) }
    dend_20 { pt3dadd( -71.622, 37.857, -108.428, 0.83 ) }
    dend_20 { pt3dadd( -75.8363, 42.3485, -112.878, 0.28 ) }
    dend_20 { pt3dadd( -76.4593, 42.9593, -113.639, 0.55 ) }
    dend_20 { pt3dadd( -77.8866, 44.2999, -115.515, 0.28 ) }
    dend_20 { pt3dadd( -78.7001, 44.9812, -116.583, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 28/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -43.1558, 2.42839, -48.6843, 0.55 ) }
    dend_19 { pt3dadd( -46.0095, 1.70928, -50.8867, 0.55 ) }
    dend_19 { pt3dadd( -47.375, 1.31137, -51.9621, 0.55 ) }
    dend_19 { pt3dadd( -50.4689, 0.259793, -54.5861, 0.55 ) }
    dend_19 { pt3dadd( -51.4796, -0.102026, -55.4791, 0.55 ) }
    dend_19 { pt3dadd( -52.8676, -0.621397, -56.8408, 0.55 ) }
    dend_19 { pt3dadd( -55.2054, -1.49547, -59.2227, 0.55 ) }
    dend_19 { pt3dadd( -58.129, -2.58612, -62.4047, 0.55 ) }
    dend_19 { pt3dadd( -61.0933, -3.73545, -65.8466, 0.28 ) }
    dend_19 { pt3dadd( -63.2648, -4.56814, -68.4897, 0.83 ) }
    dend_19 { pt3dadd( -66.8484, -5.95224, -73.2312, 0.55 ) }
    dend_19 { pt3dadd( -68.8162, -6.74259, -76.191, 0.55 ) }
    dend_19 { pt3dadd( -70.76, -7.55514, -79.5329, 0.55 ) }
    dend_19 { pt3dadd( -72.441, -8.28879, -82.4325, 0.28 ) }
    dend_19 { pt3dadd( -73.3055, -8.69233, -84.0773, 1.39 ) }
    dend_19 { pt3dadd( -76.4467, -10.2097, -90.4679, 0.55 ) }
    dend_19 { pt3dadd( -78.5033, -11.2249, -94.8319, 0.28 ) }
    dend_19 { pt3dadd( -79.253, -11.5948, -96.4394, 0.83 ) }
    dend_19 { pt3dadd( -81.5561, -12.6953, -101.166, 0.28 ) }
    dend_19 { pt3dadd( -85.4094, -14.4488, -108.818, 0.55 ) }
    dend_19 { pt3dadd( -88.2907, -15.744, -114.164, 0.28 ) }
    dend_19 { pt3dadd( -89.2708, -16.1247, -115.695, 0.55 ) }
    dend_19 { pt3dadd( -92.0069, -17.0688, -119.561, 0.28 ) }
    dend_19 { pt3dadd( -92.7047, -17.285, -120.506, 0.55 ) }
    dend_19 { pt3dadd( -94.4692, -17.7685, -122.882, 0.28 ) }
    dend_19 { pt3dadd( -95.8962, -18.1524, -124.498, 0.55 ) }
    dend_19 { pt3dadd( -100.068, -19.2811, -129.084, 0.28 ) }
    dend_19 { pt3dadd( -101.308, -19.6006, -130.438, 0.55 ) }
    dend_19 { pt3dadd( -105.658, -20.6274, -135.269, 0.28 ) }
    dend_19 { pt3dadd( -108.125, -21.1577, -138.067, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -96.1425, 95.072, -53.3054, 0.28 ) }
    dend_14 { pt3dadd( -97.0597, 95.4123, -54.8591, 0.28 ) }
    dend_14 { pt3dadd( -99.4615, 96.4334, -58.9022, 0.28 ) }
    dend_14 { pt3dadd( -100.286, 96.859, -60.311, 0.55 ) }
    dend_14 { pt3dadd( -103.054, 98.4423, -65.3081, 0.28 ) }
    dend_14 { pt3dadd( -103.876, 98.9124, -66.7921, 0.83 ) }
    dend_14 { pt3dadd( -106.333, 100.318, -71.2278, 0.28 ) }
    dend_14 { pt3dadd( -106.743, 100.585, -72.0099, 0.55 ) }
    dend_14 { pt3dadd( -108.831, 102.111, -75.9932, 0.28 ) }
    dend_14 { pt3dadd( -110.186, 103.28, -78.7221, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -96.1425, 95.072, -53.3054, 0.28 ) }
    dend_13 { pt3dadd( -96.6367, 101.595, -59.3919, 0.28 ) }
    dend_13 { pt3dadd( -96.6875, 102.324, -60.0569, 0.55 ) }
    dend_13 { pt3dadd( -96.9831, 106.705, -63.9337, 0.28 ) }
    dend_13 { pt3dadd( -97.0042, 107.464, -64.4276, 0.55 ) }
    dend_13 { pt3dadd( -97.0251, 110.184, -65.8879, 0.28 ) }
    dend_13 { pt3dadd( -97.0271, 112.121, -66.8037, 0.83 ) }
    dend_13 { pt3dadd( -97.0011, 116.079, -68.0228, 0.28 ) }
    dend_13 { pt3dadd( -96.9867, 116.686, -68.1865, 0.55 ) }
    dend_13 { pt3dadd( -96.5894, 125.109, -69.973, 0.28 ) }
    dend_13 { pt3dadd( -96.5326, 126.16, -70.1472, 0.55 ) }
    dend_13 { pt3dadd( -96.3805, 128.759, -70.3249, 0.28 ) }
    dend_13 { pt3dadd( -96.2882, 130.11, -70.3079, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 81/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -13.8718, 36.8987, 10.3757, 0.55 ) }
    dend_9 { pt3dadd( -13.5611, 37.8964, 11.3102, 0.55 ) }
    dend_9 { pt3dadd( -12.9364, 39.8151, 13.1155, 0.55 ) }
    dend_9 { pt3dadd( -12.4775, 41.2068, 14.4102, 0.55 ) }
    dend_9 { pt3dadd( -11.5664, 43.7294, 16.7113, 0.55 ) }
    dend_9 { pt3dadd( -11.1095, 44.9462, 17.7841, 0.28 ) }
    dend_9 { pt3dadd( -10.9032, 45.4652, 18.2046, 0.55 ) }
    dend_9 { pt3dadd( -10.6178, 46.1837, 18.7988, 0.28 ) }
    dend_9 { pt3dadd( -10.4819, 46.4999, 19.0671, 0.55 ) }
    dend_9 { pt3dadd( -10.0164, 47.3767, 19.7941, 0.28 ) }
    dend_9 { pt3dadd( -9.63813, 47.9947, 20.2842, 0.55 ) }
    dend_9 { pt3dadd( -8.37845, 49.8652, 21.8898, 0.28 ) }
    dend_9 { pt3dadd( -7.2927, 51.3033, 23.1261, 0.28 ) }
    dend_9 { pt3dadd( -6.86674, 51.852, 23.6229, 0.83 ) }
    dend_9 { pt3dadd( -5.63583, 53.3739, 25.0765, 0.55 ) }
    dend_9 { pt3dadd( -4.815, 54.3403, 26.071, 0.28 ) }
    dend_9 { pt3dadd( -4.70649, 54.4494, 26.1965, 0.55 ) }
    dend_9 { pt3dadd( -2.77352, 55.91, 28.2195, 0.28 ) }
    dend_9 { pt3dadd( -0.661512, 59.9737, 33.6339, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_9 { pt3dadd( 2.23341, 63.549, 39.0732, 0.28 ) }
    dend_9 { pt3dadd( 5.34609, 66.1701, 44.9865, 0.28 ) }
    dend_9 { pt3dadd( 8.39575, 68.4583, 51.088, 0.28 ) }
    dend_9 { pt3dadd( 10.1381, 71.2731, 57.4435, 0.28 ) }
    dend_9 { pt3dadd( 12.8169, 74.1854, 63.4125, 0.28 ) }
    dend_9 { pt3dadd( 15.0729, 78.0634, 68.9199, 0.28 ) }
    dend_9 { pt3dadd( 16.9528, 82.0003, 74.5206, 0.28 ) }
    dend_9 { pt3dadd( 18.3152, 84.8894, 80.9309, 0.28 ) }
    dend_9 { pt3dadd( 18.4491, 87.6317, 87.5573, 0.28 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 9/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.8718, 36.8987, 10.3757, 0.55 ) }
    dend_4 { pt3dadd( -15.3642, 42.858, 13.5277, 0.55 ) }
    dend_4 { pt3dadd( -16.2746, 45.7428, 15.159, 0.55 ) }
    dend_4 { pt3dadd( -17.1592, 48.0331, 16.5368, 0.55 ) }
    dend_4 { pt3dadd( -17.7775, 49.4835, 17.4096, 0.55 ) }
    dend_4 { pt3dadd( -20.0965, 54.6611, 20.4356, 0.55 ) }
    dend_4 { pt3dadd( -20.9062, 56.5517, 21.5125, 0.55 ) }
    dend_4 { pt3dadd( -21.7877, 58.3175, 22.6734, 0.83 ) }
    dend_4 { pt3dadd( -22.9347, 60.4443, 24.1595, 0.83 ) }
    dend_4 { pt3dadd( -23.8092, 62.1343, 25.3777, 0.83 ) }
    dend_4 { pt3dadd( -24.5719, 63.6371, 26.4252, 0.55 ) }
    dend_4 { pt3dadd( -26.3664, 67.75, 28.9883, 0.55 ) }
    dend_4 { pt3dadd( -27.4309, 70.4836, 30.7187, 0.55 ) }
    dend_4 { pt3dadd( -28.0645, 72.2601, 31.928, 0.55 ) }
    dend_4 { pt3dadd( -28.7491, 74.4593, 33.5011, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 24/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -28.7491, 74.4593, 33.5011, 0.55 ) }
    dend_6 { pt3dadd( -31.9895, 78.0342, 33.4411, 0.55 ) }
    dend_6 { pt3dadd( -34.3928, 80.6443, 33.4532, 0.55 ) }
    dend_6 { pt3dadd( -35.8813, 82.3556, 33.5033, 0.28 ) }
    dend_6 { pt3dadd( -37.2558, 83.9829, 33.5713, 0.55 ) }
    dend_6 { pt3dadd( -38.2434, 85.2138, 33.5475, 0.55 ) }
    dend_6 { pt3dadd( -39.1828, 86.4099, 33.4821, 0.28 ) }
    dend_6 { pt3dadd( -39.8215, 87.2456, 33.4532, 0.55 ) }
    dend_6 { pt3dadd( -41.2256, 89.1449, 33.3864, 0.28 ) }
    dend_6 { pt3dadd( -41.5798, 89.6842, 33.3058, 0.55 ) }
    dend_6 { pt3dadd( -43.074, 92.2639, 32.7961, 0.28 ) }
    dend_6 { pt3dadd( -43.5623, 93.1732, 32.546, 0.55 ) }
    dend_6 { pt3dadd( -51.3937, 100.382, 32.911, 0.55 ) }
    dend_6 { pt3dadd( -58.877, 107.934, 32.7753, 0.55 ) }
    dend_6 { pt3dadd( -64.4996, 116.747, 33.8398, 0.55 ) }
    dend_6 { pt3dadd( -70.384, 125.425, 32.6095, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.7491, 74.4593, 33.5011, 0.28 ) }
    dend_5 { pt3dadd( -29.0062, 76.1603, 37.2007, 0.28 ) }
    dend_5 { pt3dadd( -29.1001, 76.782, 38.5529, 0.55 ) }
    dend_5 { pt3dadd( -29.1944, 77.4054, 39.9087, 0.55 ) }
    dend_5 { pt3dadd( -29.499, 79.4212, 44.2929, 0.28 ) }
    dend_5 { pt3dadd( -29.7552, 81.116, 47.9791, 0.55 ) }
    dend_5 { pt3dadd( -29.0425, 85.3493, 60.4019, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -70.384, 125.425, 32.6095, 0.55 ) }
    dend_8 { pt3dadd( -76.065, 131.72, 32.3026, 0.55 ) }
    dend_8 { pt3dadd( -81.4023, 138.249, 32.7683, 0.55 ) }
    dend_8 { pt3dadd( -86.483, 144.929, 33.509, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -70.384, 125.425, 32.6095, 0.28 ) }
    dend_7 { pt3dadd( -74.7744, 133.566, 31.8987, 0.55 ) }
    dend_7 { pt3dadd( -79.0031, 141.468, 29.2219, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_38, dend_37, dend_32, dend_25, dend_22, dend_15, dend_0, dend_49, dend_44, dend_40, dend_39, dend_34, dend_33, dend_29, dend_26, dend_24, dend_23, dend_17, dend_16, dend_10, dend_1, dend_51, dend_50, dend_46, dend_45, dend_42, dend_41, dend_36, dend_35, dend_31, dend_30, dend_28, dend_27, dend_21, dend_18, dend_12, dend_11, dend_3, dend_2, dend_48, dend_47, dend_20, dend_19, dend_14, dend_13, dend_9, dend_4, dend_6, dend_5, dend_8, dend_7]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_38 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_37 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_22 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_44 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_39 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_34 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_33 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_24 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_16 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_10 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_51 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_36 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_28 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_27 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_12 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_11 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_2 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_48 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_20 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_19 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_13 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_15 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_25 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_29 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_17 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_3 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_18 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_45 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_46 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_5 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_35 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_7 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_8 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_41 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_42 OneSecGrp_SectionRef_30.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_15, dend_0, axon_0, axon_0, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, axon_1, axon_1, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_8, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_15 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 3
    dend_37 nseg = 3
    dend_22 nseg = 3
    dend_49 nseg = 7
    dend_44 nseg = 3
    dend_40 nseg = 9
    dend_39 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 3
    dend_16 nseg = 7
    dend_10 nseg = 3
    dend_51 nseg = 9
    dend_36 nseg = 3
    dend_31 nseg = 13
    dend_28 nseg = 7
    dend_27 nseg = 7
    dend_21 nseg = 7
    dend_12 nseg = 5
    dend_11 nseg = 7
    dend_2 nseg = 7
    dend_48 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 5
    dend_13 nseg = 3
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_NBC_9d37c4b1f8_0_0


