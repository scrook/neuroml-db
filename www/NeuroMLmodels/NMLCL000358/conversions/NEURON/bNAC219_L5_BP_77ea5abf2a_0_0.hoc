// Cell: bNAC219_L5_BP_77ea5abf2a_0_0
/*
{
  "id" : "bNAC219_L5_BP_77ea5abf2a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-4.0896, 9.30253, 3.05641, 0.83", "-8.34066, 12.5975, 3.69753, 1.11", "-10.8472, 14.5389, 4.03103, 0.83", "-13.2823, 16.4087, 4.32984, 0.83", "-14.724, 17.4749, 4.49358, 1.11", "-19.239, 20.8066, 5.01837, 1.11", "-27.3144, 26.5106, 5.94604, 0.83", "-30.2238, 28.4872, 6.25238, 0.83", "-32.5276, 30.006, 6.44265, 0.83", "-34.7742, 31.5111, 6.60736, 0.83", "-36.603, 32.7517, 6.69623, 0.55", "-37.9776, 33.5917, 6.78642, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.46649, 6.18291, -6.18485, 0.55", "6.9441, 6.71887, -6.73814, 0.55", "8.38178, 6.85416, -7.47027, 0.83", "10.6571, 6.99815, -8.83025, 0.55", "11.7555, 7.06765, -9.48674, 1.38", "14.4561, 7.23854, -11.1009, 0.55", "15.6064, 7.18067, -11.8711, 0.83", "21.5564, 6.11939, -16.1984, 0.55", "22.132, 5.97667, -16.6745, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.688347, -10.8598, 3.36616, 1.11", "-0.744707, -15.8324, 5.14884, 1.11", "-0.767659, -17.8576, 5.87486, 0.83", "-0.798154, -20.5482, 6.83942, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.895567, 10.7966, -1.41237, 1.11", "0.963076, 13.6134, -1.38868, 1.11", "1.04503, 18.2092, -1.18423, 1.38", "1.05356, 18.4653, -1.16786, 1.38", "1.34588, 21.6366, -0.915063, 0.83", "1.77298, 24.9925, -0.456683, 0.83", "2.5327, 28.7874, 0.54692, 0.83", "2.98056, 30.2299, 1.12018, 0.83", "3.43353, 31.2769, 1.65282, 1.11", "4.78419, 33.8317, 3.0446, 0.55", "6.35764, 36.5014, 4.70452, 0.83", "8.45814, 39.2558, 6.61748, 0.55", "9.5436, 40.4036, 7.49653, 0.83", "11.0504, 41.9592, 8.85236, 0.55", "12.9034, 43.937, 10.6725, 0.55", "15.4679, 46.9099, 13.4307, 0.55", "18.2912, 50.3058, 16.4753, 0.55", "20.0413, 52.5092, 18.7202, 0.55", "22.1491, 55.2942, 21.8596, 0.55", "22.5824, 55.8532, 22.5683, 0.83", "23.7157, 57.3303, 24.5599, 0.55", "24.6809, 58.4832, 26.1299, 0.83", "26.8847, 61.6245, 29.8448, 0.55", "27.7424, 62.7719, 30.9477, 0.83", "28.5737, 63.6207, 31.7168, 0.55", "29.4147, 64.3533, 32.3239, 0.83", "31.3043, 65.7207, 33.455, 0.83", "33.8238, 67.5806, 34.711, 0.83", "35.3838, 68.8078, 35.3028, 0.55", "36.5705, 69.8669, 35.7607, 0.55", "39.6863, 72.6042, 36.9117, 0.83", "41.7065, 74.3596, 37.5693, 0.55", "44.7867, 76.9329, 38.4365, 0.55", "47.6229, 79.0944, 39.1132, 0.55", "50.1677, 80.9277, 39.6479, 0.55", "53.3995, 83.0793, 40.1723, 0.55", "55.3851, 84.1401, 40.4274, 0.55", "56.756, 84.7402, 40.436, 0.55", "58.5964, 85.2016, 40.2934, 0.55", "61.3697, 85.4445, 39.8577, 0.55", "63.1084, 85.3795, 39.521, 0.55", "65.636, 85.217, 39.2035, 0.55", "70.413, 85.0592, 39.0219, 0.55", "74.1362, 85.1079, 39.1436, 0.55", "78.0594, 85.3477, 39.5073, 0.55", "80.5569, 85.5885, 39.9398, 0.55", "86.9986, 86.8099, 41.4939, 0.55", "90.7802, 87.8327, 42.7053, 0.55", "93.5895, 88.7913, 43.886, 0.55", "95.2854, 89.6687, 44.6716, 0.55", "97.2468, 90.9634, 45.5715, 0.55", "100.586, 93.5058, 46.7832, 0.55", "101.361, 94.1171, 46.9507, 0.55", "103.597, 95.7543, 47.2803, 0.55", "105.648, 97.4924, 47.5747, 0.83", "106.769, 98.4563, 47.7172, 0.55", "108.449, 100.106, 47.8617, 0.83", "117.096, 108.919, 51.009, 0.83", "124.622, 118.983, 53.1164, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-37.9776, 33.5917, 6.78642, 0.55", "-39.393, 34.3599, 6.04808, 0.55", "-40.9321, 35.1952, 5.24521, 0.55", "-42.7895, 36.2032, 4.27632, 0.55", "-44.3232, 37.0356, 3.47627, 0.83", "-45.6084, 37.7331, 2.80584, 0.55", "-47.994, 39.0278, 1.56142, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-37.9776, 33.5917, 6.78642, 0.55", "-39.9858, 34.1629, 6.23472, 0.55", "-42.1686, 34.6526, 5.84535, 0.55", "-44.6562, 35.1902, 5.46229, 0.55", "-48.3274, 35.8545, 5.2222, 0.55", "-51.4449, 36.2742, 5.21081, 0.55", "-54.7431, 36.6349, 5.31993, 0.55", "-58.0028, 36.7016, 5.70042, 0.55", "-60.8659, 36.4447, 6.21836, 0.55", "-64.5101, 35.8144, 7.15582, 0.55", "-66.1374, 35.3901, 7.73469, 0.55", "-67.9091, 34.9, 8.4216, 0.55", "-71.013, 33.8578, 9.46329, 0.55", "-72.618, 33.3597, 9.79435, 0.55", "-74.2983, 32.7935, 10.1214, 0.55", "-76.2586, 32.1848, 10.3359, 0.55", "-78.3773, 31.5764, 10.5257, 0.55", "-81.3886, 30.7151, 10.7351, 0.55", "-85.3372, 29.8911, 10.7434, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.132, 5.97667, -16.6745, 0.55", "27.4522, 7.7963, -17.8975, 0.55", "30.5522, 8.61099, -19.0215, 0.55", "33.6272, 9.27158, -20.1595, 0.55", "35.7367, 9.63898, -20.9265, 0.55", "38.8262, 10.1073, -22.0155, 0.55", "45.2546, 10.9324, -24.4602, 0.55", "52.5685, 11.7667, -27.7128, 0.55", "56.1454, 11.9237, -29.5085, 0.55", "58.0701, 11.9472, -30.5888, 0.55", "60.1824, 11.9732, -31.8586, 0.55", "63.9615, 11.9185, -34.098, 0.55", "65.3433, 11.815, -34.9468, 0.55", "71.1941, 11.4673, -38.9958, 0.55", "75.3392, 11.2509, -42.1674, 0.55", "77.7233, 11.1639, -44.0624, 0.55", "80.1031, 11.057, -45.9482, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.132, 5.97667, -16.6745, 0.83", "23.2481, 6.97857, -16.8428, 0.83", "23.8889, 7.54281, -16.9716, 0.55", "24.8353, 8.37484, -17.2568, 0.83", "25.47, 8.94699, -17.4746, 0.55", "26.3391, 9.76523, -17.767, 0.83", "27.3763, 10.7822, -18.081, 0.55", "27.9044, 11.2567, -18.2035, 0.55", "29.1466, 12.1896, -18.3429, 0.83", "30.2889, 12.9285, -18.2713, 0.55", "30.9232, 13.3503, -18.1632, 0.83", "31.8613, 14.0316, -17.8973, 0.55", "33.1874, 15.082, -17.3311, 0.55", "35.0402, 16.4611, -16.4116, 0.55", "36.8086, 17.7391, -15.3804, 0.55", "38.2103, 18.742, -14.531, 0.55", "40.5178, 20.4103, -13.1201, 0.55", "42.1921, 21.6941, -12.0599, 0.55", "43.1811, 22.5731, -11.4016, 0.55", "44.9596, 24.4078, -10.2236, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.798154, -20.5482, 6.83942, 0.83", "-0.944326, -22.5431, 6.75583, 0.83", "-1.08674, -24.4867, 6.67438, 0.83", "-1.24575, -26.6567, 6.58345, 0.83", "-1.32878, -27.7898, 6.53597, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.798154, -20.5482, 6.83942, 0.55", "-0.0461184, -22.4373, 8.01495, 0.55", "0.664169, -24.7411, 9.58393, 0.55", "1.16172, -27.7406, 11.8215, 0.55", "1.27921, -28.9032, 12.7337, 0.83", "1.35781, -31.8607, 15.4338, 0.55", "1.27855, -33.3825, 16.8746, 0.55", "1.07974, -36.3403, 19.8101, 0.83", "0.825707, -38.5321, 22.1465, 0.55", "0.452127, -40.3324, 24.0685, 0.55", "-0.340934, -43.7378, 27.6577, 0.55", "-0.974746, -46.4519, 30.4861, 0.55", "-1.43432, -48.6299, 32.7779, 0.55", "-1.80501, -50.9477, 35.1199, 0.28", "-1.88359, -51.9166, 36.0468, 0.55", "-1.99669, -53.7073, 37.6513, 0.28", "-1.85595, -56.5162, 39.6703, 0.55", "-3.54291, -65.7625, 47.2034, 0.55", "-5.33135, -74.299, 55.511, 0.55", "-6.30524, -81.3466, 65.2305, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-47.994, 39.0278, 1.56142, 0.55", "-50.0496, 39.5584, 3.1763, 0.55", "-50.8871, 39.7562, 3.9844, 0.83", "-51.8324, 39.9652, 5.08972, 0.55", "-52.5389, 40.1426, 6.01272, 0.83", "-54.3974, 40.6835, 8.39355, 0.55", "-55.1002, 40.9043, 9.29847, 0.28", "-56.2464, 41.3156, 10.9226, 0.55", "-57.7868, 41.8769, 13.0905, 0.55", "-58.9709, 42.2883, 14.6705, 0.55", "-60.5661, 42.8233, 16.7201, 0.28", "-60.9939, 42.9523, 17.1916, 0.55", "-61.8885, 43.2225, 18.1257, 0.28", "-62.511, 43.4095, 18.6901, 0.55", "-63.8089, 43.7523, 19.7205, 0.28", "-64.5788, 43.8962, 20.2923, 0.55", "-65.9307, 44.0426, 21.3381, 0.28", "-66.8462, 44.1263, 22.0071, 0.55", "-71.8141, 44.765, 28.8885, 0.55", "-76.1392, 44.7032, 36.2186, 0.55", "-80.2287, 43.8505, 43.6341, 0.55", "-84.341, 41.9571, 50.8413, 0.55", "-87.3629, 40.5874, 58.6792, 0.55", "-91.0737, 39.4554, 66.2548, 0.55", "-94.8602, 39.739, 73.8721, 0.55", "-98.6267, 39.3391, 81.494, 0.55", "-102.206, 39.5406, 89.2133, 0.55", "-105.351, 39.67, 97.1211, 0.55", "-107.608, 38.9056, 105.291, 0.55", "-109.933, 38.9438, 113.479, 0.55", "-112.397, 38.0992, 121.582, 0.55", "-113.821, 36.9643, 129.896, 0.55", "-113.764, 36.4959, 138.394, 0.55", "-113.723, 34.3938, 146.641, 0.55", "-112.476, 32.1352, 154.752, 0.55", "-111.655, 30.2556, 163.012, 0.55", "-111.716, 29.0074, 171.431, 0.55", "-113.57, 29.0356, 179.738, 0.55", "-114.673, 28.1436, 188.13, 0.55", "-114.133, 28.7446, 196.603, 0.55", "-114.977, 29.9291, 204.989, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-47.994, 39.0278, 1.56142, 0.55", "-49.5778, 39.4395, -0.0857044, 0.55", "-50.8475, 39.8942, -1.96291, 0.55", "-52.0556, 40.5029, -3.97805, 0.55", "-52.8121, 40.8841, -5.2399, 0.55", "-54.192, 41.5795, -7.54167, 0.83", "-55.2016, 42.0882, -9.22566, 0.55", "-56.4037, 42.7601, -11.7141, 0.83", "-56.8874, 43.2544, -13.144, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-85.3372, 29.8911, 10.7434, 0.28", "-86.4874, 28.0564, 9.31616, 0.28", "-87.022, 27.3006, 8.61539, 0.28", "-87.7021, 26.242, 7.59285, 0.55", "-88.2615, 25.3036, 6.71223, 0.28", "-89.0893, 23.8635, 5.39825, 0.55", "-91.399, 19.5872, 1.64774, 0.28", "-92.1147, 18.1311, 0.208645, 0.55", "-93.1753, 15.919, -2.09264, 0.28", "-93.7632, 14.6187, -3.53409, 0.55", "-94.1632, 13.7322, -4.55404, 0.28", "-94.6208, 12.7107, -5.71357, 0.55", "-95.9941, 9.24618, -9.44142, 0.28", "-96.4195, 8.21645, -10.6183, 0.55", "-97.1411, 6.72643, -12.6439, 0.28", "-97.7497, 5.82925, -14.0871, 0.28", "-98.3267, 5.26007, -15.1218, 0.55", "-100.433, 3.68992, -18.067, 0.28", "-101.435, 3.06278, -19.2723, 0.55", "-103.877, 1.70373, -22.1942, 0.28", "-106.346, 0.552412, -24.8992, 0.28", "-109.046, -0.47178, -27.6577, 0.28", "-110.306, -0.828539, -28.7594, 0.55", "-116.187, -6.53513, -36.8188, 0.55", "-123.28, -12.9895, -43.1545, 0.55", "-129.844, -18.4695, -50.8354, 0.55", "-136.369, -22.9384, -59.1756, 0.55", "-142.762, -26.2997, -68.1168, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-85.3372, 29.8911, 10.7434, 0.55", "-86.0301, 29.8881, 10.6535, 0.55", "-88.0471, 29.7907, 10.6284, 0.55", "-88.8154, 29.7226, 10.6471, 0.55", "-90.6303, 29.5047, 10.695, 0.55", "-93.3889, 29.2406, 10.6634, 0.55", "-94.815, 29.1514, 10.641, 0.28", "-97.0254, 28.9845, 10.5506, 0.55", "-98.6537, 28.851, 10.4196, 0.55", "-99.3419, 28.7899, 10.3639, 0.28", "-103.468, 28.4237, 10.0242, 0.55", "-105.371, 28.2136, 9.72874, 0.28", "-107.9, 27.9748, 9.19245, 0.28", "-110.049, 27.8448, 8.62667, 0.55", "-118.852, 27.8284, 8.56538, 0.55", "-127.604, 27.244, 9.30595, 0.55", "-136.133, 25.4703, 10.5747, 0.55", "-144.555, 24.7968, 13.048, 0.55", "-152.28, 23.1974, 16.9554, 0.55", "-159.034, 21.4864, 22.3358, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "80.1031, 11.057, -45.9482, 0.55", "83.7506, 11.7256, -49.2032, 0.55", "84.9293, 11.8585, -50.2701, 0.55", "86.4158, 11.9934, -51.5655, 0.55", "89.1433, 12.1424, -54.0405, 0.55", "92.0333, 12.1694, -56.625, 0.55", "93.4725, 12.1091, -57.8028, 0.83", "94.6921, 11.9539, -58.8066, 0.55", "95.6371, 11.7388, -59.5957, 0.83", "98.0171, 10.9161, -61.4746, 0.55", "100.024, 10.1033, -62.9516, 0.55", "102.322, 9.20398, -64.5607, 0.55", "104.868, 8.23242, -66.4221, 0.55", "106.592, 7.53501, -67.6844, 0.55", "108.545, 6.71875, -69.151, 0.55", "110.234, 6.00665, -70.5296, 0.55", "111.29, 5.56823, -71.541, 0.55", "112.781, 4.51701, -73.5919, 0.55", "113.642, 3.79156, -74.8487, 0.55", "114.543, 2.66432, -76.4687, 0.55", "115.936, 0.61987, -79.1508, 0.55", "116.244, 0.12981, -79.7402, 0.28", "120.126, -5.87971, -86.8516, 0.28", "121.34, -7.60132, -88.9502, 0.83", "125.932, -13.7729, -96.3046, 0.83", "128.236, -16.7514, -99.6264, 0.83", "129.283, -17.9886, -100.934, 0.55", "130.409, -19.167, -102.204, 0.55", "133.137, -21.2095, -104.524, 0.55", "135.902, -22.9088, -106.549, 0.28", "136.594, -22.9619, -106.598, 0.55", "138.013, -22.7515, -106.321, 0.28", "138.855, -22.5087, -106.072, 0.55", "139.724, -22.2277, -105.739, 0.28", "140.744, -21.8212, -105.324, 0.55", "142.273, -21.227, -104.898, 0.28", "143.518, -20.8041, -104.572, 0.55", "144.886, -20.3133, -104.361, 0.28", "146.771, -19.726, -104.229, 0.55", "148.89, -19.0903, -104.222, 0.55", "150.767, -18.5754, -104.34, 0.28", "153.38, -17.915, -104.644, 0.55", "157.936, -16.9094, -105.664, 0.55", "159.956, -16.4991, -106.384, 0.55", "160.828, -16.3388, -106.794, 0.83", "162.51, -16.099, -107.716, 0.55", "163.674, -15.9295, -108.443, 0.83", "166.79, -15.423, -110.473, 0.55", "168.737, -15.2466, -111.688, 0.28", "169.558, -15.1693, -112.095, 0.55", "171.825, -15.0057, -112.892, 0.28", "172.632, -14.9819, -113.09, 0.55", "174.286, -14.8945, -113.234, 0.28", "175.97, -14.7976, -113.056, 0.55", "179.337, -14.4644, -112.108, 0.28", "180.883, -14.2867, -111.496, 0.55", "183.201, -14.0697, -110.417, 0.28", "186.111, -13.7363, -108.971, 0.55", "188.202, -13.4562, -107.911, 0.55", "191.785, -12.8506, -106.081, 0.28", "193.254, -12.6056, -105.469, 0.55", "195.79, -12.2006, -104.728, 0.28", "198.288, -11.7252, -104.239, 0.55", "199.643, -11.4305, -104.218, 0.28", "200.836, -11.0747, -104.368, 0.55", "204.193, -10.061, -105.187, 0.28", "206.548, -9.21459, -105.897, 0.28", "208.556, -8.36394, -106.623, 0.55", "210.771, -7.42973, -107.565, 0.28", "211.316, -7.15313, -107.804, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "80.1031, 11.057, -45.9482, 0.55", "81.1362, 8.34351, -47.5217, 0.55", "81.8061, 6.03068, -48.6952, 0.28", "82.4136, 3.92072, -49.5924, 0.55", "83.9272, -0.526609, -51.5339, 0.28", "84.0158, -0.809439, -51.6954, 0.55", "84.5224, -2.29235, -52.6607, 0.28", "84.8362, -3.542, -53.6514, 0.55", "85.0959, -4.86239, -54.83, 0.28", "85.4019, -6.67346, -56.5177, 0.55", "86.1657, -11.2173, -60.6739, 0.55", "86.8187, -15.3677, -64.5324, 0.55", "87.3099, -18.689, -67.6211, 0.55", "87.7352, -21.9576, -70.6025, 0.55", "87.8418, -22.8008, -71.3388, 0.28", "87.9782, -23.6949, -72.0539, 0.55", "88.2741, -24.9148, -72.934, 0.28", "89.0131, -27.0665, -74.3161, 0.55", "90.7559, -31.1141, -76.3193, 0.55", "91.7077, -33.2785, -77.2018, 0.28", "92.5508, -35.4986, -78.1964, 0.55", "93.5105, -38.6401, -79.7074, 0.28", "94.1285, -41.197, -80.9866, 0.55", "94.8957, -45.0388, -82.9078, 0.28", "95.7145, -49.0044, -84.7762, 0.55", "96.8311, -54.7734, -87.5388, 0.28", "97.3622, -57.8566, -89.0216, 0.55", "97.858, -61.0198, -90.6109, 0.28", "98.2705, -63.8173, -92.1771, 0.28", "98.907, -67.3191, -94.4245, 0.55", "99.7084, -70.5364, -96.4283, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "44.9596, 24.4078, -10.2236, 0.55", "46.7166, 24.6745, -9.66722, 0.55", "48.0205, 24.783, -9.36461, 0.55", "50.8983, 24.9432, -8.83487, 0.55", "52.2102, 24.9547, -8.69797, 0.55", "53.6454, 24.9735, -8.62663, 0.55", "55.5826, 24.989, -8.66958, 0.55", "57.6566, 24.897, -8.87886, 0.55", "58.7613, 24.799, -9.09869, 0.55", "61.0396, 24.5096, -9.82321, 0.55", "62.0911, 24.3743, -10.1893, 0.55", "64.5689, 23.9974, -11.0901, 0.55", "66.2559, 23.6864, -11.6677, 0.55", "67.4928, 23.4669, -12.0405, 0.83", "69.4776, 23.0576, -12.5942, 0.55", "71.4279, 22.5948, -13.0414, 0.83", "73.088, 22.1522, -13.3461, 0.55", "74.5543, 21.7991, -13.5555, 0.55", "75.3778, 21.6437, -13.6445, 0.83", "77.289, 21.3157, -13.7629, 0.28", "78.2272, 21.2055, -13.779, 0.28", "79.1486, 21.0325, -13.82, 0.28", "80.1412, 20.8681, -13.8764, 0.28", "81.7285, 20.6224, -14.0055, 0.28", "82.3639, 20.5362, -14.0426, 0.55", "83.8656, 20.3878, -14.0004, 0.55", "86.5581, 20.1372, -13.7908, 0.55", "87.3028, 20.0595, -13.6965, 0.55", "87.9682, 19.9787, -13.5791, 0.83", "89.3942, 19.879, -13.2298, 0.55", "90.6313, 19.8005, -12.9082, 0.55", "91.7988, 19.7327, -12.6008, 0.55", "92.7081, 19.6576, -12.3819, 0.55", "94.1734, 19.4235, -12.0698, 0.55", "95.9333, 18.9795, -11.7438, 0.55", "98.7337, 17.9555, -11.3191, 0.55", "100.314, 17.1654, -11.1066, 0.55", "101.723, 16.2599, -10.9156, 0.28", "102.158, 15.9058, -10.8537, 0.55", "103.161, 14.8739, -10.6803, 0.28", "104.075, 13.6821, -10.4706, 0.55", "104.99, 12.1922, -10.0949, 0.55", "105.597, 11.2311, -9.7984, 0.28", "105.815, 10.8986, -9.67565, 0.55", "106.373, 10.08, -9.35743, 0.28", "107.122, 9.02983, -8.91377, 0.55", "109.032, 6.54553, -7.76886, 0.55", "110.016, 5.30859, -7.1607, 0.55", "110.926, 4.18075, -6.59119, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "44.9596, 24.4078, -10.2236, 0.55", "46.2421, 25.6769, -8.99099, 0.55", "46.6617, 26.0681, -8.62066, 0.55", "48.2666, 27.4005, -7.26745, 0.55", "50.0411, 28.9424, -5.75017, 0.55", "52.2961, 30.949, -3.73502, 0.55", "52.9203, 31.5015, -3.18354, 0.55", "54.0542, 32.4382, -2.17838, 0.55", "55.3063, 33.4689, -1.14689, 0.55", "56.7743, 34.6731, -0.0454988, 0.55", "58.1514, 35.832, 0.985366, 0.55", "58.9104, 36.4847, 1.49071, 0.55", "59.7959, 37.2781, 2.06608, 0.55", "60.8904, 38.2824, 2.73608, 0.83", "62.7465, 39.8133, 3.63049, 0.55", "64.0056, 40.7424, 4.19007, 0.83", "65.7905, 41.9167, 4.95305, 0.55", "66.3476, 42.2429, 5.19692, 0.55", "68.1053, 43.1508, 5.96717, 0.55", "71.3281, 44.5242, 7.33016, 0.55", "73.7307, 45.3775, 8.34922, 0.55", "75.638, 45.9928, 9.2459, 0.55", "77.5844, 46.558, 10.2779, 0.55", "77.9955, 46.6677, 10.5029, 0.28", "78.8363, 46.8581, 10.9753, 0.83", "82.2934, 47.6033, 12.9607, 0.55", "84.7243, 48.1041, 14.3047, 0.55", "86.6956, 48.5861, 15.4271, 0.55", "87.8709, 48.8764, 16.1101, 0.83", "88.7931, 49.1182, 16.6422, 0.28", "89.6314, 49.3349, 17.1167, 0.55", "95.5787, 52.9754, 20.8369, 0.55", "102.496, 55.0854, 24.0251, 0.55", "109.114, 58.1668, 27.0539, 0.55", "114.756, 60.8219, 31.9101, 0.55", "120.056, 62.5964, 37.4978, 0.55", "126.661, 62.582, 41.8373, 0.55", "133.614, 61.3188, 45.3767, 0.55", "141.09, 61.2114, 47.9375, 0.55", "148.378, 61.2166, 50.9948, 0.55", "155.928, 61.8056, 53.2536, 0.55", "163.136, 63.1378, 56.2098, 0.55", "170.016, 63.3854, 60.0912, 0.55", "176.64, 65.2127, 63.9958, 0.55", "182.483, 68.4338, 68.2324, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.32878, -27.7898, 6.53597, 1.38", "1.07399, -30.3227, 5.85486, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.32878, -27.7898, 6.53597, 0.55", "-2.88123, -29.7569, 6.41472, 0.55", "-4.59061, -32.2745, 6.2837, 0.55", "-5.92926, -33.9444, 6.1956, 0.55", "-7.03754, -35.3412, 5.93658, 0.55", "-9.43234, -38.2376, 5.12687, 0.55", "-11.1086, -40.1735, 4.50827, 0.55", "-12.592, -41.9091, 3.89747, 0.55", "-16.4085, -46.1373, 2.33086, 0.55", "-21.0027, -51.0356, 0.486924, 0.55", "-24.5551, -54.7472, -1.00818, 0.55", "-26.8171, -57.1834, -1.99754, 0.55", "-29.4105, -60.1043, -3.12349, 0.55", "-32.6952, -64.2859, -4.50247, 0.55", "-34.6108, -67.2454, -5.26251, 0.55", "-36.9855, -71.4948, -5.97114, 0.55", "-38.8756, -75.4712, -6.45201, 0.55", "-40.7705, -80.4261, -6.89777, 0.55", "-42.543, -86.2364, -7.22846, 0.55", "-43.4792, -90.6709, -7.32765, 0.55", "-43.8124, -92.8748, -7.21759, 0.55", "-44.3184, -98.0473, -6.64471, 0.55", "-44.7202, -102.885, -5.97351, 0.55", "-44.9158, -107.753, -4.91152, 0.55", "-45.0737, -110.545, -4.15409, 0.55", "-45.5446, -119.176, -1.49114, 0.55", "-45.5847, -119.812, -1.28444, 0.55", "-45.7679, -123.702, 0.0843628, 0.55", "-46.4361, -130.663, 2.65858, 0.55", "-46.6578, -132.992, 3.38046, 0.55", "-47.0254, -136.637, 3.87898, 0.55", "-47.0932, -137.992, 3.76066, 0.55", "-47.0276, -142.582, 2.52877, 0.55", "-46.7522, -145.556, 1.1283, 0.55", "-46.0801, -150.297, -2.04147, 0.55", "-44.9762, -156.096, -6.33739, 0.28", "-44.6599, -157.53, -7.58874, 0.55", "-44.1524, -159.705, -9.6748, 0.28", "-44.0769, -160.033, -10.0067, 0.55", "-43.6921, -161.829, -11.6733, 0.28", "-43.618, -162.438, -12.1049, 0.55", "-43.3705, -165.604, -13.751, 0.28", "-43.3291, -166.682, -14.3022, 0.55", "-43.2673, -169.799, -15.725, 0.28", "-43.244, -170.78, -16.1689, 0.55", "-43.1968, -174.165, -17.649, 0.28", "-43.1661, -175.722, -18.3368, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-6.30524, -81.3466, 65.2305, 0.55", "-10.0307, -90.6598, 75.925, 0.55", "-14.7442, -98.4848, 87.394, 0.55", "-19.4633, -107.287, 98.1289, 0.55", "-24.494, -116.084, 108.725, 0.55", "-28.7066, -126.711, 117.906, 0.55", "-32.4882, -136.937, 127.71, 0.55", "-36.0128, -149.547, 134.31, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.30524, -81.3466, 65.2305, 0.55", "-4.62216, -90.6037, 73.7004, 0.55", "-2.82484, -101.256, 80.3001, 0.55", "-3.04295, -111.87, 87.1966, 0.55", "-4.20794, -123.026, 93.0657, 0.55", "-4.83625, -134.17, 99.0403, 0.55", "-5.21021, -144.88, 105.778, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-56.8874, 43.2544, -13.144, 0.83", "-56.6357, 44.8275, -14.8191, 0.83", "-56.1324, 48.62, -18.5648, 0.55", "-55.9158, 50.2577, -20.043, 0.83", "-55.6801, 52.0117, -21.5037, 0.55", "-55.4433, 53.8192, -22.7489, 0.55", "-55.3196, 54.7293, -23.2571, 0.28", "-55.2778, 55.3309, -23.4424, 0.55", "-55.0858, 57.3497, -23.6318, 0.28", "-54.9833, 58.2157, -23.6695, 0.55", "-54.6648, 61.2242, -23.6796, 0.28", "-54.474, 63.6037, -23.6079, 0.55", "-54.3521, 67.3047, -23.3821, 0.28", "-54.358, 70.5482, -23.1217, 0.28", "-54.4655, 72.3542, -22.941, 0.55", "-54.7235, 74.483, -22.7259, 0.28", "-54.9133, 75.4924, -22.6091, 0.55", "-55.4888, 77.8529, -22.4435, 0.28", "-55.977, 79.4148, -22.4172, 0.28", "-56.489, 80.945, -22.4395, 0.28", "-56.7281, 81.7566, -22.4545, 0.55", "-57.5167, 85.0585, -22.5937, 0.28", "-58.3193, 88.9829, -22.8313, 0.55", "-58.5766, 90.3404, -22.9187, 0.55", "-58.8566, 91.6992, -22.9766, 0.55", "-59.6039, 94.5692, -23.1481, 0.55", "-60.216, 96.4393, -23.3027, 0.28", "-60.5308, 97.1378, -23.3713, 0.55", "-61.5201, 99.0141, -23.516, 0.28", "-62.657, 101.001, -23.7536, 0.55", "-64.5669, 103.825, -24.2141, 0.28", "-65.4981, 104.988, -24.4477, 0.28", "-67.0128, 106.577, -24.9492, 0.55", "-68.7098, 108.218, -25.5688, 0.28", "-69.0184, 108.471, -25.6806, 0.55", "-70.129, 109.26, -26.0755, 0.28", "-73.9554, 111.757, -27.3641, 0.55", "-79.2679, 114.768, -29.3455, 0.28", "-80.2482, 115.262, -29.7682, 0.55", "-82.9376, 116.517, -30.9717, 0.28", "-84.0666, 117.028, -31.5069, 0.28", "-85.0476, 117.447, -32.0178, 0.55", "-87.9121, 118.333, -33.7255, 0.28", "-89.9302, 118.756, -34.8497, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-56.8874, 43.2544, -13.144, 0.55", "-57.1774, 44.865, -13.6724, 0.55", "-57.3581, 45.8358, -13.8902, 0.28", "-57.5984, 46.5687, -13.8539, 0.55", "-58.1503, 48.2517, -13.7705, 0.28", "-58.538, 49.4338, -13.7119, 0.55", "-59.2526, 51.6131, -13.6039, 0.28", "-59.716, 52.8244, -13.3358, 0.55", "-61.4549, 55.9192, -11.6341, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-142.762, -26.2997, -68.1168, 0.55", "-147.066, -30.553, -74.2504, 0.55", "-149.924, -35.2224, -80.9038, 0.55", "-151.767, -38.6188, -88.6052, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-142.762, -26.2997, -68.1168, 0.55", "-146.825, -30.3139, -73.6542, 0.55", "-149.88, -34.3558, -79.7874, 0.55", "-152.596, -38.5252, -85.9945, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-159.034, 21.4864, 22.3358, 0.55", "-171.859, 20.3089, 27.0324, 0.55", "-184.989, 21.1919, 30.8717, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-159.034, 21.4864, 22.3358, 0.55", "-168.517, 20.708, 22.2384, 0.55", "-177.974, 21.0534, 23.2433, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "99.7084, -70.5364, -96.4283, 0.28", "108.366, -77.3194, -108.776, 0.28", "109.252, -77.9965, -109.847, 0.55", "110.748, -79.1396, -111.654, 0.28", "112.007, -80.1021, -113.175, 0.28", "113.674, -81.3762, -115.189, 0.55", "115.872, -83.056, -117.845, 0.55", "119.056, -84.7767, -118.914, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "99.7084, -70.5364, -96.4283, 0.55", "100.663, -71.7775, -97.3067, 0.55", "101.0, -72.3645, -97.679, 0.28", "101.529, -73.3932, -98.3269, 0.55", "102.695, -75.6593, -99.754, 0.28", "103.504, -77.2298, -100.744, 0.55", "104.873, -79.8906, -102.419, 0.28", "106.454, -83.2489, -104.67, 0.28", "107.125, -84.821, -105.721, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "110.926, 4.18075, -6.59119, 0.28", "112.112, 2.94774, -6.07941, 0.28", "113.596, 1.30486, -5.25251, 0.28", "114.53, 0.233855, -4.6684, 0.55", "115.083, -0.349702, -4.30407, 0.28", "115.377, -0.664585, -4.10485, 0.28", "116.838, -2.21785, -3.14928, 0.55", "117.165, -2.56173, -2.88069, 0.28", "117.935, -3.48464, -2.11306, 0.55", "118.598, -4.28898, -1.48739, 0.28", "119.176, -4.93577, -0.987318, 0.55", "119.864, -5.71152, -0.449388, 0.55", "120.986, -6.94223, 0.220068, 0.55", "121.259, -7.24501, 0.370512, 0.55", "122.243, -8.38263, 0.910675, 0.28", "122.629, -8.85097, 1.11358, 0.55", "123.162, -9.44146, 1.37725, 0.28", "123.921, -10.2803, 1.70535, 0.55", "125.206, -11.5911, 2.00402, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "110.926, 4.18075, -6.59119, 0.55", "108.766, 3.8596, -6.93379, 0.55", "107.012, 3.5988, -7.21201, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.07399, -30.3227, 5.85486, 0.83", "1.18982, -30.5725, 5.82132, 0.83", "2.55865, -32.7824, 5.62375, 0.83", "3.74332, -34.7182, 5.32144, 0.55", "4.68844, -36.2626, 5.08025, 0.55", "6.69731, -39.5453, 4.56761, 0.83", "9.13393, -43.527, 3.94581, 0.55", "10.4692, -45.6109, 3.65546, 0.83", "12.8561, -48.9253, 3.31387, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.07399, -30.3227, 5.85486, 0.55", "-0.689422, -31.1658, 3.86021, 0.55", "-2.58223, -32.0709, 1.71919, 0.55", "-4.81671, -33.1393, -0.808292, 0.55", "-7.53009, -34.4366, -3.87748, 0.55", "-9.06984, -35.1729, -5.61914, 0.55", "-9.37915, -35.3207, -5.96901, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-5.21021, -144.88, 105.778, 0.55", "-4.83793, -151.345, 109.991, 0.55", "-3.9687, -158.38, 113.064, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-5.21021, -144.88, 105.778, 0.55", "-5.45319, -153.247, 110.575, 0.55", "-6.08424, -161.398, 115.699, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-61.4549, 55.9192, -11.6341, 0.28", "-62.9016, 57.4816, -10.0591, 0.28", "-63.4463, 58.0749, -9.38474, 0.55", "-65.0034, 59.7959, -7.39044, 0.28", "-65.7788, 60.6472, -6.5008, 0.55", "-67.8988, 62.9487, -4.18515, 0.28", "-70.0534, 65.2879, -1.8316, 0.55", "-73.61, 68.94, 2.1068, 0.28", "-74.3674, 69.725, 2.94618, 0.55", "-76.0388, 71.5709, 4.71919, 0.28", "-76.6918, 72.3393, 5.41464, 0.55", "-83.9684, 77.2482, 11.4072, 0.55", "-92.0213, 83.1977, 14.9724, 0.55", "-98.9968, 89.5265, 19.8962, 0.55", "-104.652, 97.2175, 24.5669, 0.55", "-111.383, 104.418, 28.5442, 0.55", "-118.91, 109.976, 33.5838, 0.55", "-125.715, 114.808, 40.1645, 0.55", "-131.497, 118.678, 48.1984, 0.55", "-137.328, 123.142, 55.8819, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-61.4549, 55.9192, -11.6341, 0.55", "-65.5522, 54.2822, -9.93617, 0.55", "-67.6767, 53.3583, -9.05613, 0.28", "-69.2577, 52.6707, -8.40122, 0.55", "-70.5753, 52.0976, -7.85539, 0.28", "-71.4983, 51.6962, -7.47307, 0.55", "-74.0432, 50.5894, -6.41885, 0.28", "-75.7232, 49.6993, -5.93592, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-151.767, -38.6188, -88.6052, 0.55", "-154.691, -44.0357, -96.0925, 0.55", "-157.4, -50.3279, -102.95, 0.55", "-159.394, -55.3734, -110.983, 0.55", "-162.364, -61.2788, -118.072, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-151.767, -38.6188, -88.6052, 0.55", "-157.394, -35.3447, -97.975, 0.55", "-162.863, -30.3008, -106.626, 0.55", "-168.891, -27.1039, -115.77, 0.55", "-177.202, -24.1851, -123.022, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-152.596, -38.5252, -85.9945, 0.55", "-155.609, -37.4114, -92.3456, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-152.596, -38.5252, -85.9945, 0.55", "-156.176, -46.1158, -90.0029, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "119.056, -84.7767, -118.914, 0.28", "122.371, -85.6218, -120.601, 0.28", "123.911, -86.0144, -121.384, 0.55", "126.848, -86.763, -122.878, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "119.056, -84.7767, -118.914, 0.55", "119.075, -86.3844, -119.561, 0.55", "119.114, -89.6001, -120.856, 0.28", "119.126, -90.6476, -121.278, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "107.125, -84.821, -105.721, 0.28", "108.275, -87.129, -107.258, 0.28", "108.845, -88.2718, -108.019, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "107.125, -84.821, -105.721, 0.55", "105.214, -85.8582, -104.475, 0.55", "99.8858, -88.7506, -100.999, 0.28", "98.6201, -89.4377, -100.174, 0.55", "95.1578, -91.3173, -97.9147, 0.28", "92.926, -92.5289, -96.4589, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "12.8561, -48.9253, 3.31387, 0.83", "12.8942, -49.311, 3.26627, 0.83", "13.4891, -54.3526, 2.76994, 0.83", "13.6489, -58.1265, 2.68747, 0.83", "13.6095, -61.7625, 3.0202, 0.83", "13.4447, -66.593, 3.85195, 0.83", "13.1345, -72.1538, 5.03854, 0.83", "12.8657, -78.354, 6.68303, 0.83", "12.6502, -84.3692, 8.55711, 0.83", "11.8783, -91.7613, 10.7633, 0.83", "11.307, -95.1635, 11.6139, 0.83", "10.8419, -97.7266, 12.0943, 0.83", "9.82923, -102.647, 12.929, 0.83", "8.98676, -107.061, 13.4181, 0.83", "7.53243, -116.499, 13.3371, 0.83", "6.69069, -121.68, 12.6164, 0.83", "5.85739, -126.462, 11.6085, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "12.8561, -48.9253, 3.31387, 0.55", "12.0615, -50.7942, 3.72632, 0.55", "11.4916, -52.1441, 4.13063, 0.55", "11.1721, -53.0019, 4.46886, 0.55", "10.7694, -54.3367, 5.11135, 0.55", "10.0851, -56.9696, 6.53558, 0.55", "9.60797, -58.9477, 7.83775, 0.55", "9.27168, -60.5222, 9.05206, 0.55", "8.92257, -62.1043, 10.4035, 0.55", "8.64016, -63.4117, 11.5974, 0.28", "8.43558, -64.4692, 12.7375, 0.55", "8.09057, -66.3742, 15.1047, 0.55", "7.84663, -67.5323, 16.7056, 0.55", "7.70055, -68.1814, 17.5976, 0.55", "7.47605, -68.9492, 18.6179, 0.83", "6.74654, -71.2367, 21.4879, 0.28", "6.50019, -71.9952, 22.4157, 0.55", "6.08809, -73.3683, 24.0321, 0.28", "5.96994, -73.7894, 24.5627, 0.55", "5.74544, -74.7805, 25.7727, 0.28", "5.61029, -75.3471, 26.4161, 0.55", "4.91415, -77.2239, 28.0216, 0.55", "4.87929, -82.1648, 34.0419, 0.55", "5.28163, -86.8402, 40.2578, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.37915, -35.3207, -5.96901, 0.55", "-11.4181, -36.0138, -7.60928, 0.55", "-12.0166, -36.1739, -8.06775, 0.55", "-13.5152, -36.5767, -9.1673, 0.55", "-16.7823, -37.3695, -11.449, 0.28", "-17.2659, -37.4776, -11.761, 0.55", "-19.2775, -37.9799, -12.9915, 0.55", "-22.0089, -38.6716, -14.4373, 0.55", "-23.0512, -38.9067, -14.9677, 0.28", "-23.9588, -39.0569, -15.3854, 0.28", "-25.4879, -39.2876, -15.9109, 0.55", "-27.3598, -39.4885, -16.6152, 0.28", "-29.0918, -39.5397, -17.3008, 0.55", "-30.427, -39.4794, -17.8077, 0.55", "-31.3489, -39.3678, -18.1829, 0.55", "-34.0656, -38.929, -19.3586, 0.55", "-36.9175, -38.2925, -20.5474, 0.55", "-38.0919, -37.9711, -21.0122, 0.28", "-39.2103, -37.6816, -21.4723, 0.55", "-41.479, -37.2271, -22.3848, 0.28", "-42.2419, -37.0941, -22.685, 0.83", "-43.6564, -36.8316, -23.158, 0.28", "-44.6618, -36.7137, -23.3783, 0.55", "-46.1191, -36.5901, -23.671, 0.28", "-46.6972, -36.5342, -23.7699, 0.55", "-47.7619, -36.45, -23.9, 0.55", "-49.3602, -36.1731, -24.0395, 0.55", "-50.3957, -35.9323, -24.0757, 0.28", "-51.2194, -35.6413, -24.0424, 0.55", "-52.1888, -35.1843, -24.0075, 0.28", "-52.3489, -35.0968, -24.0069, 0.55", "-53.8652, -34.2551, -24.2447, 0.28", "-54.9828, -33.6223, -24.5258, 0.55", "-56.4848, -32.6958, -25.0823, 0.83", "-57.741, -31.9056, -25.6654, 0.28", "-58.0699, -31.7032, -25.8444, 0.55", "-60.6118, -30.1817, -27.3403, 0.28", "-61.0625, -29.9214, -27.6403, 0.55", "-62.4012, -29.0747, -28.5978, 0.28", "-62.7471, -28.8569, -28.8472, 0.55", "-63.6272, -28.2908, -29.4347, 0.28", "-64.2458, -27.8841, -29.8166, 0.55", "-65.6018, -26.9781, -30.4868, 0.28", "-66.405, -26.4917, -30.8567, 0.55", "-68.1111, -25.5517, -31.5632, 0.28", "-68.6192, -25.2971, -31.7663, 0.55", "-69.4144, -24.9542, -32.058, 0.28", "-70.0837, -24.6658, -32.2753, 0.55", "-71.4633, -24.085, -32.6501, 0.28", "-71.8773, -23.9189, -32.7504, 0.55", "-74.9312, -22.6311, -33.3632, 0.28", "-75.9858, -22.1098, -33.4913, 0.55", "-77.8447, -21.0958, -33.6062, 0.28", "-78.6772, -20.6073, -33.6334, 0.55", "-80.5675, -19.502, -33.5906, 0.28", "-81.2572, -19.1269, -33.5453, 0.55", "-83.7359, -17.9923, -33.2492, 0.28", "-84.7726, -17.648, -33.1156, 0.55", "-86.2579, -17.3975, -32.9065, 0.55", "-87.1693, -17.301, -32.7562, 0.55", "-88.9997, -17.1541, -32.3091, 0.28", "-90.7754, -17.0296, -31.7565, 0.28", "-92.2441, -16.921, -31.2527, 0.55", "-93.9827, -16.6308, -30.4387, 0.28", "-94.8051, -16.3743, -29.9163, 0.55", "-96.6823, -15.4141, -28.4631, 0.28", "-97.5509, -14.7003, -27.4572, 0.55", "-98.0493, -14.1261, -26.6549, 0.28", "-98.5298, -13.4815, -25.564, 0.55", "-99.0765, -12.6386, -24.0797, 0.28", "-99.2886, -12.3419, -23.5209, 0.55", "-100.514, -11.0112, -20.8561, 0.28", "-100.934, -10.5922, -19.9638, 0.55", "-101.918, -9.66577, -17.801, 0.28", "-102.453, -9.17429, -16.6262, 0.55", "-102.895, -8.77167, -15.6617, 0.55", "-103.435, -8.29761, -14.5314, 0.28", "-103.756, -8.05536, -14.0162, 0.55", "-104.879, -7.18646, -12.3808, 0.28", "-105.451, -6.62989, -11.5096, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.37915, -35.3207, -5.96901, 0.55", "-9.5474, -35.3468, -7.00153, 0.55", "-9.68883, -35.2588, -8.03464, 0.55", "-9.80104, -35.0582, -9.32087, 0.55", "-9.84865, -34.8114, -10.3629, 0.55", "-9.66569, -32.4929, -17.114, 0.55", "-9.64228, -31.8067, -18.6258, 0.55", "-9.65032, -30.6394, -20.8544, 0.55", "-9.66545, -29.7627, -22.4291, 0.55", "-9.6501, -28.8229, -23.9449, 0.28", "-9.52294, -27.2491, -26.2322, 0.55", "-9.15866, -24.8032, -29.5712, 0.28", "-9.19345, -24.6476, -29.8942, 0.55", "-9.96124, -24.0672, -32.0291, 0.28", "-10.7222, -23.7926, -33.3952, 0.55", "-11.683, -23.6294, -34.8146, 0.55", "-13.4403, -23.4949, -37.3602, 0.55", "-16.8736, -23.2715, -42.3698, 0.55", "-19.1177, -23.1557, -45.7784, 0.55", "-19.8601, -23.1242, -46.9762, 0.55", "-24.5552, -22.8224, -54.9508, 0.55", "-25.7362, -22.694, -57.1574, 0.55", "-26.3055, -22.6113, -58.4442, 0.55", "-27.3672, -22.4703, -61.5662, 0.55", "-29.459, -22.4792, -69.2493, 0.55", "-29.9303, -22.5576, -71.3526, 0.28", "-30.1061, -22.6465, -72.5763, 0.55", "-30.3293, -22.8461, -74.4035, 0.28", "-30.362, -22.995, -75.1693, 0.55", "-29.8861, -23.722, -77.4511, 0.28", "-28.7531, -24.8434, -78.6969, 0.55", "-28.0245, -25.6607, -79.4089, 0.28", "-27.2765, -26.5826, -79.9928, 0.55", "-26.5659, -27.6052, -80.4682, 0.28", "-26.2632, -28.1367, -80.6908, 0.55", "-25.511, -29.5403, -81.1684, 0.28", "-25.3569, -29.9587, -81.3459, 0.55", "-24.5734, -32.3504, -82.4682, 0.28", "-24.2819, -33.4449, -83.1275, 0.55", "-23.7689, -35.7574, -84.8157, 0.28", "-23.6159, -36.5991, -85.5433, 0.55", "-23.1387, -39.3391, -88.1558, 0.28", "-23.0394, -40.0029, -88.8189, 0.55", "-22.8307, -42.1074, -90.9434, 0.28", "-22.7797, -42.6064, -91.3875, 0.55", "-22.6746, -43.9313, -92.52, 0.28", "-22.6603, -44.6945, -93.2464, 0.55", "-22.6663, -45.437, -94.03, 0.55", "-22.6694, -46.9191, -95.5841, 0.28", "-22.6733, -47.8186, -96.7001, 0.55", "-22.6679, -49.975, -100.272, 0.28", "-22.6876, -50.6461, -101.69, 0.55", "-22.6837, -51.0628, -102.663, 0.28", "-22.6631, -51.4316, -103.644, 0.55", "-22.5426, -52.4311, -106.651, 0.28", "-22.4094, -53.2136, -108.906, 0.55", "-21.9915, -54.7578, -112.636, 0.28", "-21.8553, -55.2367, -113.809, 0.55", "-21.4632, -56.1101, -115.966, 0.28", "-21.2929, -56.3967, -116.657, 0.55", "-20.878, -56.859, -117.67, 0.28", "-20.4549, -57.2466, -118.517, 0.55", "-19.1256, -58.1914, -120.647, 0.28", "-17.5663, -59.171, -123.057, 0.28", "-16.7059, -59.6115, -124.208, 0.28", "-15.8978, -60.0101, -125.423, 0.55", "-14.7216, -60.5021, -127.198, 0.28", "-14.1844, -60.7087, -127.974, 0.83", "-12.7515, -61.269, -129.897, 0.28", "-12.17, -61.5313, -130.769, 0.55", "-9.76254, -62.8352, -134.749, 0.28", "-8.68706, -63.5044, -136.856, 0.28", "-7.98176, -63.9863, -138.456, 0.55", "-7.64914, -64.2816, -139.456, 0.55", "-6.91424, -65.0902, -142.231, 0.28", "-6.30084, -65.944, -144.889, 0.55", "-5.74383, -66.7849, -147.313, 0.28", "-5.31786, -67.5684, -149.567, 0.55", "-4.95801, -68.1981, -151.424, 0.28", "-4.60758, -68.626, -152.898, 0.55", "-3.64718, -69.4922, -156.36, 0.28", "-3.10975, -69.9312, -158.076, 0.55", "-2.23522, -70.6002, -160.6, 0.28", "-1.48373, -71.0946, -162.635, 0.55", "0.273749, -72.0573, -167.394, 0.28", "0.895559, -72.3424, -169.402, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-3.9687, -158.38, 113.064, 0.55", "-3.79456, -169.471, 117.973, 0.55", "-3.32363, -181.431, 119.943, 0.55", "-3.0506, -192.968, 123.683, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-3.9687, -158.38, 113.064, 0.55", "-2.82361, -164.538, 117.263, 0.55", "-2.49476, -169.81, 122.645, 0.55", "-1.95812, -173.865, 128.98, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.08424, -161.398, 115.699, 0.55", "-5.44965, -168.786, 119.944, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-6.08424, -161.398, 115.699, 0.55", "-7.20455, -170.295, 121.112, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "5.85739, -126.462, 11.6085, 0.83", "6.85658, -130.243, 12.1158, 0.83", "7.87879, -133.419, 12.7544, 0.83", "8.89487, -136.577, 13.3892, 0.83", "9.85981, -139.575, 13.992, 0.83", "11.3468, -144.196, 14.921, 0.83", "12.8231, -148.783, 15.8433, 0.83", "14.1012, -151.803, 16.8061, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "5.85739, -126.462, 11.6085, 0.55", "7.16475, -128.183, 11.8545, 0.55", "8.21043, -129.528, 11.8086, 0.55", "8.95489, -130.525, 11.6674, 0.55", "9.67456, -131.702, 11.3222, 0.83", "10.4315, -133.044, 10.7519, 0.55", "11.172, -134.357, 10.194, 0.83", "11.9174, -135.785, 9.44304, 0.55", "12.3614, -136.614, 8.93006, 0.83", "13.7217, -139.302, 7.04177, 0.55", "14.6387, -141.42, 5.3976, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.28163, -86.8402, 40.2578, 0.55", "3.77275, -91.4517, 44.0238, 0.55", "1.42423, -95.5166, 47.9844, 0.55", "-1.3424, -99.0184, 52.2046, 0.55", "-4.65074, -101.834, 56.5462, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "5.28163, -86.8402, 40.2578, 0.55", "5.39534, -92.0402, 45.9396, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "14.1012, -151.803, 16.8061, 0.55", "14.2984, -153.474, 17.2812, 0.55", "14.6164, -155.605, 17.9327, 0.55", "14.9156, -157.617, 18.5365, 0.55", "15.1086, -159.048, 18.9464, 0.55", "15.4183, -161.605, 19.6426, 0.55", "16.371, -168.797, 21.3993, 0.55", "16.7377, -171.242, 21.8815, 0.55", "16.9899, -172.969, 22.1339, 0.55", "17.2703, -174.948, 22.2619, 0.55", "17.4409, -176.483, 22.2298, 0.55", "17.923, -180.075, 21.9915, 0.55", "18.1942, -182.804, 21.8216, 0.55", "18.428, -184.593, 21.7549, 0.55", "19.0544, -189.223, 21.8201, 0.55", "19.4771, -192.331, 22.004, 0.55", "20.0761, -196.33, 22.4622, 0.55", "20.8688, -200.853, 23.3208, 0.55", "21.5634, -203.864, 24.0591, 0.55", "22.0245, -205.64, 24.5362, 0.55", "22.4183, -207.279, 24.9762, 0.55", "22.9368, -209.357, 25.4296, 0.55", "24.0733, -214.38, 26.192, 0.55", "24.5674, -216.325, 26.4043, 0.55", "25.0636, -218.492, 26.6343, 0.55", "25.7794, -221.748, 26.9672, 0.55", "26.2171, -224.253, 27.2659, 0.55", "26.4906, -226.637, 27.5413, 0.55", "26.6507, -228.911, 27.8206, 0.55", "26.7743, -231.13, 28.1315, 0.55", "26.8693, -232.71, 28.3355, 0.55", "27.0268, -235.298, 28.5776, 0.55", "27.136, -238.414, 28.6395, 0.55", "27.2104, -239.931, 28.55, 0.55", "27.2747, -241.267, 28.3688, 0.55", "27.4875, -243.789, 27.8599, 0.55", "27.5996, -245.39, 27.4957, 0.55", "27.7711, -247.361, 27.1172, 0.55", "27.8526, -248.743, 26.9429, 0.55", "28.0219, -252.335, 26.6399, 0.55", "28.1124, -255.019, 26.6153, 0.55", "28.2354, -259.163, 26.9273, 0.55", "28.4108, -261.827, 27.3713, 0.55", "28.5872, -264.621, 27.9321, 0.28", "28.6373, -265.743, 28.2083, 0.28", "28.7836, -268.457, 29.129, 0.28", "28.9258, -270.958, 30.1838, 0.28", "29.473, -274.244, 31.8744, 0.28", "31.3935, -281.686, 33.6036, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "14.1012, -151.803, 16.8061, 0.55", "15.1739, -152.158, 17.0715, 0.55", "17.371, -153.061, 17.7815, 0.55", "19.2634, -153.95, 18.4777, 0.28", "21.2901, -154.959, 19.2868, 0.55", "22.5028, -155.593, 19.9384, 0.28", "24.5914, -156.727, 21.263, 0.55", "25.4414, -157.319, 22.0724, 0.28", "25.7426, -157.53, 22.4239, 0.28", "26.263, -157.824, 23.0347, 0.55", "28.3261, -158.778, 25.2259, 0.28", "29.2125, -159.148, 26.1169, 0.55", "31.96, -160.237, 28.466, 0.28", "33.4754, -160.773, 29.6216, 0.28", "35.3861, -161.472, 30.9438, 0.55", "38.2744, -162.579, 32.6527, 0.28", "38.6722, -162.728, 32.8404, 0.55", "40.6497, -163.463, 33.6296, 0.28", "40.8315, -163.532, 33.6815, 0.55", "42.4297, -164.359, 34.2011, 0.28", "43.1849, -164.809, 34.4977, 0.55", "49.3921, -168.123, 36.9715, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.65074, -101.834, 56.5462, 0.55", "-6.49495, -105.839, 66.1599, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.65074, -101.834, 56.5462, 0.55", "-11.3939, -112.584, 64.3132, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L5_BP_77ea5abf2a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -4.0896, 9.30253, 3.05641, 0.83 ) }
    dend_43 { pt3dadd( -8.34066, 12.5975, 3.69753, 1.11 ) }
    dend_43 { pt3dadd( -10.8472, 14.5389, 4.03103, 0.83 ) }
    dend_43 { pt3dadd( -13.2823, 16.4087, 4.32984, 0.83 ) }
    dend_43 { pt3dadd( -14.724, 17.4749, 4.49358, 1.11 ) }
    dend_43 { pt3dadd( -19.239, 20.8066, 5.01837, 1.11 ) }
    dend_43 { pt3dadd( -27.3144, 26.5106, 5.94604, 0.83 ) }
    dend_43 { pt3dadd( -30.2238, 28.4872, 6.25238, 0.83 ) }
    dend_43 { pt3dadd( -32.5276, 30.006, 6.44265, 0.83 ) }
    dend_43 { pt3dadd( -34.7742, 31.5111, 6.60736, 0.83 ) }
    dend_43 { pt3dadd( -36.603, 32.7517, 6.69623, 0.55 ) }
    dend_43 { pt3dadd( -37.9776, 33.5917, 6.78642, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.46649, 6.18291, -6.18485, 0.55 ) }
    dend_28 { pt3dadd( 6.9441, 6.71887, -6.73814, 0.55 ) }
    dend_28 { pt3dadd( 8.38178, 6.85416, -7.47027, 0.83 ) }
    dend_28 { pt3dadd( 10.6571, 6.99815, -8.83025, 0.55 ) }
    dend_28 { pt3dadd( 11.7555, 7.06765, -9.48674, 1.38 ) }
    dend_28 { pt3dadd( 14.4561, 7.23854, -11.1009, 0.55 ) }
    dend_28 { pt3dadd( 15.6064, 7.18067, -11.8711, 0.83 ) }
    dend_28 { pt3dadd( 21.5564, 6.11939, -16.1984, 0.55 ) }
    dend_28 { pt3dadd( 22.132, 5.97667, -16.6745, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.688347, -10.8598, 3.36616, 1.11 ) }
    dend_1 { pt3dadd( -0.744707, -15.8324, 5.14884, 1.11 ) }
    dend_1 { pt3dadd( -0.767659, -17.8576, 5.87486, 0.83 ) }
    dend_1 { pt3dadd( -0.798154, -20.5482, 6.83942, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.895567, 10.7966, -1.41237, 1.11 ) }
    dend_0 { pt3dadd( 0.963076, 13.6134, -1.38868, 1.11 ) }
    dend_0 { pt3dadd( 1.04503, 18.2092, -1.18423, 1.38 ) }
    dend_0 { pt3dadd( 1.05356, 18.4653, -1.16786, 1.38 ) }
    dend_0 { pt3dadd( 1.34588, 21.6366, -0.915063, 0.83 ) }
    dend_0 { pt3dadd( 1.77298, 24.9925, -0.456683, 0.83 ) }
    dend_0 { pt3dadd( 2.5327, 28.7874, 0.54692, 0.83 ) }
    dend_0 { pt3dadd( 2.98056, 30.2299, 1.12018, 0.83 ) }
    dend_0 { pt3dadd( 3.43353, 31.2769, 1.65282, 1.11 ) }
    dend_0 { pt3dadd( 4.78419, 33.8317, 3.0446, 0.55 ) }
    dend_0 { pt3dadd( 6.35764, 36.5014, 4.70452, 0.83 ) }
    dend_0 { pt3dadd( 8.45814, 39.2558, 6.61748, 0.55 ) }
    dend_0 { pt3dadd( 9.5436, 40.4036, 7.49653, 0.83 ) }
    dend_0 { pt3dadd( 11.0504, 41.9592, 8.85236, 0.55 ) }
    dend_0 { pt3dadd( 12.9034, 43.937, 10.6725, 0.55 ) }
    dend_0 { pt3dadd( 15.4679, 46.9099, 13.4307, 0.55 ) }
    dend_0 { pt3dadd( 18.2912, 50.3058, 16.4753, 0.55 ) }
    dend_0 { pt3dadd( 20.0413, 52.5092, 18.7202, 0.55 ) }
    dend_0 { pt3dadd( 22.1491, 55.2942, 21.8596, 0.55 ) }
    dend_0 { pt3dadd( 22.5824, 55.8532, 22.5683, 0.83 ) }
    dend_0 { pt3dadd( 23.7157, 57.3303, 24.5599, 0.55 ) }
    dend_0 { pt3dadd( 24.6809, 58.4832, 26.1299, 0.83 ) }
    dend_0 { pt3dadd( 26.8847, 61.6245, 29.8448, 0.55 ) }
    dend_0 { pt3dadd( 27.7424, 62.7719, 30.9477, 0.83 ) }
    dend_0 { pt3dadd( 28.5737, 63.6207, 31.7168, 0.55 ) }
    dend_0 { pt3dadd( 29.4147, 64.3533, 32.3239, 0.83 ) }
    dend_0 { pt3dadd( 31.3043, 65.7207, 33.455, 0.83 ) }
    dend_0 { pt3dadd( 33.8238, 67.5806, 34.711, 0.83 ) }
    dend_0 { pt3dadd( 35.3838, 68.8078, 35.3028, 0.55 ) }
    dend_0 { pt3dadd( 36.5705, 69.8669, 35.7607, 0.55 ) }
    dend_0 { pt3dadd( 39.6863, 72.6042, 36.9117, 0.83 ) }
    dend_0 { pt3dadd( 41.7065, 74.3596, 37.5693, 0.55 ) }
    dend_0 { pt3dadd( 44.7867, 76.9329, 38.4365, 0.55 ) }
    dend_0 { pt3dadd( 47.6229, 79.0944, 39.1132, 0.55 ) }
    dend_0 { pt3dadd( 50.1677, 80.9277, 39.6479, 0.55 ) }
    dend_0 { pt3dadd( 53.3995, 83.0793, 40.1723, 0.55 ) }
    dend_0 { pt3dadd( 55.3851, 84.1401, 40.4274, 0.55 ) }
    dend_0 { pt3dadd( 56.756, 84.7402, 40.436, 0.55 ) }
    dend_0 { pt3dadd( 58.5964, 85.2016, 40.2934, 0.55 ) }
    dend_0 { pt3dadd( 61.3697, 85.4445, 39.8577, 0.55 ) }
    dend_0 { pt3dadd( 63.1084, 85.3795, 39.521, 0.55 ) }
    dend_0 { pt3dadd( 65.636, 85.217, 39.2035, 0.55 ) }
    dend_0 { pt3dadd( 70.413, 85.0592, 39.0219, 0.55 ) }
    dend_0 { pt3dadd( 74.1362, 85.1079, 39.1436, 0.55 ) }
    dend_0 { pt3dadd( 78.0594, 85.3477, 39.5073, 0.55 ) }
    dend_0 { pt3dadd( 80.5569, 85.5885, 39.9398, 0.55 ) }
    dend_0 { pt3dadd( 86.9986, 86.8099, 41.4939, 0.55 ) }
    dend_0 { pt3dadd( 90.7802, 87.8327, 42.7053, 0.55 ) }
    dend_0 { pt3dadd( 93.5895, 88.7913, 43.886, 0.55 ) }
    dend_0 { pt3dadd( 95.2854, 89.6687, 44.6716, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 97.2468, 90.9634, 45.5715, 0.55 ) }
    dend_0 { pt3dadd( 100.586, 93.5058, 46.7832, 0.55 ) }
    dend_0 { pt3dadd( 101.361, 94.1171, 46.9507, 0.55 ) }
    dend_0 { pt3dadd( 103.597, 95.7543, 47.2803, 0.55 ) }
    dend_0 { pt3dadd( 105.648, 97.4924, 47.5747, 0.83 ) }
    dend_0 { pt3dadd( 106.769, 98.4563, 47.7172, 0.55 ) }
    dend_0 { pt3dadd( 108.449, 100.106, 47.8617, 0.83 ) }
    dend_0 { pt3dadd( 117.096, 108.919, 51.009, 0.83 ) }
    dend_0 { pt3dadd( 124.622, 118.983, 53.1164, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -37.9776, 33.5917, 6.78642, 0.55 ) }
    dend_55 { pt3dadd( -39.393, 34.3599, 6.04808, 0.55 ) }
    dend_55 { pt3dadd( -40.9321, 35.1952, 5.24521, 0.55 ) }
    dend_55 { pt3dadd( -42.7895, 36.2032, 4.27632, 0.55 ) }
    dend_55 { pt3dadd( -44.3232, 37.0356, 3.47627, 0.83 ) }
    dend_55 { pt3dadd( -45.6084, 37.7331, 2.80584, 0.55 ) }
    dend_55 { pt3dadd( -47.994, 39.0278, 1.56142, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -37.9776, 33.5917, 6.78642, 0.55 ) }
    dend_44 { pt3dadd( -39.9858, 34.1629, 6.23472, 0.55 ) }
    dend_44 { pt3dadd( -42.1686, 34.6526, 5.84535, 0.55 ) }
    dend_44 { pt3dadd( -44.6562, 35.1902, 5.46229, 0.55 ) }
    dend_44 { pt3dadd( -48.3274, 35.8545, 5.2222, 0.55 ) }
    dend_44 { pt3dadd( -51.4449, 36.2742, 5.21081, 0.55 ) }
    dend_44 { pt3dadd( -54.7431, 36.6349, 5.31993, 0.55 ) }
    dend_44 { pt3dadd( -58.0028, 36.7016, 5.70042, 0.55 ) }
    dend_44 { pt3dadd( -60.8659, 36.4447, 6.21836, 0.55 ) }
    dend_44 { pt3dadd( -64.5101, 35.8144, 7.15582, 0.55 ) }
    dend_44 { pt3dadd( -66.1374, 35.3901, 7.73469, 0.55 ) }
    dend_44 { pt3dadd( -67.9091, 34.9, 8.4216, 0.55 ) }
    dend_44 { pt3dadd( -71.013, 33.8578, 9.46329, 0.55 ) }
    dend_44 { pt3dadd( -72.618, 33.3597, 9.79435, 0.55 ) }
    dend_44 { pt3dadd( -74.2983, 32.7935, 10.1214, 0.55 ) }
    dend_44 { pt3dadd( -76.2586, 32.1848, 10.3359, 0.55 ) }
    dend_44 { pt3dadd( -78.3773, 31.5764, 10.5257, 0.55 ) }
    dend_44 { pt3dadd( -81.3886, 30.7151, 10.7351, 0.55 ) }
    dend_44 { pt3dadd( -85.3372, 29.8911, 10.7434, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.132, 5.97667, -16.6745, 0.55 ) }
    dend_34 { pt3dadd( 27.4522, 7.7963, -17.8975, 0.55 ) }
    dend_34 { pt3dadd( 30.5522, 8.61099, -19.0215, 0.55 ) }
    dend_34 { pt3dadd( 33.6272, 9.27158, -20.1595, 0.55 ) }
    dend_34 { pt3dadd( 35.7367, 9.63898, -20.9265, 0.55 ) }
    dend_34 { pt3dadd( 38.8262, 10.1073, -22.0155, 0.55 ) }
    dend_34 { pt3dadd( 45.2546, 10.9324, -24.4602, 0.55 ) }
    dend_34 { pt3dadd( 52.5685, 11.7667, -27.7128, 0.55 ) }
    dend_34 { pt3dadd( 56.1454, 11.9237, -29.5085, 0.55 ) }
    dend_34 { pt3dadd( 58.0701, 11.9472, -30.5888, 0.55 ) }
    dend_34 { pt3dadd( 60.1824, 11.9732, -31.8586, 0.55 ) }
    dend_34 { pt3dadd( 63.9615, 11.9185, -34.098, 0.55 ) }
    dend_34 { pt3dadd( 65.3433, 11.815, -34.9468, 0.55 ) }
    dend_34 { pt3dadd( 71.1941, 11.4673, -38.9958, 0.55 ) }
    dend_34 { pt3dadd( 75.3392, 11.2509, -42.1674, 0.55 ) }
    dend_34 { pt3dadd( 77.7233, 11.1639, -44.0624, 0.55 ) }
    dend_34 { pt3dadd( 80.1031, 11.057, -45.9482, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.132, 5.97667, -16.6745, 0.83 ) }
    dend_29 { pt3dadd( 23.2481, 6.97857, -16.8428, 0.83 ) }
    dend_29 { pt3dadd( 23.8889, 7.54281, -16.9716, 0.55 ) }
    dend_29 { pt3dadd( 24.8353, 8.37484, -17.2568, 0.83 ) }
    dend_29 { pt3dadd( 25.47, 8.94699, -17.4746, 0.55 ) }
    dend_29 { pt3dadd( 26.3391, 9.76523, -17.767, 0.83 ) }
    dend_29 { pt3dadd( 27.3763, 10.7822, -18.081, 0.55 ) }
    dend_29 { pt3dadd( 27.9044, 11.2567, -18.2035, 0.55 ) }
    dend_29 { pt3dadd( 29.1466, 12.1896, -18.3429, 0.83 ) }
    dend_29 { pt3dadd( 30.2889, 12.9285, -18.2713, 0.55 ) }
    dend_29 { pt3dadd( 30.9232, 13.3503, -18.1632, 0.83 ) }
    dend_29 { pt3dadd( 31.8613, 14.0316, -17.8973, 0.55 ) }
    dend_29 { pt3dadd( 33.1874, 15.082, -17.3311, 0.55 ) }
    dend_29 { pt3dadd( 35.0402, 16.4611, -16.4116, 0.55 ) }
    dend_29 { pt3dadd( 36.8086, 17.7391, -15.3804, 0.55 ) }
    dend_29 { pt3dadd( 38.2103, 18.742, -14.531, 0.55 ) }
    dend_29 { pt3dadd( 40.5178, 20.4103, -13.1201, 0.55 ) }
    dend_29 { pt3dadd( 42.1921, 21.6941, -12.0599, 0.55 ) }
    dend_29 { pt3dadd( 43.1811, 22.5731, -11.4016, 0.55 ) }
    dend_29 { pt3dadd( 44.9596, 24.4078, -10.2236, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.798154, -20.5482, 6.83942, 0.83 ) }
    dend_11 { pt3dadd( -0.944326, -22.5431, 6.75583, 0.83 ) }
    dend_11 { pt3dadd( -1.08674, -24.4867, 6.67438, 0.83 ) }
    dend_11 { pt3dadd( -1.24575, -26.6567, 6.58345, 0.83 ) }
    dend_11 { pt3dadd( -1.32878, -27.7898, 6.53597, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.798154, -20.5482, 6.83942, 0.55 ) }
    dend_2 { pt3dadd( -0.0461184, -22.4373, 8.01495, 0.55 ) }
    dend_2 { pt3dadd( 0.664169, -24.7411, 9.58393, 0.55 ) }
    dend_2 { pt3dadd( 1.16172, -27.7406, 11.8215, 0.55 ) }
    dend_2 { pt3dadd( 1.27921, -28.9032, 12.7337, 0.83 ) }
    dend_2 { pt3dadd( 1.35781, -31.8607, 15.4338, 0.55 ) }
    dend_2 { pt3dadd( 1.27855, -33.3825, 16.8746, 0.55 ) }
    dend_2 { pt3dadd( 1.07974, -36.3403, 19.8101, 0.83 ) }
    dend_2 { pt3dadd( 0.825707, -38.5321, 22.1465, 0.55 ) }
    dend_2 { pt3dadd( 0.452127, -40.3324, 24.0685, 0.55 ) }
    dend_2 { pt3dadd( -0.340934, -43.7378, 27.6577, 0.55 ) }
    dend_2 { pt3dadd( -0.974746, -46.4519, 30.4861, 0.55 ) }
    dend_2 { pt3dadd( -1.43432, -48.6299, 32.7779, 0.55 ) }
    dend_2 { pt3dadd( -1.80501, -50.9477, 35.1199, 0.28 ) }
    dend_2 { pt3dadd( -1.88359, -51.9166, 36.0468, 0.55 ) }
    dend_2 { pt3dadd( -1.99669, -53.7073, 37.6513, 0.28 ) }
    dend_2 { pt3dadd( -1.85595, -56.5162, 39.6703, 0.55 ) }
    dend_2 { pt3dadd( -3.54291, -65.7625, 47.2034, 0.55 ) }
    dend_2 { pt3dadd( -5.33135, -74.299, 55.511, 0.55 ) }
    dend_2 { pt3dadd( -6.30524, -81.3466, 65.2305, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -47.994, 39.0278, 1.56142, 0.55 ) }
    dend_61 { pt3dadd( -50.0496, 39.5584, 3.1763, 0.55 ) }
    dend_61 { pt3dadd( -50.8871, 39.7562, 3.9844, 0.83 ) }
    dend_61 { pt3dadd( -51.8324, 39.9652, 5.08972, 0.55 ) }
    dend_61 { pt3dadd( -52.5389, 40.1426, 6.01272, 0.83 ) }
    dend_61 { pt3dadd( -54.3974, 40.6835, 8.39355, 0.55 ) }
    dend_61 { pt3dadd( -55.1002, 40.9043, 9.29847, 0.28 ) }
    dend_61 { pt3dadd( -56.2464, 41.3156, 10.9226, 0.55 ) }
    dend_61 { pt3dadd( -57.7868, 41.8769, 13.0905, 0.55 ) }
    dend_61 { pt3dadd( -58.9709, 42.2883, 14.6705, 0.55 ) }
    dend_61 { pt3dadd( -60.5661, 42.8233, 16.7201, 0.28 ) }
    dend_61 { pt3dadd( -60.9939, 42.9523, 17.1916, 0.55 ) }
    dend_61 { pt3dadd( -61.8885, 43.2225, 18.1257, 0.28 ) }
    dend_61 { pt3dadd( -62.511, 43.4095, 18.6901, 0.55 ) }
    dend_61 { pt3dadd( -63.8089, 43.7523, 19.7205, 0.28 ) }
    dend_61 { pt3dadd( -64.5788, 43.8962, 20.2923, 0.55 ) }
    dend_61 { pt3dadd( -65.9307, 44.0426, 21.3381, 0.28 ) }
    dend_61 { pt3dadd( -66.8462, 44.1263, 22.0071, 0.55 ) }
    dend_61 { pt3dadd( -71.8141, 44.765, 28.8885, 0.55 ) }
    dend_61 { pt3dadd( -76.1392, 44.7032, 36.2186, 0.55 ) }
    dend_61 { pt3dadd( -80.2287, 43.8505, 43.6341, 0.55 ) }
    dend_61 { pt3dadd( -84.341, 41.9571, 50.8413, 0.55 ) }
    dend_61 { pt3dadd( -87.3629, 40.5874, 58.6792, 0.55 ) }
    dend_61 { pt3dadd( -91.0737, 39.4554, 66.2548, 0.55 ) }
    dend_61 { pt3dadd( -94.8602, 39.739, 73.8721, 0.55 ) }
    dend_61 { pt3dadd( -98.6267, 39.3391, 81.494, 0.55 ) }
    dend_61 { pt3dadd( -102.206, 39.5406, 89.2133, 0.55 ) }
    dend_61 { pt3dadd( -105.351, 39.67, 97.1211, 0.55 ) }
    dend_61 { pt3dadd( -107.608, 38.9056, 105.291, 0.55 ) }
    dend_61 { pt3dadd( -109.933, 38.9438, 113.479, 0.55 ) }
    dend_61 { pt3dadd( -112.397, 38.0992, 121.582, 0.55 ) }
    dend_61 { pt3dadd( -113.821, 36.9643, 129.896, 0.55 ) }
    dend_61 { pt3dadd( -113.764, 36.4959, 138.394, 0.55 ) }
    dend_61 { pt3dadd( -113.723, 34.3938, 146.641, 0.55 ) }
    dend_61 { pt3dadd( -112.476, 32.1352, 154.752, 0.55 ) }
    dend_61 { pt3dadd( -111.655, 30.2556, 163.012, 0.55 ) }
    dend_61 { pt3dadd( -111.716, 29.0074, 171.431, 0.55 ) }
    dend_61 { pt3dadd( -113.57, 29.0356, 179.738, 0.55 ) }
    dend_61 { pt3dadd( -114.673, 28.1436, 188.13, 0.55 ) }
    dend_61 { pt3dadd( -114.133, 28.7446, 196.603, 0.55 ) }
    dend_61 { pt3dadd( -114.977, 29.9291, 204.989, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -47.994, 39.0278, 1.56142, 0.55 ) }
    dend_56 { pt3dadd( -49.5778, 39.4395, -0.0857044, 0.55 ) }
    dend_56 { pt3dadd( -50.8475, 39.8942, -1.96291, 0.55 ) }
    dend_56 { pt3dadd( -52.0556, 40.5029, -3.97805, 0.55 ) }
    dend_56 { pt3dadd( -52.8121, 40.8841, -5.2399, 0.55 ) }
    dend_56 { pt3dadd( -54.192, 41.5795, -7.54167, 0.83 ) }
    dend_56 { pt3dadd( -55.2016, 42.0882, -9.22566, 0.55 ) }
    dend_56 { pt3dadd( -56.4037, 42.7601, -11.7141, 0.83 ) }
    dend_56 { pt3dadd( -56.8874, 43.2544, -13.144, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -85.3372, 29.8911, 10.7434, 0.28 ) }
    dend_48 { pt3dadd( -86.4874, 28.0564, 9.31616, 0.28 ) }
    dend_48 { pt3dadd( -87.022, 27.3006, 8.61539, 0.28 ) }
    dend_48 { pt3dadd( -87.7021, 26.242, 7.59285, 0.55 ) }
    dend_48 { pt3dadd( -88.2615, 25.3036, 6.71223, 0.28 ) }
    dend_48 { pt3dadd( -89.0893, 23.8635, 5.39825, 0.55 ) }
    dend_48 { pt3dadd( -91.399, 19.5872, 1.64774, 0.28 ) }
    dend_48 { pt3dadd( -92.1147, 18.1311, 0.208645, 0.55 ) }
    dend_48 { pt3dadd( -93.1753, 15.919, -2.09264, 0.28 ) }
    dend_48 { pt3dadd( -93.7632, 14.6187, -3.53409, 0.55 ) }
    dend_48 { pt3dadd( -94.1632, 13.7322, -4.55404, 0.28 ) }
    dend_48 { pt3dadd( -94.6208, 12.7107, -5.71357, 0.55 ) }
    dend_48 { pt3dadd( -95.9941, 9.24618, -9.44142, 0.28 ) }
    dend_48 { pt3dadd( -96.4195, 8.21645, -10.6183, 0.55 ) }
    dend_48 { pt3dadd( -97.1411, 6.72643, -12.6439, 0.28 ) }
    dend_48 { pt3dadd( -97.7497, 5.82925, -14.0871, 0.28 ) }
    dend_48 { pt3dadd( -98.3267, 5.26007, -15.1218, 0.55 ) }
    dend_48 { pt3dadd( -100.433, 3.68992, -18.067, 0.28 ) }
    dend_48 { pt3dadd( -101.435, 3.06278, -19.2723, 0.55 ) }
    dend_48 { pt3dadd( -103.877, 1.70373, -22.1942, 0.28 ) }
    dend_48 { pt3dadd( -106.346, 0.552412, -24.8992, 0.28 ) }
    dend_48 { pt3dadd( -109.046, -0.47178, -27.6577, 0.28 ) }
    dend_48 { pt3dadd( -110.306, -0.828539, -28.7594, 0.55 ) }
    dend_48 { pt3dadd( -116.187, -6.53513, -36.8188, 0.55 ) }
    dend_48 { pt3dadd( -123.28, -12.9895, -43.1545, 0.55 ) }
    dend_48 { pt3dadd( -129.844, -18.4695, -50.8354, 0.55 ) }
    dend_48 { pt3dadd( -136.369, -22.9384, -59.1756, 0.55 ) }
    dend_48 { pt3dadd( -142.762, -26.2997, -68.1168, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -85.3372, 29.8911, 10.7434, 0.55 ) }
    dend_45 { pt3dadd( -86.0301, 29.8881, 10.6535, 0.55 ) }
    dend_45 { pt3dadd( -88.0471, 29.7907, 10.6284, 0.55 ) }
    dend_45 { pt3dadd( -88.8154, 29.7226, 10.6471, 0.55 ) }
    dend_45 { pt3dadd( -90.6303, 29.5047, 10.695, 0.55 ) }
    dend_45 { pt3dadd( -93.3889, 29.2406, 10.6634, 0.55 ) }
    dend_45 { pt3dadd( -94.815, 29.1514, 10.641, 0.28 ) }
    dend_45 { pt3dadd( -97.0254, 28.9845, 10.5506, 0.55 ) }
    dend_45 { pt3dadd( -98.6537, 28.851, 10.4196, 0.55 ) }
    dend_45 { pt3dadd( -99.3419, 28.7899, 10.3639, 0.28 ) }
    dend_45 { pt3dadd( -103.468, 28.4237, 10.0242, 0.55 ) }
    dend_45 { pt3dadd( -105.371, 28.2136, 9.72874, 0.28 ) }
    dend_45 { pt3dadd( -107.9, 27.9748, 9.19245, 0.28 ) }
    dend_45 { pt3dadd( -110.049, 27.8448, 8.62667, 0.55 ) }
    dend_45 { pt3dadd( -118.852, 27.8284, 8.56538, 0.55 ) }
    dend_45 { pt3dadd( -127.604, 27.244, 9.30595, 0.55 ) }
    dend_45 { pt3dadd( -136.133, 25.4703, 10.5747, 0.55 ) }
    dend_45 { pt3dadd( -144.555, 24.7968, 13.048, 0.55 ) }
    dend_45 { pt3dadd( -152.28, 23.1974, 16.9554, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -159.034, 21.4864, 22.3358, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 80.1031, 11.057, -45.9482, 0.55 ) }
    dend_42 { pt3dadd( 83.7506, 11.7256, -49.2032, 0.55 ) }
    dend_42 { pt3dadd( 84.9293, 11.8585, -50.2701, 0.55 ) }
    dend_42 { pt3dadd( 86.4158, 11.9934, -51.5655, 0.55 ) }
    dend_42 { pt3dadd( 89.1433, 12.1424, -54.0405, 0.55 ) }
    dend_42 { pt3dadd( 92.0333, 12.1694, -56.625, 0.55 ) }
    dend_42 { pt3dadd( 93.4725, 12.1091, -57.8028, 0.83 ) }
    dend_42 { pt3dadd( 94.6921, 11.9539, -58.8066, 0.55 ) }
    dend_42 { pt3dadd( 95.6371, 11.7388, -59.5957, 0.83 ) }
    dend_42 { pt3dadd( 98.0171, 10.9161, -61.4746, 0.55 ) }
    dend_42 { pt3dadd( 100.024, 10.1033, -62.9516, 0.55 ) }
    dend_42 { pt3dadd( 102.322, 9.20398, -64.5607, 0.55 ) }
    dend_42 { pt3dadd( 104.868, 8.23242, -66.4221, 0.55 ) }
    dend_42 { pt3dadd( 106.592, 7.53501, -67.6844, 0.55 ) }
    dend_42 { pt3dadd( 108.545, 6.71875, -69.151, 0.55 ) }
    dend_42 { pt3dadd( 110.234, 6.00665, -70.5296, 0.55 ) }
    dend_42 { pt3dadd( 111.29, 5.56823, -71.541, 0.55 ) }
    dend_42 { pt3dadd( 112.781, 4.51701, -73.5919, 0.55 ) }
    dend_42 { pt3dadd( 113.642, 3.79156, -74.8487, 0.55 ) }
    dend_42 { pt3dadd( 114.543, 2.66432, -76.4687, 0.55 ) }
    dend_42 { pt3dadd( 115.936, 0.61987, -79.1508, 0.55 ) }
    dend_42 { pt3dadd( 116.244, 0.12981, -79.7402, 0.28 ) }
    dend_42 { pt3dadd( 120.126, -5.87971, -86.8516, 0.28 ) }
    dend_42 { pt3dadd( 121.34, -7.60132, -88.9502, 0.83 ) }
    dend_42 { pt3dadd( 125.932, -13.7729, -96.3046, 0.83 ) }
    dend_42 { pt3dadd( 128.236, -16.7514, -99.6264, 0.83 ) }
    dend_42 { pt3dadd( 129.283, -17.9886, -100.934, 0.55 ) }
    dend_42 { pt3dadd( 130.409, -19.167, -102.204, 0.55 ) }
    dend_42 { pt3dadd( 133.137, -21.2095, -104.524, 0.55 ) }
    dend_42 { pt3dadd( 135.902, -22.9088, -106.549, 0.28 ) }
    dend_42 { pt3dadd( 136.594, -22.9619, -106.598, 0.55 ) }
    dend_42 { pt3dadd( 138.013, -22.7515, -106.321, 0.28 ) }
    dend_42 { pt3dadd( 138.855, -22.5087, -106.072, 0.55 ) }
    dend_42 { pt3dadd( 139.724, -22.2277, -105.739, 0.28 ) }
    dend_42 { pt3dadd( 140.744, -21.8212, -105.324, 0.55 ) }
    dend_42 { pt3dadd( 142.273, -21.227, -104.898, 0.28 ) }
    dend_42 { pt3dadd( 143.518, -20.8041, -104.572, 0.55 ) }
    dend_42 { pt3dadd( 144.886, -20.3133, -104.361, 0.28 ) }
    dend_42 { pt3dadd( 146.771, -19.726, -104.229, 0.55 ) }
    dend_42 { pt3dadd( 148.89, -19.0903, -104.222, 0.55 ) }
    dend_42 { pt3dadd( 150.767, -18.5754, -104.34, 0.28 ) }
    dend_42 { pt3dadd( 153.38, -17.915, -104.644, 0.55 ) }
    dend_42 { pt3dadd( 157.936, -16.9094, -105.664, 0.55 ) }
    dend_42 { pt3dadd( 159.956, -16.4991, -106.384, 0.55 ) }
    dend_42 { pt3dadd( 160.828, -16.3388, -106.794, 0.83 ) }
    dend_42 { pt3dadd( 162.51, -16.099, -107.716, 0.55 ) }
    dend_42 { pt3dadd( 163.674, -15.9295, -108.443, 0.83 ) }
    dend_42 { pt3dadd( 166.79, -15.423, -110.473, 0.55 ) }
    dend_42 { pt3dadd( 168.737, -15.2466, -111.688, 0.28 ) }
    dend_42 { pt3dadd( 169.558, -15.1693, -112.095, 0.55 ) }
    dend_42 { pt3dadd( 171.825, -15.0057, -112.892, 0.28 ) }
    dend_42 { pt3dadd( 172.632, -14.9819, -113.09, 0.55 ) }
    dend_42 { pt3dadd( 174.286, -14.8945, -113.234, 0.28 ) }
    dend_42 { pt3dadd( 175.97, -14.7976, -113.056, 0.55 ) }
    dend_42 { pt3dadd( 179.337, -14.4644, -112.108, 0.28 ) }
    dend_42 { pt3dadd( 180.883, -14.2867, -111.496, 0.55 ) }
    dend_42 { pt3dadd( 183.201, -14.0697, -110.417, 0.28 ) }
    dend_42 { pt3dadd( 186.111, -13.7363, -108.971, 0.55 ) }
    dend_42 { pt3dadd( 188.202, -13.4562, -107.911, 0.55 ) }
    dend_42 { pt3dadd( 191.785, -12.8506, -106.081, 0.28 ) }
    dend_42 { pt3dadd( 193.254, -12.6056, -105.469, 0.55 ) }
    dend_42 { pt3dadd( 195.79, -12.2006, -104.728, 0.28 ) }
    dend_42 { pt3dadd( 198.288, -11.7252, -104.239, 0.55 ) }
    dend_42 { pt3dadd( 199.643, -11.4305, -104.218, 0.28 ) }
    dend_42 { pt3dadd( 200.836, -11.0747, -104.368, 0.55 ) }
    dend_42 { pt3dadd( 204.193, -10.061, -105.187, 0.28 ) }
    dend_42 { pt3dadd( 206.548, -9.21459, -105.897, 0.28 ) }
    dend_42 { pt3dadd( 208.556, -8.36394, -106.623, 0.55 ) }
    dend_42 { pt3dadd( 210.771, -7.42973, -107.565, 0.28 ) }
    dend_42 { pt3dadd( 211.316, -7.15313, -107.804, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 80.1031, 11.057, -45.9482, 0.55 ) }
    dend_35 { pt3dadd( 81.1362, 8.34351, -47.5217, 0.55 ) }
    dend_35 { pt3dadd( 81.8061, 6.03068, -48.6952, 0.28 ) }
    dend_35 { pt3dadd( 82.4136, 3.92072, -49.5924, 0.55 ) }
    dend_35 { pt3dadd( 83.9272, -0.526609, -51.5339, 0.28 ) }
    dend_35 { pt3dadd( 84.0158, -0.809439, -51.6954, 0.55 ) }
    dend_35 { pt3dadd( 84.5224, -2.29235, -52.6607, 0.28 ) }
    dend_35 { pt3dadd( 84.8362, -3.542, -53.6514, 0.55 ) }
    dend_35 { pt3dadd( 85.0959, -4.86239, -54.83, 0.28 ) }
    dend_35 { pt3dadd( 85.4019, -6.67346, -56.5177, 0.55 ) }
    dend_35 { pt3dadd( 86.1657, -11.2173, -60.6739, 0.55 ) }
    dend_35 { pt3dadd( 86.8187, -15.3677, -64.5324, 0.55 ) }
    dend_35 { pt3dadd( 87.3099, -18.689, -67.6211, 0.55 ) }
    dend_35 { pt3dadd( 87.7352, -21.9576, -70.6025, 0.55 ) }
    dend_35 { pt3dadd( 87.8418, -22.8008, -71.3388, 0.28 ) }
    dend_35 { pt3dadd( 87.9782, -23.6949, -72.0539, 0.55 ) }
    dend_35 { pt3dadd( 88.2741, -24.9148, -72.934, 0.28 ) }
    dend_35 { pt3dadd( 89.0131, -27.0665, -74.3161, 0.55 ) }
    dend_35 { pt3dadd( 90.7559, -31.1141, -76.3193, 0.55 ) }
    dend_35 { pt3dadd( 91.7077, -33.2785, -77.2018, 0.28 ) }
    dend_35 { pt3dadd( 92.5508, -35.4986, -78.1964, 0.55 ) }
    dend_35 { pt3dadd( 93.5105, -38.6401, -79.7074, 0.28 ) }
    dend_35 { pt3dadd( 94.1285, -41.197, -80.9866, 0.55 ) }
    dend_35 { pt3dadd( 94.8957, -45.0388, -82.9078, 0.28 ) }
    dend_35 { pt3dadd( 95.7145, -49.0044, -84.7762, 0.55 ) }
    dend_35 { pt3dadd( 96.8311, -54.7734, -87.5388, 0.28 ) }
    dend_35 { pt3dadd( 97.3622, -57.8566, -89.0216, 0.55 ) }
    dend_35 { pt3dadd( 97.858, -61.0198, -90.6109, 0.28 ) }
    dend_35 { pt3dadd( 98.2705, -63.8173, -92.1771, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 98.907, -67.3191, -94.4245, 0.55 ) }
    dend_35 { pt3dadd( 99.7084, -70.5364, -96.4283, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 44.9596, 24.4078, -10.2236, 0.55 ) }
    dend_31 { pt3dadd( 46.7166, 24.6745, -9.66722, 0.55 ) }
    dend_31 { pt3dadd( 48.0205, 24.783, -9.36461, 0.55 ) }
    dend_31 { pt3dadd( 50.8983, 24.9432, -8.83487, 0.55 ) }
    dend_31 { pt3dadd( 52.2102, 24.9547, -8.69797, 0.55 ) }
    dend_31 { pt3dadd( 53.6454, 24.9735, -8.62663, 0.55 ) }
    dend_31 { pt3dadd( 55.5826, 24.989, -8.66958, 0.55 ) }
    dend_31 { pt3dadd( 57.6566, 24.897, -8.87886, 0.55 ) }
    dend_31 { pt3dadd( 58.7613, 24.799, -9.09869, 0.55 ) }
    dend_31 { pt3dadd( 61.0396, 24.5096, -9.82321, 0.55 ) }
    dend_31 { pt3dadd( 62.0911, 24.3743, -10.1893, 0.55 ) }
    dend_31 { pt3dadd( 64.5689, 23.9974, -11.0901, 0.55 ) }
    dend_31 { pt3dadd( 66.2559, 23.6864, -11.6677, 0.55 ) }
    dend_31 { pt3dadd( 67.4928, 23.4669, -12.0405, 0.83 ) }
    dend_31 { pt3dadd( 69.4776, 23.0576, -12.5942, 0.55 ) }
    dend_31 { pt3dadd( 71.4279, 22.5948, -13.0414, 0.83 ) }
    dend_31 { pt3dadd( 73.088, 22.1522, -13.3461, 0.55 ) }
    dend_31 { pt3dadd( 74.5543, 21.7991, -13.5555, 0.55 ) }
    dend_31 { pt3dadd( 75.3778, 21.6437, -13.6445, 0.83 ) }
    dend_31 { pt3dadd( 77.289, 21.3157, -13.7629, 0.28 ) }
    dend_31 { pt3dadd( 78.2272, 21.2055, -13.779, 0.28 ) }
    dend_31 { pt3dadd( 79.1486, 21.0325, -13.82, 0.28 ) }
    dend_31 { pt3dadd( 80.1412, 20.8681, -13.8764, 0.28 ) }
    dend_31 { pt3dadd( 81.7285, 20.6224, -14.0055, 0.28 ) }
    dend_31 { pt3dadd( 82.3639, 20.5362, -14.0426, 0.55 ) }
    dend_31 { pt3dadd( 83.8656, 20.3878, -14.0004, 0.55 ) }
    dend_31 { pt3dadd( 86.5581, 20.1372, -13.7908, 0.55 ) }
    dend_31 { pt3dadd( 87.3028, 20.0595, -13.6965, 0.55 ) }
    dend_31 { pt3dadd( 87.9682, 19.9787, -13.5791, 0.83 ) }
    dend_31 { pt3dadd( 89.3942, 19.879, -13.2298, 0.55 ) }
    dend_31 { pt3dadd( 90.6313, 19.8005, -12.9082, 0.55 ) }
    dend_31 { pt3dadd( 91.7988, 19.7327, -12.6008, 0.55 ) }
    dend_31 { pt3dadd( 92.7081, 19.6576, -12.3819, 0.55 ) }
    dend_31 { pt3dadd( 94.1734, 19.4235, -12.0698, 0.55 ) }
    dend_31 { pt3dadd( 95.9333, 18.9795, -11.7438, 0.55 ) }
    dend_31 { pt3dadd( 98.7337, 17.9555, -11.3191, 0.55 ) }
    dend_31 { pt3dadd( 100.314, 17.1654, -11.1066, 0.55 ) }
    dend_31 { pt3dadd( 101.723, 16.2599, -10.9156, 0.28 ) }
    dend_31 { pt3dadd( 102.158, 15.9058, -10.8537, 0.55 ) }
    dend_31 { pt3dadd( 103.161, 14.8739, -10.6803, 0.28 ) }
    dend_31 { pt3dadd( 104.075, 13.6821, -10.4706, 0.55 ) }
    dend_31 { pt3dadd( 104.99, 12.1922, -10.0949, 0.55 ) }
    dend_31 { pt3dadd( 105.597, 11.2311, -9.7984, 0.28 ) }
    dend_31 { pt3dadd( 105.815, 10.8986, -9.67565, 0.55 ) }
    dend_31 { pt3dadd( 106.373, 10.08, -9.35743, 0.28 ) }
    dend_31 { pt3dadd( 107.122, 9.02983, -8.91377, 0.55 ) }
    dend_31 { pt3dadd( 109.032, 6.54553, -7.76886, 0.55 ) }
    dend_31 { pt3dadd( 110.016, 5.30859, -7.1607, 0.55 ) }
    dend_31 { pt3dadd( 110.926, 4.18075, -6.59119, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 44.9596, 24.4078, -10.2236, 0.55 ) }
    dend_30 { pt3dadd( 46.2421, 25.6769, -8.99099, 0.55 ) }
    dend_30 { pt3dadd( 46.6617, 26.0681, -8.62066, 0.55 ) }
    dend_30 { pt3dadd( 48.2666, 27.4005, -7.26745, 0.55 ) }
    dend_30 { pt3dadd( 50.0411, 28.9424, -5.75017, 0.55 ) }
    dend_30 { pt3dadd( 52.2961, 30.949, -3.73502, 0.55 ) }
    dend_30 { pt3dadd( 52.9203, 31.5015, -3.18354, 0.55 ) }
    dend_30 { pt3dadd( 54.0542, 32.4382, -2.17838, 0.55 ) }
    dend_30 { pt3dadd( 55.3063, 33.4689, -1.14689, 0.55 ) }
    dend_30 { pt3dadd( 56.7743, 34.6731, -0.0454988, 0.55 ) }
    dend_30 { pt3dadd( 58.1514, 35.832, 0.985366, 0.55 ) }
    dend_30 { pt3dadd( 58.9104, 36.4847, 1.49071, 0.55 ) }
    dend_30 { pt3dadd( 59.7959, 37.2781, 2.06608, 0.55 ) }
    dend_30 { pt3dadd( 60.8904, 38.2824, 2.73608, 0.83 ) }
    dend_30 { pt3dadd( 62.7465, 39.8133, 3.63049, 0.55 ) }
    dend_30 { pt3dadd( 64.0056, 40.7424, 4.19007, 0.83 ) }
    dend_30 { pt3dadd( 65.7905, 41.9167, 4.95305, 0.55 ) }
    dend_30 { pt3dadd( 66.3476, 42.2429, 5.19692, 0.55 ) }
    dend_30 { pt3dadd( 68.1053, 43.1508, 5.96717, 0.55 ) }
    dend_30 { pt3dadd( 71.3281, 44.5242, 7.33016, 0.55 ) }
    dend_30 { pt3dadd( 73.7307, 45.3775, 8.34922, 0.55 ) }
    dend_30 { pt3dadd( 75.638, 45.9928, 9.2459, 0.55 ) }
    dend_30 { pt3dadd( 77.5844, 46.558, 10.2779, 0.55 ) }
    dend_30 { pt3dadd( 77.9955, 46.6677, 10.5029, 0.28 ) }
    dend_30 { pt3dadd( 78.8363, 46.8581, 10.9753, 0.83 ) }
    dend_30 { pt3dadd( 82.2934, 47.6033, 12.9607, 0.55 ) }
    dend_30 { pt3dadd( 84.7243, 48.1041, 14.3047, 0.55 ) }
    dend_30 { pt3dadd( 86.6956, 48.5861, 15.4271, 0.55 ) }
    dend_30 { pt3dadd( 87.8709, 48.8764, 16.1101, 0.83 ) }
    dend_30 { pt3dadd( 88.7931, 49.1182, 16.6422, 0.28 ) }
    dend_30 { pt3dadd( 89.6314, 49.3349, 17.1167, 0.55 ) }
    dend_30 { pt3dadd( 95.5787, 52.9754, 20.8369, 0.55 ) }
    dend_30 { pt3dadd( 102.496, 55.0854, 24.0251, 0.55 ) }
    dend_30 { pt3dadd( 109.114, 58.1668, 27.0539, 0.55 ) }
    dend_30 { pt3dadd( 114.756, 60.8219, 31.9101, 0.55 ) }
    dend_30 { pt3dadd( 120.056, 62.5964, 37.4978, 0.55 ) }
    dend_30 { pt3dadd( 126.661, 62.582, 41.8373, 0.55 ) }
    dend_30 { pt3dadd( 133.614, 61.3188, 45.3767, 0.55 ) }
    dend_30 { pt3dadd( 141.09, 61.2114, 47.9375, 0.55 ) }
    dend_30 { pt3dadd( 148.378, 61.2166, 50.9948, 0.55 ) }
    dend_30 { pt3dadd( 155.928, 61.8056, 53.2536, 0.55 ) }
    dend_30 { pt3dadd( 163.136, 63.1378, 56.2098, 0.55 ) }
    dend_30 { pt3dadd( 170.016, 63.3854, 60.0912, 0.55 ) }
    dend_30 { pt3dadd( 176.64, 65.2127, 63.9958, 0.55 ) }
    dend_30 { pt3dadd( 182.483, 68.4338, 68.2324, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.32878, -27.7898, 6.53597, 1.38 ) }
    dend_13 { pt3dadd( 1.07399, -30.3227, 5.85486, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.32878, -27.7898, 6.53597, 0.55 ) }
    dend_12 { pt3dadd( -2.88123, -29.7569, 6.41472, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.59061, -32.2745, 6.2837, 0.55 ) }
    dend_12 { pt3dadd( -5.92926, -33.9444, 6.1956, 0.55 ) }
    dend_12 { pt3dadd( -7.03754, -35.3412, 5.93658, 0.55 ) }
    dend_12 { pt3dadd( -9.43234, -38.2376, 5.12687, 0.55 ) }
    dend_12 { pt3dadd( -11.1086, -40.1735, 4.50827, 0.55 ) }
    dend_12 { pt3dadd( -12.592, -41.9091, 3.89747, 0.55 ) }
    dend_12 { pt3dadd( -16.4085, -46.1373, 2.33086, 0.55 ) }
    dend_12 { pt3dadd( -21.0027, -51.0356, 0.486924, 0.55 ) }
    dend_12 { pt3dadd( -24.5551, -54.7472, -1.00818, 0.55 ) }
    dend_12 { pt3dadd( -26.8171, -57.1834, -1.99754, 0.55 ) }
    dend_12 { pt3dadd( -29.4105, -60.1043, -3.12349, 0.55 ) }
    dend_12 { pt3dadd( -32.6952, -64.2859, -4.50247, 0.55 ) }
    dend_12 { pt3dadd( -34.6108, -67.2454, -5.26251, 0.55 ) }
    dend_12 { pt3dadd( -36.9855, -71.4948, -5.97114, 0.55 ) }
    dend_12 { pt3dadd( -38.8756, -75.4712, -6.45201, 0.55 ) }
    dend_12 { pt3dadd( -40.7705, -80.4261, -6.89777, 0.55 ) }
    dend_12 { pt3dadd( -42.543, -86.2364, -7.22846, 0.55 ) }
    dend_12 { pt3dadd( -43.4792, -90.6709, -7.32765, 0.55 ) }
    dend_12 { pt3dadd( -43.8124, -92.8748, -7.21759, 0.55 ) }
    dend_12 { pt3dadd( -44.3184, -98.0473, -6.64471, 0.55 ) }
    dend_12 { pt3dadd( -44.7202, -102.885, -5.97351, 0.55 ) }
    dend_12 { pt3dadd( -44.9158, -107.753, -4.91152, 0.55 ) }
    dend_12 { pt3dadd( -45.0737, -110.545, -4.15409, 0.55 ) }
    dend_12 { pt3dadd( -45.5446, -119.176, -1.49114, 0.55 ) }
    dend_12 { pt3dadd( -45.5847, -119.812, -1.28444, 0.55 ) }
    dend_12 { pt3dadd( -45.7679, -123.702, 0.0843628, 0.55 ) }
    dend_12 { pt3dadd( -46.4361, -130.663, 2.65858, 0.55 ) }
    dend_12 { pt3dadd( -46.6578, -132.992, 3.38046, 0.55 ) }
    dend_12 { pt3dadd( -47.0254, -136.637, 3.87898, 0.55 ) }
    dend_12 { pt3dadd( -47.0932, -137.992, 3.76066, 0.55 ) }
    dend_12 { pt3dadd( -47.0276, -142.582, 2.52877, 0.55 ) }
    dend_12 { pt3dadd( -46.7522, -145.556, 1.1283, 0.55 ) }
    dend_12 { pt3dadd( -46.0801, -150.297, -2.04147, 0.55 ) }
    dend_12 { pt3dadd( -44.9762, -156.096, -6.33739, 0.28 ) }
    dend_12 { pt3dadd( -44.6599, -157.53, -7.58874, 0.55 ) }
    dend_12 { pt3dadd( -44.1524, -159.705, -9.6748, 0.28 ) }
    dend_12 { pt3dadd( -44.0769, -160.033, -10.0067, 0.55 ) }
    dend_12 { pt3dadd( -43.6921, -161.829, -11.6733, 0.28 ) }
    dend_12 { pt3dadd( -43.618, -162.438, -12.1049, 0.55 ) }
    dend_12 { pt3dadd( -43.3705, -165.604, -13.751, 0.28 ) }
    dend_12 { pt3dadd( -43.3291, -166.682, -14.3022, 0.55 ) }
    dend_12 { pt3dadd( -43.2673, -169.799, -15.725, 0.28 ) }
    dend_12 { pt3dadd( -43.244, -170.78, -16.1689, 0.55 ) }
    dend_12 { pt3dadd( -43.1968, -174.165, -17.649, 0.28 ) }
    dend_12 { pt3dadd( -43.1661, -175.722, -18.3368, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -6.30524, -81.3466, 65.2305, 0.55 ) }
    dend_10 { pt3dadd( -10.0307, -90.6598, 75.925, 0.55 ) }
    dend_10 { pt3dadd( -14.7442, -98.4848, 87.394, 0.55 ) }
    dend_10 { pt3dadd( -19.4633, -107.287, 98.1289, 0.55 ) }
    dend_10 { pt3dadd( -24.494, -116.084, 108.725, 0.55 ) }
    dend_10 { pt3dadd( -28.7066, -126.711, 117.906, 0.55 ) }
    dend_10 { pt3dadd( -32.4882, -136.937, 127.71, 0.55 ) }
    dend_10 { pt3dadd( -36.0128, -149.547, 134.31, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.30524, -81.3466, 65.2305, 0.55 ) }
    dend_3 { pt3dadd( -4.62216, -90.6037, 73.7004, 0.55 ) }
    dend_3 { pt3dadd( -2.82484, -101.256, 80.3001, 0.55 ) }
    dend_3 { pt3dadd( -3.04295, -111.87, 87.1966, 0.55 ) }
    dend_3 { pt3dadd( -4.20794, -123.026, 93.0657, 0.55 ) }
    dend_3 { pt3dadd( -4.83625, -134.17, 99.0403, 0.55 ) }
    dend_3 { pt3dadd( -5.21021, -144.88, 105.778, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -56.8874, 43.2544, -13.144, 0.83 ) }
    dend_60 { pt3dadd( -56.6357, 44.8275, -14.8191, 0.83 ) }
    dend_60 { pt3dadd( -56.1324, 48.62, -18.5648, 0.55 ) }
    dend_60 { pt3dadd( -55.9158, 50.2577, -20.043, 0.83 ) }
    dend_60 { pt3dadd( -55.6801, 52.0117, -21.5037, 0.55 ) }
    dend_60 { pt3dadd( -55.4433, 53.8192, -22.7489, 0.55 ) }
    dend_60 { pt3dadd( -55.3196, 54.7293, -23.2571, 0.28 ) }
    dend_60 { pt3dadd( -55.2778, 55.3309, -23.4424, 0.55 ) }
    dend_60 { pt3dadd( -55.0858, 57.3497, -23.6318, 0.28 ) }
    dend_60 { pt3dadd( -54.9833, 58.2157, -23.6695, 0.55 ) }
    dend_60 { pt3dadd( -54.6648, 61.2242, -23.6796, 0.28 ) }
    dend_60 { pt3dadd( -54.474, 63.6037, -23.6079, 0.55 ) }
    dend_60 { pt3dadd( -54.3521, 67.3047, -23.3821, 0.28 ) }
    dend_60 { pt3dadd( -54.358, 70.5482, -23.1217, 0.28 ) }
    dend_60 { pt3dadd( -54.4655, 72.3542, -22.941, 0.55 ) }
    dend_60 { pt3dadd( -54.7235, 74.483, -22.7259, 0.28 ) }
    dend_60 { pt3dadd( -54.9133, 75.4924, -22.6091, 0.55 ) }
    dend_60 { pt3dadd( -55.4888, 77.8529, -22.4435, 0.28 ) }
    dend_60 { pt3dadd( -55.977, 79.4148, -22.4172, 0.28 ) }
    dend_60 { pt3dadd( -56.489, 80.945, -22.4395, 0.28 ) }
    dend_60 { pt3dadd( -56.7281, 81.7566, -22.4545, 0.55 ) }
    dend_60 { pt3dadd( -57.5167, 85.0585, -22.5937, 0.28 ) }
    dend_60 { pt3dadd( -58.3193, 88.9829, -22.8313, 0.55 ) }
    dend_60 { pt3dadd( -58.5766, 90.3404, -22.9187, 0.55 ) }
    dend_60 { pt3dadd( -58.8566, 91.6992, -22.9766, 0.55 ) }
    dend_60 { pt3dadd( -59.6039, 94.5692, -23.1481, 0.55 ) }
    dend_60 { pt3dadd( -60.216, 96.4393, -23.3027, 0.28 ) }
    dend_60 { pt3dadd( -60.5308, 97.1378, -23.3713, 0.55 ) }
    dend_60 { pt3dadd( -61.5201, 99.0141, -23.516, 0.28 ) }
    dend_60 { pt3dadd( -62.657, 101.001, -23.7536, 0.55 ) }
    dend_60 { pt3dadd( -64.5669, 103.825, -24.2141, 0.28 ) }
    dend_60 { pt3dadd( -65.4981, 104.988, -24.4477, 0.28 ) }
    dend_60 { pt3dadd( -67.0128, 106.577, -24.9492, 0.55 ) }
    dend_60 { pt3dadd( -68.7098, 108.218, -25.5688, 0.28 ) }
    dend_60 { pt3dadd( -69.0184, 108.471, -25.6806, 0.55 ) }
    dend_60 { pt3dadd( -70.129, 109.26, -26.0755, 0.28 ) }
    dend_60 { pt3dadd( -73.9554, 111.757, -27.3641, 0.55 ) }
    dend_60 { pt3dadd( -79.2679, 114.768, -29.3455, 0.28 ) }
    dend_60 { pt3dadd( -80.2482, 115.262, -29.7682, 0.55 ) }
    dend_60 { pt3dadd( -82.9376, 116.517, -30.9717, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -84.0666, 117.028, -31.5069, 0.28 ) }
    dend_60 { pt3dadd( -85.0476, 117.447, -32.0178, 0.55 ) }
    dend_60 { pt3dadd( -87.9121, 118.333, -33.7255, 0.28 ) }
    dend_60 { pt3dadd( -89.9302, 118.756, -34.8497, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -56.8874, 43.2544, -13.144, 0.55 ) }
    dend_57 { pt3dadd( -57.1774, 44.865, -13.6724, 0.55 ) }
    dend_57 { pt3dadd( -57.3581, 45.8358, -13.8902, 0.28 ) }
    dend_57 { pt3dadd( -57.5984, 46.5687, -13.8539, 0.55 ) }
    dend_57 { pt3dadd( -58.1503, 48.2517, -13.7705, 0.28 ) }
    dend_57 { pt3dadd( -58.538, 49.4338, -13.7119, 0.55 ) }
    dend_57 { pt3dadd( -59.2526, 51.6131, -13.6039, 0.28 ) }
    dend_57 { pt3dadd( -59.716, 52.8244, -13.3358, 0.55 ) }
    dend_57 { pt3dadd( -61.4549, 55.9192, -11.6341, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -142.762, -26.2997, -68.1168, 0.55 ) }
    dend_52 { pt3dadd( -147.066, -30.553, -74.2504, 0.55 ) }
    dend_52 { pt3dadd( -149.924, -35.2224, -80.9038, 0.55 ) }
    dend_52 { pt3dadd( -151.767, -38.6188, -88.6052, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -142.762, -26.2997, -68.1168, 0.55 ) }
    dend_49 { pt3dadd( -146.825, -30.3139, -73.6542, 0.55 ) }
    dend_49 { pt3dadd( -149.88, -34.3558, -79.7874, 0.55 ) }
    dend_49 { pt3dadd( -152.596, -38.5252, -85.9945, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -159.034, 21.4864, 22.3358, 0.55 ) }
    dend_47 { pt3dadd( -171.859, 20.3089, 27.0324, 0.55 ) }
    dend_47 { pt3dadd( -184.989, 21.1919, 30.8717, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -159.034, 21.4864, 22.3358, 0.55 ) }
    dend_46 { pt3dadd( -168.517, 20.708, 22.2384, 0.55 ) }
    dend_46 { pt3dadd( -177.974, 21.0534, 23.2433, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 99.7084, -70.5364, -96.4283, 0.28 ) }
    dend_39 { pt3dadd( 108.366, -77.3194, -108.776, 0.28 ) }
    dend_39 { pt3dadd( 109.252, -77.9965, -109.847, 0.55 ) }
    dend_39 { pt3dadd( 110.748, -79.1396, -111.654, 0.28 ) }
    dend_39 { pt3dadd( 112.007, -80.1021, -113.175, 0.28 ) }
    dend_39 { pt3dadd( 113.674, -81.3762, -115.189, 0.55 ) }
    dend_39 { pt3dadd( 115.872, -83.056, -117.845, 0.55 ) }
    dend_39 { pt3dadd( 119.056, -84.7767, -118.914, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 99.7084, -70.5364, -96.4283, 0.55 ) }
    dend_36 { pt3dadd( 100.663, -71.7775, -97.3067, 0.55 ) }
    dend_36 { pt3dadd( 101.0, -72.3645, -97.679, 0.28 ) }
    dend_36 { pt3dadd( 101.529, -73.3932, -98.3269, 0.55 ) }
    dend_36 { pt3dadd( 102.695, -75.6593, -99.754, 0.28 ) }
    dend_36 { pt3dadd( 103.504, -77.2298, -100.744, 0.55 ) }
    dend_36 { pt3dadd( 104.873, -79.8906, -102.419, 0.28 ) }
    dend_36 { pt3dadd( 106.454, -83.2489, -104.67, 0.28 ) }
    dend_36 { pt3dadd( 107.125, -84.821, -105.721, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 110.926, 4.18075, -6.59119, 0.28 ) }
    dend_33 { pt3dadd( 112.112, 2.94774, -6.07941, 0.28 ) }
    dend_33 { pt3dadd( 113.596, 1.30486, -5.25251, 0.28 ) }
    dend_33 { pt3dadd( 114.53, 0.233855, -4.6684, 0.55 ) }
    dend_33 { pt3dadd( 115.083, -0.349702, -4.30407, 0.28 ) }
    dend_33 { pt3dadd( 115.377, -0.664585, -4.10485, 0.28 ) }
    dend_33 { pt3dadd( 116.838, -2.21785, -3.14928, 0.55 ) }
    dend_33 { pt3dadd( 117.165, -2.56173, -2.88069, 0.28 ) }
    dend_33 { pt3dadd( 117.935, -3.48464, -2.11306, 0.55 ) }
    dend_33 { pt3dadd( 118.598, -4.28898, -1.48739, 0.28 ) }
    dend_33 { pt3dadd( 119.176, -4.93577, -0.987318, 0.55 ) }
    dend_33 { pt3dadd( 119.864, -5.71152, -0.449388, 0.55 ) }
    dend_33 { pt3dadd( 120.986, -6.94223, 0.220068, 0.55 ) }
    dend_33 { pt3dadd( 121.259, -7.24501, 0.370512, 0.55 ) }
    dend_33 { pt3dadd( 122.243, -8.38263, 0.910675, 0.28 ) }
    dend_33 { pt3dadd( 122.629, -8.85097, 1.11358, 0.55 ) }
    dend_33 { pt3dadd( 123.162, -9.44146, 1.37725, 0.28 ) }
    dend_33 { pt3dadd( 123.921, -10.2803, 1.70535, 0.55 ) }
    dend_33 { pt3dadd( 125.206, -11.5911, 2.00402, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 110.926, 4.18075, -6.59119, 0.55 ) }
    dend_32 { pt3dadd( 108.766, 3.8596, -6.93379, 0.55 ) }
    dend_32 { pt3dadd( 107.012, 3.5988, -7.21201, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.07399, -30.3227, 5.85486, 0.83 ) }
    dend_17 { pt3dadd( 1.18982, -30.5725, 5.82132, 0.83 ) }
    dend_17 { pt3dadd( 2.55865, -32.7824, 5.62375, 0.83 ) }
    dend_17 { pt3dadd( 3.74332, -34.7182, 5.32144, 0.55 ) }
    dend_17 { pt3dadd( 4.68844, -36.2626, 5.08025, 0.55 ) }
    dend_17 { pt3dadd( 6.69731, -39.5453, 4.56761, 0.83 ) }
    dend_17 { pt3dadd( 9.13393, -43.527, 3.94581, 0.55 ) }
    dend_17 { pt3dadd( 10.4692, -45.6109, 3.65546, 0.83 ) }
    dend_17 { pt3dadd( 12.8561, -48.9253, 3.31387, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.07399, -30.3227, 5.85486, 0.55 ) }
    dend_14 { pt3dadd( -0.689422, -31.1658, 3.86021, 0.55 ) }
    dend_14 { pt3dadd( -2.58223, -32.0709, 1.71919, 0.55 ) }
    dend_14 { pt3dadd( -4.81671, -33.1393, -0.808292, 0.55 ) }
    dend_14 { pt3dadd( -7.53009, -34.4366, -3.87748, 0.55 ) }
    dend_14 { pt3dadd( -9.06984, -35.1729, -5.61914, 0.55 ) }
    dend_14 { pt3dadd( -9.37915, -35.3207, -5.96901, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -5.21021, -144.88, 105.778, 0.55 ) }
    dend_7 { pt3dadd( -4.83793, -151.345, 109.991, 0.55 ) }
    dend_7 { pt3dadd( -3.9687, -158.38, 113.064, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -5.21021, -144.88, 105.778, 0.55 ) }
    dend_4 { pt3dadd( -5.45319, -153.247, 110.575, 0.55 ) }
    dend_4 { pt3dadd( -6.08424, -161.398, 115.699, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -61.4549, 55.9192, -11.6341, 0.28 ) }
    dend_59 { pt3dadd( -62.9016, 57.4816, -10.0591, 0.28 ) }
    dend_59 { pt3dadd( -63.4463, 58.0749, -9.38474, 0.55 ) }
    dend_59 { pt3dadd( -65.0034, 59.7959, -7.39044, 0.28 ) }
    dend_59 { pt3dadd( -65.7788, 60.6472, -6.5008, 0.55 ) }
    dend_59 { pt3dadd( -67.8988, 62.9487, -4.18515, 0.28 ) }
    dend_59 { pt3dadd( -70.0534, 65.2879, -1.8316, 0.55 ) }
    dend_59 { pt3dadd( -73.61, 68.94, 2.1068, 0.28 ) }
    dend_59 { pt3dadd( -74.3674, 69.725, 2.94618, 0.55 ) }
    dend_59 { pt3dadd( -76.0388, 71.5709, 4.71919, 0.28 ) }
    dend_59 { pt3dadd( -76.6918, 72.3393, 5.41464, 0.55 ) }
    dend_59 { pt3dadd( -83.9684, 77.2482, 11.4072, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -92.0213, 83.1977, 14.9724, 0.55 ) }
    dend_59 { pt3dadd( -98.9968, 89.5265, 19.8962, 0.55 ) }
    dend_59 { pt3dadd( -104.652, 97.2175, 24.5669, 0.55 ) }
    dend_59 { pt3dadd( -111.383, 104.418, 28.5442, 0.55 ) }
    dend_59 { pt3dadd( -118.91, 109.976, 33.5838, 0.55 ) }
    dend_59 { pt3dadd( -125.715, 114.808, 40.1645, 0.55 ) }
    dend_59 { pt3dadd( -131.497, 118.678, 48.1984, 0.55 ) }
    dend_59 { pt3dadd( -137.328, 123.142, 55.8819, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -61.4549, 55.9192, -11.6341, 0.55 ) }
    dend_58 { pt3dadd( -65.5522, 54.2822, -9.93617, 0.55 ) }
    dend_58 { pt3dadd( -67.6767, 53.3583, -9.05613, 0.28 ) }
    dend_58 { pt3dadd( -69.2577, 52.6707, -8.40122, 0.55 ) }
    dend_58 { pt3dadd( -70.5753, 52.0976, -7.85539, 0.28 ) }
    dend_58 { pt3dadd( -71.4983, 51.6962, -7.47307, 0.55 ) }
    dend_58 { pt3dadd( -74.0432, 50.5894, -6.41885, 0.28 ) }
    dend_58 { pt3dadd( -75.7232, 49.6993, -5.93592, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -151.767, -38.6188, -88.6052, 0.55 ) }
    dend_54 { pt3dadd( -154.691, -44.0357, -96.0925, 0.55 ) }
    dend_54 { pt3dadd( -157.4, -50.3279, -102.95, 0.55 ) }
    dend_54 { pt3dadd( -159.394, -55.3734, -110.983, 0.55 ) }
    dend_54 { pt3dadd( -162.364, -61.2788, -118.072, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -151.767, -38.6188, -88.6052, 0.55 ) }
    dend_53 { pt3dadd( -157.394, -35.3447, -97.975, 0.55 ) }
    dend_53 { pt3dadd( -162.863, -30.3008, -106.626, 0.55 ) }
    dend_53 { pt3dadd( -168.891, -27.1039, -115.77, 0.55 ) }
    dend_53 { pt3dadd( -177.202, -24.1851, -123.022, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -152.596, -38.5252, -85.9945, 0.55 ) }
    dend_51 { pt3dadd( -155.609, -37.4114, -92.3456, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -152.596, -38.5252, -85.9945, 0.55 ) }
    dend_50 { pt3dadd( -156.176, -46.1158, -90.0029, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 119.056, -84.7767, -118.914, 0.28 ) }
    dend_41 { pt3dadd( 122.371, -85.6218, -120.601, 0.28 ) }
    dend_41 { pt3dadd( 123.911, -86.0144, -121.384, 0.55 ) }
    dend_41 { pt3dadd( 126.848, -86.763, -122.878, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 119.056, -84.7767, -118.914, 0.55 ) }
    dend_40 { pt3dadd( 119.075, -86.3844, -119.561, 0.55 ) }
    dend_40 { pt3dadd( 119.114, -89.6001, -120.856, 0.28 ) }
    dend_40 { pt3dadd( 119.126, -90.6476, -121.278, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 107.125, -84.821, -105.721, 0.28 ) }
    dend_38 { pt3dadd( 108.275, -87.129, -107.258, 0.28 ) }
    dend_38 { pt3dadd( 108.845, -88.2718, -108.019, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 107.125, -84.821, -105.721, 0.55 ) }
    dend_37 { pt3dadd( 105.214, -85.8582, -104.475, 0.55 ) }
    dend_37 { pt3dadd( 99.8858, -88.7506, -100.999, 0.28 ) }
    dend_37 { pt3dadd( 98.6201, -89.4377, -100.174, 0.55 ) }
    dend_37 { pt3dadd( 95.1578, -91.3173, -97.9147, 0.28 ) }
    dend_37 { pt3dadd( 92.926, -92.5289, -96.4589, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 12.8561, -48.9253, 3.31387, 0.83 ) }
    dend_23 { pt3dadd( 12.8942, -49.311, 3.26627, 0.83 ) }
    dend_23 { pt3dadd( 13.4891, -54.3526, 2.76994, 0.83 ) }
    dend_23 { pt3dadd( 13.6489, -58.1265, 2.68747, 0.83 ) }
    dend_23 { pt3dadd( 13.6095, -61.7625, 3.0202, 0.83 ) }
    dend_23 { pt3dadd( 13.4447, -66.593, 3.85195, 0.83 ) }
    dend_23 { pt3dadd( 13.1345, -72.1538, 5.03854, 0.83 ) }
    dend_23 { pt3dadd( 12.8657, -78.354, 6.68303, 0.83 ) }
    dend_23 { pt3dadd( 12.6502, -84.3692, 8.55711, 0.83 ) }
    dend_23 { pt3dadd( 11.8783, -91.7613, 10.7633, 0.83 ) }
    dend_23 { pt3dadd( 11.307, -95.1635, 11.6139, 0.83 ) }
    dend_23 { pt3dadd( 10.8419, -97.7266, 12.0943, 0.83 ) }
    dend_23 { pt3dadd( 9.82923, -102.647, 12.929, 0.83 ) }
    dend_23 { pt3dadd( 8.98676, -107.061, 13.4181, 0.83 ) }
    dend_23 { pt3dadd( 7.53243, -116.499, 13.3371, 0.83 ) }
    dend_23 { pt3dadd( 6.69069, -121.68, 12.6164, 0.83 ) }
    dend_23 { pt3dadd( 5.85739, -126.462, 11.6085, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 12.8561, -48.9253, 3.31387, 0.55 ) }
    dend_18 { pt3dadd( 12.0615, -50.7942, 3.72632, 0.55 ) }
    dend_18 { pt3dadd( 11.4916, -52.1441, 4.13063, 0.55 ) }
    dend_18 { pt3dadd( 11.1721, -53.0019, 4.46886, 0.55 ) }
    dend_18 { pt3dadd( 10.7694, -54.3367, 5.11135, 0.55 ) }
    dend_18 { pt3dadd( 10.0851, -56.9696, 6.53558, 0.55 ) }
    dend_18 { pt3dadd( 9.60797, -58.9477, 7.83775, 0.55 ) }
    dend_18 { pt3dadd( 9.27168, -60.5222, 9.05206, 0.55 ) }
    dend_18 { pt3dadd( 8.92257, -62.1043, 10.4035, 0.55 ) }
    dend_18 { pt3dadd( 8.64016, -63.4117, 11.5974, 0.28 ) }
    dend_18 { pt3dadd( 8.43558, -64.4692, 12.7375, 0.55 ) }
    dend_18 { pt3dadd( 8.09057, -66.3742, 15.1047, 0.55 ) }
    dend_18 { pt3dadd( 7.84663, -67.5323, 16.7056, 0.55 ) }
    dend_18 { pt3dadd( 7.70055, -68.1814, 17.5976, 0.55 ) }
    dend_18 { pt3dadd( 7.47605, -68.9492, 18.6179, 0.83 ) }
    dend_18 { pt3dadd( 6.74654, -71.2367, 21.4879, 0.28 ) }
    dend_18 { pt3dadd( 6.50019, -71.9952, 22.4157, 0.55 ) }
    dend_18 { pt3dadd( 6.08809, -73.3683, 24.0321, 0.28 ) }
    dend_18 { pt3dadd( 5.96994, -73.7894, 24.5627, 0.55 ) }
    dend_18 { pt3dadd( 5.74544, -74.7805, 25.7727, 0.28 ) }
    dend_18 { pt3dadd( 5.61029, -75.3471, 26.4161, 0.55 ) }
    dend_18 { pt3dadd( 4.91415, -77.2239, 28.0216, 0.55 ) }
    dend_18 { pt3dadd( 4.87929, -82.1648, 34.0419, 0.55 ) }
    dend_18 { pt3dadd( 5.28163, -86.8402, 40.2578, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.37915, -35.3207, -5.96901, 0.55 ) }
    dend_16 { pt3dadd( -11.4181, -36.0138, -7.60928, 0.55 ) }
    dend_16 { pt3dadd( -12.0166, -36.1739, -8.06775, 0.55 ) }
    dend_16 { pt3dadd( -13.5152, -36.5767, -9.1673, 0.55 ) }
    dend_16 { pt3dadd( -16.7823, -37.3695, -11.449, 0.28 ) }
    dend_16 { pt3dadd( -17.2659, -37.4776, -11.761, 0.55 ) }
    dend_16 { pt3dadd( -19.2775, -37.9799, -12.9915, 0.55 ) }
    dend_16 { pt3dadd( -22.0089, -38.6716, -14.4373, 0.55 ) }
    dend_16 { pt3dadd( -23.0512, -38.9067, -14.9677, 0.28 ) }
    dend_16 { pt3dadd( -23.9588, -39.0569, -15.3854, 0.28 ) }
    dend_16 { pt3dadd( -25.4879, -39.2876, -15.9109, 0.55 ) }
    dend_16 { pt3dadd( -27.3598, -39.4885, -16.6152, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -29.0918, -39.5397, -17.3008, 0.55 ) }
    dend_16 { pt3dadd( -30.427, -39.4794, -17.8077, 0.55 ) }
    dend_16 { pt3dadd( -31.3489, -39.3678, -18.1829, 0.55 ) }
    dend_16 { pt3dadd( -34.0656, -38.929, -19.3586, 0.55 ) }
    dend_16 { pt3dadd( -36.9175, -38.2925, -20.5474, 0.55 ) }
    dend_16 { pt3dadd( -38.0919, -37.9711, -21.0122, 0.28 ) }
    dend_16 { pt3dadd( -39.2103, -37.6816, -21.4723, 0.55 ) }
    dend_16 { pt3dadd( -41.479, -37.2271, -22.3848, 0.28 ) }
    dend_16 { pt3dadd( -42.2419, -37.0941, -22.685, 0.83 ) }
    dend_16 { pt3dadd( -43.6564, -36.8316, -23.158, 0.28 ) }
    dend_16 { pt3dadd( -44.6618, -36.7137, -23.3783, 0.55 ) }
    dend_16 { pt3dadd( -46.1191, -36.5901, -23.671, 0.28 ) }
    dend_16 { pt3dadd( -46.6972, -36.5342, -23.7699, 0.55 ) }
    dend_16 { pt3dadd( -47.7619, -36.45, -23.9, 0.55 ) }
    dend_16 { pt3dadd( -49.3602, -36.1731, -24.0395, 0.55 ) }
    dend_16 { pt3dadd( -50.3957, -35.9323, -24.0757, 0.28 ) }
    dend_16 { pt3dadd( -51.2194, -35.6413, -24.0424, 0.55 ) }
    dend_16 { pt3dadd( -52.1888, -35.1843, -24.0075, 0.28 ) }
    dend_16 { pt3dadd( -52.3489, -35.0968, -24.0069, 0.55 ) }
    dend_16 { pt3dadd( -53.8652, -34.2551, -24.2447, 0.28 ) }
    dend_16 { pt3dadd( -54.9828, -33.6223, -24.5258, 0.55 ) }
    dend_16 { pt3dadd( -56.4848, -32.6958, -25.0823, 0.83 ) }
    dend_16 { pt3dadd( -57.741, -31.9056, -25.6654, 0.28 ) }
    dend_16 { pt3dadd( -58.0699, -31.7032, -25.8444, 0.55 ) }
    dend_16 { pt3dadd( -60.6118, -30.1817, -27.3403, 0.28 ) }
    dend_16 { pt3dadd( -61.0625, -29.9214, -27.6403, 0.55 ) }
    dend_16 { pt3dadd( -62.4012, -29.0747, -28.5978, 0.28 ) }
    dend_16 { pt3dadd( -62.7471, -28.8569, -28.8472, 0.55 ) }
    dend_16 { pt3dadd( -63.6272, -28.2908, -29.4347, 0.28 ) }
    dend_16 { pt3dadd( -64.2458, -27.8841, -29.8166, 0.55 ) }
    dend_16 { pt3dadd( -65.6018, -26.9781, -30.4868, 0.28 ) }
    dend_16 { pt3dadd( -66.405, -26.4917, -30.8567, 0.55 ) }
    dend_16 { pt3dadd( -68.1111, -25.5517, -31.5632, 0.28 ) }
    dend_16 { pt3dadd( -68.6192, -25.2971, -31.7663, 0.55 ) }
    dend_16 { pt3dadd( -69.4144, -24.9542, -32.058, 0.28 ) }
    dend_16 { pt3dadd( -70.0837, -24.6658, -32.2753, 0.55 ) }
    dend_16 { pt3dadd( -71.4633, -24.085, -32.6501, 0.28 ) }
    dend_16 { pt3dadd( -71.8773, -23.9189, -32.7504, 0.55 ) }
    dend_16 { pt3dadd( -74.9312, -22.6311, -33.3632, 0.28 ) }
    dend_16 { pt3dadd( -75.9858, -22.1098, -33.4913, 0.55 ) }
    dend_16 { pt3dadd( -77.8447, -21.0958, -33.6062, 0.28 ) }
    dend_16 { pt3dadd( -78.6772, -20.6073, -33.6334, 0.55 ) }
    dend_16 { pt3dadd( -80.5675, -19.502, -33.5906, 0.28 ) }
    dend_16 { pt3dadd( -81.2572, -19.1269, -33.5453, 0.55 ) }
    dend_16 { pt3dadd( -83.7359, -17.9923, -33.2492, 0.28 ) }
    dend_16 { pt3dadd( -84.7726, -17.648, -33.1156, 0.55 ) }
    dend_16 { pt3dadd( -86.2579, -17.3975, -32.9065, 0.55 ) }
    dend_16 { pt3dadd( -87.1693, -17.301, -32.7562, 0.55 ) }
    dend_16 { pt3dadd( -88.9997, -17.1541, -32.3091, 0.28 ) }
    dend_16 { pt3dadd( -90.7754, -17.0296, -31.7565, 0.28 ) }
    dend_16 { pt3dadd( -92.2441, -16.921, -31.2527, 0.55 ) }
    dend_16 { pt3dadd( -93.9827, -16.6308, -30.4387, 0.28 ) }
    dend_16 { pt3dadd( -94.8051, -16.3743, -29.9163, 0.55 ) }
    dend_16 { pt3dadd( -96.6823, -15.4141, -28.4631, 0.28 ) }
    dend_16 { pt3dadd( -97.5509, -14.7003, -27.4572, 0.55 ) }
    dend_16 { pt3dadd( -98.0493, -14.1261, -26.6549, 0.28 ) }
    dend_16 { pt3dadd( -98.5298, -13.4815, -25.564, 0.55 ) }
    dend_16 { pt3dadd( -99.0765, -12.6386, -24.0797, 0.28 ) }
    dend_16 { pt3dadd( -99.2886, -12.3419, -23.5209, 0.55 ) }
    dend_16 { pt3dadd( -100.514, -11.0112, -20.8561, 0.28 ) }
    dend_16 { pt3dadd( -100.934, -10.5922, -19.9638, 0.55 ) }
    dend_16 { pt3dadd( -101.918, -9.66577, -17.801, 0.28 ) }
    dend_16 { pt3dadd( -102.453, -9.17429, -16.6262, 0.55 ) }
    dend_16 { pt3dadd( -102.895, -8.77167, -15.6617, 0.55 ) }
    dend_16 { pt3dadd( -103.435, -8.29761, -14.5314, 0.28 ) }
    dend_16 { pt3dadd( -103.756, -8.05536, -14.0162, 0.55 ) }
    dend_16 { pt3dadd( -104.879, -7.18646, -12.3808, 0.28 ) }
    dend_16 { pt3dadd( -105.451, -6.62989, -11.5096, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.37915, -35.3207, -5.96901, 0.55 ) }
    dend_15 { pt3dadd( -9.5474, -35.3468, -7.00153, 0.55 ) }
    dend_15 { pt3dadd( -9.68883, -35.2588, -8.03464, 0.55 ) }
    dend_15 { pt3dadd( -9.80104, -35.0582, -9.32087, 0.55 ) }
    dend_15 { pt3dadd( -9.84865, -34.8114, -10.3629, 0.55 ) }
    dend_15 { pt3dadd( -9.66569, -32.4929, -17.114, 0.55 ) }
    dend_15 { pt3dadd( -9.64228, -31.8067, -18.6258, 0.55 ) }
    dend_15 { pt3dadd( -9.65032, -30.6394, -20.8544, 0.55 ) }
    dend_15 { pt3dadd( -9.66545, -29.7627, -22.4291, 0.55 ) }
    dend_15 { pt3dadd( -9.6501, -28.8229, -23.9449, 0.28 ) }
    dend_15 { pt3dadd( -9.52294, -27.2491, -26.2322, 0.55 ) }
    dend_15 { pt3dadd( -9.15866, -24.8032, -29.5712, 0.28 ) }
    dend_15 { pt3dadd( -9.19345, -24.6476, -29.8942, 0.55 ) }
    dend_15 { pt3dadd( -9.96124, -24.0672, -32.0291, 0.28 ) }
    dend_15 { pt3dadd( -10.7222, -23.7926, -33.3952, 0.55 ) }
    dend_15 { pt3dadd( -11.683, -23.6294, -34.8146, 0.55 ) }
    dend_15 { pt3dadd( -13.4403, -23.4949, -37.3602, 0.55 ) }
    dend_15 { pt3dadd( -16.8736, -23.2715, -42.3698, 0.55 ) }
    dend_15 { pt3dadd( -19.1177, -23.1557, -45.7784, 0.55 ) }
    dend_15 { pt3dadd( -19.8601, -23.1242, -46.9762, 0.55 ) }
    dend_15 { pt3dadd( -24.5552, -22.8224, -54.9508, 0.55 ) }
    dend_15 { pt3dadd( -25.7362, -22.694, -57.1574, 0.55 ) }
    dend_15 { pt3dadd( -26.3055, -22.6113, -58.4442, 0.55 ) }
    dend_15 { pt3dadd( -27.3672, -22.4703, -61.5662, 0.55 ) }
    dend_15 { pt3dadd( -29.459, -22.4792, -69.2493, 0.55 ) }
    dend_15 { pt3dadd( -29.9303, -22.5576, -71.3526, 0.28 ) }
    dend_15 { pt3dadd( -30.1061, -22.6465, -72.5763, 0.55 ) }
    dend_15 { pt3dadd( -30.3293, -22.8461, -74.4035, 0.28 ) }
    dend_15 { pt3dadd( -30.362, -22.995, -75.1693, 0.55 ) }
    dend_15 { pt3dadd( -29.8861, -23.722, -77.4511, 0.28 ) }
    dend_15 { pt3dadd( -28.7531, -24.8434, -78.6969, 0.55 ) }
    dend_15 { pt3dadd( -28.0245, -25.6607, -79.4089, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( -27.2765, -26.5826, -79.9928, 0.55 ) }
    dend_15 { pt3dadd( -26.5659, -27.6052, -80.4682, 0.28 ) }
    dend_15 { pt3dadd( -26.2632, -28.1367, -80.6908, 0.55 ) }
    dend_15 { pt3dadd( -25.511, -29.5403, -81.1684, 0.28 ) }
    dend_15 { pt3dadd( -25.3569, -29.9587, -81.3459, 0.55 ) }
    dend_15 { pt3dadd( -24.5734, -32.3504, -82.4682, 0.28 ) }
    dend_15 { pt3dadd( -24.2819, -33.4449, -83.1275, 0.55 ) }
    dend_15 { pt3dadd( -23.7689, -35.7574, -84.8157, 0.28 ) }
    dend_15 { pt3dadd( -23.6159, -36.5991, -85.5433, 0.55 ) }
    dend_15 { pt3dadd( -23.1387, -39.3391, -88.1558, 0.28 ) }
    dend_15 { pt3dadd( -23.0394, -40.0029, -88.8189, 0.55 ) }
    dend_15 { pt3dadd( -22.8307, -42.1074, -90.9434, 0.28 ) }
    dend_15 { pt3dadd( -22.7797, -42.6064, -91.3875, 0.55 ) }
    dend_15 { pt3dadd( -22.6746, -43.9313, -92.52, 0.28 ) }
    dend_15 { pt3dadd( -22.6603, -44.6945, -93.2464, 0.55 ) }
    dend_15 { pt3dadd( -22.6663, -45.437, -94.03, 0.55 ) }
    dend_15 { pt3dadd( -22.6694, -46.9191, -95.5841, 0.28 ) }
    dend_15 { pt3dadd( -22.6733, -47.8186, -96.7001, 0.55 ) }
    dend_15 { pt3dadd( -22.6679, -49.975, -100.272, 0.28 ) }
    dend_15 { pt3dadd( -22.6876, -50.6461, -101.69, 0.55 ) }
    dend_15 { pt3dadd( -22.6837, -51.0628, -102.663, 0.28 ) }
    dend_15 { pt3dadd( -22.6631, -51.4316, -103.644, 0.55 ) }
    dend_15 { pt3dadd( -22.5426, -52.4311, -106.651, 0.28 ) }
    dend_15 { pt3dadd( -22.4094, -53.2136, -108.906, 0.55 ) }
    dend_15 { pt3dadd( -21.9915, -54.7578, -112.636, 0.28 ) }
    dend_15 { pt3dadd( -21.8553, -55.2367, -113.809, 0.55 ) }
    dend_15 { pt3dadd( -21.4632, -56.1101, -115.966, 0.28 ) }
    dend_15 { pt3dadd( -21.2929, -56.3967, -116.657, 0.55 ) }
    dend_15 { pt3dadd( -20.878, -56.859, -117.67, 0.28 ) }
    dend_15 { pt3dadd( -20.4549, -57.2466, -118.517, 0.55 ) }
    dend_15 { pt3dadd( -19.1256, -58.1914, -120.647, 0.28 ) }
    dend_15 { pt3dadd( -17.5663, -59.171, -123.057, 0.28 ) }
    dend_15 { pt3dadd( -16.7059, -59.6115, -124.208, 0.28 ) }
    dend_15 { pt3dadd( -15.8978, -60.0101, -125.423, 0.55 ) }
    dend_15 { pt3dadd( -14.7216, -60.5021, -127.198, 0.28 ) }
    dend_15 { pt3dadd( -14.1844, -60.7087, -127.974, 0.83 ) }
    dend_15 { pt3dadd( -12.7515, -61.269, -129.897, 0.28 ) }
    dend_15 { pt3dadd( -12.17, -61.5313, -130.769, 0.55 ) }
    dend_15 { pt3dadd( -9.76254, -62.8352, -134.749, 0.28 ) }
    dend_15 { pt3dadd( -8.68706, -63.5044, -136.856, 0.28 ) }
    dend_15 { pt3dadd( -7.98176, -63.9863, -138.456, 0.55 ) }
    dend_15 { pt3dadd( -7.64914, -64.2816, -139.456, 0.55 ) }
    dend_15 { pt3dadd( -6.91424, -65.0902, -142.231, 0.28 ) }
    dend_15 { pt3dadd( -6.30084, -65.944, -144.889, 0.55 ) }
    dend_15 { pt3dadd( -5.74383, -66.7849, -147.313, 0.28 ) }
    dend_15 { pt3dadd( -5.31786, -67.5684, -149.567, 0.55 ) }
    dend_15 { pt3dadd( -4.95801, -68.1981, -151.424, 0.28 ) }
    dend_15 { pt3dadd( -4.60758, -68.626, -152.898, 0.55 ) }
    dend_15 { pt3dadd( -3.64718, -69.4922, -156.36, 0.28 ) }
    dend_15 { pt3dadd( -3.10975, -69.9312, -158.076, 0.55 ) }
    dend_15 { pt3dadd( -2.23522, -70.6002, -160.6, 0.28 ) }
    dend_15 { pt3dadd( -1.48373, -71.0946, -162.635, 0.55 ) }
    dend_15 { pt3dadd( 0.273749, -72.0573, -167.394, 0.28 ) }
    dend_15 { pt3dadd( 0.895559, -72.3424, -169.402, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -3.9687, -158.38, 113.064, 0.55 ) }
    dend_9 { pt3dadd( -3.79456, -169.471, 117.973, 0.55 ) }
    dend_9 { pt3dadd( -3.32363, -181.431, 119.943, 0.55 ) }
    dend_9 { pt3dadd( -3.0506, -192.968, 123.683, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -3.9687, -158.38, 113.064, 0.55 ) }
    dend_8 { pt3dadd( -2.82361, -164.538, 117.263, 0.55 ) }
    dend_8 { pt3dadd( -2.49476, -169.81, 122.645, 0.55 ) }
    dend_8 { pt3dadd( -1.95812, -173.865, 128.98, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.08424, -161.398, 115.699, 0.55 ) }
    dend_6 { pt3dadd( -5.44965, -168.786, 119.944, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -6.08424, -161.398, 115.699, 0.55 ) }
    dend_5 { pt3dadd( -7.20455, -170.295, 121.112, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 5.85739, -126.462, 11.6085, 0.83 ) }
    dend_25 { pt3dadd( 6.85658, -130.243, 12.1158, 0.83 ) }
    dend_25 { pt3dadd( 7.87879, -133.419, 12.7544, 0.83 ) }
    dend_25 { pt3dadd( 8.89487, -136.577, 13.3892, 0.83 ) }
    dend_25 { pt3dadd( 9.85981, -139.575, 13.992, 0.83 ) }
    dend_25 { pt3dadd( 11.3468, -144.196, 14.921, 0.83 ) }
    dend_25 { pt3dadd( 12.8231, -148.783, 15.8433, 0.83 ) }
    dend_25 { pt3dadd( 14.1012, -151.803, 16.8061, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 5.85739, -126.462, 11.6085, 0.55 ) }
    dend_24 { pt3dadd( 7.16475, -128.183, 11.8545, 0.55 ) }
    dend_24 { pt3dadd( 8.21043, -129.528, 11.8086, 0.55 ) }
    dend_24 { pt3dadd( 8.95489, -130.525, 11.6674, 0.55 ) }
    dend_24 { pt3dadd( 9.67456, -131.702, 11.3222, 0.83 ) }
    dend_24 { pt3dadd( 10.4315, -133.044, 10.7519, 0.55 ) }
    dend_24 { pt3dadd( 11.172, -134.357, 10.194, 0.83 ) }
    dend_24 { pt3dadd( 11.9174, -135.785, 9.44304, 0.55 ) }
    dend_24 { pt3dadd( 12.3614, -136.614, 8.93006, 0.83 ) }
    dend_24 { pt3dadd( 13.7217, -139.302, 7.04177, 0.55 ) }
    dend_24 { pt3dadd( 14.6387, -141.42, 5.3976, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.28163, -86.8402, 40.2578, 0.55 ) }
    dend_20 { pt3dadd( 3.77275, -91.4517, 44.0238, 0.55 ) }
    dend_20 { pt3dadd( 1.42423, -95.5166, 47.9844, 0.55 ) }
    dend_20 { pt3dadd( -1.3424, -99.0184, 52.2046, 0.55 ) }
    dend_20 { pt3dadd( -4.65074, -101.834, 56.5462, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 5.28163, -86.8402, 40.2578, 0.55 ) }
    dend_19 { pt3dadd( 5.39534, -92.0402, 45.9396, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 14.1012, -151.803, 16.8061, 0.55 ) }
    dend_27 { pt3dadd( 14.2984, -153.474, 17.2812, 0.55 ) }
    dend_27 { pt3dadd( 14.6164, -155.605, 17.9327, 0.55 ) }
    dend_27 { pt3dadd( 14.9156, -157.617, 18.5365, 0.55 ) }
    dend_27 { pt3dadd( 15.1086, -159.048, 18.9464, 0.55 ) }
    dend_27 { pt3dadd( 15.4183, -161.605, 19.6426, 0.55 ) }
    dend_27 { pt3dadd( 16.371, -168.797, 21.3993, 0.55 ) }
    dend_27 { pt3dadd( 16.7377, -171.242, 21.8815, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 16.9899, -172.969, 22.1339, 0.55 ) }
    dend_27 { pt3dadd( 17.2703, -174.948, 22.2619, 0.55 ) }
    dend_27 { pt3dadd( 17.4409, -176.483, 22.2298, 0.55 ) }
    dend_27 { pt3dadd( 17.923, -180.075, 21.9915, 0.55 ) }
    dend_27 { pt3dadd( 18.1942, -182.804, 21.8216, 0.55 ) }
    dend_27 { pt3dadd( 18.428, -184.593, 21.7549, 0.55 ) }
    dend_27 { pt3dadd( 19.0544, -189.223, 21.8201, 0.55 ) }
    dend_27 { pt3dadd( 19.4771, -192.331, 22.004, 0.55 ) }
    dend_27 { pt3dadd( 20.0761, -196.33, 22.4622, 0.55 ) }
    dend_27 { pt3dadd( 20.8688, -200.853, 23.3208, 0.55 ) }
    dend_27 { pt3dadd( 21.5634, -203.864, 24.0591, 0.55 ) }
    dend_27 { pt3dadd( 22.0245, -205.64, 24.5362, 0.55 ) }
    dend_27 { pt3dadd( 22.4183, -207.279, 24.9762, 0.55 ) }
    dend_27 { pt3dadd( 22.9368, -209.357, 25.4296, 0.55 ) }
    dend_27 { pt3dadd( 24.0733, -214.38, 26.192, 0.55 ) }
    dend_27 { pt3dadd( 24.5674, -216.325, 26.4043, 0.55 ) }
    dend_27 { pt3dadd( 25.0636, -218.492, 26.6343, 0.55 ) }
    dend_27 { pt3dadd( 25.7794, -221.748, 26.9672, 0.55 ) }
    dend_27 { pt3dadd( 26.2171, -224.253, 27.2659, 0.55 ) }
    dend_27 { pt3dadd( 26.4906, -226.637, 27.5413, 0.55 ) }
    dend_27 { pt3dadd( 26.6507, -228.911, 27.8206, 0.55 ) }
    dend_27 { pt3dadd( 26.7743, -231.13, 28.1315, 0.55 ) }
    dend_27 { pt3dadd( 26.8693, -232.71, 28.3355, 0.55 ) }
    dend_27 { pt3dadd( 27.0268, -235.298, 28.5776, 0.55 ) }
    dend_27 { pt3dadd( 27.136, -238.414, 28.6395, 0.55 ) }
    dend_27 { pt3dadd( 27.2104, -239.931, 28.55, 0.55 ) }
    dend_27 { pt3dadd( 27.2747, -241.267, 28.3688, 0.55 ) }
    dend_27 { pt3dadd( 27.4875, -243.789, 27.8599, 0.55 ) }
    dend_27 { pt3dadd( 27.5996, -245.39, 27.4957, 0.55 ) }
    dend_27 { pt3dadd( 27.7711, -247.361, 27.1172, 0.55 ) }
    dend_27 { pt3dadd( 27.8526, -248.743, 26.9429, 0.55 ) }
    dend_27 { pt3dadd( 28.0219, -252.335, 26.6399, 0.55 ) }
    dend_27 { pt3dadd( 28.1124, -255.019, 26.6153, 0.55 ) }
    dend_27 { pt3dadd( 28.2354, -259.163, 26.9273, 0.55 ) }
    dend_27 { pt3dadd( 28.4108, -261.827, 27.3713, 0.55 ) }
    dend_27 { pt3dadd( 28.5872, -264.621, 27.9321, 0.28 ) }
    dend_27 { pt3dadd( 28.6373, -265.743, 28.2083, 0.28 ) }
    dend_27 { pt3dadd( 28.7836, -268.457, 29.129, 0.28 ) }
    dend_27 { pt3dadd( 28.9258, -270.958, 30.1838, 0.28 ) }
    dend_27 { pt3dadd( 29.473, -274.244, 31.8744, 0.28 ) }
    dend_27 { pt3dadd( 31.3935, -281.686, 33.6036, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 14.1012, -151.803, 16.8061, 0.55 ) }
    dend_26 { pt3dadd( 15.1739, -152.158, 17.0715, 0.55 ) }
    dend_26 { pt3dadd( 17.371, -153.061, 17.7815, 0.55 ) }
    dend_26 { pt3dadd( 19.2634, -153.95, 18.4777, 0.28 ) }
    dend_26 { pt3dadd( 21.2901, -154.959, 19.2868, 0.55 ) }
    dend_26 { pt3dadd( 22.5028, -155.593, 19.9384, 0.28 ) }
    dend_26 { pt3dadd( 24.5914, -156.727, 21.263, 0.55 ) }
    dend_26 { pt3dadd( 25.4414, -157.319, 22.0724, 0.28 ) }
    dend_26 { pt3dadd( 25.7426, -157.53, 22.4239, 0.28 ) }
    dend_26 { pt3dadd( 26.263, -157.824, 23.0347, 0.55 ) }
    dend_26 { pt3dadd( 28.3261, -158.778, 25.2259, 0.28 ) }
    dend_26 { pt3dadd( 29.2125, -159.148, 26.1169, 0.55 ) }
    dend_26 { pt3dadd( 31.96, -160.237, 28.466, 0.28 ) }
    dend_26 { pt3dadd( 33.4754, -160.773, 29.6216, 0.28 ) }
    dend_26 { pt3dadd( 35.3861, -161.472, 30.9438, 0.55 ) }
    dend_26 { pt3dadd( 38.2744, -162.579, 32.6527, 0.28 ) }
    dend_26 { pt3dadd( 38.6722, -162.728, 32.8404, 0.55 ) }
    dend_26 { pt3dadd( 40.6497, -163.463, 33.6296, 0.28 ) }
    dend_26 { pt3dadd( 40.8315, -163.532, 33.6815, 0.55 ) }
    dend_26 { pt3dadd( 42.4297, -164.359, 34.2011, 0.28 ) }
    dend_26 { pt3dadd( 43.1849, -164.809, 34.4977, 0.55 ) }
    dend_26 { pt3dadd( 49.3921, -168.123, 36.9715, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.65074, -101.834, 56.5462, 0.55 ) }
    dend_22 { pt3dadd( -6.49495, -105.839, 66.1599, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.65074, -101.834, 56.5462, 0.55 ) }
    dend_21 { pt3dadd( -11.3939, -112.584, 64.3132, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 3
    dend_0 nseg = 9
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 11
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 3
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 7
    dend_53 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 7
    dend_15 nseg = 9
    dend_27 nseg = 7
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L5_BP_77ea5abf2a_0_0


