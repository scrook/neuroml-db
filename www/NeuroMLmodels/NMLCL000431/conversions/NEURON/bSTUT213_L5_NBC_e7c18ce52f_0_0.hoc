// Cell: bSTUT213_L5_NBC_e7c18ce52f_0_0
/*
{
  "id" : "bSTUT213_L5_NBC_e7c18ce52f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.80187, -2.65497, 0.815749, 4.80603", "-7.85711, -2.42647, 0.741853, 8.49266", "-6.91236, -2.19797, 0.667957, 10.2778", "-5.96761, -1.96947, 0.594062, 12.0489", "-5.02286, -1.74096, 0.520166, 13.6363", "-4.07811, -1.51246, 0.44627, 14.7753", "-3.13335, -1.28396, 0.372375, 15.6483", "-2.1886, -1.05546, 0.298479, 16.2981", "-1.24385, -0.826954, 0.224583, 16.8319", "-0.299097, -0.598451, 0.150687, 17.082", "0.645655, -0.369949, 0.0767917, 17.31", "1.59041, -0.141446, 0.00289604, 17.538", "2.53516, 0.0870562, -0.0709997, 17.43", "3.47991, 0.315559, -0.144895, 16.9438", "4.42466, 0.544061, -0.218791, 16.4576", "5.36941, 0.772563, -0.292687, 15.5199", "6.31417, 1.00107, -0.366582, 14.2667", "7.25892, 1.22957, -0.440478, 13.0135", "8.20367, 1.45807, -0.514374, 10.6764", "9.14842, 1.68657, -0.588269, 7.11693", "10.0932, 1.91508, -0.662165, 4.00176" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-9.8861, 1.27317, -7.14961, 1.71", "-10.05, 1.21989, -6.82855, 1.71", "-13.5908, 0.0691201, 0.105459, 1.71" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-3.2361, 7.48317, -0.579609, 1.03", "-3.59296, 7.8474, -0.460575, 1.03", "-3.85962, 8.38136, 0.261692, 0.86", "-4.3962, 9.45582, 1.71507, 0.86", "-4.70752, 10.0792, 2.55833, 0.86", "-5.75769, 12.1821, 5.40284, 0.86", "-5.85412, 12.3752, 5.66401, 0.86", "-8.00391, 17.7564, 13.3452, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-1.0861, 8.55317, -5.19961, 1.71", "-0.67679, 11.246, -5.04334, 1.71", "-0.551305, 12.0716, -4.99543, 0.86", "-0.185972, 14.4752, -4.85595, 0.68", "0.159941, 16.751, -4.72388, 0.68", "0.337438, 17.9188, -4.65611, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "8.1539, 4.83317, -6.22961, 1.2", "9.68061, 5.2876, -6.98903, 1.2", "12.5845, 6.15193, -8.43347, 1.2", "16.6972, 7.37608, -10.4792, 0.68", "21.2686, 8.73675, -12.7531, 0.68", "24.5646, 9.71783, -14.3927, 0.68", "26.4962, 10.2927, -15.3534, 0.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "10.4639, -0.806829, -1.19961, 1.54", "12.6222, 0.984285, 1.23437, 1.54", "14.1775, 2.27506, 2.98842, 1.54", "18.3397, 5.72913, 7.68222, 1.03", "19.1364, 6.39034, 8.58074, 1.03", "19.4448, 6.64626, 8.92852, 1.03", "21.3516, 8.22869, 11.079, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "2.0039, -4.83683, -5.19961, 1.2", "1.62606, -4.95603, -5.41875, 1.2", "-0.388244, -5.64457, -6.43709, 1.2", "-2.88926, -6.00867, -11.1452, 1.03", "-3.87271, -6.14354, -13.2386, 0.68", "-5.66686, -6.31497, -17.0294, 0.68", "-6.84439, -6.38727, -19.8781, 0.68", "-7.77222, -6.37556, -22.1848, 2.05", "-16.1377, -5.66913, -42.8691, 0.17", "-16.559, -5.61927, -43.888, 0.17", "-17.3769, -5.46307, -45.7592, 0.17", "-21.7041, -4.53716, -54.6663, 0.17", "-23.9038, -4.18516, -58.7881, 0.17", "-25.5587, -3.92836, -61.2957, 2.05", "-27.338, -3.83888, -62.769, 0.17", "-28.4555, -3.80633, -63.6545, 0.17", "-30.9051, -3.88652, -65.8181, 0.17", "-37.4956, -4.67124, -71.1526, 2.22", "-38.0847, -4.78203, -72.1846, 0.17", "-38.8527, -4.97941, -73.733, 0.17", "-39.6296, -5.19031, -75.4149, 0.17", "-42.8661, -6.10305, -82.8626, 0.17", "-44.723, -6.61952, -87.4309, 0.17", "-54.2939, -9.70618, -111.922, 1.71", "-55.6553, -10.1501, -115.623, 0.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.7139, -0.396829, -15.7696, 1.37", "1.92402, -2.89703, -15.7552, 1.37", "2.04911, -4.22078, -15.7162, 1.37", "2.21803, -5.637, -15.6635, 1.03", "2.51118, -7.65695, -15.5825, 1.03", "3.08255, -11.1996, -15.4343, 1.03", "3.48408, -13.6891, -15.3302, 1.03", "3.86002, -16.3194, -15.1423, 1.03", "4.04806, -17.8111, -15.0303, 2.22", "4.17404, -18.8985, -14.9413, 1.54", "4.20564, -19.0964, -14.9233, 1.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999945595718026
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "10.0932, 1.91508, -0.662165, 1.00001", "24.6728, 5.44137, -0.662165, 1.00001", "39.2524, 8.96767, -0.662165, 1.00001" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-13.5908, 0.0691201, 0.105459, 1.37", "-14.5418, -0.533688, 0.201602, 1.37", "-17.6477, -2.50228, 0.515575, 1.37", "-20.6095, -4.37951, 0.814977, 1.37" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-13.5908, 0.0691201, 0.105459, 0.68", "-20.0582, 3.46834, -7.12398, 0.68", "-22.149, 4.69746, -9.246, 0.51", "-23.5314, 5.54441, -10.6063, 0.51", "-24.8619, 6.53003, -11.9971, 0.51", "-25.0938, 6.71963, -12.2372, 0.51", "-25.2566, 6.85959, -12.3906, 0.51", "-29.5499, 10.9182, -15.6855, 0.51", "-29.6117, 10.9789, -15.7344, 0.51", "-31.8788, 13.2005, -17.3065, 0.51", "-34.2132, 15.5059, -18.6318, 1.88", "-36.2525, 17.4571, -19.6426, 0.17", "-39.3277, 20.327, -21.0922, 0.68", "-41.2773, 21.914, -21.8456, 0.68", "-43.5606, 23.5641, -22.6949, 0.17", "-45.683, 24.8534, -23.4003, 1.37", "-48.0541, 26.3378, -24.623, 0.17", "-50.5462, 28.0364, -26.3433, 0.68", "-52.9314, 29.723, -28.0962, 0.68", "-53.6129, 30.2399, -28.6578, 0.51", "-54.7855, 31.1399, -29.6433, 1.03", "-60.3438, 35.1316, -33.7916, 0.51", "-62.0435, 36.3305, -34.8627, 0.51", "-65.0957, 38.3451, -36.4589, 0.51", "-65.2434, 38.4478, -36.5294, 0.51", "-66.9843, 39.5207, -37.1457, 2.22", "-68.7399, 40.3682, -37.5143, 0.34", "-71.4255, 41.1824, -37.5251, 0.34", "-74.2122, 41.7562, -37.4923, 0.34", "-76.0886, 42.0612, -37.4185, 0.34", "-78.9022, 42.4723, -37.2718, 2.05", "-81.0395, 42.725, -37.1094, 0.17", "-85.4943, 43.1662, -36.5708, 0.17", "-87.7562, 43.3114, -36.1447, 0.17", "-89.8703, 43.4055, -35.7137, 2.22" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-8.00391, 17.7564, 13.3452, 0.68", "-9.57919, 21.7946, 16.1744, 0.68", "-10.4273, 23.4311, 17.1328, 0.51", "-11.7178, 25.8785, 17.9877, 0.51", "-12.7152, 27.9163, 18.6334, 0.51", "-12.9855, 28.4502, 18.7865, 1.37", "-13.5399, 29.4687, 19.061, 0.68", "-14.5234, 31.16, 19.2792, 0.34", "-17.0261, 34.7858, 19.6827, 0.34", "-18.4578, 36.5273, 19.8967, 0.34", "-19.8585, 38.186, 20.0453, 0.34", "-20.6815, 39.176, 20.1356, 1.37", "-21.4553, 40.1297, 20.223, 0.17", "-22.0599, 40.8119, 20.2856, 0.17", "-24.4301, 42.6, 20.3031, 0.17", "-25.669, 43.4073, 20.1526, 0.17", "-29.4233, 51.9587, 23.5093, 0.17", "-31.7773, 60.4158, 28.1379, 0.17", "-34.2919, 67.8661, 34.1925, 0.17", "-38.2824, 75.6298, 38.9137, 0.17", "-42.9497, 83.6085, 42.5255, 0.17", "-49.0376, 90.1624, 46.8233, 0.17", "-54.2336, 96.3519, 52.5835, 0.17", "-59.3826, 103.661, 56.8918, 0.17", "-63.6709, 111.807, 60.5978, 0.17", "-66.9882, 120.901, 62.7864, 0.17", "-69.6327, 130.419, 63.7317, 0.17", "-72.3578, 139.96, 63.9066, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-8.00391, 17.7564, 13.3452, 0.51", "-7.36653, 18.8591, 13.5565, 0.51", "-7.04419, 19.3627, 13.6599, 0.51", "-6.01622, 20.8007, 13.9673, 0.51", "-5.31428, 21.708, 14.2786, 0.51", "-5.1811, 21.8888, 14.3365, 0.51", "-3.27695, 24.6079, 15.162, 0.51", "-2.80463, 25.4056, 15.3401, 0.51", "-2.32703, 26.3476, 15.5917, 0.51", "-1.20822, 28.525, 16.2959, 0.51", "-0.27357, 30.2262, 16.6606, 1.71", "-0.0601548, 30.5975, 16.7031, 0.17", "1.20607, 32.7868, 16.7221, 1.03", "3.02917, 35.9053, 16.55, 0.68", "4.24374, 37.811, 16.3396, 0.51", "6.6045, 40.9496, 15.806, 0.51", "7.35453, 41.7858, 15.692, 1.54", "8.03949, 42.4525, 15.5857, 0.17", "8.2185, 42.5968, 15.5555, 0.68", "9.8375, 43.8223, 15.0693, 0.68", "10.5352, 44.3657, 14.9627, 1.37", "10.8153, 44.6061, 15.0333, 0.17", "10.9826, 44.7673, 15.0845, 0.17", "11.079, 44.8708, 15.1174, 0.17", "11.7995, 45.7093, 15.3481, 0.17", "11.8621, 45.7924, 15.3704, 0.17", "12.5234, 46.7502, 15.6091, 0.17", "13.1036, 47.5924, 15.8085, 1.37", "13.8277, 48.6559, 16.0394, 0.17", "15.1575, 50.5636, 16.3983, 0.17" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "0.337438, 17.9188, -4.65611, 0.68", "-0.91977, 19.5223, -4.18049, 0.68", "-1.68431, 20.4974, -3.89125, 0.68", "-2.11129, 21.042, -3.72972, 1.03" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.337438, 17.9188, -4.65611, 0.68", "2.34521, 20.726, -5.13943, 0.68", "4.60203, 23.2681, -5.80489, 0.68", "5.16669, 23.9561, -5.8291, 0.68", "7.03049, 25.8921, -4.9969, 0.68", "9.44691, 28.4021, -3.91794, 0.17", "13.9232, 33.0518, -1.91921, 0.17", "15.0883, 34.2107, -1.21279, 0.17", "19.8451, 38.6069, 2.20019, 0.17", "26.4985, 44.2003, 7.62738, 0.17" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "26.4962, 10.2927, -15.3534, 0.17", "32.6554, 13.1789, -18.7322, 0.17", "34.5319, 14.1586, -19.5727, 0.17", "34.7902, 14.2972, -19.6728, 0.17", "38.6234, 16.379, -20.9915, 0.17", "43.5879, 19.082, -22.601, 1.88", "45.7099, 20.233, -23.2627, 0.17", "48.7804, 21.9103, -24.0728, 0.17", "50.3389, 22.7412, -24.5905, 1.37", "51.9068, 23.553, -25.1913, 0.17", "52.3246, 23.7822, -25.3685, 0.17", "52.4939, 23.8799, -25.4674, 0.17", "57.9154, 27.2286, -29.4244, 0.17", "60.2685, 28.8503, -31.2764, 1.71", "60.6714, 29.1576, -31.6637, 0.17", "63.6814, 31.6843, -34.8429, 0.17", "67.7562, 35.261, -39.173, 1.71", "67.884, 35.3781, -39.307, 0.17", "70.6876, 38.0801, -42.1688, 0.17", "74.3409, 41.4546, -46.3375, 1.71", "75.6734, 42.5453, -47.7879, 0.17", "77.1195, 43.589, -49.2158, 0.17", "78.5721, 44.5657, -50.3596, 1.71", "79.7199, 45.2907, -51.1963, 0.17", "85.9469, 48.6892, -55.2139, 0.17", "88.401, 50.0028, -56.5528, 0.17", "90.5955, 51.1725, -57.719, 1.71", "92.1559, 52.0279, -58.5324, 0.17", "98.0643, 55.2658, -61.4257, 0.17", "100.642, 56.6621, -62.2583, 1.71", "101.846, 57.3442, -61.8584, 0.17", "103.727, 58.5385, -60.0819, 0.17", "103.791, 58.586, -59.8779, 0.17", "103.972, 58.7287, -59.0999, 1.37", "107.518, 61.3824, -44.4103, 0.17", "108.765, 62.3209, -39.3301, 0.17", "109.134, 62.5874, -37.8659, 1.2", "115.339, 66.9774, -15.898, 0.17", "115.476, 67.0728, -15.4789, 0.17", "117.65, 68.6035, -9.09741, 0.17", "117.833, 68.7251, -8.64872, 1.88", "118.067, 68.8508, -8.01934, 0.17", "120.317, 70.0468, -2.54162, 0.17", "120.902, 70.3928, -2.53746, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.4962, 10.2927, -15.3534, 0.34", "26.0979, 16.1705, -14.8378, 0.34", "26.1132, 18.7815, -14.6656, 0.34", "26.2554, 23.2917, -14.3985, 0.34", "26.7191, 30.4022, -14.1989, 0.68", "27.1133, 36.0236, -14.3685, 0.68", "27.8437, 46.2982, -15.0023, 0.68", "28.5503, 54.0211, -15.9307, 0.68", "28.5898, 54.2869, -15.9759, 0.68", "30.0815, 60.5806, -17.1373, 0.68", "31.828, 66.1904, -18.1925, 0.34", "34.1838, 72.7528, -19.4369, 0.34", "35.7701, 76.7874, -20.0867, 0.34", "40.2503, 87.4997, -21.56, 0.34", "45.4441, 99.372, -22.7284, 0.34", "46.2926, 101.208, -22.7966, 2.05", "47.0461, 102.742, -22.7711, 0.17", "50.1443, 108.718, -22.6138, 0.17", "50.5155, 109.476, -22.5625, 0.68", "50.7802, 110.136, -22.4476, 0.17", "52.0288, 114.473, -21.7098, 0.17", "52.1493, 115.087, -21.6104, 1.54", "52.2942, 116.085, -21.4759, 0.17", "52.6562, 119.936, -21.0464, 0.17", "52.8373, 122.152, -20.8278, 1.54", "52.8887, 123.003, -20.7506, 0.17", "53.1867, 129.784, -20.1942, 0.17", "53.2688, 131.72, -20.0316, 1.2", "53.3155, 132.982, -19.9219, 0.17", "53.4831, 137.275, -19.5063, 0.17", "53.5485, 139.301, -19.2752, 1.88", "53.5701, 140.015, -19.1823, 0.17", "53.7282, 144.21, -18.5528, 0.17", "53.7855, 146.182, -18.2128, 0.17", "53.9472, 151.431, -17.3079, 0.17", "54.0531, 155.577, -16.5917, 0.17", "54.0912, 156.202, -16.4852, 1.37", "54.2779, 157.578, -16.2572, 0.17", "55.3402, 162.868, -15.4033, 0.17", "56.0017, 165.446, -14.9964, 1.2", "56.6044, 167.134, -14.7408, 0.17", "58.2437, 170.556, -14.2498, 0.17", "61.4518, 176.325, -13.4506, 0.17", "61.7999, 176.85, -13.3815, 1.54", "62.1814, 177.311, -13.3257, 0.17", "64.7508, 179.938, -13.0333, 0.17", "67.5547, 182.359, -12.7919, 0.17", "67.7149, 182.484, -12.7803, 0.17", "68.1784, 182.827, -12.7504, 1.88", "68.8886, 183.357, -12.7038, 0.17", "71.8532, 185.54, -12.5143, 0.17", "74.4123, 187.48, -12.3408, 0.17", "76.3603, 188.949, -12.2103, 1.54", "76.5125, 189.067, -12.1996, 1.54" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "21.3516, 8.22869, 11.079, 0.68", "21.8096, 9.8297, 10.9969, 0.68", "22.1734, 11.1018, 10.9317, 0.68", "22.6333, 12.7094, 10.8494, 0.68", "23.0169, 14.0505, 10.7807, 0.68", "23.4947, 15.7209, 10.6951, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "21.3516, 8.22869, 11.079, 0.68", "24.244, 8.44122, 12.3645, 0.68", "26.8913, 8.63576, 13.5411, 0.68", "31.7128, 8.99004, 15.6839, 0.68", "35.7081, 9.28362, 17.4596, 0.68", "45.9618, 11.0015, 21.8939, 0.68" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "4.20564, -19.0964, -14.9233, 0.17", "11.3317, -18.2335, -1.75223, 0.17", "11.4826, -18.2218, -1.53398, 0.17", "12.9768, -18.1576, -0.0620682, 0.17", "14.1951, -18.2371, 0.475421, 0.17", "15.7841, -18.4499, 0.809649, 1.37", "18.0944, -18.8668, 1.02717, 0.17", "20.5914, -19.5368, 0.0810087, 0.68", "21.9499, -19.8881, -0.42768, 0.17", "24.9727, -20.6786, -1.55037, 0.86", "25.4531, -20.7562, -1.72309, 0.17", "26.0791, -20.7944, -1.93329, 0.17", "27.6974, -20.7331, -2.44703, 0.17", "29.9924, -20.5347, -3.12977, 1.2", "30.8669, -20.429, -3.3923, 1.2", "34.8575, -19.7398, -4.60637, 0.17", "39.3774, -19.0194, -5.97673, 0.68", "40.9834, -18.7924, -6.4614, 0.17", "43.3363, -18.5552, -7.16402, 0.17", "44.9168, -18.4976, -7.62803, 1.37", "46.029, -18.5314, -7.94877, 0.17", "48.8962, -18.8861, -8.75475, 0.17", "49.9195, -19.0475, -9.03969, 1.88", "51.3251, -19.2724, -9.43082, 0.17", "54.4185, -19.696, -9.71783, 0.17", "57.4568, -20.0574, -9.63519, 0.17", "59.4401, -20.2303, -9.43433, 2.05", "60.4127, -20.3004, -9.27861, 0.17", "64.5616, -20.5911, -8.14204, 0.17", "72.9095, -20.9458, -5.3733, 2.05", "73.2905, -20.9556, -5.22372, 0.17", "76.1987, -20.9714, -3.8534, 0.17", "78.0467, -20.9754, -2.94045, 1.71", "83.2092, -21.0233, -0.338917, 0.17", "86.8586, -21.0254, 1.48929, 0.17", "87.0997, -21.0182, 1.57638, 0.86", "90.7304, -20.8485, 2.79906, 0.17", "93.1101, -20.6778, 3.54708, 0.17", "93.2831, -20.6572, 3.58032, 0.17", "94.2051, -20.5499, 3.70015, 1.88", "95.6526, -20.5179, 4.01042, 0.17", "98.0746, -20.6174, 4.46908, 0.17", "98.6501, -20.6583, 4.55324, 1.37", "100.267, -20.7761, 5.35241, 0.34", "104.457, -21.1767, 8.00366, 0.17", "106.403, -21.3895, 9.37463, 0.17", "108.28, -21.6207, 10.8641, 0.17", "109.145, -21.7316, 11.6347, 2.05", "117.107, -22.7678, 19.1804, 0.17", "117.619, -22.8334, 19.7072, 1.71", "127.519, -23.5279, 23.8445, 1.71" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "4.20564, -19.0964, -14.9233, 1.2", "3.79807, -21.0582, -14.2033, 1.2", "3.08919, -24.599, -12.9862, 0.68", "2.55407, -27.3558, -12.076, 2.22", "2.34915, -28.8365, -11.6314, 0.86", "2.25361, -29.5268, -11.4241, 0.68", "1.95354, -31.6951, -10.7731, 0.68", "1.82761, -32.5331, -10.5077, 1.54", "1.81219, -32.6742, -10.4679, 1.54", "1.7169, -34.9102, -10.3168, 1.54" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "39.2524, 8.96767, -0.662165, 0.17", "53.8321, 12.494, -0.662165, 0.17", "68.4117, 16.0203, -0.662165, 0.17" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-20.6095, -4.37951, 0.814977, 0.86", "-21.6462, -5.88934, -0.756307, 0.86", "-22.9213, -7.32979, -2.59107, 0.68", "-24.6117, -8.91732, -4.87191, 0.68", "-30.0397, -13.3835, -11.8754, 0.68", "-32.6621, -15.2257, -15.0473, 0.68", "-35.2417, -16.6875, -18.0112, 0.68", "-38.2998, -17.7655, -21.2062, 1.2", "-39.4739, -17.9149, -22.2679, 1.2", "-40.1369, -17.8788, -22.7047, 0.68", "-42.3219, -17.491, -23.4988, 0.68", "-45.6441, -16.6773, -24.5936, 0.51", "-47.3498, -16.2864, -24.9096, 0.51", "-50.4127, -15.8685, -25.0773, 1.88", "-53.5553, -15.7246, -25.2052, 1.88", "-56.0331, -15.9316, -25.2489, 1.88" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-20.6095, -4.37951, 0.814977, 0.86", "-22.6127, -3.50451, -0.871929, 0.86", "-25.604, -2.45104, -3.35768, 0.86", "-27.7875, -1.74678, -5.06006, 0.86", "-33.9245, 0.296854, -9.29765, 0.86", "-35.9745, 0.99572, -10.5927, 0.86", "-41.8942, 3.04518, -14.2348, 0.86", "-43.2279, 3.50738, -15.0461, 0.86", "-45.3717, 4.23908, -16.2902, 0.86", "-49.0702, 5.46941, -18.3074, 0.86", "-52.002, 6.37914, -19.856, 0.51", "-55.2668, 7.40217, -21.4915, 0.34", "-58.8408, 8.58879, -23.0061, 0.17", "-61.3848, 9.3591, -24.0555, 0.17", "-63.6421, 9.89049, -24.9622, 2.05", "-65.372, 10.1388, -25.5419, 0.17", "-67.0688, 10.2941, -25.8376, 0.17", "-68.1348, 10.3421, -25.8587, 0.68", "-70.7243, 10.3457, -25.6826, 0.34", "-71.5519, 10.322, -25.6326, 0.17", "-73.7108, 10.2396, -25.4359, 1.88", "-74.7356, 10.1543, -25.258, 0.17", "-76.1795, 9.97853, -24.915, 0.17", "-77.7666, 9.71714, -24.4695, 1.2", "-78.7011, 9.54684, -24.1717, 0.17", "-81.7289, 9.0417, -23.1603, 0.17", "-84.1503, 8.64766, -22.0676, 1.71", "-85.2054, 8.47863, -21.5117, 0.17", "-86.6031, 8.29756, -20.6915, 0.17", "-87.8708, 8.20901, -19.919, 2.39", "-89.5257, 8.12876, -19.0024, 0.68", "-93.0276, 7.97361, -17.3703, 0.17", "-94.106, 7.91858, -16.959, 0.17", "-95.3146, 7.83732, -16.4943, 1.2", "-97.4291, 7.64725, -15.7045, 0.17", "-100.442, 7.32454, -14.7061, 0.17", "-102.083, 7.14823, -14.3282, 2.22", "-102.632, 7.09859, -14.3001, 2.22" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-89.8703, 43.4055, -35.7137, 0.17", "-91.0781, 45.3132, -34.9103, 0.17", "-91.8199, 46.3863, -34.4586, 0.17", "-94.0893, 49.5537, -33.1248, 0.17", "-94.422, 49.9805, -32.9443, 0.17", "-98.2347, 54.8272, -30.8834, 0.17", "-100.331, 57.4652, -29.7592, 1.2", "-100.998, 58.3234, -29.3863, 0.17", "-101.149, 58.5209, -29.3083, 0.17", "-107.559, 66.9217, -26.2754, 0.17", "-109.626, 69.7248, -25.3328, 1.54", "-110.584, 71.071, -24.9185, 0.17", "-113.087, 74.785, -23.8397, 0.17", "-114.762, 77.4071, -23.1909, 1.2", "-115.47, 78.624, -22.9438, 0.17", "-115.574, 78.8449, -22.9181, 0.17", "-116.355, 80.6123, -22.7435, 0.17", "-117.1, 82.3931, -22.5496, 1.37", "-118.35, 85.0021, -22.1934, 0.17", "-120.163, 88.4408, -21.8157, 0.17", "-120.293, 88.6657, -21.8046, 0.17", "-121.108, 89.9594, -21.802, 1.03", "-121.549, 90.6295, -21.945, 0.17", "-123.282, 93.1062, -22.6992, 0.17", "-125.796, 96.5274, -23.881, 1.71", "-127.049, 98.1954, -24.4501, 0.17", "-127.2, 98.3971, -24.5129, 0.17", "-132.956, 106.244, -26.6912, 0.17", "-134.392, 108.274, -27.1305, 1.37", "-134.95, 109.117, -27.2859, 0.17", "-137.239, 112.612, -27.6939, 0.17", "-137.928, 113.687, -27.7723, 1.54", "-139.095, 115.418, -27.7226, 0.17", "-140.526, 117.329, -27.3342, 0.17", "-142.555, 119.875, -26.7585, 1.88", "-143.699, 121.228, -26.4066, 0.17", "-145.58, 123.278, -25.7964, 0.17", "-147.598, 125.293, -25.0975, 1.54", "-148.512, 126.126, -24.7638, 0.17", "-151.105, 128.341, -23.7555, 0.17", "-153.068, 129.937, -22.9239, 1.71", "-154.692, 131.226, -22.2827, 0.17", "-156.87, 132.933, -21.4929, 0.17", "-158.145, 133.854, -21.1154, 2.22", "-159.641, 134.855, -20.7146, 0.17", "-162.02, 136.312, -20.1493, 0.17", "-162.63, 136.675, -20.0093, 1.88", "-164.623, 137.844, -19.56, 0.17", "-169.886, 140.867, -18.4041, 0.17", "-171.59, 141.822, -18.0409, 1.03", "-173.782, 143.002, -17.4915, 0.17", "-178.25, 145.302, -16.2624, 0.17", "-179.827, 146.107, -15.7852, 2.05", "-182.429, 147.3, -14.6807, 0.17", "-186.078, 148.676, -12.746, 0.17", "-189.248, 149.46, -10.8922, 1.03", "-190.415, 149.559, -10.1723, 0.17", "-192.137, 149.501, -9.05218, 0.17", "-198.542, 148.833, -4.84168, 0.17", "-201.648, 148.326, -2.86695, 0.17", "-204.475, 147.818, -1.19979, 0.17", "-211.275, 146.803, 2.0572, 0.17", "-211.767, 146.768, 2.22273, 1.71", "-212.79, 146.794, 2.40292, 0.17", "-215.463, 147.428, 2.22436, 0.17", "-217.629, 148.314, 1.85029, 0.17", "-221.132, 149.947, 1.29588, 0.17", "-227.198, 152.805, 0.242198, 1.37", "-228.619, 153.411, 0.0661754, 0.17", "-232.85, 154.938, -0.227615, 0.17", "-238.066, 156.372, -0.103777, 0.17", "-243.637, 157.59, 0.359879, 1.03", "-245.203, 157.844, 0.64719, 0.17", "-246.434, 157.909, 1.02043, 0.17", "-251.05, 157.896, 2.45635, 0.17", "-253.909, 157.477, 3.64337, 1.03" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-89.8703, 43.4055, -35.7137, 0.34", "-91.7905, 43.1174, -36.8497, 0.34", "-93.9529, 42.8622, -37.9735, 0.34", "-94.5849, 42.7628, -38.2957, 0.34", "-94.7944, 42.7232, -38.3969, 0.34", "-97.4093, 42.2465, -39.9071, 0.34", "-99.4061, 41.8351, -41.1196, 0.34", "-101.28, 41.3897, -42.1857, 1.03", "-102.199, 41.1245, -42.6953, 0.68", "-103.428, 40.7604, -43.5312, 0.86", "-105.567, 40.0679, -45.2508, 0.17", "-107.665, 39.2758, -47.1764, 0.17", "-108.461, 38.9638, -47.927, 1.37", "-109.587, 38.5381, -48.8858, 0.17", "-113.329, 37.2575, -51.8452, 0.17", "-113.468, 37.215, -51.9385, 0.17", "-114.746, 36.8787, -52.5773, 1.03", "-115.539, 36.7624, -52.8851, 0.34", "-117.55, 36.7228, -53.4839, 0.34", "-117.878, 36.7454, -53.5491, 0.34", "-120.166, 36.8911, -53.7571, 0.17", "-120.913, 36.9366, -53.8461, 2.05", "-123.155, 37.1195, -54.1487, 0.17", "-125.044, 37.2381, -54.3969, 0.17", "-125.386, 37.2513, -54.4403, 0.17", "-129.641, 37.3447, -54.9228, 0.17", "-131.215, 37.3922, -55.2058, 1.03", "-132.777, 37.4222, -55.5593, 0.17", "-135.416, 37.4286, -56.2372, 0.17", "-137.278, 37.3834, -56.7461, 0.17", "-139.506, 37.3936, -57.5177, 1.54", "-142.945, 37.5149, -59.014, 0.17", "-144.762, 37.5559, -59.9346, 0.17", "-145.938, 37.5663, -60.6216, 0.86", "-146.763, 37.5643, -61.1668, 0.17", "-149.203, 37.5685, -63.3036, 0.17", "-149.736, 37.5594, -63.8346, 1.37", "-149.989, 37.5651, -64.1133, 0.17", "-150.093, 37.5727, -64.2365, 0.17", "-150.73, 37.6455, -65.0365, 0.17", "-153.946, 38.019, -69.0815, 0.17", "-155.086, 38.1447, -70.5523, 1.37", "-157.941, 38.4968, -74.2787, 0.17", "-158.967, 38.6239, -75.6226, 0.17", "-160.971, 38.8764, -78.2091, 0.17", "-161.94, 39.007, -79.4367, 1.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "15.1575, 50.5636, 16.3983, 0.17", "14.0551, 52.6391, 19.4838, 0.17", "13.6961, 53.7285, 20.7892, 0.68", "12.7423, 57.8711, 25.1408, 0.68", "12.101, 60.6567, 28.0669, 0.68", "11.8174, 61.8883, 29.3606, 0.51", "11.5534, 63.0349, 30.5651, 0.51", "11.4158, 64.6139, 31.6781, 0.51", "11.4345, 64.8721, 31.8161, 0.51", "10.5202, 71.7408, 37.0681, 0.51", "8.49013, 77.4888, 43.2679, 0.51", "5.57438, 83.0981, 49.2373, 0.51", "2.08419, 88.0534, 55.4712, 0.51", "-1.79135, 93.1718, 61.3347, 0.51", "-5.25028, 99.5272, 66.1559, 0.51", "-8.34015, 106.438, 70.4332, 0.51", "-12.1067, 112.495, 75.4053, 0.51", "-16.2872, 118.9, 79.5407, 0.51" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "15.1575, 50.5636, 16.3983, 0.17", "17.262, 52.8168, -1.41985, 0.17", "17.2808, 52.8369, -1.57891, 0.17", "17.5419, 53.1164, -3.78967, 2.22", "17.6616, 53.2447, -4.80386, 2.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "23.4947, 15.7209, 10.6951, 0.68", "24.5744, 16.8313, 9.43261, 0.68", "24.7152, 17.0333, 9.24334, 1.88", "26.2156, 20.7658, 6.83275, 0.17", "27.0047, 23.4877, 5.26307, 0.51", "27.607, 25.9054, 3.95919, 0.51", "28.531, 29.615, 1.95851, 0.51", "29.2209, 32.8959, 0.210699, 1.03", "30.0928, 38.1421, -2.29395, 1.03", "30.365, 41.0956, -3.40736, 1.03", "30.3821, 42.548, -3.95452, 0.17" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "23.4947, 15.7209, 10.6951, 0.17", "24.7817, 15.6575, 11.7214, 0.17", "26.7269, 15.5617, 13.2725, 0.17", "28.1593, 15.4911, 14.4147, 0.51", "31.1579, 15.3433, 16.8059, 0.51", "36.3918, 15.0854, 20.9795, 0.51", "36.5452, 15.0778, 21.1018, 0.51" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "1.7169, -34.9102, -10.3168, 1.54", "1.92444, -35.6118, -10.4487, 1.54", "2.23583, -36.6645, -10.6467, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "1.7169, -34.9102, -10.3168, 0.17", "1.75265, -35.9061, -7.92935, 0.17", "1.51168, -36.7812, -6.11637, 0.17", "1.43898, -36.9681, -5.79554, 1.71", "1.09223, -37.641, -4.63813, 0.17", "-1.39803, -41.112, 1.76927, 0.17", "-3.56289, -43.8573, 6.69702, 0.17", "-4.80278, -45.1801, 9.00475, 0.17", "-5.90546, -46.3091, 10.8583, 0.17", "-8.93502, -49.5541, 15.6422, 0.17", "-11.2033, -52.1792, 19.0065, 0.17", "-12.2567, -53.435, 20.3463, 0.17", "-12.9615, -54.3972, 21.344, 0.17", "-13.8142, -55.6774, 22.7555, 0.17", "-15.0789, -57.8111, 24.9731, 0.17", "-16.2246, -61.1724, 26.9742, 0.17", "-21.9317, -65.4181, 33.7851, 0.17", "-29.2467, -67.7626, 39.9478, 0.17", "-36.6714, -70.0082, 46.0155, 0.17", "-43.1443, -72.8209, 52.8839, 0.17", "-50.3727, -75.3233, 59.0867, 0.17" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-56.0331, -15.9316, -25.2489, 0.17", "-56.1704, -15.8517, -25.2955, 0.17", "-57.1317, -15.2088, -25.7037, 0.17", "-57.863, -14.7579, -26.0023, 0.17", "-59.6509, -13.7403, -26.6891, 1.37", "-60.9874, -13.0612, -27.1659, 1.37", "-63.462, -11.9616, -27.9708, 0.17", "-65.0039, -11.3437, -28.4427, 0.17", "-66.4719, -10.8611, -28.9422, 0.17", "-67.2526, -10.7028, -29.2009, 1.03", "-68.1661, -10.6651, -29.6617, 1.03", "-69.6611, -10.8105, -30.5351, 0.17", "-70.5274, -11.04, -31.148, 0.17", "-72.8996, -12.0183, -33.1025, 2.22", "-74.2913, -12.7177, -34.3924, 2.22", "-78.2692, -15.0145, -38.1603, 0.17", "-79.6702, -15.9779, -39.6381, 0.17", "-81.9805, -17.7529, -42.0998, 0.17", "-82.8603, -18.5162, -42.9668, 1.88", "-82.9743, -18.6348, -43.0657, 1.88", "-84.4756, -20.4448, -44.2913, 1.2", "-86.5405, -23.3154, -45.5891, 0.34", "-88.0351, -25.5767, -46.4376, 0.34", "-89.6416, -28.3436, -47.1773, 2.05", "-90.9005, -30.7252, -47.6953, 0.51", "-92.4271, -33.8347, -48.2271, 0.51", "-93.9295, -37.1293, -48.6209, 0.17", "-95.1943, -39.8774, -48.7707, 0.17", "-96.8012, -43.359, -48.9081, 0.17", "-97.7359, -45.1463, -48.9377, 1.54", "-98.4669, -46.2897, -48.9069, 1.54", "-99.6082, -47.7965, -48.7039, 0.17", "-101.082, -49.471, -48.3925, 0.17", "-102.322, -50.7441, -48.0956, 2.05", "-103.629, -51.9245, -47.684, 0.34", "-106.628, -54.537, -46.4714, 0.34", "-108.498, -56.1275, -45.5786, 1.54", "-109.951, -57.3028, -44.7991, 1.54", "-110.363, -57.6144, -44.5673, 0.17", "-112.795, -59.3064, -43.171, 0.17", "-114.017, -60.0746, -42.491, 1.03", "-114.514, -60.3849, -42.2461, 1.03", "-115.684, -61.0627, -41.8252, 0.17", "-118.017, -62.2211, -41.1574, 0.17", "-118.413, -62.4043, -41.0752, 0.68", "-119.73, -62.9871, -40.7939, 0.17", "-122.601, -64.1691, -40.2386, 0.17", "-125.103, -65.2158, -39.5809, 0.17", "-126.61, -65.8926, -39.1291, 1.37", "-128.255, -66.7045, -38.58, 0.51", "-131.034, -68.2648, -37.1703, 0.51", "-133.064, -69.537, -35.7943, 0.51", "-135.235, -70.9816, -34.0436, 0.17", "-136.587, -72.0642, -32.8178, 1.2", "-137.348, -72.6665, -32.1486, 1.2", "-140.855, -75.3847, -29.2051, 0.17", "-141.919, -76.1859, -28.44, 0.17", "-143.145, -77.0611, -27.4042, 1.88", "-143.903, -77.5441, -26.7946, 0.17", "-145.56, -78.5929, -25.3334, 0.17", "-145.978, -78.8613, -24.9895, 0.86", "-147.114, -79.6323, -24.3019, 0.86", "-149.688, -81.6498, -22.6308, 0.17", "-150.338, -82.1476, -22.2407, 0.17", "-151.115, -82.6831, -21.8563, 0.17", "-151.813, -83.1652, -21.5702, 0.86", "-153.771, -84.4852, -20.9578, 0.34", "-155.685, -85.761, -20.4707, 0.34", "-157.454, -86.9913, -20.1152, 0.34", "-161.338, -89.7626, -19.566, 0.34", "-163.313, -91.2222, -19.3702, 0.34", "-167.49, -94.4058, -18.9777, 0.34", "-167.64, -94.528, -18.965, 0.34", "-169.604, -96.2127, -18.8489, 0.34", "-172.192, -98.7542, -18.8308, 1.88", "-172.775, -99.3825, -18.9386, 1.88" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-56.0331, -15.9316, -25.2489, 0.68", "-57.9568, -21.1282, -27.8274, 0.68", "-58.5882, -22.8339, -28.6738, 0.51", "-59.5533, -25.4411, -29.9675, 0.51", "-61.0959, -29.6081, -32.0352, 0.51" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-102.632, 7.09859, -14.3001, 0.17", "-103.012, 7.24744, -14.7173, 0.17", "-103.092, 7.28038, -14.8059, 0.17", "-103.361, 7.38335, -15.0632, 0.17", "-104.248, 7.78889, -15.9945, 0.86", "-105.676, 8.42656, -17.458, 0.34", "-108.744, 9.84757, -20.857, 0.34", "-109.431, 10.1477, -21.586, 1.71", "-110.565, 10.6241, -22.7146, 0.17", "-112.636, 11.4259, -24.5934, 0.17", "-113.656, 11.8092, -25.4898, 0.17", "-116.745, 12.7956, -27.8051, 0.17", "-119.106, 13.4155, -29.1917, 0.17", "-119.998, 13.6185, -29.6796, 1.88", "-121.766, 13.945, -30.478, 0.17", "-125.321, 14.4102, -31.6352, 0.17", "-127.063, 14.6242, -32.1071, 0.17", "-127.708, 14.6883, -32.2395, 1.2", "-128.967, 14.8456, -32.5607, 0.17", "-131.165, 15.1566, -33.2977, 0.17", "-131.548, 15.2185, -33.4446, 0.17", "-131.672, 15.2357, -33.4811, 0.17", "-133.394, 15.4975, -34.1435, 0.17", "-134.576, 15.6449, -34.6349, 2.05", "-136.649, 15.8535, -35.5137, 1.54", "-137.288, 15.8938, -35.7766, 0.17", "-139.229, 15.9457, -36.5136, 0.17", "-142.512, 15.8793, -37.6358, 0.17", "-143.786, 15.785, -37.9345, 1.03", "-144.825, 15.6644, -38.1074, 0.17", "-145.846, 15.5104, -38.1718, 0.17", "-146.526, 15.3824, -38.183, 1.54", "-147.286, 15.2058, -38.1317, 0.17", "-149.809, 14.5853, -37.6034, 0.17", "-149.936, 14.561, -37.5845, 0.17", "-150.957, 14.4761, -37.5569, 1.54", "-151.364, 14.4977, -37.5927, 0.17", "-152.765, 14.7272, -37.8122, 0.17", "-153.025, 14.8154, -37.8853, 1.54", "-155.628, 15.9092, -38.7017, 0.17", "-157.45, 16.7543, -39.2068, 0.17", "-158.929, 17.4449, -39.5645, 2.05", "-160.083, 17.9628, -39.769, 0.17", "-163.432, 19.3734, -40.0132, 0.17", "-165.482, 20.1366, -39.9855, 1.2", "-166.3, 20.4054, -39.9019, 0.17", "-168.594, 21.1144, -39.5955, 0.17", "-171.498, 21.825, -38.9206, 0.17", "-173.811, 22.1066, -38.0512, 1.54", "-174.835, 22.1021, -37.5139, 0.17", "-175.275, 22.0524, -37.2162, 0.86", "-175.484, 22.0136, -37.0628, 0.17", "-178.075, 21.2364, -34.9591, 0.17", "-180.159, 20.3924, -33.2738, 0.17", "-181.023, 19.9991, -32.6199, 1.54", "-183.305, 18.878, -30.938, 0.17", "-185.459, 17.7033, -29.3295, 0.17", "-187.668, 16.3809, -27.5998, 1.2", "-188.434, 15.8865, -27.0007, 1.2", "-188.794, 15.6325, -26.6997, 0.17", "-189.395, 15.1903, -26.1808, 0.17", "-191.275, 13.8215, -24.5912, 0.86", "-193.292, 12.3282, -22.7294, 0.34", "-194.125, 11.8386, -22.0513, 0.34", "-194.226, 11.7905, -21.9833, 0.34", "-194.64, 11.6146, -21.7224, 1.03", "-195.095, 11.4503, -21.5031, 0.17", "-196.479, 11.1982, -21.6366, 0.17", "-198.575, 11.0013, -22.7306, 1.2", "-199.539, 10.9232, -23.3667, 0.68" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-102.632, 7.09859, -14.3001, 0.17", "-105.293, 10.6916, -15.4146, 0.17", "-106.94, 12.8508, -15.7844, 0.17", "-108.409, 14.758, -15.7812, 1.03", "-109.173, 15.739, -15.6971, 0.17", "-110.228, 17.0901, -15.5098, 0.17", "-113.243, 20.9222, -14.8748, 0.17", "-113.34, 21.0402, -14.8356, 0.17", "-114.967, 23.0037, -14.0622, 1.2", "-115.223, 23.3304, -13.9236, 0.17", "-116.745, 25.4489, -13.0237, 0.17", "-117.129, 26.0675, -12.78, 0.17", "-117.556, 26.8009, -12.5365, 1.54", "-118.094, 27.7132, -12.2618, 0.17", "-118.953, 29.1192, -11.8738, 0.17", "-120.299, 31.079, -11.5729, 0.17", "-120.684, 31.5852, -11.5458, 1.71", "-121.753, 32.8208, -11.5654, 0.17", "-122.815, 33.944, -11.6433, 0.17", "-124.87, 35.8522, -11.8657, 0.17", "-128.356, 38.6907, -12.3601, 1.54", "-130.11, 39.9021, -12.6358, 0.17", "-132.264, 41.1593, -13.0574, 0.17", "-132.264, 41.1593, -13.0574, 2.05", "-134.486, 42.0265, -13.5865, 0.17", "-135.4, 42.2806, -13.805, 0.17", "-138.784, 42.9559, -14.1513, 0.17", "-142.027, 43.4048, -14.3256, 1.03", "-142.789, 43.5133, -14.3209, 0.17", "-142.94, 43.5459, -14.3077, 0.17", "-143.651, 43.7929, -14.1468, 0.17", "-146.728, 45.6031, -12.9216, 1.37", "-147.494, 46.2625, -12.4403, 0.17", "-148.389, 47.1536, -11.7929, 0.17", "-149.232, 48.1311, -11.2434, 1.03", "-150.003, 49.1102, -10.8225, 0.17", "-150.77, 50.216, -10.53, 0.17", "-151.119, 50.756, -10.4038, 1.03", "-151.283, 51.0368, -10.2847, 0.17", "-151.806, 51.9553, -9.57808, 0.17", "-151.865, 52.0616, -9.47787, 0.17", "-152.068, 52.4684, -9.02753, 1.2", "-153.169, 54.752, -6.09365, 0.17", "-153.525, 55.4881, -5.05709, 0.17", "-154.261, 56.9042, -2.85096, 1.54" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-161.94, 39.007, -79.4367, 0.17", "-161.722, 37.1944, -79.0778, 0.17", "-161.511, 35.4407, -78.7307, 0.17", "-160.849, 29.9373, -77.6412, 0.17", "-160.772, 29.2987, -77.5148, 0.86", "-160.763, 29.2231, -77.4998, 0.86" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-161.94, 39.007, -79.4367, 0.17", "-162.977, 39.4345, -79.8947, 0.17", "-165.887, 40.654, -81.0313, 0.17", "-166.005, 40.714, -81.0837, 0.17", "-168.444, 42.01, -82.2326, 1.37", "-169.699, 42.6679, -82.8186, 0.17", "-172.394, 44.0691, -84.008, 0.17", "-173.397, 44.636, -84.4487, 0.17", "-176.1, 46.3662, -85.7762, 1.03", "-176.45, 46.5853, -85.9343, 0.17", "-177.686, 47.2932, -86.4124, 0.17", "-178.917, 47.9707, -86.8894, 0.68", "-179.135, 48.1006, -87.0014, 0.68", "-180.698, 48.9435, -87.818, 0.17", "-182.494, 49.7579, -88.7477, 0.17", "-183.529, 50.239, -89.3865, 1.2", "-184.139, 50.5, -89.8111, 0.17", "-186.437, 51.3393, -91.4523, 0.17", "-187.338, 51.6129, -92.0658, 0.17", "-188.226, 51.7774, -92.6406, 0.68", "-189.427, 51.9001, -93.5506, 0.17", "-190.536, 51.9177, -94.4156, 0.17", "-191.113, 51.8661, -94.8941, 1.88", "-191.521, 51.8147, -95.2629, 0.17", "-193.83, 51.5644, -97.5049, 0.17", "-195.056, 51.3544, -98.7447, 1.37", "-195.876, 51.1789, -99.5965, 0.17", "-197.775, 50.7495, -101.75, 0.17", "-199.412, 50.3569, -103.661, 1.03", "-199.783, 50.2797, -104.164, 0.17", "-201.233, 50.0062, -106.32, 0.17", "-201.406, 49.9785, -106.58, 0.17", "-202.106, 49.8558, -107.664, 1.2", "-202.628, 49.7338, -108.484, 0.17", "-205.774, 48.8775, -113.442, 0.17", "-206.03, 48.8624, -113.958, 1.37", "-206.086, 48.8693, -114.087, 1.37", "-206.652, 48.9882, -115.542, 0.34", "-207.434, 49.2437, -117.782, 0.34", "-207.523, 49.2767, -118.049, 0.34", "-210.045, 50.5169, -126.085, 0.17", "-210.138, 50.5627, -126.38, 0.17", "-210.268, 50.6292, -126.794, 0.17", "-210.328, 50.6672, -126.975, 0.17", "-211.692, 51.4411, -130.44, 0.86", "-213.104, 51.9347, -133.183, 0.17", "-214.067, 51.962, -134.033, 0.17", "-214.149, 51.9965, -134.144, 1.37", "-215.703, 53.1274, -136.971, 0.17", "-215.89, 53.2567, -137.295, 1.03", "-216.095, 53.4046, -137.658, 0.17", "-216.925, 54.0371, -139.199, 0.17", "-221.473, 56.9305, -147.087, 1.03", "-223.457, 58.0237, -150.413, 0.17", "-225.514, 59.0263, -153.759, 0.17", "-225.676, 59.0904, -154.018, 1.03", "-228.26, 59.8271, -158.072, 0.17", "-231.327, 60.1879, -162.624, 0.17", "-232.693, 59.8226, -164.193, 1.2", "-233.061, 59.6391, -164.621, 0.17", "-234.47, 58.6198, -166.753, 0.17", "-234.864, 58.1616, -167.47, 0.68", "-235.03, 57.7622, -167.915, 0.17", "-235.1, 56.4693, -169.371, 0.17", "-235.035, 54.6625, -171.677, 1.37", "-234.96, 53.9057, -172.836, 0.17", "-234.632, 52.545, -175.135, 0.17", "-234.385, 52.1245, -175.706, 1.03", "-234.248, 51.9403, -175.927, 0.17", "-232.406, 49.6992, -178.464, 0.17", "-232.245, 49.5094, -178.65, 0.17", "-230.184, 47.1458, -180.79, 0.17", "-225.92, 42.603, -184.799, 0.17", "-225.675, 42.34, -185.012, 1.03" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "17.6616, 53.2447, -4.80386, 0.17", "17.8195, 53.8541, -4.76578, 0.17", "17.9373, 54.369, -4.73674, 0.17", "18.24, 55.7718, -4.66134, 0.17", "18.3745, 56.4357, -4.51662, 1.71", "18.6685, 57.9369, -4.09424, 0.17", "19.0991, 60.322, -3.37684, 0.17", "19.1337, 60.5355, -3.3064, 1.54", "19.3016, 61.7408, -2.91552, 0.17", "19.7743, 65.1857, -1.78072, 0.17", "20.0914, 67.3723, -1.05884, 1.37", "20.1652, 68.0334, -0.878271, 0.17", "20.1906, 68.2569, -0.818456, 0.17", "20.5479, 71.7539, 3.80408E-5, 0.17", "20.6181, 72.5703, 0.135716, 1.2", "20.6756, 73.4239, 0.156017, 0.17", "20.9022, 78.2673, 0.251053, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "17.6616, 53.2447, -4.80386, 0.86", "19.669, 52.825, -1.13116, 0.86", "20.4327, 52.6653, 0.266061, 0.86", "21.3355, 52.4766, 1.91792, 0.34", "22.0899, 52.3188, 3.2982, 0.34", "23.423, 52.0401, 5.73718, 0.34", "27.7201, 51.1418, 13.5993, 0.17" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "36.5452, 15.0778, 21.1018, 0.17", "33.7699, 20.9903, 18.6091, 0.17", "29.5485, 30.1418, 14.4898, 0.17", "24.8243, 38.648, 9.60454, 0.17", "19.8562, 46.4629, 3.87872, 0.17", "15.1505, 54.4532, -1.82661, 0.17", "11.6067, 62.233, -8.56869, 0.17", "6.09874, 69.4765, -14.5464, 0.17", "1.60735, 78.048, -19.536, 0.17", "-2.09077, 85.6639, -26.3815, 0.17", "-7.3813, 91.0363, -34.2356, 0.17", "-11.8779, 97.4725, -41.7785, 0.17", "-16.3642, 104.217, -49.0532, 0.17" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "36.5452, 15.0778, 21.1018, 0.68", "38.2056, 14.2564, 18.572, 0.68", "41.2373, 12.9347, 14.8025, 0.17", "53.5798, 7.96848, 1.71196, 0.17", "53.6652, 7.93325, 1.63981, 0.17", "56.4947, 6.81111, -0.227707, 0.17", "61.939, 4.68585, -3.32425, 0.17", "63.3223, 4.16751, -3.88979, 1.37", "65.0083, 3.59674, -4.13629, 0.17", "70.9635, 1.95592, -3.57999, 0.17", "75.177, 0.829769, -3.18285, 0.17", "75.3956, 0.770017, -3.16218, 0.17", "79.827, -0.394083, -2.74551, 0.17", "84.0699, -1.49138, -2.34743, 0.17", "88.4679, -2.21535, -1.95543, 0.17", "88.9224, -2.21069, -1.97581, 0.17", "90.9295, -1.93647, -2.3418, 0.17", "95.0621, -0.841789, -3.60048, 0.17", "95.2507, -0.745841, -3.67667, 0.17", "100.019, 2.79829, -6.17142, 0.17", "106.495, 8.35351, -10.4539, 0.17", "107.081, 8.88592, -10.871, 1.2", "107.525, 9.31878, -11.2095, 0.17", "113.396, 15.4522, -15.8771, 0.17", "119.792, 22.0927, -20.8809, 0.17", "125.271, 27.3606, -25.5228, 0.17", "125.556, 27.625, -25.7539, 1.2", "125.997, 28.0162, -26.167, 0.17", "127.923, 29.6829, -28.1294, 0.17", "128.438, 30.1085, -28.7633, 0.86", "135.11, 34.6832, -37.0229, 0.17", "138.896, 36.9961, -41.6085, 0.17", "142.666, 39.18, -46.2663, 1.54" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.23583, -36.6645, -10.6467, 1.03", "1.72021, -38.9749, -10.1619, 1.03", "1.29529, -41.7659, -9.672, 1.54", "1.20123, -43.0856, -9.49066, 0.68", "1.16007, -47.8121, -9.41668, 0.68", "1.49549, -50.3682, -8.99603, 0.68", "1.99886, -52.1822, -8.42064, 0.17", "2.77802, -53.7343, -7.64183, 0.86", "3.82559, -55.1319, -6.66777, 0.86", "6.43759, -57.6953, -3.97371, 0.51", "14.1152, -63.9034, 3.5601, 0.17", "15.1418, -64.7437, 4.59683, 1.03", "16.3785, -65.8811, 5.93367, 1.03", "16.788, -66.3181, 6.39802, 1.03", "19.2253, -69.5695, 9.32487, 0.51", "21.0585, -72.723, 11.6199, 0.51", "21.5717, -74.1474, 12.0505, 1.2", "22.2805, -76.1172, 12.4945, 1.88", "22.8889, -77.7615, 12.7404, 0.51", "23.757, -80.3498, 12.9112, 0.51", "24.0409, -81.5446, 12.8014, 0.51", "24.3346, -83.4776, 12.5719, 0.51", "24.6717, -86.8454, 12.112, 0.68", "24.7575, -88.1092, 11.9212, 0.68", "24.9031, -89.9692, 11.6137, 0.34", "25.3477, -94.1031, 10.8841, 1.54", "25.5388, -96.1838, 10.5618, 0.68", "25.593, -98.2907, 10.348, 0.17", "25.5315, -99.8859, 10.2815, 0.68", "25.3665, -102.741, 10.3003, 0.51", "25.223, -104.67, 10.422, 0.51", "25.1321, -106.525, 10.6346, 0.51", "24.95, -109.607, 11.0018, 0.51", "24.7836, -111.583, 11.2597, 1.2", "24.5383, -113.538, 11.5513, 0.86", "24.1809, -115.875, 11.9288, 0.17", "24.0141, -117.353, 12.1407, 0.17", "23.9966, -119.761, 12.5278, 0.17", "24.1403, -121.465, 12.8274, 1.54", "24.3116, -122.845, 13.0974, 1.03", "24.4608, -124.091, 13.3735, 0.34", "24.7696, -127.066, 14.0675, 0.34", "25.1186, -130.086, 14.8975, 1.03", "25.2955, -131.206, 15.2277, 0.68", "25.6983, -133.552, 15.9481, 0.17", "25.9819, -135.344, 16.4991, 0.17", "26.3593, -138.136, 17.3585, 0.17", "26.6229, -140.953, 18.1696, 1.54", "26.7857, -142.847, 18.6001, 0.68", "26.9233, -144.197, 18.8449, 0.51", "27.2522, -146.903, 19.2142, 0.51", "27.2865, -147.246, 19.2449, 0.51", "27.3952, -150.316, 19.3873, 0.51", "27.291, -152.379, 19.4014, 0.51", "27.1659, -154.037, 19.4102, 0.51", "27.1481, -154.215, 19.4135, 0.51", "26.741, -156.563, 19.2502, 1.37", "26.7075, -156.728, 19.2379, 1.37", "25.8643, -159.737, 19.0149, 0.86", "25.7315, -160.107, 18.9999, 0.17", "24.8557, -162.444, 18.9801, 0.68", "23.4206, -166.115, 18.8223, 0.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.23583, -36.6645, -10.6467, 0.86", "1.82965, -39.9242, -18.9741, 0.86", "1.81962, -40.0047, -19.1798, 0.86", "1.69948, -40.9689, -21.6429, 0.86" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-172.775, -99.3825, -18.9386, 0.17", "-177.593, -99.9041, -20.1497, 0.17", "-180.166, -100.096, -20.1513, 0.17", "-181.251, -100.123, -20.0329, 1.03", "-182.141, -100.145, -19.9358, 0.17", "-185.174, -100.221, -19.6049, 0.17", "-186.631, -100.258, -19.4459, 1.03", "-189.53, -100.245, -18.5337, 0.17", "-191.096, -100.135, -17.9223, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-172.775, -99.3825, -18.9386, 0.17", "-175.356, -101.45, -18.6645, 0.17", "-177.964, -103.464, -18.0629, 0.17", "-179.779, -104.823, -17.5506, 0.86", "-180.398, -105.253, -17.3635, 0.17", "-181.643, -106.084, -16.974, 0.17", "-185.345, -108.494, -15.8041, 0.17", "-187.936, -110.026, -14.7406, 1.54", "-188.147, -110.186, -14.5878, 0.17", "-189.404, -111.658, -12.9219, 0.17", "-189.486, -111.785, -12.7672, 1.2", "-189.753, -112.345, -12.1501, 0.17", "-190.835, -115.289, -9.2763, 0.17", "-192.2, -119.022, -6.04921, 0.17", "-193.266, -122.135, -3.81305, 1.54", "-193.477, -122.852, -3.4275, 0.17", "-194.663, -126.928, -1.91562, 0.17", "-195.28, -129.426, -1.09722, 1.2", "-195.645, -130.994, -0.685294, 0.86", "-196.579, -134.584, 0.124029, 0.17", "-197.73, -138.96, 1.08436, 0.17", "-198.542, -142.122, 1.86933, 0.17", "-200.432, -149.578, 4.01893, 0.17", "-200.512, -149.861, 4.10386, 0.17", "-201.879, -154.161, 5.6147, 0.17", "-202.511, -155.881, 6.29706, 0.86", "-202.926, -156.946, 6.67083, 0.86", "-203.159, -157.555, 6.8093, 0.17", "-204.102, -160.074, 7.02199, 0.17", "-205.049, -163.23, 7.21818, 1.37", "-205.411, -165.003, 7.2828, 0.17", "-206.054, -169.386, 7.36806, 0.17", "-206.408, -173.097, 7.35215, 0.17", "-206.419, -173.31, 7.3432, 0.17", "-206.476, -175.664, 7.088, 0.17", "-206.511, -176.876, 6.8552, 1.37", "-206.619, -178.328, 6.3506, 0.34", "-206.735, -179.261, 5.82326, 0.17", "-207.203, -181.826, 3.90136, 0.17", "-207.536, -183.057, 2.85594, 1.03", "-207.958, -183.977, 1.95102, 1.03", "-210.202, -187.363, -1.64011, 0.17", "-211.323, -188.354, -3.16247, 0.17", "-211.781, -188.615, -3.73294, 1.03", "-212.084, -188.716, -4.00577, 0.17", "-214.107, -189.038, -5.28953, 0.17", "-215.205, -189.142, -5.86358, 1.71", "-219.914, -189.365, -7.43718, 0.68", "-221.09, -189.365, -7.82245, 0.17", "-225.904, -189.445, -9.50262, 0.17", "-229.75, -189.564, -10.9109, 0.17" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-61.0959, -29.6081, -32.0352, 0.17", "-65.2294, -32.5018, -26.8489, 0.17", "-68.0385, -34.7012, -22.3793, 0.17", "-72.1504, -38.2651, -14.4698, 0.17", "-74.8047, -40.5658, -9.36393, 0.17", "-77.1833, -42.6274, -4.78867, 0.17", "-83.0786, -47.7371, 6.55157, 0.17", "-84.6742, -49.3093, 10.9404, 0.17", "-85.7096, -50.5605, 15.1776, 0.17", "-88.3274, -54.2586, 24.4999, 0.17", "-89.2673, -58.7867, 33.7759, 0.17" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-61.0959, -29.6081, -32.0352, 0.51", "-61.1044, -31.4605, -28.3425, 0.51", "-61.7888, -36.9913, -17.8686, 0.51", "-62.1505, -38.5295, -15.1503, 0.51", "-62.455, -39.4804, -13.5685, 0.51", "-63.7868, -42.9529, -8.09179, 0.51", "-64.2404, -43.9908, -6.59572, 0.34", "-64.8667, -45.4111, -4.85059, 0.34", "-65.5915, -46.8669, -3.79142, 0.34", "-65.9363, -47.6362, -3.3087, 0.86", "-66.1074, -48.2178, -2.98628, 0.17", "-66.6184, -50.3192, -1.99963, 0.68", "-67.4903, -56.0741, 0.838186, 0.68", "-67.5751, -57.3678, 1.48662, 0.17", "-67.5772, -58.6442, 2.16041, 0.17", "-67.3897, -63.5104, 4.81179, 0.51", "-69.3442, -68.533, 11.9601, 0.51", "-73.2886, -74.0633, 17.7912, 0.51", "-75.7993, -78.4675, 25.1699, 0.51", "-77.8543, -82.9067, 32.6676, 0.51", "-79.9543, -86.8158, 40.4427, 0.51", "-82.1015, -89.0518, 48.8412, 0.51", "-84.875, -90.4373, 57.2396, 0.51", "-86.9377, -92.9719, 65.5742, 0.51", "-87.9412, -96.2795, 73.8324, 0.51", "-87.4846, -99.7604, 82.0676, 0.51", "-86.7831, -102.429, 90.584, 0.51" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-199.539, 10.9232, -23.3667, 0.17", "-200.495, 7.92471, -24.3866, 0.17", "-201.359, 5.17667, -25.1896, 0.17", "-201.662, 4.2403, -25.4357, 0.68", "-201.722, 4.06692, -25.4774, 0.68", "-202.057, 3.05006, -25.7072, 0.68", "-202.236, 2.56178, -25.8056, 0.17", "-203.394, -0.263724, -26.2644, 0.17", "-203.739, -0.973903, -26.335, 1.37", "-204.172, -1.79141, -26.4136, 1.37", "-204.719, -2.62993, -26.4865, 0.17", "-206.407, -5.03971, -26.2963, 0.17", "-207.123, -5.97533, -26.095, 0.17", "-208.142, -7.13983, -25.6722, 1.03", "-208.876, -7.99608, -25.3263, 0.17", "-210.752, -10.1111, -24.364, 0.17", "-213.541, -13.524, -22.8733, 1.37", "-214.101, -14.3665, -22.4749, 0.17", "-214.777, -15.495, -21.9404, 0.17", "-216.02, -17.7597, -20.9811, 0.68", "-216.362, -18.4371, -20.7508, 0.17", "-217.781, -21.418, -19.906, 0.17", "-219.48, -24.4655, -19.2636, 0.68", "-219.981, -25.2484, -19.0752, 0.17", "-221.585, -27.4462, -18.4919, 0.17", "-222.978, -28.7852, -18.0787, 1.37", "-224.029, -29.5257, -17.9281, 0.17", "-225.907, -30.3833, -17.8948, 0.17", "-227.849, -31.0308, -18.07, 0.17", "-228.353, -31.1887, -18.1771, 0.17", "-232.276, -32.3807, -19.3155, 0.17", "-235.223, -33.4247, -20.3474, 1.03", "-236.394, -33.9144, -20.8661, 0.51", "-238.991, -35.1977, -22.2187, 0.17", "-242.32, -37.2389, -24.2153, 0.17", "-244.939, -39.2069, -25.9746, 0.17", "-246.125, -40.4155, -26.9311, 1.71", "-247.272, -41.9975, -27.9535, 0.17", "-247.474, -42.4321, -28.24, 0.17", "-247.615, -43.9984, -29.2514, 0.17", "-247.57, -44.2226, -29.3755, 1.2", "-247.372, -44.6357, -29.6286, 0.17", "-246.145, -46.584, -30.8353, 0.17", "-245.066, -48.0545, -31.6051, 1.03", "-244.231, -49.0726, -32.2195, 0.17" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-199.539, 10.9232, -23.3667, 0.17", "-200.785, 11.0488, -23.5536, 0.17", "-202.256, 11.2084, -23.8265, 0.17", "-203.207, 11.2982, -23.9928, 0.86", "-204.365, 11.3781, -24.1815, 0.17", "-206.594, 11.4875, -24.5293, 0.17", "-207.566, 11.5352, -24.681, 1.03", "-208.393, 11.5716, -24.7859, 0.17", "-210.561, 11.6436, -25.0896, 0.17", "-211.507, 11.6454, -25.2183, 0.17", "-211.802, 11.638, -25.2452, 0.68" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "20.9022, 78.2673, 0.251053, 0.17", "21.02, 81.3619, 0.760177, 0.17", "21.196, 85.2301, 1.38988, 0.17", "21.347, 87.9654, 1.81759, 0.17", "21.4059, 92.198, 2.29162, 1.2", "21.375, 94.4302, 2.46895, 0.17", "21.2876, 96.9437, 2.58227, 0.17", "21.2876, 96.9437, 2.58227, 1.03", "21.1064, 98.5244, 2.48577, 0.17", "20.6194, 102.719, 1.87549, 0.17", "20.4874, 104.168, 1.56031, 0.17", "20.1909, 107.81, 0.678797, 0.17", "20.0477, 111.796, -0.284475, 0.17", "20.0593, 112.528, -0.450901, 0.17", "20.3711, 115.572, -1.23682, 1.37", "20.5181, 116.474, -1.48476, 0.17", "20.8982, 118.448, -2.04018, 0.17", "21.6079, 121.625, -2.92915, 0.17", "22.4497, 125.038, -3.82987, 0.17", "24.0885, 131.895, -5.55769, 0.17", "24.6097, 134.269, -6.10448, 0.17", "24.9547, 135.906, -6.51342, 0.17", "25.1775, 137.181, -6.88196, 2.05", "25.2638, 137.969, -7.14755, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "20.9022, 78.2673, 0.251053, 0.17", "18.2322, 76.7391, 0.011226, 0.17", "15.8444, 75.3724, -0.203253, 0.17", "11.675, 72.986, -0.577758, 0.17", "7.00677, 70.3141, -0.997074, 0.17", "0.905163, 66.8217, -1.54513, 0.17", "-0.679253, 65.9149, -1.68745, 0.17" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "142.666, 39.18, -46.2663, 0.17", "147.749, 44.2009, -45.174, 0.17", "151.715, 48.1181, -44.3218, 0.17", "155.674, 52.0282, -43.4712, 0.17", "158.695, 55.0128, -42.8219, 0.17", "159.236, 55.5466, -42.7058, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "142.666, 39.18, -46.2663, 0.17", "144.879, 44.4259, -47.0015, 0.17", "145.536, 45.9851, -47.22, 1.37", "145.743, 46.4751, -47.2887, 0.17", "146.753, 48.8705, -47.6244, 0.17" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "23.4206, -166.115, 18.8223, 1.2", "23.4069, -168.43, 19.8098, 1.2", "24.3597, -171.646, 23.541, 0.17", "24.7873, -172.814, 25.3686, 0.17", "25.499, -175.116, 29.3364, 0.17", "26.1469, -177.226, 33.7011, 0.17", "26.1686, -177.298, 33.859, 0.17", "27.842, -182.099, 45.5443, 1.54", "28.1566, -182.803, 47.4679, 0.17", "28.5321, -183.437, 49.7432, 0.17", "29.9623, -185.08, 58.6644, 0.17", "30.0616, -185.151, 59.2272, 1.37", "30.1501, -185.243, 59.7904, 0.17", "30.2593, -186.824, 64.1724, 0.17", "31.7713, -190.443, 74.0403, 0.17" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "23.4206, -166.115, 18.8223, 0.86", "25.1364, -169.123, 19.697, 0.86", "26.771, -172.507, 20.6356, 0.86", "27.0117, -173.101, 20.7959, 0.86", "28.1605, -176.284, 21.6421, 0.68", "28.8239, -178.36, 22.144, 0.34", "29.854, -181.897, 22.672, 0.34", "30.0366, -182.809, 22.7548, 1.2", "30.27, -184.223, 22.7999, 1.2", "30.2976, -184.477, 22.7973, 0.34", "30.4799, -187.648, 22.6328, 0.34", "30.6749, -191.786, 22.3926, 0.34", "30.8068, -193.885, 22.2551, 1.88", "30.9473, -195.68, 22.1434, 0.68", "31.3354, -199.181, 21.9248, 0.51", "31.7578, -202.85, 21.7586, 0.51", "31.9808, -205.011, 21.7244, 1.03", "32.1477, -207.209, 21.7898, 1.71", "32.2846, -209.417, 21.8461, 0.68", "32.4206, -211.677, 21.9183, 0.17", "32.5908, -214.428, 22.0229, 0.17", "32.6319, -216.377, 22.1472, 1.03", "32.564, -219.742, 22.4605, 1.03", "32.3435, -225.177, 23.0091, 1.03", "32.3268, -225.539, 23.0465, 1.03", "32.3147, -225.927, 23.0842, 1.03", "32.3049, -227.024, 23.1816, 0.17", "32.3215, -228.308, 23.2848, 0.17", "32.3735, -230.434, 23.4462, 0.34", "32.3587, -231.217, 23.5187, 0.34", "32.2547, -233.917, 23.7892, 0.34", "32.4398, -240.005, 24.2374, 1.37", "32.5324, -241.118, 24.2967, 0.17", "32.551, -241.304, 24.3055, 0.17", "32.7391, -243.282, 24.4018, 0.17", "32.9684, -245.07, 24.4662, 0.34", "34.0175, -250.071, 24.4891, 0.34", "34.4174, -251.295, 24.4396, 0.34", "34.4691, -251.475, 24.4351, 0.34", "34.8788, -253.322, 24.435, 0.34", "34.8788, -253.322, 24.435, 1.03", "35.0763, -254.214, 24.461, 0.17", "35.3296, -255.098, 24.5401, 0.17", "36.3095, -257.649, 24.6444, 1.37", "37.3719, -259.966, 24.647, 0.51", "38.1929, -261.621, 24.5463, 0.17", "40.642, -266.07, 24.1161, 0.51", "42.8164, -269.732, 23.4274, 0.51", "44.6572, -272.817, 22.6537, 1.88", "45.945, -275.145, 21.7336, 1.2", "46.8954, -277.165, 20.6886, 0.17", "47.6465, -279.35, 19.3053, 0.51", "48.1935, -282.806, 16.7353, 1.03", "48.3534, -284.735, 15.1593, 1.03", "48.6076, -289.35, 11.616, 0.17", "48.6851, -290.495, 10.8194, 0.17", "48.7041, -290.657, 10.7277, 0.17", "49.138, -292.715, 9.85842, 0.17", "50.3781, -295.322, 9.41675, 1.2", "51.7016, -297.233, 9.31341, 1.2", "52.5642, -298.339, 9.40982, 0.17", "52.6789, -298.487, 9.41676, 0.17", "54.2026, -300.633, 9.43223, 0.17", "54.3101, -300.801, 9.42428, 1.54", "55.1639, -302.466, 9.25753, 0.17", "55.7095, -303.502, 9.1475, 0.17", "56.3547, -304.729, 9.09842, 0.17", "57.1456, -306.2, 9.1073, 1.37", "57.6376, -307.2, 9.17292, 0.68", "57.7486, -307.429, 9.19358, 0.68", "58.9184, -309.881, 9.46486, 0.17", "60.1916, -312.008, 10.3938, 0.17", "60.54, -312.59, 10.6982, 1.71", "61.3117, -313.872, 11.4925, 1.54", "61.8063, -314.693, 12.0684, 0.17", "62.5987, -316.001, 13.0929, 0.17", "65.6901, -321.123, 18.1652, 2.05" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "1.69948, -40.9689, -21.6429, 0.17", "1.97946, -41.435, -21.2904, 0.17", "2.59152, -42.4255, -20.4651, 0.17", "3.70582, -44.2016, -18.9116, 1.2", "5.48029, -46.7288, -16.0572, 0.17", "6.8598, -48.6559, -13.7262, 0.17", "7.0225, -48.8739, -13.4582, 0.17", "7.93348, -49.9872, -11.9841, 1.37", "7.96335, -50.0231, -11.9359, 1.37", "10.0597, -52.5199, -8.75928, 0.17", "10.7858, -53.4688, -7.75315, 0.17", "11.2864, -54.0827, -7.01541, 0.17", "11.362, -54.1716, -6.8778, 0.17", "12.4302, -55.4158, -4.89608, 0.17", "12.7069, -55.6845, -4.38238, 1.2", "12.8799, -55.8355, -4.05272, 0.17", "14.7211, -57.2973, -0.275796, 0.17", "16.8827, -58.9492, 4.26436, 0.17", "17.4051, -59.3132, 5.35105, 0.17", "19.1355, -60.2907, 8.78083, 0.17", "19.252, -60.3553, 8.9963, 0.17", "19.5099, -60.4993, 9.43283, 0.17", "20.2982, -60.9702, 10.4544, 0.17", "20.4876, -61.105, 10.63, 0.68", "21.3409, -61.8034, 11.4511, 0.68", "22.0019, -62.4375, 12.0601, 0.68", "23.8749, -65.1305, 14.6172, 0.17", "24.0592, -66.4343, 15.7205, 0.17", "23.862, -67.2479, 16.3186, 1.2", "23.6018, -67.6894, 16.5598, 0.17", "23.5362, -67.7843, 16.6026, 0.17", "20.5455, -72.0205, 17.3594, 0.17", "19.6157, -73.3531, 17.3707, 0.17", "19.1603, -74.0318, 17.342, 0.17", "16.6825, -78.1445, 17.0062, 0.17", "15.3492, -80.6673, 16.766, 0.17", "12.989, -85.7124, 16.2216, 0.17", "11.8287, -88.55, 15.6846, 0.17", "11.1966, -89.9774, 15.3506, 0.17", "10.4113, -91.6087, 14.926, 0.17", "8.80878, -95.2132, 13.9336, 0.17", "8.43751, -96.0764, 13.6879, 0.17", "6.76027, -100.436, 12.6975, 0.17", "6.17177, -102.245, 12.2546, 0.17", "5.72594, -103.797, 11.8852, 0.17", "4.57502, -108.106, 10.9389, 0.17", "3.56468, -112.652, 10.1545, 0.17", "2.86023, -116.276, 9.65644, 0.17", "2.53597, -118.197, 9.48648, 0.17", "2.15997, -120.431, 9.30591, 0.17", "1.77262, -122.411, 9.16064, 0.17", "0.617914, -127.015, 8.94131, 0.17", "-0.0724193, -129.393, 8.96949, 1.71", "-0.325927, -130.17, 8.95551, 0.17", "-0.841559, -131.573, 8.84561, 0.17", "-0.93253, -131.805, 8.81287, 0.17", "-1.63674, -133.442, 8.48459, 0.17", "-2.85985, -135.639, 7.71201, 0.17", "-4.07169, -137.652, 6.87004, 0.17", "-5.19175, -139.438, 5.94309, 1.54", "-5.44374, -139.836, 5.70585, 0.17", "-5.9068, -140.57, 5.27367, 0.17", "-7.27108, -142.949, 4.01074, 0.17", "-7.59491, -143.671, 3.69461, 1.2", "-7.59491, -143.671, 3.69461, 0.17", "-7.92054, -144.826, 3.57929, 0.17", "-8.4581, -146.954, 3.47304, 0.17", "-8.98749, -149.283, 3.54324, 0.17", "-9.03141, -149.46, 3.56517, 0.17", "-9.52481, -151.395, 3.52472, 0.17", "-9.57404, -151.565, 3.50596, 0.17", "-9.61734, -151.683, 3.47176, 0.17", "-10.9397, -154.622, 2.16991, 0.17", "-11.5059, -155.914, 1.5084, 0.17", "-13.1744, -159.905, -0.498408, 0.17", "-14.1945, -162.386, -1.69021, 0.17", "-15.8812, -166.64, -3.51419, 0.17", "-17.5114, -170.905, -5.19358, 0.17", "-19.2125, -175.32, -6.70722, 0.17", "-20.3035, -178.189, -7.46872, 0.17", "-21.319, -180.694, -7.84304, 0.17", "-22.7995, -184.341, -8.17173, 0.17", "-23.1473, -185.178, -8.17579, 0.17", "-24.669, -188.556, -8.0117, 0.17", "-25.5349, -190.239, -7.88709, 0.17", "-27.4327, -193.328, -7.65706, 0.17", "-30.7572, -197.968, -7.30343, 0.17", "-31.1073, -198.365, -7.26639, 0.68", "-32.647, -199.892, -7.09484, 0.17", "-33.5602, -200.667, -6.98123, 0.17", "-36.9323, -203.267, -6.45173, 0.17", "-37.1264, -203.421, -6.40962, 0.17", "-38.6431, -204.732, -5.95861, 0.17", "-38.9061, -204.999, -5.8775, 0.17", "-40.6243, -206.856, -5.34053, 0.17", "-42.0351, -208.525, -4.89052, 0.17", "-44.295, -211.493, -4.22103, 0.17", "-46.6636, -214.69, -3.52105, 0.17", "-46.738, -214.794, -3.49916, 0.17", "-49.3305, -218.376, -2.75287, 0.17", "-49.4045, -218.473, -2.73263, 0.17", "-50.58, -219.723, -2.4384, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "1.69948, -40.9689, -21.6429, 0.17", "2.70185, -41.6375, -19.0011, 0.17", "4.60249, -42.5387, -13.9488, 1.37", "4.64637, -42.5626, -13.8226, 1.37", "4.80406, -42.6543, -13.3499, 0.17", "6.64962, -43.7116, -7.8356, 0.17", "6.78311, -43.7743, -7.46425, 1.03", "8.49999, -44.3721, -2.4915, 0.17", "10.7476, -44.9497, 3.52727, 0.17", "10.8466, -44.9731, 3.78754, 1.2", "11.0596, -45.0164, 4.33205, 0.17", "11.9954, -45.1845, 6.66539, 0.17", "13.2542, -45.3696, 9.81307, 1.2", "13.3224, -45.3724, 9.95966, 0.17", "16.7935, -47.1079, 17.2176, 0.17", "20.2242, -49.1975, 24.4012, 0.17", "23.7515, -52.4843, 31.0715, 0.17", "27.7492, -56.397, 37.1087, 0.17", "32.7351, -61.3487, 41.3936, 0.17", "38.2802, -64.3631, 46.676, 0.17" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "146.753, 48.8705, -47.6244, 0.17", "148.974, 55.1155, -51.28, 0.17", "151.846, 64.5428, -55.83, 0.17", "151.885, 64.6941, -55.8968, 0.17", "153.011, 69.5974, -57.9451, 0.17", "154.171, 75.0659, -60.1651, 0.17", "155.7, 83.5875, -63.4408, 0.17", "156.083, 88.1058, -64.8198, 0.17", "156.135, 93.7477, -66.1359, 0.17", "156.069, 95.0586, -66.4723, 1.88", "156.002, 95.5353, -66.6281, 0.17", "154.92, 100.229, -68.3225, 0.17", "153.719, 103.151, -69.4082, 0.17", "151.913, 106.768, -70.9734, 0.17", "151.494, 107.467, -71.2946, 0.17", "149.515, 110.668, -72.9563, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "146.753, 48.8705, -47.6244, 0.17", "150.903, 47.0011, -49.8347, 0.17", "153.282, 45.9299, -51.1012, 0.17", "155.948, 44.7292, -52.5209, 0.17" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "65.6901, -321.123, 18.1652, 0.17", "66.4595, -321.95, 19.0106, 0.17", "67.0344, -322.794, 19.8551, 0.17", "67.1569, -323.056, 20.0242, 0.17", "67.2666, -323.338, 20.1451, 1.03", "67.8197, -325.052, 20.6879, 0.51", "68.7487, -328.272, 21.5155, 0.17", "68.9512, -329.514, 21.744, 0.17", "69.1918, -333.059, 22.2266, 1.2", "69.1697, -334.164, 22.3258, 0.17", "69.109, -334.984, 22.3488, 0.17", "69.0904, -335.151, 22.3514, 0.17", "68.9344, -336.548, 22.3881, 0.17", "68.8306, -337.951, 22.5756, 1.37", "68.7393, -339.42, 22.9331, 0.17", "68.6932, -341.3, 23.6088, 0.17", "68.8473, -343.59, 24.5659, 0.68", "68.9259, -344.135, 24.8081, 0.17", "69.1854, -345.198, 25.3016, 0.17", "69.5072, -346.194, 25.7898, 0.17", "70.6761, -349.38, 27.3269, 0.68", "71.4821, -351.654, 28.3701, 0.68", "71.849, -353.008, 28.8624, 0.34", "72.0419, -353.883, 29.1141, 0.17", "72.0694, -354.045, 29.1479, 0.17", "72.3241, -356.379, 29.4413, 0.17", "72.3969, -357.768, 29.4923, 0.68", "72.428, -360.566, 29.3234, 0.17", "72.4167, -362.124, 29.2171, 0.17", "72.3936, -363.472, 29.1122, 1.2", "72.3982, -364.878, 28.9612, 0.17", "72.4865, -366.657, 28.631, 0.17", "72.8842, -370.396, 27.5712, 1.37" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "65.6901, -321.123, 18.1652, 0.17", "65.158, -322.785, 17.9256, 0.17", "64.0905, -325.971, 17.4577, 0.17", "63.6619, -327.372, 17.2654, 1.54", "63.3802, -328.409, 17.1638, 0.17", "61.9965, -334.267, 17.0574, 0.17", "61.7764, -334.957, 17.0105, 1.54", "61.4208, -335.921, 16.9242, 0.17", "60.5856, -337.99, 16.7267, 0.17", "59.466, -340.724, 16.4832, 0.17", "57.4159, -345.643, 16.173, 0.17", "53.6873, -353.0, 15.5445, 0.17", "52.8445, -354.485, 15.3419, 1.03", "52.1969, -355.517, 15.1515, 1.03", "51.7839, -356.143, 14.9825, 0.17", "49.9276, -358.963, 13.8663, 0.17", "46.5436, -364.803, 11.0556, 1.54", "45.4822, -367.526, 9.80442, 1.2", "45.4144, -367.738, 9.70237, 1.2", "44.2738, -372.249, 7.51893, 0.17", "43.9688, -374.843, 6.32526, 0.17", "44.0889, -377.898, 5.05559, 0.68", "44.5736, -380.869, 4.10198, 0.17", "44.6144, -381.104, 4.03897, 0.17", "44.7136, -381.625, 3.93493, 0.86", "45.675, -385.88, 3.5066, 0.17", "46.0371, -387.472, 3.44852, 1.03", "46.1367, -387.943, 3.43888, 0.17", "46.8527, -391.519, 3.40608, 0.17", "46.9915, -392.27, 3.41076, 1.03", "47.0877, -392.95, 3.4446, 0.17", "47.4809, -396.747, 3.77734, 0.17", "47.6781, -398.816, 3.97567, 1.2", "47.7426, -399.68, 4.07653, 0.17", "47.8421, -403.861, 4.77696, 0.17", "47.8234, -405.756, 5.15832, 0.17", "47.7649, -406.821, 5.42063, 1.2", "47.6905, -408.792, 6.05758, 0.17", "47.6696, -411.557, 7.04749, 0.17", "47.7162, -412.889, 7.52774, 0.86", "47.8629, -414.672, 8.17469, 0.17", "48.0319, -416.502, 8.84184, 0.17", "48.2833, -420.352, 10.3473, 0.17", "48.3011, -421.042, 10.5823, 1.54", "48.2702, -422.3, 10.9292, 0.17", "48.1306, -424.676, 11.4275, 0.17", "47.8585, -426.911, 11.8493, 0.17", "47.4954, -429.091, 12.1994, 0.17", "46.8471, -432.069, 12.6023, 1.54", "46.1449, -435.427, 13.0688, 0.17", "45.8196, -438.487, 13.7367, 0.17", "45.9957, -441.649, 14.5424, 0.17", "46.1101, -442.479, 14.8098, 1.03", "46.1507, -442.706, 14.9003, 1.03", "46.6935, -445.025, 15.9706, 0.17", "48.3359, -450.752, 18.8204, 0.17", "49.5397, -454.454, 20.8176, 0.17", "51.0219, -458.622, 23.1466, 0.17", "51.2884, -459.42, 23.6067, 0.17" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "72.8842, -370.396, 27.5712, 0.17", "72.2378, -373.879, 29.9548, 0.17", "71.9985, -375.991, 31.1038, 0.17", "71.9849, -376.167, 31.1903, 0.17", "71.8577, -378.122, 32.1032, 1.2", "71.8646, -378.869, 32.3853, 0.17", "71.9535, -380.174, 32.7416, 0.17", "72.1078, -381.339, 32.7736, 0.86", "72.2287, -381.873, 32.7638, 0.17", "72.3333, -382.293, 32.7515, 0.17", "72.9893, -384.749, 32.6579, 0.17", "73.5717, -387.016, 32.5838, 0.86", "73.8679, -388.374, 32.5655, 0.17", "74.1092, -390.482, 32.3369, 0.17", "74.1758, -392.403, 32.0282, 1.71", "74.1706, -392.585, 31.9903, 0.17", "73.9695, -394.175, 31.5906, 0.17", "73.6716, -395.812, 31.1122, 0.17", "72.5602, -400.502, 29.6027, 0.17", "72.2783, -401.536, 29.2574, 1.03", "72.2315, -401.716, 29.2, 0.17", "71.9823, -403.33, 28.8224, 0.17", "71.8884, -404.524, 28.6233, 1.37", "71.8887, -404.71, 28.609, 0.17", "72.1431, -406.635, 28.6801, 0.17", "72.3845, -408.083, 28.7104, 0.17", "72.7963, -411.908, 28.895, 0.17", "72.8111, -412.093, 28.9172, 0.17", "72.8792, -412.877, 29.0443, 1.54", "72.9784, -414.5, 29.3522, 0.17", "72.9223, -416.183, 29.7532, 0.17", "72.7378, -419.32, 31.016, 0.17", "72.6874, -421.061, 31.91, 0.17", "72.6689, -423.611, 33.3542, 0.17", "72.7177, -427.569, 35.7302, 0.17", "72.8208, -430.933, 37.8572, 0.17", "73.1673, -436.263, 41.3687, 0.17", "73.446, -439.131, 43.293, 0.17", "73.4792, -439.427, 43.5004, 1.71", "73.5929, -440.177, 44.092, 0.17", "73.9542, -441.49, 45.1921, 0.17", "74.0387, -441.698, 45.3409, 0.17", "74.6328, -443.225, 46.0319, 0.17", "75.8983, -446.731, 47.4842, 0.17", "76.0902, -447.242, 47.6824, 0.17", "76.4672, -448.173, 47.9727, 0.17", "77.0047, -449.451, 48.2827, 1.54", "77.3834, -450.324, 48.4214, 0.17", "77.7088, -451.056, 48.4433, 0.17", "77.8603, -451.614, 48.4309, 0.17", "78.3351, -454.877, 48.5386, 0.17", "78.3613, -455.424, 48.5445, 1.71", "78.3651, -455.694, 48.55, 0.17", "78.3279, -458.602, 48.6266, 0.17", "78.1672, -462.48, 48.75, 0.17", "77.7644, -467.427, 48.9487, 0.17", "77.3934, -469.986, 49.0832, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "72.8842, -370.396, 27.5712, 0.17", "73.4393, -372.261, 27.3925, 0.17", "74.097, -374.267, 27.1484, 0.17", "74.1559, -374.436, 27.1249, 1.2", "74.3366, -374.931, 27.0488, 0.17", "75.1685, -377.163, 26.6912, 0.17", "75.7574, -378.642, 26.422, 1.37", "76.227, -379.542, 26.2346, 0.17", "76.3167, -379.695, 26.2008, 0.17", "77.5967, -381.982, 25.7778, 0.17", "77.6889, -382.126, 25.7663, 0.17", "78.9587, -383.976, 25.7893, 0.17", "81.9461, -388.254, 26.1588, 0.17", "83.1592, -389.993, 26.3324, 0.17", "84.5513, -392.064, 26.5162, 0.17", "87.1746, -395.91, 26.9536, 1.37", "88.3275, -397.62, 27.1786, 0.17", "88.4259, -397.77, 27.2047, 0.17", "91.1205, -402.093, 28.0673, 0.17", "93.1394, -405.197, 28.489, 0.17", "97.7521, -414.431, 29.2939, 0.17" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "77.3934, -469.986, 49.0832, 0.17", "81.1659, -473.37, 50.4718, 0.17", "84.0739, -475.979, 51.5421, 0.17", "86.7337, -478.365, 52.5211, 0.17", "86.8876, -478.503, 52.5778, 0.17", "93.5526, -484.482, 55.0309, 0.17", "94.0587, -484.936, 55.2172, 0.17", "103.591, -493.696, 56.4086, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "77.3934, -469.986, 49.0832, 0.17", "76.2912, -471.879, 49.8133, 0.17", "74.7918, -474.454, 50.8066, 0.17", "74.0877, -475.664, 51.273, 0.17", "74.0308, -475.761, 51.3107, 0.17", "71.6821, -482.133, 54.0229, 0.17" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_29", "dend_18", "dend_17", "dend_0", "dend_50", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_30", "dend_20", "dend_19", "dend_16", "dend_1", "dend_56", "dend_51", "dend_49", "dend_46", "dend_42", "dend_37", "dend_28", "dend_21", "dend_3", "dend_2", "dend_60", "dend_57", "dend_53", "dend_52", "dend_48", "dend_47", "dend_39", "dend_38", "dend_27", "dend_22", "dend_7", "dend_4", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_54", "dend_41", "dend_40", "dend_26", "dend_23", "dend_15", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_10", "dend_9", "dend_12", "dend_11", "dend_14", "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L5_NBC_e7c18ce52f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_44
create dend_50
public dend_50
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_0
create dend_16
public dend_16
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_50
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_42, id: dend_42, parent: dend_36
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_20
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_27, id: dend_27, parent: dend_21
create dend_27
public dend_27
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_15, id: dend_15, parent: dend_7
create dend_15
public dend_15
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.49999945595718026)
    connect dend_35(0), soma_0(0.49999945595718026)
    connect dend_32(0), soma_0(0.49999945595718026)
    connect dend_29(0), soma_0(0.49999945595718026)
    connect dend_18(0), soma_0(0.49999945595718026)
    connect dend_17(0), soma_0(0.49999945595718026)
    connect dend_0(0), soma_0(0.49999945595718026)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_16(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_42(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_27(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_15(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.80187, -2.65497, 0.815749, 4.80603 ) }
    soma_0 { pt3dadd( -7.85711, -2.42647, 0.741853, 8.49266 ) }
    soma_0 { pt3dadd( -6.91236, -2.19797, 0.667957, 10.2778 ) }
    soma_0 { pt3dadd( -5.96761, -1.96947, 0.594062, 12.0489 ) }
    soma_0 { pt3dadd( -5.02286, -1.74096, 0.520166, 13.6363 ) }
    soma_0 { pt3dadd( -4.07811, -1.51246, 0.44627, 14.7753 ) }
    soma_0 { pt3dadd( -3.13335, -1.28396, 0.372375, 15.6483 ) }
    soma_0 { pt3dadd( -2.1886, -1.05546, 0.298479, 16.2981 ) }
    soma_0 { pt3dadd( -1.24385, -0.826954, 0.224583, 16.8319 ) }
    soma_0 { pt3dadd( -0.299097, -0.598451, 0.150687, 17.082 ) }
    soma_0 { pt3dadd( 0.645655, -0.369949, 0.0767917, 17.31 ) }
    soma_0 { pt3dadd( 1.59041, -0.141446, 0.00289604, 17.538 ) }
    soma_0 { pt3dadd( 2.53516, 0.0870562, -0.0709997, 17.43 ) }
    soma_0 { pt3dadd( 3.47991, 0.315559, -0.144895, 16.9438 ) }
    soma_0 { pt3dadd( 4.42466, 0.544061, -0.218791, 16.4576 ) }
    soma_0 { pt3dadd( 5.36941, 0.772563, -0.292687, 15.5199 ) }
    soma_0 { pt3dadd( 6.31417, 1.00107, -0.366582, 14.2667 ) }
    soma_0 { pt3dadd( 7.25892, 1.22957, -0.440478, 13.0135 ) }
    soma_0 { pt3dadd( 8.20367, 1.45807, -0.514374, 10.6764 ) }
    soma_0 { pt3dadd( 9.14842, 1.68657, -0.588269, 7.11693 ) }
    soma_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 4.00176 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -9.8861, 1.27317, -7.14961, 1.71 ) }
    dend_44 { pt3dadd( -10.05, 1.21989, -6.82855, 1.71 ) }
    dend_44 { pt3dadd( -13.5908, 0.0691201, 0.105459, 1.71 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -3.2361, 7.48317, -0.579609, 1.03 ) }
    dend_35 { pt3dadd( -3.59296, 7.8474, -0.460575, 1.03 ) }
    dend_35 { pt3dadd( -3.85962, 8.38136, 0.261692, 0.86 ) }
    dend_35 { pt3dadd( -4.3962, 9.45582, 1.71507, 0.86 ) }
    dend_35 { pt3dadd( -4.70752, 10.0792, 2.55833, 0.86 ) }
    dend_35 { pt3dadd( -5.75769, 12.1821, 5.40284, 0.86 ) }
    dend_35 { pt3dadd( -5.85412, 12.3752, 5.66401, 0.86 ) }
    dend_35 { pt3dadd( -8.00391, 17.7564, 13.3452, 0.86 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 32/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -1.0861, 8.55317, -5.19961, 1.71 ) }
    dend_32 { pt3dadd( -0.67679, 11.246, -5.04334, 1.71 ) }
    dend_32 { pt3dadd( -0.551305, 12.0716, -4.99543, 0.86 ) }
    dend_32 { pt3dadd( -0.185972, 14.4752, -4.85595, 0.68 ) }
    dend_32 { pt3dadd( 0.159941, 16.751, -4.72388, 0.68 ) }
    dend_32 { pt3dadd( 0.337438, 17.9188, -4.65611, 0.68 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 38/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 8.1539, 4.83317, -6.22961, 1.2 ) }
    dend_29 { pt3dadd( 9.68061, 5.2876, -6.98903, 1.2 ) }
    dend_29 { pt3dadd( 12.5845, 6.15193, -8.43347, 1.2 ) }
    dend_29 { pt3dadd( 16.6972, 7.37608, -10.4792, 0.68 ) }
    dend_29 { pt3dadd( 21.2686, 8.73675, -12.7531, 0.68 ) }
    dend_29 { pt3dadd( 24.5646, 9.71783, -14.3927, 0.68 ) }
    dend_29 { pt3dadd( 26.4962, 10.2927, -15.3534, 0.68 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 45/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 10.4639, -0.806829, -1.19961, 1.54 ) }
    dend_18 { pt3dadd( 12.6222, 0.984285, 1.23437, 1.54 ) }
    dend_18 { pt3dadd( 14.1775, 2.27506, 2.98842, 1.54 ) }
    dend_18 { pt3dadd( 18.3397, 5.72913, 7.68222, 1.03 ) }
    dend_18 { pt3dadd( 19.1364, 6.39034, 8.58074, 1.03 ) }
    dend_18 { pt3dadd( 19.4448, 6.64626, 8.92852, 1.03 ) }
    dend_18 { pt3dadd( 21.3516, 8.22869, 11.079, 1.03 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 52/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 2.0039, -4.83683, -5.19961, 1.2 ) }
    dend_17 { pt3dadd( 1.62606, -4.95603, -5.41875, 1.2 ) }
    dend_17 { pt3dadd( -0.388244, -5.64457, -6.43709, 1.2 ) }
    dend_17 { pt3dadd( -2.88926, -6.00867, -11.1452, 1.03 ) }
    dend_17 { pt3dadd( -3.87271, -6.14354, -13.2386, 0.68 ) }
    dend_17 { pt3dadd( -5.66686, -6.31497, -17.0294, 0.68 ) }
    dend_17 { pt3dadd( -6.84439, -6.38727, -19.8781, 0.68 ) }
    dend_17 { pt3dadd( -7.77222, -6.37556, -22.1848, 2.05 ) }
    dend_17 { pt3dadd( -16.1377, -5.66913, -42.8691, 0.17 ) }
    dend_17 { pt3dadd( -16.559, -5.61927, -43.888, 0.17 ) }
    dend_17 { pt3dadd( -17.3769, -5.46307, -45.7592, 0.17 ) }
    dend_17 { pt3dadd( -21.7041, -4.53716, -54.6663, 0.17 ) }
    dend_17 { pt3dadd( -23.9038, -4.18516, -58.7881, 0.17 ) }
    dend_17 { pt3dadd( -25.5587, -3.92836, -61.2957, 2.05 ) }
    dend_17 { pt3dadd( -27.338, -3.83888, -62.769, 0.17 ) }
    dend_17 { pt3dadd( -28.4555, -3.80633, -63.6545, 0.17 ) }
    dend_17 { pt3dadd( -30.9051, -3.88652, -65.8181, 0.17 ) }
    dend_17 { pt3dadd( -37.4956, -4.67124, -71.1526, 2.22 ) }
    dend_17 { pt3dadd( -38.0847, -4.78203, -72.1846, 0.17 ) }
    dend_17 { pt3dadd( -38.8527, -4.97941, -73.733, 0.17 ) }
    dend_17 { pt3dadd( -39.6296, -5.19031, -75.4149, 0.17 ) }
    dend_17 { pt3dadd( -42.8661, -6.10305, -82.8626, 0.17 ) }
    dend_17 { pt3dadd( -44.723, -6.61952, -87.4309, 0.17 ) }
    dend_17 { pt3dadd( -54.2939, -9.70618, -111.922, 1.71 ) }
    dend_17 { pt3dadd( -55.6553, -10.1501, -115.623, 0.17 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.7139, -0.396829, -15.7696, 1.37 ) }
    dend_0 { pt3dadd( 1.92402, -2.89703, -15.7552, 1.37 ) }
    dend_0 { pt3dadd( 2.04911, -4.22078, -15.7162, 1.37 ) }
    dend_0 { pt3dadd( 2.21803, -5.637, -15.6635, 1.03 ) }
    dend_0 { pt3dadd( 2.51118, -7.65695, -15.5825, 1.03 ) }
    dend_0 { pt3dadd( 3.08255, -11.1996, -15.4343, 1.03 ) }
    dend_0 { pt3dadd( 3.48408, -13.6891, -15.3302, 1.03 ) }
    dend_0 { pt3dadd( 3.86002, -16.3194, -15.1423, 1.03 ) }
    dend_0 { pt3dadd( 4.04806, -17.8111, -15.0303, 2.22 ) }
    dend_0 { pt3dadd( 4.17404, -18.8985, -14.9413, 1.54 ) }
    dend_0 { pt3dadd( 4.20564, -19.0964, -14.9233, 1.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 88/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 10.0932, 1.91508, -0.662165, 1.00001 ) }
    axon_0 { pt3dadd( 24.6728, 5.44137, -0.662165, 1.00001 ) }
    axon_0 { pt3dadd( 39.2524, 8.96767, -0.662165, 1.00001 ) }
    // Section: dend_50, id: dend_50, parent: dend_44 (entry count 91/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -13.5908, 0.0691201, 0.105459, 1.37 ) }
    dend_50 { pt3dadd( -14.5418, -0.533688, 0.201602, 1.37 ) }
    dend_50 { pt3dadd( -17.6477, -2.50228, 0.515575, 1.37 ) }
    dend_50 { pt3dadd( -20.6095, -4.37951, 0.814977, 1.37 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -13.5908, 0.0691201, 0.105459, 0.68 ) }
    dend_45 { pt3dadd( -20.0582, 3.46834, -7.12398, 0.68 ) }
    dend_45 { pt3dadd( -22.149, 4.69746, -9.246, 0.51 ) }
    dend_45 { pt3dadd( -23.5314, 5.54441, -10.6063, 0.51 ) }
    dend_45 { pt3dadd( -24.8619, 6.53003, -11.9971, 0.51 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_45 { pt3dadd( -25.0938, 6.71963, -12.2372, 0.51 ) }
    dend_45 { pt3dadd( -25.2566, 6.85959, -12.3906, 0.51 ) }
    dend_45 { pt3dadd( -29.5499, 10.9182, -15.6855, 0.51 ) }
    dend_45 { pt3dadd( -29.6117, 10.9789, -15.7344, 0.51 ) }
    dend_45 { pt3dadd( -31.8788, 13.2005, -17.3065, 0.51 ) }
    dend_45 { pt3dadd( -34.2132, 15.5059, -18.6318, 1.88 ) }
    dend_45 { pt3dadd( -36.2525, 17.4571, -19.6426, 0.17 ) }
    dend_45 { pt3dadd( -39.3277, 20.327, -21.0922, 0.68 ) }
    dend_45 { pt3dadd( -41.2773, 21.914, -21.8456, 0.68 ) }
    dend_45 { pt3dadd( -43.5606, 23.5641, -22.6949, 0.17 ) }
    dend_45 { pt3dadd( -45.683, 24.8534, -23.4003, 1.37 ) }
    dend_45 { pt3dadd( -48.0541, 26.3378, -24.623, 0.17 ) }
    dend_45 { pt3dadd( -50.5462, 28.0364, -26.3433, 0.68 ) }
    dend_45 { pt3dadd( -52.9314, 29.723, -28.0962, 0.68 ) }
    dend_45 { pt3dadd( -53.6129, 30.2399, -28.6578, 0.51 ) }
    dend_45 { pt3dadd( -54.7855, 31.1399, -29.6433, 1.03 ) }
    dend_45 { pt3dadd( -60.3438, 35.1316, -33.7916, 0.51 ) }
    dend_45 { pt3dadd( -62.0435, 36.3305, -34.8627, 0.51 ) }
    dend_45 { pt3dadd( -65.0957, 38.3451, -36.4589, 0.51 ) }
    dend_45 { pt3dadd( -65.2434, 38.4478, -36.5294, 0.51 ) }
    dend_45 { pt3dadd( -66.9843, 39.5207, -37.1457, 2.22 ) }
    dend_45 { pt3dadd( -68.7399, 40.3682, -37.5143, 0.34 ) }
    dend_45 { pt3dadd( -71.4255, 41.1824, -37.5251, 0.34 ) }
    dend_45 { pt3dadd( -74.2122, 41.7562, -37.4923, 0.34 ) }
    dend_45 { pt3dadd( -76.0886, 42.0612, -37.4185, 0.34 ) }
    dend_45 { pt3dadd( -78.9022, 42.4723, -37.2718, 2.05 ) }
    dend_45 { pt3dadd( -81.0395, 42.725, -37.1094, 0.17 ) }
    dend_45 { pt3dadd( -85.4943, 43.1662, -36.5708, 0.17 ) }
    dend_45 { pt3dadd( -87.7562, 43.3114, -36.1447, 0.17 ) }
    dend_45 { pt3dadd( -89.8703, 43.4055, -35.7137, 2.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 30/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -8.00391, 17.7564, 13.3452, 0.68 ) }
    dend_43 { pt3dadd( -9.57919, 21.7946, 16.1744, 0.68 ) }
    dend_43 { pt3dadd( -10.4273, 23.4311, 17.1328, 0.51 ) }
    dend_43 { pt3dadd( -11.7178, 25.8785, 17.9877, 0.51 ) }
    dend_43 { pt3dadd( -12.7152, 27.9163, 18.6334, 0.51 ) }
    dend_43 { pt3dadd( -12.9855, 28.4502, 18.7865, 1.37 ) }
    dend_43 { pt3dadd( -13.5399, 29.4687, 19.061, 0.68 ) }
    dend_43 { pt3dadd( -14.5234, 31.16, 19.2792, 0.34 ) }
    dend_43 { pt3dadd( -17.0261, 34.7858, 19.6827, 0.34 ) }
    dend_43 { pt3dadd( -18.4578, 36.5273, 19.8967, 0.34 ) }
    dend_43 { pt3dadd( -19.8585, 38.186, 20.0453, 0.34 ) }
    dend_43 { pt3dadd( -20.6815, 39.176, 20.1356, 1.37 ) }
    dend_43 { pt3dadd( -21.4553, 40.1297, 20.223, 0.17 ) }
    dend_43 { pt3dadd( -22.0599, 40.8119, 20.2856, 0.17 ) }
    dend_43 { pt3dadd( -24.4301, 42.6, 20.3031, 0.17 ) }
    dend_43 { pt3dadd( -25.669, 43.4073, 20.1526, 0.17 ) }
    dend_43 { pt3dadd( -29.4233, 51.9587, 23.5093, 0.17 ) }
    dend_43 { pt3dadd( -31.7773, 60.4158, 28.1379, 0.17 ) }
    dend_43 { pt3dadd( -34.2919, 67.8661, 34.1925, 0.17 ) }
    dend_43 { pt3dadd( -38.2824, 75.6298, 38.9137, 0.17 ) }
    dend_43 { pt3dadd( -42.9497, 83.6085, 42.5255, 0.17 ) }
    dend_43 { pt3dadd( -49.0376, 90.1624, 46.8233, 0.17 ) }
    dend_43 { pt3dadd( -54.2336, 96.3519, 52.5835, 0.17 ) }
    dend_43 { pt3dadd( -59.3826, 103.661, 56.8918, 0.17 ) }
    dend_43 { pt3dadd( -63.6709, 111.807, 60.5978, 0.17 ) }
    dend_43 { pt3dadd( -66.9882, 120.901, 62.7864, 0.17 ) }
    dend_43 { pt3dadd( -69.6327, 130.419, 63.7317, 0.17 ) }
    dend_43 { pt3dadd( -72.3578, 139.96, 63.9066, 0.17 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 58/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -8.00391, 17.7564, 13.3452, 0.51 ) }
    dend_36 { pt3dadd( -7.36653, 18.8591, 13.5565, 0.51 ) }
    dend_36 { pt3dadd( -7.04419, 19.3627, 13.6599, 0.51 ) }
    dend_36 { pt3dadd( -6.01622, 20.8007, 13.9673, 0.51 ) }
    dend_36 { pt3dadd( -5.31428, 21.708, 14.2786, 0.51 ) }
    dend_36 { pt3dadd( -5.1811, 21.8888, 14.3365, 0.51 ) }
    dend_36 { pt3dadd( -3.27695, 24.6079, 15.162, 0.51 ) }
    dend_36 { pt3dadd( -2.80463, 25.4056, 15.3401, 0.51 ) }
    dend_36 { pt3dadd( -2.32703, 26.3476, 15.5917, 0.51 ) }
    dend_36 { pt3dadd( -1.20822, 28.525, 16.2959, 0.51 ) }
    dend_36 { pt3dadd( -0.27357, 30.2262, 16.6606, 1.71 ) }
    dend_36 { pt3dadd( -0.0601548, 30.5975, 16.7031, 0.17 ) }
    dend_36 { pt3dadd( 1.20607, 32.7868, 16.7221, 1.03 ) }
    dend_36 { pt3dadd( 3.02917, 35.9053, 16.55, 0.68 ) }
    dend_36 { pt3dadd( 4.24374, 37.811, 16.3396, 0.51 ) }
    dend_36 { pt3dadd( 6.6045, 40.9496, 15.806, 0.51 ) }
    dend_36 { pt3dadd( 7.35453, 41.7858, 15.692, 1.54 ) }
    dend_36 { pt3dadd( 8.03949, 42.4525, 15.5857, 0.17 ) }
    dend_36 { pt3dadd( 8.2185, 42.5968, 15.5555, 0.68 ) }
    dend_36 { pt3dadd( 9.8375, 43.8223, 15.0693, 0.68 ) }
    dend_36 { pt3dadd( 10.5352, 44.3657, 14.9627, 1.37 ) }
    dend_36 { pt3dadd( 10.8153, 44.6061, 15.0333, 0.17 ) }
    dend_36 { pt3dadd( 10.9826, 44.7673, 15.0845, 0.17 ) }
    dend_36 { pt3dadd( 11.079, 44.8708, 15.1174, 0.17 ) }
    dend_36 { pt3dadd( 11.7995, 45.7093, 15.3481, 0.17 ) }
    dend_36 { pt3dadd( 11.8621, 45.7924, 15.3704, 0.17 ) }
    dend_36 { pt3dadd( 12.5234, 46.7502, 15.6091, 0.17 ) }
    dend_36 { pt3dadd( 13.1036, 47.5924, 15.8085, 1.37 ) }
    dend_36 { pt3dadd( 13.8277, 48.6559, 16.0394, 0.17 ) }
    dend_36 { pt3dadd( 15.1575, 50.5636, 16.3983, 0.17 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 88/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 0.337438, 17.9188, -4.65611, 0.68 ) }
    dend_34 { pt3dadd( -0.91977, 19.5223, -4.18049, 0.68 ) }
    dend_34 { pt3dadd( -1.68431, 20.4974, -3.89125, 0.68 ) }
    dend_34 { pt3dadd( -2.11129, 21.042, -3.72972, 1.03 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 92/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.337438, 17.9188, -4.65611, 0.68 ) }
    dend_33 { pt3dadd( 2.34521, 20.726, -5.13943, 0.68 ) }
    dend_33 { pt3dadd( 4.60203, 23.2681, -5.80489, 0.68 ) }
    dend_33 { pt3dadd( 5.16669, 23.9561, -5.8291, 0.68 ) }
    dend_33 { pt3dadd( 7.03049, 25.8921, -4.9969, 0.68 ) }
    dend_33 { pt3dadd( 9.44691, 28.4021, -3.91794, 0.17 ) }
    dend_33 { pt3dadd( 13.9232, 33.0518, -1.91921, 0.17 ) }
    dend_33 { pt3dadd( 15.0883, 34.2107, -1.21279, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_33 { pt3dadd( 19.8451, 38.6069, 2.20019, 0.17 ) }
    dend_33 { pt3dadd( 26.4985, 44.2003, 7.62738, 0.17 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 26.4962, 10.2927, -15.3534, 0.17 ) }
    dend_31 { pt3dadd( 32.6554, 13.1789, -18.7322, 0.17 ) }
    dend_31 { pt3dadd( 34.5319, 14.1586, -19.5727, 0.17 ) }
    dend_31 { pt3dadd( 34.7902, 14.2972, -19.6728, 0.17 ) }
    dend_31 { pt3dadd( 38.6234, 16.379, -20.9915, 0.17 ) }
    dend_31 { pt3dadd( 43.5879, 19.082, -22.601, 1.88 ) }
    dend_31 { pt3dadd( 45.7099, 20.233, -23.2627, 0.17 ) }
    dend_31 { pt3dadd( 48.7804, 21.9103, -24.0728, 0.17 ) }
    dend_31 { pt3dadd( 50.3389, 22.7412, -24.5905, 1.37 ) }
    dend_31 { pt3dadd( 51.9068, 23.553, -25.1913, 0.17 ) }
    dend_31 { pt3dadd( 52.3246, 23.7822, -25.3685, 0.17 ) }
    dend_31 { pt3dadd( 52.4939, 23.8799, -25.4674, 0.17 ) }
    dend_31 { pt3dadd( 57.9154, 27.2286, -29.4244, 0.17 ) }
    dend_31 { pt3dadd( 60.2685, 28.8503, -31.2764, 1.71 ) }
    dend_31 { pt3dadd( 60.6714, 29.1576, -31.6637, 0.17 ) }
    dend_31 { pt3dadd( 63.6814, 31.6843, -34.8429, 0.17 ) }
    dend_31 { pt3dadd( 67.7562, 35.261, -39.173, 1.71 ) }
    dend_31 { pt3dadd( 67.884, 35.3781, -39.307, 0.17 ) }
    dend_31 { pt3dadd( 70.6876, 38.0801, -42.1688, 0.17 ) }
    dend_31 { pt3dadd( 74.3409, 41.4546, -46.3375, 1.71 ) }
    dend_31 { pt3dadd( 75.6734, 42.5453, -47.7879, 0.17 ) }
    dend_31 { pt3dadd( 77.1195, 43.589, -49.2158, 0.17 ) }
    dend_31 { pt3dadd( 78.5721, 44.5657, -50.3596, 1.71 ) }
    dend_31 { pt3dadd( 79.7199, 45.2907, -51.1963, 0.17 ) }
    dend_31 { pt3dadd( 85.9469, 48.6892, -55.2139, 0.17 ) }
    dend_31 { pt3dadd( 88.401, 50.0028, -56.5528, 0.17 ) }
    dend_31 { pt3dadd( 90.5955, 51.1725, -57.719, 1.71 ) }
    dend_31 { pt3dadd( 92.1559, 52.0279, -58.5324, 0.17 ) }
    dend_31 { pt3dadd( 98.0643, 55.2658, -61.4257, 0.17 ) }
    dend_31 { pt3dadd( 100.642, 56.6621, -62.2583, 1.71 ) }
    dend_31 { pt3dadd( 101.846, 57.3442, -61.8584, 0.17 ) }
    dend_31 { pt3dadd( 103.727, 58.5385, -60.0819, 0.17 ) }
    dend_31 { pt3dadd( 103.791, 58.586, -59.8779, 0.17 ) }
    dend_31 { pt3dadd( 103.972, 58.7287, -59.0999, 1.37 ) }
    dend_31 { pt3dadd( 107.518, 61.3824, -44.4103, 0.17 ) }
    dend_31 { pt3dadd( 108.765, 62.3209, -39.3301, 0.17 ) }
    dend_31 { pt3dadd( 109.134, 62.5874, -37.8659, 1.2 ) }
    dend_31 { pt3dadd( 115.339, 66.9774, -15.898, 0.17 ) }
    dend_31 { pt3dadd( 115.476, 67.0728, -15.4789, 0.17 ) }
    dend_31 { pt3dadd( 117.65, 68.6035, -9.09741, 0.17 ) }
    dend_31 { pt3dadd( 117.833, 68.7251, -8.64872, 1.88 ) }
    dend_31 { pt3dadd( 118.067, 68.8508, -8.01934, 0.17 ) }
    dend_31 { pt3dadd( 120.317, 70.0468, -2.54162, 0.17 ) }
    dend_31 { pt3dadd( 120.902, 70.3928, -2.53746, 1.54 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 46/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.4962, 10.2927, -15.3534, 0.34 ) }
    dend_30 { pt3dadd( 26.0979, 16.1705, -14.8378, 0.34 ) }
    dend_30 { pt3dadd( 26.1132, 18.7815, -14.6656, 0.34 ) }
    dend_30 { pt3dadd( 26.2554, 23.2917, -14.3985, 0.34 ) }
    dend_30 { pt3dadd( 26.7191, 30.4022, -14.1989, 0.68 ) }
    dend_30 { pt3dadd( 27.1133, 36.0236, -14.3685, 0.68 ) }
    dend_30 { pt3dadd( 27.8437, 46.2982, -15.0023, 0.68 ) }
    dend_30 { pt3dadd( 28.5503, 54.0211, -15.9307, 0.68 ) }
    dend_30 { pt3dadd( 28.5898, 54.2869, -15.9759, 0.68 ) }
    dend_30 { pt3dadd( 30.0815, 60.5806, -17.1373, 0.68 ) }
    dend_30 { pt3dadd( 31.828, 66.1904, -18.1925, 0.34 ) }
    dend_30 { pt3dadd( 34.1838, 72.7528, -19.4369, 0.34 ) }
    dend_30 { pt3dadd( 35.7701, 76.7874, -20.0867, 0.34 ) }
    dend_30 { pt3dadd( 40.2503, 87.4997, -21.56, 0.34 ) }
    dend_30 { pt3dadd( 45.4441, 99.372, -22.7284, 0.34 ) }
    dend_30 { pt3dadd( 46.2926, 101.208, -22.7966, 2.05 ) }
    dend_30 { pt3dadd( 47.0461, 102.742, -22.7711, 0.17 ) }
    dend_30 { pt3dadd( 50.1443, 108.718, -22.6138, 0.17 ) }
    dend_30 { pt3dadd( 50.5155, 109.476, -22.5625, 0.68 ) }
    dend_30 { pt3dadd( 50.7802, 110.136, -22.4476, 0.17 ) }
    dend_30 { pt3dadd( 52.0288, 114.473, -21.7098, 0.17 ) }
    dend_30 { pt3dadd( 52.1493, 115.087, -21.6104, 1.54 ) }
    dend_30 { pt3dadd( 52.2942, 116.085, -21.4759, 0.17 ) }
    dend_30 { pt3dadd( 52.6562, 119.936, -21.0464, 0.17 ) }
    dend_30 { pt3dadd( 52.8373, 122.152, -20.8278, 1.54 ) }
    dend_30 { pt3dadd( 52.8887, 123.003, -20.7506, 0.17 ) }
    dend_30 { pt3dadd( 53.1867, 129.784, -20.1942, 0.17 ) }
    dend_30 { pt3dadd( 53.2688, 131.72, -20.0316, 1.2 ) }
    dend_30 { pt3dadd( 53.3155, 132.982, -19.9219, 0.17 ) }
    dend_30 { pt3dadd( 53.4831, 137.275, -19.5063, 0.17 ) }
    dend_30 { pt3dadd( 53.5485, 139.301, -19.2752, 1.88 ) }
    dend_30 { pt3dadd( 53.5701, 140.015, -19.1823, 0.17 ) }
    dend_30 { pt3dadd( 53.7282, 144.21, -18.5528, 0.17 ) }
    dend_30 { pt3dadd( 53.7855, 146.182, -18.2128, 0.17 ) }
    dend_30 { pt3dadd( 53.9472, 151.431, -17.3079, 0.17 ) }
    dend_30 { pt3dadd( 54.0531, 155.577, -16.5917, 0.17 ) }
    dend_30 { pt3dadd( 54.0912, 156.202, -16.4852, 1.37 ) }
    dend_30 { pt3dadd( 54.2779, 157.578, -16.2572, 0.17 ) }
    dend_30 { pt3dadd( 55.3402, 162.868, -15.4033, 0.17 ) }
    dend_30 { pt3dadd( 56.0017, 165.446, -14.9964, 1.2 ) }
    dend_30 { pt3dadd( 56.6044, 167.134, -14.7408, 0.17 ) }
    dend_30 { pt3dadd( 58.2437, 170.556, -14.2498, 0.17 ) }
    dend_30 { pt3dadd( 61.4518, 176.325, -13.4506, 0.17 ) }
    dend_30 { pt3dadd( 61.7999, 176.85, -13.3815, 1.54 ) }
    dend_30 { pt3dadd( 62.1814, 177.311, -13.3257, 0.17 ) }
    dend_30 { pt3dadd( 64.7508, 179.938, -13.0333, 0.17 ) }
    dend_30 { pt3dadd( 67.5547, 182.359, -12.7919, 0.17 ) }
    dend_30 { pt3dadd( 67.7149, 182.484, -12.7803, 0.17 ) }
    dend_30 { pt3dadd( 68.1784, 182.827, -12.7504, 1.88 ) }
    dend_30 { pt3dadd( 68.8886, 183.357, -12.7038, 0.17 ) }
    dend_30 { pt3dadd( 71.8532, 185.54, -12.5143, 0.17 ) }
    dend_30 { pt3dadd( 74.4123, 187.48, -12.3408, 0.17 ) }
    dend_30 { pt3dadd( 76.3603, 188.949, -12.2103, 1.54 ) }
    dend_30 { pt3dadd( 76.5125, 189.067, -12.1996, 1.54 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 0/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 21.3516, 8.22869, 11.079, 0.68 ) }
    dend_20 { pt3dadd( 21.8096, 9.8297, 10.9969, 0.68 ) }
    dend_20 { pt3dadd( 22.1734, 11.1018, 10.9317, 0.68 ) }
    dend_20 { pt3dadd( 22.6333, 12.7094, 10.8494, 0.68 ) }
    dend_20 { pt3dadd( 23.0169, 14.0505, 10.7807, 0.68 ) }
    dend_20 { pt3dadd( 23.4947, 15.7209, 10.6951, 0.68 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 6/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 21.3516, 8.22869, 11.079, 0.68 ) }
    dend_19 { pt3dadd( 24.244, 8.44122, 12.3645, 0.68 ) }
    dend_19 { pt3dadd( 26.8913, 8.63576, 13.5411, 0.68 ) }
    dend_19 { pt3dadd( 31.7128, 8.99004, 15.6839, 0.68 ) }
    dend_19 { pt3dadd( 35.7081, 9.28362, 17.4596, 0.68 ) }
    dend_19 { pt3dadd( 45.9618, 11.0015, 21.8939, 0.68 ) }
    // Section: dend_16, id: dend_16, parent: dend_0 (entry count 12/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 4.20564, -19.0964, -14.9233, 0.17 ) }
    dend_16 { pt3dadd( 11.3317, -18.2335, -1.75223, 0.17 ) }
    dend_16 { pt3dadd( 11.4826, -18.2218, -1.53398, 0.17 ) }
    dend_16 { pt3dadd( 12.9768, -18.1576, -0.0620682, 0.17 ) }
    dend_16 { pt3dadd( 14.1951, -18.2371, 0.475421, 0.17 ) }
    dend_16 { pt3dadd( 15.7841, -18.4499, 0.809649, 1.37 ) }
    dend_16 { pt3dadd( 18.0944, -18.8668, 1.02717, 0.17 ) }
    dend_16 { pt3dadd( 20.5914, -19.5368, 0.0810087, 0.68 ) }
    dend_16 { pt3dadd( 21.9499, -19.8881, -0.42768, 0.17 ) }
    dend_16 { pt3dadd( 24.9727, -20.6786, -1.55037, 0.86 ) }
    dend_16 { pt3dadd( 25.4531, -20.7562, -1.72309, 0.17 ) }
    dend_16 { pt3dadd( 26.0791, -20.7944, -1.93329, 0.17 ) }
    dend_16 { pt3dadd( 27.6974, -20.7331, -2.44703, 0.17 ) }
    dend_16 { pt3dadd( 29.9924, -20.5347, -3.12977, 1.2 ) }
    dend_16 { pt3dadd( 30.8669, -20.429, -3.3923, 1.2 ) }
    dend_16 { pt3dadd( 34.8575, -19.7398, -4.60637, 0.17 ) }
    dend_16 { pt3dadd( 39.3774, -19.0194, -5.97673, 0.68 ) }
    dend_16 { pt3dadd( 40.9834, -18.7924, -6.4614, 0.17 ) }
    dend_16 { pt3dadd( 43.3363, -18.5552, -7.16402, 0.17 ) }
    dend_16 { pt3dadd( 44.9168, -18.4976, -7.62803, 1.37 ) }
    dend_16 { pt3dadd( 46.029, -18.5314, -7.94877, 0.17 ) }
    dend_16 { pt3dadd( 48.8962, -18.8861, -8.75475, 0.17 ) }
    dend_16 { pt3dadd( 49.9195, -19.0475, -9.03969, 1.88 ) }
    dend_16 { pt3dadd( 51.3251, -19.2724, -9.43082, 0.17 ) }
    dend_16 { pt3dadd( 54.4185, -19.696, -9.71783, 0.17 ) }
    dend_16 { pt3dadd( 57.4568, -20.0574, -9.63519, 0.17 ) }
    dend_16 { pt3dadd( 59.4401, -20.2303, -9.43433, 2.05 ) }
    dend_16 { pt3dadd( 60.4127, -20.3004, -9.27861, 0.17 ) }
    dend_16 { pt3dadd( 64.5616, -20.5911, -8.14204, 0.17 ) }
    dend_16 { pt3dadd( 72.9095, -20.9458, -5.3733, 2.05 ) }
    dend_16 { pt3dadd( 73.2905, -20.9556, -5.22372, 0.17 ) }
    dend_16 { pt3dadd( 76.1987, -20.9714, -3.8534, 0.17 ) }
    dend_16 { pt3dadd( 78.0467, -20.9754, -2.94045, 1.71 ) }
    dend_16 { pt3dadd( 83.2092, -21.0233, -0.338917, 0.17 ) }
    dend_16 { pt3dadd( 86.8586, -21.0254, 1.48929, 0.17 ) }
    dend_16 { pt3dadd( 87.0997, -21.0182, 1.57638, 0.86 ) }
    dend_16 { pt3dadd( 90.7304, -20.8485, 2.79906, 0.17 ) }
    dend_16 { pt3dadd( 93.1101, -20.6778, 3.54708, 0.17 ) }
    dend_16 { pt3dadd( 93.2831, -20.6572, 3.58032, 0.17 ) }
    dend_16 { pt3dadd( 94.2051, -20.5499, 3.70015, 1.88 ) }
    dend_16 { pt3dadd( 95.6526, -20.5179, 4.01042, 0.17 ) }
    dend_16 { pt3dadd( 98.0746, -20.6174, 4.46908, 0.17 ) }
    dend_16 { pt3dadd( 98.6501, -20.6583, 4.55324, 1.37 ) }
    dend_16 { pt3dadd( 100.267, -20.7761, 5.35241, 0.34 ) }
    dend_16 { pt3dadd( 104.457, -21.1767, 8.00366, 0.17 ) }
    dend_16 { pt3dadd( 106.403, -21.3895, 9.37463, 0.17 ) }
    dend_16 { pt3dadd( 108.28, -21.6207, 10.8641, 0.17 ) }
    dend_16 { pt3dadd( 109.145, -21.7316, 11.6347, 2.05 ) }
    dend_16 { pt3dadd( 117.107, -22.7678, 19.1804, 0.17 ) }
    dend_16 { pt3dadd( 117.619, -22.8334, 19.7072, 1.71 ) }
    dend_16 { pt3dadd( 127.519, -23.5279, 23.8445, 1.71 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 63/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 4.20564, -19.0964, -14.9233, 1.2 ) }
    dend_1 { pt3dadd( 3.79807, -21.0582, -14.2033, 1.2 ) }
    dend_1 { pt3dadd( 3.08919, -24.599, -12.9862, 0.68 ) }
    dend_1 { pt3dadd( 2.55407, -27.3558, -12.076, 2.22 ) }
    dend_1 { pt3dadd( 2.34915, -28.8365, -11.6314, 0.86 ) }
    dend_1 { pt3dadd( 2.25361, -29.5268, -11.4241, 0.68 ) }
    dend_1 { pt3dadd( 1.95354, -31.6951, -10.7731, 0.68 ) }
    dend_1 { pt3dadd( 1.82761, -32.5331, -10.5077, 1.54 ) }
    dend_1 { pt3dadd( 1.81219, -32.6742, -10.4679, 1.54 ) }
    dend_1 { pt3dadd( 1.7169, -34.9102, -10.3168, 1.54 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 39.2524, 8.96767, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 53.8321, 12.494, -0.662165, 0.17 ) }
    axon_1 { pt3dadd( 68.4117, 16.0203, -0.662165, 0.17 ) }
    // Section: dend_56, id: dend_56, parent: dend_50 (entry count 76/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -20.6095, -4.37951, 0.814977, 0.86 ) }
    dend_56 { pt3dadd( -21.6462, -5.88934, -0.756307, 0.86 ) }
    dend_56 { pt3dadd( -22.9213, -7.32979, -2.59107, 0.68 ) }
    dend_56 { pt3dadd( -24.6117, -8.91732, -4.87191, 0.68 ) }
    dend_56 { pt3dadd( -30.0397, -13.3835, -11.8754, 0.68 ) }
    dend_56 { pt3dadd( -32.6621, -15.2257, -15.0473, 0.68 ) }
    dend_56 { pt3dadd( -35.2417, -16.6875, -18.0112, 0.68 ) }
    dend_56 { pt3dadd( -38.2998, -17.7655, -21.2062, 1.2 ) }
    dend_56 { pt3dadd( -39.4739, -17.9149, -22.2679, 1.2 ) }
    dend_56 { pt3dadd( -40.1369, -17.8788, -22.7047, 0.68 ) }
    dend_56 { pt3dadd( -42.3219, -17.491, -23.4988, 0.68 ) }
    dend_56 { pt3dadd( -45.6441, -16.6773, -24.5936, 0.51 ) }
    dend_56 { pt3dadd( -47.3498, -16.2864, -24.9096, 0.51 ) }
    dend_56 { pt3dadd( -50.4127, -15.8685, -25.0773, 1.88 ) }
    dend_56 { pt3dadd( -53.5553, -15.7246, -25.2052, 1.88 ) }
    dend_56 { pt3dadd( -56.0331, -15.9316, -25.2489, 1.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 92/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -20.6095, -4.37951, 0.814977, 0.86 ) }
    dend_51 { pt3dadd( -22.6127, -3.50451, -0.871929, 0.86 ) }
    dend_51 { pt3dadd( -25.604, -2.45104, -3.35768, 0.86 ) }
    dend_51 { pt3dadd( -27.7875, -1.74678, -5.06006, 0.86 ) }
    dend_51 { pt3dadd( -33.9245, 0.296854, -9.29765, 0.86 ) }
    dend_51 { pt3dadd( -35.9745, 0.99572, -10.5927, 0.86 ) }
    dend_51 { pt3dadd( -41.8942, 3.04518, -14.2348, 0.86 ) }
    dend_51 { pt3dadd( -43.2279, 3.50738, -15.0461, 0.86 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_51 { pt3dadd( -45.3717, 4.23908, -16.2902, 0.86 ) }
    dend_51 { pt3dadd( -49.0702, 5.46941, -18.3074, 0.86 ) }
    dend_51 { pt3dadd( -52.002, 6.37914, -19.856, 0.51 ) }
    dend_51 { pt3dadd( -55.2668, 7.40217, -21.4915, 0.34 ) }
    dend_51 { pt3dadd( -58.8408, 8.58879, -23.0061, 0.17 ) }
    dend_51 { pt3dadd( -61.3848, 9.3591, -24.0555, 0.17 ) }
    dend_51 { pt3dadd( -63.6421, 9.89049, -24.9622, 2.05 ) }
    dend_51 { pt3dadd( -65.372, 10.1388, -25.5419, 0.17 ) }
    dend_51 { pt3dadd( -67.0688, 10.2941, -25.8376, 0.17 ) }
    dend_51 { pt3dadd( -68.1348, 10.3421, -25.8587, 0.68 ) }
    dend_51 { pt3dadd( -70.7243, 10.3457, -25.6826, 0.34 ) }
    dend_51 { pt3dadd( -71.5519, 10.322, -25.6326, 0.17 ) }
    dend_51 { pt3dadd( -73.7108, 10.2396, -25.4359, 1.88 ) }
    dend_51 { pt3dadd( -74.7356, 10.1543, -25.258, 0.17 ) }
    dend_51 { pt3dadd( -76.1795, 9.97853, -24.915, 0.17 ) }
    dend_51 { pt3dadd( -77.7666, 9.71714, -24.4695, 1.2 ) }
    dend_51 { pt3dadd( -78.7011, 9.54684, -24.1717, 0.17 ) }
    dend_51 { pt3dadd( -81.7289, 9.0417, -23.1603, 0.17 ) }
    dend_51 { pt3dadd( -84.1503, 8.64766, -22.0676, 1.71 ) }
    dend_51 { pt3dadd( -85.2054, 8.47863, -21.5117, 0.17 ) }
    dend_51 { pt3dadd( -86.6031, 8.29756, -20.6915, 0.17 ) }
    dend_51 { pt3dadd( -87.8708, 8.20901, -19.919, 2.39 ) }
    dend_51 { pt3dadd( -89.5257, 8.12876, -19.0024, 0.68 ) }
    dend_51 { pt3dadd( -93.0276, 7.97361, -17.3703, 0.17 ) }
    dend_51 { pt3dadd( -94.106, 7.91858, -16.959, 0.17 ) }
    dend_51 { pt3dadd( -95.3146, 7.83732, -16.4943, 1.2 ) }
    dend_51 { pt3dadd( -97.4291, 7.64725, -15.7045, 0.17 ) }
    dend_51 { pt3dadd( -100.442, 7.32454, -14.7061, 0.17 ) }
    dend_51 { pt3dadd( -102.083, 7.14823, -14.3282, 2.22 ) }
    dend_51 { pt3dadd( -102.632, 7.09859, -14.3001, 2.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 30/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -89.8703, 43.4055, -35.7137, 0.17 ) }
    dend_49 { pt3dadd( -91.0781, 45.3132, -34.9103, 0.17 ) }
    dend_49 { pt3dadd( -91.8199, 46.3863, -34.4586, 0.17 ) }
    dend_49 { pt3dadd( -94.0893, 49.5537, -33.1248, 0.17 ) }
    dend_49 { pt3dadd( -94.422, 49.9805, -32.9443, 0.17 ) }
    dend_49 { pt3dadd( -98.2347, 54.8272, -30.8834, 0.17 ) }
    dend_49 { pt3dadd( -100.331, 57.4652, -29.7592, 1.2 ) }
    dend_49 { pt3dadd( -100.998, 58.3234, -29.3863, 0.17 ) }
    dend_49 { pt3dadd( -101.149, 58.5209, -29.3083, 0.17 ) }
    dend_49 { pt3dadd( -107.559, 66.9217, -26.2754, 0.17 ) }
    dend_49 { pt3dadd( -109.626, 69.7248, -25.3328, 1.54 ) }
    dend_49 { pt3dadd( -110.584, 71.071, -24.9185, 0.17 ) }
    dend_49 { pt3dadd( -113.087, 74.785, -23.8397, 0.17 ) }
    dend_49 { pt3dadd( -114.762, 77.4071, -23.1909, 1.2 ) }
    dend_49 { pt3dadd( -115.47, 78.624, -22.9438, 0.17 ) }
    dend_49 { pt3dadd( -115.574, 78.8449, -22.9181, 0.17 ) }
    dend_49 { pt3dadd( -116.355, 80.6123, -22.7435, 0.17 ) }
    dend_49 { pt3dadd( -117.1, 82.3931, -22.5496, 1.37 ) }
    dend_49 { pt3dadd( -118.35, 85.0021, -22.1934, 0.17 ) }
    dend_49 { pt3dadd( -120.163, 88.4408, -21.8157, 0.17 ) }
    dend_49 { pt3dadd( -120.293, 88.6657, -21.8046, 0.17 ) }
    dend_49 { pt3dadd( -121.108, 89.9594, -21.802, 1.03 ) }
    dend_49 { pt3dadd( -121.549, 90.6295, -21.945, 0.17 ) }
    dend_49 { pt3dadd( -123.282, 93.1062, -22.6992, 0.17 ) }
    dend_49 { pt3dadd( -125.796, 96.5274, -23.881, 1.71 ) }
    dend_49 { pt3dadd( -127.049, 98.1954, -24.4501, 0.17 ) }
    dend_49 { pt3dadd( -127.2, 98.3971, -24.5129, 0.17 ) }
    dend_49 { pt3dadd( -132.956, 106.244, -26.6912, 0.17 ) }
    dend_49 { pt3dadd( -134.392, 108.274, -27.1305, 1.37 ) }
    dend_49 { pt3dadd( -134.95, 109.117, -27.2859, 0.17 ) }
    dend_49 { pt3dadd( -137.239, 112.612, -27.6939, 0.17 ) }
    dend_49 { pt3dadd( -137.928, 113.687, -27.7723, 1.54 ) }
    dend_49 { pt3dadd( -139.095, 115.418, -27.7226, 0.17 ) }
    dend_49 { pt3dadd( -140.526, 117.329, -27.3342, 0.17 ) }
    dend_49 { pt3dadd( -142.555, 119.875, -26.7585, 1.88 ) }
    dend_49 { pt3dadd( -143.699, 121.228, -26.4066, 0.17 ) }
    dend_49 { pt3dadd( -145.58, 123.278, -25.7964, 0.17 ) }
    dend_49 { pt3dadd( -147.598, 125.293, -25.0975, 1.54 ) }
    dend_49 { pt3dadd( -148.512, 126.126, -24.7638, 0.17 ) }
    dend_49 { pt3dadd( -151.105, 128.341, -23.7555, 0.17 ) }
    dend_49 { pt3dadd( -153.068, 129.937, -22.9239, 1.71 ) }
    dend_49 { pt3dadd( -154.692, 131.226, -22.2827, 0.17 ) }
    dend_49 { pt3dadd( -156.87, 132.933, -21.4929, 0.17 ) }
    dend_49 { pt3dadd( -158.145, 133.854, -21.1154, 2.22 ) }
    dend_49 { pt3dadd( -159.641, 134.855, -20.7146, 0.17 ) }
    dend_49 { pt3dadd( -162.02, 136.312, -20.1493, 0.17 ) }
    dend_49 { pt3dadd( -162.63, 136.675, -20.0093, 1.88 ) }
    dend_49 { pt3dadd( -164.623, 137.844, -19.56, 0.17 ) }
    dend_49 { pt3dadd( -169.886, 140.867, -18.4041, 0.17 ) }
    dend_49 { pt3dadd( -171.59, 141.822, -18.0409, 1.03 ) }
    dend_49 { pt3dadd( -173.782, 143.002, -17.4915, 0.17 ) }
    dend_49 { pt3dadd( -178.25, 145.302, -16.2624, 0.17 ) }
    dend_49 { pt3dadd( -179.827, 146.107, -15.7852, 2.05 ) }
    dend_49 { pt3dadd( -182.429, 147.3, -14.6807, 0.17 ) }
    dend_49 { pt3dadd( -186.078, 148.676, -12.746, 0.17 ) }
    dend_49 { pt3dadd( -189.248, 149.46, -10.8922, 1.03 ) }
    dend_49 { pt3dadd( -190.415, 149.559, -10.1723, 0.17 ) }
    dend_49 { pt3dadd( -192.137, 149.501, -9.05218, 0.17 ) }
    dend_49 { pt3dadd( -198.542, 148.833, -4.84168, 0.17 ) }
    dend_49 { pt3dadd( -201.648, 148.326, -2.86695, 0.17 ) }
    dend_49 { pt3dadd( -204.475, 147.818, -1.19979, 0.17 ) }
    dend_49 { pt3dadd( -211.275, 146.803, 2.0572, 0.17 ) }
    dend_49 { pt3dadd( -211.767, 146.768, 2.22273, 1.71 ) }
    dend_49 { pt3dadd( -212.79, 146.794, 2.40292, 0.17 ) }
    dend_49 { pt3dadd( -215.463, 147.428, 2.22436, 0.17 ) }
    dend_49 { pt3dadd( -217.629, 148.314, 1.85029, 0.17 ) }
    dend_49 { pt3dadd( -221.132, 149.947, 1.29588, 0.17 ) }
    dend_49 { pt3dadd( -227.198, 152.805, 0.242198, 1.37 ) }
    dend_49 { pt3dadd( -228.619, 153.411, 0.0661754, 0.17 ) }
    dend_49 { pt3dadd( -232.85, 154.938, -0.227615, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_49 { pt3dadd( -238.066, 156.372, -0.103777, 0.17 ) }
    dend_49 { pt3dadd( -243.637, 157.59, 0.359879, 1.03 ) }
    dend_49 { pt3dadd( -245.203, 157.844, 0.64719, 0.17 ) }
    dend_49 { pt3dadd( -246.434, 157.909, 1.02043, 0.17 ) }
    dend_49 { pt3dadd( -251.05, 157.896, 2.45635, 0.17 ) }
    dend_49 { pt3dadd( -253.909, 157.477, 3.64337, 1.03 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 6/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -89.8703, 43.4055, -35.7137, 0.34 ) }
    dend_46 { pt3dadd( -91.7905, 43.1174, -36.8497, 0.34 ) }
    dend_46 { pt3dadd( -93.9529, 42.8622, -37.9735, 0.34 ) }
    dend_46 { pt3dadd( -94.5849, 42.7628, -38.2957, 0.34 ) }
    dend_46 { pt3dadd( -94.7944, 42.7232, -38.3969, 0.34 ) }
    dend_46 { pt3dadd( -97.4093, 42.2465, -39.9071, 0.34 ) }
    dend_46 { pt3dadd( -99.4061, 41.8351, -41.1196, 0.34 ) }
    dend_46 { pt3dadd( -101.28, 41.3897, -42.1857, 1.03 ) }
    dend_46 { pt3dadd( -102.199, 41.1245, -42.6953, 0.68 ) }
    dend_46 { pt3dadd( -103.428, 40.7604, -43.5312, 0.86 ) }
    dend_46 { pt3dadd( -105.567, 40.0679, -45.2508, 0.17 ) }
    dend_46 { pt3dadd( -107.665, 39.2758, -47.1764, 0.17 ) }
    dend_46 { pt3dadd( -108.461, 38.9638, -47.927, 1.37 ) }
    dend_46 { pt3dadd( -109.587, 38.5381, -48.8858, 0.17 ) }
    dend_46 { pt3dadd( -113.329, 37.2575, -51.8452, 0.17 ) }
    dend_46 { pt3dadd( -113.468, 37.215, -51.9385, 0.17 ) }
    dend_46 { pt3dadd( -114.746, 36.8787, -52.5773, 1.03 ) }
    dend_46 { pt3dadd( -115.539, 36.7624, -52.8851, 0.34 ) }
    dend_46 { pt3dadd( -117.55, 36.7228, -53.4839, 0.34 ) }
    dend_46 { pt3dadd( -117.878, 36.7454, -53.5491, 0.34 ) }
    dend_46 { pt3dadd( -120.166, 36.8911, -53.7571, 0.17 ) }
    dend_46 { pt3dadd( -120.913, 36.9366, -53.8461, 2.05 ) }
    dend_46 { pt3dadd( -123.155, 37.1195, -54.1487, 0.17 ) }
    dend_46 { pt3dadd( -125.044, 37.2381, -54.3969, 0.17 ) }
    dend_46 { pt3dadd( -125.386, 37.2513, -54.4403, 0.17 ) }
    dend_46 { pt3dadd( -129.641, 37.3447, -54.9228, 0.17 ) }
    dend_46 { pt3dadd( -131.215, 37.3922, -55.2058, 1.03 ) }
    dend_46 { pt3dadd( -132.777, 37.4222, -55.5593, 0.17 ) }
    dend_46 { pt3dadd( -135.416, 37.4286, -56.2372, 0.17 ) }
    dend_46 { pt3dadd( -137.278, 37.3834, -56.7461, 0.17 ) }
    dend_46 { pt3dadd( -139.506, 37.3936, -57.5177, 1.54 ) }
    dend_46 { pt3dadd( -142.945, 37.5149, -59.014, 0.17 ) }
    dend_46 { pt3dadd( -144.762, 37.5559, -59.9346, 0.17 ) }
    dend_46 { pt3dadd( -145.938, 37.5663, -60.6216, 0.86 ) }
    dend_46 { pt3dadd( -146.763, 37.5643, -61.1668, 0.17 ) }
    dend_46 { pt3dadd( -149.203, 37.5685, -63.3036, 0.17 ) }
    dend_46 { pt3dadd( -149.736, 37.5594, -63.8346, 1.37 ) }
    dend_46 { pt3dadd( -149.989, 37.5651, -64.1133, 0.17 ) }
    dend_46 { pt3dadd( -150.093, 37.5727, -64.2365, 0.17 ) }
    dend_46 { pt3dadd( -150.73, 37.6455, -65.0365, 0.17 ) }
    dend_46 { pt3dadd( -153.946, 38.019, -69.0815, 0.17 ) }
    dend_46 { pt3dadd( -155.086, 38.1447, -70.5523, 1.37 ) }
    dend_46 { pt3dadd( -157.941, 38.4968, -74.2787, 0.17 ) }
    dend_46 { pt3dadd( -158.967, 38.6239, -75.6226, 0.17 ) }
    dend_46 { pt3dadd( -160.971, 38.8764, -78.2091, 0.17 ) }
    dend_46 { pt3dadd( -161.94, 39.007, -79.4367, 1.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_36 (entry count 52/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 15.1575, 50.5636, 16.3983, 0.17 ) }
    dend_42 { pt3dadd( 14.0551, 52.6391, 19.4838, 0.17 ) }
    dend_42 { pt3dadd( 13.6961, 53.7285, 20.7892, 0.68 ) }
    dend_42 { pt3dadd( 12.7423, 57.8711, 25.1408, 0.68 ) }
    dend_42 { pt3dadd( 12.101, 60.6567, 28.0669, 0.68 ) }
    dend_42 { pt3dadd( 11.8174, 61.8883, 29.3606, 0.51 ) }
    dend_42 { pt3dadd( 11.5534, 63.0349, 30.5651, 0.51 ) }
    dend_42 { pt3dadd( 11.4158, 64.6139, 31.6781, 0.51 ) }
    dend_42 { pt3dadd( 11.4345, 64.8721, 31.8161, 0.51 ) }
    dend_42 { pt3dadd( 10.5202, 71.7408, 37.0681, 0.51 ) }
    dend_42 { pt3dadd( 8.49013, 77.4888, 43.2679, 0.51 ) }
    dend_42 { pt3dadd( 5.57438, 83.0981, 49.2373, 0.51 ) }
    dend_42 { pt3dadd( 2.08419, 88.0534, 55.4712, 0.51 ) }
    dend_42 { pt3dadd( -1.79135, 93.1718, 61.3347, 0.51 ) }
    dend_42 { pt3dadd( -5.25028, 99.5272, 66.1559, 0.51 ) }
    dend_42 { pt3dadd( -8.34015, 106.438, 70.4332, 0.51 ) }
    dend_42 { pt3dadd( -12.1067, 112.495, 75.4053, 0.51 ) }
    dend_42 { pt3dadd( -16.2872, 118.9, 79.5407, 0.51 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 70/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 15.1575, 50.5636, 16.3983, 0.17 ) }
    dend_37 { pt3dadd( 17.262, 52.8168, -1.41985, 0.17 ) }
    dend_37 { pt3dadd( 17.2808, 52.8369, -1.57891, 0.17 ) }
    dend_37 { pt3dadd( 17.5419, 53.1164, -3.78967, 2.22 ) }
    dend_37 { pt3dadd( 17.6616, 53.2447, -4.80386, 2.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_20 (entry count 75/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 23.4947, 15.7209, 10.6951, 0.68 ) }
    dend_28 { pt3dadd( 24.5744, 16.8313, 9.43261, 0.68 ) }
    dend_28 { pt3dadd( 24.7152, 17.0333, 9.24334, 1.88 ) }
    dend_28 { pt3dadd( 26.2156, 20.7658, 6.83275, 0.17 ) }
    dend_28 { pt3dadd( 27.0047, 23.4877, 5.26307, 0.51 ) }
    dend_28 { pt3dadd( 27.607, 25.9054, 3.95919, 0.51 ) }
    dend_28 { pt3dadd( 28.531, 29.615, 1.95851, 0.51 ) }
    dend_28 { pt3dadd( 29.2209, 32.8959, 0.210699, 1.03 ) }
    dend_28 { pt3dadd( 30.0928, 38.1421, -2.29395, 1.03 ) }
    dend_28 { pt3dadd( 30.365, 41.0956, -3.40736, 1.03 ) }
    dend_28 { pt3dadd( 30.3821, 42.548, -3.95452, 0.17 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 86/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 23.4947, 15.7209, 10.6951, 0.17 ) }
    dend_21 { pt3dadd( 24.7817, 15.6575, 11.7214, 0.17 ) }
    dend_21 { pt3dadd( 26.7269, 15.5617, 13.2725, 0.17 ) }
    dend_21 { pt3dadd( 28.1593, 15.4911, 14.4147, 0.51 ) }
    dend_21 { pt3dadd( 31.1579, 15.3433, 16.8059, 0.51 ) }
    dend_21 { pt3dadd( 36.3918, 15.0854, 20.9795, 0.51 ) }
    dend_21 { pt3dadd( 36.5452, 15.0778, 21.1018, 0.51 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 1.7169, -34.9102, -10.3168, 1.54 ) }
    dend_3 { pt3dadd( 1.92444, -35.6118, -10.4487, 1.54 ) }
    dend_3 { pt3dadd( 2.23583, -36.6645, -10.6467, 1.03 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 96/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 1.7169, -34.9102, -10.3168, 0.17 ) }
    dend_2 { pt3dadd( 1.75265, -35.9061, -7.92935, 0.17 ) }
    dend_2 { pt3dadd( 1.51168, -36.7812, -6.11637, 0.17 ) }
    dend_2 { pt3dadd( 1.43898, -36.9681, -5.79554, 1.71 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 1.09223, -37.641, -4.63813, 0.17 ) }
    dend_2 { pt3dadd( -1.39803, -41.112, 1.76927, 0.17 ) }
    dend_2 { pt3dadd( -3.56289, -43.8573, 6.69702, 0.17 ) }
    dend_2 { pt3dadd( -4.80278, -45.1801, 9.00475, 0.17 ) }
    dend_2 { pt3dadd( -5.90546, -46.3091, 10.8583, 0.17 ) }
    dend_2 { pt3dadd( -8.93502, -49.5541, 15.6422, 0.17 ) }
    dend_2 { pt3dadd( -11.2033, -52.1792, 19.0065, 0.17 ) }
    dend_2 { pt3dadd( -12.2567, -53.435, 20.3463, 0.17 ) }
    dend_2 { pt3dadd( -12.9615, -54.3972, 21.344, 0.17 ) }
    dend_2 { pt3dadd( -13.8142, -55.6774, 22.7555, 0.17 ) }
    dend_2 { pt3dadd( -15.0789, -57.8111, 24.9731, 0.17 ) }
    dend_2 { pt3dadd( -16.2246, -61.1724, 26.9742, 0.17 ) }
    dend_2 { pt3dadd( -21.9317, -65.4181, 33.7851, 0.17 ) }
    dend_2 { pt3dadd( -29.2467, -67.7626, 39.9478, 0.17 ) }
    dend_2 { pt3dadd( -36.6714, -70.0082, 46.0155, 0.17 ) }
    dend_2 { pt3dadd( -43.1443, -72.8209, 52.8839, 0.17 ) }
    dend_2 { pt3dadd( -50.3727, -75.3233, 59.0867, 0.17 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 17/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -56.0331, -15.9316, -25.2489, 0.17 ) }
    dend_60 { pt3dadd( -56.1704, -15.8517, -25.2955, 0.17 ) }
    dend_60 { pt3dadd( -57.1317, -15.2088, -25.7037, 0.17 ) }
    dend_60 { pt3dadd( -57.863, -14.7579, -26.0023, 0.17 ) }
    dend_60 { pt3dadd( -59.6509, -13.7403, -26.6891, 1.37 ) }
    dend_60 { pt3dadd( -60.9874, -13.0612, -27.1659, 1.37 ) }
    dend_60 { pt3dadd( -63.462, -11.9616, -27.9708, 0.17 ) }
    dend_60 { pt3dadd( -65.0039, -11.3437, -28.4427, 0.17 ) }
    dend_60 { pt3dadd( -66.4719, -10.8611, -28.9422, 0.17 ) }
    dend_60 { pt3dadd( -67.2526, -10.7028, -29.2009, 1.03 ) }
    dend_60 { pt3dadd( -68.1661, -10.6651, -29.6617, 1.03 ) }
    dend_60 { pt3dadd( -69.6611, -10.8105, -30.5351, 0.17 ) }
    dend_60 { pt3dadd( -70.5274, -11.04, -31.148, 0.17 ) }
    dend_60 { pt3dadd( -72.8996, -12.0183, -33.1025, 2.22 ) }
    dend_60 { pt3dadd( -74.2913, -12.7177, -34.3924, 2.22 ) }
    dend_60 { pt3dadd( -78.2692, -15.0145, -38.1603, 0.17 ) }
    dend_60 { pt3dadd( -79.6702, -15.9779, -39.6381, 0.17 ) }
    dend_60 { pt3dadd( -81.9805, -17.7529, -42.0998, 0.17 ) }
    dend_60 { pt3dadd( -82.8603, -18.5162, -42.9668, 1.88 ) }
    dend_60 { pt3dadd( -82.9743, -18.6348, -43.0657, 1.88 ) }
    dend_60 { pt3dadd( -84.4756, -20.4448, -44.2913, 1.2 ) }
    dend_60 { pt3dadd( -86.5405, -23.3154, -45.5891, 0.34 ) }
    dend_60 { pt3dadd( -88.0351, -25.5767, -46.4376, 0.34 ) }
    dend_60 { pt3dadd( -89.6416, -28.3436, -47.1773, 2.05 ) }
    dend_60 { pt3dadd( -90.9005, -30.7252, -47.6953, 0.51 ) }
    dend_60 { pt3dadd( -92.4271, -33.8347, -48.2271, 0.51 ) }
    dend_60 { pt3dadd( -93.9295, -37.1293, -48.6209, 0.17 ) }
    dend_60 { pt3dadd( -95.1943, -39.8774, -48.7707, 0.17 ) }
    dend_60 { pt3dadd( -96.8012, -43.359, -48.9081, 0.17 ) }
    dend_60 { pt3dadd( -97.7359, -45.1463, -48.9377, 1.54 ) }
    dend_60 { pt3dadd( -98.4669, -46.2897, -48.9069, 1.54 ) }
    dend_60 { pt3dadd( -99.6082, -47.7965, -48.7039, 0.17 ) }
    dend_60 { pt3dadd( -101.082, -49.471, -48.3925, 0.17 ) }
    dend_60 { pt3dadd( -102.322, -50.7441, -48.0956, 2.05 ) }
    dend_60 { pt3dadd( -103.629, -51.9245, -47.684, 0.34 ) }
    dend_60 { pt3dadd( -106.628, -54.537, -46.4714, 0.34 ) }
    dend_60 { pt3dadd( -108.498, -56.1275, -45.5786, 1.54 ) }
    dend_60 { pt3dadd( -109.951, -57.3028, -44.7991, 1.54 ) }
    dend_60 { pt3dadd( -110.363, -57.6144, -44.5673, 0.17 ) }
    dend_60 { pt3dadd( -112.795, -59.3064, -43.171, 0.17 ) }
    dend_60 { pt3dadd( -114.017, -60.0746, -42.491, 1.03 ) }
    dend_60 { pt3dadd( -114.514, -60.3849, -42.2461, 1.03 ) }
    dend_60 { pt3dadd( -115.684, -61.0627, -41.8252, 0.17 ) }
    dend_60 { pt3dadd( -118.017, -62.2211, -41.1574, 0.17 ) }
    dend_60 { pt3dadd( -118.413, -62.4043, -41.0752, 0.68 ) }
    dend_60 { pt3dadd( -119.73, -62.9871, -40.7939, 0.17 ) }
    dend_60 { pt3dadd( -122.601, -64.1691, -40.2386, 0.17 ) }
    dend_60 { pt3dadd( -125.103, -65.2158, -39.5809, 0.17 ) }
    dend_60 { pt3dadd( -126.61, -65.8926, -39.1291, 1.37 ) }
    dend_60 { pt3dadd( -128.255, -66.7045, -38.58, 0.51 ) }
    dend_60 { pt3dadd( -131.034, -68.2648, -37.1703, 0.51 ) }
    dend_60 { pt3dadd( -133.064, -69.537, -35.7943, 0.51 ) }
    dend_60 { pt3dadd( -135.235, -70.9816, -34.0436, 0.17 ) }
    dend_60 { pt3dadd( -136.587, -72.0642, -32.8178, 1.2 ) }
    dend_60 { pt3dadd( -137.348, -72.6665, -32.1486, 1.2 ) }
    dend_60 { pt3dadd( -140.855, -75.3847, -29.2051, 0.17 ) }
    dend_60 { pt3dadd( -141.919, -76.1859, -28.44, 0.17 ) }
    dend_60 { pt3dadd( -143.145, -77.0611, -27.4042, 1.88 ) }
    dend_60 { pt3dadd( -143.903, -77.5441, -26.7946, 0.17 ) }
    dend_60 { pt3dadd( -145.56, -78.5929, -25.3334, 0.17 ) }
    dend_60 { pt3dadd( -145.978, -78.8613, -24.9895, 0.86 ) }
    dend_60 { pt3dadd( -147.114, -79.6323, -24.3019, 0.86 ) }
    dend_60 { pt3dadd( -149.688, -81.6498, -22.6308, 0.17 ) }
    dend_60 { pt3dadd( -150.338, -82.1476, -22.2407, 0.17 ) }
    dend_60 { pt3dadd( -151.115, -82.6831, -21.8563, 0.17 ) }
    dend_60 { pt3dadd( -151.813, -83.1652, -21.5702, 0.86 ) }
    dend_60 { pt3dadd( -153.771, -84.4852, -20.9578, 0.34 ) }
    dend_60 { pt3dadd( -155.685, -85.761, -20.4707, 0.34 ) }
    dend_60 { pt3dadd( -157.454, -86.9913, -20.1152, 0.34 ) }
    dend_60 { pt3dadd( -161.338, -89.7626, -19.566, 0.34 ) }
    dend_60 { pt3dadd( -163.313, -91.2222, -19.3702, 0.34 ) }
    dend_60 { pt3dadd( -167.49, -94.4058, -18.9777, 0.34 ) }
    dend_60 { pt3dadd( -167.64, -94.528, -18.965, 0.34 ) }
    dend_60 { pt3dadd( -169.604, -96.2127, -18.8489, 0.34 ) }
    dend_60 { pt3dadd( -172.192, -98.7542, -18.8308, 1.88 ) }
    dend_60 { pt3dadd( -172.775, -99.3825, -18.9386, 1.88 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 93/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -56.0331, -15.9316, -25.2489, 0.68 ) }
    dend_57 { pt3dadd( -57.9568, -21.1282, -27.8274, 0.68 ) }
    dend_57 { pt3dadd( -58.5882, -22.8339, -28.6738, 0.51 ) }
    dend_57 { pt3dadd( -59.5533, -25.4411, -29.9675, 0.51 ) }
    dend_57 { pt3dadd( -61.0959, -29.6081, -32.0352, 0.51 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 98/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -102.632, 7.09859, -14.3001, 0.17 ) }
    dend_53 { pt3dadd( -103.012, 7.24744, -14.7173, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_53 { pt3dadd( -103.092, 7.28038, -14.8059, 0.17 ) }
    dend_53 { pt3dadd( -103.361, 7.38335, -15.0632, 0.17 ) }
    dend_53 { pt3dadd( -104.248, 7.78889, -15.9945, 0.86 ) }
    dend_53 { pt3dadd( -105.676, 8.42656, -17.458, 0.34 ) }
    dend_53 { pt3dadd( -108.744, 9.84757, -20.857, 0.34 ) }
    dend_53 { pt3dadd( -109.431, 10.1477, -21.586, 1.71 ) }
    dend_53 { pt3dadd( -110.565, 10.6241, -22.7146, 0.17 ) }
    dend_53 { pt3dadd( -112.636, 11.4259, -24.5934, 0.17 ) }
    dend_53 { pt3dadd( -113.656, 11.8092, -25.4898, 0.17 ) }
    dend_53 { pt3dadd( -116.745, 12.7956, -27.8051, 0.17 ) }
    dend_53 { pt3dadd( -119.106, 13.4155, -29.1917, 0.17 ) }
    dend_53 { pt3dadd( -119.998, 13.6185, -29.6796, 1.88 ) }
    dend_53 { pt3dadd( -121.766, 13.945, -30.478, 0.17 ) }
    dend_53 { pt3dadd( -125.321, 14.4102, -31.6352, 0.17 ) }
    dend_53 { pt3dadd( -127.063, 14.6242, -32.1071, 0.17 ) }
    dend_53 { pt3dadd( -127.708, 14.6883, -32.2395, 1.2 ) }
    dend_53 { pt3dadd( -128.967, 14.8456, -32.5607, 0.17 ) }
    dend_53 { pt3dadd( -131.165, 15.1566, -33.2977, 0.17 ) }
    dend_53 { pt3dadd( -131.548, 15.2185, -33.4446, 0.17 ) }
    dend_53 { pt3dadd( -131.672, 15.2357, -33.4811, 0.17 ) }
    dend_53 { pt3dadd( -133.394, 15.4975, -34.1435, 0.17 ) }
    dend_53 { pt3dadd( -134.576, 15.6449, -34.6349, 2.05 ) }
    dend_53 { pt3dadd( -136.649, 15.8535, -35.5137, 1.54 ) }
    dend_53 { pt3dadd( -137.288, 15.8938, -35.7766, 0.17 ) }
    dend_53 { pt3dadd( -139.229, 15.9457, -36.5136, 0.17 ) }
    dend_53 { pt3dadd( -142.512, 15.8793, -37.6358, 0.17 ) }
    dend_53 { pt3dadd( -143.786, 15.785, -37.9345, 1.03 ) }
    dend_53 { pt3dadd( -144.825, 15.6644, -38.1074, 0.17 ) }
    dend_53 { pt3dadd( -145.846, 15.5104, -38.1718, 0.17 ) }
    dend_53 { pt3dadd( -146.526, 15.3824, -38.183, 1.54 ) }
    dend_53 { pt3dadd( -147.286, 15.2058, -38.1317, 0.17 ) }
    dend_53 { pt3dadd( -149.809, 14.5853, -37.6034, 0.17 ) }
    dend_53 { pt3dadd( -149.936, 14.561, -37.5845, 0.17 ) }
    dend_53 { pt3dadd( -150.957, 14.4761, -37.5569, 1.54 ) }
    dend_53 { pt3dadd( -151.364, 14.4977, -37.5927, 0.17 ) }
    dend_53 { pt3dadd( -152.765, 14.7272, -37.8122, 0.17 ) }
    dend_53 { pt3dadd( -153.025, 14.8154, -37.8853, 1.54 ) }
    dend_53 { pt3dadd( -155.628, 15.9092, -38.7017, 0.17 ) }
    dend_53 { pt3dadd( -157.45, 16.7543, -39.2068, 0.17 ) }
    dend_53 { pt3dadd( -158.929, 17.4449, -39.5645, 2.05 ) }
    dend_53 { pt3dadd( -160.083, 17.9628, -39.769, 0.17 ) }
    dend_53 { pt3dadd( -163.432, 19.3734, -40.0132, 0.17 ) }
    dend_53 { pt3dadd( -165.482, 20.1366, -39.9855, 1.2 ) }
    dend_53 { pt3dadd( -166.3, 20.4054, -39.9019, 0.17 ) }
    dend_53 { pt3dadd( -168.594, 21.1144, -39.5955, 0.17 ) }
    dend_53 { pt3dadd( -171.498, 21.825, -38.9206, 0.17 ) }
    dend_53 { pt3dadd( -173.811, 22.1066, -38.0512, 1.54 ) }
    dend_53 { pt3dadd( -174.835, 22.1021, -37.5139, 0.17 ) }
    dend_53 { pt3dadd( -175.275, 22.0524, -37.2162, 0.86 ) }
    dend_53 { pt3dadd( -175.484, 22.0136, -37.0628, 0.17 ) }
    dend_53 { pt3dadd( -178.075, 21.2364, -34.9591, 0.17 ) }
    dend_53 { pt3dadd( -180.159, 20.3924, -33.2738, 0.17 ) }
    dend_53 { pt3dadd( -181.023, 19.9991, -32.6199, 1.54 ) }
    dend_53 { pt3dadd( -183.305, 18.878, -30.938, 0.17 ) }
    dend_53 { pt3dadd( -185.459, 17.7033, -29.3295, 0.17 ) }
    dend_53 { pt3dadd( -187.668, 16.3809, -27.5998, 1.2 ) }
    dend_53 { pt3dadd( -188.434, 15.8865, -27.0007, 1.2 ) }
    dend_53 { pt3dadd( -188.794, 15.6325, -26.6997, 0.17 ) }
    dend_53 { pt3dadd( -189.395, 15.1903, -26.1808, 0.17 ) }
    dend_53 { pt3dadd( -191.275, 13.8215, -24.5912, 0.86 ) }
    dend_53 { pt3dadd( -193.292, 12.3282, -22.7294, 0.34 ) }
    dend_53 { pt3dadd( -194.125, 11.8386, -22.0513, 0.34 ) }
    dend_53 { pt3dadd( -194.226, 11.7905, -21.9833, 0.34 ) }
    dend_53 { pt3dadd( -194.64, 11.6146, -21.7224, 1.03 ) }
    dend_53 { pt3dadd( -195.095, 11.4503, -21.5031, 0.17 ) }
    dend_53 { pt3dadd( -196.479, 11.1982, -21.6366, 0.17 ) }
    dend_53 { pt3dadd( -198.575, 11.0013, -22.7306, 1.2 ) }
    dend_53 { pt3dadd( -199.539, 10.9232, -23.3667, 0.68 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 68/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -102.632, 7.09859, -14.3001, 0.17 ) }
    dend_52 { pt3dadd( -105.293, 10.6916, -15.4146, 0.17 ) }
    dend_52 { pt3dadd( -106.94, 12.8508, -15.7844, 0.17 ) }
    dend_52 { pt3dadd( -108.409, 14.758, -15.7812, 1.03 ) }
    dend_52 { pt3dadd( -109.173, 15.739, -15.6971, 0.17 ) }
    dend_52 { pt3dadd( -110.228, 17.0901, -15.5098, 0.17 ) }
    dend_52 { pt3dadd( -113.243, 20.9222, -14.8748, 0.17 ) }
    dend_52 { pt3dadd( -113.34, 21.0402, -14.8356, 0.17 ) }
    dend_52 { pt3dadd( -114.967, 23.0037, -14.0622, 1.2 ) }
    dend_52 { pt3dadd( -115.223, 23.3304, -13.9236, 0.17 ) }
    dend_52 { pt3dadd( -116.745, 25.4489, -13.0237, 0.17 ) }
    dend_52 { pt3dadd( -117.129, 26.0675, -12.78, 0.17 ) }
    dend_52 { pt3dadd( -117.556, 26.8009, -12.5365, 1.54 ) }
    dend_52 { pt3dadd( -118.094, 27.7132, -12.2618, 0.17 ) }
    dend_52 { pt3dadd( -118.953, 29.1192, -11.8738, 0.17 ) }
    dend_52 { pt3dadd( -120.299, 31.079, -11.5729, 0.17 ) }
    dend_52 { pt3dadd( -120.684, 31.5852, -11.5458, 1.71 ) }
    dend_52 { pt3dadd( -121.753, 32.8208, -11.5654, 0.17 ) }
    dend_52 { pt3dadd( -122.815, 33.944, -11.6433, 0.17 ) }
    dend_52 { pt3dadd( -124.87, 35.8522, -11.8657, 0.17 ) }
    dend_52 { pt3dadd( -128.356, 38.6907, -12.3601, 1.54 ) }
    dend_52 { pt3dadd( -130.11, 39.9021, -12.6358, 0.17 ) }
    dend_52 { pt3dadd( -132.264, 41.1593, -13.0574, 0.17 ) }
    dend_52 { pt3dadd( -132.264, 41.1593, -13.0574, 2.05 ) }
    dend_52 { pt3dadd( -134.486, 42.0265, -13.5865, 0.17 ) }
    dend_52 { pt3dadd( -135.4, 42.2806, -13.805, 0.17 ) }
    dend_52 { pt3dadd( -138.784, 42.9559, -14.1513, 0.17 ) }
    dend_52 { pt3dadd( -142.027, 43.4048, -14.3256, 1.03 ) }
    dend_52 { pt3dadd( -142.789, 43.5133, -14.3209, 0.17 ) }
    dend_52 { pt3dadd( -142.94, 43.5459, -14.3077, 0.17 ) }
    dend_52 { pt3dadd( -143.651, 43.7929, -14.1468, 0.17 ) }
    dend_52 { pt3dadd( -146.728, 45.6031, -12.9216, 1.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_52 { pt3dadd( -147.494, 46.2625, -12.4403, 0.17 ) }
    dend_52 { pt3dadd( -148.389, 47.1536, -11.7929, 0.17 ) }
    dend_52 { pt3dadd( -149.232, 48.1311, -11.2434, 1.03 ) }
    dend_52 { pt3dadd( -150.003, 49.1102, -10.8225, 0.17 ) }
    dend_52 { pt3dadd( -150.77, 50.216, -10.53, 0.17 ) }
    dend_52 { pt3dadd( -151.119, 50.756, -10.4038, 1.03 ) }
    dend_52 { pt3dadd( -151.283, 51.0368, -10.2847, 0.17 ) }
    dend_52 { pt3dadd( -151.806, 51.9553, -9.57808, 0.17 ) }
    dend_52 { pt3dadd( -151.865, 52.0616, -9.47787, 0.17 ) }
    dend_52 { pt3dadd( -152.068, 52.4684, -9.02753, 1.2 ) }
    dend_52 { pt3dadd( -153.169, 54.752, -6.09365, 0.17 ) }
    dend_52 { pt3dadd( -153.525, 55.4881, -5.05709, 0.17 ) }
    dend_52 { pt3dadd( -154.261, 56.9042, -2.85096, 1.54 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 13/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -161.94, 39.007, -79.4367, 0.17 ) }
    dend_48 { pt3dadd( -161.722, 37.1944, -79.0778, 0.17 ) }
    dend_48 { pt3dadd( -161.511, 35.4407, -78.7307, 0.17 ) }
    dend_48 { pt3dadd( -160.849, 29.9373, -77.6412, 0.17 ) }
    dend_48 { pt3dadd( -160.772, 29.2987, -77.5148, 0.86 ) }
    dend_48 { pt3dadd( -160.763, 29.2231, -77.4998, 0.86 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 19/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -161.94, 39.007, -79.4367, 0.17 ) }
    dend_47 { pt3dadd( -162.977, 39.4345, -79.8947, 0.17 ) }
    dend_47 { pt3dadd( -165.887, 40.654, -81.0313, 0.17 ) }
    dend_47 { pt3dadd( -166.005, 40.714, -81.0837, 0.17 ) }
    dend_47 { pt3dadd( -168.444, 42.01, -82.2326, 1.37 ) }
    dend_47 { pt3dadd( -169.699, 42.6679, -82.8186, 0.17 ) }
    dend_47 { pt3dadd( -172.394, 44.0691, -84.008, 0.17 ) }
    dend_47 { pt3dadd( -173.397, 44.636, -84.4487, 0.17 ) }
    dend_47 { pt3dadd( -176.1, 46.3662, -85.7762, 1.03 ) }
    dend_47 { pt3dadd( -176.45, 46.5853, -85.9343, 0.17 ) }
    dend_47 { pt3dadd( -177.686, 47.2932, -86.4124, 0.17 ) }
    dend_47 { pt3dadd( -178.917, 47.9707, -86.8894, 0.68 ) }
    dend_47 { pt3dadd( -179.135, 48.1006, -87.0014, 0.68 ) }
    dend_47 { pt3dadd( -180.698, 48.9435, -87.818, 0.17 ) }
    dend_47 { pt3dadd( -182.494, 49.7579, -88.7477, 0.17 ) }
    dend_47 { pt3dadd( -183.529, 50.239, -89.3865, 1.2 ) }
    dend_47 { pt3dadd( -184.139, 50.5, -89.8111, 0.17 ) }
    dend_47 { pt3dadd( -186.437, 51.3393, -91.4523, 0.17 ) }
    dend_47 { pt3dadd( -187.338, 51.6129, -92.0658, 0.17 ) }
    dend_47 { pt3dadd( -188.226, 51.7774, -92.6406, 0.68 ) }
    dend_47 { pt3dadd( -189.427, 51.9001, -93.5506, 0.17 ) }
    dend_47 { pt3dadd( -190.536, 51.9177, -94.4156, 0.17 ) }
    dend_47 { pt3dadd( -191.113, 51.8661, -94.8941, 1.88 ) }
    dend_47 { pt3dadd( -191.521, 51.8147, -95.2629, 0.17 ) }
    dend_47 { pt3dadd( -193.83, 51.5644, -97.5049, 0.17 ) }
    dend_47 { pt3dadd( -195.056, 51.3544, -98.7447, 1.37 ) }
    dend_47 { pt3dadd( -195.876, 51.1789, -99.5965, 0.17 ) }
    dend_47 { pt3dadd( -197.775, 50.7495, -101.75, 0.17 ) }
    dend_47 { pt3dadd( -199.412, 50.3569, -103.661, 1.03 ) }
    dend_47 { pt3dadd( -199.783, 50.2797, -104.164, 0.17 ) }
    dend_47 { pt3dadd( -201.233, 50.0062, -106.32, 0.17 ) }
    dend_47 { pt3dadd( -201.406, 49.9785, -106.58, 0.17 ) }
    dend_47 { pt3dadd( -202.106, 49.8558, -107.664, 1.2 ) }
    dend_47 { pt3dadd( -202.628, 49.7338, -108.484, 0.17 ) }
    dend_47 { pt3dadd( -205.774, 48.8775, -113.442, 0.17 ) }
    dend_47 { pt3dadd( -206.03, 48.8624, -113.958, 1.37 ) }
    dend_47 { pt3dadd( -206.086, 48.8693, -114.087, 1.37 ) }
    dend_47 { pt3dadd( -206.652, 48.9882, -115.542, 0.34 ) }
    dend_47 { pt3dadd( -207.434, 49.2437, -117.782, 0.34 ) }
    dend_47 { pt3dadd( -207.523, 49.2767, -118.049, 0.34 ) }
    dend_47 { pt3dadd( -210.045, 50.5169, -126.085, 0.17 ) }
    dend_47 { pt3dadd( -210.138, 50.5627, -126.38, 0.17 ) }
    dend_47 { pt3dadd( -210.268, 50.6292, -126.794, 0.17 ) }
    dend_47 { pt3dadd( -210.328, 50.6672, -126.975, 0.17 ) }
    dend_47 { pt3dadd( -211.692, 51.4411, -130.44, 0.86 ) }
    dend_47 { pt3dadd( -213.104, 51.9347, -133.183, 0.17 ) }
    dend_47 { pt3dadd( -214.067, 51.962, -134.033, 0.17 ) }
    dend_47 { pt3dadd( -214.149, 51.9965, -134.144, 1.37 ) }
    dend_47 { pt3dadd( -215.703, 53.1274, -136.971, 0.17 ) }
    dend_47 { pt3dadd( -215.89, 53.2567, -137.295, 1.03 ) }
    dend_47 { pt3dadd( -216.095, 53.4046, -137.658, 0.17 ) }
    dend_47 { pt3dadd( -216.925, 54.0371, -139.199, 0.17 ) }
    dend_47 { pt3dadd( -221.473, 56.9305, -147.087, 1.03 ) }
    dend_47 { pt3dadd( -223.457, 58.0237, -150.413, 0.17 ) }
    dend_47 { pt3dadd( -225.514, 59.0263, -153.759, 0.17 ) }
    dend_47 { pt3dadd( -225.676, 59.0904, -154.018, 1.03 ) }
    dend_47 { pt3dadd( -228.26, 59.8271, -158.072, 0.17 ) }
    dend_47 { pt3dadd( -231.327, 60.1879, -162.624, 0.17 ) }
    dend_47 { pt3dadd( -232.693, 59.8226, -164.193, 1.2 ) }
    dend_47 { pt3dadd( -233.061, 59.6391, -164.621, 0.17 ) }
    dend_47 { pt3dadd( -234.47, 58.6198, -166.753, 0.17 ) }
    dend_47 { pt3dadd( -234.864, 58.1616, -167.47, 0.68 ) }
    dend_47 { pt3dadd( -235.03, 57.7622, -167.915, 0.17 ) }
    dend_47 { pt3dadd( -235.1, 56.4693, -169.371, 0.17 ) }
    dend_47 { pt3dadd( -235.035, 54.6625, -171.677, 1.37 ) }
    dend_47 { pt3dadd( -234.96, 53.9057, -172.836, 0.17 ) }
    dend_47 { pt3dadd( -234.632, 52.545, -175.135, 0.17 ) }
    dend_47 { pt3dadd( -234.385, 52.1245, -175.706, 1.03 ) }
    dend_47 { pt3dadd( -234.248, 51.9403, -175.927, 0.17 ) }
    dend_47 { pt3dadd( -232.406, 49.6992, -178.464, 0.17 ) }
    dend_47 { pt3dadd( -232.245, 49.5094, -178.65, 0.17 ) }
    dend_47 { pt3dadd( -230.184, 47.1458, -180.79, 0.17 ) }
    dend_47 { pt3dadd( -225.92, 42.603, -184.799, 0.17 ) }
    dend_47 { pt3dadd( -225.675, 42.34, -185.012, 1.03 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 93/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 17.6616, 53.2447, -4.80386, 0.17 ) }
    dend_39 { pt3dadd( 17.8195, 53.8541, -4.76578, 0.17 ) }
    dend_39 { pt3dadd( 17.9373, 54.369, -4.73674, 0.17 ) }
    dend_39 { pt3dadd( 18.24, 55.7718, -4.66134, 0.17 ) }
    dend_39 { pt3dadd( 18.3745, 56.4357, -4.51662, 1.71 ) }
    dend_39 { pt3dadd( 18.6685, 57.9369, -4.09424, 0.17 ) }
    dend_39 { pt3dadd( 19.0991, 60.322, -3.37684, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_39 { pt3dadd( 19.1337, 60.5355, -3.3064, 1.54 ) }
    dend_39 { pt3dadd( 19.3016, 61.7408, -2.91552, 0.17 ) }
    dend_39 { pt3dadd( 19.7743, 65.1857, -1.78072, 0.17 ) }
    dend_39 { pt3dadd( 20.0914, 67.3723, -1.05884, 1.37 ) }
    dend_39 { pt3dadd( 20.1652, 68.0334, -0.878271, 0.17 ) }
    dend_39 { pt3dadd( 20.1906, 68.2569, -0.818456, 0.17 ) }
    dend_39 { pt3dadd( 20.5479, 71.7539, 3.80408E-5, 0.17 ) }
    dend_39 { pt3dadd( 20.6181, 72.5703, 0.135716, 1.2 ) }
    dend_39 { pt3dadd( 20.6756, 73.4239, 0.156017, 0.17 ) }
    dend_39 { pt3dadd( 20.9022, 78.2673, 0.251053, 0.17 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 10/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 17.6616, 53.2447, -4.80386, 0.86 ) }
    dend_38 { pt3dadd( 19.669, 52.825, -1.13116, 0.86 ) }
    dend_38 { pt3dadd( 20.4327, 52.6653, 0.266061, 0.86 ) }
    dend_38 { pt3dadd( 21.3355, 52.4766, 1.91792, 0.34 ) }
    dend_38 { pt3dadd( 22.0899, 52.3188, 3.2982, 0.34 ) }
    dend_38 { pt3dadd( 23.423, 52.0401, 5.73718, 0.34 ) }
    dend_38 { pt3dadd( 27.7201, 51.1418, 13.5993, 0.17 ) }
    // Section: dend_27, id: dend_27, parent: dend_21 (entry count 17/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 36.5452, 15.0778, 21.1018, 0.17 ) }
    dend_27 { pt3dadd( 33.7699, 20.9903, 18.6091, 0.17 ) }
    dend_27 { pt3dadd( 29.5485, 30.1418, 14.4898, 0.17 ) }
    dend_27 { pt3dadd( 24.8243, 38.648, 9.60454, 0.17 ) }
    dend_27 { pt3dadd( 19.8562, 46.4629, 3.87872, 0.17 ) }
    dend_27 { pt3dadd( 15.1505, 54.4532, -1.82661, 0.17 ) }
    dend_27 { pt3dadd( 11.6067, 62.233, -8.56869, 0.17 ) }
    dend_27 { pt3dadd( 6.09874, 69.4765, -14.5464, 0.17 ) }
    dend_27 { pt3dadd( 1.60735, 78.048, -19.536, 0.17 ) }
    dend_27 { pt3dadd( -2.09077, 85.6639, -26.3815, 0.17 ) }
    dend_27 { pt3dadd( -7.3813, 91.0363, -34.2356, 0.17 ) }
    dend_27 { pt3dadd( -11.8779, 97.4725, -41.7785, 0.17 ) }
    dend_27 { pt3dadd( -16.3642, 104.217, -49.0532, 0.17 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 30/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 36.5452, 15.0778, 21.1018, 0.68 ) }
    dend_22 { pt3dadd( 38.2056, 14.2564, 18.572, 0.68 ) }
    dend_22 { pt3dadd( 41.2373, 12.9347, 14.8025, 0.17 ) }
    dend_22 { pt3dadd( 53.5798, 7.96848, 1.71196, 0.17 ) }
    dend_22 { pt3dadd( 53.6652, 7.93325, 1.63981, 0.17 ) }
    dend_22 { pt3dadd( 56.4947, 6.81111, -0.227707, 0.17 ) }
    dend_22 { pt3dadd( 61.939, 4.68585, -3.32425, 0.17 ) }
    dend_22 { pt3dadd( 63.3223, 4.16751, -3.88979, 1.37 ) }
    dend_22 { pt3dadd( 65.0083, 3.59674, -4.13629, 0.17 ) }
    dend_22 { pt3dadd( 70.9635, 1.95592, -3.57999, 0.17 ) }
    dend_22 { pt3dadd( 75.177, 0.829769, -3.18285, 0.17 ) }
    dend_22 { pt3dadd( 75.3956, 0.770017, -3.16218, 0.17 ) }
    dend_22 { pt3dadd( 79.827, -0.394083, -2.74551, 0.17 ) }
    dend_22 { pt3dadd( 84.0699, -1.49138, -2.34743, 0.17 ) }
    dend_22 { pt3dadd( 88.4679, -2.21535, -1.95543, 0.17 ) }
    dend_22 { pt3dadd( 88.9224, -2.21069, -1.97581, 0.17 ) }
    dend_22 { pt3dadd( 90.9295, -1.93647, -2.3418, 0.17 ) }
    dend_22 { pt3dadd( 95.0621, -0.841789, -3.60048, 0.17 ) }
    dend_22 { pt3dadd( 95.2507, -0.745841, -3.67667, 0.17 ) }
    dend_22 { pt3dadd( 100.019, 2.79829, -6.17142, 0.17 ) }
    dend_22 { pt3dadd( 106.495, 8.35351, -10.4539, 0.17 ) }
    dend_22 { pt3dadd( 107.081, 8.88592, -10.871, 1.2 ) }
    dend_22 { pt3dadd( 107.525, 9.31878, -11.2095, 0.17 ) }
    dend_22 { pt3dadd( 113.396, 15.4522, -15.8771, 0.17 ) }
    dend_22 { pt3dadd( 119.792, 22.0927, -20.8809, 0.17 ) }
    dend_22 { pt3dadd( 125.271, 27.3606, -25.5228, 0.17 ) }
    dend_22 { pt3dadd( 125.556, 27.625, -25.7539, 1.2 ) }
    dend_22 { pt3dadd( 125.997, 28.0162, -26.167, 0.17 ) }
    dend_22 { pt3dadd( 127.923, 29.6829, -28.1294, 0.17 ) }
    dend_22 { pt3dadd( 128.438, 30.1085, -28.7633, 0.86 ) }
    dend_22 { pt3dadd( 135.11, 34.6832, -37.0229, 0.17 ) }
    dend_22 { pt3dadd( 138.896, 36.9961, -41.6085, 0.17 ) }
    dend_22 { pt3dadd( 142.666, 39.18, -46.2663, 1.54 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 63/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.23583, -36.6645, -10.6467, 1.03 ) }
    dend_7 { pt3dadd( 1.72021, -38.9749, -10.1619, 1.03 ) }
    dend_7 { pt3dadd( 1.29529, -41.7659, -9.672, 1.54 ) }
    dend_7 { pt3dadd( 1.20123, -43.0856, -9.49066, 0.68 ) }
    dend_7 { pt3dadd( 1.16007, -47.8121, -9.41668, 0.68 ) }
    dend_7 { pt3dadd( 1.49549, -50.3682, -8.99603, 0.68 ) }
    dend_7 { pt3dadd( 1.99886, -52.1822, -8.42064, 0.17 ) }
    dend_7 { pt3dadd( 2.77802, -53.7343, -7.64183, 0.86 ) }
    dend_7 { pt3dadd( 3.82559, -55.1319, -6.66777, 0.86 ) }
    dend_7 { pt3dadd( 6.43759, -57.6953, -3.97371, 0.51 ) }
    dend_7 { pt3dadd( 14.1152, -63.9034, 3.5601, 0.17 ) }
    dend_7 { pt3dadd( 15.1418, -64.7437, 4.59683, 1.03 ) }
    dend_7 { pt3dadd( 16.3785, -65.8811, 5.93367, 1.03 ) }
    dend_7 { pt3dadd( 16.788, -66.3181, 6.39802, 1.03 ) }
    dend_7 { pt3dadd( 19.2253, -69.5695, 9.32487, 0.51 ) }
    dend_7 { pt3dadd( 21.0585, -72.723, 11.6199, 0.51 ) }
    dend_7 { pt3dadd( 21.5717, -74.1474, 12.0505, 1.2 ) }
    dend_7 { pt3dadd( 22.2805, -76.1172, 12.4945, 1.88 ) }
    dend_7 { pt3dadd( 22.8889, -77.7615, 12.7404, 0.51 ) }
    dend_7 { pt3dadd( 23.757, -80.3498, 12.9112, 0.51 ) }
    dend_7 { pt3dadd( 24.0409, -81.5446, 12.8014, 0.51 ) }
    dend_7 { pt3dadd( 24.3346, -83.4776, 12.5719, 0.51 ) }
    dend_7 { pt3dadd( 24.6717, -86.8454, 12.112, 0.68 ) }
    dend_7 { pt3dadd( 24.7575, -88.1092, 11.9212, 0.68 ) }
    dend_7 { pt3dadd( 24.9031, -89.9692, 11.6137, 0.34 ) }
    dend_7 { pt3dadd( 25.3477, -94.1031, 10.8841, 1.54 ) }
    dend_7 { pt3dadd( 25.5388, -96.1838, 10.5618, 0.68 ) }
    dend_7 { pt3dadd( 25.593, -98.2907, 10.348, 0.17 ) }
    dend_7 { pt3dadd( 25.5315, -99.8859, 10.2815, 0.68 ) }
    dend_7 { pt3dadd( 25.3665, -102.741, 10.3003, 0.51 ) }
    dend_7 { pt3dadd( 25.223, -104.67, 10.422, 0.51 ) }
    dend_7 { pt3dadd( 25.1321, -106.525, 10.6346, 0.51 ) }
    dend_7 { pt3dadd( 24.95, -109.607, 11.0018, 0.51 ) }
    dend_7 { pt3dadd( 24.7836, -111.583, 11.2597, 1.2 ) }
    dend_7 { pt3dadd( 24.5383, -113.538, 11.5513, 0.86 ) }
    dend_7 { pt3dadd( 24.1809, -115.875, 11.9288, 0.17 ) }
    dend_7 { pt3dadd( 24.0141, -117.353, 12.1407, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_7 { pt3dadd( 23.9966, -119.761, 12.5278, 0.17 ) }
    dend_7 { pt3dadd( 24.1403, -121.465, 12.8274, 1.54 ) }
    dend_7 { pt3dadd( 24.3116, -122.845, 13.0974, 1.03 ) }
    dend_7 { pt3dadd( 24.4608, -124.091, 13.3735, 0.34 ) }
    dend_7 { pt3dadd( 24.7696, -127.066, 14.0675, 0.34 ) }
    dend_7 { pt3dadd( 25.1186, -130.086, 14.8975, 1.03 ) }
    dend_7 { pt3dadd( 25.2955, -131.206, 15.2277, 0.68 ) }
    dend_7 { pt3dadd( 25.6983, -133.552, 15.9481, 0.17 ) }
    dend_7 { pt3dadd( 25.9819, -135.344, 16.4991, 0.17 ) }
    dend_7 { pt3dadd( 26.3593, -138.136, 17.3585, 0.17 ) }
    dend_7 { pt3dadd( 26.6229, -140.953, 18.1696, 1.54 ) }
    dend_7 { pt3dadd( 26.7857, -142.847, 18.6001, 0.68 ) }
    dend_7 { pt3dadd( 26.9233, -144.197, 18.8449, 0.51 ) }
    dend_7 { pt3dadd( 27.2522, -146.903, 19.2142, 0.51 ) }
    dend_7 { pt3dadd( 27.2865, -147.246, 19.2449, 0.51 ) }
    dend_7 { pt3dadd( 27.3952, -150.316, 19.3873, 0.51 ) }
    dend_7 { pt3dadd( 27.291, -152.379, 19.4014, 0.51 ) }
    dend_7 { pt3dadd( 27.1659, -154.037, 19.4102, 0.51 ) }
    dend_7 { pt3dadd( 27.1481, -154.215, 19.4135, 0.51 ) }
    dend_7 { pt3dadd( 26.741, -156.563, 19.2502, 1.37 ) }
    dend_7 { pt3dadd( 26.7075, -156.728, 19.2379, 1.37 ) }
    dend_7 { pt3dadd( 25.8643, -159.737, 19.0149, 0.86 ) }
    dend_7 { pt3dadd( 25.7315, -160.107, 18.9999, 0.17 ) }
    dend_7 { pt3dadd( 24.8557, -162.444, 18.9801, 0.68 ) }
    dend_7 { pt3dadd( 23.4206, -166.115, 18.8223, 0.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 25/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.23583, -36.6645, -10.6467, 0.86 ) }
    dend_4 { pt3dadd( 1.82965, -39.9242, -18.9741, 0.86 ) }
    dend_4 { pt3dadd( 1.81962, -40.0047, -19.1798, 0.86 ) }
    dend_4 { pt3dadd( 1.69948, -40.9689, -21.6429, 0.86 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 29/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -172.775, -99.3825, -18.9386, 0.17 ) }
    dend_62 { pt3dadd( -177.593, -99.9041, -20.1497, 0.17 ) }
    dend_62 { pt3dadd( -180.166, -100.096, -20.1513, 0.17 ) }
    dend_62 { pt3dadd( -181.251, -100.123, -20.0329, 1.03 ) }
    dend_62 { pt3dadd( -182.141, -100.145, -19.9358, 0.17 ) }
    dend_62 { pt3dadd( -185.174, -100.221, -19.6049, 0.17 ) }
    dend_62 { pt3dadd( -186.631, -100.258, -19.4459, 1.03 ) }
    dend_62 { pt3dadd( -189.53, -100.245, -18.5337, 0.17 ) }
    dend_62 { pt3dadd( -191.096, -100.135, -17.9223, 0.17 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 38/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -172.775, -99.3825, -18.9386, 0.17 ) }
    dend_61 { pt3dadd( -175.356, -101.45, -18.6645, 0.17 ) }
    dend_61 { pt3dadd( -177.964, -103.464, -18.0629, 0.17 ) }
    dend_61 { pt3dadd( -179.779, -104.823, -17.5506, 0.86 ) }
    dend_61 { pt3dadd( -180.398, -105.253, -17.3635, 0.17 ) }
    dend_61 { pt3dadd( -181.643, -106.084, -16.974, 0.17 ) }
    dend_61 { pt3dadd( -185.345, -108.494, -15.8041, 0.17 ) }
    dend_61 { pt3dadd( -187.936, -110.026, -14.7406, 1.54 ) }
    dend_61 { pt3dadd( -188.147, -110.186, -14.5878, 0.17 ) }
    dend_61 { pt3dadd( -189.404, -111.658, -12.9219, 0.17 ) }
    dend_61 { pt3dadd( -189.486, -111.785, -12.7672, 1.2 ) }
    dend_61 { pt3dadd( -189.753, -112.345, -12.1501, 0.17 ) }
    dend_61 { pt3dadd( -190.835, -115.289, -9.2763, 0.17 ) }
    dend_61 { pt3dadd( -192.2, -119.022, -6.04921, 0.17 ) }
    dend_61 { pt3dadd( -193.266, -122.135, -3.81305, 1.54 ) }
    dend_61 { pt3dadd( -193.477, -122.852, -3.4275, 0.17 ) }
    dend_61 { pt3dadd( -194.663, -126.928, -1.91562, 0.17 ) }
    dend_61 { pt3dadd( -195.28, -129.426, -1.09722, 1.2 ) }
    dend_61 { pt3dadd( -195.645, -130.994, -0.685294, 0.86 ) }
    dend_61 { pt3dadd( -196.579, -134.584, 0.124029, 0.17 ) }
    dend_61 { pt3dadd( -197.73, -138.96, 1.08436, 0.17 ) }
    dend_61 { pt3dadd( -198.542, -142.122, 1.86933, 0.17 ) }
    dend_61 { pt3dadd( -200.432, -149.578, 4.01893, 0.17 ) }
    dend_61 { pt3dadd( -200.512, -149.861, 4.10386, 0.17 ) }
    dend_61 { pt3dadd( -201.879, -154.161, 5.6147, 0.17 ) }
    dend_61 { pt3dadd( -202.511, -155.881, 6.29706, 0.86 ) }
    dend_61 { pt3dadd( -202.926, -156.946, 6.67083, 0.86 ) }
    dend_61 { pt3dadd( -203.159, -157.555, 6.8093, 0.17 ) }
    dend_61 { pt3dadd( -204.102, -160.074, 7.02199, 0.17 ) }
    dend_61 { pt3dadd( -205.049, -163.23, 7.21818, 1.37 ) }
    dend_61 { pt3dadd( -205.411, -165.003, 7.2828, 0.17 ) }
    dend_61 { pt3dadd( -206.054, -169.386, 7.36806, 0.17 ) }
    dend_61 { pt3dadd( -206.408, -173.097, 7.35215, 0.17 ) }
    dend_61 { pt3dadd( -206.419, -173.31, 7.3432, 0.17 ) }
    dend_61 { pt3dadd( -206.476, -175.664, 7.088, 0.17 ) }
    dend_61 { pt3dadd( -206.511, -176.876, 6.8552, 1.37 ) }
    dend_61 { pt3dadd( -206.619, -178.328, 6.3506, 0.34 ) }
    dend_61 { pt3dadd( -206.735, -179.261, 5.82326, 0.17 ) }
    dend_61 { pt3dadd( -207.203, -181.826, 3.90136, 0.17 ) }
    dend_61 { pt3dadd( -207.536, -183.057, 2.85594, 1.03 ) }
    dend_61 { pt3dadd( -207.958, -183.977, 1.95102, 1.03 ) }
    dend_61 { pt3dadd( -210.202, -187.363, -1.64011, 0.17 ) }
    dend_61 { pt3dadd( -211.323, -188.354, -3.16247, 0.17 ) }
    dend_61 { pt3dadd( -211.781, -188.615, -3.73294, 1.03 ) }
    dend_61 { pt3dadd( -212.084, -188.716, -4.00577, 0.17 ) }
    dend_61 { pt3dadd( -214.107, -189.038, -5.28953, 0.17 ) }
    dend_61 { pt3dadd( -215.205, -189.142, -5.86358, 1.71 ) }
    dend_61 { pt3dadd( -219.914, -189.365, -7.43718, 0.68 ) }
    dend_61 { pt3dadd( -221.09, -189.365, -7.82245, 0.17 ) }
    dend_61 { pt3dadd( -225.904, -189.445, -9.50262, 0.17 ) }
    dend_61 { pt3dadd( -229.75, -189.564, -10.9109, 0.17 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 89/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -61.0959, -29.6081, -32.0352, 0.17 ) }
    dend_59 { pt3dadd( -65.2294, -32.5018, -26.8489, 0.17 ) }
    dend_59 { pt3dadd( -68.0385, -34.7012, -22.3793, 0.17 ) }
    dend_59 { pt3dadd( -72.1504, -38.2651, -14.4698, 0.17 ) }
    dend_59 { pt3dadd( -74.8047, -40.5658, -9.36393, 0.17 ) }
    dend_59 { pt3dadd( -77.1833, -42.6274, -4.78867, 0.17 ) }
    dend_59 { pt3dadd( -83.0786, -47.7371, 6.55157, 0.17 ) }
    dend_59 { pt3dadd( -84.6742, -49.3093, 10.9404, 0.17 ) }
    dend_59 { pt3dadd( -85.7096, -50.5605, 15.1776, 0.17 ) }
    dend_59 { pt3dadd( -88.3274, -54.2586, 24.4999, 0.17 ) }
    dend_59 { pt3dadd( -89.2673, -58.7867, 33.7759, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -61.0959, -29.6081, -32.0352, 0.51 ) }
    dend_58 { pt3dadd( -61.1044, -31.4605, -28.3425, 0.51 ) }
    dend_58 { pt3dadd( -61.7888, -36.9913, -17.8686, 0.51 ) }
    dend_58 { pt3dadd( -62.1505, -38.5295, -15.1503, 0.51 ) }
    dend_58 { pt3dadd( -62.455, -39.4804, -13.5685, 0.51 ) }
    dend_58 { pt3dadd( -63.7868, -42.9529, -8.09179, 0.51 ) }
    dend_58 { pt3dadd( -64.2404, -43.9908, -6.59572, 0.34 ) }
    dend_58 { pt3dadd( -64.8667, -45.4111, -4.85059, 0.34 ) }
    dend_58 { pt3dadd( -65.5915, -46.8669, -3.79142, 0.34 ) }
    dend_58 { pt3dadd( -65.9363, -47.6362, -3.3087, 0.86 ) }
    dend_58 { pt3dadd( -66.1074, -48.2178, -2.98628, 0.17 ) }
    dend_58 { pt3dadd( -66.6184, -50.3192, -1.99963, 0.68 ) }
    dend_58 { pt3dadd( -67.4903, -56.0741, 0.838186, 0.68 ) }
    dend_58 { pt3dadd( -67.5751, -57.3678, 1.48662, 0.17 ) }
    dend_58 { pt3dadd( -67.5772, -58.6442, 2.16041, 0.17 ) }
    dend_58 { pt3dadd( -67.3897, -63.5104, 4.81179, 0.51 ) }
    dend_58 { pt3dadd( -69.3442, -68.533, 11.9601, 0.51 ) }
    dend_58 { pt3dadd( -73.2886, -74.0633, 17.7912, 0.51 ) }
    dend_58 { pt3dadd( -75.7993, -78.4675, 25.1699, 0.51 ) }
    dend_58 { pt3dadd( -77.8543, -82.9067, 32.6676, 0.51 ) }
    dend_58 { pt3dadd( -79.9543, -86.8158, 40.4427, 0.51 ) }
    dend_58 { pt3dadd( -82.1015, -89.0518, 48.8412, 0.51 ) }
    dend_58 { pt3dadd( -84.875, -90.4373, 57.2396, 0.51 ) }
    dend_58 { pt3dadd( -86.9377, -92.9719, 65.5742, 0.51 ) }
    dend_58 { pt3dadd( -87.9412, -96.2795, 73.8324, 0.51 ) }
    dend_58 { pt3dadd( -87.4846, -99.7604, 82.0676, 0.51 ) }
    dend_58 { pt3dadd( -86.7831, -102.429, 90.584, 0.51 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 27/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -199.539, 10.9232, -23.3667, 0.17 ) }
    dend_55 { pt3dadd( -200.495, 7.92471, -24.3866, 0.17 ) }
    dend_55 { pt3dadd( -201.359, 5.17667, -25.1896, 0.17 ) }
    dend_55 { pt3dadd( -201.662, 4.2403, -25.4357, 0.68 ) }
    dend_55 { pt3dadd( -201.722, 4.06692, -25.4774, 0.68 ) }
    dend_55 { pt3dadd( -202.057, 3.05006, -25.7072, 0.68 ) }
    dend_55 { pt3dadd( -202.236, 2.56178, -25.8056, 0.17 ) }
    dend_55 { pt3dadd( -203.394, -0.263724, -26.2644, 0.17 ) }
    dend_55 { pt3dadd( -203.739, -0.973903, -26.335, 1.37 ) }
    dend_55 { pt3dadd( -204.172, -1.79141, -26.4136, 1.37 ) }
    dend_55 { pt3dadd( -204.719, -2.62993, -26.4865, 0.17 ) }
    dend_55 { pt3dadd( -206.407, -5.03971, -26.2963, 0.17 ) }
    dend_55 { pt3dadd( -207.123, -5.97533, -26.095, 0.17 ) }
    dend_55 { pt3dadd( -208.142, -7.13983, -25.6722, 1.03 ) }
    dend_55 { pt3dadd( -208.876, -7.99608, -25.3263, 0.17 ) }
    dend_55 { pt3dadd( -210.752, -10.1111, -24.364, 0.17 ) }
    dend_55 { pt3dadd( -213.541, -13.524, -22.8733, 1.37 ) }
    dend_55 { pt3dadd( -214.101, -14.3665, -22.4749, 0.17 ) }
    dend_55 { pt3dadd( -214.777, -15.495, -21.9404, 0.17 ) }
    dend_55 { pt3dadd( -216.02, -17.7597, -20.9811, 0.68 ) }
    dend_55 { pt3dadd( -216.362, -18.4371, -20.7508, 0.17 ) }
    dend_55 { pt3dadd( -217.781, -21.418, -19.906, 0.17 ) }
    dend_55 { pt3dadd( -219.48, -24.4655, -19.2636, 0.68 ) }
    dend_55 { pt3dadd( -219.981, -25.2484, -19.0752, 0.17 ) }
    dend_55 { pt3dadd( -221.585, -27.4462, -18.4919, 0.17 ) }
    dend_55 { pt3dadd( -222.978, -28.7852, -18.0787, 1.37 ) }
    dend_55 { pt3dadd( -224.029, -29.5257, -17.9281, 0.17 ) }
    dend_55 { pt3dadd( -225.907, -30.3833, -17.8948, 0.17 ) }
    dend_55 { pt3dadd( -227.849, -31.0308, -18.07, 0.17 ) }
    dend_55 { pt3dadd( -228.353, -31.1887, -18.1771, 0.17 ) }
    dend_55 { pt3dadd( -232.276, -32.3807, -19.3155, 0.17 ) }
    dend_55 { pt3dadd( -235.223, -33.4247, -20.3474, 1.03 ) }
    dend_55 { pt3dadd( -236.394, -33.9144, -20.8661, 0.51 ) }
    dend_55 { pt3dadd( -238.991, -35.1977, -22.2187, 0.17 ) }
    dend_55 { pt3dadd( -242.32, -37.2389, -24.2153, 0.17 ) }
    dend_55 { pt3dadd( -244.939, -39.2069, -25.9746, 0.17 ) }
    dend_55 { pt3dadd( -246.125, -40.4155, -26.9311, 1.71 ) }
    dend_55 { pt3dadd( -247.272, -41.9975, -27.9535, 0.17 ) }
    dend_55 { pt3dadd( -247.474, -42.4321, -28.24, 0.17 ) }
    dend_55 { pt3dadd( -247.615, -43.9984, -29.2514, 0.17 ) }
    dend_55 { pt3dadd( -247.57, -44.2226, -29.3755, 1.2 ) }
    dend_55 { pt3dadd( -247.372, -44.6357, -29.6286, 0.17 ) }
    dend_55 { pt3dadd( -246.145, -46.584, -30.8353, 0.17 ) }
    dend_55 { pt3dadd( -245.066, -48.0545, -31.6051, 1.03 ) }
    dend_55 { pt3dadd( -244.231, -49.0726, -32.2195, 0.17 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 72/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -199.539, 10.9232, -23.3667, 0.17 ) }
    dend_54 { pt3dadd( -200.785, 11.0488, -23.5536, 0.17 ) }
    dend_54 { pt3dadd( -202.256, 11.2084, -23.8265, 0.17 ) }
    dend_54 { pt3dadd( -203.207, 11.2982, -23.9928, 0.86 ) }
    dend_54 { pt3dadd( -204.365, 11.3781, -24.1815, 0.17 ) }
    dend_54 { pt3dadd( -206.594, 11.4875, -24.5293, 0.17 ) }
    dend_54 { pt3dadd( -207.566, 11.5352, -24.681, 1.03 ) }
    dend_54 { pt3dadd( -208.393, 11.5716, -24.7859, 0.17 ) }
    dend_54 { pt3dadd( -210.561, 11.6436, -25.0896, 0.17 ) }
    dend_54 { pt3dadd( -211.507, 11.6454, -25.2183, 0.17 ) }
    dend_54 { pt3dadd( -211.802, 11.638, -25.2452, 0.68 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 83/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 20.9022, 78.2673, 0.251053, 0.17 ) }
    dend_41 { pt3dadd( 21.02, 81.3619, 0.760177, 0.17 ) }
    dend_41 { pt3dadd( 21.196, 85.2301, 1.38988, 0.17 ) }
    dend_41 { pt3dadd( 21.347, 87.9654, 1.81759, 0.17 ) }
    dend_41 { pt3dadd( 21.4059, 92.198, 2.29162, 1.2 ) }
    dend_41 { pt3dadd( 21.375, 94.4302, 2.46895, 0.17 ) }
    dend_41 { pt3dadd( 21.2876, 96.9437, 2.58227, 0.17 ) }
    dend_41 { pt3dadd( 21.2876, 96.9437, 2.58227, 1.03 ) }
    dend_41 { pt3dadd( 21.1064, 98.5244, 2.48577, 0.17 ) }
    dend_41 { pt3dadd( 20.6194, 102.719, 1.87549, 0.17 ) }
    dend_41 { pt3dadd( 20.4874, 104.168, 1.56031, 0.17 ) }
    dend_41 { pt3dadd( 20.1909, 107.81, 0.678797, 0.17 ) }
    dend_41 { pt3dadd( 20.0477, 111.796, -0.284475, 0.17 ) }
    dend_41 { pt3dadd( 20.0593, 112.528, -0.450901, 0.17 ) }
    dend_41 { pt3dadd( 20.3711, 115.572, -1.23682, 1.37 ) }
    dend_41 { pt3dadd( 20.5181, 116.474, -1.48476, 0.17 ) }
    dend_41 { pt3dadd( 20.8982, 118.448, -2.04018, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_41 { pt3dadd( 21.6079, 121.625, -2.92915, 0.17 ) }
    dend_41 { pt3dadd( 22.4497, 125.038, -3.82987, 0.17 ) }
    dend_41 { pt3dadd( 24.0885, 131.895, -5.55769, 0.17 ) }
    dend_41 { pt3dadd( 24.6097, 134.269, -6.10448, 0.17 ) }
    dend_41 { pt3dadd( 24.9547, 135.906, -6.51342, 0.17 ) }
    dend_41 { pt3dadd( 25.1775, 137.181, -6.88196, 2.05 ) }
    dend_41 { pt3dadd( 25.2638, 137.969, -7.14755, 0.17 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 7/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 20.9022, 78.2673, 0.251053, 0.17 ) }
    dend_40 { pt3dadd( 18.2322, 76.7391, 0.011226, 0.17 ) }
    dend_40 { pt3dadd( 15.8444, 75.3724, -0.203253, 0.17 ) }
    dend_40 { pt3dadd( 11.675, 72.986, -0.577758, 0.17 ) }
    dend_40 { pt3dadd( 7.00677, 70.3141, -0.997074, 0.17 ) }
    dend_40 { pt3dadd( 0.905163, 66.8217, -1.54513, 0.17 ) }
    dend_40 { pt3dadd( -0.679253, 65.9149, -1.68745, 0.17 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 142.666, 39.18, -46.2663, 0.17 ) }
    dend_26 { pt3dadd( 147.749, 44.2009, -45.174, 0.17 ) }
    dend_26 { pt3dadd( 151.715, 48.1181, -44.3218, 0.17 ) }
    dend_26 { pt3dadd( 155.674, 52.0282, -43.4712, 0.17 ) }
    dend_26 { pt3dadd( 158.695, 55.0128, -42.8219, 0.17 ) }
    dend_26 { pt3dadd( 159.236, 55.5466, -42.7058, 0.17 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 20/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 142.666, 39.18, -46.2663, 0.17 ) }
    dend_23 { pt3dadd( 144.879, 44.4259, -47.0015, 0.17 ) }
    dend_23 { pt3dadd( 145.536, 45.9851, -47.22, 1.37 ) }
    dend_23 { pt3dadd( 145.743, 46.4751, -47.2887, 0.17 ) }
    dend_23 { pt3dadd( 146.753, 48.8705, -47.6244, 0.17 ) }
    // Section: dend_15, id: dend_15, parent: dend_7 (entry count 25/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 23.4206, -166.115, 18.8223, 1.2 ) }
    dend_15 { pt3dadd( 23.4069, -168.43, 19.8098, 1.2 ) }
    dend_15 { pt3dadd( 24.3597, -171.646, 23.541, 0.17 ) }
    dend_15 { pt3dadd( 24.7873, -172.814, 25.3686, 0.17 ) }
    dend_15 { pt3dadd( 25.499, -175.116, 29.3364, 0.17 ) }
    dend_15 { pt3dadd( 26.1469, -177.226, 33.7011, 0.17 ) }
    dend_15 { pt3dadd( 26.1686, -177.298, 33.859, 0.17 ) }
    dend_15 { pt3dadd( 27.842, -182.099, 45.5443, 1.54 ) }
    dend_15 { pt3dadd( 28.1566, -182.803, 47.4679, 0.17 ) }
    dend_15 { pt3dadd( 28.5321, -183.437, 49.7432, 0.17 ) }
    dend_15 { pt3dadd( 29.9623, -185.08, 58.6644, 0.17 ) }
    dend_15 { pt3dadd( 30.0616, -185.151, 59.2272, 1.37 ) }
    dend_15 { pt3dadd( 30.1501, -185.243, 59.7904, 0.17 ) }
    dend_15 { pt3dadd( 30.2593, -186.824, 64.1724, 0.17 ) }
    dend_15 { pt3dadd( 31.7713, -190.443, 74.0403, 0.17 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 40/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 23.4206, -166.115, 18.8223, 0.86 ) }
    dend_8 { pt3dadd( 25.1364, -169.123, 19.697, 0.86 ) }
    dend_8 { pt3dadd( 26.771, -172.507, 20.6356, 0.86 ) }
    dend_8 { pt3dadd( 27.0117, -173.101, 20.7959, 0.86 ) }
    dend_8 { pt3dadd( 28.1605, -176.284, 21.6421, 0.68 ) }
    dend_8 { pt3dadd( 28.8239, -178.36, 22.144, 0.34 ) }
    dend_8 { pt3dadd( 29.854, -181.897, 22.672, 0.34 ) }
    dend_8 { pt3dadd( 30.0366, -182.809, 22.7548, 1.2 ) }
    dend_8 { pt3dadd( 30.27, -184.223, 22.7999, 1.2 ) }
    dend_8 { pt3dadd( 30.2976, -184.477, 22.7973, 0.34 ) }
    dend_8 { pt3dadd( 30.4799, -187.648, 22.6328, 0.34 ) }
    dend_8 { pt3dadd( 30.6749, -191.786, 22.3926, 0.34 ) }
    dend_8 { pt3dadd( 30.8068, -193.885, 22.2551, 1.88 ) }
    dend_8 { pt3dadd( 30.9473, -195.68, 22.1434, 0.68 ) }
    dend_8 { pt3dadd( 31.3354, -199.181, 21.9248, 0.51 ) }
    dend_8 { pt3dadd( 31.7578, -202.85, 21.7586, 0.51 ) }
    dend_8 { pt3dadd( 31.9808, -205.011, 21.7244, 1.03 ) }
    dend_8 { pt3dadd( 32.1477, -207.209, 21.7898, 1.71 ) }
    dend_8 { pt3dadd( 32.2846, -209.417, 21.8461, 0.68 ) }
    dend_8 { pt3dadd( 32.4206, -211.677, 21.9183, 0.17 ) }
    dend_8 { pt3dadd( 32.5908, -214.428, 22.0229, 0.17 ) }
    dend_8 { pt3dadd( 32.6319, -216.377, 22.1472, 1.03 ) }
    dend_8 { pt3dadd( 32.564, -219.742, 22.4605, 1.03 ) }
    dend_8 { pt3dadd( 32.3435, -225.177, 23.0091, 1.03 ) }
    dend_8 { pt3dadd( 32.3268, -225.539, 23.0465, 1.03 ) }
    dend_8 { pt3dadd( 32.3147, -225.927, 23.0842, 1.03 ) }
    dend_8 { pt3dadd( 32.3049, -227.024, 23.1816, 0.17 ) }
    dend_8 { pt3dadd( 32.3215, -228.308, 23.2848, 0.17 ) }
    dend_8 { pt3dadd( 32.3735, -230.434, 23.4462, 0.34 ) }
    dend_8 { pt3dadd( 32.3587, -231.217, 23.5187, 0.34 ) }
    dend_8 { pt3dadd( 32.2547, -233.917, 23.7892, 0.34 ) }
    dend_8 { pt3dadd( 32.4398, -240.005, 24.2374, 1.37 ) }
    dend_8 { pt3dadd( 32.5324, -241.118, 24.2967, 0.17 ) }
    dend_8 { pt3dadd( 32.551, -241.304, 24.3055, 0.17 ) }
    dend_8 { pt3dadd( 32.7391, -243.282, 24.4018, 0.17 ) }
    dend_8 { pt3dadd( 32.9684, -245.07, 24.4662, 0.34 ) }
    dend_8 { pt3dadd( 34.0175, -250.071, 24.4891, 0.34 ) }
    dend_8 { pt3dadd( 34.4174, -251.295, 24.4396, 0.34 ) }
    dend_8 { pt3dadd( 34.4691, -251.475, 24.4351, 0.34 ) }
    dend_8 { pt3dadd( 34.8788, -253.322, 24.435, 0.34 ) }
    dend_8 { pt3dadd( 34.8788, -253.322, 24.435, 1.03 ) }
    dend_8 { pt3dadd( 35.0763, -254.214, 24.461, 0.17 ) }
    dend_8 { pt3dadd( 35.3296, -255.098, 24.5401, 0.17 ) }
    dend_8 { pt3dadd( 36.3095, -257.649, 24.6444, 1.37 ) }
    dend_8 { pt3dadd( 37.3719, -259.966, 24.647, 0.51 ) }
    dend_8 { pt3dadd( 38.1929, -261.621, 24.5463, 0.17 ) }
    dend_8 { pt3dadd( 40.642, -266.07, 24.1161, 0.51 ) }
    dend_8 { pt3dadd( 42.8164, -269.732, 23.4274, 0.51 ) }
    dend_8 { pt3dadd( 44.6572, -272.817, 22.6537, 1.88 ) }
    dend_8 { pt3dadd( 45.945, -275.145, 21.7336, 1.2 ) }
    dend_8 { pt3dadd( 46.8954, -277.165, 20.6886, 0.17 ) }
    dend_8 { pt3dadd( 47.6465, -279.35, 19.3053, 0.51 ) }
    dend_8 { pt3dadd( 48.1935, -282.806, 16.7353, 1.03 ) }
    dend_8 { pt3dadd( 48.3534, -284.735, 15.1593, 1.03 ) }
    dend_8 { pt3dadd( 48.6076, -289.35, 11.616, 0.17 ) }
    dend_8 { pt3dadd( 48.6851, -290.495, 10.8194, 0.17 ) }
    dend_8 { pt3dadd( 48.7041, -290.657, 10.7277, 0.17 ) }
    dend_8 { pt3dadd( 49.138, -292.715, 9.85842, 0.17 ) }
    dend_8 { pt3dadd( 50.3781, -295.322, 9.41675, 1.2 ) }
    dend_8 { pt3dadd( 51.7016, -297.233, 9.31341, 1.2 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( 52.5642, -298.339, 9.40982, 0.17 ) }
    dend_8 { pt3dadd( 52.6789, -298.487, 9.41676, 0.17 ) }
    dend_8 { pt3dadd( 54.2026, -300.633, 9.43223, 0.17 ) }
    dend_8 { pt3dadd( 54.3101, -300.801, 9.42428, 1.54 ) }
    dend_8 { pt3dadd( 55.1639, -302.466, 9.25753, 0.17 ) }
    dend_8 { pt3dadd( 55.7095, -303.502, 9.1475, 0.17 ) }
    dend_8 { pt3dadd( 56.3547, -304.729, 9.09842, 0.17 ) }
    dend_8 { pt3dadd( 57.1456, -306.2, 9.1073, 1.37 ) }
    dend_8 { pt3dadd( 57.6376, -307.2, 9.17292, 0.68 ) }
    dend_8 { pt3dadd( 57.7486, -307.429, 9.19358, 0.68 ) }
    dend_8 { pt3dadd( 58.9184, -309.881, 9.46486, 0.17 ) }
    dend_8 { pt3dadd( 60.1916, -312.008, 10.3938, 0.17 ) }
    dend_8 { pt3dadd( 60.54, -312.59, 10.6982, 1.71 ) }
    dend_8 { pt3dadd( 61.3117, -313.872, 11.4925, 1.54 ) }
    dend_8 { pt3dadd( 61.8063, -314.693, 12.0684, 0.17 ) }
    dend_8 { pt3dadd( 62.5987, -316.001, 13.0929, 0.17 ) }
    dend_8 { pt3dadd( 65.6901, -321.123, 18.1652, 2.05 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 17/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 1.69948, -40.9689, -21.6429, 0.17 ) }
    dend_6 { pt3dadd( 1.97946, -41.435, -21.2904, 0.17 ) }
    dend_6 { pt3dadd( 2.59152, -42.4255, -20.4651, 0.17 ) }
    dend_6 { pt3dadd( 3.70582, -44.2016, -18.9116, 1.2 ) }
    dend_6 { pt3dadd( 5.48029, -46.7288, -16.0572, 0.17 ) }
    dend_6 { pt3dadd( 6.8598, -48.6559, -13.7262, 0.17 ) }
    dend_6 { pt3dadd( 7.0225, -48.8739, -13.4582, 0.17 ) }
    dend_6 { pt3dadd( 7.93348, -49.9872, -11.9841, 1.37 ) }
    dend_6 { pt3dadd( 7.96335, -50.0231, -11.9359, 1.37 ) }
    dend_6 { pt3dadd( 10.0597, -52.5199, -8.75928, 0.17 ) }
    dend_6 { pt3dadd( 10.7858, -53.4688, -7.75315, 0.17 ) }
    dend_6 { pt3dadd( 11.2864, -54.0827, -7.01541, 0.17 ) }
    dend_6 { pt3dadd( 11.362, -54.1716, -6.8778, 0.17 ) }
    dend_6 { pt3dadd( 12.4302, -55.4158, -4.89608, 0.17 ) }
    dend_6 { pt3dadd( 12.7069, -55.6845, -4.38238, 1.2 ) }
    dend_6 { pt3dadd( 12.8799, -55.8355, -4.05272, 0.17 ) }
    dend_6 { pt3dadd( 14.7211, -57.2973, -0.275796, 0.17 ) }
    dend_6 { pt3dadd( 16.8827, -58.9492, 4.26436, 0.17 ) }
    dend_6 { pt3dadd( 17.4051, -59.3132, 5.35105, 0.17 ) }
    dend_6 { pt3dadd( 19.1355, -60.2907, 8.78083, 0.17 ) }
    dend_6 { pt3dadd( 19.252, -60.3553, 8.9963, 0.17 ) }
    dend_6 { pt3dadd( 19.5099, -60.4993, 9.43283, 0.17 ) }
    dend_6 { pt3dadd( 20.2982, -60.9702, 10.4544, 0.17 ) }
    dend_6 { pt3dadd( 20.4876, -61.105, 10.63, 0.68 ) }
    dend_6 { pt3dadd( 21.3409, -61.8034, 11.4511, 0.68 ) }
    dend_6 { pt3dadd( 22.0019, -62.4375, 12.0601, 0.68 ) }
    dend_6 { pt3dadd( 23.8749, -65.1305, 14.6172, 0.17 ) }
    dend_6 { pt3dadd( 24.0592, -66.4343, 15.7205, 0.17 ) }
    dend_6 { pt3dadd( 23.862, -67.2479, 16.3186, 1.2 ) }
    dend_6 { pt3dadd( 23.6018, -67.6894, 16.5598, 0.17 ) }
    dend_6 { pt3dadd( 23.5362, -67.7843, 16.6026, 0.17 ) }
    dend_6 { pt3dadd( 20.5455, -72.0205, 17.3594, 0.17 ) }
    dend_6 { pt3dadd( 19.6157, -73.3531, 17.3707, 0.17 ) }
    dend_6 { pt3dadd( 19.1603, -74.0318, 17.342, 0.17 ) }
    dend_6 { pt3dadd( 16.6825, -78.1445, 17.0062, 0.17 ) }
    dend_6 { pt3dadd( 15.3492, -80.6673, 16.766, 0.17 ) }
    dend_6 { pt3dadd( 12.989, -85.7124, 16.2216, 0.17 ) }
    dend_6 { pt3dadd( 11.8287, -88.55, 15.6846, 0.17 ) }
    dend_6 { pt3dadd( 11.1966, -89.9774, 15.3506, 0.17 ) }
    dend_6 { pt3dadd( 10.4113, -91.6087, 14.926, 0.17 ) }
    dend_6 { pt3dadd( 8.80878, -95.2132, 13.9336, 0.17 ) }
    dend_6 { pt3dadd( 8.43751, -96.0764, 13.6879, 0.17 ) }
    dend_6 { pt3dadd( 6.76027, -100.436, 12.6975, 0.17 ) }
    dend_6 { pt3dadd( 6.17177, -102.245, 12.2546, 0.17 ) }
    dend_6 { pt3dadd( 5.72594, -103.797, 11.8852, 0.17 ) }
    dend_6 { pt3dadd( 4.57502, -108.106, 10.9389, 0.17 ) }
    dend_6 { pt3dadd( 3.56468, -112.652, 10.1545, 0.17 ) }
    dend_6 { pt3dadd( 2.86023, -116.276, 9.65644, 0.17 ) }
    dend_6 { pt3dadd( 2.53597, -118.197, 9.48648, 0.17 ) }
    dend_6 { pt3dadd( 2.15997, -120.431, 9.30591, 0.17 ) }
    dend_6 { pt3dadd( 1.77262, -122.411, 9.16064, 0.17 ) }
    dend_6 { pt3dadd( 0.617914, -127.015, 8.94131, 0.17 ) }
    dend_6 { pt3dadd( -0.0724193, -129.393, 8.96949, 1.71 ) }
    dend_6 { pt3dadd( -0.325927, -130.17, 8.95551, 0.17 ) }
    dend_6 { pt3dadd( -0.841559, -131.573, 8.84561, 0.17 ) }
    dend_6 { pt3dadd( -0.93253, -131.805, 8.81287, 0.17 ) }
    dend_6 { pt3dadd( -1.63674, -133.442, 8.48459, 0.17 ) }
    dend_6 { pt3dadd( -2.85985, -135.639, 7.71201, 0.17 ) }
    dend_6 { pt3dadd( -4.07169, -137.652, 6.87004, 0.17 ) }
    dend_6 { pt3dadd( -5.19175, -139.438, 5.94309, 1.54 ) }
    dend_6 { pt3dadd( -5.44374, -139.836, 5.70585, 0.17 ) }
    dend_6 { pt3dadd( -5.9068, -140.57, 5.27367, 0.17 ) }
    dend_6 { pt3dadd( -7.27108, -142.949, 4.01074, 0.17 ) }
    dend_6 { pt3dadd( -7.59491, -143.671, 3.69461, 1.2 ) }
    dend_6 { pt3dadd( -7.59491, -143.671, 3.69461, 0.17 ) }
    dend_6 { pt3dadd( -7.92054, -144.826, 3.57929, 0.17 ) }
    dend_6 { pt3dadd( -8.4581, -146.954, 3.47304, 0.17 ) }
    dend_6 { pt3dadd( -8.98749, -149.283, 3.54324, 0.17 ) }
    dend_6 { pt3dadd( -9.03141, -149.46, 3.56517, 0.17 ) }
    dend_6 { pt3dadd( -9.52481, -151.395, 3.52472, 0.17 ) }
    dend_6 { pt3dadd( -9.57404, -151.565, 3.50596, 0.17 ) }
    dend_6 { pt3dadd( -9.61734, -151.683, 3.47176, 0.17 ) }
    dend_6 { pt3dadd( -10.9397, -154.622, 2.16991, 0.17 ) }
    dend_6 { pt3dadd( -11.5059, -155.914, 1.5084, 0.17 ) }
    dend_6 { pt3dadd( -13.1744, -159.905, -0.498408, 0.17 ) }
    dend_6 { pt3dadd( -14.1945, -162.386, -1.69021, 0.17 ) }
    dend_6 { pt3dadd( -15.8812, -166.64, -3.51419, 0.17 ) }
    dend_6 { pt3dadd( -17.5114, -170.905, -5.19358, 0.17 ) }
    dend_6 { pt3dadd( -19.2125, -175.32, -6.70722, 0.17 ) }
    dend_6 { pt3dadd( -20.3035, -178.189, -7.46872, 0.17 ) }
    dend_6 { pt3dadd( -21.319, -180.694, -7.84304, 0.17 ) }
    dend_6 { pt3dadd( -22.7995, -184.341, -8.17173, 0.17 ) }
    dend_6 { pt3dadd( -23.1473, -185.178, -8.17579, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -24.669, -188.556, -8.0117, 0.17 ) }
    dend_6 { pt3dadd( -25.5349, -190.239, -7.88709, 0.17 ) }
    dend_6 { pt3dadd( -27.4327, -193.328, -7.65706, 0.17 ) }
    dend_6 { pt3dadd( -30.7572, -197.968, -7.30343, 0.17 ) }
    dend_6 { pt3dadd( -31.1073, -198.365, -7.26639, 0.68 ) }
    dend_6 { pt3dadd( -32.647, -199.892, -7.09484, 0.17 ) }
    dend_6 { pt3dadd( -33.5602, -200.667, -6.98123, 0.17 ) }
    dend_6 { pt3dadd( -36.9323, -203.267, -6.45173, 0.17 ) }
    dend_6 { pt3dadd( -37.1264, -203.421, -6.40962, 0.17 ) }
    dend_6 { pt3dadd( -38.6431, -204.732, -5.95861, 0.17 ) }
    dend_6 { pt3dadd( -38.9061, -204.999, -5.8775, 0.17 ) }
    dend_6 { pt3dadd( -40.6243, -206.856, -5.34053, 0.17 ) }
    dend_6 { pt3dadd( -42.0351, -208.525, -4.89052, 0.17 ) }
    dend_6 { pt3dadd( -44.295, -211.493, -4.22103, 0.17 ) }
    dend_6 { pt3dadd( -46.6636, -214.69, -3.52105, 0.17 ) }
    dend_6 { pt3dadd( -46.738, -214.794, -3.49916, 0.17 ) }
    dend_6 { pt3dadd( -49.3305, -218.376, -2.75287, 0.17 ) }
    dend_6 { pt3dadd( -49.4045, -218.473, -2.73263, 0.17 ) }
    dend_6 { pt3dadd( -50.58, -219.723, -2.4384, 0.17 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 19/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 1.69948, -40.9689, -21.6429, 0.17 ) }
    dend_5 { pt3dadd( 2.70185, -41.6375, -19.0011, 0.17 ) }
    dend_5 { pt3dadd( 4.60249, -42.5387, -13.9488, 1.37 ) }
    dend_5 { pt3dadd( 4.64637, -42.5626, -13.8226, 1.37 ) }
    dend_5 { pt3dadd( 4.80406, -42.6543, -13.3499, 0.17 ) }
    dend_5 { pt3dadd( 6.64962, -43.7116, -7.8356, 0.17 ) }
    dend_5 { pt3dadd( 6.78311, -43.7743, -7.46425, 1.03 ) }
    dend_5 { pt3dadd( 8.49999, -44.3721, -2.4915, 0.17 ) }
    dend_5 { pt3dadd( 10.7476, -44.9497, 3.52727, 0.17 ) }
    dend_5 { pt3dadd( 10.8466, -44.9731, 3.78754, 1.2 ) }
    dend_5 { pt3dadd( 11.0596, -45.0164, 4.33205, 0.17 ) }
    dend_5 { pt3dadd( 11.9954, -45.1845, 6.66539, 0.17 ) }
    dend_5 { pt3dadd( 13.2542, -45.3696, 9.81307, 1.2 ) }
    dend_5 { pt3dadd( 13.3224, -45.3724, 9.95966, 0.17 ) }
    dend_5 { pt3dadd( 16.7935, -47.1079, 17.2176, 0.17 ) }
    dend_5 { pt3dadd( 20.2242, -49.1975, 24.4012, 0.17 ) }
    dend_5 { pt3dadd( 23.7515, -52.4843, 31.0715, 0.17 ) }
    dend_5 { pt3dadd( 27.7492, -56.397, 37.1087, 0.17 ) }
    dend_5 { pt3dadd( 32.7351, -61.3487, 41.3936, 0.17 ) }
    dend_5 { pt3dadd( 38.2802, -64.3631, 46.676, 0.17 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 39/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 146.753, 48.8705, -47.6244, 0.17 ) }
    dend_25 { pt3dadd( 148.974, 55.1155, -51.28, 0.17 ) }
    dend_25 { pt3dadd( 151.846, 64.5428, -55.83, 0.17 ) }
    dend_25 { pt3dadd( 151.885, 64.6941, -55.8968, 0.17 ) }
    dend_25 { pt3dadd( 153.011, 69.5974, -57.9451, 0.17 ) }
    dend_25 { pt3dadd( 154.171, 75.0659, -60.1651, 0.17 ) }
    dend_25 { pt3dadd( 155.7, 83.5875, -63.4408, 0.17 ) }
    dend_25 { pt3dadd( 156.083, 88.1058, -64.8198, 0.17 ) }
    dend_25 { pt3dadd( 156.135, 93.7477, -66.1359, 0.17 ) }
    dend_25 { pt3dadd( 156.069, 95.0586, -66.4723, 1.88 ) }
    dend_25 { pt3dadd( 156.002, 95.5353, -66.6281, 0.17 ) }
    dend_25 { pt3dadd( 154.92, 100.229, -68.3225, 0.17 ) }
    dend_25 { pt3dadd( 153.719, 103.151, -69.4082, 0.17 ) }
    dend_25 { pt3dadd( 151.913, 106.768, -70.9734, 0.17 ) }
    dend_25 { pt3dadd( 151.494, 107.467, -71.2946, 0.17 ) }
    dend_25 { pt3dadd( 149.515, 110.668, -72.9563, 0.17 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 55/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 146.753, 48.8705, -47.6244, 0.17 ) }
    dend_24 { pt3dadd( 150.903, 47.0011, -49.8347, 0.17 ) }
    dend_24 { pt3dadd( 153.282, 45.9299, -51.1012, 0.17 ) }
    dend_24 { pt3dadd( 155.948, 44.7292, -52.5209, 0.17 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 59/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 65.6901, -321.123, 18.1652, 0.17 ) }
    dend_10 { pt3dadd( 66.4595, -321.95, 19.0106, 0.17 ) }
    dend_10 { pt3dadd( 67.0344, -322.794, 19.8551, 0.17 ) }
    dend_10 { pt3dadd( 67.1569, -323.056, 20.0242, 0.17 ) }
    dend_10 { pt3dadd( 67.2666, -323.338, 20.1451, 1.03 ) }
    dend_10 { pt3dadd( 67.8197, -325.052, 20.6879, 0.51 ) }
    dend_10 { pt3dadd( 68.7487, -328.272, 21.5155, 0.17 ) }
    dend_10 { pt3dadd( 68.9512, -329.514, 21.744, 0.17 ) }
    dend_10 { pt3dadd( 69.1918, -333.059, 22.2266, 1.2 ) }
    dend_10 { pt3dadd( 69.1697, -334.164, 22.3258, 0.17 ) }
    dend_10 { pt3dadd( 69.109, -334.984, 22.3488, 0.17 ) }
    dend_10 { pt3dadd( 69.0904, -335.151, 22.3514, 0.17 ) }
    dend_10 { pt3dadd( 68.9344, -336.548, 22.3881, 0.17 ) }
    dend_10 { pt3dadd( 68.8306, -337.951, 22.5756, 1.37 ) }
    dend_10 { pt3dadd( 68.7393, -339.42, 22.9331, 0.17 ) }
    dend_10 { pt3dadd( 68.6932, -341.3, 23.6088, 0.17 ) }
    dend_10 { pt3dadd( 68.8473, -343.59, 24.5659, 0.68 ) }
    dend_10 { pt3dadd( 68.9259, -344.135, 24.8081, 0.17 ) }
    dend_10 { pt3dadd( 69.1854, -345.198, 25.3016, 0.17 ) }
    dend_10 { pt3dadd( 69.5072, -346.194, 25.7898, 0.17 ) }
    dend_10 { pt3dadd( 70.6761, -349.38, 27.3269, 0.68 ) }
    dend_10 { pt3dadd( 71.4821, -351.654, 28.3701, 0.68 ) }
    dend_10 { pt3dadd( 71.849, -353.008, 28.8624, 0.34 ) }
    dend_10 { pt3dadd( 72.0419, -353.883, 29.1141, 0.17 ) }
    dend_10 { pt3dadd( 72.0694, -354.045, 29.1479, 0.17 ) }
    dend_10 { pt3dadd( 72.3241, -356.379, 29.4413, 0.17 ) }
    dend_10 { pt3dadd( 72.3969, -357.768, 29.4923, 0.68 ) }
    dend_10 { pt3dadd( 72.428, -360.566, 29.3234, 0.17 ) }
    dend_10 { pt3dadd( 72.4167, -362.124, 29.2171, 0.17 ) }
    dend_10 { pt3dadd( 72.3936, -363.472, 29.1122, 1.2 ) }
    dend_10 { pt3dadd( 72.3982, -364.878, 28.9612, 0.17 ) }
    dend_10 { pt3dadd( 72.4865, -366.657, 28.631, 0.17 ) }
    dend_10 { pt3dadd( 72.8842, -370.396, 27.5712, 1.37 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 92/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 65.6901, -321.123, 18.1652, 0.17 ) }
    dend_9 { pt3dadd( 65.158, -322.785, 17.9256, 0.17 ) }
    dend_9 { pt3dadd( 64.0905, -325.971, 17.4577, 0.17 ) }
    dend_9 { pt3dadd( 63.6619, -327.372, 17.2654, 1.54 ) }
    dend_9 { pt3dadd( 63.3802, -328.409, 17.1638, 0.17 ) }
    dend_9 { pt3dadd( 61.9965, -334.267, 17.0574, 0.17 ) }
    dend_9 { pt3dadd( 61.7764, -334.957, 17.0105, 1.54 ) }
    dend_9 { pt3dadd( 61.4208, -335.921, 16.9242, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_9 { pt3dadd( 60.5856, -337.99, 16.7267, 0.17 ) }
    dend_9 { pt3dadd( 59.466, -340.724, 16.4832, 0.17 ) }
    dend_9 { pt3dadd( 57.4159, -345.643, 16.173, 0.17 ) }
    dend_9 { pt3dadd( 53.6873, -353.0, 15.5445, 0.17 ) }
    dend_9 { pt3dadd( 52.8445, -354.485, 15.3419, 1.03 ) }
    dend_9 { pt3dadd( 52.1969, -355.517, 15.1515, 1.03 ) }
    dend_9 { pt3dadd( 51.7839, -356.143, 14.9825, 0.17 ) }
    dend_9 { pt3dadd( 49.9276, -358.963, 13.8663, 0.17 ) }
    dend_9 { pt3dadd( 46.5436, -364.803, 11.0556, 1.54 ) }
    dend_9 { pt3dadd( 45.4822, -367.526, 9.80442, 1.2 ) }
    dend_9 { pt3dadd( 45.4144, -367.738, 9.70237, 1.2 ) }
    dend_9 { pt3dadd( 44.2738, -372.249, 7.51893, 0.17 ) }
    dend_9 { pt3dadd( 43.9688, -374.843, 6.32526, 0.17 ) }
    dend_9 { pt3dadd( 44.0889, -377.898, 5.05559, 0.68 ) }
    dend_9 { pt3dadd( 44.5736, -380.869, 4.10198, 0.17 ) }
    dend_9 { pt3dadd( 44.6144, -381.104, 4.03897, 0.17 ) }
    dend_9 { pt3dadd( 44.7136, -381.625, 3.93493, 0.86 ) }
    dend_9 { pt3dadd( 45.675, -385.88, 3.5066, 0.17 ) }
    dend_9 { pt3dadd( 46.0371, -387.472, 3.44852, 1.03 ) }
    dend_9 { pt3dadd( 46.1367, -387.943, 3.43888, 0.17 ) }
    dend_9 { pt3dadd( 46.8527, -391.519, 3.40608, 0.17 ) }
    dend_9 { pt3dadd( 46.9915, -392.27, 3.41076, 1.03 ) }
    dend_9 { pt3dadd( 47.0877, -392.95, 3.4446, 0.17 ) }
    dend_9 { pt3dadd( 47.4809, -396.747, 3.77734, 0.17 ) }
    dend_9 { pt3dadd( 47.6781, -398.816, 3.97567, 1.2 ) }
    dend_9 { pt3dadd( 47.7426, -399.68, 4.07653, 0.17 ) }
    dend_9 { pt3dadd( 47.8421, -403.861, 4.77696, 0.17 ) }
    dend_9 { pt3dadd( 47.8234, -405.756, 5.15832, 0.17 ) }
    dend_9 { pt3dadd( 47.7649, -406.821, 5.42063, 1.2 ) }
    dend_9 { pt3dadd( 47.6905, -408.792, 6.05758, 0.17 ) }
    dend_9 { pt3dadd( 47.6696, -411.557, 7.04749, 0.17 ) }
    dend_9 { pt3dadd( 47.7162, -412.889, 7.52774, 0.86 ) }
    dend_9 { pt3dadd( 47.8629, -414.672, 8.17469, 0.17 ) }
    dend_9 { pt3dadd( 48.0319, -416.502, 8.84184, 0.17 ) }
    dend_9 { pt3dadd( 48.2833, -420.352, 10.3473, 0.17 ) }
    dend_9 { pt3dadd( 48.3011, -421.042, 10.5823, 1.54 ) }
    dend_9 { pt3dadd( 48.2702, -422.3, 10.9292, 0.17 ) }
    dend_9 { pt3dadd( 48.1306, -424.676, 11.4275, 0.17 ) }
    dend_9 { pt3dadd( 47.8585, -426.911, 11.8493, 0.17 ) }
    dend_9 { pt3dadd( 47.4954, -429.091, 12.1994, 0.17 ) }
    dend_9 { pt3dadd( 46.8471, -432.069, 12.6023, 1.54 ) }
    dend_9 { pt3dadd( 46.1449, -435.427, 13.0688, 0.17 ) }
    dend_9 { pt3dadd( 45.8196, -438.487, 13.7367, 0.17 ) }
    dend_9 { pt3dadd( 45.9957, -441.649, 14.5424, 0.17 ) }
    dend_9 { pt3dadd( 46.1101, -442.479, 14.8098, 1.03 ) }
    dend_9 { pt3dadd( 46.1507, -442.706, 14.9003, 1.03 ) }
    dend_9 { pt3dadd( 46.6935, -445.025, 15.9706, 0.17 ) }
    dend_9 { pt3dadd( 48.3359, -450.752, 18.8204, 0.17 ) }
    dend_9 { pt3dadd( 49.5397, -454.454, 20.8176, 0.17 ) }
    dend_9 { pt3dadd( 51.0219, -458.622, 23.1466, 0.17 ) }
    dend_9 { pt3dadd( 51.2884, -459.42, 23.6067, 0.17 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 72.8842, -370.396, 27.5712, 0.17 ) }
    dend_12 { pt3dadd( 72.2378, -373.879, 29.9548, 0.17 ) }
    dend_12 { pt3dadd( 71.9985, -375.991, 31.1038, 0.17 ) }
    dend_12 { pt3dadd( 71.9849, -376.167, 31.1903, 0.17 ) }
    dend_12 { pt3dadd( 71.8577, -378.122, 32.1032, 1.2 ) }
    dend_12 { pt3dadd( 71.8646, -378.869, 32.3853, 0.17 ) }
    dend_12 { pt3dadd( 71.9535, -380.174, 32.7416, 0.17 ) }
    dend_12 { pt3dadd( 72.1078, -381.339, 32.7736, 0.86 ) }
    dend_12 { pt3dadd( 72.2287, -381.873, 32.7638, 0.17 ) }
    dend_12 { pt3dadd( 72.3333, -382.293, 32.7515, 0.17 ) }
    dend_12 { pt3dadd( 72.9893, -384.749, 32.6579, 0.17 ) }
    dend_12 { pt3dadd( 73.5717, -387.016, 32.5838, 0.86 ) }
    dend_12 { pt3dadd( 73.8679, -388.374, 32.5655, 0.17 ) }
    dend_12 { pt3dadd( 74.1092, -390.482, 32.3369, 0.17 ) }
    dend_12 { pt3dadd( 74.1758, -392.403, 32.0282, 1.71 ) }
    dend_12 { pt3dadd( 74.1706, -392.585, 31.9903, 0.17 ) }
    dend_12 { pt3dadd( 73.9695, -394.175, 31.5906, 0.17 ) }
    dend_12 { pt3dadd( 73.6716, -395.812, 31.1122, 0.17 ) }
    dend_12 { pt3dadd( 72.5602, -400.502, 29.6027, 0.17 ) }
    dend_12 { pt3dadd( 72.2783, -401.536, 29.2574, 1.03 ) }
    dend_12 { pt3dadd( 72.2315, -401.716, 29.2, 0.17 ) }
    dend_12 { pt3dadd( 71.9823, -403.33, 28.8224, 0.17 ) }
    dend_12 { pt3dadd( 71.8884, -404.524, 28.6233, 1.37 ) }
    dend_12 { pt3dadd( 71.8887, -404.71, 28.609, 0.17 ) }
    dend_12 { pt3dadd( 72.1431, -406.635, 28.6801, 0.17 ) }
    dend_12 { pt3dadd( 72.3845, -408.083, 28.7104, 0.17 ) }
    dend_12 { pt3dadd( 72.7963, -411.908, 28.895, 0.17 ) }
    dend_12 { pt3dadd( 72.8111, -412.093, 28.9172, 0.17 ) }
    dend_12 { pt3dadd( 72.8792, -412.877, 29.0443, 1.54 ) }
    dend_12 { pt3dadd( 72.9784, -414.5, 29.3522, 0.17 ) }
    dend_12 { pt3dadd( 72.9223, -416.183, 29.7532, 0.17 ) }
    dend_12 { pt3dadd( 72.7378, -419.32, 31.016, 0.17 ) }
    dend_12 { pt3dadd( 72.6874, -421.061, 31.91, 0.17 ) }
    dend_12 { pt3dadd( 72.6689, -423.611, 33.3542, 0.17 ) }
    dend_12 { pt3dadd( 72.7177, -427.569, 35.7302, 0.17 ) }
    dend_12 { pt3dadd( 72.8208, -430.933, 37.8572, 0.17 ) }
    dend_12 { pt3dadd( 73.1673, -436.263, 41.3687, 0.17 ) }
    dend_12 { pt3dadd( 73.446, -439.131, 43.293, 0.17 ) }
    dend_12 { pt3dadd( 73.4792, -439.427, 43.5004, 1.71 ) }
    dend_12 { pt3dadd( 73.5929, -440.177, 44.092, 0.17 ) }
    dend_12 { pt3dadd( 73.9542, -441.49, 45.1921, 0.17 ) }
    dend_12 { pt3dadd( 74.0387, -441.698, 45.3409, 0.17 ) }
    dend_12 { pt3dadd( 74.6328, -443.225, 46.0319, 0.17 ) }
    dend_12 { pt3dadd( 75.8983, -446.731, 47.4842, 0.17 ) }
    dend_12 { pt3dadd( 76.0902, -447.242, 47.6824, 0.17 ) }
    dend_12 { pt3dadd( 76.4672, -448.173, 47.9727, 0.17 ) }
    dend_12 { pt3dadd( 77.0047, -449.451, 48.2827, 1.54 ) }
    dend_12 { pt3dadd( 77.3834, -450.324, 48.4214, 0.17 ) }
    dend_12 { pt3dadd( 77.7088, -451.056, 48.4433, 0.17 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( 77.8603, -451.614, 48.4309, 0.17 ) }
    dend_12 { pt3dadd( 78.3351, -454.877, 48.5386, 0.17 ) }
    dend_12 { pt3dadd( 78.3613, -455.424, 48.5445, 1.71 ) }
    dend_12 { pt3dadd( 78.3651, -455.694, 48.55, 0.17 ) }
    dend_12 { pt3dadd( 78.3279, -458.602, 48.6266, 0.17 ) }
    dend_12 { pt3dadd( 78.1672, -462.48, 48.75, 0.17 ) }
    dend_12 { pt3dadd( 77.7644, -467.427, 48.9487, 0.17 ) }
    dend_12 { pt3dadd( 77.3934, -469.986, 49.0832, 0.17 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 8/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 72.8842, -370.396, 27.5712, 0.17 ) }
    dend_11 { pt3dadd( 73.4393, -372.261, 27.3925, 0.17 ) }
    dend_11 { pt3dadd( 74.097, -374.267, 27.1484, 0.17 ) }
    dend_11 { pt3dadd( 74.1559, -374.436, 27.1249, 1.2 ) }
    dend_11 { pt3dadd( 74.3366, -374.931, 27.0488, 0.17 ) }
    dend_11 { pt3dadd( 75.1685, -377.163, 26.6912, 0.17 ) }
    dend_11 { pt3dadd( 75.7574, -378.642, 26.422, 1.37 ) }
    dend_11 { pt3dadd( 76.227, -379.542, 26.2346, 0.17 ) }
    dend_11 { pt3dadd( 76.3167, -379.695, 26.2008, 0.17 ) }
    dend_11 { pt3dadd( 77.5967, -381.982, 25.7778, 0.17 ) }
    dend_11 { pt3dadd( 77.6889, -382.126, 25.7663, 0.17 ) }
    dend_11 { pt3dadd( 78.9587, -383.976, 25.7893, 0.17 ) }
    dend_11 { pt3dadd( 81.9461, -388.254, 26.1588, 0.17 ) }
    dend_11 { pt3dadd( 83.1592, -389.993, 26.3324, 0.17 ) }
    dend_11 { pt3dadd( 84.5513, -392.064, 26.5162, 0.17 ) }
    dend_11 { pt3dadd( 87.1746, -395.91, 26.9536, 1.37 ) }
    dend_11 { pt3dadd( 88.3275, -397.62, 27.1786, 0.17 ) }
    dend_11 { pt3dadd( 88.4259, -397.77, 27.2047, 0.17 ) }
    dend_11 { pt3dadd( 91.1205, -402.093, 28.0673, 0.17 ) }
    dend_11 { pt3dadd( 93.1394, -405.197, 28.489, 0.17 ) }
    dend_11 { pt3dadd( 97.7521, -414.431, 29.2939, 0.17 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 29/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 77.3934, -469.986, 49.0832, 0.17 ) }
    dend_14 { pt3dadd( 81.1659, -473.37, 50.4718, 0.17 ) }
    dend_14 { pt3dadd( 84.0739, -475.979, 51.5421, 0.17 ) }
    dend_14 { pt3dadd( 86.7337, -478.365, 52.5211, 0.17 ) }
    dend_14 { pt3dadd( 86.8876, -478.503, 52.5778, 0.17 ) }
    dend_14 { pt3dadd( 93.5526, -484.482, 55.0309, 0.17 ) }
    dend_14 { pt3dadd( 94.0587, -484.936, 55.2172, 0.17 ) }
    dend_14 { pt3dadd( 103.591, -493.696, 56.4086, 0.17 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 77.3934, -469.986, 49.0832, 0.17 ) }
    dend_13 { pt3dadd( 76.2912, -471.879, 49.8133, 0.17 ) }
    dend_13 { pt3dadd( 74.7918, -474.454, 50.8066, 0.17 ) }
    dend_13 { pt3dadd( 74.0877, -475.664, 51.273, 0.17 ) }
    dend_13 { pt3dadd( 74.0308, -475.761, 51.3107, 0.17 ) }
    dend_13 { pt3dadd( 71.6821, -482.133, 54.0229, 0.17 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_29, dend_18, dend_17, dend_0, dend_50, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_30, dend_20, dend_19, dend_16, dend_1, dend_56, dend_51, dend_49, dend_46, dend_42, dend_37, dend_28, dend_21, dend_3, dend_2, dend_60, dend_57, dend_53, dend_52, dend_48, dend_47, dend_39, dend_38, dend_27, dend_22, dend_7, dend_4, dend_62, dend_61, dend_59, dend_58, dend_55, dend_54, dend_41, dend_40, dend_26, dend_23, dend_15, dend_8, dend_6, dend_5, dend_25, dend_24, dend_10, dend_9, dend_12, dend_11, dend_14, dend_13]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_17 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_45 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_43 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_33 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_31 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_30 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_56 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_51 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_49 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_46 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_42 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_60 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_53 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_52 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_27 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_22 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_41 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_15 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_8 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_5 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_25 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_10 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_9 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_12 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_11 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_29 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_20 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_1 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_21 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_28 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_57 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_38 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_40 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_23 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_24 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_26 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_13 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_14 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 7
    dend_45 nseg = 5
    dend_43 nseg = 7
    dend_36 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 9
    dend_30 nseg = 9
    dend_16 nseg = 7
    dend_56 nseg = 3
    dend_51 nseg = 5
    dend_49 nseg = 11
    dend_46 nseg = 5
    dend_42 nseg = 5
    dend_2 nseg = 5
    dend_60 nseg = 9
    dend_53 nseg = 5
    dend_52 nseg = 3
    dend_47 nseg = 7
    dend_27 nseg = 7
    dend_22 nseg = 7
    dend_7 nseg = 7
    dend_61 nseg = 7
    dend_59 nseg = 3
    dend_58 nseg = 7
    dend_55 nseg = 5
    dend_41 nseg = 3
    dend_15 nseg = 3
    dend_8 nseg = 9
    dend_6 nseg = 11
    dend_5 nseg = 5
    dend_25 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 7
    dend_12 nseg = 5
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L5_NBC_e7c18ce52f_0_0


