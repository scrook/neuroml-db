// Cell: bAC217_L5_NBC_e943473349_0_0
/*
{
  "id" : "bAC217_L5_NBC_e943473349_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-8.76533, -3.11148, 0.0, 3.33266", "-7.9581, -2.82432, 0.0, 5.72456", "-7.15087, -2.53716, 0.0, 7.79007", "-6.34364, -2.25, 0.0, 8.98288", "-5.53641, -1.96284, 0.0, 9.97099", "-4.72918, -1.67568, 0.0, 10.9098", "-3.92195, -1.38852, 0.0, 11.708", "-3.11472, -1.10136, 0.0, 12.2471", "-2.30749, -0.8142, 0.0, 12.5813", "-1.50026, -0.52704, 0.0, 12.8499", "-0.693026, -0.23988, 0.0, 13.1177", "0.114204, 0.0472794, 0.0, 13.2864", "0.921435, 0.334439, 0.0, 13.0353", "1.72867, 0.621599, 0.0, 12.7416", "2.5359, 0.908759, 0.0, 12.4079", "3.34313, 1.19592, 0.0, 11.9163", "4.15036, 1.48308, 0.0, 11.2063", "4.95759, 1.77024, 0.0, 9.60841", "5.76482, 2.0574, 0.0, 7.72848", "6.57205, 2.34456, 0.0, 4.99653", "7.37928, 2.63172, 0.0, 2.95975" ]
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "4.77184, 3.65758, 4.52, 2.05", "6.95351, 5.0399, 4.52, 1.59", "8.26204, 5.86899, 4.52, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-5.33816, -1.89692, -6.49, 1.14", "-6.97181, -2.07824, -7.75774, 0.45", "-8.1528, -2.05051, -8.59994, 0.45", "-9.8435, -1.81984, -9.67928, 0.68", "-11.1758, -1.55684, -10.451, 0.68", "-13.1743, -1.23783, -11.4777, 0.68", "-14.3183, -1.17277, -12.0254, 0.68", "-17.0963, -1.14438, -13.3395, 0.68", "-19.3263, -1.14906, -14.3067, 0.68", "-21.1634, -1.12191, -15.0274, 0.68", "-23.3591, -0.89907, -15.7774, 1.14", "-26.0783, -0.453578, -16.532, 0.23", "-37.059, 1.55484, -23.0252, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-0.18816, -3.66092, -7.25, 1.36", "-0.842185, -6.58932, -7.21394, 1.36", "-1.33153, -8.78037, -7.18696, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.84184, -3.53492, -2.34, 2.95", "6.3583, -5.96943, -2.41838, 1.59", "8.51857, -9.43751, -2.53002, 1.59", "10.3588, -12.3918, -2.62513, 1.59", "12.4482, -15.7461, -2.73312, 1.36", "14.3507, -18.8003, -2.83144, 2.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.39816, -4.42742, -2.42, 1.82", "-10.1175, -4.26356, -3.44199, 0.68", "-12.9276, -4.08754, -4.37759, 0.45", "-16.2718, -3.82355, -5.40903, 0.45", "-18.7916, -3.61227, -6.12336, 0.23", "-20.8153, -3.49581, -6.6496, 0.23", "-22.6358, -3.43878, -7.10446, 0.23", "-24.5674, -3.41544, -7.53225, 0.23", "-27.3232, -3.4094, -8.04821, 0.45", "-30.5633, -3.40062, -8.57105, 0.45", "-32.9101, -3.36999, -8.89528, 0.23", "-34.2648, -3.32068, -9.09195, 0.23", "-35.214, -3.29417, -9.27641, 0.23", "-36.9658, -3.26339, -9.67936, 0.23", "-38.6512, -3.22938, -10.0795, 0.23", "-40.4268, -3.13867, -10.5415, 0.23", "-43.3952, -2.86219, -11.3769, 0.23", "-46.4986, -2.5734, -12.2805, 0.23", "-48.2567, -2.48324, -12.8368, 1.36", "-57.9131, -2.9324, -15.838, 1.36", "-67.0349, -3.10826, -20.22, 1.36", "-75.3259, -3.33896, -26.0206, 1.36", "-82.8813, -3.4928, -32.7534, 1.36", "-90.3063, -2.28289, -39.5343, 1.36", "-98.193, -0.113905, -45.5317, 1.36", "-105.371, 3.20204, -51.9294, 1.36", "-113.519, 7.37234, -56.4329, 1.36", "-121.887, 12.478, -59.3934, 1.36", "-129.658, 19.0112, -61.219, 1.36", "-136.525, 26.071, -64.3929, 1.36", "-144.142, 32.4938, -67.0383, 1.36", "-152.562, 36.4659, -71.1895, 1.36", "-160.881, 41.485, -74.4103, 1.36", "-169.558, 46.2791, -76.9229, 1.36", "-178.141, 50.6543, -80.2984, 1.36", "-187.301, 53.7789, -83.4102, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "2.19184, -6.68492, 3.26, 1.59", "3.61524, -8.59885, 4.27481, 1.59", "5.13876, -10.6474, 5.361, 1.59", "7.05433, -13.2232, 6.72672, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-8.17816, -2.97842, 1.81, 2.05", "-10.3099, -2.54981, 2.03853, 1.36", "-12.0243, -2.2051, 2.22232, 1.36", "-15.204, -1.56577, 2.56319, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999450176422
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "7.37928, 2.63172, 0.0, 1.15871", "21.5117, 7.65911, 0.0, 1.15871", "35.6441, 12.6865, 0.0, 1.15871" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "8.26204, 5.86899, 4.52, 2.27", "9.65435, 7.01906, 5.19126, 2.27" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "8.26204, 5.86899, 4.52, 0.68", "10.3164, 5.48861, 5.4818, 0.68", "12.0793, 5.25739, 6.23774, 0.45", "13.9734, 5.09535, 7.00986, 1.14", "15.5929, 4.97206, 7.61236, 0.45", "16.9113, 4.84226, 8.11504, 0.68", "18.2998, 4.70696, 8.65456, 1.14", "20.107, 4.55794, 9.34489, 0.23", "20.9073, 4.49226, 9.65215, 0.91", "22.318, 4.35878, 10.1439, 1.14", "24.4172, 4.14366, 10.8704, 0.23", "25.7957, 4.02032, 11.3574, 0.91", "27.6995, 3.86115, 12.1549, 1.14", "29.3404, 3.68364, 12.8995, 0.45", "31.2165, 3.52316, 13.7545, 0.68", "32.6164, 3.50681, 14.3887, 0.23", "33.162, 3.55221, 14.6517, 1.14", "34.9246, 3.88955, 15.6256, 0.23", "36.2328, 4.27413, 16.4299, 0.45", "38.0764, 5.06084, 17.6981, 1.59", "39.829, 5.96812, 18.9455, 0.45", "41.4411, 6.79585, 20.0628, 1.36", "43.4003, 7.76394, 21.3751, 0.23", "44.2293, 8.16955, 21.9102, 2.05", "45.6517, 8.93533, 22.9606, 0.23", "46.2209, 9.25814, 23.4195, 0.68", "47.1014, 9.6382, 24.1658, 0.23", "47.9001, 9.87337, 24.7948, 0.23", "48.4691, 9.99694, 25.2287, 1.14", "49.9125, 10.3367, 26.4144, 0.23", "50.9933, 10.6265, 27.4035, 1.14", "52.4472, 11.1505, 28.9539, 0.23", "53.1999, 11.5187, 29.8533, 0.91", "54.3576, 12.1929, 31.3367, 0.23", "55.3685, 12.8884, 32.6004, 1.36", "56.4432, 13.7326, 33.913, 0.23", "57.4581, 14.5711, 35.1197, 1.36", "58.7793, 15.725, 36.5755, 0.23", "60.0197, 16.7834, 37.8484, 1.14", "60.9642, 17.5681, 38.6951, 0.23", "61.6563, 18.1048, 39.2104, 0.91", "62.3718, 18.6795, 39.6727, 0.23", "63.0943, 19.334, 40.1165, 1.14", "64.3573, 20.5582, 40.8638, 0.23", "65.3162, 21.5189, 41.4541, 1.14", "66.6455, 22.9474, 42.3499, 0.23", "67.4731, 23.8762, 42.9223, 0.91", "68.5805, 25.1613, 43.7396, 0.23", "69.1659, 25.8008, 44.1694, 0.23", "70.2785, 26.9019, 44.9771, 1.14", "71.7076, 28.0337, 45.9784, 0.23", "72.0393, 28.2233, 46.2208, 0.68", "73.0278, 28.6084, 47.0908, 0.23", "73.9325, 28.7649, 48.0601, 0.91", "74.7363, 28.6846, 49.2565, 0.23", "75.6126, 28.1042, 51.1887, 0.91", "76.1711, 27.413, 52.8678, 0.23", "76.5881, 26.6156, 54.677, 0.23", "76.706, 26.0267, 55.9307, 1.14", "76.6534, 25.4915, 57.1105, 0.45", "76.3967, 24.8211, 58.6281, 0.45", "76.1748, 24.5148, 59.5981, 0.91", "76.0615, 24.3892, 60.1888, 0.91", "75.8631, 24.1523, 62.1467, 1.14", "75.8061, 24.1433, 63.2993, 0.23", "75.7696, 24.2123, 64.037, 1.14", "75.7555, 24.8084, 67.1694, 0.23", "75.8168, 24.9718, 67.7508, 0.23", "76.0021, 25.2689, 68.472, 0.91", "76.5686, 26.0859, 69.8445, 0.23", "76.8971, 26.546, 70.4449, 0.23", "77.3508, 27.2246, 71.1524, 0.23", "78.0222, 28.3579, 72.0333, 0.91", "78.3814, 28.9584, 72.4593, 0.23", "78.7144, 29.4432, 72.795, 0.68", "79.571, 30.4792, 73.4747, 0.23", "80.6575, 31.5798, 74.2271, 0.23", "81.0732, 31.9721, 74.4853, 0.23", "81.9116, 32.7098, 74.918, 0.91", "83.3983, 33.9533, 75.5978, 0.23", "83.9553, 34.4207, 75.8231, 0.23", "85.5495, 35.7701, 76.46, 0.68", "86.2384, 36.3445, 76.7211, 0.23", "86.997, 37.0001, 77.021, 0.68", "87.5344, 37.4903, 77.2397, 0.23", "88.5711, 38.5555, 77.6325, 0.91", "89.5594, 39.6949, 78.047, 0.23" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-37.059, 1.55484, -23.0252, 0.23", "-46.6056, 2.044, -27.5609, 0.23", "-55.5628, 2.87836, -33.134, 0.23", "-63.9144, 3.84086, -39.5624, 0.23", "-71.6331, 3.92752, -46.7966, 0.23", "-78.9489, 2.39901, -54.3011, 0.23", "-84.8937, 1.86899, -63.0391, 0.23", "-90.0522, -0.00290911, -72.107, 0.23", "-96.7841, 0.0140425, -80.2681, 0.23", "-102.549, 1.47779, -89.0246, 0.23", "-108.803, 3.63613, -97.3017, 0.23", "-115.181, 3.74633, -105.742, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-37.059, 1.55484, -23.0252, 0.23", "-44.2394, 2.79017, -27.1039, 0.23", "-51.0193, 4.00743, -31.8209, 0.23", "-56.5998, 5.96999, -37.7258, 0.23", "-62.5525, 8.12259, -43.1919, 0.23", "-68.3778, 10.8992, -48.5373, 0.23", "-73.6836, 14.4973, -53.9742, 0.23", "-79.3834, 16.9036, -59.6096, 0.23", "-84.3591, 20.6315, -65.2721, 0.23", "-89.368, 24.4459, -70.8528, 0.23", "-92.8184, 29.2416, -76.8962, 0.23", "-96.7184, 34.0342, -82.6654, 0.23" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.33153, -8.78037, -7.18696, 0.23", "-1.59777, -12.0427, -6.83329, 0.23", "-1.66088, -14.5727, -6.74055, 0.91", "-1.60766, -16.8901, -6.75578, 0.91", "-1.4641, -19.6272, -6.88212, 0.23", "-1.28139, -22.0856, -7.04725, 0.91", "-1.04492, -25.3411, -7.30545, 0.23", "-0.846127, -27.0235, -7.51667, 1.14", "-0.542304, -30.2687, -8.04526, 0.23", "-0.459301, -31.7423, -8.30973, 1.14", "-0.499642, -34.2576, -8.72461, 0.23", "-0.626999, -35.6979, -8.90273, 0.23", "-0.872207, -37.4169, -9.0581, 0.91", "-1.46943, -40.638, -9.25514, 0.23", "-1.74782, -41.9909, -9.29326, 0.23", "-2.28611, -44.341, -9.34356, 0.91", "-2.87832, -46.6782, -9.41149, 0.45", "-3.54261, -49.3457, -9.45929, 0.45", "-3.89421, -50.8252, -9.4559, 0.91", "-4.65041, -54.2101, -9.38123, 0.23", "-5.24245, -56.893, -9.34737, 0.23", "-5.76204, -59.3687, -9.35457, 0.23", "-6.20518, -61.8862, -9.37884, 0.91", "-6.59486, -64.4211, -9.36186, 0.23", "-6.82274, -66.1378, -9.32587, 1.14", "-7.1647, -68.7397, -9.20059, 0.23", "-7.32249, -70.2427, -9.1191, 0.68", "-7.60358, -73.7218, -8.95809, 0.23", "-7.84405, -77.0614, -8.88131, 0.23", "-7.98353, -78.7598, -8.87777, 0.23", "-8.25159, -81.5919, -8.89375, 0.45", "-8.55953, -84.2063, -8.92624, 0.45", "-8.82683, -86.1135, -8.99886, 0.45", "-9.15748, -88.2414, -9.14479, 0.45", "-9.45167, -90.284, -9.32351, 0.68", "-9.68986, -91.7266, -9.43736, 0.23", "-10.0161, -93.4018, -9.5481, 0.68", "-10.5767, -95.4661, -9.63317, 0.23", "-11.3237, -97.8538, -9.71854, 0.45", "-11.8162, -99.5141, -9.78655, 0.45", "-12.318, -101.383, -9.87144, 0.45", "-12.7727, -103.119, -9.9751, 0.45", "-13.3103, -105.154, -10.1304, 0.23", "-13.8533, -107.151, -10.317, 1.82", "-14.8679, -111.002, -10.7518, 0.45", "-15.2517, -112.666, -10.94, 0.45", "-15.4991, -114.025, -11.0871, 0.45", "-15.9743, -117.067, -11.4314, 0.23", "-17.8126, -128.847, -12.5751, 0.23", "-20.744, -140.334, -14.2825, 0.23", "-24.0073, -151.293, -17.7149, 0.23", "-29.3062, -161.539, -20.7273, 0.23", "-33.4482, -171.985, -24.6862, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.33153, -8.78037, -7.18696, 0.91", "-1.89131, -8.50802, -8.36507, 0.91", "-2.58743, -8.44205, -9.74728, 1.36", "-3.11178, -8.56793, -10.818, 0.91", "-3.82919, -9.17358, -12.5081, 1.14", "-4.51463, -10.2212, -14.1886, 1.14", "-5.11168, -11.3649, -15.6323, 1.14", "-5.33689, -12.0899, -16.1973, 1.36", "-5.63689, -13.5117, -16.9826, 0.23", "-5.80035, -15.025, -17.6547, 0.23", "-5.89781, -16.4691, -18.1822, 0.45", "-5.89241, -17.7201, -18.5889, 0.91", "-5.85707, -19.587, -19.206, 0.23", "-5.86264, -20.5803, -19.5889, 0.23", "-6.00368, -21.9125, -20.2031, 0.23", "-6.87713, -27.9397, -25.7519, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "14.3507, -18.8003, -2.83144, 0.68", "14.9884, -20.5797, -2.7456, 0.68", "15.5796, -22.1326, -2.63249, 0.91", "16.3154, -23.8798, -2.49258, 0.91", "17.334, -26.0472, -2.30796, 1.36", "18.4689, -28.4175, -2.1437, 0.45", "19.4794, -30.651, -2.01791, 1.14", "20.5837, -33.283, -1.87378, 0.68", "21.8379, -36.4769, -1.75619, 0.68", "22.9891, -39.6086, -1.77846, 0.68", "23.8169, -42.0792, -1.91586, 1.14", "24.6607, -44.7459, -2.19002, 0.68", "25.2636, -46.5661, -2.45612, 0.45", "25.914, -48.4198, -2.76763, 0.45", "26.7691, -50.5233, -3.11306, 0.68", "27.9711, -52.9364, -3.45984, 0.68", "28.5407, -53.7883, -3.53576, 0.68", "29.8584, -55.4645, -3.57636, 0.68", "31.4173, -57.4071, -3.48705, 0.45", "33.5339, -60.1451, -3.18777, 0.45", "34.6994, -61.8185, -2.93566, 0.91", "36.386, -64.5196, -2.49232, 0.45", "37.6415, -66.6841, -2.15957, 0.91", "38.8741, -69.0578, -1.842, 0.91", "39.5492, -70.5397, -1.68521, 0.68", "40.5515, -73.0638, -1.45632, 0.68", "41.4069, -75.5591, -1.25556, 0.91", "42.2692, -78.6411, -1.05677, 0.23", "42.7683, -80.5505, -0.962123, 0.45", "43.4266, -83.072, -0.863537, 0.45", "43.9563, -85.2721, -0.752389, 0.45", "44.1495, -86.3378, -0.677225, 0.45", "44.4455, -88.4995, -0.522994, 0.45", "44.7672, -91.5849, -0.294257, 0.91", "44.9558, -93.538, -0.12718, 0.23", "45.1988, -96.2969, 0.148368, 0.91", "45.4821, -100.44, 0.605816, 0.91", "45.5589, -102.854, 0.913223, 0.45", "45.5308, -103.91, 1.06064, 0.45", "45.3682, -105.501, 1.33052, 0.45", "44.9988, -107.765, 1.78554, 0.45", "44.4588, -110.344, 2.36689, 0.45", "43.9042, -112.486, 2.93007, 0.23", "43.4504, -114.079, 3.38006, 0.91", "42.9507, -115.989, 3.90373, 0.23", "42.6527, -117.214, 4.21494, 0.68", "42.2651, -118.867, 4.61161, 0.68", "41.8978, -120.743, 5.03443, 0.68", "41.6385, -122.887, 5.46537, 0.23", "41.5875, -124.321, 5.72775, 0.68", "41.6355, -125.987, 5.98067, 0.23", "41.7925, -127.613, 6.20168, 0.68", "42.1773, -130.288, 6.50534, 0.23", "42.3381, -131.295, 6.60272, 0.23", "42.5713, -132.934, 6.75918, 0.91", "42.892, -135.63, 7.03467, 0.45", "43.2773, -138.901, 7.39318, 0.45", "43.4741, -140.655, 7.59828, 0.91", "43.5703, -141.828, 7.75672, 0.23", "43.64, -143.294, 7.97584, 0.91", "43.6804, -144.221, 8.12226, 0.45", "43.7472, -145.472, 8.33901, 0.91", "43.8868, -147.117, 8.63726, 0.23", "44.3013, -149.855, 9.13988, 0.68", "44.6807, -151.472, 9.39674, 0.23", "45.1626, -153.086, 9.54361, 0.68", "45.436, -153.872, 9.56887, 0.68", "46.1063, -155.584, 9.55569, 0.23", "47.0507, -157.652, 9.40871, 1.14", "48.3057, -160.059, 9.10775, 0.23", "49.493, -162.263, 8.76216, 0.23", "50.5162, -164.2, 8.42702, 0.23", "51.0489, -165.199, 8.24323, 0.91", "51.9864, -166.941, 7.91947, 1.36", "53.0387, -168.885, 7.57627, 0.23", "53.9849, -170.607, 7.35157, 0.68", "54.6342, -171.799, 7.27728, 0.23", "55.3438, -173.138, 7.23541, 0.45", "56.3965, -175.303, 7.17689, 0.23", "56.9457, -176.613, 7.1677, 0.23", "57.4923, -178.272, 7.18227, 0.68", "57.7277, -179.357, 7.20237, 0.23", "57.9631, -180.74, 7.22531, 0.91", "58.2854, -183.914, 7.27787, 0.23", "58.3509, -185.866, 7.30107, 0.23", "58.3044, -188.341, 7.31768, 0.23", "58.1254, -190.607, 7.32162, 0.23", "61.3617, -199.481, 7.91512, 0.23", "64.7334, -208.294, 8.59711, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "14.3507, -18.8003, -2.83144, 0.68", "15.3411, -19.7614, -2.52636, 0.68", "17.1256, -21.6823, -1.91842, 0.68", "19.2196, -24.3388, -1.2111, 0.68", "20.8126, -26.5512, -0.725989, 0.68", "22.3745, -28.717, -0.358523, 0.91", "24.2676, -31.2796, 0.00484389, 0.68", "26.093, -33.7859, 0.323762, 1.14", "28.4832, -36.9657, 0.709663, 1.14", "31.1398, -40.289, 1.11386, 0.45", "33.0419, -42.5586, 1.43308, 0.68", "34.3686, -44.0814, 1.66896, 1.14", "36.5593, -46.547, 2.05698, 0.23", "38.6176, -48.7422, 2.46615, 1.14", "40.4585, -50.5243, 2.87326, 0.45", "42.8831, -52.8709, 3.46721, 0.45", "44.863, -54.8559, 3.98965, 0.45", "47.0522, -57.1362, 4.53608, 0.45", "49.0372, -59.2348, 4.96334, 1.36", "51.31, -61.6101, 5.43873, 0.68", "53.0323, -63.354, 5.69659, 0.23", "54.0294, -64.3793, 5.76898, 1.14", "55.9475, -66.6353, 5.73975, 0.23", "56.9874, -68.0792, 5.631, 1.14", "57.6694, -69.2588, 5.45976, 1.14", "59.0065, -72.0596, 4.89462, 0.23", "59.918, -74.102, 4.39198, 0.23", "60.8031, -76.1888, 3.81959, 1.36", "61.1596, -77.0204, 3.5784, 1.36", "62.0725, -79.1887, 3.01062, 0.23", "62.4956, -80.2129, 2.77877, 0.68", "63.1927, -81.7167, 2.48406, 0.23", "63.9146, -83.2658, 2.16424, 1.36", "65.0397, -85.8156, 1.6211, 0.45", "66.4511, -89.1524, 0.889354, 1.36", "68.0082, -92.8377, 0.046883, 0.23", "69.0246, -95.1462, -0.525488, 1.36", "69.9117, -97.1012, -1.02283, 0.23", "70.6957, -98.6963, -1.45621, 1.14", "71.8197, -100.811, -2.10087, 0.23", "72.6421, -102.194, -2.57482, 1.14", "74.016, -104.335, -3.38129, 0.23", "75.4756, -106.543, -4.2128, 0.68", "76.8691, -108.61, -4.9441, 0.91", "78.5727, -111.295, -5.80336, 0.23", "79.7932, -113.368, -6.40561, 1.14", "81.1862, -115.801, -7.03681, 0.23", "82.525, -118.163, -7.59775, 0.68", "84.2864, -121.38, -8.31151, 0.68", "86.1295, -125.035, -9.03374, 0.68", "87.1504, -127.196, -9.42318, 0.68", "87.8701, -128.777, -9.69702, 0.45", "89.2746, -132.009, -10.249, 0.45", "90.6815, -135.381, -10.8922, 0.45", "91.9418, -138.394, -11.547, 0.45", "92.5973, -140.052, -11.9448, 0.23", "92.9585, -141.116, -12.1952, 0.23", "99.414, -151.748, -14.5772, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-187.301, 53.7789, -83.4102, 0.68", "-193.892, 57.4967, -91.4832, 0.68", "-201.501, 60.7601, -98.7796, 0.68", "-208.573, 65.0203, -106.166, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-187.301, 53.7789, -83.4102, 0.68", "-197.612, 51.6409, -85.2435, 0.68", "-207.088, 48.8343, -89.3524, 0.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "7.05433, -13.2232, 6.72672, 1.36", "6.31309, -13.797, 8.22948, 1.36", "5.73154, -14.077, 9.33057, 1.36", "5.2314, -14.3203, 10.28, 1.36", "4.74761, -14.5557, 11.1984, 1.36", "4.07107, -14.8848, 12.4827, 1.82", "3.15663, -15.3296, 14.2185, 1.36", "2.5112, -15.4133, 15.078, 1.59", "2.03999, -15.3913, 15.5992, 1.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.05433, -13.2232, 6.72672, 1.36", "8.79573, -16.3331, 6.80895, 1.36", "10.104, -18.6695, 6.87073, 1.59", "10.8691, -20.0359, 6.90686, 1.59", "12.0796, -22.1976, 6.96402, 2.05" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-15.204, -1.56577, 2.56319, 1.36", "-16.2431, 1.20957, 2.69425, 1.36", "-17.6803, 4.96196, 2.87268, 1.14", "-18.7715, 7.63555, 2.97069, 1.14", "-20.1356, 10.6956, 3.12088, 0.91", "-21.5979, 13.7079, 3.33382, 0.91", "-22.7288, 16.0373, 3.49849, 1.36", "-23.8067, 18.2618, 3.66555, 1.36", "-25.6752, 21.9545, 3.96792, 0.91", "-27.2052, 24.5634, 4.22228, 0.91", "-28.5162, 26.4356, 4.43823, 1.59" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-15.204, -1.56577, 2.56319, 1.14", "-16.0798, -3.32505, 2.43854, 1.14" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "35.6441, 12.6865, 0.0, 0.15", "49.7765, 17.7139, 0.0, 0.15", "63.909, 22.7413, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "9.65435, 7.01906, 5.19126, 0.68", "13.0597, 8.66343, 4.21619, 0.68", "15.1528, 9.6742, 3.61683, 1.14", "17.9759, 11.0374, 2.80846, 2.05" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "9.65435, 7.01906, 5.19126, 1.36", "10.5818, 8.48546, 5.68503, 1.36", "11.2824, 9.59308, 6.058, 1.36", "12.057, 10.8179, 6.47045, 2.05", "12.8161, 12.0181, 6.87457, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-6.87713, -27.9397, -25.7519, 0.23", "-9.18993, -35.2766, -35.726, 0.23", "-10.7795, -43.8375, -44.9271, 0.23", "-11.3167, -52.5282, -54.1385, 0.23", "-13.7463, -59.9324, -64.0395, 0.23", "-16.1301, -65.0156, -75.1964, 0.23", "-17.3691, -71.6449, -85.7902, 0.23", "-16.4482, -78.1454, -96.4863, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-6.87713, -27.9397, -25.7519, 0.23", "-10.3072, -36.4044, -29.0183, 0.23", "-14.0398, -45.2262, -30.7715, 0.23" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "2.03999, -15.3913, 15.5992, 1.14", "2.54093, -16.4739, 16.2612, 1.14", "3.75575, -19.9948, 18.6074, 0.68", "4.29537, -22.1877, 20.1395, 0.68", "5.07709, -25.1474, 22.3126, 0.68", "6.14652, -28.6378, 24.877, 0.68", "7.15854, -31.5364, 27.0232, 0.45", "7.54359, -32.9722, 28.0195, 0.45", "7.85548, -34.4799, 28.9282, 0.45", "8.61153, -37.0175, 30.6304, 0.68", "9.25679, -38.1515, 31.5975, 1.14", "10.9435, -39.881, 33.332, 0.23", "12.2912, -40.8794, 34.3651, 0.23", "14.7154, -42.0452, 36.1147, 0.91", "17.2046, -42.7168, 37.9263, 0.23", "19.065, -43.0406, 39.46, 0.68", "20.9459, -43.2333, 41.217, 0.23", "22.0015, -43.2119, 42.2927, 1.82", "24.5561, -43.0019, 44.9674, 0.23", "26.6333, -42.8369, 47.1603, 1.82", "28.981, -43.0432, 49.4774, 0.23", "30.3279, -43.4463, 50.6645, 0.23", "31.7018, -44.1692, 51.8211, 0.23", "33.035, -45.0241, 52.8148, 0.23", "34.2962, -45.9418, 53.5934, 0.23", "36.3777, -47.5793, 54.8545, 0.68", "38.7771, -49.5172, 56.3524, 2.05", "42.0212, -52.1516, 58.3399, 0.45", "44.4306, -54.1129, 59.8295, 0.23", "46.4246, -55.6596, 61.1297, 0.23", "48.6577, -57.3276, 62.6166, 1.14", "50.0679, -58.3689, 63.5868, 0.23", "52.4281, -59.9131, 64.9849, 0.91", "55.043, -61.449, 66.2257, 0.23", "56.2564, -62.0851, 66.7611, 1.14", "59.6499, -63.6004, 68.2165, 0.23", "62.8333, -64.9633, 69.4717, 0.23", "64.8386, -65.8116, 70.2762, 2.05", "68.4051, -67.1867, 71.8979, 0.23", "71.3819, -68.3199, 73.3881, 1.59", "73.9571, -69.3415, 74.7231, 0.23", "75.7625, -70.0592, 75.7528, 0.23", "77.7281, -70.8801, 76.9508, 0.91", "80.0112, -71.9673, 78.4097, 0.23", "82.5977, -73.2036, 80.0773, 0.23", "84.3076, -74.0138, 81.2389, 1.59", "88.4653, -75.7999, 84.3116, 0.23", "90.3853, -76.63, 85.8427, 0.91", "92.2732, -77.5495, 87.4125, 0.23", "93.8091, -78.291, 88.6391, 1.14", "97.043, -79.6471, 91.0228, 0.23", "99.5102, -80.6457, 92.7618, 0.91", "101.825, -81.6184, 94.3312, 0.23", "103.675, -82.4764, 95.6471, 0.68", "107.184, -84.2119, 98.2078, 0.23", "109.276, -85.3796, 99.5882, 1.14", "111.366, -86.5243, 100.65, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "2.03999, -15.3913, 15.5992, 0.23", "0.141143, -16.3097, 15.3489, 0.23", "-1.78586, -17.1898, 15.1604, 0.45", "-3.50821, -17.9486, 15.1153, 0.23", "-4.69956, -18.4432, 15.1479, 0.23", "-6.64026, -19.2018, 15.3361, 0.68", "-8.06384, -19.7411, 15.5257, 0.23", "-9.65209, -20.2783, 15.845, 1.36", "-12.1909, -21.1262, 16.4926, 0.45", "-13.2105, -21.4759, 16.7668, 1.14", "-14.9648, -22.1379, 17.237, 0.23", "-16.1094, -22.5805, 17.5341, 1.14", "-17.8487, -23.3978, 17.9351, 0.23", "-19.2798, -24.2089, 18.1565, 0.23", "-20.9735, -25.2943, 18.2548, 1.14", "-22.1633, -26.1682, 18.2234, 0.23", "-22.7968, -26.6779, 18.1605, 0.91", "-24.5517, -28.1375, 17.9348, 0.23", "-26.057, -29.3658, 17.6933, 0.91", "-27.7337, -30.682, 17.3826, 0.23", "-30.0531, -32.4441, 16.8918, 0.91", "-30.9964, -33.1359, 16.6597, 0.23", "-32.4994, -34.1967, 16.2454, 0.91", "-34.3498, -35.4301, 15.6799, 0.23", "-35.3401, -36.0759, 15.3646, 0.45", "-36.7429, -36.9315, 14.8896, 0.23", "-37.9348, -37.569, 14.491, 0.23", "-39.5745, -38.3673, 13.9625, 0.91", "-40.7035, -38.8642, 13.6117, 0.23", "-42.0242, -39.4035, 13.2636, 0.68", "-42.4733, -39.5733, 13.1843, 0.23", "-43.8289, -40.0315, 13.0869, 0.68", "-46.0103, -40.7962, 13.1192, 0.23", "-46.7998, -41.1261, 13.1818, 0.91", "-48.1352, -41.8115, 13.3517, 0.23", "-49.8083, -42.8472, 13.6386, 0.68", "-51.2933, -43.9068, 13.937, 0.23", "-51.9081, -44.432, 14.0921, 0.91", "-53.2886, -45.7691, 14.5205, 0.23", "-54.0642, -46.5416, 14.7558, 0.91", "-55.2238, -47.7666, 15.0949, 0.23", "-55.9297, -48.5689, 15.2834, 0.91", "-57.3856, -50.2563, 15.6462, 0.23", "-58.0884, -51.0214, 15.8339, 0.23", "-58.9497, -51.9034, 16.0686, 0.91", "-60.1809, -53.0753, 16.374, 0.23", "-61.0246, -53.8359, 16.5492, 0.68", "-62.9304, -55.5476, 16.8269, 0.23", "-63.6358, -56.1566, 16.8695, 0.68", "-64.3751, -56.8074, 16.8521, 0.23", "-65.5072, -57.7478, 16.7582, 0.91", "-66.1561, -58.2311, 16.6414, 0.91", "-67.4476, -59.157, 16.3179, 0.23", "-68.5269, -59.9012, 15.9811, 0.45", "-70.142, -60.9577, 15.4535, 0.23", "-71.3511, -61.6874, 15.0643, 0.91", "-72.603, -62.3769, 14.6867, 0.23", "-73.9667, -63.0057, 14.3655, 0.45", "-75.1081, -63.4288, 14.1587, 0.23", "-75.734, -63.6447, 14.0758, 0.68", "-76.9513, -64.0363, 13.9826, 0.23", "-78.1386, -64.4051, 13.9546, 0.91", "-80.204, -64.9752, 14.0048, 0.23", "-80.8498, -65.1397, 14.0451, 0.23", "-82.4617, -65.5566, 14.1797, 0.23", "-84.0492, -65.98, 14.3434, 0.91", "-85.0445, -66.2493, 14.4505, 0.23", "-86.0619, -66.5226, 14.5472, 0.91", "-88.4401, -67.1038, 14.7235, 0.23", "-90.2476, -67.5182, 14.8307, 0.91", "-92.3229, -67.968, 14.9675, 0.23", "-94.5336, -68.4673, 15.1116, 0.23", "-96.155, -68.857, 15.2028, 0.23", "-97.5702, -69.1963, 15.2728, 0.23", "-98.8746, -69.4779, 15.3023, 0.45", "-100.537, -69.7831, 15.3531, 0.23" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "12.0796, -22.1976, 6.96402, 0.68", "13.3988, -21.9451, 6.7707, 0.68", "15.9867, -21.5858, 6.59106, 0.68", "17.7182, -21.4155, 6.54176, 0.45", "18.6993, -21.415, 6.56865, 0.68", "20.7974, -21.6013, 6.69656, 0.45", "22.4461, -21.8316, 6.82756, 0.91", "24.2957, -22.2388, 7.09277, 0.68", "25.4158, -22.585, 7.31285, 1.14", "27.8471, -23.5285, 7.84784, 0.23", "29.0722, -24.0955, 8.11968, 0.45", "29.9021, -24.5135, 8.29112, 0.23", "30.8181, -24.9828, 8.43685, 0.91", "32.3827, -25.7806, 8.59428, 0.23", "33.7278, -26.4351, 8.69831, 1.14", "36.0669, -27.5083, 8.84174, 0.45", "37.8588, -28.3456, 8.95433, 1.14", "41.0027, -29.8686, 9.17304, 0.23", "43.0567, -30.8682, 9.33097, 0.91", "45.1464, -31.8464, 9.51779, 0.23", "47.3894, -32.833, 9.74342, 0.91", "49.0961, -33.5283, 9.93842, 0.23", "50.5713, -34.0949, 10.1252, 0.91", "52.467, -34.6998, 10.3739, 0.23", "54.3921, -35.1698, 10.6047, 1.14", "55.3621, -35.3294, 10.6868, 0.23", "56.5465, -35.4305, 10.7422, 0.91", "57.984, -35.479, 10.762, 0.91", "60.09, -35.5455, 10.7238, 0.23", "62.0453, -35.6483, 10.6478, 0.68", "63.7535, -35.8168, 10.5971, 0.23", "64.67, -35.9584, 10.5809, 0.68", "66.378, -36.2978, 10.5708, 0.23", "68.9208, -36.9496, 10.5846, 0.23", "70.8865, -37.5839, 10.6288, 1.82", "73.6059, -38.6154, 10.7276, 0.23", "74.6487, -39.0578, 10.7742, 0.91", "75.9291, -39.6491, 10.8108, 0.23", "77.4217, -40.3734, 10.8298, 1.14", "79.9915, -41.6441, 10.8431, 0.23", "81.6315, -42.4813, 10.8548, 0.45", "84.7594, -44.0705, 10.8669, 0.23", "86.6405, -45.0441, 10.8884, 0.68", "89.0084, -46.2191, 10.9329, 0.23", "90.6351, -46.9621, 10.9796, 0.23", "91.4543, -47.299, 11.0101, 0.45", "92.8027, -47.7236, 11.0767, 0.23", "94.5046, -48.0828, 11.1769, 0.68", "96.9651, -48.4293, 11.3193, 0.23", "98.2838, -48.5692, 11.3899, 0.23", "99.7946, -48.721, 11.4513, 0.68", "102.363, -48.9543, 11.5217, 0.23", "104.47, -49.1853, 11.5746, 0.68", "106.574, -49.4386, 11.645, 0.23", "107.803, -49.6545, 11.7043, 1.36", "110.681, -50.2251, 11.897, 0.23", "111.731, -50.464, 11.998, 0.23", "113.662, -51.0123, 12.2374, 0.23", "114.583, -51.3022, 12.3734, 0.68", "116.216, -51.8073, 12.5716, 0.23", "117.212, -52.1383, 12.6567, 0.91", "117.954, -52.4079, 12.7075, 0.23", "119.88, -53.174, 12.7884, 0.91", "121.318, -53.7455, 12.7699, 0.23", "123.525, -54.6521, 12.6362, 0.23", "125.377, -55.4154, 12.4714, 0.23", "125.884, -55.6241, 12.4236, 1.14", "127.744, -56.3966, 12.2712, 0.23", "129.841, -57.2198, 12.1316, 0.68", "131.598, -57.856, 12.0476, 0.23", "133.453, -58.4949, 12.0169, 0.68", "137.117, -59.5298, 11.977, 0.23", "138.269, -59.7989, 11.9635, 0.23", "139.164, -59.9594, 11.9482, 0.23", "140.327, -60.1107, 11.9228, 0.68", "143.421, -60.3277, 11.7608, 0.23", "145.309, -60.3648, 11.6009, 0.68", "147.869, -60.2845, 11.3093, 0.23", "148.686, -60.2431, 11.2029, 0.68", "150.534, -60.1105, 10.9617, 0.23", "152.927, -59.8713, 10.706, 0.23", "154.549, -59.6439, 10.555, 0.23", "155.101, -59.5631, 10.5143, 0.91", "156.716, -59.3052, 10.4356, 0.23", "159.307, -58.8627, 10.362, 0.91", "162.872, -58.1928, 10.3183, 0.23", "163.87, -57.9945, 10.321, 0.23", "165.144, -57.7392, 10.3168, 0.91", "167.678, -57.2352, 10.2794, 0.23", "169.088, -56.9337, 10.2416, 0.91", "171.613, -56.3588, 10.0996, 0.23", "172.28, -56.186, 10.0427, 0.23", "173.816, -55.8072, 9.90665, 0.45", "176.327, -55.2459, 9.66789, 0.23", "177.804, -54.9086, 9.52178, 0.23", "179.355, -54.5216, 9.37001, 0.91", "181.221, -53.9984, 9.16156, 0.23", "182.808, -53.5247, 8.96287, 0.23", "184.404, -53.0489, 8.75473, 0.68", "186.361, -52.4972, 8.45094, 0.23", "187.595, -52.2185, 8.21026, 0.68", "189.634, -51.8391, 7.76302, 0.23", "190.827, -51.6698, 7.4425, 0.45", "192.634, -51.4612, 6.90673, 0.23", "194.323, -51.3269, 6.3961, 0.68", "196.3, -51.2589, 5.82239, 0.23", "197.897, -51.2536, 5.36327, 0.23", "200.759, -51.2923, 4.5806, 0.23", "201.892, -51.2997, 4.27822, 0.23", "203.693, -51.2751, 3.80719, 0.45", "205.291, -51.2094, 3.46545, 0.23" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "12.0796, -22.1976, 6.96402, 1.82", "12.0046, -24.1283, 6.89329, 1.82", "11.9061, -26.6646, 6.80036, 1.82" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-28.5162, 26.4356, 4.43823, 0.45", "-29.511, 28.0109, 3.87247, 0.45", "-29.9435, 28.6477, 3.6471, 0.91", "-30.6679, 29.7174, 3.31655, 0.23", "-31.3013, 30.7681, 3.00925, 0.23", "-31.7744, 31.6531, 2.75088, 0.45", "-32.2919, 32.7507, 2.43608, 1.14", "-32.8231, 34.0191, 2.11403, 0.23", "-33.5163, 35.9799, 1.64718, 0.68", "-34.1625, 38.2575, 1.11512, 0.23", "-34.4805, 39.5946, 0.830389, 0.91", "-34.7278, 40.9021, 0.554837, 0.68", "-35.0764, 42.9195, 0.137926, 0.23", "-35.2241, 43.8072, -0.0496866, 0.23", "-35.44, 45.0719, -0.33186, 0.23", "-35.8466, 47.1396, -0.806526, 1.36", "-36.0655, 48.1022, -1.03424, 0.23", "-36.3985, 49.4442, -1.36391, 1.14", "-36.7579, 50.8017, -1.71615, 0.23", "-37.1294, 51.9913, -2.00699, 0.23", "-37.374, 52.6713, -2.16293, 1.14", "-38.1968, 54.7382, -2.64046, 0.23", "-38.6203, 55.6686, -2.8396, 0.68", "-39.1737, 56.7738, -3.04776, 0.23", "-39.771, 57.8044, -3.21979, 1.14", "-40.5557, 58.9992, -3.40028, 0.23", "-41.1804, 59.9029, -3.5231, 0.91", "-41.5522, 60.3801, -3.61124, 0.23", "-42.0744, 61.0245, -3.77978, 0.91", "-42.8253, 61.9661, -4.09753, 0.23", "-43.2534, 62.5235, -4.3289, 0.23", "-43.7199, 63.1562, -4.63902, 0.23", "-44.5778, 64.4759, -5.35644, 0.91", "-45.0228, 65.2824, -5.82967, 0.23", "-45.3963, 66.0464, -6.29323, 0.91", "-45.7661, 66.8976, -6.80827, 0.23", "-45.9872, 67.4752, -7.16278, 0.91", "-46.7363, 69.6492, -8.46807, 0.23", "-47.0044, 70.5297, -8.95863, 1.14", "-47.4507, 71.9996, -9.71828, 0.23", "-47.7011, 72.8268, -10.1287, 0.91", "-47.9771, 73.7848, -10.5658, 0.23", "-48.3597, 75.1081, -11.1129, 0.23", "-48.6239, 76.0466, -11.4532, 0.91", "-49.0344, 77.5485, -11.9625, 0.23", "-49.2606, 78.4389, -12.2554, 0.91", "-49.6716, 80.1022, -12.7724, 0.23", "-49.9448, 81.2111, -13.1074, 0.91", "-50.271, 82.5895, -13.5427, 0.23", "-50.4286, 83.2703, -13.7648, 0.91", "-50.8473, 85.0714, -14.3852, 0.23", "-51.2039, 86.6973, -14.96, 0.91", "-51.5096, 88.0254, -15.4381, 0.23", "-51.7145, 88.9137, -15.7532, 0.91", "-52.2437, 91.1736, -16.5538, 0.23", "-52.3977, 91.8666, -16.7955, 1.14", "-52.5953, 93.0042, -17.198, 0.23" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-28.5162, 26.4356, 4.43823, 0.68", "-29.3423, 26.2241, 5.09425, 0.68", "-31.0092, 25.973, 6.36128, 0.91", "-32.3482, 26.0524, 7.43727, 0.91", "-33.7366, 26.4153, 8.60657, 0.91", "-35.4768, 26.8702, 10.0721, 0.23", "-36.7088, 27.1922, 11.1095, 1.14", "-38.0835, 27.6178, 12.2332, 0.68", "-40.2553, 28.4402, 13.9029, 1.59", "-42.2778, 29.6376, 15.4299, 0.68" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-16.0798, -3.32505, 2.43854, 0.68", "-17.8226, -4.48578, 3.74961, 0.68", "-18.6077, -4.97269, 4.37964, 0.68", "-20.0763, -5.8262, 5.67429, 0.23", "-21.821, -6.90538, 7.35603, 0.91", "-23.263, -7.92552, 8.91949, 0.23", "-24.1408, -8.66413, 10.0684, 0.91", "-24.7959, -9.6545, 11.5468, 0.23", "-24.9322, -10.3149, 12.5587, 0.23", "-24.7609, -11.0096, 13.699, 0.23", "-24.4035, -11.8112, 14.976, 0.68", "-23.8961, -12.9441, 16.6766, 0.68", "-23.3033, -14.5969, 19.0327, 1.14", "-23.0286, -15.9487, 20.7108, 0.23", "-23.0027, -17.0612, 21.942, 0.68", "-23.2019, -18.3231, 23.1999, 0.23", "-23.5698, -19.5248, 24.207, 0.45", "-23.9672, -20.5467, 24.9228, 1.14", "-24.4523, -21.6389, 25.5565, 0.23", "-25.1068, -22.9433, 26.2582, 0.91", "-26.1354, -24.8676, 27.2183, 0.23", "-26.9603, -26.6068, 27.9848, 1.14", "-27.2375, -27.2357, 28.2462, 0.23", "-27.7369, -28.3524, 28.7147, 0.68", "-28.1986, -29.3439, 29.181, 0.23", "-28.7015, -30.4032, 29.7336, 1.14", "-29.4957, -32.0266, 30.7075, 0.23", "-30.2875, -33.4366, 31.6986, 0.91", "-30.563, -33.9232, 32.1087, 0.91", "-31.1938, -35.1179, 33.3789, 0.23", "-31.7586, -35.99, 34.7267, 0.23", "-32.3364, -36.6307, 36.387, 0.23", "-32.7481, -36.8438, 38.0171, 1.14", "-32.9488, -36.7487, 40.1483, 0.23", "-32.7244, -36.3806, 42.1924, 0.23", "-31.8853, -35.5945, 44.8272, 0.23", "-30.956, -35.0402, 46.5141, 0.68", "-29.8404, -34.5475, 47.9156, 0.23", "-28.1915, -33.9855, 49.473, 0.91", "-25.8926, -33.2814, 51.1152, 0.23", "-24.4558, -32.9269, 51.9046, 0.23", "-21.7564, -32.4173, 53.1685, 0.23", "-20.2371, -32.1982, 53.8412, 0.23", "-18.5589, -31.9731, 54.5099, 0.68", "-16.7845, -31.682, 55.0943, 0.23", "-15.2103, -31.4057, 55.5253, 0.68", "-12.9183, -30.8865, 56.0456, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-16.0798, -3.32505, 2.43854, 0.68", "-17.6112, -3.33076, 1.58521, 0.68", "-19.953, -3.14484, 0.504669, 0.68", "-21.7255, -2.97181, -0.159112, 0.68", "-24.264, -2.6852, -1.02689, 1.14", "-26.7853, -2.34758, -1.78952, 0.23", "-28.9431, -2.05765, -2.34765, 0.68", "-31.3267, -1.67355, -2.74089, 0.45", "-34.1233, -1.26141, -2.95388, 0.68", "-35.9169, -1.10406, -2.97597, 0.68", "-37.5664, -1.06738, -2.90009, 0.68", "-39.4373, -1.15512, -2.72747, 0.68", "-40.5643, -1.28335, -2.60036, 0.68", "-42.6007, -1.59351, -2.37485, 0.68", "-45.1869, -2.02766, -2.08627, 0.68", "-47.5549, -2.43395, -1.8377, 0.68", "-50.1947, -2.84197, -1.61225, 0.91", "-52.6439, -3.13898, -1.44527, 0.45", "-54.8225, -3.37629, -1.32289, 0.45", "-57.28, -3.6263, -1.22565, 0.45", "-58.8176, -3.79441, -1.21248, 0.45", "-60.4697, -3.96766, -1.28069, 0.45", "-62.1872, -4.18638, -1.49757, 0.23", "-64.1912, -4.46189, -1.91655, 0.23", "-65.6278, -4.69777, -2.31548, 0.23", "-67.4986, -5.01244, -2.91155, 0.45", "-69.6301, -5.35006, -3.59315, 0.23", "-72.0687, -5.7034, -4.35902, 0.23", "-74.204, -5.9863, -4.96545, 0.45", "-75.7238, -6.14567, -5.31074, 0.45", "-77.8864, -6.4152, -5.70656, 0.45", "-79.8775, -6.69105, -6.011, 0.23", "-80.7393, -6.82037, -6.11635, 0.23", "-82.653, -7.06853, -6.28405, 2.05", "-87.0109, -7.64322, -6.66209, 0.23", "-89.2369, -7.96983, -6.87504, 0.23", "-98.7159, -6.55662, -7.71035, 0.23", "-108.317, -6.93492, -7.63233, 0.23" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "17.9759, 11.0374, 2.80846, 0.68", "19.6091, 12.878, 2.13096, 0.68", "20.4787, 14.0796, 1.76001, 0.91", "21.8533, 16.1536, 1.21691, 0.68", "23.0319, 17.9142, 0.801707, 0.68", "24.2788, 19.6893, 0.370771, 0.68", "25.2919, 21.0472, -0.0160154, 0.68", "26.3193, 22.4372, -0.42483, 0.68", "27.1778, 23.4515, -0.776961, 0.68", "28.4167, 24.7179, -1.29046, 0.68", "29.7997, 25.9244, -1.82919, 1.14", "31.445, 27.1655, -2.44374, 0.68", "32.6565, 27.9916, -2.91292, 0.68", "33.8942, 28.8286, -3.40053, 0.68", "34.9944, 29.5775, -3.81935, 1.14", "36.6257, 30.7073, -4.38516, 0.45", "38.5463, 32.0709, -4.9576, 0.68", "40.0123, 33.1767, -5.33659, 0.68", "41.7264, 34.5904, -5.76671, 0.68", "43.373, 36.0866, -6.16543, 0.68", "44.627, 37.3971, -6.47399, 0.45", "45.1386, 38.0953, -6.58097, 0.45", "45.5613, 38.9129, -6.61913, 0.45", "46.0592, 40.3095, -6.64063, 0.45", "46.5575, 41.8094, -6.74617, 0.45", "47.3249, 43.5961, -7.03782, 0.45", "48.3208, 45.2396, -7.44021, 0.45", "48.9045, 46.0739, -7.65572, 1.14", "50.2156, 47.7902, -8.08766, 0.45", "51.6234, 49.4505, -8.52129, 0.45", "53.305, 51.285, -9.0087, 0.45", "54.7119, 52.7677, -9.38882, 0.45", "56.4803, 54.6419, -9.84702, 0.68", "57.29, 55.518, -10.0244, 0.68", "58.5034, 56.8959, -10.204, 0.45", "59.8291, 58.5513, -10.3236, 0.45", "60.2722, 59.1207, -10.3495, 1.14", "60.878, 59.8345, -10.4017, 0.23", "62.4878, 61.3706, -10.6082, 0.23", "63.113, 61.9343, -10.6868, 0.23", "69.4663, 69.2281, -11.3324, 0.23", "74.4457, 77.6294, -11.6515, 0.23", "79.2567, 86.1555, -11.0908, 0.23", "85.4687, 93.5117, -9.5162, 0.23", "92.1737, 100.007, -6.75433, 0.23", "97.6937, 106.582, -2.02883, 0.23", "103.742, 113.202, 1.86851, 0.23", "108.654, 120.844, 5.66387, 0.23", "113.176, 128.886, 9.15836, 0.23", "118.298, 135.848, 13.8324, 0.23", "122.437, 142.458, 19.8427, 0.23", "127.397, 149.379, 24.7562, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "17.9759, 11.0374, 2.80846, 0.68", "20.1471, 13.4993, 3.19184, 0.68", "21.8122, 15.226, 3.38391, 0.68", "24.9094, 18.3225, 3.6534, 0.68", "26.4409, 19.8445, 3.73845, 0.68", "28.4998, 21.9522, 3.8242, 0.68", "30.3061, 23.9124, 3.86674, 0.68", "32.3563, 26.1994, 3.84236, 0.68", "33.3418, 27.3691, 3.80295, 1.14", "34.5787, 29.0399, 3.73319, 0.91", "35.5765, 30.591, 3.68487, 0.91", "37.2123, 33.5158, 3.63361, 0.68", "38.4339, 36.0971, 3.62878, 0.91", "39.5262, 38.7841, 3.70295, 0.91", "40.853, 42.4781, 3.86167, 0.91", "41.6202, 44.8777, 4.01184, 0.91", "42.0623, 46.3473, 4.11763, 0.91", "42.6523, 48.2298, 4.29184, 0.91", "43.3056, 50.2732, 4.50297, 0.68", "44.238, 52.995, 4.80754, 0.68", "45.1449, 55.5554, 5.10125, 1.14", "46.2391, 58.5068, 5.42158, 0.91", "47.3673, 61.652, 5.74591, 0.91", "47.8756, 63.0746, 5.87362, 0.91", "48.6897, 65.2202, 6.02908, 0.91", "50.1302, 68.876, 6.24092, 0.91", "51.1303, 71.5542, 6.38644, 0.91", "51.9358, 73.9151, 6.54875, 1.36", "52.8188, 76.5445, 6.78743, 0.68", "53.7556, 79.0219, 7.07456, 0.91", "54.6165, 81.0952, 7.36207, 0.68", "55.6673, 83.3456, 7.68847, 0.68", "56.8754, 85.8061, 8.0503, 0.91", "58.601, 89.2007, 8.57905, 0.91", "59.9675, 92.0202, 9.04438, 0.45", "61.0756, 94.4801, 9.43951, 0.68", "62.2516, 97.2393, 9.85903, 0.91", "63.0201, 99.061, 10.1291, 0.23", "64.2525, 102.094, 10.564, 0.45", "65.1443, 104.41, 10.8361, 0.45", "66.3624, 107.567, 11.1615, 0.45", "67.1164, 109.56, 11.3502, 1.14", "68.6935, 113.857, 11.733, 0.68", "69.9132, 117.083, 11.9602, 0.68", "71.292, 120.459, 12.122, 0.68", "72.788, 123.747, 12.2478, 0.45", "74.0516, 126.317, 12.3497, 0.45", "75.1152, 128.474, 12.4497, 0.68", "76.1631, 130.685, 12.5751, 0.91", "77.0712, 132.677, 12.7636, 0.45", "78.0151, 134.884, 13.089, 0.68", "78.8129, 136.917, 13.3906, 0.45", "79.5278, 138.732, 13.6445, 0.45", "79.9541, 139.841, 13.7724, 0.45", "80.5925, 141.591, 13.894, 0.91", "81.9984, 145.261, 13.9647, 0.68", "83.7657, 149.232, 13.8473, 0.68", "85.0128, 151.559, 13.6645, 0.45", "86.1824, 153.389, 13.455, 0.45", "87.5923, 155.424, 13.1704, 0.45", "88.9724, 157.291, 12.8506, 0.45", "90.4987, 159.243, 12.4552, 0.45", "91.4593, 160.42, 12.2179, 0.45", "92.1207, 161.266, 12.093, 0.45", "93.4154, 162.913, 12.0063, 0.45", "94.8213, 164.657, 12.0283, 0.45", "96.213, 166.423, 12.0668, 0.68", "98.5289, 169.438, 12.1335, 0.23", "100.019, 171.351, 12.2009, 0.45", "102.125, 173.883, 12.3544, 0.45", "103.494, 175.425, 12.5027, 0.91", "105.776, 177.946, 12.8364, 0.23", "106.682, 179.021, 13.0144, 0.45", "108.228, 181.062, 13.4025, 0.68", "109.978, 183.73, 13.9448, 0.45", "111.533, 186.663, 14.5593, 0.45", "112.315, 188.458, 14.9831, 0.45", "113.311, 191.097, 15.6641, 0.45", "113.965, 193.038, 16.1652, 0.45", "114.68, 195.762, 16.8513, 0.45", "115.022, 197.885, 17.3821, 0.45", "115.094, 199.019, 17.6787, 0.45", "115.085, 201.157, 18.2732, 0.45", "114.909, 203.144, 18.8744, 0.45", "114.609, 204.823, 19.3908, 0.45", "114.292, 206.287, 19.861, 0.45", "113.739, 208.542, 20.5996, 0.68", "113.127, 210.888, 21.3499, 0.68", "112.254, 214.253, 22.3199, 0.45", "111.53, 217.269, 23.0523, 0.45", "111.036, 219.898, 23.5969, 0.45", "110.833, 221.647, 23.9321, 1.14", "110.683, 224.174, 24.3673, 0.45", "110.624, 227.578, 24.89, 0.68", "110.651, 229.871, 25.2067, 0.91", "110.693, 231.961, 25.4962, 0.45", "110.712, 234.467, 25.8356, 0.68", "110.723, 235.893, 26.052, 0.68", "110.718, 238.003, 26.4372, 0.45", "110.631, 241.337, 27.1617, 0.45", "110.43, 243.475, 27.652, 0.45", "110.127, 245.223, 28.0591, 0.45", "109.766, 246.809, 28.4154, 0.68", "109.196, 249.211, 29.0362, 0.45", "108.877, 250.478, 29.4166, 0.91", "108.131, 253.588, 30.4812, 0.23", "107.78, 255.042, 31.0091, 0.45", "107.255, 257.68, 31.9582, 0.23", "106.954, 259.77, 32.6816, 0.23", "106.808, 261.942, 33.4102, 1.14", "106.768, 265.126, 34.4468, 0.23", "106.845, 267.171, 35.0791, 0.23", "106.983, 270.216, 35.9523, 0.23", "107.043, 272.127, 36.4518, 0.91", "107.032, 274.42, 36.9755, 0.23", "106.979, 276.056, 37.3186, 0.23", "106.891, 277.829, 37.667, 0.23", "106.829, 279.23, 37.9475, 0.91", "106.758, 283.099, 38.7105, 0.23", "106.787, 284.715, 39.0514, 0.68", "106.864, 286.119, 39.3679, 0.23", "107.041, 287.909, 39.8026, 0.23", "107.311, 289.991, 40.343, 0.68", "107.812, 292.865, 41.1434, 0.91", "108.38, 295.765, 41.9925, 0.23", "108.716, 297.85, 42.6068, 0.91", "108.977, 300.297, 43.329, 0.23", "109.097, 302.535, 43.9687, 0.91", "109.171, 304.373, 44.4672, 0.23", "109.242, 306.19, 44.9488, 0.68", "109.519, 309.701, 45.8022, 0.45", "109.609, 310.766, 46.0563, 0.45", "109.83, 313.43, 46.6971, 0.45", "110.033, 315.941, 47.2879, 1.14", "110.375, 319.531, 48.1078, 0.23", "110.741, 321.714, 48.6166, 0.23" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "12.8161, 12.0181, 6.87457, 0.91", "14.1956, 14.1777, 7.35355, 0.91", "15.1148, 15.6443, 7.70101, 1.14", "16.57, 18.0409, 8.30692, 0.45", "17.2804, 19.2591, 8.64156, 1.14", "18.2966, 20.981, 9.1933, 0.68", "19.1232, 22.3917, 9.70767, 1.36", "19.8124, 23.6604, 10.2461, 0.91", "20.2975, 24.5858, 10.6806, 1.36", "21.3007, 26.5354, 11.6538, 0.68", "21.9064, 27.8568, 12.3145, 1.14", "22.365, 29.058, 12.8984, 0.23", "22.5592, 29.6828, 13.1913, 0.68", "22.8021, 30.5758, 13.5633, 0.23", "23.1158, 32.1414, 14.1148, 0.23", "23.2152, 32.8916, 14.3309, 1.14", "23.3737, 34.6001, 14.7589, 0.23", "23.6328, 36.941, 15.3044, 1.36", "23.8749, 38.6085, 15.6851, 1.36", "24.19, 40.2826, 16.0625, 0.23", "24.397, 41.219, 16.2659, 1.14", "24.7006, 42.3184, 16.4781, 1.14", "25.379, 44.3198, 16.8064, 0.23", "25.942, 45.7573, 17.0319, 1.36", "26.3369, 46.7751, 17.1969, 1.36", "26.724, 47.87, 17.364, 0.23", "27.0882, 49.0763, 17.5766, 1.36", "27.2256, 49.6794, 17.6879, 1.36", "27.4598, 51.4241, 18.0411, 0.45", "27.6092, 52.969, 18.3745, 1.14", "27.7122, 54.1678, 18.6391, 1.14", "27.9418, 56.0538, 19.0782, 0.23", "28.0826, 56.7477, 19.2582, 1.14", "28.3367, 57.6837, 19.5073, 1.14", "28.8258, 59.0383, 19.8698, 0.23", "28.9761, 59.3776, 19.9696, 0.23", "29.5651, 60.5916, 20.3345, 1.36", "30.4607, 62.2623, 20.8449, 0.45", "30.9243, 63.0637, 21.1306, 0.23", "31.6508, 64.4027, 21.6199, 1.14", "32.2572, 65.5869, 22.0466, 0.23", "32.796, 66.6539, 22.4267, 1.14", "33.6488, 68.2799, 23.0183, 0.23", "34.3318, 69.4685, 23.4537, 1.14", "35.4796, 71.1988, 24.1295, 0.23", "35.9023, 71.7793, 24.3532, 0.23", "36.3545, 72.3674, 24.5589, 0.91", "37.0908, 73.2153, 24.8495, 0.23", "37.6304, 73.779, 25.0391, 0.91", "38.4169, 74.5155, 25.2857, 0.23", "39.241, 75.2173, 25.5331, 1.14", "39.9744, 75.9244, 25.7868, 1.14", "40.818, 76.8233, 26.1251, 0.23", "41.2206, 77.2943, 26.2975, 1.59", "41.6811, 77.9465, 26.4912, 1.59", "42.6017, 79.4765, 26.8582, 0.23", "43.2293, 80.601, 27.0566, 0.91", "43.8281, 81.6591, 27.1822, 0.23", "44.4309, 82.6235, 27.2439, 1.14", "45.9491, 84.6234, 27.2746, 0.23", "46.4599, 85.1783, 27.2632, 0.23", "47.6617, 86.2907, 27.1962, 0.91", "49.0428, 87.3938, 27.064, 0.23", "50.658, 88.6114, 26.889, 0.23", "52.393, 89.8641, 26.7215, 0.91", "53.616, 90.798, 26.6182, 0.23", "54.3992, 91.5074, 26.5507, 1.14", "55.4699, 92.7827, 26.4614, 0.23", "56.0945, 93.8257, 26.3903, 0.23", "56.5765, 94.961, 26.3221, 1.14", "57.3813, 97.3276, 26.2209, 0.23", "57.7148, 98.412, 26.1874, 0.23", "58.1706, 99.8602, 26.165, 0.68", "58.4141, 100.589, 26.1685, 0.23", "58.8368, 101.639, 26.1811, 0.91", "59.9049, 103.84, 26.2064, 0.23", "60.3107, 104.556, 26.2099, 1.14", "60.9382, 105.625, 26.2401, 0.23", "61.3353, 106.264, 26.2709, 0.91", "62.2185, 107.683, 26.3876, 0.23", "62.9293, 108.898, 26.533, 0.91", "63.7239, 110.456, 26.7758, 0.23", "64.4624, 112.172, 27.0793, 0.68", "64.9274, 113.61, 27.3287, 0.23", "65.1903, 114.791, 27.5184, 0.91", "65.3172, 116.051, 27.6971, 0.23", "65.3207, 117.35, 27.8557, 0.68", "65.2301, 118.632, 27.9706, 0.23", "65.0003, 120.868, 28.1202, 0.23", "64.8035, 122.586, 28.2307, 0.68", "64.6676, 124.352, 28.3274, 0.23", "64.6512, 125.178, 28.3755, 0.68", "64.7029, 126.406, 28.4931, 0.23", "64.8335, 127.589, 28.6598, 1.14", "64.9496, 128.335, 28.8174, 1.14", "65.2096, 129.721, 29.1443, 0.23", "65.3903, 130.676, 29.3945, 0.68", "65.6695, 132.472, 29.9031, 0.23", "65.8011, 133.352, 30.1742, 0.91", "66.0529, 134.88, 30.719, 0.23", "66.3705, 136.462, 31.384, 0.91", "66.793, 138.12, 32.2182, 0.23", "67.0186, 138.809, 32.5984, 1.14", "67.5326, 139.993, 33.3008, 0.23", "68.2451, 141.508, 34.2214, 0.23", "68.6132, 142.229, 34.6655, 1.14", "69.126, 143.229, 35.2938, 0.23", "69.5954, 144.268, 35.8576, 0.68", "69.969, 145.408, 36.3532, 0.23", "70.1705, 146.38, 36.6903, 0.23", "70.4014, 147.811, 37.0777, 1.59", "70.6807, 149.839, 37.5842, 0.23", "70.8795, 151.513, 37.9619, 0.91", "71.0704, 153.436, 38.384, 0.23", "71.1897, 154.54, 38.6237, 1.59", "71.4945, 156.56, 39.064, 0.23", "71.5858, 156.985, 39.1503, 0.91", "71.8244, 157.698, 39.3141, 0.91", "72.8577, 159.698, 39.8909, 0.23", "73.8376, 161.133, 40.3552, 0.91", "74.181, 161.57, 40.5012, 0.91", "75.2006, 162.74, 40.8985, 0.23", "76.5838, 164.181, 41.2793, 0.68", "77.785, 165.299, 41.4953, 0.23", "78.7108, 166.081, 41.5862, 1.14", "79.1766, 166.482, 41.6078, 1.14", "80.3457, 167.539, 41.6335, 0.23", "82.0403, 169.085, 41.6239, 0.23", "83.3121, 170.179, 41.5786, 0.68", "84.7538, 171.249, 41.5145, 0.91", "86.5111, 172.34, 41.4336, 0.23", "87.2934, 172.798, 41.3969, 0.91", "88.3117, 173.344, 41.3496, 0.23", "89.2653, 173.801, 41.3498, 0.91", "91.2276, 174.575, 41.3241, 0.23", "92.7017, 174.94, 41.2778, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "12.8161, 12.0181, 6.87457, 0.68", "13.3373, 13.3262, 7.2375, 0.68", "14.0082, 15.2372, 7.61655, 1.36", "14.5016, 16.6891, 7.88777, 1.36", "15.3081, 18.7778, 8.25299, 0.68", "16.3802, 21.2564, 8.75149, 0.68", "17.3902, 23.4825, 9.25054, 1.14", "18.91, 26.5977, 10.0562, 1.14", "19.7499, 28.3168, 10.5858, 1.14", "21.1052, 31.2326, 11.5886, 0.45", "21.9264, 33.1201, 12.306, 0.45", "22.9717, 35.387, 13.3009, 1.14", "23.8032, 37.1114, 14.2048, 0.91", "24.5014, 38.7426, 15.1417, 0.91", "25.0137, 40.7231, 16.1703, 0.45", "25.2458, 42.8813, 17.1777, 0.45", "25.3928, 45.5699, 18.2579, 0.45", "25.4928, 46.8218, 18.7635, 0.45", "25.7363, 49.6896, 19.9222, 0.91", "26.0058, 52.8425, 21.3479, 0.68", "26.0796, 54.0075, 21.9055, 0.68", "26.137, 56.6714, 23.0924, 1.36", "26.2783, 58.9759, 24.0818, 0.45", "26.5465, 61.5943, 25.2649, 0.91", "26.954, 64.1754, 26.4612, 0.45", "27.5219, 67.0673, 27.8001, 0.91", "28.0869, 69.8991, 29.0736, 1.14", "28.8557, 74.0494, 30.8522, 0.45", "29.4801, 77.3213, 32.2014, 0.45", "29.9399, 79.2686, 33.006, 1.59", "30.5039, 81.5842, 34.0169, 0.23", "31.2166, 84.893, 35.5791, 1.36", "31.7744, 87.9318, 37.043, 0.23", "32.1582, 90.7566, 38.3062, 0.23", "32.4259, 92.6654, 39.1274, 1.36", "32.9292, 96.6519, 40.8499, 0.23", "33.2319, 99.1317, 41.8952, 1.14", "33.3936, 100.582, 42.4895, 0.23", "33.67, 102.739, 43.4063, 0.91", "33.98, 105.259, 44.4506, 0.23", "34.1934, 107.262, 45.2328, 1.82", "34.4489, 109.92, 46.1633, 0.23", "34.6459, 112.584, 47.108, 1.14", "34.817, 115.031, 48.0781, 0.23", "34.9379, 116.847, 48.8246, 0.23", "35.1042, 120.36, 50.1789, 0.91", "35.1735, 122.044, 50.8287, 0.91", "35.3337, 124.906, 51.8392, 0.23", "35.6138, 127.463, 52.6578, 1.14", "35.8532, 128.99, 53.05, 1.14", "36.309, 130.855, 53.4976, 0.23", "36.7357, 132.122, 53.7526, 1.14", "37.3132, 133.664, 54.0324, 1.14", "38.4635, 136.729, 54.4404, 0.23", "39.2161, 138.952, 54.6656, 0.23", "39.8721, 141.165, 54.9286, 1.14", "40.2466, 142.595, 55.1349, 1.14", "40.8686, 145.105, 55.5272, 0.23", "41.1161, 146.27, 55.7447, 0.23", "41.4259, 148.165, 56.2113, 0.23", "41.8298, 150.955, 57.1846, 1.36", "42.2513, 153.561, 58.2126, 0.23", "42.6795, 155.519, 59.1052, 0.68", "43.1008, 156.786, 59.7889, 0.23", "44.282, 159.419, 61.4502, 1.14", "45.2815, 161.232, 62.7631, 0.23", "46.4085, 162.959, 64.0847, 1.14", "47.7312, 164.779, 65.5297, 0.23", "49.4166, 166.829, 67.2218, 1.14", "50.6035, 168.128, 68.2547, 0.23", "51.9316, 169.516, 69.2514, 1.14", "53.186, 170.981, 70.1763, 0.23", "53.6792, 171.726, 70.5998, 0.23", "54.2963, 173.295, 71.2473, 0.23", "54.5742, 174.379, 71.5546, 0.91", "54.8046, 175.5, 71.8259, 0.91", "55.1281, 177.442, 72.2351, 0.91", "55.4163, 180.271, 72.7675, 1.59", "55.6099, 183.689, 73.2952, 0.23", "55.7043, 185.99, 73.599, 1.36", "55.9499, 188.841, 73.8398, 0.23", "56.1119, 189.998, 73.8611, 0.23", "56.5651, 192.119, 73.7398, 1.14", "57.2117, 194.369, 73.4338, 0.23", "57.7934, 196.138, 73.0482, 1.14", "59.1771, 199.898, 72.0723, 0.23", "59.8733, 201.643, 71.563, 0.91", "61.0681, 204.417, 70.7658, 0.23", "61.8958, 206.243, 70.2464, 1.14", "62.5051, 207.75, 69.8352, 1.14", "63.2804, 210.221, 69.2255, 0.23", "63.7308, 212.106, 68.8857, 0.91", "63.9948, 213.392, 68.7533, 0.91", "64.3459, 215.416, 68.6457, 0.23", "64.7285, 218.055, 68.6234, 0.23", "64.9411, 219.608, 68.6392, 0.23", "65.3165, 222.288, 68.7127, 0.91", "65.953, 225.71, 68.8699, 0.23", "66.3828, 227.621, 68.9769, 0.68", "66.9757, 229.898, 69.1267, 0.91", "67.5984, 231.963, 69.236, 0.23", "67.9435, 233.241, 69.2865, 0.68", "68.4258, 235.395, 69.3172, 0.23", "68.8298, 237.413, 69.3214, 0.68", "69.0673, 238.606, 69.3501, 0.23", "69.8467, 242.259, 69.5019, 0.91", "70.3399, 244.519, 69.6126, 0.23", "70.7419, 246.456, 69.6982, 0.91", "71.1654, 248.632, 69.7923, 0.23", "71.7696, 251.221, 69.9021, 1.14", "72.2661, 253.113, 70.0043, 0.23", "72.9866, 255.659, 70.1494, 1.14", "73.9737, 259.023, 70.3044, 0.23", "74.7965, 262.155, 70.4394, 0.45", "75.6588, 265.557, 70.5623, 0.91", "76.3375, 268.513, 70.684, 0.23", "76.745, 270.513, 70.7746, 0.91", "77.5025, 274.408, 70.9877, 0.23", "78.0812, 277.208, 71.1736, 1.14" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "11.9061, -26.6646, 6.80036, 1.59", "14.1441, -28.4422, 7.04445, 1.59", "16.7699, -30.5279, 7.33084, 1.59" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "11.9061, -26.6646, 6.80036, 0.23", "10.2256, -27.0678, 7.60853, 0.23", "9.27112, -27.3633, 7.97806, 0.91", "8.22386, -27.7663, 8.28634, 0.23", "7.26721, -28.192, 8.49085, 0.68", "6.31057, -28.7034, 8.64775, 0.68", "5.61145, -29.1413, 8.72993, 0.68", "4.72743, -29.8769, 8.71073, 0.23", "3.98519, -30.5827, 8.61171, 0.68", "3.42549, -31.1555, 8.4816, 0.23", "2.6052, -32.0522, 8.23656, 0.68", "1.88875, -32.8411, 7.99126, 0.23", "1.55826, -33.23, 7.86547, 0.91", "0.661274, -34.3917, 7.48839, 0.23", "0.132155, -35.1126, 7.24504, 0.91", "-0.47994, -36.0044, 6.93102, 0.23", "-0.957797, -36.7606, 6.65155, 0.91", "-1.54755, -37.7468, 6.2885, 0.23", "-2.48926, -39.3675, 5.72645, 0.91", "-3.51037, -41.257, 5.12987, 0.23", "-4.22318, -42.6316, 4.73756, 0.23", "-4.82789, -43.8645, 4.42946, 0.91", "-5.80672, -45.9921, 3.9611, 0.45", "-6.56176, -47.6939, 3.64233, 0.45", "-6.97678, -48.7515, 3.49727, 0.45", "-7.35975, -49.8754, 3.38792, 0.91", "-7.74513, -51.1784, 3.27977, 0.45", "-8.11476, -52.6785, 3.17353, 0.23", "-8.24056, -53.3723, 3.12703, 0.68", "-8.64095, -55.6787, 2.93879, 0.45", "-9.07996, -57.6394, 2.73442, 0.45", "-9.36411, -58.7202, 2.60708, 0.45", "-9.60113, -59.5904, 2.4968, 0.45", "-10.1379, -61.6037, 2.2388, 0.68", "-10.5513, -63.3435, 2.00705, 0.45", "-10.8954, -65.1875, 1.76026, 0.45", "-11.1261, -66.809, 1.55822, 0.23", "-11.4034, -69.1146, 1.28098, 0.45", "-11.6511, -71.7194, 0.972167, 0.23", "-11.7369, -73.2518, 0.799682, 0.23", "-11.7665, -74.8788, 0.610824, 0.68", "-11.7257, -77.2603, 0.301279, 0.45", "-11.6988, -79.4594, -0.026803, 0.68", "-11.7264, -80.6408, -0.21359, 0.68", "-11.7743, -81.3349, -0.329596, 0.68", "-12.0815, -84.0107, -0.788302, 0.23", "-12.3674, -86.0656, -1.15758, 0.45", "-12.5821, -87.6969, -1.46465, 0.45", "-12.7306, -88.8477, -1.68777, 0.45", "-12.9118, -90.1217, -1.94877, 0.23", "-13.2849, -92.1522, -2.34198, 0.23", "-16.7273, -99.2808, -2.17078, 0.23", "-19.8542, -106.568, -2.09438, 0.23", "-23.8317, -113.383, -1.88018, 0.23", "-28.6541, -119.55, -2.31898, 0.23", "-34.1246, -125.051, -1.50139, 0.23", "-38.9311, -131.22, -2.06922, 0.23", "-43.9895, -137.029, -3.36754, 0.23", "-49.5743, -141.992, -5.44622, 0.23", "-54.9819, -147.144, -7.57121, 0.23", "-60.2338, -152.748, -8.92014, 0.23", "-65.0859, -158.21, -11.6018, 0.23", "-69.5696, -163.697, -14.8155, 0.23", "-73.584, -169.048, -18.7657, 0.23" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-42.2778, 29.6376, 15.4299, 0.68", "-40.767, 31.79, 15.3261, 0.68", "-38.8505, 34.5203, 15.1944, 0.23", "-37.8865, 35.8937, 15.1281, 0.23", "-36.4908, 37.8821, 15.0322, 0.23", "-35.2402, 39.6637, 14.9463, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-42.2778, 29.6376, 15.4299, 0.68", "-43.6677, 30.8569, 15.3271, 0.68", "-46.917, 33.62, 15.0852, 0.45", "-48.1056, 34.5188, 15.0312, 0.45", "-49.4755, 35.4888, 14.9983, 1.36", "-51.0561, 36.5979, 14.9782, 0.23", "-51.8123, 37.1519, 14.9732, 0.23", "-54.0214, 38.8178, 15.0392, 1.14", "-55.8305, 40.1354, 15.1637, 0.23", "-57.9829, 41.5086, 15.3856, 1.14", "-59.9646, 42.5902, 15.6841, 0.45", "-61.7788, 43.4578, 16.0503, 1.14", "-63.6085, 44.2433, 16.4971, 0.23", "-65.1859, 44.8581, 16.9547, 0.68", "-67.3928, 45.6218, 17.5991, 0.68", "-69.0876, 46.071, 18.0483, 0.23", "-70.9294, 46.4658, 18.4578, 0.23", "-72.641, 46.7863, 18.7674, 0.91", "-73.8873, 47.0229, 18.9081, 0.23", "-76.3892, 47.553, 19.0405, 1.36", "-78.9612, 48.1356, 19.0642, 0.23", "-81.4065, 48.6815, 18.9962, 0.23", "-82.6328, 48.9695, 18.9121, 0.68", "-84.7255, 49.5521, 18.7149, 1.36", "-86.3514, 50.1452, 18.5229, 0.23", "-87.2786, 50.5859, 18.4249, 0.23", "-88.2771, 51.2516, 18.3286, 0.91", "-89.835, 52.4881, 18.2321, 0.91", "-91.1311, 53.6077, 18.2042, 1.36", "-93.023, 55.2974, 18.3296, 0.23", "-94.4003, 56.5468, 18.4793, 1.14", "-96.3278, 58.4, 18.7331, 0.23", "-98.0073, 60.0906, 18.9793, 0.91", "-98.7198, 60.8378, 19.0963, 0.91", "-100.31, 62.4594, 19.3814, 0.23", "-100.967, 63.0958, 19.5244, 0.23", "-102.817, 64.8292, 19.9669, 1.14", "-103.637, 65.5959, 20.154, 0.23", "-104.944, 66.8393, 20.4729, 0.23", "-106.338, 68.0574, 20.8448, 0.91", "-108.653, 69.8256, 21.4732, 0.23", "-110.439, 70.9701, 22.0105, 0.23", "-112.445, 72.0728, 22.6437, 0.91", "-114.113, 72.9138, 23.1613, 0.23", "-115.63, 73.5922, 23.5996, 0.68", "-117.36, 74.332, 24.0434, 0.23", "-118.845, 74.9129, 24.3655, 1.14", "-121.42, 75.878, 24.8645, 0.23", "-122.682, 76.3477, 25.0826, 0.68", "-124.721, 77.2082, 25.353, 0.23", "-125.917, 77.7994, 25.4766, 0.23", "-127.814, 78.8498, 25.6288, 0.23", "-129.521, 79.8886, 25.7601, 1.59", "-131.509, 81.1714, 25.9047, 0.45", "-132.964, 82.2116, 25.9837, 0.45", "-133.719, 82.8125, 26.0006, 0.45", "-136.077, 84.8909, 25.9776, 0.68", "-137.932, 86.7608, 25.8618, 1.14", "-139.675, 88.6025, 25.6566, 0.23", "-141.204, 90.3137, 25.374, 0.23", "-142.224, 91.5288, 25.1186, 0.23", "-143.564, 93.2948, 24.6967, 0.91", "-144.793, 95.1092, 24.1858, 0.23", "-145.619, 96.38, 23.7963, 0.91", "-146.969, 98.503, 23.1921, 0.23", "-148.277, 100.464, 22.6871, 1.36", "-149.385, 101.986, 22.3351, 0.91", "-150.828, 103.867, 21.9198, 0.23", "-151.784, 105.151, 21.6354, 0.91", "-152.784, 106.615, 21.3078, 0.23", "-153.212, 107.279, 21.1401, 1.14", "-153.982, 108.589, 20.7311, 1.14", "-154.861, 110.2, 20.1425, 0.23", "-155.552, 111.71, 19.5721, 0.23", "-155.706, 112.063, 19.4366, 0.91", "-156.37, 113.437, 18.9264, 0.91", "-156.962, 114.525, 18.5573, 0.91", "-158.331, 116.594, 17.9663, 0.23", "-159.03, 117.486, 17.7545, 0.23", "-160.007, 118.553, 17.5455, 0.91", "-161.689, 120.285, 17.2573, 0.23", "-162.839, 121.373, 17.1132, 0.91", "-164.745, 123.073, 16.947, 0.23", "-165.252, 123.504, 16.9134, 0.91", "-166.585, 124.67, 16.7919, 0.91", "-167.546, 125.577, 16.6699, 0.45", "-168.589, 126.712, 16.4613, 0.23", "-169.959, 128.45, 16.0604, 0.23", "-170.66, 129.41, 15.8163, 0.68", "-171.72, 130.907, 15.4217, 0.23", "-173.057, 132.995, 14.8154, 0.23", "-174.188, 134.842, 14.2206, 0.68", "-174.877, 136.185, 13.7406, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "127.397, 149.379, 24.7562, 0.23", "131.83, 156.7, 22.7466, 0.23", "134.594, 165.027, 21.4988, 0.23", "139.66, 172.053, 19.9754, 0.23", "144.436, 178.215, 16.0984, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "127.397, 149.379, 24.7562, 0.23", "132.7, 156.108, 30.1785, 0.23", "138.693, 163.086, 34.3972, 0.23", "145.986, 168.331, 38.8328, 0.23", "154.202, 171.159, 43.6096, 0.23", "163.117, 173.309, 47.2851, 0.23", "171.65, 175.119, 51.9307, 0.23", "181.149, 175.968, 54.3756, 0.23", "190.836, 175.455, 56.0179, 0.23", "200.359, 176.015, 58.4465, 0.23" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "110.741, 321.714, 48.6166, 0.23", "110.987, 322.777, 47.8168, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "110.741, 321.714, 48.6166, 0.23", "109.454, 320.929, 49.9093, 0.23", "108.814, 320.587, 50.5723, 0.23", "108.259, 320.355, 51.2032, 0.23", "106.903, 319.849, 52.845, 0.23", "106.378, 319.669, 53.4624, 1.14", "105.37, 319.346, 54.5779, 0.68", "104.783, 319.138, 55.1944, 0.23", "103.736, 318.738, 56.3401, 1.14", "102.474, 318.202, 57.7412, 0.23", "101.674, 317.85, 58.6432, 0.23", "100.725, 317.423, 59.6559, 0.45", "100.052, 317.146, 60.3226, 0.23", "99.6346, 316.999, 60.7225, 0.68", "98.2387, 316.644, 61.9487, 0.23", "97.1633, 316.453, 62.8775, 0.23", "96.1971, 316.376, 63.7479, 0.91", "95.1804, 316.474, 64.6444, 0.23", "94.4897, 316.683, 65.1871, 0.23", "93.5357, 317.205, 65.9034, 0.68" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "78.0812, 277.208, 71.1736, 0.23", "77.6924, 280.069, 72.3526, 0.23", "77.4094, 282.151, 73.2109, 1.14", "77.1175, 284.299, 74.096, 0.23", "76.8529, 286.247, 74.8987, 0.68", "76.5772, 288.276, 75.7348, 0.23", "76.2875, 290.407, 76.6133, 0.45" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "78.0812, 277.208, 71.1736, 0.23", "77.6262, 278.952, 71.187, 0.23", "77.2559, 280.159, 71.2014, 0.23", "76.7628, 281.659, 71.2258, 0.91", "76.4583, 282.518, 71.2428, 0.91", "75.9813, 283.782, 71.2712, 0.23", "75.3912, 285.331, 71.3069, 0.91", "74.88, 286.673, 71.3184, 0.23", "74.6549, 287.335, 71.3024, 0.23", "74.3174, 288.315, 71.2545, 1.14", "73.8552, 289.689, 71.1581, 0.23", "73.4981, 290.733, 71.0543, 0.23", "73.0705, 292.085, 70.8895, 0.68", "72.685, 293.455, 70.7082, 0.23", "72.4627, 294.275, 70.6008, 0.23", "72.2636, 295.012, 70.5087, 0.23", "71.8855, 296.514, 70.3071, 1.14", "71.556, 297.825, 70.1374, 0.23", "71.1339, 299.555, 69.9408, 0.23", "70.9041, 300.664, 69.8178, 0.23", "70.818, 301.425, 69.7262, 0.91", "70.7911, 303.639, 69.4493, 0.23", "70.893, 304.54, 69.3329, 1.14", "71.1752, 305.618, 69.1839, 1.14", "71.7539, 307.032, 68.9889, 0.23", "72.5094, 308.494, 68.7985, 0.91", "73.2285, 309.705, 68.6429, 0.23", "73.9115, 310.751, 68.5208, 0.23", "75.0026, 312.325, 68.3264, 0.45", "75.8993, 313.634, 68.1685, 0.45", "76.7148, 314.888, 68.0277, 0.23", "77.1325, 315.599, 67.9516, 0.45", "77.7039, 316.69, 67.8633, 0.23", "77.9292, 317.231, 67.8343, 0.91", "78.7181, 319.793, 67.8041, 0.23", "78.9209, 320.626, 67.8209, 0.23", "79.2183, 322.116, 67.8852, 0.91", "79.4674, 323.649, 67.9783, 0.23", "79.7065, 325.353, 68.0888, 0.91", "79.9352, 327.244, 68.2119, 0.23", "80.0363, 328.488, 68.2963, 1.14", "80.1194, 330.205, 68.3994, 0.23", "80.1334, 330.875, 68.418, 0.68", "80.0689, 332.309, 68.3779, 0.91", "80.0032, 333.281, 68.3097, 0.23", "79.8663, 334.245, 68.2022, 0.23", "79.6029, 335.39, 68.0665, 1.14", "79.2725, 336.429, 67.9454, 0.23", "78.4924, 338.611, 67.7057, 0.23", "78.2647, 339.267, 67.628, 0.23", "77.9873, 340.178, 67.497, 0.91", "77.6466, 341.68, 67.1712, 0.23", "77.3967, 342.954, 66.8828, 0.23", "77.2938, 343.608, 66.7355, 0.23", "77.1491, 345.335, 66.2851, 0.91", "77.0038, 347.027, 65.7747, 0.23", "76.9559, 348.735, 65.1203, 0.23" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "16.7699, -30.5279, 7.33084, 0.91", "18.0613, -32.6493, 7.16534, 0.91", "18.9311, -34.1098, 7.11639, 0.91", "19.8275, -35.6149, 7.09789, 0.91", "21.5595, -38.5847, 7.08614, 0.91", "22.9008, -40.7184, 7.12904, 0.91", "24.7421, -43.4522, 7.22666, 0.91", "25.9764, -45.1612, 7.2595, 0.91", "27.1364, -46.6535, 7.26838, 0.91", "29.1112, -49.1548, 7.24708, 1.14", "32.0795, -53.0325, 7.14193, 0.68", "34.4518, -56.1403, 6.96544, 0.68", "37.2024, -59.7893, 6.64938, 0.68", "38.8567, -62.0194, 6.41623, 1.14", "40.6373, -64.5033, 6.13343, 0.68", "42.0697, -66.6745, 5.85531, 0.68", "42.6091, -67.6584, 5.70983, 1.14", "44.0325, -70.9351, 5.24931, 0.68", "44.948, -73.5495, 4.97227, 0.68", "45.423, -74.8731, 4.82765, 0.68", "46.1472, -76.6289, 4.63305, 0.68", "47.1904, -78.9505, 4.4204, 1.14", "48.9512, -82.7719, 4.08765, 0.68", "50.4272, -85.9595, 3.86577, 0.68", "51.9443, -88.8835, 3.7448, 0.68", "53.9419, -92.0402, 3.71163, 1.14", "55.2501, -93.7163, 3.73599, 0.45", "56.572, -95.1543, 3.76059, 1.14", "58.1013, -96.6135, 3.72631, 0.45", "60.1563, -98.4923, 3.54423, 0.45", "62.467, -100.651, 3.22679, 0.45", "64.7875, -102.852, 2.77059, 0.45", "66.8718, -104.868, 2.26152, 0.45", "69.7458, -107.817, 1.51334, 0.68", "71.6604, -110.024, 1.01936, 0.68", "73.3548, -112.293, 0.681764, 0.68", "75.0728, -114.869, 0.458072, 0.68", "75.9624, -116.366, 0.409011, 0.68", "77.335, -119.045, 0.443665, 0.91", "78.665, -122.329, 0.566747, 0.45", "79.9151, -126.241, 0.702096, 0.68", "80.308, -127.7, 0.703853, 0.68", "80.8846, -130.235, 0.609705, 0.68", "81.3922, -132.817, 0.403753, 0.68", "82.0001, -136.232, -0.0716207, 0.68", "82.4209, -138.7, -0.53745, 0.68", "82.8537, -141.502, -1.13573, 0.68", "83.1569, -143.433, -1.53316, 0.68", "83.5445, -145.619, -1.99185, 0.91", "84.0805, -148.214, -2.54056, 0.68", "84.4211, -149.723, -2.88428, 0.23", "84.6314, -150.756, -3.11784, 0.23", "84.8527, -152.028, -3.37926, 0.23", "85.231, -154.293, -3.81636, 0.45", "85.612, -156.535, -4.21108, 0.45", "86.1481, -159.537, -4.70308, 0.45", "86.5838, -161.814, -5.06171, 0.91", "87.2469, -165.105, -5.56176, 0.68", "87.6013, -167.043, -5.83679, 0.68", "87.9725, -169.905, -6.20759, 0.23", "88.0362, -171.08, -6.34299, 0.23", "88.0242, -171.942, -6.43073, 0.23", "87.8349, -174.092, -6.67281, 0.23", "87.2335, -177.298, -7.11349, 0.45", "86.4556, -180.043, -7.56099, 0.45", "85.2483, -183.29, -8.18054, 0.45", "84.741, -184.479, -8.43102, 0.23", "83.9003, -186.25, -8.80976, 0.23", "83.0107, -187.955, -9.18823, 0.45", "81.7154, -190.284, -9.73125, 0.23", "79.8447, -193.858, -10.5922, 0.45", "78.7314, -196.193, -11.1261, 0.68", "77.8215, -198.377, -11.5703, 0.23", "77.3735, -199.717, -11.8035, 0.23", "77.0287, -201.139, -11.992, 0.68", "76.6145, -204.075, -12.3173, 0.23", "76.5289, -206.323, -12.5428, 0.23", "76.5807, -208.263, -12.7583, 0.68", "76.7038, -210.507, -13.0479, 0.23", "76.8944, -213.574, -13.3763, 0.23", "77.0327, -216.387, -13.6099, 0.68", "77.0917, -218.646, -13.7976, 0.45", "77.0815, -221.11, -14.0525, 0.68", "76.9567, -223.783, -14.3707, 0.45", "76.7257, -225.978, -14.6605, 0.23", "76.5003, -227.237, -14.8376, 0.23", "76.0883, -229.211, -15.1055, 0.45", "75.4661, -232.294, -15.451, 0.45", "74.9104, -235.409, -15.7334, 0.45", "74.3697, -238.785, -16.013, 0.45", "73.8931, -241.898, -16.3118, 0.45", "73.6443, -243.858, -16.5086, 0.45", "73.3414, -246.583, -16.8014, 0.45", "73.0689, -249.748, -17.2278, 0.45", "72.7821, -253.606, -17.8326, 0.91", "72.6553, -256.052, -18.2323, 0.45", "72.5927, -257.973, -18.5351, 0.68", "72.5229, -261.507, -19.0596, 0.45", "72.5025, -263.531, -19.3425, 0.45", "72.5256, -265.92, -19.6147, 1.14", "72.5879, -268.986, -19.8731, 0.23", "72.6271, -271.486, -20.0027, 0.23", "72.6187, -273.572, -20.0666, 0.23", "72.6377, -275.949, -20.1031, 0.45", "72.651, -278.039, -20.2068, 0.68", "72.639, -279.632, -20.3929, 0.45", "72.6042, -281.084, -20.6611, 0.68", "72.6024, -282.214, -20.9025, 0.68", "72.6426, -283.595, -21.2077, 0.68", "72.7735, -286.222, -21.7128, 0.45", "72.9684, -289.047, -22.1737, 0.45", "73.1188, -290.974, -22.4207, 0.45", "73.2944, -293.588, -22.6996, 0.91", "73.4407, -296.212, -22.9335, 0.23", "73.5398, -299.062, -23.1428, 0.68", "73.5704, -300.209, -23.2133, 0.68", "73.5777, -302.794, -23.4165, 0.23", "73.398, -305.128, -23.7022, 0.68", "73.0667, -306.741, -24.0745, 0.23", "72.8662, -307.391, -24.3031, 0.68", "72.4037, -308.758, -24.9194, 0.23", "71.7677, -310.59, -25.8389, 0.68", "71.0707, -312.837, -27.0337, 0.23", "70.5762, -315.012, -28.1324, 0.68", "70.2583, -317.442, -29.2855, 0.23", "70.2914, -319.016, -29.9558, 0.45", "70.7196, -321.202, -30.7481, 0.45", "71.3629, -323.03, -31.3064, 0.45", "72.3602, -325.292, -31.8843, 0.45", "72.9645, -326.493, -32.1454, 0.91", "74.2564, -328.866, -32.6732, 0.23", "75.4957, -331.225, -33.2151, 0.68", "76.8158, -333.99, -33.8834, 0.45", "77.7185, -336.291, -34.4753, 0.45", "78.2224, -338.028, -34.8956, 0.23", "78.5135, -339.63, -35.2402, 0.68", "78.6007, -341.524, -35.5807, 0.23", "78.4613, -343.278, -35.815, 0.23", "78.106, -345.269, -35.9963, 0.23", "77.3887, -347.949, -36.125, 0.23", "76.7149, -349.792, -36.0685, 0.23", "75.6562, -351.989, -35.7175, 0.23", "74.6991, -353.832, -35.3129, 0.23", "74.0001, -355.05, -34.9525, 0.23", "73.3012, -356.015, -34.5667, 0.68", "71.7361, -357.591, -33.6517, 0.23", "69.7112, -359.062, -32.3137, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "16.7699, -30.5279, 7.33084, 0.45", "16.7829, -32.0286, 5.7643, 0.45", "16.6637, -33.8592, 4.00697, 0.45", "16.5432, -35.1554, 2.943, 0.45", "16.5013, -36.0856, 2.33619, 0.45", "16.4622, -37.6174, 1.52981, 0.45", "16.4684, -39.119, 0.8826, 0.91", "16.4779, -40.287, 0.513548, 0.68", "16.4904, -42.1799, 0.0448379, 1.36", "16.7025, -45.3832, -0.611719, 1.14", "17.0586, -47.9296, -1.06764, 0.45", "17.5943, -50.7627, -1.51566, 0.91", "17.9868, -52.6845, -1.79603, 0.45", "18.6499, -55.9438, -2.22646, 0.68", "19.3198, -58.9783, -2.59883, 0.68", "19.9315, -61.4881, -2.87593, 0.68", "20.5851, -63.9793, -3.12572, 0.68", "21.3913, -67.1625, -3.39681, 0.68", "21.9631, -69.6752, -3.57111, 0.68", "22.7662, -73.653, -3.84934, 0.45", "23.0801, -75.423, -3.98647, 0.45", "23.5072, -77.6505, -4.17789, 0.68", "23.8799, -79.3129, -4.34167, 0.23", "24.5126, -81.6766, -4.6161, 0.91", "25.3029, -84.3129, -4.95606, 0.23", "25.9153, -86.1988, -5.22817, 0.68", "27.0124, -89.3701, -5.70835, 0.91", "28.5471, -93.5302, -6.42348, 0.91", "29.5804, -96.2072, -6.9413, 0.91", "30.2468, -97.9593, -7.2632, 0.23", "30.8696, -99.8578, -7.56947, 0.68", "31.2971, -101.408, -7.802, 0.68", "31.7976, -103.475, -8.07147, 0.23", "32.2906, -105.417, -8.27457, 0.68", "33.0703, -108.432, -8.57356, 0.68", "33.7612, -111.263, -8.8468, 0.68", "34.1475, -112.839, -8.98326, 0.68", "34.5537, -114.41, -9.12621, 0.68", "35.2818, -117.103, -9.40912, 0.68", "36.0769, -120.127, -9.82344, 0.68", "36.8781, -123.434, -10.4322, 0.68", "37.5013, -126.195, -10.9756, 0.23", "37.7919, -127.653, -11.2602, 1.14", "38.1221, -129.74, -11.6829, 0.23", "38.2568, -131.023, -11.9473, 0.68", "38.5498, -134.218, -12.5692, 0.23", "38.6694, -135.578, -12.8356, 0.23", "38.7641, -137.487, -13.2414, 0.23", "38.7768, -139.948, -13.7644, 0.68", "38.7288, -142.831, -14.379, 0.68", "38.6976, -145.031, -14.8813, 0.23", "38.646, -146.65, -15.2722, 0.91", "38.4102, -149.673, -16.0642, 0.91", "38.0016, -152.719, -16.8196, 0.23", "37.7416, -154.598, -17.2205, 0.68", "37.5033, -156.31, -17.5408, 0.23", "37.2386, -158.323, -17.8543, 0.68", "36.9147, -161.354, -18.2069, 0.91", "36.6359, -164.499, -18.4581, 0.45", "36.369, -167.948, -18.7587, 0.45", "36.1574, -170.189, -18.9864, 0.45", "35.9508, -172.451, -19.2293, 0.68", "35.6996, -176.989, -19.7385, 0.45", "35.6156, -179.955, -20.12, 0.45", "35.5223, -183.716, -20.7456, 0.45", "35.417, -186.125, -21.2076, 0.45", "35.378, -187.482, -21.4888, 0.23", "35.3454, -189.621, -21.9632, 0.23", "35.3885, -191.451, -22.3662, 0.68", "35.4769, -193.418, -22.7616, 0.23", "35.4902, -194.675, -22.9788, 0.23", "35.4195, -196.905, -23.3214, 0.23", "35.2675, -198.947, -23.6064, 0.23", "35.1038, -201.547, -23.917, 0.23", "35.0364, -202.946, -24.0764, 0.45", "34.9002, -206.129, -24.4509, 0.23", "34.7322, -209.04, -24.8229, 0.68", "34.4337, -213.501, -25.4297, 0.23", "34.19, -216.723, -25.9061, 0.23", "34.044, -218.461, -26.1822, 0.23", "33.9583, -220.134, -26.4245, 0.23", "33.9028, -222.731, -26.8088, 0.45", "33.8402, -223.722, -26.9727, 0.68", "33.5522, -225.338, -27.2678, 0.23", "33.2738, -226.248, -27.4304, 0.23", "32.7448, -228.058, -27.6283, 0.23", "35.2309, -238.78, -29.9211, 0.23", "37.8622, -249.581, -31.6281, 0.23", "40.7331, -260.449, -31.7143, 0.23", "44.0207, -271.178, -31.3473, 0.23", "45.8738, -282.18, -30.0154, 0.23", "47.4777, -293.306, -30.6911, 0.23" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-174.877, 136.185, 13.7406, 0.45", "-176.348, 137.477, 13.6848, 0.45", "-177.201, 138.163, 13.6365, 0.68", "-178.814, 139.347, 13.5437, 0.45", "-180.232, 140.341, 13.41, 0.23", "-181.708, 141.299, 13.2461, 0.68", "-183.318, 142.258, 13.0539, 0.23", "-184.458, 142.843, 12.908, 0.23", "-185.885, 143.502, 12.7144, 0.45", "-187.579, 144.231, 12.4415, 0.23", "-188.866, 144.778, 12.2205, 0.23", "-190.615, 145.523, 11.8923, 0.91" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-174.877, 136.185, 13.7406, 0.23", "-174.065, 137.039, 13.7045, 0.23", "-173.666, 137.56, 13.6679, 0.91", "-173.123, 138.52, 13.5735, 0.68", "-172.326, 139.928, 13.4348, 0.23", "-171.948, 140.597, 13.369, 0.68", "-170.819, 142.593, 13.1725, 0.23", "-170.062, 144.166, 12.9468, 0.23", "-169.284, 146.055, 12.6238, 0.23" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "110.987, 322.777, 47.8168, 0.23", "112.698, 324.499, 48.0906, 0.23", "114.415, 326.229, 48.3656, 0.23", "115.714, 327.537, 48.5735, 0.23", "116.912, 328.744, 48.7653, 0.23", "118.39, 330.232, 49.0019, 0.23", "120.806, 332.665, 49.3886, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "110.987, 322.777, 47.8168, 0.23", "110.089, 323.953, 47.5949, 0.23", "109.335, 325.04, 47.4177, 0.68", "108.187, 326.845, 47.1421, 0.23", "107.501, 328.053, 46.9615, 0.91", "106.201, 330.528, 46.5942, 0.45", "104.86, 333.319, 46.1935, 0.23", "104.426, 334.452, 46.0234, 0.23", "103.821, 336.276, 45.6908, 0.23", "103.358, 338.09, 45.3214, 1.14", "103.043, 339.661, 44.9817, 0.23", "102.739, 341.708, 44.432, 0.23", "102.476, 344.271, 43.6832, 0.91", "102.262, 346.461, 42.9868, 0.23", "102.095, 348.635, 42.2412, 0.23", "101.961, 350.621, 41.4988, 0.23", "101.91, 352.28, 40.8164, 0.23", "100.056, 362.639, 39.4285, 0.23" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-190.615, 145.523, 11.8923, 0.23", "-191.666, 144.682, 11.0791, 0.23", "-192.432, 144.271, 10.5437, 0.23", "-193.942, 143.459, 9.48719, 0.68", "-195.282, 142.739, 8.55011, 0.23", "-196.473, 142.099, 7.71722, 0.23", "-197.514, 141.54, 6.98886, 0.23", "-198.661, 140.899, 6.14065, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-190.615, 145.523, 11.8923, 0.23", "-192.162, 146.956, 11.8953, 0.23", "-193.703, 148.384, 11.8982, 0.68", "-194.878, 149.473, 11.9005, 0.91", "-196.326, 150.813, 11.9033, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_38", "dend_35", "dend_30", "dend_27", "dend_24", "dend_13", "dend_0", "dend_40", "dend_39", "dend_37", "dend_36", "dend_34", "dend_31", "dend_29", "dend_28", "dend_26", "dend_25", "dend_21", "dend_14", "dend_4", "dend_1", "dend_46", "dend_41", "dend_33", "dend_32", "dend_23", "dend_22", "dend_20", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_52", "dend_47", "dend_45", "dend_42", "dend_17", "dend_16", "dend_11", "dend_6", "dend_54", "dend_53", "dend_49", "dend_48", "dend_44", "dend_43", "dend_19", "dend_18", "dend_8", "dend_7", "dend_51", "dend_50", "dend_10", "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_NBC_e943473349_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: soma_0
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_41
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_38(0), soma_0(0.4999999450176422)
    connect dend_35(0), soma_0(0.4999999450176422)
    connect dend_30(0), soma_0(0.4999999450176422)
    connect dend_27(0), soma_0(0.4999999450176422)
    connect dend_24(0), soma_0(0.4999999450176422)
    connect dend_13(0), soma_0(0.4999999450176422)
    connect dend_0(0), soma_0(0.4999999450176422)
    connect axon_0(0), soma_0(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -8.76533, -3.11148, 0.0, 3.33266 ) }
    soma_0 { pt3dadd( -7.9581, -2.82432, 0.0, 5.72456 ) }
    soma_0 { pt3dadd( -7.15087, -2.53716, 0.0, 7.79007 ) }
    soma_0 { pt3dadd( -6.34364, -2.25, 0.0, 8.98288 ) }
    soma_0 { pt3dadd( -5.53641, -1.96284, 0.0, 9.97099 ) }
    soma_0 { pt3dadd( -4.72918, -1.67568, 0.0, 10.9098 ) }
    soma_0 { pt3dadd( -3.92195, -1.38852, 0.0, 11.708 ) }
    soma_0 { pt3dadd( -3.11472, -1.10136, 0.0, 12.2471 ) }
    soma_0 { pt3dadd( -2.30749, -0.8142, 0.0, 12.5813 ) }
    soma_0 { pt3dadd( -1.50026, -0.52704, 0.0, 12.8499 ) }
    soma_0 { pt3dadd( -0.693026, -0.23988, 0.0, 13.1177 ) }
    soma_0 { pt3dadd( 0.114204, 0.0472794, 0.0, 13.2864 ) }
    soma_0 { pt3dadd( 0.921435, 0.334439, 0.0, 13.0353 ) }
    soma_0 { pt3dadd( 1.72867, 0.621599, 0.0, 12.7416 ) }
    soma_0 { pt3dadd( 2.5359, 0.908759, 0.0, 12.4079 ) }
    soma_0 { pt3dadd( 3.34313, 1.19592, 0.0, 11.9163 ) }
    soma_0 { pt3dadd( 4.15036, 1.48308, 0.0, 11.2063 ) }
    soma_0 { pt3dadd( 4.95759, 1.77024, 0.0, 9.60841 ) }
    soma_0 { pt3dadd( 5.76482, 2.0574, 0.0, 7.72848 ) }
    soma_0 { pt3dadd( 6.57205, 2.34456, 0.0, 4.99653 ) }
    soma_0 { pt3dadd( 7.37928, 2.63172, 0.0, 2.95975 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 21/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 4.77184, 3.65758, 4.52, 2.05 ) }
    dend_38 { pt3dadd( 6.95351, 5.0399, 4.52, 1.59 ) }
    dend_38 { pt3dadd( 8.26204, 5.86899, 4.52, 1.59 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 24/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -5.33816, -1.89692, -6.49, 1.14 ) }
    dend_35 { pt3dadd( -6.97181, -2.07824, -7.75774, 0.45 ) }
    dend_35 { pt3dadd( -8.1528, -2.05051, -8.59994, 0.45 ) }
    dend_35 { pt3dadd( -9.8435, -1.81984, -9.67928, 0.68 ) }
    dend_35 { pt3dadd( -11.1758, -1.55684, -10.451, 0.68 ) }
    dend_35 { pt3dadd( -13.1743, -1.23783, -11.4777, 0.68 ) }
    dend_35 { pt3dadd( -14.3183, -1.17277, -12.0254, 0.68 ) }
    dend_35 { pt3dadd( -17.0963, -1.14438, -13.3395, 0.68 ) }
    dend_35 { pt3dadd( -19.3263, -1.14906, -14.3067, 0.68 ) }
    dend_35 { pt3dadd( -21.1634, -1.12191, -15.0274, 0.68 ) }
    dend_35 { pt3dadd( -23.3591, -0.89907, -15.7774, 1.14 ) }
    dend_35 { pt3dadd( -26.0783, -0.453578, -16.532, 0.23 ) }
    dend_35 { pt3dadd( -37.059, 1.55484, -23.0252, 0.23 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 37/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -0.18816, -3.66092, -7.25, 1.36 ) }
    dend_30 { pt3dadd( -0.842185, -6.58932, -7.21394, 1.36 ) }
    dend_30 { pt3dadd( -1.33153, -8.78037, -7.18696, 1.36 ) }
    // Section: dend_27, id: dend_27, parent: soma_0 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.84184, -3.53492, -2.34, 2.95 ) }
    dend_27 { pt3dadd( 6.3583, -5.96943, -2.41838, 1.59 ) }
    dend_27 { pt3dadd( 8.51857, -9.43751, -2.53002, 1.59 ) }
    dend_27 { pt3dadd( 10.3588, -12.3918, -2.62513, 1.59 ) }
    dend_27 { pt3dadd( 12.4482, -15.7461, -2.73312, 1.36 ) }
    dend_27 { pt3dadd( 14.3507, -18.8003, -2.83144, 2.05 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 46/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.39816, -4.42742, -2.42, 1.82 ) }
    dend_24 { pt3dadd( -10.1175, -4.26356, -3.44199, 0.68 ) }
    dend_24 { pt3dadd( -12.9276, -4.08754, -4.37759, 0.45 ) }
    dend_24 { pt3dadd( -16.2718, -3.82355, -5.40903, 0.45 ) }
    dend_24 { pt3dadd( -18.7916, -3.61227, -6.12336, 0.23 ) }
    dend_24 { pt3dadd( -20.8153, -3.49581, -6.6496, 0.23 ) }
    dend_24 { pt3dadd( -22.6358, -3.43878, -7.10446, 0.23 ) }
    dend_24 { pt3dadd( -24.5674, -3.41544, -7.53225, 0.23 ) }
    dend_24 { pt3dadd( -27.3232, -3.4094, -8.04821, 0.45 ) }
    dend_24 { pt3dadd( -30.5633, -3.40062, -8.57105, 0.45 ) }
    dend_24 { pt3dadd( -32.9101, -3.36999, -8.89528, 0.23 ) }
    dend_24 { pt3dadd( -34.2648, -3.32068, -9.09195, 0.23 ) }
    dend_24 { pt3dadd( -35.214, -3.29417, -9.27641, 0.23 ) }
    dend_24 { pt3dadd( -36.9658, -3.26339, -9.67936, 0.23 ) }
    dend_24 { pt3dadd( -38.6512, -3.22938, -10.0795, 0.23 ) }
    dend_24 { pt3dadd( -40.4268, -3.13867, -10.5415, 0.23 ) }
    dend_24 { pt3dadd( -43.3952, -2.86219, -11.3769, 0.23 ) }
    dend_24 { pt3dadd( -46.4986, -2.5734, -12.2805, 0.23 ) }
    dend_24 { pt3dadd( -48.2567, -2.48324, -12.8368, 1.36 ) }
    dend_24 { pt3dadd( -57.9131, -2.9324, -15.838, 1.36 ) }
    dend_24 { pt3dadd( -67.0349, -3.10826, -20.22, 1.36 ) }
    dend_24 { pt3dadd( -75.3259, -3.33896, -26.0206, 1.36 ) }
    dend_24 { pt3dadd( -82.8813, -3.4928, -32.7534, 1.36 ) }
    dend_24 { pt3dadd( -90.3063, -2.28289, -39.5343, 1.36 ) }
    dend_24 { pt3dadd( -98.193, -0.113905, -45.5317, 1.36 ) }
    dend_24 { pt3dadd( -105.371, 3.20204, -51.9294, 1.36 ) }
    dend_24 { pt3dadd( -113.519, 7.37234, -56.4329, 1.36 ) }
    dend_24 { pt3dadd( -121.887, 12.478, -59.3934, 1.36 ) }
    dend_24 { pt3dadd( -129.658, 19.0112, -61.219, 1.36 ) }
    dend_24 { pt3dadd( -136.525, 26.071, -64.3929, 1.36 ) }
    dend_24 { pt3dadd( -144.142, 32.4938, -67.0383, 1.36 ) }
    dend_24 { pt3dadd( -152.562, 36.4659, -71.1895, 1.36 ) }
    dend_24 { pt3dadd( -160.881, 41.485, -74.4103, 1.36 ) }
    dend_24 { pt3dadd( -169.558, 46.2791, -76.9229, 1.36 ) }
    dend_24 { pt3dadd( -178.141, 50.6543, -80.2984, 1.36 ) }
    dend_24 { pt3dadd( -187.301, 53.7789, -83.4102, 1.36 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 82/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 2.19184, -6.68492, 3.26, 1.59 ) }
    dend_13 { pt3dadd( 3.61524, -8.59885, 4.27481, 1.59 ) }
    dend_13 { pt3dadd( 5.13876, -10.6474, 5.361, 1.59 ) }
    dend_13 { pt3dadd( 7.05433, -13.2232, 6.72672, 2.27 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 86/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -8.17816, -2.97842, 1.81, 2.05 ) }
    dend_0 { pt3dadd( -10.3099, -2.54981, 2.03853, 1.36 ) }
    dend_0 { pt3dadd( -12.0243, -2.2051, 2.22232, 1.36 ) }
    dend_0 { pt3dadd( -15.204, -1.56577, 2.56319, 2.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 90/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 7.37928, 2.63172, 0.0, 1.15871 ) }
    axon_0 { pt3dadd( 21.5117, 7.65911, 0.0, 1.15871 ) }
    axon_0 { pt3dadd( 35.6441, 12.6865, 0.0, 1.15871 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 93/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 8.26204, 5.86899, 4.52, 2.27 ) }
    dend_40 { pt3dadd( 9.65435, 7.01906, 5.19126, 2.27 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 95/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 8.26204, 5.86899, 4.52, 0.68 ) }
    dend_39 { pt3dadd( 10.3164, 5.48861, 5.4818, 0.68 ) }
    dend_39 { pt3dadd( 12.0793, 5.25739, 6.23774, 0.45 ) }
    dend_39 { pt3dadd( 13.9734, 5.09535, 7.00986, 1.14 ) }
    dend_39 { pt3dadd( 15.5929, 4.97206, 7.61236, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 16.9113, 4.84226, 8.11504, 0.68 ) }
    dend_39 { pt3dadd( 18.2998, 4.70696, 8.65456, 1.14 ) }
    dend_39 { pt3dadd( 20.107, 4.55794, 9.34489, 0.23 ) }
    dend_39 { pt3dadd( 20.9073, 4.49226, 9.65215, 0.91 ) }
    dend_39 { pt3dadd( 22.318, 4.35878, 10.1439, 1.14 ) }
    dend_39 { pt3dadd( 24.4172, 4.14366, 10.8704, 0.23 ) }
    dend_39 { pt3dadd( 25.7957, 4.02032, 11.3574, 0.91 ) }
    dend_39 { pt3dadd( 27.6995, 3.86115, 12.1549, 1.14 ) }
    dend_39 { pt3dadd( 29.3404, 3.68364, 12.8995, 0.45 ) }
    dend_39 { pt3dadd( 31.2165, 3.52316, 13.7545, 0.68 ) }
    dend_39 { pt3dadd( 32.6164, 3.50681, 14.3887, 0.23 ) }
    dend_39 { pt3dadd( 33.162, 3.55221, 14.6517, 1.14 ) }
    dend_39 { pt3dadd( 34.9246, 3.88955, 15.6256, 0.23 ) }
    dend_39 { pt3dadd( 36.2328, 4.27413, 16.4299, 0.45 ) }
    dend_39 { pt3dadd( 38.0764, 5.06084, 17.6981, 1.59 ) }
    dend_39 { pt3dadd( 39.829, 5.96812, 18.9455, 0.45 ) }
    dend_39 { pt3dadd( 41.4411, 6.79585, 20.0628, 1.36 ) }
    dend_39 { pt3dadd( 43.4003, 7.76394, 21.3751, 0.23 ) }
    dend_39 { pt3dadd( 44.2293, 8.16955, 21.9102, 2.05 ) }
    dend_39 { pt3dadd( 45.6517, 8.93533, 22.9606, 0.23 ) }
    dend_39 { pt3dadd( 46.2209, 9.25814, 23.4195, 0.68 ) }
    dend_39 { pt3dadd( 47.1014, 9.6382, 24.1658, 0.23 ) }
    dend_39 { pt3dadd( 47.9001, 9.87337, 24.7948, 0.23 ) }
    dend_39 { pt3dadd( 48.4691, 9.99694, 25.2287, 1.14 ) }
    dend_39 { pt3dadd( 49.9125, 10.3367, 26.4144, 0.23 ) }
    dend_39 { pt3dadd( 50.9933, 10.6265, 27.4035, 1.14 ) }
    dend_39 { pt3dadd( 52.4472, 11.1505, 28.9539, 0.23 ) }
    dend_39 { pt3dadd( 53.1999, 11.5187, 29.8533, 0.91 ) }
    dend_39 { pt3dadd( 54.3576, 12.1929, 31.3367, 0.23 ) }
    dend_39 { pt3dadd( 55.3685, 12.8884, 32.6004, 1.36 ) }
    dend_39 { pt3dadd( 56.4432, 13.7326, 33.913, 0.23 ) }
    dend_39 { pt3dadd( 57.4581, 14.5711, 35.1197, 1.36 ) }
    dend_39 { pt3dadd( 58.7793, 15.725, 36.5755, 0.23 ) }
    dend_39 { pt3dadd( 60.0197, 16.7834, 37.8484, 1.14 ) }
    dend_39 { pt3dadd( 60.9642, 17.5681, 38.6951, 0.23 ) }
    dend_39 { pt3dadd( 61.6563, 18.1048, 39.2104, 0.91 ) }
    dend_39 { pt3dadd( 62.3718, 18.6795, 39.6727, 0.23 ) }
    dend_39 { pt3dadd( 63.0943, 19.334, 40.1165, 1.14 ) }
    dend_39 { pt3dadd( 64.3573, 20.5582, 40.8638, 0.23 ) }
    dend_39 { pt3dadd( 65.3162, 21.5189, 41.4541, 1.14 ) }
    dend_39 { pt3dadd( 66.6455, 22.9474, 42.3499, 0.23 ) }
    dend_39 { pt3dadd( 67.4731, 23.8762, 42.9223, 0.91 ) }
    dend_39 { pt3dadd( 68.5805, 25.1613, 43.7396, 0.23 ) }
    dend_39 { pt3dadd( 69.1659, 25.8008, 44.1694, 0.23 ) }
    dend_39 { pt3dadd( 70.2785, 26.9019, 44.9771, 1.14 ) }
    dend_39 { pt3dadd( 71.7076, 28.0337, 45.9784, 0.23 ) }
    dend_39 { pt3dadd( 72.0393, 28.2233, 46.2208, 0.68 ) }
    dend_39 { pt3dadd( 73.0278, 28.6084, 47.0908, 0.23 ) }
    dend_39 { pt3dadd( 73.9325, 28.7649, 48.0601, 0.91 ) }
    dend_39 { pt3dadd( 74.7363, 28.6846, 49.2565, 0.23 ) }
    dend_39 { pt3dadd( 75.6126, 28.1042, 51.1887, 0.91 ) }
    dend_39 { pt3dadd( 76.1711, 27.413, 52.8678, 0.23 ) }
    dend_39 { pt3dadd( 76.5881, 26.6156, 54.677, 0.23 ) }
    dend_39 { pt3dadd( 76.706, 26.0267, 55.9307, 1.14 ) }
    dend_39 { pt3dadd( 76.6534, 25.4915, 57.1105, 0.45 ) }
    dend_39 { pt3dadd( 76.3967, 24.8211, 58.6281, 0.45 ) }
    dend_39 { pt3dadd( 76.1748, 24.5148, 59.5981, 0.91 ) }
    dend_39 { pt3dadd( 76.0615, 24.3892, 60.1888, 0.91 ) }
    dend_39 { pt3dadd( 75.8631, 24.1523, 62.1467, 1.14 ) }
    dend_39 { pt3dadd( 75.8061, 24.1433, 63.2993, 0.23 ) }
    dend_39 { pt3dadd( 75.7696, 24.2123, 64.037, 1.14 ) }
    dend_39 { pt3dadd( 75.7555, 24.8084, 67.1694, 0.23 ) }
    dend_39 { pt3dadd( 75.8168, 24.9718, 67.7508, 0.23 ) }
    dend_39 { pt3dadd( 76.0021, 25.2689, 68.472, 0.91 ) }
    dend_39 { pt3dadd( 76.5686, 26.0859, 69.8445, 0.23 ) }
    dend_39 { pt3dadd( 76.8971, 26.546, 70.4449, 0.23 ) }
    dend_39 { pt3dadd( 77.3508, 27.2246, 71.1524, 0.23 ) }
    dend_39 { pt3dadd( 78.0222, 28.3579, 72.0333, 0.91 ) }
    dend_39 { pt3dadd( 78.3814, 28.9584, 72.4593, 0.23 ) }
    dend_39 { pt3dadd( 78.7144, 29.4432, 72.795, 0.68 ) }
    dend_39 { pt3dadd( 79.571, 30.4792, 73.4747, 0.23 ) }
    dend_39 { pt3dadd( 80.6575, 31.5798, 74.2271, 0.23 ) }
    dend_39 { pt3dadd( 81.0732, 31.9721, 74.4853, 0.23 ) }
    dend_39 { pt3dadd( 81.9116, 32.7098, 74.918, 0.91 ) }
    dend_39 { pt3dadd( 83.3983, 33.9533, 75.5978, 0.23 ) }
    dend_39 { pt3dadd( 83.9553, 34.4207, 75.8231, 0.23 ) }
    dend_39 { pt3dadd( 85.5495, 35.7701, 76.46, 0.68 ) }
    dend_39 { pt3dadd( 86.2384, 36.3445, 76.7211, 0.23 ) }
    dend_39 { pt3dadd( 86.997, 37.0001, 77.021, 0.68 ) }
    dend_39 { pt3dadd( 87.5344, 37.4903, 77.2397, 0.23 ) }
    dend_39 { pt3dadd( 88.5711, 38.5555, 77.6325, 0.91 ) }
    dend_39 { pt3dadd( 89.5594, 39.6949, 78.047, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 82/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -37.059, 1.55484, -23.0252, 0.23 ) }
    dend_37 { pt3dadd( -46.6056, 2.044, -27.5609, 0.23 ) }
    dend_37 { pt3dadd( -55.5628, 2.87836, -33.134, 0.23 ) }
    dend_37 { pt3dadd( -63.9144, 3.84086, -39.5624, 0.23 ) }
    dend_37 { pt3dadd( -71.6331, 3.92752, -46.7966, 0.23 ) }
    dend_37 { pt3dadd( -78.9489, 2.39901, -54.3011, 0.23 ) }
    dend_37 { pt3dadd( -84.8937, 1.86899, -63.0391, 0.23 ) }
    dend_37 { pt3dadd( -90.0522, -0.00290911, -72.107, 0.23 ) }
    dend_37 { pt3dadd( -96.7841, 0.0140425, -80.2681, 0.23 ) }
    dend_37 { pt3dadd( -102.549, 1.47779, -89.0246, 0.23 ) }
    dend_37 { pt3dadd( -108.803, 3.63613, -97.3017, 0.23 ) }
    dend_37 { pt3dadd( -115.181, 3.74633, -105.742, 0.23 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -37.059, 1.55484, -23.0252, 0.23 ) }
    dend_36 { pt3dadd( -44.2394, 2.79017, -27.1039, 0.23 ) }
    dend_36 { pt3dadd( -51.0193, 4.00743, -31.8209, 0.23 ) }
    dend_36 { pt3dadd( -56.5998, 5.96999, -37.7258, 0.23 ) }
    dend_36 { pt3dadd( -62.5525, 8.12259, -43.1919, 0.23 ) }
    dend_36 { pt3dadd( -68.3778, 10.8992, -48.5373, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( -73.6836, 14.4973, -53.9742, 0.23 ) }
    dend_36 { pt3dadd( -79.3834, 16.9036, -59.6096, 0.23 ) }
    dend_36 { pt3dadd( -84.3591, 20.6315, -65.2721, 0.23 ) }
    dend_36 { pt3dadd( -89.368, 24.4459, -70.8528, 0.23 ) }
    dend_36 { pt3dadd( -92.8184, 29.2416, -76.8962, 0.23 ) }
    dend_36 { pt3dadd( -96.7184, 34.0342, -82.6654, 0.23 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 6/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.33153, -8.78037, -7.18696, 0.23 ) }
    dend_34 { pt3dadd( -1.59777, -12.0427, -6.83329, 0.23 ) }
    dend_34 { pt3dadd( -1.66088, -14.5727, -6.74055, 0.91 ) }
    dend_34 { pt3dadd( -1.60766, -16.8901, -6.75578, 0.91 ) }
    dend_34 { pt3dadd( -1.4641, -19.6272, -6.88212, 0.23 ) }
    dend_34 { pt3dadd( -1.28139, -22.0856, -7.04725, 0.91 ) }
    dend_34 { pt3dadd( -1.04492, -25.3411, -7.30545, 0.23 ) }
    dend_34 { pt3dadd( -0.846127, -27.0235, -7.51667, 1.14 ) }
    dend_34 { pt3dadd( -0.542304, -30.2687, -8.04526, 0.23 ) }
    dend_34 { pt3dadd( -0.459301, -31.7423, -8.30973, 1.14 ) }
    dend_34 { pt3dadd( -0.499642, -34.2576, -8.72461, 0.23 ) }
    dend_34 { pt3dadd( -0.626999, -35.6979, -8.90273, 0.23 ) }
    dend_34 { pt3dadd( -0.872207, -37.4169, -9.0581, 0.91 ) }
    dend_34 { pt3dadd( -1.46943, -40.638, -9.25514, 0.23 ) }
    dend_34 { pt3dadd( -1.74782, -41.9909, -9.29326, 0.23 ) }
    dend_34 { pt3dadd( -2.28611, -44.341, -9.34356, 0.91 ) }
    dend_34 { pt3dadd( -2.87832, -46.6782, -9.41149, 0.45 ) }
    dend_34 { pt3dadd( -3.54261, -49.3457, -9.45929, 0.45 ) }
    dend_34 { pt3dadd( -3.89421, -50.8252, -9.4559, 0.91 ) }
    dend_34 { pt3dadd( -4.65041, -54.2101, -9.38123, 0.23 ) }
    dend_34 { pt3dadd( -5.24245, -56.893, -9.34737, 0.23 ) }
    dend_34 { pt3dadd( -5.76204, -59.3687, -9.35457, 0.23 ) }
    dend_34 { pt3dadd( -6.20518, -61.8862, -9.37884, 0.91 ) }
    dend_34 { pt3dadd( -6.59486, -64.4211, -9.36186, 0.23 ) }
    dend_34 { pt3dadd( -6.82274, -66.1378, -9.32587, 1.14 ) }
    dend_34 { pt3dadd( -7.1647, -68.7397, -9.20059, 0.23 ) }
    dend_34 { pt3dadd( -7.32249, -70.2427, -9.1191, 0.68 ) }
    dend_34 { pt3dadd( -7.60358, -73.7218, -8.95809, 0.23 ) }
    dend_34 { pt3dadd( -7.84405, -77.0614, -8.88131, 0.23 ) }
    dend_34 { pt3dadd( -7.98353, -78.7598, -8.87777, 0.23 ) }
    dend_34 { pt3dadd( -8.25159, -81.5919, -8.89375, 0.45 ) }
    dend_34 { pt3dadd( -8.55953, -84.2063, -8.92624, 0.45 ) }
    dend_34 { pt3dadd( -8.82683, -86.1135, -8.99886, 0.45 ) }
    dend_34 { pt3dadd( -9.15748, -88.2414, -9.14479, 0.45 ) }
    dend_34 { pt3dadd( -9.45167, -90.284, -9.32351, 0.68 ) }
    dend_34 { pt3dadd( -9.68986, -91.7266, -9.43736, 0.23 ) }
    dend_34 { pt3dadd( -10.0161, -93.4018, -9.5481, 0.68 ) }
    dend_34 { pt3dadd( -10.5767, -95.4661, -9.63317, 0.23 ) }
    dend_34 { pt3dadd( -11.3237, -97.8538, -9.71854, 0.45 ) }
    dend_34 { pt3dadd( -11.8162, -99.5141, -9.78655, 0.45 ) }
    dend_34 { pt3dadd( -12.318, -101.383, -9.87144, 0.45 ) }
    dend_34 { pt3dadd( -12.7727, -103.119, -9.9751, 0.45 ) }
    dend_34 { pt3dadd( -13.3103, -105.154, -10.1304, 0.23 ) }
    dend_34 { pt3dadd( -13.8533, -107.151, -10.317, 1.82 ) }
    dend_34 { pt3dadd( -14.8679, -111.002, -10.7518, 0.45 ) }
    dend_34 { pt3dadd( -15.2517, -112.666, -10.94, 0.45 ) }
    dend_34 { pt3dadd( -15.4991, -114.025, -11.0871, 0.45 ) }
    dend_34 { pt3dadd( -15.9743, -117.067, -11.4314, 0.23 ) }
    dend_34 { pt3dadd( -17.8126, -128.847, -12.5751, 0.23 ) }
    dend_34 { pt3dadd( -20.744, -140.334, -14.2825, 0.23 ) }
    dend_34 { pt3dadd( -24.0073, -151.293, -17.7149, 0.23 ) }
    dend_34 { pt3dadd( -29.3062, -161.539, -20.7273, 0.23 ) }
    dend_34 { pt3dadd( -33.4482, -171.985, -24.6862, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 59/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.33153, -8.78037, -7.18696, 0.91 ) }
    dend_31 { pt3dadd( -1.89131, -8.50802, -8.36507, 0.91 ) }
    dend_31 { pt3dadd( -2.58743, -8.44205, -9.74728, 1.36 ) }
    dend_31 { pt3dadd( -3.11178, -8.56793, -10.818, 0.91 ) }
    dend_31 { pt3dadd( -3.82919, -9.17358, -12.5081, 1.14 ) }
    dend_31 { pt3dadd( -4.51463, -10.2212, -14.1886, 1.14 ) }
    dend_31 { pt3dadd( -5.11168, -11.3649, -15.6323, 1.14 ) }
    dend_31 { pt3dadd( -5.33689, -12.0899, -16.1973, 1.36 ) }
    dend_31 { pt3dadd( -5.63689, -13.5117, -16.9826, 0.23 ) }
    dend_31 { pt3dadd( -5.80035, -15.025, -17.6547, 0.23 ) }
    dend_31 { pt3dadd( -5.89781, -16.4691, -18.1822, 0.45 ) }
    dend_31 { pt3dadd( -5.89241, -17.7201, -18.5889, 0.91 ) }
    dend_31 { pt3dadd( -5.85707, -19.587, -19.206, 0.23 ) }
    dend_31 { pt3dadd( -5.86264, -20.5803, -19.5889, 0.23 ) }
    dend_31 { pt3dadd( -6.00368, -21.9125, -20.2031, 0.23 ) }
    dend_31 { pt3dadd( -6.87713, -27.9397, -25.7519, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 75/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 14.3507, -18.8003, -2.83144, 0.68 ) }
    dend_29 { pt3dadd( 14.9884, -20.5797, -2.7456, 0.68 ) }
    dend_29 { pt3dadd( 15.5796, -22.1326, -2.63249, 0.91 ) }
    dend_29 { pt3dadd( 16.3154, -23.8798, -2.49258, 0.91 ) }
    dend_29 { pt3dadd( 17.334, -26.0472, -2.30796, 1.36 ) }
    dend_29 { pt3dadd( 18.4689, -28.4175, -2.1437, 0.45 ) }
    dend_29 { pt3dadd( 19.4794, -30.651, -2.01791, 1.14 ) }
    dend_29 { pt3dadd( 20.5837, -33.283, -1.87378, 0.68 ) }
    dend_29 { pt3dadd( 21.8379, -36.4769, -1.75619, 0.68 ) }
    dend_29 { pt3dadd( 22.9891, -39.6086, -1.77846, 0.68 ) }
    dend_29 { pt3dadd( 23.8169, -42.0792, -1.91586, 1.14 ) }
    dend_29 { pt3dadd( 24.6607, -44.7459, -2.19002, 0.68 ) }
    dend_29 { pt3dadd( 25.2636, -46.5661, -2.45612, 0.45 ) }
    dend_29 { pt3dadd( 25.914, -48.4198, -2.76763, 0.45 ) }
    dend_29 { pt3dadd( 26.7691, -50.5233, -3.11306, 0.68 ) }
    dend_29 { pt3dadd( 27.9711, -52.9364, -3.45984, 0.68 ) }
    dend_29 { pt3dadd( 28.5407, -53.7883, -3.53576, 0.68 ) }
    dend_29 { pt3dadd( 29.8584, -55.4645, -3.57636, 0.68 ) }
    dend_29 { pt3dadd( 31.4173, -57.4071, -3.48705, 0.45 ) }
    dend_29 { pt3dadd( 33.5339, -60.1451, -3.18777, 0.45 ) }
    dend_29 { pt3dadd( 34.6994, -61.8185, -2.93566, 0.91 ) }
    dend_29 { pt3dadd( 36.386, -64.5196, -2.49232, 0.45 ) }
    dend_29 { pt3dadd( 37.6415, -66.6841, -2.15957, 0.91 ) }
    dend_29 { pt3dadd( 38.8741, -69.0578, -1.842, 0.91 ) }
    dend_29 { pt3dadd( 39.5492, -70.5397, -1.68521, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 40.5515, -73.0638, -1.45632, 0.68 ) }
    dend_29 { pt3dadd( 41.4069, -75.5591, -1.25556, 0.91 ) }
    dend_29 { pt3dadd( 42.2692, -78.6411, -1.05677, 0.23 ) }
    dend_29 { pt3dadd( 42.7683, -80.5505, -0.962123, 0.45 ) }
    dend_29 { pt3dadd( 43.4266, -83.072, -0.863537, 0.45 ) }
    dend_29 { pt3dadd( 43.9563, -85.2721, -0.752389, 0.45 ) }
    dend_29 { pt3dadd( 44.1495, -86.3378, -0.677225, 0.45 ) }
    dend_29 { pt3dadd( 44.4455, -88.4995, -0.522994, 0.45 ) }
    dend_29 { pt3dadd( 44.7672, -91.5849, -0.294257, 0.91 ) }
    dend_29 { pt3dadd( 44.9558, -93.538, -0.12718, 0.23 ) }
    dend_29 { pt3dadd( 45.1988, -96.2969, 0.148368, 0.91 ) }
    dend_29 { pt3dadd( 45.4821, -100.44, 0.605816, 0.91 ) }
    dend_29 { pt3dadd( 45.5589, -102.854, 0.913223, 0.45 ) }
    dend_29 { pt3dadd( 45.5308, -103.91, 1.06064, 0.45 ) }
    dend_29 { pt3dadd( 45.3682, -105.501, 1.33052, 0.45 ) }
    dend_29 { pt3dadd( 44.9988, -107.765, 1.78554, 0.45 ) }
    dend_29 { pt3dadd( 44.4588, -110.344, 2.36689, 0.45 ) }
    dend_29 { pt3dadd( 43.9042, -112.486, 2.93007, 0.23 ) }
    dend_29 { pt3dadd( 43.4504, -114.079, 3.38006, 0.91 ) }
    dend_29 { pt3dadd( 42.9507, -115.989, 3.90373, 0.23 ) }
    dend_29 { pt3dadd( 42.6527, -117.214, 4.21494, 0.68 ) }
    dend_29 { pt3dadd( 42.2651, -118.867, 4.61161, 0.68 ) }
    dend_29 { pt3dadd( 41.8978, -120.743, 5.03443, 0.68 ) }
    dend_29 { pt3dadd( 41.6385, -122.887, 5.46537, 0.23 ) }
    dend_29 { pt3dadd( 41.5875, -124.321, 5.72775, 0.68 ) }
    dend_29 { pt3dadd( 41.6355, -125.987, 5.98067, 0.23 ) }
    dend_29 { pt3dadd( 41.7925, -127.613, 6.20168, 0.68 ) }
    dend_29 { pt3dadd( 42.1773, -130.288, 6.50534, 0.23 ) }
    dend_29 { pt3dadd( 42.3381, -131.295, 6.60272, 0.23 ) }
    dend_29 { pt3dadd( 42.5713, -132.934, 6.75918, 0.91 ) }
    dend_29 { pt3dadd( 42.892, -135.63, 7.03467, 0.45 ) }
    dend_29 { pt3dadd( 43.2773, -138.901, 7.39318, 0.45 ) }
    dend_29 { pt3dadd( 43.4741, -140.655, 7.59828, 0.91 ) }
    dend_29 { pt3dadd( 43.5703, -141.828, 7.75672, 0.23 ) }
    dend_29 { pt3dadd( 43.64, -143.294, 7.97584, 0.91 ) }
    dend_29 { pt3dadd( 43.6804, -144.221, 8.12226, 0.45 ) }
    dend_29 { pt3dadd( 43.7472, -145.472, 8.33901, 0.91 ) }
    dend_29 { pt3dadd( 43.8868, -147.117, 8.63726, 0.23 ) }
    dend_29 { pt3dadd( 44.3013, -149.855, 9.13988, 0.68 ) }
    dend_29 { pt3dadd( 44.6807, -151.472, 9.39674, 0.23 ) }
    dend_29 { pt3dadd( 45.1626, -153.086, 9.54361, 0.68 ) }
    dend_29 { pt3dadd( 45.436, -153.872, 9.56887, 0.68 ) }
    dend_29 { pt3dadd( 46.1063, -155.584, 9.55569, 0.23 ) }
    dend_29 { pt3dadd( 47.0507, -157.652, 9.40871, 1.14 ) }
    dend_29 { pt3dadd( 48.3057, -160.059, 9.10775, 0.23 ) }
    dend_29 { pt3dadd( 49.493, -162.263, 8.76216, 0.23 ) }
    dend_29 { pt3dadd( 50.5162, -164.2, 8.42702, 0.23 ) }
    dend_29 { pt3dadd( 51.0489, -165.199, 8.24323, 0.91 ) }
    dend_29 { pt3dadd( 51.9864, -166.941, 7.91947, 1.36 ) }
    dend_29 { pt3dadd( 53.0387, -168.885, 7.57627, 0.23 ) }
    dend_29 { pt3dadd( 53.9849, -170.607, 7.35157, 0.68 ) }
    dend_29 { pt3dadd( 54.6342, -171.799, 7.27728, 0.23 ) }
    dend_29 { pt3dadd( 55.3438, -173.138, 7.23541, 0.45 ) }
    dend_29 { pt3dadd( 56.3965, -175.303, 7.17689, 0.23 ) }
    dend_29 { pt3dadd( 56.9457, -176.613, 7.1677, 0.23 ) }
    dend_29 { pt3dadd( 57.4923, -178.272, 7.18227, 0.68 ) }
    dend_29 { pt3dadd( 57.7277, -179.357, 7.20237, 0.23 ) }
    dend_29 { pt3dadd( 57.9631, -180.74, 7.22531, 0.91 ) }
    dend_29 { pt3dadd( 58.2854, -183.914, 7.27787, 0.23 ) }
    dend_29 { pt3dadd( 58.3509, -185.866, 7.30107, 0.23 ) }
    dend_29 { pt3dadd( 58.3044, -188.341, 7.31768, 0.23 ) }
    dend_29 { pt3dadd( 58.1254, -190.607, 7.32162, 0.23 ) }
    dend_29 { pt3dadd( 61.3617, -199.481, 7.91512, 0.23 ) }
    dend_29 { pt3dadd( 64.7334, -208.294, 8.59711, 0.23 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 14.3507, -18.8003, -2.83144, 0.68 ) }
    dend_28 { pt3dadd( 15.3411, -19.7614, -2.52636, 0.68 ) }
    dend_28 { pt3dadd( 17.1256, -21.6823, -1.91842, 0.68 ) }
    dend_28 { pt3dadd( 19.2196, -24.3388, -1.2111, 0.68 ) }
    dend_28 { pt3dadd( 20.8126, -26.5512, -0.725989, 0.68 ) }
    dend_28 { pt3dadd( 22.3745, -28.717, -0.358523, 0.91 ) }
    dend_28 { pt3dadd( 24.2676, -31.2796, 0.00484389, 0.68 ) }
    dend_28 { pt3dadd( 26.093, -33.7859, 0.323762, 1.14 ) }
    dend_28 { pt3dadd( 28.4832, -36.9657, 0.709663, 1.14 ) }
    dend_28 { pt3dadd( 31.1398, -40.289, 1.11386, 0.45 ) }
    dend_28 { pt3dadd( 33.0419, -42.5586, 1.43308, 0.68 ) }
    dend_28 { pt3dadd( 34.3686, -44.0814, 1.66896, 1.14 ) }
    dend_28 { pt3dadd( 36.5593, -46.547, 2.05698, 0.23 ) }
    dend_28 { pt3dadd( 38.6176, -48.7422, 2.46615, 1.14 ) }
    dend_28 { pt3dadd( 40.4585, -50.5243, 2.87326, 0.45 ) }
    dend_28 { pt3dadd( 42.8831, -52.8709, 3.46721, 0.45 ) }
    dend_28 { pt3dadd( 44.863, -54.8559, 3.98965, 0.45 ) }
    dend_28 { pt3dadd( 47.0522, -57.1362, 4.53608, 0.45 ) }
    dend_28 { pt3dadd( 49.0372, -59.2348, 4.96334, 1.36 ) }
    dend_28 { pt3dadd( 51.31, -61.6101, 5.43873, 0.68 ) }
    dend_28 { pt3dadd( 53.0323, -63.354, 5.69659, 0.23 ) }
    dend_28 { pt3dadd( 54.0294, -64.3793, 5.76898, 1.14 ) }
    dend_28 { pt3dadd( 55.9475, -66.6353, 5.73975, 0.23 ) }
    dend_28 { pt3dadd( 56.9874, -68.0792, 5.631, 1.14 ) }
    dend_28 { pt3dadd( 57.6694, -69.2588, 5.45976, 1.14 ) }
    dend_28 { pt3dadd( 59.0065, -72.0596, 4.89462, 0.23 ) }
    dend_28 { pt3dadd( 59.918, -74.102, 4.39198, 0.23 ) }
    dend_28 { pt3dadd( 60.8031, -76.1888, 3.81959, 1.36 ) }
    dend_28 { pt3dadd( 61.1596, -77.0204, 3.5784, 1.36 ) }
    dend_28 { pt3dadd( 62.0725, -79.1887, 3.01062, 0.23 ) }
    dend_28 { pt3dadd( 62.4956, -80.2129, 2.77877, 0.68 ) }
    dend_28 { pt3dadd( 63.1927, -81.7167, 2.48406, 0.23 ) }
    dend_28 { pt3dadd( 63.9146, -83.2658, 2.16424, 1.36 ) }
    dend_28 { pt3dadd( 65.0397, -85.8156, 1.6211, 0.45 ) }
    dend_28 { pt3dadd( 66.4511, -89.1524, 0.889354, 1.36 ) }
    dend_28 { pt3dadd( 68.0082, -92.8377, 0.046883, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_28 { pt3dadd( 69.0246, -95.1462, -0.525488, 1.36 ) }
    dend_28 { pt3dadd( 69.9117, -97.1012, -1.02283, 0.23 ) }
    dend_28 { pt3dadd( 70.6957, -98.6963, -1.45621, 1.14 ) }
    dend_28 { pt3dadd( 71.8197, -100.811, -2.10087, 0.23 ) }
    dend_28 { pt3dadd( 72.6421, -102.194, -2.57482, 1.14 ) }
    dend_28 { pt3dadd( 74.016, -104.335, -3.38129, 0.23 ) }
    dend_28 { pt3dadd( 75.4756, -106.543, -4.2128, 0.68 ) }
    dend_28 { pt3dadd( 76.8691, -108.61, -4.9441, 0.91 ) }
    dend_28 { pt3dadd( 78.5727, -111.295, -5.80336, 0.23 ) }
    dend_28 { pt3dadd( 79.7932, -113.368, -6.40561, 1.14 ) }
    dend_28 { pt3dadd( 81.1862, -115.801, -7.03681, 0.23 ) }
    dend_28 { pt3dadd( 82.525, -118.163, -7.59775, 0.68 ) }
    dend_28 { pt3dadd( 84.2864, -121.38, -8.31151, 0.68 ) }
    dend_28 { pt3dadd( 86.1295, -125.035, -9.03374, 0.68 ) }
    dend_28 { pt3dadd( 87.1504, -127.196, -9.42318, 0.68 ) }
    dend_28 { pt3dadd( 87.8701, -128.777, -9.69702, 0.45 ) }
    dend_28 { pt3dadd( 89.2746, -132.009, -10.249, 0.45 ) }
    dend_28 { pt3dadd( 90.6815, -135.381, -10.8922, 0.45 ) }
    dend_28 { pt3dadd( 91.9418, -138.394, -11.547, 0.45 ) }
    dend_28 { pt3dadd( 92.5973, -140.052, -11.9448, 0.23 ) }
    dend_28 { pt3dadd( 92.9585, -141.116, -12.1952, 0.23 ) }
    dend_28 { pt3dadd( 99.414, -151.748, -14.5772, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 22/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -187.301, 53.7789, -83.4102, 0.68 ) }
    dend_26 { pt3dadd( -193.892, 57.4967, -91.4832, 0.68 ) }
    dend_26 { pt3dadd( -201.501, 60.7601, -98.7796, 0.68 ) }
    dend_26 { pt3dadd( -208.573, 65.0203, -106.166, 0.68 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 26/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -187.301, 53.7789, -83.4102, 0.68 ) }
    dend_25 { pt3dadd( -197.612, 51.6409, -85.2435, 0.68 ) }
    dend_25 { pt3dadd( -207.088, 48.8343, -89.3524, 0.68 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 29/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 7.05433, -13.2232, 6.72672, 1.36 ) }
    dend_21 { pt3dadd( 6.31309, -13.797, 8.22948, 1.36 ) }
    dend_21 { pt3dadd( 5.73154, -14.077, 9.33057, 1.36 ) }
    dend_21 { pt3dadd( 5.2314, -14.3203, 10.28, 1.36 ) }
    dend_21 { pt3dadd( 4.74761, -14.5557, 11.1984, 1.36 ) }
    dend_21 { pt3dadd( 4.07107, -14.8848, 12.4827, 1.82 ) }
    dend_21 { pt3dadd( 3.15663, -15.3296, 14.2185, 1.36 ) }
    dend_21 { pt3dadd( 2.5112, -15.4133, 15.078, 1.59 ) }
    dend_21 { pt3dadd( 2.03999, -15.3913, 15.5992, 1.59 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 38/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.05433, -13.2232, 6.72672, 1.36 ) }
    dend_14 { pt3dadd( 8.79573, -16.3331, 6.80895, 1.36 ) }
    dend_14 { pt3dadd( 10.104, -18.6695, 6.87073, 1.59 ) }
    dend_14 { pt3dadd( 10.8691, -20.0359, 6.90686, 1.59 ) }
    dend_14 { pt3dadd( 12.0796, -22.1976, 6.96402, 2.05 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 43/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -15.204, -1.56577, 2.56319, 1.36 ) }
    dend_4 { pt3dadd( -16.2431, 1.20957, 2.69425, 1.36 ) }
    dend_4 { pt3dadd( -17.6803, 4.96196, 2.87268, 1.14 ) }
    dend_4 { pt3dadd( -18.7715, 7.63555, 2.97069, 1.14 ) }
    dend_4 { pt3dadd( -20.1356, 10.6956, 3.12088, 0.91 ) }
    dend_4 { pt3dadd( -21.5979, 13.7079, 3.33382, 0.91 ) }
    dend_4 { pt3dadd( -22.7288, 16.0373, 3.49849, 1.36 ) }
    dend_4 { pt3dadd( -23.8067, 18.2618, 3.66555, 1.36 ) }
    dend_4 { pt3dadd( -25.6752, 21.9545, 3.96792, 0.91 ) }
    dend_4 { pt3dadd( -27.2052, 24.5634, 4.22228, 0.91 ) }
    dend_4 { pt3dadd( -28.5162, 26.4356, 4.43823, 1.59 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -15.204, -1.56577, 2.56319, 1.14 ) }
    dend_1 { pt3dadd( -16.0798, -3.32505, 2.43854, 1.14 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 35.6441, 12.6865, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 49.7765, 17.7139, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 63.909, 22.7413, 0.0, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 59/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 9.65435, 7.01906, 5.19126, 0.68 ) }
    dend_46 { pt3dadd( 13.0597, 8.66343, 4.21619, 0.68 ) }
    dend_46 { pt3dadd( 15.1528, 9.6742, 3.61683, 1.14 ) }
    dend_46 { pt3dadd( 17.9759, 11.0374, 2.80846, 2.05 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 9.65435, 7.01906, 5.19126, 1.36 ) }
    dend_41 { pt3dadd( 10.5818, 8.48546, 5.68503, 1.36 ) }
    dend_41 { pt3dadd( 11.2824, 9.59308, 6.058, 1.36 ) }
    dend_41 { pt3dadd( 12.057, 10.8179, 6.47045, 2.05 ) }
    dend_41 { pt3dadd( 12.8161, 12.0181, 6.87457, 0.91 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -6.87713, -27.9397, -25.7519, 0.23 ) }
    dend_33 { pt3dadd( -9.18993, -35.2766, -35.726, 0.23 ) }
    dend_33 { pt3dadd( -10.7795, -43.8375, -44.9271, 0.23 ) }
    dend_33 { pt3dadd( -11.3167, -52.5282, -54.1385, 0.23 ) }
    dend_33 { pt3dadd( -13.7463, -59.9324, -64.0395, 0.23 ) }
    dend_33 { pt3dadd( -16.1301, -65.0156, -75.1964, 0.23 ) }
    dend_33 { pt3dadd( -17.3691, -71.6449, -85.7902, 0.23 ) }
    dend_33 { pt3dadd( -16.4482, -78.1454, -96.4863, 0.23 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 76/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -6.87713, -27.9397, -25.7519, 0.23 ) }
    dend_32 { pt3dadd( -10.3072, -36.4044, -29.0183, 0.23 ) }
    dend_32 { pt3dadd( -14.0398, -45.2262, -30.7715, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 79/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 2.03999, -15.3913, 15.5992, 1.14 ) }
    dend_23 { pt3dadd( 2.54093, -16.4739, 16.2612, 1.14 ) }
    dend_23 { pt3dadd( 3.75575, -19.9948, 18.6074, 0.68 ) }
    dend_23 { pt3dadd( 4.29537, -22.1877, 20.1395, 0.68 ) }
    dend_23 { pt3dadd( 5.07709, -25.1474, 22.3126, 0.68 ) }
    dend_23 { pt3dadd( 6.14652, -28.6378, 24.877, 0.68 ) }
    dend_23 { pt3dadd( 7.15854, -31.5364, 27.0232, 0.45 ) }
    dend_23 { pt3dadd( 7.54359, -32.9722, 28.0195, 0.45 ) }
    dend_23 { pt3dadd( 7.85548, -34.4799, 28.9282, 0.45 ) }
    dend_23 { pt3dadd( 8.61153, -37.0175, 30.6304, 0.68 ) }
    dend_23 { pt3dadd( 9.25679, -38.1515, 31.5975, 1.14 ) }
    dend_23 { pt3dadd( 10.9435, -39.881, 33.332, 0.23 ) }
    dend_23 { pt3dadd( 12.2912, -40.8794, 34.3651, 0.23 ) }
    dend_23 { pt3dadd( 14.7154, -42.0452, 36.1147, 0.91 ) }
    dend_23 { pt3dadd( 17.2046, -42.7168, 37.9263, 0.23 ) }
    dend_23 { pt3dadd( 19.065, -43.0406, 39.46, 0.68 ) }
    dend_23 { pt3dadd( 20.9459, -43.2333, 41.217, 0.23 ) }
    dend_23 { pt3dadd( 22.0015, -43.2119, 42.2927, 1.82 ) }
    dend_23 { pt3dadd( 24.5561, -43.0019, 44.9674, 0.23 ) }
    dend_23 { pt3dadd( 26.6333, -42.8369, 47.1603, 1.82 ) }
    dend_23 { pt3dadd( 28.981, -43.0432, 49.4774, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_23 { pt3dadd( 30.3279, -43.4463, 50.6645, 0.23 ) }
    dend_23 { pt3dadd( 31.7018, -44.1692, 51.8211, 0.23 ) }
    dend_23 { pt3dadd( 33.035, -45.0241, 52.8148, 0.23 ) }
    dend_23 { pt3dadd( 34.2962, -45.9418, 53.5934, 0.23 ) }
    dend_23 { pt3dadd( 36.3777, -47.5793, 54.8545, 0.68 ) }
    dend_23 { pt3dadd( 38.7771, -49.5172, 56.3524, 2.05 ) }
    dend_23 { pt3dadd( 42.0212, -52.1516, 58.3399, 0.45 ) }
    dend_23 { pt3dadd( 44.4306, -54.1129, 59.8295, 0.23 ) }
    dend_23 { pt3dadd( 46.4246, -55.6596, 61.1297, 0.23 ) }
    dend_23 { pt3dadd( 48.6577, -57.3276, 62.6166, 1.14 ) }
    dend_23 { pt3dadd( 50.0679, -58.3689, 63.5868, 0.23 ) }
    dend_23 { pt3dadd( 52.4281, -59.9131, 64.9849, 0.91 ) }
    dend_23 { pt3dadd( 55.043, -61.449, 66.2257, 0.23 ) }
    dend_23 { pt3dadd( 56.2564, -62.0851, 66.7611, 1.14 ) }
    dend_23 { pt3dadd( 59.6499, -63.6004, 68.2165, 0.23 ) }
    dend_23 { pt3dadd( 62.8333, -64.9633, 69.4717, 0.23 ) }
    dend_23 { pt3dadd( 64.8386, -65.8116, 70.2762, 2.05 ) }
    dend_23 { pt3dadd( 68.4051, -67.1867, 71.8979, 0.23 ) }
    dend_23 { pt3dadd( 71.3819, -68.3199, 73.3881, 1.59 ) }
    dend_23 { pt3dadd( 73.9571, -69.3415, 74.7231, 0.23 ) }
    dend_23 { pt3dadd( 75.7625, -70.0592, 75.7528, 0.23 ) }
    dend_23 { pt3dadd( 77.7281, -70.8801, 76.9508, 0.91 ) }
    dend_23 { pt3dadd( 80.0112, -71.9673, 78.4097, 0.23 ) }
    dend_23 { pt3dadd( 82.5977, -73.2036, 80.0773, 0.23 ) }
    dend_23 { pt3dadd( 84.3076, -74.0138, 81.2389, 1.59 ) }
    dend_23 { pt3dadd( 88.4653, -75.7999, 84.3116, 0.23 ) }
    dend_23 { pt3dadd( 90.3853, -76.63, 85.8427, 0.91 ) }
    dend_23 { pt3dadd( 92.2732, -77.5495, 87.4125, 0.23 ) }
    dend_23 { pt3dadd( 93.8091, -78.291, 88.6391, 1.14 ) }
    dend_23 { pt3dadd( 97.043, -79.6471, 91.0228, 0.23 ) }
    dend_23 { pt3dadd( 99.5102, -80.6457, 92.7618, 0.91 ) }
    dend_23 { pt3dadd( 101.825, -81.6184, 94.3312, 0.23 ) }
    dend_23 { pt3dadd( 103.675, -82.4764, 95.6471, 0.68 ) }
    dend_23 { pt3dadd( 107.184, -84.2119, 98.2078, 0.23 ) }
    dend_23 { pt3dadd( 109.276, -85.3796, 99.5882, 1.14 ) }
    dend_23 { pt3dadd( 111.366, -86.5243, 100.65, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 2.03999, -15.3913, 15.5992, 0.23 ) }
    dend_22 { pt3dadd( 0.141143, -16.3097, 15.3489, 0.23 ) }
    dend_22 { pt3dadd( -1.78586, -17.1898, 15.1604, 0.45 ) }
    dend_22 { pt3dadd( -3.50821, -17.9486, 15.1153, 0.23 ) }
    dend_22 { pt3dadd( -4.69956, -18.4432, 15.1479, 0.23 ) }
    dend_22 { pt3dadd( -6.64026, -19.2018, 15.3361, 0.68 ) }
    dend_22 { pt3dadd( -8.06384, -19.7411, 15.5257, 0.23 ) }
    dend_22 { pt3dadd( -9.65209, -20.2783, 15.845, 1.36 ) }
    dend_22 { pt3dadd( -12.1909, -21.1262, 16.4926, 0.45 ) }
    dend_22 { pt3dadd( -13.2105, -21.4759, 16.7668, 1.14 ) }
    dend_22 { pt3dadd( -14.9648, -22.1379, 17.237, 0.23 ) }
    dend_22 { pt3dadd( -16.1094, -22.5805, 17.5341, 1.14 ) }
    dend_22 { pt3dadd( -17.8487, -23.3978, 17.9351, 0.23 ) }
    dend_22 { pt3dadd( -19.2798, -24.2089, 18.1565, 0.23 ) }
    dend_22 { pt3dadd( -20.9735, -25.2943, 18.2548, 1.14 ) }
    dend_22 { pt3dadd( -22.1633, -26.1682, 18.2234, 0.23 ) }
    dend_22 { pt3dadd( -22.7968, -26.6779, 18.1605, 0.91 ) }
    dend_22 { pt3dadd( -24.5517, -28.1375, 17.9348, 0.23 ) }
    dend_22 { pt3dadd( -26.057, -29.3658, 17.6933, 0.91 ) }
    dend_22 { pt3dadd( -27.7337, -30.682, 17.3826, 0.23 ) }
    dend_22 { pt3dadd( -30.0531, -32.4441, 16.8918, 0.91 ) }
    dend_22 { pt3dadd( -30.9964, -33.1359, 16.6597, 0.23 ) }
    dend_22 { pt3dadd( -32.4994, -34.1967, 16.2454, 0.91 ) }
    dend_22 { pt3dadd( -34.3498, -35.4301, 15.6799, 0.23 ) }
    dend_22 { pt3dadd( -35.3401, -36.0759, 15.3646, 0.45 ) }
    dend_22 { pt3dadd( -36.7429, -36.9315, 14.8896, 0.23 ) }
    dend_22 { pt3dadd( -37.9348, -37.569, 14.491, 0.23 ) }
    dend_22 { pt3dadd( -39.5745, -38.3673, 13.9625, 0.91 ) }
    dend_22 { pt3dadd( -40.7035, -38.8642, 13.6117, 0.23 ) }
    dend_22 { pt3dadd( -42.0242, -39.4035, 13.2636, 0.68 ) }
    dend_22 { pt3dadd( -42.4733, -39.5733, 13.1843, 0.23 ) }
    dend_22 { pt3dadd( -43.8289, -40.0315, 13.0869, 0.68 ) }
    dend_22 { pt3dadd( -46.0103, -40.7962, 13.1192, 0.23 ) }
    dend_22 { pt3dadd( -46.7998, -41.1261, 13.1818, 0.91 ) }
    dend_22 { pt3dadd( -48.1352, -41.8115, 13.3517, 0.23 ) }
    dend_22 { pt3dadd( -49.8083, -42.8472, 13.6386, 0.68 ) }
    dend_22 { pt3dadd( -51.2933, -43.9068, 13.937, 0.23 ) }
    dend_22 { pt3dadd( -51.9081, -44.432, 14.0921, 0.91 ) }
    dend_22 { pt3dadd( -53.2886, -45.7691, 14.5205, 0.23 ) }
    dend_22 { pt3dadd( -54.0642, -46.5416, 14.7558, 0.91 ) }
    dend_22 { pt3dadd( -55.2238, -47.7666, 15.0949, 0.23 ) }
    dend_22 { pt3dadd( -55.9297, -48.5689, 15.2834, 0.91 ) }
    dend_22 { pt3dadd( -57.3856, -50.2563, 15.6462, 0.23 ) }
    dend_22 { pt3dadd( -58.0884, -51.0214, 15.8339, 0.23 ) }
    dend_22 { pt3dadd( -58.9497, -51.9034, 16.0686, 0.91 ) }
    dend_22 { pt3dadd( -60.1809, -53.0753, 16.374, 0.23 ) }
    dend_22 { pt3dadd( -61.0246, -53.8359, 16.5492, 0.68 ) }
    dend_22 { pt3dadd( -62.9304, -55.5476, 16.8269, 0.23 ) }
    dend_22 { pt3dadd( -63.6358, -56.1566, 16.8695, 0.68 ) }
    dend_22 { pt3dadd( -64.3751, -56.8074, 16.8521, 0.23 ) }
    dend_22 { pt3dadd( -65.5072, -57.7478, 16.7582, 0.91 ) }
    dend_22 { pt3dadd( -66.1561, -58.2311, 16.6414, 0.91 ) }
    dend_22 { pt3dadd( -67.4476, -59.157, 16.3179, 0.23 ) }
    dend_22 { pt3dadd( -68.5269, -59.9012, 15.9811, 0.45 ) }
    dend_22 { pt3dadd( -70.142, -60.9577, 15.4535, 0.23 ) }
    dend_22 { pt3dadd( -71.3511, -61.6874, 15.0643, 0.91 ) }
    dend_22 { pt3dadd( -72.603, -62.3769, 14.6867, 0.23 ) }
    dend_22 { pt3dadd( -73.9667, -63.0057, 14.3655, 0.45 ) }
    dend_22 { pt3dadd( -75.1081, -63.4288, 14.1587, 0.23 ) }
    dend_22 { pt3dadd( -75.734, -63.6447, 14.0758, 0.68 ) }
    dend_22 { pt3dadd( -76.9513, -64.0363, 13.9826, 0.23 ) }
    dend_22 { pt3dadd( -78.1386, -64.4051, 13.9546, 0.91 ) }
    dend_22 { pt3dadd( -80.204, -64.9752, 14.0048, 0.23 ) }
    dend_22 { pt3dadd( -80.8498, -65.1397, 14.0451, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -82.4617, -65.5566, 14.1797, 0.23 ) }
    dend_22 { pt3dadd( -84.0492, -65.98, 14.3434, 0.91 ) }
    dend_22 { pt3dadd( -85.0445, -66.2493, 14.4505, 0.23 ) }
    dend_22 { pt3dadd( -86.0619, -66.5226, 14.5472, 0.91 ) }
    dend_22 { pt3dadd( -88.4401, -67.1038, 14.7235, 0.23 ) }
    dend_22 { pt3dadd( -90.2476, -67.5182, 14.8307, 0.91 ) }
    dend_22 { pt3dadd( -92.3229, -67.968, 14.9675, 0.23 ) }
    dend_22 { pt3dadd( -94.5336, -68.4673, 15.1116, 0.23 ) }
    dend_22 { pt3dadd( -96.155, -68.857, 15.2028, 0.23 ) }
    dend_22 { pt3dadd( -97.5702, -69.1963, 15.2728, 0.23 ) }
    dend_22 { pt3dadd( -98.8746, -69.4779, 15.3023, 0.45 ) }
    dend_22 { pt3dadd( -100.537, -69.7831, 15.3531, 0.23 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 12.0796, -22.1976, 6.96402, 0.68 ) }
    dend_20 { pt3dadd( 13.3988, -21.9451, 6.7707, 0.68 ) }
    dend_20 { pt3dadd( 15.9867, -21.5858, 6.59106, 0.68 ) }
    dend_20 { pt3dadd( 17.7182, -21.4155, 6.54176, 0.45 ) }
    dend_20 { pt3dadd( 18.6993, -21.415, 6.56865, 0.68 ) }
    dend_20 { pt3dadd( 20.7974, -21.6013, 6.69656, 0.45 ) }
    dend_20 { pt3dadd( 22.4461, -21.8316, 6.82756, 0.91 ) }
    dend_20 { pt3dadd( 24.2957, -22.2388, 7.09277, 0.68 ) }
    dend_20 { pt3dadd( 25.4158, -22.585, 7.31285, 1.14 ) }
    dend_20 { pt3dadd( 27.8471, -23.5285, 7.84784, 0.23 ) }
    dend_20 { pt3dadd( 29.0722, -24.0955, 8.11968, 0.45 ) }
    dend_20 { pt3dadd( 29.9021, -24.5135, 8.29112, 0.23 ) }
    dend_20 { pt3dadd( 30.8181, -24.9828, 8.43685, 0.91 ) }
    dend_20 { pt3dadd( 32.3827, -25.7806, 8.59428, 0.23 ) }
    dend_20 { pt3dadd( 33.7278, -26.4351, 8.69831, 1.14 ) }
    dend_20 { pt3dadd( 36.0669, -27.5083, 8.84174, 0.45 ) }
    dend_20 { pt3dadd( 37.8588, -28.3456, 8.95433, 1.14 ) }
    dend_20 { pt3dadd( 41.0027, -29.8686, 9.17304, 0.23 ) }
    dend_20 { pt3dadd( 43.0567, -30.8682, 9.33097, 0.91 ) }
    dend_20 { pt3dadd( 45.1464, -31.8464, 9.51779, 0.23 ) }
    dend_20 { pt3dadd( 47.3894, -32.833, 9.74342, 0.91 ) }
    dend_20 { pt3dadd( 49.0961, -33.5283, 9.93842, 0.23 ) }
    dend_20 { pt3dadd( 50.5713, -34.0949, 10.1252, 0.91 ) }
    dend_20 { pt3dadd( 52.467, -34.6998, 10.3739, 0.23 ) }
    dend_20 { pt3dadd( 54.3921, -35.1698, 10.6047, 1.14 ) }
    dend_20 { pt3dadd( 55.3621, -35.3294, 10.6868, 0.23 ) }
    dend_20 { pt3dadd( 56.5465, -35.4305, 10.7422, 0.91 ) }
    dend_20 { pt3dadd( 57.984, -35.479, 10.762, 0.91 ) }
    dend_20 { pt3dadd( 60.09, -35.5455, 10.7238, 0.23 ) }
    dend_20 { pt3dadd( 62.0453, -35.6483, 10.6478, 0.68 ) }
    dend_20 { pt3dadd( 63.7535, -35.8168, 10.5971, 0.23 ) }
    dend_20 { pt3dadd( 64.67, -35.9584, 10.5809, 0.68 ) }
    dend_20 { pt3dadd( 66.378, -36.2978, 10.5708, 0.23 ) }
    dend_20 { pt3dadd( 68.9208, -36.9496, 10.5846, 0.23 ) }
    dend_20 { pt3dadd( 70.8865, -37.5839, 10.6288, 1.82 ) }
    dend_20 { pt3dadd( 73.6059, -38.6154, 10.7276, 0.23 ) }
    dend_20 { pt3dadd( 74.6487, -39.0578, 10.7742, 0.91 ) }
    dend_20 { pt3dadd( 75.9291, -39.6491, 10.8108, 0.23 ) }
    dend_20 { pt3dadd( 77.4217, -40.3734, 10.8298, 1.14 ) }
    dend_20 { pt3dadd( 79.9915, -41.6441, 10.8431, 0.23 ) }
    dend_20 { pt3dadd( 81.6315, -42.4813, 10.8548, 0.45 ) }
    dend_20 { pt3dadd( 84.7594, -44.0705, 10.8669, 0.23 ) }
    dend_20 { pt3dadd( 86.6405, -45.0441, 10.8884, 0.68 ) }
    dend_20 { pt3dadd( 89.0084, -46.2191, 10.9329, 0.23 ) }
    dend_20 { pt3dadd( 90.6351, -46.9621, 10.9796, 0.23 ) }
    dend_20 { pt3dadd( 91.4543, -47.299, 11.0101, 0.45 ) }
    dend_20 { pt3dadd( 92.8027, -47.7236, 11.0767, 0.23 ) }
    dend_20 { pt3dadd( 94.5046, -48.0828, 11.1769, 0.68 ) }
    dend_20 { pt3dadd( 96.9651, -48.4293, 11.3193, 0.23 ) }
    dend_20 { pt3dadd( 98.2838, -48.5692, 11.3899, 0.23 ) }
    dend_20 { pt3dadd( 99.7946, -48.721, 11.4513, 0.68 ) }
    dend_20 { pt3dadd( 102.363, -48.9543, 11.5217, 0.23 ) }
    dend_20 { pt3dadd( 104.47, -49.1853, 11.5746, 0.68 ) }
    dend_20 { pt3dadd( 106.574, -49.4386, 11.645, 0.23 ) }
    dend_20 { pt3dadd( 107.803, -49.6545, 11.7043, 1.36 ) }
    dend_20 { pt3dadd( 110.681, -50.2251, 11.897, 0.23 ) }
    dend_20 { pt3dadd( 111.731, -50.464, 11.998, 0.23 ) }
    dend_20 { pt3dadd( 113.662, -51.0123, 12.2374, 0.23 ) }
    dend_20 { pt3dadd( 114.583, -51.3022, 12.3734, 0.68 ) }
    dend_20 { pt3dadd( 116.216, -51.8073, 12.5716, 0.23 ) }
    dend_20 { pt3dadd( 117.212, -52.1383, 12.6567, 0.91 ) }
    dend_20 { pt3dadd( 117.954, -52.4079, 12.7075, 0.23 ) }
    dend_20 { pt3dadd( 119.88, -53.174, 12.7884, 0.91 ) }
    dend_20 { pt3dadd( 121.318, -53.7455, 12.7699, 0.23 ) }
    dend_20 { pt3dadd( 123.525, -54.6521, 12.6362, 0.23 ) }
    dend_20 { pt3dadd( 125.377, -55.4154, 12.4714, 0.23 ) }
    dend_20 { pt3dadd( 125.884, -55.6241, 12.4236, 1.14 ) }
    dend_20 { pt3dadd( 127.744, -56.3966, 12.2712, 0.23 ) }
    dend_20 { pt3dadd( 129.841, -57.2198, 12.1316, 0.68 ) }
    dend_20 { pt3dadd( 131.598, -57.856, 12.0476, 0.23 ) }
    dend_20 { pt3dadd( 133.453, -58.4949, 12.0169, 0.68 ) }
    dend_20 { pt3dadd( 137.117, -59.5298, 11.977, 0.23 ) }
    dend_20 { pt3dadd( 138.269, -59.7989, 11.9635, 0.23 ) }
    dend_20 { pt3dadd( 139.164, -59.9594, 11.9482, 0.23 ) }
    dend_20 { pt3dadd( 140.327, -60.1107, 11.9228, 0.68 ) }
    dend_20 { pt3dadd( 143.421, -60.3277, 11.7608, 0.23 ) }
    dend_20 { pt3dadd( 145.309, -60.3648, 11.6009, 0.68 ) }
    dend_20 { pt3dadd( 147.869, -60.2845, 11.3093, 0.23 ) }
    dend_20 { pt3dadd( 148.686, -60.2431, 11.2029, 0.68 ) }
    dend_20 { pt3dadd( 150.534, -60.1105, 10.9617, 0.23 ) }
    dend_20 { pt3dadd( 152.927, -59.8713, 10.706, 0.23 ) }
    dend_20 { pt3dadd( 154.549, -59.6439, 10.555, 0.23 ) }
    dend_20 { pt3dadd( 155.101, -59.5631, 10.5143, 0.91 ) }
    dend_20 { pt3dadd( 156.716, -59.3052, 10.4356, 0.23 ) }
    dend_20 { pt3dadd( 159.307, -58.8627, 10.362, 0.91 ) }
    dend_20 { pt3dadd( 162.872, -58.1928, 10.3183, 0.23 ) }
    dend_20 { pt3dadd( 163.87, -57.9945, 10.321, 0.23 ) }
    dend_20 { pt3dadd( 165.144, -57.7392, 10.3168, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_20 { pt3dadd( 167.678, -57.2352, 10.2794, 0.23 ) }
    dend_20 { pt3dadd( 169.088, -56.9337, 10.2416, 0.91 ) }
    dend_20 { pt3dadd( 171.613, -56.3588, 10.0996, 0.23 ) }
    dend_20 { pt3dadd( 172.28, -56.186, 10.0427, 0.23 ) }
    dend_20 { pt3dadd( 173.816, -55.8072, 9.90665, 0.45 ) }
    dend_20 { pt3dadd( 176.327, -55.2459, 9.66789, 0.23 ) }
    dend_20 { pt3dadd( 177.804, -54.9086, 9.52178, 0.23 ) }
    dend_20 { pt3dadd( 179.355, -54.5216, 9.37001, 0.91 ) }
    dend_20 { pt3dadd( 181.221, -53.9984, 9.16156, 0.23 ) }
    dend_20 { pt3dadd( 182.808, -53.5247, 8.96287, 0.23 ) }
    dend_20 { pt3dadd( 184.404, -53.0489, 8.75473, 0.68 ) }
    dend_20 { pt3dadd( 186.361, -52.4972, 8.45094, 0.23 ) }
    dend_20 { pt3dadd( 187.595, -52.2185, 8.21026, 0.68 ) }
    dend_20 { pt3dadd( 189.634, -51.8391, 7.76302, 0.23 ) }
    dend_20 { pt3dadd( 190.827, -51.6698, 7.4425, 0.45 ) }
    dend_20 { pt3dadd( 192.634, -51.4612, 6.90673, 0.23 ) }
    dend_20 { pt3dadd( 194.323, -51.3269, 6.3961, 0.68 ) }
    dend_20 { pt3dadd( 196.3, -51.2589, 5.82239, 0.23 ) }
    dend_20 { pt3dadd( 197.897, -51.2536, 5.36327, 0.23 ) }
    dend_20 { pt3dadd( 200.759, -51.2923, 4.5806, 0.23 ) }
    dend_20 { pt3dadd( 201.892, -51.2997, 4.27822, 0.23 ) }
    dend_20 { pt3dadd( 203.693, -51.2751, 3.80719, 0.45 ) }
    dend_20 { pt3dadd( 205.291, -51.2094, 3.46545, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 23/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 12.0796, -22.1976, 6.96402, 1.82 ) }
    dend_15 { pt3dadd( 12.0046, -24.1283, 6.89329, 1.82 ) }
    dend_15 { pt3dadd( 11.9061, -26.6646, 6.80036, 1.82 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 26/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -28.5162, 26.4356, 4.43823, 0.45 ) }
    dend_12 { pt3dadd( -29.511, 28.0109, 3.87247, 0.45 ) }
    dend_12 { pt3dadd( -29.9435, 28.6477, 3.6471, 0.91 ) }
    dend_12 { pt3dadd( -30.6679, 29.7174, 3.31655, 0.23 ) }
    dend_12 { pt3dadd( -31.3013, 30.7681, 3.00925, 0.23 ) }
    dend_12 { pt3dadd( -31.7744, 31.6531, 2.75088, 0.45 ) }
    dend_12 { pt3dadd( -32.2919, 32.7507, 2.43608, 1.14 ) }
    dend_12 { pt3dadd( -32.8231, 34.0191, 2.11403, 0.23 ) }
    dend_12 { pt3dadd( -33.5163, 35.9799, 1.64718, 0.68 ) }
    dend_12 { pt3dadd( -34.1625, 38.2575, 1.11512, 0.23 ) }
    dend_12 { pt3dadd( -34.4805, 39.5946, 0.830389, 0.91 ) }
    dend_12 { pt3dadd( -34.7278, 40.9021, 0.554837, 0.68 ) }
    dend_12 { pt3dadd( -35.0764, 42.9195, 0.137926, 0.23 ) }
    dend_12 { pt3dadd( -35.2241, 43.8072, -0.0496866, 0.23 ) }
    dend_12 { pt3dadd( -35.44, 45.0719, -0.33186, 0.23 ) }
    dend_12 { pt3dadd( -35.8466, 47.1396, -0.806526, 1.36 ) }
    dend_12 { pt3dadd( -36.0655, 48.1022, -1.03424, 0.23 ) }
    dend_12 { pt3dadd( -36.3985, 49.4442, -1.36391, 1.14 ) }
    dend_12 { pt3dadd( -36.7579, 50.8017, -1.71615, 0.23 ) }
    dend_12 { pt3dadd( -37.1294, 51.9913, -2.00699, 0.23 ) }
    dend_12 { pt3dadd( -37.374, 52.6713, -2.16293, 1.14 ) }
    dend_12 { pt3dadd( -38.1968, 54.7382, -2.64046, 0.23 ) }
    dend_12 { pt3dadd( -38.6203, 55.6686, -2.8396, 0.68 ) }
    dend_12 { pt3dadd( -39.1737, 56.7738, -3.04776, 0.23 ) }
    dend_12 { pt3dadd( -39.771, 57.8044, -3.21979, 1.14 ) }
    dend_12 { pt3dadd( -40.5557, 58.9992, -3.40028, 0.23 ) }
    dend_12 { pt3dadd( -41.1804, 59.9029, -3.5231, 0.91 ) }
    dend_12 { pt3dadd( -41.5522, 60.3801, -3.61124, 0.23 ) }
    dend_12 { pt3dadd( -42.0744, 61.0245, -3.77978, 0.91 ) }
    dend_12 { pt3dadd( -42.8253, 61.9661, -4.09753, 0.23 ) }
    dend_12 { pt3dadd( -43.2534, 62.5235, -4.3289, 0.23 ) }
    dend_12 { pt3dadd( -43.7199, 63.1562, -4.63902, 0.23 ) }
    dend_12 { pt3dadd( -44.5778, 64.4759, -5.35644, 0.91 ) }
    dend_12 { pt3dadd( -45.0228, 65.2824, -5.82967, 0.23 ) }
    dend_12 { pt3dadd( -45.3963, 66.0464, -6.29323, 0.91 ) }
    dend_12 { pt3dadd( -45.7661, 66.8976, -6.80827, 0.23 ) }
    dend_12 { pt3dadd( -45.9872, 67.4752, -7.16278, 0.91 ) }
    dend_12 { pt3dadd( -46.7363, 69.6492, -8.46807, 0.23 ) }
    dend_12 { pt3dadd( -47.0044, 70.5297, -8.95863, 1.14 ) }
    dend_12 { pt3dadd( -47.4507, 71.9996, -9.71828, 0.23 ) }
    dend_12 { pt3dadd( -47.7011, 72.8268, -10.1287, 0.91 ) }
    dend_12 { pt3dadd( -47.9771, 73.7848, -10.5658, 0.23 ) }
    dend_12 { pt3dadd( -48.3597, 75.1081, -11.1129, 0.23 ) }
    dend_12 { pt3dadd( -48.6239, 76.0466, -11.4532, 0.91 ) }
    dend_12 { pt3dadd( -49.0344, 77.5485, -11.9625, 0.23 ) }
    dend_12 { pt3dadd( -49.2606, 78.4389, -12.2554, 0.91 ) }
    dend_12 { pt3dadd( -49.6716, 80.1022, -12.7724, 0.23 ) }
    dend_12 { pt3dadd( -49.9448, 81.2111, -13.1074, 0.91 ) }
    dend_12 { pt3dadd( -50.271, 82.5895, -13.5427, 0.23 ) }
    dend_12 { pt3dadd( -50.4286, 83.2703, -13.7648, 0.91 ) }
    dend_12 { pt3dadd( -50.8473, 85.0714, -14.3852, 0.23 ) }
    dend_12 { pt3dadd( -51.2039, 86.6973, -14.96, 0.91 ) }
    dend_12 { pt3dadd( -51.5096, 88.0254, -15.4381, 0.23 ) }
    dend_12 { pt3dadd( -51.7145, 88.9137, -15.7532, 0.91 ) }
    dend_12 { pt3dadd( -52.2437, 91.1736, -16.5538, 0.23 ) }
    dend_12 { pt3dadd( -52.3977, 91.8666, -16.7955, 1.14 ) }
    dend_12 { pt3dadd( -52.5953, 93.0042, -17.198, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -28.5162, 26.4356, 4.43823, 0.68 ) }
    dend_5 { pt3dadd( -29.3423, 26.2241, 5.09425, 0.68 ) }
    dend_5 { pt3dadd( -31.0092, 25.973, 6.36128, 0.91 ) }
    dend_5 { pt3dadd( -32.3482, 26.0524, 7.43727, 0.91 ) }
    dend_5 { pt3dadd( -33.7366, 26.4153, 8.60657, 0.91 ) }
    dend_5 { pt3dadd( -35.4768, 26.8702, 10.0721, 0.23 ) }
    dend_5 { pt3dadd( -36.7088, 27.1922, 11.1095, 1.14 ) }
    dend_5 { pt3dadd( -38.0835, 27.6178, 12.2332, 0.68 ) }
    dend_5 { pt3dadd( -40.2553, 28.4402, 13.9029, 1.59 ) }
    dend_5 { pt3dadd( -42.2778, 29.6376, 15.4299, 0.68 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 93/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -16.0798, -3.32505, 2.43854, 0.68 ) }
    dend_3 { pt3dadd( -17.8226, -4.48578, 3.74961, 0.68 ) }
    dend_3 { pt3dadd( -18.6077, -4.97269, 4.37964, 0.68 ) }
    dend_3 { pt3dadd( -20.0763, -5.8262, 5.67429, 0.23 ) }
    dend_3 { pt3dadd( -21.821, -6.90538, 7.35603, 0.91 ) }
    dend_3 { pt3dadd( -23.263, -7.92552, 8.91949, 0.23 ) }
    dend_3 { pt3dadd( -24.1408, -8.66413, 10.0684, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -24.7959, -9.6545, 11.5468, 0.23 ) }
    dend_3 { pt3dadd( -24.9322, -10.3149, 12.5587, 0.23 ) }
    dend_3 { pt3dadd( -24.7609, -11.0096, 13.699, 0.23 ) }
    dend_3 { pt3dadd( -24.4035, -11.8112, 14.976, 0.68 ) }
    dend_3 { pt3dadd( -23.8961, -12.9441, 16.6766, 0.68 ) }
    dend_3 { pt3dadd( -23.3033, -14.5969, 19.0327, 1.14 ) }
    dend_3 { pt3dadd( -23.0286, -15.9487, 20.7108, 0.23 ) }
    dend_3 { pt3dadd( -23.0027, -17.0612, 21.942, 0.68 ) }
    dend_3 { pt3dadd( -23.2019, -18.3231, 23.1999, 0.23 ) }
    dend_3 { pt3dadd( -23.5698, -19.5248, 24.207, 0.45 ) }
    dend_3 { pt3dadd( -23.9672, -20.5467, 24.9228, 1.14 ) }
    dend_3 { pt3dadd( -24.4523, -21.6389, 25.5565, 0.23 ) }
    dend_3 { pt3dadd( -25.1068, -22.9433, 26.2582, 0.91 ) }
    dend_3 { pt3dadd( -26.1354, -24.8676, 27.2183, 0.23 ) }
    dend_3 { pt3dadd( -26.9603, -26.6068, 27.9848, 1.14 ) }
    dend_3 { pt3dadd( -27.2375, -27.2357, 28.2462, 0.23 ) }
    dend_3 { pt3dadd( -27.7369, -28.3524, 28.7147, 0.68 ) }
    dend_3 { pt3dadd( -28.1986, -29.3439, 29.181, 0.23 ) }
    dend_3 { pt3dadd( -28.7015, -30.4032, 29.7336, 1.14 ) }
    dend_3 { pt3dadd( -29.4957, -32.0266, 30.7075, 0.23 ) }
    dend_3 { pt3dadd( -30.2875, -33.4366, 31.6986, 0.91 ) }
    dend_3 { pt3dadd( -30.563, -33.9232, 32.1087, 0.91 ) }
    dend_3 { pt3dadd( -31.1938, -35.1179, 33.3789, 0.23 ) }
    dend_3 { pt3dadd( -31.7586, -35.99, 34.7267, 0.23 ) }
    dend_3 { pt3dadd( -32.3364, -36.6307, 36.387, 0.23 ) }
    dend_3 { pt3dadd( -32.7481, -36.8438, 38.0171, 1.14 ) }
    dend_3 { pt3dadd( -32.9488, -36.7487, 40.1483, 0.23 ) }
    dend_3 { pt3dadd( -32.7244, -36.3806, 42.1924, 0.23 ) }
    dend_3 { pt3dadd( -31.8853, -35.5945, 44.8272, 0.23 ) }
    dend_3 { pt3dadd( -30.956, -35.0402, 46.5141, 0.68 ) }
    dend_3 { pt3dadd( -29.8404, -34.5475, 47.9156, 0.23 ) }
    dend_3 { pt3dadd( -28.1915, -33.9855, 49.473, 0.91 ) }
    dend_3 { pt3dadd( -25.8926, -33.2814, 51.1152, 0.23 ) }
    dend_3 { pt3dadd( -24.4558, -32.9269, 51.9046, 0.23 ) }
    dend_3 { pt3dadd( -21.7564, -32.4173, 53.1685, 0.23 ) }
    dend_3 { pt3dadd( -20.2371, -32.1982, 53.8412, 0.23 ) }
    dend_3 { pt3dadd( -18.5589, -31.9731, 54.5099, 0.68 ) }
    dend_3 { pt3dadd( -16.7845, -31.682, 55.0943, 0.23 ) }
    dend_3 { pt3dadd( -15.2103, -31.4057, 55.5253, 0.68 ) }
    dend_3 { pt3dadd( -12.9183, -30.8865, 56.0456, 0.23 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 40/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -16.0798, -3.32505, 2.43854, 0.68 ) }
    dend_2 { pt3dadd( -17.6112, -3.33076, 1.58521, 0.68 ) }
    dend_2 { pt3dadd( -19.953, -3.14484, 0.504669, 0.68 ) }
    dend_2 { pt3dadd( -21.7255, -2.97181, -0.159112, 0.68 ) }
    dend_2 { pt3dadd( -24.264, -2.6852, -1.02689, 1.14 ) }
    dend_2 { pt3dadd( -26.7853, -2.34758, -1.78952, 0.23 ) }
    dend_2 { pt3dadd( -28.9431, -2.05765, -2.34765, 0.68 ) }
    dend_2 { pt3dadd( -31.3267, -1.67355, -2.74089, 0.45 ) }
    dend_2 { pt3dadd( -34.1233, -1.26141, -2.95388, 0.68 ) }
    dend_2 { pt3dadd( -35.9169, -1.10406, -2.97597, 0.68 ) }
    dend_2 { pt3dadd( -37.5664, -1.06738, -2.90009, 0.68 ) }
    dend_2 { pt3dadd( -39.4373, -1.15512, -2.72747, 0.68 ) }
    dend_2 { pt3dadd( -40.5643, -1.28335, -2.60036, 0.68 ) }
    dend_2 { pt3dadd( -42.6007, -1.59351, -2.37485, 0.68 ) }
    dend_2 { pt3dadd( -45.1869, -2.02766, -2.08627, 0.68 ) }
    dend_2 { pt3dadd( -47.5549, -2.43395, -1.8377, 0.68 ) }
    dend_2 { pt3dadd( -50.1947, -2.84197, -1.61225, 0.91 ) }
    dend_2 { pt3dadd( -52.6439, -3.13898, -1.44527, 0.45 ) }
    dend_2 { pt3dadd( -54.8225, -3.37629, -1.32289, 0.45 ) }
    dend_2 { pt3dadd( -57.28, -3.6263, -1.22565, 0.45 ) }
    dend_2 { pt3dadd( -58.8176, -3.79441, -1.21248, 0.45 ) }
    dend_2 { pt3dadd( -60.4697, -3.96766, -1.28069, 0.45 ) }
    dend_2 { pt3dadd( -62.1872, -4.18638, -1.49757, 0.23 ) }
    dend_2 { pt3dadd( -64.1912, -4.46189, -1.91655, 0.23 ) }
    dend_2 { pt3dadd( -65.6278, -4.69777, -2.31548, 0.23 ) }
    dend_2 { pt3dadd( -67.4986, -5.01244, -2.91155, 0.45 ) }
    dend_2 { pt3dadd( -69.6301, -5.35006, -3.59315, 0.23 ) }
    dend_2 { pt3dadd( -72.0687, -5.7034, -4.35902, 0.23 ) }
    dend_2 { pt3dadd( -74.204, -5.9863, -4.96545, 0.45 ) }
    dend_2 { pt3dadd( -75.7238, -6.14567, -5.31074, 0.45 ) }
    dend_2 { pt3dadd( -77.8864, -6.4152, -5.70656, 0.45 ) }
    dend_2 { pt3dadd( -79.8775, -6.69105, -6.011, 0.23 ) }
    dend_2 { pt3dadd( -80.7393, -6.82037, -6.11635, 0.23 ) }
    dend_2 { pt3dadd( -82.653, -7.06853, -6.28405, 2.05 ) }
    dend_2 { pt3dadd( -87.0109, -7.64322, -6.66209, 0.23 ) }
    dend_2 { pt3dadd( -89.2369, -7.96983, -6.87504, 0.23 ) }
    dend_2 { pt3dadd( -98.7159, -6.55662, -7.71035, 0.23 ) }
    dend_2 { pt3dadd( -108.317, -6.93492, -7.63233, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 78/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 17.9759, 11.0374, 2.80846, 0.68 ) }
    dend_52 { pt3dadd( 19.6091, 12.878, 2.13096, 0.68 ) }
    dend_52 { pt3dadd( 20.4787, 14.0796, 1.76001, 0.91 ) }
    dend_52 { pt3dadd( 21.8533, 16.1536, 1.21691, 0.68 ) }
    dend_52 { pt3dadd( 23.0319, 17.9142, 0.801707, 0.68 ) }
    dend_52 { pt3dadd( 24.2788, 19.6893, 0.370771, 0.68 ) }
    dend_52 { pt3dadd( 25.2919, 21.0472, -0.0160154, 0.68 ) }
    dend_52 { pt3dadd( 26.3193, 22.4372, -0.42483, 0.68 ) }
    dend_52 { pt3dadd( 27.1778, 23.4515, -0.776961, 0.68 ) }
    dend_52 { pt3dadd( 28.4167, 24.7179, -1.29046, 0.68 ) }
    dend_52 { pt3dadd( 29.7997, 25.9244, -1.82919, 1.14 ) }
    dend_52 { pt3dadd( 31.445, 27.1655, -2.44374, 0.68 ) }
    dend_52 { pt3dadd( 32.6565, 27.9916, -2.91292, 0.68 ) }
    dend_52 { pt3dadd( 33.8942, 28.8286, -3.40053, 0.68 ) }
    dend_52 { pt3dadd( 34.9944, 29.5775, -3.81935, 1.14 ) }
    dend_52 { pt3dadd( 36.6257, 30.7073, -4.38516, 0.45 ) }
    dend_52 { pt3dadd( 38.5463, 32.0709, -4.9576, 0.68 ) }
    dend_52 { pt3dadd( 40.0123, 33.1767, -5.33659, 0.68 ) }
    dend_52 { pt3dadd( 41.7264, 34.5904, -5.76671, 0.68 ) }
    dend_52 { pt3dadd( 43.373, 36.0866, -6.16543, 0.68 ) }
    dend_52 { pt3dadd( 44.627, 37.3971, -6.47399, 0.45 ) }
    dend_52 { pt3dadd( 45.1386, 38.0953, -6.58097, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_52 { pt3dadd( 45.5613, 38.9129, -6.61913, 0.45 ) }
    dend_52 { pt3dadd( 46.0592, 40.3095, -6.64063, 0.45 ) }
    dend_52 { pt3dadd( 46.5575, 41.8094, -6.74617, 0.45 ) }
    dend_52 { pt3dadd( 47.3249, 43.5961, -7.03782, 0.45 ) }
    dend_52 { pt3dadd( 48.3208, 45.2396, -7.44021, 0.45 ) }
    dend_52 { pt3dadd( 48.9045, 46.0739, -7.65572, 1.14 ) }
    dend_52 { pt3dadd( 50.2156, 47.7902, -8.08766, 0.45 ) }
    dend_52 { pt3dadd( 51.6234, 49.4505, -8.52129, 0.45 ) }
    dend_52 { pt3dadd( 53.305, 51.285, -9.0087, 0.45 ) }
    dend_52 { pt3dadd( 54.7119, 52.7677, -9.38882, 0.45 ) }
    dend_52 { pt3dadd( 56.4803, 54.6419, -9.84702, 0.68 ) }
    dend_52 { pt3dadd( 57.29, 55.518, -10.0244, 0.68 ) }
    dend_52 { pt3dadd( 58.5034, 56.8959, -10.204, 0.45 ) }
    dend_52 { pt3dadd( 59.8291, 58.5513, -10.3236, 0.45 ) }
    dend_52 { pt3dadd( 60.2722, 59.1207, -10.3495, 1.14 ) }
    dend_52 { pt3dadd( 60.878, 59.8345, -10.4017, 0.23 ) }
    dend_52 { pt3dadd( 62.4878, 61.3706, -10.6082, 0.23 ) }
    dend_52 { pt3dadd( 63.113, 61.9343, -10.6868, 0.23 ) }
    dend_52 { pt3dadd( 69.4663, 69.2281, -11.3324, 0.23 ) }
    dend_52 { pt3dadd( 74.4457, 77.6294, -11.6515, 0.23 ) }
    dend_52 { pt3dadd( 79.2567, 86.1555, -11.0908, 0.23 ) }
    dend_52 { pt3dadd( 85.4687, 93.5117, -9.5162, 0.23 ) }
    dend_52 { pt3dadd( 92.1737, 100.007, -6.75433, 0.23 ) }
    dend_52 { pt3dadd( 97.6937, 106.582, -2.02883, 0.23 ) }
    dend_52 { pt3dadd( 103.742, 113.202, 1.86851, 0.23 ) }
    dend_52 { pt3dadd( 108.654, 120.844, 5.66387, 0.23 ) }
    dend_52 { pt3dadd( 113.176, 128.886, 9.15836, 0.23 ) }
    dend_52 { pt3dadd( 118.298, 135.848, 13.8324, 0.23 ) }
    dend_52 { pt3dadd( 122.437, 142.458, 19.8427, 0.23 ) }
    dend_52 { pt3dadd( 127.397, 149.379, 24.7562, 0.23 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 30/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 17.9759, 11.0374, 2.80846, 0.68 ) }
    dend_47 { pt3dadd( 20.1471, 13.4993, 3.19184, 0.68 ) }
    dend_47 { pt3dadd( 21.8122, 15.226, 3.38391, 0.68 ) }
    dend_47 { pt3dadd( 24.9094, 18.3225, 3.6534, 0.68 ) }
    dend_47 { pt3dadd( 26.4409, 19.8445, 3.73845, 0.68 ) }
    dend_47 { pt3dadd( 28.4998, 21.9522, 3.8242, 0.68 ) }
    dend_47 { pt3dadd( 30.3061, 23.9124, 3.86674, 0.68 ) }
    dend_47 { pt3dadd( 32.3563, 26.1994, 3.84236, 0.68 ) }
    dend_47 { pt3dadd( 33.3418, 27.3691, 3.80295, 1.14 ) }
    dend_47 { pt3dadd( 34.5787, 29.0399, 3.73319, 0.91 ) }
    dend_47 { pt3dadd( 35.5765, 30.591, 3.68487, 0.91 ) }
    dend_47 { pt3dadd( 37.2123, 33.5158, 3.63361, 0.68 ) }
    dend_47 { pt3dadd( 38.4339, 36.0971, 3.62878, 0.91 ) }
    dend_47 { pt3dadd( 39.5262, 38.7841, 3.70295, 0.91 ) }
    dend_47 { pt3dadd( 40.853, 42.4781, 3.86167, 0.91 ) }
    dend_47 { pt3dadd( 41.6202, 44.8777, 4.01184, 0.91 ) }
    dend_47 { pt3dadd( 42.0623, 46.3473, 4.11763, 0.91 ) }
    dend_47 { pt3dadd( 42.6523, 48.2298, 4.29184, 0.91 ) }
    dend_47 { pt3dadd( 43.3056, 50.2732, 4.50297, 0.68 ) }
    dend_47 { pt3dadd( 44.238, 52.995, 4.80754, 0.68 ) }
    dend_47 { pt3dadd( 45.1449, 55.5554, 5.10125, 1.14 ) }
    dend_47 { pt3dadd( 46.2391, 58.5068, 5.42158, 0.91 ) }
    dend_47 { pt3dadd( 47.3673, 61.652, 5.74591, 0.91 ) }
    dend_47 { pt3dadd( 47.8756, 63.0746, 5.87362, 0.91 ) }
    dend_47 { pt3dadd( 48.6897, 65.2202, 6.02908, 0.91 ) }
    dend_47 { pt3dadd( 50.1302, 68.876, 6.24092, 0.91 ) }
    dend_47 { pt3dadd( 51.1303, 71.5542, 6.38644, 0.91 ) }
    dend_47 { pt3dadd( 51.9358, 73.9151, 6.54875, 1.36 ) }
    dend_47 { pt3dadd( 52.8188, 76.5445, 6.78743, 0.68 ) }
    dend_47 { pt3dadd( 53.7556, 79.0219, 7.07456, 0.91 ) }
    dend_47 { pt3dadd( 54.6165, 81.0952, 7.36207, 0.68 ) }
    dend_47 { pt3dadd( 55.6673, 83.3456, 7.68847, 0.68 ) }
    dend_47 { pt3dadd( 56.8754, 85.8061, 8.0503, 0.91 ) }
    dend_47 { pt3dadd( 58.601, 89.2007, 8.57905, 0.91 ) }
    dend_47 { pt3dadd( 59.9675, 92.0202, 9.04438, 0.45 ) }
    dend_47 { pt3dadd( 61.0756, 94.4801, 9.43951, 0.68 ) }
    dend_47 { pt3dadd( 62.2516, 97.2393, 9.85903, 0.91 ) }
    dend_47 { pt3dadd( 63.0201, 99.061, 10.1291, 0.23 ) }
    dend_47 { pt3dadd( 64.2525, 102.094, 10.564, 0.45 ) }
    dend_47 { pt3dadd( 65.1443, 104.41, 10.8361, 0.45 ) }
    dend_47 { pt3dadd( 66.3624, 107.567, 11.1615, 0.45 ) }
    dend_47 { pt3dadd( 67.1164, 109.56, 11.3502, 1.14 ) }
    dend_47 { pt3dadd( 68.6935, 113.857, 11.733, 0.68 ) }
    dend_47 { pt3dadd( 69.9132, 117.083, 11.9602, 0.68 ) }
    dend_47 { pt3dadd( 71.292, 120.459, 12.122, 0.68 ) }
    dend_47 { pt3dadd( 72.788, 123.747, 12.2478, 0.45 ) }
    dend_47 { pt3dadd( 74.0516, 126.317, 12.3497, 0.45 ) }
    dend_47 { pt3dadd( 75.1152, 128.474, 12.4497, 0.68 ) }
    dend_47 { pt3dadd( 76.1631, 130.685, 12.5751, 0.91 ) }
    dend_47 { pt3dadd( 77.0712, 132.677, 12.7636, 0.45 ) }
    dend_47 { pt3dadd( 78.0151, 134.884, 13.089, 0.68 ) }
    dend_47 { pt3dadd( 78.8129, 136.917, 13.3906, 0.45 ) }
    dend_47 { pt3dadd( 79.5278, 138.732, 13.6445, 0.45 ) }
    dend_47 { pt3dadd( 79.9541, 139.841, 13.7724, 0.45 ) }
    dend_47 { pt3dadd( 80.5925, 141.591, 13.894, 0.91 ) }
    dend_47 { pt3dadd( 81.9984, 145.261, 13.9647, 0.68 ) }
    dend_47 { pt3dadd( 83.7657, 149.232, 13.8473, 0.68 ) }
    dend_47 { pt3dadd( 85.0128, 151.559, 13.6645, 0.45 ) }
    dend_47 { pt3dadd( 86.1824, 153.389, 13.455, 0.45 ) }
    dend_47 { pt3dadd( 87.5923, 155.424, 13.1704, 0.45 ) }
    dend_47 { pt3dadd( 88.9724, 157.291, 12.8506, 0.45 ) }
    dend_47 { pt3dadd( 90.4987, 159.243, 12.4552, 0.45 ) }
    dend_47 { pt3dadd( 91.4593, 160.42, 12.2179, 0.45 ) }
    dend_47 { pt3dadd( 92.1207, 161.266, 12.093, 0.45 ) }
    dend_47 { pt3dadd( 93.4154, 162.913, 12.0063, 0.45 ) }
    dend_47 { pt3dadd( 94.8213, 164.657, 12.0283, 0.45 ) }
    dend_47 { pt3dadd( 96.213, 166.423, 12.0668, 0.68 ) }
    dend_47 { pt3dadd( 98.5289, 169.438, 12.1335, 0.23 ) }
    dend_47 { pt3dadd( 100.019, 171.351, 12.2009, 0.45 ) }
    dend_47 { pt3dadd( 102.125, 173.883, 12.3544, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_47 { pt3dadd( 103.494, 175.425, 12.5027, 0.91 ) }
    dend_47 { pt3dadd( 105.776, 177.946, 12.8364, 0.23 ) }
    dend_47 { pt3dadd( 106.682, 179.021, 13.0144, 0.45 ) }
    dend_47 { pt3dadd( 108.228, 181.062, 13.4025, 0.68 ) }
    dend_47 { pt3dadd( 109.978, 183.73, 13.9448, 0.45 ) }
    dend_47 { pt3dadd( 111.533, 186.663, 14.5593, 0.45 ) }
    dend_47 { pt3dadd( 112.315, 188.458, 14.9831, 0.45 ) }
    dend_47 { pt3dadd( 113.311, 191.097, 15.6641, 0.45 ) }
    dend_47 { pt3dadd( 113.965, 193.038, 16.1652, 0.45 ) }
    dend_47 { pt3dadd( 114.68, 195.762, 16.8513, 0.45 ) }
    dend_47 { pt3dadd( 115.022, 197.885, 17.3821, 0.45 ) }
    dend_47 { pt3dadd( 115.094, 199.019, 17.6787, 0.45 ) }
    dend_47 { pt3dadd( 115.085, 201.157, 18.2732, 0.45 ) }
    dend_47 { pt3dadd( 114.909, 203.144, 18.8744, 0.45 ) }
    dend_47 { pt3dadd( 114.609, 204.823, 19.3908, 0.45 ) }
    dend_47 { pt3dadd( 114.292, 206.287, 19.861, 0.45 ) }
    dend_47 { pt3dadd( 113.739, 208.542, 20.5996, 0.68 ) }
    dend_47 { pt3dadd( 113.127, 210.888, 21.3499, 0.68 ) }
    dend_47 { pt3dadd( 112.254, 214.253, 22.3199, 0.45 ) }
    dend_47 { pt3dadd( 111.53, 217.269, 23.0523, 0.45 ) }
    dend_47 { pt3dadd( 111.036, 219.898, 23.5969, 0.45 ) }
    dend_47 { pt3dadd( 110.833, 221.647, 23.9321, 1.14 ) }
    dend_47 { pt3dadd( 110.683, 224.174, 24.3673, 0.45 ) }
    dend_47 { pt3dadd( 110.624, 227.578, 24.89, 0.68 ) }
    dend_47 { pt3dadd( 110.651, 229.871, 25.2067, 0.91 ) }
    dend_47 { pt3dadd( 110.693, 231.961, 25.4962, 0.45 ) }
    dend_47 { pt3dadd( 110.712, 234.467, 25.8356, 0.68 ) }
    dend_47 { pt3dadd( 110.723, 235.893, 26.052, 0.68 ) }
    dend_47 { pt3dadd( 110.718, 238.003, 26.4372, 0.45 ) }
    dend_47 { pt3dadd( 110.631, 241.337, 27.1617, 0.45 ) }
    dend_47 { pt3dadd( 110.43, 243.475, 27.652, 0.45 ) }
    dend_47 { pt3dadd( 110.127, 245.223, 28.0591, 0.45 ) }
    dend_47 { pt3dadd( 109.766, 246.809, 28.4154, 0.68 ) }
    dend_47 { pt3dadd( 109.196, 249.211, 29.0362, 0.45 ) }
    dend_47 { pt3dadd( 108.877, 250.478, 29.4166, 0.91 ) }
    dend_47 { pt3dadd( 108.131, 253.588, 30.4812, 0.23 ) }
    dend_47 { pt3dadd( 107.78, 255.042, 31.0091, 0.45 ) }
    dend_47 { pt3dadd( 107.255, 257.68, 31.9582, 0.23 ) }
    dend_47 { pt3dadd( 106.954, 259.77, 32.6816, 0.23 ) }
    dend_47 { pt3dadd( 106.808, 261.942, 33.4102, 1.14 ) }
    dend_47 { pt3dadd( 106.768, 265.126, 34.4468, 0.23 ) }
    dend_47 { pt3dadd( 106.845, 267.171, 35.0791, 0.23 ) }
    dend_47 { pt3dadd( 106.983, 270.216, 35.9523, 0.23 ) }
    dend_47 { pt3dadd( 107.043, 272.127, 36.4518, 0.91 ) }
    dend_47 { pt3dadd( 107.032, 274.42, 36.9755, 0.23 ) }
    dend_47 { pt3dadd( 106.979, 276.056, 37.3186, 0.23 ) }
    dend_47 { pt3dadd( 106.891, 277.829, 37.667, 0.23 ) }
    dend_47 { pt3dadd( 106.829, 279.23, 37.9475, 0.91 ) }
    dend_47 { pt3dadd( 106.758, 283.099, 38.7105, 0.23 ) }
    dend_47 { pt3dadd( 106.787, 284.715, 39.0514, 0.68 ) }
    dend_47 { pt3dadd( 106.864, 286.119, 39.3679, 0.23 ) }
    dend_47 { pt3dadd( 107.041, 287.909, 39.8026, 0.23 ) }
    dend_47 { pt3dadd( 107.311, 289.991, 40.343, 0.68 ) }
    dend_47 { pt3dadd( 107.812, 292.865, 41.1434, 0.91 ) }
    dend_47 { pt3dadd( 108.38, 295.765, 41.9925, 0.23 ) }
    dend_47 { pt3dadd( 108.716, 297.85, 42.6068, 0.91 ) }
    dend_47 { pt3dadd( 108.977, 300.297, 43.329, 0.23 ) }
    dend_47 { pt3dadd( 109.097, 302.535, 43.9687, 0.91 ) }
    dend_47 { pt3dadd( 109.171, 304.373, 44.4672, 0.23 ) }
    dend_47 { pt3dadd( 109.242, 306.19, 44.9488, 0.68 ) }
    dend_47 { pt3dadd( 109.519, 309.701, 45.8022, 0.45 ) }
    dend_47 { pt3dadd( 109.609, 310.766, 46.0563, 0.45 ) }
    dend_47 { pt3dadd( 109.83, 313.43, 46.6971, 0.45 ) }
    dend_47 { pt3dadd( 110.033, 315.941, 47.2879, 1.14 ) }
    dend_47 { pt3dadd( 110.375, 319.531, 48.1078, 0.23 ) }
    dend_47 { pt3dadd( 110.741, 321.714, 48.6166, 0.23 ) }
    // Section: dend_45, id: dend_45, parent: dend_41 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 12.8161, 12.0181, 6.87457, 0.91 ) }
    dend_45 { pt3dadd( 14.1956, 14.1777, 7.35355, 0.91 ) }
    dend_45 { pt3dadd( 15.1148, 15.6443, 7.70101, 1.14 ) }
    dend_45 { pt3dadd( 16.57, 18.0409, 8.30692, 0.45 ) }
    dend_45 { pt3dadd( 17.2804, 19.2591, 8.64156, 1.14 ) }
    dend_45 { pt3dadd( 18.2966, 20.981, 9.1933, 0.68 ) }
    dend_45 { pt3dadd( 19.1232, 22.3917, 9.70767, 1.36 ) }
    dend_45 { pt3dadd( 19.8124, 23.6604, 10.2461, 0.91 ) }
    dend_45 { pt3dadd( 20.2975, 24.5858, 10.6806, 1.36 ) }
    dend_45 { pt3dadd( 21.3007, 26.5354, 11.6538, 0.68 ) }
    dend_45 { pt3dadd( 21.9064, 27.8568, 12.3145, 1.14 ) }
    dend_45 { pt3dadd( 22.365, 29.058, 12.8984, 0.23 ) }
    dend_45 { pt3dadd( 22.5592, 29.6828, 13.1913, 0.68 ) }
    dend_45 { pt3dadd( 22.8021, 30.5758, 13.5633, 0.23 ) }
    dend_45 { pt3dadd( 23.1158, 32.1414, 14.1148, 0.23 ) }
    dend_45 { pt3dadd( 23.2152, 32.8916, 14.3309, 1.14 ) }
    dend_45 { pt3dadd( 23.3737, 34.6001, 14.7589, 0.23 ) }
    dend_45 { pt3dadd( 23.6328, 36.941, 15.3044, 1.36 ) }
    dend_45 { pt3dadd( 23.8749, 38.6085, 15.6851, 1.36 ) }
    dend_45 { pt3dadd( 24.19, 40.2826, 16.0625, 0.23 ) }
    dend_45 { pt3dadd( 24.397, 41.219, 16.2659, 1.14 ) }
    dend_45 { pt3dadd( 24.7006, 42.3184, 16.4781, 1.14 ) }
    dend_45 { pt3dadd( 25.379, 44.3198, 16.8064, 0.23 ) }
    dend_45 { pt3dadd( 25.942, 45.7573, 17.0319, 1.36 ) }
    dend_45 { pt3dadd( 26.3369, 46.7751, 17.1969, 1.36 ) }
    dend_45 { pt3dadd( 26.724, 47.87, 17.364, 0.23 ) }
    dend_45 { pt3dadd( 27.0882, 49.0763, 17.5766, 1.36 ) }
    dend_45 { pt3dadd( 27.2256, 49.6794, 17.6879, 1.36 ) }
    dend_45 { pt3dadd( 27.4598, 51.4241, 18.0411, 0.45 ) }
    dend_45 { pt3dadd( 27.6092, 52.969, 18.3745, 1.14 ) }
    dend_45 { pt3dadd( 27.7122, 54.1678, 18.6391, 1.14 ) }
    dend_45 { pt3dadd( 27.9418, 56.0538, 19.0782, 0.23 ) }
    dend_45 { pt3dadd( 28.0826, 56.7477, 19.2582, 1.14 ) }
    dend_45 { pt3dadd( 28.3367, 57.6837, 19.5073, 1.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 28.8258, 59.0383, 19.8698, 0.23 ) }
    dend_45 { pt3dadd( 28.9761, 59.3776, 19.9696, 0.23 ) }
    dend_45 { pt3dadd( 29.5651, 60.5916, 20.3345, 1.36 ) }
    dend_45 { pt3dadd( 30.4607, 62.2623, 20.8449, 0.45 ) }
    dend_45 { pt3dadd( 30.9243, 63.0637, 21.1306, 0.23 ) }
    dend_45 { pt3dadd( 31.6508, 64.4027, 21.6199, 1.14 ) }
    dend_45 { pt3dadd( 32.2572, 65.5869, 22.0466, 0.23 ) }
    dend_45 { pt3dadd( 32.796, 66.6539, 22.4267, 1.14 ) }
    dend_45 { pt3dadd( 33.6488, 68.2799, 23.0183, 0.23 ) }
    dend_45 { pt3dadd( 34.3318, 69.4685, 23.4537, 1.14 ) }
    dend_45 { pt3dadd( 35.4796, 71.1988, 24.1295, 0.23 ) }
    dend_45 { pt3dadd( 35.9023, 71.7793, 24.3532, 0.23 ) }
    dend_45 { pt3dadd( 36.3545, 72.3674, 24.5589, 0.91 ) }
    dend_45 { pt3dadd( 37.0908, 73.2153, 24.8495, 0.23 ) }
    dend_45 { pt3dadd( 37.6304, 73.779, 25.0391, 0.91 ) }
    dend_45 { pt3dadd( 38.4169, 74.5155, 25.2857, 0.23 ) }
    dend_45 { pt3dadd( 39.241, 75.2173, 25.5331, 1.14 ) }
    dend_45 { pt3dadd( 39.9744, 75.9244, 25.7868, 1.14 ) }
    dend_45 { pt3dadd( 40.818, 76.8233, 26.1251, 0.23 ) }
    dend_45 { pt3dadd( 41.2206, 77.2943, 26.2975, 1.59 ) }
    dend_45 { pt3dadd( 41.6811, 77.9465, 26.4912, 1.59 ) }
    dend_45 { pt3dadd( 42.6017, 79.4765, 26.8582, 0.23 ) }
    dend_45 { pt3dadd( 43.2293, 80.601, 27.0566, 0.91 ) }
    dend_45 { pt3dadd( 43.8281, 81.6591, 27.1822, 0.23 ) }
    dend_45 { pt3dadd( 44.4309, 82.6235, 27.2439, 1.14 ) }
    dend_45 { pt3dadd( 45.9491, 84.6234, 27.2746, 0.23 ) }
    dend_45 { pt3dadd( 46.4599, 85.1783, 27.2632, 0.23 ) }
    dend_45 { pt3dadd( 47.6617, 86.2907, 27.1962, 0.91 ) }
    dend_45 { pt3dadd( 49.0428, 87.3938, 27.064, 0.23 ) }
    dend_45 { pt3dadd( 50.658, 88.6114, 26.889, 0.23 ) }
    dend_45 { pt3dadd( 52.393, 89.8641, 26.7215, 0.91 ) }
    dend_45 { pt3dadd( 53.616, 90.798, 26.6182, 0.23 ) }
    dend_45 { pt3dadd( 54.3992, 91.5074, 26.5507, 1.14 ) }
    dend_45 { pt3dadd( 55.4699, 92.7827, 26.4614, 0.23 ) }
    dend_45 { pt3dadd( 56.0945, 93.8257, 26.3903, 0.23 ) }
    dend_45 { pt3dadd( 56.5765, 94.961, 26.3221, 1.14 ) }
    dend_45 { pt3dadd( 57.3813, 97.3276, 26.2209, 0.23 ) }
    dend_45 { pt3dadd( 57.7148, 98.412, 26.1874, 0.23 ) }
    dend_45 { pt3dadd( 58.1706, 99.8602, 26.165, 0.68 ) }
    dend_45 { pt3dadd( 58.4141, 100.589, 26.1685, 0.23 ) }
    dend_45 { pt3dadd( 58.8368, 101.639, 26.1811, 0.91 ) }
    dend_45 { pt3dadd( 59.9049, 103.84, 26.2064, 0.23 ) }
    dend_45 { pt3dadd( 60.3107, 104.556, 26.2099, 1.14 ) }
    dend_45 { pt3dadd( 60.9382, 105.625, 26.2401, 0.23 ) }
    dend_45 { pt3dadd( 61.3353, 106.264, 26.2709, 0.91 ) }
    dend_45 { pt3dadd( 62.2185, 107.683, 26.3876, 0.23 ) }
    dend_45 { pt3dadd( 62.9293, 108.898, 26.533, 0.91 ) }
    dend_45 { pt3dadd( 63.7239, 110.456, 26.7758, 0.23 ) }
    dend_45 { pt3dadd( 64.4624, 112.172, 27.0793, 0.68 ) }
    dend_45 { pt3dadd( 64.9274, 113.61, 27.3287, 0.23 ) }
    dend_45 { pt3dadd( 65.1903, 114.791, 27.5184, 0.91 ) }
    dend_45 { pt3dadd( 65.3172, 116.051, 27.6971, 0.23 ) }
    dend_45 { pt3dadd( 65.3207, 117.35, 27.8557, 0.68 ) }
    dend_45 { pt3dadd( 65.2301, 118.632, 27.9706, 0.23 ) }
    dend_45 { pt3dadd( 65.0003, 120.868, 28.1202, 0.23 ) }
    dend_45 { pt3dadd( 64.8035, 122.586, 28.2307, 0.68 ) }
    dend_45 { pt3dadd( 64.6676, 124.352, 28.3274, 0.23 ) }
    dend_45 { pt3dadd( 64.6512, 125.178, 28.3755, 0.68 ) }
    dend_45 { pt3dadd( 64.7029, 126.406, 28.4931, 0.23 ) }
    dend_45 { pt3dadd( 64.8335, 127.589, 28.6598, 1.14 ) }
    dend_45 { pt3dadd( 64.9496, 128.335, 28.8174, 1.14 ) }
    dend_45 { pt3dadd( 65.2096, 129.721, 29.1443, 0.23 ) }
    dend_45 { pt3dadd( 65.3903, 130.676, 29.3945, 0.68 ) }
    dend_45 { pt3dadd( 65.6695, 132.472, 29.9031, 0.23 ) }
    dend_45 { pt3dadd( 65.8011, 133.352, 30.1742, 0.91 ) }
    dend_45 { pt3dadd( 66.0529, 134.88, 30.719, 0.23 ) }
    dend_45 { pt3dadd( 66.3705, 136.462, 31.384, 0.91 ) }
    dend_45 { pt3dadd( 66.793, 138.12, 32.2182, 0.23 ) }
    dend_45 { pt3dadd( 67.0186, 138.809, 32.5984, 1.14 ) }
    dend_45 { pt3dadd( 67.5326, 139.993, 33.3008, 0.23 ) }
    dend_45 { pt3dadd( 68.2451, 141.508, 34.2214, 0.23 ) }
    dend_45 { pt3dadd( 68.6132, 142.229, 34.6655, 1.14 ) }
    dend_45 { pt3dadd( 69.126, 143.229, 35.2938, 0.23 ) }
    dend_45 { pt3dadd( 69.5954, 144.268, 35.8576, 0.68 ) }
    dend_45 { pt3dadd( 69.969, 145.408, 36.3532, 0.23 ) }
    dend_45 { pt3dadd( 70.1705, 146.38, 36.6903, 0.23 ) }
    dend_45 { pt3dadd( 70.4014, 147.811, 37.0777, 1.59 ) }
    dend_45 { pt3dadd( 70.6807, 149.839, 37.5842, 0.23 ) }
    dend_45 { pt3dadd( 70.8795, 151.513, 37.9619, 0.91 ) }
    dend_45 { pt3dadd( 71.0704, 153.436, 38.384, 0.23 ) }
    dend_45 { pt3dadd( 71.1897, 154.54, 38.6237, 1.59 ) }
    dend_45 { pt3dadd( 71.4945, 156.56, 39.064, 0.23 ) }
    dend_45 { pt3dadd( 71.5858, 156.985, 39.1503, 0.91 ) }
    dend_45 { pt3dadd( 71.8244, 157.698, 39.3141, 0.91 ) }
    dend_45 { pt3dadd( 72.8577, 159.698, 39.8909, 0.23 ) }
    dend_45 { pt3dadd( 73.8376, 161.133, 40.3552, 0.91 ) }
    dend_45 { pt3dadd( 74.181, 161.57, 40.5012, 0.91 ) }
    dend_45 { pt3dadd( 75.2006, 162.74, 40.8985, 0.23 ) }
    dend_45 { pt3dadd( 76.5838, 164.181, 41.2793, 0.68 ) }
    dend_45 { pt3dadd( 77.785, 165.299, 41.4953, 0.23 ) }
    dend_45 { pt3dadd( 78.7108, 166.081, 41.5862, 1.14 ) }
    dend_45 { pt3dadd( 79.1766, 166.482, 41.6078, 1.14 ) }
    dend_45 { pt3dadd( 80.3457, 167.539, 41.6335, 0.23 ) }
    dend_45 { pt3dadd( 82.0403, 169.085, 41.6239, 0.23 ) }
    dend_45 { pt3dadd( 83.3121, 170.179, 41.5786, 0.68 ) }
    dend_45 { pt3dadd( 84.7538, 171.249, 41.5145, 0.91 ) }
    dend_45 { pt3dadd( 86.5111, 172.34, 41.4336, 0.23 ) }
    dend_45 { pt3dadd( 87.2934, 172.798, 41.3969, 0.91 ) }
    dend_45 { pt3dadd( 88.3117, 173.344, 41.3496, 0.23 ) }
    dend_45 { pt3dadd( 89.2653, 173.801, 41.3498, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_45 { pt3dadd( 91.2276, 174.575, 41.3241, 0.23 ) }
    dend_45 { pt3dadd( 92.7017, 174.94, 41.2778, 0.23 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 12.8161, 12.0181, 6.87457, 0.68 ) }
    dend_42 { pt3dadd( 13.3373, 13.3262, 7.2375, 0.68 ) }
    dend_42 { pt3dadd( 14.0082, 15.2372, 7.61655, 1.36 ) }
    dend_42 { pt3dadd( 14.5016, 16.6891, 7.88777, 1.36 ) }
    dend_42 { pt3dadd( 15.3081, 18.7778, 8.25299, 0.68 ) }
    dend_42 { pt3dadd( 16.3802, 21.2564, 8.75149, 0.68 ) }
    dend_42 { pt3dadd( 17.3902, 23.4825, 9.25054, 1.14 ) }
    dend_42 { pt3dadd( 18.91, 26.5977, 10.0562, 1.14 ) }
    dend_42 { pt3dadd( 19.7499, 28.3168, 10.5858, 1.14 ) }
    dend_42 { pt3dadd( 21.1052, 31.2326, 11.5886, 0.45 ) }
    dend_42 { pt3dadd( 21.9264, 33.1201, 12.306, 0.45 ) }
    dend_42 { pt3dadd( 22.9717, 35.387, 13.3009, 1.14 ) }
    dend_42 { pt3dadd( 23.8032, 37.1114, 14.2048, 0.91 ) }
    dend_42 { pt3dadd( 24.5014, 38.7426, 15.1417, 0.91 ) }
    dend_42 { pt3dadd( 25.0137, 40.7231, 16.1703, 0.45 ) }
    dend_42 { pt3dadd( 25.2458, 42.8813, 17.1777, 0.45 ) }
    dend_42 { pt3dadd( 25.3928, 45.5699, 18.2579, 0.45 ) }
    dend_42 { pt3dadd( 25.4928, 46.8218, 18.7635, 0.45 ) }
    dend_42 { pt3dadd( 25.7363, 49.6896, 19.9222, 0.91 ) }
    dend_42 { pt3dadd( 26.0058, 52.8425, 21.3479, 0.68 ) }
    dend_42 { pt3dadd( 26.0796, 54.0075, 21.9055, 0.68 ) }
    dend_42 { pt3dadd( 26.137, 56.6714, 23.0924, 1.36 ) }
    dend_42 { pt3dadd( 26.2783, 58.9759, 24.0818, 0.45 ) }
    dend_42 { pt3dadd( 26.5465, 61.5943, 25.2649, 0.91 ) }
    dend_42 { pt3dadd( 26.954, 64.1754, 26.4612, 0.45 ) }
    dend_42 { pt3dadd( 27.5219, 67.0673, 27.8001, 0.91 ) }
    dend_42 { pt3dadd( 28.0869, 69.8991, 29.0736, 1.14 ) }
    dend_42 { pt3dadd( 28.8557, 74.0494, 30.8522, 0.45 ) }
    dend_42 { pt3dadd( 29.4801, 77.3213, 32.2014, 0.45 ) }
    dend_42 { pt3dadd( 29.9399, 79.2686, 33.006, 1.59 ) }
    dend_42 { pt3dadd( 30.5039, 81.5842, 34.0169, 0.23 ) }
    dend_42 { pt3dadd( 31.2166, 84.893, 35.5791, 1.36 ) }
    dend_42 { pt3dadd( 31.7744, 87.9318, 37.043, 0.23 ) }
    dend_42 { pt3dadd( 32.1582, 90.7566, 38.3062, 0.23 ) }
    dend_42 { pt3dadd( 32.4259, 92.6654, 39.1274, 1.36 ) }
    dend_42 { pt3dadd( 32.9292, 96.6519, 40.8499, 0.23 ) }
    dend_42 { pt3dadd( 33.2319, 99.1317, 41.8952, 1.14 ) }
    dend_42 { pt3dadd( 33.3936, 100.582, 42.4895, 0.23 ) }
    dend_42 { pt3dadd( 33.67, 102.739, 43.4063, 0.91 ) }
    dend_42 { pt3dadd( 33.98, 105.259, 44.4506, 0.23 ) }
    dend_42 { pt3dadd( 34.1934, 107.262, 45.2328, 1.82 ) }
    dend_42 { pt3dadd( 34.4489, 109.92, 46.1633, 0.23 ) }
    dend_42 { pt3dadd( 34.6459, 112.584, 47.108, 1.14 ) }
    dend_42 { pt3dadd( 34.817, 115.031, 48.0781, 0.23 ) }
    dend_42 { pt3dadd( 34.9379, 116.847, 48.8246, 0.23 ) }
    dend_42 { pt3dadd( 35.1042, 120.36, 50.1789, 0.91 ) }
    dend_42 { pt3dadd( 35.1735, 122.044, 50.8287, 0.91 ) }
    dend_42 { pt3dadd( 35.3337, 124.906, 51.8392, 0.23 ) }
    dend_42 { pt3dadd( 35.6138, 127.463, 52.6578, 1.14 ) }
    dend_42 { pt3dadd( 35.8532, 128.99, 53.05, 1.14 ) }
    dend_42 { pt3dadd( 36.309, 130.855, 53.4976, 0.23 ) }
    dend_42 { pt3dadd( 36.7357, 132.122, 53.7526, 1.14 ) }
    dend_42 { pt3dadd( 37.3132, 133.664, 54.0324, 1.14 ) }
    dend_42 { pt3dadd( 38.4635, 136.729, 54.4404, 0.23 ) }
    dend_42 { pt3dadd( 39.2161, 138.952, 54.6656, 0.23 ) }
    dend_42 { pt3dadd( 39.8721, 141.165, 54.9286, 1.14 ) }
    dend_42 { pt3dadd( 40.2466, 142.595, 55.1349, 1.14 ) }
    dend_42 { pt3dadd( 40.8686, 145.105, 55.5272, 0.23 ) }
    dend_42 { pt3dadd( 41.1161, 146.27, 55.7447, 0.23 ) }
    dend_42 { pt3dadd( 41.4259, 148.165, 56.2113, 0.23 ) }
    dend_42 { pt3dadd( 41.8298, 150.955, 57.1846, 1.36 ) }
    dend_42 { pt3dadd( 42.2513, 153.561, 58.2126, 0.23 ) }
    dend_42 { pt3dadd( 42.6795, 155.519, 59.1052, 0.68 ) }
    dend_42 { pt3dadd( 43.1008, 156.786, 59.7889, 0.23 ) }
    dend_42 { pt3dadd( 44.282, 159.419, 61.4502, 1.14 ) }
    dend_42 { pt3dadd( 45.2815, 161.232, 62.7631, 0.23 ) }
    dend_42 { pt3dadd( 46.4085, 162.959, 64.0847, 1.14 ) }
    dend_42 { pt3dadd( 47.7312, 164.779, 65.5297, 0.23 ) }
    dend_42 { pt3dadd( 49.4166, 166.829, 67.2218, 1.14 ) }
    dend_42 { pt3dadd( 50.6035, 168.128, 68.2547, 0.23 ) }
    dend_42 { pt3dadd( 51.9316, 169.516, 69.2514, 1.14 ) }
    dend_42 { pt3dadd( 53.186, 170.981, 70.1763, 0.23 ) }
    dend_42 { pt3dadd( 53.6792, 171.726, 70.5998, 0.23 ) }
    dend_42 { pt3dadd( 54.2963, 173.295, 71.2473, 0.23 ) }
    dend_42 { pt3dadd( 54.5742, 174.379, 71.5546, 0.91 ) }
    dend_42 { pt3dadd( 54.8046, 175.5, 71.8259, 0.91 ) }
    dend_42 { pt3dadd( 55.1281, 177.442, 72.2351, 0.91 ) }
    dend_42 { pt3dadd( 55.4163, 180.271, 72.7675, 1.59 ) }
    dend_42 { pt3dadd( 55.6099, 183.689, 73.2952, 0.23 ) }
    dend_42 { pt3dadd( 55.7043, 185.99, 73.599, 1.36 ) }
    dend_42 { pt3dadd( 55.9499, 188.841, 73.8398, 0.23 ) }
    dend_42 { pt3dadd( 56.1119, 189.998, 73.8611, 0.23 ) }
    dend_42 { pt3dadd( 56.5651, 192.119, 73.7398, 1.14 ) }
    dend_42 { pt3dadd( 57.2117, 194.369, 73.4338, 0.23 ) }
    dend_42 { pt3dadd( 57.7934, 196.138, 73.0482, 1.14 ) }
    dend_42 { pt3dadd( 59.1771, 199.898, 72.0723, 0.23 ) }
    dend_42 { pt3dadd( 59.8733, 201.643, 71.563, 0.91 ) }
    dend_42 { pt3dadd( 61.0681, 204.417, 70.7658, 0.23 ) }
    dend_42 { pt3dadd( 61.8958, 206.243, 70.2464, 1.14 ) }
    dend_42 { pt3dadd( 62.5051, 207.75, 69.8352, 1.14 ) }
    dend_42 { pt3dadd( 63.2804, 210.221, 69.2255, 0.23 ) }
    dend_42 { pt3dadd( 63.7308, 212.106, 68.8857, 0.91 ) }
    dend_42 { pt3dadd( 63.9948, 213.392, 68.7533, 0.91 ) }
    dend_42 { pt3dadd( 64.3459, 215.416, 68.6457, 0.23 ) }
    dend_42 { pt3dadd( 64.7285, 218.055, 68.6234, 0.23 ) }
    dend_42 { pt3dadd( 64.9411, 219.608, 68.6392, 0.23 ) }
    dend_42 { pt3dadd( 65.3165, 222.288, 68.7127, 0.91 ) }
    dend_42 { pt3dadd( 65.953, 225.71, 68.8699, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_42 { pt3dadd( 66.3828, 227.621, 68.9769, 0.68 ) }
    dend_42 { pt3dadd( 66.9757, 229.898, 69.1267, 0.91 ) }
    dend_42 { pt3dadd( 67.5984, 231.963, 69.236, 0.23 ) }
    dend_42 { pt3dadd( 67.9435, 233.241, 69.2865, 0.68 ) }
    dend_42 { pt3dadd( 68.4258, 235.395, 69.3172, 0.23 ) }
    dend_42 { pt3dadd( 68.8298, 237.413, 69.3214, 0.68 ) }
    dend_42 { pt3dadd( 69.0673, 238.606, 69.3501, 0.23 ) }
    dend_42 { pt3dadd( 69.8467, 242.259, 69.5019, 0.91 ) }
    dend_42 { pt3dadd( 70.3399, 244.519, 69.6126, 0.23 ) }
    dend_42 { pt3dadd( 70.7419, 246.456, 69.6982, 0.91 ) }
    dend_42 { pt3dadd( 71.1654, 248.632, 69.7923, 0.23 ) }
    dend_42 { pt3dadd( 71.7696, 251.221, 69.9021, 1.14 ) }
    dend_42 { pt3dadd( 72.2661, 253.113, 70.0043, 0.23 ) }
    dend_42 { pt3dadd( 72.9866, 255.659, 70.1494, 1.14 ) }
    dend_42 { pt3dadd( 73.9737, 259.023, 70.3044, 0.23 ) }
    dend_42 { pt3dadd( 74.7965, 262.155, 70.4394, 0.45 ) }
    dend_42 { pt3dadd( 75.6588, 265.557, 70.5623, 0.91 ) }
    dend_42 { pt3dadd( 76.3375, 268.513, 70.684, 0.23 ) }
    dend_42 { pt3dadd( 76.745, 270.513, 70.7746, 0.91 ) }
    dend_42 { pt3dadd( 77.5025, 274.408, 70.9877, 0.23 ) }
    dend_42 { pt3dadd( 78.0812, 277.208, 71.1736, 1.14 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 11.9061, -26.6646, 6.80036, 1.59 ) }
    dend_17 { pt3dadd( 14.1441, -28.4422, 7.04445, 1.59 ) }
    dend_17 { pt3dadd( 16.7699, -30.5279, 7.33084, 1.59 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 24/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 11.9061, -26.6646, 6.80036, 0.23 ) }
    dend_16 { pt3dadd( 10.2256, -27.0678, 7.60853, 0.23 ) }
    dend_16 { pt3dadd( 9.27112, -27.3633, 7.97806, 0.91 ) }
    dend_16 { pt3dadd( 8.22386, -27.7663, 8.28634, 0.23 ) }
    dend_16 { pt3dadd( 7.26721, -28.192, 8.49085, 0.68 ) }
    dend_16 { pt3dadd( 6.31057, -28.7034, 8.64775, 0.68 ) }
    dend_16 { pt3dadd( 5.61145, -29.1413, 8.72993, 0.68 ) }
    dend_16 { pt3dadd( 4.72743, -29.8769, 8.71073, 0.23 ) }
    dend_16 { pt3dadd( 3.98519, -30.5827, 8.61171, 0.68 ) }
    dend_16 { pt3dadd( 3.42549, -31.1555, 8.4816, 0.23 ) }
    dend_16 { pt3dadd( 2.6052, -32.0522, 8.23656, 0.68 ) }
    dend_16 { pt3dadd( 1.88875, -32.8411, 7.99126, 0.23 ) }
    dend_16 { pt3dadd( 1.55826, -33.23, 7.86547, 0.91 ) }
    dend_16 { pt3dadd( 0.661274, -34.3917, 7.48839, 0.23 ) }
    dend_16 { pt3dadd( 0.132155, -35.1126, 7.24504, 0.91 ) }
    dend_16 { pt3dadd( -0.47994, -36.0044, 6.93102, 0.23 ) }
    dend_16 { pt3dadd( -0.957797, -36.7606, 6.65155, 0.91 ) }
    dend_16 { pt3dadd( -1.54755, -37.7468, 6.2885, 0.23 ) }
    dend_16 { pt3dadd( -2.48926, -39.3675, 5.72645, 0.91 ) }
    dend_16 { pt3dadd( -3.51037, -41.257, 5.12987, 0.23 ) }
    dend_16 { pt3dadd( -4.22318, -42.6316, 4.73756, 0.23 ) }
    dend_16 { pt3dadd( -4.82789, -43.8645, 4.42946, 0.91 ) }
    dend_16 { pt3dadd( -5.80672, -45.9921, 3.9611, 0.45 ) }
    dend_16 { pt3dadd( -6.56176, -47.6939, 3.64233, 0.45 ) }
    dend_16 { pt3dadd( -6.97678, -48.7515, 3.49727, 0.45 ) }
    dend_16 { pt3dadd( -7.35975, -49.8754, 3.38792, 0.91 ) }
    dend_16 { pt3dadd( -7.74513, -51.1784, 3.27977, 0.45 ) }
    dend_16 { pt3dadd( -8.11476, -52.6785, 3.17353, 0.23 ) }
    dend_16 { pt3dadd( -8.24056, -53.3723, 3.12703, 0.68 ) }
    dend_16 { pt3dadd( -8.64095, -55.6787, 2.93879, 0.45 ) }
    dend_16 { pt3dadd( -9.07996, -57.6394, 2.73442, 0.45 ) }
    dend_16 { pt3dadd( -9.36411, -58.7202, 2.60708, 0.45 ) }
    dend_16 { pt3dadd( -9.60113, -59.5904, 2.4968, 0.45 ) }
    dend_16 { pt3dadd( -10.1379, -61.6037, 2.2388, 0.68 ) }
    dend_16 { pt3dadd( -10.5513, -63.3435, 2.00705, 0.45 ) }
    dend_16 { pt3dadd( -10.8954, -65.1875, 1.76026, 0.45 ) }
    dend_16 { pt3dadd( -11.1261, -66.809, 1.55822, 0.23 ) }
    dend_16 { pt3dadd( -11.4034, -69.1146, 1.28098, 0.45 ) }
    dend_16 { pt3dadd( -11.6511, -71.7194, 0.972167, 0.23 ) }
    dend_16 { pt3dadd( -11.7369, -73.2518, 0.799682, 0.23 ) }
    dend_16 { pt3dadd( -11.7665, -74.8788, 0.610824, 0.68 ) }
    dend_16 { pt3dadd( -11.7257, -77.2603, 0.301279, 0.45 ) }
    dend_16 { pt3dadd( -11.6988, -79.4594, -0.026803, 0.68 ) }
    dend_16 { pt3dadd( -11.7264, -80.6408, -0.21359, 0.68 ) }
    dend_16 { pt3dadd( -11.7743, -81.3349, -0.329596, 0.68 ) }
    dend_16 { pt3dadd( -12.0815, -84.0107, -0.788302, 0.23 ) }
    dend_16 { pt3dadd( -12.3674, -86.0656, -1.15758, 0.45 ) }
    dend_16 { pt3dadd( -12.5821, -87.6969, -1.46465, 0.45 ) }
    dend_16 { pt3dadd( -12.7306, -88.8477, -1.68777, 0.45 ) }
    dend_16 { pt3dadd( -12.9118, -90.1217, -1.94877, 0.23 ) }
    dend_16 { pt3dadd( -13.2849, -92.1522, -2.34198, 0.23 ) }
    dend_16 { pt3dadd( -16.7273, -99.2808, -2.17078, 0.23 ) }
    dend_16 { pt3dadd( -19.8542, -106.568, -2.09438, 0.23 ) }
    dend_16 { pt3dadd( -23.8317, -113.383, -1.88018, 0.23 ) }
    dend_16 { pt3dadd( -28.6541, -119.55, -2.31898, 0.23 ) }
    dend_16 { pt3dadd( -34.1246, -125.051, -1.50139, 0.23 ) }
    dend_16 { pt3dadd( -38.9311, -131.22, -2.06922, 0.23 ) }
    dend_16 { pt3dadd( -43.9895, -137.029, -3.36754, 0.23 ) }
    dend_16 { pt3dadd( -49.5743, -141.992, -5.44622, 0.23 ) }
    dend_16 { pt3dadd( -54.9819, -147.144, -7.57121, 0.23 ) }
    dend_16 { pt3dadd( -60.2338, -152.748, -8.92014, 0.23 ) }
    dend_16 { pt3dadd( -65.0859, -158.21, -11.6018, 0.23 ) }
    dend_16 { pt3dadd( -69.5696, -163.697, -14.8155, 0.23 ) }
    dend_16 { pt3dadd( -73.584, -169.048, -18.7657, 0.23 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 88/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -42.2778, 29.6376, 15.4299, 0.68 ) }
    dend_11 { pt3dadd( -40.767, 31.79, 15.3261, 0.68 ) }
    dend_11 { pt3dadd( -38.8505, 34.5203, 15.1944, 0.23 ) }
    dend_11 { pt3dadd( -37.8865, 35.8937, 15.1281, 0.23 ) }
    dend_11 { pt3dadd( -36.4908, 37.8821, 15.0322, 0.23 ) }
    dend_11 { pt3dadd( -35.2402, 39.6637, 14.9463, 0.68 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 94/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -42.2778, 29.6376, 15.4299, 0.68 ) }
    dend_6 { pt3dadd( -43.6677, 30.8569, 15.3271, 0.68 ) }
    dend_6 { pt3dadd( -46.917, 33.62, 15.0852, 0.45 ) }
    dend_6 { pt3dadd( -48.1056, 34.5188, 15.0312, 0.45 ) }
    dend_6 { pt3dadd( -49.4755, 35.4888, 14.9983, 1.36 ) }
    dend_6 { pt3dadd( -51.0561, 36.5979, 14.9782, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_6 { pt3dadd( -51.8123, 37.1519, 14.9732, 0.23 ) }
    dend_6 { pt3dadd( -54.0214, 38.8178, 15.0392, 1.14 ) }
    dend_6 { pt3dadd( -55.8305, 40.1354, 15.1637, 0.23 ) }
    dend_6 { pt3dadd( -57.9829, 41.5086, 15.3856, 1.14 ) }
    dend_6 { pt3dadd( -59.9646, 42.5902, 15.6841, 0.45 ) }
    dend_6 { pt3dadd( -61.7788, 43.4578, 16.0503, 1.14 ) }
    dend_6 { pt3dadd( -63.6085, 44.2433, 16.4971, 0.23 ) }
    dend_6 { pt3dadd( -65.1859, 44.8581, 16.9547, 0.68 ) }
    dend_6 { pt3dadd( -67.3928, 45.6218, 17.5991, 0.68 ) }
    dend_6 { pt3dadd( -69.0876, 46.071, 18.0483, 0.23 ) }
    dend_6 { pt3dadd( -70.9294, 46.4658, 18.4578, 0.23 ) }
    dend_6 { pt3dadd( -72.641, 46.7863, 18.7674, 0.91 ) }
    dend_6 { pt3dadd( -73.8873, 47.0229, 18.9081, 0.23 ) }
    dend_6 { pt3dadd( -76.3892, 47.553, 19.0405, 1.36 ) }
    dend_6 { pt3dadd( -78.9612, 48.1356, 19.0642, 0.23 ) }
    dend_6 { pt3dadd( -81.4065, 48.6815, 18.9962, 0.23 ) }
    dend_6 { pt3dadd( -82.6328, 48.9695, 18.9121, 0.68 ) }
    dend_6 { pt3dadd( -84.7255, 49.5521, 18.7149, 1.36 ) }
    dend_6 { pt3dadd( -86.3514, 50.1452, 18.5229, 0.23 ) }
    dend_6 { pt3dadd( -87.2786, 50.5859, 18.4249, 0.23 ) }
    dend_6 { pt3dadd( -88.2771, 51.2516, 18.3286, 0.91 ) }
    dend_6 { pt3dadd( -89.835, 52.4881, 18.2321, 0.91 ) }
    dend_6 { pt3dadd( -91.1311, 53.6077, 18.2042, 1.36 ) }
    dend_6 { pt3dadd( -93.023, 55.2974, 18.3296, 0.23 ) }
    dend_6 { pt3dadd( -94.4003, 56.5468, 18.4793, 1.14 ) }
    dend_6 { pt3dadd( -96.3278, 58.4, 18.7331, 0.23 ) }
    dend_6 { pt3dadd( -98.0073, 60.0906, 18.9793, 0.91 ) }
    dend_6 { pt3dadd( -98.7198, 60.8378, 19.0963, 0.91 ) }
    dend_6 { pt3dadd( -100.31, 62.4594, 19.3814, 0.23 ) }
    dend_6 { pt3dadd( -100.967, 63.0958, 19.5244, 0.23 ) }
    dend_6 { pt3dadd( -102.817, 64.8292, 19.9669, 1.14 ) }
    dend_6 { pt3dadd( -103.637, 65.5959, 20.154, 0.23 ) }
    dend_6 { pt3dadd( -104.944, 66.8393, 20.4729, 0.23 ) }
    dend_6 { pt3dadd( -106.338, 68.0574, 20.8448, 0.91 ) }
    dend_6 { pt3dadd( -108.653, 69.8256, 21.4732, 0.23 ) }
    dend_6 { pt3dadd( -110.439, 70.9701, 22.0105, 0.23 ) }
    dend_6 { pt3dadd( -112.445, 72.0728, 22.6437, 0.91 ) }
    dend_6 { pt3dadd( -114.113, 72.9138, 23.1613, 0.23 ) }
    dend_6 { pt3dadd( -115.63, 73.5922, 23.5996, 0.68 ) }
    dend_6 { pt3dadd( -117.36, 74.332, 24.0434, 0.23 ) }
    dend_6 { pt3dadd( -118.845, 74.9129, 24.3655, 1.14 ) }
    dend_6 { pt3dadd( -121.42, 75.878, 24.8645, 0.23 ) }
    dend_6 { pt3dadd( -122.682, 76.3477, 25.0826, 0.68 ) }
    dend_6 { pt3dadd( -124.721, 77.2082, 25.353, 0.23 ) }
    dend_6 { pt3dadd( -125.917, 77.7994, 25.4766, 0.23 ) }
    dend_6 { pt3dadd( -127.814, 78.8498, 25.6288, 0.23 ) }
    dend_6 { pt3dadd( -129.521, 79.8886, 25.7601, 1.59 ) }
    dend_6 { pt3dadd( -131.509, 81.1714, 25.9047, 0.45 ) }
    dend_6 { pt3dadd( -132.964, 82.2116, 25.9837, 0.45 ) }
    dend_6 { pt3dadd( -133.719, 82.8125, 26.0006, 0.45 ) }
    dend_6 { pt3dadd( -136.077, 84.8909, 25.9776, 0.68 ) }
    dend_6 { pt3dadd( -137.932, 86.7608, 25.8618, 1.14 ) }
    dend_6 { pt3dadd( -139.675, 88.6025, 25.6566, 0.23 ) }
    dend_6 { pt3dadd( -141.204, 90.3137, 25.374, 0.23 ) }
    dend_6 { pt3dadd( -142.224, 91.5288, 25.1186, 0.23 ) }
    dend_6 { pt3dadd( -143.564, 93.2948, 24.6967, 0.91 ) }
    dend_6 { pt3dadd( -144.793, 95.1092, 24.1858, 0.23 ) }
    dend_6 { pt3dadd( -145.619, 96.38, 23.7963, 0.91 ) }
    dend_6 { pt3dadd( -146.969, 98.503, 23.1921, 0.23 ) }
    dend_6 { pt3dadd( -148.277, 100.464, 22.6871, 1.36 ) }
    dend_6 { pt3dadd( -149.385, 101.986, 22.3351, 0.91 ) }
    dend_6 { pt3dadd( -150.828, 103.867, 21.9198, 0.23 ) }
    dend_6 { pt3dadd( -151.784, 105.151, 21.6354, 0.91 ) }
    dend_6 { pt3dadd( -152.784, 106.615, 21.3078, 0.23 ) }
    dend_6 { pt3dadd( -153.212, 107.279, 21.1401, 1.14 ) }
    dend_6 { pt3dadd( -153.982, 108.589, 20.7311, 1.14 ) }
    dend_6 { pt3dadd( -154.861, 110.2, 20.1425, 0.23 ) }
    dend_6 { pt3dadd( -155.552, 111.71, 19.5721, 0.23 ) }
    dend_6 { pt3dadd( -155.706, 112.063, 19.4366, 0.91 ) }
    dend_6 { pt3dadd( -156.37, 113.437, 18.9264, 0.91 ) }
    dend_6 { pt3dadd( -156.962, 114.525, 18.5573, 0.91 ) }
    dend_6 { pt3dadd( -158.331, 116.594, 17.9663, 0.23 ) }
    dend_6 { pt3dadd( -159.03, 117.486, 17.7545, 0.23 ) }
    dend_6 { pt3dadd( -160.007, 118.553, 17.5455, 0.91 ) }
    dend_6 { pt3dadd( -161.689, 120.285, 17.2573, 0.23 ) }
    dend_6 { pt3dadd( -162.839, 121.373, 17.1132, 0.91 ) }
    dend_6 { pt3dadd( -164.745, 123.073, 16.947, 0.23 ) }
    dend_6 { pt3dadd( -165.252, 123.504, 16.9134, 0.91 ) }
    dend_6 { pt3dadd( -166.585, 124.67, 16.7919, 0.91 ) }
    dend_6 { pt3dadd( -167.546, 125.577, 16.6699, 0.45 ) }
    dend_6 { pt3dadd( -168.589, 126.712, 16.4613, 0.23 ) }
    dend_6 { pt3dadd( -169.959, 128.45, 16.0604, 0.23 ) }
    dend_6 { pt3dadd( -170.66, 129.41, 15.8163, 0.68 ) }
    dend_6 { pt3dadd( -171.72, 130.907, 15.4217, 0.23 ) }
    dend_6 { pt3dadd( -173.057, 132.995, 14.8154, 0.23 ) }
    dend_6 { pt3dadd( -174.188, 134.842, 14.2206, 0.68 ) }
    dend_6 { pt3dadd( -174.877, 136.185, 13.7406, 0.68 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 87/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 127.397, 149.379, 24.7562, 0.23 ) }
    dend_54 { pt3dadd( 131.83, 156.7, 22.7466, 0.23 ) }
    dend_54 { pt3dadd( 134.594, 165.027, 21.4988, 0.23 ) }
    dend_54 { pt3dadd( 139.66, 172.053, 19.9754, 0.23 ) }
    dend_54 { pt3dadd( 144.436, 178.215, 16.0984, 0.23 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 92/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 127.397, 149.379, 24.7562, 0.23 ) }
    dend_53 { pt3dadd( 132.7, 156.108, 30.1785, 0.23 ) }
    dend_53 { pt3dadd( 138.693, 163.086, 34.3972, 0.23 ) }
    dend_53 { pt3dadd( 145.986, 168.331, 38.8328, 0.23 ) }
    dend_53 { pt3dadd( 154.202, 171.159, 43.6096, 0.23 ) }
    dend_53 { pt3dadd( 163.117, 173.309, 47.2851, 0.23 ) }
    dend_53 { pt3dadd( 171.65, 175.119, 51.9307, 0.23 ) }
    dend_53 { pt3dadd( 181.149, 175.968, 54.3756, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_53 { pt3dadd( 190.836, 175.455, 56.0179, 0.23 ) }
    dend_53 { pt3dadd( 200.359, 176.015, 58.4465, 0.23 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 2/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 110.741, 321.714, 48.6166, 0.23 ) }
    dend_49 { pt3dadd( 110.987, 322.777, 47.8168, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 4/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 110.741, 321.714, 48.6166, 0.23 ) }
    dend_48 { pt3dadd( 109.454, 320.929, 49.9093, 0.23 ) }
    dend_48 { pt3dadd( 108.814, 320.587, 50.5723, 0.23 ) }
    dend_48 { pt3dadd( 108.259, 320.355, 51.2032, 0.23 ) }
    dend_48 { pt3dadd( 106.903, 319.849, 52.845, 0.23 ) }
    dend_48 { pt3dadd( 106.378, 319.669, 53.4624, 1.14 ) }
    dend_48 { pt3dadd( 105.37, 319.346, 54.5779, 0.68 ) }
    dend_48 { pt3dadd( 104.783, 319.138, 55.1944, 0.23 ) }
    dend_48 { pt3dadd( 103.736, 318.738, 56.3401, 1.14 ) }
    dend_48 { pt3dadd( 102.474, 318.202, 57.7412, 0.23 ) }
    dend_48 { pt3dadd( 101.674, 317.85, 58.6432, 0.23 ) }
    dend_48 { pt3dadd( 100.725, 317.423, 59.6559, 0.45 ) }
    dend_48 { pt3dadd( 100.052, 317.146, 60.3226, 0.23 ) }
    dend_48 { pt3dadd( 99.6346, 316.999, 60.7225, 0.68 ) }
    dend_48 { pt3dadd( 98.2387, 316.644, 61.9487, 0.23 ) }
    dend_48 { pt3dadd( 97.1633, 316.453, 62.8775, 0.23 ) }
    dend_48 { pt3dadd( 96.1971, 316.376, 63.7479, 0.91 ) }
    dend_48 { pt3dadd( 95.1804, 316.474, 64.6444, 0.23 ) }
    dend_48 { pt3dadd( 94.4897, 316.683, 65.1871, 0.23 ) }
    dend_48 { pt3dadd( 93.5357, 317.205, 65.9034, 0.68 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 78.0812, 277.208, 71.1736, 0.23 ) }
    dend_44 { pt3dadd( 77.6924, 280.069, 72.3526, 0.23 ) }
    dend_44 { pt3dadd( 77.4094, 282.151, 73.2109, 1.14 ) }
    dend_44 { pt3dadd( 77.1175, 284.299, 74.096, 0.23 ) }
    dend_44 { pt3dadd( 76.8529, 286.247, 74.8987, 0.68 ) }
    dend_44 { pt3dadd( 76.5772, 288.276, 75.7348, 0.23 ) }
    dend_44 { pt3dadd( 76.2875, 290.407, 76.6133, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 31/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 78.0812, 277.208, 71.1736, 0.23 ) }
    dend_43 { pt3dadd( 77.6262, 278.952, 71.187, 0.23 ) }
    dend_43 { pt3dadd( 77.2559, 280.159, 71.2014, 0.23 ) }
    dend_43 { pt3dadd( 76.7628, 281.659, 71.2258, 0.91 ) }
    dend_43 { pt3dadd( 76.4583, 282.518, 71.2428, 0.91 ) }
    dend_43 { pt3dadd( 75.9813, 283.782, 71.2712, 0.23 ) }
    dend_43 { pt3dadd( 75.3912, 285.331, 71.3069, 0.91 ) }
    dend_43 { pt3dadd( 74.88, 286.673, 71.3184, 0.23 ) }
    dend_43 { pt3dadd( 74.6549, 287.335, 71.3024, 0.23 ) }
    dend_43 { pt3dadd( 74.3174, 288.315, 71.2545, 1.14 ) }
    dend_43 { pt3dadd( 73.8552, 289.689, 71.1581, 0.23 ) }
    dend_43 { pt3dadd( 73.4981, 290.733, 71.0543, 0.23 ) }
    dend_43 { pt3dadd( 73.0705, 292.085, 70.8895, 0.68 ) }
    dend_43 { pt3dadd( 72.685, 293.455, 70.7082, 0.23 ) }
    dend_43 { pt3dadd( 72.4627, 294.275, 70.6008, 0.23 ) }
    dend_43 { pt3dadd( 72.2636, 295.012, 70.5087, 0.23 ) }
    dend_43 { pt3dadd( 71.8855, 296.514, 70.3071, 1.14 ) }
    dend_43 { pt3dadd( 71.556, 297.825, 70.1374, 0.23 ) }
    dend_43 { pt3dadd( 71.1339, 299.555, 69.9408, 0.23 ) }
    dend_43 { pt3dadd( 70.9041, 300.664, 69.8178, 0.23 ) }
    dend_43 { pt3dadd( 70.818, 301.425, 69.7262, 0.91 ) }
    dend_43 { pt3dadd( 70.7911, 303.639, 69.4493, 0.23 ) }
    dend_43 { pt3dadd( 70.893, 304.54, 69.3329, 1.14 ) }
    dend_43 { pt3dadd( 71.1752, 305.618, 69.1839, 1.14 ) }
    dend_43 { pt3dadd( 71.7539, 307.032, 68.9889, 0.23 ) }
    dend_43 { pt3dadd( 72.5094, 308.494, 68.7985, 0.91 ) }
    dend_43 { pt3dadd( 73.2285, 309.705, 68.6429, 0.23 ) }
    dend_43 { pt3dadd( 73.9115, 310.751, 68.5208, 0.23 ) }
    dend_43 { pt3dadd( 75.0026, 312.325, 68.3264, 0.45 ) }
    dend_43 { pt3dadd( 75.8993, 313.634, 68.1685, 0.45 ) }
    dend_43 { pt3dadd( 76.7148, 314.888, 68.0277, 0.23 ) }
    dend_43 { pt3dadd( 77.1325, 315.599, 67.9516, 0.45 ) }
    dend_43 { pt3dadd( 77.7039, 316.69, 67.8633, 0.23 ) }
    dend_43 { pt3dadd( 77.9292, 317.231, 67.8343, 0.91 ) }
    dend_43 { pt3dadd( 78.7181, 319.793, 67.8041, 0.23 ) }
    dend_43 { pt3dadd( 78.9209, 320.626, 67.8209, 0.23 ) }
    dend_43 { pt3dadd( 79.2183, 322.116, 67.8852, 0.91 ) }
    dend_43 { pt3dadd( 79.4674, 323.649, 67.9783, 0.23 ) }
    dend_43 { pt3dadd( 79.7065, 325.353, 68.0888, 0.91 ) }
    dend_43 { pt3dadd( 79.9352, 327.244, 68.2119, 0.23 ) }
    dend_43 { pt3dadd( 80.0363, 328.488, 68.2963, 1.14 ) }
    dend_43 { pt3dadd( 80.1194, 330.205, 68.3994, 0.23 ) }
    dend_43 { pt3dadd( 80.1334, 330.875, 68.418, 0.68 ) }
    dend_43 { pt3dadd( 80.0689, 332.309, 68.3779, 0.91 ) }
    dend_43 { pt3dadd( 80.0032, 333.281, 68.3097, 0.23 ) }
    dend_43 { pt3dadd( 79.8663, 334.245, 68.2022, 0.23 ) }
    dend_43 { pt3dadd( 79.6029, 335.39, 68.0665, 1.14 ) }
    dend_43 { pt3dadd( 79.2725, 336.429, 67.9454, 0.23 ) }
    dend_43 { pt3dadd( 78.4924, 338.611, 67.7057, 0.23 ) }
    dend_43 { pt3dadd( 78.2647, 339.267, 67.628, 0.23 ) }
    dend_43 { pt3dadd( 77.9873, 340.178, 67.497, 0.91 ) }
    dend_43 { pt3dadd( 77.6466, 341.68, 67.1712, 0.23 ) }
    dend_43 { pt3dadd( 77.3967, 342.954, 66.8828, 0.23 ) }
    dend_43 { pt3dadd( 77.2938, 343.608, 66.7355, 0.23 ) }
    dend_43 { pt3dadd( 77.1491, 345.335, 66.2851, 0.91 ) }
    dend_43 { pt3dadd( 77.0038, 347.027, 65.7747, 0.23 ) }
    dend_43 { pt3dadd( 76.9559, 348.735, 65.1203, 0.23 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 88/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 16.7699, -30.5279, 7.33084, 0.91 ) }
    dend_19 { pt3dadd( 18.0613, -32.6493, 7.16534, 0.91 ) }
    dend_19 { pt3dadd( 18.9311, -34.1098, 7.11639, 0.91 ) }
    dend_19 { pt3dadd( 19.8275, -35.6149, 7.09789, 0.91 ) }
    dend_19 { pt3dadd( 21.5595, -38.5847, 7.08614, 0.91 ) }
    dend_19 { pt3dadd( 22.9008, -40.7184, 7.12904, 0.91 ) }
    dend_19 { pt3dadd( 24.7421, -43.4522, 7.22666, 0.91 ) }
    dend_19 { pt3dadd( 25.9764, -45.1612, 7.2595, 0.91 ) }
    dend_19 { pt3dadd( 27.1364, -46.6535, 7.26838, 0.91 ) }
    dend_19 { pt3dadd( 29.1112, -49.1548, 7.24708, 1.14 ) }
    dend_19 { pt3dadd( 32.0795, -53.0325, 7.14193, 0.68 ) }
    dend_19 { pt3dadd( 34.4518, -56.1403, 6.96544, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_19 { pt3dadd( 37.2024, -59.7893, 6.64938, 0.68 ) }
    dend_19 { pt3dadd( 38.8567, -62.0194, 6.41623, 1.14 ) }
    dend_19 { pt3dadd( 40.6373, -64.5033, 6.13343, 0.68 ) }
    dend_19 { pt3dadd( 42.0697, -66.6745, 5.85531, 0.68 ) }
    dend_19 { pt3dadd( 42.6091, -67.6584, 5.70983, 1.14 ) }
    dend_19 { pt3dadd( 44.0325, -70.9351, 5.24931, 0.68 ) }
    dend_19 { pt3dadd( 44.948, -73.5495, 4.97227, 0.68 ) }
    dend_19 { pt3dadd( 45.423, -74.8731, 4.82765, 0.68 ) }
    dend_19 { pt3dadd( 46.1472, -76.6289, 4.63305, 0.68 ) }
    dend_19 { pt3dadd( 47.1904, -78.9505, 4.4204, 1.14 ) }
    dend_19 { pt3dadd( 48.9512, -82.7719, 4.08765, 0.68 ) }
    dend_19 { pt3dadd( 50.4272, -85.9595, 3.86577, 0.68 ) }
    dend_19 { pt3dadd( 51.9443, -88.8835, 3.7448, 0.68 ) }
    dend_19 { pt3dadd( 53.9419, -92.0402, 3.71163, 1.14 ) }
    dend_19 { pt3dadd( 55.2501, -93.7163, 3.73599, 0.45 ) }
    dend_19 { pt3dadd( 56.572, -95.1543, 3.76059, 1.14 ) }
    dend_19 { pt3dadd( 58.1013, -96.6135, 3.72631, 0.45 ) }
    dend_19 { pt3dadd( 60.1563, -98.4923, 3.54423, 0.45 ) }
    dend_19 { pt3dadd( 62.467, -100.651, 3.22679, 0.45 ) }
    dend_19 { pt3dadd( 64.7875, -102.852, 2.77059, 0.45 ) }
    dend_19 { pt3dadd( 66.8718, -104.868, 2.26152, 0.45 ) }
    dend_19 { pt3dadd( 69.7458, -107.817, 1.51334, 0.68 ) }
    dend_19 { pt3dadd( 71.6604, -110.024, 1.01936, 0.68 ) }
    dend_19 { pt3dadd( 73.3548, -112.293, 0.681764, 0.68 ) }
    dend_19 { pt3dadd( 75.0728, -114.869, 0.458072, 0.68 ) }
    dend_19 { pt3dadd( 75.9624, -116.366, 0.409011, 0.68 ) }
    dend_19 { pt3dadd( 77.335, -119.045, 0.443665, 0.91 ) }
    dend_19 { pt3dadd( 78.665, -122.329, 0.566747, 0.45 ) }
    dend_19 { pt3dadd( 79.9151, -126.241, 0.702096, 0.68 ) }
    dend_19 { pt3dadd( 80.308, -127.7, 0.703853, 0.68 ) }
    dend_19 { pt3dadd( 80.8846, -130.235, 0.609705, 0.68 ) }
    dend_19 { pt3dadd( 81.3922, -132.817, 0.403753, 0.68 ) }
    dend_19 { pt3dadd( 82.0001, -136.232, -0.0716207, 0.68 ) }
    dend_19 { pt3dadd( 82.4209, -138.7, -0.53745, 0.68 ) }
    dend_19 { pt3dadd( 82.8537, -141.502, -1.13573, 0.68 ) }
    dend_19 { pt3dadd( 83.1569, -143.433, -1.53316, 0.68 ) }
    dend_19 { pt3dadd( 83.5445, -145.619, -1.99185, 0.91 ) }
    dend_19 { pt3dadd( 84.0805, -148.214, -2.54056, 0.68 ) }
    dend_19 { pt3dadd( 84.4211, -149.723, -2.88428, 0.23 ) }
    dend_19 { pt3dadd( 84.6314, -150.756, -3.11784, 0.23 ) }
    dend_19 { pt3dadd( 84.8527, -152.028, -3.37926, 0.23 ) }
    dend_19 { pt3dadd( 85.231, -154.293, -3.81636, 0.45 ) }
    dend_19 { pt3dadd( 85.612, -156.535, -4.21108, 0.45 ) }
    dend_19 { pt3dadd( 86.1481, -159.537, -4.70308, 0.45 ) }
    dend_19 { pt3dadd( 86.5838, -161.814, -5.06171, 0.91 ) }
    dend_19 { pt3dadd( 87.2469, -165.105, -5.56176, 0.68 ) }
    dend_19 { pt3dadd( 87.6013, -167.043, -5.83679, 0.68 ) }
    dend_19 { pt3dadd( 87.9725, -169.905, -6.20759, 0.23 ) }
    dend_19 { pt3dadd( 88.0362, -171.08, -6.34299, 0.23 ) }
    dend_19 { pt3dadd( 88.0242, -171.942, -6.43073, 0.23 ) }
    dend_19 { pt3dadd( 87.8349, -174.092, -6.67281, 0.23 ) }
    dend_19 { pt3dadd( 87.2335, -177.298, -7.11349, 0.45 ) }
    dend_19 { pt3dadd( 86.4556, -180.043, -7.56099, 0.45 ) }
    dend_19 { pt3dadd( 85.2483, -183.29, -8.18054, 0.45 ) }
    dend_19 { pt3dadd( 84.741, -184.479, -8.43102, 0.23 ) }
    dend_19 { pt3dadd( 83.9003, -186.25, -8.80976, 0.23 ) }
    dend_19 { pt3dadd( 83.0107, -187.955, -9.18823, 0.45 ) }
    dend_19 { pt3dadd( 81.7154, -190.284, -9.73125, 0.23 ) }
    dend_19 { pt3dadd( 79.8447, -193.858, -10.5922, 0.45 ) }
    dend_19 { pt3dadd( 78.7314, -196.193, -11.1261, 0.68 ) }
    dend_19 { pt3dadd( 77.8215, -198.377, -11.5703, 0.23 ) }
    dend_19 { pt3dadd( 77.3735, -199.717, -11.8035, 0.23 ) }
    dend_19 { pt3dadd( 77.0287, -201.139, -11.992, 0.68 ) }
    dend_19 { pt3dadd( 76.6145, -204.075, -12.3173, 0.23 ) }
    dend_19 { pt3dadd( 76.5289, -206.323, -12.5428, 0.23 ) }
    dend_19 { pt3dadd( 76.5807, -208.263, -12.7583, 0.68 ) }
    dend_19 { pt3dadd( 76.7038, -210.507, -13.0479, 0.23 ) }
    dend_19 { pt3dadd( 76.8944, -213.574, -13.3763, 0.23 ) }
    dend_19 { pt3dadd( 77.0327, -216.387, -13.6099, 0.68 ) }
    dend_19 { pt3dadd( 77.0917, -218.646, -13.7976, 0.45 ) }
    dend_19 { pt3dadd( 77.0815, -221.11, -14.0525, 0.68 ) }
    dend_19 { pt3dadd( 76.9567, -223.783, -14.3707, 0.45 ) }
    dend_19 { pt3dadd( 76.7257, -225.978, -14.6605, 0.23 ) }
    dend_19 { pt3dadd( 76.5003, -227.237, -14.8376, 0.23 ) }
    dend_19 { pt3dadd( 76.0883, -229.211, -15.1055, 0.45 ) }
    dend_19 { pt3dadd( 75.4661, -232.294, -15.451, 0.45 ) }
    dend_19 { pt3dadd( 74.9104, -235.409, -15.7334, 0.45 ) }
    dend_19 { pt3dadd( 74.3697, -238.785, -16.013, 0.45 ) }
    dend_19 { pt3dadd( 73.8931, -241.898, -16.3118, 0.45 ) }
    dend_19 { pt3dadd( 73.6443, -243.858, -16.5086, 0.45 ) }
    dend_19 { pt3dadd( 73.3414, -246.583, -16.8014, 0.45 ) }
    dend_19 { pt3dadd( 73.0689, -249.748, -17.2278, 0.45 ) }
    dend_19 { pt3dadd( 72.7821, -253.606, -17.8326, 0.91 ) }
    dend_19 { pt3dadd( 72.6553, -256.052, -18.2323, 0.45 ) }
    dend_19 { pt3dadd( 72.5927, -257.973, -18.5351, 0.68 ) }
    dend_19 { pt3dadd( 72.5229, -261.507, -19.0596, 0.45 ) }
    dend_19 { pt3dadd( 72.5025, -263.531, -19.3425, 0.45 ) }
    dend_19 { pt3dadd( 72.5256, -265.92, -19.6147, 1.14 ) }
    dend_19 { pt3dadd( 72.5879, -268.986, -19.8731, 0.23 ) }
    dend_19 { pt3dadd( 72.6271, -271.486, -20.0027, 0.23 ) }
    dend_19 { pt3dadd( 72.6187, -273.572, -20.0666, 0.23 ) }
    dend_19 { pt3dadd( 72.6377, -275.949, -20.1031, 0.45 ) }
    dend_19 { pt3dadd( 72.651, -278.039, -20.2068, 0.68 ) }
    dend_19 { pt3dadd( 72.639, -279.632, -20.3929, 0.45 ) }
    dend_19 { pt3dadd( 72.6042, -281.084, -20.6611, 0.68 ) }
    dend_19 { pt3dadd( 72.6024, -282.214, -20.9025, 0.68 ) }
    dend_19 { pt3dadd( 72.6426, -283.595, -21.2077, 0.68 ) }
    dend_19 { pt3dadd( 72.7735, -286.222, -21.7128, 0.45 ) }
    dend_19 { pt3dadd( 72.9684, -289.047, -22.1737, 0.45 ) }
    dend_19 { pt3dadd( 73.1188, -290.974, -22.4207, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_19 { pt3dadd( 73.2944, -293.588, -22.6996, 0.91 ) }
    dend_19 { pt3dadd( 73.4407, -296.212, -22.9335, 0.23 ) }
    dend_19 { pt3dadd( 73.5398, -299.062, -23.1428, 0.68 ) }
    dend_19 { pt3dadd( 73.5704, -300.209, -23.2133, 0.68 ) }
    dend_19 { pt3dadd( 73.5777, -302.794, -23.4165, 0.23 ) }
    dend_19 { pt3dadd( 73.398, -305.128, -23.7022, 0.68 ) }
    dend_19 { pt3dadd( 73.0667, -306.741, -24.0745, 0.23 ) }
    dend_19 { pt3dadd( 72.8662, -307.391, -24.3031, 0.68 ) }
    dend_19 { pt3dadd( 72.4037, -308.758, -24.9194, 0.23 ) }
    dend_19 { pt3dadd( 71.7677, -310.59, -25.8389, 0.68 ) }
    dend_19 { pt3dadd( 71.0707, -312.837, -27.0337, 0.23 ) }
    dend_19 { pt3dadd( 70.5762, -315.012, -28.1324, 0.68 ) }
    dend_19 { pt3dadd( 70.2583, -317.442, -29.2855, 0.23 ) }
    dend_19 { pt3dadd( 70.2914, -319.016, -29.9558, 0.45 ) }
    dend_19 { pt3dadd( 70.7196, -321.202, -30.7481, 0.45 ) }
    dend_19 { pt3dadd( 71.3629, -323.03, -31.3064, 0.45 ) }
    dend_19 { pt3dadd( 72.3602, -325.292, -31.8843, 0.45 ) }
    dend_19 { pt3dadd( 72.9645, -326.493, -32.1454, 0.91 ) }
    dend_19 { pt3dadd( 74.2564, -328.866, -32.6732, 0.23 ) }
    dend_19 { pt3dadd( 75.4957, -331.225, -33.2151, 0.68 ) }
    dend_19 { pt3dadd( 76.8158, -333.99, -33.8834, 0.45 ) }
    dend_19 { pt3dadd( 77.7185, -336.291, -34.4753, 0.45 ) }
    dend_19 { pt3dadd( 78.2224, -338.028, -34.8956, 0.23 ) }
    dend_19 { pt3dadd( 78.5135, -339.63, -35.2402, 0.68 ) }
    dend_19 { pt3dadd( 78.6007, -341.524, -35.5807, 0.23 ) }
    dend_19 { pt3dadd( 78.4613, -343.278, -35.815, 0.23 ) }
    dend_19 { pt3dadd( 78.106, -345.269, -35.9963, 0.23 ) }
    dend_19 { pt3dadd( 77.3887, -347.949, -36.125, 0.23 ) }
    dend_19 { pt3dadd( 76.7149, -349.792, -36.0685, 0.23 ) }
    dend_19 { pt3dadd( 75.6562, -351.989, -35.7175, 0.23 ) }
    dend_19 { pt3dadd( 74.6991, -353.832, -35.3129, 0.23 ) }
    dend_19 { pt3dadd( 74.0001, -355.05, -34.9525, 0.23 ) }
    dend_19 { pt3dadd( 73.3012, -356.015, -34.5667, 0.68 ) }
    dend_19 { pt3dadd( 71.7361, -357.591, -33.6517, 0.23 ) }
    dend_19 { pt3dadd( 69.7112, -359.062, -32.3137, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 35/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 16.7699, -30.5279, 7.33084, 0.45 ) }
    dend_18 { pt3dadd( 16.7829, -32.0286, 5.7643, 0.45 ) }
    dend_18 { pt3dadd( 16.6637, -33.8592, 4.00697, 0.45 ) }
    dend_18 { pt3dadd( 16.5432, -35.1554, 2.943, 0.45 ) }
    dend_18 { pt3dadd( 16.5013, -36.0856, 2.33619, 0.45 ) }
    dend_18 { pt3dadd( 16.4622, -37.6174, 1.52981, 0.45 ) }
    dend_18 { pt3dadd( 16.4684, -39.119, 0.8826, 0.91 ) }
    dend_18 { pt3dadd( 16.4779, -40.287, 0.513548, 0.68 ) }
    dend_18 { pt3dadd( 16.4904, -42.1799, 0.0448379, 1.36 ) }
    dend_18 { pt3dadd( 16.7025, -45.3832, -0.611719, 1.14 ) }
    dend_18 { pt3dadd( 17.0586, -47.9296, -1.06764, 0.45 ) }
    dend_18 { pt3dadd( 17.5943, -50.7627, -1.51566, 0.91 ) }
    dend_18 { pt3dadd( 17.9868, -52.6845, -1.79603, 0.45 ) }
    dend_18 { pt3dadd( 18.6499, -55.9438, -2.22646, 0.68 ) }
    dend_18 { pt3dadd( 19.3198, -58.9783, -2.59883, 0.68 ) }
    dend_18 { pt3dadd( 19.9315, -61.4881, -2.87593, 0.68 ) }
    dend_18 { pt3dadd( 20.5851, -63.9793, -3.12572, 0.68 ) }
    dend_18 { pt3dadd( 21.3913, -67.1625, -3.39681, 0.68 ) }
    dend_18 { pt3dadd( 21.9631, -69.6752, -3.57111, 0.68 ) }
    dend_18 { pt3dadd( 22.7662, -73.653, -3.84934, 0.45 ) }
    dend_18 { pt3dadd( 23.0801, -75.423, -3.98647, 0.45 ) }
    dend_18 { pt3dadd( 23.5072, -77.6505, -4.17789, 0.68 ) }
    dend_18 { pt3dadd( 23.8799, -79.3129, -4.34167, 0.23 ) }
    dend_18 { pt3dadd( 24.5126, -81.6766, -4.6161, 0.91 ) }
    dend_18 { pt3dadd( 25.3029, -84.3129, -4.95606, 0.23 ) }
    dend_18 { pt3dadd( 25.9153, -86.1988, -5.22817, 0.68 ) }
    dend_18 { pt3dadd( 27.0124, -89.3701, -5.70835, 0.91 ) }
    dend_18 { pt3dadd( 28.5471, -93.5302, -6.42348, 0.91 ) }
    dend_18 { pt3dadd( 29.5804, -96.2072, -6.9413, 0.91 ) }
    dend_18 { pt3dadd( 30.2468, -97.9593, -7.2632, 0.23 ) }
    dend_18 { pt3dadd( 30.8696, -99.8578, -7.56947, 0.68 ) }
    dend_18 { pt3dadd( 31.2971, -101.408, -7.802, 0.68 ) }
    dend_18 { pt3dadd( 31.7976, -103.475, -8.07147, 0.23 ) }
    dend_18 { pt3dadd( 32.2906, -105.417, -8.27457, 0.68 ) }
    dend_18 { pt3dadd( 33.0703, -108.432, -8.57356, 0.68 ) }
    dend_18 { pt3dadd( 33.7612, -111.263, -8.8468, 0.68 ) }
    dend_18 { pt3dadd( 34.1475, -112.839, -8.98326, 0.68 ) }
    dend_18 { pt3dadd( 34.5537, -114.41, -9.12621, 0.68 ) }
    dend_18 { pt3dadd( 35.2818, -117.103, -9.40912, 0.68 ) }
    dend_18 { pt3dadd( 36.0769, -120.127, -9.82344, 0.68 ) }
    dend_18 { pt3dadd( 36.8781, -123.434, -10.4322, 0.68 ) }
    dend_18 { pt3dadd( 37.5013, -126.195, -10.9756, 0.23 ) }
    dend_18 { pt3dadd( 37.7919, -127.653, -11.2602, 1.14 ) }
    dend_18 { pt3dadd( 38.1221, -129.74, -11.6829, 0.23 ) }
    dend_18 { pt3dadd( 38.2568, -131.023, -11.9473, 0.68 ) }
    dend_18 { pt3dadd( 38.5498, -134.218, -12.5692, 0.23 ) }
    dend_18 { pt3dadd( 38.6694, -135.578, -12.8356, 0.23 ) }
    dend_18 { pt3dadd( 38.7641, -137.487, -13.2414, 0.23 ) }
    dend_18 { pt3dadd( 38.7768, -139.948, -13.7644, 0.68 ) }
    dend_18 { pt3dadd( 38.7288, -142.831, -14.379, 0.68 ) }
    dend_18 { pt3dadd( 38.6976, -145.031, -14.8813, 0.23 ) }
    dend_18 { pt3dadd( 38.646, -146.65, -15.2722, 0.91 ) }
    dend_18 { pt3dadd( 38.4102, -149.673, -16.0642, 0.91 ) }
    dend_18 { pt3dadd( 38.0016, -152.719, -16.8196, 0.23 ) }
    dend_18 { pt3dadd( 37.7416, -154.598, -17.2205, 0.68 ) }
    dend_18 { pt3dadd( 37.5033, -156.31, -17.5408, 0.23 ) }
    dend_18 { pt3dadd( 37.2386, -158.323, -17.8543, 0.68 ) }
    dend_18 { pt3dadd( 36.9147, -161.354, -18.2069, 0.91 ) }
    dend_18 { pt3dadd( 36.6359, -164.499, -18.4581, 0.45 ) }
    dend_18 { pt3dadd( 36.369, -167.948, -18.7587, 0.45 ) }
    dend_18 { pt3dadd( 36.1574, -170.189, -18.9864, 0.45 ) }
    dend_18 { pt3dadd( 35.9508, -172.451, -19.2293, 0.68 ) }
    dend_18 { pt3dadd( 35.6996, -176.989, -19.7385, 0.45 ) }
    dend_18 { pt3dadd( 35.6156, -179.955, -20.12, 0.45 ) }
    dend_18 { pt3dadd( 35.5223, -183.716, -20.7456, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_18 { pt3dadd( 35.417, -186.125, -21.2076, 0.45 ) }
    dend_18 { pt3dadd( 35.378, -187.482, -21.4888, 0.23 ) }
    dend_18 { pt3dadd( 35.3454, -189.621, -21.9632, 0.23 ) }
    dend_18 { pt3dadd( 35.3885, -191.451, -22.3662, 0.68 ) }
    dend_18 { pt3dadd( 35.4769, -193.418, -22.7616, 0.23 ) }
    dend_18 { pt3dadd( 35.4902, -194.675, -22.9788, 0.23 ) }
    dend_18 { pt3dadd( 35.4195, -196.905, -23.3214, 0.23 ) }
    dend_18 { pt3dadd( 35.2675, -198.947, -23.6064, 0.23 ) }
    dend_18 { pt3dadd( 35.1038, -201.547, -23.917, 0.23 ) }
    dend_18 { pt3dadd( 35.0364, -202.946, -24.0764, 0.45 ) }
    dend_18 { pt3dadd( 34.9002, -206.129, -24.4509, 0.23 ) }
    dend_18 { pt3dadd( 34.7322, -209.04, -24.8229, 0.68 ) }
    dend_18 { pt3dadd( 34.4337, -213.501, -25.4297, 0.23 ) }
    dend_18 { pt3dadd( 34.19, -216.723, -25.9061, 0.23 ) }
    dend_18 { pt3dadd( 34.044, -218.461, -26.1822, 0.23 ) }
    dend_18 { pt3dadd( 33.9583, -220.134, -26.4245, 0.23 ) }
    dend_18 { pt3dadd( 33.9028, -222.731, -26.8088, 0.45 ) }
    dend_18 { pt3dadd( 33.8402, -223.722, -26.9727, 0.68 ) }
    dend_18 { pt3dadd( 33.5522, -225.338, -27.2678, 0.23 ) }
    dend_18 { pt3dadd( 33.2738, -226.248, -27.4304, 0.23 ) }
    dend_18 { pt3dadd( 32.7448, -228.058, -27.6283, 0.23 ) }
    dend_18 { pt3dadd( 35.2309, -238.78, -29.9211, 0.23 ) }
    dend_18 { pt3dadd( 37.8622, -249.581, -31.6281, 0.23 ) }
    dend_18 { pt3dadd( 40.7331, -260.449, -31.7143, 0.23 ) }
    dend_18 { pt3dadd( 44.0207, -271.178, -31.3473, 0.23 ) }
    dend_18 { pt3dadd( 45.8738, -282.18, -30.0154, 0.23 ) }
    dend_18 { pt3dadd( 47.4777, -293.306, -30.6911, 0.23 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 27/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -174.877, 136.185, 13.7406, 0.45 ) }
    dend_8 { pt3dadd( -176.348, 137.477, 13.6848, 0.45 ) }
    dend_8 { pt3dadd( -177.201, 138.163, 13.6365, 0.68 ) }
    dend_8 { pt3dadd( -178.814, 139.347, 13.5437, 0.45 ) }
    dend_8 { pt3dadd( -180.232, 140.341, 13.41, 0.23 ) }
    dend_8 { pt3dadd( -181.708, 141.299, 13.2461, 0.68 ) }
    dend_8 { pt3dadd( -183.318, 142.258, 13.0539, 0.23 ) }
    dend_8 { pt3dadd( -184.458, 142.843, 12.908, 0.23 ) }
    dend_8 { pt3dadd( -185.885, 143.502, 12.7144, 0.45 ) }
    dend_8 { pt3dadd( -187.579, 144.231, 12.4415, 0.23 ) }
    dend_8 { pt3dadd( -188.866, 144.778, 12.2205, 0.23 ) }
    dend_8 { pt3dadd( -190.615, 145.523, 11.8923, 0.91 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 39/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -174.877, 136.185, 13.7406, 0.23 ) }
    dend_7 { pt3dadd( -174.065, 137.039, 13.7045, 0.23 ) }
    dend_7 { pt3dadd( -173.666, 137.56, 13.6679, 0.91 ) }
    dend_7 { pt3dadd( -173.123, 138.52, 13.5735, 0.68 ) }
    dend_7 { pt3dadd( -172.326, 139.928, 13.4348, 0.23 ) }
    dend_7 { pt3dadd( -171.948, 140.597, 13.369, 0.68 ) }
    dend_7 { pt3dadd( -170.819, 142.593, 13.1725, 0.23 ) }
    dend_7 { pt3dadd( -170.062, 144.166, 12.9468, 0.23 ) }
    dend_7 { pt3dadd( -169.284, 146.055, 12.6238, 0.23 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 48/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 110.987, 322.777, 47.8168, 0.23 ) }
    dend_51 { pt3dadd( 112.698, 324.499, 48.0906, 0.23 ) }
    dend_51 { pt3dadd( 114.415, 326.229, 48.3656, 0.23 ) }
    dend_51 { pt3dadd( 115.714, 327.537, 48.5735, 0.23 ) }
    dend_51 { pt3dadd( 116.912, 328.744, 48.7653, 0.23 ) }
    dend_51 { pt3dadd( 118.39, 330.232, 49.0019, 0.23 ) }
    dend_51 { pt3dadd( 120.806, 332.665, 49.3886, 0.23 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 55/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 110.987, 322.777, 47.8168, 0.23 ) }
    dend_50 { pt3dadd( 110.089, 323.953, 47.5949, 0.23 ) }
    dend_50 { pt3dadd( 109.335, 325.04, 47.4177, 0.68 ) }
    dend_50 { pt3dadd( 108.187, 326.845, 47.1421, 0.23 ) }
    dend_50 { pt3dadd( 107.501, 328.053, 46.9615, 0.91 ) }
    dend_50 { pt3dadd( 106.201, 330.528, 46.5942, 0.45 ) }
    dend_50 { pt3dadd( 104.86, 333.319, 46.1935, 0.23 ) }
    dend_50 { pt3dadd( 104.426, 334.452, 46.0234, 0.23 ) }
    dend_50 { pt3dadd( 103.821, 336.276, 45.6908, 0.23 ) }
    dend_50 { pt3dadd( 103.358, 338.09, 45.3214, 1.14 ) }
    dend_50 { pt3dadd( 103.043, 339.661, 44.9817, 0.23 ) }
    dend_50 { pt3dadd( 102.739, 341.708, 44.432, 0.23 ) }
    dend_50 { pt3dadd( 102.476, 344.271, 43.6832, 0.91 ) }
    dend_50 { pt3dadd( 102.262, 346.461, 42.9868, 0.23 ) }
    dend_50 { pt3dadd( 102.095, 348.635, 42.2412, 0.23 ) }
    dend_50 { pt3dadd( 101.961, 350.621, 41.4988, 0.23 ) }
    dend_50 { pt3dadd( 101.91, 352.28, 40.8164, 0.23 ) }
    dend_50 { pt3dadd( 100.056, 362.639, 39.4285, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 73/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -190.615, 145.523, 11.8923, 0.23 ) }
    dend_10 { pt3dadd( -191.666, 144.682, 11.0791, 0.23 ) }
    dend_10 { pt3dadd( -192.432, 144.271, 10.5437, 0.23 ) }
    dend_10 { pt3dadd( -193.942, 143.459, 9.48719, 0.68 ) }
    dend_10 { pt3dadd( -195.282, 142.739, 8.55011, 0.23 ) }
    dend_10 { pt3dadd( -196.473, 142.099, 7.71722, 0.23 ) }
    dend_10 { pt3dadd( -197.514, 141.54, 6.98886, 0.23 ) }
    dend_10 { pt3dadd( -198.661, 140.899, 6.14065, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 81/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -190.615, 145.523, 11.8923, 0.23 ) }
    dend_9 { pt3dadd( -192.162, 146.956, 11.8953, 0.23 ) }
    dend_9 { pt3dadd( -193.703, 148.384, 11.8982, 0.68 ) }
    dend_9 { pt3dadd( -194.878, 149.473, 11.9005, 0.91 ) }
    dend_9 { pt3dadd( -196.326, 150.813, 11.9033, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_38, dend_35, dend_30, dend_27, dend_24, dend_13, dend_0, dend_40, dend_39, dend_37, dend_36, dend_34, dend_31, dend_29, dend_28, dend_26, dend_25, dend_21, dend_14, dend_4, dend_1, dend_46, dend_41, dend_33, dend_32, dend_23, dend_22, dend_20, dend_15, dend_12, dend_5, dend_3, dend_2, dend_52, dend_47, dend_45, dend_42, dend_17, dend_16, dend_11, dend_6, dend_54, dend_53, dend_49, dend_48, dend_44, dend_43, dend_19, dend_18, dend_8, dend_7, dend_51, dend_50, dend_10, dend_9]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_24 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_39 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_37 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_36 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_34 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_29 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_28 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_33 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_23 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_20 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_12 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_3 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_2 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_52 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_47 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_42 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_6 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_53 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_43 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_19 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_18 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_50 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_38 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_30 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_40 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_13 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_1 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_41 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_46 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_27 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_21 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_15 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_32 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_5 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_25 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_54 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_7 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_26 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_8 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_9 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_44 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_49 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_51 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_48 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, axon_0, axon_0, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 11
    dend_39 nseg = 7
    dend_37 nseg = 5
    dend_36 nseg = 5
    dend_34 nseg = 9
    dend_29 nseg = 11
    dend_28 nseg = 9
    dend_33 nseg = 5
    dend_23 nseg = 9
    dend_22 nseg = 5
    dend_20 nseg = 11
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_2 nseg = 5
    dend_52 nseg = 9
    dend_47 nseg = 17
    dend_45 nseg = 9
    dend_42 nseg = 15
    dend_16 nseg = 9
    dend_6 nseg = 9
    dend_53 nseg = 5
    dend_43 nseg = 3
    dend_19 nseg = 19
    dend_18 nseg = 13
    dend_50 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_NBC_e943473349_0_0


