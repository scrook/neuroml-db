// Cell: cSTUT189_L6_NBC_55825b9e30_0_0
/*
{
  "id" : "cSTUT189_L6_NBC_55825b9e30_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.18133, 10.1802, -0.0136132, 4.51632", "-3.71511, 9.17715, -0.012728, 5.89932", "-3.24888, 8.1741, -0.0118428, 6.73586", "-2.78266, 7.17105, -0.0109576, 7.77662", "-2.31644, 6.16799, -0.0100724, 8.83653", "-1.85022, 5.16494, -0.00918717, 9.98865", "-1.384, 4.16189, -0.00830196, 11.1793", "-0.917776, 3.15884, -0.00741676, 12.3766", "-0.451555, 2.15579, -0.00653155, 13.3418", "0.0146667, 1.15274, -0.00564635, 14.1684", "0.480888, 0.149684, -0.00476114, 14.5557", "0.94711, -0.853367, -0.00387593, 14.9116", "1.41333, -1.85642, -0.00299073, 14.9294", "1.87955, -2.85947, -0.00210552, 14.4593", "2.34577, -3.86252, -0.00122032, 13.9684", "2.812, -4.86557, -3.35112E-4, 13.2352", "3.27822, -5.86863, 5.50094E-4, 12.4898", "3.74444, -6.87168, 0.0014353, 11.1742", "4.21066, -7.87473, 0.0023205, 8.60206", "4.67688, -8.87778, 0.00320571, 5.94918", "5.1431, -9.88083, 0.00409092, 3.45007" ]
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-4.86983, -2.64386, 10.4413, 1.08", "-7.63977, -3.7926, 10.4645, 1.08", "-9.85289, -4.82514, 10.4805, 0.96", "-10.9825, -5.41104, 10.4877, 0.96", "-13.605, -6.846, 10.6909, 0.84", "-16.0363, -8.30531, 11.0469, 0.84", "-18.8545, -10.1808, 11.5088, 0.84", "-21.3323, -11.8189, 11.9717, 0.84", "-23.3876, -13.2384, 12.4128, 0.84", "-26.1674, -15.3707, 13.1114, 0.84", "-28.0441, -17.0878, 13.7096, 0.84", "-30.6674, -19.909, 14.8031, 0.84", "-41.4005, -25.7067, 17.0935, 0.84", "-50.5234, -34.1148, 17.4625, 0.84", "-58.7282, -43.3704, 16.4261, 0.84", "-66.0909, -53.2594, 14.9914, 0.84", "-73.3367, -63.3289, 15.3945, 0.84", "-79.2762, -74.2118, 15.9813, 0.84", "-86.3901, -84.3696, 16.5031, 0.84", "-93.1292, -94.7545, 15.6102, 0.84", "-99.3802, -105.434, 16.5773, 0.84", "-105.632, -116.15, 16.9594, 0.84", "-111.753, -126.902, 17.9576, 0.84", "-117.63, -137.701, 19.658, 0.84", "-124.573, -147.42, 23.034, 0.84", "-131.19, -157.26, 26.7011, 0.84", "-137.601, -167.733, 28.5121, 0.84", "-143.312, -178.73, 27.8023, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "4.44017, -8.93386, -1.30865, 2.77", "5.24958, -11.3147, -1.2752, 2.77", "6.08317, -13.7666, -1.24076, 1.69", "7.02525, -16.5376, -1.20183, 1.69", "7.81068, -18.8479, -1.16938, 2.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "8.18017, -1.32386, -14.5587, 2.65", "10.2357, -2.80093, -15.9707, 2.05", "14.9173, -6.16514, -19.1867, 2.41" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.00983, 11.8561, 0.0313539, 4.22", "-5.83014, 15.722, 0.0313539, 4.22", "-6.31384, 16.7492, 0.0313539, 4.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999174985625
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "5.1431, -9.88083, 0.00409092, 1.16335", "11.4656, -23.4833, 0.00409092, 1.16335", "17.788, -37.0857, 0.00409092, 1.16335" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-143.312, -178.73, 27.8023, 0.24", "-151.472, -179.436, 25.177, 0.24", "-159.834, -179.973, 23.2421, 0.24", "-168.3, -180.013, 21.7277, 0.24", "-176.651, -178.53, 20.307, 0.24", "-184.909, -177.329, 18.2239, 0.24", "-192.971, -175.565, 15.8033, 0.24", "-200.683, -174.21, 12.2469, 0.24", "-207.917, -172.357, 7.98041, 0.24", "-214.556, -169.159, 3.54646, 0.24", "-221.324, -165.594, -0.383979, 0.24", "-228.104, -163.134, -5.0686, 0.24", "-234.68, -159.427, -9.18864, 0.24", "-240.373, -154.045, -12.7357, 0.24", "-246.121, -149.532, -17.2705, 0.24", "-252.486, -145.671, -21.5773, 0.24", "-258.118, -140.779, -25.8553, 0.24", "-264.839, -137.235, -29.8851, 0.24", "-270.639, -134.835, -35.7641, 0.24", "-275.429, -132.191, -42.3994, 0.24", "-279.274, -130.519, -49.9089, 0.24", "-281.966, -128.169, -57.7313, 0.24", "-284.452, -124.846, -65.2643, 0.24", "-288.397, -120.271, -71.3856, 0.24", "-293.262, -116.814, -77.5781, 0.24", "-298.554, -113.064, -83.2255, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-143.312, -178.73, 27.8023, 0.24", "-145.709, -187.34, 30.4873, 0.24", "-147.082, -195.418, 34.9509, 0.24", "-148.448, -203.05, 40.1435, 0.24", "-148.193, -211.512, 44.0685, 0.24" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "7.81068, -18.8479, -1.16938, 0.84", "6.06368, -26.7656, 0.582543, 0.84", "5.48163, -29.521, 1.09751, 0.84", "4.90753, -32.4253, 1.58173, 0.84", "4.48196, -34.7003, 1.53975, 0.84", "4.16368, -37.0452, 1.17938, 0.72", "3.89662, -40.0814, 0.479852, 0.72", "3.85427, -41.799, -0.455517, 0.72", "3.88645, -42.8763, -1.19097, 0.72", "4.30649, -49.8459, -6.67713, 0.72", "4.44496, -52.3869, -8.83681, 0.72", "4.48458, -53.5612, -9.88755, 0.72", "4.48286, -57.2986, -13.2529, 0.6", "4.39321, -60.1081, -15.6539, 0.6", "4.25707, -62.7536, -17.735, 0.6", "4.17805, -65.0412, -19.2155, 0.6", "4.20612, -66.4525, -20.2403, 0.6", "4.31694, -67.7502, -21.3261, 0.6", "4.44509, -68.6581, -22.1179, 0.6", "4.99122, -71.959, -25.1656, 0.6", "5.41386, -74.0733, -27.1904, 0.6", "6.17058, -77.7963, -30.9784, 0.6", "6.7139, -81.3504, -34.6862, 0.6", "6.85051, -82.9562, -36.3199, 0.6", "6.83555, -83.8912, -37.2949, 0.48", "6.73391, -84.9786, -38.3778, 0.48", "6.07893, -88.4419, -41.618, 0.48", "5.75613, -89.9008, -42.8334, 0.48", "5.32717, -92.0621, -44.4651, 0.48", "4.31349, -97.4861, -48.4152, 0.24", "4.09102, -99.0582, -49.4932, 0.24", "3.75956, -102.033, -51.3734, 0.24", "3.62017, -104.021, -52.497, 0.24", "3.56144, -106.531, -53.7338, 0.24", "3.57301, -108.048, -54.5473, 0.36", "3.85597, -113.637, -57.7729, 0.36", "3.88156, -113.954, -57.9823, 0.36", "4.01463, -115.175, -58.9304, 0.96", "4.46926, -118.838, -61.9763, 0.36", "5.44841, -125.818, -68.3161, 1.81", "5.99484, -129.328, -71.6344, 0.6", "6.44227, -132.207, -74.4626, 0.6", "7.13615, -136.429, -78.57, 0.36", "7.47273, -138.158, -80.7247, 0.96", "8.05215, -140.642, -84.1664, 0.36", "8.42991, -142.13, -86.2886, 0.96", "9.51505, -146.239, -92.465, 0.36", "9.93996, -147.81, -94.9726, 1.57", "12.9929, -158.839, -113.365, 0.72", "13.4343, -160.505, -116.371, 0.72", "13.4832, -160.69, -116.729, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "7.81068, -18.8479, -1.16938, 1.45", "10.7035, -20.0267, -1.16143, 1.45", "13.1849, -21.0378, -1.15461, 1.45", "15.6187, -22.0295, -1.14792, 1.45", "17.5049, -22.7981, -1.14274, 1.45" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "14.9173, -6.16514, -19.1867, 1.33", "18.0167, -6.18892, -19.4368, 1.33", "23.2836, -6.22932, -19.8617, 1.33", "28.7013, -6.27088, -20.2989, 1.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "14.9173, -6.16514, -19.1867, 0.72", "16.1656, -9.03856, -20.3914, 0.72", "17.1651, -11.9174, -21.43, 0.72", "18.2155, -14.5559, -22.327, 0.72", "19.2054, -16.7192, -23.0362, 0.6", "20.5566, -19.6833, -24.0351, 0.6", "21.848, -22.4472, -24.9915, 0.6", "22.9216, -24.6102, -25.716, 0.36", "24.5994, -27.9705, -26.8657, 0.48", "25.6471, -30.0756, -27.5694, 0.36", "27.7819, -34.4175, -29.2761, 0.36", "29.7138, -38.2794, -31.2642, 0.36", "31.0788, -41.2818, -32.8096, 0.36", "32.3486, -44.1839, -34.3698, 0.36", "34.8283, -50.4071, -37.8187, 0.36", "37.1463, -56.5396, -41.3499, 0.36", "39.3919, -62.5805, -45.0229, 0.24", "41.0607, -67.7023, -48.3648, 0.24" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.31384, 16.7492, 0.0313539, 1.81", "-10.7711, 17.2027, 4.58956, 1.81" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-6.31384, 16.7492, 0.0313539, 2.65", "-5.91155, 20.5771, -0.39861, 2.65", "-5.72994, 22.3051, -0.592711, 2.65" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "17.788, -37.0857, 0.00409092, 0.48", "24.1105, -50.6882, 0.00409092, 0.48", "30.4329, -64.2906, 0.00409092, 0.48" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-148.193, -211.512, 44.0685, 0.24", "-149.263, -221.064, 47.6736, 0.24", "-152.484, -230.397, 50.4813, 0.24", "-154.422, -239.746, 54.2535, 0.24", "-156.227, -249.701, 55.9892, 0.24", "-156.664, -259.667, 58.4103, 0.24", "-158.105, -269.581, 60.6506, 0.24", "-161.294, -279.303, 61.48, 0.24", "-165.666, -288.57, 60.8606, 0.24", "-171.661, -296.719, 62.5988, 0.24", "-176.583, -305.712, 63.1267, 0.24", "-182.615, -313.987, 63.8567, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-148.193, -211.512, 44.0685, 0.24", "-148.866, -216.22, 46.502, 0.24", "-149.354, -220.705, 49.3632, 0.24", "-150.618, -224.562, 52.838, 0.24", "-151.099, -229.08, 55.6478, 0.24", "-152.417, -233.617, 58.1421, 0.24", "-154.875, -237.821, 60.3389, 0.24", "-157.731, -241.665, 62.7085, 0.24", "-161.538, -245.07, 64.2743, 0.24", "-165.433, -248.554, 65.3855, 0.24", "-169.078, -252.429, 65.876, 0.24", "-172.984, -255.886, 67.0319, 0.24" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "17.5049, -22.7981, -1.14274, 0.36", "18.7437, -24.5498, -1.89023, 0.36", "20.6943, -27.3081, -3.0673, 0.36", "22.5654, -29.954, -4.19638, 0.36", "23.9853, -31.9618, -5.05314, 0.6", "26.9377, -36.1367, -6.8347, 0.6", "28.4902, -38.3321, -7.77152, 1.08" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "17.5049, -22.7981, -1.14274, 0.84", "19.1375, -23.7542, 0.292395, 0.84", "20.9705, -24.8765, 1.84064, 0.84", "22.2804, -25.6976, 2.86347, 0.72", "24.4394, -27.0587, 4.43072, 0.72", "28.6266, -29.8024, 7.2633, 0.72", "30.5939, -31.1822, 8.5065, 0.6", "32.0861, -32.3499, 9.42743, 0.6", "33.4059, -33.5127, 10.1311, 0.6", "34.1832, -34.3104, 10.4745, 0.6", "35.5575, -35.8496, 10.8264, 0.36", "36.9838, -37.4249, 10.8698, 0.36", "38.1174, -38.6307, 10.9811, 0.36", "39.3297, -39.9563, 11.3051, 0.36", "40.2737, -40.8927, 11.6935, 0.36", "41.5157, -41.9421, 12.3385, 0.36", "42.2971, -42.4689, 12.8029, 0.36", "45.0883, -43.898, 14.5609, 0.36", "46.9326, -44.7094, 15.6979, 0.36", "48.7053, -45.4183, 16.8664, 0.36", "49.8564, -45.8776, 17.6654, 0.36", "50.482, -46.1485, 18.1055, 0.36", "51.4692, -46.6046, 18.7015, 0.36", "53.1381, -47.1837, 19.1614, 0.36", "60.6527, -52.5519, 24.8751, 0.36", "67.2006, -57.5569, 31.9466, 0.36", "73.4314, -62.0981, 39.5943, 0.36", "78.3699, -67.8876, 47.3419, 0.36", "82.0278, -74.7635, 54.9098, 0.36", "86.7901, -80.3482, 62.9138, 0.36", "91.5334, -86.6201, 70.4036, 0.36", "96.8486, -94.0137, 76.321, 0.36", "101.021, -101.857, 82.5656, 0.36", "104.219, -110.72, 87.9655, 0.36", "107.396, -119.561, 93.4129, 0.36", "109.995, -128.215, 99.4362, 0.36" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "28.7013, -6.27088, -20.2989, 1.32", "30.5092, -4.67377, -22.0456, 1.32", "31.9141, -3.57802, -23.4204, 1.32", "33.5035, -2.52544, -24.9637, 1.2", "35.6325, -1.33823, -27.1302, 1.08", "37.9618, -0.00116014, -29.9146, 0.96", "40.2395, 1.39201, -32.8629, 0.96", "40.863, 1.78747, -33.8073, 0.96", "41.7109, 2.38098, -35.2303, 0.96", "42.6774, 3.22843, -37.0979, 0.96", "44.7781, 5.71294, -41.7676, 0.96", "45.3737, 6.6315, -43.2604, 0.96", "46.144, 7.95468, -45.1704, 0.96", "46.6171, 8.65649, -46.155, 0.84", "47.8975, 10.1502, -48.2454, 0.72", "48.4813, 10.6543, -48.9695, 0.72", "50.7591, 12.0629, -51.2184, 0.84", "52.1289, 12.8419, -52.477, 1.08", "54.4461, 14.1105, -54.4175, 1.08", "57.1754, 15.5281, -56.5035, 1.08", "58.2657, 16.0452, -57.2965, 0.96", "60.2239, 16.9694, -58.881, 0.84", "61.2688, 17.5104, -59.8715, 0.84", "62.345, 18.1019, -61.0238, 0.84", "62.9387, 18.4258, -61.7183, 0.84", "65.3503, 19.6299, -64.5244, 0.84", "67.8621, 20.8426, -67.6022, 0.84", "70.2078, 21.9628, -70.5744, 2.16", "70.8612, 22.2875, -71.4096, 2.16", "73.2217, 23.5733, -74.3311, 0.72", "74.103, 24.1212, -75.3221, 0.72", "76.0795, 25.5483, -77.2461, 0.72", "77.793, 26.8306, -78.6776, 0.72", "78.5261, 27.3849, -79.2466, 0.72", "81.1873, 29.3854, -81.4259, 2.16", "82.6331, 30.4745, -82.6065, 1.44", "84.5423, 31.9517, -84.0146, 0.48", "85.6151, 32.8592, -84.9211, 0.48", "87.4334, 34.5605, -86.641, 1.32", "89.1202, 36.3727, -89.1886, 1.32", "89.2331, 36.5073, -89.3992, 1.32", "90.9965, 38.6842, -92.9605, 0.72", "94.7209, 43.3117, -100.359, 0.6", "95.5731, 44.3729, -101.974, 0.6", "100.892, 50.6696, -110.987, 0.12", "101.808, 51.6899, -112.383, 0.96", "102.597, 52.5152, -113.477, 0.48", "104.313, 54.1995, -115.625, 0.36", "106.582, 56.2855, -117.632, 0.24", "108.322, 57.8774, -118.955, 0.24", "111.116, 60.4204, -120.399, 1.2", "112.177, 61.4173, -121.04, 0.72", "114.485, 63.7085, -122.567, 0.24", "115.377, 64.6603, -123.183, 0.24", "116.984, 66.5293, -124.254, 1.08", "117.527, 67.2183, -124.614, 0.6", "119.825, 70.282, -125.923, 0.48", "120.646, 71.3922, -126.379, 0.48", "121.543, 72.5564, -126.806, 1.2", "122.436, 73.6405, -127.221, 0.6", "124.838, 76.2293, -128.226, 0.24", "125.903, 77.2604, -128.737, 0.24", "127.301, 78.4717, -129.423, 1.32", "128.476, 79.4007, -129.984, 0.72", "130.987, 81.3156, -131.226, 0.48", "133.252, 83.0385, -132.45, 0.48", "135.615, 84.8417, -133.754, 1.08", "136.572, 85.5976, -134.293, 0.36", "138.791, 87.4407, -135.5, 0.12", "141.616, 89.9664, -136.998, 0.12", "143.762, 91.983, -138.108, 0.12", "144.371, 92.5794, -138.409, 0.48", "144.897, 93.1058, -138.669, 0.12", "145.862, 94.0934, -139.27, 0.12", "146.327, 94.5905, -139.597, 0.48", "147.695, 96.1907, -140.543, 0.48", "148.479, 97.2644, -141.082, 0.24", "149.637, 99.037, -141.852, 0.6", "150.545, 100.556, -142.402, 1.08", "151.403, 102.082, -142.855, 0.48", "152.989, 104.863, -143.611, 0.36", "154.006, 106.555, -144.137, 0.36", "155.398, 108.692, -144.972, 0.36", "156.232, 109.854, -145.483, 0.96", "156.803, 110.587, -145.847, 0.24", "158.964, 113.081, -147.175, 0.12", "161.587, 115.777, -148.597, 0.24", "163.138, 117.267, -149.5, 0.24", "164.119, 118.199, -150.09, 0.24", "165.201, 119.226, -150.67, 0.24", "166.902, 120.863, -151.392, 0.24", "167.762, 121.697, -151.631, 0.24", "170.718, 124.496, -152.352, 1.44", "171.432, 125.169, -152.569, 1.08", "172.769, 126.397, -153.053, 0.12", "173.561, 127.126, -153.476, 0.12", "175.112, 128.532, -154.504, 0.12", "176.931, 130.065, -155.716, 0.6", "177.815, 130.732, -156.243, 0.6", "178.703, 131.36, -156.893, 0.24", "181.433, 133.246, -159.072, 0.72", "182.077, 133.697, -159.639, 0.12", "183.305, 134.571, -160.705, 0.24", "184.426, 135.402, -161.638, 0.24", "188.537, 138.618, -165.053, 0.24", "189.52, 139.464, -165.852, 0.12", "192.287, 142.024, -167.924, 0.24", "193.484, 143.251, -168.821, 0.24", "195.148, 145.159, -170.009, 0.24", "196.0, 146.28, -170.658, 0.72", "197.183, 148.026, -171.472, 0.36", "197.774, 148.935, -171.896, 0.36", "198.578, 150.213, -172.452, 1.08", "199.5, 151.692, -173.165, 0.36", "201.794, 155.453, -175.031, 0.36", "202.302, 156.31, -175.517, 0.36", "203.102, 157.734, -176.514, 1.2", "203.335, 158.158, -176.833, 0.72", "203.824, 159.018, -177.531, 0.36", "204.219, 159.725, -178.124, 0.36", "205.604, 162.281, -179.836, 0.36", "206.61, 164.708, -181.818, 0.84" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "28.7013, -6.27088, -20.2989, 0.84", "30.5919, -7.35094, -19.9096, 0.84", "31.9719, -8.24481, -19.6922, 0.84", "34.1801, -9.7735, -19.4965, 0.6", "35.7254, -10.8887, -19.4194, 0.6", "37.8737, -12.533, -19.4106, 0.6", "39.2756, -13.6439, -19.4425, 0.48", "40.7711, -14.8778, -19.5801, 0.48", "42.2115, -16.1219, -19.7444, 0.48", "43.7758, -17.5384, -19.9191, 0.84", "45.0489, -18.6564, -20.0499, 0.72", "46.478, -19.852, -20.1366, 0.72", "48.654, -21.5322, -20.1246, 0.72", "49.402, -22.0983, -20.0499, 0.6", "50.475, -22.9097, -19.8784, 0.6", "52.7819, -24.6889, -19.4663, 0.84", "54.1941, -25.8108, -19.1894, 0.48", "55.9662, -27.286, -18.9478, 0.48", "58.4607, -29.456, -18.7378, 0.48", "59.68, -30.5078, -18.6764, 0.48", "61.5383, -32.0926, -18.6358, 0.84", "63.3098, -33.5825, -18.6185, 0.84", "66.2646, -36.0295, -18.6396, 0.84", "68.6432, -37.968, -18.6579, 0.72", "70.7948, -39.6768, -18.6711, 0.6", "73.387, -41.6962, -18.6336, 0.6", "75.0113, -42.9204, -18.5622, 0.6", "76.3222, -43.8984, -18.4775, 0.48", "78.1087, -45.2322, -18.2954, 0.48", "79.2421, -46.0646, -18.1998, 0.48", "80.7522, -47.1828, -18.1017, 0.48", "82.5686, -48.5209, -17.9986, 0.48", "83.9948, -49.5117, -17.9305, 0.36", "85.3261, -50.3549, -17.8766, 0.36", "86.7468, -51.1452, -17.7492, 0.36", "88.0665, -51.7805, -17.5803, 0.36", "88.433, -51.9312, -17.5117, 0.36", "90.0018, -52.5142, -17.1346, 0.36", "92.2558, -53.287, -16.5118, 0.24", "94.9606, -54.2606, -15.7165, 0.24", "96.2569, -54.7723, -15.3197, 0.24", "97.4202, -55.278, -14.9634, 0.72", "98.9752, -56.0559, -14.4936, 0.36", "100.316, -56.8878, -14.095, 0.36", "101.773, -58.0144, -13.6984, 0.72", "102.61, -58.816, -13.5218, 0.48", "103.523, -59.7903, -13.3431, 0.84", "104.219, -60.5755, -13.2309, 0.48", "105.25, -61.7733, -13.0606, 0.84", "105.811, -62.4066, -12.9712, 0.48", "106.842, -63.4834, -12.7843, 0.96", "107.815, -64.4156, -12.5969, 0.36", "109.027, -65.533, -12.3727, 0.36", "109.845, -66.2424, -12.2167, 0.36", "111.658, -67.7509, -11.8564, 0.84", "112.601, -68.4932, -11.6891, 0.48", "114.317, -69.814, -11.3824, 0.48", "116.528, -71.5062, -10.9809, 0.48", "117.717, -72.4026, -10.7688, 0.48", "117.835, -72.4922, -10.7486, 0.48", "121.515, -75.3694, -10.1906, 0.72" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-10.7711, 17.2027, 4.58956, 0.6", "-13.2292, 18.6236, 6.71802, 0.6", "-15.1173, 19.6861, 8.16543, 0.6", "-17.4214, 21.1174, 9.88272, 0.6", "-18.7825, 22.0393, 10.7885, 0.48", "-19.8233, 22.7752, 11.3999, 0.48", "-21.4658, 23.9365, 12.3648, 0.48", "-24.3382, 26.0028, 13.7226, 0.24", "-25.6547, 27.0136, 14.2036, 0.24", "-27.3251, 28.4423, 14.6686, 0.12", "-28.3974, 29.3237, 14.9412, 0.12", "-36.9912, 35.141, 18.3358, 0.12", "-45.6815, 41.7074, 19.0965, 0.12", "-55.0725, 47.1421, 20.3179, 0.12", "-64.2943, 52.162, 23.314, 0.12", "-72.6037, 58.4292, 26.6147, 0.12", "-81.6077, 63.6535, 29.9089, 0.12", "-90.3483, 69.2603, 33.2828, 0.12", "-98.1092, 75.462, 37.8134, 0.12", "-107.568, 79.4707, 41.5123, 0.12", "-116.484, 84.0801, 45.8124, 0.12", "-126.883, 86.751, 47.7974, 0.12", "-136.671, 91.352, 49.2944, 0.12", "-145.636, 96.9862, 51.9592, 0.12", "-154.59, 102.73, 54.4202, 0.12", "-162.696, 108.448, 58.9823, 0.12" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.7711, 17.2027, 4.58956, 0.72", "-13.2432, 14.0026, 6.39502, 0.72", "-14.1733, 12.8218, 6.91068, 0.72", "-15.212, 11.5302, 7.45603, 0.6", "-15.7718, 10.8341, 7.74991, 0.6", "-18.1135, 7.92227, 8.97936, 0.6", "-19.2322, 6.53121, 9.5667, 0.6", "-21.6194, 3.74189, 10.6615, 0.6", "-22.5504, 2.79756, 11.0825, 0.6" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.72994, 22.3051, -0.592711, 0.72", "-4.48728, 24.7572, -0.431832, 0.72", "-2.75195, 28.3521, -0.25644, 0.6", "-0.964636, 32.338, -0.11142, 0.6", "0.0891567, 34.793, -0.070747, 0.6", "1.60289, 38.4586, -0.0348722, 0.6", "2.6864, 41.264, -0.0302929, 0.6", "3.71522, 44.3122, -0.0642703, 0.6", "4.28839, 46.2369, -0.111553, 0.6", "5.29176, 49.5503, -0.0747213, 0.6", "6.36908, 52.9629, 0.164037, 0.6", "7.39477, 56.1594, 0.474624, 0.48", "8.17431, 58.5451, 0.797725, 0.48", "9.51625, 62.5969, 1.45279, 0.48", "11.1252, 67.3513, 2.26755, 0.48", "13.3698, 73.9045, 3.42994, 0.48", "14.3918, 76.8279, 3.96746, 0.48", "15.145, 78.89, 4.35, 0.48", "15.9827, 81.1957, 4.77491, 0.48", "16.9481, 83.8962, 5.19517, 0.48", "17.4823, 85.6062, 5.33838, 0.48", "18.2912, 87.9435, 5.32511, 0.48", "18.8366, 89.3493, 5.33676, 0.48" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-5.72994, 22.3051, -0.592711, 2.17", "-6.0688, 29.2111, -2.86522, 2.17", "-6.18859, 31.6525, -3.66861, 1.81", "-6.28132, 33.5424, -4.2905, 1.81", "-6.43234, 36.6202, -5.30329, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "28.4902, -38.3321, -7.77152, 0.72", "28.0638, -43.1197, -10.4311, 0.72", "28.0056, -46.0865, -12.3736, 0.72", "28.0281, -48.7746, -14.285, 0.72", "28.0698, -51.2881, -16.0082, 0.72", "28.0678, -54.0962, -17.876, 0.72", "28.0026, -58.1233, -20.3436, 0.72", "28.0214, -60.7236, -21.745, 1.08", "28.0602, -63.1852, -23.0095, 1.08", "27.9568, -65.7394, -24.1033, 0.48", "27.8105, -67.2924, -24.5898, 0.48", "27.448, -70.2623, -25.1922, 0.48", "27.2379, -71.7916, -25.582, 0.48", "26.8235, -74.0137, -26.3766, 0.96", "26.2412, -76.868, -27.5942, 0.6", "25.727, -79.5043, -29.0985, 0.48", "25.3691, -81.363, -30.302, 0.48", "23.7042, -89.2825, -36.0668, 0.48", "23.1668, -91.6138, -37.9801, 0.36", "22.7569, -93.0962, -39.3133, 0.36", "21.4705, -97.008, -42.9515, 0.36", "20.7504, -98.8895, -44.6729, 0.36", "19.0883, -102.602, -47.9597, 0.36", "17.7413, -105.671, -50.688, 0.36", "16.7302, -108.567, -53.2526, 0.36", "16.2712, -110.249, -54.8144, 0.36", "16.0423, -111.541, -55.9923, 0.36", "15.9132, -112.896, -57.2372, 0.36", "15.7113, -124.387, -67.0923, 0.36", "15.7678, -127.697, -69.7974, 0.36", "15.8663, -131.684, -73.0525, 0.36", "15.802, -135.876, -76.6562, 0.36", "15.5922, -137.47, -77.8008, 0.36", "14.5722, -141.395, -79.8938, 0.36", "12.4938, -146.19, -81.8419, 0.36", "10.9892, -149.219, -83.1005, 0.36", "8.55756, -154.147, -85.0295, 0.36", "2.92933, -166.64, -89.7078, 0.36", "1.66152, -170.024, -90.9642, 0.36", "-1.69345, -181.308, -95.3918, 0.36", "-2.71285, -186.074, -97.2909, 0.36", "-3.25149, -190.048, -98.9445, 0.36", "-3.51133, -194.192, -100.722, 0.36", "-3.5518, -197.64, -102.426, 0.36", "-3.67243, -205.443, -105.988, 0.36", "-3.82183, -211.41, -108.03, 0.36", "-4.18459, -216.391, -109.547, 0.36", "-4.77125, -220.449, -110.766, 0.36", "-5.5266, -223.427, -111.724, 0.36", "-6.23553, -225.452, -112.348, 0.36", "-8.28724, -230.247, -113.788, 0.36", "-9.65777, -232.985, -114.687, 0.36", "-13.0972, -238.927, -117.0, 0.36", "-17.2035, -245.379, -119.879, 0.36", "-19.7052, -249.196, -121.703, 0.36", "-21.6871, -252.211, -123.399, 0.36", "-22.8954, -254.042, -124.602, 0.36", "-24.6164, -256.979, -126.715, 0.36", "-25.3686, -258.718, -127.971, 0.36", "-26.2297, -261.277, -129.833, 0.36", "-28.1366, -267.565, -134.813, 0.36", "-28.6851, -269.593, -136.488, 0.36", "-29.7947, -274.41, -140.597, 0.36", "-30.4459, -278.319, -143.894, 0.36" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "28.4902, -38.3321, -7.77152, 0.6", "30.6178, -40.0909, -8.0064, 0.6", "32.8973, -42.2276, -8.42403, 0.6", "34.5386, -43.8683, -8.8032, 0.48", "36.883, -46.2132, -9.36662, 0.84", "38.4371, -47.7492, -9.73264, 0.84", "39.839, -49.1457, -10.0536, 0.72", "42.039, -51.4837, -10.5324, 0.72", "43.3673, -52.9514, -10.7551, 0.72", "44.435, -54.1278, -10.8991, 1.2", "45.8105, -55.5482, -11.0239, 0.84", "47.2756, -56.9632, -11.1945, 0.84", "48.708, -58.3097, -11.3766, 0.6", "50.5656, -59.9758, -11.5883, 0.6", "51.4597, -60.7611, -11.707, 0.6", "53.3948, -62.4883, -12.0179, 0.96", "55.7775, -64.6075, -12.4354, 0.72", "57.2239, -65.8891, -12.7103, 0.48", "58.4994, -67.0307, -12.9718, 1.33", "60.2098, -68.6233, -13.2444, 0.72", "62.0915, -70.4491, -13.4121, 0.6", "63.3475, -71.7115, -13.5155, 0.48", "64.1124, -72.478, -13.5662, 0.48", "64.8238, -73.1556, -13.6176, 0.36", "66.274, -74.5191, -13.7324, 0.24", "67.8709, -75.9688, -13.8122, 0.96", "71.7301, -79.31, -13.8849, 0.24", "73.5452, -80.8655, -13.7948, 1.57", "76.8508, -83.7472, -13.442, 0.36", "77.8296, -84.6311, -13.2927, 0.36", "79.8525, -86.4917, -12.8792, 0.36", "81.5325, -88.1071, -12.3797, 1.08", "83.566, -90.2335, -11.4609, 0.6", "84.3344, -91.1277, -11.0793, 0.48", "85.2817, -92.3879, -10.7604, 0.96", "86.4245, -94.0474, -10.6224, 0.36", "87.2585, -95.3778, -10.7055, 0.84", "87.9342, -96.4791, -10.8563, 0.36", "88.5655, -97.5054, -11.094, 0.96", "91.5394, -102.289, -12.397, 0.24", "92.9798, -104.701, -13.1598, 0.24", "93.5903, -105.805, -13.5735, 1.69" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "109.995, -128.215, 99.4362, 0.24", "115.093, -134.204, 105.232, 0.24", "119.9, -140.044, 111.414, 0.24", "124.242, -145.527, 118.235, 0.24", "128.263, -150.545, 125.59, 0.24", "132.463, -154.73, 133.354, 0.24", "136.422, -160.691, 140.005, 0.24", "141.458, -166.215, 146.295, 0.24", "145.819, -172.36, 152.513, 0.24", "151.479, -178.533, 157.542, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "109.995, -128.215, 99.4362, 0.24", "119.22, -136.574, 107.551, 0.24", "129.302, -143.862, 115.678, 0.24", "139.317, -149.808, 124.907, 0.24", "150.357, -154.566, 133.642, 0.24", "159.603, -160.805, 143.46, 0.24" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "121.515, -75.3694, -10.1906, 0.24", "126.819, -76.6979, -16.391, 0.24", "128.542, -77.1799, -18.2373, 0.24", "133.87, -78.7579, -23.7031, 0.24", "136.464, -79.6037, -26.274, 0.24", "139.241, -80.5697, -28.8224, 0.24", "141.916, -81.5345, -31.1706, 0.24", "143.785, -82.2698, -32.5549, 0.24", "145.122, -82.8403, -33.4871, 0.24", "146.98, -83.7002, -34.5662, 0.24", "150.091, -85.2134, -36.3063, 0.24", "153.56, -87.0249, -38.1684, 0.24", "155.807, -88.2443, -39.4096, 0.24", "157.307, -89.0177, -40.1983, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "121.515, -75.3694, -10.1906, 0.24", "123.834, -78.2965, -9.69466, 0.24", "126.864, -82.183, -8.92644, 0.24", "129.014, -85.072, -8.72275, 0.24", "132.246, -89.9948, -9.69173, 0.24", "133.86, -92.8278, -10.7592, 0.24", "134.76, -94.5799, -11.557, 0.24", "136.016, -97.4151, -13.2882, 0.24", "138.143, -103.204, -17.5954, 0.24", "140.762, -111.436, -24.5945, 0.24", "141.681, -114.67, -27.574, 0.24", "142.018, -115.821, -28.6587, 0.24", "142.973, -118.838, -31.4584, 0.24", "143.614, -120.597, -33.0272, 0.24", "145.699, -125.343, -36.4687, 0.24", "146.618, -126.955, -37.3814, 0.24", "148.892, -130.166, -39.2756, 0.24", "150.3, -131.829, -40.2696, 0.24", "151.438, -132.992, -40.9418, 0.24", "153.838, -135.144, -42.1957, 0.24", "155.948, -136.916, -43.2065, 0.24", "161.071, -141.11, -45.6535, 0.24", "164.586, -143.88, -47.2623, 0.24", "167.766, -146.29, -48.708, 0.24", "170.152, -148.035, -49.7681, 0.24", "173.417, -150.288, -51.1866, 0.24" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-162.696, 108.448, 58.9823, 0.12", "-170.227, 112.425, 64.0343, 0.12", "-176.649, 117.042, 69.9917, 0.12", "-182.588, 121.922, 76.2342, 0.12", "-189.091, 125.023, 83.0284, 0.12", "-194.59, 128.912, 90.2876, 0.12", "-200.649, 130.798, 97.889, 0.12", "-206.416, 133.095, 105.604, 0.12", "-213.196, 136.215, 112.112, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-162.696, 108.448, 58.9823, 0.12", "-173.407, 114.646, 61.1606, 0.12", "-183.405, 121.113, 65.1752, 0.12", "-191.933, 127.626, 71.7129, 0.12", "-199.363, 134.886, 78.7814, 0.12", "-205.986, 141.606, 87.08, 0.12", "-212.636, 149.132, 94.6313, 0.12", "-217.836, 156.87, 103.055, 0.12", "-222.548, 165.487, 110.893, 0.12" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-22.5504, 2.79756, 11.0825, 0.24", "-24.8331, 0.873995, 10.379, 0.24", "-26.4912, -0.448145, 9.93271, 0.24", "-29.0061, -2.4535, 9.25572, 0.24", "-30.4995, -3.64428, 8.85372, 0.24", "-31.4076, -4.36837, 8.60927, 0.24", "-32.6233, -5.33778, 8.28201, 0.24", "-33.7484, -6.09037, 8.20598, 0.24", "-41.4733, -14.4494, 6.77515, 0.24", "-49.4797, -22.6359, 7.4631, 0.24", "-58.7684, -29.3052, 8.37623, 0.24", "-67.7448, -35.6333, 11.6887, 0.24", "-76.1286, -43.1967, 13.7141, 0.24" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-22.5504, 2.79756, 11.0825, 0.6", "-24.9641, 2.38578, 11.112, 0.6", "-27.8378, 2.1063, 11.3976, 0.6", "-29.3561, 2.05788, 11.5936, 0.6", "-30.4314, 2.07718, 11.7368, 0.6", "-32.6926, 2.19826, 12.0026, 0.48", "-36.6045, 2.40769, 12.4625, 0.48", "-38.8153, 2.58434, 12.8072, 0.48", "-41.2201, 2.882, 13.2328, 0.48", "-43.0508, 3.19109, 13.6024, 0.48", "-45.5665, 3.7675, 14.1432, 0.48" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "18.8366, 89.3493, 5.33676, 0.36", "23.6403, 92.2202, 2.57871, 0.36", "25.5027, 93.3332, 1.50944, 0.36", "30.563, 96.3576, -1.39597, 0.36", "41.4066, 101.448, -5.16602, 0.36", "52.3806, 106.788, -8.12605, 0.36", "63.5525, 112.05, -10.4059, 0.36", "74.6321, 117.96, -10.5445, 0.36", "85.3679, 124.149, -12.579, 0.36", "95.5305, 130.289, -16.6689, 0.36", "104.68, 136.319, -22.8029, 0.36", "115.307, 140.305, -28.1776, 0.36", "126.591, 143.336, -32.78, 0.36", "138.454, 146.747, -35.089, 0.36", "150.525, 150.124, -35.8572, 0.36", "162.894, 151.876, -37.1411, 0.36", "175.369, 151.454, -35.7623, 0.36", "187.515, 149.618, -33.1521, 0.36", "199.785, 146.949, -32.9929, 0.36", "211.358, 142.155, -33.8847, 0.36", "223.737, 140.164, -33.1757, 0.36", "235.895, 137.778, -31.131, 0.36", "248.215, 135.372, -31.5298, 0.36", "260.687, 135.324, -30.0693, 0.36", "273.002, 136.559, -27.9416, 0.36", "285.402, 135.98, -26.0431, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "18.8366, 89.3493, 5.33676, 0.36", "19.2484, 91.0043, 5.66308, 0.36", "19.6097, 92.4562, 5.94936, 0.36", "21.6494, 97.5696, 6.34396, 0.36", "23.7076, 102.677, 6.72587, 0.36", "26.4811, 107.318, 7.83324, 0.36", "29.5237, 111.626, 9.45955, 0.36", "31.7316, 116.159, 11.7057, 0.36", "34.4936, 120.605, 13.4565, 0.36", "36.6478, 125.513, 14.771, 0.36", "38.4335, 130.577, 16.0486, 0.36", "40.2861, 135.254, 18.3205, 0.36" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-6.43234, 36.6202, -5.30329, 1.45", "-6.22827, 40.4829, -5.7526, 1.45", "-6.32546, 44.2641, -6.18593, 1.45", "-6.47634, 46.9529, -6.44066, 1.45", "-6.65215, 49.5408, -6.64514, 1.45", "-6.93677, 53.582, -6.91775, 1.08", "-7.1206, 56.0889, -7.21424, 1.08", "-7.64016, 61.1198, -8.01217, 0.96", "-8.06139, 65.4042, -8.78499, 0.96", "-8.33852, 68.8294, -9.43948, 0.96", "-8.51905, 72.3781, -10.1254, 0.96", "-8.61618, 78.3187, -11.2339, 0.96", "-8.55043, 82.893, -12.0872, 0.96", "-8.41992, 86.9491, -12.9354, 0.96", "-8.33737, 90.9508, -13.9922, 0.96", "-8.35652, 95.5983, -15.4233, 0.96", "-8.46427, 99.0906, -16.5997, 0.96", "-8.66255, 102.482, -17.8546, 0.96", "-9.06679, 107.103, -19.8465, 0.96", "-9.70242, 112.837, -22.7409, 0.96", "-10.326, 117.735, -25.287, 0.96", "-10.8805, 121.361, -27.1689, 0.96", "-11.4074, 124.623, -28.7637, 0.96", "-11.8929, 128.041, -30.2522, 0.96", "-12.3575, 132.131, -31.6745, 0.96", "-12.7323, 137.03, -33.0485, 0.96", "-12.9096, 140.464, -33.9918, 0.96", "-13.1145, 145.196, -35.1844, 0.96", "-13.2881, 149.952, -36.2658, 0.96", "-13.376, 152.49, -36.8316, 0.96", "-13.5898, 159.238, -38.2161, 0.96", "-13.6523, 163.54, -39.2252, 0.96", "-13.6494, 166.917, -39.9628, 0.96", "-13.6244, 170.322, -40.7262, 0.96", "-13.5916, 173.604, -41.4912, 0.96", "-13.5067, 177.871, -42.4924, 0.96", "-13.3728, 183.973, -43.8391, 0.96", "-13.2829, 186.651, -44.4622, 0.96", "-13.1054, 191.326, -45.7228, 0.96", "-13.0474, 193.257, -46.2922, 0.96", "-12.8892, 199.424, -48.2072, 1.2", "-12.8208, 202.898, -49.3083, 1.08", "-12.7877, 205.643, -50.1364, 1.33", "-12.6992, 210.81, -51.6348, 1.08", "-12.6408, 214.369, -52.5711, 1.08", "-12.5819, 217.608, -53.4241, 0.96", "-12.563, 218.363, -53.6226, 0.96", "-12.4702, 221.528, -54.3538, 0.96", "-12.4075, 224.261, -54.861, 0.96", "-12.2679, 228.459, -55.539, 0.72", "-12.1422, 231.728, -56.0073, 0.72", "-11.9934, 236.597, -56.6795, 0.72", "-11.9267, 239.485, -57.078, 0.96", "-11.9001, 242.061, -57.4288, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.43234, 36.6202, -5.30329, 0.72", "-12.9582, 39.0592, -8.40469, 0.72", "-15.234, 39.9661, -9.59358, 0.72", "-17.675, 40.9219, -10.7758, 0.72", "-19.6441, 41.7088, -11.6518, 0.72", "-22.2736, 42.934, -12.858, 0.6", "-26.5789, 45.3333, -14.9217, 0.6", "-29.3157, 47.1883, -16.2157, 0.6", "-31.9879, 49.3911, -17.653, 0.6", "-33.4494, 50.6786, -18.5125, 0.36", "-36.9941, 53.8818, -20.6071, 0.6", "-39.5023, 56.2237, -22.0101, 0.6", "-41.7528, 58.2345, -23.1426, 0.6", "-42.9844, 59.2662, -23.758, 0.48", "-48.7879, 64.019, -26.8191, 1.08", "-49.9736, 64.8738, -27.4208, 0.72", "-51.235, 65.5656, -27.9612, 0.48", "-54.5487, 66.9614, -29.2641, 0.84", "-57.4593, 67.981, -30.3322, 1.2" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "159.603, -160.805, 143.46, 0.24", "165.135, -165.682, 152.051, 0.24", "170.793, -169.166, 161.218, 0.24", "175.046, -172.036, 171.31, 0.24", "179.623, -175.864, 180.931, 0.24", "183.619, -180.615, 190.4, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "159.603, -160.805, 143.46, 0.24", "164.791, -163.932, 145.725, 0.24", "169.475, -167.873, 147.811, 0.24", "173.88, -172.213, 149.703, 0.24", "177.139, -177.28, 152.053, 0.24", "180.919, -182.378, 153.295, 0.24" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "157.307, -89.0177, -40.1983, 0.24", "159.547, -90.36, -41.3258, 0.24", "161.012, -91.2629, -42.2009, 0.24", "163.772, -93.0062, -43.9117, 0.24", "164.376, -93.3834, -44.2754, 0.24", "165.345, -93.9612, -44.8715, 0.24", "167.974, -95.5474, -46.4896, 0.24", "170.502, -97.087, -48.0939, 0.24", "171.491, -97.6822, -48.7156, 0.24", "173.425, -98.8279, -49.9095, 0.24", "175.694, -100.092, -51.365, 0.24", "177.165, -100.842, -52.3184, 0.24", "178.939, -101.706, -53.4864, 0.24", "180.782, -102.605, -54.6904, 0.24", "182.789, -103.587, -56.1189, 0.24", "185.077, -104.716, -57.7104, 0.24", "186.489, -105.419, -58.7495, 0.24", "187.983, -106.093, -59.8879, 0.24", "189.564, -106.808, -61.1266, 0.24", "192.611, -108.188, -63.551, 0.24", "194.545, -109.087, -65.0513, 0.24", "198.657, -111.049, -68.1952, 0.24", "201.518, -112.343, -70.4259, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "157.307, -89.0177, -40.1983, 0.24", "158.24, -91.9258, -38.9195, 0.24", "158.941, -94.1111, -37.9586, 0.24", "159.738, -96.5953, -36.8662, 0.24" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-45.5665, 3.7675, 14.1432, 0.24", "-47.4161, 3.68867, 12.9032, 0.24", "-49.4251, 3.72761, 11.6429, 0.24", "-50.485, 3.74815, 10.978, 0.24", "-52.5851, 3.78885, 9.6605, 0.24", "-54.7091, 3.83001, 8.32806, 0.24", "-56.5164, 3.86505, 7.19423, 0.24", "-57.5302, 3.87235, 6.61932, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-45.5665, 3.7675, 14.1432, 0.48", "-47.1138, 2.48743, 13.4176, 0.48", "-48.2673, 1.53315, 12.8767, 0.48", "-49.8089, 0.257846, 12.1538, 0.24", "-52.0819, -1.62255, 11.0878, 0.24", "-56.2167, -5.04311, 9.14887, 0.24", "-65.3427, -12.6297, 3.42318, 0.24", "-75.8196, -17.5531, -2.87126, 0.24", "-87.8944, -20.4183, -7.30032, 0.24" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "40.2861, 135.254, 18.3205, 0.24", "38.9953, 139.93, 26.6993, 0.24", "36.704, 143.254, 35.499, 0.24", "35.461, 145.27, 44.8865, 0.24", "32.4576, 149.365, 53.1294, 0.24", "28.5574, 152.316, 61.4851, 0.24", "25.8829, 155.581, 70.1982, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "40.2861, 135.254, 18.3205, 0.24", "45.3341, 143.85, 17.2733, 0.24", "50.9251, 152.164, 16.9414, 0.24", "57.4263, 159.715, 15.8482, 0.24" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-11.9001, 242.061, -57.4288, 0.84", "-11.5564, 246.005, -58.2386, 0.84", "-11.3917, 248.589, -58.7089, 0.84", "-11.1861, 252.355, -59.3267, 0.72", "-11.042, 254.912, -59.7542, 0.6", "-10.7221, 261.485, -60.8362, 0.84", "-10.5937, 264.696, -61.3485, 0.84", "-10.5527, 267.846, -61.8056, 0.6", "-10.5498, 270.369, -62.1959, 0.6", "-10.5882, 272.778, -62.583, 0.6", "-10.6978, 276.334, -63.237, 0.6", "-10.8898, 281.159, -64.2608, 0.6", "-11.1318, 285.766, -65.2678, 0.6", "-11.2911, 288.224, -65.7856, 0.6", "-11.5619, 291.646, -66.4569, 0.6", "-12.0163, 296.692, -67.3779, 0.6", "-12.3646, 300.449, -68.0306, 0.6", "-12.7592, 304.743, -68.7469, 0.6", "-13.0194, 307.91, -69.269, 0.48", "-13.316, 311.349, -69.8618, 0.48", "-13.5904, 314.12, -70.3442, 0.48", "-13.8859, 316.586, -70.769, 0.36", "-14.5003, 321.012, -71.715, 0.36", "-15.0821, 324.841, -72.6355, 0.36", "-15.6031, 328.209, -73.5715, 0.36", "-16.0858, 331.264, -74.4435, 0.36", "-16.656, 335.148, -75.533, 0.36", "-17.444, 340.738, -77.0652, 0.36", "-17.8515, 343.893, -77.8775, 0.36", "-18.3097, 348.109, -78.876, 0.36", "-18.6183, 352.111, -79.7578, 0.36", "-18.8916, 357.045, -80.7328, 0.36", "-19.0307, 360.741, -81.436, 0.36", "-19.1037, 362.643, -81.7721, 0.36", "-19.2878, 367.713, -82.6544, 0.36", "-19.3549, 370.604, -83.3258, 0.36", "-19.4637, 374.503, -84.4325, 0.36", "-19.6483, 378.792, -85.8571, 0.36", "-19.7999, 381.798, -87.1015, 0.36", "-20.0567, 385.127, -88.6544, 0.36", "-20.6968, 391.429, -91.931, 0.36", "-21.1695, 395.046, -93.8293, 0.36", "-21.6592, 398.353, -95.4546, 0.36", "-22.518, 403.681, -97.7859, 0.36", "-23.1802, 407.753, -99.3177, 0.36", "-23.8402, 411.685, -100.528, 0.12", "-24.5537, 416.38, -101.557, 0.12", "-25.1686, 421.616, -102.51, 0.12", "-25.5234, 425.655, -103.08, 0.12", "-25.912, 432.059, -103.796, 0.12", "-26.0192, 436.184, -104.284, 0.12", "-26.0528, 443.57, -105.269, 0.12", "-25.9001, 450.193, -106.332, 0.12", "-25.5943, 455.932, -107.448, 0.12", "-25.3697, 458.518, -108.006, 0.12", "-24.5386, 465.257, -109.651, 0.12", "-23.8577, 469.374, -110.732, 0.12", "-23.0389, 473.097, -111.826, 0.12", "-21.4084, 478.678, -113.53, 0.12", "-19.6514, 483.349, -114.943, 0.12", "-17.5429, 487.886, -116.38, 0.12", "-15.9889, 490.655, -117.277, 0.12", "-13.86, 494.014, -118.446, 0.12", "-11.7766, 497.209, -119.655, 0.12", "-9.74414, 500.162, -120.96, 0.12", "-7.63602, 503.282, -122.566, 0.12", "-6.64305, 505.126, -123.546, 0.12", "-5.65026, 507.812, -124.766, 0.12", "-4.72987, 512.212, -126.231, 0.12", "-4.35593, 516.318, -127.534, 0.12", "-4.35349, 518.248, -128.095, 0.12", "-4.54374, 524.812, -129.81, 0.12", "-4.80985, 530.553, -131.217, 0.12", "-5.23739, 536.554, -132.469, 0.12", "-5.83471, 542.236, -133.533, 0.12", "-6.61614, 547.309, -134.267, 0.12" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-11.9001, 242.061, -57.4288, 0.36", "-12.1384, 245.709, -58.6383, 0.36", "-12.3152, 249.303, -59.7276, 0.36", "-12.4182, 253.978, -60.9828, 0.36", "-12.4292, 259.172, -62.2268, 0.36", "-12.3736, 265.045, -63.5631, 0.36", "-12.2907, 267.969, -64.1839, 0.36", "-11.918, 273.4, -65.3571, 0.36", "-11.4106, 279.167, -66.6092, 0.36", "-10.9296, 284.211, -67.6509, 0.36", "-10.4418, 289.255, -68.6062, 0.36", "-9.85573, 295.711, -69.7534, 0.36", "-9.23139, 304.942, -71.4405, 0.36", "-9.01781, 311.353, -72.5957, 0.24", "-9.00302, 315.808, -73.4327, 0.24", "-9.0884, 321.69, -74.5256, 0.24", "-9.16868, 323.828, -74.9015, 0.24", "-9.51523, 328.912, -75.7928, 0.24", "-10.3506, 337.534, -77.1721, 0.24", "-10.6475, 339.974, -77.5985, 0.24", "-11.1689, 344.153, -78.3333, 0.24", "-11.6285, 348.311, -79.0275, 0.24", "-12.1086, 353.573, -79.8626, 0.24", "-12.559, 359.848, -80.7701, 0.24", "-12.9635, 365.974, -81.6176, 0.24", "-13.3053, 372.27, -82.5174, 0.24", "-13.5205, 377.759, -83.363, 0.24", "-13.568, 380.026, -83.7119, 0.24", "-13.5464, 384.747, -84.4361, 0.24", "-13.3531, 388.888, -85.1507, 0.24", "-12.8413, 394.717, -86.308, 0.24", "-12.4098, 399.31, -87.3721, 0.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-57.4593, 67.981, -30.3322, 0.48", "-58.0756, 70.0486, -32.2585, 0.48", "-59.2825, 73.9092, -35.1121, 0.48", "-60.643, 77.8078, -37.4272, 0.48", "-61.4971, 80.0849, -38.817, 0.48", "-62.4976, 82.3462, -40.2773, 0.48", "-63.7991, 85.2304, -41.9903, 0.36", "-65.3842, 88.5049, -43.8869, 0.6", "-66.8743, 91.434, -45.4736, 0.36", "-68.9655, 96.0088, -47.9704, 0.36", "-70.5717, 100.033, -50.2184, 0.36", "-71.9517, 103.807, -52.6336, 0.84", "-73.3529, 108.092, -55.5384, 0.48", "-73.7986, 109.623, -56.7162, 0.48", "-74.332, 111.825, -58.4943, 0.36", "-75.0467, 114.591, -60.7605, 1.08", "-76.5704, 119.907, -65.5607, 0.6", "-77.0341, 121.307, -66.8767, 0.6", "-78.8759, 126.42, -71.6564, 0.36", "-80.169, 129.764, -74.7629, 0.72", "-81.6921, 133.74, -78.2658, 0.72", "-83.1694, 137.806, -81.6559, 0.36", "-84.3486, 141.063, -84.2174, 0.84", "-86.2124, 145.851, -87.8278, 0.36", "-87.0453, 148.022, -89.3832, 0.96", "-90.1934, 156.35, -95.1693, 0.24", "-91.4524, 159.947, -97.5383, 0.72", "-93.5306, 165.686, -101.151, 0.36", "-94.7336, 168.697, -103.116, 1.69" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-57.4593, 67.981, -30.3322, 0.36", "-59.1332, 68.8995, -31.5139, 0.36", "-61.7017, 70.6445, -33.3911, 0.36", "-63.8037, 72.3453, -35.3091, 0.36", "-67.7134, 75.6725, -38.5315, 0.36", "-70.9008, 78.4706, -41.1517, 0.24", "-72.9502, 80.2487, -42.8, 0.12", "-75.7686, 82.788, -45.0089, 0.12", "-81.7934, 88.3421, -49.6286, 0.12", "-86.131, 91.591, -52.637, 0.12", "-89.5909, 93.8788, -54.9978, 0.12", "-91.5344, 95.0792, -56.1717, 0.12", "-93.5943, 96.3063, -57.3694, 0.12", "-94.5344, 96.8459, -57.8983, 0.12", "-111.251, 106.22, -67.0637, 0.12", "-117.583, 109.786, -70.7514, 0.12", "-125.127, 114.095, -75.0085, 0.12", "-133.469, 119.032, -79.82, 0.12" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-57.5302, 3.87235, 6.61932, 0.24", "-59.9141, 4.0049, 6.54266, 0.24", "-61.2307, 4.11129, 6.5095, 0.24", "-63.3572, 4.35836, 6.39071, 0.36", "-64.8029, 4.58086, 6.27541, 0.36", "-66.368, 4.89182, 6.25402, 0.36", "-67.2268, 5.0757, 6.26552, 0.36", "-68.8652, 5.49537, 6.28104, 0.36", "-71.1765, 6.08601, 6.33002, 0.36", "-72.8307, 6.49636, 6.36019, 0.36", "-76.4019, 7.33593, 6.37384, 0.36", "-77.3903, 7.56783, 6.37748, 0.36", "-79.6185, 8.06423, 6.37694, 0.36", "-81.093, 8.37747, 6.3792, 0.36", "-83.2021, 8.75819, 6.39506, 0.36", "-84.7021, 8.95842, 6.31851, 0.36", "-92.5653, 9.85493, 4.67636, 0.36", "-100.357, 10.1209, 2.54318, 0.36", "-107.712, 11.7199, -0.404837, 0.36", "-114.555, 15.0921, -3.07397, 0.36", "-120.466, 19.9044, -5.76413, 0.36", "-127.744, 22.5161, -8.11856, 0.36", "-135.03, 24.2494, -11.1567, 0.36", "-142.274, 25.4943, -14.52, 0.36", "-148.929, 27.7936, -18.4884, 0.36", "-156.199, 28.8831, -21.8497, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-57.5302, 3.87235, 6.61932, 0.24", "-56.4733, 6.45714, 6.01344, 0.24", "-56.2262, 7.19991, 5.8695, 0.24", "-55.6828, 8.74166, 5.62029, 0.24", "-55.4226, 9.45527, 5.52769, 0.24", "-53.8842, 13.4015, 5.08522, 0.24", "-53.0929, 15.2976, 4.90459, 0.24", "-52.2397, 17.3058, 4.77751, 0.24", "-50.8861, 20.3184, 4.64059, 0.24", "-49.9752, 22.2164, 4.60662, 0.24", "-49.0382, 24.1015, 4.56369, 0.24", "-48.4478, 25.2555, 4.55449, 0.24", "-48.0436, 26.0345, 4.53663, 0.24", "-47.4223, 27.1884, 4.45334, 0.24", "-46.3408, 29.1965, 4.28946, 0.24", "-44.1915, 33.0472, 3.96945, 0.24", "-42.8859, 35.3329, 3.82733, 0.24", "-41.5722, 37.5218, 3.68024, 0.24", "-39.5577, 40.7991, 3.45879, 0.24", "-37.3762, 44.2661, 3.23361, 0.24", "-36.401, 45.7275, 3.16415, 0.24", "-34.9257, 47.6918, 3.1734, 0.24", "-32.7124, 50.4844, 3.1546, 0.24" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-12.4098, 399.31, -87.3721, 0.24", "-11.7243, 404.76, -88.4962, 0.24", "-11.2753, 408.508, -89.1931, 0.24", "-10.8227, 412.413, -89.8555, 0.24", "-10.0395, 419.091, -90.9213, 0.24", "-9.2764, 425.439, -91.8949, 0.24", "-8.83463, 428.907, -92.4155, 0.24", "-8.179, 433.386, -92.924, 0.24", "-7.28355, 438.742, -93.4686, 0.24", "-6.52471, 443.14, -93.8414, 0.24", "-5.95484, 446.663, -94.0908, 0.24", "-5.39178, 451.339, -94.3209, 0.24", "-5.12639, 455.637, -94.4758, 0.24", "-5.141, 459.612, -94.5642, 0.24", "-5.3751, 462.698, -94.5878, 0.24", "-6.00335, 466.923, -94.7065, 0.24", "-7.11482, 472.396, -94.9505, 0.24", "-8.48544, 478.858, -95.0592, 0.24", "-9.41058, 483.553, -95.0889, 0.24", "-10.515, 491.319, -94.6869, 0.24", "-10.9393, 496.024, -94.2444, 0.24", "-11.0753, 500.968, -93.8331, 0.24", "-10.7307, 510.196, -92.8456, 0.24", "-10.202, 516.051, -92.1552, 0.24", "-9.38438, 522.878, -91.4757, 0.24", "-9.00867, 525.589, -91.2629, 0.24", "-7.6858, 534.715, -90.4462, 0.24", "-6.85746, 540.739, -90.1435, 0.24", "-6.46002, 544.896, -90.2762, 0.24", "-6.13161, 550.757, -90.6988, 0.24", "-6.12974, 554.906, -91.2875, 0.24", "-6.14286, 559.913, -91.8721, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-12.4098, 399.31, -87.3721, 0.24", "-13.2622, 403.795, -88.4339, 0.24", "-13.8955, 407.128, -89.2228, 0.24", "-14.6064, 410.87, -90.1084, 0.24", "-15.5607, 415.892, -91.2971, 0.24", "-16.9073, 422.979, -92.9745, 0.24", "-17.5952, 426.599, -93.8313, 0.24" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-94.7336, 168.697, -103.116, 0.48", "-100.564, 172.41, -109.559, 0.48", "-110.356, 177.95, -118.671, 0.12", "-118.241, 182.027, -125.172, 0.24", "-123.277, 184.431, -128.723, 0.24", "-126.558, 185.964, -130.652, 0.24", "-130.746, 187.943, -132.983, 0.24", "-134.822, 189.754, -134.549, 0.24", "-137.281, 190.716, -135.394, 0.24", "-142.942, 193.042, -138.352, 0.24", "-149.553, 196.086, -142.641, 0.24", "-153.008, 197.981, -145.307, 0.24", "-155.873, 199.944, -147.927, 0.24", "-162.6, 205.375, -155.279, 0.24", "-167.819, 209.777, -161.706, 0.24", "-169.262, 210.957, -163.587, 0.24", "-171.691, 212.789, -166.747, 0.24", "-175.092, 215.147, -170.636, 0.24", "-177.82, 216.938, -173.444, 0.24", "-184.498, 220.717, -179.073, 0.24", "-188.256, 222.492, -182.059, 0.24", "-192.429, 224.222, -185.382, 0.24", "-195.473, 225.271, -187.767, 0.24", "-199.352, 226.428, -190.619, 0.24", "-203.194, 227.726, -193.356, 0.24", "-207.471, 229.727, -196.501, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-94.7336, 168.697, -103.116, 0.48", "-95.2754, 174.916, -112.626, 0.48", "-95.9082, 183.566, -126.069, 0.24", "-96.4853, 191.265, -137.594, 0.24", "-97.2932, 199.432, -149.533, 0.24", "-97.8736, 204.1, -156.186, 0.24", "-98.5384, 209.446, -163.805, 0.24", "-99.4078, 215.873, -172.762, 0.24", "-99.7599, 218.897, -176.986, 0.24", "-100.323, 224.454, -184.641, 0.24", "-101.816, 231.699, -193.911, 0.24" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-156.199, 28.8831, -21.8497, 0.24", "-166.985, 30.4546, -25.0921, 0.24", "-177.598, 30.6886, -29.1668, 0.24", "-187.849, 31.8106, -33.9607, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-156.199, 28.8831, -21.8497, 0.24", "-163.242, 31.7831, -23.4909, 0.24", "-170.5, 34.6033, -23.7707, 0.24", "-177.54, 37.5243, -22.1497, 0.24", "-183.683, 41.2065, -19.0813, 0.24" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-17.5952, 426.599, -93.8313, 0.24", "-17.4821, 433.577, -93.7459, 0.24", "-17.3958, 438.906, -93.6807, 0.24", "-17.3319, 442.847, -93.6325, 0.24", "-17.2801, 446.044, -93.5933, 0.24", "-17.1878, 451.741, -93.5236, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-17.5952, 426.599, -93.8313, 0.24", "-17.7032, 433.522, -93.6072, 0.24", "-18.7294, 440.13, -93.2568, 0.24", "-20.2089, 445.896, -93.1969, 0.24", "-21.6208, 450.506, -93.0598, 0.24", "-22.9767, 454.562, -93.1454, 0.24", "-24.4479, 459.037, -93.3868, 0.24", "-27.6101, 467.919, -93.8031, 0.24", "-30.3845, 475.048, -94.422, 0.24", "-32.6775, 480.95, -95.1938, 0.24", "-34.9463, 487.958, -96.6211, 0.24", "-35.9579, 492.261, -97.6456, 0.24", "-36.3676, 494.248, -98.0527, 0.24", "-37.1729, 498.506, -98.793, 0.24", "-37.8394, 502.074, -99.2856, 0.24", "-40.194, 514.016, -100.652, 0.24", "-41.1857, 518.846, -101.012, 0.24", "-45.603, 539.25, -102.401, 0.24", "-46.756, 544.896, -102.775, 0.24", "-47.9461, 551.292, -103.259, 0.24", "-48.9343, 557.374, -103.861, 0.24", "-49.4677, 561.526, -104.34, 0.24", "-49.8903, 568.272, -105.407, 0.24", "-49.7429, 574.258, -106.596, 0.24", "-49.4451, 581.906, -108.243, 0.24", "-48.9579, 591.819, -110.534, 0.24", "-48.3347, 602.044, -113.028, 0.24", "-47.58, 613.977, -115.979, 0.24", "-46.9778, 623.482, -118.246, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-183.683, 41.2065, -19.0813, 0.24", "-192.82, 45.2776, -18.228, 0.24", "-201.7, 49.5749, -16.363, 0.24", "-210.639, 53.6233, -14.242, 0.24", "-219.042, 58.9087, -12.7438, 0.24", "-226.768, 64.6325, -9.85554, 0.24", "-235.087, 70.0873, -8.50331, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-183.683, 41.2065, -19.0813, 0.24", "-192.047, 45.3578, -18.5217, 0.24", "-200.183, 49.9551, -18.9549, 0.24", "-207.961, 55.069, -19.8778, 0.24", "-216.629, 58.4247, -20.9412, 0.24", "-225.486, 61.369, -20.3243, 0.24", "-233.871, 65.4904, -20.7964, 0.24", "-241.455, 70.9667, -20.8923, 0.24", "-248.468, 77.1572, -20.9029, 0.24", "-255.678, 82.9976, -19.7112, 0.24", "-262.697, 89.0459, -18.4217, 0.24", "-270.144, 94.466, -16.7855, 0.24" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_55", "dend_44", "dend_35", "dend_0", "dend_59", "dend_56", "dend_54", "dend_45", "dend_37", "dend_36", "dend_20", "dend_1", "dend_58", "dend_57", "dend_51", "dend_46", "dend_43", "dend_38", "dend_32", "dend_21", "dend_15", "dend_2", "dend_53", "dend_52", "dend_50", "dend_47", "dend_40", "dend_39", "dend_34", "dend_33", "dend_31", "dend_22", "dend_19", "dend_16", "dend_8", "dend_3", "dend_49", "dend_48", "dend_42", "dend_41", "dend_24", "dend_23", "dend_18", "dend_17", "dend_14", "dend_9", "dend_5", "dend_4", "dend_26", "dend_25", "dend_13", "dend_10", "dend_7", "dend_6", "dend_30", "dend_27", "dend_12", "dend_11", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_0", "dend_0", "axon_0", "axon_0", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_56", "dend_56", "dend_56", "dend_56", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_45", "dend_45", "dend_45", "dend_45", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_20", "dend_1", "dend_1", "axon_1", "axon_1", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L6_NBC_55825b9e30_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_59, id: dend_59, parent: dend_55
create dend_59
public dend_59
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_54, id: dend_54, parent: dend_44
create dend_54
public dend_54
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_20
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_21
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_8
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_55(0), soma_0(0.4499999174985625)
    connect dend_44(0), soma_0(0.4499999174985625)
    connect dend_35(0), soma_0(0.4499999174985625)
    connect dend_0(0), soma_0(0.4499999174985625)
    connect axon_0(0), soma_0(1.0)
    connect dend_59(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_54(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_14(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.18133, 10.1802, -0.0136132, 4.51632 ) }
    soma_0 { pt3dadd( -3.71511, 9.17715, -0.012728, 5.89932 ) }
    soma_0 { pt3dadd( -3.24888, 8.1741, -0.0118428, 6.73586 ) }
    soma_0 { pt3dadd( -2.78266, 7.17105, -0.0109576, 7.77662 ) }
    soma_0 { pt3dadd( -2.31644, 6.16799, -0.0100724, 8.83653 ) }
    soma_0 { pt3dadd( -1.85022, 5.16494, -0.00918717, 9.98865 ) }
    soma_0 { pt3dadd( -1.384, 4.16189, -0.00830196, 11.1793 ) }
    soma_0 { pt3dadd( -0.917776, 3.15884, -0.00741676, 12.3766 ) }
    soma_0 { pt3dadd( -0.451555, 2.15579, -0.00653155, 13.3418 ) }
    soma_0 { pt3dadd( 0.0146667, 1.15274, -0.00564635, 14.1684 ) }
    soma_0 { pt3dadd( 0.480888, 0.149684, -0.00476114, 14.5557 ) }
    soma_0 { pt3dadd( 0.94711, -0.853367, -0.00387593, 14.9116 ) }
    soma_0 { pt3dadd( 1.41333, -1.85642, -0.00299073, 14.9294 ) }
    soma_0 { pt3dadd( 1.87955, -2.85947, -0.00210552, 14.4593 ) }
    soma_0 { pt3dadd( 2.34577, -3.86252, -0.00122032, 13.9684 ) }
    soma_0 { pt3dadd( 2.812, -4.86557, -3.35112E-4, 13.2352 ) }
    soma_0 { pt3dadd( 3.27822, -5.86863, 5.50094E-4, 12.4898 ) }
    soma_0 { pt3dadd( 3.74444, -6.87168, 0.0014353, 11.1742 ) }
    soma_0 { pt3dadd( 4.21066, -7.87473, 0.0023205, 8.60206 ) }
    soma_0 { pt3dadd( 4.67688, -8.87778, 0.00320571, 5.94918 ) }
    soma_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 3.45007 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 21/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -4.86983, -2.64386, 10.4413, 1.08 ) }
    dend_55 { pt3dadd( -7.63977, -3.7926, 10.4645, 1.08 ) }
    dend_55 { pt3dadd( -9.85289, -4.82514, 10.4805, 0.96 ) }
    dend_55 { pt3dadd( -10.9825, -5.41104, 10.4877, 0.96 ) }
    dend_55 { pt3dadd( -13.605, -6.846, 10.6909, 0.84 ) }
    dend_55 { pt3dadd( -16.0363, -8.30531, 11.0469, 0.84 ) }
    dend_55 { pt3dadd( -18.8545, -10.1808, 11.5088, 0.84 ) }
    dend_55 { pt3dadd( -21.3323, -11.8189, 11.9717, 0.84 ) }
    dend_55 { pt3dadd( -23.3876, -13.2384, 12.4128, 0.84 ) }
    dend_55 { pt3dadd( -26.1674, -15.3707, 13.1114, 0.84 ) }
    dend_55 { pt3dadd( -28.0441, -17.0878, 13.7096, 0.84 ) }
    dend_55 { pt3dadd( -30.6674, -19.909, 14.8031, 0.84 ) }
    dend_55 { pt3dadd( -41.4005, -25.7067, 17.0935, 0.84 ) }
    dend_55 { pt3dadd( -50.5234, -34.1148, 17.4625, 0.84 ) }
    dend_55 { pt3dadd( -58.7282, -43.3704, 16.4261, 0.84 ) }
    dend_55 { pt3dadd( -66.0909, -53.2594, 14.9914, 0.84 ) }
    dend_55 { pt3dadd( -73.3367, -63.3289, 15.3945, 0.84 ) }
    dend_55 { pt3dadd( -79.2762, -74.2118, 15.9813, 0.84 ) }
    dend_55 { pt3dadd( -86.3901, -84.3696, 16.5031, 0.84 ) }
    dend_55 { pt3dadd( -93.1292, -94.7545, 15.6102, 0.84 ) }
    dend_55 { pt3dadd( -99.3802, -105.434, 16.5773, 0.84 ) }
    dend_55 { pt3dadd( -105.632, -116.15, 16.9594, 0.84 ) }
    dend_55 { pt3dadd( -111.753, -126.902, 17.9576, 0.84 ) }
    dend_55 { pt3dadd( -117.63, -137.701, 19.658, 0.84 ) }
    dend_55 { pt3dadd( -124.573, -147.42, 23.034, 0.84 ) }
    dend_55 { pt3dadd( -131.19, -157.26, 26.7011, 0.84 ) }
    dend_55 { pt3dadd( -137.601, -167.733, 28.5121, 0.84 ) }
    dend_55 { pt3dadd( -143.312, -178.73, 27.8023, 0.84 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 49/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 4.44017, -8.93386, -1.30865, 2.77 ) }
    dend_44 { pt3dadd( 5.24958, -11.3147, -1.2752, 2.77 ) }
    dend_44 { pt3dadd( 6.08317, -13.7666, -1.24076, 1.69 ) }
    dend_44 { pt3dadd( 7.02525, -16.5376, -1.20183, 1.69 ) }
    dend_44 { pt3dadd( 7.81068, -18.8479, -1.16938, 2.29 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 54/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 8.18017, -1.32386, -14.5587, 2.65 ) }
    dend_35 { pt3dadd( 10.2357, -2.80093, -15.9707, 2.05 ) }
    dend_35 { pt3dadd( 14.9173, -6.16514, -19.1867, 2.41 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.00983, 11.8561, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -5.83014, 15.722, 0.0313539, 4.22 ) }
    dend_0 { pt3dadd( -6.31384, 16.7492, 0.0313539, 4.22 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 60/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 5.1431, -9.88083, 0.00409092, 1.16335 ) }
    axon_0 { pt3dadd( 11.4656, -23.4833, 0.00409092, 1.16335 ) }
    axon_0 { pt3dadd( 17.788, -37.0857, 0.00409092, 1.16335 ) }
    // Section: dend_59, id: dend_59, parent: dend_55 (entry count 63/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -143.312, -178.73, 27.8023, 0.24 ) }
    dend_59 { pt3dadd( -151.472, -179.436, 25.177, 0.24 ) }
    dend_59 { pt3dadd( -159.834, -179.973, 23.2421, 0.24 ) }
    dend_59 { pt3dadd( -168.3, -180.013, 21.7277, 0.24 ) }
    dend_59 { pt3dadd( -176.651, -178.53, 20.307, 0.24 ) }
    dend_59 { pt3dadd( -184.909, -177.329, 18.2239, 0.24 ) }
    dend_59 { pt3dadd( -192.971, -175.565, 15.8033, 0.24 ) }
    dend_59 { pt3dadd( -200.683, -174.21, 12.2469, 0.24 ) }
    dend_59 { pt3dadd( -207.917, -172.357, 7.98041, 0.24 ) }
    dend_59 { pt3dadd( -214.556, -169.159, 3.54646, 0.24 ) }
    dend_59 { pt3dadd( -221.324, -165.594, -0.383979, 0.24 ) }
    dend_59 { pt3dadd( -228.104, -163.134, -5.0686, 0.24 ) }
    dend_59 { pt3dadd( -234.68, -159.427, -9.18864, 0.24 ) }
    dend_59 { pt3dadd( -240.373, -154.045, -12.7357, 0.24 ) }
    dend_59 { pt3dadd( -246.121, -149.532, -17.2705, 0.24 ) }
    dend_59 { pt3dadd( -252.486, -145.671, -21.5773, 0.24 ) }
    dend_59 { pt3dadd( -258.118, -140.779, -25.8553, 0.24 ) }
    dend_59 { pt3dadd( -264.839, -137.235, -29.8851, 0.24 ) }
    dend_59 { pt3dadd( -270.639, -134.835, -35.7641, 0.24 ) }
    dend_59 { pt3dadd( -275.429, -132.191, -42.3994, 0.24 ) }
    dend_59 { pt3dadd( -279.274, -130.519, -49.9089, 0.24 ) }
    dend_59 { pt3dadd( -281.966, -128.169, -57.7313, 0.24 ) }
    dend_59 { pt3dadd( -284.452, -124.846, -65.2643, 0.24 ) }
    dend_59 { pt3dadd( -288.397, -120.271, -71.3856, 0.24 ) }
    dend_59 { pt3dadd( -293.262, -116.814, -77.5781, 0.24 ) }
    dend_59 { pt3dadd( -298.554, -113.064, -83.2255, 0.24 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 89/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -143.312, -178.73, 27.8023, 0.24 ) }
    dend_56 { pt3dadd( -145.709, -187.34, 30.4873, 0.24 ) }
    dend_56 { pt3dadd( -147.082, -195.418, 34.9509, 0.24 ) }
    dend_56 { pt3dadd( -148.448, -203.05, 40.1435, 0.24 ) }
    dend_56 { pt3dadd( -148.193, -211.512, 44.0685, 0.24 ) }
    // Section: dend_54, id: dend_54, parent: dend_44 (entry count 94/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 7.81068, -18.8479, -1.16938, 0.84 ) }
    dend_54 { pt3dadd( 6.06368, -26.7656, 0.582543, 0.84 ) }
    dend_54 { pt3dadd( 5.48163, -29.521, 1.09751, 0.84 ) }
    dend_54 { pt3dadd( 4.90753, -32.4253, 1.58173, 0.84 ) }
    dend_54 { pt3dadd( 4.48196, -34.7003, 1.53975, 0.84 ) }
    dend_54 { pt3dadd( 4.16368, -37.0452, 1.17938, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_54 { pt3dadd( 3.89662, -40.0814, 0.479852, 0.72 ) }
    dend_54 { pt3dadd( 3.85427, -41.799, -0.455517, 0.72 ) }
    dend_54 { pt3dadd( 3.88645, -42.8763, -1.19097, 0.72 ) }
    dend_54 { pt3dadd( 4.30649, -49.8459, -6.67713, 0.72 ) }
    dend_54 { pt3dadd( 4.44496, -52.3869, -8.83681, 0.72 ) }
    dend_54 { pt3dadd( 4.48458, -53.5612, -9.88755, 0.72 ) }
    dend_54 { pt3dadd( 4.48286, -57.2986, -13.2529, 0.6 ) }
    dend_54 { pt3dadd( 4.39321, -60.1081, -15.6539, 0.6 ) }
    dend_54 { pt3dadd( 4.25707, -62.7536, -17.735, 0.6 ) }
    dend_54 { pt3dadd( 4.17805, -65.0412, -19.2155, 0.6 ) }
    dend_54 { pt3dadd( 4.20612, -66.4525, -20.2403, 0.6 ) }
    dend_54 { pt3dadd( 4.31694, -67.7502, -21.3261, 0.6 ) }
    dend_54 { pt3dadd( 4.44509, -68.6581, -22.1179, 0.6 ) }
    dend_54 { pt3dadd( 4.99122, -71.959, -25.1656, 0.6 ) }
    dend_54 { pt3dadd( 5.41386, -74.0733, -27.1904, 0.6 ) }
    dend_54 { pt3dadd( 6.17058, -77.7963, -30.9784, 0.6 ) }
    dend_54 { pt3dadd( 6.7139, -81.3504, -34.6862, 0.6 ) }
    dend_54 { pt3dadd( 6.85051, -82.9562, -36.3199, 0.6 ) }
    dend_54 { pt3dadd( 6.83555, -83.8912, -37.2949, 0.48 ) }
    dend_54 { pt3dadd( 6.73391, -84.9786, -38.3778, 0.48 ) }
    dend_54 { pt3dadd( 6.07893, -88.4419, -41.618, 0.48 ) }
    dend_54 { pt3dadd( 5.75613, -89.9008, -42.8334, 0.48 ) }
    dend_54 { pt3dadd( 5.32717, -92.0621, -44.4651, 0.48 ) }
    dend_54 { pt3dadd( 4.31349, -97.4861, -48.4152, 0.24 ) }
    dend_54 { pt3dadd( 4.09102, -99.0582, -49.4932, 0.24 ) }
    dend_54 { pt3dadd( 3.75956, -102.033, -51.3734, 0.24 ) }
    dend_54 { pt3dadd( 3.62017, -104.021, -52.497, 0.24 ) }
    dend_54 { pt3dadd( 3.56144, -106.531, -53.7338, 0.24 ) }
    dend_54 { pt3dadd( 3.57301, -108.048, -54.5473, 0.36 ) }
    dend_54 { pt3dadd( 3.85597, -113.637, -57.7729, 0.36 ) }
    dend_54 { pt3dadd( 3.88156, -113.954, -57.9823, 0.36 ) }
    dend_54 { pt3dadd( 4.01463, -115.175, -58.9304, 0.96 ) }
    dend_54 { pt3dadd( 4.46926, -118.838, -61.9763, 0.36 ) }
    dend_54 { pt3dadd( 5.44841, -125.818, -68.3161, 1.81 ) }
    dend_54 { pt3dadd( 5.99484, -129.328, -71.6344, 0.6 ) }
    dend_54 { pt3dadd( 6.44227, -132.207, -74.4626, 0.6 ) }
    dend_54 { pt3dadd( 7.13615, -136.429, -78.57, 0.36 ) }
    dend_54 { pt3dadd( 7.47273, -138.158, -80.7247, 0.96 ) }
    dend_54 { pt3dadd( 8.05215, -140.642, -84.1664, 0.36 ) }
    dend_54 { pt3dadd( 8.42991, -142.13, -86.2886, 0.96 ) }
    dend_54 { pt3dadd( 9.51505, -146.239, -92.465, 0.36 ) }
    dend_54 { pt3dadd( 9.93996, -147.81, -94.9726, 1.57 ) }
    dend_54 { pt3dadd( 12.9929, -158.839, -113.365, 0.72 ) }
    dend_54 { pt3dadd( 13.4343, -160.505, -116.371, 0.72 ) }
    dend_54 { pt3dadd( 13.4832, -160.69, -116.729, 1.45 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 45/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 7.81068, -18.8479, -1.16938, 1.45 ) }
    dend_45 { pt3dadd( 10.7035, -20.0267, -1.16143, 1.45 ) }
    dend_45 { pt3dadd( 13.1849, -21.0378, -1.15461, 1.45 ) }
    dend_45 { pt3dadd( 15.6187, -22.0295, -1.14792, 1.45 ) }
    dend_45 { pt3dadd( 17.5049, -22.7981, -1.14274, 1.45 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 50/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 14.9173, -6.16514, -19.1867, 1.33 ) }
    dend_37 { pt3dadd( 18.0167, -6.18892, -19.4368, 1.33 ) }
    dend_37 { pt3dadd( 23.2836, -6.22932, -19.8617, 1.33 ) }
    dend_37 { pt3dadd( 28.7013, -6.27088, -20.2989, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 54/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 14.9173, -6.16514, -19.1867, 0.72 ) }
    dend_36 { pt3dadd( 16.1656, -9.03856, -20.3914, 0.72 ) }
    dend_36 { pt3dadd( 17.1651, -11.9174, -21.43, 0.72 ) }
    dend_36 { pt3dadd( 18.2155, -14.5559, -22.327, 0.72 ) }
    dend_36 { pt3dadd( 19.2054, -16.7192, -23.0362, 0.6 ) }
    dend_36 { pt3dadd( 20.5566, -19.6833, -24.0351, 0.6 ) }
    dend_36 { pt3dadd( 21.848, -22.4472, -24.9915, 0.6 ) }
    dend_36 { pt3dadd( 22.9216, -24.6102, -25.716, 0.36 ) }
    dend_36 { pt3dadd( 24.5994, -27.9705, -26.8657, 0.48 ) }
    dend_36 { pt3dadd( 25.6471, -30.0756, -27.5694, 0.36 ) }
    dend_36 { pt3dadd( 27.7819, -34.4175, -29.2761, 0.36 ) }
    dend_36 { pt3dadd( 29.7138, -38.2794, -31.2642, 0.36 ) }
    dend_36 { pt3dadd( 31.0788, -41.2818, -32.8096, 0.36 ) }
    dend_36 { pt3dadd( 32.3486, -44.1839, -34.3698, 0.36 ) }
    dend_36 { pt3dadd( 34.8283, -50.4071, -37.8187, 0.36 ) }
    dend_36 { pt3dadd( 37.1463, -56.5396, -41.3499, 0.36 ) }
    dend_36 { pt3dadd( 39.3919, -62.5805, -45.0229, 0.24 ) }
    dend_36 { pt3dadd( 41.0607, -67.7023, -48.3648, 0.24 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.31384, 16.7492, 0.0313539, 1.81 ) }
    dend_20 { pt3dadd( -10.7711, 17.2027, 4.58956, 1.81 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 74/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -6.31384, 16.7492, 0.0313539, 2.65 ) }
    dend_1 { pt3dadd( -5.91155, 20.5771, -0.39861, 2.65 ) }
    dend_1 { pt3dadd( -5.72994, 22.3051, -0.592711, 2.65 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 77/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 17.788, -37.0857, 0.00409092, 0.48 ) }
    axon_1 { pt3dadd( 24.1105, -50.6882, 0.00409092, 0.48 ) }
    axon_1 { pt3dadd( 30.4329, -64.2906, 0.00409092, 0.48 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 80/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -148.193, -211.512, 44.0685, 0.24 ) }
    dend_58 { pt3dadd( -149.263, -221.064, 47.6736, 0.24 ) }
    dend_58 { pt3dadd( -152.484, -230.397, 50.4813, 0.24 ) }
    dend_58 { pt3dadd( -154.422, -239.746, 54.2535, 0.24 ) }
    dend_58 { pt3dadd( -156.227, -249.701, 55.9892, 0.24 ) }
    dend_58 { pt3dadd( -156.664, -259.667, 58.4103, 0.24 ) }
    dend_58 { pt3dadd( -158.105, -269.581, 60.6506, 0.24 ) }
    dend_58 { pt3dadd( -161.294, -279.303, 61.48, 0.24 ) }
    dend_58 { pt3dadd( -165.666, -288.57, 60.8606, 0.24 ) }
    dend_58 { pt3dadd( -171.661, -296.719, 62.5988, 0.24 ) }
    dend_58 { pt3dadd( -176.583, -305.712, 63.1267, 0.24 ) }
    dend_58 { pt3dadd( -182.615, -313.987, 63.8567, 0.24 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 92/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -148.193, -211.512, 44.0685, 0.24 ) }
    dend_57 { pt3dadd( -148.866, -216.22, 46.502, 0.24 ) }
    dend_57 { pt3dadd( -149.354, -220.705, 49.3632, 0.24 ) }
    dend_57 { pt3dadd( -150.618, -224.562, 52.838, 0.24 ) }
    dend_57 { pt3dadd( -151.099, -229.08, 55.6478, 0.24 ) }
    dend_57 { pt3dadd( -152.417, -233.617, 58.1421, 0.24 ) }
    dend_57 { pt3dadd( -154.875, -237.821, 60.3389, 0.24 ) }
    dend_57 { pt3dadd( -157.731, -241.665, 62.7085, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_57 { pt3dadd( -161.538, -245.07, 64.2743, 0.24 ) }
    dend_57 { pt3dadd( -165.433, -248.554, 65.3855, 0.24 ) }
    dend_57 { pt3dadd( -169.078, -252.429, 65.876, 0.24 ) }
    dend_57 { pt3dadd( -172.984, -255.886, 67.0319, 0.24 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 17.5049, -22.7981, -1.14274, 0.36 ) }
    dend_51 { pt3dadd( 18.7437, -24.5498, -1.89023, 0.36 ) }
    dend_51 { pt3dadd( 20.6943, -27.3081, -3.0673, 0.36 ) }
    dend_51 { pt3dadd( 22.5654, -29.954, -4.19638, 0.36 ) }
    dend_51 { pt3dadd( 23.9853, -31.9618, -5.05314, 0.6 ) }
    dend_51 { pt3dadd( 26.9377, -36.1367, -6.8347, 0.6 ) }
    dend_51 { pt3dadd( 28.4902, -38.3321, -7.77152, 1.08 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 11/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 17.5049, -22.7981, -1.14274, 0.84 ) }
    dend_46 { pt3dadd( 19.1375, -23.7542, 0.292395, 0.84 ) }
    dend_46 { pt3dadd( 20.9705, -24.8765, 1.84064, 0.84 ) }
    dend_46 { pt3dadd( 22.2804, -25.6976, 2.86347, 0.72 ) }
    dend_46 { pt3dadd( 24.4394, -27.0587, 4.43072, 0.72 ) }
    dend_46 { pt3dadd( 28.6266, -29.8024, 7.2633, 0.72 ) }
    dend_46 { pt3dadd( 30.5939, -31.1822, 8.5065, 0.6 ) }
    dend_46 { pt3dadd( 32.0861, -32.3499, 9.42743, 0.6 ) }
    dend_46 { pt3dadd( 33.4059, -33.5127, 10.1311, 0.6 ) }
    dend_46 { pt3dadd( 34.1832, -34.3104, 10.4745, 0.6 ) }
    dend_46 { pt3dadd( 35.5575, -35.8496, 10.8264, 0.36 ) }
    dend_46 { pt3dadd( 36.9838, -37.4249, 10.8698, 0.36 ) }
    dend_46 { pt3dadd( 38.1174, -38.6307, 10.9811, 0.36 ) }
    dend_46 { pt3dadd( 39.3297, -39.9563, 11.3051, 0.36 ) }
    dend_46 { pt3dadd( 40.2737, -40.8927, 11.6935, 0.36 ) }
    dend_46 { pt3dadd( 41.5157, -41.9421, 12.3385, 0.36 ) }
    dend_46 { pt3dadd( 42.2971, -42.4689, 12.8029, 0.36 ) }
    dend_46 { pt3dadd( 45.0883, -43.898, 14.5609, 0.36 ) }
    dend_46 { pt3dadd( 46.9326, -44.7094, 15.6979, 0.36 ) }
    dend_46 { pt3dadd( 48.7053, -45.4183, 16.8664, 0.36 ) }
    dend_46 { pt3dadd( 49.8564, -45.8776, 17.6654, 0.36 ) }
    dend_46 { pt3dadd( 50.482, -46.1485, 18.1055, 0.36 ) }
    dend_46 { pt3dadd( 51.4692, -46.6046, 18.7015, 0.36 ) }
    dend_46 { pt3dadd( 53.1381, -47.1837, 19.1614, 0.36 ) }
    dend_46 { pt3dadd( 60.6527, -52.5519, 24.8751, 0.36 ) }
    dend_46 { pt3dadd( 67.2006, -57.5569, 31.9466, 0.36 ) }
    dend_46 { pt3dadd( 73.4314, -62.0981, 39.5943, 0.36 ) }
    dend_46 { pt3dadd( 78.3699, -67.8876, 47.3419, 0.36 ) }
    dend_46 { pt3dadd( 82.0278, -74.7635, 54.9098, 0.36 ) }
    dend_46 { pt3dadd( 86.7901, -80.3482, 62.9138, 0.36 ) }
    dend_46 { pt3dadd( 91.5334, -86.6201, 70.4036, 0.36 ) }
    dend_46 { pt3dadd( 96.8486, -94.0137, 76.321, 0.36 ) }
    dend_46 { pt3dadd( 101.021, -101.857, 82.5656, 0.36 ) }
    dend_46 { pt3dadd( 104.219, -110.72, 87.9655, 0.36 ) }
    dend_46 { pt3dadd( 107.396, -119.561, 93.4129, 0.36 ) }
    dend_46 { pt3dadd( 109.995, -128.215, 99.4362, 0.36 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 47/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 28.7013, -6.27088, -20.2989, 1.32 ) }
    dend_43 { pt3dadd( 30.5092, -4.67377, -22.0456, 1.32 ) }
    dend_43 { pt3dadd( 31.9141, -3.57802, -23.4204, 1.32 ) }
    dend_43 { pt3dadd( 33.5035, -2.52544, -24.9637, 1.2 ) }
    dend_43 { pt3dadd( 35.6325, -1.33823, -27.1302, 1.08 ) }
    dend_43 { pt3dadd( 37.9618, -0.00116014, -29.9146, 0.96 ) }
    dend_43 { pt3dadd( 40.2395, 1.39201, -32.8629, 0.96 ) }
    dend_43 { pt3dadd( 40.863, 1.78747, -33.8073, 0.96 ) }
    dend_43 { pt3dadd( 41.7109, 2.38098, -35.2303, 0.96 ) }
    dend_43 { pt3dadd( 42.6774, 3.22843, -37.0979, 0.96 ) }
    dend_43 { pt3dadd( 44.7781, 5.71294, -41.7676, 0.96 ) }
    dend_43 { pt3dadd( 45.3737, 6.6315, -43.2604, 0.96 ) }
    dend_43 { pt3dadd( 46.144, 7.95468, -45.1704, 0.96 ) }
    dend_43 { pt3dadd( 46.6171, 8.65649, -46.155, 0.84 ) }
    dend_43 { pt3dadd( 47.8975, 10.1502, -48.2454, 0.72 ) }
    dend_43 { pt3dadd( 48.4813, 10.6543, -48.9695, 0.72 ) }
    dend_43 { pt3dadd( 50.7591, 12.0629, -51.2184, 0.84 ) }
    dend_43 { pt3dadd( 52.1289, 12.8419, -52.477, 1.08 ) }
    dend_43 { pt3dadd( 54.4461, 14.1105, -54.4175, 1.08 ) }
    dend_43 { pt3dadd( 57.1754, 15.5281, -56.5035, 1.08 ) }
    dend_43 { pt3dadd( 58.2657, 16.0452, -57.2965, 0.96 ) }
    dend_43 { pt3dadd( 60.2239, 16.9694, -58.881, 0.84 ) }
    dend_43 { pt3dadd( 61.2688, 17.5104, -59.8715, 0.84 ) }
    dend_43 { pt3dadd( 62.345, 18.1019, -61.0238, 0.84 ) }
    dend_43 { pt3dadd( 62.9387, 18.4258, -61.7183, 0.84 ) }
    dend_43 { pt3dadd( 65.3503, 19.6299, -64.5244, 0.84 ) }
    dend_43 { pt3dadd( 67.8621, 20.8426, -67.6022, 0.84 ) }
    dend_43 { pt3dadd( 70.2078, 21.9628, -70.5744, 2.16 ) }
    dend_43 { pt3dadd( 70.8612, 22.2875, -71.4096, 2.16 ) }
    dend_43 { pt3dadd( 73.2217, 23.5733, -74.3311, 0.72 ) }
    dend_43 { pt3dadd( 74.103, 24.1212, -75.3221, 0.72 ) }
    dend_43 { pt3dadd( 76.0795, 25.5483, -77.2461, 0.72 ) }
    dend_43 { pt3dadd( 77.793, 26.8306, -78.6776, 0.72 ) }
    dend_43 { pt3dadd( 78.5261, 27.3849, -79.2466, 0.72 ) }
    dend_43 { pt3dadd( 81.1873, 29.3854, -81.4259, 2.16 ) }
    dend_43 { pt3dadd( 82.6331, 30.4745, -82.6065, 1.44 ) }
    dend_43 { pt3dadd( 84.5423, 31.9517, -84.0146, 0.48 ) }
    dend_43 { pt3dadd( 85.6151, 32.8592, -84.9211, 0.48 ) }
    dend_43 { pt3dadd( 87.4334, 34.5605, -86.641, 1.32 ) }
    dend_43 { pt3dadd( 89.1202, 36.3727, -89.1886, 1.32 ) }
    dend_43 { pt3dadd( 89.2331, 36.5073, -89.3992, 1.32 ) }
    dend_43 { pt3dadd( 90.9965, 38.6842, -92.9605, 0.72 ) }
    dend_43 { pt3dadd( 94.7209, 43.3117, -100.359, 0.6 ) }
    dend_43 { pt3dadd( 95.5731, 44.3729, -101.974, 0.6 ) }
    dend_43 { pt3dadd( 100.892, 50.6696, -110.987, 0.12 ) }
    dend_43 { pt3dadd( 101.808, 51.6899, -112.383, 0.96 ) }
    dend_43 { pt3dadd( 102.597, 52.5152, -113.477, 0.48 ) }
    dend_43 { pt3dadd( 104.313, 54.1995, -115.625, 0.36 ) }
    dend_43 { pt3dadd( 106.582, 56.2855, -117.632, 0.24 ) }
    dend_43 { pt3dadd( 108.322, 57.8774, -118.955, 0.24 ) }
    dend_43 { pt3dadd( 111.116, 60.4204, -120.399, 1.2 ) }
    dend_43 { pt3dadd( 112.177, 61.4173, -121.04, 0.72 ) }
    dend_43 { pt3dadd( 114.485, 63.7085, -122.567, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_43 { pt3dadd( 115.377, 64.6603, -123.183, 0.24 ) }
    dend_43 { pt3dadd( 116.984, 66.5293, -124.254, 1.08 ) }
    dend_43 { pt3dadd( 117.527, 67.2183, -124.614, 0.6 ) }
    dend_43 { pt3dadd( 119.825, 70.282, -125.923, 0.48 ) }
    dend_43 { pt3dadd( 120.646, 71.3922, -126.379, 0.48 ) }
    dend_43 { pt3dadd( 121.543, 72.5564, -126.806, 1.2 ) }
    dend_43 { pt3dadd( 122.436, 73.6405, -127.221, 0.6 ) }
    dend_43 { pt3dadd( 124.838, 76.2293, -128.226, 0.24 ) }
    dend_43 { pt3dadd( 125.903, 77.2604, -128.737, 0.24 ) }
    dend_43 { pt3dadd( 127.301, 78.4717, -129.423, 1.32 ) }
    dend_43 { pt3dadd( 128.476, 79.4007, -129.984, 0.72 ) }
    dend_43 { pt3dadd( 130.987, 81.3156, -131.226, 0.48 ) }
    dend_43 { pt3dadd( 133.252, 83.0385, -132.45, 0.48 ) }
    dend_43 { pt3dadd( 135.615, 84.8417, -133.754, 1.08 ) }
    dend_43 { pt3dadd( 136.572, 85.5976, -134.293, 0.36 ) }
    dend_43 { pt3dadd( 138.791, 87.4407, -135.5, 0.12 ) }
    dend_43 { pt3dadd( 141.616, 89.9664, -136.998, 0.12 ) }
    dend_43 { pt3dadd( 143.762, 91.983, -138.108, 0.12 ) }
    dend_43 { pt3dadd( 144.371, 92.5794, -138.409, 0.48 ) }
    dend_43 { pt3dadd( 144.897, 93.1058, -138.669, 0.12 ) }
    dend_43 { pt3dadd( 145.862, 94.0934, -139.27, 0.12 ) }
    dend_43 { pt3dadd( 146.327, 94.5905, -139.597, 0.48 ) }
    dend_43 { pt3dadd( 147.695, 96.1907, -140.543, 0.48 ) }
    dend_43 { pt3dadd( 148.479, 97.2644, -141.082, 0.24 ) }
    dend_43 { pt3dadd( 149.637, 99.037, -141.852, 0.6 ) }
    dend_43 { pt3dadd( 150.545, 100.556, -142.402, 1.08 ) }
    dend_43 { pt3dadd( 151.403, 102.082, -142.855, 0.48 ) }
    dend_43 { pt3dadd( 152.989, 104.863, -143.611, 0.36 ) }
    dend_43 { pt3dadd( 154.006, 106.555, -144.137, 0.36 ) }
    dend_43 { pt3dadd( 155.398, 108.692, -144.972, 0.36 ) }
    dend_43 { pt3dadd( 156.232, 109.854, -145.483, 0.96 ) }
    dend_43 { pt3dadd( 156.803, 110.587, -145.847, 0.24 ) }
    dend_43 { pt3dadd( 158.964, 113.081, -147.175, 0.12 ) }
    dend_43 { pt3dadd( 161.587, 115.777, -148.597, 0.24 ) }
    dend_43 { pt3dadd( 163.138, 117.267, -149.5, 0.24 ) }
    dend_43 { pt3dadd( 164.119, 118.199, -150.09, 0.24 ) }
    dend_43 { pt3dadd( 165.201, 119.226, -150.67, 0.24 ) }
    dend_43 { pt3dadd( 166.902, 120.863, -151.392, 0.24 ) }
    dend_43 { pt3dadd( 167.762, 121.697, -151.631, 0.24 ) }
    dend_43 { pt3dadd( 170.718, 124.496, -152.352, 1.44 ) }
    dend_43 { pt3dadd( 171.432, 125.169, -152.569, 1.08 ) }
    dend_43 { pt3dadd( 172.769, 126.397, -153.053, 0.12 ) }
    dend_43 { pt3dadd( 173.561, 127.126, -153.476, 0.12 ) }
    dend_43 { pt3dadd( 175.112, 128.532, -154.504, 0.12 ) }
    dend_43 { pt3dadd( 176.931, 130.065, -155.716, 0.6 ) }
    dend_43 { pt3dadd( 177.815, 130.732, -156.243, 0.6 ) }
    dend_43 { pt3dadd( 178.703, 131.36, -156.893, 0.24 ) }
    dend_43 { pt3dadd( 181.433, 133.246, -159.072, 0.72 ) }
    dend_43 { pt3dadd( 182.077, 133.697, -159.639, 0.12 ) }
    dend_43 { pt3dadd( 183.305, 134.571, -160.705, 0.24 ) }
    dend_43 { pt3dadd( 184.426, 135.402, -161.638, 0.24 ) }
    dend_43 { pt3dadd( 188.537, 138.618, -165.053, 0.24 ) }
    dend_43 { pt3dadd( 189.52, 139.464, -165.852, 0.12 ) }
    dend_43 { pt3dadd( 192.287, 142.024, -167.924, 0.24 ) }
    dend_43 { pt3dadd( 193.484, 143.251, -168.821, 0.24 ) }
    dend_43 { pt3dadd( 195.148, 145.159, -170.009, 0.24 ) }
    dend_43 { pt3dadd( 196.0, 146.28, -170.658, 0.72 ) }
    dend_43 { pt3dadd( 197.183, 148.026, -171.472, 0.36 ) }
    dend_43 { pt3dadd( 197.774, 148.935, -171.896, 0.36 ) }
    dend_43 { pt3dadd( 198.578, 150.213, -172.452, 1.08 ) }
    dend_43 { pt3dadd( 199.5, 151.692, -173.165, 0.36 ) }
    dend_43 { pt3dadd( 201.794, 155.453, -175.031, 0.36 ) }
    dend_43 { pt3dadd( 202.302, 156.31, -175.517, 0.36 ) }
    dend_43 { pt3dadd( 203.102, 157.734, -176.514, 1.2 ) }
    dend_43 { pt3dadd( 203.335, 158.158, -176.833, 0.72 ) }
    dend_43 { pt3dadd( 203.824, 159.018, -177.531, 0.36 ) }
    dend_43 { pt3dadd( 204.219, 159.725, -178.124, 0.36 ) }
    dend_43 { pt3dadd( 205.604, 162.281, -179.836, 0.36 ) }
    dend_43 { pt3dadd( 206.61, 164.708, -181.818, 0.84 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 69/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 28.7013, -6.27088, -20.2989, 0.84 ) }
    dend_38 { pt3dadd( 30.5919, -7.35094, -19.9096, 0.84 ) }
    dend_38 { pt3dadd( 31.9719, -8.24481, -19.6922, 0.84 ) }
    dend_38 { pt3dadd( 34.1801, -9.7735, -19.4965, 0.6 ) }
    dend_38 { pt3dadd( 35.7254, -10.8887, -19.4194, 0.6 ) }
    dend_38 { pt3dadd( 37.8737, -12.533, -19.4106, 0.6 ) }
    dend_38 { pt3dadd( 39.2756, -13.6439, -19.4425, 0.48 ) }
    dend_38 { pt3dadd( 40.7711, -14.8778, -19.5801, 0.48 ) }
    dend_38 { pt3dadd( 42.2115, -16.1219, -19.7444, 0.48 ) }
    dend_38 { pt3dadd( 43.7758, -17.5384, -19.9191, 0.84 ) }
    dend_38 { pt3dadd( 45.0489, -18.6564, -20.0499, 0.72 ) }
    dend_38 { pt3dadd( 46.478, -19.852, -20.1366, 0.72 ) }
    dend_38 { pt3dadd( 48.654, -21.5322, -20.1246, 0.72 ) }
    dend_38 { pt3dadd( 49.402, -22.0983, -20.0499, 0.6 ) }
    dend_38 { pt3dadd( 50.475, -22.9097, -19.8784, 0.6 ) }
    dend_38 { pt3dadd( 52.7819, -24.6889, -19.4663, 0.84 ) }
    dend_38 { pt3dadd( 54.1941, -25.8108, -19.1894, 0.48 ) }
    dend_38 { pt3dadd( 55.9662, -27.286, -18.9478, 0.48 ) }
    dend_38 { pt3dadd( 58.4607, -29.456, -18.7378, 0.48 ) }
    dend_38 { pt3dadd( 59.68, -30.5078, -18.6764, 0.48 ) }
    dend_38 { pt3dadd( 61.5383, -32.0926, -18.6358, 0.84 ) }
    dend_38 { pt3dadd( 63.3098, -33.5825, -18.6185, 0.84 ) }
    dend_38 { pt3dadd( 66.2646, -36.0295, -18.6396, 0.84 ) }
    dend_38 { pt3dadd( 68.6432, -37.968, -18.6579, 0.72 ) }
    dend_38 { pt3dadd( 70.7948, -39.6768, -18.6711, 0.6 ) }
    dend_38 { pt3dadd( 73.387, -41.6962, -18.6336, 0.6 ) }
    dend_38 { pt3dadd( 75.0113, -42.9204, -18.5622, 0.6 ) }
    dend_38 { pt3dadd( 76.3222, -43.8984, -18.4775, 0.48 ) }
    dend_38 { pt3dadd( 78.1087, -45.2322, -18.2954, 0.48 ) }
    dend_38 { pt3dadd( 79.2421, -46.0646, -18.1998, 0.48 ) }
    dend_38 { pt3dadd( 80.7522, -47.1828, -18.1017, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( 82.5686, -48.5209, -17.9986, 0.48 ) }
    dend_38 { pt3dadd( 83.9948, -49.5117, -17.9305, 0.36 ) }
    dend_38 { pt3dadd( 85.3261, -50.3549, -17.8766, 0.36 ) }
    dend_38 { pt3dadd( 86.7468, -51.1452, -17.7492, 0.36 ) }
    dend_38 { pt3dadd( 88.0665, -51.7805, -17.5803, 0.36 ) }
    dend_38 { pt3dadd( 88.433, -51.9312, -17.5117, 0.36 ) }
    dend_38 { pt3dadd( 90.0018, -52.5142, -17.1346, 0.36 ) }
    dend_38 { pt3dadd( 92.2558, -53.287, -16.5118, 0.24 ) }
    dend_38 { pt3dadd( 94.9606, -54.2606, -15.7165, 0.24 ) }
    dend_38 { pt3dadd( 96.2569, -54.7723, -15.3197, 0.24 ) }
    dend_38 { pt3dadd( 97.4202, -55.278, -14.9634, 0.72 ) }
    dend_38 { pt3dadd( 98.9752, -56.0559, -14.4936, 0.36 ) }
    dend_38 { pt3dadd( 100.316, -56.8878, -14.095, 0.36 ) }
    dend_38 { pt3dadd( 101.773, -58.0144, -13.6984, 0.72 ) }
    dend_38 { pt3dadd( 102.61, -58.816, -13.5218, 0.48 ) }
    dend_38 { pt3dadd( 103.523, -59.7903, -13.3431, 0.84 ) }
    dend_38 { pt3dadd( 104.219, -60.5755, -13.2309, 0.48 ) }
    dend_38 { pt3dadd( 105.25, -61.7733, -13.0606, 0.84 ) }
    dend_38 { pt3dadd( 105.811, -62.4066, -12.9712, 0.48 ) }
    dend_38 { pt3dadd( 106.842, -63.4834, -12.7843, 0.96 ) }
    dend_38 { pt3dadd( 107.815, -64.4156, -12.5969, 0.36 ) }
    dend_38 { pt3dadd( 109.027, -65.533, -12.3727, 0.36 ) }
    dend_38 { pt3dadd( 109.845, -66.2424, -12.2167, 0.36 ) }
    dend_38 { pt3dadd( 111.658, -67.7509, -11.8564, 0.84 ) }
    dend_38 { pt3dadd( 112.601, -68.4932, -11.6891, 0.48 ) }
    dend_38 { pt3dadd( 114.317, -69.814, -11.3824, 0.48 ) }
    dend_38 { pt3dadd( 116.528, -71.5062, -10.9809, 0.48 ) }
    dend_38 { pt3dadd( 117.717, -72.4026, -10.7688, 0.48 ) }
    dend_38 { pt3dadd( 117.835, -72.4922, -10.7486, 0.48 ) }
    dend_38 { pt3dadd( 121.515, -75.3694, -10.1906, 0.72 ) }
    // Section: dend_32, id: dend_32, parent: dend_20 (entry count 30/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -10.7711, 17.2027, 4.58956, 0.6 ) }
    dend_32 { pt3dadd( -13.2292, 18.6236, 6.71802, 0.6 ) }
    dend_32 { pt3dadd( -15.1173, 19.6861, 8.16543, 0.6 ) }
    dend_32 { pt3dadd( -17.4214, 21.1174, 9.88272, 0.6 ) }
    dend_32 { pt3dadd( -18.7825, 22.0393, 10.7885, 0.48 ) }
    dend_32 { pt3dadd( -19.8233, 22.7752, 11.3999, 0.48 ) }
    dend_32 { pt3dadd( -21.4658, 23.9365, 12.3648, 0.48 ) }
    dend_32 { pt3dadd( -24.3382, 26.0028, 13.7226, 0.24 ) }
    dend_32 { pt3dadd( -25.6547, 27.0136, 14.2036, 0.24 ) }
    dend_32 { pt3dadd( -27.3251, 28.4423, 14.6686, 0.12 ) }
    dend_32 { pt3dadd( -28.3974, 29.3237, 14.9412, 0.12 ) }
    dend_32 { pt3dadd( -36.9912, 35.141, 18.3358, 0.12 ) }
    dend_32 { pt3dadd( -45.6815, 41.7074, 19.0965, 0.12 ) }
    dend_32 { pt3dadd( -55.0725, 47.1421, 20.3179, 0.12 ) }
    dend_32 { pt3dadd( -64.2943, 52.162, 23.314, 0.12 ) }
    dend_32 { pt3dadd( -72.6037, 58.4292, 26.6147, 0.12 ) }
    dend_32 { pt3dadd( -81.6077, 63.6535, 29.9089, 0.12 ) }
    dend_32 { pt3dadd( -90.3483, 69.2603, 33.2828, 0.12 ) }
    dend_32 { pt3dadd( -98.1092, 75.462, 37.8134, 0.12 ) }
    dend_32 { pt3dadd( -107.568, 79.4707, 41.5123, 0.12 ) }
    dend_32 { pt3dadd( -116.484, 84.0801, 45.8124, 0.12 ) }
    dend_32 { pt3dadd( -126.883, 86.751, 47.7974, 0.12 ) }
    dend_32 { pt3dadd( -136.671, 91.352, 49.2944, 0.12 ) }
    dend_32 { pt3dadd( -145.636, 96.9862, 51.9592, 0.12 ) }
    dend_32 { pt3dadd( -154.59, 102.73, 54.4202, 0.12 ) }
    dend_32 { pt3dadd( -162.696, 108.448, 58.9823, 0.12 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.7711, 17.2027, 4.58956, 0.72 ) }
    dend_21 { pt3dadd( -13.2432, 14.0026, 6.39502, 0.72 ) }
    dend_21 { pt3dadd( -14.1733, 12.8218, 6.91068, 0.72 ) }
    dend_21 { pt3dadd( -15.212, 11.5302, 7.45603, 0.6 ) }
    dend_21 { pt3dadd( -15.7718, 10.8341, 7.74991, 0.6 ) }
    dend_21 { pt3dadd( -18.1135, 7.92227, 8.97936, 0.6 ) }
    dend_21 { pt3dadd( -19.2322, 6.53121, 9.5667, 0.6 ) }
    dend_21 { pt3dadd( -21.6194, 3.74189, 10.6615, 0.6 ) }
    dend_21 { pt3dadd( -22.5504, 2.79756, 11.0825, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 65/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.72994, 22.3051, -0.592711, 0.72 ) }
    dend_15 { pt3dadd( -4.48728, 24.7572, -0.431832, 0.72 ) }
    dend_15 { pt3dadd( -2.75195, 28.3521, -0.25644, 0.6 ) }
    dend_15 { pt3dadd( -0.964636, 32.338, -0.11142, 0.6 ) }
    dend_15 { pt3dadd( 0.0891567, 34.793, -0.070747, 0.6 ) }
    dend_15 { pt3dadd( 1.60289, 38.4586, -0.0348722, 0.6 ) }
    dend_15 { pt3dadd( 2.6864, 41.264, -0.0302929, 0.6 ) }
    dend_15 { pt3dadd( 3.71522, 44.3122, -0.0642703, 0.6 ) }
    dend_15 { pt3dadd( 4.28839, 46.2369, -0.111553, 0.6 ) }
    dend_15 { pt3dadd( 5.29176, 49.5503, -0.0747213, 0.6 ) }
    dend_15 { pt3dadd( 6.36908, 52.9629, 0.164037, 0.6 ) }
    dend_15 { pt3dadd( 7.39477, 56.1594, 0.474624, 0.48 ) }
    dend_15 { pt3dadd( 8.17431, 58.5451, 0.797725, 0.48 ) }
    dend_15 { pt3dadd( 9.51625, 62.5969, 1.45279, 0.48 ) }
    dend_15 { pt3dadd( 11.1252, 67.3513, 2.26755, 0.48 ) }
    dend_15 { pt3dadd( 13.3698, 73.9045, 3.42994, 0.48 ) }
    dend_15 { pt3dadd( 14.3918, 76.8279, 3.96746, 0.48 ) }
    dend_15 { pt3dadd( 15.145, 78.89, 4.35, 0.48 ) }
    dend_15 { pt3dadd( 15.9827, 81.1957, 4.77491, 0.48 ) }
    dend_15 { pt3dadd( 16.9481, 83.8962, 5.19517, 0.48 ) }
    dend_15 { pt3dadd( 17.4823, 85.6062, 5.33838, 0.48 ) }
    dend_15 { pt3dadd( 18.2912, 87.9435, 5.32511, 0.48 ) }
    dend_15 { pt3dadd( 18.8366, 89.3493, 5.33676, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 88/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -5.72994, 22.3051, -0.592711, 2.17 ) }
    dend_2 { pt3dadd( -6.0688, 29.2111, -2.86522, 2.17 ) }
    dend_2 { pt3dadd( -6.18859, 31.6525, -3.66861, 1.81 ) }
    dend_2 { pt3dadd( -6.28132, 33.5424, -4.2905, 1.81 ) }
    dend_2 { pt3dadd( -6.43234, 36.6202, -5.30329, 2.65 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 93/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 28.4902, -38.3321, -7.77152, 0.72 ) }
    dend_53 { pt3dadd( 28.0638, -43.1197, -10.4311, 0.72 ) }
    dend_53 { pt3dadd( 28.0056, -46.0865, -12.3736, 0.72 ) }
    dend_53 { pt3dadd( 28.0281, -48.7746, -14.285, 0.72 ) }
    dend_53 { pt3dadd( 28.0698, -51.2881, -16.0082, 0.72 ) }
    dend_53 { pt3dadd( 28.0678, -54.0962, -17.876, 0.72 ) }
    dend_53 { pt3dadd( 28.0026, -58.1233, -20.3436, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_53 { pt3dadd( 28.0214, -60.7236, -21.745, 1.08 ) }
    dend_53 { pt3dadd( 28.0602, -63.1852, -23.0095, 1.08 ) }
    dend_53 { pt3dadd( 27.9568, -65.7394, -24.1033, 0.48 ) }
    dend_53 { pt3dadd( 27.8105, -67.2924, -24.5898, 0.48 ) }
    dend_53 { pt3dadd( 27.448, -70.2623, -25.1922, 0.48 ) }
    dend_53 { pt3dadd( 27.2379, -71.7916, -25.582, 0.48 ) }
    dend_53 { pt3dadd( 26.8235, -74.0137, -26.3766, 0.96 ) }
    dend_53 { pt3dadd( 26.2412, -76.868, -27.5942, 0.6 ) }
    dend_53 { pt3dadd( 25.727, -79.5043, -29.0985, 0.48 ) }
    dend_53 { pt3dadd( 25.3691, -81.363, -30.302, 0.48 ) }
    dend_53 { pt3dadd( 23.7042, -89.2825, -36.0668, 0.48 ) }
    dend_53 { pt3dadd( 23.1668, -91.6138, -37.9801, 0.36 ) }
    dend_53 { pt3dadd( 22.7569, -93.0962, -39.3133, 0.36 ) }
    dend_53 { pt3dadd( 21.4705, -97.008, -42.9515, 0.36 ) }
    dend_53 { pt3dadd( 20.7504, -98.8895, -44.6729, 0.36 ) }
    dend_53 { pt3dadd( 19.0883, -102.602, -47.9597, 0.36 ) }
    dend_53 { pt3dadd( 17.7413, -105.671, -50.688, 0.36 ) }
    dend_53 { pt3dadd( 16.7302, -108.567, -53.2526, 0.36 ) }
    dend_53 { pt3dadd( 16.2712, -110.249, -54.8144, 0.36 ) }
    dend_53 { pt3dadd( 16.0423, -111.541, -55.9923, 0.36 ) }
    dend_53 { pt3dadd( 15.9132, -112.896, -57.2372, 0.36 ) }
    dend_53 { pt3dadd( 15.7113, -124.387, -67.0923, 0.36 ) }
    dend_53 { pt3dadd( 15.7678, -127.697, -69.7974, 0.36 ) }
    dend_53 { pt3dadd( 15.8663, -131.684, -73.0525, 0.36 ) }
    dend_53 { pt3dadd( 15.802, -135.876, -76.6562, 0.36 ) }
    dend_53 { pt3dadd( 15.5922, -137.47, -77.8008, 0.36 ) }
    dend_53 { pt3dadd( 14.5722, -141.395, -79.8938, 0.36 ) }
    dend_53 { pt3dadd( 12.4938, -146.19, -81.8419, 0.36 ) }
    dend_53 { pt3dadd( 10.9892, -149.219, -83.1005, 0.36 ) }
    dend_53 { pt3dadd( 8.55756, -154.147, -85.0295, 0.36 ) }
    dend_53 { pt3dadd( 2.92933, -166.64, -89.7078, 0.36 ) }
    dend_53 { pt3dadd( 1.66152, -170.024, -90.9642, 0.36 ) }
    dend_53 { pt3dadd( -1.69345, -181.308, -95.3918, 0.36 ) }
    dend_53 { pt3dadd( -2.71285, -186.074, -97.2909, 0.36 ) }
    dend_53 { pt3dadd( -3.25149, -190.048, -98.9445, 0.36 ) }
    dend_53 { pt3dadd( -3.51133, -194.192, -100.722, 0.36 ) }
    dend_53 { pt3dadd( -3.5518, -197.64, -102.426, 0.36 ) }
    dend_53 { pt3dadd( -3.67243, -205.443, -105.988, 0.36 ) }
    dend_53 { pt3dadd( -3.82183, -211.41, -108.03, 0.36 ) }
    dend_53 { pt3dadd( -4.18459, -216.391, -109.547, 0.36 ) }
    dend_53 { pt3dadd( -4.77125, -220.449, -110.766, 0.36 ) }
    dend_53 { pt3dadd( -5.5266, -223.427, -111.724, 0.36 ) }
    dend_53 { pt3dadd( -6.23553, -225.452, -112.348, 0.36 ) }
    dend_53 { pt3dadd( -8.28724, -230.247, -113.788, 0.36 ) }
    dend_53 { pt3dadd( -9.65777, -232.985, -114.687, 0.36 ) }
    dend_53 { pt3dadd( -13.0972, -238.927, -117.0, 0.36 ) }
    dend_53 { pt3dadd( -17.2035, -245.379, -119.879, 0.36 ) }
    dend_53 { pt3dadd( -19.7052, -249.196, -121.703, 0.36 ) }
    dend_53 { pt3dadd( -21.6871, -252.211, -123.399, 0.36 ) }
    dend_53 { pt3dadd( -22.8954, -254.042, -124.602, 0.36 ) }
    dend_53 { pt3dadd( -24.6164, -256.979, -126.715, 0.36 ) }
    dend_53 { pt3dadd( -25.3686, -258.718, -127.971, 0.36 ) }
    dend_53 { pt3dadd( -26.2297, -261.277, -129.833, 0.36 ) }
    dend_53 { pt3dadd( -28.1366, -267.565, -134.813, 0.36 ) }
    dend_53 { pt3dadd( -28.6851, -269.593, -136.488, 0.36 ) }
    dend_53 { pt3dadd( -29.7947, -274.41, -140.597, 0.36 ) }
    dend_53 { pt3dadd( -30.4459, -278.319, -143.894, 0.36 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 57/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 28.4902, -38.3321, -7.77152, 0.6 ) }
    dend_52 { pt3dadd( 30.6178, -40.0909, -8.0064, 0.6 ) }
    dend_52 { pt3dadd( 32.8973, -42.2276, -8.42403, 0.6 ) }
    dend_52 { pt3dadd( 34.5386, -43.8683, -8.8032, 0.48 ) }
    dend_52 { pt3dadd( 36.883, -46.2132, -9.36662, 0.84 ) }
    dend_52 { pt3dadd( 38.4371, -47.7492, -9.73264, 0.84 ) }
    dend_52 { pt3dadd( 39.839, -49.1457, -10.0536, 0.72 ) }
    dend_52 { pt3dadd( 42.039, -51.4837, -10.5324, 0.72 ) }
    dend_52 { pt3dadd( 43.3673, -52.9514, -10.7551, 0.72 ) }
    dend_52 { pt3dadd( 44.435, -54.1278, -10.8991, 1.2 ) }
    dend_52 { pt3dadd( 45.8105, -55.5482, -11.0239, 0.84 ) }
    dend_52 { pt3dadd( 47.2756, -56.9632, -11.1945, 0.84 ) }
    dend_52 { pt3dadd( 48.708, -58.3097, -11.3766, 0.6 ) }
    dend_52 { pt3dadd( 50.5656, -59.9758, -11.5883, 0.6 ) }
    dend_52 { pt3dadd( 51.4597, -60.7611, -11.707, 0.6 ) }
    dend_52 { pt3dadd( 53.3948, -62.4883, -12.0179, 0.96 ) }
    dend_52 { pt3dadd( 55.7775, -64.6075, -12.4354, 0.72 ) }
    dend_52 { pt3dadd( 57.2239, -65.8891, -12.7103, 0.48 ) }
    dend_52 { pt3dadd( 58.4994, -67.0307, -12.9718, 1.33 ) }
    dend_52 { pt3dadd( 60.2098, -68.6233, -13.2444, 0.72 ) }
    dend_52 { pt3dadd( 62.0915, -70.4491, -13.4121, 0.6 ) }
    dend_52 { pt3dadd( 63.3475, -71.7115, -13.5155, 0.48 ) }
    dend_52 { pt3dadd( 64.1124, -72.478, -13.5662, 0.48 ) }
    dend_52 { pt3dadd( 64.8238, -73.1556, -13.6176, 0.36 ) }
    dend_52 { pt3dadd( 66.274, -74.5191, -13.7324, 0.24 ) }
    dend_52 { pt3dadd( 67.8709, -75.9688, -13.8122, 0.96 ) }
    dend_52 { pt3dadd( 71.7301, -79.31, -13.8849, 0.24 ) }
    dend_52 { pt3dadd( 73.5452, -80.8655, -13.7948, 1.57 ) }
    dend_52 { pt3dadd( 76.8508, -83.7472, -13.442, 0.36 ) }
    dend_52 { pt3dadd( 77.8296, -84.6311, -13.2927, 0.36 ) }
    dend_52 { pt3dadd( 79.8525, -86.4917, -12.8792, 0.36 ) }
    dend_52 { pt3dadd( 81.5325, -88.1071, -12.3797, 1.08 ) }
    dend_52 { pt3dadd( 83.566, -90.2335, -11.4609, 0.6 ) }
    dend_52 { pt3dadd( 84.3344, -91.1277, -11.0793, 0.48 ) }
    dend_52 { pt3dadd( 85.2817, -92.3879, -10.7604, 0.96 ) }
    dend_52 { pt3dadd( 86.4245, -94.0474, -10.6224, 0.36 ) }
    dend_52 { pt3dadd( 87.2585, -95.3778, -10.7055, 0.84 ) }
    dend_52 { pt3dadd( 87.9342, -96.4791, -10.8563, 0.36 ) }
    dend_52 { pt3dadd( 88.5655, -97.5054, -11.094, 0.96 ) }
    dend_52 { pt3dadd( 91.5394, -102.289, -12.397, 0.24 ) }
    dend_52 { pt3dadd( 92.9798, -104.701, -13.1598, 0.24 ) }
    dend_52 { pt3dadd( 93.5903, -105.805, -13.5735, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 109.995, -128.215, 99.4362, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_50 { pt3dadd( 115.093, -134.204, 105.232, 0.24 ) }
    dend_50 { pt3dadd( 119.9, -140.044, 111.414, 0.24 ) }
    dend_50 { pt3dadd( 124.242, -145.527, 118.235, 0.24 ) }
    dend_50 { pt3dadd( 128.263, -150.545, 125.59, 0.24 ) }
    dend_50 { pt3dadd( 132.463, -154.73, 133.354, 0.24 ) }
    dend_50 { pt3dadd( 136.422, -160.691, 140.005, 0.24 ) }
    dend_50 { pt3dadd( 141.458, -166.215, 146.295, 0.24 ) }
    dend_50 { pt3dadd( 145.819, -172.36, 152.513, 0.24 ) }
    dend_50 { pt3dadd( 151.479, -178.533, 157.542, 0.24 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 9/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 109.995, -128.215, 99.4362, 0.24 ) }
    dend_47 { pt3dadd( 119.22, -136.574, 107.551, 0.24 ) }
    dend_47 { pt3dadd( 129.302, -143.862, 115.678, 0.24 ) }
    dend_47 { pt3dadd( 139.317, -149.808, 124.907, 0.24 ) }
    dend_47 { pt3dadd( 150.357, -154.566, 133.642, 0.24 ) }
    dend_47 { pt3dadd( 159.603, -160.805, 143.46, 0.24 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 15/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 121.515, -75.3694, -10.1906, 0.24 ) }
    dend_40 { pt3dadd( 126.819, -76.6979, -16.391, 0.24 ) }
    dend_40 { pt3dadd( 128.542, -77.1799, -18.2373, 0.24 ) }
    dend_40 { pt3dadd( 133.87, -78.7579, -23.7031, 0.24 ) }
    dend_40 { pt3dadd( 136.464, -79.6037, -26.274, 0.24 ) }
    dend_40 { pt3dadd( 139.241, -80.5697, -28.8224, 0.24 ) }
    dend_40 { pt3dadd( 141.916, -81.5345, -31.1706, 0.24 ) }
    dend_40 { pt3dadd( 143.785, -82.2698, -32.5549, 0.24 ) }
    dend_40 { pt3dadd( 145.122, -82.8403, -33.4871, 0.24 ) }
    dend_40 { pt3dadd( 146.98, -83.7002, -34.5662, 0.24 ) }
    dend_40 { pt3dadd( 150.091, -85.2134, -36.3063, 0.24 ) }
    dend_40 { pt3dadd( 153.56, -87.0249, -38.1684, 0.24 ) }
    dend_40 { pt3dadd( 155.807, -88.2443, -39.4096, 0.24 ) }
    dend_40 { pt3dadd( 157.307, -89.0177, -40.1983, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 121.515, -75.3694, -10.1906, 0.24 ) }
    dend_39 { pt3dadd( 123.834, -78.2965, -9.69466, 0.24 ) }
    dend_39 { pt3dadd( 126.864, -82.183, -8.92644, 0.24 ) }
    dend_39 { pt3dadd( 129.014, -85.072, -8.72275, 0.24 ) }
    dend_39 { pt3dadd( 132.246, -89.9948, -9.69173, 0.24 ) }
    dend_39 { pt3dadd( 133.86, -92.8278, -10.7592, 0.24 ) }
    dend_39 { pt3dadd( 134.76, -94.5799, -11.557, 0.24 ) }
    dend_39 { pt3dadd( 136.016, -97.4151, -13.2882, 0.24 ) }
    dend_39 { pt3dadd( 138.143, -103.204, -17.5954, 0.24 ) }
    dend_39 { pt3dadd( 140.762, -111.436, -24.5945, 0.24 ) }
    dend_39 { pt3dadd( 141.681, -114.67, -27.574, 0.24 ) }
    dend_39 { pt3dadd( 142.018, -115.821, -28.6587, 0.24 ) }
    dend_39 { pt3dadd( 142.973, -118.838, -31.4584, 0.24 ) }
    dend_39 { pt3dadd( 143.614, -120.597, -33.0272, 0.24 ) }
    dend_39 { pt3dadd( 145.699, -125.343, -36.4687, 0.24 ) }
    dend_39 { pt3dadd( 146.618, -126.955, -37.3814, 0.24 ) }
    dend_39 { pt3dadd( 148.892, -130.166, -39.2756, 0.24 ) }
    dend_39 { pt3dadd( 150.3, -131.829, -40.2696, 0.24 ) }
    dend_39 { pt3dadd( 151.438, -132.992, -40.9418, 0.24 ) }
    dend_39 { pt3dadd( 153.838, -135.144, -42.1957, 0.24 ) }
    dend_39 { pt3dadd( 155.948, -136.916, -43.2065, 0.24 ) }
    dend_39 { pt3dadd( 161.071, -141.11, -45.6535, 0.24 ) }
    dend_39 { pt3dadd( 164.586, -143.88, -47.2623, 0.24 ) }
    dend_39 { pt3dadd( 167.766, -146.29, -48.708, 0.24 ) }
    dend_39 { pt3dadd( 170.152, -148.035, -49.7681, 0.24 ) }
    dend_39 { pt3dadd( 173.417, -150.288, -51.1866, 0.24 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -162.696, 108.448, 58.9823, 0.12 ) }
    dend_34 { pt3dadd( -170.227, 112.425, 64.0343, 0.12 ) }
    dend_34 { pt3dadd( -176.649, 117.042, 69.9917, 0.12 ) }
    dend_34 { pt3dadd( -182.588, 121.922, 76.2342, 0.12 ) }
    dend_34 { pt3dadd( -189.091, 125.023, 83.0284, 0.12 ) }
    dend_34 { pt3dadd( -194.59, 128.912, 90.2876, 0.12 ) }
    dend_34 { pt3dadd( -200.649, 130.798, 97.889, 0.12 ) }
    dend_34 { pt3dadd( -206.416, 133.095, 105.604, 0.12 ) }
    dend_34 { pt3dadd( -213.196, 136.215, 112.112, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 64/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -162.696, 108.448, 58.9823, 0.12 ) }
    dend_33 { pt3dadd( -173.407, 114.646, 61.1606, 0.12 ) }
    dend_33 { pt3dadd( -183.405, 121.113, 65.1752, 0.12 ) }
    dend_33 { pt3dadd( -191.933, 127.626, 71.7129, 0.12 ) }
    dend_33 { pt3dadd( -199.363, 134.886, 78.7814, 0.12 ) }
    dend_33 { pt3dadd( -205.986, 141.606, 87.08, 0.12 ) }
    dend_33 { pt3dadd( -212.636, 149.132, 94.6313, 0.12 ) }
    dend_33 { pt3dadd( -217.836, 156.87, 103.055, 0.12 ) }
    dend_33 { pt3dadd( -222.548, 165.487, 110.893, 0.12 ) }
    // Section: dend_31, id: dend_31, parent: dend_21 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -22.5504, 2.79756, 11.0825, 0.24 ) }
    dend_31 { pt3dadd( -24.8331, 0.873995, 10.379, 0.24 ) }
    dend_31 { pt3dadd( -26.4912, -0.448145, 9.93271, 0.24 ) }
    dend_31 { pt3dadd( -29.0061, -2.4535, 9.25572, 0.24 ) }
    dend_31 { pt3dadd( -30.4995, -3.64428, 8.85372, 0.24 ) }
    dend_31 { pt3dadd( -31.4076, -4.36837, 8.60927, 0.24 ) }
    dend_31 { pt3dadd( -32.6233, -5.33778, 8.28201, 0.24 ) }
    dend_31 { pt3dadd( -33.7484, -6.09037, 8.20598, 0.24 ) }
    dend_31 { pt3dadd( -41.4733, -14.4494, 6.77515, 0.24 ) }
    dend_31 { pt3dadd( -49.4797, -22.6359, 7.4631, 0.24 ) }
    dend_31 { pt3dadd( -58.7684, -29.3052, 8.37623, 0.24 ) }
    dend_31 { pt3dadd( -67.7448, -35.6333, 11.6887, 0.24 ) }
    dend_31 { pt3dadd( -76.1286, -43.1967, 13.7141, 0.24 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -22.5504, 2.79756, 11.0825, 0.6 ) }
    dend_22 { pt3dadd( -24.9641, 2.38578, 11.112, 0.6 ) }
    dend_22 { pt3dadd( -27.8378, 2.1063, 11.3976, 0.6 ) }
    dend_22 { pt3dadd( -29.3561, 2.05788, 11.5936, 0.6 ) }
    dend_22 { pt3dadd( -30.4314, 2.07718, 11.7368, 0.6 ) }
    dend_22 { pt3dadd( -32.6926, 2.19826, 12.0026, 0.48 ) }
    dend_22 { pt3dadd( -36.6045, 2.40769, 12.4625, 0.48 ) }
    dend_22 { pt3dadd( -38.8153, 2.58434, 12.8072, 0.48 ) }
    dend_22 { pt3dadd( -41.2201, 2.882, 13.2328, 0.48 ) }
    dend_22 { pt3dadd( -43.0508, 3.19109, 13.6024, 0.48 ) }
    dend_22 { pt3dadd( -45.5665, 3.7675, 14.1432, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 97/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 18.8366, 89.3493, 5.33676, 0.36 ) }
    dend_19 { pt3dadd( 23.6403, 92.2202, 2.57871, 0.36 ) }
    dend_19 { pt3dadd( 25.5027, 93.3332, 1.50944, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 30.563, 96.3576, -1.39597, 0.36 ) }
    dend_19 { pt3dadd( 41.4066, 101.448, -5.16602, 0.36 ) }
    dend_19 { pt3dadd( 52.3806, 106.788, -8.12605, 0.36 ) }
    dend_19 { pt3dadd( 63.5525, 112.05, -10.4059, 0.36 ) }
    dend_19 { pt3dadd( 74.6321, 117.96, -10.5445, 0.36 ) }
    dend_19 { pt3dadd( 85.3679, 124.149, -12.579, 0.36 ) }
    dend_19 { pt3dadd( 95.5305, 130.289, -16.6689, 0.36 ) }
    dend_19 { pt3dadd( 104.68, 136.319, -22.8029, 0.36 ) }
    dend_19 { pt3dadd( 115.307, 140.305, -28.1776, 0.36 ) }
    dend_19 { pt3dadd( 126.591, 143.336, -32.78, 0.36 ) }
    dend_19 { pt3dadd( 138.454, 146.747, -35.089, 0.36 ) }
    dend_19 { pt3dadd( 150.525, 150.124, -35.8572, 0.36 ) }
    dend_19 { pt3dadd( 162.894, 151.876, -37.1411, 0.36 ) }
    dend_19 { pt3dadd( 175.369, 151.454, -35.7623, 0.36 ) }
    dend_19 { pt3dadd( 187.515, 149.618, -33.1521, 0.36 ) }
    dend_19 { pt3dadd( 199.785, 146.949, -32.9929, 0.36 ) }
    dend_19 { pt3dadd( 211.358, 142.155, -33.8847, 0.36 ) }
    dend_19 { pt3dadd( 223.737, 140.164, -33.1757, 0.36 ) }
    dend_19 { pt3dadd( 235.895, 137.778, -31.131, 0.36 ) }
    dend_19 { pt3dadd( 248.215, 135.372, -31.5298, 0.36 ) }
    dend_19 { pt3dadd( 260.687, 135.324, -30.0693, 0.36 ) }
    dend_19 { pt3dadd( 273.002, 136.559, -27.9416, 0.36 ) }
    dend_19 { pt3dadd( 285.402, 135.98, -26.0431, 0.36 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 18.8366, 89.3493, 5.33676, 0.36 ) }
    dend_16 { pt3dadd( 19.2484, 91.0043, 5.66308, 0.36 ) }
    dend_16 { pt3dadd( 19.6097, 92.4562, 5.94936, 0.36 ) }
    dend_16 { pt3dadd( 21.6494, 97.5696, 6.34396, 0.36 ) }
    dend_16 { pt3dadd( 23.7076, 102.677, 6.72587, 0.36 ) }
    dend_16 { pt3dadd( 26.4811, 107.318, 7.83324, 0.36 ) }
    dend_16 { pt3dadd( 29.5237, 111.626, 9.45955, 0.36 ) }
    dend_16 { pt3dadd( 31.7316, 116.159, 11.7057, 0.36 ) }
    dend_16 { pt3dadd( 34.4936, 120.605, 13.4565, 0.36 ) }
    dend_16 { pt3dadd( 36.6478, 125.513, 14.771, 0.36 ) }
    dend_16 { pt3dadd( 38.4335, 130.577, 16.0486, 0.36 ) }
    dend_16 { pt3dadd( 40.2861, 135.254, 18.3205, 0.36 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -6.43234, 36.6202, -5.30329, 1.45 ) }
    dend_8 { pt3dadd( -6.22827, 40.4829, -5.7526, 1.45 ) }
    dend_8 { pt3dadd( -6.32546, 44.2641, -6.18593, 1.45 ) }
    dend_8 { pt3dadd( -6.47634, 46.9529, -6.44066, 1.45 ) }
    dend_8 { pt3dadd( -6.65215, 49.5408, -6.64514, 1.45 ) }
    dend_8 { pt3dadd( -6.93677, 53.582, -6.91775, 1.08 ) }
    dend_8 { pt3dadd( -7.1206, 56.0889, -7.21424, 1.08 ) }
    dend_8 { pt3dadd( -7.64016, 61.1198, -8.01217, 0.96 ) }
    dend_8 { pt3dadd( -8.06139, 65.4042, -8.78499, 0.96 ) }
    dend_8 { pt3dadd( -8.33852, 68.8294, -9.43948, 0.96 ) }
    dend_8 { pt3dadd( -8.51905, 72.3781, -10.1254, 0.96 ) }
    dend_8 { pt3dadd( -8.61618, 78.3187, -11.2339, 0.96 ) }
    dend_8 { pt3dadd( -8.55043, 82.893, -12.0872, 0.96 ) }
    dend_8 { pt3dadd( -8.41992, 86.9491, -12.9354, 0.96 ) }
    dend_8 { pt3dadd( -8.33737, 90.9508, -13.9922, 0.96 ) }
    dend_8 { pt3dadd( -8.35652, 95.5983, -15.4233, 0.96 ) }
    dend_8 { pt3dadd( -8.46427, 99.0906, -16.5997, 0.96 ) }
    dend_8 { pt3dadd( -8.66255, 102.482, -17.8546, 0.96 ) }
    dend_8 { pt3dadd( -9.06679, 107.103, -19.8465, 0.96 ) }
    dend_8 { pt3dadd( -9.70242, 112.837, -22.7409, 0.96 ) }
    dend_8 { pt3dadd( -10.326, 117.735, -25.287, 0.96 ) }
    dend_8 { pt3dadd( -10.8805, 121.361, -27.1689, 0.96 ) }
    dend_8 { pt3dadd( -11.4074, 124.623, -28.7637, 0.96 ) }
    dend_8 { pt3dadd( -11.8929, 128.041, -30.2522, 0.96 ) }
    dend_8 { pt3dadd( -12.3575, 132.131, -31.6745, 0.96 ) }
    dend_8 { pt3dadd( -12.7323, 137.03, -33.0485, 0.96 ) }
    dend_8 { pt3dadd( -12.9096, 140.464, -33.9918, 0.96 ) }
    dend_8 { pt3dadd( -13.1145, 145.196, -35.1844, 0.96 ) }
    dend_8 { pt3dadd( -13.2881, 149.952, -36.2658, 0.96 ) }
    dend_8 { pt3dadd( -13.376, 152.49, -36.8316, 0.96 ) }
    dend_8 { pt3dadd( -13.5898, 159.238, -38.2161, 0.96 ) }
    dend_8 { pt3dadd( -13.6523, 163.54, -39.2252, 0.96 ) }
    dend_8 { pt3dadd( -13.6494, 166.917, -39.9628, 0.96 ) }
    dend_8 { pt3dadd( -13.6244, 170.322, -40.7262, 0.96 ) }
    dend_8 { pt3dadd( -13.5916, 173.604, -41.4912, 0.96 ) }
    dend_8 { pt3dadd( -13.5067, 177.871, -42.4924, 0.96 ) }
    dend_8 { pt3dadd( -13.3728, 183.973, -43.8391, 0.96 ) }
    dend_8 { pt3dadd( -13.2829, 186.651, -44.4622, 0.96 ) }
    dend_8 { pt3dadd( -13.1054, 191.326, -45.7228, 0.96 ) }
    dend_8 { pt3dadd( -13.0474, 193.257, -46.2922, 0.96 ) }
    dend_8 { pt3dadd( -12.8892, 199.424, -48.2072, 1.2 ) }
    dend_8 { pt3dadd( -12.8208, 202.898, -49.3083, 1.08 ) }
    dend_8 { pt3dadd( -12.7877, 205.643, -50.1364, 1.33 ) }
    dend_8 { pt3dadd( -12.6992, 210.81, -51.6348, 1.08 ) }
    dend_8 { pt3dadd( -12.6408, 214.369, -52.5711, 1.08 ) }
    dend_8 { pt3dadd( -12.5819, 217.608, -53.4241, 0.96 ) }
    dend_8 { pt3dadd( -12.563, 218.363, -53.6226, 0.96 ) }
    dend_8 { pt3dadd( -12.4702, 221.528, -54.3538, 0.96 ) }
    dend_8 { pt3dadd( -12.4075, 224.261, -54.861, 0.96 ) }
    dend_8 { pt3dadd( -12.2679, 228.459, -55.539, 0.72 ) }
    dend_8 { pt3dadd( -12.1422, 231.728, -56.0073, 0.72 ) }
    dend_8 { pt3dadd( -11.9934, 236.597, -56.6795, 0.72 ) }
    dend_8 { pt3dadd( -11.9267, 239.485, -57.078, 0.96 ) }
    dend_8 { pt3dadd( -11.9001, 242.061, -57.4288, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.43234, 36.6202, -5.30329, 0.72 ) }
    dend_3 { pt3dadd( -12.9582, 39.0592, -8.40469, 0.72 ) }
    dend_3 { pt3dadd( -15.234, 39.9661, -9.59358, 0.72 ) }
    dend_3 { pt3dadd( -17.675, 40.9219, -10.7758, 0.72 ) }
    dend_3 { pt3dadd( -19.6441, 41.7088, -11.6518, 0.72 ) }
    dend_3 { pt3dadd( -22.2736, 42.934, -12.858, 0.6 ) }
    dend_3 { pt3dadd( -26.5789, 45.3333, -14.9217, 0.6 ) }
    dend_3 { pt3dadd( -29.3157, 47.1883, -16.2157, 0.6 ) }
    dend_3 { pt3dadd( -31.9879, 49.3911, -17.653, 0.6 ) }
    dend_3 { pt3dadd( -33.4494, 50.6786, -18.5125, 0.36 ) }
    dend_3 { pt3dadd( -36.9941, 53.8818, -20.6071, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_3 { pt3dadd( -39.5023, 56.2237, -22.0101, 0.6 ) }
    dend_3 { pt3dadd( -41.7528, 58.2345, -23.1426, 0.6 ) }
    dend_3 { pt3dadd( -42.9844, 59.2662, -23.758, 0.48 ) }
    dend_3 { pt3dadd( -48.7879, 64.019, -26.8191, 1.08 ) }
    dend_3 { pt3dadd( -49.9736, 64.8738, -27.4208, 0.72 ) }
    dend_3 { pt3dadd( -51.235, 65.5656, -27.9612, 0.48 ) }
    dend_3 { pt3dadd( -54.5487, 66.9614, -29.2641, 0.84 ) }
    dend_3 { pt3dadd( -57.4593, 67.981, -30.3322, 1.2 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 8/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 159.603, -160.805, 143.46, 0.24 ) }
    dend_49 { pt3dadd( 165.135, -165.682, 152.051, 0.24 ) }
    dend_49 { pt3dadd( 170.793, -169.166, 161.218, 0.24 ) }
    dend_49 { pt3dadd( 175.046, -172.036, 171.31, 0.24 ) }
    dend_49 { pt3dadd( 179.623, -175.864, 180.931, 0.24 ) }
    dend_49 { pt3dadd( 183.619, -180.615, 190.4, 0.24 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 14/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 159.603, -160.805, 143.46, 0.24 ) }
    dend_48 { pt3dadd( 164.791, -163.932, 145.725, 0.24 ) }
    dend_48 { pt3dadd( 169.475, -167.873, 147.811, 0.24 ) }
    dend_48 { pt3dadd( 173.88, -172.213, 149.703, 0.24 ) }
    dend_48 { pt3dadd( 177.139, -177.28, 152.053, 0.24 ) }
    dend_48 { pt3dadd( 180.919, -182.378, 153.295, 0.24 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 157.307, -89.0177, -40.1983, 0.24 ) }
    dend_42 { pt3dadd( 159.547, -90.36, -41.3258, 0.24 ) }
    dend_42 { pt3dadd( 161.012, -91.2629, -42.2009, 0.24 ) }
    dend_42 { pt3dadd( 163.772, -93.0062, -43.9117, 0.24 ) }
    dend_42 { pt3dadd( 164.376, -93.3834, -44.2754, 0.24 ) }
    dend_42 { pt3dadd( 165.345, -93.9612, -44.8715, 0.24 ) }
    dend_42 { pt3dadd( 167.974, -95.5474, -46.4896, 0.24 ) }
    dend_42 { pt3dadd( 170.502, -97.087, -48.0939, 0.24 ) }
    dend_42 { pt3dadd( 171.491, -97.6822, -48.7156, 0.24 ) }
    dend_42 { pt3dadd( 173.425, -98.8279, -49.9095, 0.24 ) }
    dend_42 { pt3dadd( 175.694, -100.092, -51.365, 0.24 ) }
    dend_42 { pt3dadd( 177.165, -100.842, -52.3184, 0.24 ) }
    dend_42 { pt3dadd( 178.939, -101.706, -53.4864, 0.24 ) }
    dend_42 { pt3dadd( 180.782, -102.605, -54.6904, 0.24 ) }
    dend_42 { pt3dadd( 182.789, -103.587, -56.1189, 0.24 ) }
    dend_42 { pt3dadd( 185.077, -104.716, -57.7104, 0.24 ) }
    dend_42 { pt3dadd( 186.489, -105.419, -58.7495, 0.24 ) }
    dend_42 { pt3dadd( 187.983, -106.093, -59.8879, 0.24 ) }
    dend_42 { pt3dadd( 189.564, -106.808, -61.1266, 0.24 ) }
    dend_42 { pt3dadd( 192.611, -108.188, -63.551, 0.24 ) }
    dend_42 { pt3dadd( 194.545, -109.087, -65.0513, 0.24 ) }
    dend_42 { pt3dadd( 198.657, -111.049, -68.1952, 0.24 ) }
    dend_42 { pt3dadd( 201.518, -112.343, -70.4259, 0.24 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 43/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 157.307, -89.0177, -40.1983, 0.24 ) }
    dend_41 { pt3dadd( 158.24, -91.9258, -38.9195, 0.24 ) }
    dend_41 { pt3dadd( 158.941, -94.1111, -37.9586, 0.24 ) }
    dend_41 { pt3dadd( 159.738, -96.5953, -36.8662, 0.24 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 47/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -45.5665, 3.7675, 14.1432, 0.24 ) }
    dend_24 { pt3dadd( -47.4161, 3.68867, 12.9032, 0.24 ) }
    dend_24 { pt3dadd( -49.4251, 3.72761, 11.6429, 0.24 ) }
    dend_24 { pt3dadd( -50.485, 3.74815, 10.978, 0.24 ) }
    dend_24 { pt3dadd( -52.5851, 3.78885, 9.6605, 0.24 ) }
    dend_24 { pt3dadd( -54.7091, 3.83001, 8.32806, 0.24 ) }
    dend_24 { pt3dadd( -56.5164, 3.86505, 7.19423, 0.24 ) }
    dend_24 { pt3dadd( -57.5302, 3.87235, 6.61932, 0.24 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 55/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -45.5665, 3.7675, 14.1432, 0.48 ) }
    dend_23 { pt3dadd( -47.1138, 2.48743, 13.4176, 0.48 ) }
    dend_23 { pt3dadd( -48.2673, 1.53315, 12.8767, 0.48 ) }
    dend_23 { pt3dadd( -49.8089, 0.257846, 12.1538, 0.24 ) }
    dend_23 { pt3dadd( -52.0819, -1.62255, 11.0878, 0.24 ) }
    dend_23 { pt3dadd( -56.2167, -5.04311, 9.14887, 0.24 ) }
    dend_23 { pt3dadd( -65.3427, -12.6297, 3.42318, 0.24 ) }
    dend_23 { pt3dadd( -75.8196, -17.5531, -2.87126, 0.24 ) }
    dend_23 { pt3dadd( -87.8944, -20.4183, -7.30032, 0.24 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 40.2861, 135.254, 18.3205, 0.24 ) }
    dend_18 { pt3dadd( 38.9953, 139.93, 26.6993, 0.24 ) }
    dend_18 { pt3dadd( 36.704, 143.254, 35.499, 0.24 ) }
    dend_18 { pt3dadd( 35.461, 145.27, 44.8865, 0.24 ) }
    dend_18 { pt3dadd( 32.4576, 149.365, 53.1294, 0.24 ) }
    dend_18 { pt3dadd( 28.5574, 152.316, 61.4851, 0.24 ) }
    dend_18 { pt3dadd( 25.8829, 155.581, 70.1982, 0.24 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 71/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 40.2861, 135.254, 18.3205, 0.24 ) }
    dend_17 { pt3dadd( 45.3341, 143.85, 17.2733, 0.24 ) }
    dend_17 { pt3dadd( 50.9251, 152.164, 16.9414, 0.24 ) }
    dend_17 { pt3dadd( 57.4263, 159.715, 15.8482, 0.24 ) }
    // Section: dend_14, id: dend_14, parent: dend_8 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -11.9001, 242.061, -57.4288, 0.84 ) }
    dend_14 { pt3dadd( -11.5564, 246.005, -58.2386, 0.84 ) }
    dend_14 { pt3dadd( -11.3917, 248.589, -58.7089, 0.84 ) }
    dend_14 { pt3dadd( -11.1861, 252.355, -59.3267, 0.72 ) }
    dend_14 { pt3dadd( -11.042, 254.912, -59.7542, 0.6 ) }
    dend_14 { pt3dadd( -10.7221, 261.485, -60.8362, 0.84 ) }
    dend_14 { pt3dadd( -10.5937, 264.696, -61.3485, 0.84 ) }
    dend_14 { pt3dadd( -10.5527, 267.846, -61.8056, 0.6 ) }
    dend_14 { pt3dadd( -10.5498, 270.369, -62.1959, 0.6 ) }
    dend_14 { pt3dadd( -10.5882, 272.778, -62.583, 0.6 ) }
    dend_14 { pt3dadd( -10.6978, 276.334, -63.237, 0.6 ) }
    dend_14 { pt3dadd( -10.8898, 281.159, -64.2608, 0.6 ) }
    dend_14 { pt3dadd( -11.1318, 285.766, -65.2678, 0.6 ) }
    dend_14 { pt3dadd( -11.2911, 288.224, -65.7856, 0.6 ) }
    dend_14 { pt3dadd( -11.5619, 291.646, -66.4569, 0.6 ) }
    dend_14 { pt3dadd( -12.0163, 296.692, -67.3779, 0.6 ) }
    dend_14 { pt3dadd( -12.3646, 300.449, -68.0306, 0.6 ) }
    dend_14 { pt3dadd( -12.7592, 304.743, -68.7469, 0.6 ) }
    dend_14 { pt3dadd( -13.0194, 307.91, -69.269, 0.48 ) }
    dend_14 { pt3dadd( -13.316, 311.349, -69.8618, 0.48 ) }
    dend_14 { pt3dadd( -13.5904, 314.12, -70.3442, 0.48 ) }
    dend_14 { pt3dadd( -13.8859, 316.586, -70.769, 0.36 ) }
    dend_14 { pt3dadd( -14.5003, 321.012, -71.715, 0.36 ) }
    dend_14 { pt3dadd( -15.0821, 324.841, -72.6355, 0.36 ) }
    dend_14 { pt3dadd( -15.6031, 328.209, -73.5715, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -16.0858, 331.264, -74.4435, 0.36 ) }
    dend_14 { pt3dadd( -16.656, 335.148, -75.533, 0.36 ) }
    dend_14 { pt3dadd( -17.444, 340.738, -77.0652, 0.36 ) }
    dend_14 { pt3dadd( -17.8515, 343.893, -77.8775, 0.36 ) }
    dend_14 { pt3dadd( -18.3097, 348.109, -78.876, 0.36 ) }
    dend_14 { pt3dadd( -18.6183, 352.111, -79.7578, 0.36 ) }
    dend_14 { pt3dadd( -18.8916, 357.045, -80.7328, 0.36 ) }
    dend_14 { pt3dadd( -19.0307, 360.741, -81.436, 0.36 ) }
    dend_14 { pt3dadd( -19.1037, 362.643, -81.7721, 0.36 ) }
    dend_14 { pt3dadd( -19.2878, 367.713, -82.6544, 0.36 ) }
    dend_14 { pt3dadd( -19.3549, 370.604, -83.3258, 0.36 ) }
    dend_14 { pt3dadd( -19.4637, 374.503, -84.4325, 0.36 ) }
    dend_14 { pt3dadd( -19.6483, 378.792, -85.8571, 0.36 ) }
    dend_14 { pt3dadd( -19.7999, 381.798, -87.1015, 0.36 ) }
    dend_14 { pt3dadd( -20.0567, 385.127, -88.6544, 0.36 ) }
    dend_14 { pt3dadd( -20.6968, 391.429, -91.931, 0.36 ) }
    dend_14 { pt3dadd( -21.1695, 395.046, -93.8293, 0.36 ) }
    dend_14 { pt3dadd( -21.6592, 398.353, -95.4546, 0.36 ) }
    dend_14 { pt3dadd( -22.518, 403.681, -97.7859, 0.36 ) }
    dend_14 { pt3dadd( -23.1802, 407.753, -99.3177, 0.36 ) }
    dend_14 { pt3dadd( -23.8402, 411.685, -100.528, 0.12 ) }
    dend_14 { pt3dadd( -24.5537, 416.38, -101.557, 0.12 ) }
    dend_14 { pt3dadd( -25.1686, 421.616, -102.51, 0.12 ) }
    dend_14 { pt3dadd( -25.5234, 425.655, -103.08, 0.12 ) }
    dend_14 { pt3dadd( -25.912, 432.059, -103.796, 0.12 ) }
    dend_14 { pt3dadd( -26.0192, 436.184, -104.284, 0.12 ) }
    dend_14 { pt3dadd( -26.0528, 443.57, -105.269, 0.12 ) }
    dend_14 { pt3dadd( -25.9001, 450.193, -106.332, 0.12 ) }
    dend_14 { pt3dadd( -25.5943, 455.932, -107.448, 0.12 ) }
    dend_14 { pt3dadd( -25.3697, 458.518, -108.006, 0.12 ) }
    dend_14 { pt3dadd( -24.5386, 465.257, -109.651, 0.12 ) }
    dend_14 { pt3dadd( -23.8577, 469.374, -110.732, 0.12 ) }
    dend_14 { pt3dadd( -23.0389, 473.097, -111.826, 0.12 ) }
    dend_14 { pt3dadd( -21.4084, 478.678, -113.53, 0.12 ) }
    dend_14 { pt3dadd( -19.6514, 483.349, -114.943, 0.12 ) }
    dend_14 { pt3dadd( -17.5429, 487.886, -116.38, 0.12 ) }
    dend_14 { pt3dadd( -15.9889, 490.655, -117.277, 0.12 ) }
    dend_14 { pt3dadd( -13.86, 494.014, -118.446, 0.12 ) }
    dend_14 { pt3dadd( -11.7766, 497.209, -119.655, 0.12 ) }
    dend_14 { pt3dadd( -9.74414, 500.162, -120.96, 0.12 ) }
    dend_14 { pt3dadd( -7.63602, 503.282, -122.566, 0.12 ) }
    dend_14 { pt3dadd( -6.64305, 505.126, -123.546, 0.12 ) }
    dend_14 { pt3dadd( -5.65026, 507.812, -124.766, 0.12 ) }
    dend_14 { pt3dadd( -4.72987, 512.212, -126.231, 0.12 ) }
    dend_14 { pt3dadd( -4.35593, 516.318, -127.534, 0.12 ) }
    dend_14 { pt3dadd( -4.35349, 518.248, -128.095, 0.12 ) }
    dend_14 { pt3dadd( -4.54374, 524.812, -129.81, 0.12 ) }
    dend_14 { pt3dadd( -4.80985, 530.553, -131.217, 0.12 ) }
    dend_14 { pt3dadd( -5.23739, 536.554, -132.469, 0.12 ) }
    dend_14 { pt3dadd( -5.83471, 542.236, -133.533, 0.12 ) }
    dend_14 { pt3dadd( -6.61614, 547.309, -134.267, 0.12 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 51/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -11.9001, 242.061, -57.4288, 0.36 ) }
    dend_9 { pt3dadd( -12.1384, 245.709, -58.6383, 0.36 ) }
    dend_9 { pt3dadd( -12.3152, 249.303, -59.7276, 0.36 ) }
    dend_9 { pt3dadd( -12.4182, 253.978, -60.9828, 0.36 ) }
    dend_9 { pt3dadd( -12.4292, 259.172, -62.2268, 0.36 ) }
    dend_9 { pt3dadd( -12.3736, 265.045, -63.5631, 0.36 ) }
    dend_9 { pt3dadd( -12.2907, 267.969, -64.1839, 0.36 ) }
    dend_9 { pt3dadd( -11.918, 273.4, -65.3571, 0.36 ) }
    dend_9 { pt3dadd( -11.4106, 279.167, -66.6092, 0.36 ) }
    dend_9 { pt3dadd( -10.9296, 284.211, -67.6509, 0.36 ) }
    dend_9 { pt3dadd( -10.4418, 289.255, -68.6062, 0.36 ) }
    dend_9 { pt3dadd( -9.85573, 295.711, -69.7534, 0.36 ) }
    dend_9 { pt3dadd( -9.23139, 304.942, -71.4405, 0.36 ) }
    dend_9 { pt3dadd( -9.01781, 311.353, -72.5957, 0.24 ) }
    dend_9 { pt3dadd( -9.00302, 315.808, -73.4327, 0.24 ) }
    dend_9 { pt3dadd( -9.0884, 321.69, -74.5256, 0.24 ) }
    dend_9 { pt3dadd( -9.16868, 323.828, -74.9015, 0.24 ) }
    dend_9 { pt3dadd( -9.51523, 328.912, -75.7928, 0.24 ) }
    dend_9 { pt3dadd( -10.3506, 337.534, -77.1721, 0.24 ) }
    dend_9 { pt3dadd( -10.6475, 339.974, -77.5985, 0.24 ) }
    dend_9 { pt3dadd( -11.1689, 344.153, -78.3333, 0.24 ) }
    dend_9 { pt3dadd( -11.6285, 348.311, -79.0275, 0.24 ) }
    dend_9 { pt3dadd( -12.1086, 353.573, -79.8626, 0.24 ) }
    dend_9 { pt3dadd( -12.559, 359.848, -80.7701, 0.24 ) }
    dend_9 { pt3dadd( -12.9635, 365.974, -81.6176, 0.24 ) }
    dend_9 { pt3dadd( -13.3053, 372.27, -82.5174, 0.24 ) }
    dend_9 { pt3dadd( -13.5205, 377.759, -83.363, 0.24 ) }
    dend_9 { pt3dadd( -13.568, 380.026, -83.7119, 0.24 ) }
    dend_9 { pt3dadd( -13.5464, 384.747, -84.4361, 0.24 ) }
    dend_9 { pt3dadd( -13.3531, 388.888, -85.1507, 0.24 ) }
    dend_9 { pt3dadd( -12.8413, 394.717, -86.308, 0.24 ) }
    dend_9 { pt3dadd( -12.4098, 399.31, -87.3721, 0.24 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -57.4593, 67.981, -30.3322, 0.48 ) }
    dend_5 { pt3dadd( -58.0756, 70.0486, -32.2585, 0.48 ) }
    dend_5 { pt3dadd( -59.2825, 73.9092, -35.1121, 0.48 ) }
    dend_5 { pt3dadd( -60.643, 77.8078, -37.4272, 0.48 ) }
    dend_5 { pt3dadd( -61.4971, 80.0849, -38.817, 0.48 ) }
    dend_5 { pt3dadd( -62.4976, 82.3462, -40.2773, 0.48 ) }
    dend_5 { pt3dadd( -63.7991, 85.2304, -41.9903, 0.36 ) }
    dend_5 { pt3dadd( -65.3842, 88.5049, -43.8869, 0.6 ) }
    dend_5 { pt3dadd( -66.8743, 91.434, -45.4736, 0.36 ) }
    dend_5 { pt3dadd( -68.9655, 96.0088, -47.9704, 0.36 ) }
    dend_5 { pt3dadd( -70.5717, 100.033, -50.2184, 0.36 ) }
    dend_5 { pt3dadd( -71.9517, 103.807, -52.6336, 0.84 ) }
    dend_5 { pt3dadd( -73.3529, 108.092, -55.5384, 0.48 ) }
    dend_5 { pt3dadd( -73.7986, 109.623, -56.7162, 0.48 ) }
    dend_5 { pt3dadd( -74.332, 111.825, -58.4943, 0.36 ) }
    dend_5 { pt3dadd( -75.0467, 114.591, -60.7605, 1.08 ) }
    dend_5 { pt3dadd( -76.5704, 119.907, -65.5607, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( -77.0341, 121.307, -66.8767, 0.6 ) }
    dend_5 { pt3dadd( -78.8759, 126.42, -71.6564, 0.36 ) }
    dend_5 { pt3dadd( -80.169, 129.764, -74.7629, 0.72 ) }
    dend_5 { pt3dadd( -81.6921, 133.74, -78.2658, 0.72 ) }
    dend_5 { pt3dadd( -83.1694, 137.806, -81.6559, 0.36 ) }
    dend_5 { pt3dadd( -84.3486, 141.063, -84.2174, 0.84 ) }
    dend_5 { pt3dadd( -86.2124, 145.851, -87.8278, 0.36 ) }
    dend_5 { pt3dadd( -87.0453, 148.022, -89.3832, 0.96 ) }
    dend_5 { pt3dadd( -90.1934, 156.35, -95.1693, 0.24 ) }
    dend_5 { pt3dadd( -91.4524, 159.947, -97.5383, 0.72 ) }
    dend_5 { pt3dadd( -93.5306, 165.686, -101.151, 0.36 ) }
    dend_5 { pt3dadd( -94.7336, 168.697, -103.116, 1.69 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 12/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -57.4593, 67.981, -30.3322, 0.36 ) }
    dend_4 { pt3dadd( -59.1332, 68.8995, -31.5139, 0.36 ) }
    dend_4 { pt3dadd( -61.7017, 70.6445, -33.3911, 0.36 ) }
    dend_4 { pt3dadd( -63.8037, 72.3453, -35.3091, 0.36 ) }
    dend_4 { pt3dadd( -67.7134, 75.6725, -38.5315, 0.36 ) }
    dend_4 { pt3dadd( -70.9008, 78.4706, -41.1517, 0.24 ) }
    dend_4 { pt3dadd( -72.9502, 80.2487, -42.8, 0.12 ) }
    dend_4 { pt3dadd( -75.7686, 82.788, -45.0089, 0.12 ) }
    dend_4 { pt3dadd( -81.7934, 88.3421, -49.6286, 0.12 ) }
    dend_4 { pt3dadd( -86.131, 91.591, -52.637, 0.12 ) }
    dend_4 { pt3dadd( -89.5909, 93.8788, -54.9978, 0.12 ) }
    dend_4 { pt3dadd( -91.5344, 95.0792, -56.1717, 0.12 ) }
    dend_4 { pt3dadd( -93.5943, 96.3063, -57.3694, 0.12 ) }
    dend_4 { pt3dadd( -94.5344, 96.8459, -57.8983, 0.12 ) }
    dend_4 { pt3dadd( -111.251, 106.22, -67.0637, 0.12 ) }
    dend_4 { pt3dadd( -117.583, 109.786, -70.7514, 0.12 ) }
    dend_4 { pt3dadd( -125.127, 114.095, -75.0085, 0.12 ) }
    dend_4 { pt3dadd( -133.469, 119.032, -79.82, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -57.5302, 3.87235, 6.61932, 0.24 ) }
    dend_26 { pt3dadd( -59.9141, 4.0049, 6.54266, 0.24 ) }
    dend_26 { pt3dadd( -61.2307, 4.11129, 6.5095, 0.24 ) }
    dend_26 { pt3dadd( -63.3572, 4.35836, 6.39071, 0.36 ) }
    dend_26 { pt3dadd( -64.8029, 4.58086, 6.27541, 0.36 ) }
    dend_26 { pt3dadd( -66.368, 4.89182, 6.25402, 0.36 ) }
    dend_26 { pt3dadd( -67.2268, 5.0757, 6.26552, 0.36 ) }
    dend_26 { pt3dadd( -68.8652, 5.49537, 6.28104, 0.36 ) }
    dend_26 { pt3dadd( -71.1765, 6.08601, 6.33002, 0.36 ) }
    dend_26 { pt3dadd( -72.8307, 6.49636, 6.36019, 0.36 ) }
    dend_26 { pt3dadd( -76.4019, 7.33593, 6.37384, 0.36 ) }
    dend_26 { pt3dadd( -77.3903, 7.56783, 6.37748, 0.36 ) }
    dend_26 { pt3dadd( -79.6185, 8.06423, 6.37694, 0.36 ) }
    dend_26 { pt3dadd( -81.093, 8.37747, 6.3792, 0.36 ) }
    dend_26 { pt3dadd( -83.2021, 8.75819, 6.39506, 0.36 ) }
    dend_26 { pt3dadd( -84.7021, 8.95842, 6.31851, 0.36 ) }
    dend_26 { pt3dadd( -92.5653, 9.85493, 4.67636, 0.36 ) }
    dend_26 { pt3dadd( -100.357, 10.1209, 2.54318, 0.36 ) }
    dend_26 { pt3dadd( -107.712, 11.7199, -0.404837, 0.36 ) }
    dend_26 { pt3dadd( -114.555, 15.0921, -3.07397, 0.36 ) }
    dend_26 { pt3dadd( -120.466, 19.9044, -5.76413, 0.36 ) }
    dend_26 { pt3dadd( -127.744, 22.5161, -8.11856, 0.36 ) }
    dend_26 { pt3dadd( -135.03, 24.2494, -11.1567, 0.36 ) }
    dend_26 { pt3dadd( -142.274, 25.4943, -14.52, 0.36 ) }
    dend_26 { pt3dadd( -148.929, 27.7936, -18.4884, 0.36 ) }
    dend_26 { pt3dadd( -156.199, 28.8831, -21.8497, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 56/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -57.5302, 3.87235, 6.61932, 0.24 ) }
    dend_25 { pt3dadd( -56.4733, 6.45714, 6.01344, 0.24 ) }
    dend_25 { pt3dadd( -56.2262, 7.19991, 5.8695, 0.24 ) }
    dend_25 { pt3dadd( -55.6828, 8.74166, 5.62029, 0.24 ) }
    dend_25 { pt3dadd( -55.4226, 9.45527, 5.52769, 0.24 ) }
    dend_25 { pt3dadd( -53.8842, 13.4015, 5.08522, 0.24 ) }
    dend_25 { pt3dadd( -53.0929, 15.2976, 4.90459, 0.24 ) }
    dend_25 { pt3dadd( -52.2397, 17.3058, 4.77751, 0.24 ) }
    dend_25 { pt3dadd( -50.8861, 20.3184, 4.64059, 0.24 ) }
    dend_25 { pt3dadd( -49.9752, 22.2164, 4.60662, 0.24 ) }
    dend_25 { pt3dadd( -49.0382, 24.1015, 4.56369, 0.24 ) }
    dend_25 { pt3dadd( -48.4478, 25.2555, 4.55449, 0.24 ) }
    dend_25 { pt3dadd( -48.0436, 26.0345, 4.53663, 0.24 ) }
    dend_25 { pt3dadd( -47.4223, 27.1884, 4.45334, 0.24 ) }
    dend_25 { pt3dadd( -46.3408, 29.1965, 4.28946, 0.24 ) }
    dend_25 { pt3dadd( -44.1915, 33.0472, 3.96945, 0.24 ) }
    dend_25 { pt3dadd( -42.8859, 35.3329, 3.82733, 0.24 ) }
    dend_25 { pt3dadd( -41.5722, 37.5218, 3.68024, 0.24 ) }
    dend_25 { pt3dadd( -39.5577, 40.7991, 3.45879, 0.24 ) }
    dend_25 { pt3dadd( -37.3762, 44.2661, 3.23361, 0.24 ) }
    dend_25 { pt3dadd( -36.401, 45.7275, 3.16415, 0.24 ) }
    dend_25 { pt3dadd( -34.9257, 47.6918, 3.1734, 0.24 ) }
    dend_25 { pt3dadd( -32.7124, 50.4844, 3.1546, 0.24 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 79/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -12.4098, 399.31, -87.3721, 0.24 ) }
    dend_13 { pt3dadd( -11.7243, 404.76, -88.4962, 0.24 ) }
    dend_13 { pt3dadd( -11.2753, 408.508, -89.1931, 0.24 ) }
    dend_13 { pt3dadd( -10.8227, 412.413, -89.8555, 0.24 ) }
    dend_13 { pt3dadd( -10.0395, 419.091, -90.9213, 0.24 ) }
    dend_13 { pt3dadd( -9.2764, 425.439, -91.8949, 0.24 ) }
    dend_13 { pt3dadd( -8.83463, 428.907, -92.4155, 0.24 ) }
    dend_13 { pt3dadd( -8.179, 433.386, -92.924, 0.24 ) }
    dend_13 { pt3dadd( -7.28355, 438.742, -93.4686, 0.24 ) }
    dend_13 { pt3dadd( -6.52471, 443.14, -93.8414, 0.24 ) }
    dend_13 { pt3dadd( -5.95484, 446.663, -94.0908, 0.24 ) }
    dend_13 { pt3dadd( -5.39178, 451.339, -94.3209, 0.24 ) }
    dend_13 { pt3dadd( -5.12639, 455.637, -94.4758, 0.24 ) }
    dend_13 { pt3dadd( -5.141, 459.612, -94.5642, 0.24 ) }
    dend_13 { pt3dadd( -5.3751, 462.698, -94.5878, 0.24 ) }
    dend_13 { pt3dadd( -6.00335, 466.923, -94.7065, 0.24 ) }
    dend_13 { pt3dadd( -7.11482, 472.396, -94.9505, 0.24 ) }
    dend_13 { pt3dadd( -8.48544, 478.858, -95.0592, 0.24 ) }
    dend_13 { pt3dadd( -9.41058, 483.553, -95.0889, 0.24 ) }
    dend_13 { pt3dadd( -10.515, 491.319, -94.6869, 0.24 ) }
    dend_13 { pt3dadd( -10.9393, 496.024, -94.2444, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( -11.0753, 500.968, -93.8331, 0.24 ) }
    dend_13 { pt3dadd( -10.7307, 510.196, -92.8456, 0.24 ) }
    dend_13 { pt3dadd( -10.202, 516.051, -92.1552, 0.24 ) }
    dend_13 { pt3dadd( -9.38438, 522.878, -91.4757, 0.24 ) }
    dend_13 { pt3dadd( -9.00867, 525.589, -91.2629, 0.24 ) }
    dend_13 { pt3dadd( -7.6858, 534.715, -90.4462, 0.24 ) }
    dend_13 { pt3dadd( -6.85746, 540.739, -90.1435, 0.24 ) }
    dend_13 { pt3dadd( -6.46002, 544.896, -90.2762, 0.24 ) }
    dend_13 { pt3dadd( -6.13161, 550.757, -90.6988, 0.24 ) }
    dend_13 { pt3dadd( -6.12974, 554.906, -91.2875, 0.24 ) }
    dend_13 { pt3dadd( -6.14286, 559.913, -91.8721, 0.24 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 11/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -12.4098, 399.31, -87.3721, 0.24 ) }
    dend_10 { pt3dadd( -13.2622, 403.795, -88.4339, 0.24 ) }
    dend_10 { pt3dadd( -13.8955, 407.128, -89.2228, 0.24 ) }
    dend_10 { pt3dadd( -14.6064, 410.87, -90.1084, 0.24 ) }
    dend_10 { pt3dadd( -15.5607, 415.892, -91.2971, 0.24 ) }
    dend_10 { pt3dadd( -16.9073, 422.979, -92.9745, 0.24 ) }
    dend_10 { pt3dadd( -17.5952, 426.599, -93.8313, 0.24 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 18/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -94.7336, 168.697, -103.116, 0.48 ) }
    dend_7 { pt3dadd( -100.564, 172.41, -109.559, 0.48 ) }
    dend_7 { pt3dadd( -110.356, 177.95, -118.671, 0.12 ) }
    dend_7 { pt3dadd( -118.241, 182.027, -125.172, 0.24 ) }
    dend_7 { pt3dadd( -123.277, 184.431, -128.723, 0.24 ) }
    dend_7 { pt3dadd( -126.558, 185.964, -130.652, 0.24 ) }
    dend_7 { pt3dadd( -130.746, 187.943, -132.983, 0.24 ) }
    dend_7 { pt3dadd( -134.822, 189.754, -134.549, 0.24 ) }
    dend_7 { pt3dadd( -137.281, 190.716, -135.394, 0.24 ) }
    dend_7 { pt3dadd( -142.942, 193.042, -138.352, 0.24 ) }
    dend_7 { pt3dadd( -149.553, 196.086, -142.641, 0.24 ) }
    dend_7 { pt3dadd( -153.008, 197.981, -145.307, 0.24 ) }
    dend_7 { pt3dadd( -155.873, 199.944, -147.927, 0.24 ) }
    dend_7 { pt3dadd( -162.6, 205.375, -155.279, 0.24 ) }
    dend_7 { pt3dadd( -167.819, 209.777, -161.706, 0.24 ) }
    dend_7 { pt3dadd( -169.262, 210.957, -163.587, 0.24 ) }
    dend_7 { pt3dadd( -171.691, 212.789, -166.747, 0.24 ) }
    dend_7 { pt3dadd( -175.092, 215.147, -170.636, 0.24 ) }
    dend_7 { pt3dadd( -177.82, 216.938, -173.444, 0.24 ) }
    dend_7 { pt3dadd( -184.498, 220.717, -179.073, 0.24 ) }
    dend_7 { pt3dadd( -188.256, 222.492, -182.059, 0.24 ) }
    dend_7 { pt3dadd( -192.429, 224.222, -185.382, 0.24 ) }
    dend_7 { pt3dadd( -195.473, 225.271, -187.767, 0.24 ) }
    dend_7 { pt3dadd( -199.352, 226.428, -190.619, 0.24 ) }
    dend_7 { pt3dadd( -203.194, 227.726, -193.356, 0.24 ) }
    dend_7 { pt3dadd( -207.471, 229.727, -196.501, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 44/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -94.7336, 168.697, -103.116, 0.48 ) }
    dend_6 { pt3dadd( -95.2754, 174.916, -112.626, 0.48 ) }
    dend_6 { pt3dadd( -95.9082, 183.566, -126.069, 0.24 ) }
    dend_6 { pt3dadd( -96.4853, 191.265, -137.594, 0.24 ) }
    dend_6 { pt3dadd( -97.2932, 199.432, -149.533, 0.24 ) }
    dend_6 { pt3dadd( -97.8736, 204.1, -156.186, 0.24 ) }
    dend_6 { pt3dadd( -98.5384, 209.446, -163.805, 0.24 ) }
    dend_6 { pt3dadd( -99.4078, 215.873, -172.762, 0.24 ) }
    dend_6 { pt3dadd( -99.7599, 218.897, -176.986, 0.24 ) }
    dend_6 { pt3dadd( -100.323, 224.454, -184.641, 0.24 ) }
    dend_6 { pt3dadd( -101.816, 231.699, -193.911, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 55/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -156.199, 28.8831, -21.8497, 0.24 ) }
    dend_30 { pt3dadd( -166.985, 30.4546, -25.0921, 0.24 ) }
    dend_30 { pt3dadd( -177.598, 30.6886, -29.1668, 0.24 ) }
    dend_30 { pt3dadd( -187.849, 31.8106, -33.9607, 0.24 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -156.199, 28.8831, -21.8497, 0.24 ) }
    dend_27 { pt3dadd( -163.242, 31.7831, -23.4909, 0.24 ) }
    dend_27 { pt3dadd( -170.5, 34.6033, -23.7707, 0.24 ) }
    dend_27 { pt3dadd( -177.54, 37.5243, -22.1497, 0.24 ) }
    dend_27 { pt3dadd( -183.683, 41.2065, -19.0813, 0.24 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 64/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -17.5952, 426.599, -93.8313, 0.24 ) }
    dend_12 { pt3dadd( -17.4821, 433.577, -93.7459, 0.24 ) }
    dend_12 { pt3dadd( -17.3958, 438.906, -93.6807, 0.24 ) }
    dend_12 { pt3dadd( -17.3319, 442.847, -93.6325, 0.24 ) }
    dend_12 { pt3dadd( -17.2801, 446.044, -93.5933, 0.24 ) }
    dend_12 { pt3dadd( -17.1878, 451.741, -93.5236, 0.24 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 70/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -17.5952, 426.599, -93.8313, 0.24 ) }
    dend_11 { pt3dadd( -17.7032, 433.522, -93.6072, 0.24 ) }
    dend_11 { pt3dadd( -18.7294, 440.13, -93.2568, 0.24 ) }
    dend_11 { pt3dadd( -20.2089, 445.896, -93.1969, 0.24 ) }
    dend_11 { pt3dadd( -21.6208, 450.506, -93.0598, 0.24 ) }
    dend_11 { pt3dadd( -22.9767, 454.562, -93.1454, 0.24 ) }
    dend_11 { pt3dadd( -24.4479, 459.037, -93.3868, 0.24 ) }
    dend_11 { pt3dadd( -27.6101, 467.919, -93.8031, 0.24 ) }
    dend_11 { pt3dadd( -30.3845, 475.048, -94.422, 0.24 ) }
    dend_11 { pt3dadd( -32.6775, 480.95, -95.1938, 0.24 ) }
    dend_11 { pt3dadd( -34.9463, 487.958, -96.6211, 0.24 ) }
    dend_11 { pt3dadd( -35.9579, 492.261, -97.6456, 0.24 ) }
    dend_11 { pt3dadd( -36.3676, 494.248, -98.0527, 0.24 ) }
    dend_11 { pt3dadd( -37.1729, 498.506, -98.793, 0.24 ) }
    dend_11 { pt3dadd( -37.8394, 502.074, -99.2856, 0.24 ) }
    dend_11 { pt3dadd( -40.194, 514.016, -100.652, 0.24 ) }
    dend_11 { pt3dadd( -41.1857, 518.846, -101.012, 0.24 ) }
    dend_11 { pt3dadd( -45.603, 539.25, -102.401, 0.24 ) }
    dend_11 { pt3dadd( -46.756, 544.896, -102.775, 0.24 ) }
    dend_11 { pt3dadd( -47.9461, 551.292, -103.259, 0.24 ) }
    dend_11 { pt3dadd( -48.9343, 557.374, -103.861, 0.24 ) }
    dend_11 { pt3dadd( -49.4677, 561.526, -104.34, 0.24 ) }
    dend_11 { pt3dadd( -49.8903, 568.272, -105.407, 0.24 ) }
    dend_11 { pt3dadd( -49.7429, 574.258, -106.596, 0.24 ) }
    dend_11 { pt3dadd( -49.4451, 581.906, -108.243, 0.24 ) }
    dend_11 { pt3dadd( -48.9579, 591.819, -110.534, 0.24 ) }
    dend_11 { pt3dadd( -48.3347, 602.044, -113.028, 0.24 ) }
    dend_11 { pt3dadd( -47.58, 613.977, -115.979, 0.24 ) }
    dend_11 { pt3dadd( -46.9778, 623.482, -118.246, 0.24 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 99/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -183.683, 41.2065, -19.0813, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -192.82, 45.2776, -18.228, 0.24 ) }
    dend_29 { pt3dadd( -201.7, 49.5749, -16.363, 0.24 ) }
    dend_29 { pt3dadd( -210.639, 53.6233, -14.242, 0.24 ) }
    dend_29 { pt3dadd( -219.042, 58.9087, -12.7438, 0.24 ) }
    dend_29 { pt3dadd( -226.768, 64.6325, -9.85554, 0.24 ) }
    dend_29 { pt3dadd( -235.087, 70.0873, -8.50331, 0.24 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 6/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -183.683, 41.2065, -19.0813, 0.24 ) }
    dend_28 { pt3dadd( -192.047, 45.3578, -18.5217, 0.24 ) }
    dend_28 { pt3dadd( -200.183, 49.9551, -18.9549, 0.24 ) }
    dend_28 { pt3dadd( -207.961, 55.069, -19.8778, 0.24 ) }
    dend_28 { pt3dadd( -216.629, 58.4247, -20.9412, 0.24 ) }
    dend_28 { pt3dadd( -225.486, 61.369, -20.3243, 0.24 ) }
    dend_28 { pt3dadd( -233.871, 65.4904, -20.7964, 0.24 ) }
    dend_28 { pt3dadd( -241.455, 70.9667, -20.8923, 0.24 ) }
    dend_28 { pt3dadd( -248.468, 77.1572, -20.9029, 0.24 ) }
    dend_28 { pt3dadd( -255.678, 82.9976, -19.7112, 0.24 ) }
    dend_28 { pt3dadd( -262.697, 89.0459, -18.4217, 0.24 ) }
    dend_28 { pt3dadd( -270.144, 94.466, -16.7855, 0.24 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_55, dend_44, dend_35, dend_0, dend_59, dend_56, dend_54, dend_45, dend_37, dend_36, dend_20, dend_1, dend_58, dend_57, dend_51, dend_46, dend_43, dend_38, dend_32, dend_21, dend_15, dend_2, dend_53, dend_52, dend_50, dend_47, dend_40, dend_39, dend_34, dend_33, dend_31, dend_22, dend_19, dend_16, dend_8, dend_3, dend_49, dend_48, dend_42, dend_41, dend_24, dend_23, dend_18, dend_17, dend_14, dend_9, dend_5, dend_4, dend_26, dend_25, dend_13, dend_10, dend_7, dend_6, dend_30, dend_27, dend_12, dend_11, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_55 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_59 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_54 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_58 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_57 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_46 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_43 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_32 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_53 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_52 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_50 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_47 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_39 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_33 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_19 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_16 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_3 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_49 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_42 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_23 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_9 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_5 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_4 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_26 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_13 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_7 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_6 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_11 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_29 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_28 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_35 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_44 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_1 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_20 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_37 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_2 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_21 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_51 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_22 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_24 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_41 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_27 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_30 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_56 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_48 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_10 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_0, dend_0, axon_0, axon_0, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_56, dend_56, dend_56, dend_56, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_45, dend_45, dend_45, dend_45, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_20, dend_1, dend_1, axon_1, axon_1, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_31 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_55 nseg = 11
    dend_59 nseg = 11
    dend_54 nseg = 9
    dend_36 nseg = 3
    dend_58 nseg = 5
    dend_57 nseg = 3
    dend_46 nseg = 9
    dend_43 nseg = 15
    dend_38 nseg = 5
    dend_32 nseg = 9
    dend_15 nseg = 3
    dend_53 nseg = 15
    dend_52 nseg = 5
    dend_50 nseg = 5
    dend_47 nseg = 3
    dend_40 nseg = 3
    dend_39 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 5
    dend_31 nseg = 3
    dend_19 nseg = 15
    dend_16 nseg = 3
    dend_8 nseg = 11
    dend_3 nseg = 3
    dend_49 nseg = 3
    dend_42 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_14 nseg = 17
    dend_9 nseg = 9
    dend_5 nseg = 7
    dend_4 nseg = 5
    dend_26 nseg = 5
    dend_25 nseg = 3
    dend_13 nseg = 9
    dend_7 nseg = 9
    dend_6 nseg = 5
    dend_11 nseg = 11
    dend_29 nseg = 3
    dend_28 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L6_NBC_55825b9e30_0_0


