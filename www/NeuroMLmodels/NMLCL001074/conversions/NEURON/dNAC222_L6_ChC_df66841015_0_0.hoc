// Cell: dNAC222_L6_ChC_df66841015_0_0
/*
{
  "id" : "dNAC222_L6_ChC_df66841015_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.699158, -10.4987, 0.384835, 2.69968", "-0.589028, -9.39629, 0.347626, 4.40168", "-0.478898, -8.29387, 0.310418, 6.28323", "-0.368767, -7.19145, 0.273209, 7.64436", "-0.258637, -6.08903, 0.236, 8.5434", "-0.148506, -4.98661, 0.198792, 9.49409", "-0.0383758, -3.88419, 0.161583, 10.6841", "0.0717547, -2.78177, 0.124374, 11.1456", "0.181885, -1.67935, 0.0871655, 11.461", "0.292016, -0.576928, 0.0499568, 11.5573", "0.402146, 0.525493, 0.0127481, 11.5875", "0.512276, 1.62791, -0.0244606, 11.382", "0.622407, 2.73033, -0.0616693, 11.2002", "0.732537, 3.83276, -0.098878, 10.9052", "0.842668, 4.93518, -0.136087, 10.3672", "0.952798, 6.0376, -0.173295, 9.50426", "1.06293, 7.14002, -0.210504, 8.36675", "1.17306, 8.24244, -0.247713, 7.22308", "1.28319, 9.34486, -0.284922, 6.14175", "1.39332, 10.4473, -0.32213, 4.86495", "1.50345, 11.5497, -0.359339, 2.69802" ]
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "0.562386, 11.6828, -3.45834, 0.37", "0.0766063, 13.0323, -3.55089, 0.37", "0.0172422, 13.3989, -3.61775, 0.74", "0.0554964, 13.6878, -3.72033, 0.74", "0.377477, 14.5749, -4.11051, 0.37", "0.694214, 15.2843, -4.40057, 0.66", "1.06442, 16.0163, -4.7104, 1.33", "1.41312, 16.5622, -4.95205, 1.33", "1.99996, 17.4638, -5.35805, 0.74", "2.43831, 18.1846, -5.6638, 0.74", "3.1063, 19.3762, -6.16826, 1.25", "3.52726, 20.3342, -6.55658, 2.06", "3.7408, 21.0494, -6.81594, 2.06", "3.8879, 22.018, -7.13646, 1.4", "3.83206, 23.1367, -7.49339, 0.74", "3.5859, 23.8703, -7.72966, 1.11", "3.15758, 24.4326, -7.91255, 1.11", "2.54004, 24.9131, -8.05736, 0.81", "1.72673, 25.319, -8.25694, 0.81", "0.732904, 25.6489, -8.51945, 0.81", "-0.236055, 25.8907, -8.80315, 0.96", "-1.036, 26.0893, -9.04672, 1.11", "-1.75464, 26.2908, -9.30658, 1.11", "-3.31575, 26.8358, -9.98843, 1.11", "-3.777, 27.0598, -10.2391, 1.11", "-4.52104, 27.6556, -10.7543, 0.59", "-4.96072, 28.2945, -11.1266, 0.96", "-5.22077, 28.8844, -11.373, 1.25", "-5.4043, 29.4164, -11.5418, 1.55", "-5.51564, 29.7515, -11.6145, 1.55", "-5.91325, 30.7805, -11.8169, 0.74", "-6.53794, 32.025, -12.0581, 0.96", "-7.05528, 32.7794, -12.2321, 0.66", "-7.48463, 33.254, -12.3678, 0.66", "-8.17413, 33.8438, -12.5828, 0.81", "-8.74637, 34.2313, -12.7671, 0.96", "-9.49935, 34.6474, -13.0291, 1.47", "-10.1931, 35.0067, -13.284, 1.62", "-10.8482, 35.3983, -13.5318, 1.47", "-11.458, 35.8375, -13.7746, 1.11", "-12.1469, 36.4416, -14.0688, 0.81", "-12.9579, 37.3409, -14.4672, 0.66", "-13.3938, 37.9615, -14.7092, 0.81", "-13.9542, 39.0088, -15.0712, 1.03", "-14.1709, 39.5545, -15.2541, 1.25", "-14.3252, 40.0622, -15.4323, 1.25", "-14.604, 41.1583, -15.8548, 0.96", "-14.8117, 42.0042, -16.2277, 0.81", "-15.1014, 43.0479, -16.75, 0.59", "-15.3402, 43.773, -17.138, 0.59", "-15.6686, 44.6322, -17.6031, 0.59", "-16.0295, 45.4757, -18.0438, 0.59", "-16.3791, 46.2655, -18.3857, 0.44", "-16.7104, 47.09, -18.6478, 0.66", "-16.9672, 47.9709, -18.7913, 0.74", "-17.0504, 48.5238, -18.8167, 0.96", "-17.0582, 49.1424, -18.7977, 0.96", "-16.9297, 50.5154, -18.7725, 0.52", "-16.7521, 51.6288, -18.7872, 0.59", "-16.5168, 52.8915, -18.8507, 0.59", "-16.3955, 53.597, -18.9167, 0.96", "-16.3024, 54.411, -19.0317, 0.96", "-16.2732, 55.8564, -19.3219, 0.66", "-16.421, 56.85, -19.6208, 0.66", "-16.7468, 57.6548, -19.9318, 0.96", "-17.1236, 58.1429, -20.1384, 1.03", "-17.6046, 58.5369, -20.3346, 1.03", "-18.244, 58.8954, -20.5704, 1.03", "-19.1057, 59.2322, -20.9123, 0.74", "-19.7839, 59.4395, -21.2495, 0.74", "-20.2363, 59.5509, -21.5239, 0.52", "-21.2373, 59.7508, -22.2632, 0.52", "-22.0844, 59.8846, -22.9644, 0.52", "-22.9482, 59.9907, -23.7129, 1.11", "-23.4179, 60.0363, -24.1067, 1.4", "-23.9513, 60.072, -24.507, 1.4", "-24.863, 60.0971, -25.0755, 0.81", "-25.4251, 60.1097, -25.3054, 0.59", "-26.2716, 60.1531, -25.4862, 0.44", "-27.122, 60.2379, -25.5353, 0.44", "-27.9844, 60.3802, -25.51, 0.74", "-28.8084, 60.6175, -25.4456, 1.33", "-29.8106, 61.0849, -25.3873, 0.88", "-30.2549, 61.3975, -25.4495, 0.59", "-30.5301, 61.6716, -25.5621, 0.59", "-30.9173, 62.1568, -25.8452, 0.74", "-31.3963, 62.8371, -26.3407, 0.96", "-32.0148, 63.7226, -27.0988, 0.59", "-32.6548, 64.5872, -27.9417, 0.59", "-32.9877, 65.0214, -28.3625, 0.81", "-33.4083, 65.5182, -28.8237, 0.96", "-33.8114, 65.9213, -29.169, 1.03", "-34.4941, 66.5341, -29.6065, 0.66", "-34.7033, 66.7283, -29.715, 0.66", "-35.2649, 67.3393, -29.9855, 0.81", "-35.7605, 68.0008, -30.2772, 0.81", "-36.1372, 68.6836, -30.5639, 0.66", "-36.4442, 69.4106, -30.8567, 0.66", "-36.8263, 70.5415, -31.3037, 0.52", "-37.0449, 71.2476, -31.5918, 0.81", "-37.2057, 71.7741, -31.8159, 0.74", "-37.5946, 72.9037, -32.2911, 0.59", "-37.8319, 73.4559, -32.504, 0.74", "-38.149, 74.0024, -32.6882, 0.96", "-38.6387, 74.6588, -32.834, 0.96", "-39.0672, 75.1656, -32.9044, 0.74", "-39.6605, 75.8241, -32.9529, 1.03", "-40.0886, 76.2853, -32.9146, 1.25", "-40.389, 76.6344, -32.8532, 0.81", "-41.0262, 77.4587, -32.6556, 0.59", "-41.4145, 78.0181, -32.492, 0.66", "-41.7368, 78.5252, -32.3283, 0.66", "-42.5724, 79.9287, -31.8408, 0.88", "-42.9962, 80.6476, -31.5715, 1.11", "-43.2874, 81.1392, -31.3688, 1.03", "-43.6417, 81.7326, -31.1166, 1.25", "-43.774, 81.9533, -31.0144, 1.25" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "4.19239, 10.4323, -4.39834, 1.11", "5.01982, 11.3103, -4.92327, 1.11", "5.66806, 12.0113, -5.35585, 1.11", "6.70229, 13.1839, -6.04531, 1.11", "7.41167, 14.0285, -6.56435, 0.96", "8.58665, 15.2826, -7.33132, 1.55", "9.60857, 16.2852, -7.94859, 1.62", "10.2104, 16.8119, -8.28561, 1.62", "11.1404, 17.5425, -8.69504, 1.25", "12.6997, 18.6411, -9.17369, 0.96", "15.0816, 20.1505, -9.60803, 0.88", "16.1998, 20.7639, -9.67588, 1.55", "17.4206, 21.3414, -9.64642, 1.84", "19.2517, 22.1171, -9.50298, 1.11", "20.2129, 22.5067, -9.37713, 1.03", "21.2886, 22.9875, -9.16765, 1.25", "22.329, 23.5907, -8.94958, 0.88", "23.2885, 24.2809, -8.74931, 0.88", "24.187, 25.0347, -8.56436, 0.88", "25.2419, 25.9727, -8.33994, 0.88", "26.144, 26.8267, -8.0494, 0.96", "27.0775, 27.7833, -7.70059, 0.96", "27.9293, 28.7518, -7.32078, 0.81", "29.1828, 30.2645, -6.65149, 1.11", "30.0048, 31.2233, -6.13124, 1.4", "30.9519, 32.185, -5.42755, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "3.86239, 8.98703, 2.16166, 1.62", "4.66044, 9.53907, 2.87256, 1.62", "5.7411, 10.2001, 3.84578, 1.25", "7.70705, 11.1229, 5.81953, 1.25", "8.74666, 11.5425, 6.9333, 1.25", "9.83141, 11.8403, 8.23441, 1.92", "10.2905, 11.9222, 8.81897, 2.5", "11.2887, 11.95, 10.2007, 2.5", "13.3534, 11.6885, 13.2733, 1.77", "14.7854, 11.2297, 15.3998, 0.96", "16.806, 10.3564, 18.3929, 0.88", "17.3837, 10.0735, 19.2621, 0.88", "17.8394, 9.85896, 19.9273, 1.4", "18.2899, 9.6827, 20.5086, 1.4", "19.933, 9.30355, 22.1728, 0.66", "20.6299, 9.34588, 22.7287, 0.66", "22.2849, 10.0224, 23.7084, 0.88", "23.3247, 10.6228, 24.2397, 0.88", "24.6307, 11.5193, 24.757, 0.74", "25.6041, 12.2784, 25.0487, 1.4", "26.7246, 13.2271, 25.2527, 2.06", "27.8279, 14.1319, 25.3385, 1.84", "29.1509, 15.1668, 25.2631, 1.18", "30.5276, 16.1657, 25.2215, 1.18", "31.0865, 16.5199, 25.3006, 1.03", "32.0209, 16.9954, 25.6886, 1.03", "32.6391, 17.2533, 26.3119, 0.59", "33.2132, 17.5261, 27.2313, 0.59", "34.338, 18.1577, 29.5222, 0.88", "35.6464, 19.0139, 32.5357, 1.62", "36.2087, 19.4336, 33.8462, 1.62", "37.517, 20.4919, 36.8769, 0.88", "38.1264, 20.9835, 38.1976, 0.88", "38.6885, 21.4523, 39.2898, 1.47", "39.0835, 21.7861, 39.9162, 1.47", "40.0995, 22.579, 41.1375, 0.81", "40.6662, 22.9429, 41.6844, 0.59", "41.2723, 23.2379, 42.162, 0.59", "42.7508, 23.8786, 43.3403, 1.25", "45.0761, 24.92, 45.2792, 0.74", "45.8045, 25.3208, 45.9588, 0.29", "46.4527, 25.7086, 46.6455, 0.29", "46.8239, 25.9312, 47.0935, 0.59", "47.8068, 26.5418, 48.3049, 1.11", "48.3034, 26.8125, 48.8991, 1.11", "49.3692, 27.7773, 50.1751, 1.11", "49.9713, 28.6551, 51.1895, 0.59", "49.9878, 26.1378, 51.3564, 0.59", "50.194, 23.542, 51.9774, 0.52", "50.3366, 21.729, 52.4068, 0.59", "59.4995, 24.7388, 60.5743, 0.59", "69.1092, 28.9027, 67.6764, 0.59", "77.0511, 34.9294, 75.5277, 0.59", "84.9193, 42.1749, 82.4133, 0.59", "94.0683, 49.9496, 86.662, 0.59", "102.311, 58.1325, 91.9173, 0.59", "111.008, 64.8738, 98.2735, 0.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.56761, 6.59878, 1.60166, 1.69", "-3.56761, 6.59878, 1.60166, 1.69", "-3.97383, 6.85827, 1.88631, 1.69", "-4.47109, 7.11886, 2.26968, 1.4", "-4.8203, 7.28891, 2.6195, 1.03", "-5.29656, 7.53573, 3.15352, 0.88", "-5.62415, 7.72173, 3.54529, 0.88", "-6.03454, 7.94274, 4.10689, 0.59", "-6.40544, 8.14094, 4.67092, 0.44", "-7.08531, 8.50396, 5.78129, 0.37", "-7.31905, 8.63092, 6.1785, 0.37", "-7.69918, 8.84335, 6.84155, 0.37", "-8.59355, 9.37426, 8.48377, 1.03", "-8.79648, 9.50845, 8.87042, 1.62", "-14.3513, 10.2191, 13.6119, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.87761, -1.23222, -14.5883, 0.74", "-5.26416, -2.19301, -14.579, 0.74", "-6.89498, -3.27852, -14.5702, 1.03", "-8.32139, -4.20931, -14.592, 1.25", "-9.46199, -4.96467, -14.622, 1.62", "-10.3966, -5.57322, -14.6513, 1.84", "-11.6223, -6.32421, -14.6595, 1.84", "-12.7079, -6.91106, -14.6102, 1.99", "-13.8487, -7.44245, -14.5016, 2.21", "-15.1815, -7.95786, -14.3088, 2.65", "-16.127, -8.26347, -14.1573, 2.5", "-17.7245, -8.71513, -13.9145, 1.77", "-19.4165, -9.17088, -13.712, 1.33", "-20.5669, -9.48899, -13.6575, 1.18", "-21.9308, -9.88086, -13.7442, 1.11", "-22.9, -10.1947, -14.0181, 1.11", "-23.8985, -10.5635, -14.6281, 1.11", "-24.8525, -10.9455, -15.5639, 1.4", "-25.802, -11.3046, -16.7737, 1.03", "-26.6017, -11.5726, -17.9459, 0.88", "-27.7917, -11.88, -19.8662, 0.88", "-29.0775, -12.0934, -22.1341, 1.47", "-30.0503, -12.1887, -23.9327, 1.77", "-31.1391, -12.2074, -26.0253, 1.84", "-31.5242, -12.1835, -26.7847, 2.06", "-32.2217, -12.093, -28.1975, 1.77", "-33.2963, -11.8597, -30.3202, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-5.36761, -2.06247, 9.10166, 2.06", "-5.36761, -2.06247, 9.10166, 2.06", "-6.38664, -1.95808, 9.64066, 2.06", "-7.15274, -1.91678, 10.015, 2.06", "-9.14063, -1.94778, 10.9394, 1.84", "-10.2473, -2.05243, 11.4391, 1.84", "-11.0939, -2.19781, 11.8173, 1.99", "-12.6174, -2.5902, 12.496, 1.55", "-13.8569, -3.05643, 13.0342, 1.03", "-14.8589, -3.55585, 13.4359, 0.88", "-15.8318, -4.18105, 13.7181, 1.18", "-16.6181, -4.75068, 13.8898, 1.18", "-17.2207, -5.22767, 13.9895, 1.47", "-18.1152, -6.00717, 14.0674, 1.25", "-18.9958, -6.80689, 14.1837, 1.03", "-19.79, -7.51941, 14.3615, 1.62", "-20.5855, -8.21685, 14.657, 1.69", "-21.1988, -8.72256, 14.9727, 1.33", "-22.2943, -9.55418, 15.7181, 1.03", "-23.6436, -10.4118, 16.8919, 0.88", "-24.5871, -10.8676, 17.9373, 1.11", "-25.4045, -11.095, 19.0107, 1.33", "-25.9142, -11.1181, 19.7651, 1.33", "-26.4167, -10.9843, 20.5445, 1.18", "-27.0147, -10.6314, 21.4453, 0.88", "-27.8651, -9.9763, 22.5444, 1.18", "-28.3955, -9.58171, 23.1412, 1.33", "-28.8629, -9.3233, 23.6068, 1.33", "-29.6689, -9.0824, 24.3618, 0.59", "-30.7744, -9.14245, 25.3013, 0.52", "-31.3353, -9.49194, 25.7113, 0.59", "-32.1173, -10.5807, 26.3286, 0.59", "-32.8704, -12.0779, 27.0795, 0.59", "-33.2609, -12.9705, 27.5181, 1.03", "-33.7079, -14.0851, 28.116, 1.03", "-34.0774, -15.0122, 28.6632, 1.03", "-34.7742, -16.5612, 29.7796, 1.03", "-35.4346, -17.583, 30.8365, 0.66", "-35.991, -18.0546, 31.6496, 0.66", "-36.9714, -18.4449, 32.938, 0.74", "-37.6646, -18.5687, 33.788, 0.81", "-38.3093, -18.6145, 34.5493, 0.52", "-39.4779, -18.6319, 35.8205, 0.52", "-39.9784, -18.6692, 36.3704, 0.44", "-40.707, -18.9975, 37.3393, 0.37", "-41.0574, -19.506, 37.9074, 0.37", "-41.3825, -20.2775, 38.4881, 1.11", "-41.66, -21.069, 38.9418, 1.4", "-41.9272, -22.1113, 39.4309, 1.4", "-42.2555, -23.6938, 40.1052, 0.81", "-42.4767, -24.8854, 40.5566, 0.29", "-42.6738, -25.6735, 40.8676, 0.29", "-42.9068, -26.3062, 41.1334, 0.29", "-49.3173, -30.7412, 48.2625, 0.29", "-57.0753, -35.287, 53.8109, 0.29", "-64.173, -39.8228, 60.1891, 0.29", "-70.7596, -42.9542, 67.7998, 0.29", "-77.362, -46.2246, 75.3409, 0.29", "-84.9583, -51.081, 80.8625, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.19761, -5.90622, 6.85166, 1.77", "-2.19761, -5.90622, 6.85166, 1.77", "-2.17888, -7.11737, 6.9981, 1.77", "-2.14908, -9.19382, 7.23861, 1.47", "-2.13265, -11.2835, 7.45624, 1.25", "-2.16071, -12.8799, 7.60328, 1.62", "-2.21677, -14.2268, 7.71407, 1.92", "-2.29364, -15.4017, 7.81215, 2.14", "-2.43291, -16.8645, 7.93189, 2.14", "-2.72003, -18.895, 8.09819, 1.55", "-3.0855, -20.8047, 8.24372, 1.33", "-3.41648, -22.2516, 8.36626, 1.55", "-3.66229, -23.1654, 8.44657, 1.92", "-4.01158, -24.2739, 8.58105, 2.21", "-4.27319, -25.0044, 8.6901, 2.5", "-4.57908, -25.8667, 8.84665, 2.5", "-4.86027, -26.8177, 9.0336, 2.36", "-5.16276, -28.1225, 9.29732, 1.69", "-5.45353, -29.8333, 9.62944, 1.25", "-5.60142, -31.432, 9.92882, 1.4", "-5.60769, -32.8506, 10.1622, 1.62", "-5.45562, -34.5821, 10.409, 2.06", "-5.27051, -35.6492, 10.5495, 2.36", "-5.08326, -36.341, 10.6287, 2.36", "-4.62128, -37.6596, 10.7559, 2.14", "-3.86903, -39.5098, 10.9196, 1.62", "-3.20522, -41.0682, 11.041, 1.25", "-2.52434, -42.676, 11.1825, 1.03", "-1.79757, -44.4837, 11.3762, 1.03", "-1.25621, -45.9975, 11.5746, 1.03", "-0.666827, -47.957, 11.8983, 1.03", "-0.409824, -49.124, 12.1342, 0.96", "-0.331862, -50.0459, 12.3506, 0.96", "-0.437672, -50.8678, 12.5667, 0.96", "-0.924222, -51.9501, 12.9266, 0.96", "-1.40007, -52.5383, 13.1529, 0.88", "-1.89926, -52.9731, 13.3302, 1.18", "-2.70511, -53.5767, 13.5563, 1.18", "-3.48574, -54.1282, 13.7566, 1.33", "-4.38455, -54.7538, 14.0065, 1.33", "-5.15732, -55.2993, 14.2485, 1.4", "-5.98573, -55.9213, 14.5478, 1.55", "-6.77925, -56.5801, 14.9, 1.55", "-7.67741, -57.4802, 15.4058, 1.84", "-8.22131, -58.1375, 15.7645, 2.14", "-8.75403, -58.9299, 16.1494, 1.99", "-9.49704, -60.3611, 16.7648, 0.88", "-10.0044, -61.6829, 17.2485, 0.88", "-10.4321, -63.2441, 17.7311, 0.81", "-10.6715, -64.6244, 18.0587, 0.74", "-10.8937, -66.3672, 18.4183, 0.74", "-11.0027, -67.9953, 18.7052, 1.03", "-10.9984, -69.4582, 18.8894, 1.4", "-10.9499, -70.3684, 18.9569, 1.69", "-10.8495, -71.3887, 18.9836, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.44239, -10.2522, -2.20834, 3.39", "1.44239, -10.2522, -2.20834, 3.39", "2.12039, -12.4305, -2.39987, 3.39", "2.66785, -14.1878, -2.63415, 3.02", "3.22215, -15.967, -2.87135, 3.02", "3.95106, -18.3068, -3.18328, 3.02", "4.73403, -20.82, -3.51834, 3.24", "5.32448, -22.6732, -3.7918, 3.54", "5.99485, -24.6701, -4.15544, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999968585636767
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.50345, 11.5497, -0.359339, 0.88", "2.99451, 26.4754, -0.359339, 0.88", "4.48557, 41.4011, -0.359339, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-43.774, 81.9533, -31.0144, 0.44", "-44.8386, 83.1825, -31.946, 0.44", "-45.3304, 83.7813, -32.3473, 0.37", "-45.5743, 84.1099, -32.4879, 0.66", "-45.9767, 84.7041, -32.6596, 0.66", "-46.3865, 85.375, -32.7852, 0.59", "-46.6553, 85.8812, -32.8422, 0.81", "-46.9208, 86.5111, -32.8006, 0.81", "-47.3176, 87.9784, -32.5887, 0.52", "-47.3882, 88.684, -32.4483, 0.52", "-47.3035, 89.7927, -32.1995, 0.44", "-47.0342, 90.8679, -31.9615, 0.44", "-46.5877, 91.927, -31.7422, 0.74", "-46.1544, 92.6806, -31.5901, 0.74", "-45.391, 93.7425, -31.4073, 0.44", "-44.8075, 94.485, -31.2555, 0.59", "-44.2159, 95.2151, -31.1094, 0.59", "-43.6182, 95.9743, -30.9837, 0.59", "-43.1487, 96.6416, -30.9133, 0.37", "-42.805, 97.1723, -30.8801, 0.37", "-42.2844, 98.0109, -30.8486, 0.59", "-41.7642, 98.8186, -30.8299, 0.37", "-41.2903, 99.5199, -30.8152, 0.81", "-40.789, 100.233, -30.8078, 0.81", "-39.8629, 101.548, -30.8248, 0.44", "-39.1489, 102.584, -30.8523, 0.44", "-38.6365, 103.308, -30.8985, 0.81", "-38.114, 104.051, -30.9559, 0.44", "-37.8277, 104.477, -31.0034, 0.59", "-37.1324, 105.568, -31.1782, 0.59", "-36.6923, 106.357, -31.4035, 0.44", "-36.2055, 107.451, -31.8124, 0.44", "-35.8561, 108.396, -32.2916, 0.96", "-35.7141, 108.846, -32.5826, 1.18", "-35.6077, 109.264, -32.9074, 1.18", "-35.3474, 110.421, -34.1879, 0.44", "-35.2159, 111.257, -35.2698, 0.37", "-35.0701, 111.968, -36.4241, 0.66", "-35.0015, 112.271, -36.9742, 0.66", "-34.8954, 112.731, -37.8613, 0.66", "-34.387, 114.475, -41.3927, 0.44", "-34.284, 114.771, -42.0218, 0.44", "-33.693, 116.322, -45.3601, 0.29", "-33.5696, 116.673, -46.064, 0.29", "-33.4277, 117.103, -46.8572, 0.29", "-33.132, 118.114, -48.5142, 0.74", "-32.8231, 119.458, -50.344, 0.44", "-32.7575, 119.796, -50.7307, 0.44", "-32.6801, 120.6, -51.4124, 0.37", "-32.6376, 121.423, -51.9991, 0.88", "-32.6815, 122.754, -52.7069, 0.29", "-32.7641, 123.278, -52.9075, 0.52", "-33.001, 124.212, -53.2086, 0.15", "-33.2437, 125.033, -53.5083, 0.22", "-33.6566, 126.314, -53.9968, 0.22", "-34.0748, 127.417, -54.4172, 0.22", "-34.4851, 128.447, -54.7866, 0.22", "-35.1054, 129.96, -55.3889, 1.47", "-35.5594, 131.078, -55.8882, 0.66", "-35.8325, 131.8, -56.2186, 0.96", "-36.2462, 133.0, -56.7441, 0.22", "-36.5231, 133.805, -57.0414, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-43.774, 81.9533, -31.0144, 0.37", "-43.7669, 83.6889, -30.5523, 0.37", "-43.6684, 84.5597, -30.3912, 0.37", "-43.6028, 85.3775, -30.1639, 0.37", "-43.6053, 86.5894, -29.7361, 0.74", "-43.7063, 87.6064, -29.3421, 0.29", "-43.9561, 88.7941, -28.8679, 0.29", "-44.0987, 89.3498, -28.6389, 0.52", "-44.5361, 90.5521, -27.9508, 0.44", "-44.8667, 91.3082, -27.4333, 0.29", "-45.1601, 91.9651, -26.9519, 0.29", "-45.4655, 92.6931, -26.3847, 0.29", "-45.8865, 93.9298, -25.448, 0.44", "-46.161, 94.938, -24.7001, 0.44", "-46.3632, 96.2346, -23.8234, 0.52", "-46.401, 97.2744, -23.1309, 0.37", "-46.3376, 98.1098, -22.5741, 0.37", "-46.1651, 99.0176, -21.9996, 1.11" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "30.9519, 32.185, -5.42755, 0.29", "32.1364, 31.6703, -4.07913, 0.29", "33.2324, 31.2547, -2.98684, 0.59", "34.2935, 30.8615, -2.06171, 0.74", "34.8714, 30.6569, -1.59886, 0.37", "35.7653, 30.3617, -0.828337, 0.37", "36.2648, 30.2066, -0.362862, 0.66", "36.6399, 30.13, 0.0103851, 0.96", "37.1959, 30.0505, 0.746101, 1.25", "38.0604, 29.9945, 2.17529, 0.37", "38.8615, 30.0473, 3.69994, 0.37", "39.1279, 30.0945, 4.23871, 0.37", "39.7036, 30.2263, 5.33443, 0.74", "40.7116, 30.461, 6.9873, 0.66", "41.5252, 30.649, 8.08993, 0.52", "42.1483, 30.753, 8.69476, 0.66", "42.9, 30.8179, 9.1813, 0.66", "43.9131, 30.854, 9.6539, 0.37", "45.0741, 30.8285, 10.0213, 0.52", "45.7159, 30.7742, 10.1644, 0.52", "46.8332, 30.642, 10.3813, 0.66", "47.4595, 30.5478, 10.4914, 0.88", "48.2921, 30.4275, 10.6193, 0.88", "49.2627, 30.3174, 10.8135, 0.66", "50.4811, 30.2423, 11.0848, 0.29", "51.5487, 30.2404, 11.3224, 0.29", "53.1662, 30.3813, 11.6774, 0.88", "53.6143, 30.4405, 11.7757, 0.88", "55.4081, 30.7461, 12.1503, 0.29", "56.7894, 31.0393, 12.409, 0.29", "58.1075, 31.3694, 12.626, 0.96", "59.6734, 31.8044, 12.8608, 0.29", "60.8117, 32.1295, 13.0274, 0.29", "61.8628, 32.4118, 13.1559, 0.81", "62.6844, 32.62, 13.2087, 0.81", "63.4124, 32.7933, 13.2491, 0.81", "64.5145, 33.0312, 13.3018, 0.59", "65.796, 33.2562, 13.3598, 0.29", "66.9291, 33.4937, 13.4299, 0.81", "68.0489, 33.7308, 13.5093, 0.22", "69.0422, 33.9221, 13.5763, 0.22", "69.6702, 34.019, 13.604, 0.52", "70.5308, 34.1204, 13.5863, 0.22", "79.8502, 35.0125, 18.1619, 0.22", "88.634, 36.1123, 23.6641, 0.22", "98.3909, 35.5343, 27.2572, 0.22", "108.014, 33.1048, 30.4316, 0.22", "117.68, 31.9599, 34.1354, 0.22", "125.957, 29.2954, 39.8774, 0.22" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "30.9519, 32.185, -5.42755, 0.81", "32.1084, 32.5701, -4.63343, 0.81", "32.6693, 32.6702, -4.26869, 1.03", "34.2141, 32.8128, -3.42831, 0.96", "35.0771, 32.8857, -3.01743, 0.96", "36.0946, 33.0095, -2.58666, 0.59", "36.808, 33.1312, -2.31617, 0.66", "37.7755, 33.2917, -1.98646, 0.66", "38.9519, 33.5648, -1.694, 0.59", "39.5912, 33.7914, -1.64159, 0.81", "40.406, 34.2154, -1.64322, 0.96", "41.157, 34.699, -1.68058, 1.25", "41.6975, 35.0646, -1.70549, 1.4", "42.3677, 35.5184, -1.70417, 1.4", "43.4439, 36.1724, -1.61069, 0.59", "43.8793, 36.3636, -1.53736, 0.59", "44.7805, 36.5861, -1.30539, 0.59", "45.7601, 36.6819, -0.981941, 1.03", "46.4527, 36.6789, -0.715069, 1.18", "47.0442, 36.6348, -0.432593, 1.18", "47.9815, 36.5193, 0.0989553, 0.74", "48.8622, 36.4036, 0.678469, 0.66", "49.2742, 36.3565, 0.971898, 0.96", "49.8103, 36.323, 1.3502, 0.96", "50.7748, 36.3137, 2.00284, 1.03", "51.2305, 36.3422, 2.29854, 1.03", "52.5048, 36.5753, 3.04554, 0.59", "53.2024, 36.7817, 3.40238, 0.59", "54.4618, 37.24, 3.95961, 0.59", "55.0868, 37.5035, 4.19064, 0.81", "55.6816, 37.7962, 4.35483, 0.81", "56.9157, 38.4715, 4.58882, 0.37", "57.7082, 38.9084, 4.68072, 0.66", "58.4137, 39.2676, 4.76491, 0.74", "58.8596, 39.4612, 4.81814, 0.74", "59.7377, 39.7414, 4.93573, 0.74", "60.6845, 39.9094, 5.09022, 0.52", "62.0066, 39.9671, 5.34907, 0.74", "62.996, 39.9554, 5.58399, 0.88", "63.5288, 39.9487, 5.74317, 0.96", "64.0474, 39.9581, 5.93083, 1.18", "64.8175, 40.0165, 6.26203, 1.18", "65.3834, 40.1335, 6.55198, 0.66", "66.3455, 40.5655, 7.12375, 0.59", "66.9352, 40.9998, 7.58516, 0.59", "67.3063, 41.3553, 7.93167, 0.74", "67.5828, 41.6819, 8.22949, 0.74", "67.8444, 42.0382, 8.54741, 0.74", "68.3228, 42.7659, 9.20423, 0.59", "68.9292, 43.7893, 10.1449, 0.96", "69.2166, 44.2708, 10.6001, 1.25", "69.3672, 44.5301, 10.8662, 1.25" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "111.008, 64.8738, 98.2735, 0.29", "116.006, 67.5376, 103.277, 0.29", "121.541, 70.5728, 107.435, 0.29", "126.991, 74.3794, 111.059, 0.29", "132.022, 77.3553, 115.857, 0.29", "136.516, 81.1325, 120.653, 0.29", "140.002, 84.9839, 126.19, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "111.008, 64.8738, 98.2735, 0.29", "117.686, 68.2422, 103.564, 0.29", "122.949, 72.9043, 109.493, 0.29", "127.098, 77.7706, 116.125, 0.29", "132.281, 81.2168, 122.866, 0.29", "137.048, 85.093, 129.695, 0.29" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-33.2963, -11.8597, -30.3202, 0.74", "-34.4344, -13.2442, -30.9242, 0.74", "-35.0866, -13.8584, -31.1659, 0.74", "-35.6666, -14.2952, -31.3474, 0.74", "-36.6619, -14.7704, -31.6861, 0.66", "-37.4324, -14.9888, -31.9692, 0.66", "-38.2751, -15.1487, -32.2916, 0.59", "-38.8901, -15.1578, -32.4816, 1.25", "-39.4077, -15.1163, -32.6496, 1.25", "-41.0051, -14.945, -33.2206, 0.66", "-41.7947, -14.8784, -33.533, 0.66", "-42.2054, -14.8924, -33.7301, 0.96", "-42.7792, -15.0229, -34.0627, 0.96", "-43.163, -15.1843, -34.4201, 0.96", "-43.7289, -15.5545, -35.3659, 0.74", "-44.0199, -15.8218, -36.118, 0.52", "-44.3098, -16.1268, -37.0642, 0.81", "-44.4964, -16.3401, -37.7667, 1.03", "-45.1794, -17.1573, -40.6379, 1.25", "-45.6496, -17.7124, -42.7153, 0.66", "-45.8878, -17.9723, -43.7373, 0.66", "-46.0413, -18.1085, -44.2682, 1.11", "-46.1815, -18.2071, -44.5825, 1.33", "-46.3826, -18.3462, -44.8506, 1.18", "-46.6888, -18.5992, -45.0204, 1.18", "-47.3814, -19.2011, -45.2921, 0.59", "-48.0808, -19.8678, -45.6179, 0.52", "-48.6206, -20.4375, -45.9525, 0.52", "-49.0597, -20.9467, -46.3506, 0.81", "-49.4815, -21.4882, -46.9025, 0.66", "-49.8738, -22.0203, -47.533, 0.66", "-50.1558, -22.4188, -48.0749, 1.33", "-50.3439, -22.6926, -48.4663, 1.33", "-50.9319, -23.5462, -49.7064, 0.66", "-51.4536, -24.2805, -50.7596, 0.52", "-51.7065, -24.6063, -51.2265, 0.52", "-52.0391, -25.0037, -51.7036, 0.96", "-52.2768, -25.2822, -51.9618, 1.18", "-52.4433, -25.4916, -52.0871, 1.18", "-52.7703, -25.9804, -52.2326, 0.81", "-53.19, -26.7234, -52.3427, 0.74", "-53.6784, -27.7346, -52.426, 0.59", "-53.9198, -28.2477, -52.4364, 0.74", "-54.2449, -28.9199, -52.4137, 0.74", "-54.6085, -29.5966, -52.3615, 0.59", "-54.9586, -30.2131, -52.2938, 0.44", "-55.3517, -30.9008, -52.2088, 0.44", "-55.7362, -31.5506, -52.1506, 0.44", "-56.1295, -32.2765, -52.1101, 0.44", "-56.7485, -33.557, -52.0866, 0.44", "-56.8878, -33.9222, -52.0943, 0.96", "-57.0932, -34.7486, -52.1828, 1.18", "-57.1711, -35.4439, -52.3154, 0.81", "-57.1658, -36.5257, -52.6445, 0.59", "-57.1394, -36.976, -52.8399, 0.74", "-57.0967, -37.687, -53.205, 0.66", "-57.1136, -38.3884, -53.5892, 0.66", "-57.1785, -38.9139, -53.8893, 0.81", "-57.3809, -39.899, -54.4357, 0.59", "-57.6072, -40.7786, -54.8981, 0.52", "-57.8084, -41.6344, -55.3241, 0.81", "-57.9598, -42.4654, -55.7072, 1.4", "-57.99, -42.96, -55.8836, 1.69", "-57.9311, -43.9279, -56.13, 0.52", "-57.8497, -44.7192, -56.3396, 0.44", "-57.7556, -45.4895, -56.6574, 0.44", "-57.7112, -46.0069, -56.9946, 0.29", "-57.718, -46.9503, -57.7749, 1.4", "-57.7377, -47.1387, -57.9465, 1.4", "-58.1115, -48.7884, -59.6983, 0.52", "-58.4077, -49.7001, -60.7377, 0.52", "-58.5916, -50.1745, -61.2911, 0.52", "-58.8729, -50.8835, -62.1132, 0.74", "-59.0538, -51.3612, -62.6496, 0.88", "-59.394, -52.4693, -63.7367, 0.44", "-59.5217, -53.0429, -64.1862, 0.59", "-59.6758, -53.6963, -64.6589, 0.59", "-59.8769, -54.3639, -65.1613, 0.37", "-60.0111, -54.7664, -65.4764, 0.59", "-60.2757, -55.4917, -66.0286, 0.81", "-60.5418, -56.1742, -66.4743, 1.18", "-60.7233, -56.597, -66.7517, 1.18", "-61.2646, -57.654, -67.4988, 0.74" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-33.2963, -11.8597, -30.3202, 0.81", "-33.781, -10.2093, -30.3239, 0.81", "-34.0307, -9.60848, -30.2743, 0.81", "-34.4421, -8.89693, -30.1688, 0.81", "-34.9088, -8.35418, -30.0597, 0.88", "-35.4947, -7.94164, -29.9714, 0.66", "-36.5998, -7.399, -29.876, 0.59", "-37.4002, -7.28811, -29.8605, 0.59", "-38.1291, -7.31574, -29.9824, 0.59", "-39.1031, -7.47811, -30.3114, 0.74", "-40.1514, -7.74233, -30.8717, 1.03", "-40.5182, -7.84547, -31.1092, 1.62", "-41.0149, -7.9794, -31.4722, 1.92", "-42.5844, -8.3481, -32.5963, 0.88", "-43.1864, -8.46969, -33.0187, 0.66", "-44.0698, -8.64111, -33.6092, 0.66", "-45.2615, -8.86766, -34.3609, 0.66", "-45.7904, -8.95498, -34.6787, 0.66", "-46.9387, -9.07475, -35.3005, 0.66", "-47.6673, -9.09722, -35.6545, 0.44", "-48.5817, -9.06289, -36.1265, 0.44", "-49.247, -8.99292, -36.5076, 0.44", "-50.0245, -8.85984, -37.0443, 0.66", "-50.5648, -8.74518, -37.4491, 0.66", "-51.2003, -8.56488, -37.9332, 0.66", "-51.7477, -8.37684, -38.3083, 0.66", "-52.3692, -8.10522, -38.6872, 0.44", "-52.8, -7.88876, -38.9376, 0.74", "-53.4404, -7.54682, -39.2919, 0.74", "-54.0103, -7.23532, -39.6034, 0.74", "-54.4957, -6.97043, -39.8561, 0.74", "-55.0522, -6.67344, -40.1326, 0.37", "-55.8851, -6.33993, -40.5714, 0.37", "-56.2497, -6.28138, -40.7848, 0.37", "-56.6403, -6.31907, -41.0535, 0.88", "-57.1655, -6.44616, -41.4347, 1.18", "-57.5942, -6.57897, -41.7823, 1.33", "-58.6871, -6.95781, -42.743, 0.44", "-59.4671, -7.2023, -43.4909, 0.44", "-60.0814, -7.32957, -44.1674, 0.44", "-60.6247, -7.33762, -44.8285, 0.88", "-61.1931, -7.18395, -45.5597, 1.03", "-61.4189, -7.03747, -45.8467, 1.03", "-61.9895, -6.43168, -46.4588, 0.44", "-62.3317, -6.027, -46.7871, 0.44", "-62.7434, -5.58948, -47.0941, 0.44", "-63.0907, -5.30359, -47.3219, 0.59", "-63.6794, -4.95409, -47.6439, 0.59", "-64.2912, -4.72438, -47.9606, 0.74", "-65.4309, -4.54057, -48.5136, 0.37", "-66.1536, -4.54429, -48.8804, 0.37", "-67.2311, -4.7084, -49.4564, 0.59", "-67.6554, -4.82801, -49.7001, 0.88", "-68.4761, -5.16853, -50.2262, 0.66", "-69.03, -5.44585, -50.6022, 0.74", "-69.6221, -5.77958, -51.0017, 0.59", "-70.131, -6.08597, -51.3694, 0.52", "-70.6072, -6.36942, -51.7137, 0.88", "-71.4794, -6.82148, -52.3667, 0.59", "-71.9856, -7.03017, -52.7537, 0.44", "-72.5444, -7.20243, -53.1907, 1.03", "-72.9342, -7.28358, -53.4925, 1.33", "-73.1755, -7.31063, -53.6701, 1.4", "-74.1964, -7.36444, -54.357, 0.44", "-74.6105, -7.37814, -54.6185, 0.44", "-75.2235, -7.3846, -54.981, 0.44", "-75.8706, -7.37178, -55.3341, 0.44", "-76.92, -7.34237, -55.9015, 0.59", "-77.6417, -7.3204, -56.3492, 0.88", "-78.2935, -7.27398, -56.8608, 1.11", "-79.124, -7.18186, -57.6163, 0.52", "-79.7123, -7.07829, -58.2095, 0.52", "-80.1982, -6.96786, -58.7309, 1.03", "-81.2713, -6.69982, -59.9634, 1.25", "-82.5454, -6.43331, -61.4209, 0.52", "-82.9852, -6.36083, -61.9115, 0.59", "-83.5786, -6.29152, -62.5355, 0.59", "-84.5246, -6.18926, -63.4088, 0.44", "-85.1824, -6.11437, -63.9052, 0.44", "-86.1567, -5.96173, -64.5067, 0.44", "-86.6754, -5.85024, -64.814, 0.44", "-87.3702, -5.61054, -65.3498, 0.66", "-87.8455, -5.35815, -65.8273, 0.88", "-88.0874, -5.16716, -66.1192, 0.88", "-88.7588, -4.46894, -67.0239, 0.52", "-89.1533, -3.95491, -67.6148, 0.52", "-89.6814, -3.14021, -68.5469, 0.81", "-90.031, -2.50101, -69.2518, 0.44", "-90.2214, -2.10446, -69.6861, 0.44", "-90.418, -1.58777, -70.225, 0.74", "-90.5198, -1.19766, -70.5861, 0.96", "-90.663, -0.187575, -71.3592, 0.66", "-90.7256, 0.444576, -71.8195, 0.44", "-90.8053, 1.1325, -72.3556, 0.44", "-90.9367, 1.78301, -72.9343, 0.44", "-91.0224, 2.00508, -73.1643, 0.44", "-91.3678, 2.4605, -73.7087, 0.96", "-92.2568, 2.9468, -74.5054, 0.66", "-92.8679, 3.14299, -74.9457, 0.96", "-93.1669, 3.21707, -75.1206, 1.25", "-93.5221, 3.29455, -75.3059, 1.25", "-94.085, 3.43353, -75.5885, 1.25", "-95.0473, 3.77169, -76.0793, 0.37", "-95.6133, 4.105, -76.3554, 0.37", "-95.9784, 4.39282, -76.5673, 0.66", "-96.2568, 4.6312, -76.7265, 0.81", "-96.6921, 5.00973, -76.948, 0.81", "-97.3705, 5.59657, -77.2148, 0.44", "-97.8433, 5.97006, -77.3276, 0.44", "-98.7223, 6.56663, -77.4516, 0.44", "-99.7036, 7.18997, -77.5279, 0.44", "-100.451, 7.65961, -77.5471, 0.66", "-101.232, 8.14426, -77.5278, 0.96", "-102.024, 8.62712, -77.4531, 0.59", "-102.696, 9.05266, -77.3643, 0.44", "-103.389, 9.50129, -77.2661, 0.44", "-104.06, 9.9346, -77.2127, 0.44", "-104.649, 10.2665, -77.2376, 0.44", "-105.337, 10.5591, -77.3697, 0.74", "-105.682, 10.6633, -77.4801, 0.74", "-106.678, 10.8617, -77.8508, 0.52", "-107.134, 10.9269, -78.0439, 0.59", "-107.981, 11.0308, -78.4337, 0.44", "-108.611, 11.1346, -78.7373, 0.44", "-109.39, 11.3401, -79.1569, 0.37", "-110.164, 11.6244, -79.5764, 0.52", "-110.768, 11.9172, -79.9129, 1.11", "-111.234, 12.1866, -80.2071, 1.25", "-111.778, 12.5401, -80.6107, 0.37", "-112.551, 13.0567, -81.2775, 0.37", "-113.074, 13.3834, -81.7819, 0.29", "-113.489, 13.622, -82.2307, 0.29", "-114.234, 14.0372, -83.0881, 0.59", "-114.82, 14.3807, -83.7942, 0.59", "-115.151, 14.5871, -84.1966, 0.29", "-115.412, 14.7703, -84.4867, 0.37", "-115.822, 15.111, -84.9126, 0.37", "-116.386, 15.626, -85.394, 0.44", "-116.863, 16.0873, -85.6939, 0.44", "-117.32, 16.53, -85.9135, 0.44", "-117.877, 17.0253, -86.1501, 0.37", "-118.106, 17.2013, -86.2356, 0.37", "-118.704, 17.573, -86.4158, 0.88", "-119.056, 17.7522, -86.508, 1.11", "-119.689, 18.0478, -86.6674, 1.11", "-120.684, 18.5352, -86.9101, 0.37", "-121.451, 18.9537, -87.0914, 0.37", "-121.887, 19.2376, -87.1886, 0.66", "-122.526, 19.7901, -87.3603, 0.66", "-123.014, 20.3389, -87.5237, 0.37", "-123.41, 20.9182, -87.6957, 0.52", "-123.549, 21.1733, -87.7719, 0.66", "-123.749, 21.5887, -87.8915, 0.66", "-124.289, 22.7369, -88.2088, 0.37", "-124.551, 23.2355, -88.3226, 0.37", "-124.858, 23.6568, -88.3693, 0.37", "-125.2, 23.9921, -88.3498, 0.88", "-125.767, 24.4279, -88.2563, 0.81", "-126.052, 24.6079, -88.1932, 0.81", "-126.776, 25.0137, -88.0037, 0.29", "-127.728, 25.5266, -87.7467, 0.29", "-128.318, 25.8778, -87.5403, 0.52", "-129.026, 26.3497, -87.2758, 0.44", "-129.369, 26.5946, -87.1461, 0.44", "-129.82, 26.9413, -86.9561, 0.81", "-130.343, 27.4037, -86.7128, 0.81", "-131.304, 28.4068, -86.2129, 0.29", "-131.686, 28.8365, -86.0033, 0.44", "-132.043, 29.2499, -85.7815, 0.29", "-132.442, 29.6892, -85.5436, 0.29", "-132.973, 30.2341, -85.2613, 0.29", "-133.385, 30.6282, -85.0784, 0.29", "-133.878, 31.0582, -84.8992, 0.59", "-134.831, 31.8647, -84.54, 0.22", "-135.445, 32.3758, -84.3102, 0.22", "-135.775, 32.6256, -84.1858, 0.52", "-136.086, 32.8245, -84.062, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-84.9583, -51.081, 80.8625, 0.29", "-89.0974, -53.8731, 84.7218, 0.29", "-92.5242, -57.7682, 88.3601, 0.29", "-95.7222, -61.6662, 92.1957, 0.29", "-98.662, -65.9632, 95.8256, 0.29", "-100.773, -70.7241, 99.4737, 0.29", "-103.402, -75.3141, 102.997, 0.29", "-106.051, -79.9082, 106.5, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-84.9583, -51.081, 80.8625, 0.29", "-90.9195, -54.4764, 86.0639, 0.29", "-96.918, -58.8621, 90.4568, 0.29", "-102.321, -63.7928, 95.0649, 0.29", "-106.956, -69.0652, 100.123, 0.29", "-111.223, -74.8846, 104.928, 0.29", "-114.701, -81.6326, 109.179, 0.29", "-118.749, -87.6014, 113.998, 0.29" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-10.8495, -71.3887, 18.9836, 0.66", "-11.6576, -74.5083, 17.7934, 0.66", "-11.8644, -75.3359, 17.5081, 1.03", "-12.0797, -76.201, 17.312, 1.03", "-12.4861, -77.8532, 17.0893, 1.03", "-12.762, -79.1041, 17.0117, 1.03", "-13.0541, -80.6315, 17.0112, 0.81", "-13.2551, -81.996, 17.2508, 0.81", "-13.3792, -83.9943, 17.7821, 1.4", "-13.3719, -84.8495, 18.0754, 1.62", "-13.2772, -86.1235, 18.6365, 1.4", "-13.1574, -86.9621, 19.0411, 1.92", "-12.9211, -88.099, 19.612, 1.4", "-12.4663, -89.8178, 20.4979, 1.69", "-12.1178, -90.9662, 21.0373, 1.11", "-11.6473, -92.5076, 21.7211, 0.81", "-11.4384, -93.2365, 22.0211, 1.11", "-11.2157, -94.1087, 22.344, 1.25", "-10.8086, -96.056, 22.9919, 0.96", "-10.6794, -97.0461, 23.2683, 0.74", "-10.6437, -97.998, 23.4813, 0.81", "-10.7873, -99.4538, 23.6862, 0.52", "-11.0165, -100.502, 23.753, 0.88", "-11.2985, -101.392, 23.7074, 0.88", "-11.6772, -102.376, 23.504, 0.88", "-12.0208, -103.251, 23.2441, 0.66", "-12.3352, -104.192, 22.8649, 0.66", "-12.6372, -105.52, 22.1388, 0.88", "-12.7514, -106.407, 21.5643, 1.33", "-12.7857, -107.086, 21.1031, 1.47", "-12.7932, -107.726, 20.6719, 1.62", "-12.8123, -109.03, 19.8509, 0.74", "-12.8751, -110.509, 19.0888, 0.74", "-13.0069, -111.659, 18.663, 0.74", "-13.1692, -112.574, 18.4741, 0.74", "-13.4293, -113.834, 18.3922, 0.66", "-13.6839, -115.141, 18.4912, 0.66", "-13.9856, -117.023, 18.8896, 0.96", "-14.076, -117.99, 19.1872, 0.88", "-14.0763, -118.855, 19.4865, 0.88", "-13.9222, -120.467, 20.0486, 0.52", "-13.6526, -121.948, 20.5582, 1.18", "-13.4918, -122.673, 20.7636, 1.62", "-13.3139, -123.492, 20.9284, 1.62", "-13.1003, -124.65, 21.1249, 0.96", "-12.9771, -125.549, 21.2577, 0.96", "-12.8824, -126.911, 21.4264, 0.66", "-12.9288, -128.707, 21.5842, 0.52", "-13.0939, -130.323, 21.739, 0.59", "-13.4349, -132.186, 21.9324, 0.74", "-13.5648, -132.671, 21.9913, 1.11", "-13.9124, -133.6, 22.1546, 1.25", "-14.655, -135.091, 22.4979, 0.88", "-15.1475, -135.835, 22.7343, 0.66", "-15.6829, -136.494, 22.9833, 0.66", "-16.2126, -137.078, 23.2067, 0.59", "-17.2601, -138.256, 23.6036, 0.59", "-17.843, -138.935, 23.7851, 0.44", "-18.5311, -139.815, 23.9341, 0.44", "-19.0896, -140.634, 23.9824, 0.74", "-19.5321, -141.393, 23.9774, 0.74", "-19.9057, -142.116, 23.9313, 0.66", "-20.3749, -143.173, 23.7953, 1.03", "-20.7257, -144.013, 23.6935, 1.4", "-21.1012, -144.955, 23.589, 1.4", "-21.4324, -145.773, 23.5052, 1.47", "-21.9607, -147.067, 23.3944, 0.74", "-22.3691, -148.075, 23.2992, 0.74" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-10.8495, -71.3887, 18.9836, 0.44", "-9.99882, -72.1942, 19.2558, 0.44", "-9.49992, -72.8622, 19.4723, 0.44", "-9.15689, -73.691, 19.7241, 0.37", "-8.81788, -75.2663, 20.1292, 0.59", "-8.78134, -75.8687, 20.2648, 0.52", "-8.81673, -76.6332, 20.4317, 0.44", "-9.06627, -77.8435, 20.7667, 0.44", "-9.39721, -78.8506, 21.1278, 0.44", "-9.66145, -79.4561, 21.4187, 0.59", "-10.025, -80.1481, 21.9027, 0.59", "-10.3292, -80.7456, 22.5915, 0.37", "-10.6311, -81.4288, 23.7127, 0.59", "-10.822, -81.9759, 24.8332, 0.88", "-10.9256, -82.288, 25.5682, 0.81", "-11.1354, -82.8858, 27.0552, 1.03", "-11.3608, -83.4816, 28.5305, 0.88", "-11.6153, -84.0407, 29.7776, 0.44", "-11.8866, -84.5678, 30.6924, 0.44", "-12.1042, -84.9733, 31.221, 0.66", "-12.4753, -85.5584, 31.8209, 0.66", "-12.8854, -86.063, 32.2168, 0.66", "-13.5599, -86.7564, 32.6445, 0.66", "-14.1667, -87.3458, 32.9728, 1.33", "-14.4479, -87.6233, 33.1003, 1.47", "-14.9994, -88.1726, 33.3392, 1.03", "-15.6905, -88.8812, 33.643, 0.81", "-16.2681, -89.4809, 33.9123, 0.74", "-16.9466, -90.2031, 34.2565, 0.52", "-17.4195, -90.741, 34.5149, 0.44", "-19.1264, -97.8308, 40.1334, 0.44", "-20.0257, -105.576, 45.0681, 0.44", "-21.7678, -113.165, 50.0173, 0.44", "-25.4745, -119.957, 55.0024, 0.44", "-28.4082, -125.814, 61.4171, 0.44", "-30.3264, -131.884, 68.0183, 0.44", "-32.6204, -138.117, 74.3517, 0.44", "-36.7902, -143.606, 80.3876, 0.44", "-42.7961, -148.032, 85.6663, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "5.99485, -24.6701, -4.15544, 1.47", "5.57264, -25.9183, -4.37936, 1.47", "5.15152, -27.5196, -4.5603, 1.33", "4.88654, -28.7922, -4.62204, 1.55", "4.72414, -29.8216, -4.59631, 1.55", "4.60355, -30.8849, -4.45077, 1.77", "4.48319, -32.2416, -4.13065, 1.77", "4.45035, -33.0743, -3.82531, 2.14", "4.43372, -33.7671, -3.49656, 2.58", "4.40533, -34.6528, -3.05094, 2.36", "4.31197, -36.2819, -2.30601, 1.77", "4.18598, -37.6935, -1.80278, 1.47", "4.06106, -38.8835, -1.53374, 1.18", "3.93288, -40.1522, -1.37881, 1.11", "3.83308, -41.2844, -1.35779, 1.33", "3.73123, -42.8333, -1.49816, 1.25", "3.70123, -44.1914, -1.74746, 1.47", "3.73509, -45.4079, -2.01706, 1.62", "3.79022, -46.3203, -2.22695, 2.14", "3.82647, -46.9497, -2.35975, 2.58", "3.8463, -47.8542, -2.51176, 2.43", "3.80201, -49.3105, -2.69186, 2.14", "3.69216, -50.4874, -2.80544, 1.92", "3.49676, -51.6563, -2.89, 1.47", "3.13982, -53.1027, -2.97364, 1.25", "2.76542, -54.2965, -2.99266, 1.11", "2.42676, -55.1896, -2.95865, 1.4", "2.18137, -55.7639, -2.91291, 1.55", "1.80042, -56.64, -2.80368, 1.18", "1.45077, -57.5325, -2.64265, 0.88", "1.14602, -58.4701, -2.48135, 1.18", "0.917069, -59.3863, -2.33783, 1.03", "0.735982, -60.248, -2.2024, 1.03", "0.52376, -61.5249, -2.02373, 1.47", "0.43814, -62.3357, -1.93504, 1.77", "0.371827, -63.6116, -1.85662, 1.77", "0.341548, -64.5953, -1.8742, 2.06" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.99485, -24.6701, -4.15544, 1.77", "6.46313, -26.8117, -4.65292, 1.77", "6.67258, -27.8837, -4.88519, 1.99", "6.91343, -29.1163, -5.15226, 1.99", "7.24204, -30.7981, -5.51667, 3.17", "7.39007, -31.5557, -5.68082, 3.76", "7.64336, -32.8521, -5.9617, 4.2", "7.78404, -33.9991, -6.16143, 3.9" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "4.48557, 41.4011, -0.359339, 0.205351", "5.97663, 56.3268, -0.359339, 0.205351", "7.46769, 71.2525, -0.359339, 0.205351" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-46.1651, 99.0176, -21.9996, 0.29", "-46.3968, 99.8992, -22.0888, 0.29", "-46.6347, 101.247, -22.4796, 0.29", "-46.7706, 102.464, -22.8858, 0.29", "-46.8397, 103.78, -23.3628, 0.29", "-46.8513, 104.728, -23.7355, 0.29", "-46.8478, 106.289, -24.3476, 0.29", "-46.7466, 109.103, -25.5826, 0.29", "-46.7008, 109.972, -25.9921, 0.37", "-46.6521, 111.02, -26.5121, 0.37", "-46.6125, 112.311, -27.1918, 0.37", "-46.5749, 113.375, -27.7571, 0.22", "-46.5505, 114.481, -28.3241, 0.22", "-46.634, 115.669, -28.8158, 1.03", "-46.6727, 115.881, -28.9098, 1.03" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-46.1651, 99.0176, -21.9996, 0.52", "-47.3895, 100.199, -21.4887, 0.52", "-47.9481, 100.829, -21.215, 0.52", "-48.5019, 101.565, -20.9291, 0.44", "-48.7454, 101.943, -20.8018, 0.59", "-49.0015, 102.405, -20.6642, 0.59", "-49.4662, 103.293, -20.3976, 0.37", "-50.0031, 104.453, -20.1296, 0.37", "-50.3209, 105.205, -19.9464, 0.37", "-50.6427, 105.961, -19.754, 0.37", "-51.0021, 106.788, -19.522, 0.29", "-51.341, 107.528, -19.3003, 0.29", "-51.7421, 108.301, -19.0517, 0.81", "-51.9375, 108.607, -18.9504, 0.81", "-52.2806, 109.066, -18.7885, 0.74", "-52.7669, 109.643, -18.6159, 0.74", "-53.2101, 110.094, -18.5412, 0.96", "-53.6743, 110.515, -18.5455, 0.96", "-53.9915, 110.797, -18.5977, 0.59", "-54.6137, 111.391, -18.7978, 0.29", "-55.1917, 112.005, -19.0939, 0.29", "-55.8166, 112.733, -19.5029, 0.29", "-56.2534, 113.285, -19.8113, 0.22", "-56.9054, 114.147, -20.2866, 0.22", "-57.4138, 114.856, -20.6674, 0.74", "-57.9846, 115.702, -21.0683, 0.37", "-58.4363, 116.445, -21.3499, 0.37", "-58.8453, 117.181, -21.5876, 0.81", "-59.138, 117.678, -21.7493, 1.18", "-59.4222, 118.064, -21.8741, 1.18", "-60.1617, 118.882, -22.1733, 0.29", "-60.9497, 119.691, -22.4746, 0.29", "-61.4552, 120.175, -22.6823, 0.29", "-61.975, 120.637, -22.9129, 0.29", "-62.7495, 121.267, -23.2485, 0.74", "-63.3148, 121.633, -23.4849, 0.74" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "125.957, 29.2954, 39.8774, 0.29", "133.479, 29.0635, 43.4139, 0.29", "140.852, 28.5735, 47.2259, 0.29", "148.411, 29.108, 50.661, 0.29", "155.536, 30.5794, 54.7182, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "125.957, 29.2954, 39.8774, 0.29", "135.834, 28.6208, 43.4841, 0.29", "145.581, 29.8245, 47.3333, 0.29", "155.695, 31.9936, 49.4092, 0.29", "165.067, 35.0437, 53.235, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "69.3672, 44.5301, 10.8662, 0.44", "70.5355, 44.5759, 10.7539, 0.44", "70.9837, 44.6525, 10.6446, 0.37", "71.7857, 44.8667, 10.4003, 0.59", "72.2219, 45.0042, 10.2595, 0.74", "73.3338, 45.3927, 9.9102, 0.37", "74.471, 45.8244, 9.57333, 0.29", "75.1464, 46.1616, 9.33586, 0.29", "75.621, 46.4433, 9.18346, 0.88", "75.7937, 46.5624, 9.12747, 1.11", "76.2135, 46.8756, 9.01086, 1.11", "76.5885, 47.1695, 8.97677, 1.18", "77.2546, 47.6139, 9.0534, 0.74", "77.7023, 47.9043, 9.13039, 0.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "69.3672, 44.5301, 10.8662, 0.29", "69.9361, 45.4869, 11.0644, 0.29", "70.1962, 45.9456, 11.1691, 0.29", "70.5293, 46.533, 11.3031, 0.66", "70.8889, 47.1673, 11.4478, 0.29", "71.1582, 47.6421, 11.5562, 0.29", "71.6979, 48.5939, 11.7733, 0.29", "71.9826, 49.1283, 11.9501, 0.29", "77.0092, 56.5207, 13.2956, 0.29", "80.8899, 64.5936, 14.6311, 0.29", "84.1541, 73.0827, 14.4495, 0.29", "88.065, 81.238, 15.1388, 0.29" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-61.2646, -57.654, -67.4988, 0.81", "-61.5357, -59.0193, -69.6783, 0.81", "-61.6067, -59.1978, -69.9615, 0.81", "-62.6725, -61.0967, -72.7784, 0.37", "-63.0093, -61.6186, -73.4676, 0.52", "-63.3361, -62.1212, -74.1038, 0.66", "-63.7073, -62.7216, -74.8351, 0.66", "-64.5696, -63.9513, -76.2212, 0.37", "-65.1189, -64.7107, -77.1104, 0.37", "-65.9794, -65.8467, -78.4396, 0.37", "-66.507, -66.5369, -79.2857, 0.66", "-67.3564, -67.6288, -80.6199, 1.11", "-67.7625, -68.1316, -81.2081, 1.25", "-69.1525, -69.6783, -83.2182, 0.22", "-69.7453, -70.2252, -84.0295, 0.29", "-70.2758, -70.625, -84.7023, 0.59", "-70.8883, -71.0391, -85.4094, 0.81", "-71.5353, -71.4843, -86.1728, 0.81", "-73.1726, -72.8414, -88.1693, 0.37", "-73.641, -73.3189, -88.7479, 0.37", "-74.3635, -74.304, -89.8015, 0.59", "-74.6145, -74.7437, -90.2122, 0.81", "-75.4596, -76.5876, -91.6829, 0.44", "-76.0032, -78.0237, -92.6205, 0.44", "-76.4204, -79.2749, -93.2846, 0.37", "-76.9125, -80.8446, -94.0648, 0.37", "-77.2825, -82.0001, -94.6362, 0.66", "-77.5988, -82.8539, -95.0903, 0.81", "-77.9245, -83.6486, -95.4914, 0.81", "-78.5525, -85.0499, -96.2287, 0.29", "-78.9296, -85.8251, -96.6204, 0.96", "-79.8695, -87.6639, -97.4381, 0.29", "-80.4656, -88.8686, -97.9238, 0.29", "-81.0584, -90.0833, -98.3367, 0.44", "-81.3999, -90.7591, -98.5499, 0.44", "-81.9598, -91.8511, -98.8328, 0.29", "-82.265, -92.4559, -99.0199, 0.59", "-82.718, -93.4467, -99.3367, 0.59", "-83.124, -94.4302, -99.7042, 0.52", "-83.7851, -95.9008, -100.351, 0.37", "-84.2133, -96.8142, -100.797, 0.88", "-85.0167, -98.5098, -101.675, 0.44", "-85.4595, -99.4839, -102.175, 0.59", "-85.8197, -100.287, -102.576, 0.59", "-86.2501, -101.268, -103.013, 0.59", "-86.7009, -102.28, -103.377, 0.37", "-87.0808, -103.015, -103.581, 0.37", "-87.7414, -104.104, -103.756, 0.29", "-87.9998, -104.485, -103.779, 0.29", "-88.6665, -105.454, -103.75, 0.88", "-89.1152, -106.125, -103.676, 1.18", "-89.8878, -107.178, -103.498, 0.29", "-90.4674, -107.905, -103.364, 0.29", "-91.3362, -108.978, -103.239, 0.29", "-91.7274, -109.488, -103.211, 0.88", "-92.1027, -110.005, -103.223, 0.88", "-93.3237, -111.718, -103.428, 0.22", "-93.734, -112.299, -103.566, 0.22", "-94.6461, -113.533, -103.946, 0.59", "-94.8502, -113.801, -104.049, 0.59", "-95.6765, -114.866, -104.482, 0.22", "-96.1486, -115.484, -104.75, 0.44", "-96.7907, -116.421, -105.187, 0.22", "-97.6791, -117.704, -105.772, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-61.2646, -57.654, -67.4988, 0.29", "-62.1871, -57.8545, -67.5208, 0.29", "-62.7539, -58.015, -67.5132, 0.29", "-63.3066, -58.1966, -67.5142, 0.66", "-63.5684, -58.2986, -67.5193, 0.66", "-64.4862, -58.6908, -67.535, 0.29", "-64.8809, -58.8675, -67.5466, 0.29", "-65.1718, -59.0215, -67.5294, 0.66", "-65.4467, -59.1826, -67.5095, 0.66", "-66.3844, -59.7578, -67.4427, 0.29", "-66.7185, -59.9471, -67.4242, 0.52", "-67.0413, -60.1072, -67.4158, 0.52", "-67.9439, -60.4759, -67.3787, 0.22", "-68.3678, -60.6185, -67.3547, 0.59", "-68.6424, -60.6966, -67.3271, 0.74", "-69.1804, -60.8169, -67.2667, 0.29", "-69.4534, -60.8662, -67.2385, 0.29", "-69.8126, -60.913, -67.2024, 0.96", "-70.1668, -60.925, -67.1928, 0.96", "-71.1368, -60.9473, -67.135, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-22.3691, -148.075, 23.2992, 0.29", "-22.3363, -148.056, 23.9079, 0.29", "-22.2227, -148.054, 25.2357, 0.29", "-22.1415, -148.089, 26.1831, 0.59", "-22.0503, -148.227, 27.4999, 0.66", "-21.9098, -148.565, 29.3436, 0.59", "-21.7918, -148.928, 30.5524, 0.29", "-21.6645, -149.301, 31.2703, 0.52", "-21.5476, -149.772, 31.5446, 0.66", "-21.3075, -150.837, 31.6816, 0.37", "-20.9827, -152.215, 31.6784, 0.29", "-20.7227, -153.311, 31.5988, 0.29", "-20.4695, -154.402, 31.4641, 0.29", "-20.224, -155.393, 31.3299, 0.29", "-19.8802, -156.561, 31.1749, 0.29", "-19.538, -157.556, 31.0533, 0.29", "-17.1847, -163.602, 37.1568, 0.29", "-15.5908, -168.491, 44.3858, 0.29", "-11.9859, -173.576, 50.7082, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-22.3691, -148.075, 23.2992, 0.74", "-23.1342, -149.013, 22.9673, 0.74", "-23.801, -149.983, 22.6781, 0.52", "-24.307, -150.807, 22.4683, 0.52", "-25.0965, -152.315, 22.1562, 0.59", "-25.4117, -153.083, 22.0661, 0.96", "-25.6502, -153.918, 21.9985, 1.18", "-25.7289, -154.628, 21.9008, 1.18", "-25.698, -155.3, 21.8046, 0.96", "-25.5244, -156.284, 21.5985, 0.66", "-25.1162, -157.676, 21.0731, 0.52", "-24.6573, -158.92, 20.5091, 0.52", "-24.0687, -160.234, 19.7816, 0.29", "-23.8039, -160.726, 19.4472, 0.37", "-23.077, -161.862, 18.4529, 0.29", "-22.2967, -162.879, 17.1914, 0.29", "-22.7045, -174.031, 14.7523, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.341548, -64.5953, -1.8742, 0.37", "-3.24468, -66.2381, -1.13725, 0.37", "-4.88263, -67.0518, -0.230971, 0.37", "-6.07382, -67.6749, 0.606004, 0.37", "-6.88042, -68.1089, 1.1911, 0.37", "-7.89221, -68.6681, 1.97274, 0.59", "-8.87114, -69.2255, 2.74205, 0.74", "-9.60768, -69.6437, 3.49035, 0.52", "-10.1633, -69.9659, 4.06266, 0.59", "-10.6605, -70.3146, 4.5377, 0.74", "-11.5293, -70.9256, 5.23733, 0.52", "-12.0847, -71.2992, 5.60219, 0.52", "-12.6138, -71.6235, 5.88499, 0.74", "-13.2116, -71.9683, 6.17248, 0.74", "-13.7835, -72.3078, 6.43551, 0.52", "-14.614, -72.7956, 6.80417, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "0.341548, -64.5953, -1.8742, 0.88", "0.205253, -65.3753, -1.88925, 0.88", "-0.0751157, -66.3548, -1.82916, 0.66", "-0.376507, -67.0383, -1.63031, 0.74", "-0.64015, -67.4915, -1.44522, 0.88", "-1.10329, -68.1777, -1.14405, 0.88", "-1.39865, -68.5931, -0.964931, 1.03", "-1.7624, -69.0461, -0.734812, 1.03", "-2.5906, -70.1001, -0.182348, 1.03", "-3.05932, -70.763, 0.138796, 1.03", "-3.43987, -71.433, 0.414735, 0.88", "-3.64567, -72.0082, 0.591003, 0.88", "-3.70568, -72.5442, 0.719404, 0.88", "-3.55931, -73.5844, 0.868163, 1.25", "-3.44246, -73.9623, 0.907433, 1.55", "-3.21716, -74.4914, 0.991657, 1.55", "-2.84965, -75.2204, 1.18767, 1.55", "-2.59274, -75.6712, 1.37158, 1.55", "-2.10333, -76.4451, 1.81162, 1.03", "-1.71037, -76.9923, 2.2392, 1.03", "-1.37667, -77.42, 2.63763, 0.81", "-0.836649, -78.0492, 3.33184, 0.81", "-0.451876, -78.4589, 3.83872, 1.03", "-0.0713485, -78.8141, 4.30638, 1.03", "0.371689, -79.1816, 4.79439, 1.03", "0.745956, -79.4846, 5.1405, 0.88", "1.33034, -79.9896, 5.6107, 0.88", "1.62811, -80.2636, 5.81283, 0.96", "1.97418, -80.6207, 6.02681, 0.96", "2.44731, -81.1682, 6.30165, 1.33", "2.70006, -81.4994, 6.43421, 1.62", "2.91031, -81.8007, 6.54488, 1.62" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "7.78404, -33.9991, -6.16143, 0.66", "8.2146, -37.3638, -3.50499, 0.66", "8.26634, -38.4698, -2.74182, 0.88", "8.34615, -40.6682, -1.42095, 1.03", "8.41078, -41.7162, -0.848529, 1.03", "8.50343, -42.6392, -0.367278, 1.03", "8.67125, -43.7774, 0.215788, 0.37", "8.8431, -45.0042, 0.705639, 0.37", "9.18893, -46.2249, 1.15861, 0.59", "9.8112, -47.2653, 1.50673, 0.81", "10.3476, -47.8477, 1.75173, 0.81", "10.9719, -48.3553, 2.0516, 0.52", "11.5598, -48.7628, 2.36131, 0.81", "12.4269, -49.3484, 2.86489, 1.25", "12.7706, -49.6439, 3.10977, 1.69", "13.1674, -50.1757, 3.48633, 1.69", "13.6049, -51.4784, 4.1865, 0.96", "13.6923, -52.3333, 4.53234, 0.66", "13.6976, -53.0031, 4.76483, 0.81", "13.6738, -54.4081, 5.23419, 0.44", "13.7115, -55.5227, 5.62361, 0.44", "13.8121, -56.3998, 5.94442, 0.44", "14.0299, -57.1842, 6.32014, 0.88", "14.5477, -58.1963, 7.04357, 1.25", "15.2267, -59.1321, 7.90149, 0.66", "15.8613, -59.8378, 8.63377, 0.52", "16.2519, -60.2499, 9.06523, 0.52", "17.2005, -61.317, 10.1355, 0.74", "17.9659, -62.2738, 10.9905, 1.25", "18.2621, -62.6869, 11.29, 1.25", "18.7314, -63.4024, 11.693, 0.52", "19.3026, -64.3336, 12.0613, 0.44", "20.0425, -65.5718, 12.3828, 0.37", "20.4925, -66.3041, 12.4699, 0.37", "20.9717, -67.0396, 12.4998, 0.96", "21.3467, -67.5862, 12.5087, 1.33", "22.4781, -69.0702, 12.5133, 0.29", "22.899, -69.5479, 12.5084, 0.29", "23.329, -69.9767, 12.4917, 0.29", "23.4895, -70.1358, 12.4868, 0.44", "27.9555, -79.0146, 15.8936, 0.44", "33.748, -87.4227, 18.2897, 0.44", "38.5866, -96.6459, 19.7719, 0.44", "43.8988, -105.499, 21.7104, 0.44", "48.7684, -114.424, 24.3662, 0.44", "53.3331, -123.713, 26.2648, 0.44" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.78404, -33.9991, -6.16143, 1.03", "7.77341, -35.5301, -6.33348, 1.03", "7.91806, -37.0477, -6.50915, 1.03", "8.14044, -38.1423, -6.64297, 0.96", "8.43315, -39.1736, -6.77433, 0.96", "8.79404, -40.1682, -6.90599, 0.96", "9.0922, -40.8356, -6.97248, 1.18", "9.73095, -41.7257, -6.99204, 1.47", "10.401, -42.4241, -6.94279, 2.21", "10.6918, -42.6959, -6.89521, 2.21", "11.1511, -43.1392, -6.76301, 1.99", "11.9619, -44.0208, -6.42156, 1.33", "12.6993, -45.0137, -6.00274, 0.88", "13.1577, -45.8249, -5.6477, 0.74", "13.4447, -46.6031, -5.32847, 0.74", "13.6509, -47.5479, -4.98304, 1.33", "13.7141, -48.1274, -4.8034, 1.62", "13.7373, -48.7651, -4.64724, 1.92", "13.7427, -49.4506, -4.53215, 1.69", "13.803, -50.7545, -4.40105, 1.33", "13.951, -52.071, -4.35193, 1.03", "14.1226, -52.9725, -4.37119, 0.88", "14.3576, -53.8009, -4.42547, 1.03", "14.7494, -54.8777, -4.53735, 1.03", "15.2187, -55.9519, -4.6971, 1.03", "15.6561, -56.8622, -4.88522, 1.33", "15.9716, -57.5478, -5.06911, 1.69", "16.3003, -58.3841, -5.33002, 1.47", "16.4747, -58.9734, -5.53647, 1.03", "16.6472, -59.8769, -5.87207, 0.96", "16.7291, -60.705, -6.2043, 0.96", "16.757, -61.7232, -6.62044, 1.4", "16.7414, -62.806, -7.04961, 1.4", "16.7224, -63.7518, -7.41622, 1.55", "16.7367, -64.2649, -7.60049, 1.77", "16.8288, -65.2472, -7.91331, 0.96", "16.9961, -66.1246, -8.13978, 0.66", "17.2635, -66.9426, -8.26588, 0.66", "17.6576, -67.7218, -8.31071, 0.96", "18.1841, -68.4834, -8.30179, 1.11", "18.4687, -68.8125, -8.28908, 1.4", "18.7297, -69.0711, -8.27927, 1.4", "19.2777, -69.6084, -8.26139, 1.4", "19.9235, -70.3129, -8.25891, 0.66", "20.205, -70.6943, -8.28318, 0.52", "20.5181, -71.2427, -8.34419, 0.52", "20.9246, -72.1454, -8.43145, 0.81", "21.2927, -73.1581, -8.47632, 1.03", "21.4767, -73.8289, -8.49106, 1.03", "21.6551, -74.7361, -8.47501, 1.03", "21.7767, -75.6421, -8.49107, 1.03", "21.8647, -76.5856, -8.5353, 0.88", "21.9541, -77.7395, -8.66662, 1.03", "22.0442, -78.7684, -8.84992, 0.52", "22.1521, -79.7416, -9.09981, 0.52", "22.3218, -81.16, -9.60591, 0.88", "22.3942, -81.7391, -9.86898, 1.11", "22.502, -82.657, -10.3517, 0.59", "22.5454, -83.046, -10.5552, 0.59", "22.6409, -83.9192, -10.8963, 0.52", "22.7128, -84.8489, -11.0717, 0.52", "22.7145, -85.6025, -10.9903, 1.11", "22.6564, -86.2393, -10.8041, 1.25", "22.5028, -87.2012, -10.3882, 1.18", "22.3272, -88.1404, -9.91745, 0.52", "22.21, -88.7923, -9.54034, 0.52", "22.0891, -89.685, -9.04115, 0.52", "22.0576, -90.0218, -8.88705, 0.81", "22.0284, -90.6402, -8.69375, 0.74", "21.997, -91.439, -8.56853, 0.74", "21.9468, -92.233, -8.52301, 1.03", "21.8248, -93.2861, -8.54099, 0.66", "21.6942, -93.9815, -8.58262, 0.52", "21.4562, -94.7867, -8.65505, 1.11", "21.1818, -95.4621, -8.77343, 1.11", "20.7256, -96.4207, -9.01186, 0.81", "20.2197, -97.4219, -9.33346, 0.66", "19.8707, -98.1235, -9.58203, 0.88", "19.4461, -99.0799, -9.97319, 0.66", "18.9406, -100.342, -10.6145, 0.59", "18.6518, -101.167, -11.1081, 0.88", "18.431, -101.889, -11.584, 1.18", "18.2816, -102.412, -11.9352, 0.96", "18.0924, -103.103, -12.4026, 0.96", "17.763, -104.362, -13.1869, 0.52", "17.6512, -104.777, -13.4105, 0.81", "17.4386, -105.589, -13.7993, 0.66", "17.2973, -106.207, -14.0056, 0.66", "17.1614, -106.968, -14.1329, 0.96", "17.0829, -107.899, -14.0029, 0.88", "17.084, -108.711, -13.7233, 0.88", "17.1015, -109.418, -13.4355, 0.37", "17.173, -110.708, -12.8732, 1.03", "17.2057, -111.388, -12.5928, 1.03", "17.2139, -112.894, -12.0059, 0.44", "17.1821, -113.99, -11.6937, 0.44", "17.155, -114.631, -11.6532, 0.74", "17.1408, -115.294, -11.8237, 0.74", "17.1509, -116.216, -12.2903, 0.44", "17.1896, -116.955, -12.7489, 0.66", "17.287, -118.02, -13.4929, 0.44", "17.466, -119.542, -14.5718, 0.88", "17.6976, -121.211, -15.6977, 0.52", "17.8318, -122.06, -16.2566, 0.74", "18.0378, -123.2, -16.9799, 1.33", "18.1533, -123.848, -17.3596, 1.33", "18.3433, -125.182, -18.0201, 0.74", "18.4302, -126.031, -18.3395, 0.66", "18.4794, -127.237, -18.6842, 0.66", "18.4448, -128.077, -18.8997, 0.81", "18.321, -128.934, -19.1139, 0.59", "18.1818, -129.509, -19.2348, 1.18", "18.0911, -129.777, -19.2849, 1.18", "17.7257, -130.723, -19.4412, 0.44", "17.4136, -131.547, -19.5043, 0.44", "17.1893, -132.239, -19.5192, 1.03", "17.09, -132.732, -19.4973, 1.4", "17.0573, -133.773, -19.3116, 0.52", "17.1043, -134.476, -19.1544, 0.52", "17.3071, -135.399, -18.8705, 0.74", "17.4228, -135.732, -18.7253, 0.74", "17.7151, -136.395, -18.3128, 0.59", "18.1282, -137.141, -17.6978, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "7.78404, -33.9991, -6.16143, 0.88", "10.3196, -33.9771, -9.42115, 0.88", "11.0712, -33.9303, -10.2563, 0.88", "11.8489, -33.871, -10.9973, 1.03", "12.3902, -33.8259, -11.4452, 1.33", "12.8959, -33.7874, -11.8309, 1.62", "13.6336, -33.7442, -12.3629, 1.84", "14.289, -33.6592, -12.7252, 1.47", "15.0371, -33.5738, -13.2707, 1.18", "15.5028, -33.5097, -13.942, 0.81", "15.9208, -33.4316, -14.8722, 0.81", "16.162, -33.3976, -15.5267, 1.11", "16.6357, -33.3948, -17.0232, 1.33", "17.1125, -33.4407, -18.6572, 1.77", "18.1843, -33.651, -22.4226, 1.47", "18.541, -33.7418, -23.6045, 1.11", "18.9293, -33.8409, -24.7455, 1.11", "19.5054, -33.9651, -26.1249, 0.81", "19.9015, -34.0379, -26.8312, 0.96", "20.61, -34.1055, -27.7123, 0.88", "21.2272, -34.0393, -28.3185, 0.74", "21.6859, -33.8646, -28.8206, 0.59", "22.2402, -33.4779, -29.5745, 1.03", "22.6414, -33.1132, -30.1652, 1.55", "23.0068, -32.755, -30.7183, 1.69", "24.0825, -31.6747, -32.4235, 1.69", "24.4101, -31.357, -32.9664, 1.69", "25.238, -30.6264, -34.314, 0.88", "25.7226, -30.2753, -35.0382, 0.81", "26.3346, -29.9478, -35.8144, 1.11", "27.1748, -29.6535, -36.7076, 1.18", "27.9855, -29.5302, -37.3844, 0.59", "28.3568, -29.536, -37.664, 0.59", "29.295, -29.7304, -38.2452, 0.96", "29.9763, -30.0017, -38.6364, 1.18", "30.5694, -30.3348, -38.9299, 1.18", "31.1919, -30.7414, -39.1714, 1.4", "31.9192, -31.2496, -39.413, 1.4", "32.5974, -31.7033, -39.6266, 1.11", "33.0792, -31.9765, -39.7665, 1.11", "33.6731, -32.2131, -39.9338, 1.03", "34.4512, -32.4024, -40.145, 1.03", "35.1302, -32.4762, -40.3216, 1.03", "35.914, -32.4799, -40.5168, 0.96", "36.9922, -32.3942, -40.7874, 0.88", "38.171, -32.2308, -41.0563, 0.88", "38.9556, -32.0779, -41.2201, 1.03", "39.5689, -31.9379, -41.3574, 1.11", "40.0669, -31.8211, -41.4906, 1.18", "40.502, -31.7416, -41.6662, 1.18", "41.326, -31.6952, -42.2017, 0.81", "41.8782, -31.7721, -42.7178, 0.74", "42.571, -31.972, -43.4939, 1.18", "43.0867, -32.1653, -44.1296, 1.4", "44.1103, -32.5958, -45.5063, 1.18", "44.8812, -32.9205, -46.6168, 0.88", "45.4395, -33.1327, -47.5001, 0.74", "46.0052, -33.2952, -48.389, 0.74", "46.5318, -33.3622, -49.1613, 1.11", "47.1009, -33.3399, -49.9582, 1.4", "47.6743, -33.2662, -50.7258, 1.4", "48.4689, -33.1699, -51.809, 1.11", "48.9286, -33.1445, -52.4708, 0.74", "49.5002, -33.2015, -53.3359, 0.66", "50.1766, -33.4203, -54.3963, 0.81", "50.8769, -33.7971, -55.4202, 0.74", "51.4681, -34.2005, -56.2575, 1.25", "51.8034, -34.4435, -56.6992, 1.69", "52.248, -34.734, -57.2481, 1.69", "52.7299, -34.9481, -57.7468, 1.4", "53.5088, -35.0786, -58.3919, 0.88", "54.6687, -34.9786, -59.2121, 0.81", "55.2013, -34.8718, -59.5549, 0.81", "55.9549, -34.7093, -59.9868, 0.81", "56.941, -34.5036, -60.4688, 0.81", "57.568, -34.4005, -60.7243, 0.81", "58.4668, -34.3295, -61.033, 0.81", "59.0831, -34.3729, -61.1912, 0.96", "60.0254, -34.6145, -61.4529, 0.96", "60.65, -34.8973, -61.688, 1.18", "61.1883, -35.2296, -61.9708, 1.47", "61.7268, -35.6054, -62.3042, 1.47", "62.5025, -36.1615, -62.8267, 0.74", "63.3983, -36.7665, -63.461, 0.74", "64.487, -37.4198, -64.2746, 0.66", "65.4915, -37.957, -65.0773, 0.74", "66.1164, -38.232, -65.5861, 0.81", "66.834, -38.4576, -66.1605, 0.81", "67.2013, -38.5195, -66.4403, 1.11", "68.086, -38.5358, -67.092, 1.25", "68.4673, -38.4899, -67.4101, 1.62", "68.865, -38.3912, -67.8442, 1.62", "69.6096, -38.1559, -68.8071, 0.59", "70.0601, -38.0032, -69.4577, 0.59", "70.7314, -37.7872, -70.4587, 0.88", "71.632, -37.5287, -71.809, 1.4", "72.5528, -37.317, -73.1327, 0.74", "73.1047, -37.227, -73.8848, 0.59", "73.5889, -37.1871, -74.4745, 0.81", "74.0463, -37.192, -74.901, 0.81", "74.5157, -37.2291, -75.186, 0.96", "75.0208, -37.2675, -75.3888, 0.96", "75.6323, -37.2964, -75.5945, 0.59", "76.5797, -37.2914, -75.9338, 0.59", "77.493, -37.2304, -76.266, 0.66", "78.011, -37.1644, -76.508, 1.03", "78.8429, -37.0263, -76.9596, 1.03", "79.6061, -36.8297, -77.6432, 0.59", "79.9621, -36.696, -78.0788, 0.59", "80.4071, -36.4946, -78.7358, 0.59", "81.0668, -36.2177, -79.8018, 1.11", "81.3625, -36.1252, -80.2823, 1.33", "83.0543, -35.7505, -82.8825, 1.03", "83.3679, -35.6935, -83.3198, 1.4", "84.0095, -35.5882, -84.1121, 0.81", "84.6804, -35.4809, -84.8255, 0.74", "85.568, -35.3382, -85.5917, 0.59", "86.1767, -35.2375, -86.0273, 0.59", "87.1947, -35.0721, -86.5613, 0.59", "88.3999, -34.8172, -87.193, 0.88", "88.8275, -34.6764, -87.4136, 1.25", "89.207, -34.5043, -87.6068, 1.55", "89.7656, -34.2034, -87.9038, 1.55", "90.2146, -33.9511, -88.1586, 1.33", "90.7685, -33.6376, -88.4785, 0.66", "91.4781, -33.2538, -88.8838, 0.66", "91.9408, -33.023, -89.2022, 0.66", "92.7583, -32.6215, -89.8988, 0.66", "93.0796, -32.5085, -90.3773, 0.66", "93.2609, -32.4699, -90.7319, 0.96", "93.4679, -32.4508, -91.1892, 0.96", "94.0851, -32.4738, -92.5897, 0.74", "94.458, -32.5157, -93.4206, 1.62", "95.9805, -32.73, -96.6172, 0.66", "96.2159, -32.7526, -97.0824, 0.66", "96.5914, -32.7681, -97.739, 1.11", "97.1036, -32.7704, -98.5134, 1.11", "97.6565, -32.7354, -99.1781, 0.52", "98.2325, -32.6459, -99.7142, 0.52", "98.9932, -32.4225, -100.265, 1.25", "99.5779, -32.2188, -100.697, 0.88", "100.687, -31.7494, -101.524, 0.44", "101.322, -31.4308, -101.986, 0.44", "102.265, -30.8986, -102.655, 0.52", "102.891, -30.5136, -103.088, 0.88", "103.203, -30.3131, -103.295, 1.11", "103.46, -30.1213, -103.51, 1.11", "103.656, -29.9443, -103.727, 1.11", "104.249, -29.3159, -104.657, 0.52", "104.46, -29.0691, -105.142, 0.52", "104.735, -28.7443, -105.893, 0.81", "105.376, -28.0442, -107.692, 0.81", "105.685, -27.7316, -108.524, 1.11", "105.829, -27.6041, -108.858, 1.92", "106.748, -26.9446, -110.517, 0.59", "106.876, -26.8736, -110.688, 0.59", "107.392, -26.6708, -111.127, 0.88", "108.104, -26.474, -111.505, 0.44", "109.29, -26.2133, -112.048, 0.44", "110.234, -26.0412, -112.445, 0.74", "110.764, -25.9721, -112.686, 0.74", "111.525, -25.9351, -113.183, 0.52", "111.958, -25.9637, -113.59, 0.52", "112.575, -26.0733, -114.358, 0.59", "112.802, -26.1191, -114.686, 0.59", "113.773, -26.2695, -116.198, 0.59", "114.411, -26.3101, -117.197, 0.81", "115.007, -26.2819, -118.139, 1.4", "115.33, -26.2101, -118.611, 1.55", "116.103, -25.8578, -119.567, 0.44", "116.446, -25.6199, -119.901, 0.88", "116.893, -25.2512, -120.197, 0.88", "117.383, -24.8449, -120.504, 0.59", "118.139, -24.2569, -120.988, 0.59", "118.634, -23.9326, -121.392, 0.81", "119.187, -23.6542, -121.926, 0.81", "119.898, -23.36, -122.741, 0.52", "120.676, -23.0663, -123.796, 0.74", "120.905, -22.9716, -124.26, 0.74", "121.302, -22.7073, -125.652, 0.37", "121.421, -22.5443, -126.393, 0.37", "121.512, -22.2315, -127.576, 0.37", "121.529, -21.8941, -128.614, 0.59", "121.544, -20.8296, -131.459, 0.88", "121.565, -20.3144, -132.758, 0.52", "121.588, -20.149, -133.218, 0.52", "121.675, -19.8744, -134.226, 0.52", "121.796, -19.6993, -134.976, 0.81", "122.016, -19.5108, -135.856, 0.59", "122.25, -19.3794, -136.538, 0.59", "123.074, -19.0547, -138.739, 1.18", "124.022, -18.7694, -141.465, 0.74", "124.238, -18.7226, -142.174, 0.74", "124.42, -18.6927, -142.88, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-46.6727, 115.881, -28.9098, 0.29", "-48.0086, 115.68, -29.564, 0.29", "-49.0884, 115.697, -30.1087, 0.29", "-49.6295, 115.876, -30.4724, 0.59", "-50.2341, 116.247, -30.9341, 0.59", "-50.7278, 116.629, -31.3115, 0.59", "-51.2626, 117.092, -31.6982, 0.44", "-51.6752, 117.631, -32.0106, 0.59", "-52.3948, 118.733, -32.6831, 0.37", "-52.7377, 119.266, -33.0447, 0.29", "-53.0916, 119.752, -33.4061, 0.59", "-53.4834, 120.242, -33.7899, 0.59", "-54.3417, 121.275, -34.6135, 0.29", "-55.1296, 122.271, -35.4094, 0.29", "-55.4856, 122.754, -35.8144, 0.29", "-56.1315, 123.7, -36.7175, 0.29", "-56.5122, 124.303, -37.3937, 0.29", "-56.8954, 124.944, -38.181, 0.52", "-57.2342, 125.541, -38.9328, 0.66", "-57.7193, 126.491, -40.085, 0.44", "-58.0766, 127.273, -41.094, 0.59", "-58.4685, 128.204, -42.5011, 0.96", "-58.628, 128.489, -43.0364, 0.52" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-46.6727, 115.881, -28.9098, 0.66", "-45.2271, 116.091, -28.95, 0.66", "-44.0721, 116.259, -28.9822, 0.29", "-43.2337, 116.38, -29.0056, 0.44", "-42.2002, 116.53, -29.0344, 0.44" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-63.3148, 121.633, -23.4849, 0.29", "-63.7674, 122.228, -24.0298, 0.29", "-64.3427, 122.916, -24.7304, 0.59", "-64.7188, 123.372, -25.199, 0.44", "-65.2619, 124.078, -25.883, 0.88", "-65.5024, 124.437, -26.208, 1.03", "-66.0385, 125.354, -26.9746, 0.52", "-66.2102, 125.69, -27.2477, 0.44", "-66.5484, 126.415, -27.7673, 0.66", "-66.8046, 127.006, -28.1564, 0.88", "-67.2983, 128.157, -28.8348, 0.59", "-67.6313, 128.915, -29.2489, 0.74", "-67.976, 129.682, -29.635, 0.74", "-68.4654, 130.691, -30.1432, 0.37", "-68.6963, 131.113, -30.3601, 0.37", "-69.253, 131.997, -30.8163, 0.66", "-69.6514, 132.518, -31.0847, 0.66", "-70.078, 132.975, -31.3277, 0.52", "-70.7071, 133.526, -31.6257, 0.88", "-71.1438, 133.841, -31.7955, 0.88", "-71.7969, 134.225, -31.9906, 0.52", "-72.5929, 134.621, -32.1714, 0.52", "-73.5879, 135.093, -32.3508, 0.88", "-74.2342, 135.409, -32.4468, 0.88", "-75.0414, 135.815, -32.5426, 0.52", "-75.7331, 136.174, -32.6162, 0.44", "-76.5198, 136.591, -32.7012, 0.37", "-77.2919, 137.042, -32.7796, 0.37", "-78.0616, 137.541, -32.862, 0.29", "-79.3133, 138.429, -33.0131, 0.29", "-79.8972, 138.858, -33.0896, 0.29", "-80.5692, 139.34, -33.1801, 1.11" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-63.3148, 121.633, -23.4849, 0.29", "-64.6745, 120.673, -22.1752, 0.29", "-65.4145, 120.152, -21.4625, 0.29", "-65.9388, 119.782, -20.9575, 0.22", "-66.6077, 119.31, -20.3132, 0.22", "-67.3519, 118.785, -19.5963, 0.22" ],
    "parent" : "dend_80",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "155.536, 30.5794, 54.7182, 0.29", "159.508, 36.1935, 65.3687, 0.29", "164.388, 40.4609, 76.2215, 0.29", "170.543, 44.3485, 86.5397, 0.29", "175.86, 46.0779, 97.8197, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "155.536, 30.5794, 54.7182, 0.29", "165.858, 28.397, 55.6032, 0.29", "176.183, 27.8032, 57.8186, 0.29", "185.981, 28.3662, 61.777, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "77.7023, 47.9043, 9.13039, 0.37", "77.8531, 48.7676, 9.49293, 0.37", "78.0252, 50.0399, 10.0816, 0.37", "78.1499, 50.9615, 10.5079, 0.22", "78.4121, 52.8992, 11.4044, 0.22", "78.612, 54.376, 12.0877, 0.66", "78.8526, 56.1546, 12.9105, 1.11", "78.8935, 56.5927, 13.1415, 1.11", "80.9328, 67.8992, 16.8286, 1.11", "83.6371, 79.1155, 20.3435, 1.11", "86.9979, 89.7715, 24.809, 1.11", "90.288, 99.8327, 30.4726, 1.11", "94.9833, 110.256, 34.1991, 1.11", "99.9002, 120.439, 38.2516, 1.11" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "77.7023, 47.9043, 9.13039, 0.44", "78.6595, 48.1954, 9.28997, 0.44", "79.6886, 48.4537, 9.46227, 0.44", "80.792, 48.6895, 9.72001, 0.74", "81.4633, 48.818, 9.90171, 1.03", "82.0919, 48.9292, 10.0911, 1.03", "82.5898, 49.0151, 10.2237, 1.03", "83.435, 49.1677, 10.3662, 0.66", "84.6021, 49.4354, 10.4445, 0.66", "85.0135, 49.5758, 10.4139, 0.81", "85.6351, 49.8731, 10.3022, 0.44", "86.8912, 50.6399, 9.97964, 0.44", "88.3737, 51.7112, 9.53534, 0.37", "88.8917, 52.1282, 9.34995, 0.37", "89.6909, 52.8, 9.03755, 0.37", "90.6479, 53.6295, 8.69362, 0.66", "91.2038, 54.1261, 8.52803, 0.66", "91.98, 54.8116, 8.40731, 0.37", "92.4449, 55.1918, 8.39357, 0.37", "93.0359, 55.6602, 8.38874, 0.59", "93.5614, 56.0844, 8.36826, 0.59", "94.0749, 56.5086, 8.25364, 0.44", "94.9528, 57.1635, 7.98598, 0.66", "95.1142, 57.2696, 7.93189, 0.96", "95.7363, 57.6022, 7.73914, 0.96", "96.6535, 57.9797, 7.46539, 1.11", "98.7767, 58.6743, 6.91663, 0.44", "99.9682, 59.0035, 6.66187, 0.44", "100.897, 59.2361, 6.50841, 0.37", "102.038, 59.5336, 6.32931, 0.37", "102.729, 59.7296, 6.24088, 0.29", "103.68, 60.0726, 6.15003, 0.22", "104.314, 60.4506, 6.07358, 0.59", "104.639, 60.7865, 5.97949, 0.59", "105.574, 61.9283, 5.51725, 0.29", "105.97, 62.4226, 5.29118, 0.37", "106.443, 62.9732, 5.0183, 0.52", "106.969, 63.4624, 4.72069, 0.74", "107.728, 64.0295, 4.19474, 0.96", "109.097, 64.9445, 3.0404, 0.29", "109.628, 65.3055, 2.50307, 0.52", "109.864, 65.4848, 2.21353, 0.81", "110.634, 66.1781, 1.10706, 1.11", "112.017, 67.6365, -1.18018, 0.81", "112.61, 68.3903, -2.28696, 0.96", "113.222, 69.3359, -3.54328, 0.66", "113.674, 70.0982, -4.47637, 0.52", "114.127, 70.8722, -5.29364, 0.52", "114.322, 71.1934, -5.53977, 0.74", "114.848, 71.7949, -5.79215, 0.74", "115.204, 72.0888, -5.87262, 0.96", "115.771, 72.4314, -5.9592, 0.96", "116.706, 72.9367, -6.18168, 0.74", "117.63, 73.4615, -6.48725, 0.44", "118.64, 74.1618, -7.00081, 0.44", "119.02, 74.4891, -7.26182, 0.96", "119.696, 75.2348, -7.91664, 1.18", "120.617, 76.5088, -9.09385, 0.66", "120.943, 77.0584, -9.63002, 0.66", "121.519, 78.1803, -10.7882, 0.59", "121.729, 78.6258, -11.2205, 0.52", "122.32, 79.8494, -12.3143, 0.52", "122.483, 80.2103, -12.588, 0.96", "122.831, 80.962, -13.071, 0.96", "123.483, 82.3874, -13.8488, 0.59", "124.036, 83.6588, -14.3915, 0.59", "124.383, 84.4894, -14.6951, 0.88", "124.879, 85.7062, -15.032, 0.74", "125.329, 86.6848, -15.2651, 0.74", "125.874, 87.6726, -15.433, 0.88", "126.235, 88.1566, -15.5033, 0.88", "126.944, 88.8468, -15.6734, 0.37", "127.708, 89.4477, -15.8824, 0.37", "128.931, 90.2374, -16.2395, 0.37", "129.795, 90.7508, -16.5364, 0.37", "130.807, 91.3279, -16.9367, 0.37", "131.418, 91.6955, -17.1844, 0.59", "132.173, 92.1817, -17.4827, 0.74", "132.677, 92.5423, -17.6892, 0.74", "133.623, 93.3184, -18.1132, 0.44", "134.126, 93.7354, -18.3277, 0.37", "135.606, 94.8174, -18.7928, 0.37", "136.314, 95.245, -18.9587, 0.74", "136.693, 95.4287, -19.0251, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "88.065, 81.238, 15.1388, 0.29", "90.8133, 86.4533, 15.5976, 0.29", "94.3793, 91.1676, 15.2927, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "88.065, 81.238, 15.1388, 0.29", "93.5647, 92.5089, 16.1376, 0.29", "98.5734, 103.766, 18.5428, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-22.7045, -174.031, 14.7523, 0.29", "-20.9803, -184.522, 11.17, 0.29", "-20.0426, -195.594, 9.44539, 0.29", "-20.12, -206.414, 6.41824, 0.29", "-20.9805, -217.556, 5.12384, 0.29", "-22.7399, -228.622, 4.15971, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-22.7045, -174.031, 14.7523, 0.29", "-26.8733, -184.081, 9.90006, 0.29" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "2.91031, -81.8007, 6.54488, 0.37", "1.98569, -83.216, 5.35398, 0.37", "1.40365, -83.9618, 4.74686, 0.37", "0.81778, -84.6075, 4.20514, 0.44", "0.100529, -85.3074, 3.61309, 0.74", "-0.626545, -85.9496, 3.07456, 0.59", "-1.3968, -86.5474, 2.56959, 0.59", "-1.87861, -86.7895, 2.35036, 0.74", "-2.69614, -87.053, 2.0571, 0.88", "-3.22059, -87.1557, 1.91685, 1.18", "-3.75722, -87.2085, 1.80717, 0.59", "-4.57851, -87.2411, 1.66017, 0.44", "-5.39258, -87.2591, 1.50983, 0.52", "-5.76753, -87.2822, 1.4304, 0.74", "-6.40492, -87.4072, 1.29907, 0.74", "-6.85742, -87.5877, 1.18533, 0.59", "-7.31175, -87.8819, 1.05641, 0.59", "-7.8949, -88.4287, 0.881131, 0.59", "-8.50203, -89.1788, 0.708687, 0.44", "-9.18273, -90.1744, 0.540467, 0.37", "-9.56878, -90.8424, 0.462786, 1.03", "-9.82138, -91.3477, 0.415713, 1.03", "-10.0188, -91.8115, 0.38287, 0.96", "-10.3436, -92.7729, 0.346385, 0.66", "-10.5814, -93.6382, 0.327498, 0.66", "-10.8024, -94.6275, 0.296734, 0.88", "-10.9126, -95.2356, 0.277519, 1.03", "-11.0303, -96.0998, 0.239277, 0.88", "-11.1405, -97.2124, 0.171021, 0.52", "-11.1993, -98.0826, 0.100711, 0.52", "-11.2327, -98.7447, 0.0310702, 0.96", "-11.2571, -99.1768, -0.0233426, 0.96", "-11.3575, -100.24, -0.1862, 0.59", "-11.4869, -101.086, -0.33778, 0.66", "-11.6373, -101.718, -0.47099, 0.81", "-11.8702, -102.488, -0.659687, 0.81", "-12.0304, -102.918, -0.781067, 0.81", "-12.3387, -103.703, -1.06578, 0.44", "-12.4977, -104.115, -1.24298, 0.81", "-12.693, -104.711, -1.53189, 0.81", "-12.8986, -105.564, -1.96213, 0.52", "-12.9841, -106.258, -2.31319, 0.52", "-13.0052, -107.526, -2.9433, 0.74", "-12.9693, -108.145, -3.23801, 1.11", "-12.9314, -108.716, -3.48697, 1.11", "-12.8981, -109.44, -3.76335, 0.96", "-12.9078, -110.251, -4.03115, 0.59", "-13.0044, -111.248, -4.31655, 0.44", "-13.2642, -112.348, -4.58322, 0.44", "-13.5521, -113.171, -4.77427, 0.44", "-13.8789, -113.94, -4.93378, 0.74", "-14.1277, -114.504, -5.04006, 0.74", "-14.3701, -115.05, -5.12565, 0.74", "-14.7954, -116.023, -5.24708, 0.66", "-15.1008, -116.747, -5.31711, 0.44", "-15.4869, -117.684, -5.3981, 0.44", "-16.0924, -118.987, -5.48135, 0.44", "-16.4374, -119.589, -5.49962, 0.88", "-16.8425, -120.148, -5.49222, 1.18", "-17.1601, -120.507, -5.46421, 1.18", "-17.561, -120.895, -5.41602, 1.03", "-18.7062, -121.837, -5.27354, 0.66", "-19.7637, -122.587, -5.13176, 0.66", "-20.6623, -123.2, -5.00894, 1.25", "-21.1396, -123.53, -4.94151, 1.55", "-21.716, -123.937, -4.85972, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "2.91031, -81.8007, 6.54488, 0.74", "2.44861, -83.3129, 5.48046, 0.74", "1.90393, -85.049, 4.23236, 0.74", "1.6156, -86.0811, 3.60943, 0.74", "1.34492, -87.2315, 3.01559, 0.81", "0.86155, -89.8578, 1.92046, 0.52", "0.5931, -91.9393, 1.22941, 0.74", "0.521602, -93.0412, 0.973129, 0.74", "0.79859, -95.4525, 0.960591, 0.74", "1.21325, -96.6318, 1.20802, 0.81", "2.00973, -98.0412, 1.78027, 0.66", "2.49951, -98.7303, 2.15744, 1.11", "3.01862, -99.4014, 2.51781, 1.11", "3.69914, -100.259, 2.88222, 0.81", "4.59163, -101.433, 3.16613, 0.81", "5.40647, -102.583, 3.35104, 0.96", "6.13148, -103.658, 3.48245, 0.88", "6.99177, -104.979, 3.6486, 0.96", "7.59067, -105.965, 3.74497, 1.11", "8.26062, -107.201, 3.79306, 1.11", "8.81178, -108.364, 3.77105, 0.74", "9.52631, -110.185, 3.65815, 0.66", "9.8407, -111.14, 3.57545, 0.66", "10.4061, -113.355, 3.37156, 0.66", "10.7944, -115.685, 3.13829, 0.59", "10.9034, -117.04, 2.97548, 0.96", "10.9113, -118.73, 2.73885, 1.18", "10.8244, -119.992, 2.55888, 1.03", "10.6631, -121.476, 2.36234, 0.88", "10.4431, -123.397, 2.17648, 0.74", "10.2907, -125.061, 2.17146, 0.59", "10.1803, -126.462, 2.26831, 0.59", "10.0706, -127.622, 2.44145, 1.4", "9.94754, -128.475, 2.63152, 1.4", "9.58445, -130.647, 3.30115, 0.88", "9.14067, -133.183, 4.39562, 0.66", "8.93581, -134.243, 4.93401, 0.88", "8.65493, -135.587, 5.66043, 0.88", "8.17852, -137.682, 6.79489, 0.59", "7.82558, -139.02, 7.48806, 0.81", "7.15878, -141.242, 8.53755, 0.81", "6.81501, -142.394, 8.96203, 1.11", "6.55638, -143.342, 9.25446, 1.11", "6.24962, -144.71, 9.55642, 0.52", "6.0316, -146.006, 9.76534, 0.74", "5.86896, -147.165, 9.89185, 1.03", "5.80259, -148.135, 9.94749, 1.25", "5.81285, -149.085, 10.0745, 1.33", "5.92942, -150.63, 10.5088, 1.03", "6.18647, -152.061, 11.1131, 0.74", "6.52492, -153.21, 11.7326, 0.44", "6.95231, -154.245, 12.3977, 0.29", "7.74471, -155.65, 13.4777, 0.29", "8.87553, -157.173, 14.8785, 0.29", "9.56018, -157.842, 15.6355, 0.29", "10.2345, -158.301, 16.2555, 0.88", "10.8088, -158.621, 16.7352, 0.88", "11.7751, -159.11, 17.4819, 0.52", "12.2353, -159.332, 17.764, 0.52", "13.0757, -159.78, 18.2558, 0.52", "13.7047, -160.285, 18.716, 0.52", "14.532, -161.251, 19.3231, 0.52", "14.9326, -161.878, 19.5918, 0.88", "15.3758, -162.663, 19.8248, 0.88", "15.9475, -163.628, 20.0071, 1.11", "16.5576, -164.526, 20.1524, 0.66", "17.7673, -165.951, 20.3476, 0.66", "18.355, -166.454, 20.4373, 0.66", "19.3851, -167.161, 20.6353, 0.66", "20.2133, -167.657, 20.8281, 0.52", "21.6278, -168.5, 21.1372, 0.66", "22.0717, -168.774, 21.2811, 0.66", "23.001, -169.384, 21.7697, 0.44", "23.7391, -169.913, 22.3082, 0.44", "24.72, -170.713, 23.2376, 0.52", "25.8331, -171.74, 24.5657, 0.66", "26.7596, -172.679, 25.8121, 0.44", "27.7322, -173.704, 27.2298, 0.81", "28.6478, -174.658, 28.5195, 0.52", "29.2656, -175.286, 29.3175, 0.74", "30.0435, -176.056, 30.1947, 0.29", "30.484, -176.482, 30.5672, 0.52", "31.2059, -177.165, 30.8915, 0.59", "32.6259, -178.539, 31.3625, 0.37", "33.6803, -179.55, 31.5971, 0.66", "34.2889, -180.123, 31.6984, 1.03", "35.2735, -181.034, 31.8228, 1.03", "36.348, -182.042, 32.0114, 0.74", "38.0402, -183.649, 32.484, 0.52" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "18.1282, -137.141, -17.6978, 0.44", "18.1274, -138.439, -17.542, 0.44", "18.1186, -139.345, -17.4309, 0.81", "18.101, -140.041, -17.3442, 1.18", "18.068, -140.973, -17.2304, 0.74", "18.0301, -141.943, -17.1167, 0.44", "17.9939, -142.796, -17.0196, 0.96", "17.9518, -143.679, -16.9236, 0.96", "17.9054, -144.52, -16.8368, 1.18", "17.7896, -145.774, -16.7016, 0.74", "17.6059, -146.912, -16.596, 0.66", "17.3851, -147.84, -16.5257, 0.66", "17.0348, -149.005, -16.4803, 0.66", "16.8333, -149.581, -16.4801, 1.03", "16.5205, -150.381, -16.5089, 0.81", "16.0139, -151.655, -16.6568, 0.52", "15.7667, -152.421, -16.7704, 0.44", "15.5746, -153.384, -16.9093, 0.37", "15.5348, -153.932, -16.9709, 0.66", "15.5351, -154.533, -16.9986, 0.66", "15.6158, -156.105, -17.0321, 0.44", "15.7152, -157.683, -16.9959, 0.44", "15.7533, -158.942, -16.9211, 0.66", "15.7223, -160.053, -16.8149, 0.81", "15.5847, -161.262, -16.6882, 0.96", "15.28, -162.539, -16.5262, 1.11", "14.9213, -163.533, -16.3801, 0.81", "14.5361, -164.41, -16.2898, 0.88", "14.2257, -165.094, -16.252, 0.66", "13.782, -166.059, -16.2301, 0.29", "13.2244, -167.294, -16.2206, 0.29", "12.9032, -168.009, -16.2023, 0.52", "12.3983, -169.119, -16.1835, 0.52", "11.9774, -170.032, -16.1632, 0.37", "11.5776, -170.853, -16.1328, 0.29", "11.1863, -171.57, -16.0745, 0.29", "11.0096, -171.83, -16.0492, 0.88", "10.5803, -172.273, -15.9906, 1.11", "10.0345, -172.664, -15.9082, 0.44", "9.33319, -173.05, -15.7955, 0.37", "8.64681, -173.365, -15.6949, 0.59", "8.02457, -173.609, -15.6155, 0.74", "7.19969, -173.909, -15.5209, 0.44", "6.48433, -174.172, -15.4352, 0.37", "6.01318, -174.364, -15.3723, 0.88", "5.48028, -174.628, -15.2848, 1.11", "5.10647, -174.852, -15.2046, 1.11", "4.73101, -175.091, -15.1012, 1.11", "3.8147, -175.706, -14.8146, 0.29", "3.21302, -176.127, -14.6227, 0.59", "2.81578, -176.413, -14.4919, 0.59", "1.85168, -177.17, -14.1548, 0.29", "1.27383, -177.68, -13.9349, 0.29", "0.828843, -178.127, -13.7551, 0.52", "0.315611, -178.7, -13.5411, 0.52", "0.0463233, -179.018, -13.4265, 0.81", "-0.401351, -179.641, -13.2303, 0.81", "-0.828688, -180.427, -13.0315, 0.29", "-1.30325, -181.484, -12.7916, 0.29", "-1.55695, -182.101, -12.6501, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "18.1282, -137.141, -17.6978, 0.22", "18.9972, -137.58, -18.0602, 0.22", "19.9135, -138.043, -18.4423, 0.22", "21.0198, -138.601, -18.9037, 0.22", "21.7813, -138.986, -19.2213, 0.22", "22.5894, -139.394, -19.5583, 0.22", "23.4207, -139.814, -19.9049, 0.22" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "124.42, -18.6927, -142.88, 0.74", "126.583, -20.7449, -145.429, 0.74", "127.184, -21.4348, -146.014, 0.44", "127.643, -21.9454, -146.383, 0.74", "128.401, -22.6998, -146.89, 0.52", "129.472, -23.6279, -147.478, 0.52", "130.655, -24.5178, -148.087, 0.52", "131.593, -25.1512, -148.381, 0.52", "132.585, -25.7126, -148.683, 0.52", "133.856, -26.2279, -149.127, 0.52", "134.936, -26.4723, -149.537, 0.74", "136.074, -26.5541, -150.006, 1.03", "136.496, -26.5437, -150.194, 1.4", "136.912, -26.516, -150.396, 1.4", "138.562, -26.4057, -151.274, 0.44", "139.205, -26.3959, -151.555, 0.74", "140.189, -26.454, -151.848, 0.74", "140.89, -26.5383, -151.944, 0.96", "141.575, -26.6669, -151.932, 0.96", "142.493, -26.9202, -151.81, 0.96", "144.701, -27.7916, -151.255, 0.66", "145.613, -28.2601, -150.956, 0.81", "146.153, -28.6051, -150.733, 0.81", "147.456, -29.5401, -150.136, 0.52", "148.422, -30.2758, -149.692, 0.52", "149.467, -31.0969, -149.267, 0.52", "150.461, -31.8603, -148.993, 0.52", "151.725, -32.7825, -148.738, 0.44", "152.407, -33.2255, -148.691, 0.96", "153.114, -33.6036, -148.826, 1.11", "154.079, -34.0269, -149.258, 0.44", "154.876, -34.3671, -149.88, 0.37", "155.395, -34.6292, -150.49, 0.37", "156.148, -35.0773, -151.704, 0.66", "156.919, -35.5929, -153.239, 0.74", "157.228, -35.8047, -153.945, 0.81", "157.657, -36.0811, -155.043, 0.81", "158.204, -36.3852, -156.505, 0.66", "158.734, -36.6154, -157.792, 0.66", "159.271, -36.8133, -158.934, 0.29", "159.663, -36.9514, -159.677, 0.59", "160.1, -37.0903, -160.43, 0.74", "160.522, -37.2067, -161.134, 0.44", "161.091, -37.3486, -162.023, 0.37", "161.678, -37.518, -162.922, 0.37", "162.255, -37.7211, -163.776, 0.59", "162.71, -37.9167, -164.442, 0.59", "163.793, -38.5009, -166.35, 0.29", "164.428, -38.9538, -167.702, 0.29", "164.72, -39.2245, -168.463, 0.29", "164.962, -39.4849, -169.137, 0.74", "165.19, -39.7656, -169.827, 0.74", "166.005, -41.122, -172.688, 0.37", "166.204, -41.6375, -173.587, 0.52", "166.306, -42.1011, -174.365, 0.81", "166.381, -42.6072, -175.266, 0.37", "166.434, -43.0327, -176.127, 0.37" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "124.42, -18.6927, -142.88, 0.88", "124.963, -18.1027, -144.305, 0.88", "125.153, -17.9557, -144.964, 1.25", "125.296, -17.8684, -145.649, 1.25", "125.455, -17.7487, -146.62, 0.59", "125.883, -17.4286, -149.217, 0.59", "126.313, -17.1071, -151.826, 0.96", "126.506, -17.0139, -153.25, 1.11", "126.769, -16.9352, -155.879, 1.25", "126.874, -16.9432, -157.564, 1.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-80.5692, 139.34, -33.1801, 0.22", "-80.275, 138.133, -32.2175, 0.22", "-80.0917, 137.382, -31.6177, 0.22", "-79.6813, 135.699, -30.2747, 0.22", "-79.4309, 134.672, -29.4554, 0.22", "-79.2157, 133.789, -28.7513, 0.22" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-80.5692, 139.34, -33.1801, 0.22", "-81.1088, 139.745, -32.9653, 0.22", "-81.5829, 140.118, -32.7801, 0.22", "-82.0338, 140.474, -32.604, 0.22", "-82.4652, 140.813, -32.4355, 0.22", "-83.1146, 141.325, -32.1819, 0.22", "-83.4459, 141.586, -32.0525, 0.37", "-83.7709, 141.88, -31.9093, 0.37" ],
    "parent" : "dend_82",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "175.86, 46.0779, 97.8197, 0.29", "180.899, 49.9903, 107.061, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "175.86, 46.0779, 97.8197, 0.29", "179.334, 48.7608, 105.828, 0.29" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "185.981, 28.3662, 61.777, 0.29", "186.357, 34.6236, 53.6487, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "185.981, 28.3662, 61.777, 0.29", "177.695, 26.0017, 65.2128, 0.29" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "136.693, 95.4287, -19.0251, 0.37", "136.002, 95.8378, -19.398, 0.37", "135.11, 96.4246, -20.1936, 0.66", "134.602, 96.8201, -20.9533, 0.29", "134.192, 97.1691, -21.6796, 0.29", "133.698, 97.6197, -22.5942, 0.29", "132.635, 98.6449, -24.5589, 0.29", "132.155, 99.0902, -25.4971, 0.81", "130.781, 100.362, -28.3963, 0.44", "130.335, 100.795, -29.4376, 0.96", "129.991, 101.188, -30.3372, 1.18", "129.593, 101.734, -31.5167, 0.88" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "136.693, 95.4287, -19.0251, 0.37", "137.561, 95.7285, -18.8363, 0.37", "138.551, 96.2406, -18.6396, 0.29", "138.91, 96.464, -18.57, 0.66", "139.256, 96.71, -18.4965, 0.66", "139.68, 97.068, -18.4181, 0.37", "140.268, 97.5928, -18.3235, 0.37", "140.894, 98.236, -18.2401, 0.81", "141.142, 98.5272, -18.1893, 1.11", "141.48, 98.9516, -18.0973, 1.33", "142.133, 99.8741, -17.8685, 0.44", "142.492, 100.464, -17.6885, 0.52", "142.922, 101.308, -17.3961, 1.03", "143.341, 102.304, -17.031, 0.52", "143.519, 102.807, -16.829, 0.66", "143.676, 103.365, -16.5879, 0.66", "143.843, 104.272, -16.172, 0.44", "143.888, 104.774, -15.9805, 0.29", "143.926, 105.402, -15.7941, 0.44", "144.017, 106.128, -15.6434, 0.66", "144.142, 106.739, -15.5405, 0.37", "144.322, 107.446, -15.455, 0.37", "144.628, 108.599, -15.3721, 0.29", "144.813, 109.341, -15.3244, 0.29", "145.052, 110.587, -15.2678, 0.29", "145.151, 111.438, -15.215, 0.29", "145.164, 112.096, -15.154, 1.55", "145.113, 112.635, -15.0846, 1.18", "144.951, 113.202, -14.9587, 0.96", "144.492, 114.098, -14.7088, 0.52", "143.731, 115.104, -14.3791, 0.29", "143.146, 115.707, -14.1706, 0.29", "142.842, 115.985, -14.0757, 0.29", "142.004, 116.739, -13.8473, 0.22", "141.752, 116.972, -13.7933, 0.66", "141.449, 117.27, -13.7439, 0.66", "140.954, 117.842, -13.7113, 0.37", "140.584, 118.435, -13.695, 0.29", "140.327, 119.046, -13.7142, 0.22", "140.158, 119.607, -13.7161, 0.22", "139.957, 120.485, -13.6526, 0.22", "139.897, 120.888, -13.5989, 0.29", "139.851, 121.499, -13.479, 0.29", "139.818, 122.42, -13.2598, 0.29", "139.84, 123.622, -12.9579, 0.29", "139.871, 124.372, -12.7544, 0.29", "139.926, 124.98, -12.5771, 0.29", "140.01, 125.777, -12.3274, 0.29", "140.176, 126.986, -11.9191, 0.29", "140.354, 127.923, -11.5962, 0.29" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-22.7399, -228.622, 4.15971, 0.29", "-22.706, -236.324, 2.67333, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-22.7399, -228.622, 4.15971, 0.29", "-16.1165, -226.828, 6.19908, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-21.716, -123.937, -4.85972, 0.37", "-22.2279, -125.293, -5.16569, 0.37", "-22.4724, -125.941, -5.31188, 0.81" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-21.716, -123.937, -4.85972, 0.29", "-26.1383, -123.561, -6.59706, 0.29", "-27.4341, -123.451, -7.06985, 0.22", "-29.1569, -123.418, -7.62454, 0.22", "-30.1779, -123.476, -7.90246, 1.47", "-30.9349, -123.519, -8.10852, 1.69", "-31.6581, -123.56, -8.30541, 1.69", "-33.6322, -123.635, -8.4285, 0.96", "-35.0562, -123.826, -8.61839, 0.29", "-36.2781, -124.177, -8.86585, 0.29" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "38.0402, -183.649, 32.484, 0.29", "38.4042, -184.618, 31.1992, 0.29", "38.7216, -185.463, 30.0787, 0.44" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "38.0402, -183.649, 32.484, 0.29", "38.6558, -181.019, 31.1164, 0.29", "39.3779, -179.42, 29.5734, 0.29", "39.998, -178.755, 28.2357, 0.29", "40.5997, -178.111, 26.9378, 0.52", "42.3016, -176.287, 23.2666, 0.44", "42.8727, -175.675, 22.0347, 0.29", "43.8222, -175.989, 19.9955, 0.29", "44.1626, -176.274, 19.2643, 0.29", "48.1257, -169.796, 7.83937, 0.29" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-1.55695, -182.101, -12.6501, 0.22", "-1.48069, -183.146, -12.4651, 0.22", "-1.3453, -184.342, -12.2029, 0.22", "-1.12998, -185.893, -11.8726, 0.22", "-0.938289, -187.166, -11.6082, 0.22", "-0.66994, -188.804, -11.2913, 0.22", "-0.457051, -190.104, -11.0399, 0.22", "-0.209845, -191.622, -10.7638, 0.22", "-0.0245206, -192.582, -10.6084, 0.37", "0.0585041, -192.912, -10.5575, 0.37", "0.328997, -193.83, -10.4079, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-1.55695, -182.101, -12.6501, 1.55", "-2.5114, -182.809, -12.0849, 1.55", "-3.07517, -183.315, -11.7707, 1.55", "-4.18725, -184.354, -11.1462, 0.29", "-5.78549, -185.87, -10.194, 0.44", "-6.21462, -186.216, -9.98218, 0.44", "-8.10121, -187.447, -9.183, 0.29", "-9.32365, -188.126, -8.72107, 0.29", "-10.543, -188.719, -8.25707, 0.29", "-11.8845, -189.266, -7.71305, 0.29", "-14.4773, -190.065, -6.50614, 0.29", "-16.7408, -190.5, -5.36804, 0.29", "-18.1544, -190.581, -4.60754, 0.22", "-19.5525, -190.548, -3.80382, 0.22", "-20.6255, -190.478, -3.14678, 0.22", "-21.7661, -190.365, -2.37799, 0.22", "-23.0708, -190.22, -1.27102, 0.22", "-24.023, -190.038, -0.405495, 0.22", "-24.7081, -189.834, 0.173602, 0.52", "-25.3384, -189.586, 0.66141, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "126.874, -16.9432, -157.564, 0.81", "128.436, -17.1213, -158.991, 0.81", "129.583, -17.3409, -160.073, 0.88", "130.457, -17.5408, -160.976, 0.37", "130.71, -17.6002, -161.234, 0.37", "131.264, -17.7303, -161.8, 0.66", "131.624, -17.8149, -162.168, 0.74", "131.748, -17.8284, -162.314, 0.74", "132.387, -18.0771, -163.026, 0.37", "132.683, -18.2254, -163.399, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "126.874, -16.9432, -157.564, 0.44", "128.359, -15.7216, -159.206, 0.44", "129.408, -14.859, -160.367, 0.44", "129.987, -14.3823, -161.008, 0.44", "131.126, -13.4458, -162.267, 1.18" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "129.593, 101.734, -31.5167, 0.96", "127.893, 103.848, -34.9364, 0.96", "125.918, 105.883, -38.3523, 0.59", "125.436, 106.375, -39.1637, 0.59", "124.999, 106.863, -39.9307, 0.37", "124.054, 108.066, -41.6859, 0.29", "123.465, 108.876, -42.8023, 0.29", "123.07, 109.479, -43.4698, 0.66", "122.426, 110.814, -44.5957, 0.22", "122.102, 111.63, -45.2959, 0.22", "121.701, 112.651, -46.2123, 0.88", "121.441, 113.271, -46.7667, 0.88", "120.619, 114.923, -48.2754, 0.37", "120.172, 115.617, -49.0193, 0.96", "119.689, 116.232, -49.804, 1.11", "118.776, 117.326, -51.3608, 0.44", "118.255, 117.985, -52.3303, 0.37", "117.875, 118.516, -53.1004, 0.52", "116.335, 120.844, -56.3711, 0.37", "115.718, 122.008, -57.9126, 0.96", "115.297, 122.977, -59.0782, 0.96", "114.904, 123.99, -60.2522, 0.52", "114.627, 124.717, -61.1557, 1.33", "114.287, 125.558, -62.2736, 1.33", "112.74, 128.946, -66.8683, 0.52", "112.556, 129.322, -67.3877, 0.52", "112.139, 130.105, -68.5092, 0.52", "110.272, 133.29, -73.3068, 0.44", "109.348, 134.72, -75.4785, 0.59", "108.756, 135.598, -76.7357, 0.59", "108.112, 136.483, -77.8571, 0.88", "107.875, 136.813, -78.2138, 1.25", "107.395, 137.474, -78.7361, 1.47", "106.197, 139.069, -79.4336, 0.29", "105.083, 140.583, -79.9232, 0.29", "104.627, 141.198, -80.0949, 0.29", "103.835, 142.263, -80.3352, 0.29", "103.336, 142.971, -80.4774, 0.29", "102.153, 144.727, -80.7779, 0.29", "101.685, 145.411, -80.9008, 0.29", "101.034, 146.225, -81.0931, 0.96", "100.605, 146.793, -81.2497, 1.25" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "129.593, 101.734, -31.5167, 0.15", "130.307, 103.341, -30.7456, 0.15", "130.698, 104.222, -30.3231, 0.15", "131.013, 104.929, -29.9836, 0.81", "131.286, 105.543, -29.6889, 1.03", "131.645, 106.353, -29.3005, 1.03" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-22.4724, -125.941, -5.31188, 0.52", "-22.723, -126.769, -5.74921, 0.52", "-23.0694, -128.102, -6.31323, 0.52", "-23.534, -129.791, -6.84504, 0.37", "-23.7511, -130.569, -7.07525, 0.52", "-24.0483, -131.613, -7.36905, 0.44", "-24.3955, -132.772, -7.70038, 0.37", "-24.7685, -133.947, -7.98671, 0.29", "-25.1785, -135.184, -8.20995, 0.29", "-25.6795, -136.792, -8.45291, 1.03", "-25.8251, -137.243, -8.5243, 1.18", "-26.2831, -138.529, -8.75607, 0.88", "-26.6115, -139.451, -8.94258, 0.44", "-26.9757, -140.652, -9.21381, 0.37", "-27.1061, -141.357, -9.39266, 0.59", "-27.1477, -142.017, -9.5601, 0.44", "-27.067, -143.36, -9.92077, 0.44", "-26.9113, -144.311, -10.1817, 0.44", "-26.6059, -145.769, -10.5774, 0.52", "-26.3307, -147.123, -10.9307, 0.66", "-26.1615, -148.242, -11.1395, 0.88", "-26.1114, -149.018, -11.1989, 0.88", "-26.1935, -150.2, -11.1096, 0.52", "-26.486, -151.216, -10.875, 0.29", "-27.0725, -152.423, -10.4376, 0.29", "-27.9089, -153.796, -9.93176, 0.29", "-28.5325, -154.703, -9.65336, 0.96", "-28.9387, -155.312, -9.5493, 1.18", "-29.3426, -155.99, -9.49128, 1.18", "-29.9389, -157.27, -9.52639, 0.59", "-30.3596, -158.622, -9.62257, 0.52", "-30.6441, -159.938, -9.72587, 0.52", "-30.9364, -161.641, -9.89868, 0.66", "-31.092, -162.77, -10.007, 0.66", "-31.2076, -163.984, -10.1041, 0.81", "-31.256, -165.739, -10.1391, 0.81", "-31.2051, -166.995, -9.96693, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-22.4724, -125.941, -5.31188, 0.37", "-23.0069, -125.797, -4.68827, 0.37", "-23.7449, -125.659, -3.90259, 0.37", "-24.1097, -125.595, -3.54662, 0.37", "-24.9442, -125.443, -2.79826, 0.29", "-25.4527, -125.336, -2.37313, 0.29", "-26.0554, -125.21, -1.8691, 0.29", "-26.6348, -125.105, -1.37738, 0.37", "-26.9421, -125.074, -1.16385, 0.37", "-27.2626, -125.056, -0.983908, 0.29", "-27.6411, -125.023, -0.84568, 0.22" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "38.7216, -185.463, 30.0787, 0.22", "37.8518, -186.534, 30.1889, 0.22", "36.5984, -188.078, 30.3477, 0.22", "35.886, -188.955, 30.438, 0.29", "35.4977, -189.434, 30.4872, 0.29", "34.4915, -190.673, 30.6147, 0.22", "33.834, -191.483, 30.698, 0.22", "28.3264, -201.987, 30.9729, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "38.7216, -185.463, 30.0787, 0.37", "38.5942, -186.768, 30.8333, 0.37", "38.3424, -187.969, 31.3429, 0.96", "37.891, -189.485, 31.7887, 0.59", "37.4925, -190.657, 31.993, 0.59", "37.0701, -191.899, 32.2096, 0.22", "36.6678, -193.082, 32.4159, 0.22", "36.1072, -194.36, 32.5171, 0.22", "35.5509, -195.457, 32.4403, 0.22", "34.8577, -196.601, 32.1959, 0.22", "32.8749, -207.503, 35.2731, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "131.126, -13.4458, -162.267, 0.37", "131.738, -11.5575, -169.099, 0.37", "131.843, -11.2018, -170.248, 0.66", "131.916, -10.8746, -171.129, 0.66", "131.951, -10.7001, -171.545, 0.96", "132.06, -10.1893, -172.58, 1.11", "132.226, -9.5262, -173.755, 1.11", "132.662, -8.39367, -175.017, 0.81", "133.063, -7.45748, -175.871, 1.4", "133.215, -7.13764, -176.11, 1.4", "133.88, -5.91148, -176.817, 0.37", "134.416, -5.06983, -177.139, 0.37", "135.138, -4.1149, -177.332, 0.37", "135.755, -3.38385, -177.363, 0.66", "136.259, -2.79155, -177.332, 0.66", "136.89, -1.90778, -177.261, 0.29", "137.295, -1.19042, -177.174, 0.52", "137.54, -0.644688, -177.107, 0.52", "137.911, 0.303189, -177.031, 0.29", "138.293, 1.29847, -176.996, 1.03", "138.884, 2.80386, -177.043, 0.66", "139.271, 3.76688, -177.113, 0.44", "139.414, 4.10997, -177.143, 0.66", "139.855, 5.17319, -177.254, 0.37", "140.093, 5.70059, -177.302, 0.52", "140.598, 6.69128, -177.356, 0.37", "140.989, 7.33839, -177.341, 0.37", "141.413, 8.02207, -177.32, 0.37", "141.847, 8.80475, -177.277, 0.37", "142.224, 9.56977, -177.207, 0.96", "142.384, 9.89048, -177.174, 0.96", "143.061, 11.1511, -177.025, 0.29", "143.631, 12.1681, -176.92, 0.29", "144.178, 13.1091, -176.839, 0.29", "144.641, 13.8977, -176.783, 1.11" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "131.126, -13.4458, -162.267, 0.52", "129.775, -7.39373, -165.503, 0.52", "129.663, -6.89006, -165.744, 0.52", "129.113, -4.50547, -166.778, 0.37", "128.959, -3.83805, -167.067, 0.29", "128.494, -1.81897, -167.943, 0.29", "128.099, -0.102459, -168.687, 0.29", "127.815, 1.62665, -168.931, 0.29", "127.681, 2.37176, -169.051, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "100.605, 146.793, -81.2497, 0.29", "99.6822, 148.826, -81.8783, 0.29", "99.3826, 149.339, -82.1956, 0.29", "98.9588, 150.001, -82.7136, 0.29", "98.207, 151.193, -83.6588, 0.29", "97.9237, 151.661, -83.9997, 0.44", "97.539, 152.296, -84.4625, 0.44", "96.344, 154.067, -85.8903, 0.29", "95.7783, 154.877, -86.6209, 0.29", "95.4609, 155.341, -87.0783, 0.29", "94.9829, 156.046, -87.784, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "100.605, 146.793, -81.2497, 0.22", "99.9052, 145.788, -81.0281, 0.22", "99.3099, 145.029, -80.8296, 0.22", "98.5469, 144.155, -80.5422, 1.4", "97.691, 143.174, -80.2198, 0.22", "96.7361, 142.08, -79.86, 1.84", "95.8997, 141.122, -79.545, 0.22", "95.157, 140.349, -79.1971, 0.22", "94.4494, 139.667, -78.8357, 0.22" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "131.645, 106.353, -29.3005, 0.74", "131.55, 106.839, -28.704, 0.74", "131.358, 107.588, -27.73, 0.22", "131.19, 108.03, -27.1407, 0.22", "130.774, 108.869, -25.9669, 0.22", "130.383, 109.557, -24.8777, 1.33", "130.2, 109.873, -24.317, 1.33", "129.822, 110.44, -23.119, 0.22", "129.533, 110.787, -22.236, 0.22", "129.33, 110.983, -21.6705, 0.22", "128.831, 111.413, -20.4624, 0.22", "128.499, 111.697, -19.5227, 0.22", "128.345, 111.898, -18.9032, 0.37", "128.257, 112.128, -18.2698, 0.37", "128.254, 112.412, -17.5454, 0.37", "128.294, 112.663, -17.0092, 0.15", "128.368, 113.441, -15.5912, 0.22", "128.406, 114.118, -14.4511, 0.22", "128.419, 114.584, -13.6415, 0.22", "128.354, 115.433, -12.1877, 0.22", "128.229, 116.003, -11.1652, 0.22", "128.0, 116.688, -9.85848, 0.22", "127.891, 116.93, -9.38067, 0.74", "127.357, 117.858, -7.40947, 0.29", "126.996, 118.405, -6.23924, 0.29", "126.627, 118.952, -5.10783, 0.29", "126.389, 119.324, -4.25484, 0.29", "126.185, 119.726, -3.1713, 0.52", "126.037, 120.058, -2.15985, 0.37", "125.89, 120.477, -0.813431, 0.29", "125.862, 120.574, -0.477755, 0.37", "125.757, 120.952, 0.832462, 0.37", "125.587, 121.434, 2.58429, 0.37", "125.436, 121.776, 3.95007, 0.22", "125.367, 121.946, 4.71138, 0.22", "125.291, 122.123, 5.53281, 0.74", "125.235, 122.231, 5.98225, 0.88", "125.002, 122.651, 7.33381, 0.59", "124.618, 123.25, 8.81456, 0.81" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "131.645, 106.353, -29.3005, 0.29", "132.618, 106.987, -29.7063, 0.29", "133.482, 107.513, -30.2738, 0.29", "134.333, 108.006, -30.9304, 1.03", "134.732, 108.235, -31.2633, 1.03", "135.733, 108.739, -32.0835, 0.44", "136.503, 109.087, -32.6843, 0.29", "137.533, 109.46, -33.5192, 0.96", "137.884, 109.564, -33.7967, 0.96", "138.932, 109.843, -34.5391, 0.22", "139.746, 110.069, -35.0469, 0.22", "140.607, 110.315, -35.463, 0.22", "141.55, 110.618, -35.8397, 0.22", "142.648, 111.029, -36.1994, 0.22", "143.333, 111.323, -36.3949, 0.52", "143.895, 111.618, -36.5121, 0.29", "144.596, 112.091, -36.5855, 1.03", "145.055, 112.461, -36.5371, 1.03", "145.453, 112.872, -36.388, 0.88", "145.848, 113.313, -36.1587, 0.66", "146.332, 113.892, -35.796, 0.37", "146.813, 114.51, -35.3373, 0.59", "147.365, 115.275, -34.6921, 0.29", "147.843, 115.931, -34.0624, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-31.2051, -166.995, -9.96693, 0.74", "-31.6136, -167.792, -9.68262, 0.74", "-32.3355, -168.967, -9.24644, 0.66", "-32.9275, -169.736, -8.95658, 0.52", "-33.787, -170.666, -8.62051, 0.37", "-34.2812, -171.175, -8.45127, 0.74", "-34.6914, -171.609, -8.29553, 1.03", "-35.2552, -172.181, -8.08359, 0.74", "-36.0582, -173.009, -7.78401, 0.52", "-36.8475, -173.936, -7.46887, 0.52", "-37.359, -174.685, -7.24879, 0.66", "-38.0419, -176.002, -6.91895, 0.88", "-38.2304, -176.474, -6.81993, 1.18", "-38.463, -177.238, -6.68225, 0.81", "-38.707, -178.328, -6.51921, 0.52", "-38.8864, -179.253, -6.43282, 0.52", "-39.1159, -180.357, -6.39037, 0.52", "-39.2395, -180.885, -6.4066, 0.52", "-39.5025, -181.923, -6.45365, 0.52", "-39.7912, -182.951, -6.50986, 0.52", "-40.0584, -183.816, -6.58127, 1.03", "-40.272, -184.445, -6.63959, 1.25", "-40.5905, -185.227, -6.7274, 0.66", "-40.9638, -185.987, -6.83568, 0.29", "-41.5206, -186.732, -6.99443, 0.29", "-41.9122, -186.63, -7.08626, 0.52", "-42.9095, -185.946, -7.30878, 0.29", "-43.6823, -185.303, -7.48793, 0.29", "-44.4915, -184.508, -7.67851, 0.22", "-44.642, -184.337, -7.71651, 0.52" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-31.2051, -166.995, -9.96693, 0.22", "-31.3184, -169.383, -10.5242, 0.22", "-31.3536, -170.339, -10.7525, 0.22", "-31.3818, -172.241, -11.1472, 0.22", "-31.3938, -174.391, -11.5326, 0.22", "-31.4035, -176.133, -11.8449, 0.22", "-31.4223, -179.516, -12.4511, 0.22", "-31.4809, -180.963, -12.6931, 0.22", "-31.5504, -183.822, -13.1944, 0.22", "-31.5162, -185.418, -13.4682, 0.22" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "144.641, 13.8977, -176.783, 0.29", "145.473, 13.0631, -177.461, 0.29", "145.952, 12.583, -177.851, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "144.641, 13.8977, -176.783, 0.37", "145.214, 14.591, -176.564, 0.37", "145.889, 15.4075, -176.307, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_78", "dend_53", "dend_50", "dend_49", "dend_44", "dend_41", "dend_32", "dend_0", "dend_88", "dend_79", "dend_69", "dend_54", "dend_52", "dend_51", "dend_46", "dend_45", "dend_43", "dend_42", "dend_34", "dend_33", "dend_17", "dend_1", "dend_85", "dend_80", "dend_71", "dend_70", "dend_58", "dend_55", "dend_48", "dend_47", "dend_40", "dend_35", "dend_31", "dend_18", "dend_16", "dend_11", "dend_2", "dend_87", "dend_86", "dend_82", "dend_81", "dend_75", "dend_72", "dend_68", "dend_59", "dend_57", "dend_56", "dend_37", "dend_36", "dend_24", "dend_19", "dend_13", "dend_12", "dend_10", "dend_3", "dend_84", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_60", "dend_39", "dend_38", "dend_26", "dend_25", "dend_21", "dend_20", "dend_15", "dend_14", "dend_9", "dend_4", "dend_65", "dend_62", "dend_28", "dend_27", "dend_23", "dend_22", "dend_6", "dend_5", "dend_67", "dend_66", "dend_64", "dend_63", "dend_30", "dend_29", "dend_8", "dend_7" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_75", "dend_75", "dend_75", "dend_75", "dend_72", "dend_72", "dend_72", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_56", "dend_56", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_77", "dend_76", "dend_74", "dend_73", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_39", "dend_38", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_4", "dend_4", "dend_4", "dend_4", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_8", "dend_8", "dend_7", "dend_7" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L6_ChC_df66841015_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_78, id: dend_78, parent: soma_0
create dend_78
public dend_78
// Section: dend_53, id: dend_53, parent: soma_0
create dend_53
public dend_53
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: soma_0
create dend_49
public dend_49
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_88, id: dend_88, parent: dend_78
create dend_88
public dend_88
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79
// Section: dend_69, id: dend_69, parent: dend_53
create dend_69
public dend_69
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_17, id: dend_17, parent: dend_0
create dend_17
public dend_17
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_85, id: dend_85, parent: dend_79
create dend_85
public dend_85
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_17
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_1
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_82, id: dend_82, parent: dend_80
create dend_82
public dend_82
// Section: dend_81, id: dend_81, parent: dend_80
create dend_81
public dend_81
// Section: dend_75, id: dend_75, parent: dend_71
create dend_75
public dend_75
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_68, id: dend_68, parent: dend_58
create dend_68
public dend_68
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_18
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_84, id: dend_84, parent: dend_82
create dend_84
public dend_84
// Section: dend_83, id: dend_83, parent: dend_82
create dend_83
public dend_83
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_74, id: dend_74, parent: dend_72
create dend_74
public dend_74
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_3
create dend_9
public dend_9
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_65, id: dend_65, parent: dend_61
create dend_65
public dend_65
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_91
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_78(0), soma_0(0.49999968585636767)
    connect dend_53(0), soma_0(0.49999968585636767)
    connect dend_50(0), soma_0(0.49999968585636767)
    connect dend_49(0), soma_0(0.49999968585636767)
    connect dend_44(0), soma_0(0.49999968585636767)
    connect dend_41(0), soma_0(0.49999968585636767)
    connect dend_32(0), soma_0(0.49999968585636767)
    connect dend_0(0), soma_0(0.49999968585636767)
    connect axon_0(0), soma_0(1.0)
    connect dend_88(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)
    connect dend_69(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_17(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_85(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_1(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_82(0), dend_80(1.0)
    connect dend_81(0), dend_80(1.0)
    connect dend_75(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_68(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_84(0), dend_82(1.0)
    connect dend_83(0), dend_82(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_74(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_65(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.699158, -10.4987, 0.384835, 2.69968 ) }
    soma_0 { pt3dadd( -0.589028, -9.39629, 0.347626, 4.40168 ) }
    soma_0 { pt3dadd( -0.478898, -8.29387, 0.310418, 6.28323 ) }
    soma_0 { pt3dadd( -0.368767, -7.19145, 0.273209, 7.64436 ) }
    soma_0 { pt3dadd( -0.258637, -6.08903, 0.236, 8.5434 ) }
    soma_0 { pt3dadd( -0.148506, -4.98661, 0.198792, 9.49409 ) }
    soma_0 { pt3dadd( -0.0383758, -3.88419, 0.161583, 10.6841 ) }
    soma_0 { pt3dadd( 0.0717547, -2.78177, 0.124374, 11.1456 ) }
    soma_0 { pt3dadd( 0.181885, -1.67935, 0.0871655, 11.461 ) }
    soma_0 { pt3dadd( 0.292016, -0.576928, 0.0499568, 11.5573 ) }
    soma_0 { pt3dadd( 0.402146, 0.525493, 0.0127481, 11.5875 ) }
    soma_0 { pt3dadd( 0.512276, 1.62791, -0.0244606, 11.382 ) }
    soma_0 { pt3dadd( 0.622407, 2.73033, -0.0616693, 11.2002 ) }
    soma_0 { pt3dadd( 0.732537, 3.83276, -0.098878, 10.9052 ) }
    soma_0 { pt3dadd( 0.842668, 4.93518, -0.136087, 10.3672 ) }
    soma_0 { pt3dadd( 0.952798, 6.0376, -0.173295, 9.50426 ) }
    soma_0 { pt3dadd( 1.06293, 7.14002, -0.210504, 8.36675 ) }
    soma_0 { pt3dadd( 1.17306, 8.24244, -0.247713, 7.22308 ) }
    soma_0 { pt3dadd( 1.28319, 9.34486, -0.284922, 6.14175 ) }
    soma_0 { pt3dadd( 1.39332, 10.4473, -0.32213, 4.86495 ) }
    soma_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 2.69802 ) }
    // Section: dend_78, id: dend_78, parent: soma_0 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 0.562386, 11.6828, -3.45834, 0.37 ) }
    dend_78 { pt3dadd( 0.0766063, 13.0323, -3.55089, 0.37 ) }
    dend_78 { pt3dadd( 0.0172422, 13.3989, -3.61775, 0.74 ) }
    dend_78 { pt3dadd( 0.0554964, 13.6878, -3.72033, 0.74 ) }
    dend_78 { pt3dadd( 0.377477, 14.5749, -4.11051, 0.37 ) }
    dend_78 { pt3dadd( 0.694214, 15.2843, -4.40057, 0.66 ) }
    dend_78 { pt3dadd( 1.06442, 16.0163, -4.7104, 1.33 ) }
    dend_78 { pt3dadd( 1.41312, 16.5622, -4.95205, 1.33 ) }
    dend_78 { pt3dadd( 1.99996, 17.4638, -5.35805, 0.74 ) }
    dend_78 { pt3dadd( 2.43831, 18.1846, -5.6638, 0.74 ) }
    dend_78 { pt3dadd( 3.1063, 19.3762, -6.16826, 1.25 ) }
    dend_78 { pt3dadd( 3.52726, 20.3342, -6.55658, 2.06 ) }
    dend_78 { pt3dadd( 3.7408, 21.0494, -6.81594, 2.06 ) }
    dend_78 { pt3dadd( 3.8879, 22.018, -7.13646, 1.4 ) }
    dend_78 { pt3dadd( 3.83206, 23.1367, -7.49339, 0.74 ) }
    dend_78 { pt3dadd( 3.5859, 23.8703, -7.72966, 1.11 ) }
    dend_78 { pt3dadd( 3.15758, 24.4326, -7.91255, 1.11 ) }
    dend_78 { pt3dadd( 2.54004, 24.9131, -8.05736, 0.81 ) }
    dend_78 { pt3dadd( 1.72673, 25.319, -8.25694, 0.81 ) }
    dend_78 { pt3dadd( 0.732904, 25.6489, -8.51945, 0.81 ) }
    dend_78 { pt3dadd( -0.236055, 25.8907, -8.80315, 0.96 ) }
    dend_78 { pt3dadd( -1.036, 26.0893, -9.04672, 1.11 ) }
    dend_78 { pt3dadd( -1.75464, 26.2908, -9.30658, 1.11 ) }
    dend_78 { pt3dadd( -3.31575, 26.8358, -9.98843, 1.11 ) }
    dend_78 { pt3dadd( -3.777, 27.0598, -10.2391, 1.11 ) }
    dend_78 { pt3dadd( -4.52104, 27.6556, -10.7543, 0.59 ) }
    dend_78 { pt3dadd( -4.96072, 28.2945, -11.1266, 0.96 ) }
    dend_78 { pt3dadd( -5.22077, 28.8844, -11.373, 1.25 ) }
    dend_78 { pt3dadd( -5.4043, 29.4164, -11.5418, 1.55 ) }
    dend_78 { pt3dadd( -5.51564, 29.7515, -11.6145, 1.55 ) }
    dend_78 { pt3dadd( -5.91325, 30.7805, -11.8169, 0.74 ) }
    dend_78 { pt3dadd( -6.53794, 32.025, -12.0581, 0.96 ) }
    dend_78 { pt3dadd( -7.05528, 32.7794, -12.2321, 0.66 ) }
    dend_78 { pt3dadd( -7.48463, 33.254, -12.3678, 0.66 ) }
    dend_78 { pt3dadd( -8.17413, 33.8438, -12.5828, 0.81 ) }
    dend_78 { pt3dadd( -8.74637, 34.2313, -12.7671, 0.96 ) }
    dend_78 { pt3dadd( -9.49935, 34.6474, -13.0291, 1.47 ) }
    dend_78 { pt3dadd( -10.1931, 35.0067, -13.284, 1.62 ) }
    dend_78 { pt3dadd( -10.8482, 35.3983, -13.5318, 1.47 ) }
    dend_78 { pt3dadd( -11.458, 35.8375, -13.7746, 1.11 ) }
    dend_78 { pt3dadd( -12.1469, 36.4416, -14.0688, 0.81 ) }
    dend_78 { pt3dadd( -12.9579, 37.3409, -14.4672, 0.66 ) }
    dend_78 { pt3dadd( -13.3938, 37.9615, -14.7092, 0.81 ) }
    dend_78 { pt3dadd( -13.9542, 39.0088, -15.0712, 1.03 ) }
    dend_78 { pt3dadd( -14.1709, 39.5545, -15.2541, 1.25 ) }
    dend_78 { pt3dadd( -14.3252, 40.0622, -15.4323, 1.25 ) }
    dend_78 { pt3dadd( -14.604, 41.1583, -15.8548, 0.96 ) }
    dend_78 { pt3dadd( -14.8117, 42.0042, -16.2277, 0.81 ) }
    dend_78 { pt3dadd( -15.1014, 43.0479, -16.75, 0.59 ) }
    dend_78 { pt3dadd( -15.3402, 43.773, -17.138, 0.59 ) }
    dend_78 { pt3dadd( -15.6686, 44.6322, -17.6031, 0.59 ) }
    dend_78 { pt3dadd( -16.0295, 45.4757, -18.0438, 0.59 ) }
    dend_78 { pt3dadd( -16.3791, 46.2655, -18.3857, 0.44 ) }
    dend_78 { pt3dadd( -16.7104, 47.09, -18.6478, 0.66 ) }
    dend_78 { pt3dadd( -16.9672, 47.9709, -18.7913, 0.74 ) }
    dend_78 { pt3dadd( -17.0504, 48.5238, -18.8167, 0.96 ) }
    dend_78 { pt3dadd( -17.0582, 49.1424, -18.7977, 0.96 ) }
    dend_78 { pt3dadd( -16.9297, 50.5154, -18.7725, 0.52 ) }
    dend_78 { pt3dadd( -16.7521, 51.6288, -18.7872, 0.59 ) }
    dend_78 { pt3dadd( -16.5168, 52.8915, -18.8507, 0.59 ) }
    dend_78 { pt3dadd( -16.3955, 53.597, -18.9167, 0.96 ) }
    dend_78 { pt3dadd( -16.3024, 54.411, -19.0317, 0.96 ) }
    dend_78 { pt3dadd( -16.2732, 55.8564, -19.3219, 0.66 ) }
    dend_78 { pt3dadd( -16.421, 56.85, -19.6208, 0.66 ) }
    dend_78 { pt3dadd( -16.7468, 57.6548, -19.9318, 0.96 ) }
    dend_78 { pt3dadd( -17.1236, 58.1429, -20.1384, 1.03 ) }
    dend_78 { pt3dadd( -17.6046, 58.5369, -20.3346, 1.03 ) }
    dend_78 { pt3dadd( -18.244, 58.8954, -20.5704, 1.03 ) }
    dend_78 { pt3dadd( -19.1057, 59.2322, -20.9123, 0.74 ) }
    dend_78 { pt3dadd( -19.7839, 59.4395, -21.2495, 0.74 ) }
    dend_78 { pt3dadd( -20.2363, 59.5509, -21.5239, 0.52 ) }
    dend_78 { pt3dadd( -21.2373, 59.7508, -22.2632, 0.52 ) }
    dend_78 { pt3dadd( -22.0844, 59.8846, -22.9644, 0.52 ) }
    dend_78 { pt3dadd( -22.9482, 59.9907, -23.7129, 1.11 ) }
    dend_78 { pt3dadd( -23.4179, 60.0363, -24.1067, 1.4 ) }
    dend_78 { pt3dadd( -23.9513, 60.072, -24.507, 1.4 ) }
    dend_78 { pt3dadd( -24.863, 60.0971, -25.0755, 0.81 ) }
    dend_78 { pt3dadd( -25.4251, 60.1097, -25.3054, 0.59 ) }
    dend_78 { pt3dadd( -26.2716, 60.1531, -25.4862, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_78 { pt3dadd( -27.122, 60.2379, -25.5353, 0.44 ) }
    dend_78 { pt3dadd( -27.9844, 60.3802, -25.51, 0.74 ) }
    dend_78 { pt3dadd( -28.8084, 60.6175, -25.4456, 1.33 ) }
    dend_78 { pt3dadd( -29.8106, 61.0849, -25.3873, 0.88 ) }
    dend_78 { pt3dadd( -30.2549, 61.3975, -25.4495, 0.59 ) }
    dend_78 { pt3dadd( -30.5301, 61.6716, -25.5621, 0.59 ) }
    dend_78 { pt3dadd( -30.9173, 62.1568, -25.8452, 0.74 ) }
    dend_78 { pt3dadd( -31.3963, 62.8371, -26.3407, 0.96 ) }
    dend_78 { pt3dadd( -32.0148, 63.7226, -27.0988, 0.59 ) }
    dend_78 { pt3dadd( -32.6548, 64.5872, -27.9417, 0.59 ) }
    dend_78 { pt3dadd( -32.9877, 65.0214, -28.3625, 0.81 ) }
    dend_78 { pt3dadd( -33.4083, 65.5182, -28.8237, 0.96 ) }
    dend_78 { pt3dadd( -33.8114, 65.9213, -29.169, 1.03 ) }
    dend_78 { pt3dadd( -34.4941, 66.5341, -29.6065, 0.66 ) }
    dend_78 { pt3dadd( -34.7033, 66.7283, -29.715, 0.66 ) }
    dend_78 { pt3dadd( -35.2649, 67.3393, -29.9855, 0.81 ) }
    dend_78 { pt3dadd( -35.7605, 68.0008, -30.2772, 0.81 ) }
    dend_78 { pt3dadd( -36.1372, 68.6836, -30.5639, 0.66 ) }
    dend_78 { pt3dadd( -36.4442, 69.4106, -30.8567, 0.66 ) }
    dend_78 { pt3dadd( -36.8263, 70.5415, -31.3037, 0.52 ) }
    dend_78 { pt3dadd( -37.0449, 71.2476, -31.5918, 0.81 ) }
    dend_78 { pt3dadd( -37.2057, 71.7741, -31.8159, 0.74 ) }
    dend_78 { pt3dadd( -37.5946, 72.9037, -32.2911, 0.59 ) }
    dend_78 { pt3dadd( -37.8319, 73.4559, -32.504, 0.74 ) }
    dend_78 { pt3dadd( -38.149, 74.0024, -32.6882, 0.96 ) }
    dend_78 { pt3dadd( -38.6387, 74.6588, -32.834, 0.96 ) }
    dend_78 { pt3dadd( -39.0672, 75.1656, -32.9044, 0.74 ) }
    dend_78 { pt3dadd( -39.6605, 75.8241, -32.9529, 1.03 ) }
    dend_78 { pt3dadd( -40.0886, 76.2853, -32.9146, 1.25 ) }
    dend_78 { pt3dadd( -40.389, 76.6344, -32.8532, 0.81 ) }
    dend_78 { pt3dadd( -41.0262, 77.4587, -32.6556, 0.59 ) }
    dend_78 { pt3dadd( -41.4145, 78.0181, -32.492, 0.66 ) }
    dend_78 { pt3dadd( -41.7368, 78.5252, -32.3283, 0.66 ) }
    dend_78 { pt3dadd( -42.5724, 79.9287, -31.8408, 0.88 ) }
    dend_78 { pt3dadd( -42.9962, 80.6476, -31.5715, 1.11 ) }
    dend_78 { pt3dadd( -43.2874, 81.1392, -31.3688, 1.03 ) }
    dend_78 { pt3dadd( -43.6417, 81.7326, -31.1166, 1.25 ) }
    dend_78 { pt3dadd( -43.774, 81.9533, -31.0144, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: soma_0 (entry count 38/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 4.19239, 10.4323, -4.39834, 1.11 ) }
    dend_53 { pt3dadd( 5.01982, 11.3103, -4.92327, 1.11 ) }
    dend_53 { pt3dadd( 5.66806, 12.0113, -5.35585, 1.11 ) }
    dend_53 { pt3dadd( 6.70229, 13.1839, -6.04531, 1.11 ) }
    dend_53 { pt3dadd( 7.41167, 14.0285, -6.56435, 0.96 ) }
    dend_53 { pt3dadd( 8.58665, 15.2826, -7.33132, 1.55 ) }
    dend_53 { pt3dadd( 9.60857, 16.2852, -7.94859, 1.62 ) }
    dend_53 { pt3dadd( 10.2104, 16.8119, -8.28561, 1.62 ) }
    dend_53 { pt3dadd( 11.1404, 17.5425, -8.69504, 1.25 ) }
    dend_53 { pt3dadd( 12.6997, 18.6411, -9.17369, 0.96 ) }
    dend_53 { pt3dadd( 15.0816, 20.1505, -9.60803, 0.88 ) }
    dend_53 { pt3dadd( 16.1998, 20.7639, -9.67588, 1.55 ) }
    dend_53 { pt3dadd( 17.4206, 21.3414, -9.64642, 1.84 ) }
    dend_53 { pt3dadd( 19.2517, 22.1171, -9.50298, 1.11 ) }
    dend_53 { pt3dadd( 20.2129, 22.5067, -9.37713, 1.03 ) }
    dend_53 { pt3dadd( 21.2886, 22.9875, -9.16765, 1.25 ) }
    dend_53 { pt3dadd( 22.329, 23.5907, -8.94958, 0.88 ) }
    dend_53 { pt3dadd( 23.2885, 24.2809, -8.74931, 0.88 ) }
    dend_53 { pt3dadd( 24.187, 25.0347, -8.56436, 0.88 ) }
    dend_53 { pt3dadd( 25.2419, 25.9727, -8.33994, 0.88 ) }
    dend_53 { pt3dadd( 26.144, 26.8267, -8.0494, 0.96 ) }
    dend_53 { pt3dadd( 27.0775, 27.7833, -7.70059, 0.96 ) }
    dend_53 { pt3dadd( 27.9293, 28.7518, -7.32078, 0.81 ) }
    dend_53 { pt3dadd( 29.1828, 30.2645, -6.65149, 1.11 ) }
    dend_53 { pt3dadd( 30.0048, 31.2233, -6.13124, 1.4 ) }
    dend_53 { pt3dadd( 30.9519, 32.185, -5.42755, 2.06 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 64/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 3.86239, 8.98703, 2.16166, 1.62 ) }
    dend_50 { pt3dadd( 4.66044, 9.53907, 2.87256, 1.62 ) }
    dend_50 { pt3dadd( 5.7411, 10.2001, 3.84578, 1.25 ) }
    dend_50 { pt3dadd( 7.70705, 11.1229, 5.81953, 1.25 ) }
    dend_50 { pt3dadd( 8.74666, 11.5425, 6.9333, 1.25 ) }
    dend_50 { pt3dadd( 9.83141, 11.8403, 8.23441, 1.92 ) }
    dend_50 { pt3dadd( 10.2905, 11.9222, 8.81897, 2.5 ) }
    dend_50 { pt3dadd( 11.2887, 11.95, 10.2007, 2.5 ) }
    dend_50 { pt3dadd( 13.3534, 11.6885, 13.2733, 1.77 ) }
    dend_50 { pt3dadd( 14.7854, 11.2297, 15.3998, 0.96 ) }
    dend_50 { pt3dadd( 16.806, 10.3564, 18.3929, 0.88 ) }
    dend_50 { pt3dadd( 17.3837, 10.0735, 19.2621, 0.88 ) }
    dend_50 { pt3dadd( 17.8394, 9.85896, 19.9273, 1.4 ) }
    dend_50 { pt3dadd( 18.2899, 9.6827, 20.5086, 1.4 ) }
    dend_50 { pt3dadd( 19.933, 9.30355, 22.1728, 0.66 ) }
    dend_50 { pt3dadd( 20.6299, 9.34588, 22.7287, 0.66 ) }
    dend_50 { pt3dadd( 22.2849, 10.0224, 23.7084, 0.88 ) }
    dend_50 { pt3dadd( 23.3247, 10.6228, 24.2397, 0.88 ) }
    dend_50 { pt3dadd( 24.6307, 11.5193, 24.757, 0.74 ) }
    dend_50 { pt3dadd( 25.6041, 12.2784, 25.0487, 1.4 ) }
    dend_50 { pt3dadd( 26.7246, 13.2271, 25.2527, 2.06 ) }
    dend_50 { pt3dadd( 27.8279, 14.1319, 25.3385, 1.84 ) }
    dend_50 { pt3dadd( 29.1509, 15.1668, 25.2631, 1.18 ) }
    dend_50 { pt3dadd( 30.5276, 16.1657, 25.2215, 1.18 ) }
    dend_50 { pt3dadd( 31.0865, 16.5199, 25.3006, 1.03 ) }
    dend_50 { pt3dadd( 32.0209, 16.9954, 25.6886, 1.03 ) }
    dend_50 { pt3dadd( 32.6391, 17.2533, 26.3119, 0.59 ) }
    dend_50 { pt3dadd( 33.2132, 17.5261, 27.2313, 0.59 ) }
    dend_50 { pt3dadd( 34.338, 18.1577, 29.5222, 0.88 ) }
    dend_50 { pt3dadd( 35.6464, 19.0139, 32.5357, 1.62 ) }
    dend_50 { pt3dadd( 36.2087, 19.4336, 33.8462, 1.62 ) }
    dend_50 { pt3dadd( 37.517, 20.4919, 36.8769, 0.88 ) }
    dend_50 { pt3dadd( 38.1264, 20.9835, 38.1976, 0.88 ) }
    dend_50 { pt3dadd( 38.6885, 21.4523, 39.2898, 1.47 ) }
    dend_50 { pt3dadd( 39.0835, 21.7861, 39.9162, 1.47 ) }
    dend_50 { pt3dadd( 40.0995, 22.579, 41.1375, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_50 { pt3dadd( 40.6662, 22.9429, 41.6844, 0.59 ) }
    dend_50 { pt3dadd( 41.2723, 23.2379, 42.162, 0.59 ) }
    dend_50 { pt3dadd( 42.7508, 23.8786, 43.3403, 1.25 ) }
    dend_50 { pt3dadd( 45.0761, 24.92, 45.2792, 0.74 ) }
    dend_50 { pt3dadd( 45.8045, 25.3208, 45.9588, 0.29 ) }
    dend_50 { pt3dadd( 46.4527, 25.7086, 46.6455, 0.29 ) }
    dend_50 { pt3dadd( 46.8239, 25.9312, 47.0935, 0.59 ) }
    dend_50 { pt3dadd( 47.8068, 26.5418, 48.3049, 1.11 ) }
    dend_50 { pt3dadd( 48.3034, 26.8125, 48.8991, 1.11 ) }
    dend_50 { pt3dadd( 49.3692, 27.7773, 50.1751, 1.11 ) }
    dend_50 { pt3dadd( 49.9713, 28.6551, 51.1895, 0.59 ) }
    dend_50 { pt3dadd( 49.9878, 26.1378, 51.3564, 0.59 ) }
    dend_50 { pt3dadd( 50.194, 23.542, 51.9774, 0.52 ) }
    dend_50 { pt3dadd( 50.3366, 21.729, 52.4068, 0.59 ) }
    dend_50 { pt3dadd( 59.4995, 24.7388, 60.5743, 0.59 ) }
    dend_50 { pt3dadd( 69.1092, 28.9027, 67.6764, 0.59 ) }
    dend_50 { pt3dadd( 77.0511, 34.9294, 75.5277, 0.59 ) }
    dend_50 { pt3dadd( 84.9193, 42.1749, 82.4133, 0.59 ) }
    dend_50 { pt3dadd( 94.0683, 49.9496, 86.662, 0.59 ) }
    dend_50 { pt3dadd( 102.311, 58.1325, 91.9173, 0.59 ) }
    dend_50 { pt3dadd( 111.008, 64.8738, 98.2735, 0.59 ) }
    // Section: dend_49, id: dend_49, parent: soma_0 (entry count 21/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.56761, 6.59878, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.56761, 6.59878, 1.60166, 1.69 ) }
    dend_49 { pt3dadd( -3.97383, 6.85827, 1.88631, 1.69 ) }
    dend_49 { pt3dadd( -4.47109, 7.11886, 2.26968, 1.4 ) }
    dend_49 { pt3dadd( -4.8203, 7.28891, 2.6195, 1.03 ) }
    dend_49 { pt3dadd( -5.29656, 7.53573, 3.15352, 0.88 ) }
    dend_49 { pt3dadd( -5.62415, 7.72173, 3.54529, 0.88 ) }
    dend_49 { pt3dadd( -6.03454, 7.94274, 4.10689, 0.59 ) }
    dend_49 { pt3dadd( -6.40544, 8.14094, 4.67092, 0.44 ) }
    dend_49 { pt3dadd( -7.08531, 8.50396, 5.78129, 0.37 ) }
    dend_49 { pt3dadd( -7.31905, 8.63092, 6.1785, 0.37 ) }
    dend_49 { pt3dadd( -7.69918, 8.84335, 6.84155, 0.37 ) }
    dend_49 { pt3dadd( -8.59355, 9.37426, 8.48377, 1.03 ) }
    dend_49 { pt3dadd( -8.79648, 9.50845, 8.87042, 1.62 ) }
    dend_49 { pt3dadd( -14.3513, 10.2191, 13.6119, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.87761, -1.23222, -14.5883, 0.74 ) }
    dend_44 { pt3dadd( -5.26416, -2.19301, -14.579, 0.74 ) }
    dend_44 { pt3dadd( -6.89498, -3.27852, -14.5702, 1.03 ) }
    dend_44 { pt3dadd( -8.32139, -4.20931, -14.592, 1.25 ) }
    dend_44 { pt3dadd( -9.46199, -4.96467, -14.622, 1.62 ) }
    dend_44 { pt3dadd( -10.3966, -5.57322, -14.6513, 1.84 ) }
    dend_44 { pt3dadd( -11.6223, -6.32421, -14.6595, 1.84 ) }
    dend_44 { pt3dadd( -12.7079, -6.91106, -14.6102, 1.99 ) }
    dend_44 { pt3dadd( -13.8487, -7.44245, -14.5016, 2.21 ) }
    dend_44 { pt3dadd( -15.1815, -7.95786, -14.3088, 2.65 ) }
    dend_44 { pt3dadd( -16.127, -8.26347, -14.1573, 2.5 ) }
    dend_44 { pt3dadd( -17.7245, -8.71513, -13.9145, 1.77 ) }
    dend_44 { pt3dadd( -19.4165, -9.17088, -13.712, 1.33 ) }
    dend_44 { pt3dadd( -20.5669, -9.48899, -13.6575, 1.18 ) }
    dend_44 { pt3dadd( -21.9308, -9.88086, -13.7442, 1.11 ) }
    dend_44 { pt3dadd( -22.9, -10.1947, -14.0181, 1.11 ) }
    dend_44 { pt3dadd( -23.8985, -10.5635, -14.6281, 1.11 ) }
    dend_44 { pt3dadd( -24.8525, -10.9455, -15.5639, 1.4 ) }
    dend_44 { pt3dadd( -25.802, -11.3046, -16.7737, 1.03 ) }
    dend_44 { pt3dadd( -26.6017, -11.5726, -17.9459, 0.88 ) }
    dend_44 { pt3dadd( -27.7917, -11.88, -19.8662, 0.88 ) }
    dend_44 { pt3dadd( -29.0775, -12.0934, -22.1341, 1.47 ) }
    dend_44 { pt3dadd( -30.0503, -12.1887, -23.9327, 1.77 ) }
    dend_44 { pt3dadd( -31.1391, -12.2074, -26.0253, 1.84 ) }
    dend_44 { pt3dadd( -31.5242, -12.1835, -26.7847, 2.06 ) }
    dend_44 { pt3dadd( -32.2217, -12.093, -28.1975, 1.77 ) }
    dend_44 { pt3dadd( -33.2963, -11.8597, -30.3202, 1.33 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 63/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -5.36761, -2.06247, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -5.36761, -2.06247, 9.10166, 2.06 ) }
    dend_41 { pt3dadd( -6.38664, -1.95808, 9.64066, 2.06 ) }
    dend_41 { pt3dadd( -7.15274, -1.91678, 10.015, 2.06 ) }
    dend_41 { pt3dadd( -9.14063, -1.94778, 10.9394, 1.84 ) }
    dend_41 { pt3dadd( -10.2473, -2.05243, 11.4391, 1.84 ) }
    dend_41 { pt3dadd( -11.0939, -2.19781, 11.8173, 1.99 ) }
    dend_41 { pt3dadd( -12.6174, -2.5902, 12.496, 1.55 ) }
    dend_41 { pt3dadd( -13.8569, -3.05643, 13.0342, 1.03 ) }
    dend_41 { pt3dadd( -14.8589, -3.55585, 13.4359, 0.88 ) }
    dend_41 { pt3dadd( -15.8318, -4.18105, 13.7181, 1.18 ) }
    dend_41 { pt3dadd( -16.6181, -4.75068, 13.8898, 1.18 ) }
    dend_41 { pt3dadd( -17.2207, -5.22767, 13.9895, 1.47 ) }
    dend_41 { pt3dadd( -18.1152, -6.00717, 14.0674, 1.25 ) }
    dend_41 { pt3dadd( -18.9958, -6.80689, 14.1837, 1.03 ) }
    dend_41 { pt3dadd( -19.79, -7.51941, 14.3615, 1.62 ) }
    dend_41 { pt3dadd( -20.5855, -8.21685, 14.657, 1.69 ) }
    dend_41 { pt3dadd( -21.1988, -8.72256, 14.9727, 1.33 ) }
    dend_41 { pt3dadd( -22.2943, -9.55418, 15.7181, 1.03 ) }
    dend_41 { pt3dadd( -23.6436, -10.4118, 16.8919, 0.88 ) }
    dend_41 { pt3dadd( -24.5871, -10.8676, 17.9373, 1.11 ) }
    dend_41 { pt3dadd( -25.4045, -11.095, 19.0107, 1.33 ) }
    dend_41 { pt3dadd( -25.9142, -11.1181, 19.7651, 1.33 ) }
    dend_41 { pt3dadd( -26.4167, -10.9843, 20.5445, 1.18 ) }
    dend_41 { pt3dadd( -27.0147, -10.6314, 21.4453, 0.88 ) }
    dend_41 { pt3dadd( -27.8651, -9.9763, 22.5444, 1.18 ) }
    dend_41 { pt3dadd( -28.3955, -9.58171, 23.1412, 1.33 ) }
    dend_41 { pt3dadd( -28.8629, -9.3233, 23.6068, 1.33 ) }
    dend_41 { pt3dadd( -29.6689, -9.0824, 24.3618, 0.59 ) }
    dend_41 { pt3dadd( -30.7744, -9.14245, 25.3013, 0.52 ) }
    dend_41 { pt3dadd( -31.3353, -9.49194, 25.7113, 0.59 ) }
    dend_41 { pt3dadd( -32.1173, -10.5807, 26.3286, 0.59 ) }
    dend_41 { pt3dadd( -32.8704, -12.0779, 27.0795, 0.59 ) }
    dend_41 { pt3dadd( -33.2609, -12.9705, 27.5181, 1.03 ) }
    dend_41 { pt3dadd( -33.7079, -14.0851, 28.116, 1.03 ) }
    dend_41 { pt3dadd( -34.0774, -15.0122, 28.6632, 1.03 ) }
    dend_41 { pt3dadd( -34.7742, -16.5612, 29.7796, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_41 { pt3dadd( -35.4346, -17.583, 30.8365, 0.66 ) }
    dend_41 { pt3dadd( -35.991, -18.0546, 31.6496, 0.66 ) }
    dend_41 { pt3dadd( -36.9714, -18.4449, 32.938, 0.74 ) }
    dend_41 { pt3dadd( -37.6646, -18.5687, 33.788, 0.81 ) }
    dend_41 { pt3dadd( -38.3093, -18.6145, 34.5493, 0.52 ) }
    dend_41 { pt3dadd( -39.4779, -18.6319, 35.8205, 0.52 ) }
    dend_41 { pt3dadd( -39.9784, -18.6692, 36.3704, 0.44 ) }
    dend_41 { pt3dadd( -40.707, -18.9975, 37.3393, 0.37 ) }
    dend_41 { pt3dadd( -41.0574, -19.506, 37.9074, 0.37 ) }
    dend_41 { pt3dadd( -41.3825, -20.2775, 38.4881, 1.11 ) }
    dend_41 { pt3dadd( -41.66, -21.069, 38.9418, 1.4 ) }
    dend_41 { pt3dadd( -41.9272, -22.1113, 39.4309, 1.4 ) }
    dend_41 { pt3dadd( -42.2555, -23.6938, 40.1052, 0.81 ) }
    dend_41 { pt3dadd( -42.4767, -24.8854, 40.5566, 0.29 ) }
    dend_41 { pt3dadd( -42.6738, -25.6735, 40.8676, 0.29 ) }
    dend_41 { pt3dadd( -42.9068, -26.3062, 41.1334, 0.29 ) }
    dend_41 { pt3dadd( -49.3173, -30.7412, 48.2625, 0.29 ) }
    dend_41 { pt3dadd( -57.0753, -35.287, 53.8109, 0.29 ) }
    dend_41 { pt3dadd( -64.173, -39.8228, 60.1891, 0.29 ) }
    dend_41 { pt3dadd( -70.7596, -42.9542, 67.7998, 0.29 ) }
    dend_41 { pt3dadd( -77.362, -46.2246, 75.3409, 0.29 ) }
    dend_41 { pt3dadd( -84.9583, -51.081, 80.8625, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 22/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.19761, -5.90622, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.19761, -5.90622, 6.85166, 1.77 ) }
    dend_32 { pt3dadd( -2.17888, -7.11737, 6.9981, 1.77 ) }
    dend_32 { pt3dadd( -2.14908, -9.19382, 7.23861, 1.47 ) }
    dend_32 { pt3dadd( -2.13265, -11.2835, 7.45624, 1.25 ) }
    dend_32 { pt3dadd( -2.16071, -12.8799, 7.60328, 1.62 ) }
    dend_32 { pt3dadd( -2.21677, -14.2268, 7.71407, 1.92 ) }
    dend_32 { pt3dadd( -2.29364, -15.4017, 7.81215, 2.14 ) }
    dend_32 { pt3dadd( -2.43291, -16.8645, 7.93189, 2.14 ) }
    dend_32 { pt3dadd( -2.72003, -18.895, 8.09819, 1.55 ) }
    dend_32 { pt3dadd( -3.0855, -20.8047, 8.24372, 1.33 ) }
    dend_32 { pt3dadd( -3.41648, -22.2516, 8.36626, 1.55 ) }
    dend_32 { pt3dadd( -3.66229, -23.1654, 8.44657, 1.92 ) }
    dend_32 { pt3dadd( -4.01158, -24.2739, 8.58105, 2.21 ) }
    dend_32 { pt3dadd( -4.27319, -25.0044, 8.6901, 2.5 ) }
    dend_32 { pt3dadd( -4.57908, -25.8667, 8.84665, 2.5 ) }
    dend_32 { pt3dadd( -4.86027, -26.8177, 9.0336, 2.36 ) }
    dend_32 { pt3dadd( -5.16276, -28.1225, 9.29732, 1.69 ) }
    dend_32 { pt3dadd( -5.45353, -29.8333, 9.62944, 1.25 ) }
    dend_32 { pt3dadd( -5.60142, -31.432, 9.92882, 1.4 ) }
    dend_32 { pt3dadd( -5.60769, -32.8506, 10.1622, 1.62 ) }
    dend_32 { pt3dadd( -5.45562, -34.5821, 10.409, 2.06 ) }
    dend_32 { pt3dadd( -5.27051, -35.6492, 10.5495, 2.36 ) }
    dend_32 { pt3dadd( -5.08326, -36.341, 10.6287, 2.36 ) }
    dend_32 { pt3dadd( -4.62128, -37.6596, 10.7559, 2.14 ) }
    dend_32 { pt3dadd( -3.86903, -39.5098, 10.9196, 1.62 ) }
    dend_32 { pt3dadd( -3.20522, -41.0682, 11.041, 1.25 ) }
    dend_32 { pt3dadd( -2.52434, -42.676, 11.1825, 1.03 ) }
    dend_32 { pt3dadd( -1.79757, -44.4837, 11.3762, 1.03 ) }
    dend_32 { pt3dadd( -1.25621, -45.9975, 11.5746, 1.03 ) }
    dend_32 { pt3dadd( -0.666827, -47.957, 11.8983, 1.03 ) }
    dend_32 { pt3dadd( -0.409824, -49.124, 12.1342, 0.96 ) }
    dend_32 { pt3dadd( -0.331862, -50.0459, 12.3506, 0.96 ) }
    dend_32 { pt3dadd( -0.437672, -50.8678, 12.5667, 0.96 ) }
    dend_32 { pt3dadd( -0.924222, -51.9501, 12.9266, 0.96 ) }
    dend_32 { pt3dadd( -1.40007, -52.5383, 13.1529, 0.88 ) }
    dend_32 { pt3dadd( -1.89926, -52.9731, 13.3302, 1.18 ) }
    dend_32 { pt3dadd( -2.70511, -53.5767, 13.5563, 1.18 ) }
    dend_32 { pt3dadd( -3.48574, -54.1282, 13.7566, 1.33 ) }
    dend_32 { pt3dadd( -4.38455, -54.7538, 14.0065, 1.33 ) }
    dend_32 { pt3dadd( -5.15732, -55.2993, 14.2485, 1.4 ) }
    dend_32 { pt3dadd( -5.98573, -55.9213, 14.5478, 1.55 ) }
    dend_32 { pt3dadd( -6.77925, -56.5801, 14.9, 1.55 ) }
    dend_32 { pt3dadd( -7.67741, -57.4802, 15.4058, 1.84 ) }
    dend_32 { pt3dadd( -8.22131, -58.1375, 15.7645, 2.14 ) }
    dend_32 { pt3dadd( -8.75403, -58.9299, 16.1494, 1.99 ) }
    dend_32 { pt3dadd( -9.49704, -60.3611, 16.7648, 0.88 ) }
    dend_32 { pt3dadd( -10.0044, -61.6829, 17.2485, 0.88 ) }
    dend_32 { pt3dadd( -10.4321, -63.2441, 17.7311, 0.81 ) }
    dend_32 { pt3dadd( -10.6715, -64.6244, 18.0587, 0.74 ) }
    dend_32 { pt3dadd( -10.8937, -66.3672, 18.4183, 0.74 ) }
    dend_32 { pt3dadd( -11.0027, -67.9953, 18.7052, 1.03 ) }
    dend_32 { pt3dadd( -10.9984, -69.4582, 18.8894, 1.4 ) }
    dend_32 { pt3dadd( -10.9499, -70.3684, 18.9569, 1.69 ) }
    dend_32 { pt3dadd( -10.8495, -71.3887, 18.9836, 1.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 77/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.44239, -10.2522, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 1.44239, -10.2522, -2.20834, 3.39 ) }
    dend_0 { pt3dadd( 2.12039, -12.4305, -2.39987, 3.39 ) }
    dend_0 { pt3dadd( 2.66785, -14.1878, -2.63415, 3.02 ) }
    dend_0 { pt3dadd( 3.22215, -15.967, -2.87135, 3.02 ) }
    dend_0 { pt3dadd( 3.95106, -18.3068, -3.18328, 3.02 ) }
    dend_0 { pt3dadd( 4.73403, -20.82, -3.51834, 3.24 ) }
    dend_0 { pt3dadd( 5.32448, -22.6732, -3.7918, 3.54 ) }
    dend_0 { pt3dadd( 5.99485, -24.6701, -4.15544, 3.54 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 86/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.50345, 11.5497, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 2.99451, 26.4754, -0.359339, 0.88 ) }
    axon_0 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_78 (entry count 89/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -43.774, 81.9533, -31.0144, 0.44 ) }
    dend_88 { pt3dadd( -44.8386, 83.1825, -31.946, 0.44 ) }
    dend_88 { pt3dadd( -45.3304, 83.7813, -32.3473, 0.37 ) }
    dend_88 { pt3dadd( -45.5743, 84.1099, -32.4879, 0.66 ) }
    dend_88 { pt3dadd( -45.9767, 84.7041, -32.6596, 0.66 ) }
    dend_88 { pt3dadd( -46.3865, 85.375, -32.7852, 0.59 ) }
    dend_88 { pt3dadd( -46.6553, 85.8812, -32.8422, 0.81 ) }
    dend_88 { pt3dadd( -46.9208, 86.5111, -32.8006, 0.81 ) }
    dend_88 { pt3dadd( -47.3176, 87.9784, -32.5887, 0.52 ) }
    dend_88 { pt3dadd( -47.3882, 88.684, -32.4483, 0.52 ) }
    dend_88 { pt3dadd( -47.3035, 89.7927, -32.1995, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_88 { pt3dadd( -47.0342, 90.8679, -31.9615, 0.44 ) }
    dend_88 { pt3dadd( -46.5877, 91.927, -31.7422, 0.74 ) }
    dend_88 { pt3dadd( -46.1544, 92.6806, -31.5901, 0.74 ) }
    dend_88 { pt3dadd( -45.391, 93.7425, -31.4073, 0.44 ) }
    dend_88 { pt3dadd( -44.8075, 94.485, -31.2555, 0.59 ) }
    dend_88 { pt3dadd( -44.2159, 95.2151, -31.1094, 0.59 ) }
    dend_88 { pt3dadd( -43.6182, 95.9743, -30.9837, 0.59 ) }
    dend_88 { pt3dadd( -43.1487, 96.6416, -30.9133, 0.37 ) }
    dend_88 { pt3dadd( -42.805, 97.1723, -30.8801, 0.37 ) }
    dend_88 { pt3dadd( -42.2844, 98.0109, -30.8486, 0.59 ) }
    dend_88 { pt3dadd( -41.7642, 98.8186, -30.8299, 0.37 ) }
    dend_88 { pt3dadd( -41.2903, 99.5199, -30.8152, 0.81 ) }
    dend_88 { pt3dadd( -40.789, 100.233, -30.8078, 0.81 ) }
    dend_88 { pt3dadd( -39.8629, 101.548, -30.8248, 0.44 ) }
    dend_88 { pt3dadd( -39.1489, 102.584, -30.8523, 0.44 ) }
    dend_88 { pt3dadd( -38.6365, 103.308, -30.8985, 0.81 ) }
    dend_88 { pt3dadd( -38.114, 104.051, -30.9559, 0.44 ) }
    dend_88 { pt3dadd( -37.8277, 104.477, -31.0034, 0.59 ) }
    dend_88 { pt3dadd( -37.1324, 105.568, -31.1782, 0.59 ) }
    dend_88 { pt3dadd( -36.6923, 106.357, -31.4035, 0.44 ) }
    dend_88 { pt3dadd( -36.2055, 107.451, -31.8124, 0.44 ) }
    dend_88 { pt3dadd( -35.8561, 108.396, -32.2916, 0.96 ) }
    dend_88 { pt3dadd( -35.7141, 108.846, -32.5826, 1.18 ) }
    dend_88 { pt3dadd( -35.6077, 109.264, -32.9074, 1.18 ) }
    dend_88 { pt3dadd( -35.3474, 110.421, -34.1879, 0.44 ) }
    dend_88 { pt3dadd( -35.2159, 111.257, -35.2698, 0.37 ) }
    dend_88 { pt3dadd( -35.0701, 111.968, -36.4241, 0.66 ) }
    dend_88 { pt3dadd( -35.0015, 112.271, -36.9742, 0.66 ) }
    dend_88 { pt3dadd( -34.8954, 112.731, -37.8613, 0.66 ) }
    dend_88 { pt3dadd( -34.387, 114.475, -41.3927, 0.44 ) }
    dend_88 { pt3dadd( -34.284, 114.771, -42.0218, 0.44 ) }
    dend_88 { pt3dadd( -33.693, 116.322, -45.3601, 0.29 ) }
    dend_88 { pt3dadd( -33.5696, 116.673, -46.064, 0.29 ) }
    dend_88 { pt3dadd( -33.4277, 117.103, -46.8572, 0.29 ) }
    dend_88 { pt3dadd( -33.132, 118.114, -48.5142, 0.74 ) }
    dend_88 { pt3dadd( -32.8231, 119.458, -50.344, 0.44 ) }
    dend_88 { pt3dadd( -32.7575, 119.796, -50.7307, 0.44 ) }
    dend_88 { pt3dadd( -32.6801, 120.6, -51.4124, 0.37 ) }
    dend_88 { pt3dadd( -32.6376, 121.423, -51.9991, 0.88 ) }
    dend_88 { pt3dadd( -32.6815, 122.754, -52.7069, 0.29 ) }
    dend_88 { pt3dadd( -32.7641, 123.278, -52.9075, 0.52 ) }
    dend_88 { pt3dadd( -33.001, 124.212, -53.2086, 0.15 ) }
    dend_88 { pt3dadd( -33.2437, 125.033, -53.5083, 0.22 ) }
    dend_88 { pt3dadd( -33.6566, 126.314, -53.9968, 0.22 ) }
    dend_88 { pt3dadd( -34.0748, 127.417, -54.4172, 0.22 ) }
    dend_88 { pt3dadd( -34.4851, 128.447, -54.7866, 0.22 ) }
    dend_88 { pt3dadd( -35.1054, 129.96, -55.3889, 1.47 ) }
    dend_88 { pt3dadd( -35.5594, 131.078, -55.8882, 0.66 ) }
    dend_88 { pt3dadd( -35.8325, 131.8, -56.2186, 0.96 ) }
    dend_88 { pt3dadd( -36.2462, 133.0, -56.7441, 0.22 ) }
    dend_88 { pt3dadd( -36.5231, 133.805, -57.0414, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 51/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -43.774, 81.9533, -31.0144, 0.37 ) }
    dend_79 { pt3dadd( -43.7669, 83.6889, -30.5523, 0.37 ) }
    dend_79 { pt3dadd( -43.6684, 84.5597, -30.3912, 0.37 ) }
    dend_79 { pt3dadd( -43.6028, 85.3775, -30.1639, 0.37 ) }
    dend_79 { pt3dadd( -43.6053, 86.5894, -29.7361, 0.74 ) }
    dend_79 { pt3dadd( -43.7063, 87.6064, -29.3421, 0.29 ) }
    dend_79 { pt3dadd( -43.9561, 88.7941, -28.8679, 0.29 ) }
    dend_79 { pt3dadd( -44.0987, 89.3498, -28.6389, 0.52 ) }
    dend_79 { pt3dadd( -44.5361, 90.5521, -27.9508, 0.44 ) }
    dend_79 { pt3dadd( -44.8667, 91.3082, -27.4333, 0.29 ) }
    dend_79 { pt3dadd( -45.1601, 91.9651, -26.9519, 0.29 ) }
    dend_79 { pt3dadd( -45.4655, 92.6931, -26.3847, 0.29 ) }
    dend_79 { pt3dadd( -45.8865, 93.9298, -25.448, 0.44 ) }
    dend_79 { pt3dadd( -46.161, 94.938, -24.7001, 0.44 ) }
    dend_79 { pt3dadd( -46.3632, 96.2346, -23.8234, 0.52 ) }
    dend_79 { pt3dadd( -46.401, 97.2744, -23.1309, 0.37 ) }
    dend_79 { pt3dadd( -46.3376, 98.1098, -22.5741, 0.37 ) }
    dend_79 { pt3dadd( -46.1651, 99.0176, -21.9996, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_53 (entry count 69/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 30.9519, 32.185, -5.42755, 0.29 ) }
    dend_69 { pt3dadd( 32.1364, 31.6703, -4.07913, 0.29 ) }
    dend_69 { pt3dadd( 33.2324, 31.2547, -2.98684, 0.59 ) }
    dend_69 { pt3dadd( 34.2935, 30.8615, -2.06171, 0.74 ) }
    dend_69 { pt3dadd( 34.8714, 30.6569, -1.59886, 0.37 ) }
    dend_69 { pt3dadd( 35.7653, 30.3617, -0.828337, 0.37 ) }
    dend_69 { pt3dadd( 36.2648, 30.2066, -0.362862, 0.66 ) }
    dend_69 { pt3dadd( 36.6399, 30.13, 0.0103851, 0.96 ) }
    dend_69 { pt3dadd( 37.1959, 30.0505, 0.746101, 1.25 ) }
    dend_69 { pt3dadd( 38.0604, 29.9945, 2.17529, 0.37 ) }
    dend_69 { pt3dadd( 38.8615, 30.0473, 3.69994, 0.37 ) }
    dend_69 { pt3dadd( 39.1279, 30.0945, 4.23871, 0.37 ) }
    dend_69 { pt3dadd( 39.7036, 30.2263, 5.33443, 0.74 ) }
    dend_69 { pt3dadd( 40.7116, 30.461, 6.9873, 0.66 ) }
    dend_69 { pt3dadd( 41.5252, 30.649, 8.08993, 0.52 ) }
    dend_69 { pt3dadd( 42.1483, 30.753, 8.69476, 0.66 ) }
    dend_69 { pt3dadd( 42.9, 30.8179, 9.1813, 0.66 ) }
    dend_69 { pt3dadd( 43.9131, 30.854, 9.6539, 0.37 ) }
    dend_69 { pt3dadd( 45.0741, 30.8285, 10.0213, 0.52 ) }
    dend_69 { pt3dadd( 45.7159, 30.7742, 10.1644, 0.52 ) }
    dend_69 { pt3dadd( 46.8332, 30.642, 10.3813, 0.66 ) }
    dend_69 { pt3dadd( 47.4595, 30.5478, 10.4914, 0.88 ) }
    dend_69 { pt3dadd( 48.2921, 30.4275, 10.6193, 0.88 ) }
    dend_69 { pt3dadd( 49.2627, 30.3174, 10.8135, 0.66 ) }
    dend_69 { pt3dadd( 50.4811, 30.2423, 11.0848, 0.29 ) }
    dend_69 { pt3dadd( 51.5487, 30.2404, 11.3224, 0.29 ) }
    dend_69 { pt3dadd( 53.1662, 30.3813, 11.6774, 0.88 ) }
    dend_69 { pt3dadd( 53.6143, 30.4405, 11.7757, 0.88 ) }
    dend_69 { pt3dadd( 55.4081, 30.7461, 12.1503, 0.29 ) }
    dend_69 { pt3dadd( 56.7894, 31.0393, 12.409, 0.29 ) }
    dend_69 { pt3dadd( 58.1075, 31.3694, 12.626, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_69 { pt3dadd( 59.6734, 31.8044, 12.8608, 0.29 ) }
    dend_69 { pt3dadd( 60.8117, 32.1295, 13.0274, 0.29 ) }
    dend_69 { pt3dadd( 61.8628, 32.4118, 13.1559, 0.81 ) }
    dend_69 { pt3dadd( 62.6844, 32.62, 13.2087, 0.81 ) }
    dend_69 { pt3dadd( 63.4124, 32.7933, 13.2491, 0.81 ) }
    dend_69 { pt3dadd( 64.5145, 33.0312, 13.3018, 0.59 ) }
    dend_69 { pt3dadd( 65.796, 33.2562, 13.3598, 0.29 ) }
    dend_69 { pt3dadd( 66.9291, 33.4937, 13.4299, 0.81 ) }
    dend_69 { pt3dadd( 68.0489, 33.7308, 13.5093, 0.22 ) }
    dend_69 { pt3dadd( 69.0422, 33.9221, 13.5763, 0.22 ) }
    dend_69 { pt3dadd( 69.6702, 34.019, 13.604, 0.52 ) }
    dend_69 { pt3dadd( 70.5308, 34.1204, 13.5863, 0.22 ) }
    dend_69 { pt3dadd( 79.8502, 35.0125, 18.1619, 0.22 ) }
    dend_69 { pt3dadd( 88.634, 36.1123, 23.6641, 0.22 ) }
    dend_69 { pt3dadd( 98.3909, 35.5343, 27.2572, 0.22 ) }
    dend_69 { pt3dadd( 108.014, 33.1048, 30.4316, 0.22 ) }
    dend_69 { pt3dadd( 117.68, 31.9599, 34.1354, 0.22 ) }
    dend_69 { pt3dadd( 125.957, 29.2954, 39.8774, 0.22 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 18/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 30.9519, 32.185, -5.42755, 0.81 ) }
    dend_54 { pt3dadd( 32.1084, 32.5701, -4.63343, 0.81 ) }
    dend_54 { pt3dadd( 32.6693, 32.6702, -4.26869, 1.03 ) }
    dend_54 { pt3dadd( 34.2141, 32.8128, -3.42831, 0.96 ) }
    dend_54 { pt3dadd( 35.0771, 32.8857, -3.01743, 0.96 ) }
    dend_54 { pt3dadd( 36.0946, 33.0095, -2.58666, 0.59 ) }
    dend_54 { pt3dadd( 36.808, 33.1312, -2.31617, 0.66 ) }
    dend_54 { pt3dadd( 37.7755, 33.2917, -1.98646, 0.66 ) }
    dend_54 { pt3dadd( 38.9519, 33.5648, -1.694, 0.59 ) }
    dend_54 { pt3dadd( 39.5912, 33.7914, -1.64159, 0.81 ) }
    dend_54 { pt3dadd( 40.406, 34.2154, -1.64322, 0.96 ) }
    dend_54 { pt3dadd( 41.157, 34.699, -1.68058, 1.25 ) }
    dend_54 { pt3dadd( 41.6975, 35.0646, -1.70549, 1.4 ) }
    dend_54 { pt3dadd( 42.3677, 35.5184, -1.70417, 1.4 ) }
    dend_54 { pt3dadd( 43.4439, 36.1724, -1.61069, 0.59 ) }
    dend_54 { pt3dadd( 43.8793, 36.3636, -1.53736, 0.59 ) }
    dend_54 { pt3dadd( 44.7805, 36.5861, -1.30539, 0.59 ) }
    dend_54 { pt3dadd( 45.7601, 36.6819, -0.981941, 1.03 ) }
    dend_54 { pt3dadd( 46.4527, 36.6789, -0.715069, 1.18 ) }
    dend_54 { pt3dadd( 47.0442, 36.6348, -0.432593, 1.18 ) }
    dend_54 { pt3dadd( 47.9815, 36.5193, 0.0989553, 0.74 ) }
    dend_54 { pt3dadd( 48.8622, 36.4036, 0.678469, 0.66 ) }
    dend_54 { pt3dadd( 49.2742, 36.3565, 0.971898, 0.96 ) }
    dend_54 { pt3dadd( 49.8103, 36.323, 1.3502, 0.96 ) }
    dend_54 { pt3dadd( 50.7748, 36.3137, 2.00284, 1.03 ) }
    dend_54 { pt3dadd( 51.2305, 36.3422, 2.29854, 1.03 ) }
    dend_54 { pt3dadd( 52.5048, 36.5753, 3.04554, 0.59 ) }
    dend_54 { pt3dadd( 53.2024, 36.7817, 3.40238, 0.59 ) }
    dend_54 { pt3dadd( 54.4618, 37.24, 3.95961, 0.59 ) }
    dend_54 { pt3dadd( 55.0868, 37.5035, 4.19064, 0.81 ) }
    dend_54 { pt3dadd( 55.6816, 37.7962, 4.35483, 0.81 ) }
    dend_54 { pt3dadd( 56.9157, 38.4715, 4.58882, 0.37 ) }
    dend_54 { pt3dadd( 57.7082, 38.9084, 4.68072, 0.66 ) }
    dend_54 { pt3dadd( 58.4137, 39.2676, 4.76491, 0.74 ) }
    dend_54 { pt3dadd( 58.8596, 39.4612, 4.81814, 0.74 ) }
    dend_54 { pt3dadd( 59.7377, 39.7414, 4.93573, 0.74 ) }
    dend_54 { pt3dadd( 60.6845, 39.9094, 5.09022, 0.52 ) }
    dend_54 { pt3dadd( 62.0066, 39.9671, 5.34907, 0.74 ) }
    dend_54 { pt3dadd( 62.996, 39.9554, 5.58399, 0.88 ) }
    dend_54 { pt3dadd( 63.5288, 39.9487, 5.74317, 0.96 ) }
    dend_54 { pt3dadd( 64.0474, 39.9581, 5.93083, 1.18 ) }
    dend_54 { pt3dadd( 64.8175, 40.0165, 6.26203, 1.18 ) }
    dend_54 { pt3dadd( 65.3834, 40.1335, 6.55198, 0.66 ) }
    dend_54 { pt3dadd( 66.3455, 40.5655, 7.12375, 0.59 ) }
    dend_54 { pt3dadd( 66.9352, 40.9998, 7.58516, 0.59 ) }
    dend_54 { pt3dadd( 67.3063, 41.3553, 7.93167, 0.74 ) }
    dend_54 { pt3dadd( 67.5828, 41.6819, 8.22949, 0.74 ) }
    dend_54 { pt3dadd( 67.8444, 42.0382, 8.54741, 0.74 ) }
    dend_54 { pt3dadd( 68.3228, 42.7659, 9.20423, 0.59 ) }
    dend_54 { pt3dadd( 68.9292, 43.7893, 10.1449, 0.96 ) }
    dend_54 { pt3dadd( 69.2166, 44.2708, 10.6001, 1.25 ) }
    dend_54 { pt3dadd( 69.3672, 44.5301, 10.8662, 1.25 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 70/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 111.008, 64.8738, 98.2735, 0.29 ) }
    dend_52 { pt3dadd( 116.006, 67.5376, 103.277, 0.29 ) }
    dend_52 { pt3dadd( 121.541, 70.5728, 107.435, 0.29 ) }
    dend_52 { pt3dadd( 126.991, 74.3794, 111.059, 0.29 ) }
    dend_52 { pt3dadd( 132.022, 77.3553, 115.857, 0.29 ) }
    dend_52 { pt3dadd( 136.516, 81.1325, 120.653, 0.29 ) }
    dend_52 { pt3dadd( 140.002, 84.9839, 126.19, 0.29 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 111.008, 64.8738, 98.2735, 0.29 ) }
    dend_51 { pt3dadd( 117.686, 68.2422, 103.564, 0.29 ) }
    dend_51 { pt3dadd( 122.949, 72.9043, 109.493, 0.29 ) }
    dend_51 { pt3dadd( 127.098, 77.7706, 116.125, 0.29 ) }
    dend_51 { pt3dadd( 132.281, 81.2168, 122.866, 0.29 ) }
    dend_51 { pt3dadd( 137.048, 85.093, 129.695, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -33.2963, -11.8597, -30.3202, 0.74 ) }
    dend_46 { pt3dadd( -34.4344, -13.2442, -30.9242, 0.74 ) }
    dend_46 { pt3dadd( -35.0866, -13.8584, -31.1659, 0.74 ) }
    dend_46 { pt3dadd( -35.6666, -14.2952, -31.3474, 0.74 ) }
    dend_46 { pt3dadd( -36.6619, -14.7704, -31.6861, 0.66 ) }
    dend_46 { pt3dadd( -37.4324, -14.9888, -31.9692, 0.66 ) }
    dend_46 { pt3dadd( -38.2751, -15.1487, -32.2916, 0.59 ) }
    dend_46 { pt3dadd( -38.8901, -15.1578, -32.4816, 1.25 ) }
    dend_46 { pt3dadd( -39.4077, -15.1163, -32.6496, 1.25 ) }
    dend_46 { pt3dadd( -41.0051, -14.945, -33.2206, 0.66 ) }
    dend_46 { pt3dadd( -41.7947, -14.8784, -33.533, 0.66 ) }
    dend_46 { pt3dadd( -42.2054, -14.8924, -33.7301, 0.96 ) }
    dend_46 { pt3dadd( -42.7792, -15.0229, -34.0627, 0.96 ) }
    dend_46 { pt3dadd( -43.163, -15.1843, -34.4201, 0.96 ) }
    dend_46 { pt3dadd( -43.7289, -15.5545, -35.3659, 0.74 ) }
    dend_46 { pt3dadd( -44.0199, -15.8218, -36.118, 0.52 ) }
    dend_46 { pt3dadd( -44.3098, -16.1268, -37.0642, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -44.4964, -16.3401, -37.7667, 1.03 ) }
    dend_46 { pt3dadd( -45.1794, -17.1573, -40.6379, 1.25 ) }
    dend_46 { pt3dadd( -45.6496, -17.7124, -42.7153, 0.66 ) }
    dend_46 { pt3dadd( -45.8878, -17.9723, -43.7373, 0.66 ) }
    dend_46 { pt3dadd( -46.0413, -18.1085, -44.2682, 1.11 ) }
    dend_46 { pt3dadd( -46.1815, -18.2071, -44.5825, 1.33 ) }
    dend_46 { pt3dadd( -46.3826, -18.3462, -44.8506, 1.18 ) }
    dend_46 { pt3dadd( -46.6888, -18.5992, -45.0204, 1.18 ) }
    dend_46 { pt3dadd( -47.3814, -19.2011, -45.2921, 0.59 ) }
    dend_46 { pt3dadd( -48.0808, -19.8678, -45.6179, 0.52 ) }
    dend_46 { pt3dadd( -48.6206, -20.4375, -45.9525, 0.52 ) }
    dend_46 { pt3dadd( -49.0597, -20.9467, -46.3506, 0.81 ) }
    dend_46 { pt3dadd( -49.4815, -21.4882, -46.9025, 0.66 ) }
    dend_46 { pt3dadd( -49.8738, -22.0203, -47.533, 0.66 ) }
    dend_46 { pt3dadd( -50.1558, -22.4188, -48.0749, 1.33 ) }
    dend_46 { pt3dadd( -50.3439, -22.6926, -48.4663, 1.33 ) }
    dend_46 { pt3dadd( -50.9319, -23.5462, -49.7064, 0.66 ) }
    dend_46 { pt3dadd( -51.4536, -24.2805, -50.7596, 0.52 ) }
    dend_46 { pt3dadd( -51.7065, -24.6063, -51.2265, 0.52 ) }
    dend_46 { pt3dadd( -52.0391, -25.0037, -51.7036, 0.96 ) }
    dend_46 { pt3dadd( -52.2768, -25.2822, -51.9618, 1.18 ) }
    dend_46 { pt3dadd( -52.4433, -25.4916, -52.0871, 1.18 ) }
    dend_46 { pt3dadd( -52.7703, -25.9804, -52.2326, 0.81 ) }
    dend_46 { pt3dadd( -53.19, -26.7234, -52.3427, 0.74 ) }
    dend_46 { pt3dadd( -53.6784, -27.7346, -52.426, 0.59 ) }
    dend_46 { pt3dadd( -53.9198, -28.2477, -52.4364, 0.74 ) }
    dend_46 { pt3dadd( -54.2449, -28.9199, -52.4137, 0.74 ) }
    dend_46 { pt3dadd( -54.6085, -29.5966, -52.3615, 0.59 ) }
    dend_46 { pt3dadd( -54.9586, -30.2131, -52.2938, 0.44 ) }
    dend_46 { pt3dadd( -55.3517, -30.9008, -52.2088, 0.44 ) }
    dend_46 { pt3dadd( -55.7362, -31.5506, -52.1506, 0.44 ) }
    dend_46 { pt3dadd( -56.1295, -32.2765, -52.1101, 0.44 ) }
    dend_46 { pt3dadd( -56.7485, -33.557, -52.0866, 0.44 ) }
    dend_46 { pt3dadd( -56.8878, -33.9222, -52.0943, 0.96 ) }
    dend_46 { pt3dadd( -57.0932, -34.7486, -52.1828, 1.18 ) }
    dend_46 { pt3dadd( -57.1711, -35.4439, -52.3154, 0.81 ) }
    dend_46 { pt3dadd( -57.1658, -36.5257, -52.6445, 0.59 ) }
    dend_46 { pt3dadd( -57.1394, -36.976, -52.8399, 0.74 ) }
    dend_46 { pt3dadd( -57.0967, -37.687, -53.205, 0.66 ) }
    dend_46 { pt3dadd( -57.1136, -38.3884, -53.5892, 0.66 ) }
    dend_46 { pt3dadd( -57.1785, -38.9139, -53.8893, 0.81 ) }
    dend_46 { pt3dadd( -57.3809, -39.899, -54.4357, 0.59 ) }
    dend_46 { pt3dadd( -57.6072, -40.7786, -54.8981, 0.52 ) }
    dend_46 { pt3dadd( -57.8084, -41.6344, -55.3241, 0.81 ) }
    dend_46 { pt3dadd( -57.9598, -42.4654, -55.7072, 1.4 ) }
    dend_46 { pt3dadd( -57.99, -42.96, -55.8836, 1.69 ) }
    dend_46 { pt3dadd( -57.9311, -43.9279, -56.13, 0.52 ) }
    dend_46 { pt3dadd( -57.8497, -44.7192, -56.3396, 0.44 ) }
    dend_46 { pt3dadd( -57.7556, -45.4895, -56.6574, 0.44 ) }
    dend_46 { pt3dadd( -57.7112, -46.0069, -56.9946, 0.29 ) }
    dend_46 { pt3dadd( -57.718, -46.9503, -57.7749, 1.4 ) }
    dend_46 { pt3dadd( -57.7377, -47.1387, -57.9465, 1.4 ) }
    dend_46 { pt3dadd( -58.1115, -48.7884, -59.6983, 0.52 ) }
    dend_46 { pt3dadd( -58.4077, -49.7001, -60.7377, 0.52 ) }
    dend_46 { pt3dadd( -58.5916, -50.1745, -61.2911, 0.52 ) }
    dend_46 { pt3dadd( -58.8729, -50.8835, -62.1132, 0.74 ) }
    dend_46 { pt3dadd( -59.0538, -51.3612, -62.6496, 0.88 ) }
    dend_46 { pt3dadd( -59.394, -52.4693, -63.7367, 0.44 ) }
    dend_46 { pt3dadd( -59.5217, -53.0429, -64.1862, 0.59 ) }
    dend_46 { pt3dadd( -59.6758, -53.6963, -64.6589, 0.59 ) }
    dend_46 { pt3dadd( -59.8769, -54.3639, -65.1613, 0.37 ) }
    dend_46 { pt3dadd( -60.0111, -54.7664, -65.4764, 0.59 ) }
    dend_46 { pt3dadd( -60.2757, -55.4917, -66.0286, 0.81 ) }
    dend_46 { pt3dadd( -60.5418, -56.1742, -66.4743, 1.18 ) }
    dend_46 { pt3dadd( -60.7233, -56.597, -66.7517, 1.18 ) }
    dend_46 { pt3dadd( -61.2646, -57.654, -67.4988, 0.74 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -33.2963, -11.8597, -30.3202, 0.81 ) }
    dend_45 { pt3dadd( -33.781, -10.2093, -30.3239, 0.81 ) }
    dend_45 { pt3dadd( -34.0307, -9.60848, -30.2743, 0.81 ) }
    dend_45 { pt3dadd( -34.4421, -8.89693, -30.1688, 0.81 ) }
    dend_45 { pt3dadd( -34.9088, -8.35418, -30.0597, 0.88 ) }
    dend_45 { pt3dadd( -35.4947, -7.94164, -29.9714, 0.66 ) }
    dend_45 { pt3dadd( -36.5998, -7.399, -29.876, 0.59 ) }
    dend_45 { pt3dadd( -37.4002, -7.28811, -29.8605, 0.59 ) }
    dend_45 { pt3dadd( -38.1291, -7.31574, -29.9824, 0.59 ) }
    dend_45 { pt3dadd( -39.1031, -7.47811, -30.3114, 0.74 ) }
    dend_45 { pt3dadd( -40.1514, -7.74233, -30.8717, 1.03 ) }
    dend_45 { pt3dadd( -40.5182, -7.84547, -31.1092, 1.62 ) }
    dend_45 { pt3dadd( -41.0149, -7.9794, -31.4722, 1.92 ) }
    dend_45 { pt3dadd( -42.5844, -8.3481, -32.5963, 0.88 ) }
    dend_45 { pt3dadd( -43.1864, -8.46969, -33.0187, 0.66 ) }
    dend_45 { pt3dadd( -44.0698, -8.64111, -33.6092, 0.66 ) }
    dend_45 { pt3dadd( -45.2615, -8.86766, -34.3609, 0.66 ) }
    dend_45 { pt3dadd( -45.7904, -8.95498, -34.6787, 0.66 ) }
    dend_45 { pt3dadd( -46.9387, -9.07475, -35.3005, 0.66 ) }
    dend_45 { pt3dadd( -47.6673, -9.09722, -35.6545, 0.44 ) }
    dend_45 { pt3dadd( -48.5817, -9.06289, -36.1265, 0.44 ) }
    dend_45 { pt3dadd( -49.247, -8.99292, -36.5076, 0.44 ) }
    dend_45 { pt3dadd( -50.0245, -8.85984, -37.0443, 0.66 ) }
    dend_45 { pt3dadd( -50.5648, -8.74518, -37.4491, 0.66 ) }
    dend_45 { pt3dadd( -51.2003, -8.56488, -37.9332, 0.66 ) }
    dend_45 { pt3dadd( -51.7477, -8.37684, -38.3083, 0.66 ) }
    dend_45 { pt3dadd( -52.3692, -8.10522, -38.6872, 0.44 ) }
    dend_45 { pt3dadd( -52.8, -7.88876, -38.9376, 0.74 ) }
    dend_45 { pt3dadd( -53.4404, -7.54682, -39.2919, 0.74 ) }
    dend_45 { pt3dadd( -54.0103, -7.23532, -39.6034, 0.74 ) }
    dend_45 { pt3dadd( -54.4957, -6.97043, -39.8561, 0.74 ) }
    dend_45 { pt3dadd( -55.0522, -6.67344, -40.1326, 0.37 ) }
    dend_45 { pt3dadd( -55.8851, -6.33993, -40.5714, 0.37 ) }
    dend_45 { pt3dadd( -56.2497, -6.28138, -40.7848, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_45 { pt3dadd( -56.6403, -6.31907, -41.0535, 0.88 ) }
    dend_45 { pt3dadd( -57.1655, -6.44616, -41.4347, 1.18 ) }
    dend_45 { pt3dadd( -57.5942, -6.57897, -41.7823, 1.33 ) }
    dend_45 { pt3dadd( -58.6871, -6.95781, -42.743, 0.44 ) }
    dend_45 { pt3dadd( -59.4671, -7.2023, -43.4909, 0.44 ) }
    dend_45 { pt3dadd( -60.0814, -7.32957, -44.1674, 0.44 ) }
    dend_45 { pt3dadd( -60.6247, -7.33762, -44.8285, 0.88 ) }
    dend_45 { pt3dadd( -61.1931, -7.18395, -45.5597, 1.03 ) }
    dend_45 { pt3dadd( -61.4189, -7.03747, -45.8467, 1.03 ) }
    dend_45 { pt3dadd( -61.9895, -6.43168, -46.4588, 0.44 ) }
    dend_45 { pt3dadd( -62.3317, -6.027, -46.7871, 0.44 ) }
    dend_45 { pt3dadd( -62.7434, -5.58948, -47.0941, 0.44 ) }
    dend_45 { pt3dadd( -63.0907, -5.30359, -47.3219, 0.59 ) }
    dend_45 { pt3dadd( -63.6794, -4.95409, -47.6439, 0.59 ) }
    dend_45 { pt3dadd( -64.2912, -4.72438, -47.9606, 0.74 ) }
    dend_45 { pt3dadd( -65.4309, -4.54057, -48.5136, 0.37 ) }
    dend_45 { pt3dadd( -66.1536, -4.54429, -48.8804, 0.37 ) }
    dend_45 { pt3dadd( -67.2311, -4.7084, -49.4564, 0.59 ) }
    dend_45 { pt3dadd( -67.6554, -4.82801, -49.7001, 0.88 ) }
    dend_45 { pt3dadd( -68.4761, -5.16853, -50.2262, 0.66 ) }
    dend_45 { pt3dadd( -69.03, -5.44585, -50.6022, 0.74 ) }
    dend_45 { pt3dadd( -69.6221, -5.77958, -51.0017, 0.59 ) }
    dend_45 { pt3dadd( -70.131, -6.08597, -51.3694, 0.52 ) }
    dend_45 { pt3dadd( -70.6072, -6.36942, -51.7137, 0.88 ) }
    dend_45 { pt3dadd( -71.4794, -6.82148, -52.3667, 0.59 ) }
    dend_45 { pt3dadd( -71.9856, -7.03017, -52.7537, 0.44 ) }
    dend_45 { pt3dadd( -72.5444, -7.20243, -53.1907, 1.03 ) }
    dend_45 { pt3dadd( -72.9342, -7.28358, -53.4925, 1.33 ) }
    dend_45 { pt3dadd( -73.1755, -7.31063, -53.6701, 1.4 ) }
    dend_45 { pt3dadd( -74.1964, -7.36444, -54.357, 0.44 ) }
    dend_45 { pt3dadd( -74.6105, -7.37814, -54.6185, 0.44 ) }
    dend_45 { pt3dadd( -75.2235, -7.3846, -54.981, 0.44 ) }
    dend_45 { pt3dadd( -75.8706, -7.37178, -55.3341, 0.44 ) }
    dend_45 { pt3dadd( -76.92, -7.34237, -55.9015, 0.59 ) }
    dend_45 { pt3dadd( -77.6417, -7.3204, -56.3492, 0.88 ) }
    dend_45 { pt3dadd( -78.2935, -7.27398, -56.8608, 1.11 ) }
    dend_45 { pt3dadd( -79.124, -7.18186, -57.6163, 0.52 ) }
    dend_45 { pt3dadd( -79.7123, -7.07829, -58.2095, 0.52 ) }
    dend_45 { pt3dadd( -80.1982, -6.96786, -58.7309, 1.03 ) }
    dend_45 { pt3dadd( -81.2713, -6.69982, -59.9634, 1.25 ) }
    dend_45 { pt3dadd( -82.5454, -6.43331, -61.4209, 0.52 ) }
    dend_45 { pt3dadd( -82.9852, -6.36083, -61.9115, 0.59 ) }
    dend_45 { pt3dadd( -83.5786, -6.29152, -62.5355, 0.59 ) }
    dend_45 { pt3dadd( -84.5246, -6.18926, -63.4088, 0.44 ) }
    dend_45 { pt3dadd( -85.1824, -6.11437, -63.9052, 0.44 ) }
    dend_45 { pt3dadd( -86.1567, -5.96173, -64.5067, 0.44 ) }
    dend_45 { pt3dadd( -86.6754, -5.85024, -64.814, 0.44 ) }
    dend_45 { pt3dadd( -87.3702, -5.61054, -65.3498, 0.66 ) }
    dend_45 { pt3dadd( -87.8455, -5.35815, -65.8273, 0.88 ) }
    dend_45 { pt3dadd( -88.0874, -5.16716, -66.1192, 0.88 ) }
    dend_45 { pt3dadd( -88.7588, -4.46894, -67.0239, 0.52 ) }
    dend_45 { pt3dadd( -89.1533, -3.95491, -67.6148, 0.52 ) }
    dend_45 { pt3dadd( -89.6814, -3.14021, -68.5469, 0.81 ) }
    dend_45 { pt3dadd( -90.031, -2.50101, -69.2518, 0.44 ) }
    dend_45 { pt3dadd( -90.2214, -2.10446, -69.6861, 0.44 ) }
    dend_45 { pt3dadd( -90.418, -1.58777, -70.225, 0.74 ) }
    dend_45 { pt3dadd( -90.5198, -1.19766, -70.5861, 0.96 ) }
    dend_45 { pt3dadd( -90.663, -0.187575, -71.3592, 0.66 ) }
    dend_45 { pt3dadd( -90.7256, 0.444576, -71.8195, 0.44 ) }
    dend_45 { pt3dadd( -90.8053, 1.1325, -72.3556, 0.44 ) }
    dend_45 { pt3dadd( -90.9367, 1.78301, -72.9343, 0.44 ) }
    dend_45 { pt3dadd( -91.0224, 2.00508, -73.1643, 0.44 ) }
    dend_45 { pt3dadd( -91.3678, 2.4605, -73.7087, 0.96 ) }
    dend_45 { pt3dadd( -92.2568, 2.9468, -74.5054, 0.66 ) }
    dend_45 { pt3dadd( -92.8679, 3.14299, -74.9457, 0.96 ) }
    dend_45 { pt3dadd( -93.1669, 3.21707, -75.1206, 1.25 ) }
    dend_45 { pt3dadd( -93.5221, 3.29455, -75.3059, 1.25 ) }
    dend_45 { pt3dadd( -94.085, 3.43353, -75.5885, 1.25 ) }
    dend_45 { pt3dadd( -95.0473, 3.77169, -76.0793, 0.37 ) }
    dend_45 { pt3dadd( -95.6133, 4.105, -76.3554, 0.37 ) }
    dend_45 { pt3dadd( -95.9784, 4.39282, -76.5673, 0.66 ) }
    dend_45 { pt3dadd( -96.2568, 4.6312, -76.7265, 0.81 ) }
    dend_45 { pt3dadd( -96.6921, 5.00973, -76.948, 0.81 ) }
    dend_45 { pt3dadd( -97.3705, 5.59657, -77.2148, 0.44 ) }
    dend_45 { pt3dadd( -97.8433, 5.97006, -77.3276, 0.44 ) }
    dend_45 { pt3dadd( -98.7223, 6.56663, -77.4516, 0.44 ) }
    dend_45 { pt3dadd( -99.7036, 7.18997, -77.5279, 0.44 ) }
    dend_45 { pt3dadd( -100.451, 7.65961, -77.5471, 0.66 ) }
    dend_45 { pt3dadd( -101.232, 8.14426, -77.5278, 0.96 ) }
    dend_45 { pt3dadd( -102.024, 8.62712, -77.4531, 0.59 ) }
    dend_45 { pt3dadd( -102.696, 9.05266, -77.3643, 0.44 ) }
    dend_45 { pt3dadd( -103.389, 9.50129, -77.2661, 0.44 ) }
    dend_45 { pt3dadd( -104.06, 9.9346, -77.2127, 0.44 ) }
    dend_45 { pt3dadd( -104.649, 10.2665, -77.2376, 0.44 ) }
    dend_45 { pt3dadd( -105.337, 10.5591, -77.3697, 0.74 ) }
    dend_45 { pt3dadd( -105.682, 10.6633, -77.4801, 0.74 ) }
    dend_45 { pt3dadd( -106.678, 10.8617, -77.8508, 0.52 ) }
    dend_45 { pt3dadd( -107.134, 10.9269, -78.0439, 0.59 ) }
    dend_45 { pt3dadd( -107.981, 11.0308, -78.4337, 0.44 ) }
    dend_45 { pt3dadd( -108.611, 11.1346, -78.7373, 0.44 ) }
    dend_45 { pt3dadd( -109.39, 11.3401, -79.1569, 0.37 ) }
    dend_45 { pt3dadd( -110.164, 11.6244, -79.5764, 0.52 ) }
    dend_45 { pt3dadd( -110.768, 11.9172, -79.9129, 1.11 ) }
    dend_45 { pt3dadd( -111.234, 12.1866, -80.2071, 1.25 ) }
    dend_45 { pt3dadd( -111.778, 12.5401, -80.6107, 0.37 ) }
    dend_45 { pt3dadd( -112.551, 13.0567, -81.2775, 0.37 ) }
    dend_45 { pt3dadd( -113.074, 13.3834, -81.7819, 0.29 ) }
    dend_45 { pt3dadd( -113.489, 13.622, -82.2307, 0.29 ) }
    dend_45 { pt3dadd( -114.234, 14.0372, -83.0881, 0.59 ) }
    dend_45 { pt3dadd( -114.82, 14.3807, -83.7942, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -115.151, 14.5871, -84.1966, 0.29 ) }
    dend_45 { pt3dadd( -115.412, 14.7703, -84.4867, 0.37 ) }
    dend_45 { pt3dadd( -115.822, 15.111, -84.9126, 0.37 ) }
    dend_45 { pt3dadd( -116.386, 15.626, -85.394, 0.44 ) }
    dend_45 { pt3dadd( -116.863, 16.0873, -85.6939, 0.44 ) }
    dend_45 { pt3dadd( -117.32, 16.53, -85.9135, 0.44 ) }
    dend_45 { pt3dadd( -117.877, 17.0253, -86.1501, 0.37 ) }
    dend_45 { pt3dadd( -118.106, 17.2013, -86.2356, 0.37 ) }
    dend_45 { pt3dadd( -118.704, 17.573, -86.4158, 0.88 ) }
    dend_45 { pt3dadd( -119.056, 17.7522, -86.508, 1.11 ) }
    dend_45 { pt3dadd( -119.689, 18.0478, -86.6674, 1.11 ) }
    dend_45 { pt3dadd( -120.684, 18.5352, -86.9101, 0.37 ) }
    dend_45 { pt3dadd( -121.451, 18.9537, -87.0914, 0.37 ) }
    dend_45 { pt3dadd( -121.887, 19.2376, -87.1886, 0.66 ) }
    dend_45 { pt3dadd( -122.526, 19.7901, -87.3603, 0.66 ) }
    dend_45 { pt3dadd( -123.014, 20.3389, -87.5237, 0.37 ) }
    dend_45 { pt3dadd( -123.41, 20.9182, -87.6957, 0.52 ) }
    dend_45 { pt3dadd( -123.549, 21.1733, -87.7719, 0.66 ) }
    dend_45 { pt3dadd( -123.749, 21.5887, -87.8915, 0.66 ) }
    dend_45 { pt3dadd( -124.289, 22.7369, -88.2088, 0.37 ) }
    dend_45 { pt3dadd( -124.551, 23.2355, -88.3226, 0.37 ) }
    dend_45 { pt3dadd( -124.858, 23.6568, -88.3693, 0.37 ) }
    dend_45 { pt3dadd( -125.2, 23.9921, -88.3498, 0.88 ) }
    dend_45 { pt3dadd( -125.767, 24.4279, -88.2563, 0.81 ) }
    dend_45 { pt3dadd( -126.052, 24.6079, -88.1932, 0.81 ) }
    dend_45 { pt3dadd( -126.776, 25.0137, -88.0037, 0.29 ) }
    dend_45 { pt3dadd( -127.728, 25.5266, -87.7467, 0.29 ) }
    dend_45 { pt3dadd( -128.318, 25.8778, -87.5403, 0.52 ) }
    dend_45 { pt3dadd( -129.026, 26.3497, -87.2758, 0.44 ) }
    dend_45 { pt3dadd( -129.369, 26.5946, -87.1461, 0.44 ) }
    dend_45 { pt3dadd( -129.82, 26.9413, -86.9561, 0.81 ) }
    dend_45 { pt3dadd( -130.343, 27.4037, -86.7128, 0.81 ) }
    dend_45 { pt3dadd( -131.304, 28.4068, -86.2129, 0.29 ) }
    dend_45 { pt3dadd( -131.686, 28.8365, -86.0033, 0.44 ) }
    dend_45 { pt3dadd( -132.043, 29.2499, -85.7815, 0.29 ) }
    dend_45 { pt3dadd( -132.442, 29.6892, -85.5436, 0.29 ) }
    dend_45 { pt3dadd( -132.973, 30.2341, -85.2613, 0.29 ) }
    dend_45 { pt3dadd( -133.385, 30.6282, -85.0784, 0.29 ) }
    dend_45 { pt3dadd( -133.878, 31.0582, -84.8992, 0.59 ) }
    dend_45 { pt3dadd( -134.831, 31.8647, -84.54, 0.22 ) }
    dend_45 { pt3dadd( -135.445, 32.3758, -84.3102, 0.22 ) }
    dend_45 { pt3dadd( -135.775, 32.6256, -84.1858, 0.52 ) }
    dend_45 { pt3dadd( -136.086, 32.8245, -84.062, 0.52 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 43/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -84.9583, -51.081, 80.8625, 0.29 ) }
    dend_43 { pt3dadd( -89.0974, -53.8731, 84.7218, 0.29 ) }
    dend_43 { pt3dadd( -92.5242, -57.7682, 88.3601, 0.29 ) }
    dend_43 { pt3dadd( -95.7222, -61.6662, 92.1957, 0.29 ) }
    dend_43 { pt3dadd( -98.662, -65.9632, 95.8256, 0.29 ) }
    dend_43 { pt3dadd( -100.773, -70.7241, 99.4737, 0.29 ) }
    dend_43 { pt3dadd( -103.402, -75.3141, 102.997, 0.29 ) }
    dend_43 { pt3dadd( -106.051, -79.9082, 106.5, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 51/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -84.9583, -51.081, 80.8625, 0.29 ) }
    dend_42 { pt3dadd( -90.9195, -54.4764, 86.0639, 0.29 ) }
    dend_42 { pt3dadd( -96.918, -58.8621, 90.4568, 0.29 ) }
    dend_42 { pt3dadd( -102.321, -63.7928, 95.0649, 0.29 ) }
    dend_42 { pt3dadd( -106.956, -69.0652, 100.123, 0.29 ) }
    dend_42 { pt3dadd( -111.223, -74.8846, 104.928, 0.29 ) }
    dend_42 { pt3dadd( -114.701, -81.6326, 109.179, 0.29 ) }
    dend_42 { pt3dadd( -118.749, -87.6014, 113.998, 0.29 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 59/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -10.8495, -71.3887, 18.9836, 0.66 ) }
    dend_34 { pt3dadd( -11.6576, -74.5083, 17.7934, 0.66 ) }
    dend_34 { pt3dadd( -11.8644, -75.3359, 17.5081, 1.03 ) }
    dend_34 { pt3dadd( -12.0797, -76.201, 17.312, 1.03 ) }
    dend_34 { pt3dadd( -12.4861, -77.8532, 17.0893, 1.03 ) }
    dend_34 { pt3dadd( -12.762, -79.1041, 17.0117, 1.03 ) }
    dend_34 { pt3dadd( -13.0541, -80.6315, 17.0112, 0.81 ) }
    dend_34 { pt3dadd( -13.2551, -81.996, 17.2508, 0.81 ) }
    dend_34 { pt3dadd( -13.3792, -83.9943, 17.7821, 1.4 ) }
    dend_34 { pt3dadd( -13.3719, -84.8495, 18.0754, 1.62 ) }
    dend_34 { pt3dadd( -13.2772, -86.1235, 18.6365, 1.4 ) }
    dend_34 { pt3dadd( -13.1574, -86.9621, 19.0411, 1.92 ) }
    dend_34 { pt3dadd( -12.9211, -88.099, 19.612, 1.4 ) }
    dend_34 { pt3dadd( -12.4663, -89.8178, 20.4979, 1.69 ) }
    dend_34 { pt3dadd( -12.1178, -90.9662, 21.0373, 1.11 ) }
    dend_34 { pt3dadd( -11.6473, -92.5076, 21.7211, 0.81 ) }
    dend_34 { pt3dadd( -11.4384, -93.2365, 22.0211, 1.11 ) }
    dend_34 { pt3dadd( -11.2157, -94.1087, 22.344, 1.25 ) }
    dend_34 { pt3dadd( -10.8086, -96.056, 22.9919, 0.96 ) }
    dend_34 { pt3dadd( -10.6794, -97.0461, 23.2683, 0.74 ) }
    dend_34 { pt3dadd( -10.6437, -97.998, 23.4813, 0.81 ) }
    dend_34 { pt3dadd( -10.7873, -99.4538, 23.6862, 0.52 ) }
    dend_34 { pt3dadd( -11.0165, -100.502, 23.753, 0.88 ) }
    dend_34 { pt3dadd( -11.2985, -101.392, 23.7074, 0.88 ) }
    dend_34 { pt3dadd( -11.6772, -102.376, 23.504, 0.88 ) }
    dend_34 { pt3dadd( -12.0208, -103.251, 23.2441, 0.66 ) }
    dend_34 { pt3dadd( -12.3352, -104.192, 22.8649, 0.66 ) }
    dend_34 { pt3dadd( -12.6372, -105.52, 22.1388, 0.88 ) }
    dend_34 { pt3dadd( -12.7514, -106.407, 21.5643, 1.33 ) }
    dend_34 { pt3dadd( -12.7857, -107.086, 21.1031, 1.47 ) }
    dend_34 { pt3dadd( -12.7932, -107.726, 20.6719, 1.62 ) }
    dend_34 { pt3dadd( -12.8123, -109.03, 19.8509, 0.74 ) }
    dend_34 { pt3dadd( -12.8751, -110.509, 19.0888, 0.74 ) }
    dend_34 { pt3dadd( -13.0069, -111.659, 18.663, 0.74 ) }
    dend_34 { pt3dadd( -13.1692, -112.574, 18.4741, 0.74 ) }
    dend_34 { pt3dadd( -13.4293, -113.834, 18.3922, 0.66 ) }
    dend_34 { pt3dadd( -13.6839, -115.141, 18.4912, 0.66 ) }
    dend_34 { pt3dadd( -13.9856, -117.023, 18.8896, 0.96 ) }
    dend_34 { pt3dadd( -14.076, -117.99, 19.1872, 0.88 ) }
    dend_34 { pt3dadd( -14.0763, -118.855, 19.4865, 0.88 ) }
    dend_34 { pt3dadd( -13.9222, -120.467, 20.0486, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_34 { pt3dadd( -13.6526, -121.948, 20.5582, 1.18 ) }
    dend_34 { pt3dadd( -13.4918, -122.673, 20.7636, 1.62 ) }
    dend_34 { pt3dadd( -13.3139, -123.492, 20.9284, 1.62 ) }
    dend_34 { pt3dadd( -13.1003, -124.65, 21.1249, 0.96 ) }
    dend_34 { pt3dadd( -12.9771, -125.549, 21.2577, 0.96 ) }
    dend_34 { pt3dadd( -12.8824, -126.911, 21.4264, 0.66 ) }
    dend_34 { pt3dadd( -12.9288, -128.707, 21.5842, 0.52 ) }
    dend_34 { pt3dadd( -13.0939, -130.323, 21.739, 0.59 ) }
    dend_34 { pt3dadd( -13.4349, -132.186, 21.9324, 0.74 ) }
    dend_34 { pt3dadd( -13.5648, -132.671, 21.9913, 1.11 ) }
    dend_34 { pt3dadd( -13.9124, -133.6, 22.1546, 1.25 ) }
    dend_34 { pt3dadd( -14.655, -135.091, 22.4979, 0.88 ) }
    dend_34 { pt3dadd( -15.1475, -135.835, 22.7343, 0.66 ) }
    dend_34 { pt3dadd( -15.6829, -136.494, 22.9833, 0.66 ) }
    dend_34 { pt3dadd( -16.2126, -137.078, 23.2067, 0.59 ) }
    dend_34 { pt3dadd( -17.2601, -138.256, 23.6036, 0.59 ) }
    dend_34 { pt3dadd( -17.843, -138.935, 23.7851, 0.44 ) }
    dend_34 { pt3dadd( -18.5311, -139.815, 23.9341, 0.44 ) }
    dend_34 { pt3dadd( -19.0896, -140.634, 23.9824, 0.74 ) }
    dend_34 { pt3dadd( -19.5321, -141.393, 23.9774, 0.74 ) }
    dend_34 { pt3dadd( -19.9057, -142.116, 23.9313, 0.66 ) }
    dend_34 { pt3dadd( -20.3749, -143.173, 23.7953, 1.03 ) }
    dend_34 { pt3dadd( -20.7257, -144.013, 23.6935, 1.4 ) }
    dend_34 { pt3dadd( -21.1012, -144.955, 23.589, 1.4 ) }
    dend_34 { pt3dadd( -21.4324, -145.773, 23.5052, 1.47 ) }
    dend_34 { pt3dadd( -21.9607, -147.067, 23.3944, 0.74 ) }
    dend_34 { pt3dadd( -22.3691, -148.075, 23.2992, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 27/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -10.8495, -71.3887, 18.9836, 0.44 ) }
    dend_33 { pt3dadd( -9.99882, -72.1942, 19.2558, 0.44 ) }
    dend_33 { pt3dadd( -9.49992, -72.8622, 19.4723, 0.44 ) }
    dend_33 { pt3dadd( -9.15689, -73.691, 19.7241, 0.37 ) }
    dend_33 { pt3dadd( -8.81788, -75.2663, 20.1292, 0.59 ) }
    dend_33 { pt3dadd( -8.78134, -75.8687, 20.2648, 0.52 ) }
    dend_33 { pt3dadd( -8.81673, -76.6332, 20.4317, 0.44 ) }
    dend_33 { pt3dadd( -9.06627, -77.8435, 20.7667, 0.44 ) }
    dend_33 { pt3dadd( -9.39721, -78.8506, 21.1278, 0.44 ) }
    dend_33 { pt3dadd( -9.66145, -79.4561, 21.4187, 0.59 ) }
    dend_33 { pt3dadd( -10.025, -80.1481, 21.9027, 0.59 ) }
    dend_33 { pt3dadd( -10.3292, -80.7456, 22.5915, 0.37 ) }
    dend_33 { pt3dadd( -10.6311, -81.4288, 23.7127, 0.59 ) }
    dend_33 { pt3dadd( -10.822, -81.9759, 24.8332, 0.88 ) }
    dend_33 { pt3dadd( -10.9256, -82.288, 25.5682, 0.81 ) }
    dend_33 { pt3dadd( -11.1354, -82.8858, 27.0552, 1.03 ) }
    dend_33 { pt3dadd( -11.3608, -83.4816, 28.5305, 0.88 ) }
    dend_33 { pt3dadd( -11.6153, -84.0407, 29.7776, 0.44 ) }
    dend_33 { pt3dadd( -11.8866, -84.5678, 30.6924, 0.44 ) }
    dend_33 { pt3dadd( -12.1042, -84.9733, 31.221, 0.66 ) }
    dend_33 { pt3dadd( -12.4753, -85.5584, 31.8209, 0.66 ) }
    dend_33 { pt3dadd( -12.8854, -86.063, 32.2168, 0.66 ) }
    dend_33 { pt3dadd( -13.5599, -86.7564, 32.6445, 0.66 ) }
    dend_33 { pt3dadd( -14.1667, -87.3458, 32.9728, 1.33 ) }
    dend_33 { pt3dadd( -14.4479, -87.6233, 33.1003, 1.47 ) }
    dend_33 { pt3dadd( -14.9994, -88.1726, 33.3392, 1.03 ) }
    dend_33 { pt3dadd( -15.6905, -88.8812, 33.643, 0.81 ) }
    dend_33 { pt3dadd( -16.2681, -89.4809, 33.9123, 0.74 ) }
    dend_33 { pt3dadd( -16.9466, -90.2031, 34.2565, 0.52 ) }
    dend_33 { pt3dadd( -17.4195, -90.741, 34.5149, 0.44 ) }
    dend_33 { pt3dadd( -19.1264, -97.8308, 40.1334, 0.44 ) }
    dend_33 { pt3dadd( -20.0257, -105.576, 45.0681, 0.44 ) }
    dend_33 { pt3dadd( -21.7678, -113.165, 50.0173, 0.44 ) }
    dend_33 { pt3dadd( -25.4745, -119.957, 55.0024, 0.44 ) }
    dend_33 { pt3dadd( -28.4082, -125.814, 61.4171, 0.44 ) }
    dend_33 { pt3dadd( -30.3264, -131.884, 68.0183, 0.44 ) }
    dend_33 { pt3dadd( -32.6204, -138.117, 74.3517, 0.44 ) }
    dend_33 { pt3dadd( -36.7902, -143.606, 80.3876, 0.44 ) }
    dend_33 { pt3dadd( -42.7961, -148.032, 85.6663, 0.44 ) }
    // Section: dend_17, id: dend_17, parent: dend_0 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 5.99485, -24.6701, -4.15544, 1.47 ) }
    dend_17 { pt3dadd( 5.57264, -25.9183, -4.37936, 1.47 ) }
    dend_17 { pt3dadd( 5.15152, -27.5196, -4.5603, 1.33 ) }
    dend_17 { pt3dadd( 4.88654, -28.7922, -4.62204, 1.55 ) }
    dend_17 { pt3dadd( 4.72414, -29.8216, -4.59631, 1.55 ) }
    dend_17 { pt3dadd( 4.60355, -30.8849, -4.45077, 1.77 ) }
    dend_17 { pt3dadd( 4.48319, -32.2416, -4.13065, 1.77 ) }
    dend_17 { pt3dadd( 4.45035, -33.0743, -3.82531, 2.14 ) }
    dend_17 { pt3dadd( 4.43372, -33.7671, -3.49656, 2.58 ) }
    dend_17 { pt3dadd( 4.40533, -34.6528, -3.05094, 2.36 ) }
    dend_17 { pt3dadd( 4.31197, -36.2819, -2.30601, 1.77 ) }
    dend_17 { pt3dadd( 4.18598, -37.6935, -1.80278, 1.47 ) }
    dend_17 { pt3dadd( 4.06106, -38.8835, -1.53374, 1.18 ) }
    dend_17 { pt3dadd( 3.93288, -40.1522, -1.37881, 1.11 ) }
    dend_17 { pt3dadd( 3.83308, -41.2844, -1.35779, 1.33 ) }
    dend_17 { pt3dadd( 3.73123, -42.8333, -1.49816, 1.25 ) }
    dend_17 { pt3dadd( 3.70123, -44.1914, -1.74746, 1.47 ) }
    dend_17 { pt3dadd( 3.73509, -45.4079, -2.01706, 1.62 ) }
    dend_17 { pt3dadd( 3.79022, -46.3203, -2.22695, 2.14 ) }
    dend_17 { pt3dadd( 3.82647, -46.9497, -2.35975, 2.58 ) }
    dend_17 { pt3dadd( 3.8463, -47.8542, -2.51176, 2.43 ) }
    dend_17 { pt3dadd( 3.80201, -49.3105, -2.69186, 2.14 ) }
    dend_17 { pt3dadd( 3.69216, -50.4874, -2.80544, 1.92 ) }
    dend_17 { pt3dadd( 3.49676, -51.6563, -2.89, 1.47 ) }
    dend_17 { pt3dadd( 3.13982, -53.1027, -2.97364, 1.25 ) }
    dend_17 { pt3dadd( 2.76542, -54.2965, -2.99266, 1.11 ) }
    dend_17 { pt3dadd( 2.42676, -55.1896, -2.95865, 1.4 ) }
    dend_17 { pt3dadd( 2.18137, -55.7639, -2.91291, 1.55 ) }
    dend_17 { pt3dadd( 1.80042, -56.64, -2.80368, 1.18 ) }
    dend_17 { pt3dadd( 1.45077, -57.5325, -2.64265, 0.88 ) }
    dend_17 { pt3dadd( 1.14602, -58.4701, -2.48135, 1.18 ) }
    dend_17 { pt3dadd( 0.917069, -59.3863, -2.33783, 1.03 ) }
    dend_17 { pt3dadd( 0.735982, -60.248, -2.2024, 1.03 ) }
    dend_17 { pt3dadd( 0.52376, -61.5249, -2.02373, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_17 { pt3dadd( 0.43814, -62.3357, -1.93504, 1.77 ) }
    dend_17 { pt3dadd( 0.371827, -63.6116, -1.85662, 1.77 ) }
    dend_17 { pt3dadd( 0.341548, -64.5953, -1.8742, 2.06 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 3/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.99485, -24.6701, -4.15544, 1.77 ) }
    dend_1 { pt3dadd( 6.46313, -26.8117, -4.65292, 1.77 ) }
    dend_1 { pt3dadd( 6.67258, -27.8837, -4.88519, 1.99 ) }
    dend_1 { pt3dadd( 6.91343, -29.1163, -5.15226, 1.99 ) }
    dend_1 { pt3dadd( 7.24204, -30.7981, -5.51667, 3.17 ) }
    dend_1 { pt3dadd( 7.39007, -31.5557, -5.68082, 3.76 ) }
    dend_1 { pt3dadd( 7.64336, -32.8521, -5.9617, 4.2 ) }
    dend_1 { pt3dadd( 7.78404, -33.9991, -6.16143, 3.9 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 4.48557, 41.4011, -0.359339, 0.205351 ) }
    axon_1 { pt3dadd( 5.97663, 56.3268, -0.359339, 0.205351 ) }
    axon_1 { pt3dadd( 7.46769, 71.2525, -0.359339, 0.205351 ) }
    // Section: dend_85, id: dend_85, parent: dend_79 (entry count 14/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -46.1651, 99.0176, -21.9996, 0.29 ) }
    dend_85 { pt3dadd( -46.3968, 99.8992, -22.0888, 0.29 ) }
    dend_85 { pt3dadd( -46.6347, 101.247, -22.4796, 0.29 ) }
    dend_85 { pt3dadd( -46.7706, 102.464, -22.8858, 0.29 ) }
    dend_85 { pt3dadd( -46.8397, 103.78, -23.3628, 0.29 ) }
    dend_85 { pt3dadd( -46.8513, 104.728, -23.7355, 0.29 ) }
    dend_85 { pt3dadd( -46.8478, 106.289, -24.3476, 0.29 ) }
    dend_85 { pt3dadd( -46.7466, 109.103, -25.5826, 0.29 ) }
    dend_85 { pt3dadd( -46.7008, 109.972, -25.9921, 0.37 ) }
    dend_85 { pt3dadd( -46.6521, 111.02, -26.5121, 0.37 ) }
    dend_85 { pt3dadd( -46.6125, 112.311, -27.1918, 0.37 ) }
    dend_85 { pt3dadd( -46.5749, 113.375, -27.7571, 0.22 ) }
    dend_85 { pt3dadd( -46.5505, 114.481, -28.3241, 0.22 ) }
    dend_85 { pt3dadd( -46.634, 115.669, -28.8158, 1.03 ) }
    dend_85 { pt3dadd( -46.6727, 115.881, -28.9098, 1.03 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 29/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -46.1651, 99.0176, -21.9996, 0.52 ) }
    dend_80 { pt3dadd( -47.3895, 100.199, -21.4887, 0.52 ) }
    dend_80 { pt3dadd( -47.9481, 100.829, -21.215, 0.52 ) }
    dend_80 { pt3dadd( -48.5019, 101.565, -20.9291, 0.44 ) }
    dend_80 { pt3dadd( -48.7454, 101.943, -20.8018, 0.59 ) }
    dend_80 { pt3dadd( -49.0015, 102.405, -20.6642, 0.59 ) }
    dend_80 { pt3dadd( -49.4662, 103.293, -20.3976, 0.37 ) }
    dend_80 { pt3dadd( -50.0031, 104.453, -20.1296, 0.37 ) }
    dend_80 { pt3dadd( -50.3209, 105.205, -19.9464, 0.37 ) }
    dend_80 { pt3dadd( -50.6427, 105.961, -19.754, 0.37 ) }
    dend_80 { pt3dadd( -51.0021, 106.788, -19.522, 0.29 ) }
    dend_80 { pt3dadd( -51.341, 107.528, -19.3003, 0.29 ) }
    dend_80 { pt3dadd( -51.7421, 108.301, -19.0517, 0.81 ) }
    dend_80 { pt3dadd( -51.9375, 108.607, -18.9504, 0.81 ) }
    dend_80 { pt3dadd( -52.2806, 109.066, -18.7885, 0.74 ) }
    dend_80 { pt3dadd( -52.7669, 109.643, -18.6159, 0.74 ) }
    dend_80 { pt3dadd( -53.2101, 110.094, -18.5412, 0.96 ) }
    dend_80 { pt3dadd( -53.6743, 110.515, -18.5455, 0.96 ) }
    dend_80 { pt3dadd( -53.9915, 110.797, -18.5977, 0.59 ) }
    dend_80 { pt3dadd( -54.6137, 111.391, -18.7978, 0.29 ) }
    dend_80 { pt3dadd( -55.1917, 112.005, -19.0939, 0.29 ) }
    dend_80 { pt3dadd( -55.8166, 112.733, -19.5029, 0.29 ) }
    dend_80 { pt3dadd( -56.2534, 113.285, -19.8113, 0.22 ) }
    dend_80 { pt3dadd( -56.9054, 114.147, -20.2866, 0.22 ) }
    dend_80 { pt3dadd( -57.4138, 114.856, -20.6674, 0.74 ) }
    dend_80 { pt3dadd( -57.9846, 115.702, -21.0683, 0.37 ) }
    dend_80 { pt3dadd( -58.4363, 116.445, -21.3499, 0.37 ) }
    dend_80 { pt3dadd( -58.8453, 117.181, -21.5876, 0.81 ) }
    dend_80 { pt3dadd( -59.138, 117.678, -21.7493, 1.18 ) }
    dend_80 { pt3dadd( -59.4222, 118.064, -21.8741, 1.18 ) }
    dend_80 { pt3dadd( -60.1617, 118.882, -22.1733, 0.29 ) }
    dend_80 { pt3dadd( -60.9497, 119.691, -22.4746, 0.29 ) }
    dend_80 { pt3dadd( -61.4552, 120.175, -22.6823, 0.29 ) }
    dend_80 { pt3dadd( -61.975, 120.637, -22.9129, 0.29 ) }
    dend_80 { pt3dadd( -62.7495, 121.267, -23.2485, 0.74 ) }
    dend_80 { pt3dadd( -63.3148, 121.633, -23.4849, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 65/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 125.957, 29.2954, 39.8774, 0.29 ) }
    dend_71 { pt3dadd( 133.479, 29.0635, 43.4139, 0.29 ) }
    dend_71 { pt3dadd( 140.852, 28.5735, 47.2259, 0.29 ) }
    dend_71 { pt3dadd( 148.411, 29.108, 50.661, 0.29 ) }
    dend_71 { pt3dadd( 155.536, 30.5794, 54.7182, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 70/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 125.957, 29.2954, 39.8774, 0.29 ) }
    dend_70 { pt3dadd( 135.834, 28.6208, 43.4841, 0.29 ) }
    dend_70 { pt3dadd( 145.581, 29.8245, 47.3333, 0.29 ) }
    dend_70 { pt3dadd( 155.695, 31.9936, 49.4092, 0.29 ) }
    dend_70 { pt3dadd( 165.067, 35.0437, 53.235, 0.29 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 75/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 69.3672, 44.5301, 10.8662, 0.44 ) }
    dend_58 { pt3dadd( 70.5355, 44.5759, 10.7539, 0.44 ) }
    dend_58 { pt3dadd( 70.9837, 44.6525, 10.6446, 0.37 ) }
    dend_58 { pt3dadd( 71.7857, 44.8667, 10.4003, 0.59 ) }
    dend_58 { pt3dadd( 72.2219, 45.0042, 10.2595, 0.74 ) }
    dend_58 { pt3dadd( 73.3338, 45.3927, 9.9102, 0.37 ) }
    dend_58 { pt3dadd( 74.471, 45.8244, 9.57333, 0.29 ) }
    dend_58 { pt3dadd( 75.1464, 46.1616, 9.33586, 0.29 ) }
    dend_58 { pt3dadd( 75.621, 46.4433, 9.18346, 0.88 ) }
    dend_58 { pt3dadd( 75.7937, 46.5624, 9.12747, 1.11 ) }
    dend_58 { pt3dadd( 76.2135, 46.8756, 9.01086, 1.11 ) }
    dend_58 { pt3dadd( 76.5885, 47.1695, 8.97677, 1.18 ) }
    dend_58 { pt3dadd( 77.2546, 47.6139, 9.0534, 0.74 ) }
    dend_58 { pt3dadd( 77.7023, 47.9043, 9.13039, 0.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 89/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 69.3672, 44.5301, 10.8662, 0.29 ) }
    dend_55 { pt3dadd( 69.9361, 45.4869, 11.0644, 0.29 ) }
    dend_55 { pt3dadd( 70.1962, 45.9456, 11.1691, 0.29 ) }
    dend_55 { pt3dadd( 70.5293, 46.533, 11.3031, 0.66 ) }
    dend_55 { pt3dadd( 70.8889, 47.1673, 11.4478, 0.29 ) }
    dend_55 { pt3dadd( 71.1582, 47.6421, 11.5562, 0.29 ) }
    dend_55 { pt3dadd( 71.6979, 48.5939, 11.7733, 0.29 ) }
    dend_55 { pt3dadd( 71.9826, 49.1283, 11.9501, 0.29 ) }
    dend_55 { pt3dadd( 77.0092, 56.5207, 13.2956, 0.29 ) }
    dend_55 { pt3dadd( 80.8899, 64.5936, 14.6311, 0.29 ) }
    dend_55 { pt3dadd( 84.1541, 73.0827, 14.4495, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_55 { pt3dadd( 88.065, 81.238, 15.1388, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 1/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -61.2646, -57.654, -67.4988, 0.81 ) }
    dend_48 { pt3dadd( -61.5357, -59.0193, -69.6783, 0.81 ) }
    dend_48 { pt3dadd( -61.6067, -59.1978, -69.9615, 0.81 ) }
    dend_48 { pt3dadd( -62.6725, -61.0967, -72.7784, 0.37 ) }
    dend_48 { pt3dadd( -63.0093, -61.6186, -73.4676, 0.52 ) }
    dend_48 { pt3dadd( -63.3361, -62.1212, -74.1038, 0.66 ) }
    dend_48 { pt3dadd( -63.7073, -62.7216, -74.8351, 0.66 ) }
    dend_48 { pt3dadd( -64.5696, -63.9513, -76.2212, 0.37 ) }
    dend_48 { pt3dadd( -65.1189, -64.7107, -77.1104, 0.37 ) }
    dend_48 { pt3dadd( -65.9794, -65.8467, -78.4396, 0.37 ) }
    dend_48 { pt3dadd( -66.507, -66.5369, -79.2857, 0.66 ) }
    dend_48 { pt3dadd( -67.3564, -67.6288, -80.6199, 1.11 ) }
    dend_48 { pt3dadd( -67.7625, -68.1316, -81.2081, 1.25 ) }
    dend_48 { pt3dadd( -69.1525, -69.6783, -83.2182, 0.22 ) }
    dend_48 { pt3dadd( -69.7453, -70.2252, -84.0295, 0.29 ) }
    dend_48 { pt3dadd( -70.2758, -70.625, -84.7023, 0.59 ) }
    dend_48 { pt3dadd( -70.8883, -71.0391, -85.4094, 0.81 ) }
    dend_48 { pt3dadd( -71.5353, -71.4843, -86.1728, 0.81 ) }
    dend_48 { pt3dadd( -73.1726, -72.8414, -88.1693, 0.37 ) }
    dend_48 { pt3dadd( -73.641, -73.3189, -88.7479, 0.37 ) }
    dend_48 { pt3dadd( -74.3635, -74.304, -89.8015, 0.59 ) }
    dend_48 { pt3dadd( -74.6145, -74.7437, -90.2122, 0.81 ) }
    dend_48 { pt3dadd( -75.4596, -76.5876, -91.6829, 0.44 ) }
    dend_48 { pt3dadd( -76.0032, -78.0237, -92.6205, 0.44 ) }
    dend_48 { pt3dadd( -76.4204, -79.2749, -93.2846, 0.37 ) }
    dend_48 { pt3dadd( -76.9125, -80.8446, -94.0648, 0.37 ) }
    dend_48 { pt3dadd( -77.2825, -82.0001, -94.6362, 0.66 ) }
    dend_48 { pt3dadd( -77.5988, -82.8539, -95.0903, 0.81 ) }
    dend_48 { pt3dadd( -77.9245, -83.6486, -95.4914, 0.81 ) }
    dend_48 { pt3dadd( -78.5525, -85.0499, -96.2287, 0.29 ) }
    dend_48 { pt3dadd( -78.9296, -85.8251, -96.6204, 0.96 ) }
    dend_48 { pt3dadd( -79.8695, -87.6639, -97.4381, 0.29 ) }
    dend_48 { pt3dadd( -80.4656, -88.8686, -97.9238, 0.29 ) }
    dend_48 { pt3dadd( -81.0584, -90.0833, -98.3367, 0.44 ) }
    dend_48 { pt3dadd( -81.3999, -90.7591, -98.5499, 0.44 ) }
    dend_48 { pt3dadd( -81.9598, -91.8511, -98.8328, 0.29 ) }
    dend_48 { pt3dadd( -82.265, -92.4559, -99.0199, 0.59 ) }
    dend_48 { pt3dadd( -82.718, -93.4467, -99.3367, 0.59 ) }
    dend_48 { pt3dadd( -83.124, -94.4302, -99.7042, 0.52 ) }
    dend_48 { pt3dadd( -83.7851, -95.9008, -100.351, 0.37 ) }
    dend_48 { pt3dadd( -84.2133, -96.8142, -100.797, 0.88 ) }
    dend_48 { pt3dadd( -85.0167, -98.5098, -101.675, 0.44 ) }
    dend_48 { pt3dadd( -85.4595, -99.4839, -102.175, 0.59 ) }
    dend_48 { pt3dadd( -85.8197, -100.287, -102.576, 0.59 ) }
    dend_48 { pt3dadd( -86.2501, -101.268, -103.013, 0.59 ) }
    dend_48 { pt3dadd( -86.7009, -102.28, -103.377, 0.37 ) }
    dend_48 { pt3dadd( -87.0808, -103.015, -103.581, 0.37 ) }
    dend_48 { pt3dadd( -87.7414, -104.104, -103.756, 0.29 ) }
    dend_48 { pt3dadd( -87.9998, -104.485, -103.779, 0.29 ) }
    dend_48 { pt3dadd( -88.6665, -105.454, -103.75, 0.88 ) }
    dend_48 { pt3dadd( -89.1152, -106.125, -103.676, 1.18 ) }
    dend_48 { pt3dadd( -89.8878, -107.178, -103.498, 0.29 ) }
    dend_48 { pt3dadd( -90.4674, -107.905, -103.364, 0.29 ) }
    dend_48 { pt3dadd( -91.3362, -108.978, -103.239, 0.29 ) }
    dend_48 { pt3dadd( -91.7274, -109.488, -103.211, 0.88 ) }
    dend_48 { pt3dadd( -92.1027, -110.005, -103.223, 0.88 ) }
    dend_48 { pt3dadd( -93.3237, -111.718, -103.428, 0.22 ) }
    dend_48 { pt3dadd( -93.734, -112.299, -103.566, 0.22 ) }
    dend_48 { pt3dadd( -94.6461, -113.533, -103.946, 0.59 ) }
    dend_48 { pt3dadd( -94.8502, -113.801, -104.049, 0.59 ) }
    dend_48 { pt3dadd( -95.6765, -114.866, -104.482, 0.22 ) }
    dend_48 { pt3dadd( -96.1486, -115.484, -104.75, 0.44 ) }
    dend_48 { pt3dadd( -96.7907, -116.421, -105.187, 0.22 ) }
    dend_48 { pt3dadd( -97.6791, -117.704, -105.772, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 65/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -61.2646, -57.654, -67.4988, 0.29 ) }
    dend_47 { pt3dadd( -62.1871, -57.8545, -67.5208, 0.29 ) }
    dend_47 { pt3dadd( -62.7539, -58.015, -67.5132, 0.29 ) }
    dend_47 { pt3dadd( -63.3066, -58.1966, -67.5142, 0.66 ) }
    dend_47 { pt3dadd( -63.5684, -58.2986, -67.5193, 0.66 ) }
    dend_47 { pt3dadd( -64.4862, -58.6908, -67.535, 0.29 ) }
    dend_47 { pt3dadd( -64.8809, -58.8675, -67.5466, 0.29 ) }
    dend_47 { pt3dadd( -65.1718, -59.0215, -67.5294, 0.66 ) }
    dend_47 { pt3dadd( -65.4467, -59.1826, -67.5095, 0.66 ) }
    dend_47 { pt3dadd( -66.3844, -59.7578, -67.4427, 0.29 ) }
    dend_47 { pt3dadd( -66.7185, -59.9471, -67.4242, 0.52 ) }
    dend_47 { pt3dadd( -67.0413, -60.1072, -67.4158, 0.52 ) }
    dend_47 { pt3dadd( -67.9439, -60.4759, -67.3787, 0.22 ) }
    dend_47 { pt3dadd( -68.3678, -60.6185, -67.3547, 0.59 ) }
    dend_47 { pt3dadd( -68.6424, -60.6966, -67.3271, 0.74 ) }
    dend_47 { pt3dadd( -69.1804, -60.8169, -67.2667, 0.29 ) }
    dend_47 { pt3dadd( -69.4534, -60.8662, -67.2385, 0.29 ) }
    dend_47 { pt3dadd( -69.8126, -60.913, -67.2024, 0.96 ) }
    dend_47 { pt3dadd( -70.1668, -60.925, -67.1928, 0.96 ) }
    dend_47 { pt3dadd( -71.1368, -60.9473, -67.135, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 85/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -22.3691, -148.075, 23.2992, 0.29 ) }
    dend_40 { pt3dadd( -22.3363, -148.056, 23.9079, 0.29 ) }
    dend_40 { pt3dadd( -22.2227, -148.054, 25.2357, 0.29 ) }
    dend_40 { pt3dadd( -22.1415, -148.089, 26.1831, 0.59 ) }
    dend_40 { pt3dadd( -22.0503, -148.227, 27.4999, 0.66 ) }
    dend_40 { pt3dadd( -21.9098, -148.565, 29.3436, 0.59 ) }
    dend_40 { pt3dadd( -21.7918, -148.928, 30.5524, 0.29 ) }
    dend_40 { pt3dadd( -21.6645, -149.301, 31.2703, 0.52 ) }
    dend_40 { pt3dadd( -21.5476, -149.772, 31.5446, 0.66 ) }
    dend_40 { pt3dadd( -21.3075, -150.837, 31.6816, 0.37 ) }
    dend_40 { pt3dadd( -20.9827, -152.215, 31.6784, 0.29 ) }
    dend_40 { pt3dadd( -20.7227, -153.311, 31.5988, 0.29 ) }
    dend_40 { pt3dadd( -20.4695, -154.402, 31.4641, 0.29 ) }
    dend_40 { pt3dadd( -20.224, -155.393, 31.3299, 0.29 ) }
    dend_40 { pt3dadd( -19.8802, -156.561, 31.1749, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_40 { pt3dadd( -19.538, -157.556, 31.0533, 0.29 ) }
    dend_40 { pt3dadd( -17.1847, -163.602, 37.1568, 0.29 ) }
    dend_40 { pt3dadd( -15.5908, -168.491, 44.3858, 0.29 ) }
    dend_40 { pt3dadd( -11.9859, -173.576, 50.7082, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 4/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -22.3691, -148.075, 23.2992, 0.74 ) }
    dend_35 { pt3dadd( -23.1342, -149.013, 22.9673, 0.74 ) }
    dend_35 { pt3dadd( -23.801, -149.983, 22.6781, 0.52 ) }
    dend_35 { pt3dadd( -24.307, -150.807, 22.4683, 0.52 ) }
    dend_35 { pt3dadd( -25.0965, -152.315, 22.1562, 0.59 ) }
    dend_35 { pt3dadd( -25.4117, -153.083, 22.0661, 0.96 ) }
    dend_35 { pt3dadd( -25.6502, -153.918, 21.9985, 1.18 ) }
    dend_35 { pt3dadd( -25.7289, -154.628, 21.9008, 1.18 ) }
    dend_35 { pt3dadd( -25.698, -155.3, 21.8046, 0.96 ) }
    dend_35 { pt3dadd( -25.5244, -156.284, 21.5985, 0.66 ) }
    dend_35 { pt3dadd( -25.1162, -157.676, 21.0731, 0.52 ) }
    dend_35 { pt3dadd( -24.6573, -158.92, 20.5091, 0.52 ) }
    dend_35 { pt3dadd( -24.0687, -160.234, 19.7816, 0.29 ) }
    dend_35 { pt3dadd( -23.8039, -160.726, 19.4472, 0.37 ) }
    dend_35 { pt3dadd( -23.077, -161.862, 18.4529, 0.29 ) }
    dend_35 { pt3dadd( -22.2967, -162.879, 17.1914, 0.29 ) }
    dend_35 { pt3dadd( -22.7045, -174.031, 14.7523, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_17 (entry count 21/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.341548, -64.5953, -1.8742, 0.37 ) }
    dend_31 { pt3dadd( -3.24468, -66.2381, -1.13725, 0.37 ) }
    dend_31 { pt3dadd( -4.88263, -67.0518, -0.230971, 0.37 ) }
    dend_31 { pt3dadd( -6.07382, -67.6749, 0.606004, 0.37 ) }
    dend_31 { pt3dadd( -6.88042, -68.1089, 1.1911, 0.37 ) }
    dend_31 { pt3dadd( -7.89221, -68.6681, 1.97274, 0.59 ) }
    dend_31 { pt3dadd( -8.87114, -69.2255, 2.74205, 0.74 ) }
    dend_31 { pt3dadd( -9.60768, -69.6437, 3.49035, 0.52 ) }
    dend_31 { pt3dadd( -10.1633, -69.9659, 4.06266, 0.59 ) }
    dend_31 { pt3dadd( -10.6605, -70.3146, 4.5377, 0.74 ) }
    dend_31 { pt3dadd( -11.5293, -70.9256, 5.23733, 0.52 ) }
    dend_31 { pt3dadd( -12.0847, -71.2992, 5.60219, 0.52 ) }
    dend_31 { pt3dadd( -12.6138, -71.6235, 5.88499, 0.74 ) }
    dend_31 { pt3dadd( -13.2116, -71.9683, 6.17248, 0.74 ) }
    dend_31 { pt3dadd( -13.7835, -72.3078, 6.43551, 0.52 ) }
    dend_31 { pt3dadd( -14.614, -72.7956, 6.80417, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 0.341548, -64.5953, -1.8742, 0.88 ) }
    dend_18 { pt3dadd( 0.205253, -65.3753, -1.88925, 0.88 ) }
    dend_18 { pt3dadd( -0.0751157, -66.3548, -1.82916, 0.66 ) }
    dend_18 { pt3dadd( -0.376507, -67.0383, -1.63031, 0.74 ) }
    dend_18 { pt3dadd( -0.64015, -67.4915, -1.44522, 0.88 ) }
    dend_18 { pt3dadd( -1.10329, -68.1777, -1.14405, 0.88 ) }
    dend_18 { pt3dadd( -1.39865, -68.5931, -0.964931, 1.03 ) }
    dend_18 { pt3dadd( -1.7624, -69.0461, -0.734812, 1.03 ) }
    dend_18 { pt3dadd( -2.5906, -70.1001, -0.182348, 1.03 ) }
    dend_18 { pt3dadd( -3.05932, -70.763, 0.138796, 1.03 ) }
    dend_18 { pt3dadd( -3.43987, -71.433, 0.414735, 0.88 ) }
    dend_18 { pt3dadd( -3.64567, -72.0082, 0.591003, 0.88 ) }
    dend_18 { pt3dadd( -3.70568, -72.5442, 0.719404, 0.88 ) }
    dend_18 { pt3dadd( -3.55931, -73.5844, 0.868163, 1.25 ) }
    dend_18 { pt3dadd( -3.44246, -73.9623, 0.907433, 1.55 ) }
    dend_18 { pt3dadd( -3.21716, -74.4914, 0.991657, 1.55 ) }
    dend_18 { pt3dadd( -2.84965, -75.2204, 1.18767, 1.55 ) }
    dend_18 { pt3dadd( -2.59274, -75.6712, 1.37158, 1.55 ) }
    dend_18 { pt3dadd( -2.10333, -76.4451, 1.81162, 1.03 ) }
    dend_18 { pt3dadd( -1.71037, -76.9923, 2.2392, 1.03 ) }
    dend_18 { pt3dadd( -1.37667, -77.42, 2.63763, 0.81 ) }
    dend_18 { pt3dadd( -0.836649, -78.0492, 3.33184, 0.81 ) }
    dend_18 { pt3dadd( -0.451876, -78.4589, 3.83872, 1.03 ) }
    dend_18 { pt3dadd( -0.0713485, -78.8141, 4.30638, 1.03 ) }
    dend_18 { pt3dadd( 0.371689, -79.1816, 4.79439, 1.03 ) }
    dend_18 { pt3dadd( 0.745956, -79.4846, 5.1405, 0.88 ) }
    dend_18 { pt3dadd( 1.33034, -79.9896, 5.6107, 0.88 ) }
    dend_18 { pt3dadd( 1.62811, -80.2636, 5.81283, 0.96 ) }
    dend_18 { pt3dadd( 1.97418, -80.6207, 6.02681, 0.96 ) }
    dend_18 { pt3dadd( 2.44731, -81.1682, 6.30165, 1.33 ) }
    dend_18 { pt3dadd( 2.70006, -81.4994, 6.43421, 1.62 ) }
    dend_18 { pt3dadd( 2.91031, -81.8007, 6.54488, 1.62 ) }
    // Section: dend_16, id: dend_16, parent: dend_1 (entry count 69/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 7.78404, -33.9991, -6.16143, 0.66 ) }
    dend_16 { pt3dadd( 8.2146, -37.3638, -3.50499, 0.66 ) }
    dend_16 { pt3dadd( 8.26634, -38.4698, -2.74182, 0.88 ) }
    dend_16 { pt3dadd( 8.34615, -40.6682, -1.42095, 1.03 ) }
    dend_16 { pt3dadd( 8.41078, -41.7162, -0.848529, 1.03 ) }
    dend_16 { pt3dadd( 8.50343, -42.6392, -0.367278, 1.03 ) }
    dend_16 { pt3dadd( 8.67125, -43.7774, 0.215788, 0.37 ) }
    dend_16 { pt3dadd( 8.8431, -45.0042, 0.705639, 0.37 ) }
    dend_16 { pt3dadd( 9.18893, -46.2249, 1.15861, 0.59 ) }
    dend_16 { pt3dadd( 9.8112, -47.2653, 1.50673, 0.81 ) }
    dend_16 { pt3dadd( 10.3476, -47.8477, 1.75173, 0.81 ) }
    dend_16 { pt3dadd( 10.9719, -48.3553, 2.0516, 0.52 ) }
    dend_16 { pt3dadd( 11.5598, -48.7628, 2.36131, 0.81 ) }
    dend_16 { pt3dadd( 12.4269, -49.3484, 2.86489, 1.25 ) }
    dend_16 { pt3dadd( 12.7706, -49.6439, 3.10977, 1.69 ) }
    dend_16 { pt3dadd( 13.1674, -50.1757, 3.48633, 1.69 ) }
    dend_16 { pt3dadd( 13.6049, -51.4784, 4.1865, 0.96 ) }
    dend_16 { pt3dadd( 13.6923, -52.3333, 4.53234, 0.66 ) }
    dend_16 { pt3dadd( 13.6976, -53.0031, 4.76483, 0.81 ) }
    dend_16 { pt3dadd( 13.6738, -54.4081, 5.23419, 0.44 ) }
    dend_16 { pt3dadd( 13.7115, -55.5227, 5.62361, 0.44 ) }
    dend_16 { pt3dadd( 13.8121, -56.3998, 5.94442, 0.44 ) }
    dend_16 { pt3dadd( 14.0299, -57.1842, 6.32014, 0.88 ) }
    dend_16 { pt3dadd( 14.5477, -58.1963, 7.04357, 1.25 ) }
    dend_16 { pt3dadd( 15.2267, -59.1321, 7.90149, 0.66 ) }
    dend_16 { pt3dadd( 15.8613, -59.8378, 8.63377, 0.52 ) }
    dend_16 { pt3dadd( 16.2519, -60.2499, 9.06523, 0.52 ) }
    dend_16 { pt3dadd( 17.2005, -61.317, 10.1355, 0.74 ) }
    dend_16 { pt3dadd( 17.9659, -62.2738, 10.9905, 1.25 ) }
    dend_16 { pt3dadd( 18.2621, -62.6869, 11.29, 1.25 ) }
    dend_16 { pt3dadd( 18.7314, -63.4024, 11.693, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 19.3026, -64.3336, 12.0613, 0.44 ) }
    dend_16 { pt3dadd( 20.0425, -65.5718, 12.3828, 0.37 ) }
    dend_16 { pt3dadd( 20.4925, -66.3041, 12.4699, 0.37 ) }
    dend_16 { pt3dadd( 20.9717, -67.0396, 12.4998, 0.96 ) }
    dend_16 { pt3dadd( 21.3467, -67.5862, 12.5087, 1.33 ) }
    dend_16 { pt3dadd( 22.4781, -69.0702, 12.5133, 0.29 ) }
    dend_16 { pt3dadd( 22.899, -69.5479, 12.5084, 0.29 ) }
    dend_16 { pt3dadd( 23.329, -69.9767, 12.4917, 0.29 ) }
    dend_16 { pt3dadd( 23.4895, -70.1358, 12.4868, 0.44 ) }
    dend_16 { pt3dadd( 27.9555, -79.0146, 15.8936, 0.44 ) }
    dend_16 { pt3dadd( 33.748, -87.4227, 18.2897, 0.44 ) }
    dend_16 { pt3dadd( 38.5866, -96.6459, 19.7719, 0.44 ) }
    dend_16 { pt3dadd( 43.8988, -105.499, 21.7104, 0.44 ) }
    dend_16 { pt3dadd( 48.7684, -114.424, 24.3662, 0.44 ) }
    dend_16 { pt3dadd( 53.3331, -123.713, 26.2648, 0.44 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.78404, -33.9991, -6.16143, 1.03 ) }
    dend_11 { pt3dadd( 7.77341, -35.5301, -6.33348, 1.03 ) }
    dend_11 { pt3dadd( 7.91806, -37.0477, -6.50915, 1.03 ) }
    dend_11 { pt3dadd( 8.14044, -38.1423, -6.64297, 0.96 ) }
    dend_11 { pt3dadd( 8.43315, -39.1736, -6.77433, 0.96 ) }
    dend_11 { pt3dadd( 8.79404, -40.1682, -6.90599, 0.96 ) }
    dend_11 { pt3dadd( 9.0922, -40.8356, -6.97248, 1.18 ) }
    dend_11 { pt3dadd( 9.73095, -41.7257, -6.99204, 1.47 ) }
    dend_11 { pt3dadd( 10.401, -42.4241, -6.94279, 2.21 ) }
    dend_11 { pt3dadd( 10.6918, -42.6959, -6.89521, 2.21 ) }
    dend_11 { pt3dadd( 11.1511, -43.1392, -6.76301, 1.99 ) }
    dend_11 { pt3dadd( 11.9619, -44.0208, -6.42156, 1.33 ) }
    dend_11 { pt3dadd( 12.6993, -45.0137, -6.00274, 0.88 ) }
    dend_11 { pt3dadd( 13.1577, -45.8249, -5.6477, 0.74 ) }
    dend_11 { pt3dadd( 13.4447, -46.6031, -5.32847, 0.74 ) }
    dend_11 { pt3dadd( 13.6509, -47.5479, -4.98304, 1.33 ) }
    dend_11 { pt3dadd( 13.7141, -48.1274, -4.8034, 1.62 ) }
    dend_11 { pt3dadd( 13.7373, -48.7651, -4.64724, 1.92 ) }
    dend_11 { pt3dadd( 13.7427, -49.4506, -4.53215, 1.69 ) }
    dend_11 { pt3dadd( 13.803, -50.7545, -4.40105, 1.33 ) }
    dend_11 { pt3dadd( 13.951, -52.071, -4.35193, 1.03 ) }
    dend_11 { pt3dadd( 14.1226, -52.9725, -4.37119, 0.88 ) }
    dend_11 { pt3dadd( 14.3576, -53.8009, -4.42547, 1.03 ) }
    dend_11 { pt3dadd( 14.7494, -54.8777, -4.53735, 1.03 ) }
    dend_11 { pt3dadd( 15.2187, -55.9519, -4.6971, 1.03 ) }
    dend_11 { pt3dadd( 15.6561, -56.8622, -4.88522, 1.33 ) }
    dend_11 { pt3dadd( 15.9716, -57.5478, -5.06911, 1.69 ) }
    dend_11 { pt3dadd( 16.3003, -58.3841, -5.33002, 1.47 ) }
    dend_11 { pt3dadd( 16.4747, -58.9734, -5.53647, 1.03 ) }
    dend_11 { pt3dadd( 16.6472, -59.8769, -5.87207, 0.96 ) }
    dend_11 { pt3dadd( 16.7291, -60.705, -6.2043, 0.96 ) }
    dend_11 { pt3dadd( 16.757, -61.7232, -6.62044, 1.4 ) }
    dend_11 { pt3dadd( 16.7414, -62.806, -7.04961, 1.4 ) }
    dend_11 { pt3dadd( 16.7224, -63.7518, -7.41622, 1.55 ) }
    dend_11 { pt3dadd( 16.7367, -64.2649, -7.60049, 1.77 ) }
    dend_11 { pt3dadd( 16.8288, -65.2472, -7.91331, 0.96 ) }
    dend_11 { pt3dadd( 16.9961, -66.1246, -8.13978, 0.66 ) }
    dend_11 { pt3dadd( 17.2635, -66.9426, -8.26588, 0.66 ) }
    dend_11 { pt3dadd( 17.6576, -67.7218, -8.31071, 0.96 ) }
    dend_11 { pt3dadd( 18.1841, -68.4834, -8.30179, 1.11 ) }
    dend_11 { pt3dadd( 18.4687, -68.8125, -8.28908, 1.4 ) }
    dend_11 { pt3dadd( 18.7297, -69.0711, -8.27927, 1.4 ) }
    dend_11 { pt3dadd( 19.2777, -69.6084, -8.26139, 1.4 ) }
    dend_11 { pt3dadd( 19.9235, -70.3129, -8.25891, 0.66 ) }
    dend_11 { pt3dadd( 20.205, -70.6943, -8.28318, 0.52 ) }
    dend_11 { pt3dadd( 20.5181, -71.2427, -8.34419, 0.52 ) }
    dend_11 { pt3dadd( 20.9246, -72.1454, -8.43145, 0.81 ) }
    dend_11 { pt3dadd( 21.2927, -73.1581, -8.47632, 1.03 ) }
    dend_11 { pt3dadd( 21.4767, -73.8289, -8.49106, 1.03 ) }
    dend_11 { pt3dadd( 21.6551, -74.7361, -8.47501, 1.03 ) }
    dend_11 { pt3dadd( 21.7767, -75.6421, -8.49107, 1.03 ) }
    dend_11 { pt3dadd( 21.8647, -76.5856, -8.5353, 0.88 ) }
    dend_11 { pt3dadd( 21.9541, -77.7395, -8.66662, 1.03 ) }
    dend_11 { pt3dadd( 22.0442, -78.7684, -8.84992, 0.52 ) }
    dend_11 { pt3dadd( 22.1521, -79.7416, -9.09981, 0.52 ) }
    dend_11 { pt3dadd( 22.3218, -81.16, -9.60591, 0.88 ) }
    dend_11 { pt3dadd( 22.3942, -81.7391, -9.86898, 1.11 ) }
    dend_11 { pt3dadd( 22.502, -82.657, -10.3517, 0.59 ) }
    dend_11 { pt3dadd( 22.5454, -83.046, -10.5552, 0.59 ) }
    dend_11 { pt3dadd( 22.6409, -83.9192, -10.8963, 0.52 ) }
    dend_11 { pt3dadd( 22.7128, -84.8489, -11.0717, 0.52 ) }
    dend_11 { pt3dadd( 22.7145, -85.6025, -10.9903, 1.11 ) }
    dend_11 { pt3dadd( 22.6564, -86.2393, -10.8041, 1.25 ) }
    dend_11 { pt3dadd( 22.5028, -87.2012, -10.3882, 1.18 ) }
    dend_11 { pt3dadd( 22.3272, -88.1404, -9.91745, 0.52 ) }
    dend_11 { pt3dadd( 22.21, -88.7923, -9.54034, 0.52 ) }
    dend_11 { pt3dadd( 22.0891, -89.685, -9.04115, 0.52 ) }
    dend_11 { pt3dadd( 22.0576, -90.0218, -8.88705, 0.81 ) }
    dend_11 { pt3dadd( 22.0284, -90.6402, -8.69375, 0.74 ) }
    dend_11 { pt3dadd( 21.997, -91.439, -8.56853, 0.74 ) }
    dend_11 { pt3dadd( 21.9468, -92.233, -8.52301, 1.03 ) }
    dend_11 { pt3dadd( 21.8248, -93.2861, -8.54099, 0.66 ) }
    dend_11 { pt3dadd( 21.6942, -93.9815, -8.58262, 0.52 ) }
    dend_11 { pt3dadd( 21.4562, -94.7867, -8.65505, 1.11 ) }
    dend_11 { pt3dadd( 21.1818, -95.4621, -8.77343, 1.11 ) }
    dend_11 { pt3dadd( 20.7256, -96.4207, -9.01186, 0.81 ) }
    dend_11 { pt3dadd( 20.2197, -97.4219, -9.33346, 0.66 ) }
    dend_11 { pt3dadd( 19.8707, -98.1235, -9.58203, 0.88 ) }
    dend_11 { pt3dadd( 19.4461, -99.0799, -9.97319, 0.66 ) }
    dend_11 { pt3dadd( 18.9406, -100.342, -10.6145, 0.59 ) }
    dend_11 { pt3dadd( 18.6518, -101.167, -11.1081, 0.88 ) }
    dend_11 { pt3dadd( 18.431, -101.889, -11.584, 1.18 ) }
    dend_11 { pt3dadd( 18.2816, -102.412, -11.9352, 0.96 ) }
    dend_11 { pt3dadd( 18.0924, -103.103, -12.4026, 0.96 ) }
    dend_11 { pt3dadd( 17.763, -104.362, -13.1869, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_11 { pt3dadd( 17.6512, -104.777, -13.4105, 0.81 ) }
    dend_11 { pt3dadd( 17.4386, -105.589, -13.7993, 0.66 ) }
    dend_11 { pt3dadd( 17.2973, -106.207, -14.0056, 0.66 ) }
    dend_11 { pt3dadd( 17.1614, -106.968, -14.1329, 0.96 ) }
    dend_11 { pt3dadd( 17.0829, -107.899, -14.0029, 0.88 ) }
    dend_11 { pt3dadd( 17.084, -108.711, -13.7233, 0.88 ) }
    dend_11 { pt3dadd( 17.1015, -109.418, -13.4355, 0.37 ) }
    dend_11 { pt3dadd( 17.173, -110.708, -12.8732, 1.03 ) }
    dend_11 { pt3dadd( 17.2057, -111.388, -12.5928, 1.03 ) }
    dend_11 { pt3dadd( 17.2139, -112.894, -12.0059, 0.44 ) }
    dend_11 { pt3dadd( 17.1821, -113.99, -11.6937, 0.44 ) }
    dend_11 { pt3dadd( 17.155, -114.631, -11.6532, 0.74 ) }
    dend_11 { pt3dadd( 17.1408, -115.294, -11.8237, 0.74 ) }
    dend_11 { pt3dadd( 17.1509, -116.216, -12.2903, 0.44 ) }
    dend_11 { pt3dadd( 17.1896, -116.955, -12.7489, 0.66 ) }
    dend_11 { pt3dadd( 17.287, -118.02, -13.4929, 0.44 ) }
    dend_11 { pt3dadd( 17.466, -119.542, -14.5718, 0.88 ) }
    dend_11 { pt3dadd( 17.6976, -121.211, -15.6977, 0.52 ) }
    dend_11 { pt3dadd( 17.8318, -122.06, -16.2566, 0.74 ) }
    dend_11 { pt3dadd( 18.0378, -123.2, -16.9799, 1.33 ) }
    dend_11 { pt3dadd( 18.1533, -123.848, -17.3596, 1.33 ) }
    dend_11 { pt3dadd( 18.3433, -125.182, -18.0201, 0.74 ) }
    dend_11 { pt3dadd( 18.4302, -126.031, -18.3395, 0.66 ) }
    dend_11 { pt3dadd( 18.4794, -127.237, -18.6842, 0.66 ) }
    dend_11 { pt3dadd( 18.4448, -128.077, -18.8997, 0.81 ) }
    dend_11 { pt3dadd( 18.321, -128.934, -19.1139, 0.59 ) }
    dend_11 { pt3dadd( 18.1818, -129.509, -19.2348, 1.18 ) }
    dend_11 { pt3dadd( 18.0911, -129.777, -19.2849, 1.18 ) }
    dend_11 { pt3dadd( 17.7257, -130.723, -19.4412, 0.44 ) }
    dend_11 { pt3dadd( 17.4136, -131.547, -19.5043, 0.44 ) }
    dend_11 { pt3dadd( 17.1893, -132.239, -19.5192, 1.03 ) }
    dend_11 { pt3dadd( 17.09, -132.732, -19.4973, 1.4 ) }
    dend_11 { pt3dadd( 17.0573, -133.773, -19.3116, 0.52 ) }
    dend_11 { pt3dadd( 17.1043, -134.476, -19.1544, 0.52 ) }
    dend_11 { pt3dadd( 17.3071, -135.399, -18.8705, 0.74 ) }
    dend_11 { pt3dadd( 17.4228, -135.732, -18.7253, 0.74 ) }
    dend_11 { pt3dadd( 17.7151, -136.395, -18.3128, 0.59 ) }
    dend_11 { pt3dadd( 18.1282, -137.141, -17.6978, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 38/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 7.78404, -33.9991, -6.16143, 0.88 ) }
    dend_2 { pt3dadd( 10.3196, -33.9771, -9.42115, 0.88 ) }
    dend_2 { pt3dadd( 11.0712, -33.9303, -10.2563, 0.88 ) }
    dend_2 { pt3dadd( 11.8489, -33.871, -10.9973, 1.03 ) }
    dend_2 { pt3dadd( 12.3902, -33.8259, -11.4452, 1.33 ) }
    dend_2 { pt3dadd( 12.8959, -33.7874, -11.8309, 1.62 ) }
    dend_2 { pt3dadd( 13.6336, -33.7442, -12.3629, 1.84 ) }
    dend_2 { pt3dadd( 14.289, -33.6592, -12.7252, 1.47 ) }
    dend_2 { pt3dadd( 15.0371, -33.5738, -13.2707, 1.18 ) }
    dend_2 { pt3dadd( 15.5028, -33.5097, -13.942, 0.81 ) }
    dend_2 { pt3dadd( 15.9208, -33.4316, -14.8722, 0.81 ) }
    dend_2 { pt3dadd( 16.162, -33.3976, -15.5267, 1.11 ) }
    dend_2 { pt3dadd( 16.6357, -33.3948, -17.0232, 1.33 ) }
    dend_2 { pt3dadd( 17.1125, -33.4407, -18.6572, 1.77 ) }
    dend_2 { pt3dadd( 18.1843, -33.651, -22.4226, 1.47 ) }
    dend_2 { pt3dadd( 18.541, -33.7418, -23.6045, 1.11 ) }
    dend_2 { pt3dadd( 18.9293, -33.8409, -24.7455, 1.11 ) }
    dend_2 { pt3dadd( 19.5054, -33.9651, -26.1249, 0.81 ) }
    dend_2 { pt3dadd( 19.9015, -34.0379, -26.8312, 0.96 ) }
    dend_2 { pt3dadd( 20.61, -34.1055, -27.7123, 0.88 ) }
    dend_2 { pt3dadd( 21.2272, -34.0393, -28.3185, 0.74 ) }
    dend_2 { pt3dadd( 21.6859, -33.8646, -28.8206, 0.59 ) }
    dend_2 { pt3dadd( 22.2402, -33.4779, -29.5745, 1.03 ) }
    dend_2 { pt3dadd( 22.6414, -33.1132, -30.1652, 1.55 ) }
    dend_2 { pt3dadd( 23.0068, -32.755, -30.7183, 1.69 ) }
    dend_2 { pt3dadd( 24.0825, -31.6747, -32.4235, 1.69 ) }
    dend_2 { pt3dadd( 24.4101, -31.357, -32.9664, 1.69 ) }
    dend_2 { pt3dadd( 25.238, -30.6264, -34.314, 0.88 ) }
    dend_2 { pt3dadd( 25.7226, -30.2753, -35.0382, 0.81 ) }
    dend_2 { pt3dadd( 26.3346, -29.9478, -35.8144, 1.11 ) }
    dend_2 { pt3dadd( 27.1748, -29.6535, -36.7076, 1.18 ) }
    dend_2 { pt3dadd( 27.9855, -29.5302, -37.3844, 0.59 ) }
    dend_2 { pt3dadd( 28.3568, -29.536, -37.664, 0.59 ) }
    dend_2 { pt3dadd( 29.295, -29.7304, -38.2452, 0.96 ) }
    dend_2 { pt3dadd( 29.9763, -30.0017, -38.6364, 1.18 ) }
    dend_2 { pt3dadd( 30.5694, -30.3348, -38.9299, 1.18 ) }
    dend_2 { pt3dadd( 31.1919, -30.7414, -39.1714, 1.4 ) }
    dend_2 { pt3dadd( 31.9192, -31.2496, -39.413, 1.4 ) }
    dend_2 { pt3dadd( 32.5974, -31.7033, -39.6266, 1.11 ) }
    dend_2 { pt3dadd( 33.0792, -31.9765, -39.7665, 1.11 ) }
    dend_2 { pt3dadd( 33.6731, -32.2131, -39.9338, 1.03 ) }
    dend_2 { pt3dadd( 34.4512, -32.4024, -40.145, 1.03 ) }
    dend_2 { pt3dadd( 35.1302, -32.4762, -40.3216, 1.03 ) }
    dend_2 { pt3dadd( 35.914, -32.4799, -40.5168, 0.96 ) }
    dend_2 { pt3dadd( 36.9922, -32.3942, -40.7874, 0.88 ) }
    dend_2 { pt3dadd( 38.171, -32.2308, -41.0563, 0.88 ) }
    dend_2 { pt3dadd( 38.9556, -32.0779, -41.2201, 1.03 ) }
    dend_2 { pt3dadd( 39.5689, -31.9379, -41.3574, 1.11 ) }
    dend_2 { pt3dadd( 40.0669, -31.8211, -41.4906, 1.18 ) }
    dend_2 { pt3dadd( 40.502, -31.7416, -41.6662, 1.18 ) }
    dend_2 { pt3dadd( 41.326, -31.6952, -42.2017, 0.81 ) }
    dend_2 { pt3dadd( 41.8782, -31.7721, -42.7178, 0.74 ) }
    dend_2 { pt3dadd( 42.571, -31.972, -43.4939, 1.18 ) }
    dend_2 { pt3dadd( 43.0867, -32.1653, -44.1296, 1.4 ) }
    dend_2 { pt3dadd( 44.1103, -32.5958, -45.5063, 1.18 ) }
    dend_2 { pt3dadd( 44.8812, -32.9205, -46.6168, 0.88 ) }
    dend_2 { pt3dadd( 45.4395, -33.1327, -47.5001, 0.74 ) }
    dend_2 { pt3dadd( 46.0052, -33.2952, -48.389, 0.74 ) }
    dend_2 { pt3dadd( 46.5318, -33.3622, -49.1613, 1.11 ) }
    dend_2 { pt3dadd( 47.1009, -33.3399, -49.9582, 1.4 ) }
    dend_2 { pt3dadd( 47.6743, -33.2662, -50.7258, 1.4 ) }
    dend_2 { pt3dadd( 48.4689, -33.1699, -51.809, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_2 { pt3dadd( 48.9286, -33.1445, -52.4708, 0.74 ) }
    dend_2 { pt3dadd( 49.5002, -33.2015, -53.3359, 0.66 ) }
    dend_2 { pt3dadd( 50.1766, -33.4203, -54.3963, 0.81 ) }
    dend_2 { pt3dadd( 50.8769, -33.7971, -55.4202, 0.74 ) }
    dend_2 { pt3dadd( 51.4681, -34.2005, -56.2575, 1.25 ) }
    dend_2 { pt3dadd( 51.8034, -34.4435, -56.6992, 1.69 ) }
    dend_2 { pt3dadd( 52.248, -34.734, -57.2481, 1.69 ) }
    dend_2 { pt3dadd( 52.7299, -34.9481, -57.7468, 1.4 ) }
    dend_2 { pt3dadd( 53.5088, -35.0786, -58.3919, 0.88 ) }
    dend_2 { pt3dadd( 54.6687, -34.9786, -59.2121, 0.81 ) }
    dend_2 { pt3dadd( 55.2013, -34.8718, -59.5549, 0.81 ) }
    dend_2 { pt3dadd( 55.9549, -34.7093, -59.9868, 0.81 ) }
    dend_2 { pt3dadd( 56.941, -34.5036, -60.4688, 0.81 ) }
    dend_2 { pt3dadd( 57.568, -34.4005, -60.7243, 0.81 ) }
    dend_2 { pt3dadd( 58.4668, -34.3295, -61.033, 0.81 ) }
    dend_2 { pt3dadd( 59.0831, -34.3729, -61.1912, 0.96 ) }
    dend_2 { pt3dadd( 60.0254, -34.6145, -61.4529, 0.96 ) }
    dend_2 { pt3dadd( 60.65, -34.8973, -61.688, 1.18 ) }
    dend_2 { pt3dadd( 61.1883, -35.2296, -61.9708, 1.47 ) }
    dend_2 { pt3dadd( 61.7268, -35.6054, -62.3042, 1.47 ) }
    dend_2 { pt3dadd( 62.5025, -36.1615, -62.8267, 0.74 ) }
    dend_2 { pt3dadd( 63.3983, -36.7665, -63.461, 0.74 ) }
    dend_2 { pt3dadd( 64.487, -37.4198, -64.2746, 0.66 ) }
    dend_2 { pt3dadd( 65.4915, -37.957, -65.0773, 0.74 ) }
    dend_2 { pt3dadd( 66.1164, -38.232, -65.5861, 0.81 ) }
    dend_2 { pt3dadd( 66.834, -38.4576, -66.1605, 0.81 ) }
    dend_2 { pt3dadd( 67.2013, -38.5195, -66.4403, 1.11 ) }
    dend_2 { pt3dadd( 68.086, -38.5358, -67.092, 1.25 ) }
    dend_2 { pt3dadd( 68.4673, -38.4899, -67.4101, 1.62 ) }
    dend_2 { pt3dadd( 68.865, -38.3912, -67.8442, 1.62 ) }
    dend_2 { pt3dadd( 69.6096, -38.1559, -68.8071, 0.59 ) }
    dend_2 { pt3dadd( 70.0601, -38.0032, -69.4577, 0.59 ) }
    dend_2 { pt3dadd( 70.7314, -37.7872, -70.4587, 0.88 ) }
    dend_2 { pt3dadd( 71.632, -37.5287, -71.809, 1.4 ) }
    dend_2 { pt3dadd( 72.5528, -37.317, -73.1327, 0.74 ) }
    dend_2 { pt3dadd( 73.1047, -37.227, -73.8848, 0.59 ) }
    dend_2 { pt3dadd( 73.5889, -37.1871, -74.4745, 0.81 ) }
    dend_2 { pt3dadd( 74.0463, -37.192, -74.901, 0.81 ) }
    dend_2 { pt3dadd( 74.5157, -37.2291, -75.186, 0.96 ) }
    dend_2 { pt3dadd( 75.0208, -37.2675, -75.3888, 0.96 ) }
    dend_2 { pt3dadd( 75.6323, -37.2964, -75.5945, 0.59 ) }
    dend_2 { pt3dadd( 76.5797, -37.2914, -75.9338, 0.59 ) }
    dend_2 { pt3dadd( 77.493, -37.2304, -76.266, 0.66 ) }
    dend_2 { pt3dadd( 78.011, -37.1644, -76.508, 1.03 ) }
    dend_2 { pt3dadd( 78.8429, -37.0263, -76.9596, 1.03 ) }
    dend_2 { pt3dadd( 79.6061, -36.8297, -77.6432, 0.59 ) }
    dend_2 { pt3dadd( 79.9621, -36.696, -78.0788, 0.59 ) }
    dend_2 { pt3dadd( 80.4071, -36.4946, -78.7358, 0.59 ) }
    dend_2 { pt3dadd( 81.0668, -36.2177, -79.8018, 1.11 ) }
    dend_2 { pt3dadd( 81.3625, -36.1252, -80.2823, 1.33 ) }
    dend_2 { pt3dadd( 83.0543, -35.7505, -82.8825, 1.03 ) }
    dend_2 { pt3dadd( 83.3679, -35.6935, -83.3198, 1.4 ) }
    dend_2 { pt3dadd( 84.0095, -35.5882, -84.1121, 0.81 ) }
    dend_2 { pt3dadd( 84.6804, -35.4809, -84.8255, 0.74 ) }
    dend_2 { pt3dadd( 85.568, -35.3382, -85.5917, 0.59 ) }
    dend_2 { pt3dadd( 86.1767, -35.2375, -86.0273, 0.59 ) }
    dend_2 { pt3dadd( 87.1947, -35.0721, -86.5613, 0.59 ) }
    dend_2 { pt3dadd( 88.3999, -34.8172, -87.193, 0.88 ) }
    dend_2 { pt3dadd( 88.8275, -34.6764, -87.4136, 1.25 ) }
    dend_2 { pt3dadd( 89.207, -34.5043, -87.6068, 1.55 ) }
    dend_2 { pt3dadd( 89.7656, -34.2034, -87.9038, 1.55 ) }
    dend_2 { pt3dadd( 90.2146, -33.9511, -88.1586, 1.33 ) }
    dend_2 { pt3dadd( 90.7685, -33.6376, -88.4785, 0.66 ) }
    dend_2 { pt3dadd( 91.4781, -33.2538, -88.8838, 0.66 ) }
    dend_2 { pt3dadd( 91.9408, -33.023, -89.2022, 0.66 ) }
    dend_2 { pt3dadd( 92.7583, -32.6215, -89.8988, 0.66 ) }
    dend_2 { pt3dadd( 93.0796, -32.5085, -90.3773, 0.66 ) }
    dend_2 { pt3dadd( 93.2609, -32.4699, -90.7319, 0.96 ) }
    dend_2 { pt3dadd( 93.4679, -32.4508, -91.1892, 0.96 ) }
    dend_2 { pt3dadd( 94.0851, -32.4738, -92.5897, 0.74 ) }
    dend_2 { pt3dadd( 94.458, -32.5157, -93.4206, 1.62 ) }
    dend_2 { pt3dadd( 95.9805, -32.73, -96.6172, 0.66 ) }
    dend_2 { pt3dadd( 96.2159, -32.7526, -97.0824, 0.66 ) }
    dend_2 { pt3dadd( 96.5914, -32.7681, -97.739, 1.11 ) }
    dend_2 { pt3dadd( 97.1036, -32.7704, -98.5134, 1.11 ) }
    dend_2 { pt3dadd( 97.6565, -32.7354, -99.1781, 0.52 ) }
    dend_2 { pt3dadd( 98.2325, -32.6459, -99.7142, 0.52 ) }
    dend_2 { pt3dadd( 98.9932, -32.4225, -100.265, 1.25 ) }
    dend_2 { pt3dadd( 99.5779, -32.2188, -100.697, 0.88 ) }
    dend_2 { pt3dadd( 100.687, -31.7494, -101.524, 0.44 ) }
    dend_2 { pt3dadd( 101.322, -31.4308, -101.986, 0.44 ) }
    dend_2 { pt3dadd( 102.265, -30.8986, -102.655, 0.52 ) }
    dend_2 { pt3dadd( 102.891, -30.5136, -103.088, 0.88 ) }
    dend_2 { pt3dadd( 103.203, -30.3131, -103.295, 1.11 ) }
    dend_2 { pt3dadd( 103.46, -30.1213, -103.51, 1.11 ) }
    dend_2 { pt3dadd( 103.656, -29.9443, -103.727, 1.11 ) }
    dend_2 { pt3dadd( 104.249, -29.3159, -104.657, 0.52 ) }
    dend_2 { pt3dadd( 104.46, -29.0691, -105.142, 0.52 ) }
    dend_2 { pt3dadd( 104.735, -28.7443, -105.893, 0.81 ) }
    dend_2 { pt3dadd( 105.376, -28.0442, -107.692, 0.81 ) }
    dend_2 { pt3dadd( 105.685, -27.7316, -108.524, 1.11 ) }
    dend_2 { pt3dadd( 105.829, -27.6041, -108.858, 1.92 ) }
    dend_2 { pt3dadd( 106.748, -26.9446, -110.517, 0.59 ) }
    dend_2 { pt3dadd( 106.876, -26.8736, -110.688, 0.59 ) }
    dend_2 { pt3dadd( 107.392, -26.6708, -111.127, 0.88 ) }
    dend_2 { pt3dadd( 108.104, -26.474, -111.505, 0.44 ) }
    dend_2 { pt3dadd( 109.29, -26.2133, -112.048, 0.44 ) }
    dend_2 { pt3dadd( 110.234, -26.0412, -112.445, 0.74 ) }
    dend_2 { pt3dadd( 110.764, -25.9721, -112.686, 0.74 ) }
    dend_2 { pt3dadd( 111.525, -25.9351, -113.183, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( 111.958, -25.9637, -113.59, 0.52 ) }
    dend_2 { pt3dadd( 112.575, -26.0733, -114.358, 0.59 ) }
    dend_2 { pt3dadd( 112.802, -26.1191, -114.686, 0.59 ) }
    dend_2 { pt3dadd( 113.773, -26.2695, -116.198, 0.59 ) }
    dend_2 { pt3dadd( 114.411, -26.3101, -117.197, 0.81 ) }
    dend_2 { pt3dadd( 115.007, -26.2819, -118.139, 1.4 ) }
    dend_2 { pt3dadd( 115.33, -26.2101, -118.611, 1.55 ) }
    dend_2 { pt3dadd( 116.103, -25.8578, -119.567, 0.44 ) }
    dend_2 { pt3dadd( 116.446, -25.6199, -119.901, 0.88 ) }
    dend_2 { pt3dadd( 116.893, -25.2512, -120.197, 0.88 ) }
    dend_2 { pt3dadd( 117.383, -24.8449, -120.504, 0.59 ) }
    dend_2 { pt3dadd( 118.139, -24.2569, -120.988, 0.59 ) }
    dend_2 { pt3dadd( 118.634, -23.9326, -121.392, 0.81 ) }
    dend_2 { pt3dadd( 119.187, -23.6542, -121.926, 0.81 ) }
    dend_2 { pt3dadd( 119.898, -23.36, -122.741, 0.52 ) }
    dend_2 { pt3dadd( 120.676, -23.0663, -123.796, 0.74 ) }
    dend_2 { pt3dadd( 120.905, -22.9716, -124.26, 0.74 ) }
    dend_2 { pt3dadd( 121.302, -22.7073, -125.652, 0.37 ) }
    dend_2 { pt3dadd( 121.421, -22.5443, -126.393, 0.37 ) }
    dend_2 { pt3dadd( 121.512, -22.2315, -127.576, 0.37 ) }
    dend_2 { pt3dadd( 121.529, -21.8941, -128.614, 0.59 ) }
    dend_2 { pt3dadd( 121.544, -20.8296, -131.459, 0.88 ) }
    dend_2 { pt3dadd( 121.565, -20.3144, -132.758, 0.52 ) }
    dend_2 { pt3dadd( 121.588, -20.149, -133.218, 0.52 ) }
    dend_2 { pt3dadd( 121.675, -19.8744, -134.226, 0.52 ) }
    dend_2 { pt3dadd( 121.796, -19.6993, -134.976, 0.81 ) }
    dend_2 { pt3dadd( 122.016, -19.5108, -135.856, 0.59 ) }
    dend_2 { pt3dadd( 122.25, -19.3794, -136.538, 0.59 ) }
    dend_2 { pt3dadd( 123.074, -19.0547, -138.739, 1.18 ) }
    dend_2 { pt3dadd( 124.022, -18.7694, -141.465, 0.74 ) }
    dend_2 { pt3dadd( 124.238, -18.7226, -142.174, 0.74 ) }
    dend_2 { pt3dadd( 124.42, -18.6927, -142.88, 0.88 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 32/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -46.6727, 115.881, -28.9098, 0.29 ) }
    dend_87 { pt3dadd( -48.0086, 115.68, -29.564, 0.29 ) }
    dend_87 { pt3dadd( -49.0884, 115.697, -30.1087, 0.29 ) }
    dend_87 { pt3dadd( -49.6295, 115.876, -30.4724, 0.59 ) }
    dend_87 { pt3dadd( -50.2341, 116.247, -30.9341, 0.59 ) }
    dend_87 { pt3dadd( -50.7278, 116.629, -31.3115, 0.59 ) }
    dend_87 { pt3dadd( -51.2626, 117.092, -31.6982, 0.44 ) }
    dend_87 { pt3dadd( -51.6752, 117.631, -32.0106, 0.59 ) }
    dend_87 { pt3dadd( -52.3948, 118.733, -32.6831, 0.37 ) }
    dend_87 { pt3dadd( -52.7377, 119.266, -33.0447, 0.29 ) }
    dend_87 { pt3dadd( -53.0916, 119.752, -33.4061, 0.59 ) }
    dend_87 { pt3dadd( -53.4834, 120.242, -33.7899, 0.59 ) }
    dend_87 { pt3dadd( -54.3417, 121.275, -34.6135, 0.29 ) }
    dend_87 { pt3dadd( -55.1296, 122.271, -35.4094, 0.29 ) }
    dend_87 { pt3dadd( -55.4856, 122.754, -35.8144, 0.29 ) }
    dend_87 { pt3dadd( -56.1315, 123.7, -36.7175, 0.29 ) }
    dend_87 { pt3dadd( -56.5122, 124.303, -37.3937, 0.29 ) }
    dend_87 { pt3dadd( -56.8954, 124.944, -38.181, 0.52 ) }
    dend_87 { pt3dadd( -57.2342, 125.541, -38.9328, 0.66 ) }
    dend_87 { pt3dadd( -57.7193, 126.491, -40.085, 0.44 ) }
    dend_87 { pt3dadd( -58.0766, 127.273, -41.094, 0.59 ) }
    dend_87 { pt3dadd( -58.4685, 128.204, -42.5011, 0.96 ) }
    dend_87 { pt3dadd( -58.628, 128.489, -43.0364, 0.52 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 55/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -46.6727, 115.881, -28.9098, 0.66 ) }
    dend_86 { pt3dadd( -45.2271, 116.091, -28.95, 0.66 ) }
    dend_86 { pt3dadd( -44.0721, 116.259, -28.9822, 0.29 ) }
    dend_86 { pt3dadd( -43.2337, 116.38, -29.0056, 0.44 ) }
    dend_86 { pt3dadd( -42.2002, 116.53, -29.0344, 0.44 ) }
    // Section: dend_82, id: dend_82, parent: dend_80 (entry count 60/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -63.3148, 121.633, -23.4849, 0.29 ) }
    dend_82 { pt3dadd( -63.7674, 122.228, -24.0298, 0.29 ) }
    dend_82 { pt3dadd( -64.3427, 122.916, -24.7304, 0.59 ) }
    dend_82 { pt3dadd( -64.7188, 123.372, -25.199, 0.44 ) }
    dend_82 { pt3dadd( -65.2619, 124.078, -25.883, 0.88 ) }
    dend_82 { pt3dadd( -65.5024, 124.437, -26.208, 1.03 ) }
    dend_82 { pt3dadd( -66.0385, 125.354, -26.9746, 0.52 ) }
    dend_82 { pt3dadd( -66.2102, 125.69, -27.2477, 0.44 ) }
    dend_82 { pt3dadd( -66.5484, 126.415, -27.7673, 0.66 ) }
    dend_82 { pt3dadd( -66.8046, 127.006, -28.1564, 0.88 ) }
    dend_82 { pt3dadd( -67.2983, 128.157, -28.8348, 0.59 ) }
    dend_82 { pt3dadd( -67.6313, 128.915, -29.2489, 0.74 ) }
    dend_82 { pt3dadd( -67.976, 129.682, -29.635, 0.74 ) }
    dend_82 { pt3dadd( -68.4654, 130.691, -30.1432, 0.37 ) }
    dend_82 { pt3dadd( -68.6963, 131.113, -30.3601, 0.37 ) }
    dend_82 { pt3dadd( -69.253, 131.997, -30.8163, 0.66 ) }
    dend_82 { pt3dadd( -69.6514, 132.518, -31.0847, 0.66 ) }
    dend_82 { pt3dadd( -70.078, 132.975, -31.3277, 0.52 ) }
    dend_82 { pt3dadd( -70.7071, 133.526, -31.6257, 0.88 ) }
    dend_82 { pt3dadd( -71.1438, 133.841, -31.7955, 0.88 ) }
    dend_82 { pt3dadd( -71.7969, 134.225, -31.9906, 0.52 ) }
    dend_82 { pt3dadd( -72.5929, 134.621, -32.1714, 0.52 ) }
    dend_82 { pt3dadd( -73.5879, 135.093, -32.3508, 0.88 ) }
    dend_82 { pt3dadd( -74.2342, 135.409, -32.4468, 0.88 ) }
    dend_82 { pt3dadd( -75.0414, 135.815, -32.5426, 0.52 ) }
    dend_82 { pt3dadd( -75.7331, 136.174, -32.6162, 0.44 ) }
    dend_82 { pt3dadd( -76.5198, 136.591, -32.7012, 0.37 ) }
    dend_82 { pt3dadd( -77.2919, 137.042, -32.7796, 0.37 ) }
    dend_82 { pt3dadd( -78.0616, 137.541, -32.862, 0.29 ) }
    dend_82 { pt3dadd( -79.3133, 138.429, -33.0131, 0.29 ) }
    dend_82 { pt3dadd( -79.8972, 138.858, -33.0896, 0.29 ) }
    dend_82 { pt3dadd( -80.5692, 139.34, -33.1801, 1.11 ) }
    // Section: dend_81, id: dend_81, parent: dend_80 (entry count 92/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -63.3148, 121.633, -23.4849, 0.29 ) }
    dend_81 { pt3dadd( -64.6745, 120.673, -22.1752, 0.29 ) }
    dend_81 { pt3dadd( -65.4145, 120.152, -21.4625, 0.29 ) }
    dend_81 { pt3dadd( -65.9388, 119.782, -20.9575, 0.22 ) }
    dend_81 { pt3dadd( -66.6077, 119.31, -20.3132, 0.22 ) }
    dend_81 { pt3dadd( -67.3519, 118.785, -19.5963, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_71 (entry count 98/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 155.536, 30.5794, 54.7182, 0.29 ) }
    dend_75 { pt3dadd( 159.508, 36.1935, 65.3687, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_75 { pt3dadd( 164.388, 40.4609, 76.2215, 0.29 ) }
    dend_75 { pt3dadd( 170.543, 44.3485, 86.5397, 0.29 ) }
    dend_75 { pt3dadd( 175.86, 46.0779, 97.8197, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 3/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 155.536, 30.5794, 54.7182, 0.29 ) }
    dend_72 { pt3dadd( 165.858, 28.397, 55.6032, 0.29 ) }
    dend_72 { pt3dadd( 176.183, 27.8032, 57.8186, 0.29 ) }
    dend_72 { pt3dadd( 185.981, 28.3662, 61.777, 0.29 ) }
    // Section: dend_68, id: dend_68, parent: dend_58 (entry count 7/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 77.7023, 47.9043, 9.13039, 0.37 ) }
    dend_68 { pt3dadd( 77.8531, 48.7676, 9.49293, 0.37 ) }
    dend_68 { pt3dadd( 78.0252, 50.0399, 10.0816, 0.37 ) }
    dend_68 { pt3dadd( 78.1499, 50.9615, 10.5079, 0.22 ) }
    dend_68 { pt3dadd( 78.4121, 52.8992, 11.4044, 0.22 ) }
    dend_68 { pt3dadd( 78.612, 54.376, 12.0877, 0.66 ) }
    dend_68 { pt3dadd( 78.8526, 56.1546, 12.9105, 1.11 ) }
    dend_68 { pt3dadd( 78.8935, 56.5927, 13.1415, 1.11 ) }
    dend_68 { pt3dadd( 80.9328, 67.8992, 16.8286, 1.11 ) }
    dend_68 { pt3dadd( 83.6371, 79.1155, 20.3435, 1.11 ) }
    dend_68 { pt3dadd( 86.9979, 89.7715, 24.809, 1.11 ) }
    dend_68 { pt3dadd( 90.288, 99.8327, 30.4726, 1.11 ) }
    dend_68 { pt3dadd( 94.9833, 110.256, 34.1991, 1.11 ) }
    dend_68 { pt3dadd( 99.9002, 120.439, 38.2516, 1.11 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 77.7023, 47.9043, 9.13039, 0.44 ) }
    dend_59 { pt3dadd( 78.6595, 48.1954, 9.28997, 0.44 ) }
    dend_59 { pt3dadd( 79.6886, 48.4537, 9.46227, 0.44 ) }
    dend_59 { pt3dadd( 80.792, 48.6895, 9.72001, 0.74 ) }
    dend_59 { pt3dadd( 81.4633, 48.818, 9.90171, 1.03 ) }
    dend_59 { pt3dadd( 82.0919, 48.9292, 10.0911, 1.03 ) }
    dend_59 { pt3dadd( 82.5898, 49.0151, 10.2237, 1.03 ) }
    dend_59 { pt3dadd( 83.435, 49.1677, 10.3662, 0.66 ) }
    dend_59 { pt3dadd( 84.6021, 49.4354, 10.4445, 0.66 ) }
    dend_59 { pt3dadd( 85.0135, 49.5758, 10.4139, 0.81 ) }
    dend_59 { pt3dadd( 85.6351, 49.8731, 10.3022, 0.44 ) }
    dend_59 { pt3dadd( 86.8912, 50.6399, 9.97964, 0.44 ) }
    dend_59 { pt3dadd( 88.3737, 51.7112, 9.53534, 0.37 ) }
    dend_59 { pt3dadd( 88.8917, 52.1282, 9.34995, 0.37 ) }
    dend_59 { pt3dadd( 89.6909, 52.8, 9.03755, 0.37 ) }
    dend_59 { pt3dadd( 90.6479, 53.6295, 8.69362, 0.66 ) }
    dend_59 { pt3dadd( 91.2038, 54.1261, 8.52803, 0.66 ) }
    dend_59 { pt3dadd( 91.98, 54.8116, 8.40731, 0.37 ) }
    dend_59 { pt3dadd( 92.4449, 55.1918, 8.39357, 0.37 ) }
    dend_59 { pt3dadd( 93.0359, 55.6602, 8.38874, 0.59 ) }
    dend_59 { pt3dadd( 93.5614, 56.0844, 8.36826, 0.59 ) }
    dend_59 { pt3dadd( 94.0749, 56.5086, 8.25364, 0.44 ) }
    dend_59 { pt3dadd( 94.9528, 57.1635, 7.98598, 0.66 ) }
    dend_59 { pt3dadd( 95.1142, 57.2696, 7.93189, 0.96 ) }
    dend_59 { pt3dadd( 95.7363, 57.6022, 7.73914, 0.96 ) }
    dend_59 { pt3dadd( 96.6535, 57.9797, 7.46539, 1.11 ) }
    dend_59 { pt3dadd( 98.7767, 58.6743, 6.91663, 0.44 ) }
    dend_59 { pt3dadd( 99.9682, 59.0035, 6.66187, 0.44 ) }
    dend_59 { pt3dadd( 100.897, 59.2361, 6.50841, 0.37 ) }
    dend_59 { pt3dadd( 102.038, 59.5336, 6.32931, 0.37 ) }
    dend_59 { pt3dadd( 102.729, 59.7296, 6.24088, 0.29 ) }
    dend_59 { pt3dadd( 103.68, 60.0726, 6.15003, 0.22 ) }
    dend_59 { pt3dadd( 104.314, 60.4506, 6.07358, 0.59 ) }
    dend_59 { pt3dadd( 104.639, 60.7865, 5.97949, 0.59 ) }
    dend_59 { pt3dadd( 105.574, 61.9283, 5.51725, 0.29 ) }
    dend_59 { pt3dadd( 105.97, 62.4226, 5.29118, 0.37 ) }
    dend_59 { pt3dadd( 106.443, 62.9732, 5.0183, 0.52 ) }
    dend_59 { pt3dadd( 106.969, 63.4624, 4.72069, 0.74 ) }
    dend_59 { pt3dadd( 107.728, 64.0295, 4.19474, 0.96 ) }
    dend_59 { pt3dadd( 109.097, 64.9445, 3.0404, 0.29 ) }
    dend_59 { pt3dadd( 109.628, 65.3055, 2.50307, 0.52 ) }
    dend_59 { pt3dadd( 109.864, 65.4848, 2.21353, 0.81 ) }
    dend_59 { pt3dadd( 110.634, 66.1781, 1.10706, 1.11 ) }
    dend_59 { pt3dadd( 112.017, 67.6365, -1.18018, 0.81 ) }
    dend_59 { pt3dadd( 112.61, 68.3903, -2.28696, 0.96 ) }
    dend_59 { pt3dadd( 113.222, 69.3359, -3.54328, 0.66 ) }
    dend_59 { pt3dadd( 113.674, 70.0982, -4.47637, 0.52 ) }
    dend_59 { pt3dadd( 114.127, 70.8722, -5.29364, 0.52 ) }
    dend_59 { pt3dadd( 114.322, 71.1934, -5.53977, 0.74 ) }
    dend_59 { pt3dadd( 114.848, 71.7949, -5.79215, 0.74 ) }
    dend_59 { pt3dadd( 115.204, 72.0888, -5.87262, 0.96 ) }
    dend_59 { pt3dadd( 115.771, 72.4314, -5.9592, 0.96 ) }
    dend_59 { pt3dadd( 116.706, 72.9367, -6.18168, 0.74 ) }
    dend_59 { pt3dadd( 117.63, 73.4615, -6.48725, 0.44 ) }
    dend_59 { pt3dadd( 118.64, 74.1618, -7.00081, 0.44 ) }
    dend_59 { pt3dadd( 119.02, 74.4891, -7.26182, 0.96 ) }
    dend_59 { pt3dadd( 119.696, 75.2348, -7.91664, 1.18 ) }
    dend_59 { pt3dadd( 120.617, 76.5088, -9.09385, 0.66 ) }
    dend_59 { pt3dadd( 120.943, 77.0584, -9.63002, 0.66 ) }
    dend_59 { pt3dadd( 121.519, 78.1803, -10.7882, 0.59 ) }
    dend_59 { pt3dadd( 121.729, 78.6258, -11.2205, 0.52 ) }
    dend_59 { pt3dadd( 122.32, 79.8494, -12.3143, 0.52 ) }
    dend_59 { pt3dadd( 122.483, 80.2103, -12.588, 0.96 ) }
    dend_59 { pt3dadd( 122.831, 80.962, -13.071, 0.96 ) }
    dend_59 { pt3dadd( 123.483, 82.3874, -13.8488, 0.59 ) }
    dend_59 { pt3dadd( 124.036, 83.6588, -14.3915, 0.59 ) }
    dend_59 { pt3dadd( 124.383, 84.4894, -14.6951, 0.88 ) }
    dend_59 { pt3dadd( 124.879, 85.7062, -15.032, 0.74 ) }
    dend_59 { pt3dadd( 125.329, 86.6848, -15.2651, 0.74 ) }
    dend_59 { pt3dadd( 125.874, 87.6726, -15.433, 0.88 ) }
    dend_59 { pt3dadd( 126.235, 88.1566, -15.5033, 0.88 ) }
    dend_59 { pt3dadd( 126.944, 88.8468, -15.6734, 0.37 ) }
    dend_59 { pt3dadd( 127.708, 89.4477, -15.8824, 0.37 ) }
    dend_59 { pt3dadd( 128.931, 90.2374, -16.2395, 0.37 ) }
    dend_59 { pt3dadd( 129.795, 90.7508, -16.5364, 0.37 ) }
    dend_59 { pt3dadd( 130.807, 91.3279, -16.9367, 0.37 ) }
    dend_59 { pt3dadd( 131.418, 91.6955, -17.1844, 0.59 ) }
    dend_59 { pt3dadd( 132.173, 92.1817, -17.4827, 0.74 ) }
    dend_59 { pt3dadd( 132.677, 92.5423, -17.6892, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_59 { pt3dadd( 133.623, 93.3184, -18.1132, 0.44 ) }
    dend_59 { pt3dadd( 134.126, 93.7354, -18.3277, 0.37 ) }
    dend_59 { pt3dadd( 135.606, 94.8174, -18.7928, 0.37 ) }
    dend_59 { pt3dadd( 136.314, 95.245, -18.9587, 0.74 ) }
    dend_59 { pt3dadd( 136.693, 95.4287, -19.0251, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 5/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 88.065, 81.238, 15.1388, 0.29 ) }
    dend_57 { pt3dadd( 90.8133, 86.4533, 15.5976, 0.29 ) }
    dend_57 { pt3dadd( 94.3793, 91.1676, 15.2927, 0.29 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 88.065, 81.238, 15.1388, 0.29 ) }
    dend_56 { pt3dadd( 93.5647, 92.5089, 16.1376, 0.29 ) }
    dend_56 { pt3dadd( 98.5734, 103.766, 18.5428, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 11/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -22.7045, -174.031, 14.7523, 0.29 ) }
    dend_37 { pt3dadd( -20.9803, -184.522, 11.17, 0.29 ) }
    dend_37 { pt3dadd( -20.0426, -195.594, 9.44539, 0.29 ) }
    dend_37 { pt3dadd( -20.12, -206.414, 6.41824, 0.29 ) }
    dend_37 { pt3dadd( -20.9805, -217.556, 5.12384, 0.29 ) }
    dend_37 { pt3dadd( -22.7399, -228.622, 4.15971, 0.29 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 17/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -22.7045, -174.031, 14.7523, 0.29 ) }
    dend_36 { pt3dadd( -26.8733, -184.081, 9.90006, 0.29 ) }
    // Section: dend_24, id: dend_24, parent: dend_18 (entry count 19/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 2.91031, -81.8007, 6.54488, 0.37 ) }
    dend_24 { pt3dadd( 1.98569, -83.216, 5.35398, 0.37 ) }
    dend_24 { pt3dadd( 1.40365, -83.9618, 4.74686, 0.37 ) }
    dend_24 { pt3dadd( 0.81778, -84.6075, 4.20514, 0.44 ) }
    dend_24 { pt3dadd( 0.100529, -85.3074, 3.61309, 0.74 ) }
    dend_24 { pt3dadd( -0.626545, -85.9496, 3.07456, 0.59 ) }
    dend_24 { pt3dadd( -1.3968, -86.5474, 2.56959, 0.59 ) }
    dend_24 { pt3dadd( -1.87861, -86.7895, 2.35036, 0.74 ) }
    dend_24 { pt3dadd( -2.69614, -87.053, 2.0571, 0.88 ) }
    dend_24 { pt3dadd( -3.22059, -87.1557, 1.91685, 1.18 ) }
    dend_24 { pt3dadd( -3.75722, -87.2085, 1.80717, 0.59 ) }
    dend_24 { pt3dadd( -4.57851, -87.2411, 1.66017, 0.44 ) }
    dend_24 { pt3dadd( -5.39258, -87.2591, 1.50983, 0.52 ) }
    dend_24 { pt3dadd( -5.76753, -87.2822, 1.4304, 0.74 ) }
    dend_24 { pt3dadd( -6.40492, -87.4072, 1.29907, 0.74 ) }
    dend_24 { pt3dadd( -6.85742, -87.5877, 1.18533, 0.59 ) }
    dend_24 { pt3dadd( -7.31175, -87.8819, 1.05641, 0.59 ) }
    dend_24 { pt3dadd( -7.8949, -88.4287, 0.881131, 0.59 ) }
    dend_24 { pt3dadd( -8.50203, -89.1788, 0.708687, 0.44 ) }
    dend_24 { pt3dadd( -9.18273, -90.1744, 0.540467, 0.37 ) }
    dend_24 { pt3dadd( -9.56878, -90.8424, 0.462786, 1.03 ) }
    dend_24 { pt3dadd( -9.82138, -91.3477, 0.415713, 1.03 ) }
    dend_24 { pt3dadd( -10.0188, -91.8115, 0.38287, 0.96 ) }
    dend_24 { pt3dadd( -10.3436, -92.7729, 0.346385, 0.66 ) }
    dend_24 { pt3dadd( -10.5814, -93.6382, 0.327498, 0.66 ) }
    dend_24 { pt3dadd( -10.8024, -94.6275, 0.296734, 0.88 ) }
    dend_24 { pt3dadd( -10.9126, -95.2356, 0.277519, 1.03 ) }
    dend_24 { pt3dadd( -11.0303, -96.0998, 0.239277, 0.88 ) }
    dend_24 { pt3dadd( -11.1405, -97.2124, 0.171021, 0.52 ) }
    dend_24 { pt3dadd( -11.1993, -98.0826, 0.100711, 0.52 ) }
    dend_24 { pt3dadd( -11.2327, -98.7447, 0.0310702, 0.96 ) }
    dend_24 { pt3dadd( -11.2571, -99.1768, -0.0233426, 0.96 ) }
    dend_24 { pt3dadd( -11.3575, -100.24, -0.1862, 0.59 ) }
    dend_24 { pt3dadd( -11.4869, -101.086, -0.33778, 0.66 ) }
    dend_24 { pt3dadd( -11.6373, -101.718, -0.47099, 0.81 ) }
    dend_24 { pt3dadd( -11.8702, -102.488, -0.659687, 0.81 ) }
    dend_24 { pt3dadd( -12.0304, -102.918, -0.781067, 0.81 ) }
    dend_24 { pt3dadd( -12.3387, -103.703, -1.06578, 0.44 ) }
    dend_24 { pt3dadd( -12.4977, -104.115, -1.24298, 0.81 ) }
    dend_24 { pt3dadd( -12.693, -104.711, -1.53189, 0.81 ) }
    dend_24 { pt3dadd( -12.8986, -105.564, -1.96213, 0.52 ) }
    dend_24 { pt3dadd( -12.9841, -106.258, -2.31319, 0.52 ) }
    dend_24 { pt3dadd( -13.0052, -107.526, -2.9433, 0.74 ) }
    dend_24 { pt3dadd( -12.9693, -108.145, -3.23801, 1.11 ) }
    dend_24 { pt3dadd( -12.9314, -108.716, -3.48697, 1.11 ) }
    dend_24 { pt3dadd( -12.8981, -109.44, -3.76335, 0.96 ) }
    dend_24 { pt3dadd( -12.9078, -110.251, -4.03115, 0.59 ) }
    dend_24 { pt3dadd( -13.0044, -111.248, -4.31655, 0.44 ) }
    dend_24 { pt3dadd( -13.2642, -112.348, -4.58322, 0.44 ) }
    dend_24 { pt3dadd( -13.5521, -113.171, -4.77427, 0.44 ) }
    dend_24 { pt3dadd( -13.8789, -113.94, -4.93378, 0.74 ) }
    dend_24 { pt3dadd( -14.1277, -114.504, -5.04006, 0.74 ) }
    dend_24 { pt3dadd( -14.3701, -115.05, -5.12565, 0.74 ) }
    dend_24 { pt3dadd( -14.7954, -116.023, -5.24708, 0.66 ) }
    dend_24 { pt3dadd( -15.1008, -116.747, -5.31711, 0.44 ) }
    dend_24 { pt3dadd( -15.4869, -117.684, -5.3981, 0.44 ) }
    dend_24 { pt3dadd( -16.0924, -118.987, -5.48135, 0.44 ) }
    dend_24 { pt3dadd( -16.4374, -119.589, -5.49962, 0.88 ) }
    dend_24 { pt3dadd( -16.8425, -120.148, -5.49222, 1.18 ) }
    dend_24 { pt3dadd( -17.1601, -120.507, -5.46421, 1.18 ) }
    dend_24 { pt3dadd( -17.561, -120.895, -5.41602, 1.03 ) }
    dend_24 { pt3dadd( -18.7062, -121.837, -5.27354, 0.66 ) }
    dend_24 { pt3dadd( -19.7637, -122.587, -5.13176, 0.66 ) }
    dend_24 { pt3dadd( -20.6623, -123.2, -5.00894, 1.25 ) }
    dend_24 { pt3dadd( -21.1396, -123.53, -4.94151, 1.55 ) }
    dend_24 { pt3dadd( -21.716, -123.937, -4.85972, 1.03 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 85/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 2.91031, -81.8007, 6.54488, 0.74 ) }
    dend_19 { pt3dadd( 2.44861, -83.3129, 5.48046, 0.74 ) }
    dend_19 { pt3dadd( 1.90393, -85.049, 4.23236, 0.74 ) }
    dend_19 { pt3dadd( 1.6156, -86.0811, 3.60943, 0.74 ) }
    dend_19 { pt3dadd( 1.34492, -87.2315, 3.01559, 0.81 ) }
    dend_19 { pt3dadd( 0.86155, -89.8578, 1.92046, 0.52 ) }
    dend_19 { pt3dadd( 0.5931, -91.9393, 1.22941, 0.74 ) }
    dend_19 { pt3dadd( 0.521602, -93.0412, 0.973129, 0.74 ) }
    dend_19 { pt3dadd( 0.79859, -95.4525, 0.960591, 0.74 ) }
    dend_19 { pt3dadd( 1.21325, -96.6318, 1.20802, 0.81 ) }
    dend_19 { pt3dadd( 2.00973, -98.0412, 1.78027, 0.66 ) }
    dend_19 { pt3dadd( 2.49951, -98.7303, 2.15744, 1.11 ) }
    dend_19 { pt3dadd( 3.01862, -99.4014, 2.51781, 1.11 ) }
    dend_19 { pt3dadd( 3.69914, -100.259, 2.88222, 0.81 ) }
    dend_19 { pt3dadd( 4.59163, -101.433, 3.16613, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_19 { pt3dadd( 5.40647, -102.583, 3.35104, 0.96 ) }
    dend_19 { pt3dadd( 6.13148, -103.658, 3.48245, 0.88 ) }
    dend_19 { pt3dadd( 6.99177, -104.979, 3.6486, 0.96 ) }
    dend_19 { pt3dadd( 7.59067, -105.965, 3.74497, 1.11 ) }
    dend_19 { pt3dadd( 8.26062, -107.201, 3.79306, 1.11 ) }
    dend_19 { pt3dadd( 8.81178, -108.364, 3.77105, 0.74 ) }
    dend_19 { pt3dadd( 9.52631, -110.185, 3.65815, 0.66 ) }
    dend_19 { pt3dadd( 9.8407, -111.14, 3.57545, 0.66 ) }
    dend_19 { pt3dadd( 10.4061, -113.355, 3.37156, 0.66 ) }
    dend_19 { pt3dadd( 10.7944, -115.685, 3.13829, 0.59 ) }
    dend_19 { pt3dadd( 10.9034, -117.04, 2.97548, 0.96 ) }
    dend_19 { pt3dadd( 10.9113, -118.73, 2.73885, 1.18 ) }
    dend_19 { pt3dadd( 10.8244, -119.992, 2.55888, 1.03 ) }
    dend_19 { pt3dadd( 10.6631, -121.476, 2.36234, 0.88 ) }
    dend_19 { pt3dadd( 10.4431, -123.397, 2.17648, 0.74 ) }
    dend_19 { pt3dadd( 10.2907, -125.061, 2.17146, 0.59 ) }
    dend_19 { pt3dadd( 10.1803, -126.462, 2.26831, 0.59 ) }
    dend_19 { pt3dadd( 10.0706, -127.622, 2.44145, 1.4 ) }
    dend_19 { pt3dadd( 9.94754, -128.475, 2.63152, 1.4 ) }
    dend_19 { pt3dadd( 9.58445, -130.647, 3.30115, 0.88 ) }
    dend_19 { pt3dadd( 9.14067, -133.183, 4.39562, 0.66 ) }
    dend_19 { pt3dadd( 8.93581, -134.243, 4.93401, 0.88 ) }
    dend_19 { pt3dadd( 8.65493, -135.587, 5.66043, 0.88 ) }
    dend_19 { pt3dadd( 8.17852, -137.682, 6.79489, 0.59 ) }
    dend_19 { pt3dadd( 7.82558, -139.02, 7.48806, 0.81 ) }
    dend_19 { pt3dadd( 7.15878, -141.242, 8.53755, 0.81 ) }
    dend_19 { pt3dadd( 6.81501, -142.394, 8.96203, 1.11 ) }
    dend_19 { pt3dadd( 6.55638, -143.342, 9.25446, 1.11 ) }
    dend_19 { pt3dadd( 6.24962, -144.71, 9.55642, 0.52 ) }
    dend_19 { pt3dadd( 6.0316, -146.006, 9.76534, 0.74 ) }
    dend_19 { pt3dadd( 5.86896, -147.165, 9.89185, 1.03 ) }
    dend_19 { pt3dadd( 5.80259, -148.135, 9.94749, 1.25 ) }
    dend_19 { pt3dadd( 5.81285, -149.085, 10.0745, 1.33 ) }
    dend_19 { pt3dadd( 5.92942, -150.63, 10.5088, 1.03 ) }
    dend_19 { pt3dadd( 6.18647, -152.061, 11.1131, 0.74 ) }
    dend_19 { pt3dadd( 6.52492, -153.21, 11.7326, 0.44 ) }
    dend_19 { pt3dadd( 6.95231, -154.245, 12.3977, 0.29 ) }
    dend_19 { pt3dadd( 7.74471, -155.65, 13.4777, 0.29 ) }
    dend_19 { pt3dadd( 8.87553, -157.173, 14.8785, 0.29 ) }
    dend_19 { pt3dadd( 9.56018, -157.842, 15.6355, 0.29 ) }
    dend_19 { pt3dadd( 10.2345, -158.301, 16.2555, 0.88 ) }
    dend_19 { pt3dadd( 10.8088, -158.621, 16.7352, 0.88 ) }
    dend_19 { pt3dadd( 11.7751, -159.11, 17.4819, 0.52 ) }
    dend_19 { pt3dadd( 12.2353, -159.332, 17.764, 0.52 ) }
    dend_19 { pt3dadd( 13.0757, -159.78, 18.2558, 0.52 ) }
    dend_19 { pt3dadd( 13.7047, -160.285, 18.716, 0.52 ) }
    dend_19 { pt3dadd( 14.532, -161.251, 19.3231, 0.52 ) }
    dend_19 { pt3dadd( 14.9326, -161.878, 19.5918, 0.88 ) }
    dend_19 { pt3dadd( 15.3758, -162.663, 19.8248, 0.88 ) }
    dend_19 { pt3dadd( 15.9475, -163.628, 20.0071, 1.11 ) }
    dend_19 { pt3dadd( 16.5576, -164.526, 20.1524, 0.66 ) }
    dend_19 { pt3dadd( 17.7673, -165.951, 20.3476, 0.66 ) }
    dend_19 { pt3dadd( 18.355, -166.454, 20.4373, 0.66 ) }
    dend_19 { pt3dadd( 19.3851, -167.161, 20.6353, 0.66 ) }
    dend_19 { pt3dadd( 20.2133, -167.657, 20.8281, 0.52 ) }
    dend_19 { pt3dadd( 21.6278, -168.5, 21.1372, 0.66 ) }
    dend_19 { pt3dadd( 22.0717, -168.774, 21.2811, 0.66 ) }
    dend_19 { pt3dadd( 23.001, -169.384, 21.7697, 0.44 ) }
    dend_19 { pt3dadd( 23.7391, -169.913, 22.3082, 0.44 ) }
    dend_19 { pt3dadd( 24.72, -170.713, 23.2376, 0.52 ) }
    dend_19 { pt3dadd( 25.8331, -171.74, 24.5657, 0.66 ) }
    dend_19 { pt3dadd( 26.7596, -172.679, 25.8121, 0.44 ) }
    dend_19 { pt3dadd( 27.7322, -173.704, 27.2298, 0.81 ) }
    dend_19 { pt3dadd( 28.6478, -174.658, 28.5195, 0.52 ) }
    dend_19 { pt3dadd( 29.2656, -175.286, 29.3175, 0.74 ) }
    dend_19 { pt3dadd( 30.0435, -176.056, 30.1947, 0.29 ) }
    dend_19 { pt3dadd( 30.484, -176.482, 30.5672, 0.52 ) }
    dend_19 { pt3dadd( 31.2059, -177.165, 30.8915, 0.59 ) }
    dend_19 { pt3dadd( 32.6259, -178.539, 31.3625, 0.37 ) }
    dend_19 { pt3dadd( 33.6803, -179.55, 31.5971, 0.66 ) }
    dend_19 { pt3dadd( 34.2889, -180.123, 31.6984, 1.03 ) }
    dend_19 { pt3dadd( 35.2735, -181.034, 31.8228, 1.03 ) }
    dend_19 { pt3dadd( 36.348, -182.042, 32.0114, 0.74 ) }
    dend_19 { pt3dadd( 38.0402, -183.649, 32.484, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 18.1282, -137.141, -17.6978, 0.44 ) }
    dend_13 { pt3dadd( 18.1274, -138.439, -17.542, 0.44 ) }
    dend_13 { pt3dadd( 18.1186, -139.345, -17.4309, 0.81 ) }
    dend_13 { pt3dadd( 18.101, -140.041, -17.3442, 1.18 ) }
    dend_13 { pt3dadd( 18.068, -140.973, -17.2304, 0.74 ) }
    dend_13 { pt3dadd( 18.0301, -141.943, -17.1167, 0.44 ) }
    dend_13 { pt3dadd( 17.9939, -142.796, -17.0196, 0.96 ) }
    dend_13 { pt3dadd( 17.9518, -143.679, -16.9236, 0.96 ) }
    dend_13 { pt3dadd( 17.9054, -144.52, -16.8368, 1.18 ) }
    dend_13 { pt3dadd( 17.7896, -145.774, -16.7016, 0.74 ) }
    dend_13 { pt3dadd( 17.6059, -146.912, -16.596, 0.66 ) }
    dend_13 { pt3dadd( 17.3851, -147.84, -16.5257, 0.66 ) }
    dend_13 { pt3dadd( 17.0348, -149.005, -16.4803, 0.66 ) }
    dend_13 { pt3dadd( 16.8333, -149.581, -16.4801, 1.03 ) }
    dend_13 { pt3dadd( 16.5205, -150.381, -16.5089, 0.81 ) }
    dend_13 { pt3dadd( 16.0139, -151.655, -16.6568, 0.52 ) }
    dend_13 { pt3dadd( 15.7667, -152.421, -16.7704, 0.44 ) }
    dend_13 { pt3dadd( 15.5746, -153.384, -16.9093, 0.37 ) }
    dend_13 { pt3dadd( 15.5348, -153.932, -16.9709, 0.66 ) }
    dend_13 { pt3dadd( 15.5351, -154.533, -16.9986, 0.66 ) }
    dend_13 { pt3dadd( 15.6158, -156.105, -17.0321, 0.44 ) }
    dend_13 { pt3dadd( 15.7152, -157.683, -16.9959, 0.44 ) }
    dend_13 { pt3dadd( 15.7533, -158.942, -16.9211, 0.66 ) }
    dend_13 { pt3dadd( 15.7223, -160.053, -16.8149, 0.81 ) }
    dend_13 { pt3dadd( 15.5847, -161.262, -16.6882, 0.96 ) }
    dend_13 { pt3dadd( 15.28, -162.539, -16.5262, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( 14.9213, -163.533, -16.3801, 0.81 ) }
    dend_13 { pt3dadd( 14.5361, -164.41, -16.2898, 0.88 ) }
    dend_13 { pt3dadd( 14.2257, -165.094, -16.252, 0.66 ) }
    dend_13 { pt3dadd( 13.782, -166.059, -16.2301, 0.29 ) }
    dend_13 { pt3dadd( 13.2244, -167.294, -16.2206, 0.29 ) }
    dend_13 { pt3dadd( 12.9032, -168.009, -16.2023, 0.52 ) }
    dend_13 { pt3dadd( 12.3983, -169.119, -16.1835, 0.52 ) }
    dend_13 { pt3dadd( 11.9774, -170.032, -16.1632, 0.37 ) }
    dend_13 { pt3dadd( 11.5776, -170.853, -16.1328, 0.29 ) }
    dend_13 { pt3dadd( 11.1863, -171.57, -16.0745, 0.29 ) }
    dend_13 { pt3dadd( 11.0096, -171.83, -16.0492, 0.88 ) }
    dend_13 { pt3dadd( 10.5803, -172.273, -15.9906, 1.11 ) }
    dend_13 { pt3dadd( 10.0345, -172.664, -15.9082, 0.44 ) }
    dend_13 { pt3dadd( 9.33319, -173.05, -15.7955, 0.37 ) }
    dend_13 { pt3dadd( 8.64681, -173.365, -15.6949, 0.59 ) }
    dend_13 { pt3dadd( 8.02457, -173.609, -15.6155, 0.74 ) }
    dend_13 { pt3dadd( 7.19969, -173.909, -15.5209, 0.44 ) }
    dend_13 { pt3dadd( 6.48433, -174.172, -15.4352, 0.37 ) }
    dend_13 { pt3dadd( 6.01318, -174.364, -15.3723, 0.88 ) }
    dend_13 { pt3dadd( 5.48028, -174.628, -15.2848, 1.11 ) }
    dend_13 { pt3dadd( 5.10647, -174.852, -15.2046, 1.11 ) }
    dend_13 { pt3dadd( 4.73101, -175.091, -15.1012, 1.11 ) }
    dend_13 { pt3dadd( 3.8147, -175.706, -14.8146, 0.29 ) }
    dend_13 { pt3dadd( 3.21302, -176.127, -14.6227, 0.59 ) }
    dend_13 { pt3dadd( 2.81578, -176.413, -14.4919, 0.59 ) }
    dend_13 { pt3dadd( 1.85168, -177.17, -14.1548, 0.29 ) }
    dend_13 { pt3dadd( 1.27383, -177.68, -13.9349, 0.29 ) }
    dend_13 { pt3dadd( 0.828843, -178.127, -13.7551, 0.52 ) }
    dend_13 { pt3dadd( 0.315611, -178.7, -13.5411, 0.52 ) }
    dend_13 { pt3dadd( 0.0463233, -179.018, -13.4265, 0.81 ) }
    dend_13 { pt3dadd( -0.401351, -179.641, -13.2303, 0.81 ) }
    dend_13 { pt3dadd( -0.828688, -180.427, -13.0315, 0.29 ) }
    dend_13 { pt3dadd( -1.30325, -181.484, -12.7916, 0.29 ) }
    dend_13 { pt3dadd( -1.55695, -182.101, -12.6501, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 34/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 18.1282, -137.141, -17.6978, 0.22 ) }
    dend_12 { pt3dadd( 18.9972, -137.58, -18.0602, 0.22 ) }
    dend_12 { pt3dadd( 19.9135, -138.043, -18.4423, 0.22 ) }
    dend_12 { pt3dadd( 21.0198, -138.601, -18.9037, 0.22 ) }
    dend_12 { pt3dadd( 21.7813, -138.986, -19.2213, 0.22 ) }
    dend_12 { pt3dadd( 22.5894, -139.394, -19.5583, 0.22 ) }
    dend_12 { pt3dadd( 23.4207, -139.814, -19.9049, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 41/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 124.42, -18.6927, -142.88, 0.74 ) }
    dend_10 { pt3dadd( 126.583, -20.7449, -145.429, 0.74 ) }
    dend_10 { pt3dadd( 127.184, -21.4348, -146.014, 0.44 ) }
    dend_10 { pt3dadd( 127.643, -21.9454, -146.383, 0.74 ) }
    dend_10 { pt3dadd( 128.401, -22.6998, -146.89, 0.52 ) }
    dend_10 { pt3dadd( 129.472, -23.6279, -147.478, 0.52 ) }
    dend_10 { pt3dadd( 130.655, -24.5178, -148.087, 0.52 ) }
    dend_10 { pt3dadd( 131.593, -25.1512, -148.381, 0.52 ) }
    dend_10 { pt3dadd( 132.585, -25.7126, -148.683, 0.52 ) }
    dend_10 { pt3dadd( 133.856, -26.2279, -149.127, 0.52 ) }
    dend_10 { pt3dadd( 134.936, -26.4723, -149.537, 0.74 ) }
    dend_10 { pt3dadd( 136.074, -26.5541, -150.006, 1.03 ) }
    dend_10 { pt3dadd( 136.496, -26.5437, -150.194, 1.4 ) }
    dend_10 { pt3dadd( 136.912, -26.516, -150.396, 1.4 ) }
    dend_10 { pt3dadd( 138.562, -26.4057, -151.274, 0.44 ) }
    dend_10 { pt3dadd( 139.205, -26.3959, -151.555, 0.74 ) }
    dend_10 { pt3dadd( 140.189, -26.454, -151.848, 0.74 ) }
    dend_10 { pt3dadd( 140.89, -26.5383, -151.944, 0.96 ) }
    dend_10 { pt3dadd( 141.575, -26.6669, -151.932, 0.96 ) }
    dend_10 { pt3dadd( 142.493, -26.9202, -151.81, 0.96 ) }
    dend_10 { pt3dadd( 144.701, -27.7916, -151.255, 0.66 ) }
    dend_10 { pt3dadd( 145.613, -28.2601, -150.956, 0.81 ) }
    dend_10 { pt3dadd( 146.153, -28.6051, -150.733, 0.81 ) }
    dend_10 { pt3dadd( 147.456, -29.5401, -150.136, 0.52 ) }
    dend_10 { pt3dadd( 148.422, -30.2758, -149.692, 0.52 ) }
    dend_10 { pt3dadd( 149.467, -31.0969, -149.267, 0.52 ) }
    dend_10 { pt3dadd( 150.461, -31.8603, -148.993, 0.52 ) }
    dend_10 { pt3dadd( 151.725, -32.7825, -148.738, 0.44 ) }
    dend_10 { pt3dadd( 152.407, -33.2255, -148.691, 0.96 ) }
    dend_10 { pt3dadd( 153.114, -33.6036, -148.826, 1.11 ) }
    dend_10 { pt3dadd( 154.079, -34.0269, -149.258, 0.44 ) }
    dend_10 { pt3dadd( 154.876, -34.3671, -149.88, 0.37 ) }
    dend_10 { pt3dadd( 155.395, -34.6292, -150.49, 0.37 ) }
    dend_10 { pt3dadd( 156.148, -35.0773, -151.704, 0.66 ) }
    dend_10 { pt3dadd( 156.919, -35.5929, -153.239, 0.74 ) }
    dend_10 { pt3dadd( 157.228, -35.8047, -153.945, 0.81 ) }
    dend_10 { pt3dadd( 157.657, -36.0811, -155.043, 0.81 ) }
    dend_10 { pt3dadd( 158.204, -36.3852, -156.505, 0.66 ) }
    dend_10 { pt3dadd( 158.734, -36.6154, -157.792, 0.66 ) }
    dend_10 { pt3dadd( 159.271, -36.8133, -158.934, 0.29 ) }
    dend_10 { pt3dadd( 159.663, -36.9514, -159.677, 0.59 ) }
    dend_10 { pt3dadd( 160.1, -37.0903, -160.43, 0.74 ) }
    dend_10 { pt3dadd( 160.522, -37.2067, -161.134, 0.44 ) }
    dend_10 { pt3dadd( 161.091, -37.3486, -162.023, 0.37 ) }
    dend_10 { pt3dadd( 161.678, -37.518, -162.922, 0.37 ) }
    dend_10 { pt3dadd( 162.255, -37.7211, -163.776, 0.59 ) }
    dend_10 { pt3dadd( 162.71, -37.9167, -164.442, 0.59 ) }
    dend_10 { pt3dadd( 163.793, -38.5009, -166.35, 0.29 ) }
    dend_10 { pt3dadd( 164.428, -38.9538, -167.702, 0.29 ) }
    dend_10 { pt3dadd( 164.72, -39.2245, -168.463, 0.29 ) }
    dend_10 { pt3dadd( 164.962, -39.4849, -169.137, 0.74 ) }
    dend_10 { pt3dadd( 165.19, -39.7656, -169.827, 0.74 ) }
    dend_10 { pt3dadd( 166.005, -41.122, -172.688, 0.37 ) }
    dend_10 { pt3dadd( 166.204, -41.6375, -173.587, 0.52 ) }
    dend_10 { pt3dadd( 166.306, -42.1011, -174.365, 0.81 ) }
    dend_10 { pt3dadd( 166.381, -42.6072, -175.266, 0.37 ) }
    dend_10 { pt3dadd( 166.434, -43.0327, -176.127, 0.37 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 98/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 124.42, -18.6927, -142.88, 0.88 ) }
    dend_3 { pt3dadd( 124.963, -18.1027, -144.305, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_3 { pt3dadd( 125.153, -17.9557, -144.964, 1.25 ) }
    dend_3 { pt3dadd( 125.296, -17.8684, -145.649, 1.25 ) }
    dend_3 { pt3dadd( 125.455, -17.7487, -146.62, 0.59 ) }
    dend_3 { pt3dadd( 125.883, -17.4286, -149.217, 0.59 ) }
    dend_3 { pt3dadd( 126.313, -17.1071, -151.826, 0.96 ) }
    dend_3 { pt3dadd( 126.506, -17.0139, -153.25, 1.11 ) }
    dend_3 { pt3dadd( 126.769, -16.9352, -155.879, 1.25 ) }
    dend_3 { pt3dadd( 126.874, -16.9432, -157.564, 1.55 ) }
    // Section: dend_84, id: dend_84, parent: dend_82 (entry count 8/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -80.5692, 139.34, -33.1801, 0.22 ) }
    dend_84 { pt3dadd( -80.275, 138.133, -32.2175, 0.22 ) }
    dend_84 { pt3dadd( -80.0917, 137.382, -31.6177, 0.22 ) }
    dend_84 { pt3dadd( -79.6813, 135.699, -30.2747, 0.22 ) }
    dend_84 { pt3dadd( -79.4309, 134.672, -29.4554, 0.22 ) }
    dend_84 { pt3dadd( -79.2157, 133.789, -28.7513, 0.22 ) }
    // Section: dend_83, id: dend_83, parent: dend_82 (entry count 14/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -80.5692, 139.34, -33.1801, 0.22 ) }
    dend_83 { pt3dadd( -81.1088, 139.745, -32.9653, 0.22 ) }
    dend_83 { pt3dadd( -81.5829, 140.118, -32.7801, 0.22 ) }
    dend_83 { pt3dadd( -82.0338, 140.474, -32.604, 0.22 ) }
    dend_83 { pt3dadd( -82.4652, 140.813, -32.4355, 0.22 ) }
    dend_83 { pt3dadd( -83.1146, 141.325, -32.1819, 0.22 ) }
    dend_83 { pt3dadd( -83.4459, 141.586, -32.0525, 0.37 ) }
    dend_83 { pt3dadd( -83.7709, 141.88, -31.9093, 0.37 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 175.86, 46.0779, 97.8197, 0.29 ) }
    dend_77 { pt3dadd( 180.899, 49.9903, 107.061, 0.29 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 24/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 175.86, 46.0779, 97.8197, 0.29 ) }
    dend_76 { pt3dadd( 179.334, 48.7608, 105.828, 0.29 ) }
    // Section: dend_74, id: dend_74, parent: dend_72 (entry count 26/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 185.981, 28.3662, 61.777, 0.29 ) }
    dend_74 { pt3dadd( 186.357, 34.6236, 53.6487, 0.29 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 28/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 185.981, 28.3662, 61.777, 0.29 ) }
    dend_73 { pt3dadd( 177.695, 26.0017, 65.2128, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 30/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 136.693, 95.4287, -19.0251, 0.37 ) }
    dend_61 { pt3dadd( 136.002, 95.8378, -19.398, 0.37 ) }
    dend_61 { pt3dadd( 135.11, 96.4246, -20.1936, 0.66 ) }
    dend_61 { pt3dadd( 134.602, 96.8201, -20.9533, 0.29 ) }
    dend_61 { pt3dadd( 134.192, 97.1691, -21.6796, 0.29 ) }
    dend_61 { pt3dadd( 133.698, 97.6197, -22.5942, 0.29 ) }
    dend_61 { pt3dadd( 132.635, 98.6449, -24.5589, 0.29 ) }
    dend_61 { pt3dadd( 132.155, 99.0902, -25.4971, 0.81 ) }
    dend_61 { pt3dadd( 130.781, 100.362, -28.3963, 0.44 ) }
    dend_61 { pt3dadd( 130.335, 100.795, -29.4376, 0.96 ) }
    dend_61 { pt3dadd( 129.991, 101.188, -30.3372, 1.18 ) }
    dend_61 { pt3dadd( 129.593, 101.734, -31.5167, 0.88 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 42/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 136.693, 95.4287, -19.0251, 0.37 ) }
    dend_60 { pt3dadd( 137.561, 95.7285, -18.8363, 0.37 ) }
    dend_60 { pt3dadd( 138.551, 96.2406, -18.6396, 0.29 ) }
    dend_60 { pt3dadd( 138.91, 96.464, -18.57, 0.66 ) }
    dend_60 { pt3dadd( 139.256, 96.71, -18.4965, 0.66 ) }
    dend_60 { pt3dadd( 139.68, 97.068, -18.4181, 0.37 ) }
    dend_60 { pt3dadd( 140.268, 97.5928, -18.3235, 0.37 ) }
    dend_60 { pt3dadd( 140.894, 98.236, -18.2401, 0.81 ) }
    dend_60 { pt3dadd( 141.142, 98.5272, -18.1893, 1.11 ) }
    dend_60 { pt3dadd( 141.48, 98.9516, -18.0973, 1.33 ) }
    dend_60 { pt3dadd( 142.133, 99.8741, -17.8685, 0.44 ) }
    dend_60 { pt3dadd( 142.492, 100.464, -17.6885, 0.52 ) }
    dend_60 { pt3dadd( 142.922, 101.308, -17.3961, 1.03 ) }
    dend_60 { pt3dadd( 143.341, 102.304, -17.031, 0.52 ) }
    dend_60 { pt3dadd( 143.519, 102.807, -16.829, 0.66 ) }
    dend_60 { pt3dadd( 143.676, 103.365, -16.5879, 0.66 ) }
    dend_60 { pt3dadd( 143.843, 104.272, -16.172, 0.44 ) }
    dend_60 { pt3dadd( 143.888, 104.774, -15.9805, 0.29 ) }
    dend_60 { pt3dadd( 143.926, 105.402, -15.7941, 0.44 ) }
    dend_60 { pt3dadd( 144.017, 106.128, -15.6434, 0.66 ) }
    dend_60 { pt3dadd( 144.142, 106.739, -15.5405, 0.37 ) }
    dend_60 { pt3dadd( 144.322, 107.446, -15.455, 0.37 ) }
    dend_60 { pt3dadd( 144.628, 108.599, -15.3721, 0.29 ) }
    dend_60 { pt3dadd( 144.813, 109.341, -15.3244, 0.29 ) }
    dend_60 { pt3dadd( 145.052, 110.587, -15.2678, 0.29 ) }
    dend_60 { pt3dadd( 145.151, 111.438, -15.215, 0.29 ) }
    dend_60 { pt3dadd( 145.164, 112.096, -15.154, 1.55 ) }
    dend_60 { pt3dadd( 145.113, 112.635, -15.0846, 1.18 ) }
    dend_60 { pt3dadd( 144.951, 113.202, -14.9587, 0.96 ) }
    dend_60 { pt3dadd( 144.492, 114.098, -14.7088, 0.52 ) }
    dend_60 { pt3dadd( 143.731, 115.104, -14.3791, 0.29 ) }
    dend_60 { pt3dadd( 143.146, 115.707, -14.1706, 0.29 ) }
    dend_60 { pt3dadd( 142.842, 115.985, -14.0757, 0.29 ) }
    dend_60 { pt3dadd( 142.004, 116.739, -13.8473, 0.22 ) }
    dend_60 { pt3dadd( 141.752, 116.972, -13.7933, 0.66 ) }
    dend_60 { pt3dadd( 141.449, 117.27, -13.7439, 0.66 ) }
    dend_60 { pt3dadd( 140.954, 117.842, -13.7113, 0.37 ) }
    dend_60 { pt3dadd( 140.584, 118.435, -13.695, 0.29 ) }
    dend_60 { pt3dadd( 140.327, 119.046, -13.7142, 0.22 ) }
    dend_60 { pt3dadd( 140.158, 119.607, -13.7161, 0.22 ) }
    dend_60 { pt3dadd( 139.957, 120.485, -13.6526, 0.22 ) }
    dend_60 { pt3dadd( 139.897, 120.888, -13.5989, 0.29 ) }
    dend_60 { pt3dadd( 139.851, 121.499, -13.479, 0.29 ) }
    dend_60 { pt3dadd( 139.818, 122.42, -13.2598, 0.29 ) }
    dend_60 { pt3dadd( 139.84, 123.622, -12.9579, 0.29 ) }
    dend_60 { pt3dadd( 139.871, 124.372, -12.7544, 0.29 ) }
    dend_60 { pt3dadd( 139.926, 124.98, -12.5771, 0.29 ) }
    dend_60 { pt3dadd( 140.01, 125.777, -12.3274, 0.29 ) }
    dend_60 { pt3dadd( 140.176, 126.986, -11.9191, 0.29 ) }
    dend_60 { pt3dadd( 140.354, 127.923, -11.5962, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -22.7399, -228.622, 4.15971, 0.29 ) }
    dend_39 { pt3dadd( -22.706, -236.324, 2.67333, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -22.7399, -228.622, 4.15971, 0.29 ) }
    dend_38 { pt3dadd( -16.1165, -226.828, 6.19908, 0.29 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 96/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -21.716, -123.937, -4.85972, 0.37 ) }
    dend_26 { pt3dadd( -22.2279, -125.293, -5.16569, 0.37 ) }
    dend_26 { pt3dadd( -22.4724, -125.941, -5.31188, 0.81 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -21.716, -123.937, -4.85972, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( -26.1383, -123.561, -6.59706, 0.29 ) }
    dend_25 { pt3dadd( -27.4341, -123.451, -7.06985, 0.22 ) }
    dend_25 { pt3dadd( -29.1569, -123.418, -7.62454, 0.22 ) }
    dend_25 { pt3dadd( -30.1779, -123.476, -7.90246, 1.47 ) }
    dend_25 { pt3dadd( -30.9349, -123.519, -8.10852, 1.69 ) }
    dend_25 { pt3dadd( -31.6581, -123.56, -8.30541, 1.69 ) }
    dend_25 { pt3dadd( -33.6322, -123.635, -8.4285, 0.96 ) }
    dend_25 { pt3dadd( -35.0562, -123.826, -8.61839, 0.29 ) }
    dend_25 { pt3dadd( -36.2781, -124.177, -8.86585, 0.29 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 9/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 38.0402, -183.649, 32.484, 0.29 ) }
    dend_21 { pt3dadd( 38.4042, -184.618, 31.1992, 0.29 ) }
    dend_21 { pt3dadd( 38.7216, -185.463, 30.0787, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 38.0402, -183.649, 32.484, 0.29 ) }
    dend_20 { pt3dadd( 38.6558, -181.019, 31.1164, 0.29 ) }
    dend_20 { pt3dadd( 39.3779, -179.42, 29.5734, 0.29 ) }
    dend_20 { pt3dadd( 39.998, -178.755, 28.2357, 0.29 ) }
    dend_20 { pt3dadd( 40.5997, -178.111, 26.9378, 0.52 ) }
    dend_20 { pt3dadd( 42.3016, -176.287, 23.2666, 0.44 ) }
    dend_20 { pt3dadd( 42.8727, -175.675, 22.0347, 0.29 ) }
    dend_20 { pt3dadd( 43.8222, -175.989, 19.9955, 0.29 ) }
    dend_20 { pt3dadd( 44.1626, -176.274, 19.2643, 0.29 ) }
    dend_20 { pt3dadd( 48.1257, -169.796, 7.83937, 0.29 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 22/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -1.55695, -182.101, -12.6501, 0.22 ) }
    dend_15 { pt3dadd( -1.48069, -183.146, -12.4651, 0.22 ) }
    dend_15 { pt3dadd( -1.3453, -184.342, -12.2029, 0.22 ) }
    dend_15 { pt3dadd( -1.12998, -185.893, -11.8726, 0.22 ) }
    dend_15 { pt3dadd( -0.938289, -187.166, -11.6082, 0.22 ) }
    dend_15 { pt3dadd( -0.66994, -188.804, -11.2913, 0.22 ) }
    dend_15 { pt3dadd( -0.457051, -190.104, -11.0399, 0.22 ) }
    dend_15 { pt3dadd( -0.209845, -191.622, -10.7638, 0.22 ) }
    dend_15 { pt3dadd( -0.0245206, -192.582, -10.6084, 0.37 ) }
    dend_15 { pt3dadd( 0.0585041, -192.912, -10.5575, 0.37 ) }
    dend_15 { pt3dadd( 0.328997, -193.83, -10.4079, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 33/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -1.55695, -182.101, -12.6501, 1.55 ) }
    dend_14 { pt3dadd( -2.5114, -182.809, -12.0849, 1.55 ) }
    dend_14 { pt3dadd( -3.07517, -183.315, -11.7707, 1.55 ) }
    dend_14 { pt3dadd( -4.18725, -184.354, -11.1462, 0.29 ) }
    dend_14 { pt3dadd( -5.78549, -185.87, -10.194, 0.44 ) }
    dend_14 { pt3dadd( -6.21462, -186.216, -9.98218, 0.44 ) }
    dend_14 { pt3dadd( -8.10121, -187.447, -9.183, 0.29 ) }
    dend_14 { pt3dadd( -9.32365, -188.126, -8.72107, 0.29 ) }
    dend_14 { pt3dadd( -10.543, -188.719, -8.25707, 0.29 ) }
    dend_14 { pt3dadd( -11.8845, -189.266, -7.71305, 0.29 ) }
    dend_14 { pt3dadd( -14.4773, -190.065, -6.50614, 0.29 ) }
    dend_14 { pt3dadd( -16.7408, -190.5, -5.36804, 0.29 ) }
    dend_14 { pt3dadd( -18.1544, -190.581, -4.60754, 0.22 ) }
    dend_14 { pt3dadd( -19.5525, -190.548, -3.80382, 0.22 ) }
    dend_14 { pt3dadd( -20.6255, -190.478, -3.14678, 0.22 ) }
    dend_14 { pt3dadd( -21.7661, -190.365, -2.37799, 0.22 ) }
    dend_14 { pt3dadd( -23.0708, -190.22, -1.27102, 0.22 ) }
    dend_14 { pt3dadd( -24.023, -190.038, -0.405495, 0.22 ) }
    dend_14 { pt3dadd( -24.7081, -189.834, 0.173602, 0.52 ) }
    dend_14 { pt3dadd( -25.3384, -189.586, 0.66141, 0.52 ) }
    // Section: dend_9, id: dend_9, parent: dend_3 (entry count 53/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 126.874, -16.9432, -157.564, 0.81 ) }
    dend_9 { pt3dadd( 128.436, -17.1213, -158.991, 0.81 ) }
    dend_9 { pt3dadd( 129.583, -17.3409, -160.073, 0.88 ) }
    dend_9 { pt3dadd( 130.457, -17.5408, -160.976, 0.37 ) }
    dend_9 { pt3dadd( 130.71, -17.6002, -161.234, 0.37 ) }
    dend_9 { pt3dadd( 131.264, -17.7303, -161.8, 0.66 ) }
    dend_9 { pt3dadd( 131.624, -17.8149, -162.168, 0.74 ) }
    dend_9 { pt3dadd( 131.748, -17.8284, -162.314, 0.74 ) }
    dend_9 { pt3dadd( 132.387, -18.0771, -163.026, 0.37 ) }
    dend_9 { pt3dadd( 132.683, -18.2254, -163.399, 0.66 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 63/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 126.874, -16.9432, -157.564, 0.44 ) }
    dend_4 { pt3dadd( 128.359, -15.7216, -159.206, 0.44 ) }
    dend_4 { pt3dadd( 129.408, -14.859, -160.367, 0.44 ) }
    dend_4 { pt3dadd( 129.987, -14.3823, -161.008, 0.44 ) }
    dend_4 { pt3dadd( 131.126, -13.4458, -162.267, 1.18 ) }
    // Section: dend_65, id: dend_65, parent: dend_61 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 129.593, 101.734, -31.5167, 0.96 ) }
    dend_65 { pt3dadd( 127.893, 103.848, -34.9364, 0.96 ) }
    dend_65 { pt3dadd( 125.918, 105.883, -38.3523, 0.59 ) }
    dend_65 { pt3dadd( 125.436, 106.375, -39.1637, 0.59 ) }
    dend_65 { pt3dadd( 124.999, 106.863, -39.9307, 0.37 ) }
    dend_65 { pt3dadd( 124.054, 108.066, -41.6859, 0.29 ) }
    dend_65 { pt3dadd( 123.465, 108.876, -42.8023, 0.29 ) }
    dend_65 { pt3dadd( 123.07, 109.479, -43.4698, 0.66 ) }
    dend_65 { pt3dadd( 122.426, 110.814, -44.5957, 0.22 ) }
    dend_65 { pt3dadd( 122.102, 111.63, -45.2959, 0.22 ) }
    dend_65 { pt3dadd( 121.701, 112.651, -46.2123, 0.88 ) }
    dend_65 { pt3dadd( 121.441, 113.271, -46.7667, 0.88 ) }
    dend_65 { pt3dadd( 120.619, 114.923, -48.2754, 0.37 ) }
    dend_65 { pt3dadd( 120.172, 115.617, -49.0193, 0.96 ) }
    dend_65 { pt3dadd( 119.689, 116.232, -49.804, 1.11 ) }
    dend_65 { pt3dadd( 118.776, 117.326, -51.3608, 0.44 ) }
    dend_65 { pt3dadd( 118.255, 117.985, -52.3303, 0.37 ) }
    dend_65 { pt3dadd( 117.875, 118.516, -53.1004, 0.52 ) }
    dend_65 { pt3dadd( 116.335, 120.844, -56.3711, 0.37 ) }
    dend_65 { pt3dadd( 115.718, 122.008, -57.9126, 0.96 ) }
    dend_65 { pt3dadd( 115.297, 122.977, -59.0782, 0.96 ) }
    dend_65 { pt3dadd( 114.904, 123.99, -60.2522, 0.52 ) }
    dend_65 { pt3dadd( 114.627, 124.717, -61.1557, 1.33 ) }
    dend_65 { pt3dadd( 114.287, 125.558, -62.2736, 1.33 ) }
    dend_65 { pt3dadd( 112.74, 128.946, -66.8683, 0.52 ) }
    dend_65 { pt3dadd( 112.556, 129.322, -67.3877, 0.52 ) }
    dend_65 { pt3dadd( 112.139, 130.105, -68.5092, 0.52 ) }
    dend_65 { pt3dadd( 110.272, 133.29, -73.3068, 0.44 ) }
    dend_65 { pt3dadd( 109.348, 134.72, -75.4785, 0.59 ) }
    dend_65 { pt3dadd( 108.756, 135.598, -76.7357, 0.59 ) }
    dend_65 { pt3dadd( 108.112, 136.483, -77.8571, 0.88 ) }
    dend_65 { pt3dadd( 107.875, 136.813, -78.2138, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_65 { pt3dadd( 107.395, 137.474, -78.7361, 1.47 ) }
    dend_65 { pt3dadd( 106.197, 139.069, -79.4336, 0.29 ) }
    dend_65 { pt3dadd( 105.083, 140.583, -79.9232, 0.29 ) }
    dend_65 { pt3dadd( 104.627, 141.198, -80.0949, 0.29 ) }
    dend_65 { pt3dadd( 103.835, 142.263, -80.3352, 0.29 ) }
    dend_65 { pt3dadd( 103.336, 142.971, -80.4774, 0.29 ) }
    dend_65 { pt3dadd( 102.153, 144.727, -80.7779, 0.29 ) }
    dend_65 { pt3dadd( 101.685, 145.411, -80.9008, 0.29 ) }
    dend_65 { pt3dadd( 101.034, 146.225, -81.0931, 0.96 ) }
    dend_65 { pt3dadd( 100.605, 146.793, -81.2497, 1.25 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 10/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 129.593, 101.734, -31.5167, 0.15 ) }
    dend_62 { pt3dadd( 130.307, 103.341, -30.7456, 0.15 ) }
    dend_62 { pt3dadd( 130.698, 104.222, -30.3231, 0.15 ) }
    dend_62 { pt3dadd( 131.013, 104.929, -29.9836, 0.81 ) }
    dend_62 { pt3dadd( 131.286, 105.543, -29.6889, 1.03 ) }
    dend_62 { pt3dadd( 131.645, 106.353, -29.3005, 1.03 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 16/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -22.4724, -125.941, -5.31188, 0.52 ) }
    dend_28 { pt3dadd( -22.723, -126.769, -5.74921, 0.52 ) }
    dend_28 { pt3dadd( -23.0694, -128.102, -6.31323, 0.52 ) }
    dend_28 { pt3dadd( -23.534, -129.791, -6.84504, 0.37 ) }
    dend_28 { pt3dadd( -23.7511, -130.569, -7.07525, 0.52 ) }
    dend_28 { pt3dadd( -24.0483, -131.613, -7.36905, 0.44 ) }
    dend_28 { pt3dadd( -24.3955, -132.772, -7.70038, 0.37 ) }
    dend_28 { pt3dadd( -24.7685, -133.947, -7.98671, 0.29 ) }
    dend_28 { pt3dadd( -25.1785, -135.184, -8.20995, 0.29 ) }
    dend_28 { pt3dadd( -25.6795, -136.792, -8.45291, 1.03 ) }
    dend_28 { pt3dadd( -25.8251, -137.243, -8.5243, 1.18 ) }
    dend_28 { pt3dadd( -26.2831, -138.529, -8.75607, 0.88 ) }
    dend_28 { pt3dadd( -26.6115, -139.451, -8.94258, 0.44 ) }
    dend_28 { pt3dadd( -26.9757, -140.652, -9.21381, 0.37 ) }
    dend_28 { pt3dadd( -27.1061, -141.357, -9.39266, 0.59 ) }
    dend_28 { pt3dadd( -27.1477, -142.017, -9.5601, 0.44 ) }
    dend_28 { pt3dadd( -27.067, -143.36, -9.92077, 0.44 ) }
    dend_28 { pt3dadd( -26.9113, -144.311, -10.1817, 0.44 ) }
    dend_28 { pt3dadd( -26.6059, -145.769, -10.5774, 0.52 ) }
    dend_28 { pt3dadd( -26.3307, -147.123, -10.9307, 0.66 ) }
    dend_28 { pt3dadd( -26.1615, -148.242, -11.1395, 0.88 ) }
    dend_28 { pt3dadd( -26.1114, -149.018, -11.1989, 0.88 ) }
    dend_28 { pt3dadd( -26.1935, -150.2, -11.1096, 0.52 ) }
    dend_28 { pt3dadd( -26.486, -151.216, -10.875, 0.29 ) }
    dend_28 { pt3dadd( -27.0725, -152.423, -10.4376, 0.29 ) }
    dend_28 { pt3dadd( -27.9089, -153.796, -9.93176, 0.29 ) }
    dend_28 { pt3dadd( -28.5325, -154.703, -9.65336, 0.96 ) }
    dend_28 { pt3dadd( -28.9387, -155.312, -9.5493, 1.18 ) }
    dend_28 { pt3dadd( -29.3426, -155.99, -9.49128, 1.18 ) }
    dend_28 { pt3dadd( -29.9389, -157.27, -9.52639, 0.59 ) }
    dend_28 { pt3dadd( -30.3596, -158.622, -9.62257, 0.52 ) }
    dend_28 { pt3dadd( -30.6441, -159.938, -9.72587, 0.52 ) }
    dend_28 { pt3dadd( -30.9364, -161.641, -9.89868, 0.66 ) }
    dend_28 { pt3dadd( -31.092, -162.77, -10.007, 0.66 ) }
    dend_28 { pt3dadd( -31.2076, -163.984, -10.1041, 0.81 ) }
    dend_28 { pt3dadd( -31.256, -165.739, -10.1391, 0.81 ) }
    dend_28 { pt3dadd( -31.2051, -166.995, -9.96693, 0.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 53/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -22.4724, -125.941, -5.31188, 0.37 ) }
    dend_27 { pt3dadd( -23.0069, -125.797, -4.68827, 0.37 ) }
    dend_27 { pt3dadd( -23.7449, -125.659, -3.90259, 0.37 ) }
    dend_27 { pt3dadd( -24.1097, -125.595, -3.54662, 0.37 ) }
    dend_27 { pt3dadd( -24.9442, -125.443, -2.79826, 0.29 ) }
    dend_27 { pt3dadd( -25.4527, -125.336, -2.37313, 0.29 ) }
    dend_27 { pt3dadd( -26.0554, -125.21, -1.8691, 0.29 ) }
    dend_27 { pt3dadd( -26.6348, -125.105, -1.37738, 0.37 ) }
    dend_27 { pt3dadd( -26.9421, -125.074, -1.16385, 0.37 ) }
    dend_27 { pt3dadd( -27.2626, -125.056, -0.983908, 0.29 ) }
    dend_27 { pt3dadd( -27.6411, -125.023, -0.84568, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 64/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 38.7216, -185.463, 30.0787, 0.22 ) }
    dend_23 { pt3dadd( 37.8518, -186.534, 30.1889, 0.22 ) }
    dend_23 { pt3dadd( 36.5984, -188.078, 30.3477, 0.22 ) }
    dend_23 { pt3dadd( 35.886, -188.955, 30.438, 0.29 ) }
    dend_23 { pt3dadd( 35.4977, -189.434, 30.4872, 0.29 ) }
    dend_23 { pt3dadd( 34.4915, -190.673, 30.6147, 0.22 ) }
    dend_23 { pt3dadd( 33.834, -191.483, 30.698, 0.22 ) }
    dend_23 { pt3dadd( 28.3264, -201.987, 30.9729, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 72/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 38.7216, -185.463, 30.0787, 0.37 ) }
    dend_22 { pt3dadd( 38.5942, -186.768, 30.8333, 0.37 ) }
    dend_22 { pt3dadd( 38.3424, -187.969, 31.3429, 0.96 ) }
    dend_22 { pt3dadd( 37.891, -189.485, 31.7887, 0.59 ) }
    dend_22 { pt3dadd( 37.4925, -190.657, 31.993, 0.59 ) }
    dend_22 { pt3dadd( 37.0701, -191.899, 32.2096, 0.22 ) }
    dend_22 { pt3dadd( 36.6678, -193.082, 32.4159, 0.22 ) }
    dend_22 { pt3dadd( 36.1072, -194.36, 32.5171, 0.22 ) }
    dend_22 { pt3dadd( 35.5509, -195.457, 32.4403, 0.22 ) }
    dend_22 { pt3dadd( 34.8577, -196.601, 32.1959, 0.22 ) }
    dend_22 { pt3dadd( 32.8749, -207.503, 35.2731, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 83/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 131.126, -13.4458, -162.267, 0.37 ) }
    dend_6 { pt3dadd( 131.738, -11.5575, -169.099, 0.37 ) }
    dend_6 { pt3dadd( 131.843, -11.2018, -170.248, 0.66 ) }
    dend_6 { pt3dadd( 131.916, -10.8746, -171.129, 0.66 ) }
    dend_6 { pt3dadd( 131.951, -10.7001, -171.545, 0.96 ) }
    dend_6 { pt3dadd( 132.06, -10.1893, -172.58, 1.11 ) }
    dend_6 { pt3dadd( 132.226, -9.5262, -173.755, 1.11 ) }
    dend_6 { pt3dadd( 132.662, -8.39367, -175.017, 0.81 ) }
    dend_6 { pt3dadd( 133.063, -7.45748, -175.871, 1.4 ) }
    dend_6 { pt3dadd( 133.215, -7.13764, -176.11, 1.4 ) }
    dend_6 { pt3dadd( 133.88, -5.91148, -176.817, 0.37 ) }
    dend_6 { pt3dadd( 134.416, -5.06983, -177.139, 0.37 ) }
    dend_6 { pt3dadd( 135.138, -4.1149, -177.332, 0.37 ) }
    dend_6 { pt3dadd( 135.755, -3.38385, -177.363, 0.66 ) }
    dend_6 { pt3dadd( 136.259, -2.79155, -177.332, 0.66 ) }
    dend_6 { pt3dadd( 136.89, -1.90778, -177.261, 0.29 ) }
    dend_6 { pt3dadd( 137.295, -1.19042, -177.174, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( 137.54, -0.644688, -177.107, 0.52 ) }
    dend_6 { pt3dadd( 137.911, 0.303189, -177.031, 0.29 ) }
    dend_6 { pt3dadd( 138.293, 1.29847, -176.996, 1.03 ) }
    dend_6 { pt3dadd( 138.884, 2.80386, -177.043, 0.66 ) }
    dend_6 { pt3dadd( 139.271, 3.76688, -177.113, 0.44 ) }
    dend_6 { pt3dadd( 139.414, 4.10997, -177.143, 0.66 ) }
    dend_6 { pt3dadd( 139.855, 5.17319, -177.254, 0.37 ) }
    dend_6 { pt3dadd( 140.093, 5.70059, -177.302, 0.52 ) }
    dend_6 { pt3dadd( 140.598, 6.69128, -177.356, 0.37 ) }
    dend_6 { pt3dadd( 140.989, 7.33839, -177.341, 0.37 ) }
    dend_6 { pt3dadd( 141.413, 8.02207, -177.32, 0.37 ) }
    dend_6 { pt3dadd( 141.847, 8.80475, -177.277, 0.37 ) }
    dend_6 { pt3dadd( 142.224, 9.56977, -177.207, 0.96 ) }
    dend_6 { pt3dadd( 142.384, 9.89048, -177.174, 0.96 ) }
    dend_6 { pt3dadd( 143.061, 11.1511, -177.025, 0.29 ) }
    dend_6 { pt3dadd( 143.631, 12.1681, -176.92, 0.29 ) }
    dend_6 { pt3dadd( 144.178, 13.1091, -176.839, 0.29 ) }
    dend_6 { pt3dadd( 144.641, 13.8977, -176.783, 1.11 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 131.126, -13.4458, -162.267, 0.52 ) }
    dend_5 { pt3dadd( 129.775, -7.39373, -165.503, 0.52 ) }
    dend_5 { pt3dadd( 129.663, -6.89006, -165.744, 0.52 ) }
    dend_5 { pt3dadd( 129.113, -4.50547, -166.778, 0.37 ) }
    dend_5 { pt3dadd( 128.959, -3.83805, -167.067, 0.29 ) }
    dend_5 { pt3dadd( 128.494, -1.81897, -167.943, 0.29 ) }
    dend_5 { pt3dadd( 128.099, -0.102459, -168.687, 0.29 ) }
    dend_5 { pt3dadd( 127.815, 1.62665, -168.931, 0.29 ) }
    dend_5 { pt3dadd( 127.681, 2.37176, -169.051, 0.52 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 27/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 100.605, 146.793, -81.2497, 0.29 ) }
    dend_67 { pt3dadd( 99.6822, 148.826, -81.8783, 0.29 ) }
    dend_67 { pt3dadd( 99.3826, 149.339, -82.1956, 0.29 ) }
    dend_67 { pt3dadd( 98.9588, 150.001, -82.7136, 0.29 ) }
    dend_67 { pt3dadd( 98.207, 151.193, -83.6588, 0.29 ) }
    dend_67 { pt3dadd( 97.9237, 151.661, -83.9997, 0.44 ) }
    dend_67 { pt3dadd( 97.539, 152.296, -84.4625, 0.44 ) }
    dend_67 { pt3dadd( 96.344, 154.067, -85.8903, 0.29 ) }
    dend_67 { pt3dadd( 95.7783, 154.877, -86.6209, 0.29 ) }
    dend_67 { pt3dadd( 95.4609, 155.341, -87.0783, 0.29 ) }
    dend_67 { pt3dadd( 94.9829, 156.046, -87.784, 0.22 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 38/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 100.605, 146.793, -81.2497, 0.22 ) }
    dend_66 { pt3dadd( 99.9052, 145.788, -81.0281, 0.22 ) }
    dend_66 { pt3dadd( 99.3099, 145.029, -80.8296, 0.22 ) }
    dend_66 { pt3dadd( 98.5469, 144.155, -80.5422, 1.4 ) }
    dend_66 { pt3dadd( 97.691, 143.174, -80.2198, 0.22 ) }
    dend_66 { pt3dadd( 96.7361, 142.08, -79.86, 1.84 ) }
    dend_66 { pt3dadd( 95.8997, 141.122, -79.545, 0.22 ) }
    dend_66 { pt3dadd( 95.157, 140.349, -79.1971, 0.22 ) }
    dend_66 { pt3dadd( 94.4494, 139.667, -78.8357, 0.22 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 47/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 131.645, 106.353, -29.3005, 0.74 ) }
    dend_64 { pt3dadd( 131.55, 106.839, -28.704, 0.74 ) }
    dend_64 { pt3dadd( 131.358, 107.588, -27.73, 0.22 ) }
    dend_64 { pt3dadd( 131.19, 108.03, -27.1407, 0.22 ) }
    dend_64 { pt3dadd( 130.774, 108.869, -25.9669, 0.22 ) }
    dend_64 { pt3dadd( 130.383, 109.557, -24.8777, 1.33 ) }
    dend_64 { pt3dadd( 130.2, 109.873, -24.317, 1.33 ) }
    dend_64 { pt3dadd( 129.822, 110.44, -23.119, 0.22 ) }
    dend_64 { pt3dadd( 129.533, 110.787, -22.236, 0.22 ) }
    dend_64 { pt3dadd( 129.33, 110.983, -21.6705, 0.22 ) }
    dend_64 { pt3dadd( 128.831, 111.413, -20.4624, 0.22 ) }
    dend_64 { pt3dadd( 128.499, 111.697, -19.5227, 0.22 ) }
    dend_64 { pt3dadd( 128.345, 111.898, -18.9032, 0.37 ) }
    dend_64 { pt3dadd( 128.257, 112.128, -18.2698, 0.37 ) }
    dend_64 { pt3dadd( 128.254, 112.412, -17.5454, 0.37 ) }
    dend_64 { pt3dadd( 128.294, 112.663, -17.0092, 0.15 ) }
    dend_64 { pt3dadd( 128.368, 113.441, -15.5912, 0.22 ) }
    dend_64 { pt3dadd( 128.406, 114.118, -14.4511, 0.22 ) }
    dend_64 { pt3dadd( 128.419, 114.584, -13.6415, 0.22 ) }
    dend_64 { pt3dadd( 128.354, 115.433, -12.1877, 0.22 ) }
    dend_64 { pt3dadd( 128.229, 116.003, -11.1652, 0.22 ) }
    dend_64 { pt3dadd( 128.0, 116.688, -9.85848, 0.22 ) }
    dend_64 { pt3dadd( 127.891, 116.93, -9.38067, 0.74 ) }
    dend_64 { pt3dadd( 127.357, 117.858, -7.40947, 0.29 ) }
    dend_64 { pt3dadd( 126.996, 118.405, -6.23924, 0.29 ) }
    dend_64 { pt3dadd( 126.627, 118.952, -5.10783, 0.29 ) }
    dend_64 { pt3dadd( 126.389, 119.324, -4.25484, 0.29 ) }
    dend_64 { pt3dadd( 126.185, 119.726, -3.1713, 0.52 ) }
    dend_64 { pt3dadd( 126.037, 120.058, -2.15985, 0.37 ) }
    dend_64 { pt3dadd( 125.89, 120.477, -0.813431, 0.29 ) }
    dend_64 { pt3dadd( 125.862, 120.574, -0.477755, 0.37 ) }
    dend_64 { pt3dadd( 125.757, 120.952, 0.832462, 0.37 ) }
    dend_64 { pt3dadd( 125.587, 121.434, 2.58429, 0.37 ) }
    dend_64 { pt3dadd( 125.436, 121.776, 3.95007, 0.22 ) }
    dend_64 { pt3dadd( 125.367, 121.946, 4.71138, 0.22 ) }
    dend_64 { pt3dadd( 125.291, 122.123, 5.53281, 0.74 ) }
    dend_64 { pt3dadd( 125.235, 122.231, 5.98225, 0.88 ) }
    dend_64 { pt3dadd( 125.002, 122.651, 7.33381, 0.59 ) }
    dend_64 { pt3dadd( 124.618, 123.25, 8.81456, 0.81 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 86/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 131.645, 106.353, -29.3005, 0.29 ) }
    dend_63 { pt3dadd( 132.618, 106.987, -29.7063, 0.29 ) }
    dend_63 { pt3dadd( 133.482, 107.513, -30.2738, 0.29 ) }
    dend_63 { pt3dadd( 134.333, 108.006, -30.9304, 1.03 ) }
    dend_63 { pt3dadd( 134.732, 108.235, -31.2633, 1.03 ) }
    dend_63 { pt3dadd( 135.733, 108.739, -32.0835, 0.44 ) }
    dend_63 { pt3dadd( 136.503, 109.087, -32.6843, 0.29 ) }
    dend_63 { pt3dadd( 137.533, 109.46, -33.5192, 0.96 ) }
    dend_63 { pt3dadd( 137.884, 109.564, -33.7967, 0.96 ) }
    dend_63 { pt3dadd( 138.932, 109.843, -34.5391, 0.22 ) }
    dend_63 { pt3dadd( 139.746, 110.069, -35.0469, 0.22 ) }
    dend_63 { pt3dadd( 140.607, 110.315, -35.463, 0.22 ) }
    dend_63 { pt3dadd( 141.55, 110.618, -35.8397, 0.22 ) }
    dend_63 { pt3dadd( 142.648, 111.029, -36.1994, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_63 { pt3dadd( 143.333, 111.323, -36.3949, 0.52 ) }
    dend_63 { pt3dadd( 143.895, 111.618, -36.5121, 0.29 ) }
    dend_63 { pt3dadd( 144.596, 112.091, -36.5855, 1.03 ) }
    dend_63 { pt3dadd( 145.055, 112.461, -36.5371, 1.03 ) }
    dend_63 { pt3dadd( 145.453, 112.872, -36.388, 0.88 ) }
    dend_63 { pt3dadd( 145.848, 113.313, -36.1587, 0.66 ) }
    dend_63 { pt3dadd( 146.332, 113.892, -35.796, 0.37 ) }
    dend_63 { pt3dadd( 146.813, 114.51, -35.3373, 0.59 ) }
    dend_63 { pt3dadd( 147.365, 115.275, -34.6921, 0.29 ) }
    dend_63 { pt3dadd( 147.843, 115.931, -34.0624, 0.29 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 10/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -31.2051, -166.995, -9.96693, 0.74 ) }
    dend_30 { pt3dadd( -31.6136, -167.792, -9.68262, 0.74 ) }
    dend_30 { pt3dadd( -32.3355, -168.967, -9.24644, 0.66 ) }
    dend_30 { pt3dadd( -32.9275, -169.736, -8.95658, 0.52 ) }
    dend_30 { pt3dadd( -33.787, -170.666, -8.62051, 0.37 ) }
    dend_30 { pt3dadd( -34.2812, -171.175, -8.45127, 0.74 ) }
    dend_30 { pt3dadd( -34.6914, -171.609, -8.29553, 1.03 ) }
    dend_30 { pt3dadd( -35.2552, -172.181, -8.08359, 0.74 ) }
    dend_30 { pt3dadd( -36.0582, -173.009, -7.78401, 0.52 ) }
    dend_30 { pt3dadd( -36.8475, -173.936, -7.46887, 0.52 ) }
    dend_30 { pt3dadd( -37.359, -174.685, -7.24879, 0.66 ) }
    dend_30 { pt3dadd( -38.0419, -176.002, -6.91895, 0.88 ) }
    dend_30 { pt3dadd( -38.2304, -176.474, -6.81993, 1.18 ) }
    dend_30 { pt3dadd( -38.463, -177.238, -6.68225, 0.81 ) }
    dend_30 { pt3dadd( -38.707, -178.328, -6.51921, 0.52 ) }
    dend_30 { pt3dadd( -38.8864, -179.253, -6.43282, 0.52 ) }
    dend_30 { pt3dadd( -39.1159, -180.357, -6.39037, 0.52 ) }
    dend_30 { pt3dadd( -39.2395, -180.885, -6.4066, 0.52 ) }
    dend_30 { pt3dadd( -39.5025, -181.923, -6.45365, 0.52 ) }
    dend_30 { pt3dadd( -39.7912, -182.951, -6.50986, 0.52 ) }
    dend_30 { pt3dadd( -40.0584, -183.816, -6.58127, 1.03 ) }
    dend_30 { pt3dadd( -40.272, -184.445, -6.63959, 1.25 ) }
    dend_30 { pt3dadd( -40.5905, -185.227, -6.7274, 0.66 ) }
    dend_30 { pt3dadd( -40.9638, -185.987, -6.83568, 0.29 ) }
    dend_30 { pt3dadd( -41.5206, -186.732, -6.99443, 0.29 ) }
    dend_30 { pt3dadd( -41.9122, -186.63, -7.08626, 0.52 ) }
    dend_30 { pt3dadd( -42.9095, -185.946, -7.30878, 0.29 ) }
    dend_30 { pt3dadd( -43.6823, -185.303, -7.48793, 0.29 ) }
    dend_30 { pt3dadd( -44.4915, -184.508, -7.67851, 0.22 ) }
    dend_30 { pt3dadd( -44.642, -184.337, -7.71651, 0.52 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 40/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -31.2051, -166.995, -9.96693, 0.22 ) }
    dend_29 { pt3dadd( -31.3184, -169.383, -10.5242, 0.22 ) }
    dend_29 { pt3dadd( -31.3536, -170.339, -10.7525, 0.22 ) }
    dend_29 { pt3dadd( -31.3818, -172.241, -11.1472, 0.22 ) }
    dend_29 { pt3dadd( -31.3938, -174.391, -11.5326, 0.22 ) }
    dend_29 { pt3dadd( -31.4035, -176.133, -11.8449, 0.22 ) }
    dend_29 { pt3dadd( -31.4223, -179.516, -12.4511, 0.22 ) }
    dend_29 { pt3dadd( -31.4809, -180.963, -12.6931, 0.22 ) }
    dend_29 { pt3dadd( -31.5504, -183.822, -13.1944, 0.22 ) }
    dend_29 { pt3dadd( -31.5162, -185.418, -13.4682, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 144.641, 13.8977, -176.783, 0.29 ) }
    dend_8 { pt3dadd( 145.473, 13.0631, -177.461, 0.29 ) }
    dend_8 { pt3dadd( 145.952, 12.583, -177.851, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 53/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 144.641, 13.8977, -176.783, 0.37 ) }
    dend_7 { pt3dadd( 145.214, 14.591, -176.564, 0.37 ) }
    dend_7 { pt3dadd( 145.889, 15.4075, -176.307, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_2 = new SectionList()
    dend_78 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_78, dend_53, dend_50, dend_49, dend_44, dend_41, dend_32, dend_0, dend_88, dend_79, dend_69, dend_54, dend_52, dend_51, dend_46, dend_45, dend_43, dend_42, dend_34, dend_33, dend_17, dend_1, dend_85, dend_80, dend_71, dend_70, dend_58, dend_55, dend_48, dend_47, dend_40, dend_35, dend_31, dend_18, dend_16, dend_11, dend_2, dend_87, dend_86, dend_82, dend_81, dend_75, dend_72, dend_68, dend_59, dend_57, dend_56, dend_37, dend_36, dend_24, dend_19, dend_13, dend_12, dend_10, dend_3, dend_84, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_60, dend_39, dend_38, dend_26, dend_25, dend_21, dend_20, dend_15, dend_14, dend_9, dend_4, dend_65, dend_62, dend_28, dend_27, dend_23, dend_22, dend_6, dend_5, dend_67, dend_66, dend_64, dend_63, dend_30, dend_29, dend_8, dend_7]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_78 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_0 ModelViewParmSubset_3.append()
    dend_88 ModelViewParmSubset_3.append()
    dend_79 ModelViewParmSubset_3.append()
    dend_69 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_85 ModelViewParmSubset_3.append()
    dend_80 ModelViewParmSubset_3.append()
    dend_71 ModelViewParmSubset_3.append()
    dend_70 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_87 ModelViewParmSubset_3.append()
    dend_86 ModelViewParmSubset_3.append()
    dend_82 ModelViewParmSubset_3.append()
    dend_81 ModelViewParmSubset_3.append()
    dend_75 ModelViewParmSubset_3.append()
    dend_72 ModelViewParmSubset_3.append()
    dend_68 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_84 ModelViewParmSubset_3.append()
    dend_83 ModelViewParmSubset_3.append()
    dend_77 ModelViewParmSubset_3.append()
    dend_76 ModelViewParmSubset_3.append()
    dend_74 ModelViewParmSubset_3.append()
    dend_73 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_65 ModelViewParmSubset_3.append()
    dend_62 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_67 ModelViewParmSubset_3.append()
    dend_66 ModelViewParmSubset_3.append()
    dend_64 ModelViewParmSubset_3.append()
    dend_63 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_78 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_50 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_44 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_41 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_88 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_69 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_54 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_52 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_51 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_46 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_45 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_43 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_42 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_34 OneSecGrp_SectionRef_21.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_70 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_55 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_40 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_16 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_11 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_2 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_75 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_68 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_59 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_24 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_19 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_13 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_65 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_28 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_6 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_64 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_0 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_49 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_53 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_18 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_58 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_79 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_47 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_57 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_26 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_85 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_27 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_86 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_12 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_56 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_25 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_80 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_81 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_87 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_71 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_82 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_83 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_35 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_84 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_61 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_29 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_62 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_15 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_30 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_21 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_72 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_60 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_73 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_74 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_14 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_63 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_23 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_22 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_3 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_20 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_76 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_77 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_4 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_9 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_38 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_39 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_5 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_66 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_67 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_7 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_8 OneSecGrp_SectionRef_91.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_81, dend_81, dend_81, dend_81, dend_81, dend_75, dend_75, dend_75, dend_75, dend_72, dend_72, dend_72, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_56, dend_56, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_84, dend_84, dend_84, dend_84, dend_84, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_77, dend_76, dend_74, dend_73, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_39, dend_38, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_4, dend_4, dend_4, dend_4, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_62, dend_62, dend_62, dend_62, dend_62, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_8, dend_8, dend_7, dend_7]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_78 all.append()
    dend_78 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_74 all.append()
    dend_73 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_78 nseg = 5
    dend_50 nseg = 9
    dend_44 nseg = 3
    dend_41 nseg = 7
    dend_32 nseg = 3
    dend_88 nseg = 3
    dend_69 nseg = 5
    dend_54 nseg = 3
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_46 nseg = 3
    dend_45 nseg = 7
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_34 nseg = 5
    dend_33 nseg = 5
    dend_17 nseg = 3
    dend_70 nseg = 3
    dend_55 nseg = 3
    dend_48 nseg = 5
    dend_40 nseg = 3
    dend_16 nseg = 5
    dend_11 nseg = 5
    dend_2 nseg = 9
    dend_75 nseg = 3
    dend_68 nseg = 5
    dend_59 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_19 nseg = 7
    dend_13 nseg = 3
    dend_10 nseg = 3
    dend_65 nseg = 3
    dend_28 nseg = 3
    dend_6 nseg = 3
    dend_64 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L6_ChC_df66841015_0_0


