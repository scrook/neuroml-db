// Cell: cNAC187_L23_NBC_1bb1c095e5_0_0
/*
{
  "id" : "cNAC187_L23_NBC_1bb1c095e5_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.75681, 7.93669, -3.00698, 2.63904", "-6.11415, 7.12684, -2.72405, 4.23664", "-5.47148, 6.31698, -2.44112, 6.10767", "-4.82882, 5.50713, -2.15818, 7.7632", "-4.18616, 4.69727, -1.87525, 10.2402", "-3.5435, 3.88742, -1.59232, 11.8064", "-2.90084, 3.07757, -1.30939, 12.5995", "-2.25818, 2.26771, -1.02645, 13.3962", "-1.61552, 1.45786, -0.74352, 14.1996", "-0.972859, 0.648002, -0.460588, 14.817", "-0.330198, -0.161852, -0.177655, 15.467", "0.312463, -0.971706, 0.105278, 16.407", "0.955124, -1.78156, 0.38821, 17.1741", "1.59778, -2.59142, 0.671143, 17.2738", "2.24045, -3.40127, 0.954075, 17.3386", "2.88311, -4.21112, 1.23701, 17.3694", "3.52577, -5.02098, 1.51994, 15.6873", "4.16843, -5.83083, 1.80287, 14.1508", "4.81109, -6.64069, 2.08581, 12.6795", "5.45375, -7.45054, 2.36874, 9.91553", "6.09641, -8.2604, 2.65167, 5.27854" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-1.51781, -10.5212, 2.68779, 3.6", "-0.969729, -12.4231, 4.13891, 3.6", "-0.322797, -15.0468, 6.41604, 1.66", "0.412523, -17.6893, 8.76834, 1.66", "1.29362, -20.4667, 11.2961, 1.38", "2.63185, -24.5224, 14.8595, 1.38", "3.3938, -26.8948, 16.859, 1.38", "4.64855, -30.5301, 19.9432, 0.83", "5.91581, -33.9837, 22.8423, 1.11", "6.74847, -36.0796, 24.5568, 0.83", "7.76368, -38.4795, 26.3503, 0.83", "8.86548, -40.8379, 27.892, 0.83", "9.78328, -42.7623, 29.0888, 0.83", "10.1925, -43.5309, 29.5821, 0.83", "11.2372, -45.6216, 30.9636, 0.83", "11.6658, -46.4667, 31.5547, 0.83", "12.4809, -47.8886, 32.7278, 0.83", "13.4003, -49.3894, 34.0941, 0.83", "14.9483, -52.351, 36.9115, 0.83", "15.8745, -54.2225, 38.6718, 0.83", "19.0182, -59.1413, 44.3516, 0.83", "21.6244, -64.2454, 50.1217, 0.83", "25.5033, -68.8414, 55.6446, 0.83", "29.7197, -72.9847, 61.3148, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-8.94782, 4.26083, -7.77221, 1.11", "-8.76731, 7.2554, -7.61817, 1.11", "-8.83965, 10.3142, -7.46943, 0.83", "-9.21126, 13.8014, -6.99092, 0.83", "-9.53281, 15.8414, -6.7289, 1.66", "-10.2725, 19.5069, -6.252, 1.94", "-11.1255, 22.9578, -5.89718, 0.83", "-11.7238, 24.8181, -5.73484, 0.83", "-13.5844, 29.3737, -5.4831, 1.38", "-14.9765, 31.998, -5.63846, 0.55", "-15.5248, 32.9871, -5.79559, 0.55", "-16.6616, 35.0595, -6.66446, 0.55", "-16.9069, 35.5409, -6.93569, 0.55", "-17.9662, 37.7337, -8.45382, 0.55", "-19.4324, 40.9512, -11.2321, 1.66", "-20.4996, 43.6335, -13.4734, 1.66", "-21.6404, 47.0717, -16.2581, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-5.06781, -2.32267, 12.3478, 1.94", "-6.69681, -2.86716, 15.8892, 1.94", "-8.20089, -3.36988, 19.1591, 1.66", "-12.7061, -4.87573, 28.9535, 1.38", "-14.0501, -5.32497, 31.8754, 1.38", "-16.1923, -6.041, 36.5326, 1.11", "-19.3878, -7.10905, 43.4795, 1.94" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-6.57781, 2.74083, -8.27221, 1.11", "-7.51163, 0.960532, -7.82227, 1.11", "-8.7068, -1.54733, -7.38148, 0.83", "-9.95566, -4.11692, -7.15017, 0.83", "-11.7787, -7.55392, -7.1545, 0.55", "-12.3335, -8.55826, -7.21718, 0.55", "-13.5396, -10.9424, -7.59953, 0.55", "-14.0166, -11.9927, -7.93787, 0.55", "-14.8593, -13.7411, -8.82423, 0.83", "-15.5738, -15.1683, -9.87872, 0.55", "-15.9723, -15.9126, -10.5325, 0.55", "-17.3884, -18.5084, -12.715, 1.11", "-17.9885, -19.6941, -13.6496, 0.55", "-18.6711, -21.1439, -14.81, 0.55", "-19.3962, -22.8655, -16.1945, 0.55", "-19.7379, -23.6283, -16.8204, 0.55", "-20.4855, -25.1099, -18.1085, 1.11", "-21.3314, -26.5764, -19.3746, 0.55", "-22.2043, -28.1307, -20.6563, 0.55", "-23.789, -30.8102, -22.8707, 1.38", "-24.9064, -32.3746, -24.2201, 0.55", "-26.0884, -33.7232, -25.4604, 0.55", "-27.0654, -34.6612, -26.3924, 0.55", "-28.387, -35.7913, -27.5547, 0.55", "-30.6329, -37.5074, -29.3661, 1.94", "-32.0265, -38.4251, -30.3879, 0.55", "-33.5196, -39.3692, -31.4217, 0.83", "-35.092, -40.31, -32.4445, 0.28", "-35.7594, -40.7091, -32.8921, 0.55", "-37.161, -41.6325, -33.9288, 0.28", "-37.9776, -42.312, -34.5766, 0.28", "-39.2623, -43.6197, -35.8583, 1.94", "-40.3513, -44.8588, -37.1203, 0.28", "-41.3286, -46.0368, -38.3129, 0.55", "-42.669, -47.7365, -40.1166, 0.28", "-43.2823, -48.5635, -41.0128, 0.83", "-44.937, -50.7754, -43.4706, 0.28", "-45.9079, -52.1604, -45.1288, 0.83", "-46.2699, -52.7255, -45.8013, 0.28", "-46.8604, -53.6206, -46.8433, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-0.177811, 4.62183, -8.24221, 1.38", "-2.34719, 4.94798, -8.47981, 1.38", "-5.11692, 5.22034, -8.90778, 0.83", "-9.83689, 5.34552, -9.83314, 0.83", "-14.1273, 5.13821, -10.7672, 0.83", "-18.5289, 4.66605, -11.9213, 0.83", "-20.2088, 4.41467, -12.402, 0.55", "-23.2207, 3.63806, -13.3521, 0.83", "-25.3695, 2.83528, -14.0409, 0.55", "-28.1724, 1.60499, -15.0061, 0.83", "-30.7597, 0.552207, -15.9832, 0.55", "-31.6561, 0.236956, -16.3524, 0.55", "-34.0562, -0.392735, -17.3872, 0.83", "-36.0324, -0.751605, -18.2621, 0.55", "-39.2143, -1.22029, -19.8416, 0.55", "-41.7608, -1.63914, -21.3376, 0.83", "-43.9361, -2.18338, -22.8075, 0.55", "-45.8924, -3.00984, -24.4668, 0.28", "-46.9512, -3.63843, -25.5559, 0.28", "-47.5272, -4.11639, -26.2296, 0.55", "-48.4892, -5.25568, -27.3261, 0.55", "-49.8555, -6.95304, -28.9809, 0.83", "-51.0746, -8.17488, -30.1443, 0.55", "-52.6545, -9.45397, -31.42, 0.55", "-53.399, -10.031, -32.037, 0.55", "-55.801, -11.7532, -34.0072, 1.11", "-59.3263, -14.0234, -36.7933, 0.55", "-62.4507, -15.7649, -39.145, 0.55", "-64.408, -16.8344, -40.6289, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-7.28781, 3.99482, -7.77221, 1.38", "-8.47584, 5.88926, -7.77221, 1.38", "-9.30893, 7.2177, -7.77221, 1.38" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.01219, 4.82133, -4.12221, 0.83", "1.90449, 6.70894, -4.3681, 0.83", "4.01943, 9.74022, -5.35541, 0.83", "6.49915, 12.5859, -6.561, 0.83", "7.33112, 13.5595, -7.02202, 0.83", "9.16257, 15.7068, -8.15507, 0.83", "11.7239, 18.5562, -9.71123, 1.38", "14.1208, 20.8709, -11.1802, 0.83", "16.1503, 22.5784, -12.4035, 0.83", "19.7541, 25.4584, -14.6597, 1.38", "21.3127, 26.8015, -15.6872, 1.11", "23.4068, 28.7901, -17.0852, 1.11", "25.7784, 31.1021, -18.5272, 1.11", "28.1075, 33.4239, -19.842, 1.38", "30.4122, 35.7204, -21.2088, 0.83", "31.5176, 36.7607, -21.828, 0.83", "33.1902, 38.4566, -22.8269, 0.83", "34.5944, 39.9695, -23.7084, 0.83", "36.6109, 42.0187, -24.8945, 1.94", "38.8642, 44.1235, -26.2301, 0.83", "41.8211, 46.7274, -28.0325, 0.83", "44.6914, 48.9744, -29.8252, 1.66", "46.2743, 50.1084, -30.3951, 0.83", "48.4561, 51.4588, -30.0377, 0.83", "51.2137, 52.6999, -28.2567, 0.55", "52.3665, 53.0564, -27.2208, 0.83", "54.5489, 53.5323, -25.0916, 0.83", "66.9924, 55.6214, -12.8698, 2.22", "69.3245, 55.9512, -10.6521, 0.55", "70.4925, 56.1028, -9.59956, 0.55", "72.7153, 56.332, -7.72922, 1.11", "77.1843, 56.7082, -4.726, 0.55", "79.1414, 56.8449, -4.49435, 0.55", "81.0273, 56.9579, -5.26674, 1.11", "83.1272, 57.2164, -6.046, 0.55", "84.6632, 57.571, -6.5626, 0.28", "85.4328, 57.8046, -6.78243, 0.55", "87.4381, 58.4462, -7.14838, 0.28", "88.3729, 58.7389, -7.34883, 0.83", "91.0663, 59.6096, -7.97153, 0.28", "92.5765, 60.0666, -8.3277, 1.11", "95.3628, 60.8403, -8.84016, 0.28", "96.852, 61.268, -8.90735, 0.83", "98.9242, 61.8082, -8.77794, 0.28", "99.9991, 62.0337, -8.63918, 0.55", "101.647, 62.3373, -8.31578, 0.28", "103.967, 62.734, -7.76844, 1.11", "108.579, 63.5846, -6.4526, 0.28", "110.694, 63.9785, -5.8447, 1.11", "112.575, 64.3061, -5.33104, 0.55", "113.922, 64.5093, -5.06136, 0.83", "115.348, 64.6539, -4.94226, 0.28", "116.23, 64.6571, -4.99373, 0.83", "117.724, 64.564, -5.24451, 0.28", "118.72, 64.4845, -5.34691, 0.55", "120.398, 64.2736, -5.43807, 0.28", "121.521, 64.1175, -5.40832, 0.55", "124.369, 63.7364, -5.12613, 0.28", "125.921, 63.5119, -4.91607, 0.83", "127.085, 63.376, -4.68016, 0.28", "127.894, 63.3285, -4.47113, 0.55", "129.654, 63.3474, -3.86375, 0.28", "130.477, 63.4184, -3.55043, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-10.3378, 3.47233, -8.95221, 3.05", "-11.3787, 3.69096, -9.68776, 3.05", "-14.308, 4.30629, -11.7578, 2.22", "-17.7375, 5.02666, -14.1813, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "8.22219, 5.04932, 2.17779, 2.77", "10.106, 6.90219, 5.09934, 2.77", "12.0633, 8.8273, 8.1348, 2.77", "16.0806, 12.7786, 14.3651, 3.6", "17.0456, 13.7277, 15.8617, 3.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995020322374
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.09641, -8.2604, 2.65167, 0.83", "15.4206, -20.0103, 2.65167, 0.83", "24.7447, -31.7602, 2.65167, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "29.7197, -72.9847, 61.3148, 0.55", "31.9342, -78.4239, 66.5698, 0.55", "35.1579, -83.9302, 71.1343, 0.55", "38.5849, -90.1779, 74.2244, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "29.7197, -72.9847, 61.3148, 0.28", "33.76, -80.775, 68.5301, 0.55", "38.1345, -87.6611, 76.5273, 0.55", "43.2226, -95.3134, 83.2131, 0.55" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-21.6404, 47.0717, -16.2581, 0.55", "-22.0679, 48.2355, -16.2915, 0.55", "-22.8138, 50.3731, -16.7068, 0.55", "-23.3392, 51.7735, -17.0493, 1.38", "-24.7985, 55.6454, -18.1746, 0.55", "-25.3678, 57.2404, -18.8058, 0.55", "-26.3746, 60.0563, -20.0288, 1.38", "-27.9927, 64.2843, -22.063, 0.55", "-28.9265, 66.6972, -23.3194, 0.55", "-29.8893, 69.2635, -24.7208, 1.38", "-31.424, 73.614, -27.2461, 0.55", "-32.3507, 76.0592, -28.6592, 0.28", "-32.8235, 77.2543, -29.3068, 0.55", "-33.4319, 78.7373, -30.0122, 0.28", "-33.855, 79.7903, -30.6255, 0.83", "-34.5745, 81.5218, -31.81, 0.28", "-35.2676, 83.1313, -33.2424, 0.83", "-36.0673, 84.8836, -35.1893, 0.28", "-37.0772, 86.8883, -37.7174, 1.11", "-39.2824, 90.4366, -43.0506, 0.28", "-40.4877, 92.0913, -45.8957, 0.83", "-42.6354, 94.5123, -50.7693, 1.66", "-43.4996, 95.3643, -52.7121, 0.28", "-43.9886, 95.7471, -53.7249, 1.11", "-46.4408, 97.2951, -58.2905, 0.55", "-47.4129, 97.777, -59.8006, 1.38", "-50.5146, 99.1204, -64.1828, 0.28", "-50.8596, 99.2685, -64.6376, 0.55", "-52.6149, 100.056, -66.9625, 0.28", "-53.3081, 100.371, -67.9217, 0.83", "-54.683, 100.962, -69.7754, 0.28", "-54.8656, 101.016, -70.008, 0.55", "-57.2514, 101.486, -72.8622, 0.28", "-58.6005, 101.733, -74.4517, 0.83", "-62.3909, 102.508, -78.8925, 0.28", "-64.0745, 102.891, -80.8546, 1.11", "-67.4609, 103.939, -84.6927, 0.55", "-68.3296, 104.286, -85.644, 0.55", "-69.9398, 105.143, -87.3152, 0.83", "-72.4608, 106.906, -89.8427, 0.28", "-73.0191, 107.422, -90.3676, 0.55", "-75.8313, 110.716, -93.0756, 0.28", "-76.6092, 111.805, -93.8094, 1.66", "-78.0511, 113.923, -95.143, 0.28", "-78.3697, 114.402, -95.4355, 0.55", "-79.5017, 116.151, -96.4404, 0.28", "-80.0643, 117.037, -97.0153, 0.83", "-80.9804, 118.436, -98.0097, 0.28", "-81.174, 118.713, -98.2415, 0.55", "-82.2984, 120.227, -99.7067, 0.28", "-82.9619, 121.069, -100.581, 0.55", "-84.3951, 122.621, -102.495, 0.28", "-85.0311, 123.315, -103.786, 0.28", "-85.743, 124.097, -105.587, 0.83", "-86.6811, 125.102, -108.172, 0.55", "-86.9774, 125.4, -109.011, 0.55", "-88.16, 126.522, -112.395, 0.83", "-91.0116, 128.985, -120.194, 0.28", "-91.3947, 129.316, -121.242, 0.83", "-92.3977, 130.165, -123.818, 0.28", "-92.8377, 130.53, -124.911, 0.55", "-94.1486, 131.666, -128.029, 0.28", "-95.0664, 132.458, -129.929, 0.83", "-96.2189, 133.355, -131.787, 0.28", "-97.1036, 134.074, -133.263, 0.28", "-97.9961, 134.812, -134.827, 0.55", "-99.8991, 136.407, -138.285, 0.28", "-100.17, 136.62, -138.761, 0.55", "-101.712, 137.703, -141.345, 0.28", "-102.076, 137.926, -141.908, 0.55", "-103.623, 138.781, -144.112, 0.28", "-104.437, 139.173, -145.064, 0.55", "-106.417, 140.035, -146.809, 0.28", "-106.892, 140.215, -147.171, 0.55", "-107.993, 140.561, -147.932, 0.28", "-108.932, 140.844, -148.546, 0.55", "-113.308, 142.154, -151.193, 0.28", "-116.273, 143.053, -152.935, 0.55", "-120.986, 144.446, -155.563, 0.28", "-122.444, 144.861, -156.362, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-21.6404, 47.0717, -16.2581, 0.28", "-22.2181, 48.0626, -16.2269, 0.28", "-22.7905, 49.0292, -16.2343, 0.83", "-23.2491, 49.8778, -16.2912, 0.28", "-24.4621, 52.0274, -16.4343, 0.55", "-25.1584, 53.3299, -16.546, 0.55", "-25.9353, 54.7579, -16.6817, 0.55", "-26.6401, 56.1085, -16.82, 1.38", "-27.617, 57.8889, -16.991, 0.55", "-28.8165, 59.8855, -17.1827, 0.83", "-29.4727, 60.9502, -17.2522, 0.28", "-30.0968, 62.0631, -17.3125, 0.83", "-30.7406, 63.2854, -17.3544, 0.55", "-31.7937, 65.3465, -17.4529, 1.94", "-32.6793, 67.1928, -17.5515, 0.28", "-33.1899, 68.4806, -17.7891, 0.83", "-33.7307, 70.112, -18.2131, 0.28", "-33.8966, 70.9661, -18.5928, 0.83", "-33.9986, 71.7515, -19.044, 0.28", "-34.077, 72.8714, -19.7681, 0.83", "-34.2667, 75.6682, -21.6555, 0.55", "-34.3967, 76.98, -22.5238, 1.94", "-34.7399, 80.1075, -24.3988, 0.55", "-34.9433, 81.5401, -25.1669, 0.55", "-35.2823, 83.2761, -25.9246, 1.11", "-35.7098, 84.9149, -26.4742, 0.28", "-36.0916, 86.0277, -26.6927, 0.55", "-36.8592, 87.7867, -26.9184, 0.55", "-37.6739, 89.3365, -26.9452, 0.55", "-38.5345, 90.8951, -26.9353, 0.55", "-39.067, 91.7694, -26.9036, 0.55", "-39.7862, 92.9048, -26.796, 1.11", "-40.5217, 94.0331, -26.722, 0.28", "-41.0997, 94.9844, -26.7079, 0.55", "-41.8116, 96.3294, -26.7637, 0.28", "-42.1368, 97.0608, -26.8298, 0.55", "-42.5978, 98.3532, -26.9803, 0.28", "-43.0669, 100.057, -27.2926, 0.83", "-43.4262, 101.745, -27.6785, 0.28", "-43.5577, 102.658, -27.8768, 0.55", "-43.6938, 103.828, -28.1306, 0.28", "-43.842, 105.156, -28.4112, 2.22", "-44.0998, 107.611, -28.9003, 0.28", "-44.157, 108.02, -28.9763, 0.55", "-44.5621, 110.065, -29.4118, 0.28", "-44.7884, 111.026, -29.6802, 0.83", "-45.345, 112.845, -30.2748, 0.28", "-45.6676, 113.707, -30.5827, 0.83", "-46.36, 115.398, -31.2123, 0.28", "-46.8511, 116.492, -31.6491, 0.83", "-47.6861, 118.15, -32.4147, 0.28", "-48.1882, 119.165, -32.8852, 1.38", "-48.9384, 120.716, -33.5754, 0.28", "-49.2864, 121.437, -33.8681, 0.55", "-49.5606, 122.032, -34.0657, 0.55", "-50.2725, 123.627, -34.5599, 0.28", "-50.3773, 123.865, -34.6176, 0.55", "-50.6953, 124.654, -34.8034, 0.28", "-50.834, 125.049, -34.8519, 0.55", "-51.3398, 126.533, -34.945, 0.28", "-51.4667, 126.931, -34.9585, 0.55", "-52.0778, 128.985, -34.9349, 0.28", "-52.2986, 129.709, -34.9274, 0.55", "-53.1127, 132.418, -34.9045, 0.28", "-53.2223, 132.82, -34.8869, 0.83" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-19.3878, -7.10905, 43.4795, 1.11", "-20.1199, -6.43245, 43.7083, 1.11", "-21.4031, -5.12565, 44.1368, 0.83", "-22.3346, -4.08794, 44.4494, 0.83", "-23.668, -2.6541, 44.9606, 1.11", "-25.6811, -0.651685, 45.7479, 0.83", "-26.2257, -0.143425, 45.9891, 0.55", "-27.122, 0.619936, 46.4867, 0.83", "-28.3073, 1.50877, 47.2361, 0.83", "-29.9935, 2.60028, 48.3574, 1.11", "-30.8809, 3.10268, 48.9633, 0.83", "-32.6069, 4.0026, 50.1726, 1.11", "-34.5266, 5.01515, 51.5421, 0.83", "-35.5566, 5.50661, 52.2663, 0.83", "-36.316, 5.86147, 52.8153, 0.83", "-36.9709, 6.24862, 53.2812, 0.55", "-37.687, 6.77417, 53.804, 0.83", "-38.7313, 7.69568, 54.323, 0.55", "-39.3337, 9.03288, 54.4728, 0.55", "-42.9163, 12.9756, 57.8764, 0.55", "-46.7494, 16.4965, 61.5102, 0.55", "-51.702, 19.4573, 64.2384, 0.55", "-56.8266, 22.3791, 66.6831, 0.55", "-61.9509, 24.6752, 69.7702, 0.55", "-66.8695, 27.0495, 73.1144, 0.55", "-71.6066, 29.9462, 76.2644, 0.55", "-76.6251, 32.8165, 78.9788, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-19.3878, -7.10905, 43.4795, 1.11", "-20.2059, -7.93816, 44.5886, 1.11", "-21.3885, -8.89676, 46.1465, 0.83", "-21.963, -9.19007, 46.8793, 0.83", "-23.4413, -9.24757, 48.5814, 0.83", "-25.3466, -8.78452, 50.4925, 0.83", "-26.0476, -8.40987, 51.0669, 0.83", "-27.2831, -7.6764, 51.7864, 0.83", "-29.2326, -6.40992, 52.5896, 0.83", "-31.4278, -4.81213, 53.2736, 0.83", "-32.5962, -3.9042, 53.5157, 0.83", "-34.975, -1.99883, 53.8143, 0.83", "-36.7409, -0.599045, 53.9742, 0.55", "-37.6463, 0.047849, 54.0069, 0.55", "-38.8013, 0.735873, 53.9968, 0.55", "-40.08, 1.42974, 53.8735, 0.55", "-41.3718, 2.02557, 53.754, 0.55", "-47.5458, 3.72572, 56.167, 0.55", "-52.9196, 5.6745, 59.9366, 0.55", "-58.0952, 6.33054, 64.4395, 0.55" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-46.8604, -53.6206, -46.8433, 0.28", "-47.5637, -52.4326, -47.6945, 0.28", "-48.0454, -51.6189, -48.2774, 0.55", "-48.8388, -50.2787, -49.2376, 0.28", "-49.5904, -49.009, -50.1473, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-46.8604, -53.6206, -46.8433, 0.28", "-48.3647, -54.5871, -47.6245, 0.28", "-48.8789, -54.9436, -47.8972, 0.55", "-50.8398, -56.285, -48.6621, 0.28", "-52.107, -57.262, -49.1714, 0.83", "-53.6752, -58.6394, -49.8987, 0.28", "-54.6153, -59.5924, -50.4277, 0.55", "-55.2632, -60.3399, -50.8529, 0.28", "-56.9518, -62.6483, -52.2141, 2.77", "-59.2, -66.238, -54.3988, 0.28", "-60.2871, -68.1883, -55.6303, 0.83", "-61.4439, -70.6234, -57.1346, 0.28", "-61.9233, -71.8201, -57.8112, 0.55", "-62.8646, -74.4576, -59.2789, 0.28", "-63.1682, -75.3409, -59.826, 0.55", "-63.4857, -76.142, -60.3026, 0.28", "-64.4114, -77.8888, -61.2664, 0.83", "-65.7654, -79.7649, -62.2962, 0.28", "-67.13, -81.2236, -63.14, 0.83", "-69.925, -83.4517, -64.5542, 0.55", "-71.2359, -84.2876, -65.1222, 0.28", "-73.8422, -85.6296, -66.1275, 0.55", "-75.846, -86.4044, -66.8401, 0.55", "-78.4865, -87.1671, -67.3771, 0.28", "-80.7837, -87.7367, -67.5634, 0.83", "-82.8203, -88.1957, -67.5323, 0.55", "-84.6075, -88.5522, -67.4731, 0.28", "-87.9229, -89.193, -67.4545, 0.55", "-93.3139, -90.3613, -67.5483, 0.28", "-96.5782, -91.0735, -67.7229, 0.83", "-99.4638, -91.7905, -68.0444, 0.28", "-101.381, -92.3428, -68.3746, 0.55", "-104.725, -93.3633, -69.0917, 0.28", "-106.007, -93.8037, -69.4668, 0.83", "-107.08, -94.2046, -69.9755, 0.28", "-109.717, -95.193, -71.3146, 0.28", "-110.799, -95.6195, -71.941, 0.55" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-64.408, -16.8344, -40.6289, 0.28", "-66.0667, -18.9518, -42.1137, 0.28", "-68.2015, -21.6612, -43.9344, 0.83", "-71.0387, -25.1563, -46.1693, 0.28", "-71.9895, -26.2419, -46.8534, 0.55", "-73.6381, -27.9974, -47.9197, 0.28", "-74.6797, -29.0691, -48.5824, 0.55", "-75.5873, -29.9365, -49.1254, 0.28", "-76.8454, -31.0297, -49.7517, 0.55", "-78.7101, -32.5154, -50.5532, 0.28", "-80.3899, -33.7979, -51.1822, 0.55", "-83.4044, -36.0252, -52.276, 0.28", "-84.7935, -37.0322, -52.7652, 0.55", "-85.878, -37.8301, -53.1614, 0.28", "-86.8588, -38.5707, -53.5021, 0.55", "-90.0227, -40.9865, -54.6188, 0.28", "-91.5967, -42.0978, -54.9023, 0.55", "-93.9621, -43.648, -54.9091, 0.28", "-95.4318, -44.5718, -54.7796, 0.55", "-96.6855, -45.4472, -54.9675, 0.28", "-98.8215, -47.1093, -55.8279, 0.83", "-103.591, -51.2567, -58.7313, 0.28", "-104.312, -51.9256, -59.2539, 0.83", "-105.161, -52.7505, -60.0132, 0.28", "-113.14, -60.0473, -66.8706, 0.55", "-114.579, -61.3505, -68.1273, 0.28", "-115.565, -62.2103, -68.9595, 0.55", "-116.998, -63.4032, -70.1826, 0.28", "-118.051, -64.2327, -70.9852, 0.55", "-121.61, -66.6527, -72.6088, 0.28", "-122.488, -67.0445, -72.4953, 0.55", "-125.143, -68.1146, -72.0206, 0.28", "-126.648, -68.6592, -71.6908, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-64.408, -16.8344, -40.6289, 0.28", "-66.6138, -15.4893, -41.9815, 0.28", "-67.5261, -15.0683, -42.4436, 0.55", "-68.6976, -14.5947, -43.0025, 0.28", "-69.0034, -14.4828, -43.1316, 0.55", "-70.4488, -13.9799, -43.6896, 0.28", "-71.0663, -13.7795, -43.9086, 0.83", "-73.5498, -13.149, -44.6541, 0.28", "-74.3907, -12.9487, -44.8819, 0.83", "-76.9349, -12.3137, -45.45, 0.28", "-78.6915, -11.815, -45.7836, 0.28", "-79.9163, -11.4418, -45.9824, 0.55", "-81.0929, -11.0637, -46.1598, 0.28", "-81.3688, -10.9712, -46.1962, 0.55", "-83.0148, -10.3993, -46.3508, 0.28", "-83.8298, -10.082, -46.3875, 0.83" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.30893, 7.2177, -7.77221, 1.11", "-7.7093, 7.41767, -9.36515, 1.11", "-6.03879, 8.05538, -11.4691, 1.38", "-2.63005, 10.4759, -17.2709, 2.49", "-1.49763, 12.0302, -20.3238, 2.49", "-0.947065, 13.1496, -22.2047, 1.11", "-0.32949, 14.372, -24.0035, 1.11", "0.754513, 18.1745, -28.4471, 1.11", "1.0515, 20.4049, -30.6216, 1.11", "1.07877, 21.7104, -31.6369, 1.11", "0.810023, 24.484, -34.0026, 1.11", "0.502723, 27.1172, -36.3254, 1.38", "0.936193, 30.7489, -39.7966, 1.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.30893, 7.2177, -7.77221, 0.83", "-10.6774, 7.88755, -7.76657, 0.83" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "130.477, 63.4184, -3.55043, 0.28", "132.964, 63.1742, -2.74282, 0.28", "134.309, 63.085, -2.43806, 0.55", "137.216, 62.8921, -1.77946, 0.28", "139.851, 62.7172, -1.18251, 0.28", "141.239, 62.6252, -0.868207, 0.55", "143.387, 62.4826, -0.38153, 0.28", "145.063, 62.4813, -0.018883, 0.55" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "130.477, 63.4184, -3.55043, 0.28", "131.878, 64.8831, -4.16882, 0.28", "132.439, 65.487, -4.39578, 1.11", "133.598, 66.8121, -4.83488, 0.28", "134.248, 67.5634, -5.08806, 0.55", "135.655, 69.239, -5.65067, 0.28", "136.584, 70.3906, -5.98558, 1.38", "137.478, 71.579, -6.2601, 0.28", "137.952, 72.2435, -6.41361, 0.83", "139.615, 74.6591, -6.91308, 0.28", "140.284, 75.6301, -7.10642, 1.38", "141.568, 77.5662, -7.49122, 0.28", "142.818, 79.5037, -7.85368, 0.28", "144.281, 81.7718, -8.31561, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-17.7375, 5.02666, -14.1813, 1.38", "-19.9819, 5.96649, -13.4546, 1.38", "-23.9697, 7.63921, -12.5036, 1.38", "-26.421, 8.86041, -12.0447, 1.11", "-29.1774, 10.2467, -11.5826, 1.11", "-31.1288, 11.1509, -11.2104, 1.11", "-33.6027, 12.2136, -10.784, 1.11", "-37.0697, 13.7674, -10.3276, 1.11", "-39.8177, 15.0042, -10.1767, 1.11", "-41.37, 15.6327, -10.0658, 1.11", "-44.7919, 16.8565, -9.71164, 1.11", "-47.4055, 17.8336, -9.36845, 2.49" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-17.7375, 5.02666, -14.1813, 1.38", "-24.8937, 5.83638, -12.4583, 1.38", "-27.0525, 6.00665, -12.2323, 1.38", "-31.1569, 6.10242, -12.6908, 1.38", "-36.6362, 6.07313, -14.1058, 1.66", "-39.58, 6.15979, -15.0992, 0.55", "-40.3055, 6.21176, -15.3888, 0.55", "-45.2759, 6.72357, -17.384, 0.55", "-48.1601, 7.25428, -19.0749, 1.11", "-50.8271, 7.91868, -21.0755, 0.83", "-53.3125, 8.56892, -23.1256, 0.55", "-55.6387, 9.06991, -24.979, 0.55", "-57.3206, 9.43904, -26.1881, 0.55", "-60.6767, 10.1199, -28.3699, 2.22", "-63.0868, 10.4162, -29.9317, 0.83", "-64.6237, 10.4506, -30.9759, 0.83", "-67.2746, 10.182, -32.7599, 0.83", "-68.6288, 9.92999, -33.6263, 0.83", "-71.8385, 9.14954, -35.6083, 0.28", "-74.5375, 8.33307, -37.1932, 0.83", "-76.8926, 7.61339, -38.4579, 0.55", "-78.8953, 7.01561, -39.4339, 0.55", "-82.0492, 6.15409, -40.8256, 0.83", "-83.6874, 5.71217, -41.4805, 0.28", "-85.4037, 5.2688, -42.0909, 0.55", "-87.3632, 4.74286, -42.8053, 0.28", "-88.9112, 4.32401, -43.3244, 0.55", "-91.5509, 3.69126, -44.0839, 0.28", "-92.793, 3.42489, -44.3862, 0.55", "-94.973, 3.06029, -44.8416, 0.28", "-96.6168, 2.93845, -45.1334, 1.11", "-98.3856, 2.98512, -45.348, 0.28", "-99.2129, 3.12663, -45.346, 0.28", "-100.876, 3.6112, -45.1054, 0.55", "-101.828, 3.9885, -44.8982, 0.55", "-103.568, 4.87258, -44.3752, 0.28", "-104.062, 5.15154, -44.2251, 0.55", "-105.384, 5.92878, -43.9678, 0.28", "-105.613, 6.05548, -43.9478, 0.55", "-107.024, 6.70061, -44.1448, 0.28", "-107.615, 6.90236, -44.3506, 0.28", "-108.296, 7.0791, -44.6908, 0.55", "-109.778, 7.36588, -45.5026, 0.28", "-110.596, 7.45159, -45.9648, 0.83", "-113.526, 7.54393, -47.643, 0.28", "-114.422, 7.50014, -48.1444, 0.55", "-116.773, 7.20373, -49.3503, 0.28", "-118.679, 6.82953, -50.19, 0.55", "-121.23, 6.17712, -51.0521, 0.28", "-121.989, 5.97882, -51.244, 0.28", "-123.438, 5.58669, -51.4628, 0.83", "-125.683, 5.0159, -51.7284, 0.28", "-127.149, 4.68412, -51.8752, 0.83", "-129.273, 4.35975, -52.1228, 0.28", "-130.761, 4.15002, -52.3073, 0.55", "-132.483, 3.96491, -52.5372, 0.55", "-134.105, 3.84575, -52.7866, 0.83", "-136.126, 3.78073, -53.1325, 1.38", "-138.336, 3.73156, -53.5961, 0.55", "-140.663, 3.61107, -54.1932, 1.11" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "17.0456, 13.7277, 15.8617, 1.38", "21.1475, 16.8722, 15.1323, 1.38", "23.6633, 18.9079, 14.564, 1.66", "26.6794, 21.5355, 13.9808, 1.66", "32.0672, 26.0691, 13.1938, 1.11", "35.1722, 28.4601, 12.9063, 1.38", "37.3281, 30.0051, 12.785, 1.11", "39.1976, 31.1237, 12.7489, 1.66", "42.6714, 33.1625, 12.8727, 1.38", "45.6786, 34.9847, 12.8999, 1.38", "48.848, 36.9027, 12.86, 1.38", "50.5691, 37.9331, 12.9022, 1.38", "53.3631, 39.4607, 12.9623, 0.55", "57.0769, 41.3706, 12.8267, 1.11", "61.0764, 43.5615, 12.093, 0.83", "63.2214, 45.1371, 11.3967, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "17.0456, 13.7277, 15.8617, 2.22", "19.505, 15.6382, 18.7749, 2.22" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "24.7447, -31.7602, 2.65167, 0.28", "34.0689, -43.5101, 2.65167, 0.28", "43.393, -55.26, 2.65167, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "0.936193, 30.7489, -39.7966, 1.11", "-1.22075, 35.7998, -42.7868, 1.11", "-2.46318, 38.7092, -44.5092, 1.11", "-4.02658, 42.3703, -46.6766, 1.11", "-5.59239, 46.037, -48.8473, 1.11", "-6.57732, 48.3434, -50.2128, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-10.6774, 7.88755, -7.76657, 0.83", "-12.3142, 12.5579, -5.31078, 0.83", "-12.6853, 15.1305, -4.28434, 0.83", "-13.0442, 19.0918, -2.64329, 0.83", "-13.0199, 21.0532, -1.84788, 0.83", "-12.7001, 24.8527, -0.818402, 0.83", "-12.1828, 28.5737, -0.0930252, 0.83", "-11.7007, 31.7363, 0.524787, 0.83", "-10.876, 35.868, 1.12217, 0.55", "-9.97835, 38.7641, 1.34709, 0.83", "-8.19518, 44.0038, 1.30056, 0.55", "-7.84635, 45.1729, 1.13799, 0.28", "-7.51306, 46.8308, 0.732699, 0.55", "-7.29473, 49.623, -0.0831212, 0.28", "-7.32249, 50.6026, -0.387211, 0.55", "-7.88514, 55.1292, -1.40682, 0.55", "-8.40828, 58.4764, -1.88043, 0.28", "-8.95902, 62.2459, -2.28482, 0.55", "-9.18176, 64.1258, -2.44911, 0.28", "-9.42335, 67.3133, -2.69294, 0.55", "-9.51803, 70.1157, -2.93189, 0.28", "-9.47409, 71.5239, -3.0468, 0.55", "-9.22929, 74.4178, -3.31874, 0.55", "-9.12153, 76.4651, -3.64405, 0.55", "-9.01326, 78.4112, -4.08593, 0.55", "-8.84938, 81.7377, -5.29389, 0.28", "-8.76806, 83.6344, -6.18905, 0.83", "-8.68252, 86.4506, -7.63405, 0.83", "-8.68444, 88.9991, -9.01953, 0.28", "-8.66262, 90.5604, -9.82351, 0.55", "-8.59109, 93.2383, -10.9493, 0.28", "-8.7011, 95.8017, -12.0403, 0.83", "-8.88452, 98.007, -13.0574, 0.28", "-9.04556, 99.7617, -13.8869, 0.83", "-9.28489, 103.148, -15.537, 0.28", "-9.5343, 106.237, -17.1419, 0.55", "-10.0981, 112.975, -20.4355, 0.28", "-10.2573, 115.078, -21.4485, 0.28", "-10.3237, 117.57, -22.6856, 0.55", "-10.2597, 120.787, -24.2989, 0.28", "-10.1998, 122.779, -25.3119, 0.55", "-10.0819, 126.29, -27.0373, 0.28", "-9.96404, 128.55, -27.9067, 0.28", "-10.0364, 131.286, -29.0588, 0.55", "-10.2439, 133.612, -30.15, 0.28", "-10.5954, 136.263, -31.4963, 0.55", "-11.0709, 138.655, -32.8376, 0.55", "-11.6062, 140.415, -34.023, 0.55", "-12.8374, 143.607, -36.1934, 0.28", "-13.7139, 145.509, -37.4646, 0.55", "-14.2597, 146.642, -38.25, 0.28", "-14.6505, 147.477, -38.8541, 0.55", "-15.4491, 149.31, -40.3283, 0.28", "-16.0766, 150.426, -41.2651, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-10.6774, 7.88755, -7.76657, 0.55", "-11.7967, 9.03265, -8.28458, 0.55", "-12.9992, 10.6287, -9.4036, 0.83", "-13.8509, 11.8476, -10.3269, 0.55", "-15.0315, 13.5249, -11.5499, 0.55", "-16.9917, 16.4351, -13.4877, 0.83", "-18.5561, 18.9518, -15.216, 0.83", "-19.838, 21.3837, -16.9604, 0.28", "-20.7811, 23.2915, -18.3903, 0.55", "-21.7903, 25.1188, -19.8543, 0.83", "-23.0996, 26.8641, -21.3279, 0.83", "-25.267, 28.6822, -22.9182, 0.28", "-25.7713, 28.9688, -23.182, 0.83", "-27.791, 29.748, -24.003, 0.55", "-30.4138, 30.5061, -25.0471, 0.55", "-32.7854, 31.0591, -25.9081, 0.55", "-35.006, 31.4361, -26.663, 0.83", "-37.6761, 31.7751, -27.5772, 0.28", "-38.9984, 31.9817, -28.0747, 0.28", "-41.0828, 32.4628, -28.9641, 0.55", "-42.6548, 32.9112, -29.6996, 0.55", "-45.1911, 33.7039, -31.0316, 0.55", "-48.2861, 34.7268, -32.7025, 0.55", "-50.9282, 35.6853, -34.2957, 0.55", "-52.2975, 36.249, -35.2292, 0.28", "-52.5936, 36.3847, -35.4699, 0.83", "-54.538, 37.6835, -37.4489, 0.28", "-54.7512, 37.8871, -37.7129, 0.55", "-55.3785, 38.5803, -38.5682, 0.28", "-55.8083, 39.0133, -39.2081, 0.55", "-57.2375, 40.378, -41.3229, 0.28", "-58.5546, 41.614, -43.1986, 0.83", "-60.1463, 43.2423, -45.3049, 0.28", "-61.2157, 44.4314, -46.6669, 0.55", "-62.6276, 46.0955, -48.3972, 0.28", "-63.1378, 46.713, -49.0178, 0.83", "-65.1309, 49.1672, -51.2959, 0.55", "-66.8511, 51.2081, -53.1749, 0.55", "-67.9647, 52.7111, -54.4045, 0.55", "-69.3096, 54.7123, -55.8997, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-47.4055, 17.8336, -9.36845, 0.83", "-51.5446, 16.7366, -9.60498, 0.83", "-53.3287, 16.3341, -9.84472, 0.55", "-55.3381, 15.9361, -10.1669, 1.11", "-57.9918, 15.4151, -10.7558, 0.83", "-60.635, 14.9574, -11.3834, 0.83", "-65.1926, 14.3075, -12.4782, 1.38", "-68.2696, 13.9319, -13.3065, 0.83", "-70.8904, 13.629, -14.0938, 0.83", "-74.679, 13.2312, -15.3648, 1.38", "-78.1867, 12.9182, -16.7395, 0.55", "-80.0076, 12.7843, -17.5259, 0.55", "-82.3264, 12.5745, -18.5436, 1.38", "-87.0379, 11.9964, -20.5978, 0.83", "-89.4608, 11.6805, -21.6295, 1.66", "-94.4524, 10.9846, -23.8002, 0.28", "-96.7327, 10.602, -24.8742, 1.11", "-98.5939, 10.2541, -25.7748, 0.28", "-99.5053, 10.096, -26.2131, 0.55", "-101.511, 9.69393, -27.0764, 0.28", "-104.495, 9.12244, -28.1176, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-47.4055, 17.8336, -9.36845, 0.83", "-50.0476, 21.0187, -10.2851, 0.83", "-51.063, 22.1936, -10.6466, 0.83", "-53.572, 24.7038, -11.4469, 1.11", "-55.3944, 26.2644, -11.9944, 0.83", "-58.0823, 28.3337, -12.7269, 1.11", "-60.4371, 30.0195, -13.3326, 0.83", "-62.0784, 30.9536, -13.7768, 0.83", "-65.2815, 32.5597, -14.503, 1.94", "-67.7721, 33.7556, -14.9014, 1.11", "-69.3033, 34.4674, -15.0503, 0.83", "-71.025, 35.3044, -15.1539, 1.38", "-74.4354, 36.8962, -15.2568, 0.83", "-77.0341, 38.2172, -15.35, 0.83", "-80.6761, 40.2694, -15.4885, 2.77", "-83.8124, 42.2584, -15.4741, 0.55", "-85.3488, 43.3461, -15.3542, 0.55", "-87.4692, 44.9393, -15.051, 0.83", "-88.732, 45.9252, -14.8646, 0.55", "-90.7437, 47.4401, -14.6254, 0.55", "-94.2156, 50.1304, -14.2695, 1.94", "-98.0801, 53.1483, -13.6034, 0.83", "-99.3428, 54.1552, -13.1999, 0.83", "-102.134, 56.3561, -11.7399, 1.11", "-103.829, 57.4728, -10.3348, 0.55", "-105.613, 58.4051, -8.35532, 0.55", "-108.015, 59.2975, -5.24194, 0.83", "-111.439, 60.1831, -0.445359, 0.83", "-114.35, 60.8545, 3.92551, 2.77", "-118.453, 61.6169, 10.3269, 0.83", "-119.802, 61.7928, 12.3891, 1.11", "-120.876, 61.8872, 13.9404, 0.28", "-122.551, 62.0739, 15.9711, 1.11", "-124.858, 62.4735, 18.0207, 0.28", "-126.45, 62.9545, 19.0658, 0.83", "-129.101, 64.2112, 20.2342, 0.28", "-129.898, 64.7031, 20.5069, 0.55", "-131.644, 66.1317, 20.942, 0.55", "-133.671, 68.2073, 21.179, 0.55", "-135.305, 70.0982, 21.1173, 0.55", "-136.79, 72.1647, 20.7992, 1.11", "-137.69, 73.6204, 20.434, 0.28", "-139.446, 76.766, 19.5383, 1.66", "-140.211, 78.2371, 19.0659, 0.28", "-141.0, 79.8011, 18.5009, 0.55", "-142.245, 82.049, 17.6381, 0.28", "-142.946, 83.0993, 17.2945, 0.83", "-143.791, 84.2225, 17.1396, 0.28", "-144.422, 85.0056, 17.0632, 0.28", "-145.734, 86.5611, 17.0004, 0.55", "-147.073, 88.1153, 17.0751, 0.28", "-149.642, 90.9071, 17.5436, 1.11", "-153.316, 94.8172, 18.3893, 0.28" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "63.2214, 45.1371, 11.3967, 0.55", "64.7229, 45.3179, 9.80663, 0.55", "66.1118, 45.5084, 8.13479, 0.55", "67.4935, 45.7167, 6.41128, 0.55", "71.5361, 46.272, 1.53812, 1.11", "76.1944, 46.9664, -3.94797, 0.28", "77.9895, 47.1825, -6.02293, 1.38", "81.7384, 47.4708, -10.5859, 0.28", "82.0388, 47.4862, -10.9677, 0.83", "83.3808, 47.5665, -12.6977, 0.55", "85.36, 47.8315, -15.2903, 0.55", "88.5573, 48.4372, -19.5114, 0.55", "90.4185, 48.8738, -21.9291, 0.55", "92.0503, 49.4178, -24.0618, 0.28", "92.9488, 49.8051, -25.305, 0.55", "94.354, 50.6956, -27.439, 0.28", "95.0945, 51.3207, -28.6139, 0.55", "96.3358, 52.8894, -30.6622, 1.38", "98.3448, 55.936, -33.8452, 0.28", "98.8185, 56.7609, -34.5839, 0.55", "99.9861, 59.107, -36.4595, 0.28", "100.409, 59.8673, -37.0711, 0.55", "101.62, 61.8389, -38.6779, 0.28", "102.503, 63.103, -39.6218, 0.55", "103.554, 64.4364, -40.4448, 0.28", "104.019, 64.9446, -40.7502, 0.83", "108.222, 68.8608, -42.985, 0.28", "110.138, 70.4103, -43.9213, 1.11", "112.406, 71.9841, -44.958, 0.28", "113.848, 72.8897, -45.6252, 0.55", "115.608, 73.9193, -46.4075, 0.28", "116.611, 74.473, -46.8621, 0.55", "120.644, 76.6204, -48.6561, 0.28", "121.478, 77.0252, -49.0933, 0.55", "124.067, 78.1655, -50.8805, 0.28", "125.0, 78.5695, -51.5934, 0.55", "126.128, 79.1147, -52.5557, 0.28", "126.648, 79.4096, -53.0263, 0.28", "126.878, 79.5643, -53.2297, 0.55", "129.668, 81.586, -55.5841, 0.28", "131.506, 82.9242, -57.1158, 1.38", "133.38, 84.2354, -58.748, 0.28", "134.115, 84.6633, -59.4118, 0.55", "135.177, 85.1867, -60.4296, 0.28", "136.383, 85.6713, -61.5805, 0.55", "139.242, 86.553, -64.1886, 0.28", "140.325, 86.6879, -65.2588, 0.55", "143.296, 86.6398, -68.2154, 0.28", "144.509, 86.5631, -69.4485, 0.83", "146.212, 86.3733, -71.2269, 0.28", "147.185, 86.2101, -72.2086, 0.55", "151.525, 85.1159, -76.2319, 0.28", "152.572, 84.7915, -77.1613, 1.11" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "63.2214, 45.1371, 11.3967, 0.28", "65.855, 45.5383, 11.5939, 0.28", "68.2829, 45.8395, 11.9026, 0.55", "70.1376, 46.0794, 12.1805, 0.83", "72.0515, 46.3579, 12.3562, 0.83", "73.9419, 46.6434, 12.4683, 0.28", "75.6278, 46.9122, 12.5523, 0.55", "77.3324, 47.2234, 12.6174, 0.28", "78.5146, 47.4723, 12.6248, 1.11", "81.4129, 48.1416, 12.4714, 0.28", "82.0998, 48.3498, 12.3974, 0.28", "83.4197, 48.8012, 12.1834, 0.55", "85.7379, 49.703, 11.7113, 0.28", "86.213, 49.9109, 11.5995, 0.55", "88.0294, 50.7671, 11.3364, 0.28", "89.2342, 51.3993, 11.2527, 0.83", "90.2529, 51.9995, 11.066, 0.83", "91.364, 52.7001, 10.757, 0.28", "92.147, 53.2611, 10.4603, 0.55", "94.1677, 54.8678, 9.55224, 0.28", "95.4941, 56.0251, 8.91752, 0.83", "98.0663, 58.4105, 7.60805, 0.28", "98.5679, 58.9132, 7.35095, 0.83", "100.14, 60.5254, 6.56731, 0.28", "100.626, 61.0423, 6.33404, 0.83", "102.179, 62.8166, 5.4906, 0.28", "102.506, 63.2097, 5.37983, 0.55", "103.184, 64.0136, 5.2928, 0.28", "103.523, 64.4116, 5.29316, 0.55", "104.689, 65.7098, 5.46383, 0.28", "106.222, 67.2904, 5.82783, 0.83", "107.383, 68.4158, 6.20628, 0.28", "108.085, 69.028, 6.5019, 0.55", "109.66, 70.1815, 7.06747, 0.28", "110.226, 70.505, 7.24674, 0.83", "111.468, 70.9824, 7.56876, 0.28", "112.413, 71.2539, 7.86486, 0.55", "113.615, 71.4998, 8.04043, 0.28", "116.342, 71.953, 8.19279, 1.94", "118.917, 72.3023, 8.19978, 0.28", "120.837, 72.5302, 8.17807, 0.28", "123.312, 72.7971, 8.09196, 0.55", "126.943, 73.1347, 7.95321, 0.28", "128.017, 73.2489, 7.90796, 1.66", "136.323, 75.7808, 7.57428, 1.66", "144.397, 78.5032, 5.89541, 1.66", "152.364, 81.6149, 4.47727, 1.66", "159.685, 85.6524, 2.34731, 1.66", "165.507, 90.8242, -1.2188, 1.66", "171.331, 95.5258, -5.44369, 1.66", "177.615, 100.736, -8.02166, 1.66", "182.778, 106.768, -11.0653, 1.66", "188.408, 112.997, -12.2812, 1.66", "194.41, 118.767, -14.0879, 1.66", "200.483, 124.556, -15.556, 1.66", "206.347, 130.679, -16.0137, 1.66", "211.592, 137.294, -16.4186, 1.66", "215.784, 144.553, -16.0011, 1.66", "220.217, 151.534, -14.437, 1.66", "224.083, 158.756, -12.6046, 1.66", "226.994, 166.449, -11.1494, 1.66" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "19.505, 15.6382, 18.7749, 2.22", "22.9673, 14.3924, 20.2159, 2.22", "24.8023, 14.1455, 21.7665, 0.83", "27.0162, 14.4588, 24.1556, 0.83", "28.6842, 15.0695, 27.5749, 0.83", "31.3579, 15.8144, 33.0824, 0.83", "32.7421, 16.0955, 35.7429, 1.38", "34.7297, 16.366, 39.4853, 1.66", "36.7248, 16.5669, 43.3876, 2.22", "43.7302, 16.7744, 56.6844, 0.83", "45.0852, 16.6319, 59.0831, 1.11", "46.3106, 16.0293, 60.8429, 0.55", "47.7175, 15.0883, 62.5468, 0.55", "50.0452, 13.0157, 64.8067, 0.55", "52.4278, 10.3652, 66.612, 0.83", "53.2568, 8.95109, 66.6046, 0.55", "55.9813, 3.01318, 66.8025, 0.55", "62.7316, -1.649, 77.8615, 0.55", "68.7572, -3.99989, 90.0667, 0.55", "75.0278, -4.16604, 102.37, 0.55", "80.7098, -5.52896, 114.89, 0.55", "85.282, -9.86267, 127.157, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "19.505, 15.6382, 18.7749, 1.38", "23.0659, 15.4202, 20.0291, 1.38", "26.2483, 15.4736, 20.9744, 0.83", "28.6638, 15.4491, 21.6252, 1.11", "32.9067, 15.2752, 22.7438, 0.83", "36.7845, 14.9947, 23.7671, 1.11", "40.145, 14.7166, 24.5582, 0.83", "42.9561, 14.3715, 25.0269, 0.83", "47.6239, 13.7092, 25.5586, 1.11", "49.3691, 13.4027, 25.7144, 0.83", "51.0273, 12.9663, 25.8329, 1.11", "54.257, 12.0291, 25.9332, 0.83", "58.4, 10.6457, 26.0412, 1.11", "59.6069, 10.2221, 26.0663, 0.83", "60.619, 9.92443, 26.1507, 0.83", "62.0581, 9.54202, 26.3693, 0.83", "64.9424, 8.81199, 27.0406, 1.38", "67.2151, 8.19024, 27.7968, 0.83", "70.8394, 7.19689, 29.2109, 0.83", "74.6137, 6.24357, 30.7195, 0.55", "74.8506, 6.1939, 30.8127, 0.83", "76.6539, 5.84681, 31.4852, 0.83", "78.5415, 5.47412, 32.0539, 0.55", "79.6374, 5.25562, 32.2764, 0.55", "81.2484, 4.99376, 32.4685, 0.55", "83.6694, 4.68157, 32.5972, 0.55", "86.0172, 4.43145, 32.7481, 0.55", "89.4279, 4.153, 32.995, 0.55", "91.9181, 4.03538, 33.1842, 0.83", "95.5084, 3.96929, 33.4641, 0.83", "98.4961, 3.91563, 33.7027, 0.55", "100.057, 3.97811, 33.8232, 0.55", "101.067, 4.10567, 33.8981, 0.55", "103.3, 4.57944, 34.1247, 1.38", "105.084, 5.04642, 34.2552, 0.55", "106.1, 5.33347, 34.2922, 0.55", "109.426, 6.22604, 34.3298, 0.55", "112.415, 7.06145, 34.3012, 0.55", "115.098, 7.74671, 34.245, 0.83", "118.062, 8.43213, 34.1499, 0.55", "120.578, 8.88391, 34.0438, 1.11", "122.912, 9.16164, 33.9613, 0.55", "124.197, 9.21146, 33.9216, 0.55", "126.065, 9.10833, 33.8599, 0.55", "127.757, 8.80029, 33.8532, 0.55", "129.973, 8.01991, 34.0366, 0.83", "131.839, 7.19419, 34.249, 0.55", "133.913, 6.10645, 34.4898, 0.55", "136.694, 4.43079, 34.8432, 0.55", "138.178, 3.41828, 35.0535, 0.83", "140.247, 1.79275, 35.3697, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.57732, 48.3434, -50.2128, 0.83", "-6.33571, 52.0341, -51.9195, 0.83", "-6.41018, 55.5769, -53.4702, 0.83", "-6.54291, 58.194, -54.3566, 0.55", "-6.66069, 60.7884, -55.0598, 0.83", "-6.8045, 63.0877, -55.614, 0.55", "-7.00521, 65.3574, -56.1279, 0.55", "-7.37144, 67.4378, -56.55, 0.55", "-7.96134, 70.8275, -56.9802, 0.55", "-8.32893, 72.8439, -57.2024, 0.83", "-8.77337, 75.7345, -57.4431, 0.83", "-9.17798, 78.0844, -57.6224, 0.83", "-9.59675, 80.1184, -57.7968, 0.83", "-10.3589, 83.7608, -58.1624, 0.83", "-11.1522, 87.1678, -58.5941, 0.83", "-11.6361, 89.4706, -58.9072, 0.55", "-11.9436, 91.6177, -59.1789, 0.55", "-12.0608, 93.7641, -59.4466, 0.55", "-11.9868, 97.4517, -59.9484, 0.83", "-11.8383, 98.8293, -60.1374, 0.83", "-11.3662, 101.429, -60.4898, 0.55", "-10.8246, 104.19, -60.87, 0.55", "-10.3374, 106.538, -61.148, 0.55", "-9.8254, 109.116, -61.4232, 0.55", "-9.24398, 112.628, -61.7442, 0.55", "-8.9249, 114.601, -61.9814, 0.55", "-8.60443, 116.708, -62.2797, 0.83", "-8.31281, 118.592, -62.5977, 0.83", "-7.91153, 121.286, -63.1526, 0.83", "-7.47659, 123.718, -63.693, 0.83", "-6.98449, 126.522, -64.3481, 0.83", "-6.38455, 129.418, -64.9986, 0.55", "-5.71593, 132.405, -65.6199, 0.55", "-5.08127, 135.238, -66.1324, 0.55", "-4.63584, 137.697, -66.4863, 0.55", "-4.2659, 139.87, -66.7495, 0.55", "-3.79321, 142.87, -67.0024, 0.55", "-3.44029, 145.281, -67.145, 0.55", "-2.99612, 148.079, -67.2499, 0.55", "-2.56258, 151.4, -67.301, 0.55", "-2.3924, 153.516, -67.3353, 0.55", "-2.29489, 155.144, -67.3536, 0.55", "-2.25779, 157.502, -67.371, 0.55", "-2.13921, 162.692, -67.371, 0.55", "-2.07036, 164.924, -67.3506, 0.55", "-1.9133, 167.35, -67.3091, 0.55", "-1.73093, 170.0, -67.2467, 0.55", "-1.59142, 171.409, -67.2456, 0.28", "-1.26705, 173.589, -67.3083, 0.83", "-0.88755, 175.902, -67.3705, 0.55", "-0.350138, 178.402, -67.447, 0.55", "0.0579351, 180.003, -67.5244, 0.55", "0.707503, 182.596, -67.7085, 0.55", "0.999583, 183.806, -67.8188, 0.28" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-6.57732, 48.3434, -50.2128, 0.83", "-6.30784, 50.1104, -50.7707, 0.83", "-6.08095, 52.8715, -51.7346, 0.83", "-6.02351, 54.2746, -52.1926, 0.28", "-5.97247, 54.8456, -52.3656, 0.55", "-5.51096, 57.5451, -53.1775, 0.28", "-5.24113, 59.0727, -53.6635, 0.83", "-5.09983, 60.4942, -54.3221, 0.83", "-4.97161, 63.1112, -55.72, 0.55", "-4.77804, 64.8545, -56.7572, 0.55", "-4.31851, 67.4126, -58.4208, 0.55", "-3.9352, 69.4481, -59.8516, 0.55", "-3.09897, 73.9645, -63.2604, 0.55", "-2.74661, 75.6661, -64.6516, 0.55", "-2.06796, 79.4282, -67.8486, 0.55", "-1.58117, 82.8097, -70.6402, 0.55", "-1.34306, 84.8472, -72.2439, 0.55", "-1.09024, 86.1524, -73.1511, 0.55", "-0.461442, 88.6896, -74.715, 0.55", "0.14017, 91.6797, -76.4963, 0.55", "0.418653, 93.7003, -77.5114, 0.55", "0.620633, 95.122, -78.1228, 0.28", "1.40581, 98.8269, -79.5827, 0.55", "1.86722, 101.101, -80.5247, 0.28", "2.05356, 102.198, -80.9547, 0.83", "2.37055, 104.222, -81.7218, 0.83", "2.567, 106.163, -82.5171, 0.55", "2.79374, 109.151, -83.9035, 0.55", "2.66259, 111.438, -85.1569, 0.55", "2.46319, 113.546, -86.3519, 0.55", "2.35319, 114.91, -87.1826, 0.28", "2.2606, 116.772, -88.4413, 0.55", "2.29968, 119.264, -90.2697, 0.28", "2.25313, 121.962, -92.2933, 0.55", "2.31101, 123.471, -93.4461, 0.55", "2.47493, 125.312, -94.9958, 0.55", "2.73631, 126.961, -96.4377, 0.55", "3.18131, 128.905, -97.963, 0.55" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-69.3096, 54.7123, -55.8997, 0.28", "-74.9578, 53.8847, -53.714, 0.28", "-76.9347, 53.5728, -53.066, 0.55", "-79.0755, 53.3082, -52.462, 0.55", "-81.0865, 53.0597, -51.8948, 0.55", "-83.206, 52.7977, -51.2968, 0.55", "-85.1962, 52.5517, -50.7354, 0.83", "-86.758, 52.3212, -50.6487, 0.28", "-88.4589, 52.1191, -50.4157, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-69.3096, 54.7123, -55.8997, 0.55", "-69.5482, 56.8626, -56.2975, 0.55", "-69.8044, 58.2538, -56.6778, 0.28", "-70.1404, 60.0269, -57.1731, 0.55", "-70.6082, 61.9887, -57.6916, 0.55", "-70.8586, 62.7937, -57.8877, 0.55", "-72.1596, 66.9765, -58.907, 0.83", "-72.7317, 68.6046, -59.3265, 0.28", "-73.754, 71.3438, -60.0389, 0.55", "-74.6942, 73.6227, -60.6068, 0.55", "-75.5923, 75.3937, -61.0496, 0.28" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-153.316, 94.8172, 18.3893, 0.83", "-153.181, 95.6749, 18.4031, 0.83", "-152.918, 98.1128, 18.6542, 0.83", "-152.773, 100.218, 19.3999, 0.55", "-152.678, 102.858, 20.5015, 0.55", "-152.66, 106.32, 22.0216, 0.55", "-152.665, 107.466, 22.5265, 0.55", "-152.656, 109.302, 23.4488, 1.11", "-152.717, 113.845, 26.2376, 0.28", "-152.786, 114.627, 26.8052, 0.55", "-152.958, 115.827, 27.8186, 0.28", "-153.099, 116.533, 28.3468, 0.55", "-153.894, 125.103, 33.6855, 0.55", "-155.889, 134.0, 38.027, 0.55", "-158.525, 142.406, 43.0709, 0.55", "-163.492, 149.419, 48.6838, 0.55", "-167.974, 156.722, 54.2987, 0.55", "-173.27, 163.984, 59.2146, 0.55", "-178.221, 171.575, 63.9395, 0.55", "-183.875, 178.102, 69.5417, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-153.316, 94.8172, 18.3893, 0.55", "-155.367, 97.4033, 17.619, 0.55", "-157.025, 99.0401, 17.3231, 0.55", "-158.542, 100.271, 17.3198, 0.28", "-159.513, 100.985, 17.4939, 0.55", "-161.772, 102.383, 18.1761, 0.28", "-163.576, 103.311, 18.9624, 0.55", "-167.728, 105.09, 21.1351, 0.55", "-170.576, 106.163, 22.8949, 0.55", "-173.406, 106.982, 24.9268, 1.11", "-175.713, 107.434, 26.8529, 0.28", "-177.808, 107.519, 28.972, 0.55", "-186.889, 113.203, 34.883, 0.55", "-195.778, 118.211, 41.6641, 0.55", "-205.07, 123.164, 47.9206, 0.55", "-213.372, 128.431, 55.2282, 0.55", "-222.236, 134.436, 61.1377, 0.55", "-232.921, 138.25, 65.7659, 0.55" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "85.282, -9.86267, 127.157, 0.83", "88.0179, -10.8571, 132.43, 0.83", "90.9483, -12.8512, 137.277, 0.83", "94.1201, -14.4874, 142.116, 0.83", "96.8373, -15.6439, 147.364, 0.83", "98.9732, -18.1556, 152.364, 0.83", "100.361, -20.4075, 157.749, 0.83", "100.533, -23.7837, 162.651, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "85.282, -9.86267, 127.157, 0.55", "91.5022, -12.309, 136.021, 0.83", "96.2127, -14.7595, 145.776, 0.83", "101.578, -17.7602, 155.011, 0.83", "106.701, -21.9179, 163.894, 0.83", "112.679, -25.7672, 172.378, 0.83", "116.603, -30.935, 181.304, 0.83", "120.184, -36.5465, 190.083, 0.83", "123.232, -41.1278, 199.681, 0.83", "127.082, -47.4327, 207.802, 0.83", "131.746, -52.7392, 216.263, 0.83", "135.479, -58.547, 224.835, 0.83", "140.768, -63.6363, 233.065, 0.83", "145.687, -69.5099, 240.947, 0.83", "150.524, -75.9265, 248.401, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "140.247, 1.79275, 35.3697, 0.55", "141.718, -1.29362, 40.4614, 0.55", "142.044, -1.97654, 41.588, 0.28", "142.287, -2.48675, 42.4297, 0.55", "145.782, -9.19368, 49.0998, 0.55", "149.664, -15.6032, 55.8773, 0.55", "152.378, -22.1876, 63.0327, 0.55", "157.103, -28.6102, 69.2304, 0.55", "161.456, -33.6822, 76.9094, 0.55", "165.251, -38.6229, 84.9714, 0.55", "169.347, -44.4669, 92.1736, 0.55", "172.958, -48.9139, 100.627, 0.55", "178.297, -53.2285, 108.188, 0.55", "184.136, -55.5457, 116.313, 0.55", "190.393, -56.6576, 124.399, 0.55", "197.7, -56.9675, 131.63, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "140.247, 1.79275, 35.3697, 0.28", "140.93, 1.43788, 35.6896, 0.28", "141.602, 1.08902, 36.004, 0.55", "142.55, 0.597047, 36.4474, 0.28", "143.383, 0.164338, 36.8374, 0.83", "148.398, -2.03462, 39.0365, 0.83", "152.936, -4.86283, 41.4692, 0.83", "157.78, -7.39482, 43.6558, 0.83", "162.385, -9.31598, 46.8293, 0.83", "166.838, -11.289, 50.1811, 0.83", "170.81, -13.8484, 53.6969, 0.83", "174.789, -16.4305, 57.1873, 0.83", "178.86, -19.0292, 60.5543, 0.83", "182.57, -22.1386, 63.8617, 0.83", "185.858, -24.8187, 67.9431, 0.83" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "0.999583, 183.806, -67.8188, 0.28", "1.66984, 186.208, -67.5921, 0.28", "2.1466, 188.515, -67.5004, 0.83", "2.34512, 189.754, -67.5165, 0.28", "2.47529, 191.012, -67.5599, 0.28", "2.5985, 192.898, -67.6358, 0.55", "2.73911, 194.31, -67.6908, 0.28", "2.86666, 195.904, -67.7902, 0.83", "3.07915, 198.14, -67.9514, 0.28", "3.31163, 199.78, -68.1066, 0.28", "3.68879, 201.591, -68.261, 0.28", "4.37772, 203.746, -68.2513, 0.55", "5.13928, 205.452, -68.1086, 0.28", "6.00034, 206.883, -67.8421, 0.55", "7.26408, 208.465, -67.3474, 0.28", "9.75568, 210.845, -65.8689, 0.55", "12.7092, 213.151, -63.4925, 0.28", "14.0335, 214.135, -62.1112, 0.55", "14.9581, 214.712, -61.0735, 0.28", "15.5688, 215.037, -60.3123, 0.28", "18.3092, 216.276, -56.4142, 0.55", "19.2773, 216.648, -54.8563, 0.28", "20.3828, 217.457, -52.8439, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "0.999583, 183.806, -67.8188, 0.28", "0.419533, 184.829, -68.6025, 0.28", "0.097891, 185.318, -68.9919, 0.83", "-0.576644, 186.289, -69.754, 0.28", "-1.33889, 187.436, -70.6266, 1.11", "-2.6835, 189.727, -72.2338, 0.28", "-3.15653, 190.624, -72.8515, 0.55", "-3.68965, 191.678, -73.6725, 0.28", "-3.85039, 192.048, -73.971, 0.28", "-4.11078, 192.637, -74.5007, 0.55", "-4.60264, 193.555, -75.2894, 0.28", "-5.0136, 194.196, -75.8148, 0.55", "-6.08495, 195.743, -77.1345, 0.28", "-6.49037, 196.289, -77.5997, 0.83", "-7.67146, 197.843, -78.9257, 0.28", "-8.76085, 199.31, -80.1435, 0.55", "-9.29383, 200.081, -80.7429, 0.28", "-9.59722, 200.619, -81.0703, 0.55", "-10.2533, 202.205, -81.8029, 0.28", "-10.6387, 203.481, -82.216, 0.55", "-10.7725, 204.552, -82.3623, 0.28", "-10.7446, 205.439, -82.3789, 0.55", "-10.6033, 206.787, -82.3103, 0.28", "-10.6015, 206.818, -82.3095, 0.55", "-10.6597, 208.073, -82.2598, 0.28", "-10.7505, 208.761, -82.2149, 0.55", "-11.0441, 209.904, -82.2253, 0.28", "-11.3506, 210.742, -82.3736, 0.55", "-12.4012, 212.684, -83.342, 0.28", "-12.739, 213.169, -83.691, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "3.18131, 128.905, -97.963, 0.28", "4.09844, 130.39, -99.6191, 0.28", "4.86576, 131.724, -101.006, 0.55", "6.3902, 134.657, -103.851, 0.55", "6.93667, 135.922, -105.007, 0.28", "7.28599, 136.772, -105.688, 0.55", "7.84681, 138.24, -106.834, 0.28", "8.30613, 139.742, -107.902, 0.55", "8.47781, 140.506, -108.399, 0.55", "8.72822, 141.987, -109.23, 0.28", "9.00817, 143.975, -110.468, 0.55", "9.31138, 145.944, -111.86, 0.28", "9.54028, 146.927, -112.681, 0.55", "9.78038, 147.845, -113.505, 0.55", "10.3225, 149.371, -115.388, 0.55", "10.8073, 150.326, -116.937, 0.28", "10.8638, 150.432, -117.13, 0.83", "11.3889, 151.391, -118.838, 0.28", "11.882, 152.348, -120.417, 0.55", "12.9565, 154.899, -123.963, 0.28", "13.5611, 156.466, -125.784, 0.55", "14.2676, 158.269, -127.679, 0.28", "14.9264, 159.664, -129.04, 0.55", "15.7091, 161.106, -130.319, 0.55", "16.6619, 162.779, -131.587, 0.28", "17.2089, 163.757, -132.153, 0.55", "18.5432, 165.801, -133.328, 0.55", "20.6714, 168.7, -135.321, 0.55", "21.9381, 170.358, -136.619, 0.55", "22.7518, 171.369, -137.525, 0.55", "23.7475, 172.636, -138.689, 0.28", "24.7225, 174.144, -139.969, 0.55", "25.9291, 176.439, -141.595, 0.55", "26.2876, 177.159, -142.03, 0.55", "26.8136, 178.294, -142.656, 0.55", "27.5576, 179.94, -143.501, 0.55", "28.2645, 181.532, -144.204, 0.55", "29.0753, 183.439, -144.941, 0.55", "30.4713, 186.648, -146.021, 0.55", "31.0145, 187.996, -146.466, 0.28", "31.5635, 189.397, -146.919, 0.55", "32.185, 190.868, -147.386, 0.55", "32.7327, 192.059, -147.738, 0.28", "33.3705, 193.56, -148.21, 0.55", "33.81, 194.726, -148.632, 0.55", "34.5448, 196.643, -149.425, 0.55", "35.0476, 198.223, -150.103, 0.28", "35.3309, 199.303, -150.574, 0.28", "35.8606, 201.48, -151.556, 0.55", "36.3775, 203.683, -152.542, 0.28", "36.7626, 205.376, -153.286, 0.55", "37.2611, 208.003, -154.348, 0.28", "37.4144, 208.917, -154.714, 0.55", "37.5897, 210.07, -155.128, 0.28", "37.8192, 211.379, -155.578, 0.28", "38.008, 212.413, -155.868, 0.55", "38.0913, 213.244, -156.124, 0.28", "38.2742, 214.397, -156.553, 0.28", "38.4395, 215.432, -156.94, 0.55", "38.6203, 217.637, -157.729, 0.28", "38.4907, 219.502, -158.492, 0.55", "38.261, 220.947, -159.109, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "3.18131, 128.905, -97.963, 0.28", "3.60333, 129.898, -98.0643, 0.28", "3.90349, 130.659, -98.1333, 0.83", "4.27125, 131.766, -98.2337, 0.55", "4.6854, 133.227, -98.2946, 0.55", "5.10859, 135.08, -98.2173, 0.55", "5.29833, 136.059, -98.1167, 0.28", "5.49634, 136.96, -98.0066, 0.55", "5.71795, 138.004, -97.8487, 0.55", "5.99664, 139.963, -97.4488, 0.55", "6.09319, 141.595, -97.0019, 0.28", "6.03287, 142.627, -96.6239, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-75.5923, 75.3937, -61.0496, 0.28", "-76.5988, 75.054, -62.3177, 0.28", "-77.1981, 74.8518, -63.0727, 0.28", "-78.0698, 74.5576, -64.171, 0.28", "-79.1496, 74.1932, -65.5315, 0.55", "-80.8044, 73.6348, -67.6163, 0.55" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-75.5923, 75.3937, -61.0496, 0.28", "-76.07, 76.8727, -63.4697, 0.28", "-76.2898, 78.3735, -66.0904, 0.55", "-76.3009, 79.2119, -67.6821, 0.55", "-76.174, 80.1275, -69.3985, 0.28", "-75.7028, 82.5044, -73.6708, 0.83", "-75.0801, 85.6035, -79.1809, 0.28", "-74.9189, 86.0813, -80.1054, 0.55", "-74.1392, 87.6349, -83.1141, 0.28", "-73.3332, 88.8772, -85.652, 0.55", "-72.9399, 89.3727, -86.6768, 0.55", "-71.8447, 90.5206, -88.9788, 0.28" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-183.875, 178.102, 69.5417, 0.83", "-185.855, 184.741, 72.0842, 0.83", "-188.426, 191.474, 73.4773, 0.83", "-189.909, 198.587, 73.8627, 0.83", "-190.14, 205.812, 74.728, 0.83", "-189.931, 212.955, 76.2683, 0.83", "-188.355, 219.791, 78.474, 0.83", "-186.494, 226.726, 79.9213, 0.83", "-183.833, 233.495, 79.5819, 0.83", "-180.407, 239.889, 78.7763, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-183.875, 178.102, 69.5417, 0.55", "-186.146, 184.897, 73.6939, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-232.921, 138.25, 65.7659, 0.83", "-241.838, 144.631, 71.2079, 0.83", "-251.222, 151.724, 74.3761, 0.83", "-260.598, 159.188, 76.2748, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-232.921, 138.25, 65.7659, 0.55", "-243.753, 144.468, 72.388, 0.83", "-255.45, 151.534, 75.7639, 0.83", "-266.918, 159.321, 77.9097, 0.83" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "100.533, -23.7837, 162.651, 0.55", "106.143, -29.0049, 171.81, 0.55", "111.577, -33.0593, 181.693, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "100.533, -23.7837, 162.651, 0.28", "103.391, -26.4704, 171.99, 0.55", "105.456, -28.5416, 181.698, 0.55", "106.615, -29.1519, 191.752, 0.55", "107.651, -28.6592, 201.809, 0.55", "110.507, -29.1166, 211.527, 0.55", "114.426, -29.3207, 220.875, 0.55", "117.074, -28.1354, 230.562, 0.55", "119.477, -27.1699, 240.342, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "150.524, -75.9265, 248.401, 0.55", "151.643, -78.8773, 255.813, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "150.524, -75.9265, 248.401, 0.28", "155.335, -79.6644, 254.12, 0.55", "159.962, -83.1599, 260.153, 0.55", "164.556, -85.3539, 266.846, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "197.7, -56.9675, 131.63, 0.83", "203.523, -61.3203, 142.763, 0.83", "206.698, -66.2362, 154.665, 0.83", "208.618, -70.3993, 167.138, 0.83", "209.684, -74.0616, 179.884, 0.83", "211.137, -79.8543, 191.674, 0.83", "213.719, -85.4362, 203.389, 0.83", "216.769, -90.0408, 215.461, 0.83", "220.256, -95.0026, 227.257, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "197.7, -56.9675, 131.63, 0.55", "203.689, -62.9751, 141.705, 0.83", "209.676, -69.5177, 151.406, 0.83", "216.4, -76.9177, 159.872, 0.83", "221.805, -85.0044, 168.573, 0.83", "228.492, -91.8873, 177.534, 0.83", "235.277, -99.8522, 185.365, 0.83", "243.675, -107.685, 191.65, 0.83" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "185.858, -24.8187, 67.9431, 0.55", "194.183, -29.4679, 74.1687, 0.55", "202.357, -35.0512, 79.7062, 0.55", "209.216, -40.8145, 86.6469, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "185.858, -24.8187, 67.9431, 0.28", "193.877, -29.8168, 73.1424, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "6.03287, 142.627, -96.6239, 0.28", "6.63038, 146.767, -96.8213, 0.28", "6.84809, 149.47, -96.5687, 0.55", "6.86172, 150.941, -96.3576, 0.28", "6.80737, 151.834, -96.2298, 0.55", "6.52355, 154.539, -95.6463, 0.28", "6.40315, 156.331, -95.3509, 0.55", "6.34476, 159.812, -94.3729, 0.28", "6.29977, 160.984, -94.0469, 0.55", "5.92704, 164.955, -93.0318, 0.28", "5.42944, 167.515, -92.6211, 0.55", "4.06413, 172.185, -92.0456, 0.28", "2.98861, 175.625, -91.7415, 0.55", "2.33497, 178.064, -91.7175, 0.28", "2.18523, 178.615, -91.7246, 0.55", "0.266013, 182.546, -92.1011, 0.28", "-1.17461, 184.774, -92.5443, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "6.03287, 142.627, -96.6239, 0.28", "8.04043, 142.24, -97.6633, 0.28", "8.27314, 142.213, -97.777, 0.55", "10.0485, 142.207, -98.5507, 0.28", "11.9807, 142.201, -99.3927, 0.55", "15.5796, 142.19, -100.961, 0.28", "17.3183, 142.185, -101.718, 0.28", "18.1859, 142.134, -102.141, 0.28", "19.8612, 142.137, -103.006, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-71.8447, 90.5206, -88.9788, 0.28", "-70.0546, 92.5234, -89.8153, 0.28", "-68.9129, 93.8008, -90.3488, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-71.8447, 90.5206, -88.9788, 0.55", "-72.331, 91.3089, -89.8031, 0.55", "-73.4788, 93.2709, -91.9314, 0.55", "-73.9898, 94.2928, -93.08, 0.55", "-74.3695, 95.0439, -93.9826, 0.28", "-74.7363, 95.8588, -95.0313, 0.55", "-75.1961, 97.0285, -96.6342, 0.55", "-75.4189, 97.6503, -97.5128, 0.55", "-75.7336, 98.443, -98.6677, 0.28", "-75.9828, 99.3889, -100.143, 0.55", "-76.2013, 100.493, -102.032, 0.28", "-76.3128, 101.148, -103.277, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "111.577, -33.0593, 181.693, 0.83", "116.227, -36.7232, 189.1, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "111.577, -33.0593, 181.693, 0.55", "117.342, -36.6147, 188.936, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_64", "dend_61", "dend_58", "dend_55", "dend_35", "dend_32", "dend_21", "dend_0", "dend_69", "dend_68", "dend_66", "dend_65", "dend_63", "dend_62", "dend_60", "dend_59", "dend_57", "dend_56", "dend_45", "dend_36", "dend_34", "dend_33", "dend_23", "dend_22", "dend_18", "dend_1", "dend_46", "dend_44", "dend_37", "dend_31", "dend_24", "dend_20", "dend_19", "dend_9", "dend_2", "dend_52", "dend_47", "dend_43", "dend_38", "dend_28", "dend_25", "dend_13", "dend_10", "dend_6", "dend_3", "dend_54", "dend_53", "dend_51", "dend_48", "dend_42", "dend_39", "dend_30", "dend_29", "dend_27", "dend_26", "dend_15", "dend_14", "dend_12", "dend_11", "dend_8", "dend_7", "dend_5", "dend_4", "dend_50", "dend_49", "dend_41", "dend_40", "dend_17", "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_1", "axon_1", "axon_1", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_4", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_17", "dend_16" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L23_NBC_1bb1c095e5_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_64, id: dend_64, parent: soma_0
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: soma_0
create dend_55
public dend_55
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_64
create dend_66
public dend_66
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_45, id: dend_45, parent: dend_35
create dend_45
public dend_45
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_0
create dend_18
public dend_18
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_36
create dend_44
public dend_44
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_37
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_47
create dend_51
public dend_51
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_63
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.49999995020322374)
    connect dend_64(0), soma_0(0.49999995020322374)
    connect dend_61(0), soma_0(0.49999995020322374)
    connect dend_58(0), soma_0(0.49999995020322374)
    connect dend_55(0), soma_0(0.49999995020322374)
    connect dend_35(0), soma_0(0.49999995020322374)
    connect dend_32(0), soma_0(0.49999995020322374)
    connect dend_21(0), soma_0(0.49999995020322374)
    connect dend_0(0), soma_0(0.49999995020322374)
    connect axon_0(0), soma_0(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_45(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.75681, 7.93669, -3.00698, 2.63904 ) }
    soma_0 { pt3dadd( -6.11415, 7.12684, -2.72405, 4.23664 ) }
    soma_0 { pt3dadd( -5.47148, 6.31698, -2.44112, 6.10767 ) }
    soma_0 { pt3dadd( -4.82882, 5.50713, -2.15818, 7.7632 ) }
    soma_0 { pt3dadd( -4.18616, 4.69727, -1.87525, 10.2402 ) }
    soma_0 { pt3dadd( -3.5435, 3.88742, -1.59232, 11.8064 ) }
    soma_0 { pt3dadd( -2.90084, 3.07757, -1.30939, 12.5995 ) }
    soma_0 { pt3dadd( -2.25818, 2.26771, -1.02645, 13.3962 ) }
    soma_0 { pt3dadd( -1.61552, 1.45786, -0.74352, 14.1996 ) }
    soma_0 { pt3dadd( -0.972859, 0.648002, -0.460588, 14.817 ) }
    soma_0 { pt3dadd( -0.330198, -0.161852, -0.177655, 15.467 ) }
    soma_0 { pt3dadd( 0.312463, -0.971706, 0.105278, 16.407 ) }
    soma_0 { pt3dadd( 0.955124, -1.78156, 0.38821, 17.1741 ) }
    soma_0 { pt3dadd( 1.59778, -2.59142, 0.671143, 17.2738 ) }
    soma_0 { pt3dadd( 2.24045, -3.40127, 0.954075, 17.3386 ) }
    soma_0 { pt3dadd( 2.88311, -4.21112, 1.23701, 17.3694 ) }
    soma_0 { pt3dadd( 3.52577, -5.02098, 1.51994, 15.6873 ) }
    soma_0 { pt3dadd( 4.16843, -5.83083, 1.80287, 14.1508 ) }
    soma_0 { pt3dadd( 4.81109, -6.64069, 2.08581, 12.6795 ) }
    soma_0 { pt3dadd( 5.45375, -7.45054, 2.36874, 9.91553 ) }
    soma_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 5.27854 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -1.51781, -10.5212, 2.68779, 3.6 ) }
    dend_67 { pt3dadd( -0.969729, -12.4231, 4.13891, 3.6 ) }
    dend_67 { pt3dadd( -0.322797, -15.0468, 6.41604, 1.66 ) }
    dend_67 { pt3dadd( 0.412523, -17.6893, 8.76834, 1.66 ) }
    dend_67 { pt3dadd( 1.29362, -20.4667, 11.2961, 1.38 ) }
    dend_67 { pt3dadd( 2.63185, -24.5224, 14.8595, 1.38 ) }
    dend_67 { pt3dadd( 3.3938, -26.8948, 16.859, 1.38 ) }
    dend_67 { pt3dadd( 4.64855, -30.5301, 19.9432, 0.83 ) }
    dend_67 { pt3dadd( 5.91581, -33.9837, 22.8423, 1.11 ) }
    dend_67 { pt3dadd( 6.74847, -36.0796, 24.5568, 0.83 ) }
    dend_67 { pt3dadd( 7.76368, -38.4795, 26.3503, 0.83 ) }
    dend_67 { pt3dadd( 8.86548, -40.8379, 27.892, 0.83 ) }
    dend_67 { pt3dadd( 9.78328, -42.7623, 29.0888, 0.83 ) }
    dend_67 { pt3dadd( 10.1925, -43.5309, 29.5821, 0.83 ) }
    dend_67 { pt3dadd( 11.2372, -45.6216, 30.9636, 0.83 ) }
    dend_67 { pt3dadd( 11.6658, -46.4667, 31.5547, 0.83 ) }
    dend_67 { pt3dadd( 12.4809, -47.8886, 32.7278, 0.83 ) }
    dend_67 { pt3dadd( 13.4003, -49.3894, 34.0941, 0.83 ) }
    dend_67 { pt3dadd( 14.9483, -52.351, 36.9115, 0.83 ) }
    dend_67 { pt3dadd( 15.8745, -54.2225, 38.6718, 0.83 ) }
    dend_67 { pt3dadd( 19.0182, -59.1413, 44.3516, 0.83 ) }
    dend_67 { pt3dadd( 21.6244, -64.2454, 50.1217, 0.83 ) }
    dend_67 { pt3dadd( 25.5033, -68.8414, 55.6446, 0.83 ) }
    dend_67 { pt3dadd( 29.7197, -72.9847, 61.3148, 0.83 ) }
    // Section: dend_64, id: dend_64, parent: soma_0 (entry count 45/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -8.94782, 4.26083, -7.77221, 1.11 ) }
    dend_64 { pt3dadd( -8.76731, 7.2554, -7.61817, 1.11 ) }
    dend_64 { pt3dadd( -8.83965, 10.3142, -7.46943, 0.83 ) }
    dend_64 { pt3dadd( -9.21126, 13.8014, -6.99092, 0.83 ) }
    dend_64 { pt3dadd( -9.53281, 15.8414, -6.7289, 1.66 ) }
    dend_64 { pt3dadd( -10.2725, 19.5069, -6.252, 1.94 ) }
    dend_64 { pt3dadd( -11.1255, 22.9578, -5.89718, 0.83 ) }
    dend_64 { pt3dadd( -11.7238, 24.8181, -5.73484, 0.83 ) }
    dend_64 { pt3dadd( -13.5844, 29.3737, -5.4831, 1.38 ) }
    dend_64 { pt3dadd( -14.9765, 31.998, -5.63846, 0.55 ) }
    dend_64 { pt3dadd( -15.5248, 32.9871, -5.79559, 0.55 ) }
    dend_64 { pt3dadd( -16.6616, 35.0595, -6.66446, 0.55 ) }
    dend_64 { pt3dadd( -16.9069, 35.5409, -6.93569, 0.55 ) }
    dend_64 { pt3dadd( -17.9662, 37.7337, -8.45382, 0.55 ) }
    dend_64 { pt3dadd( -19.4324, 40.9512, -11.2321, 1.66 ) }
    dend_64 { pt3dadd( -20.4996, 43.6335, -13.4734, 1.66 ) }
    dend_64 { pt3dadd( -21.6404, 47.0717, -16.2581, 0.83 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 62/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -5.06781, -2.32267, 12.3478, 1.94 ) }
    dend_61 { pt3dadd( -6.69681, -2.86716, 15.8892, 1.94 ) }
    dend_61 { pt3dadd( -8.20089, -3.36988, 19.1591, 1.66 ) }
    dend_61 { pt3dadd( -12.7061, -4.87573, 28.9535, 1.38 ) }
    dend_61 { pt3dadd( -14.0501, -5.32497, 31.8754, 1.38 ) }
    dend_61 { pt3dadd( -16.1923, -6.041, 36.5326, 1.11 ) }
    dend_61 { pt3dadd( -19.3878, -7.10905, 43.4795, 1.94 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -6.57781, 2.74083, -8.27221, 1.11 ) }
    dend_58 { pt3dadd( -7.51163, 0.960532, -7.82227, 1.11 ) }
    dend_58 { pt3dadd( -8.7068, -1.54733, -7.38148, 0.83 ) }
    dend_58 { pt3dadd( -9.95566, -4.11692, -7.15017, 0.83 ) }
    dend_58 { pt3dadd( -11.7787, -7.55392, -7.1545, 0.55 ) }
    dend_58 { pt3dadd( -12.3335, -8.55826, -7.21718, 0.55 ) }
    dend_58 { pt3dadd( -13.5396, -10.9424, -7.59953, 0.55 ) }
    dend_58 { pt3dadd( -14.0166, -11.9927, -7.93787, 0.55 ) }
    dend_58 { pt3dadd( -14.8593, -13.7411, -8.82423, 0.83 ) }
    dend_58 { pt3dadd( -15.5738, -15.1683, -9.87872, 0.55 ) }
    dend_58 { pt3dadd( -15.9723, -15.9126, -10.5325, 0.55 ) }
    dend_58 { pt3dadd( -17.3884, -18.5084, -12.715, 1.11 ) }
    dend_58 { pt3dadd( -17.9885, -19.6941, -13.6496, 0.55 ) }
    dend_58 { pt3dadd( -18.6711, -21.1439, -14.81, 0.55 ) }
    dend_58 { pt3dadd( -19.3962, -22.8655, -16.1945, 0.55 ) }
    dend_58 { pt3dadd( -19.7379, -23.6283, -16.8204, 0.55 ) }
    dend_58 { pt3dadd( -20.4855, -25.1099, -18.1085, 1.11 ) }
    dend_58 { pt3dadd( -21.3314, -26.5764, -19.3746, 0.55 ) }
    dend_58 { pt3dadd( -22.2043, -28.1307, -20.6563, 0.55 ) }
    dend_58 { pt3dadd( -23.789, -30.8102, -22.8707, 1.38 ) }
    dend_58 { pt3dadd( -24.9064, -32.3746, -24.2201, 0.55 ) }
    dend_58 { pt3dadd( -26.0884, -33.7232, -25.4604, 0.55 ) }
    dend_58 { pt3dadd( -27.0654, -34.6612, -26.3924, 0.55 ) }
    dend_58 { pt3dadd( -28.387, -35.7913, -27.5547, 0.55 ) }
    dend_58 { pt3dadd( -30.6329, -37.5074, -29.3661, 1.94 ) }
    dend_58 { pt3dadd( -32.0265, -38.4251, -30.3879, 0.55 ) }
    dend_58 { pt3dadd( -33.5196, -39.3692, -31.4217, 0.83 ) }
    dend_58 { pt3dadd( -35.092, -40.31, -32.4445, 0.28 ) }
    dend_58 { pt3dadd( -35.7594, -40.7091, -32.8921, 0.55 ) }
    dend_58 { pt3dadd( -37.161, -41.6325, -33.9288, 0.28 ) }
    dend_58 { pt3dadd( -37.9776, -42.312, -34.5766, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_58 { pt3dadd( -39.2623, -43.6197, -35.8583, 1.94 ) }
    dend_58 { pt3dadd( -40.3513, -44.8588, -37.1203, 0.28 ) }
    dend_58 { pt3dadd( -41.3286, -46.0368, -38.3129, 0.55 ) }
    dend_58 { pt3dadd( -42.669, -47.7365, -40.1166, 0.28 ) }
    dend_58 { pt3dadd( -43.2823, -48.5635, -41.0128, 0.83 ) }
    dend_58 { pt3dadd( -44.937, -50.7754, -43.4706, 0.28 ) }
    dend_58 { pt3dadd( -45.9079, -52.1604, -45.1288, 0.83 ) }
    dend_58 { pt3dadd( -46.2699, -52.7255, -45.8013, 0.28 ) }
    dend_58 { pt3dadd( -46.8604, -53.6206, -46.8433, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: soma_0 (entry count 9/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -0.177811, 4.62183, -8.24221, 1.38 ) }
    dend_55 { pt3dadd( -2.34719, 4.94798, -8.47981, 1.38 ) }
    dend_55 { pt3dadd( -5.11692, 5.22034, -8.90778, 0.83 ) }
    dend_55 { pt3dadd( -9.83689, 5.34552, -9.83314, 0.83 ) }
    dend_55 { pt3dadd( -14.1273, 5.13821, -10.7672, 0.83 ) }
    dend_55 { pt3dadd( -18.5289, 4.66605, -11.9213, 0.83 ) }
    dend_55 { pt3dadd( -20.2088, 4.41467, -12.402, 0.55 ) }
    dend_55 { pt3dadd( -23.2207, 3.63806, -13.3521, 0.83 ) }
    dend_55 { pt3dadd( -25.3695, 2.83528, -14.0409, 0.55 ) }
    dend_55 { pt3dadd( -28.1724, 1.60499, -15.0061, 0.83 ) }
    dend_55 { pt3dadd( -30.7597, 0.552207, -15.9832, 0.55 ) }
    dend_55 { pt3dadd( -31.6561, 0.236956, -16.3524, 0.55 ) }
    dend_55 { pt3dadd( -34.0562, -0.392735, -17.3872, 0.83 ) }
    dend_55 { pt3dadd( -36.0324, -0.751605, -18.2621, 0.55 ) }
    dend_55 { pt3dadd( -39.2143, -1.22029, -19.8416, 0.55 ) }
    dend_55 { pt3dadd( -41.7608, -1.63914, -21.3376, 0.83 ) }
    dend_55 { pt3dadd( -43.9361, -2.18338, -22.8075, 0.55 ) }
    dend_55 { pt3dadd( -45.8924, -3.00984, -24.4668, 0.28 ) }
    dend_55 { pt3dadd( -46.9512, -3.63843, -25.5559, 0.28 ) }
    dend_55 { pt3dadd( -47.5272, -4.11639, -26.2296, 0.55 ) }
    dend_55 { pt3dadd( -48.4892, -5.25568, -27.3261, 0.55 ) }
    dend_55 { pt3dadd( -49.8555, -6.95304, -28.9809, 0.83 ) }
    dend_55 { pt3dadd( -51.0746, -8.17488, -30.1443, 0.55 ) }
    dend_55 { pt3dadd( -52.6545, -9.45397, -31.42, 0.55 ) }
    dend_55 { pt3dadd( -53.399, -10.031, -32.037, 0.55 ) }
    dend_55 { pt3dadd( -55.801, -11.7532, -34.0072, 1.11 ) }
    dend_55 { pt3dadd( -59.3263, -14.0234, -36.7933, 0.55 ) }
    dend_55 { pt3dadd( -62.4507, -15.7649, -39.145, 0.55 ) }
    dend_55 { pt3dadd( -64.408, -16.8344, -40.6289, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 38/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -7.28781, 3.99482, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -8.47584, 5.88926, -7.77221, 1.38 ) }
    dend_35 { pt3dadd( -9.30893, 7.2177, -7.77221, 1.38 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 41/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.01219, 4.82133, -4.12221, 0.83 ) }
    dend_32 { pt3dadd( 1.90449, 6.70894, -4.3681, 0.83 ) }
    dend_32 { pt3dadd( 4.01943, 9.74022, -5.35541, 0.83 ) }
    dend_32 { pt3dadd( 6.49915, 12.5859, -6.561, 0.83 ) }
    dend_32 { pt3dadd( 7.33112, 13.5595, -7.02202, 0.83 ) }
    dend_32 { pt3dadd( 9.16257, 15.7068, -8.15507, 0.83 ) }
    dend_32 { pt3dadd( 11.7239, 18.5562, -9.71123, 1.38 ) }
    dend_32 { pt3dadd( 14.1208, 20.8709, -11.1802, 0.83 ) }
    dend_32 { pt3dadd( 16.1503, 22.5784, -12.4035, 0.83 ) }
    dend_32 { pt3dadd( 19.7541, 25.4584, -14.6597, 1.38 ) }
    dend_32 { pt3dadd( 21.3127, 26.8015, -15.6872, 1.11 ) }
    dend_32 { pt3dadd( 23.4068, 28.7901, -17.0852, 1.11 ) }
    dend_32 { pt3dadd( 25.7784, 31.1021, -18.5272, 1.11 ) }
    dend_32 { pt3dadd( 28.1075, 33.4239, -19.842, 1.38 ) }
    dend_32 { pt3dadd( 30.4122, 35.7204, -21.2088, 0.83 ) }
    dend_32 { pt3dadd( 31.5176, 36.7607, -21.828, 0.83 ) }
    dend_32 { pt3dadd( 33.1902, 38.4566, -22.8269, 0.83 ) }
    dend_32 { pt3dadd( 34.5944, 39.9695, -23.7084, 0.83 ) }
    dend_32 { pt3dadd( 36.6109, 42.0187, -24.8945, 1.94 ) }
    dend_32 { pt3dadd( 38.8642, 44.1235, -26.2301, 0.83 ) }
    dend_32 { pt3dadd( 41.8211, 46.7274, -28.0325, 0.83 ) }
    dend_32 { pt3dadd( 44.6914, 48.9744, -29.8252, 1.66 ) }
    dend_32 { pt3dadd( 46.2743, 50.1084, -30.3951, 0.83 ) }
    dend_32 { pt3dadd( 48.4561, 51.4588, -30.0377, 0.83 ) }
    dend_32 { pt3dadd( 51.2137, 52.6999, -28.2567, 0.55 ) }
    dend_32 { pt3dadd( 52.3665, 53.0564, -27.2208, 0.83 ) }
    dend_32 { pt3dadd( 54.5489, 53.5323, -25.0916, 0.83 ) }
    dend_32 { pt3dadd( 66.9924, 55.6214, -12.8698, 2.22 ) }
    dend_32 { pt3dadd( 69.3245, 55.9512, -10.6521, 0.55 ) }
    dend_32 { pt3dadd( 70.4925, 56.1028, -9.59956, 0.55 ) }
    dend_32 { pt3dadd( 72.7153, 56.332, -7.72922, 1.11 ) }
    dend_32 { pt3dadd( 77.1843, 56.7082, -4.726, 0.55 ) }
    dend_32 { pt3dadd( 79.1414, 56.8449, -4.49435, 0.55 ) }
    dend_32 { pt3dadd( 81.0273, 56.9579, -5.26674, 1.11 ) }
    dend_32 { pt3dadd( 83.1272, 57.2164, -6.046, 0.55 ) }
    dend_32 { pt3dadd( 84.6632, 57.571, -6.5626, 0.28 ) }
    dend_32 { pt3dadd( 85.4328, 57.8046, -6.78243, 0.55 ) }
    dend_32 { pt3dadd( 87.4381, 58.4462, -7.14838, 0.28 ) }
    dend_32 { pt3dadd( 88.3729, 58.7389, -7.34883, 0.83 ) }
    dend_32 { pt3dadd( 91.0663, 59.6096, -7.97153, 0.28 ) }
    dend_32 { pt3dadd( 92.5765, 60.0666, -8.3277, 1.11 ) }
    dend_32 { pt3dadd( 95.3628, 60.8403, -8.84016, 0.28 ) }
    dend_32 { pt3dadd( 96.852, 61.268, -8.90735, 0.83 ) }
    dend_32 { pt3dadd( 98.9242, 61.8082, -8.77794, 0.28 ) }
    dend_32 { pt3dadd( 99.9991, 62.0337, -8.63918, 0.55 ) }
    dend_32 { pt3dadd( 101.647, 62.3373, -8.31578, 0.28 ) }
    dend_32 { pt3dadd( 103.967, 62.734, -7.76844, 1.11 ) }
    dend_32 { pt3dadd( 108.579, 63.5846, -6.4526, 0.28 ) }
    dend_32 { pt3dadd( 110.694, 63.9785, -5.8447, 1.11 ) }
    dend_32 { pt3dadd( 112.575, 64.3061, -5.33104, 0.55 ) }
    dend_32 { pt3dadd( 113.922, 64.5093, -5.06136, 0.83 ) }
    dend_32 { pt3dadd( 115.348, 64.6539, -4.94226, 0.28 ) }
    dend_32 { pt3dadd( 116.23, 64.6571, -4.99373, 0.83 ) }
    dend_32 { pt3dadd( 117.724, 64.564, -5.24451, 0.28 ) }
    dend_32 { pt3dadd( 118.72, 64.4845, -5.34691, 0.55 ) }
    dend_32 { pt3dadd( 120.398, 64.2736, -5.43807, 0.28 ) }
    dend_32 { pt3dadd( 121.521, 64.1175, -5.40832, 0.55 ) }
    dend_32 { pt3dadd( 124.369, 63.7364, -5.12613, 0.28 ) }
    dend_32 { pt3dadd( 125.921, 63.5119, -4.91607, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( 127.085, 63.376, -4.68016, 0.28 ) }
    dend_32 { pt3dadd( 127.894, 63.3285, -4.47113, 0.55 ) }
    dend_32 { pt3dadd( 129.654, 63.3474, -3.86375, 0.28 ) }
    dend_32 { pt3dadd( 130.477, 63.4184, -3.55043, 1.11 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 4/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -10.3378, 3.47233, -8.95221, 3.05 ) }
    dend_21 { pt3dadd( -11.3787, 3.69096, -9.68776, 3.05 ) }
    dend_21 { pt3dadd( -14.308, 4.30629, -11.7578, 2.22 ) }
    dend_21 { pt3dadd( -17.7375, 5.02666, -14.1813, 2.49 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 8.22219, 5.04932, 2.17779, 2.77 ) }
    dend_0 { pt3dadd( 10.106, 6.90219, 5.09934, 2.77 ) }
    dend_0 { pt3dadd( 12.0633, 8.8273, 8.1348, 2.77 ) }
    dend_0 { pt3dadd( 16.0806, 12.7786, 14.3651, 3.6 ) }
    dend_0 { pt3dadd( 17.0456, 13.7277, 15.8617, 3.6 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 13/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.09641, -8.2604, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 15.4206, -20.0103, 2.65167, 0.83 ) }
    axon_0 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.83 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 16/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 29.7197, -72.9847, 61.3148, 0.55 ) }
    dend_69 { pt3dadd( 31.9342, -78.4239, 66.5698, 0.55 ) }
    dend_69 { pt3dadd( 35.1579, -83.9302, 71.1343, 0.55 ) }
    dend_69 { pt3dadd( 38.5849, -90.1779, 74.2244, 0.55 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 20/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 29.7197, -72.9847, 61.3148, 0.28 ) }
    dend_68 { pt3dadd( 33.76, -80.775, 68.5301, 0.55 ) }
    dend_68 { pt3dadd( 38.1345, -87.6611, 76.5273, 0.55 ) }
    dend_68 { pt3dadd( 43.2226, -95.3134, 83.2131, 0.55 ) }
    // Section: dend_66, id: dend_66, parent: dend_64 (entry count 24/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -21.6404, 47.0717, -16.2581, 0.55 ) }
    dend_66 { pt3dadd( -22.0679, 48.2355, -16.2915, 0.55 ) }
    dend_66 { pt3dadd( -22.8138, 50.3731, -16.7068, 0.55 ) }
    dend_66 { pt3dadd( -23.3392, 51.7735, -17.0493, 1.38 ) }
    dend_66 { pt3dadd( -24.7985, 55.6454, -18.1746, 0.55 ) }
    dend_66 { pt3dadd( -25.3678, 57.2404, -18.8058, 0.55 ) }
    dend_66 { pt3dadd( -26.3746, 60.0563, -20.0288, 1.38 ) }
    dend_66 { pt3dadd( -27.9927, 64.2843, -22.063, 0.55 ) }
    dend_66 { pt3dadd( -28.9265, 66.6972, -23.3194, 0.55 ) }
    dend_66 { pt3dadd( -29.8893, 69.2635, -24.7208, 1.38 ) }
    dend_66 { pt3dadd( -31.424, 73.614, -27.2461, 0.55 ) }
    dend_66 { pt3dadd( -32.3507, 76.0592, -28.6592, 0.28 ) }
    dend_66 { pt3dadd( -32.8235, 77.2543, -29.3068, 0.55 ) }
    dend_66 { pt3dadd( -33.4319, 78.7373, -30.0122, 0.28 ) }
    dend_66 { pt3dadd( -33.855, 79.7903, -30.6255, 0.83 ) }
    dend_66 { pt3dadd( -34.5745, 81.5218, -31.81, 0.28 ) }
    dend_66 { pt3dadd( -35.2676, 83.1313, -33.2424, 0.83 ) }
    dend_66 { pt3dadd( -36.0673, 84.8836, -35.1893, 0.28 ) }
    dend_66 { pt3dadd( -37.0772, 86.8883, -37.7174, 1.11 ) }
    dend_66 { pt3dadd( -39.2824, 90.4366, -43.0506, 0.28 ) }
    dend_66 { pt3dadd( -40.4877, 92.0913, -45.8957, 0.83 ) }
    dend_66 { pt3dadd( -42.6354, 94.5123, -50.7693, 1.66 ) }
    dend_66 { pt3dadd( -43.4996, 95.3643, -52.7121, 0.28 ) }
    dend_66 { pt3dadd( -43.9886, 95.7471, -53.7249, 1.11 ) }
    dend_66 { pt3dadd( -46.4408, 97.2951, -58.2905, 0.55 ) }
    dend_66 { pt3dadd( -47.4129, 97.777, -59.8006, 1.38 ) }
    dend_66 { pt3dadd( -50.5146, 99.1204, -64.1828, 0.28 ) }
    dend_66 { pt3dadd( -50.8596, 99.2685, -64.6376, 0.55 ) }
    dend_66 { pt3dadd( -52.6149, 100.056, -66.9625, 0.28 ) }
    dend_66 { pt3dadd( -53.3081, 100.371, -67.9217, 0.83 ) }
    dend_66 { pt3dadd( -54.683, 100.962, -69.7754, 0.28 ) }
    dend_66 { pt3dadd( -54.8656, 101.016, -70.008, 0.55 ) }
    dend_66 { pt3dadd( -57.2514, 101.486, -72.8622, 0.28 ) }
    dend_66 { pt3dadd( -58.6005, 101.733, -74.4517, 0.83 ) }
    dend_66 { pt3dadd( -62.3909, 102.508, -78.8925, 0.28 ) }
    dend_66 { pt3dadd( -64.0745, 102.891, -80.8546, 1.11 ) }
    dend_66 { pt3dadd( -67.4609, 103.939, -84.6927, 0.55 ) }
    dend_66 { pt3dadd( -68.3296, 104.286, -85.644, 0.55 ) }
    dend_66 { pt3dadd( -69.9398, 105.143, -87.3152, 0.83 ) }
    dend_66 { pt3dadd( -72.4608, 106.906, -89.8427, 0.28 ) }
    dend_66 { pt3dadd( -73.0191, 107.422, -90.3676, 0.55 ) }
    dend_66 { pt3dadd( -75.8313, 110.716, -93.0756, 0.28 ) }
    dend_66 { pt3dadd( -76.6092, 111.805, -93.8094, 1.66 ) }
    dend_66 { pt3dadd( -78.0511, 113.923, -95.143, 0.28 ) }
    dend_66 { pt3dadd( -78.3697, 114.402, -95.4355, 0.55 ) }
    dend_66 { pt3dadd( -79.5017, 116.151, -96.4404, 0.28 ) }
    dend_66 { pt3dadd( -80.0643, 117.037, -97.0153, 0.83 ) }
    dend_66 { pt3dadd( -80.9804, 118.436, -98.0097, 0.28 ) }
    dend_66 { pt3dadd( -81.174, 118.713, -98.2415, 0.55 ) }
    dend_66 { pt3dadd( -82.2984, 120.227, -99.7067, 0.28 ) }
    dend_66 { pt3dadd( -82.9619, 121.069, -100.581, 0.55 ) }
    dend_66 { pt3dadd( -84.3951, 122.621, -102.495, 0.28 ) }
    dend_66 { pt3dadd( -85.0311, 123.315, -103.786, 0.28 ) }
    dend_66 { pt3dadd( -85.743, 124.097, -105.587, 0.83 ) }
    dend_66 { pt3dadd( -86.6811, 125.102, -108.172, 0.55 ) }
    dend_66 { pt3dadd( -86.9774, 125.4, -109.011, 0.55 ) }
    dend_66 { pt3dadd( -88.16, 126.522, -112.395, 0.83 ) }
    dend_66 { pt3dadd( -91.0116, 128.985, -120.194, 0.28 ) }
    dend_66 { pt3dadd( -91.3947, 129.316, -121.242, 0.83 ) }
    dend_66 { pt3dadd( -92.3977, 130.165, -123.818, 0.28 ) }
    dend_66 { pt3dadd( -92.8377, 130.53, -124.911, 0.55 ) }
    dend_66 { pt3dadd( -94.1486, 131.666, -128.029, 0.28 ) }
    dend_66 { pt3dadd( -95.0664, 132.458, -129.929, 0.83 ) }
    dend_66 { pt3dadd( -96.2189, 133.355, -131.787, 0.28 ) }
    dend_66 { pt3dadd( -97.1036, 134.074, -133.263, 0.28 ) }
    dend_66 { pt3dadd( -97.9961, 134.812, -134.827, 0.55 ) }
    dend_66 { pt3dadd( -99.8991, 136.407, -138.285, 0.28 ) }
    dend_66 { pt3dadd( -100.17, 136.62, -138.761, 0.55 ) }
    dend_66 { pt3dadd( -101.712, 137.703, -141.345, 0.28 ) }
    dend_66 { pt3dadd( -102.076, 137.926, -141.908, 0.55 ) }
    dend_66 { pt3dadd( -103.623, 138.781, -144.112, 0.28 ) }
    dend_66 { pt3dadd( -104.437, 139.173, -145.064, 0.55 ) }
    dend_66 { pt3dadd( -106.417, 140.035, -146.809, 0.28 ) }
    dend_66 { pt3dadd( -106.892, 140.215, -147.171, 0.55 ) }
    dend_66 { pt3dadd( -107.993, 140.561, -147.932, 0.28 ) }
    dend_66 { pt3dadd( -108.932, 140.844, -148.546, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_66 { pt3dadd( -113.308, 142.154, -151.193, 0.28 ) }
    dend_66 { pt3dadd( -116.273, 143.053, -152.935, 0.55 ) }
    dend_66 { pt3dadd( -120.986, 144.446, -155.563, 0.28 ) }
    dend_66 { pt3dadd( -122.444, 144.861, -156.362, 0.83 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 4/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -21.6404, 47.0717, -16.2581, 0.28 ) }
    dend_65 { pt3dadd( -22.2181, 48.0626, -16.2269, 0.28 ) }
    dend_65 { pt3dadd( -22.7905, 49.0292, -16.2343, 0.83 ) }
    dend_65 { pt3dadd( -23.2491, 49.8778, -16.2912, 0.28 ) }
    dend_65 { pt3dadd( -24.4621, 52.0274, -16.4343, 0.55 ) }
    dend_65 { pt3dadd( -25.1584, 53.3299, -16.546, 0.55 ) }
    dend_65 { pt3dadd( -25.9353, 54.7579, -16.6817, 0.55 ) }
    dend_65 { pt3dadd( -26.6401, 56.1085, -16.82, 1.38 ) }
    dend_65 { pt3dadd( -27.617, 57.8889, -16.991, 0.55 ) }
    dend_65 { pt3dadd( -28.8165, 59.8855, -17.1827, 0.83 ) }
    dend_65 { pt3dadd( -29.4727, 60.9502, -17.2522, 0.28 ) }
    dend_65 { pt3dadd( -30.0968, 62.0631, -17.3125, 0.83 ) }
    dend_65 { pt3dadd( -30.7406, 63.2854, -17.3544, 0.55 ) }
    dend_65 { pt3dadd( -31.7937, 65.3465, -17.4529, 1.94 ) }
    dend_65 { pt3dadd( -32.6793, 67.1928, -17.5515, 0.28 ) }
    dend_65 { pt3dadd( -33.1899, 68.4806, -17.7891, 0.83 ) }
    dend_65 { pt3dadd( -33.7307, 70.112, -18.2131, 0.28 ) }
    dend_65 { pt3dadd( -33.8966, 70.9661, -18.5928, 0.83 ) }
    dend_65 { pt3dadd( -33.9986, 71.7515, -19.044, 0.28 ) }
    dend_65 { pt3dadd( -34.077, 72.8714, -19.7681, 0.83 ) }
    dend_65 { pt3dadd( -34.2667, 75.6682, -21.6555, 0.55 ) }
    dend_65 { pt3dadd( -34.3967, 76.98, -22.5238, 1.94 ) }
    dend_65 { pt3dadd( -34.7399, 80.1075, -24.3988, 0.55 ) }
    dend_65 { pt3dadd( -34.9433, 81.5401, -25.1669, 0.55 ) }
    dend_65 { pt3dadd( -35.2823, 83.2761, -25.9246, 1.11 ) }
    dend_65 { pt3dadd( -35.7098, 84.9149, -26.4742, 0.28 ) }
    dend_65 { pt3dadd( -36.0916, 86.0277, -26.6927, 0.55 ) }
    dend_65 { pt3dadd( -36.8592, 87.7867, -26.9184, 0.55 ) }
    dend_65 { pt3dadd( -37.6739, 89.3365, -26.9452, 0.55 ) }
    dend_65 { pt3dadd( -38.5345, 90.8951, -26.9353, 0.55 ) }
    dend_65 { pt3dadd( -39.067, 91.7694, -26.9036, 0.55 ) }
    dend_65 { pt3dadd( -39.7862, 92.9048, -26.796, 1.11 ) }
    dend_65 { pt3dadd( -40.5217, 94.0331, -26.722, 0.28 ) }
    dend_65 { pt3dadd( -41.0997, 94.9844, -26.7079, 0.55 ) }
    dend_65 { pt3dadd( -41.8116, 96.3294, -26.7637, 0.28 ) }
    dend_65 { pt3dadd( -42.1368, 97.0608, -26.8298, 0.55 ) }
    dend_65 { pt3dadd( -42.5978, 98.3532, -26.9803, 0.28 ) }
    dend_65 { pt3dadd( -43.0669, 100.057, -27.2926, 0.83 ) }
    dend_65 { pt3dadd( -43.4262, 101.745, -27.6785, 0.28 ) }
    dend_65 { pt3dadd( -43.5577, 102.658, -27.8768, 0.55 ) }
    dend_65 { pt3dadd( -43.6938, 103.828, -28.1306, 0.28 ) }
    dend_65 { pt3dadd( -43.842, 105.156, -28.4112, 2.22 ) }
    dend_65 { pt3dadd( -44.0998, 107.611, -28.9003, 0.28 ) }
    dend_65 { pt3dadd( -44.157, 108.02, -28.9763, 0.55 ) }
    dend_65 { pt3dadd( -44.5621, 110.065, -29.4118, 0.28 ) }
    dend_65 { pt3dadd( -44.7884, 111.026, -29.6802, 0.83 ) }
    dend_65 { pt3dadd( -45.345, 112.845, -30.2748, 0.28 ) }
    dend_65 { pt3dadd( -45.6676, 113.707, -30.5827, 0.83 ) }
    dend_65 { pt3dadd( -46.36, 115.398, -31.2123, 0.28 ) }
    dend_65 { pt3dadd( -46.8511, 116.492, -31.6491, 0.83 ) }
    dend_65 { pt3dadd( -47.6861, 118.15, -32.4147, 0.28 ) }
    dend_65 { pt3dadd( -48.1882, 119.165, -32.8852, 1.38 ) }
    dend_65 { pt3dadd( -48.9384, 120.716, -33.5754, 0.28 ) }
    dend_65 { pt3dadd( -49.2864, 121.437, -33.8681, 0.55 ) }
    dend_65 { pt3dadd( -49.5606, 122.032, -34.0657, 0.55 ) }
    dend_65 { pt3dadd( -50.2725, 123.627, -34.5599, 0.28 ) }
    dend_65 { pt3dadd( -50.3773, 123.865, -34.6176, 0.55 ) }
    dend_65 { pt3dadd( -50.6953, 124.654, -34.8034, 0.28 ) }
    dend_65 { pt3dadd( -50.834, 125.049, -34.8519, 0.55 ) }
    dend_65 { pt3dadd( -51.3398, 126.533, -34.945, 0.28 ) }
    dend_65 { pt3dadd( -51.4667, 126.931, -34.9585, 0.55 ) }
    dend_65 { pt3dadd( -52.0778, 128.985, -34.9349, 0.28 ) }
    dend_65 { pt3dadd( -52.2986, 129.709, -34.9274, 0.55 ) }
    dend_65 { pt3dadd( -53.1127, 132.418, -34.9045, 0.28 ) }
    dend_65 { pt3dadd( -53.2223, 132.82, -34.8869, 0.83 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 69/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -19.3878, -7.10905, 43.4795, 1.11 ) }
    dend_63 { pt3dadd( -20.1199, -6.43245, 43.7083, 1.11 ) }
    dend_63 { pt3dadd( -21.4031, -5.12565, 44.1368, 0.83 ) }
    dend_63 { pt3dadd( -22.3346, -4.08794, 44.4494, 0.83 ) }
    dend_63 { pt3dadd( -23.668, -2.6541, 44.9606, 1.11 ) }
    dend_63 { pt3dadd( -25.6811, -0.651685, 45.7479, 0.83 ) }
    dend_63 { pt3dadd( -26.2257, -0.143425, 45.9891, 0.55 ) }
    dend_63 { pt3dadd( -27.122, 0.619936, 46.4867, 0.83 ) }
    dend_63 { pt3dadd( -28.3073, 1.50877, 47.2361, 0.83 ) }
    dend_63 { pt3dadd( -29.9935, 2.60028, 48.3574, 1.11 ) }
    dend_63 { pt3dadd( -30.8809, 3.10268, 48.9633, 0.83 ) }
    dend_63 { pt3dadd( -32.6069, 4.0026, 50.1726, 1.11 ) }
    dend_63 { pt3dadd( -34.5266, 5.01515, 51.5421, 0.83 ) }
    dend_63 { pt3dadd( -35.5566, 5.50661, 52.2663, 0.83 ) }
    dend_63 { pt3dadd( -36.316, 5.86147, 52.8153, 0.83 ) }
    dend_63 { pt3dadd( -36.9709, 6.24862, 53.2812, 0.55 ) }
    dend_63 { pt3dadd( -37.687, 6.77417, 53.804, 0.83 ) }
    dend_63 { pt3dadd( -38.7313, 7.69568, 54.323, 0.55 ) }
    dend_63 { pt3dadd( -39.3337, 9.03288, 54.4728, 0.55 ) }
    dend_63 { pt3dadd( -42.9163, 12.9756, 57.8764, 0.55 ) }
    dend_63 { pt3dadd( -46.7494, 16.4965, 61.5102, 0.55 ) }
    dend_63 { pt3dadd( -51.702, 19.4573, 64.2384, 0.55 ) }
    dend_63 { pt3dadd( -56.8266, 22.3791, 66.6831, 0.55 ) }
    dend_63 { pt3dadd( -61.9509, 24.6752, 69.7702, 0.55 ) }
    dend_63 { pt3dadd( -66.8695, 27.0495, 73.1144, 0.55 ) }
    dend_63 { pt3dadd( -71.6066, 29.9462, 76.2644, 0.55 ) }
    dend_63 { pt3dadd( -76.6251, 32.8165, 78.9788, 0.55 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 96/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -19.3878, -7.10905, 43.4795, 1.11 ) }
    dend_62 { pt3dadd( -20.2059, -7.93816, 44.5886, 1.11 ) }
    dend_62 { pt3dadd( -21.3885, -8.89676, 46.1465, 0.83 ) }
    dend_62 { pt3dadd( -21.963, -9.19007, 46.8793, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_62 { pt3dadd( -23.4413, -9.24757, 48.5814, 0.83 ) }
    dend_62 { pt3dadd( -25.3466, -8.78452, 50.4925, 0.83 ) }
    dend_62 { pt3dadd( -26.0476, -8.40987, 51.0669, 0.83 ) }
    dend_62 { pt3dadd( -27.2831, -7.6764, 51.7864, 0.83 ) }
    dend_62 { pt3dadd( -29.2326, -6.40992, 52.5896, 0.83 ) }
    dend_62 { pt3dadd( -31.4278, -4.81213, 53.2736, 0.83 ) }
    dend_62 { pt3dadd( -32.5962, -3.9042, 53.5157, 0.83 ) }
    dend_62 { pt3dadd( -34.975, -1.99883, 53.8143, 0.83 ) }
    dend_62 { pt3dadd( -36.7409, -0.599045, 53.9742, 0.55 ) }
    dend_62 { pt3dadd( -37.6463, 0.047849, 54.0069, 0.55 ) }
    dend_62 { pt3dadd( -38.8013, 0.735873, 53.9968, 0.55 ) }
    dend_62 { pt3dadd( -40.08, 1.42974, 53.8735, 0.55 ) }
    dend_62 { pt3dadd( -41.3718, 2.02557, 53.754, 0.55 ) }
    dend_62 { pt3dadd( -47.5458, 3.72572, 56.167, 0.55 ) }
    dend_62 { pt3dadd( -52.9196, 5.6745, 59.9366, 0.55 ) }
    dend_62 { pt3dadd( -58.0952, 6.33054, 64.4395, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 16/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -46.8604, -53.6206, -46.8433, 0.28 ) }
    dend_60 { pt3dadd( -47.5637, -52.4326, -47.6945, 0.28 ) }
    dend_60 { pt3dadd( -48.0454, -51.6189, -48.2774, 0.55 ) }
    dend_60 { pt3dadd( -48.8388, -50.2787, -49.2376, 0.28 ) }
    dend_60 { pt3dadd( -49.5904, -49.009, -50.1473, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 21/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -46.8604, -53.6206, -46.8433, 0.28 ) }
    dend_59 { pt3dadd( -48.3647, -54.5871, -47.6245, 0.28 ) }
    dend_59 { pt3dadd( -48.8789, -54.9436, -47.8972, 0.55 ) }
    dend_59 { pt3dadd( -50.8398, -56.285, -48.6621, 0.28 ) }
    dend_59 { pt3dadd( -52.107, -57.262, -49.1714, 0.83 ) }
    dend_59 { pt3dadd( -53.6752, -58.6394, -49.8987, 0.28 ) }
    dend_59 { pt3dadd( -54.6153, -59.5924, -50.4277, 0.55 ) }
    dend_59 { pt3dadd( -55.2632, -60.3399, -50.8529, 0.28 ) }
    dend_59 { pt3dadd( -56.9518, -62.6483, -52.2141, 2.77 ) }
    dend_59 { pt3dadd( -59.2, -66.238, -54.3988, 0.28 ) }
    dend_59 { pt3dadd( -60.2871, -68.1883, -55.6303, 0.83 ) }
    dend_59 { pt3dadd( -61.4439, -70.6234, -57.1346, 0.28 ) }
    dend_59 { pt3dadd( -61.9233, -71.8201, -57.8112, 0.55 ) }
    dend_59 { pt3dadd( -62.8646, -74.4576, -59.2789, 0.28 ) }
    dend_59 { pt3dadd( -63.1682, -75.3409, -59.826, 0.55 ) }
    dend_59 { pt3dadd( -63.4857, -76.142, -60.3026, 0.28 ) }
    dend_59 { pt3dadd( -64.4114, -77.8888, -61.2664, 0.83 ) }
    dend_59 { pt3dadd( -65.7654, -79.7649, -62.2962, 0.28 ) }
    dend_59 { pt3dadd( -67.13, -81.2236, -63.14, 0.83 ) }
    dend_59 { pt3dadd( -69.925, -83.4517, -64.5542, 0.55 ) }
    dend_59 { pt3dadd( -71.2359, -84.2876, -65.1222, 0.28 ) }
    dend_59 { pt3dadd( -73.8422, -85.6296, -66.1275, 0.55 ) }
    dend_59 { pt3dadd( -75.846, -86.4044, -66.8401, 0.55 ) }
    dend_59 { pt3dadd( -78.4865, -87.1671, -67.3771, 0.28 ) }
    dend_59 { pt3dadd( -80.7837, -87.7367, -67.5634, 0.83 ) }
    dend_59 { pt3dadd( -82.8203, -88.1957, -67.5323, 0.55 ) }
    dend_59 { pt3dadd( -84.6075, -88.5522, -67.4731, 0.28 ) }
    dend_59 { pt3dadd( -87.9229, -89.193, -67.4545, 0.55 ) }
    dend_59 { pt3dadd( -93.3139, -90.3613, -67.5483, 0.28 ) }
    dend_59 { pt3dadd( -96.5782, -91.0735, -67.7229, 0.83 ) }
    dend_59 { pt3dadd( -99.4638, -91.7905, -68.0444, 0.28 ) }
    dend_59 { pt3dadd( -101.381, -92.3428, -68.3746, 0.55 ) }
    dend_59 { pt3dadd( -104.725, -93.3633, -69.0917, 0.28 ) }
    dend_59 { pt3dadd( -106.007, -93.8037, -69.4668, 0.83 ) }
    dend_59 { pt3dadd( -107.08, -94.2046, -69.9755, 0.28 ) }
    dend_59 { pt3dadd( -109.717, -95.193, -71.3146, 0.28 ) }
    dend_59 { pt3dadd( -110.799, -95.6195, -71.941, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 58/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -64.408, -16.8344, -40.6289, 0.28 ) }
    dend_57 { pt3dadd( -66.0667, -18.9518, -42.1137, 0.28 ) }
    dend_57 { pt3dadd( -68.2015, -21.6612, -43.9344, 0.83 ) }
    dend_57 { pt3dadd( -71.0387, -25.1563, -46.1693, 0.28 ) }
    dend_57 { pt3dadd( -71.9895, -26.2419, -46.8534, 0.55 ) }
    dend_57 { pt3dadd( -73.6381, -27.9974, -47.9197, 0.28 ) }
    dend_57 { pt3dadd( -74.6797, -29.0691, -48.5824, 0.55 ) }
    dend_57 { pt3dadd( -75.5873, -29.9365, -49.1254, 0.28 ) }
    dend_57 { pt3dadd( -76.8454, -31.0297, -49.7517, 0.55 ) }
    dend_57 { pt3dadd( -78.7101, -32.5154, -50.5532, 0.28 ) }
    dend_57 { pt3dadd( -80.3899, -33.7979, -51.1822, 0.55 ) }
    dend_57 { pt3dadd( -83.4044, -36.0252, -52.276, 0.28 ) }
    dend_57 { pt3dadd( -84.7935, -37.0322, -52.7652, 0.55 ) }
    dend_57 { pt3dadd( -85.878, -37.8301, -53.1614, 0.28 ) }
    dend_57 { pt3dadd( -86.8588, -38.5707, -53.5021, 0.55 ) }
    dend_57 { pt3dadd( -90.0227, -40.9865, -54.6188, 0.28 ) }
    dend_57 { pt3dadd( -91.5967, -42.0978, -54.9023, 0.55 ) }
    dend_57 { pt3dadd( -93.9621, -43.648, -54.9091, 0.28 ) }
    dend_57 { pt3dadd( -95.4318, -44.5718, -54.7796, 0.55 ) }
    dend_57 { pt3dadd( -96.6855, -45.4472, -54.9675, 0.28 ) }
    dend_57 { pt3dadd( -98.8215, -47.1093, -55.8279, 0.83 ) }
    dend_57 { pt3dadd( -103.591, -51.2567, -58.7313, 0.28 ) }
    dend_57 { pt3dadd( -104.312, -51.9256, -59.2539, 0.83 ) }
    dend_57 { pt3dadd( -105.161, -52.7505, -60.0132, 0.28 ) }
    dend_57 { pt3dadd( -113.14, -60.0473, -66.8706, 0.55 ) }
    dend_57 { pt3dadd( -114.579, -61.3505, -68.1273, 0.28 ) }
    dend_57 { pt3dadd( -115.565, -62.2103, -68.9595, 0.55 ) }
    dend_57 { pt3dadd( -116.998, -63.4032, -70.1826, 0.28 ) }
    dend_57 { pt3dadd( -118.051, -64.2327, -70.9852, 0.55 ) }
    dend_57 { pt3dadd( -121.61, -66.6527, -72.6088, 0.28 ) }
    dend_57 { pt3dadd( -122.488, -67.0445, -72.4953, 0.55 ) }
    dend_57 { pt3dadd( -125.143, -68.1146, -72.0206, 0.28 ) }
    dend_57 { pt3dadd( -126.648, -68.6592, -71.6908, 0.83 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 91/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -64.408, -16.8344, -40.6289, 0.28 ) }
    dend_56 { pt3dadd( -66.6138, -15.4893, -41.9815, 0.28 ) }
    dend_56 { pt3dadd( -67.5261, -15.0683, -42.4436, 0.55 ) }
    dend_56 { pt3dadd( -68.6976, -14.5947, -43.0025, 0.28 ) }
    dend_56 { pt3dadd( -69.0034, -14.4828, -43.1316, 0.55 ) }
    dend_56 { pt3dadd( -70.4488, -13.9799, -43.6896, 0.28 ) }
    dend_56 { pt3dadd( -71.0663, -13.7795, -43.9086, 0.83 ) }
    dend_56 { pt3dadd( -73.5498, -13.149, -44.6541, 0.28 ) }
    dend_56 { pt3dadd( -74.3907, -12.9487, -44.8819, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_56 { pt3dadd( -76.9349, -12.3137, -45.45, 0.28 ) }
    dend_56 { pt3dadd( -78.6915, -11.815, -45.7836, 0.28 ) }
    dend_56 { pt3dadd( -79.9163, -11.4418, -45.9824, 0.55 ) }
    dend_56 { pt3dadd( -81.0929, -11.0637, -46.1598, 0.28 ) }
    dend_56 { pt3dadd( -81.3688, -10.9712, -46.1962, 0.55 ) }
    dend_56 { pt3dadd( -83.0148, -10.3993, -46.3508, 0.28 ) }
    dend_56 { pt3dadd( -83.8298, -10.082, -46.3875, 0.83 ) }
    // Section: dend_45, id: dend_45, parent: dend_35 (entry count 7/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.30893, 7.2177, -7.77221, 1.11 ) }
    dend_45 { pt3dadd( -7.7093, 7.41767, -9.36515, 1.11 ) }
    dend_45 { pt3dadd( -6.03879, 8.05538, -11.4691, 1.38 ) }
    dend_45 { pt3dadd( -2.63005, 10.4759, -17.2709, 2.49 ) }
    dend_45 { pt3dadd( -1.49763, 12.0302, -20.3238, 2.49 ) }
    dend_45 { pt3dadd( -0.947065, 13.1496, -22.2047, 1.11 ) }
    dend_45 { pt3dadd( -0.32949, 14.372, -24.0035, 1.11 ) }
    dend_45 { pt3dadd( 0.754513, 18.1745, -28.4471, 1.11 ) }
    dend_45 { pt3dadd( 1.0515, 20.4049, -30.6216, 1.11 ) }
    dend_45 { pt3dadd( 1.07877, 21.7104, -31.6369, 1.11 ) }
    dend_45 { pt3dadd( 0.810023, 24.484, -34.0026, 1.11 ) }
    dend_45 { pt3dadd( 0.502723, 27.1172, -36.3254, 1.38 ) }
    dend_45 { pt3dadd( 0.936193, 30.7489, -39.7966, 1.66 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 20/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.30893, 7.2177, -7.77221, 0.83 ) }
    dend_36 { pt3dadd( -10.6774, 7.88755, -7.76657, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 22/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 130.477, 63.4184, -3.55043, 0.28 ) }
    dend_34 { pt3dadd( 132.964, 63.1742, -2.74282, 0.28 ) }
    dend_34 { pt3dadd( 134.309, 63.085, -2.43806, 0.55 ) }
    dend_34 { pt3dadd( 137.216, 62.8921, -1.77946, 0.28 ) }
    dend_34 { pt3dadd( 139.851, 62.7172, -1.18251, 0.28 ) }
    dend_34 { pt3dadd( 141.239, 62.6252, -0.868207, 0.55 ) }
    dend_34 { pt3dadd( 143.387, 62.4826, -0.38153, 0.28 ) }
    dend_34 { pt3dadd( 145.063, 62.4813, -0.018883, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 30/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 130.477, 63.4184, -3.55043, 0.28 ) }
    dend_33 { pt3dadd( 131.878, 64.8831, -4.16882, 0.28 ) }
    dend_33 { pt3dadd( 132.439, 65.487, -4.39578, 1.11 ) }
    dend_33 { pt3dadd( 133.598, 66.8121, -4.83488, 0.28 ) }
    dend_33 { pt3dadd( 134.248, 67.5634, -5.08806, 0.55 ) }
    dend_33 { pt3dadd( 135.655, 69.239, -5.65067, 0.28 ) }
    dend_33 { pt3dadd( 136.584, 70.3906, -5.98558, 1.38 ) }
    dend_33 { pt3dadd( 137.478, 71.579, -6.2601, 0.28 ) }
    dend_33 { pt3dadd( 137.952, 72.2435, -6.41361, 0.83 ) }
    dend_33 { pt3dadd( 139.615, 74.6591, -6.91308, 0.28 ) }
    dend_33 { pt3dadd( 140.284, 75.6301, -7.10642, 1.38 ) }
    dend_33 { pt3dadd( 141.568, 77.5662, -7.49122, 0.28 ) }
    dend_33 { pt3dadd( 142.818, 79.5037, -7.85368, 0.28 ) }
    dend_33 { pt3dadd( 144.281, 81.7718, -8.31561, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 44/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -17.7375, 5.02666, -14.1813, 1.38 ) }
    dend_23 { pt3dadd( -19.9819, 5.96649, -13.4546, 1.38 ) }
    dend_23 { pt3dadd( -23.9697, 7.63921, -12.5036, 1.38 ) }
    dend_23 { pt3dadd( -26.421, 8.86041, -12.0447, 1.11 ) }
    dend_23 { pt3dadd( -29.1774, 10.2467, -11.5826, 1.11 ) }
    dend_23 { pt3dadd( -31.1288, 11.1509, -11.2104, 1.11 ) }
    dend_23 { pt3dadd( -33.6027, 12.2136, -10.784, 1.11 ) }
    dend_23 { pt3dadd( -37.0697, 13.7674, -10.3276, 1.11 ) }
    dend_23 { pt3dadd( -39.8177, 15.0042, -10.1767, 1.11 ) }
    dend_23 { pt3dadd( -41.37, 15.6327, -10.0658, 1.11 ) }
    dend_23 { pt3dadd( -44.7919, 16.8565, -9.71164, 1.11 ) }
    dend_23 { pt3dadd( -47.4055, 17.8336, -9.36845, 2.49 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 56/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -17.7375, 5.02666, -14.1813, 1.38 ) }
    dend_22 { pt3dadd( -24.8937, 5.83638, -12.4583, 1.38 ) }
    dend_22 { pt3dadd( -27.0525, 6.00665, -12.2323, 1.38 ) }
    dend_22 { pt3dadd( -31.1569, 6.10242, -12.6908, 1.38 ) }
    dend_22 { pt3dadd( -36.6362, 6.07313, -14.1058, 1.66 ) }
    dend_22 { pt3dadd( -39.58, 6.15979, -15.0992, 0.55 ) }
    dend_22 { pt3dadd( -40.3055, 6.21176, -15.3888, 0.55 ) }
    dend_22 { pt3dadd( -45.2759, 6.72357, -17.384, 0.55 ) }
    dend_22 { pt3dadd( -48.1601, 7.25428, -19.0749, 1.11 ) }
    dend_22 { pt3dadd( -50.8271, 7.91868, -21.0755, 0.83 ) }
    dend_22 { pt3dadd( -53.3125, 8.56892, -23.1256, 0.55 ) }
    dend_22 { pt3dadd( -55.6387, 9.06991, -24.979, 0.55 ) }
    dend_22 { pt3dadd( -57.3206, 9.43904, -26.1881, 0.55 ) }
    dend_22 { pt3dadd( -60.6767, 10.1199, -28.3699, 2.22 ) }
    dend_22 { pt3dadd( -63.0868, 10.4162, -29.9317, 0.83 ) }
    dend_22 { pt3dadd( -64.6237, 10.4506, -30.9759, 0.83 ) }
    dend_22 { pt3dadd( -67.2746, 10.182, -32.7599, 0.83 ) }
    dend_22 { pt3dadd( -68.6288, 9.92999, -33.6263, 0.83 ) }
    dend_22 { pt3dadd( -71.8385, 9.14954, -35.6083, 0.28 ) }
    dend_22 { pt3dadd( -74.5375, 8.33307, -37.1932, 0.83 ) }
    dend_22 { pt3dadd( -76.8926, 7.61339, -38.4579, 0.55 ) }
    dend_22 { pt3dadd( -78.8953, 7.01561, -39.4339, 0.55 ) }
    dend_22 { pt3dadd( -82.0492, 6.15409, -40.8256, 0.83 ) }
    dend_22 { pt3dadd( -83.6874, 5.71217, -41.4805, 0.28 ) }
    dend_22 { pt3dadd( -85.4037, 5.2688, -42.0909, 0.55 ) }
    dend_22 { pt3dadd( -87.3632, 4.74286, -42.8053, 0.28 ) }
    dend_22 { pt3dadd( -88.9112, 4.32401, -43.3244, 0.55 ) }
    dend_22 { pt3dadd( -91.5509, 3.69126, -44.0839, 0.28 ) }
    dend_22 { pt3dadd( -92.793, 3.42489, -44.3862, 0.55 ) }
    dend_22 { pt3dadd( -94.973, 3.06029, -44.8416, 0.28 ) }
    dend_22 { pt3dadd( -96.6168, 2.93845, -45.1334, 1.11 ) }
    dend_22 { pt3dadd( -98.3856, 2.98512, -45.348, 0.28 ) }
    dend_22 { pt3dadd( -99.2129, 3.12663, -45.346, 0.28 ) }
    dend_22 { pt3dadd( -100.876, 3.6112, -45.1054, 0.55 ) }
    dend_22 { pt3dadd( -101.828, 3.9885, -44.8982, 0.55 ) }
    dend_22 { pt3dadd( -103.568, 4.87258, -44.3752, 0.28 ) }
    dend_22 { pt3dadd( -104.062, 5.15154, -44.2251, 0.55 ) }
    dend_22 { pt3dadd( -105.384, 5.92878, -43.9678, 0.28 ) }
    dend_22 { pt3dadd( -105.613, 6.05548, -43.9478, 0.55 ) }
    dend_22 { pt3dadd( -107.024, 6.70061, -44.1448, 0.28 ) }
    dend_22 { pt3dadd( -107.615, 6.90236, -44.3506, 0.28 ) }
    dend_22 { pt3dadd( -108.296, 7.0791, -44.6908, 0.55 ) }
    dend_22 { pt3dadd( -109.778, 7.36588, -45.5026, 0.28 ) }
    dend_22 { pt3dadd( -110.596, 7.45159, -45.9648, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_22 { pt3dadd( -113.526, 7.54393, -47.643, 0.28 ) }
    dend_22 { pt3dadd( -114.422, 7.50014, -48.1444, 0.55 ) }
    dend_22 { pt3dadd( -116.773, 7.20373, -49.3503, 0.28 ) }
    dend_22 { pt3dadd( -118.679, 6.82953, -50.19, 0.55 ) }
    dend_22 { pt3dadd( -121.23, 6.17712, -51.0521, 0.28 ) }
    dend_22 { pt3dadd( -121.989, 5.97882, -51.244, 0.28 ) }
    dend_22 { pt3dadd( -123.438, 5.58669, -51.4628, 0.83 ) }
    dend_22 { pt3dadd( -125.683, 5.0159, -51.7284, 0.28 ) }
    dend_22 { pt3dadd( -127.149, 4.68412, -51.8752, 0.83 ) }
    dend_22 { pt3dadd( -129.273, 4.35975, -52.1228, 0.28 ) }
    dend_22 { pt3dadd( -130.761, 4.15002, -52.3073, 0.55 ) }
    dend_22 { pt3dadd( -132.483, 3.96491, -52.5372, 0.55 ) }
    dend_22 { pt3dadd( -134.105, 3.84575, -52.7866, 0.83 ) }
    dend_22 { pt3dadd( -136.126, 3.78073, -53.1325, 1.38 ) }
    dend_22 { pt3dadd( -138.336, 3.73156, -53.5961, 0.55 ) }
    dend_22 { pt3dadd( -140.663, 3.61107, -54.1932, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_0 (entry count 16/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 17.0456, 13.7277, 15.8617, 1.38 ) }
    dend_18 { pt3dadd( 21.1475, 16.8722, 15.1323, 1.38 ) }
    dend_18 { pt3dadd( 23.6633, 18.9079, 14.564, 1.66 ) }
    dend_18 { pt3dadd( 26.6794, 21.5355, 13.9808, 1.66 ) }
    dend_18 { pt3dadd( 32.0672, 26.0691, 13.1938, 1.11 ) }
    dend_18 { pt3dadd( 35.1722, 28.4601, 12.9063, 1.38 ) }
    dend_18 { pt3dadd( 37.3281, 30.0051, 12.785, 1.11 ) }
    dend_18 { pt3dadd( 39.1976, 31.1237, 12.7489, 1.66 ) }
    dend_18 { pt3dadd( 42.6714, 33.1625, 12.8727, 1.38 ) }
    dend_18 { pt3dadd( 45.6786, 34.9847, 12.8999, 1.38 ) }
    dend_18 { pt3dadd( 48.848, 36.9027, 12.86, 1.38 ) }
    dend_18 { pt3dadd( 50.5691, 37.9331, 12.9022, 1.38 ) }
    dend_18 { pt3dadd( 53.3631, 39.4607, 12.9623, 0.55 ) }
    dend_18 { pt3dadd( 57.0769, 41.3706, 12.8267, 1.11 ) }
    dend_18 { pt3dadd( 61.0764, 43.5615, 12.093, 0.83 ) }
    dend_18 { pt3dadd( 63.2214, 45.1371, 11.3967, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 32/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 17.0456, 13.7277, 15.8617, 2.22 ) }
    dend_1 { pt3dadd( 19.505, 15.6382, 18.7749, 2.22 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 34/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 24.7447, -31.7602, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 34.0689, -43.5101, 2.65167, 0.28 ) }
    axon_1 { pt3dadd( 43.393, -55.26, 2.65167, 0.28 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 37/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 0.936193, 30.7489, -39.7966, 1.11 ) }
    dend_46 { pt3dadd( -1.22075, 35.7998, -42.7868, 1.11 ) }
    dend_46 { pt3dadd( -2.46318, 38.7092, -44.5092, 1.11 ) }
    dend_46 { pt3dadd( -4.02658, 42.3703, -46.6766, 1.11 ) }
    dend_46 { pt3dadd( -5.59239, 46.037, -48.8473, 1.11 ) }
    dend_46 { pt3dadd( -6.57732, 48.3434, -50.2128, 0.83 ) }
    // Section: dend_44, id: dend_44, parent: dend_36 (entry count 43/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -10.6774, 7.88755, -7.76657, 0.83 ) }
    dend_44 { pt3dadd( -12.3142, 12.5579, -5.31078, 0.83 ) }
    dend_44 { pt3dadd( -12.6853, 15.1305, -4.28434, 0.83 ) }
    dend_44 { pt3dadd( -13.0442, 19.0918, -2.64329, 0.83 ) }
    dend_44 { pt3dadd( -13.0199, 21.0532, -1.84788, 0.83 ) }
    dend_44 { pt3dadd( -12.7001, 24.8527, -0.818402, 0.83 ) }
    dend_44 { pt3dadd( -12.1828, 28.5737, -0.0930252, 0.83 ) }
    dend_44 { pt3dadd( -11.7007, 31.7363, 0.524787, 0.83 ) }
    dend_44 { pt3dadd( -10.876, 35.868, 1.12217, 0.55 ) }
    dend_44 { pt3dadd( -9.97835, 38.7641, 1.34709, 0.83 ) }
    dend_44 { pt3dadd( -8.19518, 44.0038, 1.30056, 0.55 ) }
    dend_44 { pt3dadd( -7.84635, 45.1729, 1.13799, 0.28 ) }
    dend_44 { pt3dadd( -7.51306, 46.8308, 0.732699, 0.55 ) }
    dend_44 { pt3dadd( -7.29473, 49.623, -0.0831212, 0.28 ) }
    dend_44 { pt3dadd( -7.32249, 50.6026, -0.387211, 0.55 ) }
    dend_44 { pt3dadd( -7.88514, 55.1292, -1.40682, 0.55 ) }
    dend_44 { pt3dadd( -8.40828, 58.4764, -1.88043, 0.28 ) }
    dend_44 { pt3dadd( -8.95902, 62.2459, -2.28482, 0.55 ) }
    dend_44 { pt3dadd( -9.18176, 64.1258, -2.44911, 0.28 ) }
    dend_44 { pt3dadd( -9.42335, 67.3133, -2.69294, 0.55 ) }
    dend_44 { pt3dadd( -9.51803, 70.1157, -2.93189, 0.28 ) }
    dend_44 { pt3dadd( -9.47409, 71.5239, -3.0468, 0.55 ) }
    dend_44 { pt3dadd( -9.22929, 74.4178, -3.31874, 0.55 ) }
    dend_44 { pt3dadd( -9.12153, 76.4651, -3.64405, 0.55 ) }
    dend_44 { pt3dadd( -9.01326, 78.4112, -4.08593, 0.55 ) }
    dend_44 { pt3dadd( -8.84938, 81.7377, -5.29389, 0.28 ) }
    dend_44 { pt3dadd( -8.76806, 83.6344, -6.18905, 0.83 ) }
    dend_44 { pt3dadd( -8.68252, 86.4506, -7.63405, 0.83 ) }
    dend_44 { pt3dadd( -8.68444, 88.9991, -9.01953, 0.28 ) }
    dend_44 { pt3dadd( -8.66262, 90.5604, -9.82351, 0.55 ) }
    dend_44 { pt3dadd( -8.59109, 93.2383, -10.9493, 0.28 ) }
    dend_44 { pt3dadd( -8.7011, 95.8017, -12.0403, 0.83 ) }
    dend_44 { pt3dadd( -8.88452, 98.007, -13.0574, 0.28 ) }
    dend_44 { pt3dadd( -9.04556, 99.7617, -13.8869, 0.83 ) }
    dend_44 { pt3dadd( -9.28489, 103.148, -15.537, 0.28 ) }
    dend_44 { pt3dadd( -9.5343, 106.237, -17.1419, 0.55 ) }
    dend_44 { pt3dadd( -10.0981, 112.975, -20.4355, 0.28 ) }
    dend_44 { pt3dadd( -10.2573, 115.078, -21.4485, 0.28 ) }
    dend_44 { pt3dadd( -10.3237, 117.57, -22.6856, 0.55 ) }
    dend_44 { pt3dadd( -10.2597, 120.787, -24.2989, 0.28 ) }
    dend_44 { pt3dadd( -10.1998, 122.779, -25.3119, 0.55 ) }
    dend_44 { pt3dadd( -10.0819, 126.29, -27.0373, 0.28 ) }
    dend_44 { pt3dadd( -9.96404, 128.55, -27.9067, 0.28 ) }
    dend_44 { pt3dadd( -10.0364, 131.286, -29.0588, 0.55 ) }
    dend_44 { pt3dadd( -10.2439, 133.612, -30.15, 0.28 ) }
    dend_44 { pt3dadd( -10.5954, 136.263, -31.4963, 0.55 ) }
    dend_44 { pt3dadd( -11.0709, 138.655, -32.8376, 0.55 ) }
    dend_44 { pt3dadd( -11.6062, 140.415, -34.023, 0.55 ) }
    dend_44 { pt3dadd( -12.8374, 143.607, -36.1934, 0.28 ) }
    dend_44 { pt3dadd( -13.7139, 145.509, -37.4646, 0.55 ) }
    dend_44 { pt3dadd( -14.2597, 146.642, -38.25, 0.28 ) }
    dend_44 { pt3dadd( -14.6505, 147.477, -38.8541, 0.55 ) }
    dend_44 { pt3dadd( -15.4491, 149.31, -40.3283, 0.28 ) }
    dend_44 { pt3dadd( -16.0766, 150.426, -41.2651, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 97/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -10.6774, 7.88755, -7.76657, 0.55 ) }
    dend_37 { pt3dadd( -11.7967, 9.03265, -8.28458, 0.55 ) }
    dend_37 { pt3dadd( -12.9992, 10.6287, -9.4036, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_37 { pt3dadd( -13.8509, 11.8476, -10.3269, 0.55 ) }
    dend_37 { pt3dadd( -15.0315, 13.5249, -11.5499, 0.55 ) }
    dend_37 { pt3dadd( -16.9917, 16.4351, -13.4877, 0.83 ) }
    dend_37 { pt3dadd( -18.5561, 18.9518, -15.216, 0.83 ) }
    dend_37 { pt3dadd( -19.838, 21.3837, -16.9604, 0.28 ) }
    dend_37 { pt3dadd( -20.7811, 23.2915, -18.3903, 0.55 ) }
    dend_37 { pt3dadd( -21.7903, 25.1188, -19.8543, 0.83 ) }
    dend_37 { pt3dadd( -23.0996, 26.8641, -21.3279, 0.83 ) }
    dend_37 { pt3dadd( -25.267, 28.6822, -22.9182, 0.28 ) }
    dend_37 { pt3dadd( -25.7713, 28.9688, -23.182, 0.83 ) }
    dend_37 { pt3dadd( -27.791, 29.748, -24.003, 0.55 ) }
    dend_37 { pt3dadd( -30.4138, 30.5061, -25.0471, 0.55 ) }
    dend_37 { pt3dadd( -32.7854, 31.0591, -25.9081, 0.55 ) }
    dend_37 { pt3dadd( -35.006, 31.4361, -26.663, 0.83 ) }
    dend_37 { pt3dadd( -37.6761, 31.7751, -27.5772, 0.28 ) }
    dend_37 { pt3dadd( -38.9984, 31.9817, -28.0747, 0.28 ) }
    dend_37 { pt3dadd( -41.0828, 32.4628, -28.9641, 0.55 ) }
    dend_37 { pt3dadd( -42.6548, 32.9112, -29.6996, 0.55 ) }
    dend_37 { pt3dadd( -45.1911, 33.7039, -31.0316, 0.55 ) }
    dend_37 { pt3dadd( -48.2861, 34.7268, -32.7025, 0.55 ) }
    dend_37 { pt3dadd( -50.9282, 35.6853, -34.2957, 0.55 ) }
    dend_37 { pt3dadd( -52.2975, 36.249, -35.2292, 0.28 ) }
    dend_37 { pt3dadd( -52.5936, 36.3847, -35.4699, 0.83 ) }
    dend_37 { pt3dadd( -54.538, 37.6835, -37.4489, 0.28 ) }
    dend_37 { pt3dadd( -54.7512, 37.8871, -37.7129, 0.55 ) }
    dend_37 { pt3dadd( -55.3785, 38.5803, -38.5682, 0.28 ) }
    dend_37 { pt3dadd( -55.8083, 39.0133, -39.2081, 0.55 ) }
    dend_37 { pt3dadd( -57.2375, 40.378, -41.3229, 0.28 ) }
    dend_37 { pt3dadd( -58.5546, 41.614, -43.1986, 0.83 ) }
    dend_37 { pt3dadd( -60.1463, 43.2423, -45.3049, 0.28 ) }
    dend_37 { pt3dadd( -61.2157, 44.4314, -46.6669, 0.55 ) }
    dend_37 { pt3dadd( -62.6276, 46.0955, -48.3972, 0.28 ) }
    dend_37 { pt3dadd( -63.1378, 46.713, -49.0178, 0.83 ) }
    dend_37 { pt3dadd( -65.1309, 49.1672, -51.2959, 0.55 ) }
    dend_37 { pt3dadd( -66.8511, 51.2081, -53.1749, 0.55 ) }
    dend_37 { pt3dadd( -67.9647, 52.7111, -54.4045, 0.55 ) }
    dend_37 { pt3dadd( -69.3096, 54.7123, -55.8997, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 37/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -47.4055, 17.8336, -9.36845, 0.83 ) }
    dend_31 { pt3dadd( -51.5446, 16.7366, -9.60498, 0.83 ) }
    dend_31 { pt3dadd( -53.3287, 16.3341, -9.84472, 0.55 ) }
    dend_31 { pt3dadd( -55.3381, 15.9361, -10.1669, 1.11 ) }
    dend_31 { pt3dadd( -57.9918, 15.4151, -10.7558, 0.83 ) }
    dend_31 { pt3dadd( -60.635, 14.9574, -11.3834, 0.83 ) }
    dend_31 { pt3dadd( -65.1926, 14.3075, -12.4782, 1.38 ) }
    dend_31 { pt3dadd( -68.2696, 13.9319, -13.3065, 0.83 ) }
    dend_31 { pt3dadd( -70.8904, 13.629, -14.0938, 0.83 ) }
    dend_31 { pt3dadd( -74.679, 13.2312, -15.3648, 1.38 ) }
    dend_31 { pt3dadd( -78.1867, 12.9182, -16.7395, 0.55 ) }
    dend_31 { pt3dadd( -80.0076, 12.7843, -17.5259, 0.55 ) }
    dend_31 { pt3dadd( -82.3264, 12.5745, -18.5436, 1.38 ) }
    dend_31 { pt3dadd( -87.0379, 11.9964, -20.5978, 0.83 ) }
    dend_31 { pt3dadd( -89.4608, 11.6805, -21.6295, 1.66 ) }
    dend_31 { pt3dadd( -94.4524, 10.9846, -23.8002, 0.28 ) }
    dend_31 { pt3dadd( -96.7327, 10.602, -24.8742, 1.11 ) }
    dend_31 { pt3dadd( -98.5939, 10.2541, -25.7748, 0.28 ) }
    dend_31 { pt3dadd( -99.5053, 10.096, -26.2131, 0.55 ) }
    dend_31 { pt3dadd( -101.511, 9.69393, -27.0764, 0.28 ) }
    dend_31 { pt3dadd( -104.495, 9.12244, -28.1176, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -47.4055, 17.8336, -9.36845, 0.83 ) }
    dend_24 { pt3dadd( -50.0476, 21.0187, -10.2851, 0.83 ) }
    dend_24 { pt3dadd( -51.063, 22.1936, -10.6466, 0.83 ) }
    dend_24 { pt3dadd( -53.572, 24.7038, -11.4469, 1.11 ) }
    dend_24 { pt3dadd( -55.3944, 26.2644, -11.9944, 0.83 ) }
    dend_24 { pt3dadd( -58.0823, 28.3337, -12.7269, 1.11 ) }
    dend_24 { pt3dadd( -60.4371, 30.0195, -13.3326, 0.83 ) }
    dend_24 { pt3dadd( -62.0784, 30.9536, -13.7768, 0.83 ) }
    dend_24 { pt3dadd( -65.2815, 32.5597, -14.503, 1.94 ) }
    dend_24 { pt3dadd( -67.7721, 33.7556, -14.9014, 1.11 ) }
    dend_24 { pt3dadd( -69.3033, 34.4674, -15.0503, 0.83 ) }
    dend_24 { pt3dadd( -71.025, 35.3044, -15.1539, 1.38 ) }
    dend_24 { pt3dadd( -74.4354, 36.8962, -15.2568, 0.83 ) }
    dend_24 { pt3dadd( -77.0341, 38.2172, -15.35, 0.83 ) }
    dend_24 { pt3dadd( -80.6761, 40.2694, -15.4885, 2.77 ) }
    dend_24 { pt3dadd( -83.8124, 42.2584, -15.4741, 0.55 ) }
    dend_24 { pt3dadd( -85.3488, 43.3461, -15.3542, 0.55 ) }
    dend_24 { pt3dadd( -87.4692, 44.9393, -15.051, 0.83 ) }
    dend_24 { pt3dadd( -88.732, 45.9252, -14.8646, 0.55 ) }
    dend_24 { pt3dadd( -90.7437, 47.4401, -14.6254, 0.55 ) }
    dend_24 { pt3dadd( -94.2156, 50.1304, -14.2695, 1.94 ) }
    dend_24 { pt3dadd( -98.0801, 53.1483, -13.6034, 0.83 ) }
    dend_24 { pt3dadd( -99.3428, 54.1552, -13.1999, 0.83 ) }
    dend_24 { pt3dadd( -102.134, 56.3561, -11.7399, 1.11 ) }
    dend_24 { pt3dadd( -103.829, 57.4728, -10.3348, 0.55 ) }
    dend_24 { pt3dadd( -105.613, 58.4051, -8.35532, 0.55 ) }
    dend_24 { pt3dadd( -108.015, 59.2975, -5.24194, 0.83 ) }
    dend_24 { pt3dadd( -111.439, 60.1831, -0.445359, 0.83 ) }
    dend_24 { pt3dadd( -114.35, 60.8545, 3.92551, 2.77 ) }
    dend_24 { pt3dadd( -118.453, 61.6169, 10.3269, 0.83 ) }
    dend_24 { pt3dadd( -119.802, 61.7928, 12.3891, 1.11 ) }
    dend_24 { pt3dadd( -120.876, 61.8872, 13.9404, 0.28 ) }
    dend_24 { pt3dadd( -122.551, 62.0739, 15.9711, 1.11 ) }
    dend_24 { pt3dadd( -124.858, 62.4735, 18.0207, 0.28 ) }
    dend_24 { pt3dadd( -126.45, 62.9545, 19.0658, 0.83 ) }
    dend_24 { pt3dadd( -129.101, 64.2112, 20.2342, 0.28 ) }
    dend_24 { pt3dadd( -129.898, 64.7031, 20.5069, 0.55 ) }
    dend_24 { pt3dadd( -131.644, 66.1317, 20.942, 0.55 ) }
    dend_24 { pt3dadd( -133.671, 68.2073, 21.179, 0.55 ) }
    dend_24 { pt3dadd( -135.305, 70.0982, 21.1173, 0.55 ) }
    dend_24 { pt3dadd( -136.79, 72.1647, 20.7992, 1.11 ) }
    dend_24 { pt3dadd( -137.69, 73.6204, 20.434, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( -139.446, 76.766, 19.5383, 1.66 ) }
    dend_24 { pt3dadd( -140.211, 78.2371, 19.0659, 0.28 ) }
    dend_24 { pt3dadd( -141.0, 79.8011, 18.5009, 0.55 ) }
    dend_24 { pt3dadd( -142.245, 82.049, 17.6381, 0.28 ) }
    dend_24 { pt3dadd( -142.946, 83.0993, 17.2945, 0.83 ) }
    dend_24 { pt3dadd( -143.791, 84.2225, 17.1396, 0.28 ) }
    dend_24 { pt3dadd( -144.422, 85.0056, 17.0632, 0.28 ) }
    dend_24 { pt3dadd( -145.734, 86.5611, 17.0004, 0.55 ) }
    dend_24 { pt3dadd( -147.073, 88.1153, 17.0751, 0.28 ) }
    dend_24 { pt3dadd( -149.642, 90.9071, 17.5436, 1.11 ) }
    dend_24 { pt3dadd( -153.316, 94.8172, 18.3893, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 11/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 63.2214, 45.1371, 11.3967, 0.55 ) }
    dend_20 { pt3dadd( 64.7229, 45.3179, 9.80663, 0.55 ) }
    dend_20 { pt3dadd( 66.1118, 45.5084, 8.13479, 0.55 ) }
    dend_20 { pt3dadd( 67.4935, 45.7167, 6.41128, 0.55 ) }
    dend_20 { pt3dadd( 71.5361, 46.272, 1.53812, 1.11 ) }
    dend_20 { pt3dadd( 76.1944, 46.9664, -3.94797, 0.28 ) }
    dend_20 { pt3dadd( 77.9895, 47.1825, -6.02293, 1.38 ) }
    dend_20 { pt3dadd( 81.7384, 47.4708, -10.5859, 0.28 ) }
    dend_20 { pt3dadd( 82.0388, 47.4862, -10.9677, 0.83 ) }
    dend_20 { pt3dadd( 83.3808, 47.5665, -12.6977, 0.55 ) }
    dend_20 { pt3dadd( 85.36, 47.8315, -15.2903, 0.55 ) }
    dend_20 { pt3dadd( 88.5573, 48.4372, -19.5114, 0.55 ) }
    dend_20 { pt3dadd( 90.4185, 48.8738, -21.9291, 0.55 ) }
    dend_20 { pt3dadd( 92.0503, 49.4178, -24.0618, 0.28 ) }
    dend_20 { pt3dadd( 92.9488, 49.8051, -25.305, 0.55 ) }
    dend_20 { pt3dadd( 94.354, 50.6956, -27.439, 0.28 ) }
    dend_20 { pt3dadd( 95.0945, 51.3207, -28.6139, 0.55 ) }
    dend_20 { pt3dadd( 96.3358, 52.8894, -30.6622, 1.38 ) }
    dend_20 { pt3dadd( 98.3448, 55.936, -33.8452, 0.28 ) }
    dend_20 { pt3dadd( 98.8185, 56.7609, -34.5839, 0.55 ) }
    dend_20 { pt3dadd( 99.9861, 59.107, -36.4595, 0.28 ) }
    dend_20 { pt3dadd( 100.409, 59.8673, -37.0711, 0.55 ) }
    dend_20 { pt3dadd( 101.62, 61.8389, -38.6779, 0.28 ) }
    dend_20 { pt3dadd( 102.503, 63.103, -39.6218, 0.55 ) }
    dend_20 { pt3dadd( 103.554, 64.4364, -40.4448, 0.28 ) }
    dend_20 { pt3dadd( 104.019, 64.9446, -40.7502, 0.83 ) }
    dend_20 { pt3dadd( 108.222, 68.8608, -42.985, 0.28 ) }
    dend_20 { pt3dadd( 110.138, 70.4103, -43.9213, 1.11 ) }
    dend_20 { pt3dadd( 112.406, 71.9841, -44.958, 0.28 ) }
    dend_20 { pt3dadd( 113.848, 72.8897, -45.6252, 0.55 ) }
    dend_20 { pt3dadd( 115.608, 73.9193, -46.4075, 0.28 ) }
    dend_20 { pt3dadd( 116.611, 74.473, -46.8621, 0.55 ) }
    dend_20 { pt3dadd( 120.644, 76.6204, -48.6561, 0.28 ) }
    dend_20 { pt3dadd( 121.478, 77.0252, -49.0933, 0.55 ) }
    dend_20 { pt3dadd( 124.067, 78.1655, -50.8805, 0.28 ) }
    dend_20 { pt3dadd( 125.0, 78.5695, -51.5934, 0.55 ) }
    dend_20 { pt3dadd( 126.128, 79.1147, -52.5557, 0.28 ) }
    dend_20 { pt3dadd( 126.648, 79.4096, -53.0263, 0.28 ) }
    dend_20 { pt3dadd( 126.878, 79.5643, -53.2297, 0.55 ) }
    dend_20 { pt3dadd( 129.668, 81.586, -55.5841, 0.28 ) }
    dend_20 { pt3dadd( 131.506, 82.9242, -57.1158, 1.38 ) }
    dend_20 { pt3dadd( 133.38, 84.2354, -58.748, 0.28 ) }
    dend_20 { pt3dadd( 134.115, 84.6633, -59.4118, 0.55 ) }
    dend_20 { pt3dadd( 135.177, 85.1867, -60.4296, 0.28 ) }
    dend_20 { pt3dadd( 136.383, 85.6713, -61.5805, 0.55 ) }
    dend_20 { pt3dadd( 139.242, 86.553, -64.1886, 0.28 ) }
    dend_20 { pt3dadd( 140.325, 86.6879, -65.2588, 0.55 ) }
    dend_20 { pt3dadd( 143.296, 86.6398, -68.2154, 0.28 ) }
    dend_20 { pt3dadd( 144.509, 86.5631, -69.4485, 0.83 ) }
    dend_20 { pt3dadd( 146.212, 86.3733, -71.2269, 0.28 ) }
    dend_20 { pt3dadd( 147.185, 86.2101, -72.2086, 0.55 ) }
    dend_20 { pt3dadd( 151.525, 85.1159, -76.2319, 0.28 ) }
    dend_20 { pt3dadd( 152.572, 84.7915, -77.1613, 1.11 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 64/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 63.2214, 45.1371, 11.3967, 0.28 ) }
    dend_19 { pt3dadd( 65.855, 45.5383, 11.5939, 0.28 ) }
    dend_19 { pt3dadd( 68.2829, 45.8395, 11.9026, 0.55 ) }
    dend_19 { pt3dadd( 70.1376, 46.0794, 12.1805, 0.83 ) }
    dend_19 { pt3dadd( 72.0515, 46.3579, 12.3562, 0.83 ) }
    dend_19 { pt3dadd( 73.9419, 46.6434, 12.4683, 0.28 ) }
    dend_19 { pt3dadd( 75.6278, 46.9122, 12.5523, 0.55 ) }
    dend_19 { pt3dadd( 77.3324, 47.2234, 12.6174, 0.28 ) }
    dend_19 { pt3dadd( 78.5146, 47.4723, 12.6248, 1.11 ) }
    dend_19 { pt3dadd( 81.4129, 48.1416, 12.4714, 0.28 ) }
    dend_19 { pt3dadd( 82.0998, 48.3498, 12.3974, 0.28 ) }
    dend_19 { pt3dadd( 83.4197, 48.8012, 12.1834, 0.55 ) }
    dend_19 { pt3dadd( 85.7379, 49.703, 11.7113, 0.28 ) }
    dend_19 { pt3dadd( 86.213, 49.9109, 11.5995, 0.55 ) }
    dend_19 { pt3dadd( 88.0294, 50.7671, 11.3364, 0.28 ) }
    dend_19 { pt3dadd( 89.2342, 51.3993, 11.2527, 0.83 ) }
    dend_19 { pt3dadd( 90.2529, 51.9995, 11.066, 0.83 ) }
    dend_19 { pt3dadd( 91.364, 52.7001, 10.757, 0.28 ) }
    dend_19 { pt3dadd( 92.147, 53.2611, 10.4603, 0.55 ) }
    dend_19 { pt3dadd( 94.1677, 54.8678, 9.55224, 0.28 ) }
    dend_19 { pt3dadd( 95.4941, 56.0251, 8.91752, 0.83 ) }
    dend_19 { pt3dadd( 98.0663, 58.4105, 7.60805, 0.28 ) }
    dend_19 { pt3dadd( 98.5679, 58.9132, 7.35095, 0.83 ) }
    dend_19 { pt3dadd( 100.14, 60.5254, 6.56731, 0.28 ) }
    dend_19 { pt3dadd( 100.626, 61.0423, 6.33404, 0.83 ) }
    dend_19 { pt3dadd( 102.179, 62.8166, 5.4906, 0.28 ) }
    dend_19 { pt3dadd( 102.506, 63.2097, 5.37983, 0.55 ) }
    dend_19 { pt3dadd( 103.184, 64.0136, 5.2928, 0.28 ) }
    dend_19 { pt3dadd( 103.523, 64.4116, 5.29316, 0.55 ) }
    dend_19 { pt3dadd( 104.689, 65.7098, 5.46383, 0.28 ) }
    dend_19 { pt3dadd( 106.222, 67.2904, 5.82783, 0.83 ) }
    dend_19 { pt3dadd( 107.383, 68.4158, 6.20628, 0.28 ) }
    dend_19 { pt3dadd( 108.085, 69.028, 6.5019, 0.55 ) }
    dend_19 { pt3dadd( 109.66, 70.1815, 7.06747, 0.28 ) }
    dend_19 { pt3dadd( 110.226, 70.505, 7.24674, 0.83 ) }
    dend_19 { pt3dadd( 111.468, 70.9824, 7.56876, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_19 { pt3dadd( 112.413, 71.2539, 7.86486, 0.55 ) }
    dend_19 { pt3dadd( 113.615, 71.4998, 8.04043, 0.28 ) }
    dend_19 { pt3dadd( 116.342, 71.953, 8.19279, 1.94 ) }
    dend_19 { pt3dadd( 118.917, 72.3023, 8.19978, 0.28 ) }
    dend_19 { pt3dadd( 120.837, 72.5302, 8.17807, 0.28 ) }
    dend_19 { pt3dadd( 123.312, 72.7971, 8.09196, 0.55 ) }
    dend_19 { pt3dadd( 126.943, 73.1347, 7.95321, 0.28 ) }
    dend_19 { pt3dadd( 128.017, 73.2489, 7.90796, 1.66 ) }
    dend_19 { pt3dadd( 136.323, 75.7808, 7.57428, 1.66 ) }
    dend_19 { pt3dadd( 144.397, 78.5032, 5.89541, 1.66 ) }
    dend_19 { pt3dadd( 152.364, 81.6149, 4.47727, 1.66 ) }
    dend_19 { pt3dadd( 159.685, 85.6524, 2.34731, 1.66 ) }
    dend_19 { pt3dadd( 165.507, 90.8242, -1.2188, 1.66 ) }
    dend_19 { pt3dadd( 171.331, 95.5258, -5.44369, 1.66 ) }
    dend_19 { pt3dadd( 177.615, 100.736, -8.02166, 1.66 ) }
    dend_19 { pt3dadd( 182.778, 106.768, -11.0653, 1.66 ) }
    dend_19 { pt3dadd( 188.408, 112.997, -12.2812, 1.66 ) }
    dend_19 { pt3dadd( 194.41, 118.767, -14.0879, 1.66 ) }
    dend_19 { pt3dadd( 200.483, 124.556, -15.556, 1.66 ) }
    dend_19 { pt3dadd( 206.347, 130.679, -16.0137, 1.66 ) }
    dend_19 { pt3dadd( 211.592, 137.294, -16.4186, 1.66 ) }
    dend_19 { pt3dadd( 215.784, 144.553, -16.0011, 1.66 ) }
    dend_19 { pt3dadd( 220.217, 151.534, -14.437, 1.66 ) }
    dend_19 { pt3dadd( 224.083, 158.756, -12.6046, 1.66 ) }
    dend_19 { pt3dadd( 226.994, 166.449, -11.1494, 1.66 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 25/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 19.505, 15.6382, 18.7749, 2.22 ) }
    dend_9 { pt3dadd( 22.9673, 14.3924, 20.2159, 2.22 ) }
    dend_9 { pt3dadd( 24.8023, 14.1455, 21.7665, 0.83 ) }
    dend_9 { pt3dadd( 27.0162, 14.4588, 24.1556, 0.83 ) }
    dend_9 { pt3dadd( 28.6842, 15.0695, 27.5749, 0.83 ) }
    dend_9 { pt3dadd( 31.3579, 15.8144, 33.0824, 0.83 ) }
    dend_9 { pt3dadd( 32.7421, 16.0955, 35.7429, 1.38 ) }
    dend_9 { pt3dadd( 34.7297, 16.366, 39.4853, 1.66 ) }
    dend_9 { pt3dadd( 36.7248, 16.5669, 43.3876, 2.22 ) }
    dend_9 { pt3dadd( 43.7302, 16.7744, 56.6844, 0.83 ) }
    dend_9 { pt3dadd( 45.0852, 16.6319, 59.0831, 1.11 ) }
    dend_9 { pt3dadd( 46.3106, 16.0293, 60.8429, 0.55 ) }
    dend_9 { pt3dadd( 47.7175, 15.0883, 62.5468, 0.55 ) }
    dend_9 { pt3dadd( 50.0452, 13.0157, 64.8067, 0.55 ) }
    dend_9 { pt3dadd( 52.4278, 10.3652, 66.612, 0.83 ) }
    dend_9 { pt3dadd( 53.2568, 8.95109, 66.6046, 0.55 ) }
    dend_9 { pt3dadd( 55.9813, 3.01318, 66.8025, 0.55 ) }
    dend_9 { pt3dadd( 62.7316, -1.649, 77.8615, 0.55 ) }
    dend_9 { pt3dadd( 68.7572, -3.99989, 90.0667, 0.55 ) }
    dend_9 { pt3dadd( 75.0278, -4.16604, 102.37, 0.55 ) }
    dend_9 { pt3dadd( 80.7098, -5.52896, 114.89, 0.55 ) }
    dend_9 { pt3dadd( 85.282, -9.86267, 127.157, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 19.505, 15.6382, 18.7749, 1.38 ) }
    dend_2 { pt3dadd( 23.0659, 15.4202, 20.0291, 1.38 ) }
    dend_2 { pt3dadd( 26.2483, 15.4736, 20.9744, 0.83 ) }
    dend_2 { pt3dadd( 28.6638, 15.4491, 21.6252, 1.11 ) }
    dend_2 { pt3dadd( 32.9067, 15.2752, 22.7438, 0.83 ) }
    dend_2 { pt3dadd( 36.7845, 14.9947, 23.7671, 1.11 ) }
    dend_2 { pt3dadd( 40.145, 14.7166, 24.5582, 0.83 ) }
    dend_2 { pt3dadd( 42.9561, 14.3715, 25.0269, 0.83 ) }
    dend_2 { pt3dadd( 47.6239, 13.7092, 25.5586, 1.11 ) }
    dend_2 { pt3dadd( 49.3691, 13.4027, 25.7144, 0.83 ) }
    dend_2 { pt3dadd( 51.0273, 12.9663, 25.8329, 1.11 ) }
    dend_2 { pt3dadd( 54.257, 12.0291, 25.9332, 0.83 ) }
    dend_2 { pt3dadd( 58.4, 10.6457, 26.0412, 1.11 ) }
    dend_2 { pt3dadd( 59.6069, 10.2221, 26.0663, 0.83 ) }
    dend_2 { pt3dadd( 60.619, 9.92443, 26.1507, 0.83 ) }
    dend_2 { pt3dadd( 62.0581, 9.54202, 26.3693, 0.83 ) }
    dend_2 { pt3dadd( 64.9424, 8.81199, 27.0406, 1.38 ) }
    dend_2 { pt3dadd( 67.2151, 8.19024, 27.7968, 0.83 ) }
    dend_2 { pt3dadd( 70.8394, 7.19689, 29.2109, 0.83 ) }
    dend_2 { pt3dadd( 74.6137, 6.24357, 30.7195, 0.55 ) }
    dend_2 { pt3dadd( 74.8506, 6.1939, 30.8127, 0.83 ) }
    dend_2 { pt3dadd( 76.6539, 5.84681, 31.4852, 0.83 ) }
    dend_2 { pt3dadd( 78.5415, 5.47412, 32.0539, 0.55 ) }
    dend_2 { pt3dadd( 79.6374, 5.25562, 32.2764, 0.55 ) }
    dend_2 { pt3dadd( 81.2484, 4.99376, 32.4685, 0.55 ) }
    dend_2 { pt3dadd( 83.6694, 4.68157, 32.5972, 0.55 ) }
    dend_2 { pt3dadd( 86.0172, 4.43145, 32.7481, 0.55 ) }
    dend_2 { pt3dadd( 89.4279, 4.153, 32.995, 0.55 ) }
    dend_2 { pt3dadd( 91.9181, 4.03538, 33.1842, 0.83 ) }
    dend_2 { pt3dadd( 95.5084, 3.96929, 33.4641, 0.83 ) }
    dend_2 { pt3dadd( 98.4961, 3.91563, 33.7027, 0.55 ) }
    dend_2 { pt3dadd( 100.057, 3.97811, 33.8232, 0.55 ) }
    dend_2 { pt3dadd( 101.067, 4.10567, 33.8981, 0.55 ) }
    dend_2 { pt3dadd( 103.3, 4.57944, 34.1247, 1.38 ) }
    dend_2 { pt3dadd( 105.084, 5.04642, 34.2552, 0.55 ) }
    dend_2 { pt3dadd( 106.1, 5.33347, 34.2922, 0.55 ) }
    dend_2 { pt3dadd( 109.426, 6.22604, 34.3298, 0.55 ) }
    dend_2 { pt3dadd( 112.415, 7.06145, 34.3012, 0.55 ) }
    dend_2 { pt3dadd( 115.098, 7.74671, 34.245, 0.83 ) }
    dend_2 { pt3dadd( 118.062, 8.43213, 34.1499, 0.55 ) }
    dend_2 { pt3dadd( 120.578, 8.88391, 34.0438, 1.11 ) }
    dend_2 { pt3dadd( 122.912, 9.16164, 33.9613, 0.55 ) }
    dend_2 { pt3dadd( 124.197, 9.21146, 33.9216, 0.55 ) }
    dend_2 { pt3dadd( 126.065, 9.10833, 33.8599, 0.55 ) }
    dend_2 { pt3dadd( 127.757, 8.80029, 33.8532, 0.55 ) }
    dend_2 { pt3dadd( 129.973, 8.01991, 34.0366, 0.83 ) }
    dend_2 { pt3dadd( 131.839, 7.19419, 34.249, 0.55 ) }
    dend_2 { pt3dadd( 133.913, 6.10645, 34.4898, 0.55 ) }
    dend_2 { pt3dadd( 136.694, 4.43079, 34.8432, 0.55 ) }
    dend_2 { pt3dadd( 138.178, 3.41828, 35.0535, 0.83 ) }
    dend_2 { pt3dadd( 140.247, 1.79275, 35.3697, 0.83 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 98/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.57732, 48.3434, -50.2128, 0.83 ) }
    dend_52 { pt3dadd( -6.33571, 52.0341, -51.9195, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -6.41018, 55.5769, -53.4702, 0.83 ) }
    dend_52 { pt3dadd( -6.54291, 58.194, -54.3566, 0.55 ) }
    dend_52 { pt3dadd( -6.66069, 60.7884, -55.0598, 0.83 ) }
    dend_52 { pt3dadd( -6.8045, 63.0877, -55.614, 0.55 ) }
    dend_52 { pt3dadd( -7.00521, 65.3574, -56.1279, 0.55 ) }
    dend_52 { pt3dadd( -7.37144, 67.4378, -56.55, 0.55 ) }
    dend_52 { pt3dadd( -7.96134, 70.8275, -56.9802, 0.55 ) }
    dend_52 { pt3dadd( -8.32893, 72.8439, -57.2024, 0.83 ) }
    dend_52 { pt3dadd( -8.77337, 75.7345, -57.4431, 0.83 ) }
    dend_52 { pt3dadd( -9.17798, 78.0844, -57.6224, 0.83 ) }
    dend_52 { pt3dadd( -9.59675, 80.1184, -57.7968, 0.83 ) }
    dend_52 { pt3dadd( -10.3589, 83.7608, -58.1624, 0.83 ) }
    dend_52 { pt3dadd( -11.1522, 87.1678, -58.5941, 0.83 ) }
    dend_52 { pt3dadd( -11.6361, 89.4706, -58.9072, 0.55 ) }
    dend_52 { pt3dadd( -11.9436, 91.6177, -59.1789, 0.55 ) }
    dend_52 { pt3dadd( -12.0608, 93.7641, -59.4466, 0.55 ) }
    dend_52 { pt3dadd( -11.9868, 97.4517, -59.9484, 0.83 ) }
    dend_52 { pt3dadd( -11.8383, 98.8293, -60.1374, 0.83 ) }
    dend_52 { pt3dadd( -11.3662, 101.429, -60.4898, 0.55 ) }
    dend_52 { pt3dadd( -10.8246, 104.19, -60.87, 0.55 ) }
    dend_52 { pt3dadd( -10.3374, 106.538, -61.148, 0.55 ) }
    dend_52 { pt3dadd( -9.8254, 109.116, -61.4232, 0.55 ) }
    dend_52 { pt3dadd( -9.24398, 112.628, -61.7442, 0.55 ) }
    dend_52 { pt3dadd( -8.9249, 114.601, -61.9814, 0.55 ) }
    dend_52 { pt3dadd( -8.60443, 116.708, -62.2797, 0.83 ) }
    dend_52 { pt3dadd( -8.31281, 118.592, -62.5977, 0.83 ) }
    dend_52 { pt3dadd( -7.91153, 121.286, -63.1526, 0.83 ) }
    dend_52 { pt3dadd( -7.47659, 123.718, -63.693, 0.83 ) }
    dend_52 { pt3dadd( -6.98449, 126.522, -64.3481, 0.83 ) }
    dend_52 { pt3dadd( -6.38455, 129.418, -64.9986, 0.55 ) }
    dend_52 { pt3dadd( -5.71593, 132.405, -65.6199, 0.55 ) }
    dend_52 { pt3dadd( -5.08127, 135.238, -66.1324, 0.55 ) }
    dend_52 { pt3dadd( -4.63584, 137.697, -66.4863, 0.55 ) }
    dend_52 { pt3dadd( -4.2659, 139.87, -66.7495, 0.55 ) }
    dend_52 { pt3dadd( -3.79321, 142.87, -67.0024, 0.55 ) }
    dend_52 { pt3dadd( -3.44029, 145.281, -67.145, 0.55 ) }
    dend_52 { pt3dadd( -2.99612, 148.079, -67.2499, 0.55 ) }
    dend_52 { pt3dadd( -2.56258, 151.4, -67.301, 0.55 ) }
    dend_52 { pt3dadd( -2.3924, 153.516, -67.3353, 0.55 ) }
    dend_52 { pt3dadd( -2.29489, 155.144, -67.3536, 0.55 ) }
    dend_52 { pt3dadd( -2.25779, 157.502, -67.371, 0.55 ) }
    dend_52 { pt3dadd( -2.13921, 162.692, -67.371, 0.55 ) }
    dend_52 { pt3dadd( -2.07036, 164.924, -67.3506, 0.55 ) }
    dend_52 { pt3dadd( -1.9133, 167.35, -67.3091, 0.55 ) }
    dend_52 { pt3dadd( -1.73093, 170.0, -67.2467, 0.55 ) }
    dend_52 { pt3dadd( -1.59142, 171.409, -67.2456, 0.28 ) }
    dend_52 { pt3dadd( -1.26705, 173.589, -67.3083, 0.83 ) }
    dend_52 { pt3dadd( -0.88755, 175.902, -67.3705, 0.55 ) }
    dend_52 { pt3dadd( -0.350138, 178.402, -67.447, 0.55 ) }
    dend_52 { pt3dadd( 0.0579351, 180.003, -67.5244, 0.55 ) }
    dend_52 { pt3dadd( 0.707503, 182.596, -67.7085, 0.55 ) }
    dend_52 { pt3dadd( 0.999583, 183.806, -67.8188, 0.28 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 52/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -6.57732, 48.3434, -50.2128, 0.83 ) }
    dend_47 { pt3dadd( -6.30784, 50.1104, -50.7707, 0.83 ) }
    dend_47 { pt3dadd( -6.08095, 52.8715, -51.7346, 0.83 ) }
    dend_47 { pt3dadd( -6.02351, 54.2746, -52.1926, 0.28 ) }
    dend_47 { pt3dadd( -5.97247, 54.8456, -52.3656, 0.55 ) }
    dend_47 { pt3dadd( -5.51096, 57.5451, -53.1775, 0.28 ) }
    dend_47 { pt3dadd( -5.24113, 59.0727, -53.6635, 0.83 ) }
    dend_47 { pt3dadd( -5.09983, 60.4942, -54.3221, 0.83 ) }
    dend_47 { pt3dadd( -4.97161, 63.1112, -55.72, 0.55 ) }
    dend_47 { pt3dadd( -4.77804, 64.8545, -56.7572, 0.55 ) }
    dend_47 { pt3dadd( -4.31851, 67.4126, -58.4208, 0.55 ) }
    dend_47 { pt3dadd( -3.9352, 69.4481, -59.8516, 0.55 ) }
    dend_47 { pt3dadd( -3.09897, 73.9645, -63.2604, 0.55 ) }
    dend_47 { pt3dadd( -2.74661, 75.6661, -64.6516, 0.55 ) }
    dend_47 { pt3dadd( -2.06796, 79.4282, -67.8486, 0.55 ) }
    dend_47 { pt3dadd( -1.58117, 82.8097, -70.6402, 0.55 ) }
    dend_47 { pt3dadd( -1.34306, 84.8472, -72.2439, 0.55 ) }
    dend_47 { pt3dadd( -1.09024, 86.1524, -73.1511, 0.55 ) }
    dend_47 { pt3dadd( -0.461442, 88.6896, -74.715, 0.55 ) }
    dend_47 { pt3dadd( 0.14017, 91.6797, -76.4963, 0.55 ) }
    dend_47 { pt3dadd( 0.418653, 93.7003, -77.5114, 0.55 ) }
    dend_47 { pt3dadd( 0.620633, 95.122, -78.1228, 0.28 ) }
    dend_47 { pt3dadd( 1.40581, 98.8269, -79.5827, 0.55 ) }
    dend_47 { pt3dadd( 1.86722, 101.101, -80.5247, 0.28 ) }
    dend_47 { pt3dadd( 2.05356, 102.198, -80.9547, 0.83 ) }
    dend_47 { pt3dadd( 2.37055, 104.222, -81.7218, 0.83 ) }
    dend_47 { pt3dadd( 2.567, 106.163, -82.5171, 0.55 ) }
    dend_47 { pt3dadd( 2.79374, 109.151, -83.9035, 0.55 ) }
    dend_47 { pt3dadd( 2.66259, 111.438, -85.1569, 0.55 ) }
    dend_47 { pt3dadd( 2.46319, 113.546, -86.3519, 0.55 ) }
    dend_47 { pt3dadd( 2.35319, 114.91, -87.1826, 0.28 ) }
    dend_47 { pt3dadd( 2.2606, 116.772, -88.4413, 0.55 ) }
    dend_47 { pt3dadd( 2.29968, 119.264, -90.2697, 0.28 ) }
    dend_47 { pt3dadd( 2.25313, 121.962, -92.2933, 0.55 ) }
    dend_47 { pt3dadd( 2.31101, 123.471, -93.4461, 0.55 ) }
    dend_47 { pt3dadd( 2.47493, 125.312, -94.9958, 0.55 ) }
    dend_47 { pt3dadd( 2.73631, 126.961, -96.4377, 0.55 ) }
    dend_47 { pt3dadd( 3.18131, 128.905, -97.963, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_37 (entry count 90/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -69.3096, 54.7123, -55.8997, 0.28 ) }
    dend_43 { pt3dadd( -74.9578, 53.8847, -53.714, 0.28 ) }
    dend_43 { pt3dadd( -76.9347, 53.5728, -53.066, 0.55 ) }
    dend_43 { pt3dadd( -79.0755, 53.3082, -52.462, 0.55 ) }
    dend_43 { pt3dadd( -81.0865, 53.0597, -51.8948, 0.55 ) }
    dend_43 { pt3dadd( -83.206, 52.7977, -51.2968, 0.55 ) }
    dend_43 { pt3dadd( -85.1962, 52.5517, -50.7354, 0.83 ) }
    dend_43 { pt3dadd( -86.758, 52.3212, -50.6487, 0.28 ) }
    dend_43 { pt3dadd( -88.4589, 52.1191, -50.4157, 0.28 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 99/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -69.3096, 54.7123, -55.8997, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_38 { pt3dadd( -69.5482, 56.8626, -56.2975, 0.55 ) }
    dend_38 { pt3dadd( -69.8044, 58.2538, -56.6778, 0.28 ) }
    dend_38 { pt3dadd( -70.1404, 60.0269, -57.1731, 0.55 ) }
    dend_38 { pt3dadd( -70.6082, 61.9887, -57.6916, 0.55 ) }
    dend_38 { pt3dadd( -70.8586, 62.7937, -57.8877, 0.55 ) }
    dend_38 { pt3dadd( -72.1596, 66.9765, -58.907, 0.83 ) }
    dend_38 { pt3dadd( -72.7317, 68.6046, -59.3265, 0.28 ) }
    dend_38 { pt3dadd( -73.754, 71.3438, -60.0389, 0.55 ) }
    dend_38 { pt3dadd( -74.6942, 73.6227, -60.6068, 0.55 ) }
    dend_38 { pt3dadd( -75.5923, 75.3937, -61.0496, 0.28 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 10/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -153.316, 94.8172, 18.3893, 0.83 ) }
    dend_28 { pt3dadd( -153.181, 95.6749, 18.4031, 0.83 ) }
    dend_28 { pt3dadd( -152.918, 98.1128, 18.6542, 0.83 ) }
    dend_28 { pt3dadd( -152.773, 100.218, 19.3999, 0.55 ) }
    dend_28 { pt3dadd( -152.678, 102.858, 20.5015, 0.55 ) }
    dend_28 { pt3dadd( -152.66, 106.32, 22.0216, 0.55 ) }
    dend_28 { pt3dadd( -152.665, 107.466, 22.5265, 0.55 ) }
    dend_28 { pt3dadd( -152.656, 109.302, 23.4488, 1.11 ) }
    dend_28 { pt3dadd( -152.717, 113.845, 26.2376, 0.28 ) }
    dend_28 { pt3dadd( -152.786, 114.627, 26.8052, 0.55 ) }
    dend_28 { pt3dadd( -152.958, 115.827, 27.8186, 0.28 ) }
    dend_28 { pt3dadd( -153.099, 116.533, 28.3468, 0.55 ) }
    dend_28 { pt3dadd( -153.894, 125.103, 33.6855, 0.55 ) }
    dend_28 { pt3dadd( -155.889, 134.0, 38.027, 0.55 ) }
    dend_28 { pt3dadd( -158.525, 142.406, 43.0709, 0.55 ) }
    dend_28 { pt3dadd( -163.492, 149.419, 48.6838, 0.55 ) }
    dend_28 { pt3dadd( -167.974, 156.722, 54.2987, 0.55 ) }
    dend_28 { pt3dadd( -173.27, 163.984, 59.2146, 0.55 ) }
    dend_28 { pt3dadd( -178.221, 171.575, 63.9395, 0.55 ) }
    dend_28 { pt3dadd( -183.875, 178.102, 69.5417, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 30/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -153.316, 94.8172, 18.3893, 0.55 ) }
    dend_25 { pt3dadd( -155.367, 97.4033, 17.619, 0.55 ) }
    dend_25 { pt3dadd( -157.025, 99.0401, 17.3231, 0.55 ) }
    dend_25 { pt3dadd( -158.542, 100.271, 17.3198, 0.28 ) }
    dend_25 { pt3dadd( -159.513, 100.985, 17.4939, 0.55 ) }
    dend_25 { pt3dadd( -161.772, 102.383, 18.1761, 0.28 ) }
    dend_25 { pt3dadd( -163.576, 103.311, 18.9624, 0.55 ) }
    dend_25 { pt3dadd( -167.728, 105.09, 21.1351, 0.55 ) }
    dend_25 { pt3dadd( -170.576, 106.163, 22.8949, 0.55 ) }
    dend_25 { pt3dadd( -173.406, 106.982, 24.9268, 1.11 ) }
    dend_25 { pt3dadd( -175.713, 107.434, 26.8529, 0.28 ) }
    dend_25 { pt3dadd( -177.808, 107.519, 28.972, 0.55 ) }
    dend_25 { pt3dadd( -186.889, 113.203, 34.883, 0.55 ) }
    dend_25 { pt3dadd( -195.778, 118.211, 41.6641, 0.55 ) }
    dend_25 { pt3dadd( -205.07, 123.164, 47.9206, 0.55 ) }
    dend_25 { pt3dadd( -213.372, 128.431, 55.2282, 0.55 ) }
    dend_25 { pt3dadd( -222.236, 134.436, 61.1377, 0.55 ) }
    dend_25 { pt3dadd( -232.921, 138.25, 65.7659, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 85.282, -9.86267, 127.157, 0.83 ) }
    dend_13 { pt3dadd( 88.0179, -10.8571, 132.43, 0.83 ) }
    dend_13 { pt3dadd( 90.9483, -12.8512, 137.277, 0.83 ) }
    dend_13 { pt3dadd( 94.1201, -14.4874, 142.116, 0.83 ) }
    dend_13 { pt3dadd( 96.8373, -15.6439, 147.364, 0.83 ) }
    dend_13 { pt3dadd( 98.9732, -18.1556, 152.364, 0.83 ) }
    dend_13 { pt3dadd( 100.361, -20.4075, 157.749, 0.83 ) }
    dend_13 { pt3dadd( 100.533, -23.7837, 162.651, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 56/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 85.282, -9.86267, 127.157, 0.55 ) }
    dend_10 { pt3dadd( 91.5022, -12.309, 136.021, 0.83 ) }
    dend_10 { pt3dadd( 96.2127, -14.7595, 145.776, 0.83 ) }
    dend_10 { pt3dadd( 101.578, -17.7602, 155.011, 0.83 ) }
    dend_10 { pt3dadd( 106.701, -21.9179, 163.894, 0.83 ) }
    dend_10 { pt3dadd( 112.679, -25.7672, 172.378, 0.83 ) }
    dend_10 { pt3dadd( 116.603, -30.935, 181.304, 0.83 ) }
    dend_10 { pt3dadd( 120.184, -36.5465, 190.083, 0.83 ) }
    dend_10 { pt3dadd( 123.232, -41.1278, 199.681, 0.83 ) }
    dend_10 { pt3dadd( 127.082, -47.4327, 207.802, 0.83 ) }
    dend_10 { pt3dadd( 131.746, -52.7392, 216.263, 0.83 ) }
    dend_10 { pt3dadd( 135.479, -58.547, 224.835, 0.83 ) }
    dend_10 { pt3dadd( 140.768, -63.6363, 233.065, 0.83 ) }
    dend_10 { pt3dadd( 145.687, -69.5099, 240.947, 0.83 ) }
    dend_10 { pt3dadd( 150.524, -75.9265, 248.401, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 71/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 140.247, 1.79275, 35.3697, 0.55 ) }
    dend_6 { pt3dadd( 141.718, -1.29362, 40.4614, 0.55 ) }
    dend_6 { pt3dadd( 142.044, -1.97654, 41.588, 0.28 ) }
    dend_6 { pt3dadd( 142.287, -2.48675, 42.4297, 0.55 ) }
    dend_6 { pt3dadd( 145.782, -9.19368, 49.0998, 0.55 ) }
    dend_6 { pt3dadd( 149.664, -15.6032, 55.8773, 0.55 ) }
    dend_6 { pt3dadd( 152.378, -22.1876, 63.0327, 0.55 ) }
    dend_6 { pt3dadd( 157.103, -28.6102, 69.2304, 0.55 ) }
    dend_6 { pt3dadd( 161.456, -33.6822, 76.9094, 0.55 ) }
    dend_6 { pt3dadd( 165.251, -38.6229, 84.9714, 0.55 ) }
    dend_6 { pt3dadd( 169.347, -44.4669, 92.1736, 0.55 ) }
    dend_6 { pt3dadd( 172.958, -48.9139, 100.627, 0.55 ) }
    dend_6 { pt3dadd( 178.297, -53.2285, 108.188, 0.55 ) }
    dend_6 { pt3dadd( 184.136, -55.5457, 116.313, 0.55 ) }
    dend_6 { pt3dadd( 190.393, -56.6576, 124.399, 0.55 ) }
    dend_6 { pt3dadd( 197.7, -56.9675, 131.63, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 87/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 140.247, 1.79275, 35.3697, 0.28 ) }
    dend_3 { pt3dadd( 140.93, 1.43788, 35.6896, 0.28 ) }
    dend_3 { pt3dadd( 141.602, 1.08902, 36.004, 0.55 ) }
    dend_3 { pt3dadd( 142.55, 0.597047, 36.4474, 0.28 ) }
    dend_3 { pt3dadd( 143.383, 0.164338, 36.8374, 0.83 ) }
    dend_3 { pt3dadd( 148.398, -2.03462, 39.0365, 0.83 ) }
    dend_3 { pt3dadd( 152.936, -4.86283, 41.4692, 0.83 ) }
    dend_3 { pt3dadd( 157.78, -7.39482, 43.6558, 0.83 ) }
    dend_3 { pt3dadd( 162.385, -9.31598, 46.8293, 0.83 ) }
    dend_3 { pt3dadd( 166.838, -11.289, 50.1811, 0.83 ) }
    dend_3 { pt3dadd( 170.81, -13.8484, 53.6969, 0.83 ) }
    dend_3 { pt3dadd( 174.789, -16.4305, 57.1873, 0.83 ) }
    dend_3 { pt3dadd( 178.86, -19.0292, 60.5543, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_3 { pt3dadd( 182.57, -22.1386, 63.8617, 0.83 ) }
    dend_3 { pt3dadd( 185.858, -24.8187, 67.9431, 0.83 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 2/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 0.999583, 183.806, -67.8188, 0.28 ) }
    dend_54 { pt3dadd( 1.66984, 186.208, -67.5921, 0.28 ) }
    dend_54 { pt3dadd( 2.1466, 188.515, -67.5004, 0.83 ) }
    dend_54 { pt3dadd( 2.34512, 189.754, -67.5165, 0.28 ) }
    dend_54 { pt3dadd( 2.47529, 191.012, -67.5599, 0.28 ) }
    dend_54 { pt3dadd( 2.5985, 192.898, -67.6358, 0.55 ) }
    dend_54 { pt3dadd( 2.73911, 194.31, -67.6908, 0.28 ) }
    dend_54 { pt3dadd( 2.86666, 195.904, -67.7902, 0.83 ) }
    dend_54 { pt3dadd( 3.07915, 198.14, -67.9514, 0.28 ) }
    dend_54 { pt3dadd( 3.31163, 199.78, -68.1066, 0.28 ) }
    dend_54 { pt3dadd( 3.68879, 201.591, -68.261, 0.28 ) }
    dend_54 { pt3dadd( 4.37772, 203.746, -68.2513, 0.55 ) }
    dend_54 { pt3dadd( 5.13928, 205.452, -68.1086, 0.28 ) }
    dend_54 { pt3dadd( 6.00034, 206.883, -67.8421, 0.55 ) }
    dend_54 { pt3dadd( 7.26408, 208.465, -67.3474, 0.28 ) }
    dend_54 { pt3dadd( 9.75568, 210.845, -65.8689, 0.55 ) }
    dend_54 { pt3dadd( 12.7092, 213.151, -63.4925, 0.28 ) }
    dend_54 { pt3dadd( 14.0335, 214.135, -62.1112, 0.55 ) }
    dend_54 { pt3dadd( 14.9581, 214.712, -61.0735, 0.28 ) }
    dend_54 { pt3dadd( 15.5688, 215.037, -60.3123, 0.28 ) }
    dend_54 { pt3dadd( 18.3092, 216.276, -56.4142, 0.55 ) }
    dend_54 { pt3dadd( 19.2773, 216.648, -54.8563, 0.28 ) }
    dend_54 { pt3dadd( 20.3828, 217.457, -52.8439, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 0.999583, 183.806, -67.8188, 0.28 ) }
    dend_53 { pt3dadd( 0.419533, 184.829, -68.6025, 0.28 ) }
    dend_53 { pt3dadd( 0.097891, 185.318, -68.9919, 0.83 ) }
    dend_53 { pt3dadd( -0.576644, 186.289, -69.754, 0.28 ) }
    dend_53 { pt3dadd( -1.33889, 187.436, -70.6266, 1.11 ) }
    dend_53 { pt3dadd( -2.6835, 189.727, -72.2338, 0.28 ) }
    dend_53 { pt3dadd( -3.15653, 190.624, -72.8515, 0.55 ) }
    dend_53 { pt3dadd( -3.68965, 191.678, -73.6725, 0.28 ) }
    dend_53 { pt3dadd( -3.85039, 192.048, -73.971, 0.28 ) }
    dend_53 { pt3dadd( -4.11078, 192.637, -74.5007, 0.55 ) }
    dend_53 { pt3dadd( -4.60264, 193.555, -75.2894, 0.28 ) }
    dend_53 { pt3dadd( -5.0136, 194.196, -75.8148, 0.55 ) }
    dend_53 { pt3dadd( -6.08495, 195.743, -77.1345, 0.28 ) }
    dend_53 { pt3dadd( -6.49037, 196.289, -77.5997, 0.83 ) }
    dend_53 { pt3dadd( -7.67146, 197.843, -78.9257, 0.28 ) }
    dend_53 { pt3dadd( -8.76085, 199.31, -80.1435, 0.55 ) }
    dend_53 { pt3dadd( -9.29383, 200.081, -80.7429, 0.28 ) }
    dend_53 { pt3dadd( -9.59722, 200.619, -81.0703, 0.55 ) }
    dend_53 { pt3dadd( -10.2533, 202.205, -81.8029, 0.28 ) }
    dend_53 { pt3dadd( -10.6387, 203.481, -82.216, 0.55 ) }
    dend_53 { pt3dadd( -10.7725, 204.552, -82.3623, 0.28 ) }
    dend_53 { pt3dadd( -10.7446, 205.439, -82.3789, 0.55 ) }
    dend_53 { pt3dadd( -10.6033, 206.787, -82.3103, 0.28 ) }
    dend_53 { pt3dadd( -10.6015, 206.818, -82.3095, 0.55 ) }
    dend_53 { pt3dadd( -10.6597, 208.073, -82.2598, 0.28 ) }
    dend_53 { pt3dadd( -10.7505, 208.761, -82.2149, 0.55 ) }
    dend_53 { pt3dadd( -11.0441, 209.904, -82.2253, 0.28 ) }
    dend_53 { pt3dadd( -11.3506, 210.742, -82.3736, 0.55 ) }
    dend_53 { pt3dadd( -12.4012, 212.684, -83.342, 0.28 ) }
    dend_53 { pt3dadd( -12.739, 213.169, -83.691, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_47 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 3.18131, 128.905, -97.963, 0.28 ) }
    dend_51 { pt3dadd( 4.09844, 130.39, -99.6191, 0.28 ) }
    dend_51 { pt3dadd( 4.86576, 131.724, -101.006, 0.55 ) }
    dend_51 { pt3dadd( 6.3902, 134.657, -103.851, 0.55 ) }
    dend_51 { pt3dadd( 6.93667, 135.922, -105.007, 0.28 ) }
    dend_51 { pt3dadd( 7.28599, 136.772, -105.688, 0.55 ) }
    dend_51 { pt3dadd( 7.84681, 138.24, -106.834, 0.28 ) }
    dend_51 { pt3dadd( 8.30613, 139.742, -107.902, 0.55 ) }
    dend_51 { pt3dadd( 8.47781, 140.506, -108.399, 0.55 ) }
    dend_51 { pt3dadd( 8.72822, 141.987, -109.23, 0.28 ) }
    dend_51 { pt3dadd( 9.00817, 143.975, -110.468, 0.55 ) }
    dend_51 { pt3dadd( 9.31138, 145.944, -111.86, 0.28 ) }
    dend_51 { pt3dadd( 9.54028, 146.927, -112.681, 0.55 ) }
    dend_51 { pt3dadd( 9.78038, 147.845, -113.505, 0.55 ) }
    dend_51 { pt3dadd( 10.3225, 149.371, -115.388, 0.55 ) }
    dend_51 { pt3dadd( 10.8073, 150.326, -116.937, 0.28 ) }
    dend_51 { pt3dadd( 10.8638, 150.432, -117.13, 0.83 ) }
    dend_51 { pt3dadd( 11.3889, 151.391, -118.838, 0.28 ) }
    dend_51 { pt3dadd( 11.882, 152.348, -120.417, 0.55 ) }
    dend_51 { pt3dadd( 12.9565, 154.899, -123.963, 0.28 ) }
    dend_51 { pt3dadd( 13.5611, 156.466, -125.784, 0.55 ) }
    dend_51 { pt3dadd( 14.2676, 158.269, -127.679, 0.28 ) }
    dend_51 { pt3dadd( 14.9264, 159.664, -129.04, 0.55 ) }
    dend_51 { pt3dadd( 15.7091, 161.106, -130.319, 0.55 ) }
    dend_51 { pt3dadd( 16.6619, 162.779, -131.587, 0.28 ) }
    dend_51 { pt3dadd( 17.2089, 163.757, -132.153, 0.55 ) }
    dend_51 { pt3dadd( 18.5432, 165.801, -133.328, 0.55 ) }
    dend_51 { pt3dadd( 20.6714, 168.7, -135.321, 0.55 ) }
    dend_51 { pt3dadd( 21.9381, 170.358, -136.619, 0.55 ) }
    dend_51 { pt3dadd( 22.7518, 171.369, -137.525, 0.55 ) }
    dend_51 { pt3dadd( 23.7475, 172.636, -138.689, 0.28 ) }
    dend_51 { pt3dadd( 24.7225, 174.144, -139.969, 0.55 ) }
    dend_51 { pt3dadd( 25.9291, 176.439, -141.595, 0.55 ) }
    dend_51 { pt3dadd( 26.2876, 177.159, -142.03, 0.55 ) }
    dend_51 { pt3dadd( 26.8136, 178.294, -142.656, 0.55 ) }
    dend_51 { pt3dadd( 27.5576, 179.94, -143.501, 0.55 ) }
    dend_51 { pt3dadd( 28.2645, 181.532, -144.204, 0.55 ) }
    dend_51 { pt3dadd( 29.0753, 183.439, -144.941, 0.55 ) }
    dend_51 { pt3dadd( 30.4713, 186.648, -146.021, 0.55 ) }
    dend_51 { pt3dadd( 31.0145, 187.996, -146.466, 0.28 ) }
    dend_51 { pt3dadd( 31.5635, 189.397, -146.919, 0.55 ) }
    dend_51 { pt3dadd( 32.185, 190.868, -147.386, 0.55 ) }
    dend_51 { pt3dadd( 32.7327, 192.059, -147.738, 0.28 ) }
    dend_51 { pt3dadd( 33.3705, 193.56, -148.21, 0.55 ) }
    dend_51 { pt3dadd( 33.81, 194.726, -148.632, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_51 { pt3dadd( 34.5448, 196.643, -149.425, 0.55 ) }
    dend_51 { pt3dadd( 35.0476, 198.223, -150.103, 0.28 ) }
    dend_51 { pt3dadd( 35.3309, 199.303, -150.574, 0.28 ) }
    dend_51 { pt3dadd( 35.8606, 201.48, -151.556, 0.55 ) }
    dend_51 { pt3dadd( 36.3775, 203.683, -152.542, 0.28 ) }
    dend_51 { pt3dadd( 36.7626, 205.376, -153.286, 0.55 ) }
    dend_51 { pt3dadd( 37.2611, 208.003, -154.348, 0.28 ) }
    dend_51 { pt3dadd( 37.4144, 208.917, -154.714, 0.55 ) }
    dend_51 { pt3dadd( 37.5897, 210.07, -155.128, 0.28 ) }
    dend_51 { pt3dadd( 37.8192, 211.379, -155.578, 0.28 ) }
    dend_51 { pt3dadd( 38.008, 212.413, -155.868, 0.55 ) }
    dend_51 { pt3dadd( 38.0913, 213.244, -156.124, 0.28 ) }
    dend_51 { pt3dadd( 38.2742, 214.397, -156.553, 0.28 ) }
    dend_51 { pt3dadd( 38.4395, 215.432, -156.94, 0.55 ) }
    dend_51 { pt3dadd( 38.6203, 217.637, -157.729, 0.28 ) }
    dend_51 { pt3dadd( 38.4907, 219.502, -158.492, 0.55 ) }
    dend_51 { pt3dadd( 38.261, 220.947, -159.109, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 17/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 3.18131, 128.905, -97.963, 0.28 ) }
    dend_48 { pt3dadd( 3.60333, 129.898, -98.0643, 0.28 ) }
    dend_48 { pt3dadd( 3.90349, 130.659, -98.1333, 0.83 ) }
    dend_48 { pt3dadd( 4.27125, 131.766, -98.2337, 0.55 ) }
    dend_48 { pt3dadd( 4.6854, 133.227, -98.2946, 0.55 ) }
    dend_48 { pt3dadd( 5.10859, 135.08, -98.2173, 0.55 ) }
    dend_48 { pt3dadd( 5.29833, 136.059, -98.1167, 0.28 ) }
    dend_48 { pt3dadd( 5.49634, 136.96, -98.0066, 0.55 ) }
    dend_48 { pt3dadd( 5.71795, 138.004, -97.8487, 0.55 ) }
    dend_48 { pt3dadd( 5.99664, 139.963, -97.4488, 0.55 ) }
    dend_48 { pt3dadd( 6.09319, 141.595, -97.0019, 0.28 ) }
    dend_48 { pt3dadd( 6.03287, 142.627, -96.6239, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 29/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -75.5923, 75.3937, -61.0496, 0.28 ) }
    dend_42 { pt3dadd( -76.5988, 75.054, -62.3177, 0.28 ) }
    dend_42 { pt3dadd( -77.1981, 74.8518, -63.0727, 0.28 ) }
    dend_42 { pt3dadd( -78.0698, 74.5576, -64.171, 0.28 ) }
    dend_42 { pt3dadd( -79.1496, 74.1932, -65.5315, 0.55 ) }
    dend_42 { pt3dadd( -80.8044, 73.6348, -67.6163, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 35/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -75.5923, 75.3937, -61.0496, 0.28 ) }
    dend_39 { pt3dadd( -76.07, 76.8727, -63.4697, 0.28 ) }
    dend_39 { pt3dadd( -76.2898, 78.3735, -66.0904, 0.55 ) }
    dend_39 { pt3dadd( -76.3009, 79.2119, -67.6821, 0.55 ) }
    dend_39 { pt3dadd( -76.174, 80.1275, -69.3985, 0.28 ) }
    dend_39 { pt3dadd( -75.7028, 82.5044, -73.6708, 0.83 ) }
    dend_39 { pt3dadd( -75.0801, 85.6035, -79.1809, 0.28 ) }
    dend_39 { pt3dadd( -74.9189, 86.0813, -80.1054, 0.55 ) }
    dend_39 { pt3dadd( -74.1392, 87.6349, -83.1141, 0.28 ) }
    dend_39 { pt3dadd( -73.3332, 88.8772, -85.652, 0.55 ) }
    dend_39 { pt3dadd( -72.9399, 89.3727, -86.6768, 0.55 ) }
    dend_39 { pt3dadd( -71.8447, 90.5206, -88.9788, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 47/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -183.875, 178.102, 69.5417, 0.83 ) }
    dend_30 { pt3dadd( -185.855, 184.741, 72.0842, 0.83 ) }
    dend_30 { pt3dadd( -188.426, 191.474, 73.4773, 0.83 ) }
    dend_30 { pt3dadd( -189.909, 198.587, 73.8627, 0.83 ) }
    dend_30 { pt3dadd( -190.14, 205.812, 74.728, 0.83 ) }
    dend_30 { pt3dadd( -189.931, 212.955, 76.2683, 0.83 ) }
    dend_30 { pt3dadd( -188.355, 219.791, 78.474, 0.83 ) }
    dend_30 { pt3dadd( -186.494, 226.726, 79.9213, 0.83 ) }
    dend_30 { pt3dadd( -183.833, 233.495, 79.5819, 0.83 ) }
    dend_30 { pt3dadd( -180.407, 239.889, 78.7763, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 57/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -183.875, 178.102, 69.5417, 0.55 ) }
    dend_29 { pt3dadd( -186.146, 184.897, 73.6939, 0.83 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 59/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -232.921, 138.25, 65.7659, 0.83 ) }
    dend_27 { pt3dadd( -241.838, 144.631, 71.2079, 0.83 ) }
    dend_27 { pt3dadd( -251.222, 151.724, 74.3761, 0.83 ) }
    dend_27 { pt3dadd( -260.598, 159.188, 76.2748, 0.83 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 63/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -232.921, 138.25, 65.7659, 0.55 ) }
    dend_26 { pt3dadd( -243.753, 144.468, 72.388, 0.83 ) }
    dend_26 { pt3dadd( -255.45, 151.534, 75.7639, 0.83 ) }
    dend_26 { pt3dadd( -266.918, 159.321, 77.9097, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 67/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 100.533, -23.7837, 162.651, 0.55 ) }
    dend_15 { pt3dadd( 106.143, -29.0049, 171.81, 0.55 ) }
    dend_15 { pt3dadd( 111.577, -33.0593, 181.693, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 70/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 100.533, -23.7837, 162.651, 0.28 ) }
    dend_14 { pt3dadd( 103.391, -26.4704, 171.99, 0.55 ) }
    dend_14 { pt3dadd( 105.456, -28.5416, 181.698, 0.55 ) }
    dend_14 { pt3dadd( 106.615, -29.1519, 191.752, 0.55 ) }
    dend_14 { pt3dadd( 107.651, -28.6592, 201.809, 0.55 ) }
    dend_14 { pt3dadd( 110.507, -29.1166, 211.527, 0.55 ) }
    dend_14 { pt3dadd( 114.426, -29.3207, 220.875, 0.55 ) }
    dend_14 { pt3dadd( 117.074, -28.1354, 230.562, 0.55 ) }
    dend_14 { pt3dadd( 119.477, -27.1699, 240.342, 0.55 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 150.524, -75.9265, 248.401, 0.55 ) }
    dend_12 { pt3dadd( 151.643, -78.8773, 255.813, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 81/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 150.524, -75.9265, 248.401, 0.28 ) }
    dend_11 { pt3dadd( 155.335, -79.6644, 254.12, 0.55 ) }
    dend_11 { pt3dadd( 159.962, -83.1599, 260.153, 0.55 ) }
    dend_11 { pt3dadd( 164.556, -85.3539, 266.846, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 85/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 197.7, -56.9675, 131.63, 0.83 ) }
    dend_8 { pt3dadd( 203.523, -61.3203, 142.763, 0.83 ) }
    dend_8 { pt3dadd( 206.698, -66.2362, 154.665, 0.83 ) }
    dend_8 { pt3dadd( 208.618, -70.3993, 167.138, 0.83 ) }
    dend_8 { pt3dadd( 209.684, -74.0616, 179.884, 0.83 ) }
    dend_8 { pt3dadd( 211.137, -79.8543, 191.674, 0.83 ) }
    dend_8 { pt3dadd( 213.719, -85.4362, 203.389, 0.83 ) }
    dend_8 { pt3dadd( 216.769, -90.0408, 215.461, 0.83 ) }
    dend_8 { pt3dadd( 220.256, -95.0026, 227.257, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 94/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 197.7, -56.9675, 131.63, 0.55 ) }
    dend_7 { pt3dadd( 203.689, -62.9751, 141.705, 0.83 ) }
    dend_7 { pt3dadd( 209.676, -69.5177, 151.406, 0.83 ) }
    dend_7 { pt3dadd( 216.4, -76.9177, 159.872, 0.83 ) }
    dend_7 { pt3dadd( 221.805, -85.0044, 168.573, 0.83 ) }
    dend_7 { pt3dadd( 228.492, -91.8873, 177.534, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_7 { pt3dadd( 235.277, -99.8522, 185.365, 0.83 ) }
    dend_7 { pt3dadd( 243.675, -107.685, 191.65, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 2/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 185.858, -24.8187, 67.9431, 0.55 ) }
    dend_5 { pt3dadd( 194.183, -29.4679, 74.1687, 0.55 ) }
    dend_5 { pt3dadd( 202.357, -35.0512, 79.7062, 0.55 ) }
    dend_5 { pt3dadd( 209.216, -40.8145, 86.6469, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 185.858, -24.8187, 67.9431, 0.28 ) }
    dend_4 { pt3dadd( 193.877, -29.8168, 73.1424, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 8/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 6.03287, 142.627, -96.6239, 0.28 ) }
    dend_50 { pt3dadd( 6.63038, 146.767, -96.8213, 0.28 ) }
    dend_50 { pt3dadd( 6.84809, 149.47, -96.5687, 0.55 ) }
    dend_50 { pt3dadd( 6.86172, 150.941, -96.3576, 0.28 ) }
    dend_50 { pt3dadd( 6.80737, 151.834, -96.2298, 0.55 ) }
    dend_50 { pt3dadd( 6.52355, 154.539, -95.6463, 0.28 ) }
    dend_50 { pt3dadd( 6.40315, 156.331, -95.3509, 0.55 ) }
    dend_50 { pt3dadd( 6.34476, 159.812, -94.3729, 0.28 ) }
    dend_50 { pt3dadd( 6.29977, 160.984, -94.0469, 0.55 ) }
    dend_50 { pt3dadd( 5.92704, 164.955, -93.0318, 0.28 ) }
    dend_50 { pt3dadd( 5.42944, 167.515, -92.6211, 0.55 ) }
    dend_50 { pt3dadd( 4.06413, 172.185, -92.0456, 0.28 ) }
    dend_50 { pt3dadd( 2.98861, 175.625, -91.7415, 0.55 ) }
    dend_50 { pt3dadd( 2.33497, 178.064, -91.7175, 0.28 ) }
    dend_50 { pt3dadd( 2.18523, 178.615, -91.7246, 0.55 ) }
    dend_50 { pt3dadd( 0.266013, 182.546, -92.1011, 0.28 ) }
    dend_50 { pt3dadd( -1.17461, 184.774, -92.5443, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 6.03287, 142.627, -96.6239, 0.28 ) }
    dend_49 { pt3dadd( 8.04043, 142.24, -97.6633, 0.28 ) }
    dend_49 { pt3dadd( 8.27314, 142.213, -97.777, 0.55 ) }
    dend_49 { pt3dadd( 10.0485, 142.207, -98.5507, 0.28 ) }
    dend_49 { pt3dadd( 11.9807, 142.201, -99.3927, 0.55 ) }
    dend_49 { pt3dadd( 15.5796, 142.19, -100.961, 0.28 ) }
    dend_49 { pt3dadd( 17.3183, 142.185, -101.718, 0.28 ) }
    dend_49 { pt3dadd( 18.1859, 142.134, -102.141, 0.28 ) }
    dend_49 { pt3dadd( 19.8612, 142.137, -103.006, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 34/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -71.8447, 90.5206, -88.9788, 0.28 ) }
    dend_41 { pt3dadd( -70.0546, 92.5234, -89.8153, 0.28 ) }
    dend_41 { pt3dadd( -68.9129, 93.8008, -90.3488, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 37/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -71.8447, 90.5206, -88.9788, 0.55 ) }
    dend_40 { pt3dadd( -72.331, 91.3089, -89.8031, 0.55 ) }
    dend_40 { pt3dadd( -73.4788, 93.2709, -91.9314, 0.55 ) }
    dend_40 { pt3dadd( -73.9898, 94.2928, -93.08, 0.55 ) }
    dend_40 { pt3dadd( -74.3695, 95.0439, -93.9826, 0.28 ) }
    dend_40 { pt3dadd( -74.7363, 95.8588, -95.0313, 0.55 ) }
    dend_40 { pt3dadd( -75.1961, 97.0285, -96.6342, 0.55 ) }
    dend_40 { pt3dadd( -75.4189, 97.6503, -97.5128, 0.55 ) }
    dend_40 { pt3dadd( -75.7336, 98.443, -98.6677, 0.28 ) }
    dend_40 { pt3dadd( -75.9828, 99.3889, -100.143, 0.55 ) }
    dend_40 { pt3dadd( -76.2013, 100.493, -102.032, 0.28 ) }
    dend_40 { pt3dadd( -76.3128, 101.148, -103.277, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 49/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 111.577, -33.0593, 181.693, 0.83 ) }
    dend_17 { pt3dadd( 116.227, -36.7232, 189.1, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 51/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 111.577, -33.0593, 181.693, 0.55 ) }
    dend_16 { pt3dadd( 117.342, -36.6147, 188.936, 0.83 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_64, dend_61, dend_58, dend_55, dend_35, dend_32, dend_21, dend_0, dend_69, dend_68, dend_66, dend_65, dend_63, dend_62, dend_60, dend_59, dend_57, dend_56, dend_45, dend_36, dend_34, dend_33, dend_23, dend_22, dend_18, dend_1, dend_46, dend_44, dend_37, dend_31, dend_24, dend_20, dend_19, dend_9, dend_2, dend_52, dend_47, dend_43, dend_38, dend_28, dend_25, dend_13, dend_10, dend_6, dend_3, dend_54, dend_53, dend_51, dend_48, dend_42, dend_39, dend_30, dend_29, dend_27, dend_26, dend_15, dend_14, dend_12, dend_11, dend_8, dend_7, dend_5, dend_4, dend_50, dend_49, dend_41, dend_40, dend_17, dend_16]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_64 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_58 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_55 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_32 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_66 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_63 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_62 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_59 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_57 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_45 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_22 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_18 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_44 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_31 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_24 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_20 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_19 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_9 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_52 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_28 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_25 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_10 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_3 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_54 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_51 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_30 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_26 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_14 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_8 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_7 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_50 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_35 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_21 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_1 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_61 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_60 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_56 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_69 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_43 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_68 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_42 OneSecGrp_SectionRef_54.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_48 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_33 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_49 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_4 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_15 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_17 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_16 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_53 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_5 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_29 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_12 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_27 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_11 OneSecGrp_SectionRef_63.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_1, axon_1, axon_1, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_17, dend_16]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_17 all.append()
    dend_16 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 5
    dend_64 nseg = 3
    dend_58 nseg = 5
    dend_55 nseg = 3
    dend_32 nseg = 9
    dend_66 nseg = 11
    dend_65 nseg = 5
    dend_63 nseg = 3
    dend_62 nseg = 3
    dend_59 nseg = 5
    dend_57 nseg = 5
    dend_45 nseg = 3
    dend_22 nseg = 7
    dend_18 nseg = 3
    dend_44 nseg = 7
    dend_37 nseg = 5
    dend_31 nseg = 3
    dend_24 nseg = 7
    dend_20 nseg = 7
    dend_19 nseg = 11
    dend_9 nseg = 7
    dend_2 nseg = 7
    dend_52 nseg = 7
    dend_47 nseg = 5
    dend_28 nseg = 5
    dend_25 nseg = 5
    dend_13 nseg = 3
    dend_10 nseg = 7
    dend_6 nseg = 7
    dend_3 nseg = 3
    dend_54 nseg = 3
    dend_51 nseg = 5
    dend_30 nseg = 3
    dend_26 nseg = 3
    dend_14 nseg = 5
    dend_8 nseg = 5
    dend_7 nseg = 5
    dend_50 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L23_NBC_1bb1c095e5_0_0


