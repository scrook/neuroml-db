// Cell: bAC217_L23_DBC_d6bea44209_0_0
/*
{
  "id" : "bAC217_L23_DBC_d6bea44209_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.36129, -7.58075, 0.00144685, 3.22785", "2.18013, -6.85906, 0.00129054, 6.03886", "1.99896, -6.13737, 0.00113423, 7.42316", "1.81779, -5.41568, 9.77923E-4, 8.36559", "1.63662, -4.69399, 8.21614E-4, 9.26167", "1.45546, -3.9723, 6.65304E-4, 9.90915", "1.27429, -3.25061, 5.08995E-4, 10.4263", "1.09312, -2.52892, 3.52686E-4, 10.8393", "0.911955, -1.80723, 1.96376E-4, 11.2188", "0.730788, -1.08554, 4.00668E-5, 11.4122", "0.54962, -0.363848, -1.16243E-4, 11.4389", "0.368453, 0.357841, -2.72552E-4, 11.3929", "0.187285, 1.07953, -4.28861E-4, 11.2923", "0.00611797, 1.80122, -5.85171E-4, 10.9441", "-0.175049, 2.52291, -7.4148E-4, 10.5254", "-0.356217, 3.2446, -8.9779E-4, 10.1407", "-0.537384, 3.96629, -0.0010541, 9.5776", "-0.718552, 4.68798, -0.00121041, 8.87208", "-0.899719, 5.40967, -0.00136672, 7.79472", "-1.08089, 6.13136, -0.00152303, 6.05918", "-1.26205, 6.85305, -0.00167934, 3.96403" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "1.04582, 7.3084, -2.62764, 1.8", "1.02782, 8.44745, -3.08618, 0.96", "1.00882, 9.64973, -3.57018, 0.72", "0.978659, 11.5584, -4.33853, 0.96", "0.958639, 12.8252, -4.84851, 1.32", "0.931408, 14.5485, -5.54226, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.0441755, -7.3286, 6.04236, 1.68", "-0.0969757, -7.89253, 6.3093, 0.72", "-0.199247, -8.98483, 6.82635, 0.96", "-0.25986, -9.63221, 7.13279, 1.32", "-0.323002, -10.3066, 7.45201, 0.96", "-0.354573, -10.6437, 7.61162, 0.96", "-0.426661, -11.4137, 7.97607, 1.08" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "0.07582, 7.6234, 2.85236, 1.68", "-0.0249116, 8.32047, 2.97414, 1.68", "0.068547, 9.27693, 3.44416, 1.44", "0.224209, 9.96051, 3.87499, 0.96", "0.361045, 10.5052, 4.26305, 0.84", "0.478218, 11.0014, 4.62063, 0.96", "0.736105, 12.2458, 5.61674, 0.84", "0.894231, 12.9064, 6.21414, 0.72", "1.02373, 13.4148, 6.70885, 0.72", "1.1812, 14.0563, 7.32048, 0.84", "1.25478, 14.445, 7.6479, 0.96", "1.42186, 15.6941, 8.5092, 0.24", "1.47893, 16.263, 8.78782, 0.24", "1.52185, 16.7259, 8.98548, 0.6", "1.57285, 17.3602, 9.22009, 1.44", "1.62506, 18.1969, 9.47615, 1.56", "1.64652, 18.9049, 9.66191, 1.56", "1.64563, 19.6901, 9.81034, 1.56", "1.59552, 21.0574, 10.0655, 0.6", "1.5434, 21.8016, 10.1949, 0.48", "1.47033, 22.5238, 10.3212, 0.48", "1.42283, 22.96, 10.394, 0.96", "1.32596, 23.9563, 10.5705, 0.6", "1.27423, 24.6897, 10.7065, 0.6", "1.2506, 25.442, 10.8441, 0.96", "1.23594, 26.7668, 11.1241, 0.84", "1.22745, 27.5002, 11.2989, 0.84", "1.18187, 28.6678, 11.5955, 0.72", "1.08382, 29.8117, 11.8994, 0.84", "1.05479, 30.0533, 11.961, 0.84", "0.955685, 30.704, 12.1152, 0.72", "0.798342, 31.6823, 12.3116, 0.48", "0.671794, 32.6104, 12.4571, 0.48", "0.59314, 33.4008, 12.5467, 0.6", "0.544523, 34.1389, 12.634, 0.84", "0.525648, 34.5111, 12.6942, 0.84", "0.507669, 35.0351, 12.7931, 0.48", "0.470413, 36.1387, 13.0151, 0.48", "0.435929, 37.2063, 13.2738, 0.48", "0.368826, 38.5242, 13.6619, 0.6", "0.286804, 39.5066, 13.9837, 1.08", "0.216666, 40.1019, 14.1737, 1.32", "0.133919, 40.632, 14.3358, 1.32", "-0.00267274, 41.3636, 14.5519, 0.84", "-0.144822, 42.1953, 14.7512, 0.6", "-0.253819, 42.9271, 14.8957, 0.48", "-0.361664, 43.7394, 15.0154, 0.6", "-0.423047, 44.2343, 15.0823, 0.48", "-0.486471, 44.7868, 15.1348, 0.48", "-0.556685, 45.2854, 15.1285, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "3.15581, -7.1291, -6.17764, 1.44", "2.72372, -7.95854, -6.266, 1.08", "2.08877, -9.00852, -6.3799, 1.44", "1.44445, -10.0187, -6.56553, 1.56", "0.646552, -11.2585, -6.86694, 1.56", "-0.379703, -12.888, -7.31263, 1.2", "-0.96542, -13.8582, -7.63557, 0.72", "-1.3205, -14.3838, -7.8381, 0.72", "-2.16681, -15.5323, -8.37417, 1.56", "-2.47471, -15.9447, -8.61285, 1.8", "-2.76508, -16.3688, -8.93009, 2.16", "-3.17385, -17.2424, -9.7578, 2.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "4.91582, -4.6931, -0.277637, 1.32", "5.4328, -5.19454, -0.8849, 1.2", "6.09419, -5.65729, -1.74636, 0.72", "6.55709, -5.87564, -2.32643, 0.72", "7.45227, -6.19219, -3.3614, 1.68", "8.09731, -6.3579, -4.06497, 2.04", "9.39778, -6.61566, -5.40337, 1.92", "10.2896, -6.71168, -6.25943, 1.92", "11.2339, -6.78338, -7.08052, 0.96", "11.8063, -6.84262, -7.51365, 0.96", "12.9271, -7.05193, -8.22426, 1.44", "13.5823, -7.26295, -8.5807, 1.92", "14.5358, -7.6487, -8.9876, 1.56", "15.535, -8.15059, -9.3548, 1.2", "16.4415, -8.71594, -9.66814, 1.2", "17.4029, -9.41819, -9.9852, 1.56", "17.7818, -9.74916, -10.0811, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.46419, -1.9421, 0.432363, 0.96", "-4.85193, -1.80883, 0.888387, 0.6", "-5.62482, -1.41349, 1.67938, 0.72", "-5.70997, -1.37065, 1.75343, 0.72", "-6.50811, -1.08595, 2.40076, 0.72", "-6.87746, -1.01445, 2.69966, 0.72", "-7.37149, -0.967378, 3.1053, 0.72", "-7.76767, -0.961748, 3.46723, 0.72", "-8.17166, -0.989248, 3.82641, 0.72", "-9.12338, -1.10643, 4.69605, 0.72", "-10.0468, -1.27234, 5.531, 0.84", "-10.7843, -1.45018, 6.22297, 1.08", "-11.5659, -1.68511, 7.00187, 1.44", "-11.9743, -1.81818, 7.43953, 1.68", "-12.5686, -1.9955, 8.1156, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.77419, 5.8804, -7.59764, 1.08", "-4.09417, 6.62463, -7.76775, 1.08", "-4.43652, 7.34136, -8.0224, 0.84", "-4.68421, 7.77928, -8.23024, 0.12", "-5.0063, 8.25928, -8.47861, 0.12", "-5.42893, 8.82797, -8.77818, 0.84", "-6.46197, 10.2143, -9.47925, 0.84", "-7.08947, 11.0471, -9.90391, 0.84", "-7.77081, 11.9773, -10.345, 0.48", "-8.34569, 12.7871, -10.6897, 0.12", "-8.67851, 13.268, -10.8884, 0.12", "-9.27007, 14.1532, -11.2321, 0.6", "-9.79216, 14.9799, -11.4923, 0.6", "-10.3743, 15.9561, -11.7967, 0.72", "-10.6349, 16.4148, -11.9375, 1.08", "-11.2766, 17.5492, -12.3447, 0.6", "-11.7456, 18.3469, -12.6404, 0.36", "-12.1681, 19.062, -12.9191, 0.12", "-12.7413, 20.0559, -13.3054, 0.48", "-13.2229, 20.9475, -13.6409, 0.48", "-13.984, 22.4726, -14.1588, 0.48", "-14.6435, 23.916, -14.6172, 0.6", "-15.2517, 25.4016, -15.1163, 0.36", "-15.4722, 26.0008, -15.3244, 0.36", "-15.8419, 27.0988, -15.71, 1.2", "-16.1112, 27.9483, -16.0124, 1.08", "-16.4237, 28.9496, -16.3773, 0.72", "-16.7104, 29.8369, -16.7198, 0.24", "-17.0769, 30.8835, -17.1029, 0.24", "-17.2712, 31.4223, -17.2908, 0.72", "-17.6562, 32.422, -17.5872, 0.84", "-18.0065, 33.3117, -17.8292, 0.48", "-18.2132, 33.8152, -17.9328, 0.24", "-18.5278, 34.5293, -18.0527, 0.12", "-18.7366, 34.9928, -18.1327, 0.96", "-19.2475, 36.151, -18.2977, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4499999836411719
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-1.26205, 6.85305, -0.00167934, 0.906991", "-4.91421, 21.4016, -0.00167934, 0.906991", "-8.56637, 35.9502, -0.00167934, 0.906991" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "0.931408, 14.5485, -5.54226, 0.36", "1.58233, 15.107, -5.87665, 0.36", "2.35299, 15.7165, -6.34683, 0.48", "2.92316, 16.1494, -6.7287, 0.48", "3.54951, 16.6165, -7.14464, 0.48", "4.71032, 17.4748, -7.87479, 0.48", "5.20728, 17.8613, -8.24353, 0.96", "5.60145, 18.2003, -8.60692, 0.96", "6.18752, 18.7994, -9.29528, 0.48", "6.49036, 19.1512, -9.6903, 0.48", "6.7696, 19.4913, -10.1085, 0.48", "7.60443, 20.5899, -11.4183, 0.36", "7.87569, 20.9508, -11.8936, 0.36", "8.21935, 21.3857, -12.4896, 0.84", "8.52295, 21.7353, -12.9973, 0.84", "9.4103, 22.6223, -14.3801, 0.48", "9.60678, 22.7873, -14.6376, 0.48", "10.2959, 23.2645, -15.3435, 0.96", "10.7435, 23.5511, -15.7747, 1.32", "11.3268, 23.935, -16.3238, 1.08", "12.0968, 24.5337, -17.0617, 0.12", "12.5815, 25.0021, -17.5243, 0.12", "12.7246, 25.1666, -17.6886, 0.48", "13.1951, 25.7728, -18.2732, 0.72", "13.4792, 26.171, -18.6578, 0.12", "13.872, 26.7515, -19.1678, 0.12", "14.2605, 27.3462, -19.6287, 0.48", "14.7724, 28.1143, -20.1874, 0.72", "15.1982, 28.7088, -20.5698, 0.12", "15.7522, 29.4016, -20.9324, 0.12", "16.2419, 29.9739, -21.1741, 0.96", "16.5278, 30.295, -21.2832, 1.08", "17.2026, 31.0802, -21.4686, 0.6", "17.8222, 31.8401, -21.5908, 0.6", "18.5001, 32.7243, -21.7932, 0.36", "19.1182, 33.5501, -22.0127, 0.24", "19.4711, 34.0346, -22.1786, 0.84", "19.6875, 34.3376, -22.2966, 1.08", "20.0632, 34.8844, -22.5522, 0.6", "21.017, 36.3245, -23.4362, 0.24", "21.3712, 36.9031, -23.8429, 0.24", "21.6556, 37.3991, -24.2078, 0.72", "21.9411, 37.9332, -24.5943, 1.2", "22.2843, 38.6199, -25.0812, 0.6", "22.7186, 39.506, -25.6505, 0.12", "23.1176, 40.3184, -26.1002, 0.12", "23.3101, 40.7213, -26.326, 0.36", "23.4515, 41.0194, -26.4741, 0.36", "23.7365, 41.5957, -26.7481, 0.12", "24.1916, 42.4526, -27.1869, 0.12", "24.567, 43.1115, -27.5431, 0.84", "24.6886, 43.2944, -27.655, 1.2", "25.1316, 43.8868, -28.0269, 1.2", "25.6152, 44.4898, -28.4318, 0.96", "26.3438, 45.3711, -29.0184, 0.36", "26.8617, 45.9887, -29.5708, 0.36", "27.2547, 46.4341, -30.0623, 0.36", "27.5266, 46.7251, -30.4328, 0.36", "28.0717, 47.2803, -31.2263, 0.6", "28.2903, 47.4956, -31.5426, 0.84", "29.4599, 48.6427, -33.1878, 0.84", "29.9008, 49.075, -33.831, 0.12", "30.1544, 49.342, -34.1919, 0.12", "30.3333, 49.5287, -34.4194, 0.12", "30.5975, 49.7954, -34.6598, 0.6", "30.93, 50.1319, -34.8742, 0.6", "31.2785, 50.496, -35.0062, 0.12", "31.6792, 50.925, -35.1582, 0.12", "32.1754, 51.4661, -35.3626, 0.72", "32.6767, 52.0401, -35.5786, 0.96", "33.0781, 52.5316, -35.8118, 0.12", "33.6611, 53.223, -36.1883, 0.12", "33.9666, 53.5851, -36.4051, 0.84", "34.2685, 53.9453, -36.6245, 0.96", "34.5609, 54.3053, -36.8288, 0.48", "35.2585, 55.2025, -37.3587, 0.12", "35.8116, 55.9393, -37.8009, 0.12", "36.3874, 56.774, -38.2727, 0.12", "36.5996, 57.121, -38.4541, 0.96", "36.8326, 57.548, -38.6968, 0.96", "37.1319, 58.1721, -39.0379, 0.24", "37.2763, 58.5169, -39.1883, 0.12", "37.5595, 59.3075, -39.5034, 0.12", "37.7931, 59.9786, -39.739, 0.72", "38.2973, 61.4029, -40.1973, 0.12", "38.5429, 62.0846, -40.389, 0.12", "39.1694, 63.7573, -40.8105, 0.12", "39.4377, 64.4713, -41.0147, 0.12", "39.7024, 65.1697, -41.2365, 0.12", "39.8181, 65.4874, -41.3377, 0.96", "39.9712, 65.9663, -41.4729, 1.32", "40.1359, 66.5899, -41.6969, 1.32", "40.3925, 67.9713, -42.309, 0.12", "40.5056, 68.7834, -42.6771, 0.12", "40.5494, 69.2545, -42.881, 0.12", "40.588, 69.9473, -43.1667, 0.84", "40.6083, 70.7122, -43.4477, 0.12", "40.6134, 71.5068, -43.7089, 0.12", "40.6163, 72.2304, -43.9175, 0.12", "40.6201, 72.7145, -44.0837, 0.84", "40.656, 73.344, -44.3173, 0.12", "40.7435, 74.0301, -44.5809, 0.12", "40.8881, 74.7463, -44.8407, 0.72", "41.0513, 75.3122, -45.0537, 0.72", "41.2612, 75.8599, -45.2851, 0.12", "41.533, 76.4551, -45.5411, 0.12", "41.7709, 76.9226, -45.7233, 0.24", "42.0144, 77.3525, -45.9504, 0.24", "42.2495, 77.7625, -46.2026, 0.24", "42.597, 78.3981, -46.6272, 0.72", "42.7456, 78.6832, -46.8299, 1.2", "42.9922, 79.1776, -47.2042, 1.2", "43.6981, 80.5943, -48.3291, 0.12", "44.1006, 81.3612, -48.9533, 0.12", "44.3365, 81.7855, -49.3195, 0.48", "44.5698, 82.1626, -49.6611, 0.12", "44.7641, 82.4519, -49.9323, 0.12", "45.0893, 82.8847, -50.3322, 0.6", "45.2632, 83.0854, -50.5414, 0.6", "45.9764, 83.7883, -51.5398, 0.12", "46.3968, 84.1871, -52.1715, 0.12", "46.4752, 84.265, -52.2933, 0.72", "46.7323, 84.5277, -52.6924, 0.72", "47.6115, 85.4263, -54.1757, 0.6", "48.0656, 85.8974, -54.9447, 0.12", "48.3624, 86.2173, -55.4312, 0.12", "48.5878, 86.4798, -55.8377, 0.12", "48.8391, 86.8097, -56.2828, 0.6", "49.6504, 87.9374, -57.5657, 0.12", "49.9927, 88.4886, -57.9968, 0.12", "50.2399, 88.9427, -58.2938, 0.72", "50.8225, 90.1562, -59.0243, 0.12", "51.2926, 91.2514, -59.6094, 0.12", "51.5833, 92.0255, -59.9429, 0.12", "52.1467, 93.7249, -60.5129, 0.12", "52.3756, 94.4851, -60.7518, 0.84", "52.5829, 95.2409, -60.9492, 0.12", "52.9209, 96.5584, -61.2067, 0.12", "53.0828, 97.2431, -61.3392, 0.6", "53.2547, 97.9845, -61.4718, 0.12", "53.3727, 98.4157, -61.5399, 0.12", "53.7451, 99.6197, -61.6815, 0.12", "53.9803, 100.308, -61.7501, 0.72", "54.2308, 101.013, -61.8192, 0.12", "54.7648, 102.375, -61.9731, 0.24", "54.8995, 102.701, -62.0038, 0.24", "55.0072, 102.957, -62.0299, 0.12", "55.5155, 104.123, -62.1507, 0.12", "55.7781, 104.7, -62.2036, 0.12", "56.1329, 105.405, -62.2527, 0.12", "56.1906, 105.515, -62.2574, 0.72", "56.493, 106.073, -62.2729, 0.84", "56.8184, 106.653, -62.2783, 0.12", "57.3997, 107.632, -62.277, 0.12", "57.9996, 108.616, -62.2884, 0.12", "58.2569, 109.048, -62.2974, 0.12", "58.4584, 109.385, -62.3066, 0.72", "58.8891, 110.099, -62.3305, 0.84", "59.188, 110.606, -62.3501, 0.12", "59.8228, 111.708, -62.3768, 0.12", "60.4267, 112.774, -62.415, 0.12", "60.7643, 113.376, -62.4402, 0.12", "60.9415, 113.679, -62.4535, 0.6", "61.3781, 114.377, -62.4898, 0.72", "61.6704, 114.822, -62.5127, 0.12", "62.6494, 116.251, -62.6035, 0.12", "62.9355, 116.661, -62.6323, 0.12", "63.5664, 117.571, -62.696, 0.12", "63.8693, 118.027, -62.7227, 0.84", "64.0791, 118.356, -62.7218, 0.96", "64.3662, 118.831, -62.6939, 0.96", "64.7908, 119.543, -62.6072, 0.6", "65.1866, 120.218, -62.5155, 0.6", "65.7585, 121.232, -62.3683, 0.6", "66.2916, 122.167, -62.2236, 0.12", "67.0012, 123.408, -62.0406, 0.12", "67.6904, 124.625, -61.8634, 0.12", "67.8624, 124.93, -61.821, 0.36", "68.0789, 125.32, -61.7744, 0.36", "68.2115, 125.564, -61.7561, 0.12", "68.6342, 126.37, -61.7448, 0.12", "68.7449, 126.595, -61.7415, 0.36", "68.8978, 126.921, -61.7371, 0.12", "69.1967, 127.523, -61.7306, 0.12", "69.7047, 128.446, -61.7484, 0.12", "70.0273, 128.977, -61.7724, 0.48", "70.3991, 129.519, -61.8066, 0.48", "70.5648, 129.739, -61.824, 0.12", "71.0585, 130.355, -61.8773, 0.12", "71.5271, 130.891, -61.9251, 0.12", "71.9451, 131.341, -61.9646, 0.6", "72.5401, 131.974, -62.0146, 0.72", "72.954, 132.416, -62.0816, 0.36", "73.4731, 132.999, -62.1926, 0.36", "74.1274, 133.79, -62.3584, 0.48", "74.4504, 134.193, -62.4458, 0.24", "74.7674, 134.598, -62.5438, 0.24", "75.6211, 135.703, -62.8322, 0.24", "76.0233, 136.218, -62.9739, 0.24", "76.5607, 136.892, -63.1568, 0.36", "76.7968, 137.191, -63.2396, 0.12", "77.066, 137.536, -63.3238, 0.12", "77.4023, 137.966, -63.4062, 0.24", "77.5512, 138.162, -63.4323, 0.12", "78.0524, 138.882, -63.5478, 0.12", "78.4789, 139.554, -63.6529, 0.6", "78.8427, 140.164, -63.7404, 0.72", "79.0663, 140.549, -63.7917, 0.72", "79.3431, 141.041, -63.8495, 0.12", "79.9652, 142.158, -63.9398, 0.12", "80.5513, 143.247, -63.9844, 0.12", "80.8455, 143.786, -63.9844, 0.48", "81.018, 144.093, -63.9792, 0.12", "81.3881, 144.716, -63.9573, 0.12", "81.8598, 145.451, -63.9469, 0.12", "82.4238, 146.275, -63.9765, 0.12", "82.7743, 146.788, -64.0149, 0.12", "83.1219, 147.301, -64.0445, 0.6", "83.4604, 147.82, -64.0715, 0.6", "83.9548, 148.595, -64.1085, 0.12", "84.8174, 150.039, -64.1686, 0.12", "85.5293, 151.354, -64.1925, 0.12", "85.8551, 152.056, -64.2068, 0.72", "86.0173, 152.484, -64.2138, 0.72", "86.1471, 152.923, -64.2159, 0.24", "86.3916, 154.045, -64.2287, 0.24", "86.488, 154.795, -64.2405, 0.24", "86.5531, 155.45, -64.2535, 0.48", "86.6329, 156.201, -64.2646, 0.6", "86.6809, 156.554, -64.2554, 0.6", "86.7697, 157.23, -64.2173, 0.6", "86.9217, 158.709, -64.0846, 0.12", "86.9933, 159.613, -63.9501, 0.12", "87.0354, 160.602, -63.7683, 0.12", "87.0576, 161.533, -63.5933, 0.12", "87.0592, 161.708, -63.5617, 0.36", "87.05, 162.993, -63.3392, 0.36", "87.0264, 163.706, -63.2592, 0.12", "86.9612, 164.97, -63.1109, 0.12", "86.9399, 165.344, -63.0678, 0.48", "86.91, 165.972, -63.0033, 0.48", "86.912, 166.253, -62.9814, 0.12", "86.9689, 167.386, -62.9283, 0.12", "86.9752, 167.502, -62.9289, 0.72", "87.0074, 168.004, -62.9392, 0.12", "87.0945, 168.997, -62.968, 0.12", "87.2315, 170.026, -63.003, 0.12", "87.3997, 170.887, -63.0437, 0.36", "87.6062, 171.658, -63.1662, 0.12", "87.9871, 172.834, -63.4411, 0.12", "88.4683, 174.08, -63.8093, 0.48", "88.8919, 174.979, -64.1628, 0.48", "89.3531, 175.77, -64.5478, 0.84", "90.5989, 177.491, -65.5926, 0.24", "91.1795, 178.148, -66.0694, 0.12", "91.5584, 178.497, -66.3792, 0.48", "92.1866, 178.984, -66.8726, 0.36", "92.6753, 179.331, -67.3086, 0.36", "93.2575, 179.702, -67.7921, 0.72", "93.6478, 179.924, -68.1017, 0.96", "94.1551, 180.196, -68.5079, 0.96", "94.8244, 180.554, -69.0113, 1.08", "96.7387, 181.607, -70.3447, 0.12", "97.6479, 182.094, -70.9442, 0.12", "98.4093, 182.483, -71.3767, 0.36", "99.2853, 182.922, -71.8989, 0.12", "100.086, 183.309, -72.3477, 0.12", "100.315, 183.413, -72.4469, 0.36", "100.875, 183.637, -72.6119, 0.12", "101.477, 183.84, -72.8602, 0.12", "102.78, 184.272, -73.4635, 0.36", "103.231, 184.42, -73.7173, 0.6", "103.77, 184.63, -74.0135, 1.08", "104.487, 184.943, -74.3702, 0.24", "105.343, 185.335, -74.7407, 0.12", "105.796, 185.547, -74.9204, 0.48", "106.028, 185.666, -74.9933, 0.12", "107.292, 186.423, -75.4343, 0.12", "107.628, 186.678, -75.559, 0.6", "107.886, 186.934, -75.6941, 0.6", "108.42, 187.647, -76.1068, 0.12", "108.721, 188.166, -76.4483, 0.12", "108.907, 188.638, -76.7742, 0.12", "109.004, 189.24, -77.1629, 0.48", "109.034, 190.627, -78.0716, 0.12", "108.988, 191.234, -78.4988, 0.12", "108.931, 191.659, -78.7594, 0.36", "108.882, 192.006, -78.9517, 0.12", "108.736, 193.108, -79.5075, 0.12", "108.562, 194.696, -80.2402, 0.72", "108.514, 195.794, -80.6154, 0.12", "108.515, 197.943, -81.2836, 0.12", "108.534, 198.901, -81.5737, 0.12", "108.54, 199.041, -81.6128, 0.48", "108.563, 199.315, -81.6715, 0.12", "108.932, 202.173, -81.8712, 0.12", "108.954, 202.297, -81.8697, 0.48" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "0.931408, 14.5485, -5.54226, 1.08", "0.837534, 15.6564, -5.2154, 1.08", "0.729461, 16.9496, -4.85472, 1.08", "0.573762, 18.7554, -4.39884, 1.08", "0.45921, 20.0839, -4.06344, 0.84", "0.339594, 21.4712, -3.71321, 0.36", "0.286251, 22.0899, -3.55703, 0.36", "0.23167, 22.6844, -3.40043, 0.36", "0.160202, 23.5335, -3.15364, 0.6" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-0.426661, -11.4137, 7.97607, 1.32", "-0.400479, -11.9316, 7.94714, 1.32", "-0.386646, -12.1821, 7.9257, 1.44", "-0.353707, -12.8042, 7.89444, 1.32", "-0.308587, -13.5689, 7.87779, 1.08", "-0.277733, -14.1876, 7.88012, 1.08", "-0.258695, -14.8686, 7.89191, 0.84", "-0.256319, -15.6138, 7.9135, 0.84", "-0.263803, -16.3425, 7.94091, 0.84", "-0.297141, -17.2244, 7.98101, 0.96", "-0.352427, -17.8805, 8.00362, 0.96", "-0.441092, -18.5412, 8.04776, 0.96", "-0.538252, -19.0928, 8.09807, 0.96", "-0.735002, -19.9725, 8.17469, 0.72", "-0.877163, -20.5143, 8.21461, 0.84", "-1.1577, -21.4863, 8.28716, 0.84", "-1.55426, -22.819, 8.38931, 0.96", "-1.7049, -23.3116, 8.43406, 1.2", "-1.84535, -23.7385, 8.4809, 1.68", "-2.07511, -24.3165, 8.56244, 1.68" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.426661, -11.4137, 7.97607, 0.6", "0.111299, -11.5837, 8.37175, 0.6", "1.02501, -11.8856, 9.39901, 0.48", "1.47858, -12.0308, 9.95396, 0.48", "2.5943, -12.3982, 11.3447, 0.48", "3.01813, -12.5648, 11.8783, 0.48", "3.6376, -12.7957, 12.6744, 1.32", "5.35327, -13.4263, 15.1615, 0.96", "5.60949, -13.5071, 15.56, 0.36", "5.77551, -13.5296, 15.8553, 0.36", "6.15849, -13.4684, 16.6006, 0.36", "6.7179, -13.2062, 17.7409, 0.48", "7.18095, -12.8668, 18.6239, 0.48", "7.43831, -12.6706, 19.0294, 0.48", "8.01482, -12.2599, 19.9222, 0.12", "8.21378, -12.1288, 20.1951, 0.12", "8.6279, -11.8581, 20.6659, 0.48", "9.04443, -11.6274, 21.0378, 0.48", "9.82362, -11.2233, 21.5608, 0.6", "10.3405, -10.9367, 21.8364, 0.12", "10.9962, -10.5421, 22.1005, 0.48", "11.9244, -9.91794, 22.399, 0.48", "12.2651, -9.66078, 22.4937, 0.48", "12.7566, -9.23264, 22.5925, 0.48", "13.298, -8.6757, 22.6724, 0.48", "14.2125, -7.59556, 22.799, 0.48", "15.0275, -6.53979, 22.8969, 0.48", "15.8329, -5.44016, 22.9691, 0.48", "16.4471, -4.52399, 23.008, 0.12", "16.892, -3.77413, 23.0207, 0.12", "17.1893, -3.22715, 23.0341, 0.12", "17.5376, -2.51742, 23.0523, 0.84", "17.7902, -2.05449, 23.0838, 1.2", "18.0985, -1.65757, 23.1669, 1.44", "18.8039, -1.02159, 23.4111, 0.72", "19.4942, -0.511473, 23.6502, 0.36", "20.002, -0.16481, 23.8647, 0.48", "20.6576, 0.296235, 24.1808, 0.48", "21.7638, 1.11726, 24.7515, 0.36", "22.4383, 1.64611, 25.1072, 0.36", "22.8331, 1.95527, 25.3206, 0.36", "23.9339, 2.88581, 25.9164, 0.12", "24.4896, 3.44407, 26.2579, 1.08", "24.7956, 3.8474, 26.4743, 1.2", "25.0708, 4.3634, 26.6811, 1.08", "33.3287, 7.85312, 31.2376, 1.08", "40.5911, 13.2368, 35.8167, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.556685, 45.2854, 15.1285, 0.12", "0.226769, 46.5884, 14.9059, 0.12", "0.949604, 47.8922, 14.7106, 0.12", "1.41343, 48.7746, 14.59, 0.12", "2.04603, 50.0312, 14.4381, 0.12", "2.48421, 50.8812, 14.262, 0.12", "3.13971, 52.1307, 13.9405, 0.12", "3.7114, 53.2226, 13.6415, 0.12", "3.93534, 53.6374, 13.4709, 0.12", "4.44169, 54.6015, 12.9457, 0.96", "5.29287, 56.3716, 11.7809, 0.12", "5.45002, 56.7049, 11.5323, 0.12", "5.59211, 56.9796, 11.2971, 0.36", "6.07363, 57.845, 10.5156, 0.12", "6.20927, 58.0817, 10.3125, 0.12", "6.67968, 58.9227, 9.71149, 0.12", "6.89128, 59.3303, 9.51178, 0.12", "7.23465, 59.9915, 9.2192, 0.12", "7.4635, 60.4394, 9.06138, 0.12", "7.85379, 61.232, 8.829, 0.12", "8.44733, 62.5017, 8.29381, 0.12", "8.72843, 63.1483, 7.95064, 0.12", "8.94189, 63.6862, 7.63811, 0.12", "9.41088, 64.9707, 6.8083, 0.12", "9.59734, 65.5313, 6.41708, 1.2", "10.1682, 67.6097, 4.97893, 0.12", "10.4181, 68.7564, 4.18645, 0.12", "10.4571, 68.958, 4.04772, 0.48", "10.5516, 69.6044, 3.50699, 0.12", "10.5737, 70.0724, 3.08837, 0.12", "10.4841, 71.1536, 1.94042, 0.12", "10.3898, 71.6394, 1.3838, 1.2", "10.32, 71.8472, 1.06763, 1.2", "9.58418, 73.4915, -1.85937, 0.12", "9.24767, 74.0558, -2.98241, 0.12", "8.31399, 75.3458, -6.26195, 0.12", "8.20978, 75.4655, -6.66024, 0.12", "7.75801, 76.0249, -8.77923, 0.6", "7.70109, 76.1067, -9.10463, 0.6", "7.64647, 76.299, -9.94295, 0.6", "8.05497, 76.7346, -11.9269, 0.12", "8.43268, 76.9558, -12.1673, 0.12", "9.7809, 78.058, -12.6683, 0.12", "10.3017, 78.6509, -12.768, 0.6", "10.6881, 79.2349, -12.8143, 0.12", "11.1318, 79.9821, -12.8208, 0.12", "11.5156, 80.8996, -12.7436, 0.12", "11.8124, 81.9872, -12.6691, 0.12", "11.896, 83.0113, -12.6261, 0.12", "11.8981, 83.7167, -12.6261, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.556685, 45.2854, 15.1285, 0.72", "-0.877791, 46.0124, 15.1563, 0.72", "-1.20565, 46.7839, 15.1836, 0.84", "-1.44417, 47.3525, 15.2023, 1.08", "-1.80888, 48.2394, 15.1965, 0.72", "-2.20002, 49.2479, 15.1723, 0.48", "-2.46582, 49.9939, 15.1473, 0.48", "-2.66532, 50.6327, 15.1208, 0.72", "-2.8228, 51.1708, 15.098, 0.96", "-3.07337, 52.0785, 15.0584, 0.84", "-3.26763, 52.8097, 15.0324, 0.72", "-3.48404, 53.651, 15.0254, 0.72", "-3.78105, 54.6832, 15.0326, 0.72", "-3.89176, 55.0268, 15.0599, 0.72", "-4.05268, 55.512, 15.133, 0.72", "-4.415, 56.5858, 15.3454, 0.6", "-4.67478, 57.3164, 15.4455, 0.6", "-5.12692, 58.545, 15.6316, 0.48", "-5.5812, 59.7847, 15.8162, 0.48", "-6.02419, 60.9566, 15.9513, 0.48", "-6.5754, 62.3867, 16.0767, 0.6", "-7.31329, 64.3389, 16.2388, 0.6", "-7.92198, 66.022, 16.362, 0.72", "-8.39118, 67.3992, 16.4408, 0.6", "-8.77997, 68.5436, 16.4781, 0.12", "-9.02555, 69.2536, 16.5098, 0.12", "-9.43899, 70.4665, 16.5836, 0.12", "-9.91375, 71.9646, 16.7038, 0.24", "-10.2843, 73.2122, 16.7406, 0.24", "-10.4639, 73.8633, 16.77, 0.24", "-10.5876, 74.3547, 16.8005, 0.6", "-10.7599, 74.9969, 16.8193, 0.12", "-10.9323, 75.5892, 16.8072, 0.24", "-11.1088, 76.2041, 16.787, 0.24", "-11.158, 76.3744, 16.7802, 0.24", "-11.377, 77.0942, 16.7537, 0.36", "-11.7787, 78.3134, 16.7445, 0.36", "-12.1007, 79.2113, 16.7599, 0.36", "-12.2736, 79.6089, 16.7807, 0.48", "-12.7954, 80.6564, 16.864, 0.48", "-13.2742, 81.5238, 16.9514, 0.48", "-13.6622, 82.1689, 17.0427, 0.6", "-13.979, 82.6849, 17.1357, 0.72", "-14.5929, 83.7576, 17.3501, 0.36", "-15.0372, 84.631, 17.5233, 0.36", "-15.086, 84.7441, 17.5434, 0.48", "-15.334, 85.4659, 17.6482, 0.36", "-15.5761, 86.437, 17.7446, 0.36", "-15.7954, 87.6685, 17.8272, 0.36", "-15.9421, 88.8088, 17.8688, 0.36", "-16.0371, 89.5685, 17.8864, 0.36", "-16.1166, 90.1823, 17.8919, 0.6", "-16.3032, 91.5437, 17.882, 0.84", "-16.4008, 92.1972, 17.8751, 0.36", "-16.5668, 93.2521, 17.8642, 0.36", "-16.725, 94.3057, 17.8545, 0.36", "-16.9379, 95.7958, 17.8436, 0.36", "-17.0336, 96.5452, 17.8401, 0.48", "-17.0735, 96.9208, 17.8397, 0.48", "-17.1011, 97.3182, 17.8411, 0.24", "-17.1411, 98.4478, 17.8568, 0.24", "-17.1503, 99.2035, 17.8766, 0.6", "-17.1554, 100.083, 17.9072, 0.6", "-17.1582, 100.713, 17.9319, 0.48", "-17.167, 101.846, 17.9821, 0.48", "-17.171, 102.547, 18.0147, 0.12", "-17.1767, 103.921, 18.0768, 0.12", "-17.1845, 105.043, 18.1223, 0.12", "-17.1869, 105.295, 18.131, 0.72", "-17.197, 106.169, 18.1551, 0.84", "-17.2163, 107.31, 18.1667, 0.36", "-17.2505, 109.057, 18.1552, 0.36", "-17.2793, 110.18, 18.141, 0.36", "-17.3131, 111.061, 18.1252, 0.36", "-17.3623, 111.94, 18.1088, 0.48", "-17.4566, 113.211, 18.0841, 0.96", "-17.4902, 113.587, 18.0775, 0.96", "-17.5768, 114.454, 18.0644, 0.36", "-17.6912, 115.486, 18.0531, 0.36", "-17.8821, 117.112, 18.0439, 0.36", "-18.0655, 118.606, 18.0452, 0.36", "-18.1329, 119.105, 18.0496, 0.48", "-18.194, 119.498, 18.0523, 0.36", "-18.3305, 120.241, 18.0491, 0.36", "-18.5555, 121.346, 18.0341, 0.48", "-18.6482, 121.733, 18.0256, 0.36", "-19.1205, 123.573, 17.9798, 0.36", "-19.5567, 125.214, 17.9356, 0.48", "-19.8858, 126.417, 17.9, 0.96", "-20.0292, 126.914, 17.8833, 0.6", "-20.4088, 128.138, 17.8355, 0.72", "-23.6452, 138.071, 17.6553, 0.72" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-3.17385, -17.2424, -9.7578, 1.56", "-3.16645, -17.0682, -11.2583, 1.56", "-3.13411, -16.3071, -17.8184, 1.44", "-3.10726, -15.6753, -23.2636, 2.04", "-3.09808, -15.4593, -25.1252, 1.32", "-3.09431, -15.3704, -25.8906, 1.2", "-3.09219, -15.3206, -26.3206, 0.12" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.17385, -17.2424, -9.7578, 0.48", "-3.64973, -18.4582, -9.57881, 0.48", "-3.84392, -18.9267, -9.48933, 0.48", "-4.12928, -19.606, -9.35307, 0.72", "-4.51652, -20.5504, -9.21086, 1.2", "-4.95759, -21.6405, -9.04776, 0.6", "-5.27849, -22.4578, -8.93045, 0.36", "-5.63565, -23.3607, -8.82346, 0.36", "-5.91427, -24.0861, -8.74106, 0.48", "-6.315, -25.1986, -8.59661, 0.84", "-6.64111, -26.2578, -8.45726, 0.72", "-6.82161, -26.9827, -8.36044, 0.72", "-6.99296, -27.7987, -8.23932, 0.72", "-7.10966, -28.3998, -8.15729, 0.72", "-7.29441, -29.4422, -7.99872, 0.84", "-7.46736, -30.5309, -7.79871, 0.84", "-7.57836, -31.3192, -7.65395, 0.48", "-7.6607, -31.9438, -7.53691, 0.6", "-7.73877, -32.5581, -7.41768, 1.08", "-7.80883, -33.0673, -7.31992, 1.32", "-7.98673, -34.2825, -7.124, 0.96", "-8.14179, -35.3276, -6.94581, 0.96", "-8.31697, -36.5635, -6.73844, 0.72", "-8.51691, -37.9934, -6.50257, 0.72", "-8.68792, -39.2576, -6.30503, 0.96", "-8.85976, -40.5373, -6.1125, 1.2", "-9.00062, -41.5746, -5.97802, 0.6", "-9.08481, -42.1935, -5.90412, 0.6", "-9.22076, -43.2037, -5.77741, 0.6", "-9.3103, -43.9392, -5.70429, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-3.17385, -17.2424, -9.7578, 1.44", "-2.80139, -18.005, -10.1268, 1.44", "-2.33581, -19.3749, -10.669, 0.72", "-2.24663, -19.8511, -10.8164, 0.12", "-2.23057, -20.1972, -10.8955, 0.24", "-2.24319, -20.4745, -10.9413, 0.24", "-2.3141, -21.2997, -11.0466, 0.24", "-2.42527, -21.9148, -11.1133, 0.48", "-2.56641, -22.5291, -11.1782, 0.6", "-2.74476, -23.2832, -11.2967, 0.36", "-2.94966, -24.1204, -11.4565, 0.36", "-3.08808, -24.718, -11.5867, 0.36", "-3.23734, -25.5221, -11.8004, 0.72", "-3.33704, -26.3478, -12.0433, 0.36", "-3.36461, -26.9555, -12.2399, 0.36", "-3.3487, -27.3764, -12.3784, 0.6", "-3.32515, -27.7304, -12.5025, 0.6", "-3.28809, -28.4166, -12.7496, 0.36", "-3.27489, -29.1014, -12.978, 0.36", "-3.28768, -29.7265, -13.2006, 0.36", "-3.31517, -30.4013, -13.4533, 0.48", "-3.39083, -31.3657, -13.8416, 0.6", "-3.48894, -32.0277, -14.1116, 0.84", "-3.59714, -32.5087, -14.3058, 0.84", "-3.80631, -33.228, -14.5902, 0.36", "-4.106, -34.1346, -14.9434, 0.36", "-4.34124, -34.812, -15.2013, 0.48", "-4.51175, -35.3739, -15.3884, 0.48", "-4.72345, -36.1521, -15.634, 0.84", "-4.9697, -37.1211, -15.9441, 1.32" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "17.7818, -9.74916, -10.0811, 0.6", "19.1084, -10.8903, -9.16341, 0.6", "19.7726, -11.3782, -8.86423, 0.6", "20.5968, -11.9449, -8.62911, 0.6", "21.1461, -12.3186, -8.53482, 0.6", "22.071, -12.9564, -8.34779, 0.48", "22.5824, -13.3207, -8.23812, 0.84", "23.1798, -13.7436, -8.19113, 0.84", "23.8335, -14.2197, -8.15131, 0.36", "24.8992, -15.1097, -8.1165, 0.48", "25.7737, -15.9682, -8.05755, 0.96", "26.0152, -16.2608, -8.02729, 1.08", "26.4894, -16.9637, -7.98933, 0.48", "26.6622, -17.27, -7.97404, 0.48", "27.0037, -17.9735, -7.93926, 0.72", "27.3064, -18.7077, -7.92404, 1.2", "27.7088, -19.7788, -7.93256, 1.32", "28.004, -20.5849, -7.89728, 0.6", "28.3356, -21.5111, -7.79736, 0.96", "28.5804, -22.1825, -7.70312, 0.96", "28.8487, -22.9003, -7.58897, 0.6", "29.1061, -23.5949, -7.4677, 0.6", "29.4457, -24.5892, -7.29115, 0.72", "29.6377, -25.2218, -7.1881, 0.84", "29.9004, -26.185, -7.05196, 1.08", "30.1142, -27.0778, -6.93306, 1.08", "30.3006, -27.9574, -6.82825, 0.48", "30.5378, -29.1768, -6.72328, 0.48", "30.6652, -29.9342, -6.68854, 0.48", "30.817, -30.9936, -6.63354, 0.96", "30.9314, -31.9808, -6.55923, 0.96", "31.0155, -32.7291, -6.50107, 0.6", "31.1023, -33.4642, -6.45053, 0.48", "31.1773, -34.0878, -6.40953, 0.6", "31.3113, -35.1321, -6.32792, 0.84", "31.4528, -36.126, -6.24989, 0.6", "31.5909, -36.9879, -6.17536, 0.48", "31.6957, -37.6083, -6.12563, 0.48", "31.8524, -38.4617, -6.06461, 0.6", "32.0371, -39.3008, -6.02276, 0.96", "32.2893, -40.295, -6.01852, 1.08", "32.522, -41.1517, -6.0278, 0.84", "32.719, -41.8957, -6.03898, 0.6", "32.8836, -42.5011, -6.05997, 0.48", "33.1392, -43.4102, -6.11945, 0.6", "33.3949, -44.3469, -6.20771, 0.84", "33.6241, -45.2002, -6.29165, 0.96", "33.8413, -46.0372, -6.37072, 1.08", "34.0116, -46.7471, -6.43082, 0.72", "34.1529, -47.4367, -6.48341, 0.48", "34.2884, -48.1882, -6.52988, 0.48", "34.3709, -48.6736, -6.54887, 0.48", "34.4884, -49.4296, -6.57461, 0.84", "34.5368, -49.7934, -6.58387, 0.96", "34.6132, -50.5451, -6.59406, 0.96", "34.6706, -51.1743, -6.58504, 0.6", "34.708, -51.5707, -6.57692, 0.48", "34.7896, -52.438, -6.57141, 0.48", "34.8507, -53.064, -6.54285, 0.6", "34.9427, -53.9365, -6.47631, 0.84", "35.0345, -54.8468, -6.38499, 0.72", "35.1108, -55.5966, -6.29766, 0.48", "35.2194, -56.6244, -6.16898, 0.6", "35.3393, -57.6002, -6.04374, 0.48", "35.4516, -58.3512, -5.95044, 0.72", "35.5831, -59.0894, -5.86701, 1.08", "35.7186, -59.7497, -5.80633, 0.6", "35.8959, -60.5076, -5.74916, 0.6", "36.1273, -61.3785, -5.67848, 0.6", "36.2927, -61.983, -5.64431, 0.6", "36.4752, -62.6318, -5.59359, 0.84", "36.6417, -63.2363, -5.53655, 0.84", "36.8209, -64.0061, -5.45634, 0.84", "36.9859, -64.8768, -5.39015, 0.48", "37.0586, -65.3744, -5.36568, 0.84", "37.117, -65.9907, -5.35341, 1.2", "37.159, -66.7454, -5.36233, 1.44", "37.1878, -67.4977, -5.42815, 0.84", "37.1985, -68.3402, -5.60023, 0.48", "37.1943, -68.6095, -5.67906, 0.72", "37.1826, -69.0868, -5.84799, 0.84", "37.1723, -69.5531, -6.02972, 0.84", "37.1576, -70.3481, -6.36834, 0.6", "37.1449, -71.3328, -6.77482, 0.48", "37.1331, -72.1622, -7.12482, 0.48", "37.1289, -72.7001, -7.35294, 0.6", "37.1342, -73.2794, -7.59401, 0.72", "37.1561, -73.9935, -7.86488, 0.72", "37.2128, -74.9294, -8.18865, 0.84", "37.3378, -76.0386, -8.544, 0.84", "37.4423, -76.7559, -8.7462, 0.84", "37.5237, -77.2593, -8.86155, 0.6", "37.6795, -78.1372, -9.02893, 0.48", "37.8394, -78.9611, -9.14908, 0.48", "38.0237, -79.8521, -9.24477, 0.48", "38.1915, -80.6678, -9.28994, 0.48", "38.2908, -81.1761, -9.31379, 0.48", "38.3805, -81.687, -9.30896, 0.6", "38.5435, -82.7182, -9.24439, 0.6", "38.6364, -83.3425, -9.17152, 0.84", "38.6825, -83.7135, -9.12058, 1.08", "38.7684, -84.3478, -9.07492, 1.08", "38.9294, -85.3605, -9.09343, 0.6", "39.0233, -85.7255, -9.21343, 0.6", "39.1522, -85.9934, -9.46297, 0.72", "39.3098, -86.2187, -9.80434, 0.84", "39.8481, -86.8193, -10.903, 0.84", "40.3259, -87.2092, -11.798, 1.08", "40.9724, -87.5939, -12.8934, 0.72", "41.2099, -87.6992, -13.2409, 0.72", "41.7788, -87.9127, -13.9448, 0.6", "42.1473, -88.0508, -14.3121, 0.6", "42.681, -88.294, -14.7161, 0.6", "43.0877, -88.5433, -14.9641, 0.6", "43.6556, -88.9888, -15.2586, 0.6", "44.0385, -89.4007, -15.5025, 1.08", "44.3801, -89.9182, -15.7533, 1.08", "44.7048, -90.5324, -16.0693, 0.6", "44.9421, -91.0195, -16.3668, 0.6", "45.1043, -91.306, -16.5861, 0.6", "45.5482, -91.8861, -17.2063, 0.6", "45.7774, -92.1092, -17.5056, 0.6", "46.2891, -92.5013, -18.0999, 0.84", "46.9719, -92.9254, -18.7795, 0.84", "47.721, -93.3321, -19.4442, 0.96", "48.579, -93.7564, -20.1335, 0.84", "49.0378, -93.98, -20.4561, 0.6", "49.5024, -94.2329, -20.7497, 0.72", "49.8898, -94.4816, -20.9582, 0.72", "50.444, -94.9096, -21.1948, 0.48", "50.8592, -95.291, -21.3516, 0.48", "51.3262, -95.7832, -21.5032, 0.48", "51.8415, -96.3902, -21.6875, 0.48", "52.3897, -97.1237, -21.8924, 0.36", "52.8793, -97.8468, -22.0661, 0.36", "53.2008, -98.3426, -22.1666, 0.6", "53.709, -99.1455, -22.312, 0.6", "54.0016, -99.6116, -22.391, 0.48", "54.5024, -100.398, -22.5002, 0.48", "55.03, -101.207, -22.5794, 0.48", "55.6303, -102.089, -22.6493, 0.48", "55.9876, -102.594, -22.6764, 0.6", "56.3708, -103.128, -22.6955, 0.6", "56.8426, -103.784, -22.7028, 0.84", "57.1898, -104.298, -22.7036, 0.48", "57.5509, -104.892, -22.701, 0.48", "57.7604, -105.29, -22.697, 0.48", "58.0615, -105.879, -22.7215, 0.72", "58.4236, -106.576, -22.7788, 0.84", "58.9475, -107.617, -22.9305, 0.48", "59.2446, -108.208, -23.0408, 0.48", "59.8196, -109.331, -23.3204, 0.48", "60.28, -110.184, -23.5745, 0.6", "60.5446, -110.639, -23.7337, 0.6", "60.9847, -111.314, -24.0193, 0.48", "61.4126, -111.903, -24.3022, 0.48", "61.8669, -112.498, -24.5945, 0.84", "62.226, -112.954, -24.8019, 0.84", "62.426, -113.225, -24.8941, 0.84", "62.895, -113.9, -25.0991, 0.6", "63.2284, -114.407, -25.2219, 0.48", "63.5012, -114.871, -25.3175, 0.48", "63.8818, -115.557, -25.4528, 0.48", "64.1831, -116.137, -25.5736, 0.48", "64.5304, -116.812, -25.7049, 0.36", "64.8748, -117.468, -25.8028, 0.36", "65.1262, -117.913, -25.8433, 0.6", "65.5613, -118.652, -25.8768, 0.6", "65.9255, -119.269, -25.8779, 0.6", "66.6057, -120.406, -25.7902, 0.6", "67.2649, -121.477, -25.6329, 0.6", "67.8522, -122.424, -25.4587, 0.36", "68.0698, -122.787, -25.3814, 0.36", "68.5412, -123.665, -25.1818, 0.36", "69.0074, -124.649, -24.9767, 0.84", "69.3422, -125.454, -24.8346, 0.6", "69.701, -126.38, -24.7214, 0.6", "69.9808, -127.124, -24.6482, 0.36", "70.385, -128.162, -24.5522, 0.36", "70.6579, -128.848, -24.4978, 0.36", "70.9934, -129.684, -24.4586, 0.48", "71.5775, -131.127, -24.3946, 0.48", "71.8755, -131.87, -24.3638, 0.48", "72.1646, -132.618, -24.3588, 0.72", "72.3444, -133.139, -24.3698, 0.72", "72.5176, -133.884, -24.4292, 0.48", "72.5892, -134.795, -24.6773, 0.48", "72.5732, -135.362, -24.9382, 0.48", "72.5157, -136.189, -25.4181, 0.6", "72.4558, -136.837, -25.8773, 0.6", "72.3901, -137.6, -26.4931, 0.48", "72.2926, -139.106, -27.8512, 0.48", "72.2817, -139.609, -28.3323, 0.48", "72.2961, -139.801, -28.5161, 0.48", "72.4483, -140.686, -29.3161, 0.84", "72.6133, -141.355, -29.8738, 0.96", "72.8596, -142.208, -30.5111, 0.96", "72.9353, -142.51, -30.6955, 0.96", "73.1017, -143.374, -31.2139, 0.48", "73.1929, -143.996, -31.5649, 0.84", "73.2846, -144.699, -31.91, 0.48", "73.3672, -145.373, -32.2146, 0.48", "73.4396, -145.983, -32.4674, 0.6", "73.5794, -147.122, -32.9464, 0.6", "73.6908, -148.036, -33.3141, 0.36", "73.7865, -148.698, -33.5809, 0.36", "73.8571, -149.061, -33.7195, 0.6", "73.9418, -149.385, -33.8338, 0.6", "74.1906, -150.071, -34.0707, 0.24", "74.3643, -150.467, -34.1837, 0.24", "74.4804, -150.711, -34.25, 0.24", "74.6407, -151.059, -34.3428, 0.48", "74.9299, -151.669, -34.4884, 0.36", "75.1431, -152.101, -34.57, 0.36", "75.3661, -152.543, -34.6264, 0.36", "75.6421, -153.096, -34.7078, 0.6", "75.9109, -153.644, -34.7869, 0.6", "76.1495, -154.111, -34.8493, 0.6", "76.5184, -154.805, -34.9249, 0.84", "76.8871, -155.501, -35.0013, 0.84", "77.2499, -156.225, -35.0766, 0.24", "77.4611, -156.692, -35.1214, 0.24", "77.6087, -157.012, -35.1479, 0.48", "77.9251, -157.655, -35.1918, 0.48", "78.3124, -158.344, -35.2243, 0.48", "78.7367, -158.992, -35.2365, 0.24", "78.9656, -159.31, -35.2314, 0.24", "79.602, -160.156, -35.2198, 0.24", "79.8387, -160.467, -35.2166, 0.6", "80.2847, -161.033, -35.2132, 0.6", "80.6661, -161.52, -35.2132, 0.6", "80.8976, -161.823, -35.2225, 0.6", "81.3918, -162.489, -35.2582, 0.36", "81.7205, -162.933, -35.2907, 0.36", "81.9345, -163.199, -35.3133, 0.72", "82.5617, -163.893, -35.3789, 0.72", "83.1176, -164.438, -35.4326, 0.72", "83.5229, -164.805, -35.4676, 0.48", "84.1193, -165.312, -35.5138, 0.48", "84.8801, -165.937, -35.5641, 0.48", "85.4282, -166.385, -35.5863, 0.36", "85.966, -166.82, -35.5914, 0.36", "86.4972, -167.283, -35.5762, 0.36", "86.7479, -167.524, -35.5667, 0.6", "86.9866, -167.777, -35.5554, 0.6", "87.4536, -168.317, -35.5295, 0.72", "87.7885, -168.709, -35.5105, 0.48", "88.045, -169.002, -35.4967, 0.48", "88.3485, -169.326, -35.4922, 0.6", "88.8333, -169.825, -35.5001, 0.6", "89.0961, -170.098, -35.5117, 0.36", "89.468, -170.503, -35.538, 0.48", "89.6976, -170.765, -35.5606, 0.48", "90.2981, -171.466, -35.6296, 0.36", "90.6257, -171.863, -35.6709, 0.36", "91.0354, -172.385, -35.7232, 0.6", "91.532, -173.035, -35.7832, 0.6", "91.9063, -173.573, -35.8254, 0.36", "92.1886, -174.017, -35.8548, 0.36", "92.4495, -174.465, -35.8946, 0.36", "92.9187, -175.348, -35.9912, 0.36", "93.1444, -175.815, -36.0471, 0.72", "93.4384, -176.508, -36.1502, 0.72", "93.7091, -177.236, -36.2669, 0.84", "94.1208, -178.466, -36.476, 0.48", "94.4137, -179.415, -36.6627, 0.36", "94.5807, -179.994, -36.7871, 0.36", "94.829, -180.863, -36.9761, 0.72", "95.0496, -181.598, -37.1283, 0.72", "95.3321, -182.485, -37.2873, 0.72", "95.6087, -183.277, -37.3978, 0.6", "95.8541, -183.861, -37.4678, 0.12", "96.1616, -184.508, -37.5245, 0.12", "96.3589, -184.882, -37.5387, 0.48", "96.6774, -185.411, -37.5481, 0.6", "97.0184, -185.934, -37.5442, 0.48", "97.4614, -186.583, -37.5225, 0.36", "97.6817, -186.907, -37.515, 0.36", "98.1775, -187.648, -37.5072, 0.36", "98.6811, -188.382, -37.4271, 0.36", "99.0739, -188.906, -37.304, 0.36", "99.516, -189.425, -37.1099, 0.36", "99.8319, -189.76, -36.9405, 0.72", "100.276, -190.207, -36.6712, 1.08", "101.432, -191.328, -35.8976, 0.96", "101.884, -191.76, -35.6065, 0.36", "102.143, -192.006, -35.4585, 0.36", "102.591, -192.45, -35.2645, 0.36", "103.006, -192.898, -35.1698, 0.36", "103.399, -193.373, -35.1848, 0.36", "103.865, -193.929, -35.296, 0.48", "104.189, -194.3, -35.3745, 0.48", "104.556, -194.67, -35.4514, 0.36", "104.948, -195.008, -35.4945, 0.36", "105.598, -195.507, -35.5138, 0.36", "106.757, -196.335, -35.4605, 0.36", "107.265, -196.674, -35.4016, 0.36", "107.771, -197.005, -35.3288, 0.72", "108.54, -197.525, -35.1944, 0.6", "108.807, -197.727, -35.144, 0.48", "109.268, -198.117, -35.052, 0.48", "109.996, -198.772, -34.919, 0.48", "110.515, -199.24, -34.8192, 0.6", "110.838, -199.536, -34.7647, 0.96", "111.279, -199.944, -34.7097, 1.08", "111.65, -200.282, -34.6544, 0.84", "112.3, -200.884, -34.5424, 0.48", "112.815, -201.347, -34.4451, 0.24", "113.487, -201.887, -34.3235, 0.36", "113.88, -202.178, -34.2592, 0.36", "114.19, -202.403, -34.2142, 0.6", "114.608, -202.753, -34.1624, 0.6", "114.873, -203.008, -34.1422, 0.36", "115.31, -203.457, -34.1422, 0.24", "115.612, -203.783, -34.1422, 0.24", "115.85, -204.052, -34.1542, 0.36", "116.154, -204.441, -34.1819, 0.36", "116.458, -204.868, -34.2198, 0.48", "116.821, -205.458, -34.2761, 0.48", "117.195, -206.154, -34.3823, 0.72", "117.454, -206.661, -34.4796, 0.72", "117.617, -206.99, -34.5493, 0.72", "117.875, -207.545, -34.6697, 0.6", "118.06, -207.985, -34.7764, 0.6", "118.36, -208.747, -34.9694, 0.48", "118.618, -209.408, -35.1335, 0.36", "118.907, -210.114, -35.2932, 0.36", "119.162, -210.719, -35.4369, 0.36", "119.422, -211.36, -35.5878, 0.48", "119.576, -211.775, -35.6745, 0.48", "119.702, -212.204, -35.7415, 0.6", "119.802, -212.638, -35.8056, 0.6", "119.892, -213.1, -35.886, 0.6", "119.976, -213.603, -35.9748, 0.6", "120.074, -214.345, -36.0887, 0.48", "120.15, -215.094, -36.2232, 0.48", "120.198, -215.708, -36.3389, 0.6", "120.264, -216.508, -36.5049, 0.72", "120.33, -217.118, -36.6504, 0.72", "120.483, -218.177, -36.9734, 0.72", "120.623, -218.899, -37.2134, 1.08", "120.754, -219.479, -37.4073, 1.08", "120.926, -220.187, -37.634, 0.72", "121.191, -221.156, -37.9068, 0.48", "121.562, -222.355, -38.2432, 0.96", "121.989, -223.626, -38.6042, 0.36", "122.155, -224.138, -38.7373, 0.36", "122.304, -224.664, -38.8589, 0.72", "122.6, -225.909, -39.089, 0.84", "122.75, -226.694, -39.2009, 0.84", "122.839, -227.317, -39.2714, 0.48", "122.923, -228.224, -39.3736, 0.48", "123.004, -229.458, -39.5371, 0.48", "123.034, -230.355, -39.6632, 0.48", "123.041, -230.978, -39.7501, 0.48", "123.039, -231.481, -39.8286, 0.72", "123.037, -232.112, -39.9453, 0.72", "123.037, -233.093, -40.1794, 0.36", "123.027, -233.431, -40.2874, 0.36", "123.005, -233.916, -40.4616, 0.36", "122.977, -234.686, -40.7391, 0.24", "122.933, -235.753, -41.102, 0.24", "122.926, -236.012, -41.1814, 0.72", "122.919, -236.729, -41.3499, 0.36", "122.937, -237.469, -41.495, 0.36", "122.966, -237.985, -41.5845, 0.36", "123.027, -238.658, -41.6716, 0.48", "123.06, -238.926, -41.7056, 0.12", "123.213, -239.802, -41.7323, 0.12", "123.331, -240.295, -41.7011, 0.12", "123.473, -240.781, -41.6476, 0.84", "123.681, -241.366, -41.5709, 0.96", "123.933, -241.975, -41.4929, 0.96", "124.473, -243.203, -41.2575, 0.24", "124.695, -243.692, -41.1443, 0.48", "125.236, -244.827, -40.8562, 0.48", "125.866, -246.08, -40.5189, 0.48", "126.283, -246.878, -40.3151, 0.48", "126.974, -248.179, -40.0239, 0.48", "127.326, -248.84, -39.9098, 0.48", "127.652, -249.441, -39.7625, 0.84", "127.855, -249.814, -39.6387, 0.84", "128.096, -250.235, -39.462, 0.12", "128.437, -250.8, -39.195, 0.12", "128.5, -250.892, -39.1422, 0.36", "129.15, -251.819, -38.3803, 0.12", "129.301, -252.058, -38.146, 0.12", "129.587, -252.535, -37.6517, 0.12", "129.587, -252.535, -37.6517, 0.36", "129.956, -253.18, -36.8253, 0.12", "130.084, -253.417, -36.561, 0.12", "130.198, -253.667, -36.3166, 0.72", "130.344, -254.063, -35.9643, 0.84", "130.764, -255.525, -34.8301, 0.6", "130.86, -255.883, -34.582, 0.12", "131.02, -256.449, -34.2547, 0.12", "131.239, -257.096, -33.8906, 0.12", "131.482, -257.724, -33.5713, 0.12", "131.667, -258.158, -33.3997, 0.12", "131.667, -258.158, -33.3997, 0.6", "132.0, -258.857, -33.2065, 0.6", "132.368, -259.618, -33.0065, 0.48", "132.64, -260.154, -32.8808, 0.48", "133.008, -260.885, -32.712, 0.48", "133.316, -261.527, -32.5837, 0.24", "133.623, -262.213, -32.4744, 0.24", "133.771, -262.558, -32.3905, 0.6", "133.974, -263.026, -32.2531, 0.72", "134.246, -263.607, -32.0594, 0.72", "134.461, -264.023, -31.9143, 0.12", "134.73, -264.482, -31.7563, 0.12", "135.751, -266.046, -31.1772, 0.12", "136.059, -266.475, -31.0147, 0.96", "136.352, -266.859, -30.8801, 0.12", "136.798, -267.387, -30.7203, 0.12", "136.98, -267.587, -30.6691, 0.12", "137.23, -267.835, -30.6252, 0.6", "137.511, -268.101, -30.6034, 0.6", "137.955, -268.492, -30.5131, 0.48", "138.283, -268.769, -30.4145, 0.48", "138.789, -269.178, -30.2429, 0.72", "139.224, -269.518, -30.0937, 0.36", "139.694, -269.878, -29.933, 0.12", "140.234, -270.287, -29.7175, 0.12", "140.435, -270.44, -29.6286, 0.48", "140.762, -270.702, -29.4929, 0.6", "141.24, -271.121, -29.3197, 0.72", "141.481, -271.351, -29.2242, 0.72", "142.127, -271.987, -28.9432, 0.12", "142.282, -272.145, -28.8645, 0.12", "142.745, -272.613, -28.5868, 0.12", "142.982, -272.846, -28.4328, 0.12", "143.484, -273.336, -28.0745, 0.48", "143.721, -273.56, -27.9086, 0.48", "143.983, -273.789, -27.7492, 0.96", "144.621, -274.299, -27.3796, 0.48", "144.948, -274.533, -27.205, 0.48", "145.433, -274.847, -26.9869, 0.48", "145.779, -275.038, -26.8205, 0.48", "146.104, -275.168, -26.6138, 0.12", "146.201, -275.187, -26.5468, 0.12", "146.516, -275.202, -26.3344, 0.72", "146.831, -275.192, -26.1244, 0.72", "148.022, -275.127, -25.4141, 0.12", "148.639, -275.093, -25.0785, 0.12", "149.398, -275.069, -24.6998, 0.12", "149.64, -275.066, -24.5846, 0.12", "150.035, -275.06, -24.4044, 0.48", "150.685, -275.046, -24.1469, 0.48", "151.412, -275.027, -23.9262, 0.72", "151.915, -275.013, -23.7798, 0.84", "153.024, -274.973, -23.42, 0.36", "153.719, -274.962, -23.1912, 0.12", "154.331, -274.972, -22.9846, 0.24", "154.901, -275.011, -22.8018, 0.24", "155.418, -275.089, -22.6781, 0.24", "155.88, -275.186, -22.6095, 0.72", "156.557, -275.373, -22.5984, 0.72", "157.087, -275.539, -22.6666, 0.72", "157.823, -275.774, -22.8322, 0.36", "158.526, -275.948, -23.052, 0.48", "158.984, -276.011, -23.23, 0.6", "159.629, -276.029, -23.526, 0.6", "160.593, -275.958, -24.0615, 0.12", "160.902, -275.914, -24.2554, 0.12", "161.437, -275.828, -24.6144, 0.12", "161.89, -275.771, -24.906, 0.48", "162.032, -275.769, -24.9995, 0.48", "162.656, -275.883, -25.3893, 0.12", "162.863, -275.98, -25.5334, 0.12", "163.257, -276.202, -25.8296, 0.12", "163.504, -276.36, -26.01, 0.48", "163.858, -276.556, -26.2714, 0.48", "164.232, -276.685, -26.5479, 0.12", "164.829, -276.76, -26.9688, 0.6", "165.362, -276.761, -27.3346, 0.72", "165.681, -276.732, -27.5384, 0.72", "166.31, -276.655, -27.9176, 0.72", "167.107, -276.55, -28.3387, 0.12", "167.416, -276.51, -28.4743, 0.12", "167.896, -276.456, -28.6575, 0.12", "168.249, -276.424, -28.784, 0.12", "168.714, -276.382, -28.9239, 0.6", "169.533, -276.32, -29.1032, 0.6", "170.168, -276.251, -29.2046, 0.72", "170.594, -276.187, -29.2623, 0.12", "171.078, -276.092, -29.3114, 0.12", "171.563, -275.998, -29.3439, 0.6", "172.052, -275.916, -29.3595, 0.6", "172.545, -275.877, -29.3681, 0.84", "173.509, -275.929, -29.3061, 0.84", "174.215, -276.059, -29.2091, 0.36", "174.792, -276.255, -29.072, 0.36", "175.17, -276.435, -28.9502, 0.36", "175.796, -276.812, -28.7073, 0.36", "176.736, -277.493, -28.3025, 0.72", "177.057, -277.759, -28.1595, 0.72", "177.741, -278.342, -27.8689, 0.36", "178.114, -278.65, -27.7307, 0.36", "178.539, -278.973, -27.6186, 0.36", "178.869, -279.205, -27.5763, 0.48", "179.257, -279.469, -27.5905, 0.24", "179.551, -279.686, -27.615, 0.24", "179.929, -280.019, -27.7062, 0.6", "180.405, -280.504, -27.8501, 0.6", "180.665, -280.781, -27.9335, 0.6", "181.195, -281.33, -28.0975, 0.96", "181.577, -281.706, -28.213, 0.96", "182.357, -282.38, -28.4899, 0.36", "182.704, -282.62, -28.6221, 0.36", "183.222, -282.894, -28.8169, 0.36", "183.603, -283.045, -28.9457, 0.36", "183.956, -283.149, -29.045, 0.72", "184.619, -283.301, -29.1811, 0.36", "185.142, -283.396, -29.2218, 0.36", "185.67, -283.501, -29.2361, 0.36", "186.153, -283.611, -29.2263, 0.36", "186.781, -283.765, -29.1884, 0.48", "187.375, -283.907, -29.1301, 0.48", "188.109, -284.07, -29.0437, 0.36", "188.634, -284.169, -28.9909, 0.36", "189.247, -284.266, -28.9427, 0.36", "189.841, -284.35, -28.9119, 0.36", "190.198, -284.396, -28.9059, 0.36", "190.763, -284.465, -28.9208, 0.24", "191.12, -284.505, -28.9476, 0.24", "191.597, -284.547, -28.9807, 0.36", "191.971, -284.576, -29.0141, 0.36", "192.462, -284.612, -29.0621, 0.12", "192.838, -284.655, -29.0976, 0.72", "193.428, -284.762, -29.1341, 1.2", "193.908, -284.887, -29.1572, 1.2", "194.886, -285.204, -29.2079, 0.36", "195.113, -285.285, -29.2197, 0.36", "195.909, -285.613, -29.2587, 0.36", "196.509, -285.915, -29.2848, 0.84", "197.102, -286.295, -29.3048, 0.48", "197.54, -286.628, -29.3131, 0.36", "198.002, -287.03, -29.2979, 0.24", "198.384, -287.383, -29.2794, 0.24", "198.856, -287.832, -29.2513, 0.24", "199.524, -288.486, -29.2295, 0.24", "199.831, -288.805, -29.2173, 0.6", "200.146, -289.138, -29.2026, 0.48", "200.336, -289.337, -29.1966, 0.36", "200.981, -289.942, -29.1972, 0.36", "201.399, -290.268, -29.2114, 0.12", "201.832, -290.532, -29.2404, 0.12", "202.31, -290.784, -29.2853, 0.12", "202.466, -290.856, -29.2931, 0.48", "202.724, -290.963, -29.2878, 0.12", "203.085, -291.111, -29.253, 0.12", "203.746, -291.413, -29.1425, 0.72", "204.089, -291.568, -29.0759, 0.72", "204.842, -291.913, -28.9205, 0.24", "205.223, -292.1, -28.8216, 0.24", "205.537, -292.28, -28.7276, 0.24", "205.834, -292.493, -28.6056, 0.24", "206.306, -292.882, -28.3659, 0.24", "206.482, -293.04, -28.2715, 0.24", "207.213, -293.708, -27.9051, 0.24", "207.595, -294.044, -27.7304, 0.96", "208.344, -294.681, -27.418, 0.48", "208.827, -295.076, -27.2471, 0.36", "209.203, -295.384, -27.1429, 0.6", "209.767, -295.798, -27.0186, 0.84", "210.237, -296.098, -26.9555, 0.12", "210.453, -296.206, -26.936, 0.12", "211.163, -296.484, -26.9088, 0.12", "211.824, -296.708, -26.8774, 0.96", "212.601, -296.943, -26.8203, 0.12", "213.019, -297.055, -26.7825, 0.12", "213.642, -297.201, -26.6842, 0.12", "213.903, -297.245, -26.6376, 0.12", "214.166, -297.262, -26.5874, 0.12", "214.801, -297.26, -26.4681, 0.48", "215.31, -297.25, -26.3951, 0.48", "216.117, -297.265, -26.2825, 0.12", "216.545, -297.3, -26.2261, 0.12", "217.034, -297.356, -26.1718, 0.12", "217.468, -297.412, -26.1433, 0.36", "217.85, -297.48, -26.1417, 0.12", "218.271, -297.585, -26.167, 0.12", "218.5, -297.65, -26.198, 0.12", "218.959, -297.784, -26.2581, 0.6", "219.293, -297.845, -26.2941, 0.12", "219.89, -297.885, -26.3434, 0.12", "220.5, -297.879, -26.3837, 0.12", "220.739, -297.858, -26.3997, 0.36", "220.976, -297.825, -26.4149, 0.24", "221.982, -297.639, -26.5006, 0.24", "222.354, -297.567, -26.5328, 0.48", "222.63, -297.508, -26.5596, 0.12", "223.059, -297.412, -26.6047, 0.12", "223.429, -297.33, -26.6455, 0.36", "223.842, -297.244, -26.6938, 0.12", "226.077, -296.853, -26.9716, 0.12", "226.404, -296.801, -27.0102, 0.48" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "17.7818, -9.74916, -10.0811, 0.36", "18.6983, -9.41712, -9.93517, 0.36", "19.453, -9.16758, -9.78737, 0.36", "20.0219, -8.96674, -9.66804, 0.48", "20.6143, -8.72913, -9.54408, 0.48", "21.5258, -8.24957, -9.27888, 0.12", "22.232, -7.76839, -9.04549, 0.12", "22.4838, -7.52801, -8.92808, 0.48", "22.8818, -6.99925, -8.71776, 0.48", "23.1724, -6.47856, -8.54559, 0.24", "23.7669, -5.16601, -8.15667, 0.36", "24.2144, -4.00057, -7.86554, 0.36", "24.6069, -2.81495, -7.58296, 0.6", "24.9035, -1.85097, -7.36301, 1.08", "25.2634, -0.609788, -7.08649, 0.84", "25.512, 0.277019, -6.89948, 0.48", "25.8258, 1.39663, -6.70181, 0.96", "25.9903, 2.00328, -6.58552, 1.08", "26.2654, 2.91887, -6.40999, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-12.5686, -1.9955, 8.1156, 0.48", "-13.1784, -0.893838, 8.0089, 0.48", "-13.5921, -0.196502, 7.9919, 0.24", "-14.0658, 0.486751, 8.004, 0.24", "-14.6543, 1.19646, 8.03618, 0.72", "-15.0154, 1.57229, 8.06246, 0.96", "-15.8977, 2.35759, 8.13123, 0.48", "-16.7093, 2.87406, 8.22647, 0.36", "-17.3751, 3.1772, 8.30501, 0.36", "-18.2498, 3.44454, 8.37801, 0.6", "-18.7347, 3.55356, 8.40235, 0.36", "-19.4433, 3.681, 8.44295, 0.48", "-20.4191, 3.82542, 8.55622, 0.72", "-21.2445, 3.9301, 8.67605, 1.08", "-22.0968, 4.02183, 8.84698, 0.96", "-22.8321, 4.06587, 9.03018, 0.96", "-23.5942, 4.07064, 9.27539, 0.72", "-24.7206, 3.97509, 9.76099, 0.6", "-25.6114, 3.7018, 10.295, 0.36", "-25.8592, 3.5293, 10.526, 0.36", "-26.259, 3.08739, 11.0148, 0.36", "-26.7692, 2.429, 11.7222, 0.48", "-27.0879, 2.01424, 12.1739, 0.48", "-27.523, 1.56406, 12.6915, 0.48", "-28.1188, 1.2675, 13.2563, 0.48", "-28.7935, 1.13718, 13.7557, 0.48", "-29.7009, 1.07116, 14.3192, 0.48", "-30.2479, 1.0535, 14.5751, 0.24", "-30.7539, 1.04422, 14.7669, 0.24", "-31.3672, 1.05875, 14.9925, 0.6", "-32.0318, 1.08787, 15.2097, 0.6", "-32.6835, 1.19178, 15.4289, 0.72", "-33.5046, 1.48844, 15.6747, 0.12", "-33.8899, 1.73416, 15.8538, 0.12", "-34.6584, 2.34077, 16.2874, 0.12", "-35.1591, 2.79882, 16.5984, 0.48", "-35.9175, 3.55396, 17.1303, 0.6", "-36.3052, 3.92691, 17.4155, 0.6", "-37.2624, 4.63359, 18.162, 0.36", "-37.7709, 4.81069, 18.5673, 0.36", "-38.0566, 4.80598, 18.7863, 0.36", "-38.3959, 4.74334, 19.048, 0.36", "-38.8952, 4.6174, 19.4465, 0.6", "-39.7342, 4.44451, 20.1112, 0.84", "-40.8039, 4.31308, 20.9262, 0.6", "-41.5524, 4.27811, 21.5285, 0.48", "-41.9256, 4.27974, 21.8384, 0.48", "-42.4621, 4.31339, 22.3002, 0.36", "-42.9156, 4.37726, 22.7065, 0.36", "-43.4058, 4.4917, 23.1175, 0.48", "-43.9974, 4.71044, 23.5067, 0.72", "-44.0891, 4.75881, 23.569, 0.72", "-44.6763, 5.1279, 23.9514, 0.72", "-45.0616, 5.40673, 24.2158, 0.48", "-45.5618, 5.80102, 24.5489, 0.48", "-46.1265, 6.28177, 24.9036, 0.6", "-47.201, 7.13526, 25.4908, 0.24", "-47.8793, 7.5766, 25.8034, 0.24", "-49.0767, 8.21713, 26.2697, 0.48", "-49.842, 8.5414, 26.5209, 0.36", "-50.1727, 8.65781, 26.6101, 0.36", "-51.4357, 8.9732, 26.8774, 0.36", "-52.6545, 9.1165, 27.0275, 0.36", "-53.1324, 9.11247, 27.0714, 0.36", "-53.7404, 9.0447, 27.0967, 0.36", "-54.5919, 8.89017, 27.1416, 0.36", "-55.2954, 8.73557, 27.1852, 0.24", "-55.7986, 8.58724, 27.2221, 0.24", "-56.3651, 8.33703, 27.2621, 0.24", "-56.8932, 8.05027, 27.3427, 0.24", "-57.4299, 7.75409, 27.451, 0.24", "-57.7689, 7.58707, 27.5441, 0.24", "-58.214, 7.40697, 27.7008, 0.48", "-59.3368, 6.9713, 28.1416, 0.36", "-60.2144, 6.66464, 28.5426, 0.24", "-60.9506, 6.47017, 28.9749, 0.24", "-61.7408, 6.26287, 29.5031, 0.48", "-62.3985, 6.09152, 29.9782, 0.24", "-62.9924, 5.92801, 30.4298, 0.24", "-63.6347, 5.69685, 30.9197, 0.12", "-64.9758, 4.93833, 31.8572, 1.68", "-65.7006, 4.28395, 32.358, 0.36", "-65.8486, 4.10712, 32.4436, 0.36", "-66.2715, 3.566, 32.6259, 0.24", "-66.9559, 2.64381, 32.8303, 0.24", "-67.231, 2.22644, 32.8705, 0.24", "-67.6233, 1.59247, 32.8664, 0.24", "-67.903, 1.1829, 32.8704, 0.24", "-68.4543, 0.458433, 32.8808, 0.24", "-68.9203, -0.0597399, 32.8914, 0.24", "-69.6166, -0.738023, 32.9089, 0.24", "-69.8937, -0.990158, 32.9164, 0.24", "-70.1773, -1.2396, 32.9248, 0.24", "-70.7145, -1.8021, 32.9438, 0.24", "-71.0279, -2.20065, 32.9574, 0.24", "-71.7024, -2.83325, 32.9834, 0.24", "-80.9866, -3.06407, 36.692, 0.24", "-90.3732, -1.81874, 39.9303, 0.24", "-99.3455, -0.309609, 44.1053, 0.24", "-108.205, 1.23498, 48.505, 0.24", "-116.757, 1.56638, 53.6779, 0.24", "-125.048, 2.66504, 59.1701, 0.24", "-133.36, 2.39073, 64.7241, 0.24", "-140.863, 1.43524, 71.2715, 0.24", "-147.209, 1.13861, 78.9952, 0.24", "-153.836, -1.00916, 86.1991, 0.24", "-160.435, -5.24093, 92.5406, 0.24", "-166.67, -9.05473, 99.4631, 0.24" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-12.5686, -1.9955, 8.1156, 0.12", "-13.6662, -4.10355, 2.06423, 0.12", "-13.8216, -4.38479, 1.41421, 0.12", "-13.9727, -4.63645, 0.969002, 0.48", "-14.1227, -4.86151, 0.694142, 0.48", "-14.6781, -5.61916, 0.0798973, 0.48", "-15.072, -6.10298, -0.209572, 0.12", "-15.6727, -6.72004, -0.0917638, 0.6", "-16.1235, -7.12066, -0.0281646, 0.6", "-16.7258, -7.6186, 0.024484, 0.6", "-17.2008, -8.0033, 0.0364676, 0.6", "-17.7406, -8.43948, 0.00469697, 0.24", "-18.1635, -8.78611, 0.0235317, 0.24", "-18.4312, -9.00187, 0.0598087, 0.24", "-18.7756, -9.26767, 0.126487, 0.84", "-19.1746, -9.55853, 0.221036, 0.96", "-19.7958, -9.99114, 0.379738, 0.96", "-21.0189, -10.8132, 0.698363, 0.72", "-21.6646, -11.2012, 0.848447, 0.6", "-22.7006, -11.7468, 1.05831, 0.6", "-23.0332, -11.8971, 1.11626, 0.6", "-23.5401, -12.0822, 1.18648, 0.36", "-24.2132, -12.2724, 1.24671, 0.36", "-25.1749, -12.4697, 1.25965, 0.36", "-25.7806, -12.5563, 1.28691, 0.36", "-26.0475, -12.5764, 1.30687, 0.6", "-26.5807, -12.6061, 1.36069, 1.08", "-26.9565, -12.623, 1.41099, 1.08", "-27.4444, -12.6493, 1.48891, 1.08", "-28.2042, -12.7272, 1.62039, 0.12", "-28.6692, -12.8094, 1.71041, 0.12", "-29.0006, -12.8933, 1.7725, 0.12", "-29.329, -12.9958, 1.84397, 0.12", "-29.791, -13.1479, 1.94576, 0.6", "-30.4661, -13.3649, 2.08726, 0.6", "-30.9241, -13.5047, 2.17711, 0.72", "-31.984, -13.8053, 2.38994, 0.84", "-32.8495, -14.037, 2.55775, 0.48", "-33.4376, -14.1738, 2.66529, 0.48", "-34.1447, -14.33, 2.79016, 0.48", "-34.6283, -14.4361, 2.86748, 0.36", "-34.9956, -14.5062, 2.91518, 0.36", "-35.681, -14.6207, 3.00484, 0.36", "-36.4185, -14.7314, 3.14954, 0.36", "-37.388, -14.8628, 3.40977, 0.36", "-38.0131, -14.9329, 3.59534, 0.36", "-38.6023, -14.9774, 3.75474, 0.36", "-39.2273, -14.9881, 3.9117, 0.36", "-40.5003, -14.9282, 4.20345, 0.48", "-41.2065, -14.8609, 4.32837, 0.72", "-41.8739, -14.754, 4.38036, 0.72", "-42.7727, -14.6148, 4.33787, 0.36", "-43.2657, -14.5594, 4.2587, 0.36", "-43.6328, -14.5493, 4.1631, 0.36", "-44.081, -14.5796, 4.01938, 0.6", "-44.8955, -14.727, 3.78172, 0.72", "-45.9332, -15.0158, 3.5806, 0.72", "-46.6306, -15.2507, 3.54346, 0.36", "-47.466, -15.5007, 3.66063, 0.36", "-48.0077, -15.6524, 3.85722, 0.36", "-48.4567, -15.7763, 4.12642, 0.36", "-49.1497, -15.9722, 4.70697, 0.48", "-49.9351, -16.1823, 5.46013, 0.48", "-51.334, -16.4873, 7.05937, 0.48", "-51.8897, -16.5655, 7.7293, 0.48", "-52.2306, -16.6159, 8.12929, 0.48", "-52.6186, -16.6781, 8.58311, 0.48", "-53.2483, -16.8195, 9.24267, 0.48", "-54.7259, -17.3094, 10.6018, 0.48", "-55.1228, -17.4741, 10.8797, 0.48", "-55.5828, -17.5682, 11.2544, 0.48", "-64.8977, -20.1708, 13.9169, 0.48", "-74.0355, -22.679, 17.2024, 0.48", "-83.6921, -23.9994, 19.4757, 0.48", "-93.6199, -24.673, 20.4899, 0.48", "-103.537, -26.0172, 20.3544, 0.48", "-113.233, -28.5418, 20.8184, 0.48", "-122.492, -32.4316, 21.5527, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-19.2475, 36.151, -18.2977, 0.12", "-21.1802, 36.6947, -18.4767, 0.12", "-22.6419, 37.0308, -18.8474, 0.12", "-23.0415, 37.1169, -18.9646, 0.12", "-23.7354, 37.2325, -19.1624, 0.6", "-24.5472, 37.3457, -19.3845, 0.84", "-25.0214, 37.3993, -19.5072, 0.84", "-26.112, 37.467, -19.9297, 0.12", "-26.8381, 37.4629, -20.1812, 0.12", "-27.6547, 37.4489, -20.4916, 0.12", "-27.9875, 37.4678, -20.6275, 0.96", "-28.4355, 37.523, -20.8252, 0.96", "-29.7064, 37.7158, -21.3942, 0.24", "-30.4819, 37.8113, -21.7266, 0.24", "-30.8544, 37.8382, -21.9283, 0.24", "-31.8265, 37.8744, -22.5197, 0.6", "-32.3343, 37.8597, -22.8574, 0.24", "-32.6323, 37.8451, -23.0589, 0.24", "-33.3375, 37.7631, -23.4896, 0.24", "-34.1033, 37.5961, -23.9809, 0.84", "-34.6017, 37.4459, -24.2908, 0.84", "-35.4053, 37.2056, -24.7295, 0.24", "-35.7934, 37.1436, -24.8907, 0.24", "-36.148, 37.1221, -25.0242, 0.24", "-36.6265, 37.1209, -25.1764, 0.24", "-36.7616, 37.1173, -25.2085, 0.12", "-37.5036, 37.0904, -25.366, 0.12", "-38.2063, 37.0655, -25.562, 0.48", "-38.9088, 37.0417, -25.8097, 0.12", "-39.4757, 37.0324, -26.0396, 0.12", "-40.0376, 37.0412, -26.2818, 0.48", "-40.4353, 37.0521, -26.4518, 0.48", "-41.7017, 37.1201, -26.9872, 0.12", "-42.4725, 37.1955, -27.3345, 0.12", "-42.6203, 37.2153, -27.4158, 0.12", "-43.1486, 37.3109, -27.793, 0.6", "-43.7209, 37.4104, -28.2335, 0.6", "-44.1443, 37.4704, -28.5583, 0.6", "-44.9325, 37.5757, -29.1253, 0.72", "-46.0913, 37.7263, -30.0382, 0.36", "-46.7952, 37.826, -30.5922, 0.12", "-47.471, 37.9218, -31.1382, 0.12", "-47.769, 37.9648, -31.3695, 0.72", "-48.1598, 38.0195, -31.6686, 0.84", "-48.8214, 38.1154, -32.1089, 0.12", "-49.4856, 38.2067, -32.4853, 0.12", "-50.0947, 38.2821, -32.8151, 0.6", "-50.5034, 38.3374, -33.0802, 0.72", "-51.7357, 38.4748, -33.8844, 0.12", "-52.2424, 38.5144, -34.2035, 0.12", "-52.8394, 38.5629, -34.6034, 0.12", "-53.1487, 38.5875, -34.822, 0.48", "-54.2493, 38.7059, -35.5692, 0.12", "-55.1886, 38.8553, -36.3023, 0.12", "-55.4739, 38.9132, -36.526, 1.08", "-56.6693, 39.1957, -37.5091, 0.12", "-56.9501, 39.2714, -37.754, 0.12", "-57.4995, 39.4489, -38.2038, 0.84", "-58.9226, 39.9718, -39.2477, 0.12", "-59.6592, 40.2845, -39.7997, 0.12", "-60.0481, 40.4637, -40.0536, 0.36", "-60.6173, 40.7418, -40.3492, 0.12", "-61.67, 41.3273, -40.8507, 0.12", "-62.0008, 41.5489, -41.0329, 0.36", "-62.3869, 41.8861, -41.2518, 0.12", "-63.0684, 42.6694, -41.7506, 0.12", "-63.2604, 42.9187, -41.8988, 0.48", "-63.46, 43.1921, -42.047, 0.48", "-64.4839, 44.6291, -42.9801, 0.12", "-65.0709, 45.4141, -43.527, 0.12", "-65.5876, 46.0634, -43.9903, 0.12", "-66.0639, 46.6059, -44.3892, 0.12", "-66.5262, 47.066, -44.7067, 0.6", "-67.5372, 47.9093, -45.3691, 0.12", "-67.8239, 48.107, -45.5313, 0.12", "-68.1594, 48.3002, -45.7333, 0.12", "-68.7914, 48.6285, -46.1216, 0.12", "-69.3304, 48.8903, -46.4358, 0.48", "-70.8256, 49.5492, -47.1702, 0.12", "-71.2488, 49.7167, -47.3709, 0.12", "-72.1779, 50.0264, -47.8201, 0.6", "-72.6031, 50.1423, -48.0135, 0.12", "-73.1582, 50.27, -48.2404, 0.12", "-73.8488, 50.4106, -48.4692, 0.6", "-75.2415, 50.6607, -48.8563, 0.12", "-76.4998, 50.8613, -49.2262, 0.12", "-77.3086, 50.9775, -49.4681, 0.12", "-77.9227, 51.054, -49.6428, 0.12", "-78.7662, 51.1493, -49.8514, 0.12", "-80.0231, 51.2907, -50.0972, 0.12", "-80.8614, 51.3868, -50.1917, 0.12", "-81.36, 51.4474, -50.2427, 0.84", "-82.051, 51.5449, -50.3013, 1.2", "-82.7188, 51.6712, -50.3368, 0.12", "-83.3498, 51.8348, -50.3446, 0.12", "-84.2745, 52.1418, -50.327, 0.12", "-85.0936, 52.4609, -50.3263, 0.48", "-85.4854, 52.6314, -50.3419, 0.12", "-86.4195, 53.0864, -50.4142, 0.12", "-87.0514, 53.3934, -50.4833, 0.12", "-87.67, 53.6838, -50.5589, 0.48", "-88.2975, 53.9715, -50.6759, 0.48", "-88.8163, 54.1963, -50.7937, 0.12", "-89.7824, 54.5888, -51.0748, 0.12", "-90.529, 54.8835, -51.3643, 0.12", "-91.0479, 55.0881, -51.594, 0.48", "-91.8154, 55.3837, -51.9491, 0.12", "-92.6478, 55.689, -52.3353, 0.12", "-93.7999, 56.118, -52.8512, 0.84", "-94.5974, 56.4236, -53.2887, 0.12", "-95.002, 56.6018, -53.5378, 0.12", "-95.5727, 56.8853, -53.8837, 0.12", "-96.2055, 57.2555, -54.3672, 0.12", "-96.5562, 57.4738, -54.6722, 0.36", "-97.5742, 58.1879, -55.6538, 0.12", "-97.9362, 58.4835, -56.0589, 0.12", "-98.2862, 58.8342, -56.5794, 0.48", "-99.3127, 60.194, -58.7649, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-19.2475, 36.151, -18.2977, 0.12", "-19.3211, 36.9595, -18.3631, 0.12", "-19.4506, 38.0695, -18.5208, 0.12", "-19.5476, 38.8086, -18.637, 0.72", "-19.6286, 39.4252, -18.7426, 0.96", "-19.6822, 39.8133, -18.8097, 0.96", "-19.8419, 40.9311, -19.0717, 0.12", "-20.0604, 42.3663, -19.5034, 0.12", "-20.1334, 42.8523, -19.6623, 0.48", "-20.2498, 43.5776, -19.9019, 0.24", "-20.4305, 44.5435, -20.2263, 0.24", "-20.7079, 45.9788, -20.6863, 0.72", "-20.8622, 46.8002, -20.9168, 0.96", "-21.0468, 47.7554, -21.1893, 0.36", "-21.1581, 48.3427, -21.3484, 0.36", "-21.3053, 49.1259, -21.5327, 0.12", "-21.4552, 49.8825, -21.6744, 0.12", "-21.6698, 50.8655, -21.7901, 0.12", "-21.7753, 51.3, -21.8416, 0.6", "-21.9725, 52.0818, -21.9373, 0.12", "-22.1505, 52.8094, -22.0186, 0.12", "-22.3355, 53.5887, -22.0924, 0.48", "-22.4838, 54.118, -22.1412, 0.96", "-22.6473, 54.6525, -22.1869, 0.96", "-22.8148, 55.1872, -22.2266, 0.12", "-23.1013, 56.0131, -22.2759, 0.12", "-23.3982, 56.8286, -22.3264, 0.12", "-23.5225, 57.1676, -22.346, 0.6", "-23.5895, 57.3311, -22.3541, 0.6", "-23.7541, 57.6511, -22.365, 0.12", "-24.0223, 58.0968, -22.4493, 0.12", "-24.3672, 58.6334, -22.6239, 0.12", "-24.7028, 59.1688, -22.8358, 0.72", "-24.9189, 59.5228, -22.9997, 0.96", "-25.452, 60.3955, -23.4841, 0.48", "-26.3418, 61.8281, -24.3559, 0.12", "-26.6933, 62.3719, -24.7119, 0.12", "-27.0032, 62.8224, -25.019, 0.12", "-27.3612, 63.3227, -25.3552, 0.48", "-27.7327, 63.828, -25.6898, 0.12", "-28.2696, 64.5215, -26.0821, 0.12", "-28.5372, 64.8521, -26.2103, 1.08", "-28.8594, 65.2317, -26.3431, 1.32", "-29.1371, 65.5572, -26.4614, 0.96", "-29.7926, 66.348, -26.7302, 0.24", "-30.5326, 67.2514, -27.0947, 0.24", "-31.0942, 67.915, -27.4169, 0.24", "-31.641, 68.5404, -27.7479, 0.24", "-32.2372, 69.1704, -28.0975, 0.96", "-32.5706, 69.4876, -28.3203, 1.2", "-33.4939, 70.308, -28.9737, 0.36", "-34.0353, 70.7583, -29.3873, 0.12", "-34.3252, 70.9914, -29.6091, 0.72", "-34.9348, 71.5065, -30.0812, 0.72", "-36.3398, 72.7506, -31.1171, 0.24", "-36.6859, 73.0743, -31.3696, 0.12", "-37.0166, 73.4018, -31.5988, 0.12", "-37.3345, 73.7463, -31.8235, 0.24", "-38.1245, 74.6702, -32.3474, 0.48", "-38.5092, 75.1661, -32.6071, 0.12", "-38.8548, 75.6379, -32.7981, 0.12", "-38.9528, 75.7715, -32.8529, 0.72", "-39.3951, 76.3821, -33.0908, 0.84", "-39.7342, 76.8599, -33.2594, 0.84", "-40.5843, 78.0335, -33.7503, 0.36", "-41.0171, 78.6353, -34.044, 0.12", "-41.3832, 79.1492, -34.3228, 0.6", "-41.7037, 79.6025, -34.5891, 1.08", "-41.8969, 79.8967, -34.757, 1.08", "-42.747, 81.2688, -35.4742, 0.12", "-43.0583, 81.8003, -35.7036, 0.12", "-43.2635, 82.1648, -35.8604, 0.48", "-43.58, 82.775, -36.0878, 0.12", "-44.1841, 83.9818, -36.4533, 0.12", "-44.3832, 84.3751, -36.5384, 0.72", "-44.7073, 85.0208, -36.6185, 0.84", "-45.0377, 85.6491, -36.6949, 0.12", "-45.5274, 86.546, -36.7934, 0.12", "-45.8317, 87.0843, -36.842, 0.12", "-46.2836, 87.8352, -36.9081, 0.6", "-46.578, 88.3167, -36.9427, 0.36", "-46.8581, 88.7624, -36.9656, 0.6", "-47.2442, 89.3729, -37.0146, 0.84", "-47.4463, 89.696, -37.0517, 0.84", "-47.8998, 90.4626, -37.152, 0.24", "-48.4216, 91.3747, -37.3005, 0.12", "-48.8038, 92.0626, -37.4237, 0.48", "-49.4406, 93.2582, -37.658, 0.12", "-49.9796, 94.3265, -37.8811, 0.12", "-50.2629, 94.9213, -38.0088, 0.48", "-50.4863, 95.4205, -38.1138, 0.12", "-50.7872, 96.1387, -38.2464, 0.12", "-50.8796, 96.3683, -38.2817, 0.36", "-51.1599, 97.0613, -38.378, 0.12", "-51.3147, 97.4201, -38.4353, 0.12", "-51.75, 98.3815, -38.5804, 0.48", "-52.151, 99.2351, -38.6966, 1.2", "-52.4624, 99.8603, -38.7833, 0.6", "-52.7928, 100.509, -38.8836, 0.12", "-53.4014, 101.686, -39.0752, 0.12", "-54.0852, 102.998, -39.2936, 0.12", "-54.2898, 103.392, -39.3584, 0.12", "-54.5744, 103.931, -39.4394, 0.6", "-54.9312, 104.611, -39.5487, 0.12", "-55.3098, 105.335, -39.6698, 0.12", "-55.5524, 105.794, -39.7671, 0.72", "-55.8114, 106.271, -39.889, 0.72", "-56.0183, 106.647, -39.9851, 0.72", "-56.4532, 107.452, -40.2608, 0.12", "-56.9128, 108.345, -40.598, 0.12", "-57.1657, 108.871, -40.8101, 0.12", "-57.6106, 109.872, -41.2048, 0.48", "-57.9348, 110.65, -41.514, 0.48", "-58.477, 112.008, -42.0336, 0.12", "-58.8613, 113.021, -42.3866, 0.12", "-59.0752, 113.615, -42.6121, 0.12", "-59.3532, 114.419, -42.9092, 0.12", "-59.4879, 114.818, -43.041, 0.72", "-59.6821, 115.385, -43.2167, 0.72", "-59.8487, 115.849, -43.3293, 0.48", "-60.13, 116.624, -43.5396, 0.12", "-60.4488, 117.529, -43.8807, 0.12", "-60.5974, 117.988, -44.0715, 0.36", "-60.7336, 118.419, -44.2336, 0.12", "-60.9458, 119.103, -44.456, 0.12", "-61.0939, 119.578, -44.5924, 0.48", "-61.6338, 121.326, -45.0256, 0.24", "-61.9614, 122.367, -45.2897, 0.24", "-62.4814, 124.024, -45.6903, 0.24", "-62.9861, 125.645, -46.0398, 0.24", "-63.1055, 126.016, -46.1133, 0.24", "-63.2621, 126.491, -46.1909, 0.48", "-63.492, 127.163, -46.2655, 0.12", "-63.7698, 127.853, -46.3642, 0.12", "-63.9862, 128.314, -46.4381, 0.12", "-64.2401, 128.771, -46.5085, 0.48", "-64.4364, 129.097, -46.5551, 0.72", "-64.946, 129.886, -46.651, 0.12", "-65.8733, 131.257, -46.7799, 0.12", "-66.638, 132.343, -46.9333, 0.12", "-67.0903, 132.985, -47.0418, 0.12", "-67.2605, 133.233, -47.0871, 0.84", "-67.6014, 133.746, -47.1866, 0.96", "-68.1259, 134.576, -47.3461, 0.72", "-68.693, 135.541, -47.5462, 0.12", "-69.4062, 136.765, -47.8024, 0.12", "-69.7336, 137.327, -47.9566, 0.36", "-70.2781, 138.267, -48.2471, 0.12", "-70.7342, 139.104, -48.5218, 0.12", "-70.9729, 139.582, -48.6775, 0.12", "-71.1841, 140.029, -48.8132, 0.72", "-71.8978, 141.525, -49.3078, 0.12", "-72.3867, 142.518, -49.7109, 0.12", "-72.7976, 143.333, -50.0746, 0.12", "-73.0043, 143.747, -50.2667, 0.12", "-73.2432, 144.251, -50.536, 0.12", "-73.5419, 144.926, -50.918, 0.36", "-74.0026, 145.949, -51.493, 0.12", "-74.3753, 146.7, -52.0158, 0.12", "-74.5233, 146.97, -52.2202, 0.48", "-75.07, 148.086, -52.9492, 0.24", "-75.1092, 148.187, -53.0087, 0.12", "-75.2599, 148.655, -53.2676, 0.12", "-75.3962, 149.125, -53.4677, 0.12", "-75.5332, 149.592, -53.6549, 0.12", "-75.8858, 150.843, -54.0892, 0.12", "-76.0621, 151.539, -54.3501, 0.36", "-76.1931, 152.189, -54.6364, 0.12", "-76.4403, 153.554, -55.2284, 0.12", "-76.5145, 153.964, -55.3844, 0.6", "-76.6013, 154.384, -55.5257, 0.6", "-77.0042, 155.94, -55.9929, 0.12", "-77.2429, 156.729, -56.2522, 0.12", "-77.9463, 158.779, -56.9724, 0.12", "-78.5215, 160.259, -57.5353, 0.12", "-78.7813, 160.864, -57.7624, 0.12", "-79.009, 161.312, -57.9228, 0.84", "-80.0365, 163.082, -58.5838, 0.12", "-80.3994, 163.633, -58.8482, 0.12", "-80.8173, 164.242, -59.1988, 0.12", "-81.1722, 164.766, -59.4921, 0.12", "-81.5664, 165.379, -59.7746, 0.48", "-82.2191, 166.457, -60.1328, 0.12", "-82.6223, 167.168, -60.2443, 0.12", "-83.2158, 168.251, -60.3654, 0.12", "-83.6822, 169.102, -60.4261, 0.12", "-84.1858, 170.022, -60.4577, 0.48", "-84.4352, 170.488, -60.4571, 0.12", "-85.6072, 172.618, -60.3357, 0.12", "-86.085, 173.453, -60.2842, 0.12", "-86.6353, 174.359, -60.2247, 0.12", "-86.9035, 174.813, -60.1963, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.56637, 35.9502, -0.00167934, 0.12", "-12.2185, 50.4988, -0.00167934, 0.12", "-15.8707, 65.0474, -0.00167934, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "0.160202, 23.5335, -3.15364, 0.96", "-0.0694448, 23.898, -3.64127, 0.96", "-0.356129, 24.3328, -4.1146, 0.96", "-0.65009, 24.7484, -4.46356, 0.6", "-2.22727, 26.9168, -6.03404, 0.72", "-2.57095, 27.393, -6.34032, 0.12", "-3.01918, 28.0395, -6.69814, 0.12", "-3.50014, 28.7824, -7.081, 0.24", "-4.1792, 29.8998, -7.56609, 0.6", "-4.80042, 30.9787, -7.92394, 0.6", "-5.11273, 31.5433, -8.06183, 0.12", "-5.63937, 32.5481, -8.35818, 0.12", "-6.11323, 33.5041, -8.67956, 0.12", "-6.4773, 34.2634, -8.98927, 0.48", "-6.65611, 34.6361, -9.16018, 0.48", "-7.17446, 35.5905, -9.70542, 0.12", "-7.55703, 36.1863, -10.112, 0.12", "-7.8656, 36.6001, -10.4572, 0.6", "-8.39255, 37.2354, -11.0187, 0.12", "-8.80601, 37.7003, -11.4913, 0.12", "-9.71963, 38.7016, -12.5338, 0.12", "-10.1582, 39.1623, -12.9872, 0.12", "-10.5358, 39.5379, -13.3601, 0.12", "-10.9074, 39.9015, -13.6893, 0.96", "-11.7664, 40.7257, -14.3194, 0.12", "-12.0951, 41.0403, -14.5671, 0.12", "-12.6773, 41.5883, -14.9444, 0.12", "-13.0899, 41.9543, -15.1918, 0.96", "-13.5738, 42.3656, -15.4622, 1.08", "-13.7688, 42.5238, -15.5684, 1.08", "-15.1229, 43.6027, -16.2655, 0.24", "-15.8307, 44.1714, -16.6639, 0.12", "-16.5974, 44.7994, -17.1181, 0.12", "-16.9847, 45.1178, -17.341, 0.72", "-17.2945, 45.3795, -17.5122, 0.72", "-17.9707, 45.9956, -17.8335, 0.36", "-18.3092, 46.3355, -17.9431, 0.12", "-18.6462, 46.709, -18.0526, 0.12", "-18.9269, 47.0441, -18.1334, 0.48", "-19.1966, 47.3724, -18.1901, 0.12", "-19.7064, 48.0037, -18.301, 0.12", "-19.9894, 48.3509, -18.3529, 0.12", "-20.456, 48.8917, -18.4339, 0.84", "-20.8642, 49.3446, -18.4864, 0.72", "-21.1705, 49.6644, -18.5107, 0.12", "-21.5078, 49.9963, -18.5153, 0.12", "-22.0086, 50.4773, -18.5026, 0.12", "-22.5198, 50.9835, -18.4727, 0.12", "-22.9986, 51.4676, -18.4261, 0.48", "-23.5479, 52.0267, -18.354, 0.6", "-23.8812, 52.3758, -18.3035, 0.24", "-24.358, 52.882, -18.2701, 0.24", "-24.6595, 53.2074, -18.2849, 0.12", "-25.0068, 53.5938, -18.341, 0.12", "-25.2967, 53.9097, -18.4157, 0.6", "-25.8346, 54.4627, -18.5699, 0.84", "-26.7198, 55.3022, -18.8281, 0.12", "-27.2225, 55.7468, -18.967, 0.12", "-27.6829, 56.1324, -19.0818, 0.24", "-27.9783, 56.3729, -19.1469, 0.12", "-28.7405, 56.9741, -19.2799, 0.12", "-29.1784, 57.3067, -19.3549, 0.48", "-29.6619, 57.6803, -19.4219, 0.12", "-30.0626, 58.0004, -19.4976, 0.12", "-30.2608, 58.1695, -19.5434, 0.48", "-30.6866, 58.5983, -19.6526, 0.48", "-31.257, 59.2351, -19.8959, 0.12", "-31.6382, 59.676, -20.0917, 0.12", "-32.0961, 60.2227, -20.4044, 0.48", "-32.301, 60.4834, -20.5621, 0.12", "-32.9847, 61.4049, -21.0791, 0.12", "-33.8141, 62.5824, -21.6845, 0.84", "-34.1372, 63.0607, -21.9039, 0.84", "-34.8004, 64.0683, -22.37, 0.12", "-35.4118, 65.019, -22.8209, 0.12", "-36.1625, 66.2014, -23.3593, 0.12", "-36.3854, 66.5579, -23.5062, 0.6", "-36.6628, 67.0117, -23.6812, 0.72", "-37.006, 67.566, -23.942, 0.12", "-37.5613, 68.4184, -24.3737, 0.12", "-37.8711, 68.8731, -24.6503, 0.12", "-38.1207, 69.2323, -24.92, 0.72", "-38.7803, 70.1748, -25.6146, 0.72", "-39.2351, 70.8217, -26.072, 0.12", "-39.9538, 71.8844, -26.8341, 0.12", "-40.1579, 72.2102, -27.0561, 0.48", "-40.6438, 73.0678, -27.5762, 0.12", "-41.3946, 74.4839, -28.3215, 0.12", "-41.5078, 74.713, -28.429, 0.48", "-41.9506, 75.7118, -28.8374, 0.12", "-42.3113, 76.6272, -29.2142, 0.12", "-42.7379, 77.8072, -29.663, 0.12", "-42.8228, 78.0564, -29.755, 0.48", "-43.1042, 78.9483, -30.1039, 0.12", "-43.78, 81.0313, -30.944, 0.12", "-43.9516, 81.5434, -31.1408, 0.6", "-44.0614, 81.8767, -31.2704, 0.72", "-44.3311, 82.6757, -31.5662, 0.12", "-44.6111, 83.4911, -31.8335, 0.24", "-44.8408, 84.1212, -31.9985, 0.12", "-45.1592, 84.9407, -32.2007, 0.12", "-45.7334, 86.3725, -32.494, 0.12", "-45.9307, 86.8577, -32.576, 0.48", "-45.9769, 86.9735, -32.5871, 0.12", "-46.2258, 87.5871, -32.6336, 0.12", "-46.3286, 87.8474, -32.6336, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "0.160202, 23.5335, -3.15364, 0.96", "0.11123, 24.533, -3.13351, 0.96", "0.07956, 25.1642, -3.122, 0.96", "0.0157931, 26.1698, -3.10524, 0.6", "-0.0387906, 27.0484, -3.09187, 0.48", "-0.120224, 28.4288, -3.07286, 0.48", "-0.217321, 30.0724, -3.05273, 0.48", "-0.253664, 30.6906, -3.03771, 0.96", "-0.292669, 31.3673, -3.01288, 1.44", "-0.337175, 32.1211, -2.97754, 1.08", "-0.385972, 33.0001, -2.93, 0.84", "-0.447924, 34.1266, -2.86292, 0.84", "-0.475133, 34.8852, -2.81967, 0.36", "-0.501674, 36.2643, -2.75249, 0.36", "-0.503018, 36.7674, -2.72318, 0.72", "-0.495724, 37.7627, -2.65999, 1.32", "-0.4814, 38.2653, -2.628, 1.32", "-0.431369, 39.2783, -2.57071, 0.6", "-0.37102, 40.2807, -2.52802, 0.48", "-0.314586, 41.1582, -2.48628, 0.6", "-0.284997, 41.6659, -2.4614, 0.96", "-0.243709, 42.4289, -2.40658, 0.84", "-0.193232, 43.5466, -2.31005, 0.72", "-0.164366, 44.413, -2.22551, 0.72", "-0.145642, 45.0521, -2.16585, 1.08", "-0.13468, 45.5442, -2.13135, 1.2", "-0.119397, 46.7907, -2.02526, 0.6", "-0.119249, 47.6582, -1.9453, 0.6", "-0.123112, 48.0344, -1.91025, 0.96", "-0.138039, 48.664, -1.85846, 0.96", "-0.163997, 49.3417, -1.82353, 0.84", "-0.227996, 50.5504, -1.79672, 0.36", "-0.325425, 51.9278, -1.80636, 0.36", "-0.386968, 52.6811, -1.80312, 0.72", "-0.46792, 53.5708, -1.78436, 1.08", "-0.589541, 54.7339, -1.74513, 0.6", "-0.700595, 55.7238, -1.70801, 0.48", "-0.77883, 56.3607, -1.6897, 0.48", "-0.916386, 57.4525, -1.64815, 1.2", "-1.04861, 58.4712, -1.60057, 0.48", "-1.22023, 59.7308, -1.52965, 0.48", "-1.31055, 60.3805, -1.4752, 0.12", "-1.44775, 61.3713, -1.38672, 0.12", "-1.48889, 61.7442, -1.34463, 0.12", "-1.51564, 62.1285, -1.29769, 0.96", "-1.53829, 62.8863, -1.19066, 0.96", "-1.5411, 63.89, -1.03203, 0.72", "-1.53555, 64.3867, -0.951033, 0.84", "-1.51057, 65.6633, -0.730346, 0.48", "-1.47804, 66.9009, -0.530285, 0.48", "-1.4474, 67.8865, -0.387191, 0.48", "-1.42096, 68.7701, -0.281434, 1.08", "-1.40505, 69.261, -0.235961, 1.32", "-1.35308, 70.7236, -0.12125, 0.36", "-1.29002, 72.3519, -0.0306298, 0.36", "-1.24414, 73.3364, 0.0175017, 0.48", "-1.14965, 74.9491, 0.0790487, 0.6", "-1.08224, 75.9879, 0.10692, 0.72", "-1.03279, 76.8668, 0.117282, 0.72", "-1.0089, 77.5154, 0.114817, 0.72", "-1.00094, 78.6492, 0.0979203, 0.36", "-1.02623, 80.1555, 0.126657, 0.48", "-1.09767, 82.0222, 0.213873, 0.48", "-1.16263, 83.0488, 0.283192, 0.48", "-1.30831, 84.808, 0.434714, 0.96", "-1.51745, 86.9499, 0.671198, 0.48", "-1.69215, 88.4813, 0.868754, 0.12", "-1.77049, 89.1033, 0.957624, 0.12", "-1.92759, 90.3516, 1.14606, 0.72", "-1.97146, 90.732, 1.20748, 0.84", "-2.05667, 91.5278, 1.33014, 0.48", "-2.19572, 92.8998, 1.54687, 0.48", "-2.30288, 94.134, 1.6986, 0.48", "-2.34888, 94.746, 1.77772, 0.96", "-2.407, 95.7023, 1.90694, 0.36", "-2.48212, 97.0683, 2.08701, 0.36", "-2.54311, 98.2657, 2.23629, 0.36", "-2.59525, 99.5096, 2.39239, 0.36", "-2.62306, 100.128, 2.46349, 0.84", "-2.6412, 100.504, 2.50459, 0.84", "-2.68111, 101.266, 2.57267, 0.36", "-2.71565, 101.88, 2.63682, 0.12", "-2.75266, 102.508, 2.66794, 0.96", "-2.79964, 103.262, 2.69057, 1.32", "-2.86733, 104.355, 2.76423, 0.36", "-2.9403, 105.603, 2.876, 0.36", "-3.01885, 107.064, 3.03023, 0.6", "-3.08651, 108.502, 3.17958, 0.48", "-3.12818, 109.493, 3.2772, 0.48", "-3.1825, 110.955, 3.40525, 0.84", "-3.21584, 111.709, 3.45488, 0.96", "-3.23137, 111.96, 3.47086, 0.96", "-3.28452, 112.583, 3.52528, 0.36", "-3.34433, 113.216, 3.61038, 0.36", "-3.40263, 113.842, 3.67123, 0.84", "-3.46391, 114.635, 3.71329, 1.32", "-3.4943, 115.14, 3.76481, 0.96", "-3.52862, 116.195, 3.90795, 0.36", "-3.53837, 117.551, 4.12733, 0.36", "-3.51469, 118.411, 4.25748, 0.36", "-3.46823, 119.158, 4.35698, 0.36", "-3.3789, 120.077, 4.46129, 0.72", "-3.30037, 120.736, 4.53894, 0.36", "-3.17035, 121.728, 4.64499, 0.24", "-3.0869, 122.351, 4.72086, 0.84", "-3.00827, 122.987, 4.79911, 0.84", "-2.95961, 123.506, 4.85351, 0.72", "-2.90994, 124.328, 4.96139, 0.12", "-2.87838, 125.318, 5.13809, 0.12", "-2.86803, 126.044, 5.3017, 0.48", "-2.86661, 126.413, 5.37807, 0.24", "-2.87977, 127.892, 5.62302, 0.24", "-2.89557, 128.909, 5.76673, 0.72", "-2.90549, 129.534, 5.83496, 1.08", "-2.92753, 130.571, 5.94351, 0.96", "-2.95884, 131.677, 6.0688, 0.72", "-2.98804, 132.562, 6.16802, 0.6", "-3.0162, 133.362, 6.24576, 0.12", "-3.05033, 134.113, 6.32594, 0.12", "-3.09, 134.975, 6.48958, 0.12", "-3.12298, 135.736, 6.68152, 0.48", "-3.13894, 136.086, 6.78933, 0.12", "-3.20478, 137.385, 7.21298, 0.12", "-3.26747, 138.424, 7.52679, 0.6", "-3.34348, 139.433, 7.8162, 0.12", "-3.4332, 140.644, 8.09779, 0.12", "-3.46149, 141.034, 8.16649, 0.12", "-3.51123, 141.768, 8.27105, 0.6", "-3.6137, 143.387, 8.44246, 1.08", "-3.66276, 144.291, 8.49991, 1.08", "-3.73096, 145.825, 8.56169, 0.48", "-3.75769, 146.823, 8.60662, 0.12", "-3.77524, 148.492, 8.68315, 0.12", "-3.76876, 149.111, 8.70964, 0.12", "-3.73582, 150.236, 8.7534, 0.12", "-3.70307, 151.031, 8.77549, 0.72", "-3.68155, 151.556, 8.78476, 0.12", "-3.64942, 152.311, 8.77856, 0.12", "-3.58753, 153.815, 8.72743, 0.48", "-3.54111, 155.103, 8.66335, 0.6", "-3.51616, 155.984, 8.6079, 0.6", "-3.50504, 156.613, 8.57531, 0.84", "-3.50022, 157.484, 8.55317, 0.6", "-3.50971, 158.482, 8.56211, 0.72", "-3.53552, 159.271, 8.59436, 0.36", "-3.59343, 160.387, 8.70141, 0.48", "-3.69836, 161.797, 8.88291, 0.48", "-3.80286, 163.221, 9.09314, 0.6", "-3.89345, 164.342, 9.27714, 0.48", "-3.94994, 164.971, 9.38832, 0.48", "-4.06742, 166.282, 9.68882, 0.12", "-4.13642, 167.085, 9.90009, 0.12", "-4.22412, 168.157, 10.1884, 0.12", "-4.25832, 168.593, 10.3037, 0.96", "-4.31675, 169.211, 10.4604, 1.08", "-4.4966, 170.763, 10.8155, 0.36", "-4.58203, 171.373, 10.9357, 0.36", "-4.81404, 172.838, 11.2105, 0.36", "-4.98958, 173.723, 11.3551, 0.36", "-5.18795, 174.645, 11.4689, 0.24", "-5.34377, 175.306, 11.5143, 0.24", "-5.47106, 175.803, 11.5145, 0.6", "-5.57201, 176.166, 11.5139, 0.6", "-5.78639, 176.923, 11.5374, 0.36", "-6.04371, 177.843, 11.5876, 0.36", "-6.33649, 178.927, 11.6656, 0.24", "-6.74761, 180.535, 11.8056, 0.24", "-7.01631, 181.675, 11.9129, 0.24", "-7.20156, 182.548, 12.0036, 0.24", "-7.26617, 182.928, 12.046, 0.6", "-7.33162, 183.424, 12.1006, 0.6", "-7.38487, 183.938, 12.1525, 0.6", "-7.45224, 184.929, 12.2314, 0.36", "-7.47098, 185.21, 12.2431, 0.12", "-7.56381, 186.203, 12.2431, 0.12", "-7.65773, 186.983, 12.2303, 0.12", "-7.73927, 187.496, 12.2143, 0.36", "-7.79347, 187.771, 12.2035, 0.12", "-8.00589, 188.693, 12.1577, 0.12", "-8.11871, 189.182, 12.131, 0.48", "-8.20015, 189.588, 12.1074, 0.12", "-8.26781, 190.094, 12.079, 0.12", "-8.32217, 191.099, 12.0274, 0.12", "-8.34041, 191.898, 11.9884, 0.72", "-8.32623, 192.529, 11.9613, 0.84", "-8.29874, 193.092, 11.9447, 0.36", "-8.22602, 193.878, 11.9421, 0.36", "-8.13539, 194.434, 11.9381, 0.48" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-2.07511, -24.3165, 8.56244, 0.6", "-2.99653, -25.2659, 7.64509, 0.6", "-3.34121, -25.6297, 7.29704, 0.48", "-3.73012, -26.054, 6.92058, 0.48", "-4.13632, -26.5252, 6.53891, 0.48", "-4.42691, -26.875, 6.29095, 0.48", "-4.92509, -27.4977, 5.90137, 0.6", "-5.32467, -28.0552, 5.64952, 0.72", "-5.87788, -28.8457, 5.29159, 0.84", "-6.33689, -29.5285, 5.00137, 0.84", "-6.66597, -30.0373, 4.83102, 1.08", "-6.9455, -30.5016, 4.71133, 1.32", "-7.23371, -31.0318, 4.61105, 1.44" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-2.07511, -24.3165, 8.56244, 0.96", "-2.03576, -25.6277, 9.25176, 0.96", "-1.9979, -26.1998, 9.50024, 0.6", "-1.90326, -27.1054, 9.90826, 0.48", "-1.7988, -27.9265, 10.2688, 0.12", "-1.66979, -28.8299, 10.6687, 0.12", "-1.60894, -29.24, 10.8472, 0.72", "-1.48883, -30.194, 11.1938, 0.72", "-1.37486, -31.166, 11.5937, 0.6", "-1.32406, -31.6304, 11.8095, 0.6", "-1.27374, -32.328, 12.1364, 0.36", "-1.25481, -32.6528, 12.299, 0.36", "-1.22049, -33.3605, 12.6463, 0.36", "-1.1547, -34.6377, 13.2846, 0.36", "-1.10727, -35.3423, 13.6052, 0.6", "-1.04379, -35.9069, 13.8685, 0.6", "-0.941383, -36.4696, 14.1181, 0.72", "-0.831296, -36.9203, 14.3155, 0.84", "-0.570792, -37.7968, 14.6689, 0.6", "-0.40465, -38.3649, 14.8743, 0.48", "-0.300444, -38.86, 15.0751, 0.36", "-0.239013, -39.5068, 15.4014, 0.36", "-0.239356, -39.8194, 15.5671, 0.6", "-0.267563, -40.3051, 15.8196, 0.72", "-0.336376, -41.1799, 16.226, 0.72", "-0.350056, -41.9177, 16.6283, 0.48", "-0.315232, -42.6335, 17.0263, 0.6", "-0.261031, -43.2055, 17.3532, 0.84", "-0.202164, -43.6557, 17.593, 1.08", "-0.0787005, -44.3952, 17.9628, 1.32", "0.289272, -46.3139, 18.8038, 0.72", "0.418234, -46.9748, 19.0586, 0.36", "0.680122, -48.4074, 19.5617, 0.48", "0.820989, -49.3537, 19.884, 0.6", "0.862315, -49.7212, 19.9966, 0.84", "0.92275, -50.5809, 20.2112, 0.84", "0.952017, -51.5718, 20.3709, 0.72", "0.981469, -52.4948, 20.4885, 0.48", "1.05006, -53.4799, 20.5957, 0.36", "1.11077, -54.0962, 20.6642, 0.36", "1.20554, -54.8412, 20.7419, 0.6", "1.34812, -55.7049, 20.8216, 0.6", "1.54524, -56.5645, 20.915, 0.6", "1.81437, -57.456, 21.0144, 0.6", "2.18178, -58.4027, 21.1248, 0.48", "2.51328, -59.1615, 21.2509, 0.48", "2.82791, -59.8557, 21.4109, 0.6", "3.24762, -60.8146, 21.7015, 0.36", "3.46053, -61.3626, 21.8823, 0.36", "3.82878, -62.4357, 22.2194, 0.36", "4.19731, -63.6477, 22.5987, 0.48", "4.39682, -64.4084, 22.8176, 0.48", "4.61876, -65.4159, 23.0634, 0.48", "4.79061, -66.4167, 23.3029, 0.48", "4.89267, -67.14, 23.4862, 0.72", "4.96594, -67.748, 23.6698, 0.72", "5.02393, -68.1806, 23.8087, 0.72", "5.14512, -68.8822, 24.0481, 0.84", "5.36701, -70.0632, 24.5036, 0.12", "5.5173, -70.8328, 24.8823, 0.12", "5.71131, -71.811, 25.4439, 0.48", "5.79502, -72.2305, 25.7178, 0.6", "5.91176, -72.8121, 26.1369, 0.6", "6.05653, -83.1009, 28.1271, 0.6", "6.04569, -93.2538, 30.6769, 0.6", "4.56897, -102.765, 34.6477, 0.6", "4.6369, -111.81, 39.726, 0.6", "6.06926, -121.847, 42.2875, 0.6", "7.70618, -132.158, 43.2293, 0.6", "11.3145, -141.939, 43.6965, 0.6", "15.1043, -151.574, 44.8924, 0.6", "19.4296, -161.024, 45.4258, 0.6", "24.6347, -169.835, 47.0056, 0.6", "28.5139, -178.941, 50.1265, 0.6" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "40.5911, 13.2368, 35.8167, 0.48", "47.3919, 18.1856, 41.4324, 0.48", "53.0398, 24.3091, 47.2711, 0.48", "58.6224, 30.466, 53.1405, 0.48", "65.2053, 35.7392, 58.748, 0.48", "71.3001, 40.5023, 65.25, 0.48", "76.8431, 44.1767, 72.8017, 0.48", "81.2012, 48.5103, 80.8, 0.48", "86.9748, 51.724, 88.3696, 0.48", "92.0225, 53.8746, 96.7557, 0.48", "97.7349, 57.2752, 104.298, 0.48", "104.524, 60.5636, 110.937, 0.48", "111.966, 64.3376, 116.569, 0.48", "118.574, 67.0174, 123.627, 0.48", "125.586, 69.4636, 130.365, 0.48", "133.708, 72.102, 135.629, 0.48", "142.683, 74.6283, 139.325, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "40.5911, 13.2368, 35.8167, 0.36", "48.4115, 17.4629, 40.5751, 0.48", "56.7976, 22.3105, 43.4663, 0.48", "64.123, 27.8176, 47.8055, 0.48" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-3.09219, -15.3206, -26.3206, 0.48", "-5.86366, -15.2406, -29.9583, 0.48", "-6.60865, -15.1888, -30.8978, 0.48", "-6.80102, -15.1778, -31.1091, 0.12", "-7.36851, -15.1446, -31.7276, 0.12", "-8.27946, -15.1049, -32.6955, 0.72", "-8.94768, -15.0834, -33.425, 0.84", "-9.92863, -15.0697, -34.3541, 0.12", "-11.1091, -15.0645, -35.5468, 0.12", "-12.1233, -15.0622, -36.566, 0.84", "-12.4332, -15.0727, -36.8678, 0.84", "-13.6046, -15.1723, -37.9627, 0.12", "-13.8889, -15.2051, -38.2218, 0.12", "-14.3694, -15.2684, -38.5927, 0.12", "-14.6711, -15.3015, -38.8207, 1.08", "-15.3216, -15.3648, -39.2251, 0.84", "-16.4577, -15.4536, -39.8674, 0.12", "-17.358, -15.4931, -40.3566, 0.12", "-17.7367, -15.4806, -40.6747, 0.48", "-18.2896, -15.4197, -41.2842, 0.12", "-18.8208, -15.326, -41.9398, 0.12", "-19.0779, -15.2448, -42.3554, 0.84", "-19.5835, -15.0569, -43.27, 1.08", "-20.7909, -14.6133, -45.6721, 0.6", "-21.1518, -14.4823, -46.4075, 0.84", "-21.3684, -14.4058, -46.8572, 0.84", "-22.6297, -14.0055, -49.4547, 0.12", "-22.8651, -13.9478, -49.8864, 0.12", "-23.1973, -13.9004, -50.384, 0.12", "-23.4453, -13.8841, -50.6708, 0.48", "-23.9603, -13.8751, -51.2283, 0.12", "-25.1705, -13.901, -52.4279, 0.12", "-25.7302, -13.9305, -52.8799, 0.12", "-26.4935, -13.935, -53.5125, 0.84", "-26.7713, -13.9267, -53.7413, 0.84", "-27.8457, -13.8917, -54.5944, 0.12", "-28.24, -13.8788, -54.8929, 0.12", "-28.6286, -13.8631, -55.1743, 0.12", "-29.9545, -13.8073, -56.076, 0.12", "-30.1553, -13.7943, -56.2069, 0.72", "-31.0517, -13.7161, -56.7731, 0.72", "-31.8443, -13.6305, -57.2667, 0.12", "-32.3277, -13.5711, -57.6175, 0.12", "-32.9847, -13.4851, -58.1345, 0.48", "-33.8775, -13.3596, -58.8752, 0.12", "-34.1499, -13.3172, -59.1071, 0.12", "-34.8235, -13.1717, -59.7999, 0.72", "-35.6669, -12.9596, -60.76, 0.12", "-35.8997, -12.9008, -61.0665, 0.12", "-35.9646, -12.8865, -61.1666, 0.6", "-36.2304, -12.8466, -61.5822, 0.6", "-37.4023, -12.7153, -63.3725, 0.48", "-37.7439, -12.6891, -63.8795, 0.48", "-38.7094, -12.6808, -65.2965, 0.72", "-39.6065, -12.7342, -66.5442, 0.12", "-39.9302, -12.7801, -66.9644, 0.12", "-40.3103, -12.8658, -67.4268, 0.48", "-41.3488, -13.2249, -68.5027, 0.12", "-42.2686, -13.6434, -69.4699, 0.12", "-42.884, -13.997, -70.0699, 0.12", "-43.3119, -14.2935, -70.4632, 0.12", "-43.7395, -14.6582, -70.9149, 0.6", "-44.1124, -15.0155, -71.3687, 0.6", "-44.8857, -15.8154, -72.3342, 0.12", "-45.1619, -16.0994, -72.6934, 0.12", "-45.4748, -16.3989, -73.1186, 0.12", "-46.3505, -17.1671, -74.2103, 0.12", "-47.082, -17.7553, -75.1396, 0.12", "-47.3891, -17.9771, -75.5196, 0.12", "-47.6636, -18.1487, -75.8113, 0.12", "-48.0371, -18.3591, -76.1903, 0.6", "-48.7153, -18.7157, -76.882, 0.6", "-50.2986, -19.4982, -78.1932, 0.12", "-50.6938, -19.6997, -78.5014, 0.12", "-51.3289, -20.0101, -79.0393, 0.12", "-51.7529, -20.1965, -79.3824, 0.36", "-52.874, -20.6227, -80.2123, 0.12", "-54.1011, -21.0042, -81.0612, 0.12", "-55.0758, -21.3046, -81.6098, 0.36", "-55.9535, -21.5696, -82.0976, 0.12", "-57.0899, -21.8926, -82.7448, 0.12", "-57.5205, -21.9953, -82.9681, 0.48", "-58.2668, -22.1625, -83.3762, 0.12", "-58.9827, -22.3278, -83.8361, 0.12", "-59.3913, -22.4224, -84.118, 0.36", "-60.0637, -22.5764, -84.7341, 0.12", "-60.5538, -22.6316, -85.4553, 0.12", "-61.1321, -22.615, -86.5704, 0.6", "-61.2304, -22.5868, -86.8186, 0.6", "-61.6533, -22.3326, -88.1336, 0.12", "-62.0762, -21.8681, -89.8892, 0.48", "-62.4678, -21.1308, -92.1594, 0.12", "-62.5408, -20.8783, -92.79, 0.12", "-62.64, -20.2545, -94.0866, 0.12", "-62.652, -20.0436, -94.544, 0.6", "-62.617, -19.2873, -96.2562, 0.48", "-62.5395, -18.6772, -97.7944, 0.24", "-62.5118, -18.4304, -98.6254, 0.24", "-62.5318, -17.8635, -101.323, 0.84", "-62.7267, -17.3767, -104.365, 0.48", "-62.7859, -17.3304, -104.896, 0.48", "-62.8756, -17.3254, -105.425, 0.6", "-63.4677, -17.4958, -107.982, 0.6", "-64.3124, -17.84, -111.125, 0.12", "-64.8138, -18.0704, -112.606, 0.12", "-65.7041, -18.4031, -114.738, 0.12", "-66.0442, -18.5094, -115.527, 0.12", "-66.4159, -18.6231, -116.374, 0.12" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-3.09219, -15.3206, -26.3206, 0.12", "-3.39045, -15.0603, -26.3199, 0.12", "-3.77251, -14.7071, -26.3105, 0.12", "-4.37027, -14.0802, -26.5436, 0.12", "-4.66376, -13.7025, -26.7347, 0.6", "-4.97162, -13.2112, -27.0646, 0.84", "-5.15363, -12.8906, -27.3112, 0.6", "-5.43771, -12.3287, -27.7789, 0.6", "-6.10402, -10.7666, -29.3324, 0.12", "-6.32825, -10.1374, -30.0448, 0.12", "-6.66461, -9.18427, -31.1491, 0.72", "-6.91095, -8.50798, -31.9283, 0.72", "-7.04377, -8.17283, -32.302, 0.72", "-7.50344, -7.04449, -33.5412, 0.72", "-7.94474, -6.08624, -34.5504, 0.12", "-8.33392, -5.30954, -35.4003, 0.12", "-8.54452, -4.90809, -35.8119, 0.12", "-8.7707, -4.47042, -36.22, 0.72", "-9.32839, -3.44008, -37.1294, 0.84", "-9.94189, -2.42078, -37.9262, 0.12", "-10.1812, -2.04871, -38.2356, 0.12", "-10.8375, -1.04333, -39.1228, 0.12", "-11.3365, -0.305397, -39.7473, 0.12", "-11.6862, 0.249741, -40.2067, 0.6", "-12.0005, 0.762022, -40.5884, 0.6", "-12.6082, 1.79948, -41.3314, 0.12", "-12.8328, 2.20175, -41.6327, 0.12", "-13.1756, 2.83221, -42.1124, 0.12", "-14.1587, 4.62522, -43.4721, 0.12", "-14.4487, 5.16012, -43.907, 0.12", "-14.6134, 5.47106, -44.1672, 0.48", "-15.1969, 6.54122, -45.0325, 0.36", "-15.3465, 6.79443, -45.2844, 0.36", "-15.6155, 7.20969, -45.7192, 0.72", "-16.5845, 8.5727, -47.1021, 0.12", "-16.8762, 9.01429, -47.6086, 0.12", "-17.086, 9.37591, -48.0529, 0.6", "-17.8694, 10.8197, -49.9055, 0.12", "-18.3808, 11.7753, -51.1496, 0.12", "-18.5725, 12.1348, -51.6116, 0.96", "-19.3175, 13.5038, -53.2898, 0.96", "-19.6737, 14.1546, -54.1252, 0.12", "-19.7894, 14.374, -54.3945, 0.12", "-19.9967, 14.7754, -54.825, 0.12", "-20.1332, 15.0473, -55.1436, 0.12", "-20.5834, 16.0014, -56.049, 0.12", "-20.9194, 16.737, -56.613, 0.84", "-21.1474, 17.2951, -56.9913, 0.96", "-21.2528, 17.5785, -57.1681, 0.96", "-21.7715, 19.0676, -58.1217, 0.12", "-22.2788, 20.5063, -58.9879, 0.12", "-22.8698, 22.1669, -59.9103, 0.12", "-23.3136, 23.447, -60.5906, 0.12", "-23.5059, 24.0207, -60.8771, 0.72", "-24.0493, 25.6457, -61.626, 0.12", "-24.5867, 27.2179, -62.2621, 0.12", "-24.6657, 27.438, -62.3483, 0.48", "-24.7246, 27.5964, -62.399, 0.12", "-25.1955, 28.7469, -62.7501, 0.12", "-25.7496, 29.9239, -63.0212, 0.6", "-25.9573, 30.3171, -63.09, 0.12", "-26.6011, 31.4679, -63.3082, 0.12", "-26.9839, 32.155, -63.4329, 0.36", "-27.149, 32.4532, -63.4841, 0.12", "-28.1671, 34.3948, -63.7587, 0.12", "-28.4674, 35.0127, -63.8184, 0.72", "-28.8204, 35.8083, -63.8858, 0.48", "-29.0064, 36.3455, -63.9258, 0.12", "-29.0519, 36.5082, -63.9464, 0.12", "-29.4602, 38.2956, -64.2367, 0.12", "-29.5399, 38.7343, -64.3162, 0.24", "-29.5875, 38.9775, -64.3571, 0.12", "-29.9435, 40.6522, -64.6487, 0.12", "-30.2675, 42.0327, -64.9532, 0.48", "-30.3594, 42.4071, -65.0452, 0.12", "-30.781, 44.1003, -65.5009, 0.12", "-31.1089, 45.4326, -65.859, 0.12", "-31.2908, 46.1435, -66.0622, 0.6", "-31.5837, 47.2036, -66.3632, 0.12", "-31.9252, 48.4203, -66.6568, 0.12", "-32.0264, 48.7798, -66.7539, 0.48", "-32.1442, 49.1928, -66.8905, 0.48", "-32.3345, 49.8475, -67.1284, 0.12", "-32.6932, 51.0693, -67.5331, 0.12", "-32.8566, 51.6616, -67.6559, 0.48" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.3103, -43.9392, -5.70429, 0.72", "-10.161, -45.1469, -5.74717, 0.72", "-10.5582, -45.7419, -5.80814, 0.48", "-11.1144, -46.6516, -5.88373, 0.48", "-11.7731, -47.8191, -5.9702, 0.48", "-12.0678, -48.357, -6.0048, 0.6", "-12.7019, -49.527, -6.07048, 0.84", "-12.9341, -49.9723, -6.10956, 0.96", "-13.4329, -50.9066, -6.17531, 0.48", "-13.7369, -51.4565, -6.20276, 0.36", "-14.3145, -52.4472, -6.19077, 0.36", "-14.7762, -53.2033, -6.13817, 0.72", "-15.1633, -53.8097, -6.05911, 0.36", "-15.4993, -54.3174, -5.99778, 0.72", "-15.938, -54.9763, -5.93328, 1.08", "-16.392, -55.7005, -5.878, 1.08", "-16.719, -56.2784, -5.84991, 0.72", "-17.0336, -56.871, -5.83831, 0.72", "-17.2869, -57.357, -5.84202, 0.72", "-17.663, -58.0488, -5.86573, 0.72", "-18.1698, -58.9541, -5.92166, 0.36", "-18.5269, -59.5829, -5.98036, 0.36", "-18.9103, -60.2777, -6.03841, 0.48", "-19.2688, -60.9893, -6.08927, 0.48", "-19.5439, -61.6318, -6.12384, 0.36", "-19.7665, -62.2667, -6.17264, 0.48", "-19.9301, -62.8393, -6.22215, 0.48", "-20.1958, -63.9282, -6.33768, 0.48", "-20.3994, -64.903, -6.47243, 0.48", "-20.6002, -65.9914, -6.64611, 0.48", "-20.7853, -67.064, -6.83237, 0.36", "-20.9349, -67.8797, -6.98107, 0.6", "-21.1459, -68.8442, -7.15707, 0.72", "-21.3172, -69.495, -7.28449, 0.36", "-21.5019, -70.0879, -7.38206, 0.48", "-21.7196, -70.671, -7.44714, 0.48", "-21.983, -71.2773, -7.50062, 0.36", "-22.3824, -72.0702, -7.63874, 0.36", "-22.8023, -72.7887, -7.83771, 0.48", "-23.197, -73.3792, -8.03776, 0.6", "-23.8651, -74.3281, -8.44115, 0.96", "-24.5934, -75.3411, -8.94143, 0.96", "-25.3548, -76.4571, -9.53596, 0.48", "-25.8702, -77.3046, -9.99706, 0.48", "-26.2528, -77.9915, -10.3626, 0.6", "-26.7465, -78.9519, -10.8587, 0.84", "-27.0378, -79.5628, -11.1283, 0.6", "-27.3923, -80.3185, -11.3855, 0.72", "-27.866, -81.3159, -11.6347, 0.36", "-28.1692, -81.9374, -11.7707, 0.36", "-28.516, -82.6418, -11.9127, 0.48", "-28.973, -83.573, -12.0773, 0.48", "-29.3802, -84.4386, -12.2383, 0.48", "-29.6735, -85.0875, -12.3653, 0.6", "-29.9411, -85.7103, -12.4878, 0.84", "-30.2861, -86.6196, -12.6707, 0.84", "-30.6664, -87.6876, -12.8808, 0.84", "-30.944, -88.4751, -13.0244, 0.48", "-31.2178, -89.198, -13.1367, 0.48", "-31.5323, -89.9233, -13.2563, 0.6", "-31.7855, -90.4218, -13.3492, 0.6", "-32.1841, -91.1037, -13.4975, 0.36", "-32.5065, -91.6194, -13.6192, 0.36", "-32.7621, -92.0597, -13.7234, 0.36", "-33.0202, -92.5617, -13.835, 0.6", "-33.2712, -93.1287, -13.9479, 0.84", "-33.5173, -93.7363, -14.0491, 0.84", "-33.909, -94.7949, -14.2236, 0.36", "-34.2673, -95.7404, -14.3683, 0.36", "-34.5133, -96.3541, -14.4617, 0.36", "-34.6775, -96.709, -14.5147, 0.72", "-35.0317, -97.3283, -14.642, 0.96", "-35.6197, -98.1824, -14.8893, 0.36", "-35.9891, -98.6451, -15.0605, 0.36", "-36.2664, -98.9855, -15.2006, 0.72", "-36.642, -99.4912, -15.4085, 0.72", "-37.2328, -100.364, -15.7537, 0.36", "-37.3762, -100.587, -15.8349, 0.36", "-37.7635, -101.186, -16.0418, 0.48", "-38.3299, -102.089, -16.3681, 0.48", "-38.7591, -102.83, -16.6215, 0.48", "-39.0225, -103.336, -16.8109, 0.48", "-39.2925, -103.899, -17.0658, 0.48", "-39.5486, -104.4, -17.3461, 0.36", "-39.7944, -104.815, -17.6272, 0.6", "-40.1405, -105.326, -18.0357, 0.72", "-40.5419, -105.883, -18.4859, 0.72", "-40.9372, -106.449, -18.9245, 0.48", "-41.1071, -106.695, -19.102, 0.36", "-41.3526, -107.079, -19.4082, 0.36", "-41.554, -107.362, -19.6917, 0.6", "-41.8888, -107.765, -20.1648, 0.6", "-42.2792, -108.198, -20.701, 0.6", "-42.4936, -108.426, -21.0074, 0.6", "-43.4459, -109.493, -22.4857, 0.72", "-43.8912, -110.057, -23.2539, 0.48", "-44.105, -110.369, -23.6467, 0.48", "-44.2333, -110.578, -23.8895, 0.48", "-44.4358, -110.872, -24.1969, 0.72", "-44.6908, -111.158, -24.5071, 0.84", "-45.0716, -111.528, -24.9185, 0.84", "-45.5028, -111.993, -25.4739, 0.48", "-45.7096, -112.219, -25.7876, 0.48", "-46.1951, -112.75, -26.5355, 0.72", "-46.8898, -113.531, -27.6186, 0.72", "-47.4759, -114.287, -28.57, 0.36", "-47.618, -114.501, -28.8214, 0.36", "-47.8847, -114.965, -29.3516, 0.36", "-48.2252, -115.619, -30.1518, 0.6", "-48.3346, -115.869, -30.4716, 0.84", "-48.6577, -116.65, -31.4795, 0.36", "-48.8561, -117.156, -32.1679, 0.48", "-49.0682, -117.702, -33.0827, 0.96", "-49.3384, -118.373, -34.4498, 0.96", "-49.6337, -118.925, -35.8507, 0.48", "-49.6895, -118.996, -36.1045, 0.48", "-49.8411, -119.155, -36.8423, 0.72", "-50.1649, -119.568, -38.6859, 0.36", "-50.2418, -119.71, -39.2776, 0.6", "-50.3339, -119.93, -40.0947, 0.72", "-50.7908, -120.986, -43.7951, 0.48", "-50.8602, -121.141, -44.2775, 0.36", "-50.977, -121.401, -44.9888, 0.36", "-51.0327, -121.623, -45.4327, 0.36", "-51.079, -121.828, -45.8159, 0.36", "-51.1229, -122.069, -46.2679, 0.48", "-51.2161, -122.318, -46.6925, 0.48", "-51.3057, -122.658, -47.5689, 0.36", "-51.3158, -122.778, -47.9103, 0.36", "-51.2423, -123.186, -49.0348, 0.36", "-51.0533, -123.643, -50.3218, 0.48", "-50.9691, -123.81, -50.7828, 0.6", "-50.5841, -124.49, -52.5143, 0.36", "-50.447, -124.723, -53.0457, 0.36", "-50.2846, -125.023, -53.6441, 0.48", "-50.1134, -125.563, -54.5149, 0.12", "-50.1089, -125.915, -55.0267, 0.12", "-50.1299, -126.056, -55.2241, 0.12", "-50.1537, -126.13, -55.3182, 0.6", "-50.2859, -126.416, -55.6975, 0.84", "-50.787, -127.352, -56.857, 0.6", "-51.1527, -128.097, -57.6189, 0.6", "-51.2395, -128.256, -57.8105, 0.12", "-51.4754, -128.588, -58.263, 0.12", "-51.6081, -128.737, -58.5019, 0.24", "-51.9106, -129.021, -58.9926, 0.24", "-52.1751, -129.235, -59.3579, 0.24", "-53.3572, -130.045, -60.7503, 0.48", "-53.7877, -130.328, -61.239, 0.48", "-54.3225, -130.699, -61.8722, 0.48", "-54.595, -130.905, -62.2225, 0.36", "-54.7882, -131.067, -62.5099, 0.12", "-55.3831, -131.553, -63.2928, 0.12", "-55.6828, -131.824, -63.5651, 0.48", "-56.09, -132.238, -64.0534, 0.6", "-56.5448, -132.755, -64.7283, 0.6", "-56.9472, -133.3, -65.5517, 0.12", "-57.3333, -134.041, -66.7599, 0.12", "-57.6955, -134.999, -68.4448, 0.12", "-58.2329, -136.368, -70.998, 0.12", "-58.2822, -136.495, -71.2223, 0.12", "-58.3425, -136.671, -71.5112, 0.12", "-58.4559, -137.01, -72.0279, 0.72", "-58.4965, -137.221, -72.3237, 0.84", "-58.5383, -137.355, -72.5227, 0.84", "-58.6701, -137.578, -72.7628, 0.48", "-59.0481, -138.178, -73.4355, 0.12", "-59.2729, -138.564, -73.8531, 0.12", "-59.5778, -139.241, -74.6594, 0.36", "-59.7684, -139.87, -75.4217, 0.12", "-59.8497, -140.163, -75.8187, 0.12", "-59.9034, -140.38, -76.1328, 0.48", "-59.9796, -140.684, -76.578, 0.6", "-60.2558, -141.517, -77.8374, 0.12", "-60.3832, -141.761, -78.2497, 0.12", "-60.5817, -142.173, -78.8974, 0.12", "-60.6618, -142.298, -79.0901, 0.12", "-60.8407, -142.52, -79.4223, 0.48", "-61.0776, -142.802, -79.7845, 0.84", "-62.1037, -144.124, -81.1874, 0.36", "-62.3208, -144.442, -81.4896, 0.36", "-62.7832, -145.237, -82.1512, 0.36", "-63.2148, -145.942, -82.6734, 0.6", "-63.5615, -146.49, -83.0536, 0.6", "-64.032, -147.209, -83.4899, 0.6", "-64.3629, -147.693, -83.7203, 0.6", "-64.7395, -148.238, -83.9865, 0.12", "-65.6012, -149.512, -84.5892, 0.12", "-66.0336, -150.09, -84.8419, 0.6", "-66.3602, -150.486, -85.0124, 0.6", "-66.535, -150.692, -85.0885, 0.6", "-66.8981, -151.115, -85.2386, 0.12", "-67.1701, -151.446, -85.3558, 0.12", "-67.2786, -151.573, -85.4038, 0.12", "-67.473, -151.742, -85.4636, 0.12", "-67.8636, -152.016, -85.6188, 0.12", "-68.2137, -152.232, -85.769, 0.12", "-68.7885, -152.514, -86.0037, 0.6", "-69.4831, -152.806, -86.4035, 0.6", "-69.9546, -153.001, -86.7248, 0.6", "-70.8163, -153.387, -87.3873, 0.12", "-71.0135, -153.482, -87.5449, 0.12", "-71.6293, -153.82, -88.032, 0.48", "-72.8155, -154.558, -88.9175, 0.12", "-73.1468, -154.801, -89.1768, 0.12", "-73.5427, -155.142, -89.4701, 0.12", "-74.1182, -155.722, -89.9156, 0.12", "-74.5015, -156.174, -90.2281, 0.6", "-74.6993, -156.467, -90.3921, 0.6", "-75.0935, -157.149, -90.8195, 0.24", "-75.3351, -157.601, -91.1811, 0.24", "-75.7842, -158.469, -91.9844, 0.24", "-75.9224, -158.765, -92.274, 0.48", "-76.1307, -159.244, -92.7908, 0.48", "-76.673, -160.611, -94.3686, 0.36", "-76.7585, -160.847, -94.6625, 0.36", "-76.9153, -161.212, -95.1408, 0.36", "-77.0535, -161.528, -95.5273, 0.36", "-77.3658, -162.289, -96.4331, 0.48", "-77.5536, -162.752, -96.98, 0.48", "-77.7272, -163.292, -97.4892, 0.12", "-77.8737, -163.958, -98.1305, 0.12", "-77.926, -164.425, -98.5835, 0.12", "-77.9397, -164.607, -98.7539, 0.12" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-9.3103, -43.9392, -5.70429, 0.48", "-9.23041, -44.9928, -5.41228, 0.48", "-9.16561, -45.8396, -5.18644, 0.6", "-9.04102, -47.004, -4.89832, 0.6", "-8.92963, -47.852, -4.7017, 0.6", "-8.83105, -48.5379, -4.55351, 0.36", "-8.74873, -49.015, -4.42238, 0.36", "-8.69968, -49.2634, -4.32797, 0.36", "-8.53577, -49.8237, -4.10783, 0.6", "-8.44436, -50.0721, -4.0204, 0.72", "-8.30282, -50.3844, -3.87516, 0.72", "-7.78099, -51.4021, -3.31187, 0.72", "-7.59427, -51.7501, -3.10576, 0.72", "-7.28655, -52.3022, -2.75113, 0.24", "-6.96018, -52.8719, -2.37687, 0.24", "-6.53918, -53.5639, -1.94789, 0.48", "-6.20396, -54.084, -1.6361, 0.6", "-5.83893, -54.6294, -1.34185, 0.6", "-5.19627, -55.562, -0.806804, 0.36", "-4.9657, -55.8919, -0.618921, 0.36", "-4.51719, -56.5473, -0.259387, 0.36", "-4.24811, -56.9716, -0.0331446, 0.6", "-4.00709, -57.3805, 0.189227, 0.6", "-3.61893, -58.1283, 0.600724, 0.36", "-3.37085, -58.6602, 0.896578, 0.36", "-3.12539, -59.1998, 1.19827, 0.36", "-2.79802, -59.9154, 1.65753, 0.48", "-2.61053, -60.3048, 1.92612, 0.48", "-2.42657, -60.6729, 2.19744, 0.48", "-2.09051, -61.2942, 2.66085, 0.48", "-1.69719, -61.985, 3.20023, 0.48", "-1.10439, -63.0204, 3.95761, 0.48", "-0.872003, -63.4511, 4.24113, 0.36", "-0.772331, -63.6425, 4.36127, 0.36", "-0.594963, -64.0053, 4.55193, 0.48", "-0.353017, -64.5823, 4.80126, 0.36", "-0.102931, -65.2523, 5.05253, 0.36", "0.0991499, -65.8214, 5.21965, 0.48", "0.405826, -66.6409, 5.47176, 0.36", "0.810908, -67.6215, 5.78256, 0.36", "1.18612, -68.4623, 6.05779, 0.36", "1.58403, -69.276, 6.32553, 0.36", "1.88163, -69.838, 6.53174, 0.36", "2.37257, -70.7063, 6.86074, 0.36", "2.7814, -71.4372, 7.1221, 0.48", "3.13501, -72.0853, 7.34586, 0.84", "3.55615, -72.871, 7.58177, 0.48", "3.84915, -73.4501, 7.78174, 0.24", "4.1638, -74.1346, 8.03955, 0.24", "4.52402, -74.993, 8.36268, 0.24", "4.83806, -75.777, 8.66472, 0.24", "5.09141, -76.3977, 8.94042, 0.24", "5.56088, -77.5398, 9.48116, 0.72", "5.69737, -77.8632, 9.63414, 0.72", "6.02073, -78.6076, 9.97009, 0.36", "6.3046, -79.2258, 10.22, 0.36", "6.87303, -80.4964, 10.622, 0.24", "7.20792, -81.3121, 10.7977, 0.24", "7.44843, -81.9355, 10.8828, 0.24", "7.72582, -82.7263, 10.9837, 0.24", "7.90773, -83.3252, 11.0473, 0.36", "8.07452, -83.9418, 11.0897, 0.36", "8.21946, -84.5553, 11.0971, 0.48", "8.38817, -85.3571, 11.1343, 0.48", "8.4816, -85.8553, 11.1726, 0.48", "8.56739, -86.3638, 11.2262, 0.6", "8.64749, -86.8589, 11.267, 0.72", "8.74621, -87.4687, 11.2993, 0.72", "8.89223, -88.3461, 11.321, 0.24", "9.02297, -89.0892, 11.344, 0.24", "9.12323, -89.5812, 11.372, 0.48", "9.27342, -90.2332, 11.4216, 0.6", "9.49752, -91.1049, 11.5055, 0.36", "9.78526, -92.0947, 11.618, 0.36", "10.0792, -93.0291, 11.7096, 0.36", "10.3029, -93.723, 11.762, 0.36", "10.4263, -94.0887, 11.7808, 0.24", "10.45, -94.1577, 11.786, 0.48", "10.7231, -94.9496, 11.8536, 0.6", "10.9646, -95.6188, 11.9062, 0.36", "11.1702, -96.1983, 11.9414, 0.36", "11.261, -96.4622, 11.9646, 0.48", "11.5568, -97.3406, 12.0493, 0.48", "11.7159, -97.8121, 12.1083, 0.36", "11.9988, -98.651, 12.2353, 0.36", "12.2801, -99.4962, 12.3748, 0.36", "12.5278, -100.238, 12.4976, 0.36", "12.8391, -101.202, 12.6415, 0.36", "13.149, -102.163, 12.7563, 0.36", "13.2693, -102.538, 12.8044, 0.48", "13.4167, -103.012, 12.8713, 0.48", "13.6119, -103.595, 12.9733, 0.48", "13.8752, -104.328, 13.1125, 0.48", "14.1569, -105.047, 13.2479, 0.48", "14.4927, -105.882, 13.3831, 0.6", "14.6013, -106.14, 13.4201, 0.6", "14.9459, -106.935, 13.5166, 0.36", "15.3826, -107.893, 13.6087, 0.36", "15.6932, -108.551, 13.6682, 0.36", "16.1479, -109.459, 13.7402, 0.36", "16.6086, -110.341, 13.7926, 0.36", "16.9173, -110.936, 13.8112, 0.36", "17.171, -111.433, 13.7938, 0.36", "17.3397, -111.754, 13.7724, 0.48", "17.6331, -112.31, 13.7211, 0.48", "18.009, -113.042, 13.6392, 0.48", "18.4018, -113.855, 13.5384, 0.48", "18.8229, -114.774, 13.4197, 0.48", "18.9951, -115.187, 13.366, 0.48", "19.2998, -115.953, 13.2701, 0.48", "19.5177, -116.535, 13.201, 0.48", "19.6172, -116.795, 13.1694, 0.6", "19.7235, -117.052, 13.1414, 0.72", "19.9597, -117.636, 13.097, 0.48", "20.2145, -118.257, 13.0439, 0.48", "20.3263, -118.512, 13.0208, 0.48", "20.664, -119.207, 12.9613, 0.36", "20.9508, -119.759, 12.9158, 0.36", "21.1982, -120.195, 12.8805, 0.36", "21.5726, -120.814, 12.8361, 0.36", "21.8996, -121.332, 12.8213, 0.48", "22.3183, -122.009, 12.8258, 0.6", "23.012, -123.159, 12.8688, 0.48", "23.4622, -123.917, 12.9059, 0.36", "24.0571, -124.916, 12.9469, 0.36", "24.4445, -125.605, 12.969, 0.6", "24.8531, -126.374, 12.9682, 0.6", "25.2578, -127.175, 12.9457, 0.6", "25.651, -127.982, 12.8858, 0.6", "26.2373, -129.214, 12.7438, 0.48", "26.9027, -130.667, 12.5266, 0.48", "27.2642, -131.467, 12.3866, 0.48", "27.789, -132.616, 12.1568, 0.48", "28.1676, -133.448, 11.9759, 0.24", "28.4939, -134.189, 11.8085, 0.24", "29.0234, -135.436, 11.5191, 0.24", "29.2936, -136.095, 11.3685, 0.24", "29.585, -136.843, 11.2244, 0.6", "29.7013, -137.166, 11.1772, 0.84", "29.8679, -137.653, 11.1368, 0.84", "30.0964, -138.352, 11.1023, 0.48", "30.4363, -139.447, 11.091, 0.36", "30.6499, -140.201, 11.1132, 0.36", "30.8805, -141.042, 11.1777, 0.36", "31.0665, -141.679, 11.2347, 0.36", "31.2691, -142.284, 11.2962, 0.36", "31.4349, -142.742, 11.3476, 0.48", "31.7167, -143.479, 11.4146, 0.48", "31.8865, -143.921, 11.4415, 0.36", "32.211, -144.736, 11.4624, 0.36", "32.5268, -145.471, 11.4792, 0.36", "32.7918, -146.025, 11.4874, 0.36", "33.3402, -147.022, 11.4936, 0.36", "33.6667, -147.565, 11.4767, 0.36", "34.1438, -148.311, 11.4292, 0.36", "34.5913, -148.964, 11.3728, 0.48", "35.0661, -149.598, 11.3051, 0.48", "35.8929, -150.601, 11.1833, 0.48", "36.3091, -151.059, 11.1455, 0.12", "36.7242, -151.503, 11.1303, 0.12", "37.075, -151.89, 11.1373, 0.24", "37.3632, -152.228, 11.1621, 0.24", "37.9414, -152.894, 11.2499, 0.12", "38.5945, -153.6, 11.3814, 0.36", "39.0165, -154.03, 11.5005, 0.6", "39.3602, -154.373, 11.6036, 0.36", "39.723, -154.735, 11.6952, 0.36", "40.5621, -155.592, 11.8609, 0.36", "40.9106, -155.957, 11.9064, 0.36", "41.4795, -156.651, 11.9264, 0.24", "41.7736, -157.075, 11.933, 0.24", "42.1483, -157.756, 11.917, 0.36", "42.2854, -158.092, 11.88, 0.36", "42.3922, -158.454, 11.8132, 0.36", "42.6561, -159.396, 11.5967, 0.36", "42.8325, -160.0, 11.4822, 0.48", "43.0093, -160.551, 11.4398, 0.48", "43.2423, -161.189, 11.4536, 0.12", "43.5972, -162.123, 11.5108, 0.12", "43.7624, -162.54, 11.5507, 0.48", "44.2585, -163.639, 11.7093, 0.12", "44.6672, -164.435, 11.86, 0.12", "44.8845, -164.816, 11.9491, 0.6", "45.2572, -165.43, 12.1012, 0.12", "45.5044, -165.8, 12.1439, 0.12", "45.9015, -166.369, 12.1228, 0.12", "46.1989, -166.781, 12.0145, 0.12", "46.3514, -167.008, 11.9671, 0.72", "46.6629, -167.541, 11.8925, 0.72", "47.1628, -168.49, 11.8238, 0.48", "47.309, -168.835, 11.8018, 0.48", "47.5955, -169.658, 11.7604, 0.12", "48.1505, -171.47, 11.7033, 0.12", "48.2614, -171.851, 11.7001, 0.12", "48.3707, -172.29, 11.7115, 0.6", "48.574, -173.212, 11.7738, 0.12", "48.6165, -173.413, 11.7793, 0.12", "48.808, -174.342, 11.7637, 0.12", "48.9024, -174.848, 11.7047, 0.12", "48.9757, -175.367, 11.659, 0.48", "49.0114, -175.743, 11.6463, 0.12", "49.0497, -176.622, 11.6668, 0.12", "49.0795, -177.418, 11.6931, 0.12", "49.0959, -177.872, 11.6912, 0.96", "49.1285, -178.543, 11.6646, 0.48", "49.1686, -179.124, 11.6262, 0.36", "49.1878, -179.478, 11.5927, 0.36", "49.2049, -180.178, 11.5118, 0.36", "49.1915, -181.091, 11.3954, 0.24", "49.1735, -181.958, 11.2511, 0.24", "49.1565, -182.328, 11.1777, 0.24", "49.1476, -182.611, 11.1155, 0.6", "49.136, -183.234, 10.9888, 0.72", "49.1206, -183.68, 10.909, 0.84", "49.1174, -184.404, 10.8142, 0.12", "49.1292, -184.786, 10.7476, 0.12", "49.1629, -185.45, 10.6206, 0.12", "49.2018, -185.932, 10.5257, 0.12", "49.2339, -186.177, 10.4774, 0.12", "49.3205, -186.664, 10.3924, 0.6", "49.4337, -187.295, 10.3118, 0.12", "49.547, -188.025, 10.2258, 0.12", "49.5812, -188.3, 10.1816, 0.48", "49.6618, -188.906, 10.072, 0.48", "49.7539, -189.45, 9.97025, 0.48", "49.9535, -190.409, 9.79847, 0.48", "50.0846, -190.948, 9.71256, 0.6", "50.3085, -191.805, 9.53422, 0.12", "50.4532, -192.39, 9.3963, 0.12", "50.5978, -192.989, 9.24152, 0.24", "50.7593, -193.611, 9.07301, 0.24", "50.9801, -194.34, 8.8491, 0.48", "51.1907, -194.975, 8.63791, 0.12", "51.333, -195.435, 8.48778, 0.12", "51.3924, -195.692, 8.39536, 0.6", "51.44, -196.062, 8.26055, 0.6", "51.462, -196.86, 7.86991, 0.12", "51.4265, -197.443, 7.55364, 0.12", "51.3851, -197.786, 7.36453, 0.12", "51.3179, -198.16, 7.14334, 0.6", "51.174, -198.775, 6.7896, 0.6", "50.8024, -200.175, 5.99959, 0.12", "50.6212, -200.799, 5.63668, 0.12", "50.5826, -200.955, 5.549, 0.36", "50.5593, -201.124, 5.4632, 0.12", "50.5191, -201.801, 5.16073, 0.12", "50.5168, -202.439, 4.93096, 0.84", "50.5353, -203.37, 4.6938, 0.12", "50.5609, -204.336, 4.39561, 0.12", "50.5881, -205.332, 4.0232, 0.12", "50.5962, -205.699, 3.87402, 0.72", "50.6012, -206.277, 3.63178, 0.96", "50.5989, -206.649, 3.4853, 0.96", "50.5627, -207.904, 3.01987, 0.48", "50.5119, -208.567, 2.76266, 0.12", "50.4164, -209.37, 2.42876, 0.12", "50.2889, -210.164, 2.11041, 0.12", "50.214, -210.51, 1.98791, 0.12", "50.0462, -211.128, 1.81136, 0.12", "49.8701, -211.642, 1.68042, 0.96", "49.5223, -212.508, 1.42315, 0.12", "49.2157, -213.198, 1.16843, 0.12", "48.7933, -214.086, 0.791422, 0.12", "48.614, -214.455, 0.612713, 0.12", "48.1492, -215.439, 0.114957, 0.48", "47.9961, -215.769, -0.0550332, 0.12", "47.8233, -216.154, -0.339001, 0.12", "47.7758, -216.276, -0.452992, 0.36", "47.6547, -216.593, -0.781966, 0.12", "47.3747, -217.35, -1.60464, 0.12", "47.1356, -218.009, -2.3349, 1.32", "46.5057, -219.704, -4.31404, 0.84", "46.4196, -219.921, -4.59583, 0.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-4.9697, -37.1211, -15.9441, 0.36", "-4.96139, -38.2508, -17.1002, 0.36", "-4.92003, -38.9149, -17.7586, 0.36", "-4.86582, -39.5031, -18.2679, 0.6", "-4.76972, -40.2405, -18.8357, 0.96", "-4.68531, -40.7279, -19.1426, 0.84", "-4.34844, -42.2197, -19.8948, 0.36", "-4.15495, -42.7876, -20.0679, 0.36", "-3.73173, -43.8092, -20.264, 0.36", "-3.4763, -44.3818, -20.312, 0.48", "-2.94466, -45.5534, -20.3135, 0.48", "-2.48831, -46.5178, -20.2699, 0.12", "-1.96733, -47.5584, -20.1751, 0.12", "-1.55476, -48.2831, -20.1376, 0.12", "-1.41273, -48.5221, -20.1351, 0.84", "-1.1124, -49.0547, -20.1589, 0.84", "-0.653783, -49.9342, -20.2834, 0.36", "-0.346795, -50.5725, -20.4015, 0.12", "0.287572, -51.902, -20.6883, 0.12", "0.493001, -52.2847, -20.7746, 0.48", "0.705289, -52.668, -20.8688, 0.48", "1.04036, -53.277, -21.0168, 0.36", "1.18226, -53.5888, -21.0995, 0.36", "1.41135, -54.2313, -21.3353, 0.48", "1.59981, -55.0106, -21.8343, 0.36", "1.7231, -55.6166, -22.2936, 0.48", "1.78258, -55.9891, -22.6041, 0.72", "1.8509, -56.6713, -23.2369, 0.72", "1.87555, -57.4156, -23.9515, 0.72", "1.89536, -58.9002, -25.4366, 0.12", "1.9043, -59.1735, -25.7126, 0.12", "1.91362, -59.2533, -25.7915, 0.48", "2.05626, -59.9456, -26.4558, 0.48", "2.31509, -60.809, -27.1799, 0.12", "2.52722, -61.3871, -27.6261, 0.12", "2.69394, -61.7999, -27.9033, 0.12", "2.80804, -62.1218, -28.1249, 0.48", "2.99867, -62.729, -28.5601, 0.84", "3.22626, -63.53, -29.1274, 0.84", "3.44225, -64.6275, -29.8799, 0.12", "3.45231, -64.7297, -29.9493, 0.12", "3.46447, -65.3931, -30.3865, 0.12", "3.41844, -66.1903, -31.0003, 0.12", "3.37451, -66.6711, -31.3856, 0.12", "3.30524, -67.5375, -32.0543, 0.12", "3.25954, -68.2322, -32.6003, 0.84", "3.23847, -68.7797, -33.0536, 0.72", "3.22856, -70.4477, -34.4706, 0.24", "3.23413, -70.7532, -34.7908, 0.24", "3.29828, -71.4843, -35.6771, 0.24", "3.4452, -72.2009, -36.6194, 0.6", "3.56839, -72.6369, -37.1998, 0.84", "3.65437, -72.8606, -37.5018, 0.6", "4.46174, -74.6271, -39.7153, 0.12", "4.58462, -74.8816, -40.0449, 0.12", "4.76325, -75.2372, -40.5122, 0.12", "4.80618, -75.3296, -40.6107, 0.48", "4.94877, -75.706, -40.9429, 0.48", "5.06267, -76.1228, -41.1974, 0.48", "5.18144, -76.8172, -41.4055, 0.36", "5.24036, -77.2468, -41.5333, 0.36", "5.33466, -77.9953, -41.7446, 0.36", "5.43048, -78.6494, -41.959, 0.12", "5.53216, -79.3242, -42.1921, 0.12", "5.60881, -79.8271, -42.371, 0.6", "5.7022, -80.4504, -42.5823, 0.84", "5.78013, -80.9341, -42.745, 0.84", "5.94297, -81.9592, -43.1384, 0.36", "6.0222, -82.5238, -43.3783, 0.36", "6.08426, -83.0598, -43.6385, 0.48", "6.13827, -83.5061, -43.866, 0.48", "6.20099, -83.9629, -44.093, 0.72", "6.35408, -84.9572, -44.5283, 0.72", "6.49492, -85.732, -44.8138, 0.36", "6.53863, -85.9233, -44.8906, 0.24", "6.67396, -86.4175, -45.0872, 0.12", "6.93062, -87.244, -45.3661, 0.12", "7.15816, -87.9312, -45.521, 0.12", "7.20091, -88.0483, -45.5324, 0.48", "7.51054, -88.8256, -45.5973, 0.6", "7.65733, -89.1804, -45.6312, 0.6", "7.99957, -89.9596, -45.7074, 0.12", "8.43909, -90.9168, -45.7957, 0.12", "8.66502, -91.3943, -45.8335, 0.36", "8.94987, -92.0151, -45.8711, 0.12", "9.25878, -92.6965, -45.916, 0.12", "9.6576, -93.6156, -46.0192, 0.12", "9.84564, -94.0789, -46.092, 0.12", "10.0061, -94.4951, -46.1572, 0.48", "10.1764, -94.967, -46.2237, 0.48", "10.3677, -95.5221, -46.3, 0.12", "10.8085, -96.8918, -46.5248, 0.12", "10.8734, -97.1307, -46.5649, 0.48", "10.9702, -97.511, -46.624, 0.48", "11.0562, -97.8941, -46.6828, 0.48", "11.1475, -98.3279, -46.7422, 0.12", "11.264, -98.9422, -46.8066, 0.12", "11.4737, -100.19, -46.9383, 0.12", "11.5563, -100.744, -46.9897, 0.24", "11.6101, -101.089, -47.0107, 0.12", "11.7367, -101.874, -47.0319, 0.12", "11.9027, -102.865, -47.0254, 0.12", "11.9689, -103.236, -47.0176, 0.12", "12.1048, -103.978, -46.9872, 0.12", "12.2556, -104.735, -46.9428, 0.48", "12.3161, -104.989, -46.9237, 0.48", "12.3768, -105.233, -46.9056, 0.48", "12.4193, -105.405, -46.894, 0.12", "12.5185, -105.789, -46.8751, 0.12", "12.6766, -106.447, -46.86, 0.12", "12.8193, -107.219, -46.8637, 0.12", "12.8609, -107.496, -46.887, 0.72", "12.9015, -107.842, -46.9577, 0.84", "12.9301, -108.343, -47.1112, 0.24", "12.9164, -109.043, -47.3828, 0.24", "12.8892, -109.492, -47.5768, 0.24", "12.8681, -110.442, -47.984, 0.36", "12.8915, -111.189, -48.3241, 0.12", "12.9247, -111.696, -48.5562, 0.12", "12.9689, -112.301, -48.8235, 0.12", "13.0522, -113.032, -49.1151, 0.12", "13.2017, -113.934, -49.4353, 0.48", "13.3507, -114.619, -49.6205, 0.12", "13.4684, -115.072, -49.7643, 0.12", "13.5962, -115.519, -49.9467, 0.12", "13.7276, -115.97, -50.153, 0.12", "13.8554, -116.448, -50.4152, 0.6", "13.9597, -116.87, -50.6646, 0.6", "14.266, -118.067, -51.3595, 0.12", "14.4358, -118.692, -51.7664, 0.12", "14.5937, -119.327, -52.179, 0.12", "14.7752, -120.114, -52.6447, 0.6", "14.8566, -120.458, -52.8183, 0.6", "14.9435, -120.81, -52.9744, 0.6", "15.1548, -121.638, -53.2543, 0.12", "15.4445, -122.689, -53.561, 0.12", "15.696, -123.57, -53.7904, 0.12", "15.929, -124.323, -53.9448, 0.36", "16.014, -124.563, -54.0019, 0.12", "16.2315, -125.143, -54.1479, 0.12", "16.3888, -125.553, -54.2489, 0.48", "16.6412, -126.256, -54.5281, 0.12", "16.7618, -126.785, -54.8312, 0.12", "16.833, -127.621, -55.3944, 0.12", "16.8208, -127.983, -55.6557, 0.6", "16.7847, -128.207, -55.8137, 0.6", "16.4819, -129.314, -56.6021, 0.12", "16.2129, -130.067, -57.108, 0.12", "16.0274, -130.512, -57.3798, 0.36", "15.7656, -131.078, -57.6814, 0.36", "15.3928, -131.942, -58.0916, 0.36", "15.0832, -132.64, -58.3685, 0.12", "14.8203, -133.192, -58.5389, 0.12", "14.4843, -133.799, -58.7136, 0.48", "14.2908, -134.129, -58.8033, 0.12", "13.8059, -134.882, -58.9886, 0.12", "13.3605, -135.508, -59.1203, 0.6", "12.9822, -136.021, -59.2043, 0.12", "12.5447, -136.558, -59.2929, 0.12", "11.8804, -137.303, -59.4144, 0.12", "11.6121, -137.582, -59.4551, 0.12", "10.9864, -138.168, -59.5256, 0.48", "10.6454, -138.482, -59.5576, 0.12", "10.0545, -138.981, -59.59, 0.12", "9.64647, -139.283, -59.6094, 0.48", "9.13003, -139.602, -59.6407, 0.48", "8.9811, -139.687, -59.6498, 0.12", "8.52492, -139.923, -59.6758, 0.12", "8.03657, -140.167, -59.6995, 0.48", "7.5945, -140.399, -59.722, 0.48", "6.995, -140.719, -59.75, 0.12", "6.40781, -141.01, -59.7769, 0.12", "6.01297, -141.196, -59.7856, 0.12", "5.86376, -141.264, -59.786, 0.12", "5.46315, -141.435, -59.7793, 0.48", "4.86332, -141.687, -59.7564, 0.48", "4.30332, -141.91, -59.7234, 0.48", "3.66264, -142.145, -59.6887, 0.12", "3.25078, -142.283, -59.6697, 0.12", "2.19958, -142.565, -59.6347, 0.12", "1.76793, -142.66, -59.625, 0.12", "1.53192, -142.705, -59.6325, 0.6", "1.04722, -142.801, -59.6705, 0.6", "0.56199, -142.912, -59.7255, 0.24", "-0.710355, -143.263, -59.8875, 0.24", "-1.16908, -143.446, -59.9501, 0.48", "-1.92155, -143.827, -60.0516, 0.12", "-2.56603, -144.242, -60.1884, 0.12", "-3.15954, -144.716, -60.3522, 0.12", "-3.58075, -145.14, -60.4918, 0.12", "-4.32885, -146.117, -60.7756, 0.12", "-4.56319, -146.488, -60.8622, 0.48", "-5.20883, -147.766, -61.0712, 0.48", "-5.39114, -148.18, -61.1293, 0.12", "-5.6908, -148.948, -61.2209, 0.12", "-6.09433, -150.108, -61.3332, 0.12", "-6.56544, -151.724, -61.442, 0.12", "-7.06682, -153.849, -61.5634, 0.12", "-7.13387, -154.248, -61.5769, 0.72", "-7.20195, -154.862, -61.6108, 0.48", "-7.21019, -155.04, -61.6205, 0.12", "-7.17123, -156.108, -61.6792, 0.12", "-7.00975, -157.255, -61.7384, 0.12", "-6.81311, -158.065, -61.7699, 0.12", "-6.71149, -158.448, -61.7773, 0.36", "-6.52325, -159.122, -61.7753, 0.12", "-6.31875, -159.858, -61.7581, 0.12", "-6.09888, -160.66, -61.7156, 0.12", "-5.86815, -161.532, -61.6433, 0.12", "-5.74172, -162.299, -62.2496, 0.12", "-5.7068, -162.719, -63.1828, 0.12", "-5.70402, -162.789, -63.4132, 0.12", "-5.70547, -162.884, -63.8898, 0.72", "-5.70843, -162.929, -64.373, 1.08", "-5.87618, -163.029, -72.1487, 0.84", "-5.9381, -162.886, -74.5724, 0.12", "-5.94827, -162.838, -75.0401, 0.12", "-5.95615, -162.753, -75.7654, 0.12", "-5.94948, -162.468, -77.8706, 0.48", "-5.90698, -162.165, -79.8609, 0.6", "-5.80574, -161.849, -81.7066, 0.6", "-5.64447, -161.651, -84.6283, 0.12", "-5.60894, -161.668, -85.2734, 0.12", "-5.58865, -161.708, -85.5382, 0.12", "-5.55458, -161.786, -85.7639, 0.72", "-5.39654, -162.066, -86.28, 0.72", "-4.7543, -163.009, -87.5126, 0.12", "-4.63453, -163.143, -87.6616, 0.12", "-4.04019, -163.694, -88.3226, 0.12", "-3.03409, -164.425, -89.5788, 0.12", "-2.81962, -164.53, -89.8501, 0.12", "-2.14121, -164.71, -90.6815, 0.12", "-1.97077, -164.725, -90.8883, 0.72", "-1.67927, -164.738, -91.2758, 0.72", "-0.358269, -164.776, -93.4412, 0.12", "-0.0963839, -164.793, -93.9094, 0.12", "0.0200451, -164.801, -94.1509, 0.48", "0.299902, -164.803, -94.9979, 0.12", "0.463555, -164.785, -95.6172, 0.12", "0.691783, -164.752, -96.511, 0.72", "0.784583, -164.756, -96.8789, 0.84", "1.1113, -164.785, -98.4346, 1.32", "1.42391, -164.742, -100.344, 0.6", "1.46469, -164.699, -100.719, 0.6" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "26.2654, 2.91887, -6.40999, 0.48", "26.4851, 3.58189, -6.90041, 0.48", "26.7176, 4.35959, -7.53159, 0.12", "27.02, 5.27586, -8.29476, 0.12", "27.1958, 5.77502, -8.69561, 1.2", "27.2898, 6.03154, -8.9117, 1.2", "28.1284, 8.20962, -10.7853, 0.12", "28.4857, 8.97565, -11.507, 0.12", "28.6691, 9.31562, -11.8371, 0.12", "28.8939, 9.67105, -12.2013, 0.12", "29.5489, 10.5875, -13.3003, 0.72", "29.8661, 10.9784, -13.7912, 0.84", "30.2755, 11.3766, -14.282, 0.12", "30.4341, 11.4999, -14.4638, 0.12", "30.7816, 11.7337, -14.8993, 0.72", "32.3931, 12.6399, -16.9317, 0.12", "32.727, 12.803, -17.322, 0.12", "33.2605, 13.0482, -17.9392, 0.12", "33.4971, 13.1655, -18.2141, 0.96", "34.6593, 13.7919, -19.4614, 0.12", "34.9288, 13.9449, -19.767, 0.12", "35.4212, 14.2384, -20.2771, 0.6", "35.8737, 14.5137, -20.7572, 0.12", "36.65, 15.006, -21.5796, 0.12", "37.3746, 15.4681, -22.3238, 0.72", "38.8532, 16.4215, -23.7286, 0.12", "39.4288, 16.7963, -24.2803, 0.12", "39.9317, 17.1207, -24.7574, 0.12", "40.1631, 17.2739, -24.9584, 0.6", "40.9854, 17.8056, -25.588, 0.12", "41.2412, 17.9676, -25.7491, 0.12", "41.7192, 18.2567, -25.9849, 0.6", "41.9015, 18.3591, -26.1068, 0.12", "42.3398, 18.5861, -26.441, 0.12", "42.9871, 18.8557, -26.9108, 0.6", "43.3874, 18.9892, -27.1723, 0.6", "44.3775, 19.2417, -27.8102, 0.48", "45.0309, 19.389, -28.23, 0.12", "45.4552, 19.4887, -28.4949, 0.12", "46.2744, 19.6709, -28.9643, 0.12", "46.7099, 19.7785, -29.1755, 0.12", "47.2296, 19.9405, -29.4594, 0.48", "47.9035, 20.1857, -29.8179, 0.48", "48.1191, 20.2658, -29.9404, 0.48", "48.505, 20.4153, -30.1876, 0.12", "48.7112, 20.5025, -30.338, 0.12", "49.7704, 20.9209, -31.2604, 0.12", "50.3238, 21.1054, -31.7492, 1.44", "50.98, 21.2814, -32.3185, 0.12", "51.2992, 21.3503, -32.6115, 0.12", "51.5813, 21.392, -32.9338, 0.24", "52.6213, 21.4827, -34.1671, 0.12", "53.2604, 21.5117, -34.8965, 0.12", "53.5096, 21.5201, -35.1825, 0.72", "54.3468, 21.5535, -36.1004, 0.12", "56.3818, 21.644, -38.2123, 0.12", "56.9862, 21.6807, -38.7988, 0.12", "57.5429, 21.7301, -39.2737, 0.12", "57.9639, 21.7859, -39.6023, 0.12", "58.506, 21.8958, -39.9309, 0.72", "58.7336, 21.9652, -40.0107, 0.72", "59.4642, 22.2634, -40.1496, 0.12", "60.243, 22.6354, -40.3259, 0.12", "60.8519, 22.9435, -40.5069, 0.12", "61.7318, 23.4053, -40.8001, 0.12", "62.3292, 23.7236, -41.0021, 0.12", "63.0785, 24.1287, -41.2458, 0.48", "63.3586, 24.2811, -41.371, 0.48", "64.0392, 24.6297, -41.7724, 0.12", "64.5777, 24.8844, -42.138, 0.12", "65.235, 25.1714, -42.6444, 0.12", "65.4408, 25.2676, -42.8061, 0.48", "66.9957, 26.024, -43.9804, 0.12", "67.676, 26.3914, -44.608, 0.12", "67.9662, 26.5672, -44.8818, 0.36", "68.2952, 26.7786, -45.2106, 0.12", "68.8988, 27.1908, -45.8437, 0.12", "69.0513, 27.2989, -45.9978, 0.36", "70.5043, 28.39, -47.2648, 0.12", "71.4192, 29.1293, -48.2207, 0.12", "71.4192, 29.1293, -48.2207, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "26.2654, 2.91887, -6.40999, 0.36", "26.97, 3.65932, -6.48918, 0.36", "27.8227, 4.51395, -6.55954, 0.36", "28.3943, 5.0518, -6.59619, 0.96", "28.958, 5.58783, -6.58528, 1.2", "29.5206, 6.13552, -6.54369, 0.96", "29.9488, 6.57123, -6.49626, 0.72", "30.4332, 7.08701, -6.3792, 0.72", "30.7594, 7.4651, -6.24344, 0.72", "31.3479, 8.20106, -5.9039, 0.36", "31.4542, 8.33731, -5.82933, 0.36", "31.824, 8.78322, -5.52359, 0.6", "32.0365, 8.99254, -5.33598, 0.6", "32.8612, 9.60817, -4.5499, 0.48", "33.4347, 9.97323, -3.98544, 0.48", "33.8948, 10.2696, -3.53301, 0.48", "34.4532, 10.6104, -2.93934, 0.96", "35.1517, 10.9741, -2.18774, 0.72", "35.8251, 11.2697, -1.44041, 0.72", "36.3606, 11.465, -0.856406, 0.48", "37.2654, 11.8377, 0.0966626, 0.72", "38.033, 12.246, 0.832924, 0.72", "38.5532, 12.6067, 1.28789, 0.72", "39.3996, 13.3303, 1.96439, 0.48", "39.8315, 13.7576, 2.26096, 0.36", "40.5641, 14.534, 2.69155, 0.36", "41.1116, 15.1675, 2.95735, 0.36", "41.6695, 15.8891, 3.16661, 0.84", "42.1092, 16.4741, 3.31186, 0.84", "42.6504, 17.1866, 3.43915, 0.48", "43.1777, 17.8669, 3.56856, 0.48", "43.5193, 18.2909, 3.65918, 0.6", "44.0527, 18.9683, 3.79805, 0.72", "44.5958, 19.6772, 3.93861, 0.36", "45.0174, 20.2384, 4.05825, 0.36", "45.5647, 20.9922, 4.2213, 0.48", "45.9221, 21.5127, 4.32864, 0.96", "46.4654, 22.3534, 4.49843, 1.08", "46.9655, 23.1721, 4.64986, 0.36", "47.5884, 24.2116, 4.81228, 0.36", "48.2301, 25.2516, 4.96478, 0.48", "48.3746, 25.4815, 4.99439, 0.48", "48.6926, 25.9872, 5.05204, 0.12", "49.2052, 26.833, 5.14035, 0.12", "49.7243, 27.7579, 5.2158, 0.48", "50.061, 28.4062, 5.26763, 0.36", "50.4062, 29.1178, 5.31746, 0.36", "50.7861, 29.9231, 5.36279, 0.48", "50.9487, 30.2679, 5.37724, 0.12", "51.41, 31.23, 5.4138, 0.12", "51.575, 31.5491, 5.43649, 0.12", "51.9953, 32.3417, 5.42517, 0.48", "52.1842, 32.6943, 5.40408, 0.24", "52.523, 33.338, 5.34125, 0.24", "52.7998, 33.883, 5.27505, 0.48", "53.2393, 34.8242, 5.1506, 0.96", "53.9542, 36.4743, 4.97264, 0.96", "54.1706, 37.0071, 4.93122, 0.12", "54.4583, 37.7954, 4.89123, 0.12", "54.6085, 38.2686, 4.9004, 0.24", "54.871, 39.184, 4.97969, 0.24", "55.0588, 39.886, 5.07866, 0.36", "55.2579, 40.6343, 5.24754, 0.36", "55.2999, 40.7961, 5.27897, 0.24", "55.5413, 41.7777, 5.51012, 0.24", "55.7588, 42.6718, 5.72482, 0.48", "55.8744, 43.1619, 5.84137, 0.24", "56.026, 43.7507, 5.96601, 0.24", "56.2924, 44.7334, 6.15871, 0.72", "56.5715, 45.703, 6.32389, 0.12", "57.0105, 47.1662, 6.52353, 0.12", "57.125, 47.5418, 6.57739, 0.12", "57.4671, 48.6545, 6.72744, 0.12", "57.6218, 49.1441, 6.78649, 0.96", "57.8178, 49.7767, 6.85172, 0.96", "58.1308, 50.8016, 6.92512, 0.48", "58.4005, 51.714, 6.99664, 0.36", "58.7597, 52.9275, 7.09159, 0.36", "58.9216, 53.4631, 7.13127, 0.36", "59.1974, 54.2946, 7.20258, 0.6", "59.3881, 54.819, 7.24899, 0.12", "59.6272, 55.3968, 7.29923, 0.12", "59.9284, 56.0335, 7.34784, 0.12", "60.4663, 56.9997, 7.42851, 0.12", "60.8472, 57.6542, 7.48192, 0.48", "61.0748, 58.0362, 7.51065, 0.12", "61.5382, 58.8048, 7.56596, 0.12", "61.7692, 59.1849, 7.59045, 0.12", "62.6145, 60.6289, 7.6652, 0.12", "62.9113, 61.1628, 7.70286, 0.12", "63.2954, 61.8478, 7.75711, 0.12", "63.3809, 62.0007, 7.77342, 0.48", "63.7218, 62.6269, 7.84983, 0.48", "63.9616, 63.0769, 7.91009, 0.12", "64.4256, 63.9457, 8.0778, 0.12", "64.9782, 64.9494, 8.32776, 0.12", "65.3939, 65.7641, 8.53662, 0.48", "65.7138, 66.4577, 8.72995, 0.72", "65.9194, 66.9413, 8.88522, 0.72", "66.2082, 67.7184, 9.13981, 0.72", "66.5321, 68.7393, 9.46301, 0.12", "67.0023, 70.529, 10.0269, 0.12", "67.2031, 71.3252, 10.267, 0.48", "67.3881, 72.0651, 10.4642, 0.12", "67.7038, 73.2248, 10.7751, 0.12", "67.8804, 73.8323, 10.867, 0.6", "68.1757, 74.7291, 10.9093, 0.6", "68.4443, 75.4059, 10.8654, 0.48", "68.8841, 76.3548, 10.7165, 0.48", "69.5766, 77.6854, 10.4326, 0.36", "70.8789, 79.8735, 9.90258, 0.12", "71.3809, 80.6476, 9.7038, 0.12", "72.1873, 81.8111, 9.46595, 0.12", "72.7009, 82.5038, 9.3713, 0.12", "72.9252, 82.7809, 9.35793, 0.6", "73.3265, 83.2594, 9.3895, 0.84", "73.7245, 83.7007, 9.52331, 0.6", "74.612, 84.6161, 9.85746, 0.12", "75.0241, 85.0393, 10.0241, 0.12", "75.28, 85.3191, 10.1355, 0.72", "75.7755, 85.9355, 10.3556, 0.72", "76.0296, 86.292, 10.4664, 0.48", "76.1711, 86.5245, 10.5206, 0.12", "76.5566, 87.2499, 10.6091, 0.12", "76.7462, 87.6648, 10.6583, 0.72", "76.9947, 88.2514, 10.6826, 0.96", "77.0973, 88.5066, 10.6919, 0.96", "77.3247, 89.1075, 10.7011, 0.12", "77.6415, 89.9436, 10.6922, 0.12", "77.8271, 90.4239, 10.6601, 0.12", "78.1894, 91.2959, 10.5302, 0.24", "83.1107, 100.257, 12.2465, 0.24", "88.3543, 108.888, 14.47, 0.24", "94.0473, 117.384, 15.9227, 0.24", "98.6668, 126.144, 18.9316, 0.24", "102.867, 134.305, 23.6176, 0.24", "106.992, 142.761, 27.8744, 0.24", "111.905, 149.993, 33.2058, 0.24", "116.97, 156.608, 39.0928, 0.24", "120.308, 163.749, 45.6197, 0.24", "124.8, 170.927, 51.3726, 0.24" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-7.23371, -31.0318, 4.61105, 0.48", "-7.42053, -31.8043, 4.43923, 0.48", "-7.73403, -33.077, 4.17571, 0.48", "-7.93438, -33.8838, 4.01668, 0.36", "-8.1136, -34.6025, 3.8838, 0.36", "-8.31544, -35.4344, 3.74073, 0.36", "-8.46634, -36.075, 3.63697, 0.6", "-8.58939, -36.6382, 3.56856, 0.84", "-8.69575, -37.1521, 3.54887, 1.08", "-8.80331, -37.6487, 3.55435, 1.32", "-8.91457, -38.139, 3.55961, 1.32", "-8.96821, -38.3846, 3.56259, 1.32", "-9.15183, -39.3482, 3.57546, 0.84", "-9.28928, -40.1318, 3.58662, 0.6", "-9.35873, -40.5204, 3.5896, 0.84", "-9.47764, -41.1761, 3.58808, 0.84", "-9.57332, -41.6592, 3.58254, 0.6", "-9.76077, -42.5282, 3.57872, 0.6", "-10.0176, -43.6476, 3.57605, 0.72", "-10.2031, -44.4099, 3.58721, 0.72", "-10.3962, -45.1487, 3.60995, 0.72", "-10.6286, -45.9473, 3.64451, 0.72", "-10.9593, -47.0067, 3.69161, 0.36", "-11.2344, -47.8646, 3.74907, 0.36", "-11.3529, -48.2415, 3.78178, 0.36", "-11.4298, -48.4993, 3.81518, 0.72", "-11.5238, -48.839, 3.89643, 0.96", "-11.6829, -49.548, 4.12874, 0.96", "-11.8165, -50.2477, 4.39541, 0.84", "-11.9343, -50.9452, 4.67405, 0.6", "-12.028, -51.5927, 4.96799, 0.48", "-12.1743, -52.7376, 5.4999, 0.48", "-12.2464, -53.3109, 5.7666, 0.6", "-12.3367, -54.028, 6.06178, 0.84", "-12.4428, -54.8535, 6.33384, 0.84", "-12.6188, -56.2767, 6.70387, 0.72", "-12.7205, -57.1368, 6.85185, 0.6", "-12.771, -57.586, 6.89284, 0.72", "-12.8947, -58.7032, 6.96354, 0.36", "-12.9633, -59.5767, 7.04479, 0.12", "-12.9919, -60.0755, 7.10732, 0.12", "-13.0079, -60.4564, 7.15846, 0.48", "-13.0296, -61.1878, 7.29436, 0.84", "-13.0556, -62.057, 7.49161, 0.84", "-13.147, -64.1771, 8.1217, 0.48", "-13.1889, -65.0059, 8.38644, 0.36", "-13.2093, -65.3538, 8.49733, 0.36", "-13.2397, -65.8382, 8.67362, 0.72", "-13.277, -66.3589, 8.87516, 0.84", "-13.3651, -67.5188, 9.31442, 0.72", "-13.4361, -68.3163, 9.64157, 0.72", "-13.5022, -69.1153, 9.99117, 0.72", "-13.6065, -70.5583, 10.6453, 0.6", "-13.6392, -71.1279, 10.9043, 0.6", "-13.691, -71.9305, 11.2489, 0.72", "-13.8271, -73.443, 11.9062, 1.2", "-13.9078, -74.1184, 12.2195, 1.32", "-13.9887, -74.6726, 12.4704, 1.32", "-14.0999, -75.3566, 12.7393, 0.48", "-14.2705, -76.3949, 13.1203, 0.48", "-14.4463, -77.4989, 13.4972, 0.96", "-14.5739, -78.3803, 13.7461, 0.72", "-14.6703, -79.0993, 13.9466, 0.48", "-14.7436, -79.7186, 14.1178, 0.48", "-14.8345, -80.6763, 14.3673, 0.48", "-14.8772, -81.4402, 14.5353, 0.48", "-14.9044, -82.0513, 14.6283, 0.72", "-14.9354, -82.687, 14.7109, 1.08", "-14.9827, -83.6665, 14.8367, 0.36", "-14.9972, -83.9146, 14.8763, 0.36", "-15.0532, -84.7712, 15.0184, 0.48", "-15.1085, -85.5257, 15.1342, 0.6", "-15.1741, -86.265, 15.2697, 1.08", "-15.2572, -87.0013, 15.4109, 1.2", "-15.4047, -88.0397, 15.6035, 0.72", "-15.5201, -88.7617, 15.7372, 0.72", "-15.6509, -89.5025, 15.8714, 0.48", "-15.8677, -90.5804, 16.0482, 0.36", "-16.1387, -91.7142, 16.2356, 0.36", "-16.3441, -92.4715, 16.352, 0.36", "-16.5853, -93.298, 16.4575, 0.48", "-16.7947, -94.0153, 16.5471, 0.72", "-17.0864, -95.0898, 16.6874, 0.72", "-17.3527, -96.1303, 16.8145, 0.36", "-17.5188, -96.7429, 16.8951, 0.36", "-17.735, -97.4864, 17.0113, 0.6", "-18.1061, -98.6576, 17.2093, 0.6", "-18.3326, -99.3537, 17.324, 0.36", "-18.7092, -100.502, 17.513, 0.36", "-19.065, -101.581, 17.6727, 0.36", "-19.4439, -102.724, 17.8398, 0.48", "-19.6704, -103.412, 17.9371, 0.6", "-20.0966, -104.755, 18.1043, 0.6", "-20.2978, -105.459, 18.1804, 0.48", "-20.5591, -106.571, 18.2917, 0.48", "-20.7299, -107.421, 18.3621, 0.48", "-20.8673, -108.165, 18.4067, 0.84", "-21.0987, -109.523, 18.48, 0.72", "-21.1979, -110.163, 18.5075, 0.36", "-21.2994, -110.911, 18.5285, 0.36", "-21.4224, -111.919, 18.5531, 0.36", "-21.5252, -112.795, 18.5716, 0.48", "-21.6146, -113.639, 18.5851, 0.6", "-21.7563, -115.006, 18.602, 0.6", "-21.8398, -115.892, 18.6239, 0.6", "-21.8908, -116.509, 18.6478, 0.6", "-21.9716, -117.904, 18.7213, 0.6", "-21.9959, -118.533, 18.7605, 0.72", "-22.0005, -119.198, 18.8201, 0.96", "-21.9497, -120.514, 18.9595, 0.36", "-21.8858, -121.272, 19.0491, 0.36", "-21.769, -122.167, 19.152, 0.72", "-21.5766, -123.294, 19.2678, 0.84", "-21.3459, -124.648, 19.3873, 0.36", "-21.1549, -125.751, 19.5012, 0.36", "-21.0241, -126.535, 19.5864, 0.36", "-20.9106, -127.307, 19.6807, 0.24", "-20.8011, -128.427, 19.8242, 0.24", "-20.7585, -129.603, 19.9767, 0.36", "-20.7771, -130.523, 20.0877, 0.48", "-20.8248, -131.271, 20.181, 0.36", "-20.8958, -132.132, 20.2857, 0.36", "-20.9679, -133.039, 20.3952, 0.36", "-21.0103, -133.703, 20.4604, 0.36", "-21.0304, -134.221, 20.49, 0.6", "-21.0467, -134.84, 20.4945, 0.36", "-21.0492, -135.344, 20.5, 0.36", "-21.039, -135.976, 20.5089, 0.36", "-21.0259, -136.354, 20.5133, 0.6", "-21.0172, -136.739, 20.5164, 0.6", "-21.0131, -137.259, 20.5125, 0.48", "-21.0122, -137.768, 20.5017, 0.48", "-21.0098, -138.331, 20.4837, 0.48", "-20.9965, -138.736, 20.4678, 0.72", "-20.9527, -139.365, 20.4974, 0.72", "-20.9001, -139.942, 20.5566, 0.48", "-20.8362, -140.551, 20.6446, 0.36", "-20.767, -141.178, 20.7552, 0.36", "-20.6858, -141.884, 20.893, 0.36", "-20.5438, -143.435, 21.2131, 0.24", "-20.5405, -144.051, 21.3413, 0.24", "-20.5808, -144.418, 21.4143, 0.6", "-20.7477, -145.146, 21.5352, 0.72", "-20.877, -145.525, 21.5794, 0.36", "-21.136, -146.135, 21.616, 0.36", "-21.6727, -147.182, 21.6141, 0.36", "-22.0241, -147.807, 21.6128, 0.36", "-22.4521, -148.523, 21.6137, 0.36", "-22.983, -149.387, 21.6166, 0.36", "-23.4505, -150.15, 21.6203, 0.36", "-24.255, -151.513, 21.6255, 0.48", "-24.9846, -152.837, 21.6291, 0.48", "-25.3225, -153.451, 21.6303, 0.6", "-25.6448, -154.039, 21.6256, 0.6", "-25.9104, -154.524, 21.6168, 0.36", "-26.374, -155.441, 21.5896, 0.36", "-26.6203, -156.017, 21.5652, 0.48", "-26.813, -156.52, 21.5417, 0.48", "-26.9368, -156.836, 21.5278, 0.6", "-27.104, -157.245, 21.5326, 0.6", "-27.4493, -158.057, 21.5822, 0.36", "-27.7386, -158.713, 21.6476, 0.12", "-28.005, -159.327, 21.744, 0.12", "-28.4688, -160.456, 21.9659, 0.12", "-28.7549, -161.163, 22.1297, 0.6", "-28.9436, -161.673, 22.2562, 0.72", "-29.2542, -162.656, 22.5003, 0.36", "-29.408, -163.265, 22.6409, 0.12", "-29.5388, -163.869, 22.7603, 0.12", "-29.5388, -163.869, 22.7603, 0.36", "-29.6929, -164.615, 22.8243, 0.24", "-29.8971, -165.588, 22.871, 0.24", "-30.0313, -166.246, 22.8769, 0.24", "-30.1617, -166.861, 22.8749, 0.36", "-30.3391, -167.626, 22.8823, 0.36", "-30.5802, -168.551, 22.8997, 0.36", "-30.7389, -169.101, 22.9132, 0.36", "-30.9208, -169.713, 22.939, 0.36", "-31.0857, -170.289, 22.969, 0.12", "-31.417, -171.468, 23.0414, 0.24", "-31.7788, -172.757, 23.1333, 0.24", "-32.2609, -174.504, 23.2678, 0.24", "-32.3906, -174.976, 23.305, 0.12", "-32.7089, -176.087, 23.37, 0.12", "-32.7879, -176.346, 23.3784, 0.36", "-33.0191, -177.076, 23.3964, 0.36", "-33.3782, -178.008, 23.403, 0.36", "-33.7846, -178.645, 23.3864, 0.72", "-34.1291, -178.982, 23.366, 0.48", "-34.645, -179.39, 23.3355, 0.48", "-34.9477, -179.593, 23.318, 0.12", "-35.8638, -180.077, 23.2673, 0.12", "-37.3793, -180.709, 23.2009, 0.12", "-38.5374, -181.148, 23.1692, 0.12", "-41.8495, -191.035, 23.783, 0.12", "-45.8698, -200.615, 24.5493, 0.12", "-51.7067, -209.104, 23.7983, 0.12", "-58.0599, -217.127, 24.9166, 0.12", "-63.637, -225.561, 27.0106, 0.12", "-69.231, -233.962, 29.1764, 0.12", "-76.2818, -241.376, 29.8324, 0.12", "-84.3786, -247.436, 28.7695, 0.12", "-92.8439, -252.536, 26.5899, 0.12", "-102.143, -256.192, 25.4027, 0.12", "-111.399, -260.141, 24.973, 0.12" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-7.23371, -31.0318, 4.61105, 0.48", "-7.92401, -31.6347, 5.01683, 0.48", "-8.46255, -32.1218, 5.30867, 0.48", "-8.91882, -32.5507, 5.58478, 0.48", "-9.95168, -33.6091, 6.23698, 0.48", "-10.2956, -33.9805, 6.44821, 0.48", "-10.6295, -34.3704, 6.64451, 0.36", "-11.0171, -34.881, 6.89863, 0.36", "-11.404, -35.4355, 7.12908, 0.72", "-11.7217, -35.9471, 7.31885, 1.2", "-12.0469, -36.5387, 7.48663, 1.2", "-12.4453, -37.3702, 7.72274, 0.48", "-12.7277, -38.0287, 7.90019, 0.36", "-12.9463, -38.598, 8.0357, 0.36", "-13.2428, -39.3905, 8.18634, 0.84", "-13.4771, -40.0025, 8.29179, 0.84", "-13.837, -40.9242, 8.42141, 0.36", "-14.076, -41.512, 8.48434, 0.72", "-14.3337, -42.1216, 8.53025, 0.84", "-14.8219, -43.1945, 8.59434, 0.12", "-15.288, -44.1514, 8.62847, 0.12", "-15.88, -45.2783, 8.6791, 0.12", "-16.2149, -45.8578, 8.70945, 0.6", "-16.4391, -46.2355, 8.72944, 0.6", "-16.8226, -46.8921, 8.76293, 0.12", "-17.0714, -47.3401, 8.79131, 0.12", "-17.3853, -47.9618, 8.83827, 0.6", "-17.7837, -48.8468, 8.93517, 0.6", "-17.9663, -49.3033, 8.99409, 0.6", "-18.1761, -49.9008, 9.07503, 0.48", "-18.3457, -50.4669, 9.17194, 0.72", "-18.5043, -51.0485, 9.29922, 0.72", "-18.6768, -51.7806, 9.48594, 0.36", "-18.7286, -52.0064, 9.549, 0.36", "-18.9611, -52.7833, 9.76449, 0.6", "-19.2545, -53.5703, 9.96357, 0.36", "-19.3682, -53.826, 10.0316, 0.24", "-19.5914, -54.2707, 10.1566, 0.24", "-19.8469, -54.7428, 10.2831, 0.24", "-20.3065, -55.5696, 10.5001, 0.6", "-20.5993, -56.1012, 10.6339, 0.6", "-20.9953, -56.8461, 10.7896, 0.48", "-21.1027, -57.0669, 10.8325, 0.48", "-21.3222, -57.5718, 10.9248, 0.36", "-21.6605, -58.4401, 11.0884, 0.36", "-21.7901, -58.7921, 11.1611, 0.48", "-22.0617, -59.5098, 11.3049, 0.48", "-22.2957, -60.09, 11.4246, 0.72", "-22.4409, -60.4251, 11.5065, 0.84", "-22.8031, -61.2168, 11.7414, 0.72", "-23.1004, -61.8458, 11.9469, 0.36", "-23.3882, -62.4079, 12.1376, 0.36", "-23.6805, -62.9198, 12.3389, 0.24", "-24.1468, -63.6687, 12.653, 0.24", "-24.4857, -64.1922, 12.87, 0.12", "-24.811, -64.6963, 13.0651, 0.12", "-25.0905, -65.137, 13.2355, 0.12", "-25.4104, -65.6489, 13.4678, 0.12", "-25.6162, -65.9951, 13.658, 0.12", "-25.7743, -66.2896, 13.8588, 0.12", "-25.8694, -66.5137, 14.0081, 0.72", "-26.0411, -67.0043, 14.3397, 0.96", "-26.2605, -67.7495, 14.8216, 0.84", "-26.4483, -68.5276, 15.2723, 0.72", "-26.5845, -69.1963, 15.6399, 0.36", "-26.7473, -70.0705, 16.0676, 0.24", "-26.8146, -70.4472, 16.2188, 0.84", "-26.876, -70.7813, 16.3196, 0.84", "-27.0249, -71.5073, 16.4548, 0.72", "-27.2003, -72.2899, 16.5571, 0.48", "-27.3884, -73.0446, 16.6556, 0.24", "-27.6009, -73.8012, 16.7638, 0.24", "-27.7594, -74.3207, 16.8565, 0.12", "-28.2082, -75.6758, 17.1384, 0.12", "-28.554, -76.5696, 17.3422, 0.12", "-28.7258, -76.9841, 17.4494, 0.48", "-29.0399, -77.7325, 17.6645, 0.6", "-29.4221, -78.6505, 17.9314, 0.48", "-29.6811, -79.2518, 18.0972, 0.36", "-30.0762, -80.1022, 18.3254, 0.48", "-30.4694, -80.9101, 18.5159, 0.24", "-30.7376, -81.4597, 18.6446, 0.24", "-31.226, -82.4977, 18.887, 0.24", "-31.6782, -83.5348, 19.1079, 0.24", "-31.9358, -84.1619, 19.2318, 0.6", "-32.0254, -84.4141, 19.2716, 0.6", "-32.2829, -85.2984, 19.3632, 0.24", "-32.4488, -86.0208, 19.4199, 0.24", "-32.5576, -86.7672, 19.4549, 0.48", "-32.5936, -87.5214, 19.4176, 0.36", "-32.5897, -88.6459, 19.2779, 0.36", "-32.5693, -89.5372, 19.1185, 0.36", "-32.5664, -89.8108, 19.0544, 0.84", "-32.5746, -90.1877, 18.965, 0.84", "-32.6353, -91.5758, 18.6605, 0.24", "-32.6604, -91.936, 18.5957, 0.24", "-32.7032, -92.2107, 18.5541, 0.24", "-32.934, -93.1919, 18.4564, 0.24", "-33.1304, -93.9536, 18.4148, 0.36", "-33.2191, -94.2798, 18.409, 0.12", "-33.3835, -94.8985, 18.4209, 0.12", "-33.6949, -96.2589, 18.4437, 0.12", "-33.977, -97.8146, 18.4651, 0.12", "-34.1454, -99.0579, 18.478, 0.12", "-34.2194, -99.6725, 18.4816, 0.48", "-34.305, -100.433, 18.4836, 0.48", "-34.3612, -101.099, 18.487, 0.48", "-34.4001, -101.989, 18.4943, 0.36", "-34.4193, -102.483, 18.5002, 0.36", "-34.4958, -103.285, 18.5123, 0.48", "-34.5638, -103.684, 18.5192, 0.12", "-34.6376, -103.944, 18.5425, 0.12", "-34.7767, -104.309, 18.6013, 0.12", "-35.0022, -104.806, 18.7167, 0.6", "-35.2123, -105.265, 18.8474, 0.84", "-35.3234, -105.508, 18.9254, 0.84", "-35.7814, -106.45, 19.218, 0.12", "-35.8894, -106.666, 19.2766, 0.12", "-36.0038, -106.914, 19.3328, 0.12", "-36.111, -107.155, 19.389, 0.12", "-36.4314, -107.873, 19.546, 0.36", "-36.7187, -108.512, 19.7056, 0.36", "-37.107, -109.352, 19.9166, 0.36", "-37.3662, -109.884, 20.0717, 0.36", "-37.6953, -110.572, 20.2869, 0.6", "-37.9169, -111.027, 20.4357, 0.6", "-38.3327, -111.839, 20.7055, 0.36", "-38.4968, -112.134, 20.801, 0.36", "-38.718, -112.51, 20.925, 0.36", "-39.0935, -113.114, 21.104, 0.36", "-39.3635, -113.558, 21.1916, 0.36", "-39.8287, -114.316, 21.2938, 0.48", "-40.0705, -114.683, 21.2938, 0.48" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "142.683, 74.6283, 139.325, 0.48", "149.316, 78.5986, 145.784, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "142.683, 74.6283, 139.325, 0.36", "148.945, 78.4307, 146.23, 0.48", "154.849, 81.6027, 153.715, 0.48", "159.758, 84.0999, 162.096, 0.48", "165.31, 85.5141, 170.303, 0.48", "170.176, 84.9307, 179.021, 0.48", "176.545, 83.3288, 186.578, 0.48", "183.218, 80.0114, 193.324, 0.48" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-77.9397, -164.607, -98.7539, 0.12", "-78.6241, -164.708, -99.7154, 0.12", "-79.0031, -164.771, -100.24, 0.12", "-80.3895, -165.007, -102.08, 0.6", "-80.7955, -165.089, -102.67, 0.6", "-81.4478, -165.258, -103.669, 0.36", "-82.0524, -165.43, -104.586, 0.36", "-82.313, -165.532, -104.983, 0.6", "-82.5095, -165.626, -105.271, 0.6", "-83.8779, -166.455, -107.146, 0.24", "-84.4836, -166.862, -107.962, 0.24", "-84.8157, -167.104, -108.427, 0.24", "-85.4793, -167.609, -109.38, 0.24", "-85.7888, -167.858, -109.836, 0.24", "-86.4759, -168.434, -110.856, 0.6", "-86.6673, -168.596, -111.119, 0.6", "-87.8492, -169.585, -112.776, 0.12", "-88.0445, -169.75, -113.06, 0.12", "-88.2753, -169.93, -113.384, 0.48", "-88.8662, -170.32, -114.087, 0.12", "-89.1732, -170.49, -114.346, 0.12", "-89.5117, -170.65, -114.568, 0.12", "-89.8072, -170.772, -114.688, 0.12", "-90.24, -170.936, -114.883, 0.48", "-91.0179, -171.189, -115.229, 0.6", "-91.4489, -171.315, -115.402, 0.6", "-92.1237, -171.519, -115.679, 0.12", "-92.6341, -171.688, -115.933, 0.12", "-93.2477, -171.918, -116.271, 0.12", "-93.8357, -172.199, -116.611, 0.12", "-94.2516, -172.456, -116.846, 0.6", "-94.6357, -172.727, -117.057, 0.6", "-95.5176, -173.4, -117.582, 0.12", "-95.7517, -173.592, -117.732, 0.12", "-96.2756, -174.051, -118.099, 0.12", "-96.6295, -174.372, -118.362, 0.6", "-96.8011, -174.528, -118.497, 0.6", "-97.7432, -175.407, -119.22, 0.12", "-98.1268, -175.799, -119.491, 0.12", "-98.9717, -176.697, -120.081, 0.24", "-99.4582, -177.209, -120.42, 0.36", "-99.9151, -177.681, -120.72, 0.12", "-100.446, -178.217, -121.023, 0.12", "-101.133, -178.884, -121.314, 0.12", "-101.531, -179.215, -121.488, 0.48", "-101.956, -179.483, -121.654, 0.12", "-102.274, -179.603, -121.778, 0.12", "-102.844, -179.715, -121.975, 0.12", "-103.212, -179.745, -122.098, 0.36", "-104.351, -179.756, -122.466, 0.12", "-104.966, -179.764, -122.65, 0.12", "-105.786, -179.804, -122.861, 0.12", "-106.266, -179.849, -122.974, 0.48", "-106.787, -179.928, -123.076, 0.48", "-107.287, -180.034, -123.139, 0.36", "-107.654, -180.136, -123.115, 0.36", "-108.163, -180.291, -123.035, 0.36", "-108.57, -180.406, -122.938, 0.36", "-108.881, -180.489, -122.849, 0.36", "-109.767, -180.728, -122.558, 0.48", "-110.915, -181.083, -122.156, 0.12", "-111.353, -181.251, -122.007, 0.12", "-111.881, -181.494, -121.841, 0.12", "-112.25, -181.708, -121.741, 0.12", "-112.511, -181.929, -121.691, 0.12", "-112.942, -182.484, -121.652, 0.12", "-113.456, -183.333, -121.667, 0.6", "-113.592, -183.617, -121.671, 0.12", "-113.821, -184.202, -121.681, 0.12", "-114.194, -185.258, -121.698, 0.12", "-114.511, -186.207, -121.717, 0.12", "-114.719, -186.839, -121.729, 0.12", "-114.947, -187.556, -121.737, 0.12", "-115.02, -187.796, -121.737, 0.12", "-115.177, -188.297, -121.738, 0.36", "-115.265, -188.573, -121.742, 0.12", "-115.562, -189.429, -121.766, 0.12", "-115.831, -190.13, -121.789, 0.12", "-116.029, -190.605, -121.804, 0.6", "-116.3, -191.251, -121.828, 0.6", "-116.514, -191.768, -121.847, 0.12", "-116.847, -192.536, -121.884, 0.12", "-117.138, -193.175, -121.923, 0.12", "-117.376, -193.679, -121.954, 0.6", "-117.587, -194.143, -121.98, 0.6", "-117.804, -194.663, -122.005, 0.6", "-117.926, -194.959, -122.015, 0.12", "-118.32, -195.9, -122.048, 0.12", "-118.671, -196.709, -122.107, 0.12", "-118.95, -197.307, -122.167, 0.12", "-119.311, -198.046, -122.252, 0.12", "-119.632, -198.694, -122.333, 0.12", "-119.872, -199.194, -122.395, 0.36", "-120.179, -199.831, -122.532, 0.12", "-120.364, -200.216, -122.64, 0.12", "-120.73, -201.006, -122.889, 0.12", "-121.147, -201.933, -123.173, 0.12", "-121.433, -202.582, -123.372, 0.12", "-121.989, -203.846, -123.947, 0.12", "-122.151, -204.211, -124.146, 0.36", "-122.371, -204.689, -124.455, 0.12", "-122.888, -205.76, -125.417, 0.12", "-123.085, -206.127, -125.812, 0.6", "-124.02, -207.72, -127.681, 0.12", "-124.289, -208.138, -128.217, 0.12", "-124.417, -208.326, -128.476, 0.6", "-125.301, -209.501, -130.222, 0.12", "-125.752, -210.009, -131.021, 0.12", "-125.947, -210.188, -131.251, 0.12", "-126.351, -210.487, -131.519, 0.36", "-126.849, -210.813, -131.79, 0.12", "-127.261, -211.065, -131.925, 0.12", "-127.82, -211.389, -131.999, 0.12", "-128.851, -211.979, -132.13, 0.12", "-130.162, -212.736, -132.285, 0.12", "-130.53, -212.954, -132.319, 0.12", "-131.714, -213.62, -132.429, 0.12", "-131.947, -213.758, -132.449, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-77.9397, -164.607, -98.7539, 0.12", "-77.9354, -164.647, -98.7699, 0.12", "-77.9265, -164.766, -98.807, 0.6", "-77.8615, -165.126, -98.8963, 0.72", "-77.653, -165.901, -99.1331, 0.48", "-77.5032, -166.373, -99.2756, 0.48", "-77.3517, -166.847, -99.4112, 0.24", "-77.1793, -167.41, -99.5849, 0.24", "-76.9577, -168.247, -99.8396, 0.24", "-76.7246, -169.144, -100.105, 0.12", "-76.5474, -169.775, -100.279, 0.12", "-76.3336, -170.457, -100.481, 0.12", "-76.1308, -171.023, -100.664, 0.48", "-75.8741, -171.843, -100.931, 0.36", "-75.8177, -172.223, -101.029, 0.12", "-75.7829, -172.7, -101.181, 0.12", "-75.7615, -172.96, -101.282, 0.36", "-75.7163, -173.385, -101.449, 0.12", "-75.6033, -174.242, -101.712, 0.12", "-75.4059, -175.603, -102.07, 0.12", "-75.1946, -177.078, -102.436, 0.12", "-75.0485, -178.056, -102.655, 0.12", "-74.9352, -178.664, -102.774, 0.12", "-74.6534, -179.728, -102.957, 0.48", "-74.4902, -180.134, -103.018, 0.48", "-74.1496, -180.786, -103.118, 0.24", "-73.8471, -181.34, -103.186, 0.24", "-73.594, -181.817, -103.275, 0.24", "-73.2106, -182.577, -103.482, 0.12", "-72.7865, -183.497, -103.8, 0.12", "-72.4681, -184.253, -104.055, 0.12", "-72.3351, -184.583, -104.17, 0.24", "-72.0642, -185.232, -104.429, 0.36", "-71.8259, -185.793, -104.664, 0.12", "-71.694, -186.117, -104.794, 0.12", "-71.5163, -186.604, -104.973, 0.12", "-71.2874, -187.286, -105.167, 0.36", "-70.9954, -188.126, -105.364, 0.12", "-70.7842, -188.698, -105.459, 0.12", "-70.6077, -189.161, -105.531, 0.12", "-70.3078, -189.973, -105.655, 0.12", "-70.0274, -190.807, -105.757, 0.12", "-69.919, -191.137, -105.785, 0.12", "-69.6184, -192.101, -105.829, 0.6", "-69.3295, -193.092, -105.854, 0.12", "-68.8396, -194.716, -105.892, 0.12", "-68.1467, -196.943, -105.939, 0.12", "-67.391, -199.4, -105.979, 0.12", "-67.0925, -200.415, -105.987, 0.12", "-66.8236, -201.404, -105.963, 0.48" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-40.0705, -114.683, 21.2938, 0.48", "-40.2995, -115.845, 21.4768, 0.48", "-40.5078, -116.965, 21.6187, 0.36", "-40.5964, -117.473, 21.6735, 0.12", "-40.739, -118.328, 21.8147, 0.12", "-40.8725, -119.067, 21.9563, 0.12", "-40.9634, -119.54, 22.0525, 0.6", "-41.1032, -120.157, 22.1534, 0.6", "-41.1888, -120.523, 22.1733, 0.6", "-41.415, -121.734, 22.1265, 0.12", "-41.4874, -122.355, 22.0539, 0.12", "-41.4885, -122.735, 21.9791, 0.12", "-41.2485, -123.817, 21.6557, 0.12", "-39.9524, -125.536, 20.892, 0.12", "-39.2654, -126.004, 20.6294, 0.12", "-38.6229, -126.302, 20.431, 0.12", "-37.4267, -126.723, 20.1679, 0.12", "-36.2763, -127.07, 19.9912, 0.12", "-35.3125, -127.284, 19.8973, 0.12", "-34.5204, -127.406, 19.8973, 0.36", "-34.2554, -127.45, 19.8973, 0.12", "-33.2116, -127.713, 19.8973, 0.12", "-32.5679, -127.977, 19.8973, 0.24", "-28.3644, -137.497, 20.254, 0.24", "-23.6831, -146.769, 20.5796, 0.24", "-19.2537, -156.169, 21.0609, 0.24", "-14.4793, -165.39, 20.7634, 0.24", "-9.69086, -174.503, 22.0852, 0.24", "-3.60125, -182.818, 21.641, 0.24", "3.66569, -189.942, 20.5607, 0.24", "9.51689, -197.906, 17.6917, 0.24", "15.7551, -205.828, 15.6515, 0.24" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-40.0705, -114.683, 21.2938, 0.12", "-40.721, -114.778, 21.1527, 0.12", "-41.0814, -114.884, 21.0902, 0.12", "-41.8996, -115.162, 20.8614, 0.12", "-42.2487, -115.268, 20.7516, 0.12", "-43.0523, -115.511, 20.499, 0.12", "-44.7707, -116.03, 19.9587, 0.12", "-45.1595, -116.181, 19.8349, 0.12", "-46.1891, -116.648, 19.5197, 0.84", "-46.9909, -117.075, 19.3102, 0.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-46.9909, -117.075, 19.3102, 0.12", "-47.4849, -116.926, 19.3204, 0.12", "-48.2637, -116.753, 19.3358, 0.12", "-49.2822, -116.578, 19.3549, 0.12", "-50.6115, -116.404, 19.378, 0.12", "-51.6919, -116.293, 19.3956, 0.12", "-53.6025, -116.083, 19.5185, 0.24", "-54.2197, -116.039, 19.5803, 0.12", "-54.8256, -116.021, 19.6639, 0.12", "-55.6602, -115.985, 19.813, 0.12", "-56.0281, -115.937, 19.8939, 0.12", "-57.5126, -115.563, 20.2483, 0.24", "-58.2979, -115.291, 20.4385, 0.12", "-58.7491, -115.122, 20.5621, 0.12", "-59.8437, -114.717, 20.8679, 0.36", "-60.7663, -114.407, 21.1575, 0.36", "-61.7963, -114.111, 21.4824, 0.36", "-62.2627, -114.012, 21.6183, 0.12", "-63.6283, -113.791, 22.0327, 0.12", "-64.5406, -113.74, 22.3357, 0.12", "-65.6495, -113.865, 22.7276, 1.44", "-66.0849, -113.983, 22.8955, 1.92", "-66.7182, -114.25, 23.1546, 1.92", "-67.2915, -114.601, 23.3882, 1.92", "-68.2129, -115.512, 23.6518, 0.12", "-68.653, -116.288, 23.7195, 0.12", "-68.8496, -117.008, 23.6652, 0.36", "-68.9074, -117.4, 23.626, 0.12", "-68.9128, -118.232, 23.5099, 0.12", "-68.6652, -120.029, 23.1416, 1.68", "-68.5024, -120.511, 22.938, 1.92", "-68.359, -120.809, 22.7685, 1.92", "-77.8451, -122.953, 25.1855, 1.92", "-87.5412, -124.572, 27.0854, 1.92", "-97.1261, -124.785, 29.9296, 1.92", "-106.377, -126.476, 33.3703, 1.92", "-115.092, -129.326, 37.4537, 1.92", "-123.911, -133.641, 39.7627, 1.92" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-46.9909, -117.075, 19.3102, 0.48", "-47.5166, -117.486, 19.2899, 0.48", "-48.1383, -117.813, 19.2754, 0.48", "-49.0757, -118.224, 19.2592, 0.48", "-49.7277, -118.491, 19.2499, 0.12", "-50.9377, -118.963, 19.1862, 0.12", "-52.1917, -119.403, 19.094, 0.12", "-53.5762, -119.809, 19.0058, 0.12", "-54.325, -119.98, 18.9498, 0.12", "-55.0092, -120.09, 18.8914, 0.12", "-55.9292, -120.212, 18.7959, 0.6", "-56.7173, -120.299, 18.6829, 0.6", "-65.9495, -124.308, 19.1222, 0.6" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_25", "dend_22", "dend_11", "dend_6", "dend_3", "dend_0", "apic_4", "apic_1", "dend_31", "dend_26", "dend_24", "dend_23", "dend_19", "dend_14", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_3", "apic_2", "dend_33", "dend_32", "dend_28", "dend_27", "dend_21", "dend_20", "dend_16", "dend_15", "dend_13", "dend_9", "dend_8", "dend_39", "dend_34", "dend_30", "dend_29", "dend_18", "dend_17", "dend_38", "dend_35", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L23_DBC_d6bea44209_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_4, id: apic_4, parent: apic_0
create apic_4
public apic_4
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_11
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4499999836411719)
    connect dend_25(0), soma_0(0.4499999836411719)
    connect dend_22(0), soma_0(0.4499999836411719)
    connect dend_11(0), soma_0(0.4499999836411719)
    connect dend_6(0), soma_0(0.4499999836411719)
    connect dend_3(0), soma_0(0.4499999836411719)
    connect dend_0(0), soma_0(0.4499999836411719)
    connect axon_0(0), soma_0(1.0)
    connect apic_4(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_14(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.36129, -7.58075, 0.00144685, 3.22785 ) }
    soma_0 { pt3dadd( 2.18013, -6.85906, 0.00129054, 6.03886 ) }
    soma_0 { pt3dadd( 1.99896, -6.13737, 0.00113423, 7.42316 ) }
    soma_0 { pt3dadd( 1.81779, -5.41568, 9.77923E-4, 8.36559 ) }
    soma_0 { pt3dadd( 1.63662, -4.69399, 8.21614E-4, 9.26167 ) }
    soma_0 { pt3dadd( 1.45546, -3.9723, 6.65304E-4, 9.90915 ) }
    soma_0 { pt3dadd( 1.27429, -3.25061, 5.08995E-4, 10.4263 ) }
    soma_0 { pt3dadd( 1.09312, -2.52892, 3.52686E-4, 10.8393 ) }
    soma_0 { pt3dadd( 0.911955, -1.80723, 1.96376E-4, 11.2188 ) }
    soma_0 { pt3dadd( 0.730788, -1.08554, 4.00668E-5, 11.4122 ) }
    soma_0 { pt3dadd( 0.54962, -0.363848, -1.16243E-4, 11.4389 ) }
    soma_0 { pt3dadd( 0.368453, 0.357841, -2.72552E-4, 11.3929 ) }
    soma_0 { pt3dadd( 0.187285, 1.07953, -4.28861E-4, 11.2923 ) }
    soma_0 { pt3dadd( 0.00611797, 1.80122, -5.85171E-4, 10.9441 ) }
    soma_0 { pt3dadd( -0.175049, 2.52291, -7.4148E-4, 10.5254 ) }
    soma_0 { pt3dadd( -0.356217, 3.2446, -8.9779E-4, 10.1407 ) }
    soma_0 { pt3dadd( -0.537384, 3.96629, -0.0010541, 9.5776 ) }
    soma_0 { pt3dadd( -0.718552, 4.68798, -0.00121041, 8.87208 ) }
    soma_0 { pt3dadd( -0.899719, 5.40967, -0.00136672, 7.79472 ) }
    soma_0 { pt3dadd( -1.08089, 6.13136, -0.00152303, 6.05918 ) }
    soma_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 3.96403 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 1.04582, 7.3084, -2.62764, 1.8 ) }
    apic_0 { pt3dadd( 1.02782, 8.44745, -3.08618, 0.96 ) }
    apic_0 { pt3dadd( 1.00882, 9.64973, -3.57018, 0.72 ) }
    apic_0 { pt3dadd( 0.978659, 11.5584, -4.33853, 0.96 ) }
    apic_0 { pt3dadd( 0.958639, 12.8252, -4.84851, 1.32 ) }
    apic_0 { pt3dadd( 0.931408, 14.5485, -5.54226, 1.32 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 27/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.0441755, -7.3286, 6.04236, 1.68 ) }
    dend_25 { pt3dadd( -0.0969757, -7.89253, 6.3093, 0.72 ) }
    dend_25 { pt3dadd( -0.199247, -8.98483, 6.82635, 0.96 ) }
    dend_25 { pt3dadd( -0.25986, -9.63221, 7.13279, 1.32 ) }
    dend_25 { pt3dadd( -0.323002, -10.3066, 7.45201, 0.96 ) }
    dend_25 { pt3dadd( -0.354573, -10.6437, 7.61162, 0.96 ) }
    dend_25 { pt3dadd( -0.426661, -11.4137, 7.97607, 1.08 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 34/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 0.07582, 7.6234, 2.85236, 1.68 ) }
    dend_22 { pt3dadd( -0.0249116, 8.32047, 2.97414, 1.68 ) }
    dend_22 { pt3dadd( 0.068547, 9.27693, 3.44416, 1.44 ) }
    dend_22 { pt3dadd( 0.224209, 9.96051, 3.87499, 0.96 ) }
    dend_22 { pt3dadd( 0.361045, 10.5052, 4.26305, 0.84 ) }
    dend_22 { pt3dadd( 0.478218, 11.0014, 4.62063, 0.96 ) }
    dend_22 { pt3dadd( 0.736105, 12.2458, 5.61674, 0.84 ) }
    dend_22 { pt3dadd( 0.894231, 12.9064, 6.21414, 0.72 ) }
    dend_22 { pt3dadd( 1.02373, 13.4148, 6.70885, 0.72 ) }
    dend_22 { pt3dadd( 1.1812, 14.0563, 7.32048, 0.84 ) }
    dend_22 { pt3dadd( 1.25478, 14.445, 7.6479, 0.96 ) }
    dend_22 { pt3dadd( 1.42186, 15.6941, 8.5092, 0.24 ) }
    dend_22 { pt3dadd( 1.47893, 16.263, 8.78782, 0.24 ) }
    dend_22 { pt3dadd( 1.52185, 16.7259, 8.98548, 0.6 ) }
    dend_22 { pt3dadd( 1.57285, 17.3602, 9.22009, 1.44 ) }
    dend_22 { pt3dadd( 1.62506, 18.1969, 9.47615, 1.56 ) }
    dend_22 { pt3dadd( 1.64652, 18.9049, 9.66191, 1.56 ) }
    dend_22 { pt3dadd( 1.64563, 19.6901, 9.81034, 1.56 ) }
    dend_22 { pt3dadd( 1.59552, 21.0574, 10.0655, 0.6 ) }
    dend_22 { pt3dadd( 1.5434, 21.8016, 10.1949, 0.48 ) }
    dend_22 { pt3dadd( 1.47033, 22.5238, 10.3212, 0.48 ) }
    dend_22 { pt3dadd( 1.42283, 22.96, 10.394, 0.96 ) }
    dend_22 { pt3dadd( 1.32596, 23.9563, 10.5705, 0.6 ) }
    dend_22 { pt3dadd( 1.27423, 24.6897, 10.7065, 0.6 ) }
    dend_22 { pt3dadd( 1.2506, 25.442, 10.8441, 0.96 ) }
    dend_22 { pt3dadd( 1.23594, 26.7668, 11.1241, 0.84 ) }
    dend_22 { pt3dadd( 1.22745, 27.5002, 11.2989, 0.84 ) }
    dend_22 { pt3dadd( 1.18187, 28.6678, 11.5955, 0.72 ) }
    dend_22 { pt3dadd( 1.08382, 29.8117, 11.8994, 0.84 ) }
    dend_22 { pt3dadd( 1.05479, 30.0533, 11.961, 0.84 ) }
    dend_22 { pt3dadd( 0.955685, 30.704, 12.1152, 0.72 ) }
    dend_22 { pt3dadd( 0.798342, 31.6823, 12.3116, 0.48 ) }
    dend_22 { pt3dadd( 0.671794, 32.6104, 12.4571, 0.48 ) }
    dend_22 { pt3dadd( 0.59314, 33.4008, 12.5467, 0.6 ) }
    dend_22 { pt3dadd( 0.544523, 34.1389, 12.634, 0.84 ) }
    dend_22 { pt3dadd( 0.525648, 34.5111, 12.6942, 0.84 ) }
    dend_22 { pt3dadd( 0.507669, 35.0351, 12.7931, 0.48 ) }
    dend_22 { pt3dadd( 0.470413, 36.1387, 13.0151, 0.48 ) }
    dend_22 { pt3dadd( 0.435929, 37.2063, 13.2738, 0.48 ) }
    dend_22 { pt3dadd( 0.368826, 38.5242, 13.6619, 0.6 ) }
    dend_22 { pt3dadd( 0.286804, 39.5066, 13.9837, 1.08 ) }
    dend_22 { pt3dadd( 0.216666, 40.1019, 14.1737, 1.32 ) }
    dend_22 { pt3dadd( 0.133919, 40.632, 14.3358, 1.32 ) }
    dend_22 { pt3dadd( -0.00267274, 41.3636, 14.5519, 0.84 ) }
    dend_22 { pt3dadd( -0.144822, 42.1953, 14.7512, 0.6 ) }
    dend_22 { pt3dadd( -0.253819, 42.9271, 14.8957, 0.48 ) }
    dend_22 { pt3dadd( -0.361664, 43.7394, 15.0154, 0.6 ) }
    dend_22 { pt3dadd( -0.423047, 44.2343, 15.0823, 0.48 ) }
    dend_22 { pt3dadd( -0.486471, 44.7868, 15.1348, 0.48 ) }
    dend_22 { pt3dadd( -0.556685, 45.2854, 15.1285, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 84/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 3.15581, -7.1291, -6.17764, 1.44 ) }
    dend_11 { pt3dadd( 2.72372, -7.95854, -6.266, 1.08 ) }
    dend_11 { pt3dadd( 2.08877, -9.00852, -6.3799, 1.44 ) }
    dend_11 { pt3dadd( 1.44445, -10.0187, -6.56553, 1.56 ) }
    dend_11 { pt3dadd( 0.646552, -11.2585, -6.86694, 1.56 ) }
    dend_11 { pt3dadd( -0.379703, -12.888, -7.31263, 1.2 ) }
    dend_11 { pt3dadd( -0.96542, -13.8582, -7.63557, 0.72 ) }
    dend_11 { pt3dadd( -1.3205, -14.3838, -7.8381, 0.72 ) }
    dend_11 { pt3dadd( -2.16681, -15.5323, -8.37417, 1.56 ) }
    dend_11 { pt3dadd( -2.47471, -15.9447, -8.61285, 1.8 ) }
    dend_11 { pt3dadd( -2.76508, -16.3688, -8.93009, 2.16 ) }
    dend_11 { pt3dadd( -3.17385, -17.2424, -9.7578, 2.28 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 96/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 4.91582, -4.6931, -0.277637, 1.32 ) }
    dend_6 { pt3dadd( 5.4328, -5.19454, -0.8849, 1.2 ) }
    dend_6 { pt3dadd( 6.09419, -5.65729, -1.74636, 0.72 ) }
    dend_6 { pt3dadd( 6.55709, -5.87564, -2.32643, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_6 { pt3dadd( 7.45227, -6.19219, -3.3614, 1.68 ) }
    dend_6 { pt3dadd( 8.09731, -6.3579, -4.06497, 2.04 ) }
    dend_6 { pt3dadd( 9.39778, -6.61566, -5.40337, 1.92 ) }
    dend_6 { pt3dadd( 10.2896, -6.71168, -6.25943, 1.92 ) }
    dend_6 { pt3dadd( 11.2339, -6.78338, -7.08052, 0.96 ) }
    dend_6 { pt3dadd( 11.8063, -6.84262, -7.51365, 0.96 ) }
    dend_6 { pt3dadd( 12.9271, -7.05193, -8.22426, 1.44 ) }
    dend_6 { pt3dadd( 13.5823, -7.26295, -8.5807, 1.92 ) }
    dend_6 { pt3dadd( 14.5358, -7.6487, -8.9876, 1.56 ) }
    dend_6 { pt3dadd( 15.535, -8.15059, -9.3548, 1.2 ) }
    dend_6 { pt3dadd( 16.4415, -8.71594, -9.66814, 1.2 ) }
    dend_6 { pt3dadd( 17.4029, -9.41819, -9.9852, 1.56 ) }
    dend_6 { pt3dadd( 17.7818, -9.74916, -10.0811, 1.2 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 13/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.46419, -1.9421, 0.432363, 0.96 ) }
    dend_3 { pt3dadd( -4.85193, -1.80883, 0.888387, 0.6 ) }
    dend_3 { pt3dadd( -5.62482, -1.41349, 1.67938, 0.72 ) }
    dend_3 { pt3dadd( -5.70997, -1.37065, 1.75343, 0.72 ) }
    dend_3 { pt3dadd( -6.50811, -1.08595, 2.40076, 0.72 ) }
    dend_3 { pt3dadd( -6.87746, -1.01445, 2.69966, 0.72 ) }
    dend_3 { pt3dadd( -7.37149, -0.967378, 3.1053, 0.72 ) }
    dend_3 { pt3dadd( -7.76767, -0.961748, 3.46723, 0.72 ) }
    dend_3 { pt3dadd( -8.17166, -0.989248, 3.82641, 0.72 ) }
    dend_3 { pt3dadd( -9.12338, -1.10643, 4.69605, 0.72 ) }
    dend_3 { pt3dadd( -10.0468, -1.27234, 5.531, 0.84 ) }
    dend_3 { pt3dadd( -10.7843, -1.45018, 6.22297, 1.08 ) }
    dend_3 { pt3dadd( -11.5659, -1.68511, 7.00187, 1.44 ) }
    dend_3 { pt3dadd( -11.9743, -1.81818, 7.43953, 1.68 ) }
    dend_3 { pt3dadd( -12.5686, -1.9955, 8.1156, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.77419, 5.8804, -7.59764, 1.08 ) }
    dend_0 { pt3dadd( -4.09417, 6.62463, -7.76775, 1.08 ) }
    dend_0 { pt3dadd( -4.43652, 7.34136, -8.0224, 0.84 ) }
    dend_0 { pt3dadd( -4.68421, 7.77928, -8.23024, 0.12 ) }
    dend_0 { pt3dadd( -5.0063, 8.25928, -8.47861, 0.12 ) }
    dend_0 { pt3dadd( -5.42893, 8.82797, -8.77818, 0.84 ) }
    dend_0 { pt3dadd( -6.46197, 10.2143, -9.47925, 0.84 ) }
    dend_0 { pt3dadd( -7.08947, 11.0471, -9.90391, 0.84 ) }
    dend_0 { pt3dadd( -7.77081, 11.9773, -10.345, 0.48 ) }
    dend_0 { pt3dadd( -8.34569, 12.7871, -10.6897, 0.12 ) }
    dend_0 { pt3dadd( -8.67851, 13.268, -10.8884, 0.12 ) }
    dend_0 { pt3dadd( -9.27007, 14.1532, -11.2321, 0.6 ) }
    dend_0 { pt3dadd( -9.79216, 14.9799, -11.4923, 0.6 ) }
    dend_0 { pt3dadd( -10.3743, 15.9561, -11.7967, 0.72 ) }
    dend_0 { pt3dadd( -10.6349, 16.4148, -11.9375, 1.08 ) }
    dend_0 { pt3dadd( -11.2766, 17.5492, -12.3447, 0.6 ) }
    dend_0 { pt3dadd( -11.7456, 18.3469, -12.6404, 0.36 ) }
    dend_0 { pt3dadd( -12.1681, 19.062, -12.9191, 0.12 ) }
    dend_0 { pt3dadd( -12.7413, 20.0559, -13.3054, 0.48 ) }
    dend_0 { pt3dadd( -13.2229, 20.9475, -13.6409, 0.48 ) }
    dend_0 { pt3dadd( -13.984, 22.4726, -14.1588, 0.48 ) }
    dend_0 { pt3dadd( -14.6435, 23.916, -14.6172, 0.6 ) }
    dend_0 { pt3dadd( -15.2517, 25.4016, -15.1163, 0.36 ) }
    dend_0 { pt3dadd( -15.4722, 26.0008, -15.3244, 0.36 ) }
    dend_0 { pt3dadd( -15.8419, 27.0988, -15.71, 1.2 ) }
    dend_0 { pt3dadd( -16.1112, 27.9483, -16.0124, 1.08 ) }
    dend_0 { pt3dadd( -16.4237, 28.9496, -16.3773, 0.72 ) }
    dend_0 { pt3dadd( -16.7104, 29.8369, -16.7198, 0.24 ) }
    dend_0 { pt3dadd( -17.0769, 30.8835, -17.1029, 0.24 ) }
    dend_0 { pt3dadd( -17.2712, 31.4223, -17.2908, 0.72 ) }
    dend_0 { pt3dadd( -17.6562, 32.422, -17.5872, 0.84 ) }
    dend_0 { pt3dadd( -18.0065, 33.3117, -17.8292, 0.48 ) }
    dend_0 { pt3dadd( -18.2132, 33.8152, -17.9328, 0.24 ) }
    dend_0 { pt3dadd( -18.5278, 34.5293, -18.0527, 0.12 ) }
    dend_0 { pt3dadd( -18.7366, 34.9928, -18.1327, 0.96 ) }
    dend_0 { pt3dadd( -19.2475, 36.151, -18.2977, 1.44 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 64/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -1.26205, 6.85305, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -4.91421, 21.4016, -0.00167934, 0.906991 ) }
    axon_0 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.906991 ) }
    // Section: apic_4, id: apic_4, parent: apic_0 (entry count 67/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 0.931408, 14.5485, -5.54226, 0.36 ) }
    apic_4 { pt3dadd( 1.58233, 15.107, -5.87665, 0.36 ) }
    apic_4 { pt3dadd( 2.35299, 15.7165, -6.34683, 0.48 ) }
    apic_4 { pt3dadd( 2.92316, 16.1494, -6.7287, 0.48 ) }
    apic_4 { pt3dadd( 3.54951, 16.6165, -7.14464, 0.48 ) }
    apic_4 { pt3dadd( 4.71032, 17.4748, -7.87479, 0.48 ) }
    apic_4 { pt3dadd( 5.20728, 17.8613, -8.24353, 0.96 ) }
    apic_4 { pt3dadd( 5.60145, 18.2003, -8.60692, 0.96 ) }
    apic_4 { pt3dadd( 6.18752, 18.7994, -9.29528, 0.48 ) }
    apic_4 { pt3dadd( 6.49036, 19.1512, -9.6903, 0.48 ) }
    apic_4 { pt3dadd( 6.7696, 19.4913, -10.1085, 0.48 ) }
    apic_4 { pt3dadd( 7.60443, 20.5899, -11.4183, 0.36 ) }
    apic_4 { pt3dadd( 7.87569, 20.9508, -11.8936, 0.36 ) }
    apic_4 { pt3dadd( 8.21935, 21.3857, -12.4896, 0.84 ) }
    apic_4 { pt3dadd( 8.52295, 21.7353, -12.9973, 0.84 ) }
    apic_4 { pt3dadd( 9.4103, 22.6223, -14.3801, 0.48 ) }
    apic_4 { pt3dadd( 9.60678, 22.7873, -14.6376, 0.48 ) }
    apic_4 { pt3dadd( 10.2959, 23.2645, -15.3435, 0.96 ) }
    apic_4 { pt3dadd( 10.7435, 23.5511, -15.7747, 1.32 ) }
    apic_4 { pt3dadd( 11.3268, 23.935, -16.3238, 1.08 ) }
    apic_4 { pt3dadd( 12.0968, 24.5337, -17.0617, 0.12 ) }
    apic_4 { pt3dadd( 12.5815, 25.0021, -17.5243, 0.12 ) }
    apic_4 { pt3dadd( 12.7246, 25.1666, -17.6886, 0.48 ) }
    apic_4 { pt3dadd( 13.1951, 25.7728, -18.2732, 0.72 ) }
    apic_4 { pt3dadd( 13.4792, 26.171, -18.6578, 0.12 ) }
    apic_4 { pt3dadd( 13.872, 26.7515, -19.1678, 0.12 ) }
    apic_4 { pt3dadd( 14.2605, 27.3462, -19.6287, 0.48 ) }
    apic_4 { pt3dadd( 14.7724, 28.1143, -20.1874, 0.72 ) }
    apic_4 { pt3dadd( 15.1982, 28.7088, -20.5698, 0.12 ) }
    apic_4 { pt3dadd( 15.7522, 29.4016, -20.9324, 0.12 ) }
    apic_4 { pt3dadd( 16.2419, 29.9739, -21.1741, 0.96 ) }
    apic_4 { pt3dadd( 16.5278, 30.295, -21.2832, 1.08 ) }
    apic_4 { pt3dadd( 17.2026, 31.0802, -21.4686, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_4 { pt3dadd( 17.8222, 31.8401, -21.5908, 0.6 ) }
    apic_4 { pt3dadd( 18.5001, 32.7243, -21.7932, 0.36 ) }
    apic_4 { pt3dadd( 19.1182, 33.5501, -22.0127, 0.24 ) }
    apic_4 { pt3dadd( 19.4711, 34.0346, -22.1786, 0.84 ) }
    apic_4 { pt3dadd( 19.6875, 34.3376, -22.2966, 1.08 ) }
    apic_4 { pt3dadd( 20.0632, 34.8844, -22.5522, 0.6 ) }
    apic_4 { pt3dadd( 21.017, 36.3245, -23.4362, 0.24 ) }
    apic_4 { pt3dadd( 21.3712, 36.9031, -23.8429, 0.24 ) }
    apic_4 { pt3dadd( 21.6556, 37.3991, -24.2078, 0.72 ) }
    apic_4 { pt3dadd( 21.9411, 37.9332, -24.5943, 1.2 ) }
    apic_4 { pt3dadd( 22.2843, 38.6199, -25.0812, 0.6 ) }
    apic_4 { pt3dadd( 22.7186, 39.506, -25.6505, 0.12 ) }
    apic_4 { pt3dadd( 23.1176, 40.3184, -26.1002, 0.12 ) }
    apic_4 { pt3dadd( 23.3101, 40.7213, -26.326, 0.36 ) }
    apic_4 { pt3dadd( 23.4515, 41.0194, -26.4741, 0.36 ) }
    apic_4 { pt3dadd( 23.7365, 41.5957, -26.7481, 0.12 ) }
    apic_4 { pt3dadd( 24.1916, 42.4526, -27.1869, 0.12 ) }
    apic_4 { pt3dadd( 24.567, 43.1115, -27.5431, 0.84 ) }
    apic_4 { pt3dadd( 24.6886, 43.2944, -27.655, 1.2 ) }
    apic_4 { pt3dadd( 25.1316, 43.8868, -28.0269, 1.2 ) }
    apic_4 { pt3dadd( 25.6152, 44.4898, -28.4318, 0.96 ) }
    apic_4 { pt3dadd( 26.3438, 45.3711, -29.0184, 0.36 ) }
    apic_4 { pt3dadd( 26.8617, 45.9887, -29.5708, 0.36 ) }
    apic_4 { pt3dadd( 27.2547, 46.4341, -30.0623, 0.36 ) }
    apic_4 { pt3dadd( 27.5266, 46.7251, -30.4328, 0.36 ) }
    apic_4 { pt3dadd( 28.0717, 47.2803, -31.2263, 0.6 ) }
    apic_4 { pt3dadd( 28.2903, 47.4956, -31.5426, 0.84 ) }
    apic_4 { pt3dadd( 29.4599, 48.6427, -33.1878, 0.84 ) }
    apic_4 { pt3dadd( 29.9008, 49.075, -33.831, 0.12 ) }
    apic_4 { pt3dadd( 30.1544, 49.342, -34.1919, 0.12 ) }
    apic_4 { pt3dadd( 30.3333, 49.5287, -34.4194, 0.12 ) }
    apic_4 { pt3dadd( 30.5975, 49.7954, -34.6598, 0.6 ) }
    apic_4 { pt3dadd( 30.93, 50.1319, -34.8742, 0.6 ) }
    apic_4 { pt3dadd( 31.2785, 50.496, -35.0062, 0.12 ) }
    apic_4 { pt3dadd( 31.6792, 50.925, -35.1582, 0.12 ) }
    apic_4 { pt3dadd( 32.1754, 51.4661, -35.3626, 0.72 ) }
    apic_4 { pt3dadd( 32.6767, 52.0401, -35.5786, 0.96 ) }
    apic_4 { pt3dadd( 33.0781, 52.5316, -35.8118, 0.12 ) }
    apic_4 { pt3dadd( 33.6611, 53.223, -36.1883, 0.12 ) }
    apic_4 { pt3dadd( 33.9666, 53.5851, -36.4051, 0.84 ) }
    apic_4 { pt3dadd( 34.2685, 53.9453, -36.6245, 0.96 ) }
    apic_4 { pt3dadd( 34.5609, 54.3053, -36.8288, 0.48 ) }
    apic_4 { pt3dadd( 35.2585, 55.2025, -37.3587, 0.12 ) }
    apic_4 { pt3dadd( 35.8116, 55.9393, -37.8009, 0.12 ) }
    apic_4 { pt3dadd( 36.3874, 56.774, -38.2727, 0.12 ) }
    apic_4 { pt3dadd( 36.5996, 57.121, -38.4541, 0.96 ) }
    apic_4 { pt3dadd( 36.8326, 57.548, -38.6968, 0.96 ) }
    apic_4 { pt3dadd( 37.1319, 58.1721, -39.0379, 0.24 ) }
    apic_4 { pt3dadd( 37.2763, 58.5169, -39.1883, 0.12 ) }
    apic_4 { pt3dadd( 37.5595, 59.3075, -39.5034, 0.12 ) }
    apic_4 { pt3dadd( 37.7931, 59.9786, -39.739, 0.72 ) }
    apic_4 { pt3dadd( 38.2973, 61.4029, -40.1973, 0.12 ) }
    apic_4 { pt3dadd( 38.5429, 62.0846, -40.389, 0.12 ) }
    apic_4 { pt3dadd( 39.1694, 63.7573, -40.8105, 0.12 ) }
    apic_4 { pt3dadd( 39.4377, 64.4713, -41.0147, 0.12 ) }
    apic_4 { pt3dadd( 39.7024, 65.1697, -41.2365, 0.12 ) }
    apic_4 { pt3dadd( 39.8181, 65.4874, -41.3377, 0.96 ) }
    apic_4 { pt3dadd( 39.9712, 65.9663, -41.4729, 1.32 ) }
    apic_4 { pt3dadd( 40.1359, 66.5899, -41.6969, 1.32 ) }
    apic_4 { pt3dadd( 40.3925, 67.9713, -42.309, 0.12 ) }
    apic_4 { pt3dadd( 40.5056, 68.7834, -42.6771, 0.12 ) }
    apic_4 { pt3dadd( 40.5494, 69.2545, -42.881, 0.12 ) }
    apic_4 { pt3dadd( 40.588, 69.9473, -43.1667, 0.84 ) }
    apic_4 { pt3dadd( 40.6083, 70.7122, -43.4477, 0.12 ) }
    apic_4 { pt3dadd( 40.6134, 71.5068, -43.7089, 0.12 ) }
    apic_4 { pt3dadd( 40.6163, 72.2304, -43.9175, 0.12 ) }
    apic_4 { pt3dadd( 40.6201, 72.7145, -44.0837, 0.84 ) }
    apic_4 { pt3dadd( 40.656, 73.344, -44.3173, 0.12 ) }
    apic_4 { pt3dadd( 40.7435, 74.0301, -44.5809, 0.12 ) }
    apic_4 { pt3dadd( 40.8881, 74.7463, -44.8407, 0.72 ) }
    apic_4 { pt3dadd( 41.0513, 75.3122, -45.0537, 0.72 ) }
    apic_4 { pt3dadd( 41.2612, 75.8599, -45.2851, 0.12 ) }
    apic_4 { pt3dadd( 41.533, 76.4551, -45.5411, 0.12 ) }
    apic_4 { pt3dadd( 41.7709, 76.9226, -45.7233, 0.24 ) }
    apic_4 { pt3dadd( 42.0144, 77.3525, -45.9504, 0.24 ) }
    apic_4 { pt3dadd( 42.2495, 77.7625, -46.2026, 0.24 ) }
    apic_4 { pt3dadd( 42.597, 78.3981, -46.6272, 0.72 ) }
    apic_4 { pt3dadd( 42.7456, 78.6832, -46.8299, 1.2 ) }
    apic_4 { pt3dadd( 42.9922, 79.1776, -47.2042, 1.2 ) }
    apic_4 { pt3dadd( 43.6981, 80.5943, -48.3291, 0.12 ) }
    apic_4 { pt3dadd( 44.1006, 81.3612, -48.9533, 0.12 ) }
    apic_4 { pt3dadd( 44.3365, 81.7855, -49.3195, 0.48 ) }
    apic_4 { pt3dadd( 44.5698, 82.1626, -49.6611, 0.12 ) }
    apic_4 { pt3dadd( 44.7641, 82.4519, -49.9323, 0.12 ) }
    apic_4 { pt3dadd( 45.0893, 82.8847, -50.3322, 0.6 ) }
    apic_4 { pt3dadd( 45.2632, 83.0854, -50.5414, 0.6 ) }
    apic_4 { pt3dadd( 45.9764, 83.7883, -51.5398, 0.12 ) }
    apic_4 { pt3dadd( 46.3968, 84.1871, -52.1715, 0.12 ) }
    apic_4 { pt3dadd( 46.4752, 84.265, -52.2933, 0.72 ) }
    apic_4 { pt3dadd( 46.7323, 84.5277, -52.6924, 0.72 ) }
    apic_4 { pt3dadd( 47.6115, 85.4263, -54.1757, 0.6 ) }
    apic_4 { pt3dadd( 48.0656, 85.8974, -54.9447, 0.12 ) }
    apic_4 { pt3dadd( 48.3624, 86.2173, -55.4312, 0.12 ) }
    apic_4 { pt3dadd( 48.5878, 86.4798, -55.8377, 0.12 ) }
    apic_4 { pt3dadd( 48.8391, 86.8097, -56.2828, 0.6 ) }
    apic_4 { pt3dadd( 49.6504, 87.9374, -57.5657, 0.12 ) }
    apic_4 { pt3dadd( 49.9927, 88.4886, -57.9968, 0.12 ) }
    apic_4 { pt3dadd( 50.2399, 88.9427, -58.2938, 0.72 ) }
    apic_4 { pt3dadd( 50.8225, 90.1562, -59.0243, 0.12 ) }
    apic_4 { pt3dadd( 51.2926, 91.2514, -59.6094, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_4 { pt3dadd( 51.5833, 92.0255, -59.9429, 0.12 ) }
    apic_4 { pt3dadd( 52.1467, 93.7249, -60.5129, 0.12 ) }
    apic_4 { pt3dadd( 52.3756, 94.4851, -60.7518, 0.84 ) }
    apic_4 { pt3dadd( 52.5829, 95.2409, -60.9492, 0.12 ) }
    apic_4 { pt3dadd( 52.9209, 96.5584, -61.2067, 0.12 ) }
    apic_4 { pt3dadd( 53.0828, 97.2431, -61.3392, 0.6 ) }
    apic_4 { pt3dadd( 53.2547, 97.9845, -61.4718, 0.12 ) }
    apic_4 { pt3dadd( 53.3727, 98.4157, -61.5399, 0.12 ) }
    apic_4 { pt3dadd( 53.7451, 99.6197, -61.6815, 0.12 ) }
    apic_4 { pt3dadd( 53.9803, 100.308, -61.7501, 0.72 ) }
    apic_4 { pt3dadd( 54.2308, 101.013, -61.8192, 0.12 ) }
    apic_4 { pt3dadd( 54.7648, 102.375, -61.9731, 0.24 ) }
    apic_4 { pt3dadd( 54.8995, 102.701, -62.0038, 0.24 ) }
    apic_4 { pt3dadd( 55.0072, 102.957, -62.0299, 0.12 ) }
    apic_4 { pt3dadd( 55.5155, 104.123, -62.1507, 0.12 ) }
    apic_4 { pt3dadd( 55.7781, 104.7, -62.2036, 0.12 ) }
    apic_4 { pt3dadd( 56.1329, 105.405, -62.2527, 0.12 ) }
    apic_4 { pt3dadd( 56.1906, 105.515, -62.2574, 0.72 ) }
    apic_4 { pt3dadd( 56.493, 106.073, -62.2729, 0.84 ) }
    apic_4 { pt3dadd( 56.8184, 106.653, -62.2783, 0.12 ) }
    apic_4 { pt3dadd( 57.3997, 107.632, -62.277, 0.12 ) }
    apic_4 { pt3dadd( 57.9996, 108.616, -62.2884, 0.12 ) }
    apic_4 { pt3dadd( 58.2569, 109.048, -62.2974, 0.12 ) }
    apic_4 { pt3dadd( 58.4584, 109.385, -62.3066, 0.72 ) }
    apic_4 { pt3dadd( 58.8891, 110.099, -62.3305, 0.84 ) }
    apic_4 { pt3dadd( 59.188, 110.606, -62.3501, 0.12 ) }
    apic_4 { pt3dadd( 59.8228, 111.708, -62.3768, 0.12 ) }
    apic_4 { pt3dadd( 60.4267, 112.774, -62.415, 0.12 ) }
    apic_4 { pt3dadd( 60.7643, 113.376, -62.4402, 0.12 ) }
    apic_4 { pt3dadd( 60.9415, 113.679, -62.4535, 0.6 ) }
    apic_4 { pt3dadd( 61.3781, 114.377, -62.4898, 0.72 ) }
    apic_4 { pt3dadd( 61.6704, 114.822, -62.5127, 0.12 ) }
    apic_4 { pt3dadd( 62.6494, 116.251, -62.6035, 0.12 ) }
    apic_4 { pt3dadd( 62.9355, 116.661, -62.6323, 0.12 ) }
    apic_4 { pt3dadd( 63.5664, 117.571, -62.696, 0.12 ) }
    apic_4 { pt3dadd( 63.8693, 118.027, -62.7227, 0.84 ) }
    apic_4 { pt3dadd( 64.0791, 118.356, -62.7218, 0.96 ) }
    apic_4 { pt3dadd( 64.3662, 118.831, -62.6939, 0.96 ) }
    apic_4 { pt3dadd( 64.7908, 119.543, -62.6072, 0.6 ) }
    apic_4 { pt3dadd( 65.1866, 120.218, -62.5155, 0.6 ) }
    apic_4 { pt3dadd( 65.7585, 121.232, -62.3683, 0.6 ) }
    apic_4 { pt3dadd( 66.2916, 122.167, -62.2236, 0.12 ) }
    apic_4 { pt3dadd( 67.0012, 123.408, -62.0406, 0.12 ) }
    apic_4 { pt3dadd( 67.6904, 124.625, -61.8634, 0.12 ) }
    apic_4 { pt3dadd( 67.8624, 124.93, -61.821, 0.36 ) }
    apic_4 { pt3dadd( 68.0789, 125.32, -61.7744, 0.36 ) }
    apic_4 { pt3dadd( 68.2115, 125.564, -61.7561, 0.12 ) }
    apic_4 { pt3dadd( 68.6342, 126.37, -61.7448, 0.12 ) }
    apic_4 { pt3dadd( 68.7449, 126.595, -61.7415, 0.36 ) }
    apic_4 { pt3dadd( 68.8978, 126.921, -61.7371, 0.12 ) }
    apic_4 { pt3dadd( 69.1967, 127.523, -61.7306, 0.12 ) }
    apic_4 { pt3dadd( 69.7047, 128.446, -61.7484, 0.12 ) }
    apic_4 { pt3dadd( 70.0273, 128.977, -61.7724, 0.48 ) }
    apic_4 { pt3dadd( 70.3991, 129.519, -61.8066, 0.48 ) }
    apic_4 { pt3dadd( 70.5648, 129.739, -61.824, 0.12 ) }
    apic_4 { pt3dadd( 71.0585, 130.355, -61.8773, 0.12 ) }
    apic_4 { pt3dadd( 71.5271, 130.891, -61.9251, 0.12 ) }
    apic_4 { pt3dadd( 71.9451, 131.341, -61.9646, 0.6 ) }
    apic_4 { pt3dadd( 72.5401, 131.974, -62.0146, 0.72 ) }
    apic_4 { pt3dadd( 72.954, 132.416, -62.0816, 0.36 ) }
    apic_4 { pt3dadd( 73.4731, 132.999, -62.1926, 0.36 ) }
    apic_4 { pt3dadd( 74.1274, 133.79, -62.3584, 0.48 ) }
    apic_4 { pt3dadd( 74.4504, 134.193, -62.4458, 0.24 ) }
    apic_4 { pt3dadd( 74.7674, 134.598, -62.5438, 0.24 ) }
    apic_4 { pt3dadd( 75.6211, 135.703, -62.8322, 0.24 ) }
    apic_4 { pt3dadd( 76.0233, 136.218, -62.9739, 0.24 ) }
    apic_4 { pt3dadd( 76.5607, 136.892, -63.1568, 0.36 ) }
    apic_4 { pt3dadd( 76.7968, 137.191, -63.2396, 0.12 ) }
    apic_4 { pt3dadd( 77.066, 137.536, -63.3238, 0.12 ) }
    apic_4 { pt3dadd( 77.4023, 137.966, -63.4062, 0.24 ) }
    apic_4 { pt3dadd( 77.5512, 138.162, -63.4323, 0.12 ) }
    apic_4 { pt3dadd( 78.0524, 138.882, -63.5478, 0.12 ) }
    apic_4 { pt3dadd( 78.4789, 139.554, -63.6529, 0.6 ) }
    apic_4 { pt3dadd( 78.8427, 140.164, -63.7404, 0.72 ) }
    apic_4 { pt3dadd( 79.0663, 140.549, -63.7917, 0.72 ) }
    apic_4 { pt3dadd( 79.3431, 141.041, -63.8495, 0.12 ) }
    apic_4 { pt3dadd( 79.9652, 142.158, -63.9398, 0.12 ) }
    apic_4 { pt3dadd( 80.5513, 143.247, -63.9844, 0.12 ) }
    apic_4 { pt3dadd( 80.8455, 143.786, -63.9844, 0.48 ) }
    apic_4 { pt3dadd( 81.018, 144.093, -63.9792, 0.12 ) }
    apic_4 { pt3dadd( 81.3881, 144.716, -63.9573, 0.12 ) }
    apic_4 { pt3dadd( 81.8598, 145.451, -63.9469, 0.12 ) }
    apic_4 { pt3dadd( 82.4238, 146.275, -63.9765, 0.12 ) }
    apic_4 { pt3dadd( 82.7743, 146.788, -64.0149, 0.12 ) }
    apic_4 { pt3dadd( 83.1219, 147.301, -64.0445, 0.6 ) }
    apic_4 { pt3dadd( 83.4604, 147.82, -64.0715, 0.6 ) }
    apic_4 { pt3dadd( 83.9548, 148.595, -64.1085, 0.12 ) }
    apic_4 { pt3dadd( 84.8174, 150.039, -64.1686, 0.12 ) }
    apic_4 { pt3dadd( 85.5293, 151.354, -64.1925, 0.12 ) }
    apic_4 { pt3dadd( 85.8551, 152.056, -64.2068, 0.72 ) }
    apic_4 { pt3dadd( 86.0173, 152.484, -64.2138, 0.72 ) }
    apic_4 { pt3dadd( 86.1471, 152.923, -64.2159, 0.24 ) }
    apic_4 { pt3dadd( 86.3916, 154.045, -64.2287, 0.24 ) }
    apic_4 { pt3dadd( 86.488, 154.795, -64.2405, 0.24 ) }
    apic_4 { pt3dadd( 86.5531, 155.45, -64.2535, 0.48 ) }
    apic_4 { pt3dadd( 86.6329, 156.201, -64.2646, 0.6 ) }
    apic_4 { pt3dadd( 86.6809, 156.554, -64.2554, 0.6 ) }
    apic_4 { pt3dadd( 86.7697, 157.23, -64.2173, 0.6 ) }
    apic_4 { pt3dadd( 86.9217, 158.709, -64.0846, 0.12 ) }
    apic_4 { pt3dadd( 86.9933, 159.613, -63.9501, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_4 { pt3dadd( 87.0354, 160.602, -63.7683, 0.12 ) }
    apic_4 { pt3dadd( 87.0576, 161.533, -63.5933, 0.12 ) }
    apic_4 { pt3dadd( 87.0592, 161.708, -63.5617, 0.36 ) }
    apic_4 { pt3dadd( 87.05, 162.993, -63.3392, 0.36 ) }
    apic_4 { pt3dadd( 87.0264, 163.706, -63.2592, 0.12 ) }
    apic_4 { pt3dadd( 86.9612, 164.97, -63.1109, 0.12 ) }
    apic_4 { pt3dadd( 86.9399, 165.344, -63.0678, 0.48 ) }
    apic_4 { pt3dadd( 86.91, 165.972, -63.0033, 0.48 ) }
    apic_4 { pt3dadd( 86.912, 166.253, -62.9814, 0.12 ) }
    apic_4 { pt3dadd( 86.9689, 167.386, -62.9283, 0.12 ) }
    apic_4 { pt3dadd( 86.9752, 167.502, -62.9289, 0.72 ) }
    apic_4 { pt3dadd( 87.0074, 168.004, -62.9392, 0.12 ) }
    apic_4 { pt3dadd( 87.0945, 168.997, -62.968, 0.12 ) }
    apic_4 { pt3dadd( 87.2315, 170.026, -63.003, 0.12 ) }
    apic_4 { pt3dadd( 87.3997, 170.887, -63.0437, 0.36 ) }
    apic_4 { pt3dadd( 87.6062, 171.658, -63.1662, 0.12 ) }
    apic_4 { pt3dadd( 87.9871, 172.834, -63.4411, 0.12 ) }
    apic_4 { pt3dadd( 88.4683, 174.08, -63.8093, 0.48 ) }
    apic_4 { pt3dadd( 88.8919, 174.979, -64.1628, 0.48 ) }
    apic_4 { pt3dadd( 89.3531, 175.77, -64.5478, 0.84 ) }
    apic_4 { pt3dadd( 90.5989, 177.491, -65.5926, 0.24 ) }
    apic_4 { pt3dadd( 91.1795, 178.148, -66.0694, 0.12 ) }
    apic_4 { pt3dadd( 91.5584, 178.497, -66.3792, 0.48 ) }
    apic_4 { pt3dadd( 92.1866, 178.984, -66.8726, 0.36 ) }
    apic_4 { pt3dadd( 92.6753, 179.331, -67.3086, 0.36 ) }
    apic_4 { pt3dadd( 93.2575, 179.702, -67.7921, 0.72 ) }
    apic_4 { pt3dadd( 93.6478, 179.924, -68.1017, 0.96 ) }
    apic_4 { pt3dadd( 94.1551, 180.196, -68.5079, 0.96 ) }
    apic_4 { pt3dadd( 94.8244, 180.554, -69.0113, 1.08 ) }
    apic_4 { pt3dadd( 96.7387, 181.607, -70.3447, 0.12 ) }
    apic_4 { pt3dadd( 97.6479, 182.094, -70.9442, 0.12 ) }
    apic_4 { pt3dadd( 98.4093, 182.483, -71.3767, 0.36 ) }
    apic_4 { pt3dadd( 99.2853, 182.922, -71.8989, 0.12 ) }
    apic_4 { pt3dadd( 100.086, 183.309, -72.3477, 0.12 ) }
    apic_4 { pt3dadd( 100.315, 183.413, -72.4469, 0.36 ) }
    apic_4 { pt3dadd( 100.875, 183.637, -72.6119, 0.12 ) }
    apic_4 { pt3dadd( 101.477, 183.84, -72.8602, 0.12 ) }
    apic_4 { pt3dadd( 102.78, 184.272, -73.4635, 0.36 ) }
    apic_4 { pt3dadd( 103.231, 184.42, -73.7173, 0.6 ) }
    apic_4 { pt3dadd( 103.77, 184.63, -74.0135, 1.08 ) }
    apic_4 { pt3dadd( 104.487, 184.943, -74.3702, 0.24 ) }
    apic_4 { pt3dadd( 105.343, 185.335, -74.7407, 0.12 ) }
    apic_4 { pt3dadd( 105.796, 185.547, -74.9204, 0.48 ) }
    apic_4 { pt3dadd( 106.028, 185.666, -74.9933, 0.12 ) }
    apic_4 { pt3dadd( 107.292, 186.423, -75.4343, 0.12 ) }
    apic_4 { pt3dadd( 107.628, 186.678, -75.559, 0.6 ) }
    apic_4 { pt3dadd( 107.886, 186.934, -75.6941, 0.6 ) }
    apic_4 { pt3dadd( 108.42, 187.647, -76.1068, 0.12 ) }
    apic_4 { pt3dadd( 108.721, 188.166, -76.4483, 0.12 ) }
    apic_4 { pt3dadd( 108.907, 188.638, -76.7742, 0.12 ) }
    apic_4 { pt3dadd( 109.004, 189.24, -77.1629, 0.48 ) }
    apic_4 { pt3dadd( 109.034, 190.627, -78.0716, 0.12 ) }
    apic_4 { pt3dadd( 108.988, 191.234, -78.4988, 0.12 ) }
    apic_4 { pt3dadd( 108.931, 191.659, -78.7594, 0.36 ) }
    apic_4 { pt3dadd( 108.882, 192.006, -78.9517, 0.12 ) }
    apic_4 { pt3dadd( 108.736, 193.108, -79.5075, 0.12 ) }
    apic_4 { pt3dadd( 108.562, 194.696, -80.2402, 0.72 ) }
    apic_4 { pt3dadd( 108.514, 195.794, -80.6154, 0.12 ) }
    apic_4 { pt3dadd( 108.515, 197.943, -81.2836, 0.12 ) }
    apic_4 { pt3dadd( 108.534, 198.901, -81.5737, 0.12 ) }
    apic_4 { pt3dadd( 108.54, 199.041, -81.6128, 0.48 ) }
    apic_4 { pt3dadd( 108.563, 199.315, -81.6715, 0.12 ) }
    apic_4 { pt3dadd( 108.932, 202.173, -81.8712, 0.12 ) }
    apic_4 { pt3dadd( 108.954, 202.297, -81.8697, 0.48 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 64/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 0.931408, 14.5485, -5.54226, 1.08 ) }
    apic_1 { pt3dadd( 0.837534, 15.6564, -5.2154, 1.08 ) }
    apic_1 { pt3dadd( 0.729461, 16.9496, -4.85472, 1.08 ) }
    apic_1 { pt3dadd( 0.573762, 18.7554, -4.39884, 1.08 ) }
    apic_1 { pt3dadd( 0.45921, 20.0839, -4.06344, 0.84 ) }
    apic_1 { pt3dadd( 0.339594, 21.4712, -3.71321, 0.36 ) }
    apic_1 { pt3dadd( 0.286251, 22.0899, -3.55703, 0.36 ) }
    apic_1 { pt3dadd( 0.23167, 22.6844, -3.40043, 0.36 ) }
    apic_1 { pt3dadd( 0.160202, 23.5335, -3.15364, 0.6 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 73/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -0.426661, -11.4137, 7.97607, 1.32 ) }
    dend_31 { pt3dadd( -0.400479, -11.9316, 7.94714, 1.32 ) }
    dend_31 { pt3dadd( -0.386646, -12.1821, 7.9257, 1.44 ) }
    dend_31 { pt3dadd( -0.353707, -12.8042, 7.89444, 1.32 ) }
    dend_31 { pt3dadd( -0.308587, -13.5689, 7.87779, 1.08 ) }
    dend_31 { pt3dadd( -0.277733, -14.1876, 7.88012, 1.08 ) }
    dend_31 { pt3dadd( -0.258695, -14.8686, 7.89191, 0.84 ) }
    dend_31 { pt3dadd( -0.256319, -15.6138, 7.9135, 0.84 ) }
    dend_31 { pt3dadd( -0.263803, -16.3425, 7.94091, 0.84 ) }
    dend_31 { pt3dadd( -0.297141, -17.2244, 7.98101, 0.96 ) }
    dend_31 { pt3dadd( -0.352427, -17.8805, 8.00362, 0.96 ) }
    dend_31 { pt3dadd( -0.441092, -18.5412, 8.04776, 0.96 ) }
    dend_31 { pt3dadd( -0.538252, -19.0928, 8.09807, 0.96 ) }
    dend_31 { pt3dadd( -0.735002, -19.9725, 8.17469, 0.72 ) }
    dend_31 { pt3dadd( -0.877163, -20.5143, 8.21461, 0.84 ) }
    dend_31 { pt3dadd( -1.1577, -21.4863, 8.28716, 0.84 ) }
    dend_31 { pt3dadd( -1.55426, -22.819, 8.38931, 0.96 ) }
    dend_31 { pt3dadd( -1.7049, -23.3116, 8.43406, 1.2 ) }
    dend_31 { pt3dadd( -1.84535, -23.7385, 8.4809, 1.68 ) }
    dend_31 { pt3dadd( -2.07511, -24.3165, 8.56244, 1.68 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 93/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.426661, -11.4137, 7.97607, 0.6 ) }
    dend_26 { pt3dadd( 0.111299, -11.5837, 8.37175, 0.6 ) }
    dend_26 { pt3dadd( 1.02501, -11.8856, 9.39901, 0.48 ) }
    dend_26 { pt3dadd( 1.47858, -12.0308, 9.95396, 0.48 ) }
    dend_26 { pt3dadd( 2.5943, -12.3982, 11.3447, 0.48 ) }
    dend_26 { pt3dadd( 3.01813, -12.5648, 11.8783, 0.48 ) }
    dend_26 { pt3dadd( 3.6376, -12.7957, 12.6744, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( 5.35327, -13.4263, 15.1615, 0.96 ) }
    dend_26 { pt3dadd( 5.60949, -13.5071, 15.56, 0.36 ) }
    dend_26 { pt3dadd( 5.77551, -13.5296, 15.8553, 0.36 ) }
    dend_26 { pt3dadd( 6.15849, -13.4684, 16.6006, 0.36 ) }
    dend_26 { pt3dadd( 6.7179, -13.2062, 17.7409, 0.48 ) }
    dend_26 { pt3dadd( 7.18095, -12.8668, 18.6239, 0.48 ) }
    dend_26 { pt3dadd( 7.43831, -12.6706, 19.0294, 0.48 ) }
    dend_26 { pt3dadd( 8.01482, -12.2599, 19.9222, 0.12 ) }
    dend_26 { pt3dadd( 8.21378, -12.1288, 20.1951, 0.12 ) }
    dend_26 { pt3dadd( 8.6279, -11.8581, 20.6659, 0.48 ) }
    dend_26 { pt3dadd( 9.04443, -11.6274, 21.0378, 0.48 ) }
    dend_26 { pt3dadd( 9.82362, -11.2233, 21.5608, 0.6 ) }
    dend_26 { pt3dadd( 10.3405, -10.9367, 21.8364, 0.12 ) }
    dend_26 { pt3dadd( 10.9962, -10.5421, 22.1005, 0.48 ) }
    dend_26 { pt3dadd( 11.9244, -9.91794, 22.399, 0.48 ) }
    dend_26 { pt3dadd( 12.2651, -9.66078, 22.4937, 0.48 ) }
    dend_26 { pt3dadd( 12.7566, -9.23264, 22.5925, 0.48 ) }
    dend_26 { pt3dadd( 13.298, -8.6757, 22.6724, 0.48 ) }
    dend_26 { pt3dadd( 14.2125, -7.59556, 22.799, 0.48 ) }
    dend_26 { pt3dadd( 15.0275, -6.53979, 22.8969, 0.48 ) }
    dend_26 { pt3dadd( 15.8329, -5.44016, 22.9691, 0.48 ) }
    dend_26 { pt3dadd( 16.4471, -4.52399, 23.008, 0.12 ) }
    dend_26 { pt3dadd( 16.892, -3.77413, 23.0207, 0.12 ) }
    dend_26 { pt3dadd( 17.1893, -3.22715, 23.0341, 0.12 ) }
    dend_26 { pt3dadd( 17.5376, -2.51742, 23.0523, 0.84 ) }
    dend_26 { pt3dadd( 17.7902, -2.05449, 23.0838, 1.2 ) }
    dend_26 { pt3dadd( 18.0985, -1.65757, 23.1669, 1.44 ) }
    dend_26 { pt3dadd( 18.8039, -1.02159, 23.4111, 0.72 ) }
    dend_26 { pt3dadd( 19.4942, -0.511473, 23.6502, 0.36 ) }
    dend_26 { pt3dadd( 20.002, -0.16481, 23.8647, 0.48 ) }
    dend_26 { pt3dadd( 20.6576, 0.296235, 24.1808, 0.48 ) }
    dend_26 { pt3dadd( 21.7638, 1.11726, 24.7515, 0.36 ) }
    dend_26 { pt3dadd( 22.4383, 1.64611, 25.1072, 0.36 ) }
    dend_26 { pt3dadd( 22.8331, 1.95527, 25.3206, 0.36 ) }
    dend_26 { pt3dadd( 23.9339, 2.88581, 25.9164, 0.12 ) }
    dend_26 { pt3dadd( 24.4896, 3.44407, 26.2579, 1.08 ) }
    dend_26 { pt3dadd( 24.7956, 3.8474, 26.4743, 1.2 ) }
    dend_26 { pt3dadd( 25.0708, 4.3634, 26.6811, 1.08 ) }
    dend_26 { pt3dadd( 33.3287, 7.85312, 31.2376, 1.08 ) }
    dend_26 { pt3dadd( 40.5911, 13.2368, 35.8167, 1.08 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 40/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.556685, 45.2854, 15.1285, 0.12 ) }
    dend_24 { pt3dadd( 0.226769, 46.5884, 14.9059, 0.12 ) }
    dend_24 { pt3dadd( 0.949604, 47.8922, 14.7106, 0.12 ) }
    dend_24 { pt3dadd( 1.41343, 48.7746, 14.59, 0.12 ) }
    dend_24 { pt3dadd( 2.04603, 50.0312, 14.4381, 0.12 ) }
    dend_24 { pt3dadd( 2.48421, 50.8812, 14.262, 0.12 ) }
    dend_24 { pt3dadd( 3.13971, 52.1307, 13.9405, 0.12 ) }
    dend_24 { pt3dadd( 3.7114, 53.2226, 13.6415, 0.12 ) }
    dend_24 { pt3dadd( 3.93534, 53.6374, 13.4709, 0.12 ) }
    dend_24 { pt3dadd( 4.44169, 54.6015, 12.9457, 0.96 ) }
    dend_24 { pt3dadd( 5.29287, 56.3716, 11.7809, 0.12 ) }
    dend_24 { pt3dadd( 5.45002, 56.7049, 11.5323, 0.12 ) }
    dend_24 { pt3dadd( 5.59211, 56.9796, 11.2971, 0.36 ) }
    dend_24 { pt3dadd( 6.07363, 57.845, 10.5156, 0.12 ) }
    dend_24 { pt3dadd( 6.20927, 58.0817, 10.3125, 0.12 ) }
    dend_24 { pt3dadd( 6.67968, 58.9227, 9.71149, 0.12 ) }
    dend_24 { pt3dadd( 6.89128, 59.3303, 9.51178, 0.12 ) }
    dend_24 { pt3dadd( 7.23465, 59.9915, 9.2192, 0.12 ) }
    dend_24 { pt3dadd( 7.4635, 60.4394, 9.06138, 0.12 ) }
    dend_24 { pt3dadd( 7.85379, 61.232, 8.829, 0.12 ) }
    dend_24 { pt3dadd( 8.44733, 62.5017, 8.29381, 0.12 ) }
    dend_24 { pt3dadd( 8.72843, 63.1483, 7.95064, 0.12 ) }
    dend_24 { pt3dadd( 8.94189, 63.6862, 7.63811, 0.12 ) }
    dend_24 { pt3dadd( 9.41088, 64.9707, 6.8083, 0.12 ) }
    dend_24 { pt3dadd( 9.59734, 65.5313, 6.41708, 1.2 ) }
    dend_24 { pt3dadd( 10.1682, 67.6097, 4.97893, 0.12 ) }
    dend_24 { pt3dadd( 10.4181, 68.7564, 4.18645, 0.12 ) }
    dend_24 { pt3dadd( 10.4571, 68.958, 4.04772, 0.48 ) }
    dend_24 { pt3dadd( 10.5516, 69.6044, 3.50699, 0.12 ) }
    dend_24 { pt3dadd( 10.5737, 70.0724, 3.08837, 0.12 ) }
    dend_24 { pt3dadd( 10.4841, 71.1536, 1.94042, 0.12 ) }
    dend_24 { pt3dadd( 10.3898, 71.6394, 1.3838, 1.2 ) }
    dend_24 { pt3dadd( 10.32, 71.8472, 1.06763, 1.2 ) }
    dend_24 { pt3dadd( 9.58418, 73.4915, -1.85937, 0.12 ) }
    dend_24 { pt3dadd( 9.24767, 74.0558, -2.98241, 0.12 ) }
    dend_24 { pt3dadd( 8.31399, 75.3458, -6.26195, 0.12 ) }
    dend_24 { pt3dadd( 8.20978, 75.4655, -6.66024, 0.12 ) }
    dend_24 { pt3dadd( 7.75801, 76.0249, -8.77923, 0.6 ) }
    dend_24 { pt3dadd( 7.70109, 76.1067, -9.10463, 0.6 ) }
    dend_24 { pt3dadd( 7.64647, 76.299, -9.94295, 0.6 ) }
    dend_24 { pt3dadd( 8.05497, 76.7346, -11.9269, 0.12 ) }
    dend_24 { pt3dadd( 8.43268, 76.9558, -12.1673, 0.12 ) }
    dend_24 { pt3dadd( 9.7809, 78.058, -12.6683, 0.12 ) }
    dend_24 { pt3dadd( 10.3017, 78.6509, -12.768, 0.6 ) }
    dend_24 { pt3dadd( 10.6881, 79.2349, -12.8143, 0.12 ) }
    dend_24 { pt3dadd( 11.1318, 79.9821, -12.8208, 0.12 ) }
    dend_24 { pt3dadd( 11.5156, 80.8996, -12.7436, 0.12 ) }
    dend_24 { pt3dadd( 11.8124, 81.9872, -12.6691, 0.12 ) }
    dend_24 { pt3dadd( 11.896, 83.0113, -12.6261, 0.12 ) }
    dend_24 { pt3dadd( 11.8981, 83.7167, -12.6261, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 90/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.556685, 45.2854, 15.1285, 0.72 ) }
    dend_23 { pt3dadd( -0.877791, 46.0124, 15.1563, 0.72 ) }
    dend_23 { pt3dadd( -1.20565, 46.7839, 15.1836, 0.84 ) }
    dend_23 { pt3dadd( -1.44417, 47.3525, 15.2023, 1.08 ) }
    dend_23 { pt3dadd( -1.80888, 48.2394, 15.1965, 0.72 ) }
    dend_23 { pt3dadd( -2.20002, 49.2479, 15.1723, 0.48 ) }
    dend_23 { pt3dadd( -2.46582, 49.9939, 15.1473, 0.48 ) }
    dend_23 { pt3dadd( -2.66532, 50.6327, 15.1208, 0.72 ) }
    dend_23 { pt3dadd( -2.8228, 51.1708, 15.098, 0.96 ) }
    dend_23 { pt3dadd( -3.07337, 52.0785, 15.0584, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_23 { pt3dadd( -3.26763, 52.8097, 15.0324, 0.72 ) }
    dend_23 { pt3dadd( -3.48404, 53.651, 15.0254, 0.72 ) }
    dend_23 { pt3dadd( -3.78105, 54.6832, 15.0326, 0.72 ) }
    dend_23 { pt3dadd( -3.89176, 55.0268, 15.0599, 0.72 ) }
    dend_23 { pt3dadd( -4.05268, 55.512, 15.133, 0.72 ) }
    dend_23 { pt3dadd( -4.415, 56.5858, 15.3454, 0.6 ) }
    dend_23 { pt3dadd( -4.67478, 57.3164, 15.4455, 0.6 ) }
    dend_23 { pt3dadd( -5.12692, 58.545, 15.6316, 0.48 ) }
    dend_23 { pt3dadd( -5.5812, 59.7847, 15.8162, 0.48 ) }
    dend_23 { pt3dadd( -6.02419, 60.9566, 15.9513, 0.48 ) }
    dend_23 { pt3dadd( -6.5754, 62.3867, 16.0767, 0.6 ) }
    dend_23 { pt3dadd( -7.31329, 64.3389, 16.2388, 0.6 ) }
    dend_23 { pt3dadd( -7.92198, 66.022, 16.362, 0.72 ) }
    dend_23 { pt3dadd( -8.39118, 67.3992, 16.4408, 0.6 ) }
    dend_23 { pt3dadd( -8.77997, 68.5436, 16.4781, 0.12 ) }
    dend_23 { pt3dadd( -9.02555, 69.2536, 16.5098, 0.12 ) }
    dend_23 { pt3dadd( -9.43899, 70.4665, 16.5836, 0.12 ) }
    dend_23 { pt3dadd( -9.91375, 71.9646, 16.7038, 0.24 ) }
    dend_23 { pt3dadd( -10.2843, 73.2122, 16.7406, 0.24 ) }
    dend_23 { pt3dadd( -10.4639, 73.8633, 16.77, 0.24 ) }
    dend_23 { pt3dadd( -10.5876, 74.3547, 16.8005, 0.6 ) }
    dend_23 { pt3dadd( -10.7599, 74.9969, 16.8193, 0.12 ) }
    dend_23 { pt3dadd( -10.9323, 75.5892, 16.8072, 0.24 ) }
    dend_23 { pt3dadd( -11.1088, 76.2041, 16.787, 0.24 ) }
    dend_23 { pt3dadd( -11.158, 76.3744, 16.7802, 0.24 ) }
    dend_23 { pt3dadd( -11.377, 77.0942, 16.7537, 0.36 ) }
    dend_23 { pt3dadd( -11.7787, 78.3134, 16.7445, 0.36 ) }
    dend_23 { pt3dadd( -12.1007, 79.2113, 16.7599, 0.36 ) }
    dend_23 { pt3dadd( -12.2736, 79.6089, 16.7807, 0.48 ) }
    dend_23 { pt3dadd( -12.7954, 80.6564, 16.864, 0.48 ) }
    dend_23 { pt3dadd( -13.2742, 81.5238, 16.9514, 0.48 ) }
    dend_23 { pt3dadd( -13.6622, 82.1689, 17.0427, 0.6 ) }
    dend_23 { pt3dadd( -13.979, 82.6849, 17.1357, 0.72 ) }
    dend_23 { pt3dadd( -14.5929, 83.7576, 17.3501, 0.36 ) }
    dend_23 { pt3dadd( -15.0372, 84.631, 17.5233, 0.36 ) }
    dend_23 { pt3dadd( -15.086, 84.7441, 17.5434, 0.48 ) }
    dend_23 { pt3dadd( -15.334, 85.4659, 17.6482, 0.36 ) }
    dend_23 { pt3dadd( -15.5761, 86.437, 17.7446, 0.36 ) }
    dend_23 { pt3dadd( -15.7954, 87.6685, 17.8272, 0.36 ) }
    dend_23 { pt3dadd( -15.9421, 88.8088, 17.8688, 0.36 ) }
    dend_23 { pt3dadd( -16.0371, 89.5685, 17.8864, 0.36 ) }
    dend_23 { pt3dadd( -16.1166, 90.1823, 17.8919, 0.6 ) }
    dend_23 { pt3dadd( -16.3032, 91.5437, 17.882, 0.84 ) }
    dend_23 { pt3dadd( -16.4008, 92.1972, 17.8751, 0.36 ) }
    dend_23 { pt3dadd( -16.5668, 93.2521, 17.8642, 0.36 ) }
    dend_23 { pt3dadd( -16.725, 94.3057, 17.8545, 0.36 ) }
    dend_23 { pt3dadd( -16.9379, 95.7958, 17.8436, 0.36 ) }
    dend_23 { pt3dadd( -17.0336, 96.5452, 17.8401, 0.48 ) }
    dend_23 { pt3dadd( -17.0735, 96.9208, 17.8397, 0.48 ) }
    dend_23 { pt3dadd( -17.1011, 97.3182, 17.8411, 0.24 ) }
    dend_23 { pt3dadd( -17.1411, 98.4478, 17.8568, 0.24 ) }
    dend_23 { pt3dadd( -17.1503, 99.2035, 17.8766, 0.6 ) }
    dend_23 { pt3dadd( -17.1554, 100.083, 17.9072, 0.6 ) }
    dend_23 { pt3dadd( -17.1582, 100.713, 17.9319, 0.48 ) }
    dend_23 { pt3dadd( -17.167, 101.846, 17.9821, 0.48 ) }
    dend_23 { pt3dadd( -17.171, 102.547, 18.0147, 0.12 ) }
    dend_23 { pt3dadd( -17.1767, 103.921, 18.0768, 0.12 ) }
    dend_23 { pt3dadd( -17.1845, 105.043, 18.1223, 0.12 ) }
    dend_23 { pt3dadd( -17.1869, 105.295, 18.131, 0.72 ) }
    dend_23 { pt3dadd( -17.197, 106.169, 18.1551, 0.84 ) }
    dend_23 { pt3dadd( -17.2163, 107.31, 18.1667, 0.36 ) }
    dend_23 { pt3dadd( -17.2505, 109.057, 18.1552, 0.36 ) }
    dend_23 { pt3dadd( -17.2793, 110.18, 18.141, 0.36 ) }
    dend_23 { pt3dadd( -17.3131, 111.061, 18.1252, 0.36 ) }
    dend_23 { pt3dadd( -17.3623, 111.94, 18.1088, 0.48 ) }
    dend_23 { pt3dadd( -17.4566, 113.211, 18.0841, 0.96 ) }
    dend_23 { pt3dadd( -17.4902, 113.587, 18.0775, 0.96 ) }
    dend_23 { pt3dadd( -17.5768, 114.454, 18.0644, 0.36 ) }
    dend_23 { pt3dadd( -17.6912, 115.486, 18.0531, 0.36 ) }
    dend_23 { pt3dadd( -17.8821, 117.112, 18.0439, 0.36 ) }
    dend_23 { pt3dadd( -18.0655, 118.606, 18.0452, 0.36 ) }
    dend_23 { pt3dadd( -18.1329, 119.105, 18.0496, 0.48 ) }
    dend_23 { pt3dadd( -18.194, 119.498, 18.0523, 0.36 ) }
    dend_23 { pt3dadd( -18.3305, 120.241, 18.0491, 0.36 ) }
    dend_23 { pt3dadd( -18.5555, 121.346, 18.0341, 0.48 ) }
    dend_23 { pt3dadd( -18.6482, 121.733, 18.0256, 0.36 ) }
    dend_23 { pt3dadd( -19.1205, 123.573, 17.9798, 0.36 ) }
    dend_23 { pt3dadd( -19.5567, 125.214, 17.9356, 0.48 ) }
    dend_23 { pt3dadd( -19.8858, 126.417, 17.9, 0.96 ) }
    dend_23 { pt3dadd( -20.0292, 126.914, 17.8833, 0.6 ) }
    dend_23 { pt3dadd( -20.4088, 128.138, 17.8355, 0.72 ) }
    dend_23 { pt3dadd( -23.6452, 138.071, 17.6553, 0.72 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 82/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -3.17385, -17.2424, -9.7578, 1.56 ) }
    dend_19 { pt3dadd( -3.16645, -17.0682, -11.2583, 1.56 ) }
    dend_19 { pt3dadd( -3.13411, -16.3071, -17.8184, 1.44 ) }
    dend_19 { pt3dadd( -3.10726, -15.6753, -23.2636, 2.04 ) }
    dend_19 { pt3dadd( -3.09808, -15.4593, -25.1252, 1.32 ) }
    dend_19 { pt3dadd( -3.09431, -15.3704, -25.8906, 1.2 ) }
    dend_19 { pt3dadd( -3.09219, -15.3206, -26.3206, 0.12 ) }
    // Section: dend_14, id: dend_14, parent: dend_11 (entry count 89/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.17385, -17.2424, -9.7578, 0.48 ) }
    dend_14 { pt3dadd( -3.64973, -18.4582, -9.57881, 0.48 ) }
    dend_14 { pt3dadd( -3.84392, -18.9267, -9.48933, 0.48 ) }
    dend_14 { pt3dadd( -4.12928, -19.606, -9.35307, 0.72 ) }
    dend_14 { pt3dadd( -4.51652, -20.5504, -9.21086, 1.2 ) }
    dend_14 { pt3dadd( -4.95759, -21.6405, -9.04776, 0.6 ) }
    dend_14 { pt3dadd( -5.27849, -22.4578, -8.93045, 0.36 ) }
    dend_14 { pt3dadd( -5.63565, -23.3607, -8.82346, 0.36 ) }
    dend_14 { pt3dadd( -5.91427, -24.0861, -8.74106, 0.48 ) }
    dend_14 { pt3dadd( -6.315, -25.1986, -8.59661, 0.84 ) }
    dend_14 { pt3dadd( -6.64111, -26.2578, -8.45726, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( -6.82161, -26.9827, -8.36044, 0.72 ) }
    dend_14 { pt3dadd( -6.99296, -27.7987, -8.23932, 0.72 ) }
    dend_14 { pt3dadd( -7.10966, -28.3998, -8.15729, 0.72 ) }
    dend_14 { pt3dadd( -7.29441, -29.4422, -7.99872, 0.84 ) }
    dend_14 { pt3dadd( -7.46736, -30.5309, -7.79871, 0.84 ) }
    dend_14 { pt3dadd( -7.57836, -31.3192, -7.65395, 0.48 ) }
    dend_14 { pt3dadd( -7.6607, -31.9438, -7.53691, 0.6 ) }
    dend_14 { pt3dadd( -7.73877, -32.5581, -7.41768, 1.08 ) }
    dend_14 { pt3dadd( -7.80883, -33.0673, -7.31992, 1.32 ) }
    dend_14 { pt3dadd( -7.98673, -34.2825, -7.124, 0.96 ) }
    dend_14 { pt3dadd( -8.14179, -35.3276, -6.94581, 0.96 ) }
    dend_14 { pt3dadd( -8.31697, -36.5635, -6.73844, 0.72 ) }
    dend_14 { pt3dadd( -8.51691, -37.9934, -6.50257, 0.72 ) }
    dend_14 { pt3dadd( -8.68792, -39.2576, -6.30503, 0.96 ) }
    dend_14 { pt3dadd( -8.85976, -40.5373, -6.1125, 1.2 ) }
    dend_14 { pt3dadd( -9.00062, -41.5746, -5.97802, 0.6 ) }
    dend_14 { pt3dadd( -9.08481, -42.1935, -5.90412, 0.6 ) }
    dend_14 { pt3dadd( -9.22076, -43.2037, -5.77741, 0.6 ) }
    dend_14 { pt3dadd( -9.3103, -43.9392, -5.70429, 1.32 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 19/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -3.17385, -17.2424, -9.7578, 1.44 ) }
    dend_12 { pt3dadd( -2.80139, -18.005, -10.1268, 1.44 ) }
    dend_12 { pt3dadd( -2.33581, -19.3749, -10.669, 0.72 ) }
    dend_12 { pt3dadd( -2.24663, -19.8511, -10.8164, 0.12 ) }
    dend_12 { pt3dadd( -2.23057, -20.1972, -10.8955, 0.24 ) }
    dend_12 { pt3dadd( -2.24319, -20.4745, -10.9413, 0.24 ) }
    dend_12 { pt3dadd( -2.3141, -21.2997, -11.0466, 0.24 ) }
    dend_12 { pt3dadd( -2.42527, -21.9148, -11.1133, 0.48 ) }
    dend_12 { pt3dadd( -2.56641, -22.5291, -11.1782, 0.6 ) }
    dend_12 { pt3dadd( -2.74476, -23.2832, -11.2967, 0.36 ) }
    dend_12 { pt3dadd( -2.94966, -24.1204, -11.4565, 0.36 ) }
    dend_12 { pt3dadd( -3.08808, -24.718, -11.5867, 0.36 ) }
    dend_12 { pt3dadd( -3.23734, -25.5221, -11.8004, 0.72 ) }
    dend_12 { pt3dadd( -3.33704, -26.3478, -12.0433, 0.36 ) }
    dend_12 { pt3dadd( -3.36461, -26.9555, -12.2399, 0.36 ) }
    dend_12 { pt3dadd( -3.3487, -27.3764, -12.3784, 0.6 ) }
    dend_12 { pt3dadd( -3.32515, -27.7304, -12.5025, 0.6 ) }
    dend_12 { pt3dadd( -3.28809, -28.4166, -12.7496, 0.36 ) }
    dend_12 { pt3dadd( -3.27489, -29.1014, -12.978, 0.36 ) }
    dend_12 { pt3dadd( -3.28768, -29.7265, -13.2006, 0.36 ) }
    dend_12 { pt3dadd( -3.31517, -30.4013, -13.4533, 0.48 ) }
    dend_12 { pt3dadd( -3.39083, -31.3657, -13.8416, 0.6 ) }
    dend_12 { pt3dadd( -3.48894, -32.0277, -14.1116, 0.84 ) }
    dend_12 { pt3dadd( -3.59714, -32.5087, -14.3058, 0.84 ) }
    dend_12 { pt3dadd( -3.80631, -33.228, -14.5902, 0.36 ) }
    dend_12 { pt3dadd( -4.106, -34.1346, -14.9434, 0.36 ) }
    dend_12 { pt3dadd( -4.34124, -34.812, -15.2013, 0.48 ) }
    dend_12 { pt3dadd( -4.51175, -35.3739, -15.3884, 0.48 ) }
    dend_12 { pt3dadd( -4.72345, -36.1521, -15.634, 0.84 ) }
    dend_12 { pt3dadd( -4.9697, -37.1211, -15.9441, 1.32 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 49/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 17.7818, -9.74916, -10.0811, 0.6 ) }
    dend_10 { pt3dadd( 19.1084, -10.8903, -9.16341, 0.6 ) }
    dend_10 { pt3dadd( 19.7726, -11.3782, -8.86423, 0.6 ) }
    dend_10 { pt3dadd( 20.5968, -11.9449, -8.62911, 0.6 ) }
    dend_10 { pt3dadd( 21.1461, -12.3186, -8.53482, 0.6 ) }
    dend_10 { pt3dadd( 22.071, -12.9564, -8.34779, 0.48 ) }
    dend_10 { pt3dadd( 22.5824, -13.3207, -8.23812, 0.84 ) }
    dend_10 { pt3dadd( 23.1798, -13.7436, -8.19113, 0.84 ) }
    dend_10 { pt3dadd( 23.8335, -14.2197, -8.15131, 0.36 ) }
    dend_10 { pt3dadd( 24.8992, -15.1097, -8.1165, 0.48 ) }
    dend_10 { pt3dadd( 25.7737, -15.9682, -8.05755, 0.96 ) }
    dend_10 { pt3dadd( 26.0152, -16.2608, -8.02729, 1.08 ) }
    dend_10 { pt3dadd( 26.4894, -16.9637, -7.98933, 0.48 ) }
    dend_10 { pt3dadd( 26.6622, -17.27, -7.97404, 0.48 ) }
    dend_10 { pt3dadd( 27.0037, -17.9735, -7.93926, 0.72 ) }
    dend_10 { pt3dadd( 27.3064, -18.7077, -7.92404, 1.2 ) }
    dend_10 { pt3dadd( 27.7088, -19.7788, -7.93256, 1.32 ) }
    dend_10 { pt3dadd( 28.004, -20.5849, -7.89728, 0.6 ) }
    dend_10 { pt3dadd( 28.3356, -21.5111, -7.79736, 0.96 ) }
    dend_10 { pt3dadd( 28.5804, -22.1825, -7.70312, 0.96 ) }
    dend_10 { pt3dadd( 28.8487, -22.9003, -7.58897, 0.6 ) }
    dend_10 { pt3dadd( 29.1061, -23.5949, -7.4677, 0.6 ) }
    dend_10 { pt3dadd( 29.4457, -24.5892, -7.29115, 0.72 ) }
    dend_10 { pt3dadd( 29.6377, -25.2218, -7.1881, 0.84 ) }
    dend_10 { pt3dadd( 29.9004, -26.185, -7.05196, 1.08 ) }
    dend_10 { pt3dadd( 30.1142, -27.0778, -6.93306, 1.08 ) }
    dend_10 { pt3dadd( 30.3006, -27.9574, -6.82825, 0.48 ) }
    dend_10 { pt3dadd( 30.5378, -29.1768, -6.72328, 0.48 ) }
    dend_10 { pt3dadd( 30.6652, -29.9342, -6.68854, 0.48 ) }
    dend_10 { pt3dadd( 30.817, -30.9936, -6.63354, 0.96 ) }
    dend_10 { pt3dadd( 30.9314, -31.9808, -6.55923, 0.96 ) }
    dend_10 { pt3dadd( 31.0155, -32.7291, -6.50107, 0.6 ) }
    dend_10 { pt3dadd( 31.1023, -33.4642, -6.45053, 0.48 ) }
    dend_10 { pt3dadd( 31.1773, -34.0878, -6.40953, 0.6 ) }
    dend_10 { pt3dadd( 31.3113, -35.1321, -6.32792, 0.84 ) }
    dend_10 { pt3dadd( 31.4528, -36.126, -6.24989, 0.6 ) }
    dend_10 { pt3dadd( 31.5909, -36.9879, -6.17536, 0.48 ) }
    dend_10 { pt3dadd( 31.6957, -37.6083, -6.12563, 0.48 ) }
    dend_10 { pt3dadd( 31.8524, -38.4617, -6.06461, 0.6 ) }
    dend_10 { pt3dadd( 32.0371, -39.3008, -6.02276, 0.96 ) }
    dend_10 { pt3dadd( 32.2893, -40.295, -6.01852, 1.08 ) }
    dend_10 { pt3dadd( 32.522, -41.1517, -6.0278, 0.84 ) }
    dend_10 { pt3dadd( 32.719, -41.8957, -6.03898, 0.6 ) }
    dend_10 { pt3dadd( 32.8836, -42.5011, -6.05997, 0.48 ) }
    dend_10 { pt3dadd( 33.1392, -43.4102, -6.11945, 0.6 ) }
    dend_10 { pt3dadd( 33.3949, -44.3469, -6.20771, 0.84 ) }
    dend_10 { pt3dadd( 33.6241, -45.2002, -6.29165, 0.96 ) }
    dend_10 { pt3dadd( 33.8413, -46.0372, -6.37072, 1.08 ) }
    dend_10 { pt3dadd( 34.0116, -46.7471, -6.43082, 0.72 ) }
    dend_10 { pt3dadd( 34.1529, -47.4367, -6.48341, 0.48 ) }
    dend_10 { pt3dadd( 34.2884, -48.1882, -6.52988, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 34.3709, -48.6736, -6.54887, 0.48 ) }
    dend_10 { pt3dadd( 34.4884, -49.4296, -6.57461, 0.84 ) }
    dend_10 { pt3dadd( 34.5368, -49.7934, -6.58387, 0.96 ) }
    dend_10 { pt3dadd( 34.6132, -50.5451, -6.59406, 0.96 ) }
    dend_10 { pt3dadd( 34.6706, -51.1743, -6.58504, 0.6 ) }
    dend_10 { pt3dadd( 34.708, -51.5707, -6.57692, 0.48 ) }
    dend_10 { pt3dadd( 34.7896, -52.438, -6.57141, 0.48 ) }
    dend_10 { pt3dadd( 34.8507, -53.064, -6.54285, 0.6 ) }
    dend_10 { pt3dadd( 34.9427, -53.9365, -6.47631, 0.84 ) }
    dend_10 { pt3dadd( 35.0345, -54.8468, -6.38499, 0.72 ) }
    dend_10 { pt3dadd( 35.1108, -55.5966, -6.29766, 0.48 ) }
    dend_10 { pt3dadd( 35.2194, -56.6244, -6.16898, 0.6 ) }
    dend_10 { pt3dadd( 35.3393, -57.6002, -6.04374, 0.48 ) }
    dend_10 { pt3dadd( 35.4516, -58.3512, -5.95044, 0.72 ) }
    dend_10 { pt3dadd( 35.5831, -59.0894, -5.86701, 1.08 ) }
    dend_10 { pt3dadd( 35.7186, -59.7497, -5.80633, 0.6 ) }
    dend_10 { pt3dadd( 35.8959, -60.5076, -5.74916, 0.6 ) }
    dend_10 { pt3dadd( 36.1273, -61.3785, -5.67848, 0.6 ) }
    dend_10 { pt3dadd( 36.2927, -61.983, -5.64431, 0.6 ) }
    dend_10 { pt3dadd( 36.4752, -62.6318, -5.59359, 0.84 ) }
    dend_10 { pt3dadd( 36.6417, -63.2363, -5.53655, 0.84 ) }
    dend_10 { pt3dadd( 36.8209, -64.0061, -5.45634, 0.84 ) }
    dend_10 { pt3dadd( 36.9859, -64.8768, -5.39015, 0.48 ) }
    dend_10 { pt3dadd( 37.0586, -65.3744, -5.36568, 0.84 ) }
    dend_10 { pt3dadd( 37.117, -65.9907, -5.35341, 1.2 ) }
    dend_10 { pt3dadd( 37.159, -66.7454, -5.36233, 1.44 ) }
    dend_10 { pt3dadd( 37.1878, -67.4977, -5.42815, 0.84 ) }
    dend_10 { pt3dadd( 37.1985, -68.3402, -5.60023, 0.48 ) }
    dend_10 { pt3dadd( 37.1943, -68.6095, -5.67906, 0.72 ) }
    dend_10 { pt3dadd( 37.1826, -69.0868, -5.84799, 0.84 ) }
    dend_10 { pt3dadd( 37.1723, -69.5531, -6.02972, 0.84 ) }
    dend_10 { pt3dadd( 37.1576, -70.3481, -6.36834, 0.6 ) }
    dend_10 { pt3dadd( 37.1449, -71.3328, -6.77482, 0.48 ) }
    dend_10 { pt3dadd( 37.1331, -72.1622, -7.12482, 0.48 ) }
    dend_10 { pt3dadd( 37.1289, -72.7001, -7.35294, 0.6 ) }
    dend_10 { pt3dadd( 37.1342, -73.2794, -7.59401, 0.72 ) }
    dend_10 { pt3dadd( 37.1561, -73.9935, -7.86488, 0.72 ) }
    dend_10 { pt3dadd( 37.2128, -74.9294, -8.18865, 0.84 ) }
    dend_10 { pt3dadd( 37.3378, -76.0386, -8.544, 0.84 ) }
    dend_10 { pt3dadd( 37.4423, -76.7559, -8.7462, 0.84 ) }
    dend_10 { pt3dadd( 37.5237, -77.2593, -8.86155, 0.6 ) }
    dend_10 { pt3dadd( 37.6795, -78.1372, -9.02893, 0.48 ) }
    dend_10 { pt3dadd( 37.8394, -78.9611, -9.14908, 0.48 ) }
    dend_10 { pt3dadd( 38.0237, -79.8521, -9.24477, 0.48 ) }
    dend_10 { pt3dadd( 38.1915, -80.6678, -9.28994, 0.48 ) }
    dend_10 { pt3dadd( 38.2908, -81.1761, -9.31379, 0.48 ) }
    dend_10 { pt3dadd( 38.3805, -81.687, -9.30896, 0.6 ) }
    dend_10 { pt3dadd( 38.5435, -82.7182, -9.24439, 0.6 ) }
    dend_10 { pt3dadd( 38.6364, -83.3425, -9.17152, 0.84 ) }
    dend_10 { pt3dadd( 38.6825, -83.7135, -9.12058, 1.08 ) }
    dend_10 { pt3dadd( 38.7684, -84.3478, -9.07492, 1.08 ) }
    dend_10 { pt3dadd( 38.9294, -85.3605, -9.09343, 0.6 ) }
    dend_10 { pt3dadd( 39.0233, -85.7255, -9.21343, 0.6 ) }
    dend_10 { pt3dadd( 39.1522, -85.9934, -9.46297, 0.72 ) }
    dend_10 { pt3dadd( 39.3098, -86.2187, -9.80434, 0.84 ) }
    dend_10 { pt3dadd( 39.8481, -86.8193, -10.903, 0.84 ) }
    dend_10 { pt3dadd( 40.3259, -87.2092, -11.798, 1.08 ) }
    dend_10 { pt3dadd( 40.9724, -87.5939, -12.8934, 0.72 ) }
    dend_10 { pt3dadd( 41.2099, -87.6992, -13.2409, 0.72 ) }
    dend_10 { pt3dadd( 41.7788, -87.9127, -13.9448, 0.6 ) }
    dend_10 { pt3dadd( 42.1473, -88.0508, -14.3121, 0.6 ) }
    dend_10 { pt3dadd( 42.681, -88.294, -14.7161, 0.6 ) }
    dend_10 { pt3dadd( 43.0877, -88.5433, -14.9641, 0.6 ) }
    dend_10 { pt3dadd( 43.6556, -88.9888, -15.2586, 0.6 ) }
    dend_10 { pt3dadd( 44.0385, -89.4007, -15.5025, 1.08 ) }
    dend_10 { pt3dadd( 44.3801, -89.9182, -15.7533, 1.08 ) }
    dend_10 { pt3dadd( 44.7048, -90.5324, -16.0693, 0.6 ) }
    dend_10 { pt3dadd( 44.9421, -91.0195, -16.3668, 0.6 ) }
    dend_10 { pt3dadd( 45.1043, -91.306, -16.5861, 0.6 ) }
    dend_10 { pt3dadd( 45.5482, -91.8861, -17.2063, 0.6 ) }
    dend_10 { pt3dadd( 45.7774, -92.1092, -17.5056, 0.6 ) }
    dend_10 { pt3dadd( 46.2891, -92.5013, -18.0999, 0.84 ) }
    dend_10 { pt3dadd( 46.9719, -92.9254, -18.7795, 0.84 ) }
    dend_10 { pt3dadd( 47.721, -93.3321, -19.4442, 0.96 ) }
    dend_10 { pt3dadd( 48.579, -93.7564, -20.1335, 0.84 ) }
    dend_10 { pt3dadd( 49.0378, -93.98, -20.4561, 0.6 ) }
    dend_10 { pt3dadd( 49.5024, -94.2329, -20.7497, 0.72 ) }
    dend_10 { pt3dadd( 49.8898, -94.4816, -20.9582, 0.72 ) }
    dend_10 { pt3dadd( 50.444, -94.9096, -21.1948, 0.48 ) }
    dend_10 { pt3dadd( 50.8592, -95.291, -21.3516, 0.48 ) }
    dend_10 { pt3dadd( 51.3262, -95.7832, -21.5032, 0.48 ) }
    dend_10 { pt3dadd( 51.8415, -96.3902, -21.6875, 0.48 ) }
    dend_10 { pt3dadd( 52.3897, -97.1237, -21.8924, 0.36 ) }
    dend_10 { pt3dadd( 52.8793, -97.8468, -22.0661, 0.36 ) }
    dend_10 { pt3dadd( 53.2008, -98.3426, -22.1666, 0.6 ) }
    dend_10 { pt3dadd( 53.709, -99.1455, -22.312, 0.6 ) }
    dend_10 { pt3dadd( 54.0016, -99.6116, -22.391, 0.48 ) }
    dend_10 { pt3dadd( 54.5024, -100.398, -22.5002, 0.48 ) }
    dend_10 { pt3dadd( 55.03, -101.207, -22.5794, 0.48 ) }
    dend_10 { pt3dadd( 55.6303, -102.089, -22.6493, 0.48 ) }
    dend_10 { pt3dadd( 55.9876, -102.594, -22.6764, 0.6 ) }
    dend_10 { pt3dadd( 56.3708, -103.128, -22.6955, 0.6 ) }
    dend_10 { pt3dadd( 56.8426, -103.784, -22.7028, 0.84 ) }
    dend_10 { pt3dadd( 57.1898, -104.298, -22.7036, 0.48 ) }
    dend_10 { pt3dadd( 57.5509, -104.892, -22.701, 0.48 ) }
    dend_10 { pt3dadd( 57.7604, -105.29, -22.697, 0.48 ) }
    dend_10 { pt3dadd( 58.0615, -105.879, -22.7215, 0.72 ) }
    dend_10 { pt3dadd( 58.4236, -106.576, -22.7788, 0.84 ) }
    dend_10 { pt3dadd( 58.9475, -107.617, -22.9305, 0.48 ) }
    dend_10 { pt3dadd( 59.2446, -108.208, -23.0408, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_10 { pt3dadd( 59.8196, -109.331, -23.3204, 0.48 ) }
    dend_10 { pt3dadd( 60.28, -110.184, -23.5745, 0.6 ) }
    dend_10 { pt3dadd( 60.5446, -110.639, -23.7337, 0.6 ) }
    dend_10 { pt3dadd( 60.9847, -111.314, -24.0193, 0.48 ) }
    dend_10 { pt3dadd( 61.4126, -111.903, -24.3022, 0.48 ) }
    dend_10 { pt3dadd( 61.8669, -112.498, -24.5945, 0.84 ) }
    dend_10 { pt3dadd( 62.226, -112.954, -24.8019, 0.84 ) }
    dend_10 { pt3dadd( 62.426, -113.225, -24.8941, 0.84 ) }
    dend_10 { pt3dadd( 62.895, -113.9, -25.0991, 0.6 ) }
    dend_10 { pt3dadd( 63.2284, -114.407, -25.2219, 0.48 ) }
    dend_10 { pt3dadd( 63.5012, -114.871, -25.3175, 0.48 ) }
    dend_10 { pt3dadd( 63.8818, -115.557, -25.4528, 0.48 ) }
    dend_10 { pt3dadd( 64.1831, -116.137, -25.5736, 0.48 ) }
    dend_10 { pt3dadd( 64.5304, -116.812, -25.7049, 0.36 ) }
    dend_10 { pt3dadd( 64.8748, -117.468, -25.8028, 0.36 ) }
    dend_10 { pt3dadd( 65.1262, -117.913, -25.8433, 0.6 ) }
    dend_10 { pt3dadd( 65.5613, -118.652, -25.8768, 0.6 ) }
    dend_10 { pt3dadd( 65.9255, -119.269, -25.8779, 0.6 ) }
    dend_10 { pt3dadd( 66.6057, -120.406, -25.7902, 0.6 ) }
    dend_10 { pt3dadd( 67.2649, -121.477, -25.6329, 0.6 ) }
    dend_10 { pt3dadd( 67.8522, -122.424, -25.4587, 0.36 ) }
    dend_10 { pt3dadd( 68.0698, -122.787, -25.3814, 0.36 ) }
    dend_10 { pt3dadd( 68.5412, -123.665, -25.1818, 0.36 ) }
    dend_10 { pt3dadd( 69.0074, -124.649, -24.9767, 0.84 ) }
    dend_10 { pt3dadd( 69.3422, -125.454, -24.8346, 0.6 ) }
    dend_10 { pt3dadd( 69.701, -126.38, -24.7214, 0.6 ) }
    dend_10 { pt3dadd( 69.9808, -127.124, -24.6482, 0.36 ) }
    dend_10 { pt3dadd( 70.385, -128.162, -24.5522, 0.36 ) }
    dend_10 { pt3dadd( 70.6579, -128.848, -24.4978, 0.36 ) }
    dend_10 { pt3dadd( 70.9934, -129.684, -24.4586, 0.48 ) }
    dend_10 { pt3dadd( 71.5775, -131.127, -24.3946, 0.48 ) }
    dend_10 { pt3dadd( 71.8755, -131.87, -24.3638, 0.48 ) }
    dend_10 { pt3dadd( 72.1646, -132.618, -24.3588, 0.72 ) }
    dend_10 { pt3dadd( 72.3444, -133.139, -24.3698, 0.72 ) }
    dend_10 { pt3dadd( 72.5176, -133.884, -24.4292, 0.48 ) }
    dend_10 { pt3dadd( 72.5892, -134.795, -24.6773, 0.48 ) }
    dend_10 { pt3dadd( 72.5732, -135.362, -24.9382, 0.48 ) }
    dend_10 { pt3dadd( 72.5157, -136.189, -25.4181, 0.6 ) }
    dend_10 { pt3dadd( 72.4558, -136.837, -25.8773, 0.6 ) }
    dend_10 { pt3dadd( 72.3901, -137.6, -26.4931, 0.48 ) }
    dend_10 { pt3dadd( 72.2926, -139.106, -27.8512, 0.48 ) }
    dend_10 { pt3dadd( 72.2817, -139.609, -28.3323, 0.48 ) }
    dend_10 { pt3dadd( 72.2961, -139.801, -28.5161, 0.48 ) }
    dend_10 { pt3dadd( 72.4483, -140.686, -29.3161, 0.84 ) }
    dend_10 { pt3dadd( 72.6133, -141.355, -29.8738, 0.96 ) }
    dend_10 { pt3dadd( 72.8596, -142.208, -30.5111, 0.96 ) }
    dend_10 { pt3dadd( 72.9353, -142.51, -30.6955, 0.96 ) }
    dend_10 { pt3dadd( 73.1017, -143.374, -31.2139, 0.48 ) }
    dend_10 { pt3dadd( 73.1929, -143.996, -31.5649, 0.84 ) }
    dend_10 { pt3dadd( 73.2846, -144.699, -31.91, 0.48 ) }
    dend_10 { pt3dadd( 73.3672, -145.373, -32.2146, 0.48 ) }
    dend_10 { pt3dadd( 73.4396, -145.983, -32.4674, 0.6 ) }
    dend_10 { pt3dadd( 73.5794, -147.122, -32.9464, 0.6 ) }
    dend_10 { pt3dadd( 73.6908, -148.036, -33.3141, 0.36 ) }
    dend_10 { pt3dadd( 73.7865, -148.698, -33.5809, 0.36 ) }
    dend_10 { pt3dadd( 73.8571, -149.061, -33.7195, 0.6 ) }
    dend_10 { pt3dadd( 73.9418, -149.385, -33.8338, 0.6 ) }
    dend_10 { pt3dadd( 74.1906, -150.071, -34.0707, 0.24 ) }
    dend_10 { pt3dadd( 74.3643, -150.467, -34.1837, 0.24 ) }
    dend_10 { pt3dadd( 74.4804, -150.711, -34.25, 0.24 ) }
    dend_10 { pt3dadd( 74.6407, -151.059, -34.3428, 0.48 ) }
    dend_10 { pt3dadd( 74.9299, -151.669, -34.4884, 0.36 ) }
    dend_10 { pt3dadd( 75.1431, -152.101, -34.57, 0.36 ) }
    dend_10 { pt3dadd( 75.3661, -152.543, -34.6264, 0.36 ) }
    dend_10 { pt3dadd( 75.6421, -153.096, -34.7078, 0.6 ) }
    dend_10 { pt3dadd( 75.9109, -153.644, -34.7869, 0.6 ) }
    dend_10 { pt3dadd( 76.1495, -154.111, -34.8493, 0.6 ) }
    dend_10 { pt3dadd( 76.5184, -154.805, -34.9249, 0.84 ) }
    dend_10 { pt3dadd( 76.8871, -155.501, -35.0013, 0.84 ) }
    dend_10 { pt3dadd( 77.2499, -156.225, -35.0766, 0.24 ) }
    dend_10 { pt3dadd( 77.4611, -156.692, -35.1214, 0.24 ) }
    dend_10 { pt3dadd( 77.6087, -157.012, -35.1479, 0.48 ) }
    dend_10 { pt3dadd( 77.9251, -157.655, -35.1918, 0.48 ) }
    dend_10 { pt3dadd( 78.3124, -158.344, -35.2243, 0.48 ) }
    dend_10 { pt3dadd( 78.7367, -158.992, -35.2365, 0.24 ) }
    dend_10 { pt3dadd( 78.9656, -159.31, -35.2314, 0.24 ) }
    dend_10 { pt3dadd( 79.602, -160.156, -35.2198, 0.24 ) }
    dend_10 { pt3dadd( 79.8387, -160.467, -35.2166, 0.6 ) }
    dend_10 { pt3dadd( 80.2847, -161.033, -35.2132, 0.6 ) }
    dend_10 { pt3dadd( 80.6661, -161.52, -35.2132, 0.6 ) }
    dend_10 { pt3dadd( 80.8976, -161.823, -35.2225, 0.6 ) }
    dend_10 { pt3dadd( 81.3918, -162.489, -35.2582, 0.36 ) }
    dend_10 { pt3dadd( 81.7205, -162.933, -35.2907, 0.36 ) }
    dend_10 { pt3dadd( 81.9345, -163.199, -35.3133, 0.72 ) }
    dend_10 { pt3dadd( 82.5617, -163.893, -35.3789, 0.72 ) }
    dend_10 { pt3dadd( 83.1176, -164.438, -35.4326, 0.72 ) }
    dend_10 { pt3dadd( 83.5229, -164.805, -35.4676, 0.48 ) }
    dend_10 { pt3dadd( 84.1193, -165.312, -35.5138, 0.48 ) }
    dend_10 { pt3dadd( 84.8801, -165.937, -35.5641, 0.48 ) }
    dend_10 { pt3dadd( 85.4282, -166.385, -35.5863, 0.36 ) }
    dend_10 { pt3dadd( 85.966, -166.82, -35.5914, 0.36 ) }
    dend_10 { pt3dadd( 86.4972, -167.283, -35.5762, 0.36 ) }
    dend_10 { pt3dadd( 86.7479, -167.524, -35.5667, 0.6 ) }
    dend_10 { pt3dadd( 86.9866, -167.777, -35.5554, 0.6 ) }
    dend_10 { pt3dadd( 87.4536, -168.317, -35.5295, 0.72 ) }
    dend_10 { pt3dadd( 87.7885, -168.709, -35.5105, 0.48 ) }
    dend_10 { pt3dadd( 88.045, -169.002, -35.4967, 0.48 ) }
    dend_10 { pt3dadd( 88.3485, -169.326, -35.4922, 0.6 ) }
    dend_10 { pt3dadd( 88.8333, -169.825, -35.5001, 0.6 ) }
    dend_10 { pt3dadd( 89.0961, -170.098, -35.5117, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 89.468, -170.503, -35.538, 0.48 ) }
    dend_10 { pt3dadd( 89.6976, -170.765, -35.5606, 0.48 ) }
    dend_10 { pt3dadd( 90.2981, -171.466, -35.6296, 0.36 ) }
    dend_10 { pt3dadd( 90.6257, -171.863, -35.6709, 0.36 ) }
    dend_10 { pt3dadd( 91.0354, -172.385, -35.7232, 0.6 ) }
    dend_10 { pt3dadd( 91.532, -173.035, -35.7832, 0.6 ) }
    dend_10 { pt3dadd( 91.9063, -173.573, -35.8254, 0.36 ) }
    dend_10 { pt3dadd( 92.1886, -174.017, -35.8548, 0.36 ) }
    dend_10 { pt3dadd( 92.4495, -174.465, -35.8946, 0.36 ) }
    dend_10 { pt3dadd( 92.9187, -175.348, -35.9912, 0.36 ) }
    dend_10 { pt3dadd( 93.1444, -175.815, -36.0471, 0.72 ) }
    dend_10 { pt3dadd( 93.4384, -176.508, -36.1502, 0.72 ) }
    dend_10 { pt3dadd( 93.7091, -177.236, -36.2669, 0.84 ) }
    dend_10 { pt3dadd( 94.1208, -178.466, -36.476, 0.48 ) }
    dend_10 { pt3dadd( 94.4137, -179.415, -36.6627, 0.36 ) }
    dend_10 { pt3dadd( 94.5807, -179.994, -36.7871, 0.36 ) }
    dend_10 { pt3dadd( 94.829, -180.863, -36.9761, 0.72 ) }
    dend_10 { pt3dadd( 95.0496, -181.598, -37.1283, 0.72 ) }
    dend_10 { pt3dadd( 95.3321, -182.485, -37.2873, 0.72 ) }
    dend_10 { pt3dadd( 95.6087, -183.277, -37.3978, 0.6 ) }
    dend_10 { pt3dadd( 95.8541, -183.861, -37.4678, 0.12 ) }
    dend_10 { pt3dadd( 96.1616, -184.508, -37.5245, 0.12 ) }
    dend_10 { pt3dadd( 96.3589, -184.882, -37.5387, 0.48 ) }
    dend_10 { pt3dadd( 96.6774, -185.411, -37.5481, 0.6 ) }
    dend_10 { pt3dadd( 97.0184, -185.934, -37.5442, 0.48 ) }
    dend_10 { pt3dadd( 97.4614, -186.583, -37.5225, 0.36 ) }
    dend_10 { pt3dadd( 97.6817, -186.907, -37.515, 0.36 ) }
    dend_10 { pt3dadd( 98.1775, -187.648, -37.5072, 0.36 ) }
    dend_10 { pt3dadd( 98.6811, -188.382, -37.4271, 0.36 ) }
    dend_10 { pt3dadd( 99.0739, -188.906, -37.304, 0.36 ) }
    dend_10 { pt3dadd( 99.516, -189.425, -37.1099, 0.36 ) }
    dend_10 { pt3dadd( 99.8319, -189.76, -36.9405, 0.72 ) }
    dend_10 { pt3dadd( 100.276, -190.207, -36.6712, 1.08 ) }
    dend_10 { pt3dadd( 101.432, -191.328, -35.8976, 0.96 ) }
    dend_10 { pt3dadd( 101.884, -191.76, -35.6065, 0.36 ) }
    dend_10 { pt3dadd( 102.143, -192.006, -35.4585, 0.36 ) }
    dend_10 { pt3dadd( 102.591, -192.45, -35.2645, 0.36 ) }
    dend_10 { pt3dadd( 103.006, -192.898, -35.1698, 0.36 ) }
    dend_10 { pt3dadd( 103.399, -193.373, -35.1848, 0.36 ) }
    dend_10 { pt3dadd( 103.865, -193.929, -35.296, 0.48 ) }
    dend_10 { pt3dadd( 104.189, -194.3, -35.3745, 0.48 ) }
    dend_10 { pt3dadd( 104.556, -194.67, -35.4514, 0.36 ) }
    dend_10 { pt3dadd( 104.948, -195.008, -35.4945, 0.36 ) }
    dend_10 { pt3dadd( 105.598, -195.507, -35.5138, 0.36 ) }
    dend_10 { pt3dadd( 106.757, -196.335, -35.4605, 0.36 ) }
    dend_10 { pt3dadd( 107.265, -196.674, -35.4016, 0.36 ) }
    dend_10 { pt3dadd( 107.771, -197.005, -35.3288, 0.72 ) }
    dend_10 { pt3dadd( 108.54, -197.525, -35.1944, 0.6 ) }
    dend_10 { pt3dadd( 108.807, -197.727, -35.144, 0.48 ) }
    dend_10 { pt3dadd( 109.268, -198.117, -35.052, 0.48 ) }
    dend_10 { pt3dadd( 109.996, -198.772, -34.919, 0.48 ) }
    dend_10 { pt3dadd( 110.515, -199.24, -34.8192, 0.6 ) }
    dend_10 { pt3dadd( 110.838, -199.536, -34.7647, 0.96 ) }
    dend_10 { pt3dadd( 111.279, -199.944, -34.7097, 1.08 ) }
    dend_10 { pt3dadd( 111.65, -200.282, -34.6544, 0.84 ) }
    dend_10 { pt3dadd( 112.3, -200.884, -34.5424, 0.48 ) }
    dend_10 { pt3dadd( 112.815, -201.347, -34.4451, 0.24 ) }
    dend_10 { pt3dadd( 113.487, -201.887, -34.3235, 0.36 ) }
    dend_10 { pt3dadd( 113.88, -202.178, -34.2592, 0.36 ) }
    dend_10 { pt3dadd( 114.19, -202.403, -34.2142, 0.6 ) }
    dend_10 { pt3dadd( 114.608, -202.753, -34.1624, 0.6 ) }
    dend_10 { pt3dadd( 114.873, -203.008, -34.1422, 0.36 ) }
    dend_10 { pt3dadd( 115.31, -203.457, -34.1422, 0.24 ) }
    dend_10 { pt3dadd( 115.612, -203.783, -34.1422, 0.24 ) }
    dend_10 { pt3dadd( 115.85, -204.052, -34.1542, 0.36 ) }
    dend_10 { pt3dadd( 116.154, -204.441, -34.1819, 0.36 ) }
    dend_10 { pt3dadd( 116.458, -204.868, -34.2198, 0.48 ) }
    dend_10 { pt3dadd( 116.821, -205.458, -34.2761, 0.48 ) }
    dend_10 { pt3dadd( 117.195, -206.154, -34.3823, 0.72 ) }
    dend_10 { pt3dadd( 117.454, -206.661, -34.4796, 0.72 ) }
    dend_10 { pt3dadd( 117.617, -206.99, -34.5493, 0.72 ) }
    dend_10 { pt3dadd( 117.875, -207.545, -34.6697, 0.6 ) }
    dend_10 { pt3dadd( 118.06, -207.985, -34.7764, 0.6 ) }
    dend_10 { pt3dadd( 118.36, -208.747, -34.9694, 0.48 ) }
    dend_10 { pt3dadd( 118.618, -209.408, -35.1335, 0.36 ) }
    dend_10 { pt3dadd( 118.907, -210.114, -35.2932, 0.36 ) }
    dend_10 { pt3dadd( 119.162, -210.719, -35.4369, 0.36 ) }
    dend_10 { pt3dadd( 119.422, -211.36, -35.5878, 0.48 ) }
    dend_10 { pt3dadd( 119.576, -211.775, -35.6745, 0.48 ) }
    dend_10 { pt3dadd( 119.702, -212.204, -35.7415, 0.6 ) }
    dend_10 { pt3dadd( 119.802, -212.638, -35.8056, 0.6 ) }
    dend_10 { pt3dadd( 119.892, -213.1, -35.886, 0.6 ) }
    dend_10 { pt3dadd( 119.976, -213.603, -35.9748, 0.6 ) }
    dend_10 { pt3dadd( 120.074, -214.345, -36.0887, 0.48 ) }
    dend_10 { pt3dadd( 120.15, -215.094, -36.2232, 0.48 ) }
    dend_10 { pt3dadd( 120.198, -215.708, -36.3389, 0.6 ) }
    dend_10 { pt3dadd( 120.264, -216.508, -36.5049, 0.72 ) }
    dend_10 { pt3dadd( 120.33, -217.118, -36.6504, 0.72 ) }
    dend_10 { pt3dadd( 120.483, -218.177, -36.9734, 0.72 ) }
    dend_10 { pt3dadd( 120.623, -218.899, -37.2134, 1.08 ) }
    dend_10 { pt3dadd( 120.754, -219.479, -37.4073, 1.08 ) }
    dend_10 { pt3dadd( 120.926, -220.187, -37.634, 0.72 ) }
    dend_10 { pt3dadd( 121.191, -221.156, -37.9068, 0.48 ) }
    dend_10 { pt3dadd( 121.562, -222.355, -38.2432, 0.96 ) }
    dend_10 { pt3dadd( 121.989, -223.626, -38.6042, 0.36 ) }
    dend_10 { pt3dadd( 122.155, -224.138, -38.7373, 0.36 ) }
    dend_10 { pt3dadd( 122.304, -224.664, -38.8589, 0.72 ) }
    dend_10 { pt3dadd( 122.6, -225.909, -39.089, 0.84 ) }
    dend_10 { pt3dadd( 122.75, -226.694, -39.2009, 0.84 ) }
    dend_10 { pt3dadd( 122.839, -227.317, -39.2714, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_10 { pt3dadd( 122.923, -228.224, -39.3736, 0.48 ) }
    dend_10 { pt3dadd( 123.004, -229.458, -39.5371, 0.48 ) }
    dend_10 { pt3dadd( 123.034, -230.355, -39.6632, 0.48 ) }
    dend_10 { pt3dadd( 123.041, -230.978, -39.7501, 0.48 ) }
    dend_10 { pt3dadd( 123.039, -231.481, -39.8286, 0.72 ) }
    dend_10 { pt3dadd( 123.037, -232.112, -39.9453, 0.72 ) }
    dend_10 { pt3dadd( 123.037, -233.093, -40.1794, 0.36 ) }
    dend_10 { pt3dadd( 123.027, -233.431, -40.2874, 0.36 ) }
    dend_10 { pt3dadd( 123.005, -233.916, -40.4616, 0.36 ) }
    dend_10 { pt3dadd( 122.977, -234.686, -40.7391, 0.24 ) }
    dend_10 { pt3dadd( 122.933, -235.753, -41.102, 0.24 ) }
    dend_10 { pt3dadd( 122.926, -236.012, -41.1814, 0.72 ) }
    dend_10 { pt3dadd( 122.919, -236.729, -41.3499, 0.36 ) }
    dend_10 { pt3dadd( 122.937, -237.469, -41.495, 0.36 ) }
    dend_10 { pt3dadd( 122.966, -237.985, -41.5845, 0.36 ) }
    dend_10 { pt3dadd( 123.027, -238.658, -41.6716, 0.48 ) }
    dend_10 { pt3dadd( 123.06, -238.926, -41.7056, 0.12 ) }
    dend_10 { pt3dadd( 123.213, -239.802, -41.7323, 0.12 ) }
    dend_10 { pt3dadd( 123.331, -240.295, -41.7011, 0.12 ) }
    dend_10 { pt3dadd( 123.473, -240.781, -41.6476, 0.84 ) }
    dend_10 { pt3dadd( 123.681, -241.366, -41.5709, 0.96 ) }
    dend_10 { pt3dadd( 123.933, -241.975, -41.4929, 0.96 ) }
    dend_10 { pt3dadd( 124.473, -243.203, -41.2575, 0.24 ) }
    dend_10 { pt3dadd( 124.695, -243.692, -41.1443, 0.48 ) }
    dend_10 { pt3dadd( 125.236, -244.827, -40.8562, 0.48 ) }
    dend_10 { pt3dadd( 125.866, -246.08, -40.5189, 0.48 ) }
    dend_10 { pt3dadd( 126.283, -246.878, -40.3151, 0.48 ) }
    dend_10 { pt3dadd( 126.974, -248.179, -40.0239, 0.48 ) }
    dend_10 { pt3dadd( 127.326, -248.84, -39.9098, 0.48 ) }
    dend_10 { pt3dadd( 127.652, -249.441, -39.7625, 0.84 ) }
    dend_10 { pt3dadd( 127.855, -249.814, -39.6387, 0.84 ) }
    dend_10 { pt3dadd( 128.096, -250.235, -39.462, 0.12 ) }
    dend_10 { pt3dadd( 128.437, -250.8, -39.195, 0.12 ) }
    dend_10 { pt3dadd( 128.5, -250.892, -39.1422, 0.36 ) }
    dend_10 { pt3dadd( 129.15, -251.819, -38.3803, 0.12 ) }
    dend_10 { pt3dadd( 129.301, -252.058, -38.146, 0.12 ) }
    dend_10 { pt3dadd( 129.587, -252.535, -37.6517, 0.12 ) }
    dend_10 { pt3dadd( 129.587, -252.535, -37.6517, 0.36 ) }
    dend_10 { pt3dadd( 129.956, -253.18, -36.8253, 0.12 ) }
    dend_10 { pt3dadd( 130.084, -253.417, -36.561, 0.12 ) }
    dend_10 { pt3dadd( 130.198, -253.667, -36.3166, 0.72 ) }
    dend_10 { pt3dadd( 130.344, -254.063, -35.9643, 0.84 ) }
    dend_10 { pt3dadd( 130.764, -255.525, -34.8301, 0.6 ) }
    dend_10 { pt3dadd( 130.86, -255.883, -34.582, 0.12 ) }
    dend_10 { pt3dadd( 131.02, -256.449, -34.2547, 0.12 ) }
    dend_10 { pt3dadd( 131.239, -257.096, -33.8906, 0.12 ) }
    dend_10 { pt3dadd( 131.482, -257.724, -33.5713, 0.12 ) }
    dend_10 { pt3dadd( 131.667, -258.158, -33.3997, 0.12 ) }
    dend_10 { pt3dadd( 131.667, -258.158, -33.3997, 0.6 ) }
    dend_10 { pt3dadd( 132.0, -258.857, -33.2065, 0.6 ) }
    dend_10 { pt3dadd( 132.368, -259.618, -33.0065, 0.48 ) }
    dend_10 { pt3dadd( 132.64, -260.154, -32.8808, 0.48 ) }
    dend_10 { pt3dadd( 133.008, -260.885, -32.712, 0.48 ) }
    dend_10 { pt3dadd( 133.316, -261.527, -32.5837, 0.24 ) }
    dend_10 { pt3dadd( 133.623, -262.213, -32.4744, 0.24 ) }
    dend_10 { pt3dadd( 133.771, -262.558, -32.3905, 0.6 ) }
    dend_10 { pt3dadd( 133.974, -263.026, -32.2531, 0.72 ) }
    dend_10 { pt3dadd( 134.246, -263.607, -32.0594, 0.72 ) }
    dend_10 { pt3dadd( 134.461, -264.023, -31.9143, 0.12 ) }
    dend_10 { pt3dadd( 134.73, -264.482, -31.7563, 0.12 ) }
    dend_10 { pt3dadd( 135.751, -266.046, -31.1772, 0.12 ) }
    dend_10 { pt3dadd( 136.059, -266.475, -31.0147, 0.96 ) }
    dend_10 { pt3dadd( 136.352, -266.859, -30.8801, 0.12 ) }
    dend_10 { pt3dadd( 136.798, -267.387, -30.7203, 0.12 ) }
    dend_10 { pt3dadd( 136.98, -267.587, -30.6691, 0.12 ) }
    dend_10 { pt3dadd( 137.23, -267.835, -30.6252, 0.6 ) }
    dend_10 { pt3dadd( 137.511, -268.101, -30.6034, 0.6 ) }
    dend_10 { pt3dadd( 137.955, -268.492, -30.5131, 0.48 ) }
    dend_10 { pt3dadd( 138.283, -268.769, -30.4145, 0.48 ) }
    dend_10 { pt3dadd( 138.789, -269.178, -30.2429, 0.72 ) }
    dend_10 { pt3dadd( 139.224, -269.518, -30.0937, 0.36 ) }
    dend_10 { pt3dadd( 139.694, -269.878, -29.933, 0.12 ) }
    dend_10 { pt3dadd( 140.234, -270.287, -29.7175, 0.12 ) }
    dend_10 { pt3dadd( 140.435, -270.44, -29.6286, 0.48 ) }
    dend_10 { pt3dadd( 140.762, -270.702, -29.4929, 0.6 ) }
    dend_10 { pt3dadd( 141.24, -271.121, -29.3197, 0.72 ) }
    dend_10 { pt3dadd( 141.481, -271.351, -29.2242, 0.72 ) }
    dend_10 { pt3dadd( 142.127, -271.987, -28.9432, 0.12 ) }
    dend_10 { pt3dadd( 142.282, -272.145, -28.8645, 0.12 ) }
    dend_10 { pt3dadd( 142.745, -272.613, -28.5868, 0.12 ) }
    dend_10 { pt3dadd( 142.982, -272.846, -28.4328, 0.12 ) }
    dend_10 { pt3dadd( 143.484, -273.336, -28.0745, 0.48 ) }
    dend_10 { pt3dadd( 143.721, -273.56, -27.9086, 0.48 ) }
    dend_10 { pt3dadd( 143.983, -273.789, -27.7492, 0.96 ) }
    dend_10 { pt3dadd( 144.621, -274.299, -27.3796, 0.48 ) }
    dend_10 { pt3dadd( 144.948, -274.533, -27.205, 0.48 ) }
    dend_10 { pt3dadd( 145.433, -274.847, -26.9869, 0.48 ) }
    dend_10 { pt3dadd( 145.779, -275.038, -26.8205, 0.48 ) }
    dend_10 { pt3dadd( 146.104, -275.168, -26.6138, 0.12 ) }
    dend_10 { pt3dadd( 146.201, -275.187, -26.5468, 0.12 ) }
    dend_10 { pt3dadd( 146.516, -275.202, -26.3344, 0.72 ) }
    dend_10 { pt3dadd( 146.831, -275.192, -26.1244, 0.72 ) }
    dend_10 { pt3dadd( 148.022, -275.127, -25.4141, 0.12 ) }
    dend_10 { pt3dadd( 148.639, -275.093, -25.0785, 0.12 ) }
    dend_10 { pt3dadd( 149.398, -275.069, -24.6998, 0.12 ) }
    dend_10 { pt3dadd( 149.64, -275.066, -24.5846, 0.12 ) }
    dend_10 { pt3dadd( 150.035, -275.06, -24.4044, 0.48 ) }
    dend_10 { pt3dadd( 150.685, -275.046, -24.1469, 0.48 ) }
    dend_10 { pt3dadd( 151.412, -275.027, -23.9262, 0.72 ) }
    dend_10 { pt3dadd( 151.915, -275.013, -23.7798, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_10 { pt3dadd( 153.024, -274.973, -23.42, 0.36 ) }
    dend_10 { pt3dadd( 153.719, -274.962, -23.1912, 0.12 ) }
    dend_10 { pt3dadd( 154.331, -274.972, -22.9846, 0.24 ) }
    dend_10 { pt3dadd( 154.901, -275.011, -22.8018, 0.24 ) }
    dend_10 { pt3dadd( 155.418, -275.089, -22.6781, 0.24 ) }
    dend_10 { pt3dadd( 155.88, -275.186, -22.6095, 0.72 ) }
    dend_10 { pt3dadd( 156.557, -275.373, -22.5984, 0.72 ) }
    dend_10 { pt3dadd( 157.087, -275.539, -22.6666, 0.72 ) }
    dend_10 { pt3dadd( 157.823, -275.774, -22.8322, 0.36 ) }
    dend_10 { pt3dadd( 158.526, -275.948, -23.052, 0.48 ) }
    dend_10 { pt3dadd( 158.984, -276.011, -23.23, 0.6 ) }
    dend_10 { pt3dadd( 159.629, -276.029, -23.526, 0.6 ) }
    dend_10 { pt3dadd( 160.593, -275.958, -24.0615, 0.12 ) }
    dend_10 { pt3dadd( 160.902, -275.914, -24.2554, 0.12 ) }
    dend_10 { pt3dadd( 161.437, -275.828, -24.6144, 0.12 ) }
    dend_10 { pt3dadd( 161.89, -275.771, -24.906, 0.48 ) }
    dend_10 { pt3dadd( 162.032, -275.769, -24.9995, 0.48 ) }
    dend_10 { pt3dadd( 162.656, -275.883, -25.3893, 0.12 ) }
    dend_10 { pt3dadd( 162.863, -275.98, -25.5334, 0.12 ) }
    dend_10 { pt3dadd( 163.257, -276.202, -25.8296, 0.12 ) }
    dend_10 { pt3dadd( 163.504, -276.36, -26.01, 0.48 ) }
    dend_10 { pt3dadd( 163.858, -276.556, -26.2714, 0.48 ) }
    dend_10 { pt3dadd( 164.232, -276.685, -26.5479, 0.12 ) }
    dend_10 { pt3dadd( 164.829, -276.76, -26.9688, 0.6 ) }
    dend_10 { pt3dadd( 165.362, -276.761, -27.3346, 0.72 ) }
    dend_10 { pt3dadd( 165.681, -276.732, -27.5384, 0.72 ) }
    dend_10 { pt3dadd( 166.31, -276.655, -27.9176, 0.72 ) }
    dend_10 { pt3dadd( 167.107, -276.55, -28.3387, 0.12 ) }
    dend_10 { pt3dadd( 167.416, -276.51, -28.4743, 0.12 ) }
    dend_10 { pt3dadd( 167.896, -276.456, -28.6575, 0.12 ) }
    dend_10 { pt3dadd( 168.249, -276.424, -28.784, 0.12 ) }
    dend_10 { pt3dadd( 168.714, -276.382, -28.9239, 0.6 ) }
    dend_10 { pt3dadd( 169.533, -276.32, -29.1032, 0.6 ) }
    dend_10 { pt3dadd( 170.168, -276.251, -29.2046, 0.72 ) }
    dend_10 { pt3dadd( 170.594, -276.187, -29.2623, 0.12 ) }
    dend_10 { pt3dadd( 171.078, -276.092, -29.3114, 0.12 ) }
    dend_10 { pt3dadd( 171.563, -275.998, -29.3439, 0.6 ) }
    dend_10 { pt3dadd( 172.052, -275.916, -29.3595, 0.6 ) }
    dend_10 { pt3dadd( 172.545, -275.877, -29.3681, 0.84 ) }
    dend_10 { pt3dadd( 173.509, -275.929, -29.3061, 0.84 ) }
    dend_10 { pt3dadd( 174.215, -276.059, -29.2091, 0.36 ) }
    dend_10 { pt3dadd( 174.792, -276.255, -29.072, 0.36 ) }
    dend_10 { pt3dadd( 175.17, -276.435, -28.9502, 0.36 ) }
    dend_10 { pt3dadd( 175.796, -276.812, -28.7073, 0.36 ) }
    dend_10 { pt3dadd( 176.736, -277.493, -28.3025, 0.72 ) }
    dend_10 { pt3dadd( 177.057, -277.759, -28.1595, 0.72 ) }
    dend_10 { pt3dadd( 177.741, -278.342, -27.8689, 0.36 ) }
    dend_10 { pt3dadd( 178.114, -278.65, -27.7307, 0.36 ) }
    dend_10 { pt3dadd( 178.539, -278.973, -27.6186, 0.36 ) }
    dend_10 { pt3dadd( 178.869, -279.205, -27.5763, 0.48 ) }
    dend_10 { pt3dadd( 179.257, -279.469, -27.5905, 0.24 ) }
    dend_10 { pt3dadd( 179.551, -279.686, -27.615, 0.24 ) }
    dend_10 { pt3dadd( 179.929, -280.019, -27.7062, 0.6 ) }
    dend_10 { pt3dadd( 180.405, -280.504, -27.8501, 0.6 ) }
    dend_10 { pt3dadd( 180.665, -280.781, -27.9335, 0.6 ) }
    dend_10 { pt3dadd( 181.195, -281.33, -28.0975, 0.96 ) }
    dend_10 { pt3dadd( 181.577, -281.706, -28.213, 0.96 ) }
    dend_10 { pt3dadd( 182.357, -282.38, -28.4899, 0.36 ) }
    dend_10 { pt3dadd( 182.704, -282.62, -28.6221, 0.36 ) }
    dend_10 { pt3dadd( 183.222, -282.894, -28.8169, 0.36 ) }
    dend_10 { pt3dadd( 183.603, -283.045, -28.9457, 0.36 ) }
    dend_10 { pt3dadd( 183.956, -283.149, -29.045, 0.72 ) }
    dend_10 { pt3dadd( 184.619, -283.301, -29.1811, 0.36 ) }
    dend_10 { pt3dadd( 185.142, -283.396, -29.2218, 0.36 ) }
    dend_10 { pt3dadd( 185.67, -283.501, -29.2361, 0.36 ) }
    dend_10 { pt3dadd( 186.153, -283.611, -29.2263, 0.36 ) }
    dend_10 { pt3dadd( 186.781, -283.765, -29.1884, 0.48 ) }
    dend_10 { pt3dadd( 187.375, -283.907, -29.1301, 0.48 ) }
    dend_10 { pt3dadd( 188.109, -284.07, -29.0437, 0.36 ) }
    dend_10 { pt3dadd( 188.634, -284.169, -28.9909, 0.36 ) }
    dend_10 { pt3dadd( 189.247, -284.266, -28.9427, 0.36 ) }
    dend_10 { pt3dadd( 189.841, -284.35, -28.9119, 0.36 ) }
    dend_10 { pt3dadd( 190.198, -284.396, -28.9059, 0.36 ) }
    dend_10 { pt3dadd( 190.763, -284.465, -28.9208, 0.24 ) }
    dend_10 { pt3dadd( 191.12, -284.505, -28.9476, 0.24 ) }
    dend_10 { pt3dadd( 191.597, -284.547, -28.9807, 0.36 ) }
    dend_10 { pt3dadd( 191.971, -284.576, -29.0141, 0.36 ) }
    dend_10 { pt3dadd( 192.462, -284.612, -29.0621, 0.12 ) }
    dend_10 { pt3dadd( 192.838, -284.655, -29.0976, 0.72 ) }
    dend_10 { pt3dadd( 193.428, -284.762, -29.1341, 1.2 ) }
    dend_10 { pt3dadd( 193.908, -284.887, -29.1572, 1.2 ) }
    dend_10 { pt3dadd( 194.886, -285.204, -29.2079, 0.36 ) }
    dend_10 { pt3dadd( 195.113, -285.285, -29.2197, 0.36 ) }
    dend_10 { pt3dadd( 195.909, -285.613, -29.2587, 0.36 ) }
    dend_10 { pt3dadd( 196.509, -285.915, -29.2848, 0.84 ) }
    dend_10 { pt3dadd( 197.102, -286.295, -29.3048, 0.48 ) }
    dend_10 { pt3dadd( 197.54, -286.628, -29.3131, 0.36 ) }
    dend_10 { pt3dadd( 198.002, -287.03, -29.2979, 0.24 ) }
    dend_10 { pt3dadd( 198.384, -287.383, -29.2794, 0.24 ) }
    dend_10 { pt3dadd( 198.856, -287.832, -29.2513, 0.24 ) }
    dend_10 { pt3dadd( 199.524, -288.486, -29.2295, 0.24 ) }
    dend_10 { pt3dadd( 199.831, -288.805, -29.2173, 0.6 ) }
    dend_10 { pt3dadd( 200.146, -289.138, -29.2026, 0.48 ) }
    dend_10 { pt3dadd( 200.336, -289.337, -29.1966, 0.36 ) }
    dend_10 { pt3dadd( 200.981, -289.942, -29.1972, 0.36 ) }
    dend_10 { pt3dadd( 201.399, -290.268, -29.2114, 0.12 ) }
    dend_10 { pt3dadd( 201.832, -290.532, -29.2404, 0.12 ) }
    dend_10 { pt3dadd( 202.31, -290.784, -29.2853, 0.12 ) }
    dend_10 { pt3dadd( 202.466, -290.856, -29.2931, 0.48 ) }
    dend_10 { pt3dadd( 202.724, -290.963, -29.2878, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_10 { pt3dadd( 203.085, -291.111, -29.253, 0.12 ) }
    dend_10 { pt3dadd( 203.746, -291.413, -29.1425, 0.72 ) }
    dend_10 { pt3dadd( 204.089, -291.568, -29.0759, 0.72 ) }
    dend_10 { pt3dadd( 204.842, -291.913, -28.9205, 0.24 ) }
    dend_10 { pt3dadd( 205.223, -292.1, -28.8216, 0.24 ) }
    dend_10 { pt3dadd( 205.537, -292.28, -28.7276, 0.24 ) }
    dend_10 { pt3dadd( 205.834, -292.493, -28.6056, 0.24 ) }
    dend_10 { pt3dadd( 206.306, -292.882, -28.3659, 0.24 ) }
    dend_10 { pt3dadd( 206.482, -293.04, -28.2715, 0.24 ) }
    dend_10 { pt3dadd( 207.213, -293.708, -27.9051, 0.24 ) }
    dend_10 { pt3dadd( 207.595, -294.044, -27.7304, 0.96 ) }
    dend_10 { pt3dadd( 208.344, -294.681, -27.418, 0.48 ) }
    dend_10 { pt3dadd( 208.827, -295.076, -27.2471, 0.36 ) }
    dend_10 { pt3dadd( 209.203, -295.384, -27.1429, 0.6 ) }
    dend_10 { pt3dadd( 209.767, -295.798, -27.0186, 0.84 ) }
    dend_10 { pt3dadd( 210.237, -296.098, -26.9555, 0.12 ) }
    dend_10 { pt3dadd( 210.453, -296.206, -26.936, 0.12 ) }
    dend_10 { pt3dadd( 211.163, -296.484, -26.9088, 0.12 ) }
    dend_10 { pt3dadd( 211.824, -296.708, -26.8774, 0.96 ) }
    dend_10 { pt3dadd( 212.601, -296.943, -26.8203, 0.12 ) }
    dend_10 { pt3dadd( 213.019, -297.055, -26.7825, 0.12 ) }
    dend_10 { pt3dadd( 213.642, -297.201, -26.6842, 0.12 ) }
    dend_10 { pt3dadd( 213.903, -297.245, -26.6376, 0.12 ) }
    dend_10 { pt3dadd( 214.166, -297.262, -26.5874, 0.12 ) }
    dend_10 { pt3dadd( 214.801, -297.26, -26.4681, 0.48 ) }
    dend_10 { pt3dadd( 215.31, -297.25, -26.3951, 0.48 ) }
    dend_10 { pt3dadd( 216.117, -297.265, -26.2825, 0.12 ) }
    dend_10 { pt3dadd( 216.545, -297.3, -26.2261, 0.12 ) }
    dend_10 { pt3dadd( 217.034, -297.356, -26.1718, 0.12 ) }
    dend_10 { pt3dadd( 217.468, -297.412, -26.1433, 0.36 ) }
    dend_10 { pt3dadd( 217.85, -297.48, -26.1417, 0.12 ) }
    dend_10 { pt3dadd( 218.271, -297.585, -26.167, 0.12 ) }
    dend_10 { pt3dadd( 218.5, -297.65, -26.198, 0.12 ) }
    dend_10 { pt3dadd( 218.959, -297.784, -26.2581, 0.6 ) }
    dend_10 { pt3dadd( 219.293, -297.845, -26.2941, 0.12 ) }
    dend_10 { pt3dadd( 219.89, -297.885, -26.3434, 0.12 ) }
    dend_10 { pt3dadd( 220.5, -297.879, -26.3837, 0.12 ) }
    dend_10 { pt3dadd( 220.739, -297.858, -26.3997, 0.36 ) }
    dend_10 { pt3dadd( 220.976, -297.825, -26.4149, 0.24 ) }
    dend_10 { pt3dadd( 221.982, -297.639, -26.5006, 0.24 ) }
    dend_10 { pt3dadd( 222.354, -297.567, -26.5328, 0.48 ) }
    dend_10 { pt3dadd( 222.63, -297.508, -26.5596, 0.12 ) }
    dend_10 { pt3dadd( 223.059, -297.412, -26.6047, 0.12 ) }
    dend_10 { pt3dadd( 223.429, -297.33, -26.6455, 0.36 ) }
    dend_10 { pt3dadd( 223.842, -297.244, -26.6938, 0.12 ) }
    dend_10 { pt3dadd( 226.077, -296.853, -26.9716, 0.12 ) }
    dend_10 { pt3dadd( 226.404, -296.801, -27.0102, 0.48 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 47/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 17.7818, -9.74916, -10.0811, 0.36 ) }
    dend_7 { pt3dadd( 18.6983, -9.41712, -9.93517, 0.36 ) }
    dend_7 { pt3dadd( 19.453, -9.16758, -9.78737, 0.36 ) }
    dend_7 { pt3dadd( 20.0219, -8.96674, -9.66804, 0.48 ) }
    dend_7 { pt3dadd( 20.6143, -8.72913, -9.54408, 0.48 ) }
    dend_7 { pt3dadd( 21.5258, -8.24957, -9.27888, 0.12 ) }
    dend_7 { pt3dadd( 22.232, -7.76839, -9.04549, 0.12 ) }
    dend_7 { pt3dadd( 22.4838, -7.52801, -8.92808, 0.48 ) }
    dend_7 { pt3dadd( 22.8818, -6.99925, -8.71776, 0.48 ) }
    dend_7 { pt3dadd( 23.1724, -6.47856, -8.54559, 0.24 ) }
    dend_7 { pt3dadd( 23.7669, -5.16601, -8.15667, 0.36 ) }
    dend_7 { pt3dadd( 24.2144, -4.00057, -7.86554, 0.36 ) }
    dend_7 { pt3dadd( 24.6069, -2.81495, -7.58296, 0.6 ) }
    dend_7 { pt3dadd( 24.9035, -1.85097, -7.36301, 1.08 ) }
    dend_7 { pt3dadd( 25.2634, -0.609788, -7.08649, 0.84 ) }
    dend_7 { pt3dadd( 25.512, 0.277019, -6.89948, 0.48 ) }
    dend_7 { pt3dadd( 25.8258, 1.39663, -6.70181, 0.96 ) }
    dend_7 { pt3dadd( 25.9903, 2.00328, -6.58552, 1.08 ) }
    dend_7 { pt3dadd( 26.2654, 2.91887, -6.40999, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -12.5686, -1.9955, 8.1156, 0.48 ) }
    dend_5 { pt3dadd( -13.1784, -0.893838, 8.0089, 0.48 ) }
    dend_5 { pt3dadd( -13.5921, -0.196502, 7.9919, 0.24 ) }
    dend_5 { pt3dadd( -14.0658, 0.486751, 8.004, 0.24 ) }
    dend_5 { pt3dadd( -14.6543, 1.19646, 8.03618, 0.72 ) }
    dend_5 { pt3dadd( -15.0154, 1.57229, 8.06246, 0.96 ) }
    dend_5 { pt3dadd( -15.8977, 2.35759, 8.13123, 0.48 ) }
    dend_5 { pt3dadd( -16.7093, 2.87406, 8.22647, 0.36 ) }
    dend_5 { pt3dadd( -17.3751, 3.1772, 8.30501, 0.36 ) }
    dend_5 { pt3dadd( -18.2498, 3.44454, 8.37801, 0.6 ) }
    dend_5 { pt3dadd( -18.7347, 3.55356, 8.40235, 0.36 ) }
    dend_5 { pt3dadd( -19.4433, 3.681, 8.44295, 0.48 ) }
    dend_5 { pt3dadd( -20.4191, 3.82542, 8.55622, 0.72 ) }
    dend_5 { pt3dadd( -21.2445, 3.9301, 8.67605, 1.08 ) }
    dend_5 { pt3dadd( -22.0968, 4.02183, 8.84698, 0.96 ) }
    dend_5 { pt3dadd( -22.8321, 4.06587, 9.03018, 0.96 ) }
    dend_5 { pt3dadd( -23.5942, 4.07064, 9.27539, 0.72 ) }
    dend_5 { pt3dadd( -24.7206, 3.97509, 9.76099, 0.6 ) }
    dend_5 { pt3dadd( -25.6114, 3.7018, 10.295, 0.36 ) }
    dend_5 { pt3dadd( -25.8592, 3.5293, 10.526, 0.36 ) }
    dend_5 { pt3dadd( -26.259, 3.08739, 11.0148, 0.36 ) }
    dend_5 { pt3dadd( -26.7692, 2.429, 11.7222, 0.48 ) }
    dend_5 { pt3dadd( -27.0879, 2.01424, 12.1739, 0.48 ) }
    dend_5 { pt3dadd( -27.523, 1.56406, 12.6915, 0.48 ) }
    dend_5 { pt3dadd( -28.1188, 1.2675, 13.2563, 0.48 ) }
    dend_5 { pt3dadd( -28.7935, 1.13718, 13.7557, 0.48 ) }
    dend_5 { pt3dadd( -29.7009, 1.07116, 14.3192, 0.48 ) }
    dend_5 { pt3dadd( -30.2479, 1.0535, 14.5751, 0.24 ) }
    dend_5 { pt3dadd( -30.7539, 1.04422, 14.7669, 0.24 ) }
    dend_5 { pt3dadd( -31.3672, 1.05875, 14.9925, 0.6 ) }
    dend_5 { pt3dadd( -32.0318, 1.08787, 15.2097, 0.6 ) }
    dend_5 { pt3dadd( -32.6835, 1.19178, 15.4289, 0.72 ) }
    dend_5 { pt3dadd( -33.5046, 1.48844, 15.6747, 0.12 ) }
    dend_5 { pt3dadd( -33.8899, 1.73416, 15.8538, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( -34.6584, 2.34077, 16.2874, 0.12 ) }
    dend_5 { pt3dadd( -35.1591, 2.79882, 16.5984, 0.48 ) }
    dend_5 { pt3dadd( -35.9175, 3.55396, 17.1303, 0.6 ) }
    dend_5 { pt3dadd( -36.3052, 3.92691, 17.4155, 0.6 ) }
    dend_5 { pt3dadd( -37.2624, 4.63359, 18.162, 0.36 ) }
    dend_5 { pt3dadd( -37.7709, 4.81069, 18.5673, 0.36 ) }
    dend_5 { pt3dadd( -38.0566, 4.80598, 18.7863, 0.36 ) }
    dend_5 { pt3dadd( -38.3959, 4.74334, 19.048, 0.36 ) }
    dend_5 { pt3dadd( -38.8952, 4.6174, 19.4465, 0.6 ) }
    dend_5 { pt3dadd( -39.7342, 4.44451, 20.1112, 0.84 ) }
    dend_5 { pt3dadd( -40.8039, 4.31308, 20.9262, 0.6 ) }
    dend_5 { pt3dadd( -41.5524, 4.27811, 21.5285, 0.48 ) }
    dend_5 { pt3dadd( -41.9256, 4.27974, 21.8384, 0.48 ) }
    dend_5 { pt3dadd( -42.4621, 4.31339, 22.3002, 0.36 ) }
    dend_5 { pt3dadd( -42.9156, 4.37726, 22.7065, 0.36 ) }
    dend_5 { pt3dadd( -43.4058, 4.4917, 23.1175, 0.48 ) }
    dend_5 { pt3dadd( -43.9974, 4.71044, 23.5067, 0.72 ) }
    dend_5 { pt3dadd( -44.0891, 4.75881, 23.569, 0.72 ) }
    dend_5 { pt3dadd( -44.6763, 5.1279, 23.9514, 0.72 ) }
    dend_5 { pt3dadd( -45.0616, 5.40673, 24.2158, 0.48 ) }
    dend_5 { pt3dadd( -45.5618, 5.80102, 24.5489, 0.48 ) }
    dend_5 { pt3dadd( -46.1265, 6.28177, 24.9036, 0.6 ) }
    dend_5 { pt3dadd( -47.201, 7.13526, 25.4908, 0.24 ) }
    dend_5 { pt3dadd( -47.8793, 7.5766, 25.8034, 0.24 ) }
    dend_5 { pt3dadd( -49.0767, 8.21713, 26.2697, 0.48 ) }
    dend_5 { pt3dadd( -49.842, 8.5414, 26.5209, 0.36 ) }
    dend_5 { pt3dadd( -50.1727, 8.65781, 26.6101, 0.36 ) }
    dend_5 { pt3dadd( -51.4357, 8.9732, 26.8774, 0.36 ) }
    dend_5 { pt3dadd( -52.6545, 9.1165, 27.0275, 0.36 ) }
    dend_5 { pt3dadd( -53.1324, 9.11247, 27.0714, 0.36 ) }
    dend_5 { pt3dadd( -53.7404, 9.0447, 27.0967, 0.36 ) }
    dend_5 { pt3dadd( -54.5919, 8.89017, 27.1416, 0.36 ) }
    dend_5 { pt3dadd( -55.2954, 8.73557, 27.1852, 0.24 ) }
    dend_5 { pt3dadd( -55.7986, 8.58724, 27.2221, 0.24 ) }
    dend_5 { pt3dadd( -56.3651, 8.33703, 27.2621, 0.24 ) }
    dend_5 { pt3dadd( -56.8932, 8.05027, 27.3427, 0.24 ) }
    dend_5 { pt3dadd( -57.4299, 7.75409, 27.451, 0.24 ) }
    dend_5 { pt3dadd( -57.7689, 7.58707, 27.5441, 0.24 ) }
    dend_5 { pt3dadd( -58.214, 7.40697, 27.7008, 0.48 ) }
    dend_5 { pt3dadd( -59.3368, 6.9713, 28.1416, 0.36 ) }
    dend_5 { pt3dadd( -60.2144, 6.66464, 28.5426, 0.24 ) }
    dend_5 { pt3dadd( -60.9506, 6.47017, 28.9749, 0.24 ) }
    dend_5 { pt3dadd( -61.7408, 6.26287, 29.5031, 0.48 ) }
    dend_5 { pt3dadd( -62.3985, 6.09152, 29.9782, 0.24 ) }
    dend_5 { pt3dadd( -62.9924, 5.92801, 30.4298, 0.24 ) }
    dend_5 { pt3dadd( -63.6347, 5.69685, 30.9197, 0.12 ) }
    dend_5 { pt3dadd( -64.9758, 4.93833, 31.8572, 1.68 ) }
    dend_5 { pt3dadd( -65.7006, 4.28395, 32.358, 0.36 ) }
    dend_5 { pt3dadd( -65.8486, 4.10712, 32.4436, 0.36 ) }
    dend_5 { pt3dadd( -66.2715, 3.566, 32.6259, 0.24 ) }
    dend_5 { pt3dadd( -66.9559, 2.64381, 32.8303, 0.24 ) }
    dend_5 { pt3dadd( -67.231, 2.22644, 32.8705, 0.24 ) }
    dend_5 { pt3dadd( -67.6233, 1.59247, 32.8664, 0.24 ) }
    dend_5 { pt3dadd( -67.903, 1.1829, 32.8704, 0.24 ) }
    dend_5 { pt3dadd( -68.4543, 0.458433, 32.8808, 0.24 ) }
    dend_5 { pt3dadd( -68.9203, -0.0597399, 32.8914, 0.24 ) }
    dend_5 { pt3dadd( -69.6166, -0.738023, 32.9089, 0.24 ) }
    dend_5 { pt3dadd( -69.8937, -0.990158, 32.9164, 0.24 ) }
    dend_5 { pt3dadd( -70.1773, -1.2396, 32.9248, 0.24 ) }
    dend_5 { pt3dadd( -70.7145, -1.8021, 32.9438, 0.24 ) }
    dend_5 { pt3dadd( -71.0279, -2.20065, 32.9574, 0.24 ) }
    dend_5 { pt3dadd( -71.7024, -2.83325, 32.9834, 0.24 ) }
    dend_5 { pt3dadd( -80.9866, -3.06407, 36.692, 0.24 ) }
    dend_5 { pt3dadd( -90.3732, -1.81874, 39.9303, 0.24 ) }
    dend_5 { pt3dadd( -99.3455, -0.309609, 44.1053, 0.24 ) }
    dend_5 { pt3dadd( -108.205, 1.23498, 48.505, 0.24 ) }
    dend_5 { pt3dadd( -116.757, 1.56638, 53.6779, 0.24 ) }
    dend_5 { pt3dadd( -125.048, 2.66504, 59.1701, 0.24 ) }
    dend_5 { pt3dadd( -133.36, 2.39073, 64.7241, 0.24 ) }
    dend_5 { pt3dadd( -140.863, 1.43524, 71.2715, 0.24 ) }
    dend_5 { pt3dadd( -147.209, 1.13861, 78.9952, 0.24 ) }
    dend_5 { pt3dadd( -153.836, -1.00916, 86.1991, 0.24 ) }
    dend_5 { pt3dadd( -160.435, -5.24093, 92.5406, 0.24 ) }
    dend_5 { pt3dadd( -166.67, -9.05473, 99.4631, 0.24 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -12.5686, -1.9955, 8.1156, 0.12 ) }
    dend_4 { pt3dadd( -13.6662, -4.10355, 2.06423, 0.12 ) }
    dend_4 { pt3dadd( -13.8216, -4.38479, 1.41421, 0.12 ) }
    dend_4 { pt3dadd( -13.9727, -4.63645, 0.969002, 0.48 ) }
    dend_4 { pt3dadd( -14.1227, -4.86151, 0.694142, 0.48 ) }
    dend_4 { pt3dadd( -14.6781, -5.61916, 0.0798973, 0.48 ) }
    dend_4 { pt3dadd( -15.072, -6.10298, -0.209572, 0.12 ) }
    dend_4 { pt3dadd( -15.6727, -6.72004, -0.0917638, 0.6 ) }
    dend_4 { pt3dadd( -16.1235, -7.12066, -0.0281646, 0.6 ) }
    dend_4 { pt3dadd( -16.7258, -7.6186, 0.024484, 0.6 ) }
    dend_4 { pt3dadd( -17.2008, -8.0033, 0.0364676, 0.6 ) }
    dend_4 { pt3dadd( -17.7406, -8.43948, 0.00469697, 0.24 ) }
    dend_4 { pt3dadd( -18.1635, -8.78611, 0.0235317, 0.24 ) }
    dend_4 { pt3dadd( -18.4312, -9.00187, 0.0598087, 0.24 ) }
    dend_4 { pt3dadd( -18.7756, -9.26767, 0.126487, 0.84 ) }
    dend_4 { pt3dadd( -19.1746, -9.55853, 0.221036, 0.96 ) }
    dend_4 { pt3dadd( -19.7958, -9.99114, 0.379738, 0.96 ) }
    dend_4 { pt3dadd( -21.0189, -10.8132, 0.698363, 0.72 ) }
    dend_4 { pt3dadd( -21.6646, -11.2012, 0.848447, 0.6 ) }
    dend_4 { pt3dadd( -22.7006, -11.7468, 1.05831, 0.6 ) }
    dend_4 { pt3dadd( -23.0332, -11.8971, 1.11626, 0.6 ) }
    dend_4 { pt3dadd( -23.5401, -12.0822, 1.18648, 0.36 ) }
    dend_4 { pt3dadd( -24.2132, -12.2724, 1.24671, 0.36 ) }
    dend_4 { pt3dadd( -25.1749, -12.4697, 1.25965, 0.36 ) }
    dend_4 { pt3dadd( -25.7806, -12.5563, 1.28691, 0.36 ) }
    dend_4 { pt3dadd( -26.0475, -12.5764, 1.30687, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_4 { pt3dadd( -26.5807, -12.6061, 1.36069, 1.08 ) }
    dend_4 { pt3dadd( -26.9565, -12.623, 1.41099, 1.08 ) }
    dend_4 { pt3dadd( -27.4444, -12.6493, 1.48891, 1.08 ) }
    dend_4 { pt3dadd( -28.2042, -12.7272, 1.62039, 0.12 ) }
    dend_4 { pt3dadd( -28.6692, -12.8094, 1.71041, 0.12 ) }
    dend_4 { pt3dadd( -29.0006, -12.8933, 1.7725, 0.12 ) }
    dend_4 { pt3dadd( -29.329, -12.9958, 1.84397, 0.12 ) }
    dend_4 { pt3dadd( -29.791, -13.1479, 1.94576, 0.6 ) }
    dend_4 { pt3dadd( -30.4661, -13.3649, 2.08726, 0.6 ) }
    dend_4 { pt3dadd( -30.9241, -13.5047, 2.17711, 0.72 ) }
    dend_4 { pt3dadd( -31.984, -13.8053, 2.38994, 0.84 ) }
    dend_4 { pt3dadd( -32.8495, -14.037, 2.55775, 0.48 ) }
    dend_4 { pt3dadd( -33.4376, -14.1738, 2.66529, 0.48 ) }
    dend_4 { pt3dadd( -34.1447, -14.33, 2.79016, 0.48 ) }
    dend_4 { pt3dadd( -34.6283, -14.4361, 2.86748, 0.36 ) }
    dend_4 { pt3dadd( -34.9956, -14.5062, 2.91518, 0.36 ) }
    dend_4 { pt3dadd( -35.681, -14.6207, 3.00484, 0.36 ) }
    dend_4 { pt3dadd( -36.4185, -14.7314, 3.14954, 0.36 ) }
    dend_4 { pt3dadd( -37.388, -14.8628, 3.40977, 0.36 ) }
    dend_4 { pt3dadd( -38.0131, -14.9329, 3.59534, 0.36 ) }
    dend_4 { pt3dadd( -38.6023, -14.9774, 3.75474, 0.36 ) }
    dend_4 { pt3dadd( -39.2273, -14.9881, 3.9117, 0.36 ) }
    dend_4 { pt3dadd( -40.5003, -14.9282, 4.20345, 0.48 ) }
    dend_4 { pt3dadd( -41.2065, -14.8609, 4.32837, 0.72 ) }
    dend_4 { pt3dadd( -41.8739, -14.754, 4.38036, 0.72 ) }
    dend_4 { pt3dadd( -42.7727, -14.6148, 4.33787, 0.36 ) }
    dend_4 { pt3dadd( -43.2657, -14.5594, 4.2587, 0.36 ) }
    dend_4 { pt3dadd( -43.6328, -14.5493, 4.1631, 0.36 ) }
    dend_4 { pt3dadd( -44.081, -14.5796, 4.01938, 0.6 ) }
    dend_4 { pt3dadd( -44.8955, -14.727, 3.78172, 0.72 ) }
    dend_4 { pt3dadd( -45.9332, -15.0158, 3.5806, 0.72 ) }
    dend_4 { pt3dadd( -46.6306, -15.2507, 3.54346, 0.36 ) }
    dend_4 { pt3dadd( -47.466, -15.5007, 3.66063, 0.36 ) }
    dend_4 { pt3dadd( -48.0077, -15.6524, 3.85722, 0.36 ) }
    dend_4 { pt3dadd( -48.4567, -15.7763, 4.12642, 0.36 ) }
    dend_4 { pt3dadd( -49.1497, -15.9722, 4.70697, 0.48 ) }
    dend_4 { pt3dadd( -49.9351, -16.1823, 5.46013, 0.48 ) }
    dend_4 { pt3dadd( -51.334, -16.4873, 7.05937, 0.48 ) }
    dend_4 { pt3dadd( -51.8897, -16.5655, 7.7293, 0.48 ) }
    dend_4 { pt3dadd( -52.2306, -16.6159, 8.12929, 0.48 ) }
    dend_4 { pt3dadd( -52.6186, -16.6781, 8.58311, 0.48 ) }
    dend_4 { pt3dadd( -53.2483, -16.8195, 9.24267, 0.48 ) }
    dend_4 { pt3dadd( -54.7259, -17.3094, 10.6018, 0.48 ) }
    dend_4 { pt3dadd( -55.1228, -17.4741, 10.8797, 0.48 ) }
    dend_4 { pt3dadd( -55.5828, -17.5682, 11.2544, 0.48 ) }
    dend_4 { pt3dadd( -64.8977, -20.1708, 13.9169, 0.48 ) }
    dend_4 { pt3dadd( -74.0355, -22.679, 17.2024, 0.48 ) }
    dend_4 { pt3dadd( -83.6921, -23.9994, 19.4757, 0.48 ) }
    dend_4 { pt3dadd( -93.6199, -24.673, 20.4899, 0.48 ) }
    dend_4 { pt3dadd( -103.537, -26.0172, 20.3544, 0.48 ) }
    dend_4 { pt3dadd( -113.233, -28.5418, 20.8184, 0.48 ) }
    dend_4 { pt3dadd( -122.492, -32.4316, 21.5527, 0.48 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -19.2475, 36.151, -18.2977, 0.12 ) }
    dend_2 { pt3dadd( -21.1802, 36.6947, -18.4767, 0.12 ) }
    dend_2 { pt3dadd( -22.6419, 37.0308, -18.8474, 0.12 ) }
    dend_2 { pt3dadd( -23.0415, 37.1169, -18.9646, 0.12 ) }
    dend_2 { pt3dadd( -23.7354, 37.2325, -19.1624, 0.6 ) }
    dend_2 { pt3dadd( -24.5472, 37.3457, -19.3845, 0.84 ) }
    dend_2 { pt3dadd( -25.0214, 37.3993, -19.5072, 0.84 ) }
    dend_2 { pt3dadd( -26.112, 37.467, -19.9297, 0.12 ) }
    dend_2 { pt3dadd( -26.8381, 37.4629, -20.1812, 0.12 ) }
    dend_2 { pt3dadd( -27.6547, 37.4489, -20.4916, 0.12 ) }
    dend_2 { pt3dadd( -27.9875, 37.4678, -20.6275, 0.96 ) }
    dend_2 { pt3dadd( -28.4355, 37.523, -20.8252, 0.96 ) }
    dend_2 { pt3dadd( -29.7064, 37.7158, -21.3942, 0.24 ) }
    dend_2 { pt3dadd( -30.4819, 37.8113, -21.7266, 0.24 ) }
    dend_2 { pt3dadd( -30.8544, 37.8382, -21.9283, 0.24 ) }
    dend_2 { pt3dadd( -31.8265, 37.8744, -22.5197, 0.6 ) }
    dend_2 { pt3dadd( -32.3343, 37.8597, -22.8574, 0.24 ) }
    dend_2 { pt3dadd( -32.6323, 37.8451, -23.0589, 0.24 ) }
    dend_2 { pt3dadd( -33.3375, 37.7631, -23.4896, 0.24 ) }
    dend_2 { pt3dadd( -34.1033, 37.5961, -23.9809, 0.84 ) }
    dend_2 { pt3dadd( -34.6017, 37.4459, -24.2908, 0.84 ) }
    dend_2 { pt3dadd( -35.4053, 37.2056, -24.7295, 0.24 ) }
    dend_2 { pt3dadd( -35.7934, 37.1436, -24.8907, 0.24 ) }
    dend_2 { pt3dadd( -36.148, 37.1221, -25.0242, 0.24 ) }
    dend_2 { pt3dadd( -36.6265, 37.1209, -25.1764, 0.24 ) }
    dend_2 { pt3dadd( -36.7616, 37.1173, -25.2085, 0.12 ) }
    dend_2 { pt3dadd( -37.5036, 37.0904, -25.366, 0.12 ) }
    dend_2 { pt3dadd( -38.2063, 37.0655, -25.562, 0.48 ) }
    dend_2 { pt3dadd( -38.9088, 37.0417, -25.8097, 0.12 ) }
    dend_2 { pt3dadd( -39.4757, 37.0324, -26.0396, 0.12 ) }
    dend_2 { pt3dadd( -40.0376, 37.0412, -26.2818, 0.48 ) }
    dend_2 { pt3dadd( -40.4353, 37.0521, -26.4518, 0.48 ) }
    dend_2 { pt3dadd( -41.7017, 37.1201, -26.9872, 0.12 ) }
    dend_2 { pt3dadd( -42.4725, 37.1955, -27.3345, 0.12 ) }
    dend_2 { pt3dadd( -42.6203, 37.2153, -27.4158, 0.12 ) }
    dend_2 { pt3dadd( -43.1486, 37.3109, -27.793, 0.6 ) }
    dend_2 { pt3dadd( -43.7209, 37.4104, -28.2335, 0.6 ) }
    dend_2 { pt3dadd( -44.1443, 37.4704, -28.5583, 0.6 ) }
    dend_2 { pt3dadd( -44.9325, 37.5757, -29.1253, 0.72 ) }
    dend_2 { pt3dadd( -46.0913, 37.7263, -30.0382, 0.36 ) }
    dend_2 { pt3dadd( -46.7952, 37.826, -30.5922, 0.12 ) }
    dend_2 { pt3dadd( -47.471, 37.9218, -31.1382, 0.12 ) }
    dend_2 { pt3dadd( -47.769, 37.9648, -31.3695, 0.72 ) }
    dend_2 { pt3dadd( -48.1598, 38.0195, -31.6686, 0.84 ) }
    dend_2 { pt3dadd( -48.8214, 38.1154, -32.1089, 0.12 ) }
    dend_2 { pt3dadd( -49.4856, 38.2067, -32.4853, 0.12 ) }
    dend_2 { pt3dadd( -50.0947, 38.2821, -32.8151, 0.6 ) }
    dend_2 { pt3dadd( -50.5034, 38.3374, -33.0802, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -51.7357, 38.4748, -33.8844, 0.12 ) }
    dend_2 { pt3dadd( -52.2424, 38.5144, -34.2035, 0.12 ) }
    dend_2 { pt3dadd( -52.8394, 38.5629, -34.6034, 0.12 ) }
    dend_2 { pt3dadd( -53.1487, 38.5875, -34.822, 0.48 ) }
    dend_2 { pt3dadd( -54.2493, 38.7059, -35.5692, 0.12 ) }
    dend_2 { pt3dadd( -55.1886, 38.8553, -36.3023, 0.12 ) }
    dend_2 { pt3dadd( -55.4739, 38.9132, -36.526, 1.08 ) }
    dend_2 { pt3dadd( -56.6693, 39.1957, -37.5091, 0.12 ) }
    dend_2 { pt3dadd( -56.9501, 39.2714, -37.754, 0.12 ) }
    dend_2 { pt3dadd( -57.4995, 39.4489, -38.2038, 0.84 ) }
    dend_2 { pt3dadd( -58.9226, 39.9718, -39.2477, 0.12 ) }
    dend_2 { pt3dadd( -59.6592, 40.2845, -39.7997, 0.12 ) }
    dend_2 { pt3dadd( -60.0481, 40.4637, -40.0536, 0.36 ) }
    dend_2 { pt3dadd( -60.6173, 40.7418, -40.3492, 0.12 ) }
    dend_2 { pt3dadd( -61.67, 41.3273, -40.8507, 0.12 ) }
    dend_2 { pt3dadd( -62.0008, 41.5489, -41.0329, 0.36 ) }
    dend_2 { pt3dadd( -62.3869, 41.8861, -41.2518, 0.12 ) }
    dend_2 { pt3dadd( -63.0684, 42.6694, -41.7506, 0.12 ) }
    dend_2 { pt3dadd( -63.2604, 42.9187, -41.8988, 0.48 ) }
    dend_2 { pt3dadd( -63.46, 43.1921, -42.047, 0.48 ) }
    dend_2 { pt3dadd( -64.4839, 44.6291, -42.9801, 0.12 ) }
    dend_2 { pt3dadd( -65.0709, 45.4141, -43.527, 0.12 ) }
    dend_2 { pt3dadd( -65.5876, 46.0634, -43.9903, 0.12 ) }
    dend_2 { pt3dadd( -66.0639, 46.6059, -44.3892, 0.12 ) }
    dend_2 { pt3dadd( -66.5262, 47.066, -44.7067, 0.6 ) }
    dend_2 { pt3dadd( -67.5372, 47.9093, -45.3691, 0.12 ) }
    dend_2 { pt3dadd( -67.8239, 48.107, -45.5313, 0.12 ) }
    dend_2 { pt3dadd( -68.1594, 48.3002, -45.7333, 0.12 ) }
    dend_2 { pt3dadd( -68.7914, 48.6285, -46.1216, 0.12 ) }
    dend_2 { pt3dadd( -69.3304, 48.8903, -46.4358, 0.48 ) }
    dend_2 { pt3dadd( -70.8256, 49.5492, -47.1702, 0.12 ) }
    dend_2 { pt3dadd( -71.2488, 49.7167, -47.3709, 0.12 ) }
    dend_2 { pt3dadd( -72.1779, 50.0264, -47.8201, 0.6 ) }
    dend_2 { pt3dadd( -72.6031, 50.1423, -48.0135, 0.12 ) }
    dend_2 { pt3dadd( -73.1582, 50.27, -48.2404, 0.12 ) }
    dend_2 { pt3dadd( -73.8488, 50.4106, -48.4692, 0.6 ) }
    dend_2 { pt3dadd( -75.2415, 50.6607, -48.8563, 0.12 ) }
    dend_2 { pt3dadd( -76.4998, 50.8613, -49.2262, 0.12 ) }
    dend_2 { pt3dadd( -77.3086, 50.9775, -49.4681, 0.12 ) }
    dend_2 { pt3dadd( -77.9227, 51.054, -49.6428, 0.12 ) }
    dend_2 { pt3dadd( -78.7662, 51.1493, -49.8514, 0.12 ) }
    dend_2 { pt3dadd( -80.0231, 51.2907, -50.0972, 0.12 ) }
    dend_2 { pt3dadd( -80.8614, 51.3868, -50.1917, 0.12 ) }
    dend_2 { pt3dadd( -81.36, 51.4474, -50.2427, 0.84 ) }
    dend_2 { pt3dadd( -82.051, 51.5449, -50.3013, 1.2 ) }
    dend_2 { pt3dadd( -82.7188, 51.6712, -50.3368, 0.12 ) }
    dend_2 { pt3dadd( -83.3498, 51.8348, -50.3446, 0.12 ) }
    dend_2 { pt3dadd( -84.2745, 52.1418, -50.327, 0.12 ) }
    dend_2 { pt3dadd( -85.0936, 52.4609, -50.3263, 0.48 ) }
    dend_2 { pt3dadd( -85.4854, 52.6314, -50.3419, 0.12 ) }
    dend_2 { pt3dadd( -86.4195, 53.0864, -50.4142, 0.12 ) }
    dend_2 { pt3dadd( -87.0514, 53.3934, -50.4833, 0.12 ) }
    dend_2 { pt3dadd( -87.67, 53.6838, -50.5589, 0.48 ) }
    dend_2 { pt3dadd( -88.2975, 53.9715, -50.6759, 0.48 ) }
    dend_2 { pt3dadd( -88.8163, 54.1963, -50.7937, 0.12 ) }
    dend_2 { pt3dadd( -89.7824, 54.5888, -51.0748, 0.12 ) }
    dend_2 { pt3dadd( -90.529, 54.8835, -51.3643, 0.12 ) }
    dend_2 { pt3dadd( -91.0479, 55.0881, -51.594, 0.48 ) }
    dend_2 { pt3dadd( -91.8154, 55.3837, -51.9491, 0.12 ) }
    dend_2 { pt3dadd( -92.6478, 55.689, -52.3353, 0.12 ) }
    dend_2 { pt3dadd( -93.7999, 56.118, -52.8512, 0.84 ) }
    dend_2 { pt3dadd( -94.5974, 56.4236, -53.2887, 0.12 ) }
    dend_2 { pt3dadd( -95.002, 56.6018, -53.5378, 0.12 ) }
    dend_2 { pt3dadd( -95.5727, 56.8853, -53.8837, 0.12 ) }
    dend_2 { pt3dadd( -96.2055, 57.2555, -54.3672, 0.12 ) }
    dend_2 { pt3dadd( -96.5562, 57.4738, -54.6722, 0.36 ) }
    dend_2 { pt3dadd( -97.5742, 58.1879, -55.6538, 0.12 ) }
    dend_2 { pt3dadd( -97.9362, 58.4835, -56.0589, 0.12 ) }
    dend_2 { pt3dadd( -98.2862, 58.8342, -56.5794, 0.48 ) }
    dend_2 { pt3dadd( -99.3127, 60.194, -58.7649, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -19.2475, 36.151, -18.2977, 0.12 ) }
    dend_1 { pt3dadd( -19.3211, 36.9595, -18.3631, 0.12 ) }
    dend_1 { pt3dadd( -19.4506, 38.0695, -18.5208, 0.12 ) }
    dend_1 { pt3dadd( -19.5476, 38.8086, -18.637, 0.72 ) }
    dend_1 { pt3dadd( -19.6286, 39.4252, -18.7426, 0.96 ) }
    dend_1 { pt3dadd( -19.6822, 39.8133, -18.8097, 0.96 ) }
    dend_1 { pt3dadd( -19.8419, 40.9311, -19.0717, 0.12 ) }
    dend_1 { pt3dadd( -20.0604, 42.3663, -19.5034, 0.12 ) }
    dend_1 { pt3dadd( -20.1334, 42.8523, -19.6623, 0.48 ) }
    dend_1 { pt3dadd( -20.2498, 43.5776, -19.9019, 0.24 ) }
    dend_1 { pt3dadd( -20.4305, 44.5435, -20.2263, 0.24 ) }
    dend_1 { pt3dadd( -20.7079, 45.9788, -20.6863, 0.72 ) }
    dend_1 { pt3dadd( -20.8622, 46.8002, -20.9168, 0.96 ) }
    dend_1 { pt3dadd( -21.0468, 47.7554, -21.1893, 0.36 ) }
    dend_1 { pt3dadd( -21.1581, 48.3427, -21.3484, 0.36 ) }
    dend_1 { pt3dadd( -21.3053, 49.1259, -21.5327, 0.12 ) }
    dend_1 { pt3dadd( -21.4552, 49.8825, -21.6744, 0.12 ) }
    dend_1 { pt3dadd( -21.6698, 50.8655, -21.7901, 0.12 ) }
    dend_1 { pt3dadd( -21.7753, 51.3, -21.8416, 0.6 ) }
    dend_1 { pt3dadd( -21.9725, 52.0818, -21.9373, 0.12 ) }
    dend_1 { pt3dadd( -22.1505, 52.8094, -22.0186, 0.12 ) }
    dend_1 { pt3dadd( -22.3355, 53.5887, -22.0924, 0.48 ) }
    dend_1 { pt3dadd( -22.4838, 54.118, -22.1412, 0.96 ) }
    dend_1 { pt3dadd( -22.6473, 54.6525, -22.1869, 0.96 ) }
    dend_1 { pt3dadd( -22.8148, 55.1872, -22.2266, 0.12 ) }
    dend_1 { pt3dadd( -23.1013, 56.0131, -22.2759, 0.12 ) }
    dend_1 { pt3dadd( -23.3982, 56.8286, -22.3264, 0.12 ) }
    dend_1 { pt3dadd( -23.5225, 57.1676, -22.346, 0.6 ) }
    dend_1 { pt3dadd( -23.5895, 57.3311, -22.3541, 0.6 ) }
    dend_1 { pt3dadd( -23.7541, 57.6511, -22.365, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_1 { pt3dadd( -24.0223, 58.0968, -22.4493, 0.12 ) }
    dend_1 { pt3dadd( -24.3672, 58.6334, -22.6239, 0.12 ) }
    dend_1 { pt3dadd( -24.7028, 59.1688, -22.8358, 0.72 ) }
    dend_1 { pt3dadd( -24.9189, 59.5228, -22.9997, 0.96 ) }
    dend_1 { pt3dadd( -25.452, 60.3955, -23.4841, 0.48 ) }
    dend_1 { pt3dadd( -26.3418, 61.8281, -24.3559, 0.12 ) }
    dend_1 { pt3dadd( -26.6933, 62.3719, -24.7119, 0.12 ) }
    dend_1 { pt3dadd( -27.0032, 62.8224, -25.019, 0.12 ) }
    dend_1 { pt3dadd( -27.3612, 63.3227, -25.3552, 0.48 ) }
    dend_1 { pt3dadd( -27.7327, 63.828, -25.6898, 0.12 ) }
    dend_1 { pt3dadd( -28.2696, 64.5215, -26.0821, 0.12 ) }
    dend_1 { pt3dadd( -28.5372, 64.8521, -26.2103, 1.08 ) }
    dend_1 { pt3dadd( -28.8594, 65.2317, -26.3431, 1.32 ) }
    dend_1 { pt3dadd( -29.1371, 65.5572, -26.4614, 0.96 ) }
    dend_1 { pt3dadd( -29.7926, 66.348, -26.7302, 0.24 ) }
    dend_1 { pt3dadd( -30.5326, 67.2514, -27.0947, 0.24 ) }
    dend_1 { pt3dadd( -31.0942, 67.915, -27.4169, 0.24 ) }
    dend_1 { pt3dadd( -31.641, 68.5404, -27.7479, 0.24 ) }
    dend_1 { pt3dadd( -32.2372, 69.1704, -28.0975, 0.96 ) }
    dend_1 { pt3dadd( -32.5706, 69.4876, -28.3203, 1.2 ) }
    dend_1 { pt3dadd( -33.4939, 70.308, -28.9737, 0.36 ) }
    dend_1 { pt3dadd( -34.0353, 70.7583, -29.3873, 0.12 ) }
    dend_1 { pt3dadd( -34.3252, 70.9914, -29.6091, 0.72 ) }
    dend_1 { pt3dadd( -34.9348, 71.5065, -30.0812, 0.72 ) }
    dend_1 { pt3dadd( -36.3398, 72.7506, -31.1171, 0.24 ) }
    dend_1 { pt3dadd( -36.6859, 73.0743, -31.3696, 0.12 ) }
    dend_1 { pt3dadd( -37.0166, 73.4018, -31.5988, 0.12 ) }
    dend_1 { pt3dadd( -37.3345, 73.7463, -31.8235, 0.24 ) }
    dend_1 { pt3dadd( -38.1245, 74.6702, -32.3474, 0.48 ) }
    dend_1 { pt3dadd( -38.5092, 75.1661, -32.6071, 0.12 ) }
    dend_1 { pt3dadd( -38.8548, 75.6379, -32.7981, 0.12 ) }
    dend_1 { pt3dadd( -38.9528, 75.7715, -32.8529, 0.72 ) }
    dend_1 { pt3dadd( -39.3951, 76.3821, -33.0908, 0.84 ) }
    dend_1 { pt3dadd( -39.7342, 76.8599, -33.2594, 0.84 ) }
    dend_1 { pt3dadd( -40.5843, 78.0335, -33.7503, 0.36 ) }
    dend_1 { pt3dadd( -41.0171, 78.6353, -34.044, 0.12 ) }
    dend_1 { pt3dadd( -41.3832, 79.1492, -34.3228, 0.6 ) }
    dend_1 { pt3dadd( -41.7037, 79.6025, -34.5891, 1.08 ) }
    dend_1 { pt3dadd( -41.8969, 79.8967, -34.757, 1.08 ) }
    dend_1 { pt3dadd( -42.747, 81.2688, -35.4742, 0.12 ) }
    dend_1 { pt3dadd( -43.0583, 81.8003, -35.7036, 0.12 ) }
    dend_1 { pt3dadd( -43.2635, 82.1648, -35.8604, 0.48 ) }
    dend_1 { pt3dadd( -43.58, 82.775, -36.0878, 0.12 ) }
    dend_1 { pt3dadd( -44.1841, 83.9818, -36.4533, 0.12 ) }
    dend_1 { pt3dadd( -44.3832, 84.3751, -36.5384, 0.72 ) }
    dend_1 { pt3dadd( -44.7073, 85.0208, -36.6185, 0.84 ) }
    dend_1 { pt3dadd( -45.0377, 85.6491, -36.6949, 0.12 ) }
    dend_1 { pt3dadd( -45.5274, 86.546, -36.7934, 0.12 ) }
    dend_1 { pt3dadd( -45.8317, 87.0843, -36.842, 0.12 ) }
    dend_1 { pt3dadd( -46.2836, 87.8352, -36.9081, 0.6 ) }
    dend_1 { pt3dadd( -46.578, 88.3167, -36.9427, 0.36 ) }
    dend_1 { pt3dadd( -46.8581, 88.7624, -36.9656, 0.6 ) }
    dend_1 { pt3dadd( -47.2442, 89.3729, -37.0146, 0.84 ) }
    dend_1 { pt3dadd( -47.4463, 89.696, -37.0517, 0.84 ) }
    dend_1 { pt3dadd( -47.8998, 90.4626, -37.152, 0.24 ) }
    dend_1 { pt3dadd( -48.4216, 91.3747, -37.3005, 0.12 ) }
    dend_1 { pt3dadd( -48.8038, 92.0626, -37.4237, 0.48 ) }
    dend_1 { pt3dadd( -49.4406, 93.2582, -37.658, 0.12 ) }
    dend_1 { pt3dadd( -49.9796, 94.3265, -37.8811, 0.12 ) }
    dend_1 { pt3dadd( -50.2629, 94.9213, -38.0088, 0.48 ) }
    dend_1 { pt3dadd( -50.4863, 95.4205, -38.1138, 0.12 ) }
    dend_1 { pt3dadd( -50.7872, 96.1387, -38.2464, 0.12 ) }
    dend_1 { pt3dadd( -50.8796, 96.3683, -38.2817, 0.36 ) }
    dend_1 { pt3dadd( -51.1599, 97.0613, -38.378, 0.12 ) }
    dend_1 { pt3dadd( -51.3147, 97.4201, -38.4353, 0.12 ) }
    dend_1 { pt3dadd( -51.75, 98.3815, -38.5804, 0.48 ) }
    dend_1 { pt3dadd( -52.151, 99.2351, -38.6966, 1.2 ) }
    dend_1 { pt3dadd( -52.4624, 99.8603, -38.7833, 0.6 ) }
    dend_1 { pt3dadd( -52.7928, 100.509, -38.8836, 0.12 ) }
    dend_1 { pt3dadd( -53.4014, 101.686, -39.0752, 0.12 ) }
    dend_1 { pt3dadd( -54.0852, 102.998, -39.2936, 0.12 ) }
    dend_1 { pt3dadd( -54.2898, 103.392, -39.3584, 0.12 ) }
    dend_1 { pt3dadd( -54.5744, 103.931, -39.4394, 0.6 ) }
    dend_1 { pt3dadd( -54.9312, 104.611, -39.5487, 0.12 ) }
    dend_1 { pt3dadd( -55.3098, 105.335, -39.6698, 0.12 ) }
    dend_1 { pt3dadd( -55.5524, 105.794, -39.7671, 0.72 ) }
    dend_1 { pt3dadd( -55.8114, 106.271, -39.889, 0.72 ) }
    dend_1 { pt3dadd( -56.0183, 106.647, -39.9851, 0.72 ) }
    dend_1 { pt3dadd( -56.4532, 107.452, -40.2608, 0.12 ) }
    dend_1 { pt3dadd( -56.9128, 108.345, -40.598, 0.12 ) }
    dend_1 { pt3dadd( -57.1657, 108.871, -40.8101, 0.12 ) }
    dend_1 { pt3dadd( -57.6106, 109.872, -41.2048, 0.48 ) }
    dend_1 { pt3dadd( -57.9348, 110.65, -41.514, 0.48 ) }
    dend_1 { pt3dadd( -58.477, 112.008, -42.0336, 0.12 ) }
    dend_1 { pt3dadd( -58.8613, 113.021, -42.3866, 0.12 ) }
    dend_1 { pt3dadd( -59.0752, 113.615, -42.6121, 0.12 ) }
    dend_1 { pt3dadd( -59.3532, 114.419, -42.9092, 0.12 ) }
    dend_1 { pt3dadd( -59.4879, 114.818, -43.041, 0.72 ) }
    dend_1 { pt3dadd( -59.6821, 115.385, -43.2167, 0.72 ) }
    dend_1 { pt3dadd( -59.8487, 115.849, -43.3293, 0.48 ) }
    dend_1 { pt3dadd( -60.13, 116.624, -43.5396, 0.12 ) }
    dend_1 { pt3dadd( -60.4488, 117.529, -43.8807, 0.12 ) }
    dend_1 { pt3dadd( -60.5974, 117.988, -44.0715, 0.36 ) }
    dend_1 { pt3dadd( -60.7336, 118.419, -44.2336, 0.12 ) }
    dend_1 { pt3dadd( -60.9458, 119.103, -44.456, 0.12 ) }
    dend_1 { pt3dadd( -61.0939, 119.578, -44.5924, 0.48 ) }
    dend_1 { pt3dadd( -61.6338, 121.326, -45.0256, 0.24 ) }
    dend_1 { pt3dadd( -61.9614, 122.367, -45.2897, 0.24 ) }
    dend_1 { pt3dadd( -62.4814, 124.024, -45.6903, 0.24 ) }
    dend_1 { pt3dadd( -62.9861, 125.645, -46.0398, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_1 { pt3dadd( -63.1055, 126.016, -46.1133, 0.24 ) }
    dend_1 { pt3dadd( -63.2621, 126.491, -46.1909, 0.48 ) }
    dend_1 { pt3dadd( -63.492, 127.163, -46.2655, 0.12 ) }
    dend_1 { pt3dadd( -63.7698, 127.853, -46.3642, 0.12 ) }
    dend_1 { pt3dadd( -63.9862, 128.314, -46.4381, 0.12 ) }
    dend_1 { pt3dadd( -64.2401, 128.771, -46.5085, 0.48 ) }
    dend_1 { pt3dadd( -64.4364, 129.097, -46.5551, 0.72 ) }
    dend_1 { pt3dadd( -64.946, 129.886, -46.651, 0.12 ) }
    dend_1 { pt3dadd( -65.8733, 131.257, -46.7799, 0.12 ) }
    dend_1 { pt3dadd( -66.638, 132.343, -46.9333, 0.12 ) }
    dend_1 { pt3dadd( -67.0903, 132.985, -47.0418, 0.12 ) }
    dend_1 { pt3dadd( -67.2605, 133.233, -47.0871, 0.84 ) }
    dend_1 { pt3dadd( -67.6014, 133.746, -47.1866, 0.96 ) }
    dend_1 { pt3dadd( -68.1259, 134.576, -47.3461, 0.72 ) }
    dend_1 { pt3dadd( -68.693, 135.541, -47.5462, 0.12 ) }
    dend_1 { pt3dadd( -69.4062, 136.765, -47.8024, 0.12 ) }
    dend_1 { pt3dadd( -69.7336, 137.327, -47.9566, 0.36 ) }
    dend_1 { pt3dadd( -70.2781, 138.267, -48.2471, 0.12 ) }
    dend_1 { pt3dadd( -70.7342, 139.104, -48.5218, 0.12 ) }
    dend_1 { pt3dadd( -70.9729, 139.582, -48.6775, 0.12 ) }
    dend_1 { pt3dadd( -71.1841, 140.029, -48.8132, 0.72 ) }
    dend_1 { pt3dadd( -71.8978, 141.525, -49.3078, 0.12 ) }
    dend_1 { pt3dadd( -72.3867, 142.518, -49.7109, 0.12 ) }
    dend_1 { pt3dadd( -72.7976, 143.333, -50.0746, 0.12 ) }
    dend_1 { pt3dadd( -73.0043, 143.747, -50.2667, 0.12 ) }
    dend_1 { pt3dadd( -73.2432, 144.251, -50.536, 0.12 ) }
    dend_1 { pt3dadd( -73.5419, 144.926, -50.918, 0.36 ) }
    dend_1 { pt3dadd( -74.0026, 145.949, -51.493, 0.12 ) }
    dend_1 { pt3dadd( -74.3753, 146.7, -52.0158, 0.12 ) }
    dend_1 { pt3dadd( -74.5233, 146.97, -52.2202, 0.48 ) }
    dend_1 { pt3dadd( -75.07, 148.086, -52.9492, 0.24 ) }
    dend_1 { pt3dadd( -75.1092, 148.187, -53.0087, 0.12 ) }
    dend_1 { pt3dadd( -75.2599, 148.655, -53.2676, 0.12 ) }
    dend_1 { pt3dadd( -75.3962, 149.125, -53.4677, 0.12 ) }
    dend_1 { pt3dadd( -75.5332, 149.592, -53.6549, 0.12 ) }
    dend_1 { pt3dadd( -75.8858, 150.843, -54.0892, 0.12 ) }
    dend_1 { pt3dadd( -76.0621, 151.539, -54.3501, 0.36 ) }
    dend_1 { pt3dadd( -76.1931, 152.189, -54.6364, 0.12 ) }
    dend_1 { pt3dadd( -76.4403, 153.554, -55.2284, 0.12 ) }
    dend_1 { pt3dadd( -76.5145, 153.964, -55.3844, 0.6 ) }
    dend_1 { pt3dadd( -76.6013, 154.384, -55.5257, 0.6 ) }
    dend_1 { pt3dadd( -77.0042, 155.94, -55.9929, 0.12 ) }
    dend_1 { pt3dadd( -77.2429, 156.729, -56.2522, 0.12 ) }
    dend_1 { pt3dadd( -77.9463, 158.779, -56.9724, 0.12 ) }
    dend_1 { pt3dadd( -78.5215, 160.259, -57.5353, 0.12 ) }
    dend_1 { pt3dadd( -78.7813, 160.864, -57.7624, 0.12 ) }
    dend_1 { pt3dadd( -79.009, 161.312, -57.9228, 0.84 ) }
    dend_1 { pt3dadd( -80.0365, 163.082, -58.5838, 0.12 ) }
    dend_1 { pt3dadd( -80.3994, 163.633, -58.8482, 0.12 ) }
    dend_1 { pt3dadd( -80.8173, 164.242, -59.1988, 0.12 ) }
    dend_1 { pt3dadd( -81.1722, 164.766, -59.4921, 0.12 ) }
    dend_1 { pt3dadd( -81.5664, 165.379, -59.7746, 0.48 ) }
    dend_1 { pt3dadd( -82.2191, 166.457, -60.1328, 0.12 ) }
    dend_1 { pt3dadd( -82.6223, 167.168, -60.2443, 0.12 ) }
    dend_1 { pt3dadd( -83.2158, 168.251, -60.3654, 0.12 ) }
    dend_1 { pt3dadd( -83.6822, 169.102, -60.4261, 0.12 ) }
    dend_1 { pt3dadd( -84.1858, 170.022, -60.4577, 0.48 ) }
    dend_1 { pt3dadd( -84.4352, 170.488, -60.4571, 0.12 ) }
    dend_1 { pt3dadd( -85.6072, 172.618, -60.3357, 0.12 ) }
    dend_1 { pt3dadd( -86.085, 173.453, -60.2842, 0.12 ) }
    dend_1 { pt3dadd( -86.6353, 174.359, -60.2247, 0.12 ) }
    dend_1 { pt3dadd( -86.9035, 174.813, -60.1963, 0.6 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 62/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.56637, 35.9502, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -12.2185, 50.4988, -0.00167934, 0.12 ) }
    axon_1 { pt3dadd( -15.8707, 65.0474, -0.00167934, 0.12 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 65/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 0.160202, 23.5335, -3.15364, 0.96 ) }
    apic_3 { pt3dadd( -0.0694448, 23.898, -3.64127, 0.96 ) }
    apic_3 { pt3dadd( -0.356129, 24.3328, -4.1146, 0.96 ) }
    apic_3 { pt3dadd( -0.65009, 24.7484, -4.46356, 0.6 ) }
    apic_3 { pt3dadd( -2.22727, 26.9168, -6.03404, 0.72 ) }
    apic_3 { pt3dadd( -2.57095, 27.393, -6.34032, 0.12 ) }
    apic_3 { pt3dadd( -3.01918, 28.0395, -6.69814, 0.12 ) }
    apic_3 { pt3dadd( -3.50014, 28.7824, -7.081, 0.24 ) }
    apic_3 { pt3dadd( -4.1792, 29.8998, -7.56609, 0.6 ) }
    apic_3 { pt3dadd( -4.80042, 30.9787, -7.92394, 0.6 ) }
    apic_3 { pt3dadd( -5.11273, 31.5433, -8.06183, 0.12 ) }
    apic_3 { pt3dadd( -5.63937, 32.5481, -8.35818, 0.12 ) }
    apic_3 { pt3dadd( -6.11323, 33.5041, -8.67956, 0.12 ) }
    apic_3 { pt3dadd( -6.4773, 34.2634, -8.98927, 0.48 ) }
    apic_3 { pt3dadd( -6.65611, 34.6361, -9.16018, 0.48 ) }
    apic_3 { pt3dadd( -7.17446, 35.5905, -9.70542, 0.12 ) }
    apic_3 { pt3dadd( -7.55703, 36.1863, -10.112, 0.12 ) }
    apic_3 { pt3dadd( -7.8656, 36.6001, -10.4572, 0.6 ) }
    apic_3 { pt3dadd( -8.39255, 37.2354, -11.0187, 0.12 ) }
    apic_3 { pt3dadd( -8.80601, 37.7003, -11.4913, 0.12 ) }
    apic_3 { pt3dadd( -9.71963, 38.7016, -12.5338, 0.12 ) }
    apic_3 { pt3dadd( -10.1582, 39.1623, -12.9872, 0.12 ) }
    apic_3 { pt3dadd( -10.5358, 39.5379, -13.3601, 0.12 ) }
    apic_3 { pt3dadd( -10.9074, 39.9015, -13.6893, 0.96 ) }
    apic_3 { pt3dadd( -11.7664, 40.7257, -14.3194, 0.12 ) }
    apic_3 { pt3dadd( -12.0951, 41.0403, -14.5671, 0.12 ) }
    apic_3 { pt3dadd( -12.6773, 41.5883, -14.9444, 0.12 ) }
    apic_3 { pt3dadd( -13.0899, 41.9543, -15.1918, 0.96 ) }
    apic_3 { pt3dadd( -13.5738, 42.3656, -15.4622, 1.08 ) }
    apic_3 { pt3dadd( -13.7688, 42.5238, -15.5684, 1.08 ) }
    apic_3 { pt3dadd( -15.1229, 43.6027, -16.2655, 0.24 ) }
    apic_3 { pt3dadd( -15.8307, 44.1714, -16.6639, 0.12 ) }
    apic_3 { pt3dadd( -16.5974, 44.7994, -17.1181, 0.12 ) }
    apic_3 { pt3dadd( -16.9847, 45.1178, -17.341, 0.72 ) }
    apic_3 { pt3dadd( -17.2945, 45.3795, -17.5122, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_3 { pt3dadd( -17.9707, 45.9956, -17.8335, 0.36 ) }
    apic_3 { pt3dadd( -18.3092, 46.3355, -17.9431, 0.12 ) }
    apic_3 { pt3dadd( -18.6462, 46.709, -18.0526, 0.12 ) }
    apic_3 { pt3dadd( -18.9269, 47.0441, -18.1334, 0.48 ) }
    apic_3 { pt3dadd( -19.1966, 47.3724, -18.1901, 0.12 ) }
    apic_3 { pt3dadd( -19.7064, 48.0037, -18.301, 0.12 ) }
    apic_3 { pt3dadd( -19.9894, 48.3509, -18.3529, 0.12 ) }
    apic_3 { pt3dadd( -20.456, 48.8917, -18.4339, 0.84 ) }
    apic_3 { pt3dadd( -20.8642, 49.3446, -18.4864, 0.72 ) }
    apic_3 { pt3dadd( -21.1705, 49.6644, -18.5107, 0.12 ) }
    apic_3 { pt3dadd( -21.5078, 49.9963, -18.5153, 0.12 ) }
    apic_3 { pt3dadd( -22.0086, 50.4773, -18.5026, 0.12 ) }
    apic_3 { pt3dadd( -22.5198, 50.9835, -18.4727, 0.12 ) }
    apic_3 { pt3dadd( -22.9986, 51.4676, -18.4261, 0.48 ) }
    apic_3 { pt3dadd( -23.5479, 52.0267, -18.354, 0.6 ) }
    apic_3 { pt3dadd( -23.8812, 52.3758, -18.3035, 0.24 ) }
    apic_3 { pt3dadd( -24.358, 52.882, -18.2701, 0.24 ) }
    apic_3 { pt3dadd( -24.6595, 53.2074, -18.2849, 0.12 ) }
    apic_3 { pt3dadd( -25.0068, 53.5938, -18.341, 0.12 ) }
    apic_3 { pt3dadd( -25.2967, 53.9097, -18.4157, 0.6 ) }
    apic_3 { pt3dadd( -25.8346, 54.4627, -18.5699, 0.84 ) }
    apic_3 { pt3dadd( -26.7198, 55.3022, -18.8281, 0.12 ) }
    apic_3 { pt3dadd( -27.2225, 55.7468, -18.967, 0.12 ) }
    apic_3 { pt3dadd( -27.6829, 56.1324, -19.0818, 0.24 ) }
    apic_3 { pt3dadd( -27.9783, 56.3729, -19.1469, 0.12 ) }
    apic_3 { pt3dadd( -28.7405, 56.9741, -19.2799, 0.12 ) }
    apic_3 { pt3dadd( -29.1784, 57.3067, -19.3549, 0.48 ) }
    apic_3 { pt3dadd( -29.6619, 57.6803, -19.4219, 0.12 ) }
    apic_3 { pt3dadd( -30.0626, 58.0004, -19.4976, 0.12 ) }
    apic_3 { pt3dadd( -30.2608, 58.1695, -19.5434, 0.48 ) }
    apic_3 { pt3dadd( -30.6866, 58.5983, -19.6526, 0.48 ) }
    apic_3 { pt3dadd( -31.257, 59.2351, -19.8959, 0.12 ) }
    apic_3 { pt3dadd( -31.6382, 59.676, -20.0917, 0.12 ) }
    apic_3 { pt3dadd( -32.0961, 60.2227, -20.4044, 0.48 ) }
    apic_3 { pt3dadd( -32.301, 60.4834, -20.5621, 0.12 ) }
    apic_3 { pt3dadd( -32.9847, 61.4049, -21.0791, 0.12 ) }
    apic_3 { pt3dadd( -33.8141, 62.5824, -21.6845, 0.84 ) }
    apic_3 { pt3dadd( -34.1372, 63.0607, -21.9039, 0.84 ) }
    apic_3 { pt3dadd( -34.8004, 64.0683, -22.37, 0.12 ) }
    apic_3 { pt3dadd( -35.4118, 65.019, -22.8209, 0.12 ) }
    apic_3 { pt3dadd( -36.1625, 66.2014, -23.3593, 0.12 ) }
    apic_3 { pt3dadd( -36.3854, 66.5579, -23.5062, 0.6 ) }
    apic_3 { pt3dadd( -36.6628, 67.0117, -23.6812, 0.72 ) }
    apic_3 { pt3dadd( -37.006, 67.566, -23.942, 0.12 ) }
    apic_3 { pt3dadd( -37.5613, 68.4184, -24.3737, 0.12 ) }
    apic_3 { pt3dadd( -37.8711, 68.8731, -24.6503, 0.12 ) }
    apic_3 { pt3dadd( -38.1207, 69.2323, -24.92, 0.72 ) }
    apic_3 { pt3dadd( -38.7803, 70.1748, -25.6146, 0.72 ) }
    apic_3 { pt3dadd( -39.2351, 70.8217, -26.072, 0.12 ) }
    apic_3 { pt3dadd( -39.9538, 71.8844, -26.8341, 0.12 ) }
    apic_3 { pt3dadd( -40.1579, 72.2102, -27.0561, 0.48 ) }
    apic_3 { pt3dadd( -40.6438, 73.0678, -27.5762, 0.12 ) }
    apic_3 { pt3dadd( -41.3946, 74.4839, -28.3215, 0.12 ) }
    apic_3 { pt3dadd( -41.5078, 74.713, -28.429, 0.48 ) }
    apic_3 { pt3dadd( -41.9506, 75.7118, -28.8374, 0.12 ) }
    apic_3 { pt3dadd( -42.3113, 76.6272, -29.2142, 0.12 ) }
    apic_3 { pt3dadd( -42.7379, 77.8072, -29.663, 0.12 ) }
    apic_3 { pt3dadd( -42.8228, 78.0564, -29.755, 0.48 ) }
    apic_3 { pt3dadd( -43.1042, 78.9483, -30.1039, 0.12 ) }
    apic_3 { pt3dadd( -43.78, 81.0313, -30.944, 0.12 ) }
    apic_3 { pt3dadd( -43.9516, 81.5434, -31.1408, 0.6 ) }
    apic_3 { pt3dadd( -44.0614, 81.8767, -31.2704, 0.72 ) }
    apic_3 { pt3dadd( -44.3311, 82.6757, -31.5662, 0.12 ) }
    apic_3 { pt3dadd( -44.6111, 83.4911, -31.8335, 0.24 ) }
    apic_3 { pt3dadd( -44.8408, 84.1212, -31.9985, 0.12 ) }
    apic_3 { pt3dadd( -45.1592, 84.9407, -32.2007, 0.12 ) }
    apic_3 { pt3dadd( -45.7334, 86.3725, -32.494, 0.12 ) }
    apic_3 { pt3dadd( -45.9307, 86.8577, -32.576, 0.48 ) }
    apic_3 { pt3dadd( -45.9769, 86.9735, -32.5871, 0.12 ) }
    apic_3 { pt3dadd( -46.2258, 87.5871, -32.6336, 0.12 ) }
    apic_3 { pt3dadd( -46.3286, 87.8474, -32.6336, 0.48 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 71/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 0.160202, 23.5335, -3.15364, 0.96 ) }
    apic_2 { pt3dadd( 0.11123, 24.533, -3.13351, 0.96 ) }
    apic_2 { pt3dadd( 0.07956, 25.1642, -3.122, 0.96 ) }
    apic_2 { pt3dadd( 0.0157931, 26.1698, -3.10524, 0.6 ) }
    apic_2 { pt3dadd( -0.0387906, 27.0484, -3.09187, 0.48 ) }
    apic_2 { pt3dadd( -0.120224, 28.4288, -3.07286, 0.48 ) }
    apic_2 { pt3dadd( -0.217321, 30.0724, -3.05273, 0.48 ) }
    apic_2 { pt3dadd( -0.253664, 30.6906, -3.03771, 0.96 ) }
    apic_2 { pt3dadd( -0.292669, 31.3673, -3.01288, 1.44 ) }
    apic_2 { pt3dadd( -0.337175, 32.1211, -2.97754, 1.08 ) }
    apic_2 { pt3dadd( -0.385972, 33.0001, -2.93, 0.84 ) }
    apic_2 { pt3dadd( -0.447924, 34.1266, -2.86292, 0.84 ) }
    apic_2 { pt3dadd( -0.475133, 34.8852, -2.81967, 0.36 ) }
    apic_2 { pt3dadd( -0.501674, 36.2643, -2.75249, 0.36 ) }
    apic_2 { pt3dadd( -0.503018, 36.7674, -2.72318, 0.72 ) }
    apic_2 { pt3dadd( -0.495724, 37.7627, -2.65999, 1.32 ) }
    apic_2 { pt3dadd( -0.4814, 38.2653, -2.628, 1.32 ) }
    apic_2 { pt3dadd( -0.431369, 39.2783, -2.57071, 0.6 ) }
    apic_2 { pt3dadd( -0.37102, 40.2807, -2.52802, 0.48 ) }
    apic_2 { pt3dadd( -0.314586, 41.1582, -2.48628, 0.6 ) }
    apic_2 { pt3dadd( -0.284997, 41.6659, -2.4614, 0.96 ) }
    apic_2 { pt3dadd( -0.243709, 42.4289, -2.40658, 0.84 ) }
    apic_2 { pt3dadd( -0.193232, 43.5466, -2.31005, 0.72 ) }
    apic_2 { pt3dadd( -0.164366, 44.413, -2.22551, 0.72 ) }
    apic_2 { pt3dadd( -0.145642, 45.0521, -2.16585, 1.08 ) }
    apic_2 { pt3dadd( -0.13468, 45.5442, -2.13135, 1.2 ) }
    apic_2 { pt3dadd( -0.119397, 46.7907, -2.02526, 0.6 ) }
    apic_2 { pt3dadd( -0.119249, 47.6582, -1.9453, 0.6 ) }
    apic_2 { pt3dadd( -0.123112, 48.0344, -1.91025, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_2 { pt3dadd( -0.138039, 48.664, -1.85846, 0.96 ) }
    apic_2 { pt3dadd( -0.163997, 49.3417, -1.82353, 0.84 ) }
    apic_2 { pt3dadd( -0.227996, 50.5504, -1.79672, 0.36 ) }
    apic_2 { pt3dadd( -0.325425, 51.9278, -1.80636, 0.36 ) }
    apic_2 { pt3dadd( -0.386968, 52.6811, -1.80312, 0.72 ) }
    apic_2 { pt3dadd( -0.46792, 53.5708, -1.78436, 1.08 ) }
    apic_2 { pt3dadd( -0.589541, 54.7339, -1.74513, 0.6 ) }
    apic_2 { pt3dadd( -0.700595, 55.7238, -1.70801, 0.48 ) }
    apic_2 { pt3dadd( -0.77883, 56.3607, -1.6897, 0.48 ) }
    apic_2 { pt3dadd( -0.916386, 57.4525, -1.64815, 1.2 ) }
    apic_2 { pt3dadd( -1.04861, 58.4712, -1.60057, 0.48 ) }
    apic_2 { pt3dadd( -1.22023, 59.7308, -1.52965, 0.48 ) }
    apic_2 { pt3dadd( -1.31055, 60.3805, -1.4752, 0.12 ) }
    apic_2 { pt3dadd( -1.44775, 61.3713, -1.38672, 0.12 ) }
    apic_2 { pt3dadd( -1.48889, 61.7442, -1.34463, 0.12 ) }
    apic_2 { pt3dadd( -1.51564, 62.1285, -1.29769, 0.96 ) }
    apic_2 { pt3dadd( -1.53829, 62.8863, -1.19066, 0.96 ) }
    apic_2 { pt3dadd( -1.5411, 63.89, -1.03203, 0.72 ) }
    apic_2 { pt3dadd( -1.53555, 64.3867, -0.951033, 0.84 ) }
    apic_2 { pt3dadd( -1.51057, 65.6633, -0.730346, 0.48 ) }
    apic_2 { pt3dadd( -1.47804, 66.9009, -0.530285, 0.48 ) }
    apic_2 { pt3dadd( -1.4474, 67.8865, -0.387191, 0.48 ) }
    apic_2 { pt3dadd( -1.42096, 68.7701, -0.281434, 1.08 ) }
    apic_2 { pt3dadd( -1.40505, 69.261, -0.235961, 1.32 ) }
    apic_2 { pt3dadd( -1.35308, 70.7236, -0.12125, 0.36 ) }
    apic_2 { pt3dadd( -1.29002, 72.3519, -0.0306298, 0.36 ) }
    apic_2 { pt3dadd( -1.24414, 73.3364, 0.0175017, 0.48 ) }
    apic_2 { pt3dadd( -1.14965, 74.9491, 0.0790487, 0.6 ) }
    apic_2 { pt3dadd( -1.08224, 75.9879, 0.10692, 0.72 ) }
    apic_2 { pt3dadd( -1.03279, 76.8668, 0.117282, 0.72 ) }
    apic_2 { pt3dadd( -1.0089, 77.5154, 0.114817, 0.72 ) }
    apic_2 { pt3dadd( -1.00094, 78.6492, 0.0979203, 0.36 ) }
    apic_2 { pt3dadd( -1.02623, 80.1555, 0.126657, 0.48 ) }
    apic_2 { pt3dadd( -1.09767, 82.0222, 0.213873, 0.48 ) }
    apic_2 { pt3dadd( -1.16263, 83.0488, 0.283192, 0.48 ) }
    apic_2 { pt3dadd( -1.30831, 84.808, 0.434714, 0.96 ) }
    apic_2 { pt3dadd( -1.51745, 86.9499, 0.671198, 0.48 ) }
    apic_2 { pt3dadd( -1.69215, 88.4813, 0.868754, 0.12 ) }
    apic_2 { pt3dadd( -1.77049, 89.1033, 0.957624, 0.12 ) }
    apic_2 { pt3dadd( -1.92759, 90.3516, 1.14606, 0.72 ) }
    apic_2 { pt3dadd( -1.97146, 90.732, 1.20748, 0.84 ) }
    apic_2 { pt3dadd( -2.05667, 91.5278, 1.33014, 0.48 ) }
    apic_2 { pt3dadd( -2.19572, 92.8998, 1.54687, 0.48 ) }
    apic_2 { pt3dadd( -2.30288, 94.134, 1.6986, 0.48 ) }
    apic_2 { pt3dadd( -2.34888, 94.746, 1.77772, 0.96 ) }
    apic_2 { pt3dadd( -2.407, 95.7023, 1.90694, 0.36 ) }
    apic_2 { pt3dadd( -2.48212, 97.0683, 2.08701, 0.36 ) }
    apic_2 { pt3dadd( -2.54311, 98.2657, 2.23629, 0.36 ) }
    apic_2 { pt3dadd( -2.59525, 99.5096, 2.39239, 0.36 ) }
    apic_2 { pt3dadd( -2.62306, 100.128, 2.46349, 0.84 ) }
    apic_2 { pt3dadd( -2.6412, 100.504, 2.50459, 0.84 ) }
    apic_2 { pt3dadd( -2.68111, 101.266, 2.57267, 0.36 ) }
    apic_2 { pt3dadd( -2.71565, 101.88, 2.63682, 0.12 ) }
    apic_2 { pt3dadd( -2.75266, 102.508, 2.66794, 0.96 ) }
    apic_2 { pt3dadd( -2.79964, 103.262, 2.69057, 1.32 ) }
    apic_2 { pt3dadd( -2.86733, 104.355, 2.76423, 0.36 ) }
    apic_2 { pt3dadd( -2.9403, 105.603, 2.876, 0.36 ) }
    apic_2 { pt3dadd( -3.01885, 107.064, 3.03023, 0.6 ) }
    apic_2 { pt3dadd( -3.08651, 108.502, 3.17958, 0.48 ) }
    apic_2 { pt3dadd( -3.12818, 109.493, 3.2772, 0.48 ) }
    apic_2 { pt3dadd( -3.1825, 110.955, 3.40525, 0.84 ) }
    apic_2 { pt3dadd( -3.21584, 111.709, 3.45488, 0.96 ) }
    apic_2 { pt3dadd( -3.23137, 111.96, 3.47086, 0.96 ) }
    apic_2 { pt3dadd( -3.28452, 112.583, 3.52528, 0.36 ) }
    apic_2 { pt3dadd( -3.34433, 113.216, 3.61038, 0.36 ) }
    apic_2 { pt3dadd( -3.40263, 113.842, 3.67123, 0.84 ) }
    apic_2 { pt3dadd( -3.46391, 114.635, 3.71329, 1.32 ) }
    apic_2 { pt3dadd( -3.4943, 115.14, 3.76481, 0.96 ) }
    apic_2 { pt3dadd( -3.52862, 116.195, 3.90795, 0.36 ) }
    apic_2 { pt3dadd( -3.53837, 117.551, 4.12733, 0.36 ) }
    apic_2 { pt3dadd( -3.51469, 118.411, 4.25748, 0.36 ) }
    apic_2 { pt3dadd( -3.46823, 119.158, 4.35698, 0.36 ) }
    apic_2 { pt3dadd( -3.3789, 120.077, 4.46129, 0.72 ) }
    apic_2 { pt3dadd( -3.30037, 120.736, 4.53894, 0.36 ) }
    apic_2 { pt3dadd( -3.17035, 121.728, 4.64499, 0.24 ) }
    apic_2 { pt3dadd( -3.0869, 122.351, 4.72086, 0.84 ) }
    apic_2 { pt3dadd( -3.00827, 122.987, 4.79911, 0.84 ) }
    apic_2 { pt3dadd( -2.95961, 123.506, 4.85351, 0.72 ) }
    apic_2 { pt3dadd( -2.90994, 124.328, 4.96139, 0.12 ) }
    apic_2 { pt3dadd( -2.87838, 125.318, 5.13809, 0.12 ) }
    apic_2 { pt3dadd( -2.86803, 126.044, 5.3017, 0.48 ) }
    apic_2 { pt3dadd( -2.86661, 126.413, 5.37807, 0.24 ) }
    apic_2 { pt3dadd( -2.87977, 127.892, 5.62302, 0.24 ) }
    apic_2 { pt3dadd( -2.89557, 128.909, 5.76673, 0.72 ) }
    apic_2 { pt3dadd( -2.90549, 129.534, 5.83496, 1.08 ) }
    apic_2 { pt3dadd( -2.92753, 130.571, 5.94351, 0.96 ) }
    apic_2 { pt3dadd( -2.95884, 131.677, 6.0688, 0.72 ) }
    apic_2 { pt3dadd( -2.98804, 132.562, 6.16802, 0.6 ) }
    apic_2 { pt3dadd( -3.0162, 133.362, 6.24576, 0.12 ) }
    apic_2 { pt3dadd( -3.05033, 134.113, 6.32594, 0.12 ) }
    apic_2 { pt3dadd( -3.09, 134.975, 6.48958, 0.12 ) }
    apic_2 { pt3dadd( -3.12298, 135.736, 6.68152, 0.48 ) }
    apic_2 { pt3dadd( -3.13894, 136.086, 6.78933, 0.12 ) }
    apic_2 { pt3dadd( -3.20478, 137.385, 7.21298, 0.12 ) }
    apic_2 { pt3dadd( -3.26747, 138.424, 7.52679, 0.6 ) }
    apic_2 { pt3dadd( -3.34348, 139.433, 7.8162, 0.12 ) }
    apic_2 { pt3dadd( -3.4332, 140.644, 8.09779, 0.12 ) }
    apic_2 { pt3dadd( -3.46149, 141.034, 8.16649, 0.12 ) }
    apic_2 { pt3dadd( -3.51123, 141.768, 8.27105, 0.6 ) }
    apic_2 { pt3dadd( -3.6137, 143.387, 8.44246, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_2 { pt3dadd( -3.66276, 144.291, 8.49991, 1.08 ) }
    apic_2 { pt3dadd( -3.73096, 145.825, 8.56169, 0.48 ) }
    apic_2 { pt3dadd( -3.75769, 146.823, 8.60662, 0.12 ) }
    apic_2 { pt3dadd( -3.77524, 148.492, 8.68315, 0.12 ) }
    apic_2 { pt3dadd( -3.76876, 149.111, 8.70964, 0.12 ) }
    apic_2 { pt3dadd( -3.73582, 150.236, 8.7534, 0.12 ) }
    apic_2 { pt3dadd( -3.70307, 151.031, 8.77549, 0.72 ) }
    apic_2 { pt3dadd( -3.68155, 151.556, 8.78476, 0.12 ) }
    apic_2 { pt3dadd( -3.64942, 152.311, 8.77856, 0.12 ) }
    apic_2 { pt3dadd( -3.58753, 153.815, 8.72743, 0.48 ) }
    apic_2 { pt3dadd( -3.54111, 155.103, 8.66335, 0.6 ) }
    apic_2 { pt3dadd( -3.51616, 155.984, 8.6079, 0.6 ) }
    apic_2 { pt3dadd( -3.50504, 156.613, 8.57531, 0.84 ) }
    apic_2 { pt3dadd( -3.50022, 157.484, 8.55317, 0.6 ) }
    apic_2 { pt3dadd( -3.50971, 158.482, 8.56211, 0.72 ) }
    apic_2 { pt3dadd( -3.53552, 159.271, 8.59436, 0.36 ) }
    apic_2 { pt3dadd( -3.59343, 160.387, 8.70141, 0.48 ) }
    apic_2 { pt3dadd( -3.69836, 161.797, 8.88291, 0.48 ) }
    apic_2 { pt3dadd( -3.80286, 163.221, 9.09314, 0.6 ) }
    apic_2 { pt3dadd( -3.89345, 164.342, 9.27714, 0.48 ) }
    apic_2 { pt3dadd( -3.94994, 164.971, 9.38832, 0.48 ) }
    apic_2 { pt3dadd( -4.06742, 166.282, 9.68882, 0.12 ) }
    apic_2 { pt3dadd( -4.13642, 167.085, 9.90009, 0.12 ) }
    apic_2 { pt3dadd( -4.22412, 168.157, 10.1884, 0.12 ) }
    apic_2 { pt3dadd( -4.25832, 168.593, 10.3037, 0.96 ) }
    apic_2 { pt3dadd( -4.31675, 169.211, 10.4604, 1.08 ) }
    apic_2 { pt3dadd( -4.4966, 170.763, 10.8155, 0.36 ) }
    apic_2 { pt3dadd( -4.58203, 171.373, 10.9357, 0.36 ) }
    apic_2 { pt3dadd( -4.81404, 172.838, 11.2105, 0.36 ) }
    apic_2 { pt3dadd( -4.98958, 173.723, 11.3551, 0.36 ) }
    apic_2 { pt3dadd( -5.18795, 174.645, 11.4689, 0.24 ) }
    apic_2 { pt3dadd( -5.34377, 175.306, 11.5143, 0.24 ) }
    apic_2 { pt3dadd( -5.47106, 175.803, 11.5145, 0.6 ) }
    apic_2 { pt3dadd( -5.57201, 176.166, 11.5139, 0.6 ) }
    apic_2 { pt3dadd( -5.78639, 176.923, 11.5374, 0.36 ) }
    apic_2 { pt3dadd( -6.04371, 177.843, 11.5876, 0.36 ) }
    apic_2 { pt3dadd( -6.33649, 178.927, 11.6656, 0.24 ) }
    apic_2 { pt3dadd( -6.74761, 180.535, 11.8056, 0.24 ) }
    apic_2 { pt3dadd( -7.01631, 181.675, 11.9129, 0.24 ) }
    apic_2 { pt3dadd( -7.20156, 182.548, 12.0036, 0.24 ) }
    apic_2 { pt3dadd( -7.26617, 182.928, 12.046, 0.6 ) }
    apic_2 { pt3dadd( -7.33162, 183.424, 12.1006, 0.6 ) }
    apic_2 { pt3dadd( -7.38487, 183.938, 12.1525, 0.6 ) }
    apic_2 { pt3dadd( -7.45224, 184.929, 12.2314, 0.36 ) }
    apic_2 { pt3dadd( -7.47098, 185.21, 12.2431, 0.12 ) }
    apic_2 { pt3dadd( -7.56381, 186.203, 12.2431, 0.12 ) }
    apic_2 { pt3dadd( -7.65773, 186.983, 12.2303, 0.12 ) }
    apic_2 { pt3dadd( -7.73927, 187.496, 12.2143, 0.36 ) }
    apic_2 { pt3dadd( -7.79347, 187.771, 12.2035, 0.12 ) }
    apic_2 { pt3dadd( -8.00589, 188.693, 12.1577, 0.12 ) }
    apic_2 { pt3dadd( -8.11871, 189.182, 12.131, 0.48 ) }
    apic_2 { pt3dadd( -8.20015, 189.588, 12.1074, 0.12 ) }
    apic_2 { pt3dadd( -8.26781, 190.094, 12.079, 0.12 ) }
    apic_2 { pt3dadd( -8.32217, 191.099, 12.0274, 0.12 ) }
    apic_2 { pt3dadd( -8.34041, 191.898, 11.9884, 0.72 ) }
    apic_2 { pt3dadd( -8.32623, 192.529, 11.9613, 0.84 ) }
    apic_2 { pt3dadd( -8.29874, 193.092, 11.9447, 0.36 ) }
    apic_2 { pt3dadd( -8.22602, 193.878, 11.9421, 0.36 ) }
    apic_2 { pt3dadd( -8.13539, 194.434, 11.9381, 0.48 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 59/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -2.07511, -24.3165, 8.56244, 0.6 ) }
    dend_33 { pt3dadd( -2.99653, -25.2659, 7.64509, 0.6 ) }
    dend_33 { pt3dadd( -3.34121, -25.6297, 7.29704, 0.48 ) }
    dend_33 { pt3dadd( -3.73012, -26.054, 6.92058, 0.48 ) }
    dend_33 { pt3dadd( -4.13632, -26.5252, 6.53891, 0.48 ) }
    dend_33 { pt3dadd( -4.42691, -26.875, 6.29095, 0.48 ) }
    dend_33 { pt3dadd( -4.92509, -27.4977, 5.90137, 0.6 ) }
    dend_33 { pt3dadd( -5.32467, -28.0552, 5.64952, 0.72 ) }
    dend_33 { pt3dadd( -5.87788, -28.8457, 5.29159, 0.84 ) }
    dend_33 { pt3dadd( -6.33689, -29.5285, 5.00137, 0.84 ) }
    dend_33 { pt3dadd( -6.66597, -30.0373, 4.83102, 1.08 ) }
    dend_33 { pt3dadd( -6.9455, -30.5016, 4.71133, 1.32 ) }
    dend_33 { pt3dadd( -7.23371, -31.0318, 4.61105, 1.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 72/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -2.07511, -24.3165, 8.56244, 0.96 ) }
    dend_32 { pt3dadd( -2.03576, -25.6277, 9.25176, 0.96 ) }
    dend_32 { pt3dadd( -1.9979, -26.1998, 9.50024, 0.6 ) }
    dend_32 { pt3dadd( -1.90326, -27.1054, 9.90826, 0.48 ) }
    dend_32 { pt3dadd( -1.7988, -27.9265, 10.2688, 0.12 ) }
    dend_32 { pt3dadd( -1.66979, -28.8299, 10.6687, 0.12 ) }
    dend_32 { pt3dadd( -1.60894, -29.24, 10.8472, 0.72 ) }
    dend_32 { pt3dadd( -1.48883, -30.194, 11.1938, 0.72 ) }
    dend_32 { pt3dadd( -1.37486, -31.166, 11.5937, 0.6 ) }
    dend_32 { pt3dadd( -1.32406, -31.6304, 11.8095, 0.6 ) }
    dend_32 { pt3dadd( -1.27374, -32.328, 12.1364, 0.36 ) }
    dend_32 { pt3dadd( -1.25481, -32.6528, 12.299, 0.36 ) }
    dend_32 { pt3dadd( -1.22049, -33.3605, 12.6463, 0.36 ) }
    dend_32 { pt3dadd( -1.1547, -34.6377, 13.2846, 0.36 ) }
    dend_32 { pt3dadd( -1.10727, -35.3423, 13.6052, 0.6 ) }
    dend_32 { pt3dadd( -1.04379, -35.9069, 13.8685, 0.6 ) }
    dend_32 { pt3dadd( -0.941383, -36.4696, 14.1181, 0.72 ) }
    dend_32 { pt3dadd( -0.831296, -36.9203, 14.3155, 0.84 ) }
    dend_32 { pt3dadd( -0.570792, -37.7968, 14.6689, 0.6 ) }
    dend_32 { pt3dadd( -0.40465, -38.3649, 14.8743, 0.48 ) }
    dend_32 { pt3dadd( -0.300444, -38.86, 15.0751, 0.36 ) }
    dend_32 { pt3dadd( -0.239013, -39.5068, 15.4014, 0.36 ) }
    dend_32 { pt3dadd( -0.239356, -39.8194, 15.5671, 0.6 ) }
    dend_32 { pt3dadd( -0.267563, -40.3051, 15.8196, 0.72 ) }
    dend_32 { pt3dadd( -0.336376, -41.1799, 16.226, 0.72 ) }
    dend_32 { pt3dadd( -0.350056, -41.9177, 16.6283, 0.48 ) }
    dend_32 { pt3dadd( -0.315232, -42.6335, 17.0263, 0.6 ) }
    dend_32 { pt3dadd( -0.261031, -43.2055, 17.3532, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_32 { pt3dadd( -0.202164, -43.6557, 17.593, 1.08 ) }
    dend_32 { pt3dadd( -0.0787005, -44.3952, 17.9628, 1.32 ) }
    dend_32 { pt3dadd( 0.289272, -46.3139, 18.8038, 0.72 ) }
    dend_32 { pt3dadd( 0.418234, -46.9748, 19.0586, 0.36 ) }
    dend_32 { pt3dadd( 0.680122, -48.4074, 19.5617, 0.48 ) }
    dend_32 { pt3dadd( 0.820989, -49.3537, 19.884, 0.6 ) }
    dend_32 { pt3dadd( 0.862315, -49.7212, 19.9966, 0.84 ) }
    dend_32 { pt3dadd( 0.92275, -50.5809, 20.2112, 0.84 ) }
    dend_32 { pt3dadd( 0.952017, -51.5718, 20.3709, 0.72 ) }
    dend_32 { pt3dadd( 0.981469, -52.4948, 20.4885, 0.48 ) }
    dend_32 { pt3dadd( 1.05006, -53.4799, 20.5957, 0.36 ) }
    dend_32 { pt3dadd( 1.11077, -54.0962, 20.6642, 0.36 ) }
    dend_32 { pt3dadd( 1.20554, -54.8412, 20.7419, 0.6 ) }
    dend_32 { pt3dadd( 1.34812, -55.7049, 20.8216, 0.6 ) }
    dend_32 { pt3dadd( 1.54524, -56.5645, 20.915, 0.6 ) }
    dend_32 { pt3dadd( 1.81437, -57.456, 21.0144, 0.6 ) }
    dend_32 { pt3dadd( 2.18178, -58.4027, 21.1248, 0.48 ) }
    dend_32 { pt3dadd( 2.51328, -59.1615, 21.2509, 0.48 ) }
    dend_32 { pt3dadd( 2.82791, -59.8557, 21.4109, 0.6 ) }
    dend_32 { pt3dadd( 3.24762, -60.8146, 21.7015, 0.36 ) }
    dend_32 { pt3dadd( 3.46053, -61.3626, 21.8823, 0.36 ) }
    dend_32 { pt3dadd( 3.82878, -62.4357, 22.2194, 0.36 ) }
    dend_32 { pt3dadd( 4.19731, -63.6477, 22.5987, 0.48 ) }
    dend_32 { pt3dadd( 4.39682, -64.4084, 22.8176, 0.48 ) }
    dend_32 { pt3dadd( 4.61876, -65.4159, 23.0634, 0.48 ) }
    dend_32 { pt3dadd( 4.79061, -66.4167, 23.3029, 0.48 ) }
    dend_32 { pt3dadd( 4.89267, -67.14, 23.4862, 0.72 ) }
    dend_32 { pt3dadd( 4.96594, -67.748, 23.6698, 0.72 ) }
    dend_32 { pt3dadd( 5.02393, -68.1806, 23.8087, 0.72 ) }
    dend_32 { pt3dadd( 5.14512, -68.8822, 24.0481, 0.84 ) }
    dend_32 { pt3dadd( 5.36701, -70.0632, 24.5036, 0.12 ) }
    dend_32 { pt3dadd( 5.5173, -70.8328, 24.8823, 0.12 ) }
    dend_32 { pt3dadd( 5.71131, -71.811, 25.4439, 0.48 ) }
    dend_32 { pt3dadd( 5.79502, -72.2305, 25.7178, 0.6 ) }
    dend_32 { pt3dadd( 5.91176, -72.8121, 26.1369, 0.6 ) }
    dend_32 { pt3dadd( 6.05653, -83.1009, 28.1271, 0.6 ) }
    dend_32 { pt3dadd( 6.04569, -93.2538, 30.6769, 0.6 ) }
    dend_32 { pt3dadd( 4.56897, -102.765, 34.6477, 0.6 ) }
    dend_32 { pt3dadd( 4.6369, -111.81, 39.726, 0.6 ) }
    dend_32 { pt3dadd( 6.06926, -121.847, 42.2875, 0.6 ) }
    dend_32 { pt3dadd( 7.70618, -132.158, 43.2293, 0.6 ) }
    dend_32 { pt3dadd( 11.3145, -141.939, 43.6965, 0.6 ) }
    dend_32 { pt3dadd( 15.1043, -151.574, 44.8924, 0.6 ) }
    dend_32 { pt3dadd( 19.4296, -161.024, 45.4258, 0.6 ) }
    dend_32 { pt3dadd( 24.6347, -169.835, 47.0056, 0.6 ) }
    dend_32 { pt3dadd( 28.5139, -178.941, 50.1265, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 46/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 40.5911, 13.2368, 35.8167, 0.48 ) }
    dend_28 { pt3dadd( 47.3919, 18.1856, 41.4324, 0.48 ) }
    dend_28 { pt3dadd( 53.0398, 24.3091, 47.2711, 0.48 ) }
    dend_28 { pt3dadd( 58.6224, 30.466, 53.1405, 0.48 ) }
    dend_28 { pt3dadd( 65.2053, 35.7392, 58.748, 0.48 ) }
    dend_28 { pt3dadd( 71.3001, 40.5023, 65.25, 0.48 ) }
    dend_28 { pt3dadd( 76.8431, 44.1767, 72.8017, 0.48 ) }
    dend_28 { pt3dadd( 81.2012, 48.5103, 80.8, 0.48 ) }
    dend_28 { pt3dadd( 86.9748, 51.724, 88.3696, 0.48 ) }
    dend_28 { pt3dadd( 92.0225, 53.8746, 96.7557, 0.48 ) }
    dend_28 { pt3dadd( 97.7349, 57.2752, 104.298, 0.48 ) }
    dend_28 { pt3dadd( 104.524, 60.5636, 110.937, 0.48 ) }
    dend_28 { pt3dadd( 111.966, 64.3376, 116.569, 0.48 ) }
    dend_28 { pt3dadd( 118.574, 67.0174, 123.627, 0.48 ) }
    dend_28 { pt3dadd( 125.586, 69.4636, 130.365, 0.48 ) }
    dend_28 { pt3dadd( 133.708, 72.102, 135.629, 0.48 ) }
    dend_28 { pt3dadd( 142.683, 74.6283, 139.325, 0.48 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 40.5911, 13.2368, 35.8167, 0.36 ) }
    dend_27 { pt3dadd( 48.4115, 17.4629, 40.5751, 0.48 ) }
    dend_27 { pt3dadd( 56.7976, 22.3105, 43.4663, 0.48 ) }
    dend_27 { pt3dadd( 64.123, 27.8176, 47.8055, 0.48 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -3.09219, -15.3206, -26.3206, 0.48 ) }
    dend_21 { pt3dadd( -5.86366, -15.2406, -29.9583, 0.48 ) }
    dend_21 { pt3dadd( -6.60865, -15.1888, -30.8978, 0.48 ) }
    dend_21 { pt3dadd( -6.80102, -15.1778, -31.1091, 0.12 ) }
    dend_21 { pt3dadd( -7.36851, -15.1446, -31.7276, 0.12 ) }
    dend_21 { pt3dadd( -8.27946, -15.1049, -32.6955, 0.72 ) }
    dend_21 { pt3dadd( -8.94768, -15.0834, -33.425, 0.84 ) }
    dend_21 { pt3dadd( -9.92863, -15.0697, -34.3541, 0.12 ) }
    dend_21 { pt3dadd( -11.1091, -15.0645, -35.5468, 0.12 ) }
    dend_21 { pt3dadd( -12.1233, -15.0622, -36.566, 0.84 ) }
    dend_21 { pt3dadd( -12.4332, -15.0727, -36.8678, 0.84 ) }
    dend_21 { pt3dadd( -13.6046, -15.1723, -37.9627, 0.12 ) }
    dend_21 { pt3dadd( -13.8889, -15.2051, -38.2218, 0.12 ) }
    dend_21 { pt3dadd( -14.3694, -15.2684, -38.5927, 0.12 ) }
    dend_21 { pt3dadd( -14.6711, -15.3015, -38.8207, 1.08 ) }
    dend_21 { pt3dadd( -15.3216, -15.3648, -39.2251, 0.84 ) }
    dend_21 { pt3dadd( -16.4577, -15.4536, -39.8674, 0.12 ) }
    dend_21 { pt3dadd( -17.358, -15.4931, -40.3566, 0.12 ) }
    dend_21 { pt3dadd( -17.7367, -15.4806, -40.6747, 0.48 ) }
    dend_21 { pt3dadd( -18.2896, -15.4197, -41.2842, 0.12 ) }
    dend_21 { pt3dadd( -18.8208, -15.326, -41.9398, 0.12 ) }
    dend_21 { pt3dadd( -19.0779, -15.2448, -42.3554, 0.84 ) }
    dend_21 { pt3dadd( -19.5835, -15.0569, -43.27, 1.08 ) }
    dend_21 { pt3dadd( -20.7909, -14.6133, -45.6721, 0.6 ) }
    dend_21 { pt3dadd( -21.1518, -14.4823, -46.4075, 0.84 ) }
    dend_21 { pt3dadd( -21.3684, -14.4058, -46.8572, 0.84 ) }
    dend_21 { pt3dadd( -22.6297, -14.0055, -49.4547, 0.12 ) }
    dend_21 { pt3dadd( -22.8651, -13.9478, -49.8864, 0.12 ) }
    dend_21 { pt3dadd( -23.1973, -13.9004, -50.384, 0.12 ) }
    dend_21 { pt3dadd( -23.4453, -13.8841, -50.6708, 0.48 ) }
    dend_21 { pt3dadd( -23.9603, -13.8751, -51.2283, 0.12 ) }
    dend_21 { pt3dadd( -25.1705, -13.901, -52.4279, 0.12 ) }
    dend_21 { pt3dadd( -25.7302, -13.9305, -52.8799, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -26.4935, -13.935, -53.5125, 0.84 ) }
    dend_21 { pt3dadd( -26.7713, -13.9267, -53.7413, 0.84 ) }
    dend_21 { pt3dadd( -27.8457, -13.8917, -54.5944, 0.12 ) }
    dend_21 { pt3dadd( -28.24, -13.8788, -54.8929, 0.12 ) }
    dend_21 { pt3dadd( -28.6286, -13.8631, -55.1743, 0.12 ) }
    dend_21 { pt3dadd( -29.9545, -13.8073, -56.076, 0.12 ) }
    dend_21 { pt3dadd( -30.1553, -13.7943, -56.2069, 0.72 ) }
    dend_21 { pt3dadd( -31.0517, -13.7161, -56.7731, 0.72 ) }
    dend_21 { pt3dadd( -31.8443, -13.6305, -57.2667, 0.12 ) }
    dend_21 { pt3dadd( -32.3277, -13.5711, -57.6175, 0.12 ) }
    dend_21 { pt3dadd( -32.9847, -13.4851, -58.1345, 0.48 ) }
    dend_21 { pt3dadd( -33.8775, -13.3596, -58.8752, 0.12 ) }
    dend_21 { pt3dadd( -34.1499, -13.3172, -59.1071, 0.12 ) }
    dend_21 { pt3dadd( -34.8235, -13.1717, -59.7999, 0.72 ) }
    dend_21 { pt3dadd( -35.6669, -12.9596, -60.76, 0.12 ) }
    dend_21 { pt3dadd( -35.8997, -12.9008, -61.0665, 0.12 ) }
    dend_21 { pt3dadd( -35.9646, -12.8865, -61.1666, 0.6 ) }
    dend_21 { pt3dadd( -36.2304, -12.8466, -61.5822, 0.6 ) }
    dend_21 { pt3dadd( -37.4023, -12.7153, -63.3725, 0.48 ) }
    dend_21 { pt3dadd( -37.7439, -12.6891, -63.8795, 0.48 ) }
    dend_21 { pt3dadd( -38.7094, -12.6808, -65.2965, 0.72 ) }
    dend_21 { pt3dadd( -39.6065, -12.7342, -66.5442, 0.12 ) }
    dend_21 { pt3dadd( -39.9302, -12.7801, -66.9644, 0.12 ) }
    dend_21 { pt3dadd( -40.3103, -12.8658, -67.4268, 0.48 ) }
    dend_21 { pt3dadd( -41.3488, -13.2249, -68.5027, 0.12 ) }
    dend_21 { pt3dadd( -42.2686, -13.6434, -69.4699, 0.12 ) }
    dend_21 { pt3dadd( -42.884, -13.997, -70.0699, 0.12 ) }
    dend_21 { pt3dadd( -43.3119, -14.2935, -70.4632, 0.12 ) }
    dend_21 { pt3dadd( -43.7395, -14.6582, -70.9149, 0.6 ) }
    dend_21 { pt3dadd( -44.1124, -15.0155, -71.3687, 0.6 ) }
    dend_21 { pt3dadd( -44.8857, -15.8154, -72.3342, 0.12 ) }
    dend_21 { pt3dadd( -45.1619, -16.0994, -72.6934, 0.12 ) }
    dend_21 { pt3dadd( -45.4748, -16.3989, -73.1186, 0.12 ) }
    dend_21 { pt3dadd( -46.3505, -17.1671, -74.2103, 0.12 ) }
    dend_21 { pt3dadd( -47.082, -17.7553, -75.1396, 0.12 ) }
    dend_21 { pt3dadd( -47.3891, -17.9771, -75.5196, 0.12 ) }
    dend_21 { pt3dadd( -47.6636, -18.1487, -75.8113, 0.12 ) }
    dend_21 { pt3dadd( -48.0371, -18.3591, -76.1903, 0.6 ) }
    dend_21 { pt3dadd( -48.7153, -18.7157, -76.882, 0.6 ) }
    dend_21 { pt3dadd( -50.2986, -19.4982, -78.1932, 0.12 ) }
    dend_21 { pt3dadd( -50.6938, -19.6997, -78.5014, 0.12 ) }
    dend_21 { pt3dadd( -51.3289, -20.0101, -79.0393, 0.12 ) }
    dend_21 { pt3dadd( -51.7529, -20.1965, -79.3824, 0.36 ) }
    dend_21 { pt3dadd( -52.874, -20.6227, -80.2123, 0.12 ) }
    dend_21 { pt3dadd( -54.1011, -21.0042, -81.0612, 0.12 ) }
    dend_21 { pt3dadd( -55.0758, -21.3046, -81.6098, 0.36 ) }
    dend_21 { pt3dadd( -55.9535, -21.5696, -82.0976, 0.12 ) }
    dend_21 { pt3dadd( -57.0899, -21.8926, -82.7448, 0.12 ) }
    dend_21 { pt3dadd( -57.5205, -21.9953, -82.9681, 0.48 ) }
    dend_21 { pt3dadd( -58.2668, -22.1625, -83.3762, 0.12 ) }
    dend_21 { pt3dadd( -58.9827, -22.3278, -83.8361, 0.12 ) }
    dend_21 { pt3dadd( -59.3913, -22.4224, -84.118, 0.36 ) }
    dend_21 { pt3dadd( -60.0637, -22.5764, -84.7341, 0.12 ) }
    dend_21 { pt3dadd( -60.5538, -22.6316, -85.4553, 0.12 ) }
    dend_21 { pt3dadd( -61.1321, -22.615, -86.5704, 0.6 ) }
    dend_21 { pt3dadd( -61.2304, -22.5868, -86.8186, 0.6 ) }
    dend_21 { pt3dadd( -61.6533, -22.3326, -88.1336, 0.12 ) }
    dend_21 { pt3dadd( -62.0762, -21.8681, -89.8892, 0.48 ) }
    dend_21 { pt3dadd( -62.4678, -21.1308, -92.1594, 0.12 ) }
    dend_21 { pt3dadd( -62.5408, -20.8783, -92.79, 0.12 ) }
    dend_21 { pt3dadd( -62.64, -20.2545, -94.0866, 0.12 ) }
    dend_21 { pt3dadd( -62.652, -20.0436, -94.544, 0.6 ) }
    dend_21 { pt3dadd( -62.617, -19.2873, -96.2562, 0.48 ) }
    dend_21 { pt3dadd( -62.5395, -18.6772, -97.7944, 0.24 ) }
    dend_21 { pt3dadd( -62.5118, -18.4304, -98.6254, 0.24 ) }
    dend_21 { pt3dadd( -62.5318, -17.8635, -101.323, 0.84 ) }
    dend_21 { pt3dadd( -62.7267, -17.3767, -104.365, 0.48 ) }
    dend_21 { pt3dadd( -62.7859, -17.3304, -104.896, 0.48 ) }
    dend_21 { pt3dadd( -62.8756, -17.3254, -105.425, 0.6 ) }
    dend_21 { pt3dadd( -63.4677, -17.4958, -107.982, 0.6 ) }
    dend_21 { pt3dadd( -64.3124, -17.84, -111.125, 0.12 ) }
    dend_21 { pt3dadd( -64.8138, -18.0704, -112.606, 0.12 ) }
    dend_21 { pt3dadd( -65.7041, -18.4031, -114.738, 0.12 ) }
    dend_21 { pt3dadd( -66.0442, -18.5094, -115.527, 0.12 ) }
    dend_21 { pt3dadd( -66.4159, -18.6231, -116.374, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 75/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -3.09219, -15.3206, -26.3206, 0.12 ) }
    dend_20 { pt3dadd( -3.39045, -15.0603, -26.3199, 0.12 ) }
    dend_20 { pt3dadd( -3.77251, -14.7071, -26.3105, 0.12 ) }
    dend_20 { pt3dadd( -4.37027, -14.0802, -26.5436, 0.12 ) }
    dend_20 { pt3dadd( -4.66376, -13.7025, -26.7347, 0.6 ) }
    dend_20 { pt3dadd( -4.97162, -13.2112, -27.0646, 0.84 ) }
    dend_20 { pt3dadd( -5.15363, -12.8906, -27.3112, 0.6 ) }
    dend_20 { pt3dadd( -5.43771, -12.3287, -27.7789, 0.6 ) }
    dend_20 { pt3dadd( -6.10402, -10.7666, -29.3324, 0.12 ) }
    dend_20 { pt3dadd( -6.32825, -10.1374, -30.0448, 0.12 ) }
    dend_20 { pt3dadd( -6.66461, -9.18427, -31.1491, 0.72 ) }
    dend_20 { pt3dadd( -6.91095, -8.50798, -31.9283, 0.72 ) }
    dend_20 { pt3dadd( -7.04377, -8.17283, -32.302, 0.72 ) }
    dend_20 { pt3dadd( -7.50344, -7.04449, -33.5412, 0.72 ) }
    dend_20 { pt3dadd( -7.94474, -6.08624, -34.5504, 0.12 ) }
    dend_20 { pt3dadd( -8.33392, -5.30954, -35.4003, 0.12 ) }
    dend_20 { pt3dadd( -8.54452, -4.90809, -35.8119, 0.12 ) }
    dend_20 { pt3dadd( -8.7707, -4.47042, -36.22, 0.72 ) }
    dend_20 { pt3dadd( -9.32839, -3.44008, -37.1294, 0.84 ) }
    dend_20 { pt3dadd( -9.94189, -2.42078, -37.9262, 0.12 ) }
    dend_20 { pt3dadd( -10.1812, -2.04871, -38.2356, 0.12 ) }
    dend_20 { pt3dadd( -10.8375, -1.04333, -39.1228, 0.12 ) }
    dend_20 { pt3dadd( -11.3365, -0.305397, -39.7473, 0.12 ) }
    dend_20 { pt3dadd( -11.6862, 0.249741, -40.2067, 0.6 ) }
    dend_20 { pt3dadd( -12.0005, 0.762022, -40.5884, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_20 { pt3dadd( -12.6082, 1.79948, -41.3314, 0.12 ) }
    dend_20 { pt3dadd( -12.8328, 2.20175, -41.6327, 0.12 ) }
    dend_20 { pt3dadd( -13.1756, 2.83221, -42.1124, 0.12 ) }
    dend_20 { pt3dadd( -14.1587, 4.62522, -43.4721, 0.12 ) }
    dend_20 { pt3dadd( -14.4487, 5.16012, -43.907, 0.12 ) }
    dend_20 { pt3dadd( -14.6134, 5.47106, -44.1672, 0.48 ) }
    dend_20 { pt3dadd( -15.1969, 6.54122, -45.0325, 0.36 ) }
    dend_20 { pt3dadd( -15.3465, 6.79443, -45.2844, 0.36 ) }
    dend_20 { pt3dadd( -15.6155, 7.20969, -45.7192, 0.72 ) }
    dend_20 { pt3dadd( -16.5845, 8.5727, -47.1021, 0.12 ) }
    dend_20 { pt3dadd( -16.8762, 9.01429, -47.6086, 0.12 ) }
    dend_20 { pt3dadd( -17.086, 9.37591, -48.0529, 0.6 ) }
    dend_20 { pt3dadd( -17.8694, 10.8197, -49.9055, 0.12 ) }
    dend_20 { pt3dadd( -18.3808, 11.7753, -51.1496, 0.12 ) }
    dend_20 { pt3dadd( -18.5725, 12.1348, -51.6116, 0.96 ) }
    dend_20 { pt3dadd( -19.3175, 13.5038, -53.2898, 0.96 ) }
    dend_20 { pt3dadd( -19.6737, 14.1546, -54.1252, 0.12 ) }
    dend_20 { pt3dadd( -19.7894, 14.374, -54.3945, 0.12 ) }
    dend_20 { pt3dadd( -19.9967, 14.7754, -54.825, 0.12 ) }
    dend_20 { pt3dadd( -20.1332, 15.0473, -55.1436, 0.12 ) }
    dend_20 { pt3dadd( -20.5834, 16.0014, -56.049, 0.12 ) }
    dend_20 { pt3dadd( -20.9194, 16.737, -56.613, 0.84 ) }
    dend_20 { pt3dadd( -21.1474, 17.2951, -56.9913, 0.96 ) }
    dend_20 { pt3dadd( -21.2528, 17.5785, -57.1681, 0.96 ) }
    dend_20 { pt3dadd( -21.7715, 19.0676, -58.1217, 0.12 ) }
    dend_20 { pt3dadd( -22.2788, 20.5063, -58.9879, 0.12 ) }
    dend_20 { pt3dadd( -22.8698, 22.1669, -59.9103, 0.12 ) }
    dend_20 { pt3dadd( -23.3136, 23.447, -60.5906, 0.12 ) }
    dend_20 { pt3dadd( -23.5059, 24.0207, -60.8771, 0.72 ) }
    dend_20 { pt3dadd( -24.0493, 25.6457, -61.626, 0.12 ) }
    dend_20 { pt3dadd( -24.5867, 27.2179, -62.2621, 0.12 ) }
    dend_20 { pt3dadd( -24.6657, 27.438, -62.3483, 0.48 ) }
    dend_20 { pt3dadd( -24.7246, 27.5964, -62.399, 0.12 ) }
    dend_20 { pt3dadd( -25.1955, 28.7469, -62.7501, 0.12 ) }
    dend_20 { pt3dadd( -25.7496, 29.9239, -63.0212, 0.6 ) }
    dend_20 { pt3dadd( -25.9573, 30.3171, -63.09, 0.12 ) }
    dend_20 { pt3dadd( -26.6011, 31.4679, -63.3082, 0.12 ) }
    dend_20 { pt3dadd( -26.9839, 32.155, -63.4329, 0.36 ) }
    dend_20 { pt3dadd( -27.149, 32.4532, -63.4841, 0.12 ) }
    dend_20 { pt3dadd( -28.1671, 34.3948, -63.7587, 0.12 ) }
    dend_20 { pt3dadd( -28.4674, 35.0127, -63.8184, 0.72 ) }
    dend_20 { pt3dadd( -28.8204, 35.8083, -63.8858, 0.48 ) }
    dend_20 { pt3dadd( -29.0064, 36.3455, -63.9258, 0.12 ) }
    dend_20 { pt3dadd( -29.0519, 36.5082, -63.9464, 0.12 ) }
    dend_20 { pt3dadd( -29.4602, 38.2956, -64.2367, 0.12 ) }
    dend_20 { pt3dadd( -29.5399, 38.7343, -64.3162, 0.24 ) }
    dend_20 { pt3dadd( -29.5875, 38.9775, -64.3571, 0.12 ) }
    dend_20 { pt3dadd( -29.9435, 40.6522, -64.6487, 0.12 ) }
    dend_20 { pt3dadd( -30.2675, 42.0327, -64.9532, 0.48 ) }
    dend_20 { pt3dadd( -30.3594, 42.4071, -65.0452, 0.12 ) }
    dend_20 { pt3dadd( -30.781, 44.1003, -65.5009, 0.12 ) }
    dend_20 { pt3dadd( -31.1089, 45.4326, -65.859, 0.12 ) }
    dend_20 { pt3dadd( -31.2908, 46.1435, -66.0622, 0.6 ) }
    dend_20 { pt3dadd( -31.5837, 47.2036, -66.3632, 0.12 ) }
    dend_20 { pt3dadd( -31.9252, 48.4203, -66.6568, 0.12 ) }
    dend_20 { pt3dadd( -32.0264, 48.7798, -66.7539, 0.48 ) }
    dend_20 { pt3dadd( -32.1442, 49.1928, -66.8905, 0.48 ) }
    dend_20 { pt3dadd( -32.3345, 49.8475, -67.1284, 0.12 ) }
    dend_20 { pt3dadd( -32.6932, 51.0693, -67.5331, 0.12 ) }
    dend_20 { pt3dadd( -32.8566, 51.6616, -67.6559, 0.48 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 60/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.3103, -43.9392, -5.70429, 0.72 ) }
    dend_16 { pt3dadd( -10.161, -45.1469, -5.74717, 0.72 ) }
    dend_16 { pt3dadd( -10.5582, -45.7419, -5.80814, 0.48 ) }
    dend_16 { pt3dadd( -11.1144, -46.6516, -5.88373, 0.48 ) }
    dend_16 { pt3dadd( -11.7731, -47.8191, -5.9702, 0.48 ) }
    dend_16 { pt3dadd( -12.0678, -48.357, -6.0048, 0.6 ) }
    dend_16 { pt3dadd( -12.7019, -49.527, -6.07048, 0.84 ) }
    dend_16 { pt3dadd( -12.9341, -49.9723, -6.10956, 0.96 ) }
    dend_16 { pt3dadd( -13.4329, -50.9066, -6.17531, 0.48 ) }
    dend_16 { pt3dadd( -13.7369, -51.4565, -6.20276, 0.36 ) }
    dend_16 { pt3dadd( -14.3145, -52.4472, -6.19077, 0.36 ) }
    dend_16 { pt3dadd( -14.7762, -53.2033, -6.13817, 0.72 ) }
    dend_16 { pt3dadd( -15.1633, -53.8097, -6.05911, 0.36 ) }
    dend_16 { pt3dadd( -15.4993, -54.3174, -5.99778, 0.72 ) }
    dend_16 { pt3dadd( -15.938, -54.9763, -5.93328, 1.08 ) }
    dend_16 { pt3dadd( -16.392, -55.7005, -5.878, 1.08 ) }
    dend_16 { pt3dadd( -16.719, -56.2784, -5.84991, 0.72 ) }
    dend_16 { pt3dadd( -17.0336, -56.871, -5.83831, 0.72 ) }
    dend_16 { pt3dadd( -17.2869, -57.357, -5.84202, 0.72 ) }
    dend_16 { pt3dadd( -17.663, -58.0488, -5.86573, 0.72 ) }
    dend_16 { pt3dadd( -18.1698, -58.9541, -5.92166, 0.36 ) }
    dend_16 { pt3dadd( -18.5269, -59.5829, -5.98036, 0.36 ) }
    dend_16 { pt3dadd( -18.9103, -60.2777, -6.03841, 0.48 ) }
    dend_16 { pt3dadd( -19.2688, -60.9893, -6.08927, 0.48 ) }
    dend_16 { pt3dadd( -19.5439, -61.6318, -6.12384, 0.36 ) }
    dend_16 { pt3dadd( -19.7665, -62.2667, -6.17264, 0.48 ) }
    dend_16 { pt3dadd( -19.9301, -62.8393, -6.22215, 0.48 ) }
    dend_16 { pt3dadd( -20.1958, -63.9282, -6.33768, 0.48 ) }
    dend_16 { pt3dadd( -20.3994, -64.903, -6.47243, 0.48 ) }
    dend_16 { pt3dadd( -20.6002, -65.9914, -6.64611, 0.48 ) }
    dend_16 { pt3dadd( -20.7853, -67.064, -6.83237, 0.36 ) }
    dend_16 { pt3dadd( -20.9349, -67.8797, -6.98107, 0.6 ) }
    dend_16 { pt3dadd( -21.1459, -68.8442, -7.15707, 0.72 ) }
    dend_16 { pt3dadd( -21.3172, -69.495, -7.28449, 0.36 ) }
    dend_16 { pt3dadd( -21.5019, -70.0879, -7.38206, 0.48 ) }
    dend_16 { pt3dadd( -21.7196, -70.671, -7.44714, 0.48 ) }
    dend_16 { pt3dadd( -21.983, -71.2773, -7.50062, 0.36 ) }
    dend_16 { pt3dadd( -22.3824, -72.0702, -7.63874, 0.36 ) }
    dend_16 { pt3dadd( -22.8023, -72.7887, -7.83771, 0.48 ) }
    dend_16 { pt3dadd( -23.197, -73.3792, -8.03776, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_16 { pt3dadd( -23.8651, -74.3281, -8.44115, 0.96 ) }
    dend_16 { pt3dadd( -24.5934, -75.3411, -8.94143, 0.96 ) }
    dend_16 { pt3dadd( -25.3548, -76.4571, -9.53596, 0.48 ) }
    dend_16 { pt3dadd( -25.8702, -77.3046, -9.99706, 0.48 ) }
    dend_16 { pt3dadd( -26.2528, -77.9915, -10.3626, 0.6 ) }
    dend_16 { pt3dadd( -26.7465, -78.9519, -10.8587, 0.84 ) }
    dend_16 { pt3dadd( -27.0378, -79.5628, -11.1283, 0.6 ) }
    dend_16 { pt3dadd( -27.3923, -80.3185, -11.3855, 0.72 ) }
    dend_16 { pt3dadd( -27.866, -81.3159, -11.6347, 0.36 ) }
    dend_16 { pt3dadd( -28.1692, -81.9374, -11.7707, 0.36 ) }
    dend_16 { pt3dadd( -28.516, -82.6418, -11.9127, 0.48 ) }
    dend_16 { pt3dadd( -28.973, -83.573, -12.0773, 0.48 ) }
    dend_16 { pt3dadd( -29.3802, -84.4386, -12.2383, 0.48 ) }
    dend_16 { pt3dadd( -29.6735, -85.0875, -12.3653, 0.6 ) }
    dend_16 { pt3dadd( -29.9411, -85.7103, -12.4878, 0.84 ) }
    dend_16 { pt3dadd( -30.2861, -86.6196, -12.6707, 0.84 ) }
    dend_16 { pt3dadd( -30.6664, -87.6876, -12.8808, 0.84 ) }
    dend_16 { pt3dadd( -30.944, -88.4751, -13.0244, 0.48 ) }
    dend_16 { pt3dadd( -31.2178, -89.198, -13.1367, 0.48 ) }
    dend_16 { pt3dadd( -31.5323, -89.9233, -13.2563, 0.6 ) }
    dend_16 { pt3dadd( -31.7855, -90.4218, -13.3492, 0.6 ) }
    dend_16 { pt3dadd( -32.1841, -91.1037, -13.4975, 0.36 ) }
    dend_16 { pt3dadd( -32.5065, -91.6194, -13.6192, 0.36 ) }
    dend_16 { pt3dadd( -32.7621, -92.0597, -13.7234, 0.36 ) }
    dend_16 { pt3dadd( -33.0202, -92.5617, -13.835, 0.6 ) }
    dend_16 { pt3dadd( -33.2712, -93.1287, -13.9479, 0.84 ) }
    dend_16 { pt3dadd( -33.5173, -93.7363, -14.0491, 0.84 ) }
    dend_16 { pt3dadd( -33.909, -94.7949, -14.2236, 0.36 ) }
    dend_16 { pt3dadd( -34.2673, -95.7404, -14.3683, 0.36 ) }
    dend_16 { pt3dadd( -34.5133, -96.3541, -14.4617, 0.36 ) }
    dend_16 { pt3dadd( -34.6775, -96.709, -14.5147, 0.72 ) }
    dend_16 { pt3dadd( -35.0317, -97.3283, -14.642, 0.96 ) }
    dend_16 { pt3dadd( -35.6197, -98.1824, -14.8893, 0.36 ) }
    dend_16 { pt3dadd( -35.9891, -98.6451, -15.0605, 0.36 ) }
    dend_16 { pt3dadd( -36.2664, -98.9855, -15.2006, 0.72 ) }
    dend_16 { pt3dadd( -36.642, -99.4912, -15.4085, 0.72 ) }
    dend_16 { pt3dadd( -37.2328, -100.364, -15.7537, 0.36 ) }
    dend_16 { pt3dadd( -37.3762, -100.587, -15.8349, 0.36 ) }
    dend_16 { pt3dadd( -37.7635, -101.186, -16.0418, 0.48 ) }
    dend_16 { pt3dadd( -38.3299, -102.089, -16.3681, 0.48 ) }
    dend_16 { pt3dadd( -38.7591, -102.83, -16.6215, 0.48 ) }
    dend_16 { pt3dadd( -39.0225, -103.336, -16.8109, 0.48 ) }
    dend_16 { pt3dadd( -39.2925, -103.899, -17.0658, 0.48 ) }
    dend_16 { pt3dadd( -39.5486, -104.4, -17.3461, 0.36 ) }
    dend_16 { pt3dadd( -39.7944, -104.815, -17.6272, 0.6 ) }
    dend_16 { pt3dadd( -40.1405, -105.326, -18.0357, 0.72 ) }
    dend_16 { pt3dadd( -40.5419, -105.883, -18.4859, 0.72 ) }
    dend_16 { pt3dadd( -40.9372, -106.449, -18.9245, 0.48 ) }
    dend_16 { pt3dadd( -41.1071, -106.695, -19.102, 0.36 ) }
    dend_16 { pt3dadd( -41.3526, -107.079, -19.4082, 0.36 ) }
    dend_16 { pt3dadd( -41.554, -107.362, -19.6917, 0.6 ) }
    dend_16 { pt3dadd( -41.8888, -107.765, -20.1648, 0.6 ) }
    dend_16 { pt3dadd( -42.2792, -108.198, -20.701, 0.6 ) }
    dend_16 { pt3dadd( -42.4936, -108.426, -21.0074, 0.6 ) }
    dend_16 { pt3dadd( -43.4459, -109.493, -22.4857, 0.72 ) }
    dend_16 { pt3dadd( -43.8912, -110.057, -23.2539, 0.48 ) }
    dend_16 { pt3dadd( -44.105, -110.369, -23.6467, 0.48 ) }
    dend_16 { pt3dadd( -44.2333, -110.578, -23.8895, 0.48 ) }
    dend_16 { pt3dadd( -44.4358, -110.872, -24.1969, 0.72 ) }
    dend_16 { pt3dadd( -44.6908, -111.158, -24.5071, 0.84 ) }
    dend_16 { pt3dadd( -45.0716, -111.528, -24.9185, 0.84 ) }
    dend_16 { pt3dadd( -45.5028, -111.993, -25.4739, 0.48 ) }
    dend_16 { pt3dadd( -45.7096, -112.219, -25.7876, 0.48 ) }
    dend_16 { pt3dadd( -46.1951, -112.75, -26.5355, 0.72 ) }
    dend_16 { pt3dadd( -46.8898, -113.531, -27.6186, 0.72 ) }
    dend_16 { pt3dadd( -47.4759, -114.287, -28.57, 0.36 ) }
    dend_16 { pt3dadd( -47.618, -114.501, -28.8214, 0.36 ) }
    dend_16 { pt3dadd( -47.8847, -114.965, -29.3516, 0.36 ) }
    dend_16 { pt3dadd( -48.2252, -115.619, -30.1518, 0.6 ) }
    dend_16 { pt3dadd( -48.3346, -115.869, -30.4716, 0.84 ) }
    dend_16 { pt3dadd( -48.6577, -116.65, -31.4795, 0.36 ) }
    dend_16 { pt3dadd( -48.8561, -117.156, -32.1679, 0.48 ) }
    dend_16 { pt3dadd( -49.0682, -117.702, -33.0827, 0.96 ) }
    dend_16 { pt3dadd( -49.3384, -118.373, -34.4498, 0.96 ) }
    dend_16 { pt3dadd( -49.6337, -118.925, -35.8507, 0.48 ) }
    dend_16 { pt3dadd( -49.6895, -118.996, -36.1045, 0.48 ) }
    dend_16 { pt3dadd( -49.8411, -119.155, -36.8423, 0.72 ) }
    dend_16 { pt3dadd( -50.1649, -119.568, -38.6859, 0.36 ) }
    dend_16 { pt3dadd( -50.2418, -119.71, -39.2776, 0.6 ) }
    dend_16 { pt3dadd( -50.3339, -119.93, -40.0947, 0.72 ) }
    dend_16 { pt3dadd( -50.7908, -120.986, -43.7951, 0.48 ) }
    dend_16 { pt3dadd( -50.8602, -121.141, -44.2775, 0.36 ) }
    dend_16 { pt3dadd( -50.977, -121.401, -44.9888, 0.36 ) }
    dend_16 { pt3dadd( -51.0327, -121.623, -45.4327, 0.36 ) }
    dend_16 { pt3dadd( -51.079, -121.828, -45.8159, 0.36 ) }
    dend_16 { pt3dadd( -51.1229, -122.069, -46.2679, 0.48 ) }
    dend_16 { pt3dadd( -51.2161, -122.318, -46.6925, 0.48 ) }
    dend_16 { pt3dadd( -51.3057, -122.658, -47.5689, 0.36 ) }
    dend_16 { pt3dadd( -51.3158, -122.778, -47.9103, 0.36 ) }
    dend_16 { pt3dadd( -51.2423, -123.186, -49.0348, 0.36 ) }
    dend_16 { pt3dadd( -51.0533, -123.643, -50.3218, 0.48 ) }
    dend_16 { pt3dadd( -50.9691, -123.81, -50.7828, 0.6 ) }
    dend_16 { pt3dadd( -50.5841, -124.49, -52.5143, 0.36 ) }
    dend_16 { pt3dadd( -50.447, -124.723, -53.0457, 0.36 ) }
    dend_16 { pt3dadd( -50.2846, -125.023, -53.6441, 0.48 ) }
    dend_16 { pt3dadd( -50.1134, -125.563, -54.5149, 0.12 ) }
    dend_16 { pt3dadd( -50.1089, -125.915, -55.0267, 0.12 ) }
    dend_16 { pt3dadd( -50.1299, -126.056, -55.2241, 0.12 ) }
    dend_16 { pt3dadd( -50.1537, -126.13, -55.3182, 0.6 ) }
    dend_16 { pt3dadd( -50.2859, -126.416, -55.6975, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_16 { pt3dadd( -50.787, -127.352, -56.857, 0.6 ) }
    dend_16 { pt3dadd( -51.1527, -128.097, -57.6189, 0.6 ) }
    dend_16 { pt3dadd( -51.2395, -128.256, -57.8105, 0.12 ) }
    dend_16 { pt3dadd( -51.4754, -128.588, -58.263, 0.12 ) }
    dend_16 { pt3dadd( -51.6081, -128.737, -58.5019, 0.24 ) }
    dend_16 { pt3dadd( -51.9106, -129.021, -58.9926, 0.24 ) }
    dend_16 { pt3dadd( -52.1751, -129.235, -59.3579, 0.24 ) }
    dend_16 { pt3dadd( -53.3572, -130.045, -60.7503, 0.48 ) }
    dend_16 { pt3dadd( -53.7877, -130.328, -61.239, 0.48 ) }
    dend_16 { pt3dadd( -54.3225, -130.699, -61.8722, 0.48 ) }
    dend_16 { pt3dadd( -54.595, -130.905, -62.2225, 0.36 ) }
    dend_16 { pt3dadd( -54.7882, -131.067, -62.5099, 0.12 ) }
    dend_16 { pt3dadd( -55.3831, -131.553, -63.2928, 0.12 ) }
    dend_16 { pt3dadd( -55.6828, -131.824, -63.5651, 0.48 ) }
    dend_16 { pt3dadd( -56.09, -132.238, -64.0534, 0.6 ) }
    dend_16 { pt3dadd( -56.5448, -132.755, -64.7283, 0.6 ) }
    dend_16 { pt3dadd( -56.9472, -133.3, -65.5517, 0.12 ) }
    dend_16 { pt3dadd( -57.3333, -134.041, -66.7599, 0.12 ) }
    dend_16 { pt3dadd( -57.6955, -134.999, -68.4448, 0.12 ) }
    dend_16 { pt3dadd( -58.2329, -136.368, -70.998, 0.12 ) }
    dend_16 { pt3dadd( -58.2822, -136.495, -71.2223, 0.12 ) }
    dend_16 { pt3dadd( -58.3425, -136.671, -71.5112, 0.12 ) }
    dend_16 { pt3dadd( -58.4559, -137.01, -72.0279, 0.72 ) }
    dend_16 { pt3dadd( -58.4965, -137.221, -72.3237, 0.84 ) }
    dend_16 { pt3dadd( -58.5383, -137.355, -72.5227, 0.84 ) }
    dend_16 { pt3dadd( -58.6701, -137.578, -72.7628, 0.48 ) }
    dend_16 { pt3dadd( -59.0481, -138.178, -73.4355, 0.12 ) }
    dend_16 { pt3dadd( -59.2729, -138.564, -73.8531, 0.12 ) }
    dend_16 { pt3dadd( -59.5778, -139.241, -74.6594, 0.36 ) }
    dend_16 { pt3dadd( -59.7684, -139.87, -75.4217, 0.12 ) }
    dend_16 { pt3dadd( -59.8497, -140.163, -75.8187, 0.12 ) }
    dend_16 { pt3dadd( -59.9034, -140.38, -76.1328, 0.48 ) }
    dend_16 { pt3dadd( -59.9796, -140.684, -76.578, 0.6 ) }
    dend_16 { pt3dadd( -60.2558, -141.517, -77.8374, 0.12 ) }
    dend_16 { pt3dadd( -60.3832, -141.761, -78.2497, 0.12 ) }
    dend_16 { pt3dadd( -60.5817, -142.173, -78.8974, 0.12 ) }
    dend_16 { pt3dadd( -60.6618, -142.298, -79.0901, 0.12 ) }
    dend_16 { pt3dadd( -60.8407, -142.52, -79.4223, 0.48 ) }
    dend_16 { pt3dadd( -61.0776, -142.802, -79.7845, 0.84 ) }
    dend_16 { pt3dadd( -62.1037, -144.124, -81.1874, 0.36 ) }
    dend_16 { pt3dadd( -62.3208, -144.442, -81.4896, 0.36 ) }
    dend_16 { pt3dadd( -62.7832, -145.237, -82.1512, 0.36 ) }
    dend_16 { pt3dadd( -63.2148, -145.942, -82.6734, 0.6 ) }
    dend_16 { pt3dadd( -63.5615, -146.49, -83.0536, 0.6 ) }
    dend_16 { pt3dadd( -64.032, -147.209, -83.4899, 0.6 ) }
    dend_16 { pt3dadd( -64.3629, -147.693, -83.7203, 0.6 ) }
    dend_16 { pt3dadd( -64.7395, -148.238, -83.9865, 0.12 ) }
    dend_16 { pt3dadd( -65.6012, -149.512, -84.5892, 0.12 ) }
    dend_16 { pt3dadd( -66.0336, -150.09, -84.8419, 0.6 ) }
    dend_16 { pt3dadd( -66.3602, -150.486, -85.0124, 0.6 ) }
    dend_16 { pt3dadd( -66.535, -150.692, -85.0885, 0.6 ) }
    dend_16 { pt3dadd( -66.8981, -151.115, -85.2386, 0.12 ) }
    dend_16 { pt3dadd( -67.1701, -151.446, -85.3558, 0.12 ) }
    dend_16 { pt3dadd( -67.2786, -151.573, -85.4038, 0.12 ) }
    dend_16 { pt3dadd( -67.473, -151.742, -85.4636, 0.12 ) }
    dend_16 { pt3dadd( -67.8636, -152.016, -85.6188, 0.12 ) }
    dend_16 { pt3dadd( -68.2137, -152.232, -85.769, 0.12 ) }
    dend_16 { pt3dadd( -68.7885, -152.514, -86.0037, 0.6 ) }
    dend_16 { pt3dadd( -69.4831, -152.806, -86.4035, 0.6 ) }
    dend_16 { pt3dadd( -69.9546, -153.001, -86.7248, 0.6 ) }
    dend_16 { pt3dadd( -70.8163, -153.387, -87.3873, 0.12 ) }
    dend_16 { pt3dadd( -71.0135, -153.482, -87.5449, 0.12 ) }
    dend_16 { pt3dadd( -71.6293, -153.82, -88.032, 0.48 ) }
    dend_16 { pt3dadd( -72.8155, -154.558, -88.9175, 0.12 ) }
    dend_16 { pt3dadd( -73.1468, -154.801, -89.1768, 0.12 ) }
    dend_16 { pt3dadd( -73.5427, -155.142, -89.4701, 0.12 ) }
    dend_16 { pt3dadd( -74.1182, -155.722, -89.9156, 0.12 ) }
    dend_16 { pt3dadd( -74.5015, -156.174, -90.2281, 0.6 ) }
    dend_16 { pt3dadd( -74.6993, -156.467, -90.3921, 0.6 ) }
    dend_16 { pt3dadd( -75.0935, -157.149, -90.8195, 0.24 ) }
    dend_16 { pt3dadd( -75.3351, -157.601, -91.1811, 0.24 ) }
    dend_16 { pt3dadd( -75.7842, -158.469, -91.9844, 0.24 ) }
    dend_16 { pt3dadd( -75.9224, -158.765, -92.274, 0.48 ) }
    dend_16 { pt3dadd( -76.1307, -159.244, -92.7908, 0.48 ) }
    dend_16 { pt3dadd( -76.673, -160.611, -94.3686, 0.36 ) }
    dend_16 { pt3dadd( -76.7585, -160.847, -94.6625, 0.36 ) }
    dend_16 { pt3dadd( -76.9153, -161.212, -95.1408, 0.36 ) }
    dend_16 { pt3dadd( -77.0535, -161.528, -95.5273, 0.36 ) }
    dend_16 { pt3dadd( -77.3658, -162.289, -96.4331, 0.48 ) }
    dend_16 { pt3dadd( -77.5536, -162.752, -96.98, 0.48 ) }
    dend_16 { pt3dadd( -77.7272, -163.292, -97.4892, 0.12 ) }
    dend_16 { pt3dadd( -77.8737, -163.958, -98.1305, 0.12 ) }
    dend_16 { pt3dadd( -77.926, -164.425, -98.5835, 0.12 ) }
    dend_16 { pt3dadd( -77.9397, -164.607, -98.7539, 0.12 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 84/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -9.3103, -43.9392, -5.70429, 0.48 ) }
    dend_15 { pt3dadd( -9.23041, -44.9928, -5.41228, 0.48 ) }
    dend_15 { pt3dadd( -9.16561, -45.8396, -5.18644, 0.6 ) }
    dend_15 { pt3dadd( -9.04102, -47.004, -4.89832, 0.6 ) }
    dend_15 { pt3dadd( -8.92963, -47.852, -4.7017, 0.6 ) }
    dend_15 { pt3dadd( -8.83105, -48.5379, -4.55351, 0.36 ) }
    dend_15 { pt3dadd( -8.74873, -49.015, -4.42238, 0.36 ) }
    dend_15 { pt3dadd( -8.69968, -49.2634, -4.32797, 0.36 ) }
    dend_15 { pt3dadd( -8.53577, -49.8237, -4.10783, 0.6 ) }
    dend_15 { pt3dadd( -8.44436, -50.0721, -4.0204, 0.72 ) }
    dend_15 { pt3dadd( -8.30282, -50.3844, -3.87516, 0.72 ) }
    dend_15 { pt3dadd( -7.78099, -51.4021, -3.31187, 0.72 ) }
    dend_15 { pt3dadd( -7.59427, -51.7501, -3.10576, 0.72 ) }
    dend_15 { pt3dadd( -7.28655, -52.3022, -2.75113, 0.24 ) }
    dend_15 { pt3dadd( -6.96018, -52.8719, -2.37687, 0.24 ) }
    dend_15 { pt3dadd( -6.53918, -53.5639, -1.94789, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_15 { pt3dadd( -6.20396, -54.084, -1.6361, 0.6 ) }
    dend_15 { pt3dadd( -5.83893, -54.6294, -1.34185, 0.6 ) }
    dend_15 { pt3dadd( -5.19627, -55.562, -0.806804, 0.36 ) }
    dend_15 { pt3dadd( -4.9657, -55.8919, -0.618921, 0.36 ) }
    dend_15 { pt3dadd( -4.51719, -56.5473, -0.259387, 0.36 ) }
    dend_15 { pt3dadd( -4.24811, -56.9716, -0.0331446, 0.6 ) }
    dend_15 { pt3dadd( -4.00709, -57.3805, 0.189227, 0.6 ) }
    dend_15 { pt3dadd( -3.61893, -58.1283, 0.600724, 0.36 ) }
    dend_15 { pt3dadd( -3.37085, -58.6602, 0.896578, 0.36 ) }
    dend_15 { pt3dadd( -3.12539, -59.1998, 1.19827, 0.36 ) }
    dend_15 { pt3dadd( -2.79802, -59.9154, 1.65753, 0.48 ) }
    dend_15 { pt3dadd( -2.61053, -60.3048, 1.92612, 0.48 ) }
    dend_15 { pt3dadd( -2.42657, -60.6729, 2.19744, 0.48 ) }
    dend_15 { pt3dadd( -2.09051, -61.2942, 2.66085, 0.48 ) }
    dend_15 { pt3dadd( -1.69719, -61.985, 3.20023, 0.48 ) }
    dend_15 { pt3dadd( -1.10439, -63.0204, 3.95761, 0.48 ) }
    dend_15 { pt3dadd( -0.872003, -63.4511, 4.24113, 0.36 ) }
    dend_15 { pt3dadd( -0.772331, -63.6425, 4.36127, 0.36 ) }
    dend_15 { pt3dadd( -0.594963, -64.0053, 4.55193, 0.48 ) }
    dend_15 { pt3dadd( -0.353017, -64.5823, 4.80126, 0.36 ) }
    dend_15 { pt3dadd( -0.102931, -65.2523, 5.05253, 0.36 ) }
    dend_15 { pt3dadd( 0.0991499, -65.8214, 5.21965, 0.48 ) }
    dend_15 { pt3dadd( 0.405826, -66.6409, 5.47176, 0.36 ) }
    dend_15 { pt3dadd( 0.810908, -67.6215, 5.78256, 0.36 ) }
    dend_15 { pt3dadd( 1.18612, -68.4623, 6.05779, 0.36 ) }
    dend_15 { pt3dadd( 1.58403, -69.276, 6.32553, 0.36 ) }
    dend_15 { pt3dadd( 1.88163, -69.838, 6.53174, 0.36 ) }
    dend_15 { pt3dadd( 2.37257, -70.7063, 6.86074, 0.36 ) }
    dend_15 { pt3dadd( 2.7814, -71.4372, 7.1221, 0.48 ) }
    dend_15 { pt3dadd( 3.13501, -72.0853, 7.34586, 0.84 ) }
    dend_15 { pt3dadd( 3.55615, -72.871, 7.58177, 0.48 ) }
    dend_15 { pt3dadd( 3.84915, -73.4501, 7.78174, 0.24 ) }
    dend_15 { pt3dadd( 4.1638, -74.1346, 8.03955, 0.24 ) }
    dend_15 { pt3dadd( 4.52402, -74.993, 8.36268, 0.24 ) }
    dend_15 { pt3dadd( 4.83806, -75.777, 8.66472, 0.24 ) }
    dend_15 { pt3dadd( 5.09141, -76.3977, 8.94042, 0.24 ) }
    dend_15 { pt3dadd( 5.56088, -77.5398, 9.48116, 0.72 ) }
    dend_15 { pt3dadd( 5.69737, -77.8632, 9.63414, 0.72 ) }
    dend_15 { pt3dadd( 6.02073, -78.6076, 9.97009, 0.36 ) }
    dend_15 { pt3dadd( 6.3046, -79.2258, 10.22, 0.36 ) }
    dend_15 { pt3dadd( 6.87303, -80.4964, 10.622, 0.24 ) }
    dend_15 { pt3dadd( 7.20792, -81.3121, 10.7977, 0.24 ) }
    dend_15 { pt3dadd( 7.44843, -81.9355, 10.8828, 0.24 ) }
    dend_15 { pt3dadd( 7.72582, -82.7263, 10.9837, 0.24 ) }
    dend_15 { pt3dadd( 7.90773, -83.3252, 11.0473, 0.36 ) }
    dend_15 { pt3dadd( 8.07452, -83.9418, 11.0897, 0.36 ) }
    dend_15 { pt3dadd( 8.21946, -84.5553, 11.0971, 0.48 ) }
    dend_15 { pt3dadd( 8.38817, -85.3571, 11.1343, 0.48 ) }
    dend_15 { pt3dadd( 8.4816, -85.8553, 11.1726, 0.48 ) }
    dend_15 { pt3dadd( 8.56739, -86.3638, 11.2262, 0.6 ) }
    dend_15 { pt3dadd( 8.64749, -86.8589, 11.267, 0.72 ) }
    dend_15 { pt3dadd( 8.74621, -87.4687, 11.2993, 0.72 ) }
    dend_15 { pt3dadd( 8.89223, -88.3461, 11.321, 0.24 ) }
    dend_15 { pt3dadd( 9.02297, -89.0892, 11.344, 0.24 ) }
    dend_15 { pt3dadd( 9.12323, -89.5812, 11.372, 0.48 ) }
    dend_15 { pt3dadd( 9.27342, -90.2332, 11.4216, 0.6 ) }
    dend_15 { pt3dadd( 9.49752, -91.1049, 11.5055, 0.36 ) }
    dend_15 { pt3dadd( 9.78526, -92.0947, 11.618, 0.36 ) }
    dend_15 { pt3dadd( 10.0792, -93.0291, 11.7096, 0.36 ) }
    dend_15 { pt3dadd( 10.3029, -93.723, 11.762, 0.36 ) }
    dend_15 { pt3dadd( 10.4263, -94.0887, 11.7808, 0.24 ) }
    dend_15 { pt3dadd( 10.45, -94.1577, 11.786, 0.48 ) }
    dend_15 { pt3dadd( 10.7231, -94.9496, 11.8536, 0.6 ) }
    dend_15 { pt3dadd( 10.9646, -95.6188, 11.9062, 0.36 ) }
    dend_15 { pt3dadd( 11.1702, -96.1983, 11.9414, 0.36 ) }
    dend_15 { pt3dadd( 11.261, -96.4622, 11.9646, 0.48 ) }
    dend_15 { pt3dadd( 11.5568, -97.3406, 12.0493, 0.48 ) }
    dend_15 { pt3dadd( 11.7159, -97.8121, 12.1083, 0.36 ) }
    dend_15 { pt3dadd( 11.9988, -98.651, 12.2353, 0.36 ) }
    dend_15 { pt3dadd( 12.2801, -99.4962, 12.3748, 0.36 ) }
    dend_15 { pt3dadd( 12.5278, -100.238, 12.4976, 0.36 ) }
    dend_15 { pt3dadd( 12.8391, -101.202, 12.6415, 0.36 ) }
    dend_15 { pt3dadd( 13.149, -102.163, 12.7563, 0.36 ) }
    dend_15 { pt3dadd( 13.2693, -102.538, 12.8044, 0.48 ) }
    dend_15 { pt3dadd( 13.4167, -103.012, 12.8713, 0.48 ) }
    dend_15 { pt3dadd( 13.6119, -103.595, 12.9733, 0.48 ) }
    dend_15 { pt3dadd( 13.8752, -104.328, 13.1125, 0.48 ) }
    dend_15 { pt3dadd( 14.1569, -105.047, 13.2479, 0.48 ) }
    dend_15 { pt3dadd( 14.4927, -105.882, 13.3831, 0.6 ) }
    dend_15 { pt3dadd( 14.6013, -106.14, 13.4201, 0.6 ) }
    dend_15 { pt3dadd( 14.9459, -106.935, 13.5166, 0.36 ) }
    dend_15 { pt3dadd( 15.3826, -107.893, 13.6087, 0.36 ) }
    dend_15 { pt3dadd( 15.6932, -108.551, 13.6682, 0.36 ) }
    dend_15 { pt3dadd( 16.1479, -109.459, 13.7402, 0.36 ) }
    dend_15 { pt3dadd( 16.6086, -110.341, 13.7926, 0.36 ) }
    dend_15 { pt3dadd( 16.9173, -110.936, 13.8112, 0.36 ) }
    dend_15 { pt3dadd( 17.171, -111.433, 13.7938, 0.36 ) }
    dend_15 { pt3dadd( 17.3397, -111.754, 13.7724, 0.48 ) }
    dend_15 { pt3dadd( 17.6331, -112.31, 13.7211, 0.48 ) }
    dend_15 { pt3dadd( 18.009, -113.042, 13.6392, 0.48 ) }
    dend_15 { pt3dadd( 18.4018, -113.855, 13.5384, 0.48 ) }
    dend_15 { pt3dadd( 18.8229, -114.774, 13.4197, 0.48 ) }
    dend_15 { pt3dadd( 18.9951, -115.187, 13.366, 0.48 ) }
    dend_15 { pt3dadd( 19.2998, -115.953, 13.2701, 0.48 ) }
    dend_15 { pt3dadd( 19.5177, -116.535, 13.201, 0.48 ) }
    dend_15 { pt3dadd( 19.6172, -116.795, 13.1694, 0.6 ) }
    dend_15 { pt3dadd( 19.7235, -117.052, 13.1414, 0.72 ) }
    dend_15 { pt3dadd( 19.9597, -117.636, 13.097, 0.48 ) }
    dend_15 { pt3dadd( 20.2145, -118.257, 13.0439, 0.48 ) }
    dend_15 { pt3dadd( 20.3263, -118.512, 13.0208, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_15 { pt3dadd( 20.664, -119.207, 12.9613, 0.36 ) }
    dend_15 { pt3dadd( 20.9508, -119.759, 12.9158, 0.36 ) }
    dend_15 { pt3dadd( 21.1982, -120.195, 12.8805, 0.36 ) }
    dend_15 { pt3dadd( 21.5726, -120.814, 12.8361, 0.36 ) }
    dend_15 { pt3dadd( 21.8996, -121.332, 12.8213, 0.48 ) }
    dend_15 { pt3dadd( 22.3183, -122.009, 12.8258, 0.6 ) }
    dend_15 { pt3dadd( 23.012, -123.159, 12.8688, 0.48 ) }
    dend_15 { pt3dadd( 23.4622, -123.917, 12.9059, 0.36 ) }
    dend_15 { pt3dadd( 24.0571, -124.916, 12.9469, 0.36 ) }
    dend_15 { pt3dadd( 24.4445, -125.605, 12.969, 0.6 ) }
    dend_15 { pt3dadd( 24.8531, -126.374, 12.9682, 0.6 ) }
    dend_15 { pt3dadd( 25.2578, -127.175, 12.9457, 0.6 ) }
    dend_15 { pt3dadd( 25.651, -127.982, 12.8858, 0.6 ) }
    dend_15 { pt3dadd( 26.2373, -129.214, 12.7438, 0.48 ) }
    dend_15 { pt3dadd( 26.9027, -130.667, 12.5266, 0.48 ) }
    dend_15 { pt3dadd( 27.2642, -131.467, 12.3866, 0.48 ) }
    dend_15 { pt3dadd( 27.789, -132.616, 12.1568, 0.48 ) }
    dend_15 { pt3dadd( 28.1676, -133.448, 11.9759, 0.24 ) }
    dend_15 { pt3dadd( 28.4939, -134.189, 11.8085, 0.24 ) }
    dend_15 { pt3dadd( 29.0234, -135.436, 11.5191, 0.24 ) }
    dend_15 { pt3dadd( 29.2936, -136.095, 11.3685, 0.24 ) }
    dend_15 { pt3dadd( 29.585, -136.843, 11.2244, 0.6 ) }
    dend_15 { pt3dadd( 29.7013, -137.166, 11.1772, 0.84 ) }
    dend_15 { pt3dadd( 29.8679, -137.653, 11.1368, 0.84 ) }
    dend_15 { pt3dadd( 30.0964, -138.352, 11.1023, 0.48 ) }
    dend_15 { pt3dadd( 30.4363, -139.447, 11.091, 0.36 ) }
    dend_15 { pt3dadd( 30.6499, -140.201, 11.1132, 0.36 ) }
    dend_15 { pt3dadd( 30.8805, -141.042, 11.1777, 0.36 ) }
    dend_15 { pt3dadd( 31.0665, -141.679, 11.2347, 0.36 ) }
    dend_15 { pt3dadd( 31.2691, -142.284, 11.2962, 0.36 ) }
    dend_15 { pt3dadd( 31.4349, -142.742, 11.3476, 0.48 ) }
    dend_15 { pt3dadd( 31.7167, -143.479, 11.4146, 0.48 ) }
    dend_15 { pt3dadd( 31.8865, -143.921, 11.4415, 0.36 ) }
    dend_15 { pt3dadd( 32.211, -144.736, 11.4624, 0.36 ) }
    dend_15 { pt3dadd( 32.5268, -145.471, 11.4792, 0.36 ) }
    dend_15 { pt3dadd( 32.7918, -146.025, 11.4874, 0.36 ) }
    dend_15 { pt3dadd( 33.3402, -147.022, 11.4936, 0.36 ) }
    dend_15 { pt3dadd( 33.6667, -147.565, 11.4767, 0.36 ) }
    dend_15 { pt3dadd( 34.1438, -148.311, 11.4292, 0.36 ) }
    dend_15 { pt3dadd( 34.5913, -148.964, 11.3728, 0.48 ) }
    dend_15 { pt3dadd( 35.0661, -149.598, 11.3051, 0.48 ) }
    dend_15 { pt3dadd( 35.8929, -150.601, 11.1833, 0.48 ) }
    dend_15 { pt3dadd( 36.3091, -151.059, 11.1455, 0.12 ) }
    dend_15 { pt3dadd( 36.7242, -151.503, 11.1303, 0.12 ) }
    dend_15 { pt3dadd( 37.075, -151.89, 11.1373, 0.24 ) }
    dend_15 { pt3dadd( 37.3632, -152.228, 11.1621, 0.24 ) }
    dend_15 { pt3dadd( 37.9414, -152.894, 11.2499, 0.12 ) }
    dend_15 { pt3dadd( 38.5945, -153.6, 11.3814, 0.36 ) }
    dend_15 { pt3dadd( 39.0165, -154.03, 11.5005, 0.6 ) }
    dend_15 { pt3dadd( 39.3602, -154.373, 11.6036, 0.36 ) }
    dend_15 { pt3dadd( 39.723, -154.735, 11.6952, 0.36 ) }
    dend_15 { pt3dadd( 40.5621, -155.592, 11.8609, 0.36 ) }
    dend_15 { pt3dadd( 40.9106, -155.957, 11.9064, 0.36 ) }
    dend_15 { pt3dadd( 41.4795, -156.651, 11.9264, 0.24 ) }
    dend_15 { pt3dadd( 41.7736, -157.075, 11.933, 0.24 ) }
    dend_15 { pt3dadd( 42.1483, -157.756, 11.917, 0.36 ) }
    dend_15 { pt3dadd( 42.2854, -158.092, 11.88, 0.36 ) }
    dend_15 { pt3dadd( 42.3922, -158.454, 11.8132, 0.36 ) }
    dend_15 { pt3dadd( 42.6561, -159.396, 11.5967, 0.36 ) }
    dend_15 { pt3dadd( 42.8325, -160.0, 11.4822, 0.48 ) }
    dend_15 { pt3dadd( 43.0093, -160.551, 11.4398, 0.48 ) }
    dend_15 { pt3dadd( 43.2423, -161.189, 11.4536, 0.12 ) }
    dend_15 { pt3dadd( 43.5972, -162.123, 11.5108, 0.12 ) }
    dend_15 { pt3dadd( 43.7624, -162.54, 11.5507, 0.48 ) }
    dend_15 { pt3dadd( 44.2585, -163.639, 11.7093, 0.12 ) }
    dend_15 { pt3dadd( 44.6672, -164.435, 11.86, 0.12 ) }
    dend_15 { pt3dadd( 44.8845, -164.816, 11.9491, 0.6 ) }
    dend_15 { pt3dadd( 45.2572, -165.43, 12.1012, 0.12 ) }
    dend_15 { pt3dadd( 45.5044, -165.8, 12.1439, 0.12 ) }
    dend_15 { pt3dadd( 45.9015, -166.369, 12.1228, 0.12 ) }
    dend_15 { pt3dadd( 46.1989, -166.781, 12.0145, 0.12 ) }
    dend_15 { pt3dadd( 46.3514, -167.008, 11.9671, 0.72 ) }
    dend_15 { pt3dadd( 46.6629, -167.541, 11.8925, 0.72 ) }
    dend_15 { pt3dadd( 47.1628, -168.49, 11.8238, 0.48 ) }
    dend_15 { pt3dadd( 47.309, -168.835, 11.8018, 0.48 ) }
    dend_15 { pt3dadd( 47.5955, -169.658, 11.7604, 0.12 ) }
    dend_15 { pt3dadd( 48.1505, -171.47, 11.7033, 0.12 ) }
    dend_15 { pt3dadd( 48.2614, -171.851, 11.7001, 0.12 ) }
    dend_15 { pt3dadd( 48.3707, -172.29, 11.7115, 0.6 ) }
    dend_15 { pt3dadd( 48.574, -173.212, 11.7738, 0.12 ) }
    dend_15 { pt3dadd( 48.6165, -173.413, 11.7793, 0.12 ) }
    dend_15 { pt3dadd( 48.808, -174.342, 11.7637, 0.12 ) }
    dend_15 { pt3dadd( 48.9024, -174.848, 11.7047, 0.12 ) }
    dend_15 { pt3dadd( 48.9757, -175.367, 11.659, 0.48 ) }
    dend_15 { pt3dadd( 49.0114, -175.743, 11.6463, 0.12 ) }
    dend_15 { pt3dadd( 49.0497, -176.622, 11.6668, 0.12 ) }
    dend_15 { pt3dadd( 49.0795, -177.418, 11.6931, 0.12 ) }
    dend_15 { pt3dadd( 49.0959, -177.872, 11.6912, 0.96 ) }
    dend_15 { pt3dadd( 49.1285, -178.543, 11.6646, 0.48 ) }
    dend_15 { pt3dadd( 49.1686, -179.124, 11.6262, 0.36 ) }
    dend_15 { pt3dadd( 49.1878, -179.478, 11.5927, 0.36 ) }
    dend_15 { pt3dadd( 49.2049, -180.178, 11.5118, 0.36 ) }
    dend_15 { pt3dadd( 49.1915, -181.091, 11.3954, 0.24 ) }
    dend_15 { pt3dadd( 49.1735, -181.958, 11.2511, 0.24 ) }
    dend_15 { pt3dadd( 49.1565, -182.328, 11.1777, 0.24 ) }
    dend_15 { pt3dadd( 49.1476, -182.611, 11.1155, 0.6 ) }
    dend_15 { pt3dadd( 49.136, -183.234, 10.9888, 0.72 ) }
    dend_15 { pt3dadd( 49.1206, -183.68, 10.909, 0.84 ) }
    dend_15 { pt3dadd( 49.1174, -184.404, 10.8142, 0.12 ) }
    dend_15 { pt3dadd( 49.1292, -184.786, 10.7476, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_15 { pt3dadd( 49.1629, -185.45, 10.6206, 0.12 ) }
    dend_15 { pt3dadd( 49.2018, -185.932, 10.5257, 0.12 ) }
    dend_15 { pt3dadd( 49.2339, -186.177, 10.4774, 0.12 ) }
    dend_15 { pt3dadd( 49.3205, -186.664, 10.3924, 0.6 ) }
    dend_15 { pt3dadd( 49.4337, -187.295, 10.3118, 0.12 ) }
    dend_15 { pt3dadd( 49.547, -188.025, 10.2258, 0.12 ) }
    dend_15 { pt3dadd( 49.5812, -188.3, 10.1816, 0.48 ) }
    dend_15 { pt3dadd( 49.6618, -188.906, 10.072, 0.48 ) }
    dend_15 { pt3dadd( 49.7539, -189.45, 9.97025, 0.48 ) }
    dend_15 { pt3dadd( 49.9535, -190.409, 9.79847, 0.48 ) }
    dend_15 { pt3dadd( 50.0846, -190.948, 9.71256, 0.6 ) }
    dend_15 { pt3dadd( 50.3085, -191.805, 9.53422, 0.12 ) }
    dend_15 { pt3dadd( 50.4532, -192.39, 9.3963, 0.12 ) }
    dend_15 { pt3dadd( 50.5978, -192.989, 9.24152, 0.24 ) }
    dend_15 { pt3dadd( 50.7593, -193.611, 9.07301, 0.24 ) }
    dend_15 { pt3dadd( 50.9801, -194.34, 8.8491, 0.48 ) }
    dend_15 { pt3dadd( 51.1907, -194.975, 8.63791, 0.12 ) }
    dend_15 { pt3dadd( 51.333, -195.435, 8.48778, 0.12 ) }
    dend_15 { pt3dadd( 51.3924, -195.692, 8.39536, 0.6 ) }
    dend_15 { pt3dadd( 51.44, -196.062, 8.26055, 0.6 ) }
    dend_15 { pt3dadd( 51.462, -196.86, 7.86991, 0.12 ) }
    dend_15 { pt3dadd( 51.4265, -197.443, 7.55364, 0.12 ) }
    dend_15 { pt3dadd( 51.3851, -197.786, 7.36453, 0.12 ) }
    dend_15 { pt3dadd( 51.3179, -198.16, 7.14334, 0.6 ) }
    dend_15 { pt3dadd( 51.174, -198.775, 6.7896, 0.6 ) }
    dend_15 { pt3dadd( 50.8024, -200.175, 5.99959, 0.12 ) }
    dend_15 { pt3dadd( 50.6212, -200.799, 5.63668, 0.12 ) }
    dend_15 { pt3dadd( 50.5826, -200.955, 5.549, 0.36 ) }
    dend_15 { pt3dadd( 50.5593, -201.124, 5.4632, 0.12 ) }
    dend_15 { pt3dadd( 50.5191, -201.801, 5.16073, 0.12 ) }
    dend_15 { pt3dadd( 50.5168, -202.439, 4.93096, 0.84 ) }
    dend_15 { pt3dadd( 50.5353, -203.37, 4.6938, 0.12 ) }
    dend_15 { pt3dadd( 50.5609, -204.336, 4.39561, 0.12 ) }
    dend_15 { pt3dadd( 50.5881, -205.332, 4.0232, 0.12 ) }
    dend_15 { pt3dadd( 50.5962, -205.699, 3.87402, 0.72 ) }
    dend_15 { pt3dadd( 50.6012, -206.277, 3.63178, 0.96 ) }
    dend_15 { pt3dadd( 50.5989, -206.649, 3.4853, 0.96 ) }
    dend_15 { pt3dadd( 50.5627, -207.904, 3.01987, 0.48 ) }
    dend_15 { pt3dadd( 50.5119, -208.567, 2.76266, 0.12 ) }
    dend_15 { pt3dadd( 50.4164, -209.37, 2.42876, 0.12 ) }
    dend_15 { pt3dadd( 50.2889, -210.164, 2.11041, 0.12 ) }
    dend_15 { pt3dadd( 50.214, -210.51, 1.98791, 0.12 ) }
    dend_15 { pt3dadd( 50.0462, -211.128, 1.81136, 0.12 ) }
    dend_15 { pt3dadd( 49.8701, -211.642, 1.68042, 0.96 ) }
    dend_15 { pt3dadd( 49.5223, -212.508, 1.42315, 0.12 ) }
    dend_15 { pt3dadd( 49.2157, -213.198, 1.16843, 0.12 ) }
    dend_15 { pt3dadd( 48.7933, -214.086, 0.791422, 0.12 ) }
    dend_15 { pt3dadd( 48.614, -214.455, 0.612713, 0.12 ) }
    dend_15 { pt3dadd( 48.1492, -215.439, 0.114957, 0.48 ) }
    dend_15 { pt3dadd( 47.9961, -215.769, -0.0550332, 0.12 ) }
    dend_15 { pt3dadd( 47.8233, -216.154, -0.339001, 0.12 ) }
    dend_15 { pt3dadd( 47.7758, -216.276, -0.452992, 0.36 ) }
    dend_15 { pt3dadd( 47.6547, -216.593, -0.781966, 0.12 ) }
    dend_15 { pt3dadd( 47.3747, -217.35, -1.60464, 0.12 ) }
    dend_15 { pt3dadd( 47.1356, -218.009, -2.3349, 1.32 ) }
    dend_15 { pt3dadd( 46.5057, -219.704, -4.31404, 0.84 ) }
    dend_15 { pt3dadd( 46.4196, -219.921, -4.59583, 0.84 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 57/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -4.9697, -37.1211, -15.9441, 0.36 ) }
    dend_13 { pt3dadd( -4.96139, -38.2508, -17.1002, 0.36 ) }
    dend_13 { pt3dadd( -4.92003, -38.9149, -17.7586, 0.36 ) }
    dend_13 { pt3dadd( -4.86582, -39.5031, -18.2679, 0.6 ) }
    dend_13 { pt3dadd( -4.76972, -40.2405, -18.8357, 0.96 ) }
    dend_13 { pt3dadd( -4.68531, -40.7279, -19.1426, 0.84 ) }
    dend_13 { pt3dadd( -4.34844, -42.2197, -19.8948, 0.36 ) }
    dend_13 { pt3dadd( -4.15495, -42.7876, -20.0679, 0.36 ) }
    dend_13 { pt3dadd( -3.73173, -43.8092, -20.264, 0.36 ) }
    dend_13 { pt3dadd( -3.4763, -44.3818, -20.312, 0.48 ) }
    dend_13 { pt3dadd( -2.94466, -45.5534, -20.3135, 0.48 ) }
    dend_13 { pt3dadd( -2.48831, -46.5178, -20.2699, 0.12 ) }
    dend_13 { pt3dadd( -1.96733, -47.5584, -20.1751, 0.12 ) }
    dend_13 { pt3dadd( -1.55476, -48.2831, -20.1376, 0.12 ) }
    dend_13 { pt3dadd( -1.41273, -48.5221, -20.1351, 0.84 ) }
    dend_13 { pt3dadd( -1.1124, -49.0547, -20.1589, 0.84 ) }
    dend_13 { pt3dadd( -0.653783, -49.9342, -20.2834, 0.36 ) }
    dend_13 { pt3dadd( -0.346795, -50.5725, -20.4015, 0.12 ) }
    dend_13 { pt3dadd( 0.287572, -51.902, -20.6883, 0.12 ) }
    dend_13 { pt3dadd( 0.493001, -52.2847, -20.7746, 0.48 ) }
    dend_13 { pt3dadd( 0.705289, -52.668, -20.8688, 0.48 ) }
    dend_13 { pt3dadd( 1.04036, -53.277, -21.0168, 0.36 ) }
    dend_13 { pt3dadd( 1.18226, -53.5888, -21.0995, 0.36 ) }
    dend_13 { pt3dadd( 1.41135, -54.2313, -21.3353, 0.48 ) }
    dend_13 { pt3dadd( 1.59981, -55.0106, -21.8343, 0.36 ) }
    dend_13 { pt3dadd( 1.7231, -55.6166, -22.2936, 0.48 ) }
    dend_13 { pt3dadd( 1.78258, -55.9891, -22.6041, 0.72 ) }
    dend_13 { pt3dadd( 1.8509, -56.6713, -23.2369, 0.72 ) }
    dend_13 { pt3dadd( 1.87555, -57.4156, -23.9515, 0.72 ) }
    dend_13 { pt3dadd( 1.89536, -58.9002, -25.4366, 0.12 ) }
    dend_13 { pt3dadd( 1.9043, -59.1735, -25.7126, 0.12 ) }
    dend_13 { pt3dadd( 1.91362, -59.2533, -25.7915, 0.48 ) }
    dend_13 { pt3dadd( 2.05626, -59.9456, -26.4558, 0.48 ) }
    dend_13 { pt3dadd( 2.31509, -60.809, -27.1799, 0.12 ) }
    dend_13 { pt3dadd( 2.52722, -61.3871, -27.6261, 0.12 ) }
    dend_13 { pt3dadd( 2.69394, -61.7999, -27.9033, 0.12 ) }
    dend_13 { pt3dadd( 2.80804, -62.1218, -28.1249, 0.48 ) }
    dend_13 { pt3dadd( 2.99867, -62.729, -28.5601, 0.84 ) }
    dend_13 { pt3dadd( 3.22626, -63.53, -29.1274, 0.84 ) }
    dend_13 { pt3dadd( 3.44225, -64.6275, -29.8799, 0.12 ) }
    dend_13 { pt3dadd( 3.45231, -64.7297, -29.9493, 0.12 ) }
    dend_13 { pt3dadd( 3.46447, -65.3931, -30.3865, 0.12 ) }
    dend_13 { pt3dadd( 3.41844, -66.1903, -31.0003, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_13 { pt3dadd( 3.37451, -66.6711, -31.3856, 0.12 ) }
    dend_13 { pt3dadd( 3.30524, -67.5375, -32.0543, 0.12 ) }
    dend_13 { pt3dadd( 3.25954, -68.2322, -32.6003, 0.84 ) }
    dend_13 { pt3dadd( 3.23847, -68.7797, -33.0536, 0.72 ) }
    dend_13 { pt3dadd( 3.22856, -70.4477, -34.4706, 0.24 ) }
    dend_13 { pt3dadd( 3.23413, -70.7532, -34.7908, 0.24 ) }
    dend_13 { pt3dadd( 3.29828, -71.4843, -35.6771, 0.24 ) }
    dend_13 { pt3dadd( 3.4452, -72.2009, -36.6194, 0.6 ) }
    dend_13 { pt3dadd( 3.56839, -72.6369, -37.1998, 0.84 ) }
    dend_13 { pt3dadd( 3.65437, -72.8606, -37.5018, 0.6 ) }
    dend_13 { pt3dadd( 4.46174, -74.6271, -39.7153, 0.12 ) }
    dend_13 { pt3dadd( 4.58462, -74.8816, -40.0449, 0.12 ) }
    dend_13 { pt3dadd( 4.76325, -75.2372, -40.5122, 0.12 ) }
    dend_13 { pt3dadd( 4.80618, -75.3296, -40.6107, 0.48 ) }
    dend_13 { pt3dadd( 4.94877, -75.706, -40.9429, 0.48 ) }
    dend_13 { pt3dadd( 5.06267, -76.1228, -41.1974, 0.48 ) }
    dend_13 { pt3dadd( 5.18144, -76.8172, -41.4055, 0.36 ) }
    dend_13 { pt3dadd( 5.24036, -77.2468, -41.5333, 0.36 ) }
    dend_13 { pt3dadd( 5.33466, -77.9953, -41.7446, 0.36 ) }
    dend_13 { pt3dadd( 5.43048, -78.6494, -41.959, 0.12 ) }
    dend_13 { pt3dadd( 5.53216, -79.3242, -42.1921, 0.12 ) }
    dend_13 { pt3dadd( 5.60881, -79.8271, -42.371, 0.6 ) }
    dend_13 { pt3dadd( 5.7022, -80.4504, -42.5823, 0.84 ) }
    dend_13 { pt3dadd( 5.78013, -80.9341, -42.745, 0.84 ) }
    dend_13 { pt3dadd( 5.94297, -81.9592, -43.1384, 0.36 ) }
    dend_13 { pt3dadd( 6.0222, -82.5238, -43.3783, 0.36 ) }
    dend_13 { pt3dadd( 6.08426, -83.0598, -43.6385, 0.48 ) }
    dend_13 { pt3dadd( 6.13827, -83.5061, -43.866, 0.48 ) }
    dend_13 { pt3dadd( 6.20099, -83.9629, -44.093, 0.72 ) }
    dend_13 { pt3dadd( 6.35408, -84.9572, -44.5283, 0.72 ) }
    dend_13 { pt3dadd( 6.49492, -85.732, -44.8138, 0.36 ) }
    dend_13 { pt3dadd( 6.53863, -85.9233, -44.8906, 0.24 ) }
    dend_13 { pt3dadd( 6.67396, -86.4175, -45.0872, 0.12 ) }
    dend_13 { pt3dadd( 6.93062, -87.244, -45.3661, 0.12 ) }
    dend_13 { pt3dadd( 7.15816, -87.9312, -45.521, 0.12 ) }
    dend_13 { pt3dadd( 7.20091, -88.0483, -45.5324, 0.48 ) }
    dend_13 { pt3dadd( 7.51054, -88.8256, -45.5973, 0.6 ) }
    dend_13 { pt3dadd( 7.65733, -89.1804, -45.6312, 0.6 ) }
    dend_13 { pt3dadd( 7.99957, -89.9596, -45.7074, 0.12 ) }
    dend_13 { pt3dadd( 8.43909, -90.9168, -45.7957, 0.12 ) }
    dend_13 { pt3dadd( 8.66502, -91.3943, -45.8335, 0.36 ) }
    dend_13 { pt3dadd( 8.94987, -92.0151, -45.8711, 0.12 ) }
    dend_13 { pt3dadd( 9.25878, -92.6965, -45.916, 0.12 ) }
    dend_13 { pt3dadd( 9.6576, -93.6156, -46.0192, 0.12 ) }
    dend_13 { pt3dadd( 9.84564, -94.0789, -46.092, 0.12 ) }
    dend_13 { pt3dadd( 10.0061, -94.4951, -46.1572, 0.48 ) }
    dend_13 { pt3dadd( 10.1764, -94.967, -46.2237, 0.48 ) }
    dend_13 { pt3dadd( 10.3677, -95.5221, -46.3, 0.12 ) }
    dend_13 { pt3dadd( 10.8085, -96.8918, -46.5248, 0.12 ) }
    dend_13 { pt3dadd( 10.8734, -97.1307, -46.5649, 0.48 ) }
    dend_13 { pt3dadd( 10.9702, -97.511, -46.624, 0.48 ) }
    dend_13 { pt3dadd( 11.0562, -97.8941, -46.6828, 0.48 ) }
    dend_13 { pt3dadd( 11.1475, -98.3279, -46.7422, 0.12 ) }
    dend_13 { pt3dadd( 11.264, -98.9422, -46.8066, 0.12 ) }
    dend_13 { pt3dadd( 11.4737, -100.19, -46.9383, 0.12 ) }
    dend_13 { pt3dadd( 11.5563, -100.744, -46.9897, 0.24 ) }
    dend_13 { pt3dadd( 11.6101, -101.089, -47.0107, 0.12 ) }
    dend_13 { pt3dadd( 11.7367, -101.874, -47.0319, 0.12 ) }
    dend_13 { pt3dadd( 11.9027, -102.865, -47.0254, 0.12 ) }
    dend_13 { pt3dadd( 11.9689, -103.236, -47.0176, 0.12 ) }
    dend_13 { pt3dadd( 12.1048, -103.978, -46.9872, 0.12 ) }
    dend_13 { pt3dadd( 12.2556, -104.735, -46.9428, 0.48 ) }
    dend_13 { pt3dadd( 12.3161, -104.989, -46.9237, 0.48 ) }
    dend_13 { pt3dadd( 12.3768, -105.233, -46.9056, 0.48 ) }
    dend_13 { pt3dadd( 12.4193, -105.405, -46.894, 0.12 ) }
    dend_13 { pt3dadd( 12.5185, -105.789, -46.8751, 0.12 ) }
    dend_13 { pt3dadd( 12.6766, -106.447, -46.86, 0.12 ) }
    dend_13 { pt3dadd( 12.8193, -107.219, -46.8637, 0.12 ) }
    dend_13 { pt3dadd( 12.8609, -107.496, -46.887, 0.72 ) }
    dend_13 { pt3dadd( 12.9015, -107.842, -46.9577, 0.84 ) }
    dend_13 { pt3dadd( 12.9301, -108.343, -47.1112, 0.24 ) }
    dend_13 { pt3dadd( 12.9164, -109.043, -47.3828, 0.24 ) }
    dend_13 { pt3dadd( 12.8892, -109.492, -47.5768, 0.24 ) }
    dend_13 { pt3dadd( 12.8681, -110.442, -47.984, 0.36 ) }
    dend_13 { pt3dadd( 12.8915, -111.189, -48.3241, 0.12 ) }
    dend_13 { pt3dadd( 12.9247, -111.696, -48.5562, 0.12 ) }
    dend_13 { pt3dadd( 12.9689, -112.301, -48.8235, 0.12 ) }
    dend_13 { pt3dadd( 13.0522, -113.032, -49.1151, 0.12 ) }
    dend_13 { pt3dadd( 13.2017, -113.934, -49.4353, 0.48 ) }
    dend_13 { pt3dadd( 13.3507, -114.619, -49.6205, 0.12 ) }
    dend_13 { pt3dadd( 13.4684, -115.072, -49.7643, 0.12 ) }
    dend_13 { pt3dadd( 13.5962, -115.519, -49.9467, 0.12 ) }
    dend_13 { pt3dadd( 13.7276, -115.97, -50.153, 0.12 ) }
    dend_13 { pt3dadd( 13.8554, -116.448, -50.4152, 0.6 ) }
    dend_13 { pt3dadd( 13.9597, -116.87, -50.6646, 0.6 ) }
    dend_13 { pt3dadd( 14.266, -118.067, -51.3595, 0.12 ) }
    dend_13 { pt3dadd( 14.4358, -118.692, -51.7664, 0.12 ) }
    dend_13 { pt3dadd( 14.5937, -119.327, -52.179, 0.12 ) }
    dend_13 { pt3dadd( 14.7752, -120.114, -52.6447, 0.6 ) }
    dend_13 { pt3dadd( 14.8566, -120.458, -52.8183, 0.6 ) }
    dend_13 { pt3dadd( 14.9435, -120.81, -52.9744, 0.6 ) }
    dend_13 { pt3dadd( 15.1548, -121.638, -53.2543, 0.12 ) }
    dend_13 { pt3dadd( 15.4445, -122.689, -53.561, 0.12 ) }
    dend_13 { pt3dadd( 15.696, -123.57, -53.7904, 0.12 ) }
    dend_13 { pt3dadd( 15.929, -124.323, -53.9448, 0.36 ) }
    dend_13 { pt3dadd( 16.014, -124.563, -54.0019, 0.12 ) }
    dend_13 { pt3dadd( 16.2315, -125.143, -54.1479, 0.12 ) }
    dend_13 { pt3dadd( 16.3888, -125.553, -54.2489, 0.48 ) }
    dend_13 { pt3dadd( 16.6412, -126.256, -54.5281, 0.12 ) }
    dend_13 { pt3dadd( 16.7618, -126.785, -54.8312, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_13 { pt3dadd( 16.833, -127.621, -55.3944, 0.12 ) }
    dend_13 { pt3dadd( 16.8208, -127.983, -55.6557, 0.6 ) }
    dend_13 { pt3dadd( 16.7847, -128.207, -55.8137, 0.6 ) }
    dend_13 { pt3dadd( 16.4819, -129.314, -56.6021, 0.12 ) }
    dend_13 { pt3dadd( 16.2129, -130.067, -57.108, 0.12 ) }
    dend_13 { pt3dadd( 16.0274, -130.512, -57.3798, 0.36 ) }
    dend_13 { pt3dadd( 15.7656, -131.078, -57.6814, 0.36 ) }
    dend_13 { pt3dadd( 15.3928, -131.942, -58.0916, 0.36 ) }
    dend_13 { pt3dadd( 15.0832, -132.64, -58.3685, 0.12 ) }
    dend_13 { pt3dadd( 14.8203, -133.192, -58.5389, 0.12 ) }
    dend_13 { pt3dadd( 14.4843, -133.799, -58.7136, 0.48 ) }
    dend_13 { pt3dadd( 14.2908, -134.129, -58.8033, 0.12 ) }
    dend_13 { pt3dadd( 13.8059, -134.882, -58.9886, 0.12 ) }
    dend_13 { pt3dadd( 13.3605, -135.508, -59.1203, 0.6 ) }
    dend_13 { pt3dadd( 12.9822, -136.021, -59.2043, 0.12 ) }
    dend_13 { pt3dadd( 12.5447, -136.558, -59.2929, 0.12 ) }
    dend_13 { pt3dadd( 11.8804, -137.303, -59.4144, 0.12 ) }
    dend_13 { pt3dadd( 11.6121, -137.582, -59.4551, 0.12 ) }
    dend_13 { pt3dadd( 10.9864, -138.168, -59.5256, 0.48 ) }
    dend_13 { pt3dadd( 10.6454, -138.482, -59.5576, 0.12 ) }
    dend_13 { pt3dadd( 10.0545, -138.981, -59.59, 0.12 ) }
    dend_13 { pt3dadd( 9.64647, -139.283, -59.6094, 0.48 ) }
    dend_13 { pt3dadd( 9.13003, -139.602, -59.6407, 0.48 ) }
    dend_13 { pt3dadd( 8.9811, -139.687, -59.6498, 0.12 ) }
    dend_13 { pt3dadd( 8.52492, -139.923, -59.6758, 0.12 ) }
    dend_13 { pt3dadd( 8.03657, -140.167, -59.6995, 0.48 ) }
    dend_13 { pt3dadd( 7.5945, -140.399, -59.722, 0.48 ) }
    dend_13 { pt3dadd( 6.995, -140.719, -59.75, 0.12 ) }
    dend_13 { pt3dadd( 6.40781, -141.01, -59.7769, 0.12 ) }
    dend_13 { pt3dadd( 6.01297, -141.196, -59.7856, 0.12 ) }
    dend_13 { pt3dadd( 5.86376, -141.264, -59.786, 0.12 ) }
    dend_13 { pt3dadd( 5.46315, -141.435, -59.7793, 0.48 ) }
    dend_13 { pt3dadd( 4.86332, -141.687, -59.7564, 0.48 ) }
    dend_13 { pt3dadd( 4.30332, -141.91, -59.7234, 0.48 ) }
    dend_13 { pt3dadd( 3.66264, -142.145, -59.6887, 0.12 ) }
    dend_13 { pt3dadd( 3.25078, -142.283, -59.6697, 0.12 ) }
    dend_13 { pt3dadd( 2.19958, -142.565, -59.6347, 0.12 ) }
    dend_13 { pt3dadd( 1.76793, -142.66, -59.625, 0.12 ) }
    dend_13 { pt3dadd( 1.53192, -142.705, -59.6325, 0.6 ) }
    dend_13 { pt3dadd( 1.04722, -142.801, -59.6705, 0.6 ) }
    dend_13 { pt3dadd( 0.56199, -142.912, -59.7255, 0.24 ) }
    dend_13 { pt3dadd( -0.710355, -143.263, -59.8875, 0.24 ) }
    dend_13 { pt3dadd( -1.16908, -143.446, -59.9501, 0.48 ) }
    dend_13 { pt3dadd( -1.92155, -143.827, -60.0516, 0.12 ) }
    dend_13 { pt3dadd( -2.56603, -144.242, -60.1884, 0.12 ) }
    dend_13 { pt3dadd( -3.15954, -144.716, -60.3522, 0.12 ) }
    dend_13 { pt3dadd( -3.58075, -145.14, -60.4918, 0.12 ) }
    dend_13 { pt3dadd( -4.32885, -146.117, -60.7756, 0.12 ) }
    dend_13 { pt3dadd( -4.56319, -146.488, -60.8622, 0.48 ) }
    dend_13 { pt3dadd( -5.20883, -147.766, -61.0712, 0.48 ) }
    dend_13 { pt3dadd( -5.39114, -148.18, -61.1293, 0.12 ) }
    dend_13 { pt3dadd( -5.6908, -148.948, -61.2209, 0.12 ) }
    dend_13 { pt3dadd( -6.09433, -150.108, -61.3332, 0.12 ) }
    dend_13 { pt3dadd( -6.56544, -151.724, -61.442, 0.12 ) }
    dend_13 { pt3dadd( -7.06682, -153.849, -61.5634, 0.12 ) }
    dend_13 { pt3dadd( -7.13387, -154.248, -61.5769, 0.72 ) }
    dend_13 { pt3dadd( -7.20195, -154.862, -61.6108, 0.48 ) }
    dend_13 { pt3dadd( -7.21019, -155.04, -61.6205, 0.12 ) }
    dend_13 { pt3dadd( -7.17123, -156.108, -61.6792, 0.12 ) }
    dend_13 { pt3dadd( -7.00975, -157.255, -61.7384, 0.12 ) }
    dend_13 { pt3dadd( -6.81311, -158.065, -61.7699, 0.12 ) }
    dend_13 { pt3dadd( -6.71149, -158.448, -61.7773, 0.36 ) }
    dend_13 { pt3dadd( -6.52325, -159.122, -61.7753, 0.12 ) }
    dend_13 { pt3dadd( -6.31875, -159.858, -61.7581, 0.12 ) }
    dend_13 { pt3dadd( -6.09888, -160.66, -61.7156, 0.12 ) }
    dend_13 { pt3dadd( -5.86815, -161.532, -61.6433, 0.12 ) }
    dend_13 { pt3dadd( -5.74172, -162.299, -62.2496, 0.12 ) }
    dend_13 { pt3dadd( -5.7068, -162.719, -63.1828, 0.12 ) }
    dend_13 { pt3dadd( -5.70402, -162.789, -63.4132, 0.12 ) }
    dend_13 { pt3dadd( -5.70547, -162.884, -63.8898, 0.72 ) }
    dend_13 { pt3dadd( -5.70843, -162.929, -64.373, 1.08 ) }
    dend_13 { pt3dadd( -5.87618, -163.029, -72.1487, 0.84 ) }
    dend_13 { pt3dadd( -5.9381, -162.886, -74.5724, 0.12 ) }
    dend_13 { pt3dadd( -5.94827, -162.838, -75.0401, 0.12 ) }
    dend_13 { pt3dadd( -5.95615, -162.753, -75.7654, 0.12 ) }
    dend_13 { pt3dadd( -5.94948, -162.468, -77.8706, 0.48 ) }
    dend_13 { pt3dadd( -5.90698, -162.165, -79.8609, 0.6 ) }
    dend_13 { pt3dadd( -5.80574, -161.849, -81.7066, 0.6 ) }
    dend_13 { pt3dadd( -5.64447, -161.651, -84.6283, 0.12 ) }
    dend_13 { pt3dadd( -5.60894, -161.668, -85.2734, 0.12 ) }
    dend_13 { pt3dadd( -5.58865, -161.708, -85.5382, 0.12 ) }
    dend_13 { pt3dadd( -5.55458, -161.786, -85.7639, 0.72 ) }
    dend_13 { pt3dadd( -5.39654, -162.066, -86.28, 0.72 ) }
    dend_13 { pt3dadd( -4.7543, -163.009, -87.5126, 0.12 ) }
    dend_13 { pt3dadd( -4.63453, -163.143, -87.6616, 0.12 ) }
    dend_13 { pt3dadd( -4.04019, -163.694, -88.3226, 0.12 ) }
    dend_13 { pt3dadd( -3.03409, -164.425, -89.5788, 0.12 ) }
    dend_13 { pt3dadd( -2.81962, -164.53, -89.8501, 0.12 ) }
    dend_13 { pt3dadd( -2.14121, -164.71, -90.6815, 0.12 ) }
    dend_13 { pt3dadd( -1.97077, -164.725, -90.8883, 0.72 ) }
    dend_13 { pt3dadd( -1.67927, -164.738, -91.2758, 0.72 ) }
    dend_13 { pt3dadd( -0.358269, -164.776, -93.4412, 0.12 ) }
    dend_13 { pt3dadd( -0.0963839, -164.793, -93.9094, 0.12 ) }
    dend_13 { pt3dadd( 0.0200451, -164.801, -94.1509, 0.48 ) }
    dend_13 { pt3dadd( 0.299902, -164.803, -94.9979, 0.12 ) }
    dend_13 { pt3dadd( 0.463555, -164.785, -95.6172, 0.12 ) }
    dend_13 { pt3dadd( 0.691783, -164.752, -96.511, 0.72 ) }
    dend_13 { pt3dadd( 0.784583, -164.756, -96.8789, 0.84 ) }
    dend_13 { pt3dadd( 1.1113, -164.785, -98.4346, 1.32 ) }
    dend_13 { pt3dadd( 1.42391, -164.742, -100.344, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_13 { pt3dadd( 1.46469, -164.699, -100.719, 0.6 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 1/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 26.2654, 2.91887, -6.40999, 0.48 ) }
    dend_9 { pt3dadd( 26.4851, 3.58189, -6.90041, 0.48 ) }
    dend_9 { pt3dadd( 26.7176, 4.35959, -7.53159, 0.12 ) }
    dend_9 { pt3dadd( 27.02, 5.27586, -8.29476, 0.12 ) }
    dend_9 { pt3dadd( 27.1958, 5.77502, -8.69561, 1.2 ) }
    dend_9 { pt3dadd( 27.2898, 6.03154, -8.9117, 1.2 ) }
    dend_9 { pt3dadd( 28.1284, 8.20962, -10.7853, 0.12 ) }
    dend_9 { pt3dadd( 28.4857, 8.97565, -11.507, 0.12 ) }
    dend_9 { pt3dadd( 28.6691, 9.31562, -11.8371, 0.12 ) }
    dend_9 { pt3dadd( 28.8939, 9.67105, -12.2013, 0.12 ) }
    dend_9 { pt3dadd( 29.5489, 10.5875, -13.3003, 0.72 ) }
    dend_9 { pt3dadd( 29.8661, 10.9784, -13.7912, 0.84 ) }
    dend_9 { pt3dadd( 30.2755, 11.3766, -14.282, 0.12 ) }
    dend_9 { pt3dadd( 30.4341, 11.4999, -14.4638, 0.12 ) }
    dend_9 { pt3dadd( 30.7816, 11.7337, -14.8993, 0.72 ) }
    dend_9 { pt3dadd( 32.3931, 12.6399, -16.9317, 0.12 ) }
    dend_9 { pt3dadd( 32.727, 12.803, -17.322, 0.12 ) }
    dend_9 { pt3dadd( 33.2605, 13.0482, -17.9392, 0.12 ) }
    dend_9 { pt3dadd( 33.4971, 13.1655, -18.2141, 0.96 ) }
    dend_9 { pt3dadd( 34.6593, 13.7919, -19.4614, 0.12 ) }
    dend_9 { pt3dadd( 34.9288, 13.9449, -19.767, 0.12 ) }
    dend_9 { pt3dadd( 35.4212, 14.2384, -20.2771, 0.6 ) }
    dend_9 { pt3dadd( 35.8737, 14.5137, -20.7572, 0.12 ) }
    dend_9 { pt3dadd( 36.65, 15.006, -21.5796, 0.12 ) }
    dend_9 { pt3dadd( 37.3746, 15.4681, -22.3238, 0.72 ) }
    dend_9 { pt3dadd( 38.8532, 16.4215, -23.7286, 0.12 ) }
    dend_9 { pt3dadd( 39.4288, 16.7963, -24.2803, 0.12 ) }
    dend_9 { pt3dadd( 39.9317, 17.1207, -24.7574, 0.12 ) }
    dend_9 { pt3dadd( 40.1631, 17.2739, -24.9584, 0.6 ) }
    dend_9 { pt3dadd( 40.9854, 17.8056, -25.588, 0.12 ) }
    dend_9 { pt3dadd( 41.2412, 17.9676, -25.7491, 0.12 ) }
    dend_9 { pt3dadd( 41.7192, 18.2567, -25.9849, 0.6 ) }
    dend_9 { pt3dadd( 41.9015, 18.3591, -26.1068, 0.12 ) }
    dend_9 { pt3dadd( 42.3398, 18.5861, -26.441, 0.12 ) }
    dend_9 { pt3dadd( 42.9871, 18.8557, -26.9108, 0.6 ) }
    dend_9 { pt3dadd( 43.3874, 18.9892, -27.1723, 0.6 ) }
    dend_9 { pt3dadd( 44.3775, 19.2417, -27.8102, 0.48 ) }
    dend_9 { pt3dadd( 45.0309, 19.389, -28.23, 0.12 ) }
    dend_9 { pt3dadd( 45.4552, 19.4887, -28.4949, 0.12 ) }
    dend_9 { pt3dadd( 46.2744, 19.6709, -28.9643, 0.12 ) }
    dend_9 { pt3dadd( 46.7099, 19.7785, -29.1755, 0.12 ) }
    dend_9 { pt3dadd( 47.2296, 19.9405, -29.4594, 0.48 ) }
    dend_9 { pt3dadd( 47.9035, 20.1857, -29.8179, 0.48 ) }
    dend_9 { pt3dadd( 48.1191, 20.2658, -29.9404, 0.48 ) }
    dend_9 { pt3dadd( 48.505, 20.4153, -30.1876, 0.12 ) }
    dend_9 { pt3dadd( 48.7112, 20.5025, -30.338, 0.12 ) }
    dend_9 { pt3dadd( 49.7704, 20.9209, -31.2604, 0.12 ) }
    dend_9 { pt3dadd( 50.3238, 21.1054, -31.7492, 1.44 ) }
    dend_9 { pt3dadd( 50.98, 21.2814, -32.3185, 0.12 ) }
    dend_9 { pt3dadd( 51.2992, 21.3503, -32.6115, 0.12 ) }
    dend_9 { pt3dadd( 51.5813, 21.392, -32.9338, 0.24 ) }
    dend_9 { pt3dadd( 52.6213, 21.4827, -34.1671, 0.12 ) }
    dend_9 { pt3dadd( 53.2604, 21.5117, -34.8965, 0.12 ) }
    dend_9 { pt3dadd( 53.5096, 21.5201, -35.1825, 0.72 ) }
    dend_9 { pt3dadd( 54.3468, 21.5535, -36.1004, 0.12 ) }
    dend_9 { pt3dadd( 56.3818, 21.644, -38.2123, 0.12 ) }
    dend_9 { pt3dadd( 56.9862, 21.6807, -38.7988, 0.12 ) }
    dend_9 { pt3dadd( 57.5429, 21.7301, -39.2737, 0.12 ) }
    dend_9 { pt3dadd( 57.9639, 21.7859, -39.6023, 0.12 ) }
    dend_9 { pt3dadd( 58.506, 21.8958, -39.9309, 0.72 ) }
    dend_9 { pt3dadd( 58.7336, 21.9652, -40.0107, 0.72 ) }
    dend_9 { pt3dadd( 59.4642, 22.2634, -40.1496, 0.12 ) }
    dend_9 { pt3dadd( 60.243, 22.6354, -40.3259, 0.12 ) }
    dend_9 { pt3dadd( 60.8519, 22.9435, -40.5069, 0.12 ) }
    dend_9 { pt3dadd( 61.7318, 23.4053, -40.8001, 0.12 ) }
    dend_9 { pt3dadd( 62.3292, 23.7236, -41.0021, 0.12 ) }
    dend_9 { pt3dadd( 63.0785, 24.1287, -41.2458, 0.48 ) }
    dend_9 { pt3dadd( 63.3586, 24.2811, -41.371, 0.48 ) }
    dend_9 { pt3dadd( 64.0392, 24.6297, -41.7724, 0.12 ) }
    dend_9 { pt3dadd( 64.5777, 24.8844, -42.138, 0.12 ) }
    dend_9 { pt3dadd( 65.235, 25.1714, -42.6444, 0.12 ) }
    dend_9 { pt3dadd( 65.4408, 25.2676, -42.8061, 0.48 ) }
    dend_9 { pt3dadd( 66.9957, 26.024, -43.9804, 0.12 ) }
    dend_9 { pt3dadd( 67.676, 26.3914, -44.608, 0.12 ) }
    dend_9 { pt3dadd( 67.9662, 26.5672, -44.8818, 0.36 ) }
    dend_9 { pt3dadd( 68.2952, 26.7786, -45.2106, 0.12 ) }
    dend_9 { pt3dadd( 68.8988, 27.1908, -45.8437, 0.12 ) }
    dend_9 { pt3dadd( 69.0513, 27.2989, -45.9978, 0.36 ) }
    dend_9 { pt3dadd( 70.5043, 28.39, -47.2648, 0.12 ) }
    dend_9 { pt3dadd( 71.4192, 29.1293, -48.2207, 0.12 ) }
    dend_9 { pt3dadd( 71.4192, 29.1293, -48.2207, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 82/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 26.2654, 2.91887, -6.40999, 0.36 ) }
    dend_8 { pt3dadd( 26.97, 3.65932, -6.48918, 0.36 ) }
    dend_8 { pt3dadd( 27.8227, 4.51395, -6.55954, 0.36 ) }
    dend_8 { pt3dadd( 28.3943, 5.0518, -6.59619, 0.96 ) }
    dend_8 { pt3dadd( 28.958, 5.58783, -6.58528, 1.2 ) }
    dend_8 { pt3dadd( 29.5206, 6.13552, -6.54369, 0.96 ) }
    dend_8 { pt3dadd( 29.9488, 6.57123, -6.49626, 0.72 ) }
    dend_8 { pt3dadd( 30.4332, 7.08701, -6.3792, 0.72 ) }
    dend_8 { pt3dadd( 30.7594, 7.4651, -6.24344, 0.72 ) }
    dend_8 { pt3dadd( 31.3479, 8.20106, -5.9039, 0.36 ) }
    dend_8 { pt3dadd( 31.4542, 8.33731, -5.82933, 0.36 ) }
    dend_8 { pt3dadd( 31.824, 8.78322, -5.52359, 0.6 ) }
    dend_8 { pt3dadd( 32.0365, 8.99254, -5.33598, 0.6 ) }
    dend_8 { pt3dadd( 32.8612, 9.60817, -4.5499, 0.48 ) }
    dend_8 { pt3dadd( 33.4347, 9.97323, -3.98544, 0.48 ) }
    dend_8 { pt3dadd( 33.8948, 10.2696, -3.53301, 0.48 ) }
    dend_8 { pt3dadd( 34.4532, 10.6104, -2.93934, 0.96 ) }
    dend_8 { pt3dadd( 35.1517, 10.9741, -2.18774, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_8 { pt3dadd( 35.8251, 11.2697, -1.44041, 0.72 ) }
    dend_8 { pt3dadd( 36.3606, 11.465, -0.856406, 0.48 ) }
    dend_8 { pt3dadd( 37.2654, 11.8377, 0.0966626, 0.72 ) }
    dend_8 { pt3dadd( 38.033, 12.246, 0.832924, 0.72 ) }
    dend_8 { pt3dadd( 38.5532, 12.6067, 1.28789, 0.72 ) }
    dend_8 { pt3dadd( 39.3996, 13.3303, 1.96439, 0.48 ) }
    dend_8 { pt3dadd( 39.8315, 13.7576, 2.26096, 0.36 ) }
    dend_8 { pt3dadd( 40.5641, 14.534, 2.69155, 0.36 ) }
    dend_8 { pt3dadd( 41.1116, 15.1675, 2.95735, 0.36 ) }
    dend_8 { pt3dadd( 41.6695, 15.8891, 3.16661, 0.84 ) }
    dend_8 { pt3dadd( 42.1092, 16.4741, 3.31186, 0.84 ) }
    dend_8 { pt3dadd( 42.6504, 17.1866, 3.43915, 0.48 ) }
    dend_8 { pt3dadd( 43.1777, 17.8669, 3.56856, 0.48 ) }
    dend_8 { pt3dadd( 43.5193, 18.2909, 3.65918, 0.6 ) }
    dend_8 { pt3dadd( 44.0527, 18.9683, 3.79805, 0.72 ) }
    dend_8 { pt3dadd( 44.5958, 19.6772, 3.93861, 0.36 ) }
    dend_8 { pt3dadd( 45.0174, 20.2384, 4.05825, 0.36 ) }
    dend_8 { pt3dadd( 45.5647, 20.9922, 4.2213, 0.48 ) }
    dend_8 { pt3dadd( 45.9221, 21.5127, 4.32864, 0.96 ) }
    dend_8 { pt3dadd( 46.4654, 22.3534, 4.49843, 1.08 ) }
    dend_8 { pt3dadd( 46.9655, 23.1721, 4.64986, 0.36 ) }
    dend_8 { pt3dadd( 47.5884, 24.2116, 4.81228, 0.36 ) }
    dend_8 { pt3dadd( 48.2301, 25.2516, 4.96478, 0.48 ) }
    dend_8 { pt3dadd( 48.3746, 25.4815, 4.99439, 0.48 ) }
    dend_8 { pt3dadd( 48.6926, 25.9872, 5.05204, 0.12 ) }
    dend_8 { pt3dadd( 49.2052, 26.833, 5.14035, 0.12 ) }
    dend_8 { pt3dadd( 49.7243, 27.7579, 5.2158, 0.48 ) }
    dend_8 { pt3dadd( 50.061, 28.4062, 5.26763, 0.36 ) }
    dend_8 { pt3dadd( 50.4062, 29.1178, 5.31746, 0.36 ) }
    dend_8 { pt3dadd( 50.7861, 29.9231, 5.36279, 0.48 ) }
    dend_8 { pt3dadd( 50.9487, 30.2679, 5.37724, 0.12 ) }
    dend_8 { pt3dadd( 51.41, 31.23, 5.4138, 0.12 ) }
    dend_8 { pt3dadd( 51.575, 31.5491, 5.43649, 0.12 ) }
    dend_8 { pt3dadd( 51.9953, 32.3417, 5.42517, 0.48 ) }
    dend_8 { pt3dadd( 52.1842, 32.6943, 5.40408, 0.24 ) }
    dend_8 { pt3dadd( 52.523, 33.338, 5.34125, 0.24 ) }
    dend_8 { pt3dadd( 52.7998, 33.883, 5.27505, 0.48 ) }
    dend_8 { pt3dadd( 53.2393, 34.8242, 5.1506, 0.96 ) }
    dend_8 { pt3dadd( 53.9542, 36.4743, 4.97264, 0.96 ) }
    dend_8 { pt3dadd( 54.1706, 37.0071, 4.93122, 0.12 ) }
    dend_8 { pt3dadd( 54.4583, 37.7954, 4.89123, 0.12 ) }
    dend_8 { pt3dadd( 54.6085, 38.2686, 4.9004, 0.24 ) }
    dend_8 { pt3dadd( 54.871, 39.184, 4.97969, 0.24 ) }
    dend_8 { pt3dadd( 55.0588, 39.886, 5.07866, 0.36 ) }
    dend_8 { pt3dadd( 55.2579, 40.6343, 5.24754, 0.36 ) }
    dend_8 { pt3dadd( 55.2999, 40.7961, 5.27897, 0.24 ) }
    dend_8 { pt3dadd( 55.5413, 41.7777, 5.51012, 0.24 ) }
    dend_8 { pt3dadd( 55.7588, 42.6718, 5.72482, 0.48 ) }
    dend_8 { pt3dadd( 55.8744, 43.1619, 5.84137, 0.24 ) }
    dend_8 { pt3dadd( 56.026, 43.7507, 5.96601, 0.24 ) }
    dend_8 { pt3dadd( 56.2924, 44.7334, 6.15871, 0.72 ) }
    dend_8 { pt3dadd( 56.5715, 45.703, 6.32389, 0.12 ) }
    dend_8 { pt3dadd( 57.0105, 47.1662, 6.52353, 0.12 ) }
    dend_8 { pt3dadd( 57.125, 47.5418, 6.57739, 0.12 ) }
    dend_8 { pt3dadd( 57.4671, 48.6545, 6.72744, 0.12 ) }
    dend_8 { pt3dadd( 57.6218, 49.1441, 6.78649, 0.96 ) }
    dend_8 { pt3dadd( 57.8178, 49.7767, 6.85172, 0.96 ) }
    dend_8 { pt3dadd( 58.1308, 50.8016, 6.92512, 0.48 ) }
    dend_8 { pt3dadd( 58.4005, 51.714, 6.99664, 0.36 ) }
    dend_8 { pt3dadd( 58.7597, 52.9275, 7.09159, 0.36 ) }
    dend_8 { pt3dadd( 58.9216, 53.4631, 7.13127, 0.36 ) }
    dend_8 { pt3dadd( 59.1974, 54.2946, 7.20258, 0.6 ) }
    dend_8 { pt3dadd( 59.3881, 54.819, 7.24899, 0.12 ) }
    dend_8 { pt3dadd( 59.6272, 55.3968, 7.29923, 0.12 ) }
    dend_8 { pt3dadd( 59.9284, 56.0335, 7.34784, 0.12 ) }
    dend_8 { pt3dadd( 60.4663, 56.9997, 7.42851, 0.12 ) }
    dend_8 { pt3dadd( 60.8472, 57.6542, 7.48192, 0.48 ) }
    dend_8 { pt3dadd( 61.0748, 58.0362, 7.51065, 0.12 ) }
    dend_8 { pt3dadd( 61.5382, 58.8048, 7.56596, 0.12 ) }
    dend_8 { pt3dadd( 61.7692, 59.1849, 7.59045, 0.12 ) }
    dend_8 { pt3dadd( 62.6145, 60.6289, 7.6652, 0.12 ) }
    dend_8 { pt3dadd( 62.9113, 61.1628, 7.70286, 0.12 ) }
    dend_8 { pt3dadd( 63.2954, 61.8478, 7.75711, 0.12 ) }
    dend_8 { pt3dadd( 63.3809, 62.0007, 7.77342, 0.48 ) }
    dend_8 { pt3dadd( 63.7218, 62.6269, 7.84983, 0.48 ) }
    dend_8 { pt3dadd( 63.9616, 63.0769, 7.91009, 0.12 ) }
    dend_8 { pt3dadd( 64.4256, 63.9457, 8.0778, 0.12 ) }
    dend_8 { pt3dadd( 64.9782, 64.9494, 8.32776, 0.12 ) }
    dend_8 { pt3dadd( 65.3939, 65.7641, 8.53662, 0.48 ) }
    dend_8 { pt3dadd( 65.7138, 66.4577, 8.72995, 0.72 ) }
    dend_8 { pt3dadd( 65.9194, 66.9413, 8.88522, 0.72 ) }
    dend_8 { pt3dadd( 66.2082, 67.7184, 9.13981, 0.72 ) }
    dend_8 { pt3dadd( 66.5321, 68.7393, 9.46301, 0.12 ) }
    dend_8 { pt3dadd( 67.0023, 70.529, 10.0269, 0.12 ) }
    dend_8 { pt3dadd( 67.2031, 71.3252, 10.267, 0.48 ) }
    dend_8 { pt3dadd( 67.3881, 72.0651, 10.4642, 0.12 ) }
    dend_8 { pt3dadd( 67.7038, 73.2248, 10.7751, 0.12 ) }
    dend_8 { pt3dadd( 67.8804, 73.8323, 10.867, 0.6 ) }
    dend_8 { pt3dadd( 68.1757, 74.7291, 10.9093, 0.6 ) }
    dend_8 { pt3dadd( 68.4443, 75.4059, 10.8654, 0.48 ) }
    dend_8 { pt3dadd( 68.8841, 76.3548, 10.7165, 0.48 ) }
    dend_8 { pt3dadd( 69.5766, 77.6854, 10.4326, 0.36 ) }
    dend_8 { pt3dadd( 70.8789, 79.8735, 9.90258, 0.12 ) }
    dend_8 { pt3dadd( 71.3809, 80.6476, 9.7038, 0.12 ) }
    dend_8 { pt3dadd( 72.1873, 81.8111, 9.46595, 0.12 ) }
    dend_8 { pt3dadd( 72.7009, 82.5038, 9.3713, 0.12 ) }
    dend_8 { pt3dadd( 72.9252, 82.7809, 9.35793, 0.6 ) }
    dend_8 { pt3dadd( 73.3265, 83.2594, 9.3895, 0.84 ) }
    dend_8 { pt3dadd( 73.7245, 83.7007, 9.52331, 0.6 ) }
    dend_8 { pt3dadd( 74.612, 84.6161, 9.85746, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_8 { pt3dadd( 75.0241, 85.0393, 10.0241, 0.12 ) }
    dend_8 { pt3dadd( 75.28, 85.3191, 10.1355, 0.72 ) }
    dend_8 { pt3dadd( 75.7755, 85.9355, 10.3556, 0.72 ) }
    dend_8 { pt3dadd( 76.0296, 86.292, 10.4664, 0.48 ) }
    dend_8 { pt3dadd( 76.1711, 86.5245, 10.5206, 0.12 ) }
    dend_8 { pt3dadd( 76.5566, 87.2499, 10.6091, 0.12 ) }
    dend_8 { pt3dadd( 76.7462, 87.6648, 10.6583, 0.72 ) }
    dend_8 { pt3dadd( 76.9947, 88.2514, 10.6826, 0.96 ) }
    dend_8 { pt3dadd( 77.0973, 88.5066, 10.6919, 0.96 ) }
    dend_8 { pt3dadd( 77.3247, 89.1075, 10.7011, 0.12 ) }
    dend_8 { pt3dadd( 77.6415, 89.9436, 10.6922, 0.12 ) }
    dend_8 { pt3dadd( 77.8271, 90.4239, 10.6601, 0.12 ) }
    dend_8 { pt3dadd( 78.1894, 91.2959, 10.5302, 0.24 ) }
    dend_8 { pt3dadd( 83.1107, 100.257, 12.2465, 0.24 ) }
    dend_8 { pt3dadd( 88.3543, 108.888, 14.47, 0.24 ) }
    dend_8 { pt3dadd( 94.0473, 117.384, 15.9227, 0.24 ) }
    dend_8 { pt3dadd( 98.6668, 126.144, 18.9316, 0.24 ) }
    dend_8 { pt3dadd( 102.867, 134.305, 23.6176, 0.24 ) }
    dend_8 { pt3dadd( 106.992, 142.761, 27.8744, 0.24 ) }
    dend_8 { pt3dadd( 111.905, 149.993, 33.2058, 0.24 ) }
    dend_8 { pt3dadd( 116.97, 156.608, 39.0928, 0.24 ) }
    dend_8 { pt3dadd( 120.308, 163.749, 45.6197, 0.24 ) }
    dend_8 { pt3dadd( 124.8, 170.927, 51.3726, 0.24 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 23/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -7.23371, -31.0318, 4.61105, 0.48 ) }
    dend_39 { pt3dadd( -7.42053, -31.8043, 4.43923, 0.48 ) }
    dend_39 { pt3dadd( -7.73403, -33.077, 4.17571, 0.48 ) }
    dend_39 { pt3dadd( -7.93438, -33.8838, 4.01668, 0.36 ) }
    dend_39 { pt3dadd( -8.1136, -34.6025, 3.8838, 0.36 ) }
    dend_39 { pt3dadd( -8.31544, -35.4344, 3.74073, 0.36 ) }
    dend_39 { pt3dadd( -8.46634, -36.075, 3.63697, 0.6 ) }
    dend_39 { pt3dadd( -8.58939, -36.6382, 3.56856, 0.84 ) }
    dend_39 { pt3dadd( -8.69575, -37.1521, 3.54887, 1.08 ) }
    dend_39 { pt3dadd( -8.80331, -37.6487, 3.55435, 1.32 ) }
    dend_39 { pt3dadd( -8.91457, -38.139, 3.55961, 1.32 ) }
    dend_39 { pt3dadd( -8.96821, -38.3846, 3.56259, 1.32 ) }
    dend_39 { pt3dadd( -9.15183, -39.3482, 3.57546, 0.84 ) }
    dend_39 { pt3dadd( -9.28928, -40.1318, 3.58662, 0.6 ) }
    dend_39 { pt3dadd( -9.35873, -40.5204, 3.5896, 0.84 ) }
    dend_39 { pt3dadd( -9.47764, -41.1761, 3.58808, 0.84 ) }
    dend_39 { pt3dadd( -9.57332, -41.6592, 3.58254, 0.6 ) }
    dend_39 { pt3dadd( -9.76077, -42.5282, 3.57872, 0.6 ) }
    dend_39 { pt3dadd( -10.0176, -43.6476, 3.57605, 0.72 ) }
    dend_39 { pt3dadd( -10.2031, -44.4099, 3.58721, 0.72 ) }
    dend_39 { pt3dadd( -10.3962, -45.1487, 3.60995, 0.72 ) }
    dend_39 { pt3dadd( -10.6286, -45.9473, 3.64451, 0.72 ) }
    dend_39 { pt3dadd( -10.9593, -47.0067, 3.69161, 0.36 ) }
    dend_39 { pt3dadd( -11.2344, -47.8646, 3.74907, 0.36 ) }
    dend_39 { pt3dadd( -11.3529, -48.2415, 3.78178, 0.36 ) }
    dend_39 { pt3dadd( -11.4298, -48.4993, 3.81518, 0.72 ) }
    dend_39 { pt3dadd( -11.5238, -48.839, 3.89643, 0.96 ) }
    dend_39 { pt3dadd( -11.6829, -49.548, 4.12874, 0.96 ) }
    dend_39 { pt3dadd( -11.8165, -50.2477, 4.39541, 0.84 ) }
    dend_39 { pt3dadd( -11.9343, -50.9452, 4.67405, 0.6 ) }
    dend_39 { pt3dadd( -12.028, -51.5927, 4.96799, 0.48 ) }
    dend_39 { pt3dadd( -12.1743, -52.7376, 5.4999, 0.48 ) }
    dend_39 { pt3dadd( -12.2464, -53.3109, 5.7666, 0.6 ) }
    dend_39 { pt3dadd( -12.3367, -54.028, 6.06178, 0.84 ) }
    dend_39 { pt3dadd( -12.4428, -54.8535, 6.33384, 0.84 ) }
    dend_39 { pt3dadd( -12.6188, -56.2767, 6.70387, 0.72 ) }
    dend_39 { pt3dadd( -12.7205, -57.1368, 6.85185, 0.6 ) }
    dend_39 { pt3dadd( -12.771, -57.586, 6.89284, 0.72 ) }
    dend_39 { pt3dadd( -12.8947, -58.7032, 6.96354, 0.36 ) }
    dend_39 { pt3dadd( -12.9633, -59.5767, 7.04479, 0.12 ) }
    dend_39 { pt3dadd( -12.9919, -60.0755, 7.10732, 0.12 ) }
    dend_39 { pt3dadd( -13.0079, -60.4564, 7.15846, 0.48 ) }
    dend_39 { pt3dadd( -13.0296, -61.1878, 7.29436, 0.84 ) }
    dend_39 { pt3dadd( -13.0556, -62.057, 7.49161, 0.84 ) }
    dend_39 { pt3dadd( -13.147, -64.1771, 8.1217, 0.48 ) }
    dend_39 { pt3dadd( -13.1889, -65.0059, 8.38644, 0.36 ) }
    dend_39 { pt3dadd( -13.2093, -65.3538, 8.49733, 0.36 ) }
    dend_39 { pt3dadd( -13.2397, -65.8382, 8.67362, 0.72 ) }
    dend_39 { pt3dadd( -13.277, -66.3589, 8.87516, 0.84 ) }
    dend_39 { pt3dadd( -13.3651, -67.5188, 9.31442, 0.72 ) }
    dend_39 { pt3dadd( -13.4361, -68.3163, 9.64157, 0.72 ) }
    dend_39 { pt3dadd( -13.5022, -69.1153, 9.99117, 0.72 ) }
    dend_39 { pt3dadd( -13.6065, -70.5583, 10.6453, 0.6 ) }
    dend_39 { pt3dadd( -13.6392, -71.1279, 10.9043, 0.6 ) }
    dend_39 { pt3dadd( -13.691, -71.9305, 11.2489, 0.72 ) }
    dend_39 { pt3dadd( -13.8271, -73.443, 11.9062, 1.2 ) }
    dend_39 { pt3dadd( -13.9078, -74.1184, 12.2195, 1.32 ) }
    dend_39 { pt3dadd( -13.9887, -74.6726, 12.4704, 1.32 ) }
    dend_39 { pt3dadd( -14.0999, -75.3566, 12.7393, 0.48 ) }
    dend_39 { pt3dadd( -14.2705, -76.3949, 13.1203, 0.48 ) }
    dend_39 { pt3dadd( -14.4463, -77.4989, 13.4972, 0.96 ) }
    dend_39 { pt3dadd( -14.5739, -78.3803, 13.7461, 0.72 ) }
    dend_39 { pt3dadd( -14.6703, -79.0993, 13.9466, 0.48 ) }
    dend_39 { pt3dadd( -14.7436, -79.7186, 14.1178, 0.48 ) }
    dend_39 { pt3dadd( -14.8345, -80.6763, 14.3673, 0.48 ) }
    dend_39 { pt3dadd( -14.8772, -81.4402, 14.5353, 0.48 ) }
    dend_39 { pt3dadd( -14.9044, -82.0513, 14.6283, 0.72 ) }
    dend_39 { pt3dadd( -14.9354, -82.687, 14.7109, 1.08 ) }
    dend_39 { pt3dadd( -14.9827, -83.6665, 14.8367, 0.36 ) }
    dend_39 { pt3dadd( -14.9972, -83.9146, 14.8763, 0.36 ) }
    dend_39 { pt3dadd( -15.0532, -84.7712, 15.0184, 0.48 ) }
    dend_39 { pt3dadd( -15.1085, -85.5257, 15.1342, 0.6 ) }
    dend_39 { pt3dadd( -15.1741, -86.265, 15.2697, 1.08 ) }
    dend_39 { pt3dadd( -15.2572, -87.0013, 15.4109, 1.2 ) }
    dend_39 { pt3dadd( -15.4047, -88.0397, 15.6035, 0.72 ) }
    dend_39 { pt3dadd( -15.5201, -88.7617, 15.7372, 0.72 ) }
    dend_39 { pt3dadd( -15.6509, -89.5025, 15.8714, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_39 { pt3dadd( -15.8677, -90.5804, 16.0482, 0.36 ) }
    dend_39 { pt3dadd( -16.1387, -91.7142, 16.2356, 0.36 ) }
    dend_39 { pt3dadd( -16.3441, -92.4715, 16.352, 0.36 ) }
    dend_39 { pt3dadd( -16.5853, -93.298, 16.4575, 0.48 ) }
    dend_39 { pt3dadd( -16.7947, -94.0153, 16.5471, 0.72 ) }
    dend_39 { pt3dadd( -17.0864, -95.0898, 16.6874, 0.72 ) }
    dend_39 { pt3dadd( -17.3527, -96.1303, 16.8145, 0.36 ) }
    dend_39 { pt3dadd( -17.5188, -96.7429, 16.8951, 0.36 ) }
    dend_39 { pt3dadd( -17.735, -97.4864, 17.0113, 0.6 ) }
    dend_39 { pt3dadd( -18.1061, -98.6576, 17.2093, 0.6 ) }
    dend_39 { pt3dadd( -18.3326, -99.3537, 17.324, 0.36 ) }
    dend_39 { pt3dadd( -18.7092, -100.502, 17.513, 0.36 ) }
    dend_39 { pt3dadd( -19.065, -101.581, 17.6727, 0.36 ) }
    dend_39 { pt3dadd( -19.4439, -102.724, 17.8398, 0.48 ) }
    dend_39 { pt3dadd( -19.6704, -103.412, 17.9371, 0.6 ) }
    dend_39 { pt3dadd( -20.0966, -104.755, 18.1043, 0.6 ) }
    dend_39 { pt3dadd( -20.2978, -105.459, 18.1804, 0.48 ) }
    dend_39 { pt3dadd( -20.5591, -106.571, 18.2917, 0.48 ) }
    dend_39 { pt3dadd( -20.7299, -107.421, 18.3621, 0.48 ) }
    dend_39 { pt3dadd( -20.8673, -108.165, 18.4067, 0.84 ) }
    dend_39 { pt3dadd( -21.0987, -109.523, 18.48, 0.72 ) }
    dend_39 { pt3dadd( -21.1979, -110.163, 18.5075, 0.36 ) }
    dend_39 { pt3dadd( -21.2994, -110.911, 18.5285, 0.36 ) }
    dend_39 { pt3dadd( -21.4224, -111.919, 18.5531, 0.36 ) }
    dend_39 { pt3dadd( -21.5252, -112.795, 18.5716, 0.48 ) }
    dend_39 { pt3dadd( -21.6146, -113.639, 18.5851, 0.6 ) }
    dend_39 { pt3dadd( -21.7563, -115.006, 18.602, 0.6 ) }
    dend_39 { pt3dadd( -21.8398, -115.892, 18.6239, 0.6 ) }
    dend_39 { pt3dadd( -21.8908, -116.509, 18.6478, 0.6 ) }
    dend_39 { pt3dadd( -21.9716, -117.904, 18.7213, 0.6 ) }
    dend_39 { pt3dadd( -21.9959, -118.533, 18.7605, 0.72 ) }
    dend_39 { pt3dadd( -22.0005, -119.198, 18.8201, 0.96 ) }
    dend_39 { pt3dadd( -21.9497, -120.514, 18.9595, 0.36 ) }
    dend_39 { pt3dadd( -21.8858, -121.272, 19.0491, 0.36 ) }
    dend_39 { pt3dadd( -21.769, -122.167, 19.152, 0.72 ) }
    dend_39 { pt3dadd( -21.5766, -123.294, 19.2678, 0.84 ) }
    dend_39 { pt3dadd( -21.3459, -124.648, 19.3873, 0.36 ) }
    dend_39 { pt3dadd( -21.1549, -125.751, 19.5012, 0.36 ) }
    dend_39 { pt3dadd( -21.0241, -126.535, 19.5864, 0.36 ) }
    dend_39 { pt3dadd( -20.9106, -127.307, 19.6807, 0.24 ) }
    dend_39 { pt3dadd( -20.8011, -128.427, 19.8242, 0.24 ) }
    dend_39 { pt3dadd( -20.7585, -129.603, 19.9767, 0.36 ) }
    dend_39 { pt3dadd( -20.7771, -130.523, 20.0877, 0.48 ) }
    dend_39 { pt3dadd( -20.8248, -131.271, 20.181, 0.36 ) }
    dend_39 { pt3dadd( -20.8958, -132.132, 20.2857, 0.36 ) }
    dend_39 { pt3dadd( -20.9679, -133.039, 20.3952, 0.36 ) }
    dend_39 { pt3dadd( -21.0103, -133.703, 20.4604, 0.36 ) }
    dend_39 { pt3dadd( -21.0304, -134.221, 20.49, 0.6 ) }
    dend_39 { pt3dadd( -21.0467, -134.84, 20.4945, 0.36 ) }
    dend_39 { pt3dadd( -21.0492, -135.344, 20.5, 0.36 ) }
    dend_39 { pt3dadd( -21.039, -135.976, 20.5089, 0.36 ) }
    dend_39 { pt3dadd( -21.0259, -136.354, 20.5133, 0.6 ) }
    dend_39 { pt3dadd( -21.0172, -136.739, 20.5164, 0.6 ) }
    dend_39 { pt3dadd( -21.0131, -137.259, 20.5125, 0.48 ) }
    dend_39 { pt3dadd( -21.0122, -137.768, 20.5017, 0.48 ) }
    dend_39 { pt3dadd( -21.0098, -138.331, 20.4837, 0.48 ) }
    dend_39 { pt3dadd( -20.9965, -138.736, 20.4678, 0.72 ) }
    dend_39 { pt3dadd( -20.9527, -139.365, 20.4974, 0.72 ) }
    dend_39 { pt3dadd( -20.9001, -139.942, 20.5566, 0.48 ) }
    dend_39 { pt3dadd( -20.8362, -140.551, 20.6446, 0.36 ) }
    dend_39 { pt3dadd( -20.767, -141.178, 20.7552, 0.36 ) }
    dend_39 { pt3dadd( -20.6858, -141.884, 20.893, 0.36 ) }
    dend_39 { pt3dadd( -20.5438, -143.435, 21.2131, 0.24 ) }
    dend_39 { pt3dadd( -20.5405, -144.051, 21.3413, 0.24 ) }
    dend_39 { pt3dadd( -20.5808, -144.418, 21.4143, 0.6 ) }
    dend_39 { pt3dadd( -20.7477, -145.146, 21.5352, 0.72 ) }
    dend_39 { pt3dadd( -20.877, -145.525, 21.5794, 0.36 ) }
    dend_39 { pt3dadd( -21.136, -146.135, 21.616, 0.36 ) }
    dend_39 { pt3dadd( -21.6727, -147.182, 21.6141, 0.36 ) }
    dend_39 { pt3dadd( -22.0241, -147.807, 21.6128, 0.36 ) }
    dend_39 { pt3dadd( -22.4521, -148.523, 21.6137, 0.36 ) }
    dend_39 { pt3dadd( -22.983, -149.387, 21.6166, 0.36 ) }
    dend_39 { pt3dadd( -23.4505, -150.15, 21.6203, 0.36 ) }
    dend_39 { pt3dadd( -24.255, -151.513, 21.6255, 0.48 ) }
    dend_39 { pt3dadd( -24.9846, -152.837, 21.6291, 0.48 ) }
    dend_39 { pt3dadd( -25.3225, -153.451, 21.6303, 0.6 ) }
    dend_39 { pt3dadd( -25.6448, -154.039, 21.6256, 0.6 ) }
    dend_39 { pt3dadd( -25.9104, -154.524, 21.6168, 0.36 ) }
    dend_39 { pt3dadd( -26.374, -155.441, 21.5896, 0.36 ) }
    dend_39 { pt3dadd( -26.6203, -156.017, 21.5652, 0.48 ) }
    dend_39 { pt3dadd( -26.813, -156.52, 21.5417, 0.48 ) }
    dend_39 { pt3dadd( -26.9368, -156.836, 21.5278, 0.6 ) }
    dend_39 { pt3dadd( -27.104, -157.245, 21.5326, 0.6 ) }
    dend_39 { pt3dadd( -27.4493, -158.057, 21.5822, 0.36 ) }
    dend_39 { pt3dadd( -27.7386, -158.713, 21.6476, 0.12 ) }
    dend_39 { pt3dadd( -28.005, -159.327, 21.744, 0.12 ) }
    dend_39 { pt3dadd( -28.4688, -160.456, 21.9659, 0.12 ) }
    dend_39 { pt3dadd( -28.7549, -161.163, 22.1297, 0.6 ) }
    dend_39 { pt3dadd( -28.9436, -161.673, 22.2562, 0.72 ) }
    dend_39 { pt3dadd( -29.2542, -162.656, 22.5003, 0.36 ) }
    dend_39 { pt3dadd( -29.408, -163.265, 22.6409, 0.12 ) }
    dend_39 { pt3dadd( -29.5388, -163.869, 22.7603, 0.12 ) }
    dend_39 { pt3dadd( -29.5388, -163.869, 22.7603, 0.36 ) }
    dend_39 { pt3dadd( -29.6929, -164.615, 22.8243, 0.24 ) }
    dend_39 { pt3dadd( -29.8971, -165.588, 22.871, 0.24 ) }
    dend_39 { pt3dadd( -30.0313, -166.246, 22.8769, 0.24 ) }
    dend_39 { pt3dadd( -30.1617, -166.861, 22.8749, 0.36 ) }
    dend_39 { pt3dadd( -30.3391, -167.626, 22.8823, 0.36 ) }
    dend_39 { pt3dadd( -30.5802, -168.551, 22.8997, 0.36 ) }
    dend_39 { pt3dadd( -30.7389, -169.101, 22.9132, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_39 { pt3dadd( -30.9208, -169.713, 22.939, 0.36 ) }
    dend_39 { pt3dadd( -31.0857, -170.289, 22.969, 0.12 ) }
    dend_39 { pt3dadd( -31.417, -171.468, 23.0414, 0.24 ) }
    dend_39 { pt3dadd( -31.7788, -172.757, 23.1333, 0.24 ) }
    dend_39 { pt3dadd( -32.2609, -174.504, 23.2678, 0.24 ) }
    dend_39 { pt3dadd( -32.3906, -174.976, 23.305, 0.12 ) }
    dend_39 { pt3dadd( -32.7089, -176.087, 23.37, 0.12 ) }
    dend_39 { pt3dadd( -32.7879, -176.346, 23.3784, 0.36 ) }
    dend_39 { pt3dadd( -33.0191, -177.076, 23.3964, 0.36 ) }
    dend_39 { pt3dadd( -33.3782, -178.008, 23.403, 0.36 ) }
    dend_39 { pt3dadd( -33.7846, -178.645, 23.3864, 0.72 ) }
    dend_39 { pt3dadd( -34.1291, -178.982, 23.366, 0.48 ) }
    dend_39 { pt3dadd( -34.645, -179.39, 23.3355, 0.48 ) }
    dend_39 { pt3dadd( -34.9477, -179.593, 23.318, 0.12 ) }
    dend_39 { pt3dadd( -35.8638, -180.077, 23.2673, 0.12 ) }
    dend_39 { pt3dadd( -37.3793, -180.709, 23.2009, 0.12 ) }
    dend_39 { pt3dadd( -38.5374, -181.148, 23.1692, 0.12 ) }
    dend_39 { pt3dadd( -41.8495, -191.035, 23.783, 0.12 ) }
    dend_39 { pt3dadd( -45.8698, -200.615, 24.5493, 0.12 ) }
    dend_39 { pt3dadd( -51.7067, -209.104, 23.7983, 0.12 ) }
    dend_39 { pt3dadd( -58.0599, -217.127, 24.9166, 0.12 ) }
    dend_39 { pt3dadd( -63.637, -225.561, 27.0106, 0.12 ) }
    dend_39 { pt3dadd( -69.231, -233.962, 29.1764, 0.12 ) }
    dend_39 { pt3dadd( -76.2818, -241.376, 29.8324, 0.12 ) }
    dend_39 { pt3dadd( -84.3786, -247.436, 28.7695, 0.12 ) }
    dend_39 { pt3dadd( -92.8439, -252.536, 26.5899, 0.12 ) }
    dend_39 { pt3dadd( -102.143, -256.192, 25.4027, 0.12 ) }
    dend_39 { pt3dadd( -111.399, -260.141, 24.973, 0.12 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 28/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -7.23371, -31.0318, 4.61105, 0.48 ) }
    dend_34 { pt3dadd( -7.92401, -31.6347, 5.01683, 0.48 ) }
    dend_34 { pt3dadd( -8.46255, -32.1218, 5.30867, 0.48 ) }
    dend_34 { pt3dadd( -8.91882, -32.5507, 5.58478, 0.48 ) }
    dend_34 { pt3dadd( -9.95168, -33.6091, 6.23698, 0.48 ) }
    dend_34 { pt3dadd( -10.2956, -33.9805, 6.44821, 0.48 ) }
    dend_34 { pt3dadd( -10.6295, -34.3704, 6.64451, 0.36 ) }
    dend_34 { pt3dadd( -11.0171, -34.881, 6.89863, 0.36 ) }
    dend_34 { pt3dadd( -11.404, -35.4355, 7.12908, 0.72 ) }
    dend_34 { pt3dadd( -11.7217, -35.9471, 7.31885, 1.2 ) }
    dend_34 { pt3dadd( -12.0469, -36.5387, 7.48663, 1.2 ) }
    dend_34 { pt3dadd( -12.4453, -37.3702, 7.72274, 0.48 ) }
    dend_34 { pt3dadd( -12.7277, -38.0287, 7.90019, 0.36 ) }
    dend_34 { pt3dadd( -12.9463, -38.598, 8.0357, 0.36 ) }
    dend_34 { pt3dadd( -13.2428, -39.3905, 8.18634, 0.84 ) }
    dend_34 { pt3dadd( -13.4771, -40.0025, 8.29179, 0.84 ) }
    dend_34 { pt3dadd( -13.837, -40.9242, 8.42141, 0.36 ) }
    dend_34 { pt3dadd( -14.076, -41.512, 8.48434, 0.72 ) }
    dend_34 { pt3dadd( -14.3337, -42.1216, 8.53025, 0.84 ) }
    dend_34 { pt3dadd( -14.8219, -43.1945, 8.59434, 0.12 ) }
    dend_34 { pt3dadd( -15.288, -44.1514, 8.62847, 0.12 ) }
    dend_34 { pt3dadd( -15.88, -45.2783, 8.6791, 0.12 ) }
    dend_34 { pt3dadd( -16.2149, -45.8578, 8.70945, 0.6 ) }
    dend_34 { pt3dadd( -16.4391, -46.2355, 8.72944, 0.6 ) }
    dend_34 { pt3dadd( -16.8226, -46.8921, 8.76293, 0.12 ) }
    dend_34 { pt3dadd( -17.0714, -47.3401, 8.79131, 0.12 ) }
    dend_34 { pt3dadd( -17.3853, -47.9618, 8.83827, 0.6 ) }
    dend_34 { pt3dadd( -17.7837, -48.8468, 8.93517, 0.6 ) }
    dend_34 { pt3dadd( -17.9663, -49.3033, 8.99409, 0.6 ) }
    dend_34 { pt3dadd( -18.1761, -49.9008, 9.07503, 0.48 ) }
    dend_34 { pt3dadd( -18.3457, -50.4669, 9.17194, 0.72 ) }
    dend_34 { pt3dadd( -18.5043, -51.0485, 9.29922, 0.72 ) }
    dend_34 { pt3dadd( -18.6768, -51.7806, 9.48594, 0.36 ) }
    dend_34 { pt3dadd( -18.7286, -52.0064, 9.549, 0.36 ) }
    dend_34 { pt3dadd( -18.9611, -52.7833, 9.76449, 0.6 ) }
    dend_34 { pt3dadd( -19.2545, -53.5703, 9.96357, 0.36 ) }
    dend_34 { pt3dadd( -19.3682, -53.826, 10.0316, 0.24 ) }
    dend_34 { pt3dadd( -19.5914, -54.2707, 10.1566, 0.24 ) }
    dend_34 { pt3dadd( -19.8469, -54.7428, 10.2831, 0.24 ) }
    dend_34 { pt3dadd( -20.3065, -55.5696, 10.5001, 0.6 ) }
    dend_34 { pt3dadd( -20.5993, -56.1012, 10.6339, 0.6 ) }
    dend_34 { pt3dadd( -20.9953, -56.8461, 10.7896, 0.48 ) }
    dend_34 { pt3dadd( -21.1027, -57.0669, 10.8325, 0.48 ) }
    dend_34 { pt3dadd( -21.3222, -57.5718, 10.9248, 0.36 ) }
    dend_34 { pt3dadd( -21.6605, -58.4401, 11.0884, 0.36 ) }
    dend_34 { pt3dadd( -21.7901, -58.7921, 11.1611, 0.48 ) }
    dend_34 { pt3dadd( -22.0617, -59.5098, 11.3049, 0.48 ) }
    dend_34 { pt3dadd( -22.2957, -60.09, 11.4246, 0.72 ) }
    dend_34 { pt3dadd( -22.4409, -60.4251, 11.5065, 0.84 ) }
    dend_34 { pt3dadd( -22.8031, -61.2168, 11.7414, 0.72 ) }
    dend_34 { pt3dadd( -23.1004, -61.8458, 11.9469, 0.36 ) }
    dend_34 { pt3dadd( -23.3882, -62.4079, 12.1376, 0.36 ) }
    dend_34 { pt3dadd( -23.6805, -62.9198, 12.3389, 0.24 ) }
    dend_34 { pt3dadd( -24.1468, -63.6687, 12.653, 0.24 ) }
    dend_34 { pt3dadd( -24.4857, -64.1922, 12.87, 0.12 ) }
    dend_34 { pt3dadd( -24.811, -64.6963, 13.0651, 0.12 ) }
    dend_34 { pt3dadd( -25.0905, -65.137, 13.2355, 0.12 ) }
    dend_34 { pt3dadd( -25.4104, -65.6489, 13.4678, 0.12 ) }
    dend_34 { pt3dadd( -25.6162, -65.9951, 13.658, 0.12 ) }
    dend_34 { pt3dadd( -25.7743, -66.2896, 13.8588, 0.12 ) }
    dend_34 { pt3dadd( -25.8694, -66.5137, 14.0081, 0.72 ) }
    dend_34 { pt3dadd( -26.0411, -67.0043, 14.3397, 0.96 ) }
    dend_34 { pt3dadd( -26.2605, -67.7495, 14.8216, 0.84 ) }
    dend_34 { pt3dadd( -26.4483, -68.5276, 15.2723, 0.72 ) }
    dend_34 { pt3dadd( -26.5845, -69.1963, 15.6399, 0.36 ) }
    dend_34 { pt3dadd( -26.7473, -70.0705, 16.0676, 0.24 ) }
    dend_34 { pt3dadd( -26.8146, -70.4472, 16.2188, 0.84 ) }
    dend_34 { pt3dadd( -26.876, -70.7813, 16.3196, 0.84 ) }
    dend_34 { pt3dadd( -27.0249, -71.5073, 16.4548, 0.72 ) }
    dend_34 { pt3dadd( -27.2003, -72.2899, 16.5571, 0.48 ) }
    dend_34 { pt3dadd( -27.3884, -73.0446, 16.6556, 0.24 ) }
    dend_34 { pt3dadd( -27.6009, -73.8012, 16.7638, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_34 { pt3dadd( -27.7594, -74.3207, 16.8565, 0.12 ) }
    dend_34 { pt3dadd( -28.2082, -75.6758, 17.1384, 0.12 ) }
    dend_34 { pt3dadd( -28.554, -76.5696, 17.3422, 0.12 ) }
    dend_34 { pt3dadd( -28.7258, -76.9841, 17.4494, 0.48 ) }
    dend_34 { pt3dadd( -29.0399, -77.7325, 17.6645, 0.6 ) }
    dend_34 { pt3dadd( -29.4221, -78.6505, 17.9314, 0.48 ) }
    dend_34 { pt3dadd( -29.6811, -79.2518, 18.0972, 0.36 ) }
    dend_34 { pt3dadd( -30.0762, -80.1022, 18.3254, 0.48 ) }
    dend_34 { pt3dadd( -30.4694, -80.9101, 18.5159, 0.24 ) }
    dend_34 { pt3dadd( -30.7376, -81.4597, 18.6446, 0.24 ) }
    dend_34 { pt3dadd( -31.226, -82.4977, 18.887, 0.24 ) }
    dend_34 { pt3dadd( -31.6782, -83.5348, 19.1079, 0.24 ) }
    dend_34 { pt3dadd( -31.9358, -84.1619, 19.2318, 0.6 ) }
    dend_34 { pt3dadd( -32.0254, -84.4141, 19.2716, 0.6 ) }
    dend_34 { pt3dadd( -32.2829, -85.2984, 19.3632, 0.24 ) }
    dend_34 { pt3dadd( -32.4488, -86.0208, 19.4199, 0.24 ) }
    dend_34 { pt3dadd( -32.5576, -86.7672, 19.4549, 0.48 ) }
    dend_34 { pt3dadd( -32.5936, -87.5214, 19.4176, 0.36 ) }
    dend_34 { pt3dadd( -32.5897, -88.6459, 19.2779, 0.36 ) }
    dend_34 { pt3dadd( -32.5693, -89.5372, 19.1185, 0.36 ) }
    dend_34 { pt3dadd( -32.5664, -89.8108, 19.0544, 0.84 ) }
    dend_34 { pt3dadd( -32.5746, -90.1877, 18.965, 0.84 ) }
    dend_34 { pt3dadd( -32.6353, -91.5758, 18.6605, 0.24 ) }
    dend_34 { pt3dadd( -32.6604, -91.936, 18.5957, 0.24 ) }
    dend_34 { pt3dadd( -32.7032, -92.2107, 18.5541, 0.24 ) }
    dend_34 { pt3dadd( -32.934, -93.1919, 18.4564, 0.24 ) }
    dend_34 { pt3dadd( -33.1304, -93.9536, 18.4148, 0.36 ) }
    dend_34 { pt3dadd( -33.2191, -94.2798, 18.409, 0.12 ) }
    dend_34 { pt3dadd( -33.3835, -94.8985, 18.4209, 0.12 ) }
    dend_34 { pt3dadd( -33.6949, -96.2589, 18.4437, 0.12 ) }
    dend_34 { pt3dadd( -33.977, -97.8146, 18.4651, 0.12 ) }
    dend_34 { pt3dadd( -34.1454, -99.0579, 18.478, 0.12 ) }
    dend_34 { pt3dadd( -34.2194, -99.6725, 18.4816, 0.48 ) }
    dend_34 { pt3dadd( -34.305, -100.433, 18.4836, 0.48 ) }
    dend_34 { pt3dadd( -34.3612, -101.099, 18.487, 0.48 ) }
    dend_34 { pt3dadd( -34.4001, -101.989, 18.4943, 0.36 ) }
    dend_34 { pt3dadd( -34.4193, -102.483, 18.5002, 0.36 ) }
    dend_34 { pt3dadd( -34.4958, -103.285, 18.5123, 0.48 ) }
    dend_34 { pt3dadd( -34.5638, -103.684, 18.5192, 0.12 ) }
    dend_34 { pt3dadd( -34.6376, -103.944, 18.5425, 0.12 ) }
    dend_34 { pt3dadd( -34.7767, -104.309, 18.6013, 0.12 ) }
    dend_34 { pt3dadd( -35.0022, -104.806, 18.7167, 0.6 ) }
    dend_34 { pt3dadd( -35.2123, -105.265, 18.8474, 0.84 ) }
    dend_34 { pt3dadd( -35.3234, -105.508, 18.9254, 0.84 ) }
    dend_34 { pt3dadd( -35.7814, -106.45, 19.218, 0.12 ) }
    dend_34 { pt3dadd( -35.8894, -106.666, 19.2766, 0.12 ) }
    dend_34 { pt3dadd( -36.0038, -106.914, 19.3328, 0.12 ) }
    dend_34 { pt3dadd( -36.111, -107.155, 19.389, 0.12 ) }
    dend_34 { pt3dadd( -36.4314, -107.873, 19.546, 0.36 ) }
    dend_34 { pt3dadd( -36.7187, -108.512, 19.7056, 0.36 ) }
    dend_34 { pt3dadd( -37.107, -109.352, 19.9166, 0.36 ) }
    dend_34 { pt3dadd( -37.3662, -109.884, 20.0717, 0.36 ) }
    dend_34 { pt3dadd( -37.6953, -110.572, 20.2869, 0.6 ) }
    dend_34 { pt3dadd( -37.9169, -111.027, 20.4357, 0.6 ) }
    dend_34 { pt3dadd( -38.3327, -111.839, 20.7055, 0.36 ) }
    dend_34 { pt3dadd( -38.4968, -112.134, 20.801, 0.36 ) }
    dend_34 { pt3dadd( -38.718, -112.51, 20.925, 0.36 ) }
    dend_34 { pt3dadd( -39.0935, -113.114, 21.104, 0.36 ) }
    dend_34 { pt3dadd( -39.3635, -113.558, 21.1916, 0.36 ) }
    dend_34 { pt3dadd( -39.8287, -114.316, 21.2938, 0.48 ) }
    dend_34 { pt3dadd( -40.0705, -114.683, 21.2938, 0.48 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 142.683, 74.6283, 139.325, 0.48 ) }
    dend_30 { pt3dadd( 149.316, 78.5986, 145.784, 0.48 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 63/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 142.683, 74.6283, 139.325, 0.36 ) }
    dend_29 { pt3dadd( 148.945, 78.4307, 146.23, 0.48 ) }
    dend_29 { pt3dadd( 154.849, 81.6027, 153.715, 0.48 ) }
    dend_29 { pt3dadd( 159.758, 84.0999, 162.096, 0.48 ) }
    dend_29 { pt3dadd( 165.31, 85.5141, 170.303, 0.48 ) }
    dend_29 { pt3dadd( 170.176, 84.9307, 179.021, 0.48 ) }
    dend_29 { pt3dadd( 176.545, 83.3288, 186.578, 0.48 ) }
    dend_29 { pt3dadd( 183.218, 80.0114, 193.324, 0.48 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 71/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -77.9397, -164.607, -98.7539, 0.12 ) }
    dend_18 { pt3dadd( -78.6241, -164.708, -99.7154, 0.12 ) }
    dend_18 { pt3dadd( -79.0031, -164.771, -100.24, 0.12 ) }
    dend_18 { pt3dadd( -80.3895, -165.007, -102.08, 0.6 ) }
    dend_18 { pt3dadd( -80.7955, -165.089, -102.67, 0.6 ) }
    dend_18 { pt3dadd( -81.4478, -165.258, -103.669, 0.36 ) }
    dend_18 { pt3dadd( -82.0524, -165.43, -104.586, 0.36 ) }
    dend_18 { pt3dadd( -82.313, -165.532, -104.983, 0.6 ) }
    dend_18 { pt3dadd( -82.5095, -165.626, -105.271, 0.6 ) }
    dend_18 { pt3dadd( -83.8779, -166.455, -107.146, 0.24 ) }
    dend_18 { pt3dadd( -84.4836, -166.862, -107.962, 0.24 ) }
    dend_18 { pt3dadd( -84.8157, -167.104, -108.427, 0.24 ) }
    dend_18 { pt3dadd( -85.4793, -167.609, -109.38, 0.24 ) }
    dend_18 { pt3dadd( -85.7888, -167.858, -109.836, 0.24 ) }
    dend_18 { pt3dadd( -86.4759, -168.434, -110.856, 0.6 ) }
    dend_18 { pt3dadd( -86.6673, -168.596, -111.119, 0.6 ) }
    dend_18 { pt3dadd( -87.8492, -169.585, -112.776, 0.12 ) }
    dend_18 { pt3dadd( -88.0445, -169.75, -113.06, 0.12 ) }
    dend_18 { pt3dadd( -88.2753, -169.93, -113.384, 0.48 ) }
    dend_18 { pt3dadd( -88.8662, -170.32, -114.087, 0.12 ) }
    dend_18 { pt3dadd( -89.1732, -170.49, -114.346, 0.12 ) }
    dend_18 { pt3dadd( -89.5117, -170.65, -114.568, 0.12 ) }
    dend_18 { pt3dadd( -89.8072, -170.772, -114.688, 0.12 ) }
    dend_18 { pt3dadd( -90.24, -170.936, -114.883, 0.48 ) }
    dend_18 { pt3dadd( -91.0179, -171.189, -115.229, 0.6 ) }
    dend_18 { pt3dadd( -91.4489, -171.315, -115.402, 0.6 ) }
    dend_18 { pt3dadd( -92.1237, -171.519, -115.679, 0.12 ) }
    dend_18 { pt3dadd( -92.6341, -171.688, -115.933, 0.12 ) }
    dend_18 { pt3dadd( -93.2477, -171.918, -116.271, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_18 { pt3dadd( -93.8357, -172.199, -116.611, 0.12 ) }
    dend_18 { pt3dadd( -94.2516, -172.456, -116.846, 0.6 ) }
    dend_18 { pt3dadd( -94.6357, -172.727, -117.057, 0.6 ) }
    dend_18 { pt3dadd( -95.5176, -173.4, -117.582, 0.12 ) }
    dend_18 { pt3dadd( -95.7517, -173.592, -117.732, 0.12 ) }
    dend_18 { pt3dadd( -96.2756, -174.051, -118.099, 0.12 ) }
    dend_18 { pt3dadd( -96.6295, -174.372, -118.362, 0.6 ) }
    dend_18 { pt3dadd( -96.8011, -174.528, -118.497, 0.6 ) }
    dend_18 { pt3dadd( -97.7432, -175.407, -119.22, 0.12 ) }
    dend_18 { pt3dadd( -98.1268, -175.799, -119.491, 0.12 ) }
    dend_18 { pt3dadd( -98.9717, -176.697, -120.081, 0.24 ) }
    dend_18 { pt3dadd( -99.4582, -177.209, -120.42, 0.36 ) }
    dend_18 { pt3dadd( -99.9151, -177.681, -120.72, 0.12 ) }
    dend_18 { pt3dadd( -100.446, -178.217, -121.023, 0.12 ) }
    dend_18 { pt3dadd( -101.133, -178.884, -121.314, 0.12 ) }
    dend_18 { pt3dadd( -101.531, -179.215, -121.488, 0.48 ) }
    dend_18 { pt3dadd( -101.956, -179.483, -121.654, 0.12 ) }
    dend_18 { pt3dadd( -102.274, -179.603, -121.778, 0.12 ) }
    dend_18 { pt3dadd( -102.844, -179.715, -121.975, 0.12 ) }
    dend_18 { pt3dadd( -103.212, -179.745, -122.098, 0.36 ) }
    dend_18 { pt3dadd( -104.351, -179.756, -122.466, 0.12 ) }
    dend_18 { pt3dadd( -104.966, -179.764, -122.65, 0.12 ) }
    dend_18 { pt3dadd( -105.786, -179.804, -122.861, 0.12 ) }
    dend_18 { pt3dadd( -106.266, -179.849, -122.974, 0.48 ) }
    dend_18 { pt3dadd( -106.787, -179.928, -123.076, 0.48 ) }
    dend_18 { pt3dadd( -107.287, -180.034, -123.139, 0.36 ) }
    dend_18 { pt3dadd( -107.654, -180.136, -123.115, 0.36 ) }
    dend_18 { pt3dadd( -108.163, -180.291, -123.035, 0.36 ) }
    dend_18 { pt3dadd( -108.57, -180.406, -122.938, 0.36 ) }
    dend_18 { pt3dadd( -108.881, -180.489, -122.849, 0.36 ) }
    dend_18 { pt3dadd( -109.767, -180.728, -122.558, 0.48 ) }
    dend_18 { pt3dadd( -110.915, -181.083, -122.156, 0.12 ) }
    dend_18 { pt3dadd( -111.353, -181.251, -122.007, 0.12 ) }
    dend_18 { pt3dadd( -111.881, -181.494, -121.841, 0.12 ) }
    dend_18 { pt3dadd( -112.25, -181.708, -121.741, 0.12 ) }
    dend_18 { pt3dadd( -112.511, -181.929, -121.691, 0.12 ) }
    dend_18 { pt3dadd( -112.942, -182.484, -121.652, 0.12 ) }
    dend_18 { pt3dadd( -113.456, -183.333, -121.667, 0.6 ) }
    dend_18 { pt3dadd( -113.592, -183.617, -121.671, 0.12 ) }
    dend_18 { pt3dadd( -113.821, -184.202, -121.681, 0.12 ) }
    dend_18 { pt3dadd( -114.194, -185.258, -121.698, 0.12 ) }
    dend_18 { pt3dadd( -114.511, -186.207, -121.717, 0.12 ) }
    dend_18 { pt3dadd( -114.719, -186.839, -121.729, 0.12 ) }
    dend_18 { pt3dadd( -114.947, -187.556, -121.737, 0.12 ) }
    dend_18 { pt3dadd( -115.02, -187.796, -121.737, 0.12 ) }
    dend_18 { pt3dadd( -115.177, -188.297, -121.738, 0.36 ) }
    dend_18 { pt3dadd( -115.265, -188.573, -121.742, 0.12 ) }
    dend_18 { pt3dadd( -115.562, -189.429, -121.766, 0.12 ) }
    dend_18 { pt3dadd( -115.831, -190.13, -121.789, 0.12 ) }
    dend_18 { pt3dadd( -116.029, -190.605, -121.804, 0.6 ) }
    dend_18 { pt3dadd( -116.3, -191.251, -121.828, 0.6 ) }
    dend_18 { pt3dadd( -116.514, -191.768, -121.847, 0.12 ) }
    dend_18 { pt3dadd( -116.847, -192.536, -121.884, 0.12 ) }
    dend_18 { pt3dadd( -117.138, -193.175, -121.923, 0.12 ) }
    dend_18 { pt3dadd( -117.376, -193.679, -121.954, 0.6 ) }
    dend_18 { pt3dadd( -117.587, -194.143, -121.98, 0.6 ) }
    dend_18 { pt3dadd( -117.804, -194.663, -122.005, 0.6 ) }
    dend_18 { pt3dadd( -117.926, -194.959, -122.015, 0.12 ) }
    dend_18 { pt3dadd( -118.32, -195.9, -122.048, 0.12 ) }
    dend_18 { pt3dadd( -118.671, -196.709, -122.107, 0.12 ) }
    dend_18 { pt3dadd( -118.95, -197.307, -122.167, 0.12 ) }
    dend_18 { pt3dadd( -119.311, -198.046, -122.252, 0.12 ) }
    dend_18 { pt3dadd( -119.632, -198.694, -122.333, 0.12 ) }
    dend_18 { pt3dadd( -119.872, -199.194, -122.395, 0.36 ) }
    dend_18 { pt3dadd( -120.179, -199.831, -122.532, 0.12 ) }
    dend_18 { pt3dadd( -120.364, -200.216, -122.64, 0.12 ) }
    dend_18 { pt3dadd( -120.73, -201.006, -122.889, 0.12 ) }
    dend_18 { pt3dadd( -121.147, -201.933, -123.173, 0.12 ) }
    dend_18 { pt3dadd( -121.433, -202.582, -123.372, 0.12 ) }
    dend_18 { pt3dadd( -121.989, -203.846, -123.947, 0.12 ) }
    dend_18 { pt3dadd( -122.151, -204.211, -124.146, 0.36 ) }
    dend_18 { pt3dadd( -122.371, -204.689, -124.455, 0.12 ) }
    dend_18 { pt3dadd( -122.888, -205.76, -125.417, 0.12 ) }
    dend_18 { pt3dadd( -123.085, -206.127, -125.812, 0.6 ) }
    dend_18 { pt3dadd( -124.02, -207.72, -127.681, 0.12 ) }
    dend_18 { pt3dadd( -124.289, -208.138, -128.217, 0.12 ) }
    dend_18 { pt3dadd( -124.417, -208.326, -128.476, 0.6 ) }
    dend_18 { pt3dadd( -125.301, -209.501, -130.222, 0.12 ) }
    dend_18 { pt3dadd( -125.752, -210.009, -131.021, 0.12 ) }
    dend_18 { pt3dadd( -125.947, -210.188, -131.251, 0.12 ) }
    dend_18 { pt3dadd( -126.351, -210.487, -131.519, 0.36 ) }
    dend_18 { pt3dadd( -126.849, -210.813, -131.79, 0.12 ) }
    dend_18 { pt3dadd( -127.261, -211.065, -131.925, 0.12 ) }
    dend_18 { pt3dadd( -127.82, -211.389, -131.999, 0.12 ) }
    dend_18 { pt3dadd( -128.851, -211.979, -132.13, 0.12 ) }
    dend_18 { pt3dadd( -130.162, -212.736, -132.285, 0.12 ) }
    dend_18 { pt3dadd( -130.53, -212.954, -132.319, 0.12 ) }
    dend_18 { pt3dadd( -131.714, -213.62, -132.429, 0.12 ) }
    dend_18 { pt3dadd( -131.947, -213.758, -132.449, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 89/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -77.9397, -164.607, -98.7539, 0.12 ) }
    dend_17 { pt3dadd( -77.9354, -164.647, -98.7699, 0.12 ) }
    dend_17 { pt3dadd( -77.9265, -164.766, -98.807, 0.6 ) }
    dend_17 { pt3dadd( -77.8615, -165.126, -98.8963, 0.72 ) }
    dend_17 { pt3dadd( -77.653, -165.901, -99.1331, 0.48 ) }
    dend_17 { pt3dadd( -77.5032, -166.373, -99.2756, 0.48 ) }
    dend_17 { pt3dadd( -77.3517, -166.847, -99.4112, 0.24 ) }
    dend_17 { pt3dadd( -77.1793, -167.41, -99.5849, 0.24 ) }
    dend_17 { pt3dadd( -76.9577, -168.247, -99.8396, 0.24 ) }
    dend_17 { pt3dadd( -76.7246, -169.144, -100.105, 0.12 ) }
    dend_17 { pt3dadd( -76.5474, -169.775, -100.279, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_17 { pt3dadd( -76.3336, -170.457, -100.481, 0.12 ) }
    dend_17 { pt3dadd( -76.1308, -171.023, -100.664, 0.48 ) }
    dend_17 { pt3dadd( -75.8741, -171.843, -100.931, 0.36 ) }
    dend_17 { pt3dadd( -75.8177, -172.223, -101.029, 0.12 ) }
    dend_17 { pt3dadd( -75.7829, -172.7, -101.181, 0.12 ) }
    dend_17 { pt3dadd( -75.7615, -172.96, -101.282, 0.36 ) }
    dend_17 { pt3dadd( -75.7163, -173.385, -101.449, 0.12 ) }
    dend_17 { pt3dadd( -75.6033, -174.242, -101.712, 0.12 ) }
    dend_17 { pt3dadd( -75.4059, -175.603, -102.07, 0.12 ) }
    dend_17 { pt3dadd( -75.1946, -177.078, -102.436, 0.12 ) }
    dend_17 { pt3dadd( -75.0485, -178.056, -102.655, 0.12 ) }
    dend_17 { pt3dadd( -74.9352, -178.664, -102.774, 0.12 ) }
    dend_17 { pt3dadd( -74.6534, -179.728, -102.957, 0.48 ) }
    dend_17 { pt3dadd( -74.4902, -180.134, -103.018, 0.48 ) }
    dend_17 { pt3dadd( -74.1496, -180.786, -103.118, 0.24 ) }
    dend_17 { pt3dadd( -73.8471, -181.34, -103.186, 0.24 ) }
    dend_17 { pt3dadd( -73.594, -181.817, -103.275, 0.24 ) }
    dend_17 { pt3dadd( -73.2106, -182.577, -103.482, 0.12 ) }
    dend_17 { pt3dadd( -72.7865, -183.497, -103.8, 0.12 ) }
    dend_17 { pt3dadd( -72.4681, -184.253, -104.055, 0.12 ) }
    dend_17 { pt3dadd( -72.3351, -184.583, -104.17, 0.24 ) }
    dend_17 { pt3dadd( -72.0642, -185.232, -104.429, 0.36 ) }
    dend_17 { pt3dadd( -71.8259, -185.793, -104.664, 0.12 ) }
    dend_17 { pt3dadd( -71.694, -186.117, -104.794, 0.12 ) }
    dend_17 { pt3dadd( -71.5163, -186.604, -104.973, 0.12 ) }
    dend_17 { pt3dadd( -71.2874, -187.286, -105.167, 0.36 ) }
    dend_17 { pt3dadd( -70.9954, -188.126, -105.364, 0.12 ) }
    dend_17 { pt3dadd( -70.7842, -188.698, -105.459, 0.12 ) }
    dend_17 { pt3dadd( -70.6077, -189.161, -105.531, 0.12 ) }
    dend_17 { pt3dadd( -70.3078, -189.973, -105.655, 0.12 ) }
    dend_17 { pt3dadd( -70.0274, -190.807, -105.757, 0.12 ) }
    dend_17 { pt3dadd( -69.919, -191.137, -105.785, 0.12 ) }
    dend_17 { pt3dadd( -69.6184, -192.101, -105.829, 0.6 ) }
    dend_17 { pt3dadd( -69.3295, -193.092, -105.854, 0.12 ) }
    dend_17 { pt3dadd( -68.8396, -194.716, -105.892, 0.12 ) }
    dend_17 { pt3dadd( -68.1467, -196.943, -105.939, 0.12 ) }
    dend_17 { pt3dadd( -67.391, -199.4, -105.979, 0.12 ) }
    dend_17 { pt3dadd( -67.0925, -200.415, -105.987, 0.12 ) }
    dend_17 { pt3dadd( -66.8236, -201.404, -105.963, 0.48 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 39/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -40.0705, -114.683, 21.2938, 0.48 ) }
    dend_38 { pt3dadd( -40.2995, -115.845, 21.4768, 0.48 ) }
    dend_38 { pt3dadd( -40.5078, -116.965, 21.6187, 0.36 ) }
    dend_38 { pt3dadd( -40.5964, -117.473, 21.6735, 0.12 ) }
    dend_38 { pt3dadd( -40.739, -118.328, 21.8147, 0.12 ) }
    dend_38 { pt3dadd( -40.8725, -119.067, 21.9563, 0.12 ) }
    dend_38 { pt3dadd( -40.9634, -119.54, 22.0525, 0.6 ) }
    dend_38 { pt3dadd( -41.1032, -120.157, 22.1534, 0.6 ) }
    dend_38 { pt3dadd( -41.1888, -120.523, 22.1733, 0.6 ) }
    dend_38 { pt3dadd( -41.415, -121.734, 22.1265, 0.12 ) }
    dend_38 { pt3dadd( -41.4874, -122.355, 22.0539, 0.12 ) }
    dend_38 { pt3dadd( -41.4885, -122.735, 21.9791, 0.12 ) }
    dend_38 { pt3dadd( -41.2485, -123.817, 21.6557, 0.12 ) }
    dend_38 { pt3dadd( -39.9524, -125.536, 20.892, 0.12 ) }
    dend_38 { pt3dadd( -39.2654, -126.004, 20.6294, 0.12 ) }
    dend_38 { pt3dadd( -38.6229, -126.302, 20.431, 0.12 ) }
    dend_38 { pt3dadd( -37.4267, -126.723, 20.1679, 0.12 ) }
    dend_38 { pt3dadd( -36.2763, -127.07, 19.9912, 0.12 ) }
    dend_38 { pt3dadd( -35.3125, -127.284, 19.8973, 0.12 ) }
    dend_38 { pt3dadd( -34.5204, -127.406, 19.8973, 0.36 ) }
    dend_38 { pt3dadd( -34.2554, -127.45, 19.8973, 0.12 ) }
    dend_38 { pt3dadd( -33.2116, -127.713, 19.8973, 0.12 ) }
    dend_38 { pt3dadd( -32.5679, -127.977, 19.8973, 0.24 ) }
    dend_38 { pt3dadd( -28.3644, -137.497, 20.254, 0.24 ) }
    dend_38 { pt3dadd( -23.6831, -146.769, 20.5796, 0.24 ) }
    dend_38 { pt3dadd( -19.2537, -156.169, 21.0609, 0.24 ) }
    dend_38 { pt3dadd( -14.4793, -165.39, 20.7634, 0.24 ) }
    dend_38 { pt3dadd( -9.69086, -174.503, 22.0852, 0.24 ) }
    dend_38 { pt3dadd( -3.60125, -182.818, 21.641, 0.24 ) }
    dend_38 { pt3dadd( 3.66569, -189.942, 20.5607, 0.24 ) }
    dend_38 { pt3dadd( 9.51689, -197.906, 17.6917, 0.24 ) }
    dend_38 { pt3dadd( 15.7551, -205.828, 15.6515, 0.24 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -40.0705, -114.683, 21.2938, 0.12 ) }
    dend_35 { pt3dadd( -40.721, -114.778, 21.1527, 0.12 ) }
    dend_35 { pt3dadd( -41.0814, -114.884, 21.0902, 0.12 ) }
    dend_35 { pt3dadd( -41.8996, -115.162, 20.8614, 0.12 ) }
    dend_35 { pt3dadd( -42.2487, -115.268, 20.7516, 0.12 ) }
    dend_35 { pt3dadd( -43.0523, -115.511, 20.499, 0.12 ) }
    dend_35 { pt3dadd( -44.7707, -116.03, 19.9587, 0.12 ) }
    dend_35 { pt3dadd( -45.1595, -116.181, 19.8349, 0.12 ) }
    dend_35 { pt3dadd( -46.1891, -116.648, 19.5197, 0.84 ) }
    dend_35 { pt3dadd( -46.9909, -117.075, 19.3102, 0.84 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 81/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -46.9909, -117.075, 19.3102, 0.12 ) }
    dend_37 { pt3dadd( -47.4849, -116.926, 19.3204, 0.12 ) }
    dend_37 { pt3dadd( -48.2637, -116.753, 19.3358, 0.12 ) }
    dend_37 { pt3dadd( -49.2822, -116.578, 19.3549, 0.12 ) }
    dend_37 { pt3dadd( -50.6115, -116.404, 19.378, 0.12 ) }
    dend_37 { pt3dadd( -51.6919, -116.293, 19.3956, 0.12 ) }
    dend_37 { pt3dadd( -53.6025, -116.083, 19.5185, 0.24 ) }
    dend_37 { pt3dadd( -54.2197, -116.039, 19.5803, 0.12 ) }
    dend_37 { pt3dadd( -54.8256, -116.021, 19.6639, 0.12 ) }
    dend_37 { pt3dadd( -55.6602, -115.985, 19.813, 0.12 ) }
    dend_37 { pt3dadd( -56.0281, -115.937, 19.8939, 0.12 ) }
    dend_37 { pt3dadd( -57.5126, -115.563, 20.2483, 0.24 ) }
    dend_37 { pt3dadd( -58.2979, -115.291, 20.4385, 0.12 ) }
    dend_37 { pt3dadd( -58.7491, -115.122, 20.5621, 0.12 ) }
    dend_37 { pt3dadd( -59.8437, -114.717, 20.8679, 0.36 ) }
    dend_37 { pt3dadd( -60.7663, -114.407, 21.1575, 0.36 ) }
    dend_37 { pt3dadd( -61.7963, -114.111, 21.4824, 0.36 ) }
    dend_37 { pt3dadd( -62.2627, -114.012, 21.6183, 0.12 ) }
    dend_37 { pt3dadd( -63.6283, -113.791, 22.0327, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_37 { pt3dadd( -64.5406, -113.74, 22.3357, 0.12 ) }
    dend_37 { pt3dadd( -65.6495, -113.865, 22.7276, 1.44 ) }
    dend_37 { pt3dadd( -66.0849, -113.983, 22.8955, 1.92 ) }
    dend_37 { pt3dadd( -66.7182, -114.25, 23.1546, 1.92 ) }
    dend_37 { pt3dadd( -67.2915, -114.601, 23.3882, 1.92 ) }
    dend_37 { pt3dadd( -68.2129, -115.512, 23.6518, 0.12 ) }
    dend_37 { pt3dadd( -68.653, -116.288, 23.7195, 0.12 ) }
    dend_37 { pt3dadd( -68.8496, -117.008, 23.6652, 0.36 ) }
    dend_37 { pt3dadd( -68.9074, -117.4, 23.626, 0.12 ) }
    dend_37 { pt3dadd( -68.9128, -118.232, 23.5099, 0.12 ) }
    dend_37 { pt3dadd( -68.6652, -120.029, 23.1416, 1.68 ) }
    dend_37 { pt3dadd( -68.5024, -120.511, 22.938, 1.92 ) }
    dend_37 { pt3dadd( -68.359, -120.809, 22.7685, 1.92 ) }
    dend_37 { pt3dadd( -77.8451, -122.953, 25.1855, 1.92 ) }
    dend_37 { pt3dadd( -87.5412, -124.572, 27.0854, 1.92 ) }
    dend_37 { pt3dadd( -97.1261, -124.785, 29.9296, 1.92 ) }
    dend_37 { pt3dadd( -106.377, -126.476, 33.3703, 1.92 ) }
    dend_37 { pt3dadd( -115.092, -129.326, 37.4537, 1.92 ) }
    dend_37 { pt3dadd( -123.911, -133.641, 39.7627, 1.92 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 19/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -46.9909, -117.075, 19.3102, 0.48 ) }
    dend_36 { pt3dadd( -47.5166, -117.486, 19.2899, 0.48 ) }
    dend_36 { pt3dadd( -48.1383, -117.813, 19.2754, 0.48 ) }
    dend_36 { pt3dadd( -49.0757, -118.224, 19.2592, 0.48 ) }
    dend_36 { pt3dadd( -49.7277, -118.491, 19.2499, 0.12 ) }
    dend_36 { pt3dadd( -50.9377, -118.963, 19.1862, 0.12 ) }
    dend_36 { pt3dadd( -52.1917, -119.403, 19.094, 0.12 ) }
    dend_36 { pt3dadd( -53.5762, -119.809, 19.0058, 0.12 ) }
    dend_36 { pt3dadd( -54.325, -119.98, 18.9498, 0.12 ) }
    dend_36 { pt3dadd( -55.0092, -120.09, 18.8914, 0.12 ) }
    dend_36 { pt3dadd( -55.9292, -120.212, 18.7959, 0.6 ) }
    dend_36 { pt3dadd( -56.7173, -120.299, 18.6829, 0.6 ) }
    dend_36 { pt3dadd( -65.9495, -124.308, 19.1222, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_25, dend_22, dend_11, dend_6, dend_3, dend_0, apic_4, apic_1, dend_31, dend_26, dend_24, dend_23, dend_19, dend_14, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_3, apic_2, dend_33, dend_32, dend_28, dend_27, dend_21, dend_20, dend_16, dend_15, dend_13, dend_9, dend_8, dend_39, dend_34, dend_30, dend_29, dend_18, dend_17, dend_38, dend_35, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    apic_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_26 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_24 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_23 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_10 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_4 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_1 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_27 = new SectionList()
    apic_2 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_32 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_28 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_21 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_13 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_8 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_39 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_29 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_18 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_38 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_37 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_3 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_11 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    apic_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_31 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_33 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_19 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_12 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_7 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_14 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_27 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_35 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_30 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_17 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_22 nseg = 3
    apic_4 nseg = 13
    dend_26 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_10 nseg = 21
    dend_5 nseg = 9
    dend_4 nseg = 7
    dend_2 nseg = 5
    dend_1 nseg = 9
    apic_3 nseg = 5
    apic_2 nseg = 9
    dend_32 nseg = 9
    dend_28 nseg = 9
    dend_21 nseg = 5
    dend_20 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 9
    dend_13 nseg = 9
    dend_9 nseg = 3
    dend_8 nseg = 11
    dend_39 nseg = 13
    dend_34 nseg = 5
    dend_29 nseg = 3
    dend_18 nseg = 5
    dend_38 nseg = 5
    dend_37 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L23_DBC_d6bea44209_0_0


