// Cell: cNAC187_L1_HAC_dfd993e67b_0_0
/*
{
  "id" : "cNAC187_L1_HAC_dfd993e67b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.65547, 2.18325, -0.0103353, 3.67653", "-5.87661, 1.90632, -0.00953393, 6.77862", "-5.09776, 1.62939, -0.00873261, 7.84834", "-4.3189, 1.35247, -0.00793129, 8.85655", "-3.54004, 1.07554, -0.00712998, 9.98977", "-2.76118, 0.798609, -0.00632866, 10.5404", "-1.98232, 0.52168, -0.00552734, 11.0332", "-1.20347, 0.244751, -0.00472602, 10.9541", "-0.424607, -0.0321771, -0.0039247, 10.7127", "0.354251, -0.309106, -0.00312338, 10.5028", "1.13311, -0.586034, -0.00232206, 10.5438", "1.91197, -0.862963, -0.00152074, 10.4886", "2.69083, -1.13989, -7.19425E-4, 10.395", "3.46968, -1.41682, 8.18942E-5, 9.92038", "4.24854, -1.69375, 8.83213E-4, 9.42394", "5.0274, -1.97068, 0.00168453, 8.78916", "5.80626, -2.24761, 0.00248585, 8.12721", "6.58512, -2.52453, 0.00328717, 7.44606", "7.36397, -2.80146, 0.00408849, 6.65061", "8.14283, -3.07839, 0.00488981, 5.03163", "8.92169, -3.35532, 0.00569113, 2.85127" ]
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.10465, 0.82944, -0.758855, 1.8", "-5.9933, 0.86777, -1.21419, 1.8", "-9.45878, 1.01725, -2.98987, 1.44", "-11.8183, 1.11902, -4.19885, 1.32", "-14.2395, 1.22345, -5.43945, 1.56", "-16.1723, 1.30681, -6.42977, 1.56", "-17.7416, 1.3745, -7.23388, 1.2" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997973761656
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.63465, -3.06056, -0.478855, 1.08", "-4.13985, -3.44638, -1.90551, 1.08", "-5.63054, -3.94944, -3.70994, 1.08", "-6.39137, -4.27154, -4.75907, 1.08", "-7.63184, -4.90629, -6.61424, 0.96", "-8.02288, -5.16077, -7.32552, 0.96", "-8.35612, -5.40509, -7.95866, 0.96", "-9.47118, -6.38073, -10.2531, 0.96", "-9.64651, -6.57134, -10.6572, 0.96", "-9.80437, -6.77175, -11.052, 0.96", "-11.0899, -8.53107, -14.0387, 0.96", "-11.4965, -8.99089, -14.8636, 0.96", "-12.2032, -9.5829, -15.9881, 0.96", "-13.6792, -10.4667, -17.9293, 0.96", "-13.9824, -10.6094, -18.2933, 0.96", "-14.7209, -10.8993, -19.0912, 1.2", "-17.7656, -12.0139, -22.0816, 1.08", "-18.8572, -12.4321, -23.1422, 0.84", "-20.9342, -13.2955, -25.0459, 0.84", "-21.8315, -13.6885, -25.739, 0.84", "-22.6318, -14.0434, -26.2906, 1.08", "-24.0744, -14.6944, -27.1515, 1.08", "-25.0106, -15.1918, -27.5707, 1.08", "-25.9748, -15.7673, -27.9707, 0.96", "-27.1047, -16.5021, -28.357, 0.96", "-28.8785, -17.7083, -28.9805, 0.96", "-30.4753, -18.7649, -29.4981, 0.48", "-31.2596, -19.271, -29.7175, 0.48", "-31.8827, -19.688, -29.8857, 0.84", "-32.4491, -20.0957, -30.029, 0.84", "-34.1549, -21.4548, -30.3739, 0.48", "-35.3832, -22.5602, -30.5521, 0.84", "-36.0969, -23.226, -30.6195, 1.08", "-36.86, -23.8963, -30.6904, 1.08", "-37.2405, -24.2109, -30.7228, 1.08", "-38.5312, -25.1791, -30.8055, 1.44" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997973761656,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "8.51535, -1.39056, 0.491145, 2.16", "9.36685, -1.8315, 0.44514, 1.92", "10.4536, -2.37896, 0.31537, 1.44", "11.5585, -2.88125, 0.159312, 1.32", "12.9208, -3.41165, -0.0415232, 1.32", "14.3656, -3.87526, -0.197113, 1.2", "15.8831, -4.24956, -0.289774, 1.2", "17.5672, -4.54296, -0.255585, 1.2", "18.3212, -4.64271, -0.146346, 1.2", "19.1903, -4.72104, 0.099615, 1.2", "20.5676, -4.76401, 0.586931, 1.2", "21.7524, -4.74114, 1.06952, 1.44", "23.6666, -4.6909, 2.03256, 1.44", "25.3246, -4.73419, 3.03286, 1.2", "26.7706, -4.90637, 3.92472, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997973761656
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.62535, 2.05944, 0.0911455, 2.16", "5.84261, 2.24177, -0.842909, 2.16", "7.10986, 3.30526, -6.29107, 2.16" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997973761656
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.50465, 5.38944, -0.0188545, 1.56", "-4.39747, 6.32849, -0.245916, 1.32", "-4.99929, 6.9975, -0.405433, 1.2", "-5.96799, 8.15836, -0.643128, 1.2", "-7.21916, 9.65774, -0.950134, 1.2", "-8.02742, 10.6264, -1.14846, 1.2", "-8.76602, 11.5115, -1.3297, 1.32", "-9.44152, 12.2612, -1.50429, 1.32", "-10.1891, 13.1098, -1.7139, 1.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997973761656
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "8.92169, -3.35532, 0.00569113, 1.105", "23.0549, -8.38048, 0.00569113, 1.105", "37.1881, -13.4056, 0.00569113, 1.105" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.7416, 1.3745, -7.23388, 0.84", "-19.5837, 2.4279, -8.37431, 0.84", "-20.8438, 3.11121, -9.0514, 1.08", "-21.3426, 3.3583, -9.30541, 1.08", "-22.3851, 3.87473, -9.83629, 0.84", "-23.2267, 4.29159, -10.2648, 0.84", "-24.6679, 5.00549, -10.9987, 0.84", "-25.4661, 5.43546, -11.3142, 0.84", "-26.5807, 6.0259, -11.7133, 1.44" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-17.7416, 1.3745, -7.23388, 0.96", "-19.2247, 1.11825, -6.61279, 0.96", "-19.7793, 0.99734, -6.38437, 0.96", "-20.4154, 0.780191, -6.01185, 0.96", "-21.2357, 0.393921, -5.43756, 0.96", "-22.6795, -0.317397, -4.38724, 0.96", "-22.8659, -0.397446, -4.25891, 0.72", "-23.5258, -0.630931, -3.77567, 1.2", "-25.364, -1.20204, -2.36057, 0.84", "-26.0537, -1.41476, -1.81472, 1.08", "-26.7691, -1.65906, -1.29779, 1.08", "-27.987, -2.09447, -0.522983, 0.6", "-29.343, -2.50646, 0.254333, 0.84", "-29.8725, -2.63006, 0.508103, 0.84", "-30.7064, -2.78275, 0.796074, 0.72", "-32.386, -3.07172, 1.316, 0.72", "-33.8131, -3.39618, 1.91123, 0.84", "-34.1993, -3.48934, 2.09287, 0.84", "-34.8544, -3.62968, 2.38868, 0.84", "-35.2998, -3.69118, 2.59517, 0.84", "-35.9905, -3.71538, 2.90884, 0.84", "-38.4534, -3.58938, 4.01509, 0.72", "-39.2418, -3.55316, 4.33248, 0.72", "-40.2395, -3.51182, 4.71386, 0.72", "-41.1989, -3.46861, 5.06266, 0.72", "-42.0112, -3.45035, 5.36031, 0.72", "-43.1506, -3.50535, 5.75387, 0.72", "-44.4913, -3.72159, 6.13622, 0.72", "-45.2158, -3.97624, 6.48188, 0.72", "-45.5023, -4.11827, 6.65788, 0.72", "-46.7005, -4.89304, 7.5555, 0.96", "-47.5252, -5.5261, 8.25457, 0.96", "-48.4242, -6.31488, 9.08825, 0.72", "-50.3267, -8.14915, 11.0295, 0.72", "-50.6648, -8.49669, 11.4061, 0.72", "-51.2523, -9.1086, 12.0926, 0.72", "-51.3393, -9.19494, 12.1997, 0.72" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-38.5312, -25.1791, -30.8055, 0.84", "-39.608, -25.059, -30.276, 0.84", "-40.6984, -24.9173, -29.734, 0.84", "-41.1442, -24.8512, -29.5299, 0.84", "-42.5519, -24.5397, -28.8124, 0.84", "-43.9627, -24.1484, -28.1318, 0.72", "-45.0393, -23.8104, -27.6373, 1.08", "-46.7669, -23.212, -26.9061, 0.72", "-48.0111, -22.799, -26.4819, 0.72", "-49.8092, -22.2662, -26.0178, 0.96", "-51.2558, -21.9149, -25.7915, 0.72", "-51.6282, -21.8664, -25.7656, 0.72", "-53.2569, -21.8457, -25.7267, 0.72", "-54.9176, -22.0247, -25.7876, 0.72", "-56.619, -22.4527, -25.8785, 0.72", "-57.649, -22.8491, -25.9574, 0.72", "-58.9444, -23.5899, -26.0434, 0.96", "-59.694, -24.275, -26.1852, 0.96", "-59.6531, -25.373, -26.7393, 0.6", "-59.497, -25.6525, -27.0346, 0.6", "-59.3464, -25.8413, -27.3134, 0.6", "-58.671, -26.6062, -28.7644, 0.6", "-58.4594, -26.8375, -29.3504, 0.6", "-57.8722, -27.4982, -31.1964, 1.08", "-57.0597, -28.39, -33.9746, 0.96", "-56.4912, -28.9478, -35.8889, 0.72", "-56.0895, -29.3016, -37.2589, 0.72", "-55.6891, -29.5948, -38.6926, 0.96" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-38.5312, -25.1791, -30.8055, 1.08", "-39.2294, -25.7866, -32.1515, 1.08", "-39.6654, -26.1591, -32.9306, 1.08", "-40.5951, -26.9061, -34.3918, 0.84", "-40.9068, -27.1619, -34.8442, 0.84", "-41.5774, -27.7141, -35.6957, 0.84", "-42.3879, -28.3774, -36.5864, 1.08", "-42.8168, -28.7034, -36.9431, 1.08", "-43.3615, -29.0879, -37.3058, 1.08", "-44.3317, -29.684, -37.8027, 0.96", "-45.3, -30.1785, -38.2961, 0.96", "-46.1651, -30.5679, -38.703, 0.96", "-47.4281, -31.0441, -39.26, 1.2", "-48.0567, -31.2433, -39.5731, 1.2", "-49.385, -31.5551, -40.2596, 0.96", "-51.034, -31.8175, -41.1089, 0.96", "-51.5567, -31.885, -41.3956, 0.96", "-52.8006, -32.062, -42.0991, 0.96", "-53.8892, -32.2618, -42.6738, 0.96", "-54.9776, -32.5065, -43.1768, 0.96", "-55.4758, -32.6415, -43.3636, 1.32", "-56.9502, -33.0956, -43.8138, 1.32", "-58.3838, -33.5403, -44.2054, 0.96", "-59.7962, -33.9869, -44.5367, 0.96", "-60.9523, -34.3376, -44.7317, 0.96", "-61.674, -34.5603, -44.8339, 0.72", "-62.5567, -34.8152, -44.923, 0.72", "-63.4871, -35.0781, -44.9586, 0.72", "-63.9655, -35.2304, -44.9641, 1.08", "-65.1022, -35.6777, -44.9911, 1.08", "-66.0144, -36.1608, -44.9998, 1.08", "-66.2911, -36.3572, -44.99, 1.08", "-66.8855, -36.9733, -45.0302, 1.08", "-67.5728, -37.9692, -45.1497, 1.08", "-67.872, -38.4869, -45.199, 1.08", "-68.4912, -39.6157, -45.2851, 1.08", "-69.0735, -40.6484, -45.3489, 1.08", "-70.3493, -42.7677, -45.4432, 0.84", "-70.9579, -43.7928, -45.5396, 0.84", "-71.6282, -44.9696, -45.8243, 1.44", "-72.4925, -46.3964, -46.4074, 0.84", "-72.8002, -46.9035, -46.7374, 0.84", "-73.5033, -48.0756, -47.7312, 1.44", "-74.2439, -49.2355, -48.9303, 1.08", "-75.2786, -50.9087, -50.9116, 0.84", "-75.7985, -51.8424, -52.1521, 1.32", "-76.3831, -53.0722, -53.9598, 0.96", "-76.6021, -53.5653, -54.751, 0.96", "-76.9002, -54.292, -56.0657, 1.2" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "26.7706, -4.90637, 3.92472, 0.96", "28.353, -4.18295, 4.18907, 0.96", "28.8844, -3.91075, 4.24889, 0.96", "30.4337, -3.04819, 4.50517, 1.2", "31.2387, -2.60006, 4.63832, 1.2", "32.7667, -1.74935, 4.89108, 0.96", "33.6033, -1.28359, 5.02947, 0.96", "34.6954, -0.599858, 5.24682, 1.32", "36.3529, 0.488314, 5.54343, 1.32" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "26.7706, -4.90637, 3.92472, 1.08", "28.4196, -5.98229, 3.64292, 1.08", "28.9412, -6.31761, 3.46114, 1.08", "29.7084, -6.80718, 3.17405, 1.08", "30.6733, -7.44837, 2.7915, 1.08", "30.8688, -7.58018, 2.71661, 1.08", "32.1296, -8.49981, 2.2261, 0.84", "33.6454, -9.7558, 1.71499, 1.08", "34.038, -10.1844, 1.5661, 1.08", "34.5294, -11.0261, 1.39417, 0.84", "34.9444, -12.0763, 1.29842, 0.84", "35.4828, -13.8088, 1.28914, 0.84", "35.9902, -15.6395, 1.41343, 0.84", "36.4492, -17.361, 1.70899, 1.08", "37.2246, -20.1686, 2.27552, 0.96", "37.6262, -21.5672, 2.60732, 0.96", "37.8287, -22.2451, 2.78701, 0.96", "38.4053, -23.847, 3.22041, 0.96", "39.1038, -25.2764, 3.47689, 0.84", "39.8023, -26.5252, 3.50121, 0.96", "39.9606, -26.8193, 3.44074, 0.96", "40.2512, -27.4401, 3.2563, 0.96", "40.8271, -28.7008, 2.7829, 0.96", "41.4787, -30.0043, 2.13089, 1.08", "42.3125, -31.3668, 1.32307, 1.32", "43.2844, -32.8228, 0.431537, 0.96", "44.1441, -33.9605, -0.311102, 0.84", "45.5908, -35.6265, -1.46379, 1.32", "47.0848, -37.1437, -2.53216, 0.96", "48.0105, -37.9319, -3.09961, 0.96", "48.6362, -38.3643, -3.45294, 0.96", "49.9776, -39.1115, -4.11862, 0.96", "50.3755, -39.3097, -4.29977, 0.96", "51.1134, -39.6588, -4.56067, 0.96", "52.2494, -40.2831, -4.94773, 0.96", "52.7029, -40.5977, -5.13886, 0.96", "53.7124, -41.4488, -5.5878, 0.96", "54.1577, -41.9425, -5.80609, 0.96", "54.507, -42.394, -5.99757, 0.96", "55.3384, -43.7229, -6.55954, 0.96", "55.7652, -44.533, -6.93502, 0.96", "56.5203, -45.9936, -7.61822, 0.96", "57.2169, -47.4091, -8.31861, 0.96", "57.3134, -47.6047, -8.41867, 0.96", "57.9572, -48.9265, -9.12203, 0.96", "58.8159, -50.6853, -10.0558, 0.96", "59.1795, -51.4739, -10.4908, 0.96", "59.7175, -52.7924, -11.2484, 0.84", "60.0184, -53.5837, -11.6999, 0.84", "60.4194, -54.6167, -12.2777, 1.2", "60.6987, -55.3242, -12.6377, 1.2", "60.8306, -55.7817, -12.8179, 1.2" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "7.10986, 3.30526, -6.29107, 1.44", "7.63602, 4.92776, -7.69123, 1.44", "8.58784, 7.48549, -9.86999, 1.44", "8.94901, 8.3663, -10.6233, 1.44", "9.52126, 9.71656, -11.7544, 1.08", "10.2248, 11.3767, -13.1451, 1.08", "10.7587, 12.6366, -14.2005, 1.08", "11.5234, 14.2785, -15.5292, 1.32", "12.0189, 15.1805, -16.195, 1.56", "12.6484, 16.2395, -17.0463, 1.8" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "7.10986, 3.30526, -6.29107, 1.44", "6.35946, 4.8238, -9.18588, 1.44", "5.95257, 5.84402, -10.8557, 1.32", "5.76806, 6.79996, -12.3681, 1.08", "5.6683, 8.1084, -14.3836, 1.08", "5.66981, 8.38804, -14.7961, 1.08", "5.67234, 8.85857, -15.4903, 1.08", "5.77688, 9.37518, -16.1444, 1.08", "6.64528, 11.7488, -18.9262, 1.08", "6.80433, 12.0592, -19.2971, 1.08", "6.98757, 12.4212, -19.7448, 1.08" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-10.1891, 13.1098, -1.7139, 1.08", "-11.7595, 13.6367, -2.03457, 1.08", "-12.4755, 13.9678, -2.19469, 1.08", "-13.2436, 14.4082, -2.36989, 0.96", "-14.0811, 14.9174, -2.51837, 0.96", "-15.1811, 15.5647, -2.6549, 0.96", "-15.914, 16.0196, -2.72208, 0.96", "-17.1659, 16.8892, -2.74787, 0.84", "-17.755, 17.3524, -2.75416, 0.84", "-18.9837, 18.4823, -2.74919, 1.08", "-20.0675, 19.6728, -2.76267, 1.08", "-20.9059, 20.7096, -2.78826, 1.32", "-21.2688, 21.2331, -2.79354, 1.32", "-21.9034, 22.3871, -2.78062, 1.08", "-22.251, 23.3976, -2.83249, 0.6", "-22.3731, 24.1634, -2.90286, 0.6", "-22.378, 24.934, -2.99503, 0.6", "-22.2825, 25.8692, -3.13294, 0.6", "-22.0909, 26.8132, -3.29062, 0.6", "-21.5744, 28.1096, -3.55035, 0.6" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-10.1891, 13.1098, -1.7139, 0.84", "-10.0585, 14.0442, -1.93642, 0.84", "-9.78349, 15.3223, -2.28267, 0.84", "-9.52188, 16.2007, -2.53253, 0.84", "-9.238, 16.9079, -2.76263, 0.84", "-8.61767, 18.1912, -3.19764, 0.84", "-8.23475, 18.8852, -3.48043, 0.84", "-7.46459, 20.0641, -4.06451, 0.84", "-7.06564, 20.5995, -4.35971, 0.84", "-6.25711, 21.5665, -4.93179, 0.84", "-5.75951, 22.1539, -5.27142, 0.84", "-4.97854, 23.1952, -5.86812, 0.84", "-4.65998, 23.7278, -6.17208, 0.84", "-4.38422, 24.3118, -6.49051, 0.84", "-3.86504, 25.5659, -7.12717, 0.84", "-3.5537, 26.2945, -7.47147, 0.84", "-2.86982, 27.6991, -8.10879, 0.84", "-2.55549, 28.34, -8.36659, 0.84", "-2.36436, 28.7006, -8.52227, 0.6", "-1.88347, 29.4647, -8.87183, 0.6", "-1.07681, 30.4562, -9.31538, 0.84", "-0.704464, 30.7451, -9.44951, 1.08" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "37.1881, -13.4056, 0.00569113, 0.12", "51.3213, -18.4308, 0.00569113, 0.12", "65.4545, -23.456, 0.00569113, 0.12" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-26.5807, 6.0259, -11.7133, 0.96", "-27.2437, 6.56563, -12.0051, 0.96", "-27.9453, 7.09905, -12.3857, 0.96", "-29.171, 7.94913, -13.2098, 0.96", "-29.9595, 8.46877, -13.7008, 0.96", "-30.5427, 8.84387, -14.0919, 0.96", "-31.32, 9.35956, -14.5671, 0.96", "-32.7368, 10.2516, -15.452, 1.08", "-34.2338, 11.0662, -16.5252, 1.08", "-35.1874, 11.4905, -17.2285, 0.96", "-36.5948, 12.0436, -18.3212, 0.96", "-38.0173, 12.6077, -19.4696, 1.08", "-39.3519, 13.2309, -20.6379, 0.84", "-41.0483, 14.1695, -22.1206, 0.84", "-41.6932, 14.5571, -22.672, 0.84", "-42.1235, 14.8172, -23.0257, 0.84", "-42.683, 15.119, -23.4271, 0.84", "-43.8842, 15.6668, -24.2122, 0.84", "-44.8124, 16.0212, -24.7871, 0.84", "-45.7711, 16.2098, -25.3333, 0.84", "-46.6268, 16.2464, -25.8327, 1.08", "-48.4698, 16.1572, -26.9369, 0.72", "-49.6132, 16.0198, -27.5958, 0.72", "-51.6929, 15.643, -28.8787, 0.72", "-53.0402, 15.3918, -29.7799, 0.96", "-53.4449, 15.3237, -30.0608, 0.96", "-54.5317, 15.2001, -30.8739, 0.72", "-55.6939, 15.1527, -31.7313, 0.72", "-57.4242, 15.138, -33.1103, 0.96", "-58.2479, 15.1957, -33.7299, 0.6", "-58.6377, 15.2435, -34.0539, 0.6", "-60.2742, 15.4389, -35.4887, 0.6", "-60.8976, 15.4933, -36.0618, 0.6", "-62.2738, 15.614, -37.5194, 0.6" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-26.5807, 6.0259, -11.7133, 0.96", "-27.0532, 6.94185, -12.6388, 0.96", "-27.3987, 7.61098, -13.3207, 0.96", "-28.0279, 8.82949, -14.5624, 0.96", "-28.6645, 10.0625, -15.8189, 1.44", "-29.4513, 11.5861, -17.3717, 0.96", "-29.759, 12.1821, -17.979, 0.96", "-30.3871, 13.3232, -19.1737, 1.08" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-51.3393, -9.19494, 12.1997, 0.84", "-52.5178, -10.1097, 12.213, 0.84", "-53.1247, -10.5809, 12.2198, 0.84", "-54.1387, -11.3681, 12.2312, 0.84" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-51.3393, -9.19494, 12.1997, 0.72", "-51.5572, -9.62571, 12.3462, 0.72", "-52.1475, -10.4921, 12.7503, 0.72", "-52.8663, -11.4099, 13.2163, 0.96", "-53.824, -12.5345, 13.8454, 0.72", "-54.7428, -13.6134, 14.4491, 0.72", "-55.6078, -14.6291, 15.0173, 0.72", "-57.0318, -16.1245, 15.929, 0.72", "-57.4656, -16.5204, 16.1986, 0.72", "-58.7793, -17.6185, 17.03, 0.96", "-65.0808, -22.9319, 22.6921, 0.96" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "36.3529, 0.488314, 5.54343, 1.08", "37.5448, 2.5678, 4.48392, 1.08", "38.5145, 3.89803, 3.88799, 1.08", "39.3182, 4.91852, 3.48993, 1.08", "40.1603, 6.011, 3.00341, 1.08", "40.8499, 6.91131, 2.58876, 1.08", "41.6329, 7.96114, 2.11037, 1.08", "42.328, 8.89982, 1.68167, 0.84", "42.7834, 9.54112, 1.32408, 0.84", "43.8275, 11.4147, 0.0855789, 0.84", "44.1199, 12.1371, -0.424847, 1.08", "44.2885, 12.7097, -0.844817, 1.08", "44.7482, 14.3979, -2.14162, 0.72", "45.0331, 15.3937, -2.91311, 0.72", "45.4306, 16.6222, -3.82371, 1.08", "45.5358, 16.9237, -4.02867, 1.08", "45.7386, 17.5428, -4.43607, 1.08", "46.1765, 19.0135, -5.30312, 0.84", "46.495, 20.2875, -5.86774, 1.2", "46.6336, 21.0681, -6.15203, 1.2", "46.7895, 22.7617, -6.65624, 1.2", "46.7874, 23.8314, -6.91445, 1.08", "46.6721, 24.9909, -7.04713, 1.08", "46.3981, 26.2492, -7.01875, 0.96", "46.1928, 26.9101, -6.89925, 0.96", "45.8482, 27.7894, -6.6318, 0.96", "45.3712, 28.7901, -6.18266, 0.96", "44.5167, 30.3483, -5.38013, 0.96", "43.9141, 31.3812, -4.80282, 0.96", "43.2425, 32.4431, -4.17711, 0.72", "42.733, 33.1868, -3.70351, 0.72", "41.8734, 34.216, -2.98275, 0.72", "41.3297, 34.7495, -2.5839, 0.96" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "36.3529, 0.488314, 5.54343, 0.96", "38.0088, 1.10991, 6.55984, 0.96", "39.5741, 1.57739, 7.37253, 0.96", "41.414, 2.0584, 8.19992, 1.2", "42.3332, 2.29459, 8.5623, 1.2", "43.6259, 2.61162, 9.0395, 1.08", "45.4383, 3.03755, 9.67294, 1.08", "46.5643, 3.29748, 10.0177, 1.08", "47.5123, 3.46606, 10.246, 1.08", "48.606, 3.57256, 10.4954, 1.08", "49.6872, 3.59745, 10.7865, 1.08", "50.1448, 3.58005, 10.9306, 1.08", "52.1329, 3.41834, 11.6122, 1.08", "53.2043, 3.24552, 11.9969, 1.08", "54.2203, 3.04135, 12.3075, 1.08", "54.9031, 2.88058, 12.4701, 1.08", "56.1327, 2.57644, 12.6753, 1.2", "56.7226, 2.42101, 12.7233, 1.2", "57.9794, 2.08208, 12.7124, 1.08", "59.8414, 1.68356, 12.575, 0.96", "60.9566, 1.48976, 12.4537, 0.96", "61.4871, 1.41863, 12.3901, 0.96", "63.3368, 1.19184, 12.1536, 0.96", "64.7881, 1.0364, 11.9813, 1.2", "66.9555, 0.859619, 11.7519, 0.96", "67.5644, 0.82445, 11.7027, 0.96", "68.5852, 0.815493, 11.6078, 0.96", "69.012, 0.821048, 11.5369, 0.96", "69.9776, 0.859793, 11.3185, 0.96", "70.6452, 0.888662, 11.0935, 0.96", "71.4884, 0.903746, 10.7415, 0.96", "73.1186, 0.829386, 9.91329, 0.72", "75.1169, 0.685202, 8.73944, 0.72", "75.9377, 0.612125, 8.229, 0.72", "77.1669, 0.443501, 7.42139, 0.72", "77.6544, 0.355777, 7.09339, 0.72", "78.9947, 0.067699, 6.18889, 0.72", "80.2424, -0.237406, 5.39741, 0.72", "81.2983, -0.545085, 4.83449, 0.72", "81.7386, -0.711751, 4.59602, 0.72", "81.9628, -0.808796, 4.4851, 0.72", "82.3766, -0.991576, 4.28462, 0.72", "82.9231, -1.26403, 3.98822, 0.72", "84.2271, -2.08311, 3.1611, 0.72", "85.1807, -2.72947, 2.49199, 0.72", "85.5317, -2.97147, 2.24087, 0.72", "85.7019, -3.08847, 2.11869, 0.72", "87.5393, -4.31547, 0.877604, 0.72", "88.0279, -4.62438, 0.588748, 0.72", "88.5004, -4.91088, 0.370614, 0.72", "88.8781, -5.09735, 0.255236, 0.72", "89.3644, -5.30751, 0.150386, 0.72", "90.4406, -5.66617, 0.037272, 0.96", "91.2175, -5.87682, 0.0458366, 0.96", "91.5918, -5.98233, 0.0499465, 0.96", "92.7384, -6.35597, 0.0619691, 0.96", "93.3866, -6.60567, 0.0681358, 0.96", "94.5783, -7.1724, 0.100222, 0.96", "96.0986, -7.99879, 0.15972, 0.72", "96.6974, -8.34259, 0.190093, 0.72", "97.3021, -8.69272, 0.226495, 0.72", "97.7584, -8.95593, 0.258933, 0.72", "98.8534, -9.54223, 0.346891, 0.72", "99.1903, -9.71406, 0.377753, 0.72", "100.1, -10.0345, 0.459623, 0.72", "100.776, -10.2082, 0.510021, 0.72", "101.36, -10.341, 0.54183, 0.72", "101.618, -10.4133, 0.54879, 0.72", "102.134, -10.5623, 0.54879, 0.72", "102.707, -10.7764, 0.54879, 0.72", "103.472, -11.1698, 0.54879, 0.72", "104.127, -11.5704, 0.54879, 0.72", "105.378, -12.3967, 0.54879, 0.72" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "60.8306, -55.7817, -12.8179, 0.84", "60.2843, -56.4562, -14.0984, 0.84", "59.4128, -57.4082, -15.9599, 0.84", "59.0431, -57.7972, -16.7797, 0.84", "58.9498, -57.8934, -16.9789, 0.84", "58.1984, -58.7645, -18.7365, 0.84", "57.5096, -59.6271, -20.4275, 0.84", "57.23, -60.0159, -21.1581, 0.84", "56.5398, -60.9865, -22.8992, 0.84", "56.2961, -61.2962, -23.4432, 0.84", "55.4977, -62.3657, -25.1625, 0.84", "55.4159, -62.4937, -25.3482, 0.84", "55.1308, -63.0366, -26.057, 0.84", "54.678, -63.9394, -27.2441, 1.08", "54.4031, -64.5193, -27.9681, 1.08", "53.7775, -65.923, -29.6416, 0.84", "53.0558, -67.3762, -31.2938, 0.72", "52.7437, -68.0314, -32.0013, 0.72", "51.9568, -69.7602, -33.7324, 0.72", "51.7039, -70.3383, -34.2323, 0.72", "51.3285, -71.1582, -34.8563, 0.72", "50.679, -72.3759, -35.554, 0.72", "50.2165, -73.1653, -35.9049, 0.72", "49.7979, -73.8506, -36.1787, 0.72", "49.5368, -74.2845, -36.3273, 0.72", "48.5136, -75.9146, -36.8567, 0.72", "47.9778, -76.749, -37.1126, 0.72", "47.7852, -77.0432, -37.1902, 0.84", "47.1331, -77.9481, -37.411, 0.6", "46.0153, -79.5058, -37.7349, 0.6", "45.2581, -80.6131, -37.9085, 0.6", "44.9377, -81.1328, -37.9492, 0.6", "44.2775, -82.329, -38.0205, 0.6", "44.0757, -82.7021, -38.0328, 0.6", "43.7472, -83.3539, -38.0483, 0.6", "43.3627, -84.1994, -38.0823, 0.6", "43.0267, -84.9234, -38.187, 0.6", "42.8384, -85.2917, -38.2821, 0.6", "42.3673, -86.0813, -38.5795, 0.6", "41.9275, -86.8391, -38.9403, 0.6", "41.6828, -87.2683, -39.1499, 0.6", "41.3828, -87.8212, -39.4052, 0.6", "40.9769, -88.7105, -39.7733, 0.6", "40.8746, -89.0266, -39.9122, 0.6", "40.4403, -90.6471, -40.4966, 0.84", "40.153, -91.826, -40.9138, 0.84", "39.985, -92.5147, -41.157, 0.84", "39.815, -93.1771, -41.3823, 0.84", "39.2923, -95.0578, -41.9552, 0.6", "38.7536, -96.7073, -42.4343, 0.6", "38.2756, -97.8771, -42.7425, 0.6", "37.8562, -98.7877, -42.9791, 0.6", "37.604, -99.2546, -43.059, 0.6", "37.14, -99.952, -43.1002, 0.6", "36.6342, -100.56, -43.0086, 0.84", "36.1169, -101.112, -42.8741, 0.84", "35.7275, -101.455, -42.7295, 0.84", "34.5582, -102.375, -42.2769, 0.6", "33.7852, -102.995, -41.8638, 0.6", "32.8938, -103.698, -41.3122, 0.6", "32.4149, -104.08, -40.9923, 0.96", "31.3621, -104.954, -40.2578, 0.72", "30.7336, -105.522, -39.8084, 0.72", "29.1916, -107.061, -38.7387, 0.72", "28.3831, -107.975, -38.179, 0.72", "27.9657, -108.479, -37.9325, 0.72", "27.6502, -108.83, -37.7606, 0.72", "27.1656, -109.313, -37.5356, 0.72", "26.5021, -109.812, -37.3237, 0.72", "26.1374, -110.038, -37.2701, 0.72", "25.2161, -110.567, -37.1139, 1.08", "24.0627, -111.12, -36.8913, 0.84", "23.5066, -111.313, -36.7737, 0.84", "23.036, -111.397, -36.6667, 0.84" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "60.8306, -55.7817, -12.8179, 0.72", "61.5392, -56.7051, -11.9395, 0.72", "61.7409, -57.0328, -11.6527, 0.72", "62.238, -57.9198, -10.9593, 1.2", "62.8071, -59.1937, -9.9565, 0.96", "63.0489, -59.7348, -9.53049, 0.96", "63.6143, -61.0005, -8.53426, 0.96", "63.7992, -61.4433, -8.19124, 0.96", "64.2671, -62.7562, -7.15216, 0.96", "64.5692, -64.1654, -6.06805, 0.84" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "12.6484, 16.2395, -17.0463, 0.96", "14.6192, 16.2068, -18.6497, 0.96", "15.3338, 16.1236, -19.2505, 0.96", "15.9264, 16.0909, -19.7286, 0.96", "17.6917, 16.0655, -21.0244, 0.96", "18.8004, 16.131, -21.8099, 1.2", "20.2569, 16.2938, -22.7992, 1.2", "20.7195, 16.3276, -23.167, 1.2", "21.6791, 16.371, -23.9586, 1.08", "22.4232, 16.4153, -24.5637, 1.08", "24.0599, 16.7478, -25.6589, 1.08", "24.5567, 16.9491, -25.9285, 1.08" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.6484, 16.2395, -17.0463, 1.2", "11.6656, 16.6567, -17.988, 1.2", "10.2151, 17.2723, -19.3781, 1.2", "9.2694, 17.6735, -20.2844, 1.08", "8.52847, 17.988, -20.9945, 1.08", "7.92299, 18.245, -21.5747, 1.08" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.98757, 12.4212, -19.7448, 0.96", "8.19303, 12.6041, -19.1641, 0.96", "9.27778, 12.6689, -18.6645, 0.96", "11.0014, 12.5689, -17.9119, 0.96", "12.4718, 12.3198, -17.2814, 1.08", "13.9917, 11.8774, -16.6346, 0.96", "14.5044, 11.6476, -16.4294, 0.96", "14.8996, 11.3664, -16.2746, 0.96", "15.6989, 10.6351, -16.0246, 0.96", "16.2573, 9.97225, -15.9144, 0.96", "16.7387, 9.28564, -15.9063, 0.96", "17.612, 8.02853, -16.0143, 0.96", "17.9846, 7.54835, -16.0848, 0.96", "18.4564, 7.04681, -16.2093, 0.96", "18.7186, 6.81744, -16.2999, 0.96", "20.1524, 5.84296, -16.8875, 0.96", "20.5631, 5.62719, -17.0665, 0.96", "21.1781, 5.38542, -17.3569, 0.96", "22.5175, 5.01939, -18.027, 0.96", "23.3138, 4.8679, -18.4785, 0.84", "24.9164, 4.67368, -19.412, 0.96", "25.8034, 4.59856, -20.0037, 0.96", "26.814, 4.50056, -20.7719, 0.84", "28.1131, 4.3203, -21.9463, 0.84", "29.2437, 4.09015, -23.1757, 0.84", "29.7221, 3.91264, -23.8429, 0.84", "30.9952, 3.09332, -26.159, 1.08", "31.1729, 2.93122, -26.5187, 1.08", "31.7573, 2.19696, -27.8168, 1.2", "32.0859, 1.65924, -28.5316, 1.2", "32.9672, 0.139779, -30.0179, 1.2", "33.0919, -0.0400946, -30.1164, 1.2", "34.8436, -1.75711, -29.8754, 1.2", "35.1844, -2.00549, -29.7786, 1.2", "36.3553, -2.7408, -29.4267, 0.96", "36.8874, -3.07411, -29.2736, 0.96", "38.1631, -3.84283, -28.9142, 0.84", "38.895, -4.2889, -28.7594, 0.84", "39.9087, -4.93561, -28.6675, 0.84", "41.1269, -5.70897, -28.5816, 0.6", "42.9319, -6.84621, -28.5332, 0.84", "44.1782, -7.67487, -28.5301, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "6.98757, 12.4212, -19.7448, 1.08", "6.82009, 12.6041, -20.7826, 1.08", "6.6153, 13.154, -22.8338, 1.08", "6.50363, 13.6594, -24.1405, 1.08", "6.33202, 14.4547, -25.8564, 1.08", "6.12975, 15.1694, -27.192, 1.08", "5.87704, 15.9239, -28.5187, 0.96", "5.67117, 16.5784, -29.5462, 0.96", "5.34032, 17.538, -30.7875, 1.32", "5.1566, 17.9227, -31.2097, 1.32", "4.71856, 18.5786, -32.1659, 1.32", "3.75231, 19.7024, -34.0026, 0.96", "3.41638, 20.0114, -34.6131, 0.96", "2.99536, 20.3439, -35.4123, 0.96", "2.69825, 20.5449, -36.0776, 0.96", "0.67749, 21.9692, -41.7805, 0.96" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-0.704464, 30.7451, -9.44951, 1.2", "0.32402, 31.2757, -9.41215, 1.2", "1.05859, 31.731, -9.36756, 1.2", "2.22496, 32.5092, -9.28449, 1.2", "2.73118, 32.8489, -9.23296, 1.44", "3.86547, 33.5797, -9.10454, 1.08", "4.31203, 33.8559, -9.05233, 1.08", "5.02947, 34.3373, -8.92303, 0.84", "5.5464, 34.7034, -8.81504, 0.84", "6.03102, 35.09, -8.72567, 0.84", "6.57172, 35.5648, -8.67026, 0.84", "7.05148, 35.9977, -8.66267, 0.84", "7.61099, 36.5024, -8.67109, 1.08", "8.27772, 37.1139, -8.67843, 1.08", "9.21862, 38.0941, -8.81956, 0.84", "9.91082, 38.8391, -8.99661, 0.72", "10.3762, 39.333, -9.14501, 0.72", "10.5625, 39.514, -9.21254, 0.72", "11.5714, 40.3451, -9.56064, 0.96", "13.2134, 41.562, -10.1417, 0.84", "13.8051, 41.9541, -10.3502, 0.84", "14.1548, 42.1706, -10.4845, 0.72", "14.7685, 42.534, -10.7439, 0.72", "15.6278, 42.9915, -11.1186, 0.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.704464, 30.7451, -9.44951, 0.72", "-0.734423, 31.614, -10.1696, 0.72", "-0.710424, 32.5584, -10.9846, 0.72", "-0.695061, 33.4476, -11.7641, 0.72", "-0.706298, 34.0343, -12.2627, 0.72", "-0.734833, 35.473, -13.4391, 0.72", "-0.734912, 35.8792, -13.7459, 0.72", "-0.729075, 36.91, -14.5056, 0.72", "-0.707549, 37.5101, -14.905, 0.72", "-0.605687, 38.7067, -15.6084, 0.72", "-0.46161, 39.8036, -16.2253, 0.72", "-0.284847, 40.7631, -16.7931, 0.72", "-0.191456, 41.2328, -17.0749, 0.96", "0.0260588, 42.1032, -17.5965, 0.84", "0.23876, 42.7537, -18.0032, 0.84", "0.82765, 44.123, -18.9612, 0.84", "1.56148, 45.5845, -20.1752, 0.84" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-62.2738, 15.614, -37.5194, 0.72", "-63.2413, 15.654, -38.3122, 0.72", "-64.6153, 15.6918, -39.4572, 1.08", "-67.1412, 15.7264, -41.5326, 0.84", "-67.6732, 15.7044, -41.9598, 0.84", "-68.6642, 15.6353, -42.7041, 0.84", "-70.8202, 15.4593, -44.1758, 0.84", "-71.3244, 15.411, -44.519, 0.84", "-71.8538, 15.3513, -44.8431, 1.08", "-72.9718, 15.2185, -45.3704, 1.08", "-74.2018, 15.0529, -45.88, 0.72", "-75.4546, 14.9001, -46.3164, 0.72", "-77.8906, 14.6603, -46.9618, 0.72", "-78.7743, 14.5889, -47.1833, 0.72", "-80.1956, 14.4917, -47.5023, 0.72", "-81.5293, 14.4355, -47.7643, 0.72", "-82.2588, 14.3941, -47.8802, 0.72", "-83.1097, 14.3388, -47.9659, 0.72", "-84.3208, 14.2304, -48.1041, 0.72", "-85.5744, 14.087, -48.3666, 0.72", "-86.3007, 14.0394, -48.5703, 0.72", "-86.9166, 14.0394, -48.7658, 0.72", "-87.7365, 14.0331, -49.0427, 0.72", "-90.1307, 13.967, -49.8711, 0.72", "-91.0829, 13.9176, -50.2727, 0.72", "-92.5879, 13.7896, -50.9662, 0.72", "-93.4272, 13.6965, -51.3728, 0.72", "-94.3016, 13.6046, -51.781, 0.72", "-95.1369, 13.5126, -52.1352, 0.72", "-97.1274, 13.2522, -52.8274, 0.6", "-97.8333, 13.1182, -53.0719, 0.6", "-99.0581, 12.7594, -53.4609, 1.08", "-100.086, 12.3683, -53.7586, 1.08", "-100.869, 12.0733, -53.9002, 1.08", "-101.761, 11.7326, -54.0243, 1.08", "-103.059, 11.2083, -54.1406, 1.08", "-104.454, 10.5901, -54.2621, 0.84", "-105.451, 10.0986, -54.3399, 0.84", "-108.045, 8.66973, -54.5503, 1.2", "-109.802, 7.66072, -54.6928, 1.2", "-110.951, 6.93966, -54.8172, 1.2", "-112.193, 6.08242, -54.9257, 0.96", "-113.39, 5.13136, -54.9955, 0.96", "-114.785, 3.71672, -55.1002, 1.2", "-115.131, 3.23657, -55.1522, 1.2", "-115.914, 2.00236, -55.2406, 1.08", "-116.836, 0.349623, -55.3819, 0.96", "-117.619, -1.31119, -55.5551, 1.2", "-118.597, -3.75879, -55.8674, 0.96", "-119.003, -4.93603, -56.0563, 0.84" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-62.2738, 15.614, -37.5194, 0.6", "-62.4301, 14.3725, -37.2588, 0.6", "-62.5317, 13.5663, -37.0896, 0.72" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-30.3871, 13.3232, -19.1737, 0.84", "-31.2148, 13.2479, -19.5734, 0.84", "-31.5219, 13.2558, -19.7961, 0.84", "-32.0574, 13.2857, -20.2613, 0.84", "-32.4502, 13.3076, -20.6026, 0.84", "-33.2138, 13.3502, -21.266, 0.84", "-34.6798, 13.432, -22.5397, 0.84", "-36.5275, 13.5197, -24.2377, 1.2", "-37.4053, 13.5868, -25.1066, 1.08" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-30.3871, 13.3232, -19.1737, 0.6", "-30.6133, 14.3292, -20.1149, 0.6", "-30.6787, 14.6368, -20.412, 0.6", "-30.7926, 15.3702, -21.0989, 0.84", "-30.9295, 16.7176, -22.2371, 0.72", "-30.9237, 17.1411, -22.5595, 0.72", "-30.6588, 18.8173, -24.0624, 0.72", "-30.5428, 19.219, -24.6128, 0.72", "-30.4458, 19.5349, -25.1255, 0.84", "-30.3027, 19.9839, -25.959, 0.84", "-29.9597, 20.7845, -27.5168, 0.72", "-29.2682, 22.1033, -30.219, 0.96", "-28.3527, 23.3731, -33.516, 0.96", "-28.0634, 23.6926, -34.5135, 0.96", "-27.8505, 23.8804, -35.2014, 0.96", "-27.0098, 24.3981, -37.6009, 0.96", "-26.2496, 24.6441, -39.3114, 0.84", "-24.5616, 24.9069, -41.9549, 0.96", "-23.9756, 24.9454, -42.6016, 0.96", "-23.6369, 24.962, -42.9587, 0.72", "-22.8683, 24.9549, -43.7014, 0.72", "-21.2085, 24.7698, -45.1542, 0.72", "-20.819, 24.7257, -45.4561, 0.72", "-19.6695, 24.7108, -46.2125, 0.72", "-17.6227, 24.6982, -47.8184, 0.84" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-54.1387, -11.3681, 12.2312, 0.96", "-55.0831, -11.598, 12.2193, 0.96", "-56.579, -12.0445, 12.2058, 0.96", "-58.0103, -12.4254, 12.1578, 0.96", "-59.6053, -12.7989, 12.2065, 0.72", "-60.9305, -13.0965, 12.3095, 0.72", "-62.5444, -13.4819, 12.4704, 0.72", "-64.7686, -14.0533, 12.7554, 1.2", "-66.0991, -14.4384, 12.9451, 1.2", "-68.9068, -15.2703, 13.3667, 0.84", "-70.6659, -15.7847, 13.6345, 0.84", "-72.4678, -16.306, 13.8786, 0.84", "-73.0485, -16.4676, 13.9424, 0.84", "-75.7104, -17.1975, 14.1513, 1.08", "-77.1096, -17.5518, 14.2185, 1.08", "-78.125, -17.7472, 14.2214, 1.08", "-80.7722, -18.1014, 14.1485, 1.56", "-83.3972, -18.34, 14.0003, 1.08", "-85.7008, -18.5236, 13.8172, 0.72", "-86.9742, -18.6068, 13.6838, 0.72", "-88.8626, -18.7127, 13.4526, 0.6", "-90.9589, -18.7857, 13.1477, 0.96", "-92.2091, -18.8326, 12.9258, 0.96", "-93.0904, -18.9131, 12.7379, 0.96", "-93.4562, -18.9718, 12.6557, 0.96", "-94.6565, -19.2764, 12.4104, 0.96", "-96.1739, -19.7664, 12.1551, 0.96", "-96.7422, -19.9545, 12.1136, 0.96", "-97.1637, -20.1089, 12.1229, 0.96", "-98.0793, -20.476, 12.185, 0.96", "-99.1415, -20.9851, 12.2941, 0.96", "-99.9473, -21.4601, 12.3742, 0.96", "-100.457, -21.8113, 12.3932, 0.96", "-102.119, -23.1381, 12.2636, 0.6", "-102.938, -23.9649, 12.0801, 0.6", "-103.584, -24.7232, 11.8705, 0.6", "-104.292, -25.7281, 11.5109, 0.96", "-105.235, -27.4609, 10.6787, 0.36", "-105.546, -28.3916, 10.0828, 1.32", "-105.585, -29.1166, 9.42472, 1.32", "-114.284, -33.8941, 8.19476, 1.32" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-54.1387, -11.3681, 12.2312, 0.84", "-54.6761, -9.98558, 11.492, 0.84", "-55.1491, -8.49676, 10.5549, 0.84", "-55.3337, -7.85114, 10.1349, 0.84", "-55.7576, -6.64133, 9.43629, 0.84", "-56.2393, -5.40159, 8.74176, 0.84", "-56.8363, -4.03113, 7.9458, 0.84", "-57.9358, -1.84643, 6.88715, 1.32", "-58.8515, -0.399115, 6.4311, 1.32", "-60.5292, 1.57092, 6.20528, 1.32", "-61.2847, 2.20608, 6.30455, 1.32", "-63.6485, 3.54793, 7.12767, 0.96", "-68.1569, 4.97296, 9.36414, 0.96", "-70.2441, 5.17458, 10.4592, 0.96", "-71.4204, 5.09618, 11.0531, 0.96", "-72.6344, 4.86352, 11.5797, 0.72", "-74.2591, 4.50344, 12.0899, 1.2", "-75.3059, 4.18431, 12.3584, 1.2", "-77.7156, 3.36806, 12.3267, 0.84", "-78.5547, 3.10957, 12.231, 0.84", "-80.3433, 2.6716, 11.9494, 1.32", "-83.628, 2.26756, 11.2662, 0.96", "-92.7597, 6.3272, 10.9036, 0.96" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "105.378, -12.3967, 0.54879, 0.72", "106.735, -12.6132, 0.356932, 0.72", "108.4, -12.8001, 0.148199, 0.72", "109.33, -12.8502, 0.0411231, 0.72", "109.499, -12.8478, 0.0241769, 0.72", "110.36, -12.8052, -0.0501908, 0.72", "111.562, -12.747, -0.135187, 0.72", "112.068, -12.6979, -0.15567, 0.72", "112.604, -12.667, -0.164612, 0.72", "113.635, -12.6689, -0.164612, 0.72", "114.479, -12.741, -0.164612, 0.72", "115.934, -13.0192, -0.264131, 0.72", "117.178, -13.4324, -0.418256, 0.72", "118.19, -13.8857, -0.647052, 0.96", "118.687, -14.1726, -0.791462, 0.96", "119.856, -14.9702, -1.2012, 0.96", "121.323, -16.102, -1.77445, 0.96", "122.178, -16.8294, -2.1394, 0.96", "123.738, -18.2031, -2.81976, 0.96", "125.374, -19.6234, -3.52299, 0.96", "126.319, -20.4007, -3.8975, 0.96", "127.063, -20.9823, -4.11511, 0.96", "127.332, -21.1868, -4.1507, 0.96", "128.004, -21.6898, -4.15552, 0.96", "128.196, -21.8298, -4.11861, 0.96", "128.795, -22.2142, -3.94833, 0.96", "130.171, -22.9524, -3.51575, 0.96", "130.934, -23.2936, -3.29629, 0.96", "131.9, -23.6976, -3.05284, 0.96", "132.346, -23.8904, -2.9566, 0.96", "132.897, -24.139, -2.86495, 0.96", "133.837, -24.5665, -2.77865, 0.96", "134.285, -24.7381, -2.79529, 0.96", "134.947, -24.9618, -2.83702, 0.96", "135.451, -25.1111, -2.88226, 0.96", "136.131, -25.2731, -2.95367, 0.96", "136.66, -25.3624, -3.01249, 0.96", "137.931, -25.5371, -3.15035, 0.84", "138.536, -25.5665, -3.24146, 0.84", "139.462, -25.5737, -3.39562, 0.84", "140.257, -25.5847, -3.53163, 0.84", "141.206, -25.6419, -3.76049, 1.2", "142.133, -25.7316, -4.02029, 1.2", "143.978, -25.9732, -4.58639, 0.96", "145.069, -26.1028, -5.01993, 0.96", "145.845, -26.1946, -5.37382, 0.96", "147.999, -26.4174, -6.46071, 0.96", "148.644, -26.4412, -6.8606, 0.96", "148.952, -26.4229, -7.08181, 0.96", "150.843, -26.0919, -8.66036, 0.96", "151.451, -25.924, -9.21466, 0.96", "151.623, -25.8682, -9.37289, 1.32", "153.09, -25.3361, -10.7327, 0.96", "153.36, -25.2543, -10.9788, 0.96", "155.279, -24.7948, -12.606, 0.96", "155.551, -24.7491, -12.8151, 0.96", "156.164, -24.6714, -13.2611, 0.96", "157.6, -24.5373, -14.1833, 0.96", "158.37, -24.4953, -14.594, 0.96", "158.795, -24.4942, -14.8175, 0.96", "159.432, -24.5292, -15.1298, 0.96", "161.051, -24.6866, -15.9836, 0.96", "161.613, -24.7659, -16.292, 0.96", "161.846, -24.8184, -16.4143, 1.2", "163.141, -25.195, -17.0832, 0.96", "163.718, -25.4146, -17.3651, 0.96", "164.949, -25.9665, -17.9354, 0.96", "165.145, -26.0737, -18.0232, 0.96", "165.844, -26.4893, -18.3421, 0.96", "166.731, -27.0166, -18.723, 1.2", "167.153, -27.2358, -18.8595, 1.08" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "105.378, -12.3967, 0.54879, 0.84", "106.059, -12.9618, 1.18161, 0.84", "107.13, -14.0931, 2.2041, 0.84", "107.288, -14.26, 2.35494, 0.84", "108.114, -15.1317, 3.14272, 0.84", "108.735, -15.7872, 3.7352, 0.84", "109.653, -16.7563, 4.61102, 0.72", "111.133, -18.1349, 5.89919, 1.2", "117.304, -23.5261, 11.6309, 1.2" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "24.5567, 16.9491, -25.9285, 1.2", "26.5877, 16.9263, -25.3049, 1.2", "27.5054, 16.916, -25.0231, 1.2", "29.2301, 16.8967, -24.4936, 1.2", "30.3546, 16.8841, -24.1483, 1.44" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "24.5567, 16.9491, -25.9285, 0.96", "25.0908, 17.8195, -27.4213, 0.96", "25.7223, 18.9085, -29.3475, 0.96", "26.2804, 19.9165, -31.0692, 0.96", "26.6618, 20.687, -32.4515, 0.96", "27.2808, 22.1602, -35.3015, 0.96", "27.7463, 23.4464, -38.0245, 0.96", "27.9959, 24.3337, -40.3684, 0.96", "28.0676, 24.5742, -41.1973, 0.96", "28.3097, 25.1679, -44.0094, 1.32", "28.5404, 25.4652, -46.4404, 1.32", "28.8369, 25.489, -49.1168, 1.32", "29.1213, 25.2073, -51.652, 1.32", "29.3699, 24.7432, -53.7624, 1.32", "29.5233, 24.3124, -55.1672, 1.08", "29.7379, 23.589, -57.0518, 0.84", "29.845, 22.9459, -58.5979, 0.84", "29.8465, 22.3894, -60.0651, 0.84", "29.7341, 21.8979, -61.4281, 0.84", "29.438, 21.4067, -62.9761, 0.84", "29.1214, 21.1348, -64.1141, 0.84", "28.4288, 20.9174, -66.152, 0.84", "27.6919, 20.9435, -68.2515, 0.84" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.92299, 18.245, -21.5747, 1.08", "7.44281, 17.8411, -23.3785, 1.08", "7.21467, 17.7868, -24.1426, 0.84", "6.64268, 17.8349, -26.022, 0.84", "6.16364, 17.875, -27.5961, 0.96", "5.65441, 17.9178, -29.2694, 1.2", "5.05817, 17.9678, -31.2285, 1.32", "4.23366, 18.1903, -33.6353, 1.2", "3.26672, 18.6299, -36.37, 1.2" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "7.92299, 18.245, -21.5747, 1.2", "8.08243, 19.3358, -22.6284, 1.2", "8.09356, 21.2631, -24.6307, 1.2", "8.05859, 21.8209, -25.2832, 1.2", "7.96519, 23.0961, -26.8144, 1.2", "7.87437, 24.0252, -27.9558, 1.56", "7.69983, 25.0809, -29.275, 1.2", "7.2597, 26.7101, -31.3817, 1.2", "6.64417, 28.2764, -33.4472, 0.96", "5.90351, 29.6403, -35.2763, 0.96", "5.67583, 29.9601, -35.7143, 0.96", "4.83286, 30.929, -37.0869, 1.44", "3.61205, 32.1276, -38.7143, 0.84", "3.14315, 32.5209, -39.1917, 0.84", "2.02055, 33.3233, -40.0523, 1.2", "1.01828, 33.9459, -40.7021, 0.84", "0.462587, 34.2806, -41.0368, 0.84", "-0.471037, 34.8133, -41.5778, 0.84", "-1.45734, 35.3381, -42.0966, 0.84", "-2.22412, 35.6992, -42.4783, 0.84", "-3.96468, 36.3619, -43.2896, 0.84", "-4.9783, 36.6419, -43.6884, 0.84", "-6.71954, 36.9634, -44.2978, 0.84", "-7.95616, 37.0491, -44.6875, 0.6", "-9.81917, 36.9791, -45.2053, 0.6", "-11.1959, 36.7925, -45.5457, 0.84", "-12.9411, 36.4029, -45.9047, 0.84", "-13.704, 36.1851, -46.0406, 0.84", "-15.5878, 35.562, -46.3033, 0.48", "-16.9827, 35.0623, -46.495, 0.48", "-18.2538, 34.6013, -46.6595, 0.72", "-18.8213, 34.4152, -46.7172, 0.72", "-19.5123, 34.2207, -46.7731, 0.72", "-21.2627, 33.8106, -46.8609, 0.72", "-21.8629, 33.702, -46.8702, 0.72", "-23.0452, 33.5365, -46.8891, 0.96", "-24.8496, 33.3517, -46.916, 0.96", "-26.024, 33.2627, -46.9291, 0.96", "-28.3285, 33.1481, -46.9512, 0.6", "-29.2381, 33.1251, -46.9621, 0.6", "-30.3828, 33.1431, -46.9745, 0.6", "-32.185, 33.2181, -46.9995, 0.96", "-33.7636, 33.2635, -47.0252, 0.96", "-34.566, 33.2741, -47.0485, 0.96", "-35.5474, 33.3054, -47.0769, 0.84", "-37.1878, 33.3932, -47.0956, 1.08", "-38.41, 33.4796, -47.0916, 1.08", "-39.6351, 33.596, -47.0856, 0.6", "-41.0138, 33.7215, -47.0722, 0.96", "-42.2878, 33.8364, -47.0469, 0.96", "-44.033, 34.0261, -46.9875, 0.48", "-44.9388, 34.1407, -46.947, 0.48", "-46.0844, 34.3676, -46.8715, 0.72" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.67749, 21.9692, -41.7805, 0.96", "-0.350103, 21.6594, -41.7805, 0.96", "-1.26029, 21.3335, -41.7441, 0.96", "-2.51703, 20.8458, -41.6606, 1.32", "-3.62839, 20.4452, -41.5452, 1.32", "-4.44105, 20.1846, -41.4404, 1.32", "-5.015, 20.0335, -41.3524, 1.32", "-6.85887, 19.6364, -41.0151, 1.08", "-7.65119, 19.4887, -40.8499, 1.08", "-9.69208, 19.2484, -40.3882, 1.08", "-10.7048, 19.1898, -40.1564, 1.08", "-11.7678, 19.2059, -39.9243, 1.08", "-12.7715, 19.2675, -39.7243, 1.08", "-13.3079, 19.3066, -39.6321, 1.08", "-14.4752, 19.3363, -39.4427, 1.08", "-15.8653, 19.2794, -39.2409, 1.08", "-16.8462, 19.193, -39.1313, 1.08", "-17.7614, 19.0659, -39.087, 0.72", "-18.7076, 18.9164, -39.1275, 0.72", "-19.858, 18.7309, -39.2633, 1.08", "-20.801, 18.5816, -39.4304, 1.08", "-21.8911, 18.4591, -39.6745, 1.08", "-23.3589, 18.448, -40.0484, 1.08", "-24.8611, 18.6123, -40.4629, 0.96", "-26.0242, 18.8918, -40.8576, 0.96", "-26.8388, 19.1592, -41.1739, 0.96", "-27.4566, 19.3941, -41.4037, 0.96", "-28.4299, 19.8011, -41.7105, 0.96", "-29.0486, 20.0681, -41.8644, 0.96", "-30.4156, 20.5755, -42.1464, 0.84", "-31.6597, 20.9559, -42.3999, 0.84", "-32.9342, 21.2785, -42.6344, 0.84", "-33.8691, 21.4783, -42.7824, 0.84", "-34.9487, 21.68, -42.9165, 0.84", "-35.8635, 21.8302, -42.9845, 0.84", "-37.0378, 22.0189, -42.9952, 0.84", "-38.0927, 22.1905, -43.0132, 0.84", "-38.7821, 22.3092, -43.0268, 0.84", "-39.8781, 22.5189, -43.049, 0.84", "-40.4493, 22.649, -43.0608, 0.84", "-41.2823, 22.8179, -43.074, 0.84", "-43.138, 23.0529, -43.1069, 1.2", "-44.476, 23.1594, -43.135, 0.84", "-44.8994, 23.1861, -43.1458, 0.84", "-45.9309, 23.245, -43.1737, 1.08", "-47.2789, 23.3362, -43.2059, 0.72", "-48.0372, 23.3953, -43.212, 0.72", "-49.3579, 23.5063, -43.2223, 1.2", "-50.4933, 23.5997, -43.2494, 0.84", "-51.689, 23.7054, -43.2896, 0.84", "-52.3403, 23.7528, -43.3183, 0.84", "-53.1053, 23.8111, -43.3605, 0.84", "-54.7516, 23.8855, -43.4569, 0.84", "-55.6637, 23.8741, -43.5135, 0.84", "-56.509, 23.8223, -43.5653, 0.84", "-57.6116, 23.7367, -43.6332, 0.84", "-58.3032, 23.6818, -43.668, 1.08", "-59.1741, 23.604, -43.7149, 1.08", "-59.7829, 23.5492, -43.7422, 1.08", "-60.5436, 23.4753, -43.8219, 0.96", "-61.444, 23.4106, -43.9515, 0.96", "-62.537, 23.374, -44.1295, 0.96", "-63.8855, 23.3309, -44.3387, 0.96", "-64.5745, 23.2963, -44.4398, 0.96", "-65.9709, 23.1872, -44.6139, 0.96", "-67.6396, 23.0468, -44.7478, 1.32", "-68.7416, 22.9606, -44.7945, 1.32", "-69.611, 22.906, -44.7998, 1.32", "-70.1504, 22.8875, -44.7815, 1.32", "-71.8318, 22.8568, -44.687, 1.56", "-73.9048, 22.8407, -44.494, 1.08", "-74.6314, 22.833, -44.4256, 1.08", "-75.5953, 22.8195, -44.3437, 0.96", "-76.4438, 22.8204, -44.2923, 0.96", "-77.2907, 22.8372, -44.2433, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "0.67749, 21.9692, -41.7805, 0.96", "0.348712, 22.5107, -42.4389, 0.96", "0.0838052, 23.2001, -43.4415, 0.96", "-0.00356376, 23.3825, -43.8146, 0.96", "-0.0956028, 23.5273, -44.1531, 0.96", "-0.287913, 23.7714, -44.7687, 0.96", "-0.936849, 24.4485, -46.5199, 0.96", "-1.59945, 25.0142, -48.2665, 0.96", "-2.36894, 25.6929, -50.462, 0.96", "-2.59209, 25.9129, -51.1239, 0.96", "-2.73407, 26.0723, -51.5743, 0.96", "-2.98305, 26.385, -52.3619, 0.96", "-4.11574, 27.8458, -55.5629, 1.08", "-4.35001, 28.1651, -56.1532, 1.08", "-4.64994, 28.7281, -56.9194, 1.08", "-5.28976, 30.1784, -58.5853, 0.96", "-5.46678, 30.6003, -58.9643, 0.96", "-5.6219, 30.9573, -59.1531, 0.84", "-5.82497, 31.3372, -59.1938, 0.84", "-6.56568, 32.5117, -59.0461, 1.08", "-6.91539, 32.963, -58.8547, 0.72", "-7.68784, 33.852, -58.1739, 1.08", "-8.55057, 34.8818, -57.1427, 0.84", "-8.96864, 35.3647, -56.4656, 1.2", "-9.97647, 36.3885, -54.5783, 0.72", "-10.4614, 36.8333, -53.5677, 0.72", "-11.1934, 37.4903, -51.926, 0.96", "-11.8177, 38.0341, -50.4388, 0.96", "-12.6749, 38.7448, -48.5833, 0.48", "-13.1614, 39.1347, -47.6528, 0.48", "-13.5117, 39.4215, -47.0739, 0.48", "-14.1756, 39.93, -46.0959, 0.48", "-14.922, 40.4478, -45.1949, 0.48", "-16.2493, 41.4075, -43.8325, 1.32", "-16.8369, 41.9184, -43.2584, 1.32", "-17.4563, 42.4958, -42.6267, 0.84", "-18.3631, 43.3058, -41.7044, 0.84", "-18.8153, 43.6954, -41.3046, 0.84", "-19.6282, 44.4463, -40.4611, 0.84", "-20.2263, 45.1272, -39.5758, 1.08", "-20.8538, 45.9029, -38.4132, 0.72", "-21.4723, 46.659, -37.2029, 1.68", "-22.1788, 47.5228, -35.6587, 1.68", "-23.6596, 49.2617, -32.225, 1.2", "-24.4665, 50.2368, -30.1084, 1.68", "-24.999, 51.0152, -28.3508, 1.2" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "30.3546, 16.8841, -24.1483, 0.96", "31.332, 17.5937, -24.1711, 0.96", "31.9308, 17.9911, -24.1267, 0.96", "33.1928, 18.6651, -23.9871, 0.96", "33.5795, 18.8533, -23.9399, 0.96", "34.7719, 19.4505, -23.853, 0.84", "36.3465, 20.2346, -23.7823, 0.84", "37.1289, 20.6529, -23.7628, 0.84", "38.3479, 21.2922, -23.7439, 0.96", "39.0364, 21.6192, -23.7454, 0.96", "40.4745, 22.268, -23.7903, 0.96", "40.9129, 22.4587, -23.8333, 0.96", "42.2732, 23.2131, -24.2675, 1.32" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "30.3546, 16.8841, -24.1483, 0.96", "30.5147, 18.1115, -24.5687, 0.96", "30.6998, 19.1644, -24.8856, 0.96", "31.107, 20.6755, -25.3255, 0.96", "31.3594, 21.4102, -25.5511, 0.96", "31.6423, 22.2485, -25.9254, 0.96", "31.8685, 22.9988, -26.3114, 0.96", "32.0419, 23.728, -26.7272, 0.96", "32.3226, 25.2059, -27.6989, 0.96", "32.5117, 26.3824, -28.4912, 1.2", "32.8973, 28.955, -30.265, 1.08", "33.0589, 30.5415, -31.3962, 0.96", "33.1238, 32.4296, -32.8142, 0.96", "33.0147, 34.1782, -34.2036, 0.96", "32.8932, 35.0045, -34.9167, 0.96", "32.7221, 35.8182, -35.6489, 0.84", "32.403, 37.0386, -36.8252, 0.84", "32.1114, 37.9777, -37.8448, 1.08", "31.7349, 38.9777, -39.0446, 1.08", "31.1805, 40.1815, -40.5296, 0.84", "31.0044, 40.4771, -40.9415, 0.84", "30.4129, 41.4328, -42.3849, 0.84", "30.1254, 41.9352, -43.1508, 0.84", "29.7882, 42.5782, -44.1012, 0.84", "29.6073, 42.9025, -44.5852, 0.84", "28.8674, 44.0245, -46.2823, 0.84", "28.2538, 44.9831, -47.7928, 0.84", "28.0727, 45.2868, -48.2775, 0.84", "27.8308, 45.7845, -49.1104, 0.72", "27.6228, 46.5429, -50.3481, 0.72", "27.5965, 47.2509, -51.4391, 0.84", "27.74, 47.7251, -52.1021, 0.84", "27.9063, 48.0033, -52.4353, 0.84", "28.6454, 48.667, -52.9787, 0.84", "29.4902, 49.1129, -53.0743, 0.84", "29.9993, 49.3049, -53.0332, 0.84", "30.8506, 49.5401, -52.8931, 0.84", "32.9326, 50.0402, -52.4373, 0.84", "33.8433, 50.2438, -52.2885, 0.84", "35.3296, 50.5261, -52.2567, 0.6", "36.3938, 50.6271, -52.1029, 0.6", "36.9902, 50.6618, -52.0282, 0.84", "37.4239, 50.6685, -51.9891, 0.84", "39.2574, 50.6203, -52.0633, 0.72", "41.0094, 50.5374, -52.1442, 0.72", "45.4139, 50.3233, -51.7519, 1.08" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "3.26672, 18.6299, -36.37, 0.84", "3.23748, 19.8518, -38.1904, 0.84", "3.05904, 21.1425, -40.0459, 0.84", "2.93928, 21.5662, -40.6524, 0.84", "2.77144, 21.9255, -41.229, 0.84", "2.39964, 22.5257, -42.4432, 1.08", "1.74597, 23.5032, -44.696, 1.08", "1.49765, 23.8094, -45.4663, 0.84", "1.02424, 24.3876, -47.0251, 0.84", "0.537941, 25.0123, -48.8458, 0.84", "0.0207208, 25.6608, -50.8438, 0.84", "-0.475667, 26.205, -52.7255, 0.84", "-0.659185, 26.4092, -53.4432, 0.84", "-0.944128, 26.7858, -54.7965, 0.84", "-1.2154, 27.2728, -56.3935, 0.84", "-1.32249, 27.5414, -57.0557, 0.84", "-1.99322, 28.7999, -59.5305, 0.96" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "3.26672, 18.6299, -36.37, 0.96", "2.37757, 19.6809, -38.7925, 0.96", "2.06106, 20.0009, -39.7021, 0.96", "1.75504, 20.2743, -40.5447, 0.96", "0.954412, 20.9097, -42.5399, 0.96", "0.694381, 21.1137, -43.147, 0.96", "-0.814298, 22.3999, -46.7763, 0.96", "-1.38084, 22.9137, -48.185, 0.96", "-1.54586, 23.0737, -48.6065, 0.96", "-1.80156, 23.4111, -49.3817, 0.96", "-2.00383, 23.7358, -49.9917, 0.96", "-2.52463, 24.6068, -51.5013, 0.96", "-2.71179, 24.9699, -52.0942, 0.96", "-2.92972, 25.3638, -52.8235, 0.96", "-4.22995, 27.2677, -56.678, 0.96", "-4.477, 27.5842, -57.3358, 0.96", "-5.21321, 28.4207, -59.1053, 0.96", "-5.88291, 29.1045, -60.5426, 0.96", "-6.36349, 29.5863, -61.5899, 0.96", "-7.16243, 30.2712, -63.2346, 0.84", "-7.95306, 30.6991, -64.297, 0.84", "-8.61393, 30.9689, -65.1583, 0.84", "-9.16165, 31.0056, -65.5963, 0.84", "-8.68377, 31.8948, -64.94, 0.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "42.2732, 23.2131, -24.2675, 0.72", "44.0945, 23.3209, -24.6016, 0.72", "45.5852, 23.409, -24.8751, 0.72", "47.0041, 23.493, -25.1354, 0.96", "48.3056, 23.5702, -25.3742, 0.96" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "42.2732, 23.2131, -24.2675, 0.96", "42.7144, 24.8819, -24.754, 0.96", "43.0227, 25.9995, -25.0475, 0.96", "43.4571, 27.6779, -25.508, 0.84", "43.6374, 28.437, -25.7151, 0.84", "43.8069, 29.2341, -25.9249, 0.84", "44.1239, 30.9314, -26.3721, 0.84", "44.278, 31.8444, -26.585, 0.84", "44.4885, 32.9812, -26.8595, 0.84", "44.614, 33.5489, -27.0159, 0.84", "44.831, 34.313, -27.2847, 0.84", "45.1808, 35.4776, -27.7552, 0.84", "45.3195, 35.9114, -27.9667, 0.84", "45.4695, 36.366, -28.2094, 0.84", "45.9176, 37.7337, -28.9441, 0.84", "46.3369, 39.0365, -29.6833, 1.2", "46.5266, 39.8064, -30.171, 0.84", "46.7013, 40.9062, -30.9839, 0.84", "46.7631, 41.5856, -31.5141, 0.84", "46.7793, 42.0479, -31.8837, 0.84", "46.7665, 43.4635, -32.9569, 0.84", "46.8306, 44.7206, -33.9167, 0.84", "47.1146, 46.3674, -35.2291, 0.84", "47.2252, 46.7728, -35.5629, 0.84", "47.7417, 48.059, -36.6486, 0.84", "48.2552, 48.9943, -37.4086, 0.84", "49.2436, 50.2174, -38.3181, 0.84", "49.9109, 50.7854, -38.6001, 0.84", "50.1892, 50.9734, -38.6481, 0.84", "51.3271, 51.6001, -38.6583, 0.84", "52.1796, 51.9462, -38.5171, 0.84", "53.414, 52.3922, -38.2539, 0.84", "55.6272, 53.1904, -37.5273, 0.84", "55.9551, 53.3027, -37.3978, 0.84", "57.3603, 53.7458, -36.8047, 1.08", "58.7774, 54.1412, -36.227, 1.08", "60.1238, 54.4505, -35.629, 0.72", "61.6017, 54.7615, -34.9542, 0.72", "63.2948, 55.055, -34.2827, 0.72", "64.1365, 55.1912, -33.9536, 0.72", "65.4232, 55.4136, -33.4743, 0.72", "67.5291, 55.8222, -32.6652, 0.72" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "48.3056, 23.5702, -25.3742, 1.08", "49.5313, 22.7731, -24.6097, 1.08", "50.09, 22.4555, -24.2242, 1.08", "51.3795, 21.7894, -23.3778, 0.84", "52.1294, 21.4058, -22.9174, 0.84", "53.6318, 20.617, -21.9403, 0.84", "54.0983, 20.372, -21.6369, 0.84", "56.0259, 19.5265, -20.3102, 0.84", "56.6931, 19.264, -19.8589, 0.84", "57.4492, 18.9836, -19.3776, 1.08", "58.9003, 18.2971, -18.3908, 0.84" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "48.3056, 23.5702, -25.3742, 0.72", "49.335, 24.3216, -25.4791, 0.72", "50.0154, 24.7474, -25.5409, 0.72", "51.3209, 25.4795, -25.6459, 0.72", "52.1702, 25.9353, -25.7294, 0.72", "53.3576, 26.5921, -25.8541, 0.72", "54.3264, 27.1555, -26.0541, 0.72", "55.5081, 27.8451, -26.3719, 0.72", "56.2982, 28.3661, -26.6608, 0.72", "57.8304, 29.5279, -27.3887, 0.96", "58.3327, 29.9944, -27.6916, 0.96", "59.8445, 31.8204, -28.866, 0.84", "60.211, 32.5113, -29.3707, 0.84", "60.4421, 33.3349, -30.0163, 0.72", "60.5375, 34.2032, -30.7112, 0.72", "60.5276, 34.9308, -31.2862, 0.72", "60.5172, 35.2731, -31.5368, 0.72", "60.435, 36.9785, -32.9999, 0.72", "60.4213, 37.332, -33.3916, 0.72", "60.4016, 37.6538, -33.7856, 0.72", "60.3261, 38.5676, -34.9177, 0.96", "60.3062, 38.8675, -35.3108, 0.96", "60.1659, 41.0088, -38.1965, 0.72", "60.0573, 42.202, -39.8449, 0.72", "60.0153, 42.4767, -40.2363, 0.72", "59.8218, 43.5634, -41.7865, 0.72", "59.6379, 44.856, -43.6557, 0.72", "59.633, 45.0698, -43.9693, 0.72", "59.8958, 46.0245, -45.4131, 0.72", "60.0152, 46.1972, -45.7056, 0.72", "60.4741, 46.5831, -46.4176, 0.72", "61.591, 47.1705, -47.6652, 0.72", "63.1058, 47.7629, -48.9769, 0.96", "65.1223, 48.4166, -50.5091, 0.96", "66.2684, 48.7086, -51.2605, 0.84", "67.3935, 48.9445, -51.9549, 0.84", "68.2198, 49.0788, -52.4096, 0.84", "69.2605, 49.2275, -52.8707, 0.84", "69.6067, 49.2677, -52.9605, 0.84", "70.0951, 49.3165, -53.0234, 0.84", "70.3619, 49.3428, -53.0328, 0.84", "71.3232, 49.4506, -53.0154, 0.84", "72.2849, 49.5863, -52.9299, 0.72", "73.6367, 49.7755, -52.7698, 0.72", "74.2347, 49.8727, -52.6839, 0.72", "75.7123, 50.1572, -52.4192, 1.08" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "58.9003, 18.2971, -18.3908, 0.96", "60.1932, 17.5398, -18.2372, 0.96", "61.3454, 16.8407, -18.136, 0.96", "61.5821, 16.7154, -18.1195, 0.96", "62.1188, 16.4724, -18.089, 0.96", "63.0409, 16.1161, -18.0434, 0.96", "64.1056, 15.7601, -17.9971, 0.72", "65.061, 15.5022, -17.9971, 0.72", "65.9042, 15.3342, -17.9971, 1.08", "66.6282, 15.2411, -17.9971, 1.08", "67.0601, 15.2171, -17.9872, 1.08", "67.538, 15.1955, -17.9485, 0.84", "68.2992, 15.1379, -17.8602, 0.84", "68.7783, 15.0346, -17.7924, 0.84", "69.0004, 14.9516, -17.7557, 0.84", "70.4793, 14.114, -17.5029, 0.84", "71.8047, 13.031, -17.28, 0.84", "72.3533, 12.3906, -17.1857, 0.84", "72.9487, 11.2039, -17.0814, 1.32", "73.2858, 10.1575, -17.1171, 1.08", "73.5133, 8.99655, -17.4856, 1.08", "73.5435, 8.25248, -17.7913, 0.84", "73.5109, 7.72852, -18.0693, 0.84", "73.4476, 6.88665, -18.6511, 1.2", "73.4927, 5.59185, -20.0147, 1.2", "73.9497, 4.07112, -22.323, 1.2" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "58.9003, 18.2971, -18.3908, 0.72", "59.3532, 17.1464, -18.175, 0.72", "59.4356, 16.8932, -18.1421, 0.72", "59.648, 16.4111, -18.1103, 0.72", "59.8189, 16.0905, -18.1025, 0.72", "60.1881, 15.365, -18.2722, 0.72", "60.5292, 14.6946, -18.4291, 0.72", "60.8414, 14.0802, -18.6376, 1.08", "61.4121, 12.9662, -19.063, 0.72", "61.7882, 12.271, -19.3773, 0.72", "63.0615, 10.1084, -20.5532, 0.72" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_40", "dend_37", "dend_28", "dend_5", "dend_0", "dend_46", "dend_41", "dend_39", "dend_38", "dend_32", "dend_29", "dend_11", "dend_6", "dend_4", "dend_1", "dend_50", "dend_47", "dend_43", "dend_42", "dend_36", "dend_33", "dend_31", "dend_30", "dend_17", "dend_12", "dend_10", "dend_7", "dend_3", "dend_2", "dend_52", "dend_51", "dend_49", "dend_48", "dend_45", "dend_44", "dend_35", "dend_34", "dend_19", "dend_18", "dend_14", "dend_13", "dend_9", "dend_8", "dend_21", "dend_20", "dend_16", "dend_15", "dend_23", "dend_22", "dend_25", "dend_24", "dend_27", "dend_26" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_40", "dend_37", "dend_28", "dend_5", "dend_0", "dend_46", "dend_41", "dend_39", "dend_38", "dend_32", "dend_29", "dend_11", "dend_6", "dend_4", "dend_1", "dend_50", "dend_47", "dend_43", "dend_42", "dend_36", "dend_33", "dend_31", "dend_30", "dend_17", "dend_12", "dend_10", "dend_7", "dend_3", "dend_2", "dend_52", "dend_51", "dend_49", "dend_48", "dend_45", "dend_44", "dend_35", "dend_34", "dend_19", "dend_18", "dend_14", "dend_13", "dend_9", "dend_8", "dend_21", "dend_20", "dend_16", "dend_15", "dend_23", "dend_22", "dend_25", "dend_24", "dend_27", "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_HAC_dfd993e67b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_40
create dend_46
public dend_46
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_32
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_28, dend_5, dend_0, dend_46, dend_41, dend_39, dend_38, dend_32, dend_29, dend_11, dend_6, dend_4, dend_1, dend_50, dend_47, dend_43, dend_42, dend_36, dend_33, dend_31, dend_30, dend_17, dend_12, dend_10, dend_7, dend_3, dend_2, dend_52, dend_51, dend_49, dend_48, dend_45, dend_44, dend_35, dend_34, dend_19, dend_18, dend_14, dend_13, dend_9, dend_8, dend_21, dend_20, dend_16, dend_15, dend_23, dend_22, dend_25, dend_24, dend_27, dend_26]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_28, dend_5, dend_0, dend_46, dend_41, dend_39, dend_38, dend_32, dend_29, dend_11, dend_6, dend_4, dend_1, dend_50, dend_47, dend_43, dend_42, dend_36, dend_33, dend_31, dend_30, dend_17, dend_12, dend_10, dend_7, dend_3, dend_2, dend_52, dend_51, dend_49, dend_48, dend_45, dend_44, dend_35, dend_34, dend_19, dend_18, dend_14, dend_13, dend_9, dend_8, dend_21, dend_20, dend_16, dend_15, dend_23, dend_22, dend_25, dend_24, dend_27, dend_26]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_40(0), soma_0(0.49999997973761656)
    connect dend_37(0), soma_0(0.49999997973761656)
    connect dend_28(0), soma_0(0.49999997973761656)
    connect dend_5(0), soma_0(0.49999997973761656)
    connect dend_0(0), soma_0(0.49999997973761656)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.65547, 2.18325, -0.0103353, 3.67653 ) }
    soma_0 { pt3dadd( -5.87661, 1.90632, -0.00953393, 6.77862 ) }
    soma_0 { pt3dadd( -5.09776, 1.62939, -0.00873261, 7.84834 ) }
    soma_0 { pt3dadd( -4.3189, 1.35247, -0.00793129, 8.85655 ) }
    soma_0 { pt3dadd( -3.54004, 1.07554, -0.00712998, 9.98977 ) }
    soma_0 { pt3dadd( -2.76118, 0.798609, -0.00632866, 10.5404 ) }
    soma_0 { pt3dadd( -1.98232, 0.52168, -0.00552734, 11.0332 ) }
    soma_0 { pt3dadd( -1.20347, 0.244751, -0.00472602, 10.9541 ) }
    soma_0 { pt3dadd( -0.424607, -0.0321771, -0.0039247, 10.7127 ) }
    soma_0 { pt3dadd( 0.354251, -0.309106, -0.00312338, 10.5028 ) }
    soma_0 { pt3dadd( 1.13311, -0.586034, -0.00232206, 10.5438 ) }
    soma_0 { pt3dadd( 1.91197, -0.862963, -0.00152074, 10.4886 ) }
    soma_0 { pt3dadd( 2.69083, -1.13989, -7.19425E-4, 10.395 ) }
    soma_0 { pt3dadd( 3.46968, -1.41682, 8.18942E-5, 9.92038 ) }
    soma_0 { pt3dadd( 4.24854, -1.69375, 8.83213E-4, 9.42394 ) }
    soma_0 { pt3dadd( 5.0274, -1.97068, 0.00168453, 8.78916 ) }
    soma_0 { pt3dadd( 5.80626, -2.24761, 0.00248585, 8.12721 ) }
    soma_0 { pt3dadd( 6.58512, -2.52453, 0.00328717, 7.44606 ) }
    soma_0 { pt3dadd( 7.36397, -2.80146, 0.00408849, 6.65061 ) }
    soma_0 { pt3dadd( 8.14283, -3.07839, 0.00488981, 5.03163 ) }
    soma_0 { pt3dadd( 8.92169, -3.35532, 0.00569113, 2.85127 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 21/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.10465, 0.82944, -0.758855, 1.8 ) }
    dend_40 { pt3dadd( -5.9933, 0.86777, -1.21419, 1.8 ) }
    dend_40 { pt3dadd( -9.45878, 1.01725, -2.98987, 1.44 ) }
    dend_40 { pt3dadd( -11.8183, 1.11902, -4.19885, 1.32 ) }
    dend_40 { pt3dadd( -14.2395, 1.22345, -5.43945, 1.56 ) }
    dend_40 { pt3dadd( -16.1723, 1.30681, -6.42977, 1.56 ) }
    dend_40 { pt3dadd( -17.7416, 1.3745, -7.23388, 1.2 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 28/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.63465, -3.06056, -0.478855, 1.08 ) }
    dend_37 { pt3dadd( -4.13985, -3.44638, -1.90551, 1.08 ) }
    dend_37 { pt3dadd( -5.63054, -3.94944, -3.70994, 1.08 ) }
    dend_37 { pt3dadd( -6.39137, -4.27154, -4.75907, 1.08 ) }
    dend_37 { pt3dadd( -7.63184, -4.90629, -6.61424, 0.96 ) }
    dend_37 { pt3dadd( -8.02288, -5.16077, -7.32552, 0.96 ) }
    dend_37 { pt3dadd( -8.35612, -5.40509, -7.95866, 0.96 ) }
    dend_37 { pt3dadd( -9.47118, -6.38073, -10.2531, 0.96 ) }
    dend_37 { pt3dadd( -9.64651, -6.57134, -10.6572, 0.96 ) }
    dend_37 { pt3dadd( -9.80437, -6.77175, -11.052, 0.96 ) }
    dend_37 { pt3dadd( -11.0899, -8.53107, -14.0387, 0.96 ) }
    dend_37 { pt3dadd( -11.4965, -8.99089, -14.8636, 0.96 ) }
    dend_37 { pt3dadd( -12.2032, -9.5829, -15.9881, 0.96 ) }
    dend_37 { pt3dadd( -13.6792, -10.4667, -17.9293, 0.96 ) }
    dend_37 { pt3dadd( -13.9824, -10.6094, -18.2933, 0.96 ) }
    dend_37 { pt3dadd( -14.7209, -10.8993, -19.0912, 1.2 ) }
    dend_37 { pt3dadd( -17.7656, -12.0139, -22.0816, 1.08 ) }
    dend_37 { pt3dadd( -18.8572, -12.4321, -23.1422, 0.84 ) }
    dend_37 { pt3dadd( -20.9342, -13.2955, -25.0459, 0.84 ) }
    dend_37 { pt3dadd( -21.8315, -13.6885, -25.739, 0.84 ) }
    dend_37 { pt3dadd( -22.6318, -14.0434, -26.2906, 1.08 ) }
    dend_37 { pt3dadd( -24.0744, -14.6944, -27.1515, 1.08 ) }
    dend_37 { pt3dadd( -25.0106, -15.1918, -27.5707, 1.08 ) }
    dend_37 { pt3dadd( -25.9748, -15.7673, -27.9707, 0.96 ) }
    dend_37 { pt3dadd( -27.1047, -16.5021, -28.357, 0.96 ) }
    dend_37 { pt3dadd( -28.8785, -17.7083, -28.9805, 0.96 ) }
    dend_37 { pt3dadd( -30.4753, -18.7649, -29.4981, 0.48 ) }
    dend_37 { pt3dadd( -31.2596, -19.271, -29.7175, 0.48 ) }
    dend_37 { pt3dadd( -31.8827, -19.688, -29.8857, 0.84 ) }
    dend_37 { pt3dadd( -32.4491, -20.0957, -30.029, 0.84 ) }
    dend_37 { pt3dadd( -34.1549, -21.4548, -30.3739, 0.48 ) }
    dend_37 { pt3dadd( -35.3832, -22.5602, -30.5521, 0.84 ) }
    dend_37 { pt3dadd( -36.0969, -23.226, -30.6195, 1.08 ) }
    dend_37 { pt3dadd( -36.86, -23.8963, -30.6904, 1.08 ) }
    dend_37 { pt3dadd( -37.2405, -24.2109, -30.7228, 1.08 ) }
    dend_37 { pt3dadd( -38.5312, -25.1791, -30.8055, 1.44 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 64/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 8.51535, -1.39056, 0.491145, 2.16 ) }
    dend_28 { pt3dadd( 9.36685, -1.8315, 0.44514, 1.92 ) }
    dend_28 { pt3dadd( 10.4536, -2.37896, 0.31537, 1.44 ) }
    dend_28 { pt3dadd( 11.5585, -2.88125, 0.159312, 1.32 ) }
    dend_28 { pt3dadd( 12.9208, -3.41165, -0.0415232, 1.32 ) }
    dend_28 { pt3dadd( 14.3656, -3.87526, -0.197113, 1.2 ) }
    dend_28 { pt3dadd( 15.8831, -4.24956, -0.289774, 1.2 ) }
    dend_28 { pt3dadd( 17.5672, -4.54296, -0.255585, 1.2 ) }
    dend_28 { pt3dadd( 18.3212, -4.64271, -0.146346, 1.2 ) }
    dend_28 { pt3dadd( 19.1903, -4.72104, 0.099615, 1.2 ) }
    dend_28 { pt3dadd( 20.5676, -4.76401, 0.586931, 1.2 ) }
    dend_28 { pt3dadd( 21.7524, -4.74114, 1.06952, 1.44 ) }
    dend_28 { pt3dadd( 23.6666, -4.6909, 2.03256, 1.44 ) }
    dend_28 { pt3dadd( 25.3246, -4.73419, 3.03286, 1.2 ) }
    dend_28 { pt3dadd( 26.7706, -4.90637, 3.92472, 1.56 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 79/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.62535, 2.05944, 0.0911455, 2.16 ) }
    dend_5 { pt3dadd( 5.84261, 2.24177, -0.842909, 2.16 ) }
    dend_5 { pt3dadd( 7.10986, 3.30526, -6.29107, 2.16 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 82/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.50465, 5.38944, -0.0188545, 1.56 ) }
    dend_0 { pt3dadd( -4.39747, 6.32849, -0.245916, 1.32 ) }
    dend_0 { pt3dadd( -4.99929, 6.9975, -0.405433, 1.2 ) }
    dend_0 { pt3dadd( -5.96799, 8.15836, -0.643128, 1.2 ) }
    dend_0 { pt3dadd( -7.21916, 9.65774, -0.950134, 1.2 ) }
    dend_0 { pt3dadd( -8.02742, 10.6264, -1.14846, 1.2 ) }
    dend_0 { pt3dadd( -8.76602, 11.5115, -1.3297, 1.32 ) }
    dend_0 { pt3dadd( -9.44152, 12.2612, -1.50429, 1.32 ) }
    dend_0 { pt3dadd( -10.1891, 13.1098, -1.7139, 1.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 91/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 8.92169, -3.35532, 0.00569113, 1.105 ) }
    axon_0 { pt3dadd( 23.0549, -8.38048, 0.00569113, 1.105 ) }
    axon_0 { pt3dadd( 37.1881, -13.4056, 0.00569113, 1.105 ) }
    // Section: dend_46, id: dend_46, parent: dend_40 (entry count 94/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.7416, 1.3745, -7.23388, 0.84 ) }
    dend_46 { pt3dadd( -19.5837, 2.4279, -8.37431, 0.84 ) }
    dend_46 { pt3dadd( -20.8438, 3.11121, -9.0514, 1.08 ) }
    dend_46 { pt3dadd( -21.3426, 3.3583, -9.30541, 1.08 ) }
    dend_46 { pt3dadd( -22.3851, 3.87473, -9.83629, 0.84 ) }
    dend_46 { pt3dadd( -23.2267, 4.29159, -10.2648, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_46 { pt3dadd( -24.6679, 5.00549, -10.9987, 0.84 ) }
    dend_46 { pt3dadd( -25.4661, 5.43546, -11.3142, 0.84 ) }
    dend_46 { pt3dadd( -26.5807, 6.0259, -11.7133, 1.44 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 3/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -17.7416, 1.3745, -7.23388, 0.96 ) }
    dend_41 { pt3dadd( -19.2247, 1.11825, -6.61279, 0.96 ) }
    dend_41 { pt3dadd( -19.7793, 0.99734, -6.38437, 0.96 ) }
    dend_41 { pt3dadd( -20.4154, 0.780191, -6.01185, 0.96 ) }
    dend_41 { pt3dadd( -21.2357, 0.393921, -5.43756, 0.96 ) }
    dend_41 { pt3dadd( -22.6795, -0.317397, -4.38724, 0.96 ) }
    dend_41 { pt3dadd( -22.8659, -0.397446, -4.25891, 0.72 ) }
    dend_41 { pt3dadd( -23.5258, -0.630931, -3.77567, 1.2 ) }
    dend_41 { pt3dadd( -25.364, -1.20204, -2.36057, 0.84 ) }
    dend_41 { pt3dadd( -26.0537, -1.41476, -1.81472, 1.08 ) }
    dend_41 { pt3dadd( -26.7691, -1.65906, -1.29779, 1.08 ) }
    dend_41 { pt3dadd( -27.987, -2.09447, -0.522983, 0.6 ) }
    dend_41 { pt3dadd( -29.343, -2.50646, 0.254333, 0.84 ) }
    dend_41 { pt3dadd( -29.8725, -2.63006, 0.508103, 0.84 ) }
    dend_41 { pt3dadd( -30.7064, -2.78275, 0.796074, 0.72 ) }
    dend_41 { pt3dadd( -32.386, -3.07172, 1.316, 0.72 ) }
    dend_41 { pt3dadd( -33.8131, -3.39618, 1.91123, 0.84 ) }
    dend_41 { pt3dadd( -34.1993, -3.48934, 2.09287, 0.84 ) }
    dend_41 { pt3dadd( -34.8544, -3.62968, 2.38868, 0.84 ) }
    dend_41 { pt3dadd( -35.2998, -3.69118, 2.59517, 0.84 ) }
    dend_41 { pt3dadd( -35.9905, -3.71538, 2.90884, 0.84 ) }
    dend_41 { pt3dadd( -38.4534, -3.58938, 4.01509, 0.72 ) }
    dend_41 { pt3dadd( -39.2418, -3.55316, 4.33248, 0.72 ) }
    dend_41 { pt3dadd( -40.2395, -3.51182, 4.71386, 0.72 ) }
    dend_41 { pt3dadd( -41.1989, -3.46861, 5.06266, 0.72 ) }
    dend_41 { pt3dadd( -42.0112, -3.45035, 5.36031, 0.72 ) }
    dend_41 { pt3dadd( -43.1506, -3.50535, 5.75387, 0.72 ) }
    dend_41 { pt3dadd( -44.4913, -3.72159, 6.13622, 0.72 ) }
    dend_41 { pt3dadd( -45.2158, -3.97624, 6.48188, 0.72 ) }
    dend_41 { pt3dadd( -45.5023, -4.11827, 6.65788, 0.72 ) }
    dend_41 { pt3dadd( -46.7005, -4.89304, 7.5555, 0.96 ) }
    dend_41 { pt3dadd( -47.5252, -5.5261, 8.25457, 0.96 ) }
    dend_41 { pt3dadd( -48.4242, -6.31488, 9.08825, 0.72 ) }
    dend_41 { pt3dadd( -50.3267, -8.14915, 11.0295, 0.72 ) }
    dend_41 { pt3dadd( -50.6648, -8.49669, 11.4061, 0.72 ) }
    dend_41 { pt3dadd( -51.2523, -9.1086, 12.0926, 0.72 ) }
    dend_41 { pt3dadd( -51.3393, -9.19494, 12.1997, 0.72 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 40/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -38.5312, -25.1791, -30.8055, 0.84 ) }
    dend_39 { pt3dadd( -39.608, -25.059, -30.276, 0.84 ) }
    dend_39 { pt3dadd( -40.6984, -24.9173, -29.734, 0.84 ) }
    dend_39 { pt3dadd( -41.1442, -24.8512, -29.5299, 0.84 ) }
    dend_39 { pt3dadd( -42.5519, -24.5397, -28.8124, 0.84 ) }
    dend_39 { pt3dadd( -43.9627, -24.1484, -28.1318, 0.72 ) }
    dend_39 { pt3dadd( -45.0393, -23.8104, -27.6373, 1.08 ) }
    dend_39 { pt3dadd( -46.7669, -23.212, -26.9061, 0.72 ) }
    dend_39 { pt3dadd( -48.0111, -22.799, -26.4819, 0.72 ) }
    dend_39 { pt3dadd( -49.8092, -22.2662, -26.0178, 0.96 ) }
    dend_39 { pt3dadd( -51.2558, -21.9149, -25.7915, 0.72 ) }
    dend_39 { pt3dadd( -51.6282, -21.8664, -25.7656, 0.72 ) }
    dend_39 { pt3dadd( -53.2569, -21.8457, -25.7267, 0.72 ) }
    dend_39 { pt3dadd( -54.9176, -22.0247, -25.7876, 0.72 ) }
    dend_39 { pt3dadd( -56.619, -22.4527, -25.8785, 0.72 ) }
    dend_39 { pt3dadd( -57.649, -22.8491, -25.9574, 0.72 ) }
    dend_39 { pt3dadd( -58.9444, -23.5899, -26.0434, 0.96 ) }
    dend_39 { pt3dadd( -59.694, -24.275, -26.1852, 0.96 ) }
    dend_39 { pt3dadd( -59.6531, -25.373, -26.7393, 0.6 ) }
    dend_39 { pt3dadd( -59.497, -25.6525, -27.0346, 0.6 ) }
    dend_39 { pt3dadd( -59.3464, -25.8413, -27.3134, 0.6 ) }
    dend_39 { pt3dadd( -58.671, -26.6062, -28.7644, 0.6 ) }
    dend_39 { pt3dadd( -58.4594, -26.8375, -29.3504, 0.6 ) }
    dend_39 { pt3dadd( -57.8722, -27.4982, -31.1964, 1.08 ) }
    dend_39 { pt3dadd( -57.0597, -28.39, -33.9746, 0.96 ) }
    dend_39 { pt3dadd( -56.4912, -28.9478, -35.8889, 0.72 ) }
    dend_39 { pt3dadd( -56.0895, -29.3016, -37.2589, 0.72 ) }
    dend_39 { pt3dadd( -55.6891, -29.5948, -38.6926, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 68/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -38.5312, -25.1791, -30.8055, 1.08 ) }
    dend_38 { pt3dadd( -39.2294, -25.7866, -32.1515, 1.08 ) }
    dend_38 { pt3dadd( -39.6654, -26.1591, -32.9306, 1.08 ) }
    dend_38 { pt3dadd( -40.5951, -26.9061, -34.3918, 0.84 ) }
    dend_38 { pt3dadd( -40.9068, -27.1619, -34.8442, 0.84 ) }
    dend_38 { pt3dadd( -41.5774, -27.7141, -35.6957, 0.84 ) }
    dend_38 { pt3dadd( -42.3879, -28.3774, -36.5864, 1.08 ) }
    dend_38 { pt3dadd( -42.8168, -28.7034, -36.9431, 1.08 ) }
    dend_38 { pt3dadd( -43.3615, -29.0879, -37.3058, 1.08 ) }
    dend_38 { pt3dadd( -44.3317, -29.684, -37.8027, 0.96 ) }
    dend_38 { pt3dadd( -45.3, -30.1785, -38.2961, 0.96 ) }
    dend_38 { pt3dadd( -46.1651, -30.5679, -38.703, 0.96 ) }
    dend_38 { pt3dadd( -47.4281, -31.0441, -39.26, 1.2 ) }
    dend_38 { pt3dadd( -48.0567, -31.2433, -39.5731, 1.2 ) }
    dend_38 { pt3dadd( -49.385, -31.5551, -40.2596, 0.96 ) }
    dend_38 { pt3dadd( -51.034, -31.8175, -41.1089, 0.96 ) }
    dend_38 { pt3dadd( -51.5567, -31.885, -41.3956, 0.96 ) }
    dend_38 { pt3dadd( -52.8006, -32.062, -42.0991, 0.96 ) }
    dend_38 { pt3dadd( -53.8892, -32.2618, -42.6738, 0.96 ) }
    dend_38 { pt3dadd( -54.9776, -32.5065, -43.1768, 0.96 ) }
    dend_38 { pt3dadd( -55.4758, -32.6415, -43.3636, 1.32 ) }
    dend_38 { pt3dadd( -56.9502, -33.0956, -43.8138, 1.32 ) }
    dend_38 { pt3dadd( -58.3838, -33.5403, -44.2054, 0.96 ) }
    dend_38 { pt3dadd( -59.7962, -33.9869, -44.5367, 0.96 ) }
    dend_38 { pt3dadd( -60.9523, -34.3376, -44.7317, 0.96 ) }
    dend_38 { pt3dadd( -61.674, -34.5603, -44.8339, 0.72 ) }
    dend_38 { pt3dadd( -62.5567, -34.8152, -44.923, 0.72 ) }
    dend_38 { pt3dadd( -63.4871, -35.0781, -44.9586, 0.72 ) }
    dend_38 { pt3dadd( -63.9655, -35.2304, -44.9641, 1.08 ) }
    dend_38 { pt3dadd( -65.1022, -35.6777, -44.9911, 1.08 ) }
    dend_38 { pt3dadd( -66.0144, -36.1608, -44.9998, 1.08 ) }
    dend_38 { pt3dadd( -66.2911, -36.3572, -44.99, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_38 { pt3dadd( -66.8855, -36.9733, -45.0302, 1.08 ) }
    dend_38 { pt3dadd( -67.5728, -37.9692, -45.1497, 1.08 ) }
    dend_38 { pt3dadd( -67.872, -38.4869, -45.199, 1.08 ) }
    dend_38 { pt3dadd( -68.4912, -39.6157, -45.2851, 1.08 ) }
    dend_38 { pt3dadd( -69.0735, -40.6484, -45.3489, 1.08 ) }
    dend_38 { pt3dadd( -70.3493, -42.7677, -45.4432, 0.84 ) }
    dend_38 { pt3dadd( -70.9579, -43.7928, -45.5396, 0.84 ) }
    dend_38 { pt3dadd( -71.6282, -44.9696, -45.8243, 1.44 ) }
    dend_38 { pt3dadd( -72.4925, -46.3964, -46.4074, 0.84 ) }
    dend_38 { pt3dadd( -72.8002, -46.9035, -46.7374, 0.84 ) }
    dend_38 { pt3dadd( -73.5033, -48.0756, -47.7312, 1.44 ) }
    dend_38 { pt3dadd( -74.2439, -49.2355, -48.9303, 1.08 ) }
    dend_38 { pt3dadd( -75.2786, -50.9087, -50.9116, 0.84 ) }
    dend_38 { pt3dadd( -75.7985, -51.8424, -52.1521, 1.32 ) }
    dend_38 { pt3dadd( -76.3831, -53.0722, -53.9598, 0.96 ) }
    dend_38 { pt3dadd( -76.6021, -53.5653, -54.751, 0.96 ) }
    dend_38 { pt3dadd( -76.9002, -54.292, -56.0657, 1.2 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 17/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 26.7706, -4.90637, 3.92472, 0.96 ) }
    dend_32 { pt3dadd( 28.353, -4.18295, 4.18907, 0.96 ) }
    dend_32 { pt3dadd( 28.8844, -3.91075, 4.24889, 0.96 ) }
    dend_32 { pt3dadd( 30.4337, -3.04819, 4.50517, 1.2 ) }
    dend_32 { pt3dadd( 31.2387, -2.60006, 4.63832, 1.2 ) }
    dend_32 { pt3dadd( 32.7667, -1.74935, 4.89108, 0.96 ) }
    dend_32 { pt3dadd( 33.6033, -1.28359, 5.02947, 0.96 ) }
    dend_32 { pt3dadd( 34.6954, -0.599858, 5.24682, 1.32 ) }
    dend_32 { pt3dadd( 36.3529, 0.488314, 5.54343, 1.32 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 26/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 26.7706, -4.90637, 3.92472, 1.08 ) }
    dend_29 { pt3dadd( 28.4196, -5.98229, 3.64292, 1.08 ) }
    dend_29 { pt3dadd( 28.9412, -6.31761, 3.46114, 1.08 ) }
    dend_29 { pt3dadd( 29.7084, -6.80718, 3.17405, 1.08 ) }
    dend_29 { pt3dadd( 30.6733, -7.44837, 2.7915, 1.08 ) }
    dend_29 { pt3dadd( 30.8688, -7.58018, 2.71661, 1.08 ) }
    dend_29 { pt3dadd( 32.1296, -8.49981, 2.2261, 0.84 ) }
    dend_29 { pt3dadd( 33.6454, -9.7558, 1.71499, 1.08 ) }
    dend_29 { pt3dadd( 34.038, -10.1844, 1.5661, 1.08 ) }
    dend_29 { pt3dadd( 34.5294, -11.0261, 1.39417, 0.84 ) }
    dend_29 { pt3dadd( 34.9444, -12.0763, 1.29842, 0.84 ) }
    dend_29 { pt3dadd( 35.4828, -13.8088, 1.28914, 0.84 ) }
    dend_29 { pt3dadd( 35.9902, -15.6395, 1.41343, 0.84 ) }
    dend_29 { pt3dadd( 36.4492, -17.361, 1.70899, 1.08 ) }
    dend_29 { pt3dadd( 37.2246, -20.1686, 2.27552, 0.96 ) }
    dend_29 { pt3dadd( 37.6262, -21.5672, 2.60732, 0.96 ) }
    dend_29 { pt3dadd( 37.8287, -22.2451, 2.78701, 0.96 ) }
    dend_29 { pt3dadd( 38.4053, -23.847, 3.22041, 0.96 ) }
    dend_29 { pt3dadd( 39.1038, -25.2764, 3.47689, 0.84 ) }
    dend_29 { pt3dadd( 39.8023, -26.5252, 3.50121, 0.96 ) }
    dend_29 { pt3dadd( 39.9606, -26.8193, 3.44074, 0.96 ) }
    dend_29 { pt3dadd( 40.2512, -27.4401, 3.2563, 0.96 ) }
    dend_29 { pt3dadd( 40.8271, -28.7008, 2.7829, 0.96 ) }
    dend_29 { pt3dadd( 41.4787, -30.0043, 2.13089, 1.08 ) }
    dend_29 { pt3dadd( 42.3125, -31.3668, 1.32307, 1.32 ) }
    dend_29 { pt3dadd( 43.2844, -32.8228, 0.431537, 0.96 ) }
    dend_29 { pt3dadd( 44.1441, -33.9605, -0.311102, 0.84 ) }
    dend_29 { pt3dadd( 45.5908, -35.6265, -1.46379, 1.32 ) }
    dend_29 { pt3dadd( 47.0848, -37.1437, -2.53216, 0.96 ) }
    dend_29 { pt3dadd( 48.0105, -37.9319, -3.09961, 0.96 ) }
    dend_29 { pt3dadd( 48.6362, -38.3643, -3.45294, 0.96 ) }
    dend_29 { pt3dadd( 49.9776, -39.1115, -4.11862, 0.96 ) }
    dend_29 { pt3dadd( 50.3755, -39.3097, -4.29977, 0.96 ) }
    dend_29 { pt3dadd( 51.1134, -39.6588, -4.56067, 0.96 ) }
    dend_29 { pt3dadd( 52.2494, -40.2831, -4.94773, 0.96 ) }
    dend_29 { pt3dadd( 52.7029, -40.5977, -5.13886, 0.96 ) }
    dend_29 { pt3dadd( 53.7124, -41.4488, -5.5878, 0.96 ) }
    dend_29 { pt3dadd( 54.1577, -41.9425, -5.80609, 0.96 ) }
    dend_29 { pt3dadd( 54.507, -42.394, -5.99757, 0.96 ) }
    dend_29 { pt3dadd( 55.3384, -43.7229, -6.55954, 0.96 ) }
    dend_29 { pt3dadd( 55.7652, -44.533, -6.93502, 0.96 ) }
    dend_29 { pt3dadd( 56.5203, -45.9936, -7.61822, 0.96 ) }
    dend_29 { pt3dadd( 57.2169, -47.4091, -8.31861, 0.96 ) }
    dend_29 { pt3dadd( 57.3134, -47.6047, -8.41867, 0.96 ) }
    dend_29 { pt3dadd( 57.9572, -48.9265, -9.12203, 0.96 ) }
    dend_29 { pt3dadd( 58.8159, -50.6853, -10.0558, 0.96 ) }
    dend_29 { pt3dadd( 59.1795, -51.4739, -10.4908, 0.96 ) }
    dend_29 { pt3dadd( 59.7175, -52.7924, -11.2484, 0.84 ) }
    dend_29 { pt3dadd( 60.0184, -53.5837, -11.6999, 0.84 ) }
    dend_29 { pt3dadd( 60.4194, -54.6167, -12.2777, 1.2 ) }
    dend_29 { pt3dadd( 60.6987, -55.3242, -12.6377, 1.2 ) }
    dend_29 { pt3dadd( 60.8306, -55.7817, -12.8179, 1.2 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 78/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 7.10986, 3.30526, -6.29107, 1.44 ) }
    dend_11 { pt3dadd( 7.63602, 4.92776, -7.69123, 1.44 ) }
    dend_11 { pt3dadd( 8.58784, 7.48549, -9.86999, 1.44 ) }
    dend_11 { pt3dadd( 8.94901, 8.3663, -10.6233, 1.44 ) }
    dend_11 { pt3dadd( 9.52126, 9.71656, -11.7544, 1.08 ) }
    dend_11 { pt3dadd( 10.2248, 11.3767, -13.1451, 1.08 ) }
    dend_11 { pt3dadd( 10.7587, 12.6366, -14.2005, 1.08 ) }
    dend_11 { pt3dadd( 11.5234, 14.2785, -15.5292, 1.32 ) }
    dend_11 { pt3dadd( 12.0189, 15.1805, -16.195, 1.56 ) }
    dend_11 { pt3dadd( 12.6484, 16.2395, -17.0463, 1.8 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 7.10986, 3.30526, -6.29107, 1.44 ) }
    dend_6 { pt3dadd( 6.35946, 4.8238, -9.18588, 1.44 ) }
    dend_6 { pt3dadd( 5.95257, 5.84402, -10.8557, 1.32 ) }
    dend_6 { pt3dadd( 5.76806, 6.79996, -12.3681, 1.08 ) }
    dend_6 { pt3dadd( 5.6683, 8.1084, -14.3836, 1.08 ) }
    dend_6 { pt3dadd( 5.66981, 8.38804, -14.7961, 1.08 ) }
    dend_6 { pt3dadd( 5.67234, 8.85857, -15.4903, 1.08 ) }
    dend_6 { pt3dadd( 5.77688, 9.37518, -16.1444, 1.08 ) }
    dend_6 { pt3dadd( 6.64528, 11.7488, -18.9262, 1.08 ) }
    dend_6 { pt3dadd( 6.80433, 12.0592, -19.2971, 1.08 ) }
    dend_6 { pt3dadd( 6.98757, 12.4212, -19.7448, 1.08 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 99/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -10.1891, 13.1098, -1.7139, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_4 { pt3dadd( -11.7595, 13.6367, -2.03457, 1.08 ) }
    dend_4 { pt3dadd( -12.4755, 13.9678, -2.19469, 1.08 ) }
    dend_4 { pt3dadd( -13.2436, 14.4082, -2.36989, 0.96 ) }
    dend_4 { pt3dadd( -14.0811, 14.9174, -2.51837, 0.96 ) }
    dend_4 { pt3dadd( -15.1811, 15.5647, -2.6549, 0.96 ) }
    dend_4 { pt3dadd( -15.914, 16.0196, -2.72208, 0.96 ) }
    dend_4 { pt3dadd( -17.1659, 16.8892, -2.74787, 0.84 ) }
    dend_4 { pt3dadd( -17.755, 17.3524, -2.75416, 0.84 ) }
    dend_4 { pt3dadd( -18.9837, 18.4823, -2.74919, 1.08 ) }
    dend_4 { pt3dadd( -20.0675, 19.6728, -2.76267, 1.08 ) }
    dend_4 { pt3dadd( -20.9059, 20.7096, -2.78826, 1.32 ) }
    dend_4 { pt3dadd( -21.2688, 21.2331, -2.79354, 1.32 ) }
    dend_4 { pt3dadd( -21.9034, 22.3871, -2.78062, 1.08 ) }
    dend_4 { pt3dadd( -22.251, 23.3976, -2.83249, 0.6 ) }
    dend_4 { pt3dadd( -22.3731, 24.1634, -2.90286, 0.6 ) }
    dend_4 { pt3dadd( -22.378, 24.934, -2.99503, 0.6 ) }
    dend_4 { pt3dadd( -22.2825, 25.8692, -3.13294, 0.6 ) }
    dend_4 { pt3dadd( -22.0909, 26.8132, -3.29062, 0.6 ) }
    dend_4 { pt3dadd( -21.5744, 28.1096, -3.55035, 0.6 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 19/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -10.1891, 13.1098, -1.7139, 0.84 ) }
    dend_1 { pt3dadd( -10.0585, 14.0442, -1.93642, 0.84 ) }
    dend_1 { pt3dadd( -9.78349, 15.3223, -2.28267, 0.84 ) }
    dend_1 { pt3dadd( -9.52188, 16.2007, -2.53253, 0.84 ) }
    dend_1 { pt3dadd( -9.238, 16.9079, -2.76263, 0.84 ) }
    dend_1 { pt3dadd( -8.61767, 18.1912, -3.19764, 0.84 ) }
    dend_1 { pt3dadd( -8.23475, 18.8852, -3.48043, 0.84 ) }
    dend_1 { pt3dadd( -7.46459, 20.0641, -4.06451, 0.84 ) }
    dend_1 { pt3dadd( -7.06564, 20.5995, -4.35971, 0.84 ) }
    dend_1 { pt3dadd( -6.25711, 21.5665, -4.93179, 0.84 ) }
    dend_1 { pt3dadd( -5.75951, 22.1539, -5.27142, 0.84 ) }
    dend_1 { pt3dadd( -4.97854, 23.1952, -5.86812, 0.84 ) }
    dend_1 { pt3dadd( -4.65998, 23.7278, -6.17208, 0.84 ) }
    dend_1 { pt3dadd( -4.38422, 24.3118, -6.49051, 0.84 ) }
    dend_1 { pt3dadd( -3.86504, 25.5659, -7.12717, 0.84 ) }
    dend_1 { pt3dadd( -3.5537, 26.2945, -7.47147, 0.84 ) }
    dend_1 { pt3dadd( -2.86982, 27.6991, -8.10879, 0.84 ) }
    dend_1 { pt3dadd( -2.55549, 28.34, -8.36659, 0.84 ) }
    dend_1 { pt3dadd( -2.36436, 28.7006, -8.52227, 0.6 ) }
    dend_1 { pt3dadd( -1.88347, 29.4647, -8.87183, 0.6 ) }
    dend_1 { pt3dadd( -1.07681, 30.4562, -9.31538, 0.84 ) }
    dend_1 { pt3dadd( -0.704464, 30.7451, -9.44951, 1.08 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 37.1881, -13.4056, 0.00569113, 0.12 ) }
    axon_1 { pt3dadd( 51.3213, -18.4308, 0.00569113, 0.12 ) }
    axon_1 { pt3dadd( 65.4545, -23.456, 0.00569113, 0.12 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 44/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -26.5807, 6.0259, -11.7133, 0.96 ) }
    dend_50 { pt3dadd( -27.2437, 6.56563, -12.0051, 0.96 ) }
    dend_50 { pt3dadd( -27.9453, 7.09905, -12.3857, 0.96 ) }
    dend_50 { pt3dadd( -29.171, 7.94913, -13.2098, 0.96 ) }
    dend_50 { pt3dadd( -29.9595, 8.46877, -13.7008, 0.96 ) }
    dend_50 { pt3dadd( -30.5427, 8.84387, -14.0919, 0.96 ) }
    dend_50 { pt3dadd( -31.32, 9.35956, -14.5671, 0.96 ) }
    dend_50 { pt3dadd( -32.7368, 10.2516, -15.452, 1.08 ) }
    dend_50 { pt3dadd( -34.2338, 11.0662, -16.5252, 1.08 ) }
    dend_50 { pt3dadd( -35.1874, 11.4905, -17.2285, 0.96 ) }
    dend_50 { pt3dadd( -36.5948, 12.0436, -18.3212, 0.96 ) }
    dend_50 { pt3dadd( -38.0173, 12.6077, -19.4696, 1.08 ) }
    dend_50 { pt3dadd( -39.3519, 13.2309, -20.6379, 0.84 ) }
    dend_50 { pt3dadd( -41.0483, 14.1695, -22.1206, 0.84 ) }
    dend_50 { pt3dadd( -41.6932, 14.5571, -22.672, 0.84 ) }
    dend_50 { pt3dadd( -42.1235, 14.8172, -23.0257, 0.84 ) }
    dend_50 { pt3dadd( -42.683, 15.119, -23.4271, 0.84 ) }
    dend_50 { pt3dadd( -43.8842, 15.6668, -24.2122, 0.84 ) }
    dend_50 { pt3dadd( -44.8124, 16.0212, -24.7871, 0.84 ) }
    dend_50 { pt3dadd( -45.7711, 16.2098, -25.3333, 0.84 ) }
    dend_50 { pt3dadd( -46.6268, 16.2464, -25.8327, 1.08 ) }
    dend_50 { pt3dadd( -48.4698, 16.1572, -26.9369, 0.72 ) }
    dend_50 { pt3dadd( -49.6132, 16.0198, -27.5958, 0.72 ) }
    dend_50 { pt3dadd( -51.6929, 15.643, -28.8787, 0.72 ) }
    dend_50 { pt3dadd( -53.0402, 15.3918, -29.7799, 0.96 ) }
    dend_50 { pt3dadd( -53.4449, 15.3237, -30.0608, 0.96 ) }
    dend_50 { pt3dadd( -54.5317, 15.2001, -30.8739, 0.72 ) }
    dend_50 { pt3dadd( -55.6939, 15.1527, -31.7313, 0.72 ) }
    dend_50 { pt3dadd( -57.4242, 15.138, -33.1103, 0.96 ) }
    dend_50 { pt3dadd( -58.2479, 15.1957, -33.7299, 0.6 ) }
    dend_50 { pt3dadd( -58.6377, 15.2435, -34.0539, 0.6 ) }
    dend_50 { pt3dadd( -60.2742, 15.4389, -35.4887, 0.6 ) }
    dend_50 { pt3dadd( -60.8976, 15.4933, -36.0618, 0.6 ) }
    dend_50 { pt3dadd( -62.2738, 15.614, -37.5194, 0.6 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 78/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -26.5807, 6.0259, -11.7133, 0.96 ) }
    dend_47 { pt3dadd( -27.0532, 6.94185, -12.6388, 0.96 ) }
    dend_47 { pt3dadd( -27.3987, 7.61098, -13.3207, 0.96 ) }
    dend_47 { pt3dadd( -28.0279, 8.82949, -14.5624, 0.96 ) }
    dend_47 { pt3dadd( -28.6645, 10.0625, -15.8189, 1.44 ) }
    dend_47 { pt3dadd( -29.4513, 11.5861, -17.3717, 0.96 ) }
    dend_47 { pt3dadd( -29.759, 12.1821, -17.979, 0.96 ) }
    dend_47 { pt3dadd( -30.3871, 13.3232, -19.1737, 1.08 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -51.3393, -9.19494, 12.1997, 0.84 ) }
    dend_43 { pt3dadd( -52.5178, -10.1097, 12.213, 0.84 ) }
    dend_43 { pt3dadd( -53.1247, -10.5809, 12.2198, 0.84 ) }
    dend_43 { pt3dadd( -54.1387, -11.3681, 12.2312, 0.84 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 90/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -51.3393, -9.19494, 12.1997, 0.72 ) }
    dend_42 { pt3dadd( -51.5572, -9.62571, 12.3462, 0.72 ) }
    dend_42 { pt3dadd( -52.1475, -10.4921, 12.7503, 0.72 ) }
    dend_42 { pt3dadd( -52.8663, -11.4099, 13.2163, 0.96 ) }
    dend_42 { pt3dadd( -53.824, -12.5345, 13.8454, 0.72 ) }
    dend_42 { pt3dadd( -54.7428, -13.6134, 14.4491, 0.72 ) }
    dend_42 { pt3dadd( -55.6078, -14.6291, 15.0173, 0.72 ) }
    dend_42 { pt3dadd( -57.0318, -16.1245, 15.929, 0.72 ) }
    dend_42 { pt3dadd( -57.4656, -16.5204, 16.1986, 0.72 ) }
    dend_42 { pt3dadd( -58.7793, -17.6185, 17.03, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_42 { pt3dadd( -65.0808, -22.9319, 22.6921, 0.96 ) }
    // Section: dend_36, id: dend_36, parent: dend_32 (entry count 1/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 36.3529, 0.488314, 5.54343, 1.08 ) }
    dend_36 { pt3dadd( 37.5448, 2.5678, 4.48392, 1.08 ) }
    dend_36 { pt3dadd( 38.5145, 3.89803, 3.88799, 1.08 ) }
    dend_36 { pt3dadd( 39.3182, 4.91852, 3.48993, 1.08 ) }
    dend_36 { pt3dadd( 40.1603, 6.011, 3.00341, 1.08 ) }
    dend_36 { pt3dadd( 40.8499, 6.91131, 2.58876, 1.08 ) }
    dend_36 { pt3dadd( 41.6329, 7.96114, 2.11037, 1.08 ) }
    dend_36 { pt3dadd( 42.328, 8.89982, 1.68167, 0.84 ) }
    dend_36 { pt3dadd( 42.7834, 9.54112, 1.32408, 0.84 ) }
    dend_36 { pt3dadd( 43.8275, 11.4147, 0.0855789, 0.84 ) }
    dend_36 { pt3dadd( 44.1199, 12.1371, -0.424847, 1.08 ) }
    dend_36 { pt3dadd( 44.2885, 12.7097, -0.844817, 1.08 ) }
    dend_36 { pt3dadd( 44.7482, 14.3979, -2.14162, 0.72 ) }
    dend_36 { pt3dadd( 45.0331, 15.3937, -2.91311, 0.72 ) }
    dend_36 { pt3dadd( 45.4306, 16.6222, -3.82371, 1.08 ) }
    dend_36 { pt3dadd( 45.5358, 16.9237, -4.02867, 1.08 ) }
    dend_36 { pt3dadd( 45.7386, 17.5428, -4.43607, 1.08 ) }
    dend_36 { pt3dadd( 46.1765, 19.0135, -5.30312, 0.84 ) }
    dend_36 { pt3dadd( 46.495, 20.2875, -5.86774, 1.2 ) }
    dend_36 { pt3dadd( 46.6336, 21.0681, -6.15203, 1.2 ) }
    dend_36 { pt3dadd( 46.7895, 22.7617, -6.65624, 1.2 ) }
    dend_36 { pt3dadd( 46.7874, 23.8314, -6.91445, 1.08 ) }
    dend_36 { pt3dadd( 46.6721, 24.9909, -7.04713, 1.08 ) }
    dend_36 { pt3dadd( 46.3981, 26.2492, -7.01875, 0.96 ) }
    dend_36 { pt3dadd( 46.1928, 26.9101, -6.89925, 0.96 ) }
    dend_36 { pt3dadd( 45.8482, 27.7894, -6.6318, 0.96 ) }
    dend_36 { pt3dadd( 45.3712, 28.7901, -6.18266, 0.96 ) }
    dend_36 { pt3dadd( 44.5167, 30.3483, -5.38013, 0.96 ) }
    dend_36 { pt3dadd( 43.9141, 31.3812, -4.80282, 0.96 ) }
    dend_36 { pt3dadd( 43.2425, 32.4431, -4.17711, 0.72 ) }
    dend_36 { pt3dadd( 42.733, 33.1868, -3.70351, 0.72 ) }
    dend_36 { pt3dadd( 41.8734, 34.216, -2.98275, 0.72 ) }
    dend_36 { pt3dadd( 41.3297, 34.7495, -2.5839, 0.96 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 34/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 36.3529, 0.488314, 5.54343, 0.96 ) }
    dend_33 { pt3dadd( 38.0088, 1.10991, 6.55984, 0.96 ) }
    dend_33 { pt3dadd( 39.5741, 1.57739, 7.37253, 0.96 ) }
    dend_33 { pt3dadd( 41.414, 2.0584, 8.19992, 1.2 ) }
    dend_33 { pt3dadd( 42.3332, 2.29459, 8.5623, 1.2 ) }
    dend_33 { pt3dadd( 43.6259, 2.61162, 9.0395, 1.08 ) }
    dend_33 { pt3dadd( 45.4383, 3.03755, 9.67294, 1.08 ) }
    dend_33 { pt3dadd( 46.5643, 3.29748, 10.0177, 1.08 ) }
    dend_33 { pt3dadd( 47.5123, 3.46606, 10.246, 1.08 ) }
    dend_33 { pt3dadd( 48.606, 3.57256, 10.4954, 1.08 ) }
    dend_33 { pt3dadd( 49.6872, 3.59745, 10.7865, 1.08 ) }
    dend_33 { pt3dadd( 50.1448, 3.58005, 10.9306, 1.08 ) }
    dend_33 { pt3dadd( 52.1329, 3.41834, 11.6122, 1.08 ) }
    dend_33 { pt3dadd( 53.2043, 3.24552, 11.9969, 1.08 ) }
    dend_33 { pt3dadd( 54.2203, 3.04135, 12.3075, 1.08 ) }
    dend_33 { pt3dadd( 54.9031, 2.88058, 12.4701, 1.08 ) }
    dend_33 { pt3dadd( 56.1327, 2.57644, 12.6753, 1.2 ) }
    dend_33 { pt3dadd( 56.7226, 2.42101, 12.7233, 1.2 ) }
    dend_33 { pt3dadd( 57.9794, 2.08208, 12.7124, 1.08 ) }
    dend_33 { pt3dadd( 59.8414, 1.68356, 12.575, 0.96 ) }
    dend_33 { pt3dadd( 60.9566, 1.48976, 12.4537, 0.96 ) }
    dend_33 { pt3dadd( 61.4871, 1.41863, 12.3901, 0.96 ) }
    dend_33 { pt3dadd( 63.3368, 1.19184, 12.1536, 0.96 ) }
    dend_33 { pt3dadd( 64.7881, 1.0364, 11.9813, 1.2 ) }
    dend_33 { pt3dadd( 66.9555, 0.859619, 11.7519, 0.96 ) }
    dend_33 { pt3dadd( 67.5644, 0.82445, 11.7027, 0.96 ) }
    dend_33 { pt3dadd( 68.5852, 0.815493, 11.6078, 0.96 ) }
    dend_33 { pt3dadd( 69.012, 0.821048, 11.5369, 0.96 ) }
    dend_33 { pt3dadd( 69.9776, 0.859793, 11.3185, 0.96 ) }
    dend_33 { pt3dadd( 70.6452, 0.888662, 11.0935, 0.96 ) }
    dend_33 { pt3dadd( 71.4884, 0.903746, 10.7415, 0.96 ) }
    dend_33 { pt3dadd( 73.1186, 0.829386, 9.91329, 0.72 ) }
    dend_33 { pt3dadd( 75.1169, 0.685202, 8.73944, 0.72 ) }
    dend_33 { pt3dadd( 75.9377, 0.612125, 8.229, 0.72 ) }
    dend_33 { pt3dadd( 77.1669, 0.443501, 7.42139, 0.72 ) }
    dend_33 { pt3dadd( 77.6544, 0.355777, 7.09339, 0.72 ) }
    dend_33 { pt3dadd( 78.9947, 0.067699, 6.18889, 0.72 ) }
    dend_33 { pt3dadd( 80.2424, -0.237406, 5.39741, 0.72 ) }
    dend_33 { pt3dadd( 81.2983, -0.545085, 4.83449, 0.72 ) }
    dend_33 { pt3dadd( 81.7386, -0.711751, 4.59602, 0.72 ) }
    dend_33 { pt3dadd( 81.9628, -0.808796, 4.4851, 0.72 ) }
    dend_33 { pt3dadd( 82.3766, -0.991576, 4.28462, 0.72 ) }
    dend_33 { pt3dadd( 82.9231, -1.26403, 3.98822, 0.72 ) }
    dend_33 { pt3dadd( 84.2271, -2.08311, 3.1611, 0.72 ) }
    dend_33 { pt3dadd( 85.1807, -2.72947, 2.49199, 0.72 ) }
    dend_33 { pt3dadd( 85.5317, -2.97147, 2.24087, 0.72 ) }
    dend_33 { pt3dadd( 85.7019, -3.08847, 2.11869, 0.72 ) }
    dend_33 { pt3dadd( 87.5393, -4.31547, 0.877604, 0.72 ) }
    dend_33 { pt3dadd( 88.0279, -4.62438, 0.588748, 0.72 ) }
    dend_33 { pt3dadd( 88.5004, -4.91088, 0.370614, 0.72 ) }
    dend_33 { pt3dadd( 88.8781, -5.09735, 0.255236, 0.72 ) }
    dend_33 { pt3dadd( 89.3644, -5.30751, 0.150386, 0.72 ) }
    dend_33 { pt3dadd( 90.4406, -5.66617, 0.037272, 0.96 ) }
    dend_33 { pt3dadd( 91.2175, -5.87682, 0.0458366, 0.96 ) }
    dend_33 { pt3dadd( 91.5918, -5.98233, 0.0499465, 0.96 ) }
    dend_33 { pt3dadd( 92.7384, -6.35597, 0.0619691, 0.96 ) }
    dend_33 { pt3dadd( 93.3866, -6.60567, 0.0681358, 0.96 ) }
    dend_33 { pt3dadd( 94.5783, -7.1724, 0.100222, 0.96 ) }
    dend_33 { pt3dadd( 96.0986, -7.99879, 0.15972, 0.72 ) }
    dend_33 { pt3dadd( 96.6974, -8.34259, 0.190093, 0.72 ) }
    dend_33 { pt3dadd( 97.3021, -8.69272, 0.226495, 0.72 ) }
    dend_33 { pt3dadd( 97.7584, -8.95593, 0.258933, 0.72 ) }
    dend_33 { pt3dadd( 98.8534, -9.54223, 0.346891, 0.72 ) }
    dend_33 { pt3dadd( 99.1903, -9.71406, 0.377753, 0.72 ) }
    dend_33 { pt3dadd( 100.1, -10.0345, 0.459623, 0.72 ) }
    dend_33 { pt3dadd( 100.776, -10.2082, 0.510021, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_33 { pt3dadd( 101.36, -10.341, 0.54183, 0.72 ) }
    dend_33 { pt3dadd( 101.618, -10.4133, 0.54879, 0.72 ) }
    dend_33 { pt3dadd( 102.134, -10.5623, 0.54879, 0.72 ) }
    dend_33 { pt3dadd( 102.707, -10.7764, 0.54879, 0.72 ) }
    dend_33 { pt3dadd( 103.472, -11.1698, 0.54879, 0.72 ) }
    dend_33 { pt3dadd( 104.127, -11.5704, 0.54879, 0.72 ) }
    dend_33 { pt3dadd( 105.378, -12.3967, 0.54879, 0.72 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 7/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 60.8306, -55.7817, -12.8179, 0.84 ) }
    dend_31 { pt3dadd( 60.2843, -56.4562, -14.0984, 0.84 ) }
    dend_31 { pt3dadd( 59.4128, -57.4082, -15.9599, 0.84 ) }
    dend_31 { pt3dadd( 59.0431, -57.7972, -16.7797, 0.84 ) }
    dend_31 { pt3dadd( 58.9498, -57.8934, -16.9789, 0.84 ) }
    dend_31 { pt3dadd( 58.1984, -58.7645, -18.7365, 0.84 ) }
    dend_31 { pt3dadd( 57.5096, -59.6271, -20.4275, 0.84 ) }
    dend_31 { pt3dadd( 57.23, -60.0159, -21.1581, 0.84 ) }
    dend_31 { pt3dadd( 56.5398, -60.9865, -22.8992, 0.84 ) }
    dend_31 { pt3dadd( 56.2961, -61.2962, -23.4432, 0.84 ) }
    dend_31 { pt3dadd( 55.4977, -62.3657, -25.1625, 0.84 ) }
    dend_31 { pt3dadd( 55.4159, -62.4937, -25.3482, 0.84 ) }
    dend_31 { pt3dadd( 55.1308, -63.0366, -26.057, 0.84 ) }
    dend_31 { pt3dadd( 54.678, -63.9394, -27.2441, 1.08 ) }
    dend_31 { pt3dadd( 54.4031, -64.5193, -27.9681, 1.08 ) }
    dend_31 { pt3dadd( 53.7775, -65.923, -29.6416, 0.84 ) }
    dend_31 { pt3dadd( 53.0558, -67.3762, -31.2938, 0.72 ) }
    dend_31 { pt3dadd( 52.7437, -68.0314, -32.0013, 0.72 ) }
    dend_31 { pt3dadd( 51.9568, -69.7602, -33.7324, 0.72 ) }
    dend_31 { pt3dadd( 51.7039, -70.3383, -34.2323, 0.72 ) }
    dend_31 { pt3dadd( 51.3285, -71.1582, -34.8563, 0.72 ) }
    dend_31 { pt3dadd( 50.679, -72.3759, -35.554, 0.72 ) }
    dend_31 { pt3dadd( 50.2165, -73.1653, -35.9049, 0.72 ) }
    dend_31 { pt3dadd( 49.7979, -73.8506, -36.1787, 0.72 ) }
    dend_31 { pt3dadd( 49.5368, -74.2845, -36.3273, 0.72 ) }
    dend_31 { pt3dadd( 48.5136, -75.9146, -36.8567, 0.72 ) }
    dend_31 { pt3dadd( 47.9778, -76.749, -37.1126, 0.72 ) }
    dend_31 { pt3dadd( 47.7852, -77.0432, -37.1902, 0.84 ) }
    dend_31 { pt3dadd( 47.1331, -77.9481, -37.411, 0.6 ) }
    dend_31 { pt3dadd( 46.0153, -79.5058, -37.7349, 0.6 ) }
    dend_31 { pt3dadd( 45.2581, -80.6131, -37.9085, 0.6 ) }
    dend_31 { pt3dadd( 44.9377, -81.1328, -37.9492, 0.6 ) }
    dend_31 { pt3dadd( 44.2775, -82.329, -38.0205, 0.6 ) }
    dend_31 { pt3dadd( 44.0757, -82.7021, -38.0328, 0.6 ) }
    dend_31 { pt3dadd( 43.7472, -83.3539, -38.0483, 0.6 ) }
    dend_31 { pt3dadd( 43.3627, -84.1994, -38.0823, 0.6 ) }
    dend_31 { pt3dadd( 43.0267, -84.9234, -38.187, 0.6 ) }
    dend_31 { pt3dadd( 42.8384, -85.2917, -38.2821, 0.6 ) }
    dend_31 { pt3dadd( 42.3673, -86.0813, -38.5795, 0.6 ) }
    dend_31 { pt3dadd( 41.9275, -86.8391, -38.9403, 0.6 ) }
    dend_31 { pt3dadd( 41.6828, -87.2683, -39.1499, 0.6 ) }
    dend_31 { pt3dadd( 41.3828, -87.8212, -39.4052, 0.6 ) }
    dend_31 { pt3dadd( 40.9769, -88.7105, -39.7733, 0.6 ) }
    dend_31 { pt3dadd( 40.8746, -89.0266, -39.9122, 0.6 ) }
    dend_31 { pt3dadd( 40.4403, -90.6471, -40.4966, 0.84 ) }
    dend_31 { pt3dadd( 40.153, -91.826, -40.9138, 0.84 ) }
    dend_31 { pt3dadd( 39.985, -92.5147, -41.157, 0.84 ) }
    dend_31 { pt3dadd( 39.815, -93.1771, -41.3823, 0.84 ) }
    dend_31 { pt3dadd( 39.2923, -95.0578, -41.9552, 0.6 ) }
    dend_31 { pt3dadd( 38.7536, -96.7073, -42.4343, 0.6 ) }
    dend_31 { pt3dadd( 38.2756, -97.8771, -42.7425, 0.6 ) }
    dend_31 { pt3dadd( 37.8562, -98.7877, -42.9791, 0.6 ) }
    dend_31 { pt3dadd( 37.604, -99.2546, -43.059, 0.6 ) }
    dend_31 { pt3dadd( 37.14, -99.952, -43.1002, 0.6 ) }
    dend_31 { pt3dadd( 36.6342, -100.56, -43.0086, 0.84 ) }
    dend_31 { pt3dadd( 36.1169, -101.112, -42.8741, 0.84 ) }
    dend_31 { pt3dadd( 35.7275, -101.455, -42.7295, 0.84 ) }
    dend_31 { pt3dadd( 34.5582, -102.375, -42.2769, 0.6 ) }
    dend_31 { pt3dadd( 33.7852, -102.995, -41.8638, 0.6 ) }
    dend_31 { pt3dadd( 32.8938, -103.698, -41.3122, 0.6 ) }
    dend_31 { pt3dadd( 32.4149, -104.08, -40.9923, 0.96 ) }
    dend_31 { pt3dadd( 31.3621, -104.954, -40.2578, 0.72 ) }
    dend_31 { pt3dadd( 30.7336, -105.522, -39.8084, 0.72 ) }
    dend_31 { pt3dadd( 29.1916, -107.061, -38.7387, 0.72 ) }
    dend_31 { pt3dadd( 28.3831, -107.975, -38.179, 0.72 ) }
    dend_31 { pt3dadd( 27.9657, -108.479, -37.9325, 0.72 ) }
    dend_31 { pt3dadd( 27.6502, -108.83, -37.7606, 0.72 ) }
    dend_31 { pt3dadd( 27.1656, -109.313, -37.5356, 0.72 ) }
    dend_31 { pt3dadd( 26.5021, -109.812, -37.3237, 0.72 ) }
    dend_31 { pt3dadd( 26.1374, -110.038, -37.2701, 0.72 ) }
    dend_31 { pt3dadd( 25.2161, -110.567, -37.1139, 1.08 ) }
    dend_31 { pt3dadd( 24.0627, -111.12, -36.8913, 0.84 ) }
    dend_31 { pt3dadd( 23.5066, -111.313, -36.7737, 0.84 ) }
    dend_31 { pt3dadd( 23.036, -111.397, -36.6667, 0.84 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 81/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 60.8306, -55.7817, -12.8179, 0.72 ) }
    dend_30 { pt3dadd( 61.5392, -56.7051, -11.9395, 0.72 ) }
    dend_30 { pt3dadd( 61.7409, -57.0328, -11.6527, 0.72 ) }
    dend_30 { pt3dadd( 62.238, -57.9198, -10.9593, 1.2 ) }
    dend_30 { pt3dadd( 62.8071, -59.1937, -9.9565, 0.96 ) }
    dend_30 { pt3dadd( 63.0489, -59.7348, -9.53049, 0.96 ) }
    dend_30 { pt3dadd( 63.6143, -61.0005, -8.53426, 0.96 ) }
    dend_30 { pt3dadd( 63.7992, -61.4433, -8.19124, 0.96 ) }
    dend_30 { pt3dadd( 64.2671, -62.7562, -7.15216, 0.96 ) }
    dend_30 { pt3dadd( 64.5692, -64.1654, -6.06805, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 12.6484, 16.2395, -17.0463, 0.96 ) }
    dend_17 { pt3dadd( 14.6192, 16.2068, -18.6497, 0.96 ) }
    dend_17 { pt3dadd( 15.3338, 16.1236, -19.2505, 0.96 ) }
    dend_17 { pt3dadd( 15.9264, 16.0909, -19.7286, 0.96 ) }
    dend_17 { pt3dadd( 17.6917, 16.0655, -21.0244, 0.96 ) }
    dend_17 { pt3dadd( 18.8004, 16.131, -21.8099, 1.2 ) }
    dend_17 { pt3dadd( 20.2569, 16.2938, -22.7992, 1.2 ) }
    dend_17 { pt3dadd( 20.7195, 16.3276, -23.167, 1.2 ) }
    dend_17 { pt3dadd( 21.6791, 16.371, -23.9586, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( 22.4232, 16.4153, -24.5637, 1.08 ) }
    dend_17 { pt3dadd( 24.0599, 16.7478, -25.6589, 1.08 ) }
    dend_17 { pt3dadd( 24.5567, 16.9491, -25.9285, 1.08 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 3/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.6484, 16.2395, -17.0463, 1.2 ) }
    dend_12 { pt3dadd( 11.6656, 16.6567, -17.988, 1.2 ) }
    dend_12 { pt3dadd( 10.2151, 17.2723, -19.3781, 1.2 ) }
    dend_12 { pt3dadd( 9.2694, 17.6735, -20.2844, 1.08 ) }
    dend_12 { pt3dadd( 8.52847, 17.988, -20.9945, 1.08 ) }
    dend_12 { pt3dadd( 7.92299, 18.245, -21.5747, 1.08 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 9/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.98757, 12.4212, -19.7448, 0.96 ) }
    dend_10 { pt3dadd( 8.19303, 12.6041, -19.1641, 0.96 ) }
    dend_10 { pt3dadd( 9.27778, 12.6689, -18.6645, 0.96 ) }
    dend_10 { pt3dadd( 11.0014, 12.5689, -17.9119, 0.96 ) }
    dend_10 { pt3dadd( 12.4718, 12.3198, -17.2814, 1.08 ) }
    dend_10 { pt3dadd( 13.9917, 11.8774, -16.6346, 0.96 ) }
    dend_10 { pt3dadd( 14.5044, 11.6476, -16.4294, 0.96 ) }
    dend_10 { pt3dadd( 14.8996, 11.3664, -16.2746, 0.96 ) }
    dend_10 { pt3dadd( 15.6989, 10.6351, -16.0246, 0.96 ) }
    dend_10 { pt3dadd( 16.2573, 9.97225, -15.9144, 0.96 ) }
    dend_10 { pt3dadd( 16.7387, 9.28564, -15.9063, 0.96 ) }
    dend_10 { pt3dadd( 17.612, 8.02853, -16.0143, 0.96 ) }
    dend_10 { pt3dadd( 17.9846, 7.54835, -16.0848, 0.96 ) }
    dend_10 { pt3dadd( 18.4564, 7.04681, -16.2093, 0.96 ) }
    dend_10 { pt3dadd( 18.7186, 6.81744, -16.2999, 0.96 ) }
    dend_10 { pt3dadd( 20.1524, 5.84296, -16.8875, 0.96 ) }
    dend_10 { pt3dadd( 20.5631, 5.62719, -17.0665, 0.96 ) }
    dend_10 { pt3dadd( 21.1781, 5.38542, -17.3569, 0.96 ) }
    dend_10 { pt3dadd( 22.5175, 5.01939, -18.027, 0.96 ) }
    dend_10 { pt3dadd( 23.3138, 4.8679, -18.4785, 0.84 ) }
    dend_10 { pt3dadd( 24.9164, 4.67368, -19.412, 0.96 ) }
    dend_10 { pt3dadd( 25.8034, 4.59856, -20.0037, 0.96 ) }
    dend_10 { pt3dadd( 26.814, 4.50056, -20.7719, 0.84 ) }
    dend_10 { pt3dadd( 28.1131, 4.3203, -21.9463, 0.84 ) }
    dend_10 { pt3dadd( 29.2437, 4.09015, -23.1757, 0.84 ) }
    dend_10 { pt3dadd( 29.7221, 3.91264, -23.8429, 0.84 ) }
    dend_10 { pt3dadd( 30.9952, 3.09332, -26.159, 1.08 ) }
    dend_10 { pt3dadd( 31.1729, 2.93122, -26.5187, 1.08 ) }
    dend_10 { pt3dadd( 31.7573, 2.19696, -27.8168, 1.2 ) }
    dend_10 { pt3dadd( 32.0859, 1.65924, -28.5316, 1.2 ) }
    dend_10 { pt3dadd( 32.9672, 0.139779, -30.0179, 1.2 ) }
    dend_10 { pt3dadd( 33.0919, -0.0400946, -30.1164, 1.2 ) }
    dend_10 { pt3dadd( 34.8436, -1.75711, -29.8754, 1.2 ) }
    dend_10 { pt3dadd( 35.1844, -2.00549, -29.7786, 1.2 ) }
    dend_10 { pt3dadd( 36.3553, -2.7408, -29.4267, 0.96 ) }
    dend_10 { pt3dadd( 36.8874, -3.07411, -29.2736, 0.96 ) }
    dend_10 { pt3dadd( 38.1631, -3.84283, -28.9142, 0.84 ) }
    dend_10 { pt3dadd( 38.895, -4.2889, -28.7594, 0.84 ) }
    dend_10 { pt3dadd( 39.9087, -4.93561, -28.6675, 0.84 ) }
    dend_10 { pt3dadd( 41.1269, -5.70897, -28.5816, 0.6 ) }
    dend_10 { pt3dadd( 42.9319, -6.84621, -28.5332, 0.84 ) }
    dend_10 { pt3dadd( 44.1782, -7.67487, -28.5301, 0.96 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 51/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 6.98757, 12.4212, -19.7448, 1.08 ) }
    dend_7 { pt3dadd( 6.82009, 12.6041, -20.7826, 1.08 ) }
    dend_7 { pt3dadd( 6.6153, 13.154, -22.8338, 1.08 ) }
    dend_7 { pt3dadd( 6.50363, 13.6594, -24.1405, 1.08 ) }
    dend_7 { pt3dadd( 6.33202, 14.4547, -25.8564, 1.08 ) }
    dend_7 { pt3dadd( 6.12975, 15.1694, -27.192, 1.08 ) }
    dend_7 { pt3dadd( 5.87704, 15.9239, -28.5187, 0.96 ) }
    dend_7 { pt3dadd( 5.67117, 16.5784, -29.5462, 0.96 ) }
    dend_7 { pt3dadd( 5.34032, 17.538, -30.7875, 1.32 ) }
    dend_7 { pt3dadd( 5.1566, 17.9227, -31.2097, 1.32 ) }
    dend_7 { pt3dadd( 4.71856, 18.5786, -32.1659, 1.32 ) }
    dend_7 { pt3dadd( 3.75231, 19.7024, -34.0026, 0.96 ) }
    dend_7 { pt3dadd( 3.41638, 20.0114, -34.6131, 0.96 ) }
    dend_7 { pt3dadd( 2.99536, 20.3439, -35.4123, 0.96 ) }
    dend_7 { pt3dadd( 2.69825, 20.5449, -36.0776, 0.96 ) }
    dend_7 { pt3dadd( 0.67749, 21.9692, -41.7805, 0.96 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 67/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -0.704464, 30.7451, -9.44951, 1.2 ) }
    dend_3 { pt3dadd( 0.32402, 31.2757, -9.41215, 1.2 ) }
    dend_3 { pt3dadd( 1.05859, 31.731, -9.36756, 1.2 ) }
    dend_3 { pt3dadd( 2.22496, 32.5092, -9.28449, 1.2 ) }
    dend_3 { pt3dadd( 2.73118, 32.8489, -9.23296, 1.44 ) }
    dend_3 { pt3dadd( 3.86547, 33.5797, -9.10454, 1.08 ) }
    dend_3 { pt3dadd( 4.31203, 33.8559, -9.05233, 1.08 ) }
    dend_3 { pt3dadd( 5.02947, 34.3373, -8.92303, 0.84 ) }
    dend_3 { pt3dadd( 5.5464, 34.7034, -8.81504, 0.84 ) }
    dend_3 { pt3dadd( 6.03102, 35.09, -8.72567, 0.84 ) }
    dend_3 { pt3dadd( 6.57172, 35.5648, -8.67026, 0.84 ) }
    dend_3 { pt3dadd( 7.05148, 35.9977, -8.66267, 0.84 ) }
    dend_3 { pt3dadd( 7.61099, 36.5024, -8.67109, 1.08 ) }
    dend_3 { pt3dadd( 8.27772, 37.1139, -8.67843, 1.08 ) }
    dend_3 { pt3dadd( 9.21862, 38.0941, -8.81956, 0.84 ) }
    dend_3 { pt3dadd( 9.91082, 38.8391, -8.99661, 0.72 ) }
    dend_3 { pt3dadd( 10.3762, 39.333, -9.14501, 0.72 ) }
    dend_3 { pt3dadd( 10.5625, 39.514, -9.21254, 0.72 ) }
    dend_3 { pt3dadd( 11.5714, 40.3451, -9.56064, 0.96 ) }
    dend_3 { pt3dadd( 13.2134, 41.562, -10.1417, 0.84 ) }
    dend_3 { pt3dadd( 13.8051, 41.9541, -10.3502, 0.84 ) }
    dend_3 { pt3dadd( 14.1548, 42.1706, -10.4845, 0.72 ) }
    dend_3 { pt3dadd( 14.7685, 42.534, -10.7439, 0.72 ) }
    dend_3 { pt3dadd( 15.6278, 42.9915, -11.1186, 0.84 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.704464, 30.7451, -9.44951, 0.72 ) }
    dend_2 { pt3dadd( -0.734423, 31.614, -10.1696, 0.72 ) }
    dend_2 { pt3dadd( -0.710424, 32.5584, -10.9846, 0.72 ) }
    dend_2 { pt3dadd( -0.695061, 33.4476, -11.7641, 0.72 ) }
    dend_2 { pt3dadd( -0.706298, 34.0343, -12.2627, 0.72 ) }
    dend_2 { pt3dadd( -0.734833, 35.473, -13.4391, 0.72 ) }
    dend_2 { pt3dadd( -0.734912, 35.8792, -13.7459, 0.72 ) }
    dend_2 { pt3dadd( -0.729075, 36.91, -14.5056, 0.72 ) }
    dend_2 { pt3dadd( -0.707549, 37.5101, -14.905, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( -0.605687, 38.7067, -15.6084, 0.72 ) }
    dend_2 { pt3dadd( -0.46161, 39.8036, -16.2253, 0.72 ) }
    dend_2 { pt3dadd( -0.284847, 40.7631, -16.7931, 0.72 ) }
    dend_2 { pt3dadd( -0.191456, 41.2328, -17.0749, 0.96 ) }
    dend_2 { pt3dadd( 0.0260588, 42.1032, -17.5965, 0.84 ) }
    dend_2 { pt3dadd( 0.23876, 42.7537, -18.0032, 0.84 ) }
    dend_2 { pt3dadd( 0.82765, 44.123, -18.9612, 0.84 ) }
    dend_2 { pt3dadd( 1.56148, 45.5845, -20.1752, 0.84 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 8/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -62.2738, 15.614, -37.5194, 0.72 ) }
    dend_52 { pt3dadd( -63.2413, 15.654, -38.3122, 0.72 ) }
    dend_52 { pt3dadd( -64.6153, 15.6918, -39.4572, 1.08 ) }
    dend_52 { pt3dadd( -67.1412, 15.7264, -41.5326, 0.84 ) }
    dend_52 { pt3dadd( -67.6732, 15.7044, -41.9598, 0.84 ) }
    dend_52 { pt3dadd( -68.6642, 15.6353, -42.7041, 0.84 ) }
    dend_52 { pt3dadd( -70.8202, 15.4593, -44.1758, 0.84 ) }
    dend_52 { pt3dadd( -71.3244, 15.411, -44.519, 0.84 ) }
    dend_52 { pt3dadd( -71.8538, 15.3513, -44.8431, 1.08 ) }
    dend_52 { pt3dadd( -72.9718, 15.2185, -45.3704, 1.08 ) }
    dend_52 { pt3dadd( -74.2018, 15.0529, -45.88, 0.72 ) }
    dend_52 { pt3dadd( -75.4546, 14.9001, -46.3164, 0.72 ) }
    dend_52 { pt3dadd( -77.8906, 14.6603, -46.9618, 0.72 ) }
    dend_52 { pt3dadd( -78.7743, 14.5889, -47.1833, 0.72 ) }
    dend_52 { pt3dadd( -80.1956, 14.4917, -47.5023, 0.72 ) }
    dend_52 { pt3dadd( -81.5293, 14.4355, -47.7643, 0.72 ) }
    dend_52 { pt3dadd( -82.2588, 14.3941, -47.8802, 0.72 ) }
    dend_52 { pt3dadd( -83.1097, 14.3388, -47.9659, 0.72 ) }
    dend_52 { pt3dadd( -84.3208, 14.2304, -48.1041, 0.72 ) }
    dend_52 { pt3dadd( -85.5744, 14.087, -48.3666, 0.72 ) }
    dend_52 { pt3dadd( -86.3007, 14.0394, -48.5703, 0.72 ) }
    dend_52 { pt3dadd( -86.9166, 14.0394, -48.7658, 0.72 ) }
    dend_52 { pt3dadd( -87.7365, 14.0331, -49.0427, 0.72 ) }
    dend_52 { pt3dadd( -90.1307, 13.967, -49.8711, 0.72 ) }
    dend_52 { pt3dadd( -91.0829, 13.9176, -50.2727, 0.72 ) }
    dend_52 { pt3dadd( -92.5879, 13.7896, -50.9662, 0.72 ) }
    dend_52 { pt3dadd( -93.4272, 13.6965, -51.3728, 0.72 ) }
    dend_52 { pt3dadd( -94.3016, 13.6046, -51.781, 0.72 ) }
    dend_52 { pt3dadd( -95.1369, 13.5126, -52.1352, 0.72 ) }
    dend_52 { pt3dadd( -97.1274, 13.2522, -52.8274, 0.6 ) }
    dend_52 { pt3dadd( -97.8333, 13.1182, -53.0719, 0.6 ) }
    dend_52 { pt3dadd( -99.0581, 12.7594, -53.4609, 1.08 ) }
    dend_52 { pt3dadd( -100.086, 12.3683, -53.7586, 1.08 ) }
    dend_52 { pt3dadd( -100.869, 12.0733, -53.9002, 1.08 ) }
    dend_52 { pt3dadd( -101.761, 11.7326, -54.0243, 1.08 ) }
    dend_52 { pt3dadd( -103.059, 11.2083, -54.1406, 1.08 ) }
    dend_52 { pt3dadd( -104.454, 10.5901, -54.2621, 0.84 ) }
    dend_52 { pt3dadd( -105.451, 10.0986, -54.3399, 0.84 ) }
    dend_52 { pt3dadd( -108.045, 8.66973, -54.5503, 1.2 ) }
    dend_52 { pt3dadd( -109.802, 7.66072, -54.6928, 1.2 ) }
    dend_52 { pt3dadd( -110.951, 6.93966, -54.8172, 1.2 ) }
    dend_52 { pt3dadd( -112.193, 6.08242, -54.9257, 0.96 ) }
    dend_52 { pt3dadd( -113.39, 5.13136, -54.9955, 0.96 ) }
    dend_52 { pt3dadd( -114.785, 3.71672, -55.1002, 1.2 ) }
    dend_52 { pt3dadd( -115.131, 3.23657, -55.1522, 1.2 ) }
    dend_52 { pt3dadd( -115.914, 2.00236, -55.2406, 1.08 ) }
    dend_52 { pt3dadd( -116.836, 0.349623, -55.3819, 0.96 ) }
    dend_52 { pt3dadd( -117.619, -1.31119, -55.5551, 1.2 ) }
    dend_52 { pt3dadd( -118.597, -3.75879, -55.8674, 0.96 ) }
    dend_52 { pt3dadd( -119.003, -4.93603, -56.0563, 0.84 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 58/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -62.2738, 15.614, -37.5194, 0.6 ) }
    dend_51 { pt3dadd( -62.4301, 14.3725, -37.2588, 0.6 ) }
    dend_51 { pt3dadd( -62.5317, 13.5663, -37.0896, 0.72 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 61/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -30.3871, 13.3232, -19.1737, 0.84 ) }
    dend_49 { pt3dadd( -31.2148, 13.2479, -19.5734, 0.84 ) }
    dend_49 { pt3dadd( -31.5219, 13.2558, -19.7961, 0.84 ) }
    dend_49 { pt3dadd( -32.0574, 13.2857, -20.2613, 0.84 ) }
    dend_49 { pt3dadd( -32.4502, 13.3076, -20.6026, 0.84 ) }
    dend_49 { pt3dadd( -33.2138, 13.3502, -21.266, 0.84 ) }
    dend_49 { pt3dadd( -34.6798, 13.432, -22.5397, 0.84 ) }
    dend_49 { pt3dadd( -36.5275, 13.5197, -24.2377, 1.2 ) }
    dend_49 { pt3dadd( -37.4053, 13.5868, -25.1066, 1.08 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 70/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -30.3871, 13.3232, -19.1737, 0.6 ) }
    dend_48 { pt3dadd( -30.6133, 14.3292, -20.1149, 0.6 ) }
    dend_48 { pt3dadd( -30.6787, 14.6368, -20.412, 0.6 ) }
    dend_48 { pt3dadd( -30.7926, 15.3702, -21.0989, 0.84 ) }
    dend_48 { pt3dadd( -30.9295, 16.7176, -22.2371, 0.72 ) }
    dend_48 { pt3dadd( -30.9237, 17.1411, -22.5595, 0.72 ) }
    dend_48 { pt3dadd( -30.6588, 18.8173, -24.0624, 0.72 ) }
    dend_48 { pt3dadd( -30.5428, 19.219, -24.6128, 0.72 ) }
    dend_48 { pt3dadd( -30.4458, 19.5349, -25.1255, 0.84 ) }
    dend_48 { pt3dadd( -30.3027, 19.9839, -25.959, 0.84 ) }
    dend_48 { pt3dadd( -29.9597, 20.7845, -27.5168, 0.72 ) }
    dend_48 { pt3dadd( -29.2682, 22.1033, -30.219, 0.96 ) }
    dend_48 { pt3dadd( -28.3527, 23.3731, -33.516, 0.96 ) }
    dend_48 { pt3dadd( -28.0634, 23.6926, -34.5135, 0.96 ) }
    dend_48 { pt3dadd( -27.8505, 23.8804, -35.2014, 0.96 ) }
    dend_48 { pt3dadd( -27.0098, 24.3981, -37.6009, 0.96 ) }
    dend_48 { pt3dadd( -26.2496, 24.6441, -39.3114, 0.84 ) }
    dend_48 { pt3dadd( -24.5616, 24.9069, -41.9549, 0.96 ) }
    dend_48 { pt3dadd( -23.9756, 24.9454, -42.6016, 0.96 ) }
    dend_48 { pt3dadd( -23.6369, 24.962, -42.9587, 0.72 ) }
    dend_48 { pt3dadd( -22.8683, 24.9549, -43.7014, 0.72 ) }
    dend_48 { pt3dadd( -21.2085, 24.7698, -45.1542, 0.72 ) }
    dend_48 { pt3dadd( -20.819, 24.7257, -45.4561, 0.72 ) }
    dend_48 { pt3dadd( -19.6695, 24.7108, -46.2125, 0.72 ) }
    dend_48 { pt3dadd( -17.6227, 24.6982, -47.8184, 0.84 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 95/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -54.1387, -11.3681, 12.2312, 0.96 ) }
    dend_45 { pt3dadd( -55.0831, -11.598, 12.2193, 0.96 ) }
    dend_45 { pt3dadd( -56.579, -12.0445, 12.2058, 0.96 ) }
    dend_45 { pt3dadd( -58.0103, -12.4254, 12.1578, 0.96 ) }
    dend_45 { pt3dadd( -59.6053, -12.7989, 12.2065, 0.72 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_45 { pt3dadd( -60.9305, -13.0965, 12.3095, 0.72 ) }
    dend_45 { pt3dadd( -62.5444, -13.4819, 12.4704, 0.72 ) }
    dend_45 { pt3dadd( -64.7686, -14.0533, 12.7554, 1.2 ) }
    dend_45 { pt3dadd( -66.0991, -14.4384, 12.9451, 1.2 ) }
    dend_45 { pt3dadd( -68.9068, -15.2703, 13.3667, 0.84 ) }
    dend_45 { pt3dadd( -70.6659, -15.7847, 13.6345, 0.84 ) }
    dend_45 { pt3dadd( -72.4678, -16.306, 13.8786, 0.84 ) }
    dend_45 { pt3dadd( -73.0485, -16.4676, 13.9424, 0.84 ) }
    dend_45 { pt3dadd( -75.7104, -17.1975, 14.1513, 1.08 ) }
    dend_45 { pt3dadd( -77.1096, -17.5518, 14.2185, 1.08 ) }
    dend_45 { pt3dadd( -78.125, -17.7472, 14.2214, 1.08 ) }
    dend_45 { pt3dadd( -80.7722, -18.1014, 14.1485, 1.56 ) }
    dend_45 { pt3dadd( -83.3972, -18.34, 14.0003, 1.08 ) }
    dend_45 { pt3dadd( -85.7008, -18.5236, 13.8172, 0.72 ) }
    dend_45 { pt3dadd( -86.9742, -18.6068, 13.6838, 0.72 ) }
    dend_45 { pt3dadd( -88.8626, -18.7127, 13.4526, 0.6 ) }
    dend_45 { pt3dadd( -90.9589, -18.7857, 13.1477, 0.96 ) }
    dend_45 { pt3dadd( -92.2091, -18.8326, 12.9258, 0.96 ) }
    dend_45 { pt3dadd( -93.0904, -18.9131, 12.7379, 0.96 ) }
    dend_45 { pt3dadd( -93.4562, -18.9718, 12.6557, 0.96 ) }
    dend_45 { pt3dadd( -94.6565, -19.2764, 12.4104, 0.96 ) }
    dend_45 { pt3dadd( -96.1739, -19.7664, 12.1551, 0.96 ) }
    dend_45 { pt3dadd( -96.7422, -19.9545, 12.1136, 0.96 ) }
    dend_45 { pt3dadd( -97.1637, -20.1089, 12.1229, 0.96 ) }
    dend_45 { pt3dadd( -98.0793, -20.476, 12.185, 0.96 ) }
    dend_45 { pt3dadd( -99.1415, -20.9851, 12.2941, 0.96 ) }
    dend_45 { pt3dadd( -99.9473, -21.4601, 12.3742, 0.96 ) }
    dend_45 { pt3dadd( -100.457, -21.8113, 12.3932, 0.96 ) }
    dend_45 { pt3dadd( -102.119, -23.1381, 12.2636, 0.6 ) }
    dend_45 { pt3dadd( -102.938, -23.9649, 12.0801, 0.6 ) }
    dend_45 { pt3dadd( -103.584, -24.7232, 11.8705, 0.6 ) }
    dend_45 { pt3dadd( -104.292, -25.7281, 11.5109, 0.96 ) }
    dend_45 { pt3dadd( -105.235, -27.4609, 10.6787, 0.36 ) }
    dend_45 { pt3dadd( -105.546, -28.3916, 10.0828, 1.32 ) }
    dend_45 { pt3dadd( -105.585, -29.1166, 9.42472, 1.32 ) }
    dend_45 { pt3dadd( -114.284, -33.8941, 8.19476, 1.32 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 36/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -54.1387, -11.3681, 12.2312, 0.84 ) }
    dend_44 { pt3dadd( -54.6761, -9.98558, 11.492, 0.84 ) }
    dend_44 { pt3dadd( -55.1491, -8.49676, 10.5549, 0.84 ) }
    dend_44 { pt3dadd( -55.3337, -7.85114, 10.1349, 0.84 ) }
    dend_44 { pt3dadd( -55.7576, -6.64133, 9.43629, 0.84 ) }
    dend_44 { pt3dadd( -56.2393, -5.40159, 8.74176, 0.84 ) }
    dend_44 { pt3dadd( -56.8363, -4.03113, 7.9458, 0.84 ) }
    dend_44 { pt3dadd( -57.9358, -1.84643, 6.88715, 1.32 ) }
    dend_44 { pt3dadd( -58.8515, -0.399115, 6.4311, 1.32 ) }
    dend_44 { pt3dadd( -60.5292, 1.57092, 6.20528, 1.32 ) }
    dend_44 { pt3dadd( -61.2847, 2.20608, 6.30455, 1.32 ) }
    dend_44 { pt3dadd( -63.6485, 3.54793, 7.12767, 0.96 ) }
    dend_44 { pt3dadd( -68.1569, 4.97296, 9.36414, 0.96 ) }
    dend_44 { pt3dadd( -70.2441, 5.17458, 10.4592, 0.96 ) }
    dend_44 { pt3dadd( -71.4204, 5.09618, 11.0531, 0.96 ) }
    dend_44 { pt3dadd( -72.6344, 4.86352, 11.5797, 0.72 ) }
    dend_44 { pt3dadd( -74.2591, 4.50344, 12.0899, 1.2 ) }
    dend_44 { pt3dadd( -75.3059, 4.18431, 12.3584, 1.2 ) }
    dend_44 { pt3dadd( -77.7156, 3.36806, 12.3267, 0.84 ) }
    dend_44 { pt3dadd( -78.5547, 3.10957, 12.231, 0.84 ) }
    dend_44 { pt3dadd( -80.3433, 2.6716, 11.9494, 1.32 ) }
    dend_44 { pt3dadd( -83.628, 2.26756, 11.2662, 0.96 ) }
    dend_44 { pt3dadd( -92.7597, 6.3272, 10.9036, 0.96 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 105.378, -12.3967, 0.54879, 0.72 ) }
    dend_35 { pt3dadd( 106.735, -12.6132, 0.356932, 0.72 ) }
    dend_35 { pt3dadd( 108.4, -12.8001, 0.148199, 0.72 ) }
    dend_35 { pt3dadd( 109.33, -12.8502, 0.0411231, 0.72 ) }
    dend_35 { pt3dadd( 109.499, -12.8478, 0.0241769, 0.72 ) }
    dend_35 { pt3dadd( 110.36, -12.8052, -0.0501908, 0.72 ) }
    dend_35 { pt3dadd( 111.562, -12.747, -0.135187, 0.72 ) }
    dend_35 { pt3dadd( 112.068, -12.6979, -0.15567, 0.72 ) }
    dend_35 { pt3dadd( 112.604, -12.667, -0.164612, 0.72 ) }
    dend_35 { pt3dadd( 113.635, -12.6689, -0.164612, 0.72 ) }
    dend_35 { pt3dadd( 114.479, -12.741, -0.164612, 0.72 ) }
    dend_35 { pt3dadd( 115.934, -13.0192, -0.264131, 0.72 ) }
    dend_35 { pt3dadd( 117.178, -13.4324, -0.418256, 0.72 ) }
    dend_35 { pt3dadd( 118.19, -13.8857, -0.647052, 0.96 ) }
    dend_35 { pt3dadd( 118.687, -14.1726, -0.791462, 0.96 ) }
    dend_35 { pt3dadd( 119.856, -14.9702, -1.2012, 0.96 ) }
    dend_35 { pt3dadd( 121.323, -16.102, -1.77445, 0.96 ) }
    dend_35 { pt3dadd( 122.178, -16.8294, -2.1394, 0.96 ) }
    dend_35 { pt3dadd( 123.738, -18.2031, -2.81976, 0.96 ) }
    dend_35 { pt3dadd( 125.374, -19.6234, -3.52299, 0.96 ) }
    dend_35 { pt3dadd( 126.319, -20.4007, -3.8975, 0.96 ) }
    dend_35 { pt3dadd( 127.063, -20.9823, -4.11511, 0.96 ) }
    dend_35 { pt3dadd( 127.332, -21.1868, -4.1507, 0.96 ) }
    dend_35 { pt3dadd( 128.004, -21.6898, -4.15552, 0.96 ) }
    dend_35 { pt3dadd( 128.196, -21.8298, -4.11861, 0.96 ) }
    dend_35 { pt3dadd( 128.795, -22.2142, -3.94833, 0.96 ) }
    dend_35 { pt3dadd( 130.171, -22.9524, -3.51575, 0.96 ) }
    dend_35 { pt3dadd( 130.934, -23.2936, -3.29629, 0.96 ) }
    dend_35 { pt3dadd( 131.9, -23.6976, -3.05284, 0.96 ) }
    dend_35 { pt3dadd( 132.346, -23.8904, -2.9566, 0.96 ) }
    dend_35 { pt3dadd( 132.897, -24.139, -2.86495, 0.96 ) }
    dend_35 { pt3dadd( 133.837, -24.5665, -2.77865, 0.96 ) }
    dend_35 { pt3dadd( 134.285, -24.7381, -2.79529, 0.96 ) }
    dend_35 { pt3dadd( 134.947, -24.9618, -2.83702, 0.96 ) }
    dend_35 { pt3dadd( 135.451, -25.1111, -2.88226, 0.96 ) }
    dend_35 { pt3dadd( 136.131, -25.2731, -2.95367, 0.96 ) }
    dend_35 { pt3dadd( 136.66, -25.3624, -3.01249, 0.96 ) }
    dend_35 { pt3dadd( 137.931, -25.5371, -3.15035, 0.84 ) }
    dend_35 { pt3dadd( 138.536, -25.5665, -3.24146, 0.84 ) }
    dend_35 { pt3dadd( 139.462, -25.5737, -3.39562, 0.84 ) }
    dend_35 { pt3dadd( 140.257, -25.5847, -3.53163, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( 141.206, -25.6419, -3.76049, 1.2 ) }
    dend_35 { pt3dadd( 142.133, -25.7316, -4.02029, 1.2 ) }
    dend_35 { pt3dadd( 143.978, -25.9732, -4.58639, 0.96 ) }
    dend_35 { pt3dadd( 145.069, -26.1028, -5.01993, 0.96 ) }
    dend_35 { pt3dadd( 145.845, -26.1946, -5.37382, 0.96 ) }
    dend_35 { pt3dadd( 147.999, -26.4174, -6.46071, 0.96 ) }
    dend_35 { pt3dadd( 148.644, -26.4412, -6.8606, 0.96 ) }
    dend_35 { pt3dadd( 148.952, -26.4229, -7.08181, 0.96 ) }
    dend_35 { pt3dadd( 150.843, -26.0919, -8.66036, 0.96 ) }
    dend_35 { pt3dadd( 151.451, -25.924, -9.21466, 0.96 ) }
    dend_35 { pt3dadd( 151.623, -25.8682, -9.37289, 1.32 ) }
    dend_35 { pt3dadd( 153.09, -25.3361, -10.7327, 0.96 ) }
    dend_35 { pt3dadd( 153.36, -25.2543, -10.9788, 0.96 ) }
    dend_35 { pt3dadd( 155.279, -24.7948, -12.606, 0.96 ) }
    dend_35 { pt3dadd( 155.551, -24.7491, -12.8151, 0.96 ) }
    dend_35 { pt3dadd( 156.164, -24.6714, -13.2611, 0.96 ) }
    dend_35 { pt3dadd( 157.6, -24.5373, -14.1833, 0.96 ) }
    dend_35 { pt3dadd( 158.37, -24.4953, -14.594, 0.96 ) }
    dend_35 { pt3dadd( 158.795, -24.4942, -14.8175, 0.96 ) }
    dend_35 { pt3dadd( 159.432, -24.5292, -15.1298, 0.96 ) }
    dend_35 { pt3dadd( 161.051, -24.6866, -15.9836, 0.96 ) }
    dend_35 { pt3dadd( 161.613, -24.7659, -16.292, 0.96 ) }
    dend_35 { pt3dadd( 161.846, -24.8184, -16.4143, 1.2 ) }
    dend_35 { pt3dadd( 163.141, -25.195, -17.0832, 0.96 ) }
    dend_35 { pt3dadd( 163.718, -25.4146, -17.3651, 0.96 ) }
    dend_35 { pt3dadd( 164.949, -25.9665, -17.9354, 0.96 ) }
    dend_35 { pt3dadd( 165.145, -26.0737, -18.0232, 0.96 ) }
    dend_35 { pt3dadd( 165.844, -26.4893, -18.3421, 0.96 ) }
    dend_35 { pt3dadd( 166.731, -27.0166, -18.723, 1.2 ) }
    dend_35 { pt3dadd( 167.153, -27.2358, -18.8595, 1.08 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 30/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 105.378, -12.3967, 0.54879, 0.84 ) }
    dend_34 { pt3dadd( 106.059, -12.9618, 1.18161, 0.84 ) }
    dend_34 { pt3dadd( 107.13, -14.0931, 2.2041, 0.84 ) }
    dend_34 { pt3dadd( 107.288, -14.26, 2.35494, 0.84 ) }
    dend_34 { pt3dadd( 108.114, -15.1317, 3.14272, 0.84 ) }
    dend_34 { pt3dadd( 108.735, -15.7872, 3.7352, 0.84 ) }
    dend_34 { pt3dadd( 109.653, -16.7563, 4.61102, 0.72 ) }
    dend_34 { pt3dadd( 111.133, -18.1349, 5.89919, 1.2 ) }
    dend_34 { pt3dadd( 117.304, -23.5261, 11.6309, 1.2 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 39/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 24.5567, 16.9491, -25.9285, 1.2 ) }
    dend_19 { pt3dadd( 26.5877, 16.9263, -25.3049, 1.2 ) }
    dend_19 { pt3dadd( 27.5054, 16.916, -25.0231, 1.2 ) }
    dend_19 { pt3dadd( 29.2301, 16.8967, -24.4936, 1.2 ) }
    dend_19 { pt3dadd( 30.3546, 16.8841, -24.1483, 1.44 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 44/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 24.5567, 16.9491, -25.9285, 0.96 ) }
    dend_18 { pt3dadd( 25.0908, 17.8195, -27.4213, 0.96 ) }
    dend_18 { pt3dadd( 25.7223, 18.9085, -29.3475, 0.96 ) }
    dend_18 { pt3dadd( 26.2804, 19.9165, -31.0692, 0.96 ) }
    dend_18 { pt3dadd( 26.6618, 20.687, -32.4515, 0.96 ) }
    dend_18 { pt3dadd( 27.2808, 22.1602, -35.3015, 0.96 ) }
    dend_18 { pt3dadd( 27.7463, 23.4464, -38.0245, 0.96 ) }
    dend_18 { pt3dadd( 27.9959, 24.3337, -40.3684, 0.96 ) }
    dend_18 { pt3dadd( 28.0676, 24.5742, -41.1973, 0.96 ) }
    dend_18 { pt3dadd( 28.3097, 25.1679, -44.0094, 1.32 ) }
    dend_18 { pt3dadd( 28.5404, 25.4652, -46.4404, 1.32 ) }
    dend_18 { pt3dadd( 28.8369, 25.489, -49.1168, 1.32 ) }
    dend_18 { pt3dadd( 29.1213, 25.2073, -51.652, 1.32 ) }
    dend_18 { pt3dadd( 29.3699, 24.7432, -53.7624, 1.32 ) }
    dend_18 { pt3dadd( 29.5233, 24.3124, -55.1672, 1.08 ) }
    dend_18 { pt3dadd( 29.7379, 23.589, -57.0518, 0.84 ) }
    dend_18 { pt3dadd( 29.845, 22.9459, -58.5979, 0.84 ) }
    dend_18 { pt3dadd( 29.8465, 22.3894, -60.0651, 0.84 ) }
    dend_18 { pt3dadd( 29.7341, 21.8979, -61.4281, 0.84 ) }
    dend_18 { pt3dadd( 29.438, 21.4067, -62.9761, 0.84 ) }
    dend_18 { pt3dadd( 29.1214, 21.1348, -64.1141, 0.84 ) }
    dend_18 { pt3dadd( 28.4288, 20.9174, -66.152, 0.84 ) }
    dend_18 { pt3dadd( 27.6919, 20.9435, -68.2515, 0.84 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 67/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.92299, 18.245, -21.5747, 1.08 ) }
    dend_14 { pt3dadd( 7.44281, 17.8411, -23.3785, 1.08 ) }
    dend_14 { pt3dadd( 7.21467, 17.7868, -24.1426, 0.84 ) }
    dend_14 { pt3dadd( 6.64268, 17.8349, -26.022, 0.84 ) }
    dend_14 { pt3dadd( 6.16364, 17.875, -27.5961, 0.96 ) }
    dend_14 { pt3dadd( 5.65441, 17.9178, -29.2694, 1.2 ) }
    dend_14 { pt3dadd( 5.05817, 17.9678, -31.2285, 1.32 ) }
    dend_14 { pt3dadd( 4.23366, 18.1903, -33.6353, 1.2 ) }
    dend_14 { pt3dadd( 3.26672, 18.6299, -36.37, 1.2 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 7.92299, 18.245, -21.5747, 1.2 ) }
    dend_13 { pt3dadd( 8.08243, 19.3358, -22.6284, 1.2 ) }
    dend_13 { pt3dadd( 8.09356, 21.2631, -24.6307, 1.2 ) }
    dend_13 { pt3dadd( 8.05859, 21.8209, -25.2832, 1.2 ) }
    dend_13 { pt3dadd( 7.96519, 23.0961, -26.8144, 1.2 ) }
    dend_13 { pt3dadd( 7.87437, 24.0252, -27.9558, 1.56 ) }
    dend_13 { pt3dadd( 7.69983, 25.0809, -29.275, 1.2 ) }
    dend_13 { pt3dadd( 7.2597, 26.7101, -31.3817, 1.2 ) }
    dend_13 { pt3dadd( 6.64417, 28.2764, -33.4472, 0.96 ) }
    dend_13 { pt3dadd( 5.90351, 29.6403, -35.2763, 0.96 ) }
    dend_13 { pt3dadd( 5.67583, 29.9601, -35.7143, 0.96 ) }
    dend_13 { pt3dadd( 4.83286, 30.929, -37.0869, 1.44 ) }
    dend_13 { pt3dadd( 3.61205, 32.1276, -38.7143, 0.84 ) }
    dend_13 { pt3dadd( 3.14315, 32.5209, -39.1917, 0.84 ) }
    dend_13 { pt3dadd( 2.02055, 33.3233, -40.0523, 1.2 ) }
    dend_13 { pt3dadd( 1.01828, 33.9459, -40.7021, 0.84 ) }
    dend_13 { pt3dadd( 0.462587, 34.2806, -41.0368, 0.84 ) }
    dend_13 { pt3dadd( -0.471037, 34.8133, -41.5778, 0.84 ) }
    dend_13 { pt3dadd( -1.45734, 35.3381, -42.0966, 0.84 ) }
    dend_13 { pt3dadd( -2.22412, 35.6992, -42.4783, 0.84 ) }
    dend_13 { pt3dadd( -3.96468, 36.3619, -43.2896, 0.84 ) }
    dend_13 { pt3dadd( -4.9783, 36.6419, -43.6884, 0.84 ) }
    dend_13 { pt3dadd( -6.71954, 36.9634, -44.2978, 0.84 ) }
    dend_13 { pt3dadd( -7.95616, 37.0491, -44.6875, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( -9.81917, 36.9791, -45.2053, 0.6 ) }
    dend_13 { pt3dadd( -11.1959, 36.7925, -45.5457, 0.84 ) }
    dend_13 { pt3dadd( -12.9411, 36.4029, -45.9047, 0.84 ) }
    dend_13 { pt3dadd( -13.704, 36.1851, -46.0406, 0.84 ) }
    dend_13 { pt3dadd( -15.5878, 35.562, -46.3033, 0.48 ) }
    dend_13 { pt3dadd( -16.9827, 35.0623, -46.495, 0.48 ) }
    dend_13 { pt3dadd( -18.2538, 34.6013, -46.6595, 0.72 ) }
    dend_13 { pt3dadd( -18.8213, 34.4152, -46.7172, 0.72 ) }
    dend_13 { pt3dadd( -19.5123, 34.2207, -46.7731, 0.72 ) }
    dend_13 { pt3dadd( -21.2627, 33.8106, -46.8609, 0.72 ) }
    dend_13 { pt3dadd( -21.8629, 33.702, -46.8702, 0.72 ) }
    dend_13 { pt3dadd( -23.0452, 33.5365, -46.8891, 0.96 ) }
    dend_13 { pt3dadd( -24.8496, 33.3517, -46.916, 0.96 ) }
    dend_13 { pt3dadd( -26.024, 33.2627, -46.9291, 0.96 ) }
    dend_13 { pt3dadd( -28.3285, 33.1481, -46.9512, 0.6 ) }
    dend_13 { pt3dadd( -29.2381, 33.1251, -46.9621, 0.6 ) }
    dend_13 { pt3dadd( -30.3828, 33.1431, -46.9745, 0.6 ) }
    dend_13 { pt3dadd( -32.185, 33.2181, -46.9995, 0.96 ) }
    dend_13 { pt3dadd( -33.7636, 33.2635, -47.0252, 0.96 ) }
    dend_13 { pt3dadd( -34.566, 33.2741, -47.0485, 0.96 ) }
    dend_13 { pt3dadd( -35.5474, 33.3054, -47.0769, 0.84 ) }
    dend_13 { pt3dadd( -37.1878, 33.3932, -47.0956, 1.08 ) }
    dend_13 { pt3dadd( -38.41, 33.4796, -47.0916, 1.08 ) }
    dend_13 { pt3dadd( -39.6351, 33.596, -47.0856, 0.6 ) }
    dend_13 { pt3dadd( -41.0138, 33.7215, -47.0722, 0.96 ) }
    dend_13 { pt3dadd( -42.2878, 33.8364, -47.0469, 0.96 ) }
    dend_13 { pt3dadd( -44.033, 34.0261, -46.9875, 0.48 ) }
    dend_13 { pt3dadd( -44.9388, 34.1407, -46.947, 0.48 ) }
    dend_13 { pt3dadd( -46.0844, 34.3676, -46.8715, 0.72 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 29/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.67749, 21.9692, -41.7805, 0.96 ) }
    dend_9 { pt3dadd( -0.350103, 21.6594, -41.7805, 0.96 ) }
    dend_9 { pt3dadd( -1.26029, 21.3335, -41.7441, 0.96 ) }
    dend_9 { pt3dadd( -2.51703, 20.8458, -41.6606, 1.32 ) }
    dend_9 { pt3dadd( -3.62839, 20.4452, -41.5452, 1.32 ) }
    dend_9 { pt3dadd( -4.44105, 20.1846, -41.4404, 1.32 ) }
    dend_9 { pt3dadd( -5.015, 20.0335, -41.3524, 1.32 ) }
    dend_9 { pt3dadd( -6.85887, 19.6364, -41.0151, 1.08 ) }
    dend_9 { pt3dadd( -7.65119, 19.4887, -40.8499, 1.08 ) }
    dend_9 { pt3dadd( -9.69208, 19.2484, -40.3882, 1.08 ) }
    dend_9 { pt3dadd( -10.7048, 19.1898, -40.1564, 1.08 ) }
    dend_9 { pt3dadd( -11.7678, 19.2059, -39.9243, 1.08 ) }
    dend_9 { pt3dadd( -12.7715, 19.2675, -39.7243, 1.08 ) }
    dend_9 { pt3dadd( -13.3079, 19.3066, -39.6321, 1.08 ) }
    dend_9 { pt3dadd( -14.4752, 19.3363, -39.4427, 1.08 ) }
    dend_9 { pt3dadd( -15.8653, 19.2794, -39.2409, 1.08 ) }
    dend_9 { pt3dadd( -16.8462, 19.193, -39.1313, 1.08 ) }
    dend_9 { pt3dadd( -17.7614, 19.0659, -39.087, 0.72 ) }
    dend_9 { pt3dadd( -18.7076, 18.9164, -39.1275, 0.72 ) }
    dend_9 { pt3dadd( -19.858, 18.7309, -39.2633, 1.08 ) }
    dend_9 { pt3dadd( -20.801, 18.5816, -39.4304, 1.08 ) }
    dend_9 { pt3dadd( -21.8911, 18.4591, -39.6745, 1.08 ) }
    dend_9 { pt3dadd( -23.3589, 18.448, -40.0484, 1.08 ) }
    dend_9 { pt3dadd( -24.8611, 18.6123, -40.4629, 0.96 ) }
    dend_9 { pt3dadd( -26.0242, 18.8918, -40.8576, 0.96 ) }
    dend_9 { pt3dadd( -26.8388, 19.1592, -41.1739, 0.96 ) }
    dend_9 { pt3dadd( -27.4566, 19.3941, -41.4037, 0.96 ) }
    dend_9 { pt3dadd( -28.4299, 19.8011, -41.7105, 0.96 ) }
    dend_9 { pt3dadd( -29.0486, 20.0681, -41.8644, 0.96 ) }
    dend_9 { pt3dadd( -30.4156, 20.5755, -42.1464, 0.84 ) }
    dend_9 { pt3dadd( -31.6597, 20.9559, -42.3999, 0.84 ) }
    dend_9 { pt3dadd( -32.9342, 21.2785, -42.6344, 0.84 ) }
    dend_9 { pt3dadd( -33.8691, 21.4783, -42.7824, 0.84 ) }
    dend_9 { pt3dadd( -34.9487, 21.68, -42.9165, 0.84 ) }
    dend_9 { pt3dadd( -35.8635, 21.8302, -42.9845, 0.84 ) }
    dend_9 { pt3dadd( -37.0378, 22.0189, -42.9952, 0.84 ) }
    dend_9 { pt3dadd( -38.0927, 22.1905, -43.0132, 0.84 ) }
    dend_9 { pt3dadd( -38.7821, 22.3092, -43.0268, 0.84 ) }
    dend_9 { pt3dadd( -39.8781, 22.5189, -43.049, 0.84 ) }
    dend_9 { pt3dadd( -40.4493, 22.649, -43.0608, 0.84 ) }
    dend_9 { pt3dadd( -41.2823, 22.8179, -43.074, 0.84 ) }
    dend_9 { pt3dadd( -43.138, 23.0529, -43.1069, 1.2 ) }
    dend_9 { pt3dadd( -44.476, 23.1594, -43.135, 0.84 ) }
    dend_9 { pt3dadd( -44.8994, 23.1861, -43.1458, 0.84 ) }
    dend_9 { pt3dadd( -45.9309, 23.245, -43.1737, 1.08 ) }
    dend_9 { pt3dadd( -47.2789, 23.3362, -43.2059, 0.72 ) }
    dend_9 { pt3dadd( -48.0372, 23.3953, -43.212, 0.72 ) }
    dend_9 { pt3dadd( -49.3579, 23.5063, -43.2223, 1.2 ) }
    dend_9 { pt3dadd( -50.4933, 23.5997, -43.2494, 0.84 ) }
    dend_9 { pt3dadd( -51.689, 23.7054, -43.2896, 0.84 ) }
    dend_9 { pt3dadd( -52.3403, 23.7528, -43.3183, 0.84 ) }
    dend_9 { pt3dadd( -53.1053, 23.8111, -43.3605, 0.84 ) }
    dend_9 { pt3dadd( -54.7516, 23.8855, -43.4569, 0.84 ) }
    dend_9 { pt3dadd( -55.6637, 23.8741, -43.5135, 0.84 ) }
    dend_9 { pt3dadd( -56.509, 23.8223, -43.5653, 0.84 ) }
    dend_9 { pt3dadd( -57.6116, 23.7367, -43.6332, 0.84 ) }
    dend_9 { pt3dadd( -58.3032, 23.6818, -43.668, 1.08 ) }
    dend_9 { pt3dadd( -59.1741, 23.604, -43.7149, 1.08 ) }
    dend_9 { pt3dadd( -59.7829, 23.5492, -43.7422, 1.08 ) }
    dend_9 { pt3dadd( -60.5436, 23.4753, -43.8219, 0.96 ) }
    dend_9 { pt3dadd( -61.444, 23.4106, -43.9515, 0.96 ) }
    dend_9 { pt3dadd( -62.537, 23.374, -44.1295, 0.96 ) }
    dend_9 { pt3dadd( -63.8855, 23.3309, -44.3387, 0.96 ) }
    dend_9 { pt3dadd( -64.5745, 23.2963, -44.4398, 0.96 ) }
    dend_9 { pt3dadd( -65.9709, 23.1872, -44.6139, 0.96 ) }
    dend_9 { pt3dadd( -67.6396, 23.0468, -44.7478, 1.32 ) }
    dend_9 { pt3dadd( -68.7416, 22.9606, -44.7945, 1.32 ) }
    dend_9 { pt3dadd( -69.611, 22.906, -44.7998, 1.32 ) }
    dend_9 { pt3dadd( -70.1504, 22.8875, -44.7815, 1.32 ) }
    dend_9 { pt3dadd( -71.8318, 22.8568, -44.687, 1.56 ) }
    dend_9 { pt3dadd( -73.9048, 22.8407, -44.494, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_9 { pt3dadd( -74.6314, 22.833, -44.4256, 1.08 ) }
    dend_9 { pt3dadd( -75.5953, 22.8195, -44.3437, 0.96 ) }
    dend_9 { pt3dadd( -76.4438, 22.8204, -44.2923, 0.96 ) }
    dend_9 { pt3dadd( -77.2907, 22.8372, -44.2433, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 4/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 0.67749, 21.9692, -41.7805, 0.96 ) }
    dend_8 { pt3dadd( 0.348712, 22.5107, -42.4389, 0.96 ) }
    dend_8 { pt3dadd( 0.0838052, 23.2001, -43.4415, 0.96 ) }
    dend_8 { pt3dadd( -0.00356376, 23.3825, -43.8146, 0.96 ) }
    dend_8 { pt3dadd( -0.0956028, 23.5273, -44.1531, 0.96 ) }
    dend_8 { pt3dadd( -0.287913, 23.7714, -44.7687, 0.96 ) }
    dend_8 { pt3dadd( -0.936849, 24.4485, -46.5199, 0.96 ) }
    dend_8 { pt3dadd( -1.59945, 25.0142, -48.2665, 0.96 ) }
    dend_8 { pt3dadd( -2.36894, 25.6929, -50.462, 0.96 ) }
    dend_8 { pt3dadd( -2.59209, 25.9129, -51.1239, 0.96 ) }
    dend_8 { pt3dadd( -2.73407, 26.0723, -51.5743, 0.96 ) }
    dend_8 { pt3dadd( -2.98305, 26.385, -52.3619, 0.96 ) }
    dend_8 { pt3dadd( -4.11574, 27.8458, -55.5629, 1.08 ) }
    dend_8 { pt3dadd( -4.35001, 28.1651, -56.1532, 1.08 ) }
    dend_8 { pt3dadd( -4.64994, 28.7281, -56.9194, 1.08 ) }
    dend_8 { pt3dadd( -5.28976, 30.1784, -58.5853, 0.96 ) }
    dend_8 { pt3dadd( -5.46678, 30.6003, -58.9643, 0.96 ) }
    dend_8 { pt3dadd( -5.6219, 30.9573, -59.1531, 0.84 ) }
    dend_8 { pt3dadd( -5.82497, 31.3372, -59.1938, 0.84 ) }
    dend_8 { pt3dadd( -6.56568, 32.5117, -59.0461, 1.08 ) }
    dend_8 { pt3dadd( -6.91539, 32.963, -58.8547, 0.72 ) }
    dend_8 { pt3dadd( -7.68784, 33.852, -58.1739, 1.08 ) }
    dend_8 { pt3dadd( -8.55057, 34.8818, -57.1427, 0.84 ) }
    dend_8 { pt3dadd( -8.96864, 35.3647, -56.4656, 1.2 ) }
    dend_8 { pt3dadd( -9.97647, 36.3885, -54.5783, 0.72 ) }
    dend_8 { pt3dadd( -10.4614, 36.8333, -53.5677, 0.72 ) }
    dend_8 { pt3dadd( -11.1934, 37.4903, -51.926, 0.96 ) }
    dend_8 { pt3dadd( -11.8177, 38.0341, -50.4388, 0.96 ) }
    dend_8 { pt3dadd( -12.6749, 38.7448, -48.5833, 0.48 ) }
    dend_8 { pt3dadd( -13.1614, 39.1347, -47.6528, 0.48 ) }
    dend_8 { pt3dadd( -13.5117, 39.4215, -47.0739, 0.48 ) }
    dend_8 { pt3dadd( -14.1756, 39.93, -46.0959, 0.48 ) }
    dend_8 { pt3dadd( -14.922, 40.4478, -45.1949, 0.48 ) }
    dend_8 { pt3dadd( -16.2493, 41.4075, -43.8325, 1.32 ) }
    dend_8 { pt3dadd( -16.8369, 41.9184, -43.2584, 1.32 ) }
    dend_8 { pt3dadd( -17.4563, 42.4958, -42.6267, 0.84 ) }
    dend_8 { pt3dadd( -18.3631, 43.3058, -41.7044, 0.84 ) }
    dend_8 { pt3dadd( -18.8153, 43.6954, -41.3046, 0.84 ) }
    dend_8 { pt3dadd( -19.6282, 44.4463, -40.4611, 0.84 ) }
    dend_8 { pt3dadd( -20.2263, 45.1272, -39.5758, 1.08 ) }
    dend_8 { pt3dadd( -20.8538, 45.9029, -38.4132, 0.72 ) }
    dend_8 { pt3dadd( -21.4723, 46.659, -37.2029, 1.68 ) }
    dend_8 { pt3dadd( -22.1788, 47.5228, -35.6587, 1.68 ) }
    dend_8 { pt3dadd( -23.6596, 49.2617, -32.225, 1.2 ) }
    dend_8 { pt3dadd( -24.4665, 50.2368, -30.1084, 1.68 ) }
    dend_8 { pt3dadd( -24.999, 51.0152, -28.3508, 1.2 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 50/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 30.3546, 16.8841, -24.1483, 0.96 ) }
    dend_21 { pt3dadd( 31.332, 17.5937, -24.1711, 0.96 ) }
    dend_21 { pt3dadd( 31.9308, 17.9911, -24.1267, 0.96 ) }
    dend_21 { pt3dadd( 33.1928, 18.6651, -23.9871, 0.96 ) }
    dend_21 { pt3dadd( 33.5795, 18.8533, -23.9399, 0.96 ) }
    dend_21 { pt3dadd( 34.7719, 19.4505, -23.853, 0.84 ) }
    dend_21 { pt3dadd( 36.3465, 20.2346, -23.7823, 0.84 ) }
    dend_21 { pt3dadd( 37.1289, 20.6529, -23.7628, 0.84 ) }
    dend_21 { pt3dadd( 38.3479, 21.2922, -23.7439, 0.96 ) }
    dend_21 { pt3dadd( 39.0364, 21.6192, -23.7454, 0.96 ) }
    dend_21 { pt3dadd( 40.4745, 22.268, -23.7903, 0.96 ) }
    dend_21 { pt3dadd( 40.9129, 22.4587, -23.8333, 0.96 ) }
    dend_21 { pt3dadd( 42.2732, 23.2131, -24.2675, 1.32 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 63/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 30.3546, 16.8841, -24.1483, 0.96 ) }
    dend_20 { pt3dadd( 30.5147, 18.1115, -24.5687, 0.96 ) }
    dend_20 { pt3dadd( 30.6998, 19.1644, -24.8856, 0.96 ) }
    dend_20 { pt3dadd( 31.107, 20.6755, -25.3255, 0.96 ) }
    dend_20 { pt3dadd( 31.3594, 21.4102, -25.5511, 0.96 ) }
    dend_20 { pt3dadd( 31.6423, 22.2485, -25.9254, 0.96 ) }
    dend_20 { pt3dadd( 31.8685, 22.9988, -26.3114, 0.96 ) }
    dend_20 { pt3dadd( 32.0419, 23.728, -26.7272, 0.96 ) }
    dend_20 { pt3dadd( 32.3226, 25.2059, -27.6989, 0.96 ) }
    dend_20 { pt3dadd( 32.5117, 26.3824, -28.4912, 1.2 ) }
    dend_20 { pt3dadd( 32.8973, 28.955, -30.265, 1.08 ) }
    dend_20 { pt3dadd( 33.0589, 30.5415, -31.3962, 0.96 ) }
    dend_20 { pt3dadd( 33.1238, 32.4296, -32.8142, 0.96 ) }
    dend_20 { pt3dadd( 33.0147, 34.1782, -34.2036, 0.96 ) }
    dend_20 { pt3dadd( 32.8932, 35.0045, -34.9167, 0.96 ) }
    dend_20 { pt3dadd( 32.7221, 35.8182, -35.6489, 0.84 ) }
    dend_20 { pt3dadd( 32.403, 37.0386, -36.8252, 0.84 ) }
    dend_20 { pt3dadd( 32.1114, 37.9777, -37.8448, 1.08 ) }
    dend_20 { pt3dadd( 31.7349, 38.9777, -39.0446, 1.08 ) }
    dend_20 { pt3dadd( 31.1805, 40.1815, -40.5296, 0.84 ) }
    dend_20 { pt3dadd( 31.0044, 40.4771, -40.9415, 0.84 ) }
    dend_20 { pt3dadd( 30.4129, 41.4328, -42.3849, 0.84 ) }
    dend_20 { pt3dadd( 30.1254, 41.9352, -43.1508, 0.84 ) }
    dend_20 { pt3dadd( 29.7882, 42.5782, -44.1012, 0.84 ) }
    dend_20 { pt3dadd( 29.6073, 42.9025, -44.5852, 0.84 ) }
    dend_20 { pt3dadd( 28.8674, 44.0245, -46.2823, 0.84 ) }
    dend_20 { pt3dadd( 28.2538, 44.9831, -47.7928, 0.84 ) }
    dend_20 { pt3dadd( 28.0727, 45.2868, -48.2775, 0.84 ) }
    dend_20 { pt3dadd( 27.8308, 45.7845, -49.1104, 0.72 ) }
    dend_20 { pt3dadd( 27.6228, 46.5429, -50.3481, 0.72 ) }
    dend_20 { pt3dadd( 27.5965, 47.2509, -51.4391, 0.84 ) }
    dend_20 { pt3dadd( 27.74, 47.7251, -52.1021, 0.84 ) }
    dend_20 { pt3dadd( 27.9063, 48.0033, -52.4353, 0.84 ) }
    dend_20 { pt3dadd( 28.6454, 48.667, -52.9787, 0.84 ) }
    dend_20 { pt3dadd( 29.4902, 49.1129, -53.0743, 0.84 ) }
    dend_20 { pt3dadd( 29.9993, 49.3049, -53.0332, 0.84 ) }
    dend_20 { pt3dadd( 30.8506, 49.5401, -52.8931, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_20 { pt3dadd( 32.9326, 50.0402, -52.4373, 0.84 ) }
    dend_20 { pt3dadd( 33.8433, 50.2438, -52.2885, 0.84 ) }
    dend_20 { pt3dadd( 35.3296, 50.5261, -52.2567, 0.6 ) }
    dend_20 { pt3dadd( 36.3938, 50.6271, -52.1029, 0.6 ) }
    dend_20 { pt3dadd( 36.9902, 50.6618, -52.0282, 0.84 ) }
    dend_20 { pt3dadd( 37.4239, 50.6685, -51.9891, 0.84 ) }
    dend_20 { pt3dadd( 39.2574, 50.6203, -52.0633, 0.72 ) }
    dend_20 { pt3dadd( 41.0094, 50.5374, -52.1442, 0.72 ) }
    dend_20 { pt3dadd( 45.4139, 50.3233, -51.7519, 1.08 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 9/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 3.26672, 18.6299, -36.37, 0.84 ) }
    dend_16 { pt3dadd( 3.23748, 19.8518, -38.1904, 0.84 ) }
    dend_16 { pt3dadd( 3.05904, 21.1425, -40.0459, 0.84 ) }
    dend_16 { pt3dadd( 2.93928, 21.5662, -40.6524, 0.84 ) }
    dend_16 { pt3dadd( 2.77144, 21.9255, -41.229, 0.84 ) }
    dend_16 { pt3dadd( 2.39964, 22.5257, -42.4432, 1.08 ) }
    dend_16 { pt3dadd( 1.74597, 23.5032, -44.696, 1.08 ) }
    dend_16 { pt3dadd( 1.49765, 23.8094, -45.4663, 0.84 ) }
    dend_16 { pt3dadd( 1.02424, 24.3876, -47.0251, 0.84 ) }
    dend_16 { pt3dadd( 0.537941, 25.0123, -48.8458, 0.84 ) }
    dend_16 { pt3dadd( 0.0207208, 25.6608, -50.8438, 0.84 ) }
    dend_16 { pt3dadd( -0.475667, 26.205, -52.7255, 0.84 ) }
    dend_16 { pt3dadd( -0.659185, 26.4092, -53.4432, 0.84 ) }
    dend_16 { pt3dadd( -0.944128, 26.7858, -54.7965, 0.84 ) }
    dend_16 { pt3dadd( -1.2154, 27.2728, -56.3935, 0.84 ) }
    dend_16 { pt3dadd( -1.32249, 27.5414, -57.0557, 0.84 ) }
    dend_16 { pt3dadd( -1.99322, 28.7999, -59.5305, 0.96 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 26/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 3.26672, 18.6299, -36.37, 0.96 ) }
    dend_15 { pt3dadd( 2.37757, 19.6809, -38.7925, 0.96 ) }
    dend_15 { pt3dadd( 2.06106, 20.0009, -39.7021, 0.96 ) }
    dend_15 { pt3dadd( 1.75504, 20.2743, -40.5447, 0.96 ) }
    dend_15 { pt3dadd( 0.954412, 20.9097, -42.5399, 0.96 ) }
    dend_15 { pt3dadd( 0.694381, 21.1137, -43.147, 0.96 ) }
    dend_15 { pt3dadd( -0.814298, 22.3999, -46.7763, 0.96 ) }
    dend_15 { pt3dadd( -1.38084, 22.9137, -48.185, 0.96 ) }
    dend_15 { pt3dadd( -1.54586, 23.0737, -48.6065, 0.96 ) }
    dend_15 { pt3dadd( -1.80156, 23.4111, -49.3817, 0.96 ) }
    dend_15 { pt3dadd( -2.00383, 23.7358, -49.9917, 0.96 ) }
    dend_15 { pt3dadd( -2.52463, 24.6068, -51.5013, 0.96 ) }
    dend_15 { pt3dadd( -2.71179, 24.9699, -52.0942, 0.96 ) }
    dend_15 { pt3dadd( -2.92972, 25.3638, -52.8235, 0.96 ) }
    dend_15 { pt3dadd( -4.22995, 27.2677, -56.678, 0.96 ) }
    dend_15 { pt3dadd( -4.477, 27.5842, -57.3358, 0.96 ) }
    dend_15 { pt3dadd( -5.21321, 28.4207, -59.1053, 0.96 ) }
    dend_15 { pt3dadd( -5.88291, 29.1045, -60.5426, 0.96 ) }
    dend_15 { pt3dadd( -6.36349, 29.5863, -61.5899, 0.96 ) }
    dend_15 { pt3dadd( -7.16243, 30.2712, -63.2346, 0.84 ) }
    dend_15 { pt3dadd( -7.95306, 30.6991, -64.297, 0.84 ) }
    dend_15 { pt3dadd( -8.61393, 30.9689, -65.1583, 0.84 ) }
    dend_15 { pt3dadd( -9.16165, 31.0056, -65.5963, 0.84 ) }
    dend_15 { pt3dadd( -8.68377, 31.8948, -64.94, 0.84 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 50/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 42.2732, 23.2131, -24.2675, 0.72 ) }
    dend_23 { pt3dadd( 44.0945, 23.3209, -24.6016, 0.72 ) }
    dend_23 { pt3dadd( 45.5852, 23.409, -24.8751, 0.72 ) }
    dend_23 { pt3dadd( 47.0041, 23.493, -25.1354, 0.96 ) }
    dend_23 { pt3dadd( 48.3056, 23.5702, -25.3742, 0.96 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 55/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 42.2732, 23.2131, -24.2675, 0.96 ) }
    dend_22 { pt3dadd( 42.7144, 24.8819, -24.754, 0.96 ) }
    dend_22 { pt3dadd( 43.0227, 25.9995, -25.0475, 0.96 ) }
    dend_22 { pt3dadd( 43.4571, 27.6779, -25.508, 0.84 ) }
    dend_22 { pt3dadd( 43.6374, 28.437, -25.7151, 0.84 ) }
    dend_22 { pt3dadd( 43.8069, 29.2341, -25.9249, 0.84 ) }
    dend_22 { pt3dadd( 44.1239, 30.9314, -26.3721, 0.84 ) }
    dend_22 { pt3dadd( 44.278, 31.8444, -26.585, 0.84 ) }
    dend_22 { pt3dadd( 44.4885, 32.9812, -26.8595, 0.84 ) }
    dend_22 { pt3dadd( 44.614, 33.5489, -27.0159, 0.84 ) }
    dend_22 { pt3dadd( 44.831, 34.313, -27.2847, 0.84 ) }
    dend_22 { pt3dadd( 45.1808, 35.4776, -27.7552, 0.84 ) }
    dend_22 { pt3dadd( 45.3195, 35.9114, -27.9667, 0.84 ) }
    dend_22 { pt3dadd( 45.4695, 36.366, -28.2094, 0.84 ) }
    dend_22 { pt3dadd( 45.9176, 37.7337, -28.9441, 0.84 ) }
    dend_22 { pt3dadd( 46.3369, 39.0365, -29.6833, 1.2 ) }
    dend_22 { pt3dadd( 46.5266, 39.8064, -30.171, 0.84 ) }
    dend_22 { pt3dadd( 46.7013, 40.9062, -30.9839, 0.84 ) }
    dend_22 { pt3dadd( 46.7631, 41.5856, -31.5141, 0.84 ) }
    dend_22 { pt3dadd( 46.7793, 42.0479, -31.8837, 0.84 ) }
    dend_22 { pt3dadd( 46.7665, 43.4635, -32.9569, 0.84 ) }
    dend_22 { pt3dadd( 46.8306, 44.7206, -33.9167, 0.84 ) }
    dend_22 { pt3dadd( 47.1146, 46.3674, -35.2291, 0.84 ) }
    dend_22 { pt3dadd( 47.2252, 46.7728, -35.5629, 0.84 ) }
    dend_22 { pt3dadd( 47.7417, 48.059, -36.6486, 0.84 ) }
    dend_22 { pt3dadd( 48.2552, 48.9943, -37.4086, 0.84 ) }
    dend_22 { pt3dadd( 49.2436, 50.2174, -38.3181, 0.84 ) }
    dend_22 { pt3dadd( 49.9109, 50.7854, -38.6001, 0.84 ) }
    dend_22 { pt3dadd( 50.1892, 50.9734, -38.6481, 0.84 ) }
    dend_22 { pt3dadd( 51.3271, 51.6001, -38.6583, 0.84 ) }
    dend_22 { pt3dadd( 52.1796, 51.9462, -38.5171, 0.84 ) }
    dend_22 { pt3dadd( 53.414, 52.3922, -38.2539, 0.84 ) }
    dend_22 { pt3dadd( 55.6272, 53.1904, -37.5273, 0.84 ) }
    dend_22 { pt3dadd( 55.9551, 53.3027, -37.3978, 0.84 ) }
    dend_22 { pt3dadd( 57.3603, 53.7458, -36.8047, 1.08 ) }
    dend_22 { pt3dadd( 58.7774, 54.1412, -36.227, 1.08 ) }
    dend_22 { pt3dadd( 60.1238, 54.4505, -35.629, 0.72 ) }
    dend_22 { pt3dadd( 61.6017, 54.7615, -34.9542, 0.72 ) }
    dend_22 { pt3dadd( 63.2948, 55.055, -34.2827, 0.72 ) }
    dend_22 { pt3dadd( 64.1365, 55.1912, -33.9536, 0.72 ) }
    dend_22 { pt3dadd( 65.4232, 55.4136, -33.4743, 0.72 ) }
    dend_22 { pt3dadd( 67.5291, 55.8222, -32.6652, 0.72 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 97/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 48.3056, 23.5702, -25.3742, 1.08 ) }
    dend_25 { pt3dadd( 49.5313, 22.7731, -24.6097, 1.08 ) }
    dend_25 { pt3dadd( 50.09, 22.4555, -24.2242, 1.08 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_25 { pt3dadd( 51.3795, 21.7894, -23.3778, 0.84 ) }
    dend_25 { pt3dadd( 52.1294, 21.4058, -22.9174, 0.84 ) }
    dend_25 { pt3dadd( 53.6318, 20.617, -21.9403, 0.84 ) }
    dend_25 { pt3dadd( 54.0983, 20.372, -21.6369, 0.84 ) }
    dend_25 { pt3dadd( 56.0259, 19.5265, -20.3102, 0.84 ) }
    dend_25 { pt3dadd( 56.6931, 19.264, -19.8589, 0.84 ) }
    dend_25 { pt3dadd( 57.4492, 18.9836, -19.3776, 1.08 ) }
    dend_25 { pt3dadd( 58.9003, 18.2971, -18.3908, 0.84 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 48.3056, 23.5702, -25.3742, 0.72 ) }
    dend_24 { pt3dadd( 49.335, 24.3216, -25.4791, 0.72 ) }
    dend_24 { pt3dadd( 50.0154, 24.7474, -25.5409, 0.72 ) }
    dend_24 { pt3dadd( 51.3209, 25.4795, -25.6459, 0.72 ) }
    dend_24 { pt3dadd( 52.1702, 25.9353, -25.7294, 0.72 ) }
    dend_24 { pt3dadd( 53.3576, 26.5921, -25.8541, 0.72 ) }
    dend_24 { pt3dadd( 54.3264, 27.1555, -26.0541, 0.72 ) }
    dend_24 { pt3dadd( 55.5081, 27.8451, -26.3719, 0.72 ) }
    dend_24 { pt3dadd( 56.2982, 28.3661, -26.6608, 0.72 ) }
    dend_24 { pt3dadd( 57.8304, 29.5279, -27.3887, 0.96 ) }
    dend_24 { pt3dadd( 58.3327, 29.9944, -27.6916, 0.96 ) }
    dend_24 { pt3dadd( 59.8445, 31.8204, -28.866, 0.84 ) }
    dend_24 { pt3dadd( 60.211, 32.5113, -29.3707, 0.84 ) }
    dend_24 { pt3dadd( 60.4421, 33.3349, -30.0163, 0.72 ) }
    dend_24 { pt3dadd( 60.5375, 34.2032, -30.7112, 0.72 ) }
    dend_24 { pt3dadd( 60.5276, 34.9308, -31.2862, 0.72 ) }
    dend_24 { pt3dadd( 60.5172, 35.2731, -31.5368, 0.72 ) }
    dend_24 { pt3dadd( 60.435, 36.9785, -32.9999, 0.72 ) }
    dend_24 { pt3dadd( 60.4213, 37.332, -33.3916, 0.72 ) }
    dend_24 { pt3dadd( 60.4016, 37.6538, -33.7856, 0.72 ) }
    dend_24 { pt3dadd( 60.3261, 38.5676, -34.9177, 0.96 ) }
    dend_24 { pt3dadd( 60.3062, 38.8675, -35.3108, 0.96 ) }
    dend_24 { pt3dadd( 60.1659, 41.0088, -38.1965, 0.72 ) }
    dend_24 { pt3dadd( 60.0573, 42.202, -39.8449, 0.72 ) }
    dend_24 { pt3dadd( 60.0153, 42.4767, -40.2363, 0.72 ) }
    dend_24 { pt3dadd( 59.8218, 43.5634, -41.7865, 0.72 ) }
    dend_24 { pt3dadd( 59.6379, 44.856, -43.6557, 0.72 ) }
    dend_24 { pt3dadd( 59.633, 45.0698, -43.9693, 0.72 ) }
    dend_24 { pt3dadd( 59.8958, 46.0245, -45.4131, 0.72 ) }
    dend_24 { pt3dadd( 60.0152, 46.1972, -45.7056, 0.72 ) }
    dend_24 { pt3dadd( 60.4741, 46.5831, -46.4176, 0.72 ) }
    dend_24 { pt3dadd( 61.591, 47.1705, -47.6652, 0.72 ) }
    dend_24 { pt3dadd( 63.1058, 47.7629, -48.9769, 0.96 ) }
    dend_24 { pt3dadd( 65.1223, 48.4166, -50.5091, 0.96 ) }
    dend_24 { pt3dadd( 66.2684, 48.7086, -51.2605, 0.84 ) }
    dend_24 { pt3dadd( 67.3935, 48.9445, -51.9549, 0.84 ) }
    dend_24 { pt3dadd( 68.2198, 49.0788, -52.4096, 0.84 ) }
    dend_24 { pt3dadd( 69.2605, 49.2275, -52.8707, 0.84 ) }
    dend_24 { pt3dadd( 69.6067, 49.2677, -52.9605, 0.84 ) }
    dend_24 { pt3dadd( 70.0951, 49.3165, -53.0234, 0.84 ) }
    dend_24 { pt3dadd( 70.3619, 49.3428, -53.0328, 0.84 ) }
    dend_24 { pt3dadd( 71.3232, 49.4506, -53.0154, 0.84 ) }
    dend_24 { pt3dadd( 72.2849, 49.5863, -52.9299, 0.72 ) }
    dend_24 { pt3dadd( 73.6367, 49.7755, -52.7698, 0.72 ) }
    dend_24 { pt3dadd( 74.2347, 49.8727, -52.6839, 0.72 ) }
    dend_24 { pt3dadd( 75.7123, 50.1572, -52.4192, 1.08 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 54/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 58.9003, 18.2971, -18.3908, 0.96 ) }
    dend_27 { pt3dadd( 60.1932, 17.5398, -18.2372, 0.96 ) }
    dend_27 { pt3dadd( 61.3454, 16.8407, -18.136, 0.96 ) }
    dend_27 { pt3dadd( 61.5821, 16.7154, -18.1195, 0.96 ) }
    dend_27 { pt3dadd( 62.1188, 16.4724, -18.089, 0.96 ) }
    dend_27 { pt3dadd( 63.0409, 16.1161, -18.0434, 0.96 ) }
    dend_27 { pt3dadd( 64.1056, 15.7601, -17.9971, 0.72 ) }
    dend_27 { pt3dadd( 65.061, 15.5022, -17.9971, 0.72 ) }
    dend_27 { pt3dadd( 65.9042, 15.3342, -17.9971, 1.08 ) }
    dend_27 { pt3dadd( 66.6282, 15.2411, -17.9971, 1.08 ) }
    dend_27 { pt3dadd( 67.0601, 15.2171, -17.9872, 1.08 ) }
    dend_27 { pt3dadd( 67.538, 15.1955, -17.9485, 0.84 ) }
    dend_27 { pt3dadd( 68.2992, 15.1379, -17.8602, 0.84 ) }
    dend_27 { pt3dadd( 68.7783, 15.0346, -17.7924, 0.84 ) }
    dend_27 { pt3dadd( 69.0004, 14.9516, -17.7557, 0.84 ) }
    dend_27 { pt3dadd( 70.4793, 14.114, -17.5029, 0.84 ) }
    dend_27 { pt3dadd( 71.8047, 13.031, -17.28, 0.84 ) }
    dend_27 { pt3dadd( 72.3533, 12.3906, -17.1857, 0.84 ) }
    dend_27 { pt3dadd( 72.9487, 11.2039, -17.0814, 1.32 ) }
    dend_27 { pt3dadd( 73.2858, 10.1575, -17.1171, 1.08 ) }
    dend_27 { pt3dadd( 73.5133, 8.99655, -17.4856, 1.08 ) }
    dend_27 { pt3dadd( 73.5435, 8.25248, -17.7913, 0.84 ) }
    dend_27 { pt3dadd( 73.5109, 7.72852, -18.0693, 0.84 ) }
    dend_27 { pt3dadd( 73.4476, 6.88665, -18.6511, 1.2 ) }
    dend_27 { pt3dadd( 73.4927, 5.59185, -20.0147, 1.2 ) }
    dend_27 { pt3dadd( 73.9497, 4.07112, -22.323, 1.2 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 80/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 58.9003, 18.2971, -18.3908, 0.72 ) }
    dend_26 { pt3dadd( 59.3532, 17.1464, -18.175, 0.72 ) }
    dend_26 { pt3dadd( 59.4356, 16.8932, -18.1421, 0.72 ) }
    dend_26 { pt3dadd( 59.648, 16.4111, -18.1103, 0.72 ) }
    dend_26 { pt3dadd( 59.8189, 16.0905, -18.1025, 0.72 ) }
    dend_26 { pt3dadd( 60.1881, 15.365, -18.2722, 0.72 ) }
    dend_26 { pt3dadd( 60.5292, 14.6946, -18.4291, 0.72 ) }
    dend_26 { pt3dadd( 60.8414, 14.0802, -18.6376, 1.08 ) }
    dend_26 { pt3dadd( 61.4121, 12.9662, -19.063, 0.72 ) }
    dend_26 { pt3dadd( 61.7882, 12.271, -19.3773, 0.72 ) }
    dend_26 { pt3dadd( 63.0615, 10.1084, -20.5532, 0.72 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_40, dend_37, dend_28, dend_5, dend_0, dend_46, dend_41, dend_39, dend_38, dend_32, dend_29, dend_11, dend_6, dend_4, dend_1, dend_50, dend_47, dend_43, dend_42, dend_36, dend_33, dend_31, dend_30, dend_17, dend_12, dend_10, dend_7, dend_3, dend_2, dend_52, dend_51, dend_49, dend_48, dend_45, dend_44, dend_35, dend_34, dend_19, dend_18, dend_14, dend_13, dend_9, dend_8, dend_21, dend_20, dend_16, dend_15, dend_23, dend_22, dend_25, dend_24, dend_27, dend_26]}
    ModelViewParmSubset_2 = new SectionList()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_40, dend_37, dend_28, dend_5, dend_0, dend_46, dend_41, dend_39, dend_38, dend_32, dend_29, dend_11, dend_6, dend_4, dend_1, dend_50, dend_47, dend_43, dend_42, dend_36, dend_33, dend_31, dend_30, dend_17, dend_12, dend_10, dend_7, dend_3, dend_2, dend_52, dend_51, dend_49, dend_48, dend_45, dend_44, dend_35, dend_34, dend_19, dend_18, dend_14, dend_13, dend_9, dend_8, dend_21, dend_20, dend_16, dend_15, dend_23, dend_22, dend_25, dend_24, dend_27, dend_26]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_41 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_38 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_29 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_50 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_36 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_31 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_52 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_45 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_44 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_35 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_18 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_9 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_8 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_20 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_22 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_40 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_28 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_6 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_32 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_4 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_17 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_19 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_49 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_14 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_7 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_2 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_3 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_21 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_43 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_23 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_16 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_48 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_51 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_42 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_15 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_26 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_39 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_30 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_27 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_37 nseg = 3
    dend_41 nseg = 3
    dend_38 nseg = 3
    dend_29 nseg = 3
    dend_50 nseg = 3
    dend_36 nseg = 3
    dend_33 nseg = 3
    dend_31 nseg = 5
    dend_10 nseg = 3
    dend_52 nseg = 3
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_18 nseg = 3
    dend_13 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
    dend_20 nseg = 3
    dend_22 nseg = 3
    dend_24 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_HAC_dfd993e67b_0_0


