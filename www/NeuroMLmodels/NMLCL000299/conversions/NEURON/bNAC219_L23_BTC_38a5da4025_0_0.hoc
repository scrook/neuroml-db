// Cell: bNAC219_L23_BTC_38a5da4025_0_0
/*
{
  "id" : "bNAC219_L23_BTC_38a5da4025_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.414762, -11.6197, -1.62187, 2.64004", "0.384603, -10.5465, -1.46411, 4.71198", "0.354444, -9.47334, -1.30636, 5.74801", "0.324285, -8.40018, -1.1486, 7.28344", "0.294125, -7.32702, -0.990848, 9.16307", "0.263966, -6.25385, -0.833093, 10.6182", "0.233807, -5.18069, -0.675338, 11.6398", "0.203648, -4.10753, -0.517583, 12.315", "0.173489, -3.03436, -0.359828, 12.8408", "0.14333, -1.9612, -0.202073, 12.9638", "0.113171, -0.888035, -0.0443183, 12.9997", "0.083012, 0.185129, 0.113437, 12.9186", "0.052853, 1.25829, 0.271192, 12.6149", "0.0226939, 2.33146, 0.428947, 11.9889", "-0.00746517, 3.40462, 0.586702, 11.363", "-0.0376242, 4.47778, 0.744457, 10.7371", "-0.0677833, 5.55095, 0.902211, 10.104", "-0.0979424, 6.62411, 1.05997, 9.17803", "-0.128101, 7.69727, 1.21772, 8.07035", "-0.15826, 8.77044, 1.37548, 6.54703", "-0.18842, 9.8436, 1.53323, 5.23645" ]
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-0.765137, 9.92633, 2.31562, 3.33", "-0.818655, 11.918, 2.31562, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "2.87486, 4.16408, -11.9444, 1.11", "3.80482, 5.74996, -12.3348, 1.11", "4.96279, 7.49957, -12.9151, 0.83", "6.23516, 9.01068, -13.7671, 1.11", "7.41557, 10.1063, -14.843, 0.56", "7.92613, 10.5802, -15.3083, 0.56", "8.43444, 11.052, -15.7716, 0.83", "9.18883, 11.6375, -16.5115, 0.83", "10.7347, 12.5885, -18.2359, 0.56", "12.7259, 13.5245, -20.6443, 0.28", "16.9854, 17.568, -24.9996, 0.28", "21.7981, 20.3666, -29.7861, 0.28", "26.5938, 23.2597, -34.5304, 0.28" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-2.09513, -2.76817, -11.7344, 1.11", "-3.22513, -5.41238, -13.6209, 0.83", "-4.44887, -8.27594, -15.6639, 0.83", "-5.40571, -10.5149, -17.2613, 0.83", "-6.73915, -13.6352, -19.4874, 1.39", "-11.4751, -21.9185, -23.217, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-1.62514, -11.6211, 1.00562, 2.78", "-2.06172, -13.1654, -1.56311, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "0.604862, -11.3091, 2.12562, 1.39", "1.3216, -12.8245, 2.99862, 1.39", "3.98167, -19.3302, 5.54914, 1.39", "5.43758, -22.9285, 6.59937, 1.39", "6.43755, -25.2028, 7.11822, 1.39", "8.12234, -28.8959, 7.89158, 1.11", "9.59345, -32.1206, 8.56685, 1.39", "12.3612, -38.3139, 9.61272, 1.11", "13.8506, -41.6572, 9.87367, 1.11", "16.0679, -46.6109, 9.90746, 1.11", "17.3194, -49.2309, 9.832, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.80514, 6.88433, 5.69562, 1.39", "-5.00855, 7.30082, 5.66805, 1.39", "-5.83009, 8.98293, 5.55671, 1.39", "-6.35932, 10.0665, 5.48499, 1.39", "-6.67112, 10.705, 5.44273, 1.11", "-7.4139, 12.2258, 5.34206, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000697082259
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.18842, 9.8436, 1.53323, 0.904604", "-0.609797, 24.8377, 1.53323, 0.904604", "-1.03117, 39.8318, 1.53323, 0.904604" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-0.818655, 11.918, 2.31562, 1.39", "-1.7846, 13.6721, 2.60262, 1.39", "-3.75084, 17.2426, 3.18684, 1.39", "-5.97443, 21.2805, 3.84753, 1.39" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.818655, 11.918, 2.31562, 1.39", "0.507136, 14.3753, 5.10055, 1.39", "1.65126, 16.5627, 7.79999, 1.11", "2.31913, 17.8396, 9.37573, 1.11", "3.12148, 19.3735, 11.2688, 1.39", "4.26917, 21.5678, 13.9767, 1.11", "5.00096, 22.9668, 15.7032, 0.83", "5.68838, 24.3574, 17.916, 1.11" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "26.5938, 23.2597, -34.5304, 0.28", "34.714, 29.476, -42.2555, 0.28", "44.0132, 36.8504, -46.9599, 0.28", "52.0677, 45.7774, -51.1008, 0.28", "61.0486, 54.634, -52.5938, 0.28", "70.6978, 62.4034, -55.5871, 0.28", "81.0789, 69.1765, -58.6764, 0.28", "91.2835, 75.2185, -63.5011, 0.28", "102.558, 79.1751, -68.227, 0.28", "113.325, 83.4766, -73.7546, 0.28", "123.52, 86.1148, -81.169, 0.28", "134.11, 90.9702, -86.5506, 0.28", "144.793, 96.3682, -91.1357, 0.28", "155.246, 102.609, -95.0658, 0.28", "164.805, 108.203, -101.527, 0.28", "173.835, 113.22, -109.155, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "26.5938, 23.2597, -34.5304, 0.28", "31.9961, 27.3921, -39.5907, 0.28", "36.4491, 32.0383, -45.0933, 0.28", "40.8942, 36.5817, -50.6923, 0.28", "44.7915, 41.511, -56.3587, 0.28", "47.4349, 45.874, -63.1362, 0.28", "50.0928, 50.3107, -69.8574, 0.28", "51.8266, 54.1818, -77.2203, 0.28", "51.9424, 58.88, -84.2811, 0.28", "52.1202, 65.2093, -89.8445, 0.28", "53.0151, 71.1762, -95.7454, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-11.4751, -21.9185, -23.217, 0.83", "-14.6728, -29.4213, -27.7121, 0.83", "-17.4016, -37.722, -30.8358, 0.83", "-20.2382, -45.333, -35.3787, 0.83", "-23.3377, -52.2747, -40.7915, 0.83", "-25.1095, -58.5704, -47.472, 0.83", "-26.7517, -63.6719, -55.1769, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-11.4751, -21.9185, -23.217, 0.83", "-13.9647, -28.2028, -26.9185, 0.83", "-15.4811, -34.864, -30.4347, 0.83", "-18.2691, -41.1257, -33.9666, 0.83", "-20.6436, -46.6466, -38.8262, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.06172, -13.1654, -1.56311, 1.94", "-3.25828, -24.6216, 3.03812, 1.94", "-3.97398, -31.4739, 5.79022, 1.94", "-4.46729, -36.1969, 7.68718, 1.94" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "17.3194, -49.2309, 9.832, 0.83", "18.3994, -50.2766, 12.051, 0.83", "20.6124, -52.169, 15.8491, 0.83", "21.6249, -52.9755, 17.6088, 0.83", "23.4025, -54.4479, 21.1679, 0.83", "24.2348, -55.1767, 23.0003, 0.83", "24.8377, -55.7069, 24.3733, 0.28", "25.8317, -56.5308, 26.503, 1.39", "27.7728, -58.2523, 30.6425, 1.11", "30.5517, -60.8554, 36.8134, 0.56", "31.726, -62.0204, 39.5987, 2.5", "32.4712, -62.8329, 41.4568, 2.5", "33.4052, -63.9633, 43.967, 0.28", "33.9897, -64.7334, 45.6252, 1.11", "34.3169, -65.1812, 46.4481, 1.11", "36.325, -67.9464, 51.1001, 0.28", "36.5114, -68.2077, 51.5256, 0.56", "37.3857, -69.4656, 53.5629, 0.28", "38.5539, -71.0992, 56.3015, 3.33", "39.8286, -72.749, 58.9261, 0.28", "39.9803, -72.9264, 59.1625, 0.56", "42.1624, -75.3659, 61.7998, 0.28", "42.3438, -75.5662, 61.994, 0.83", "43.9567, -77.3093, 63.4956, 0.28", "44.9226, -78.3077, 64.2772, 1.39", "50.4088, -83.7046, 68.3477, 0.28", "51.5931, -84.8325, 69.1668, 2.5", "53.885, -86.9229, 70.5753, 0.28", "54.3446, -87.3339, 70.8226, 0.83", "56.8395, -89.4793, 71.8929, 0.28", "57.4837, -89.9863, 72.1016, 1.11", "59.98, -91.6808, 72.6038, 0.28", "60.9587, -92.3178, 72.7741, 1.11", "63.0234, -93.5785, 73.0125, 0.28", "64.1785, -94.2885, 73.1208, 1.39", "69.1335, -97.3771, 73.3109, 0.28", "69.5789, -97.6535, 73.323, 1.39" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "17.3194, -49.2309, 9.832, 0.83", "19.9988, -55.0687, 11.7671, 0.83", "21.7718, -59.092, 13.1391, 0.83", "22.7929, -61.4564, 13.9149, 0.83", "24.0267, -64.2854, 14.7759, 0.83", "25.4273, -67.5732, 15.7102, 0.83", "27.3287, -71.6986, 16.7513, 0.83", "30.3426, -77.23, 18.1792, 0.83", "31.3524, -79.0205, 18.5792, 1.11", "32.5951, -81.2653, 19.0448, 0.83", "33.7735, -83.3678, 19.4299, 1.11", "38.3621, -91.0412, 20.7833, 0.83", "39.9926, -93.4276, 21.2282, 0.28", "40.2036, -93.6991, 21.2788, 0.83", "41.1105, -94.8395, 21.4934, 0.28", "44.7417, -99.3361, 22.3867, 0.83", "47.2721, -102.472, 22.9984, 0.56", "48.573, -104.218, 23.386, 0.83", "49.6179, -105.726, 23.7312, 0.56", "51.9037, -109.242, 24.5654, 1.11", "53.3398, -111.591, 25.1926, 0.56", "54.1499, -113.068, 25.6031, 0.83", "55.6948, -116.287, 26.5345, 0.28", "55.9941, -116.967, 26.7375, 0.83", "58.1192, -122.002, 28.2467, 1.94", "59.1084, -124.323, 28.9344, 1.11", "60.302, -127.097, 29.6788, 0.56", "61.4591, -129.528, 30.3296, 0.83", "62.6867, -131.955, 30.9418, 0.56", "65.2372, -136.685, 32.092, 1.39", "66.5745, -139.137, 32.6375, 0.56", "67.4309, -140.643, 32.9494, 0.83", "70.0072, -144.916, 33.933, 0.28", "70.3681, -145.492, 34.0854, 0.83", "72.4676, -148.79, 35.0154, 2.22", "78.4631, -157.991, 37.8283, 0.28", "80.4421, -161.151, 38.8347, 1.39", "82.2125, -164.136, 39.8645, 0.56", "83.7626, -166.943, 40.8762, 0.28", "84.4424, -168.225, 41.3846, 0.83", "85.865, -171.049, 42.631, 0.28", "88.3447, -176.222, 45.0617, 1.39", "90.2156, -180.556, 46.9371, 0.28", "90.475, -181.225, 47.2162, 0.83", "91.2942, -183.604, 48.1817, 0.28", "91.5424, -184.48, 48.5164, 0.83", "92.0973, -187.094, 49.4052, 0.28", "92.4186, -189.023, 50.0161, 1.94", "92.8795, -193.206, 51.2073, 0.28", "92.9948, -194.882, 51.6794, 0.83", "93.3837, -198.121, 52.5599, 0.28", "93.629, -199.586, 52.9484, 0.83", "93.9741, -201.564, 53.4596, 0.56", "94.8926, -206.296, 54.6264, 0.28", "95.1692, -207.492, 54.881, 1.67", "97.2484, -214.482, 56.605, 0.28", "97.6906, -215.58, 56.9336, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.4139, 12.2258, 5.34206, 0.83", "-7.34766, 13.693, 6.60198, 0.83", "-7.18829, 15.8392, 8.53678, 0.83", "-6.40632, 21.5569, 13.195, 0.83", "-6.20765, 22.4447, 13.9031, 0.83", "-5.54227, 25.1784, 16.0346, 0.83", "-4.42555, 29.3771, 19.2801, 0.83", "-3.63526, 32.0559, 21.4504, 0.83", "-2.49323, 35.5593, 24.3203, 0.83", "-0.83821, 40.9923, 28.6602, 0.56", "-0.553012, 41.9871, 29.3764, 0.83", "0.139733, 44.7769, 31.063, 0.83", "0.702848, 47.9357, 32.855, 1.11", "0.917222, 51.1939, 34.6955, 0.28", "0.773879, 52.5556, 35.5216, 1.11", "-0.0907922, 55.2926, 37.3468, 0.56", "-1.09733, 57.3238, 39.0588, 0.28", "-3.14387, 59.8594, 42.2933, 0.56", "-3.74028, 60.3885, 43.23, 0.56", "-5.86301, 61.9027, 46.5651, 2.22", "-8.20449, 63.4859, 50.761, 0.28", "-9.75473, 64.372, 53.6675, 0.83", "-12.4839, 65.7591, 58.9153, 0.28", "-13.0954, 66.0386, 60.0336, 0.56", "-13.8186, 66.3276, 61.3993, 0.83", "-15.5495, 66.8977, 64.745, 0.83", "-16.351, 67.2031, 66.4565, 1.39" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.4139, 12.2258, 5.34206, 0.83", "-9.83049, 12.6717, 6.20737, 0.83", "-11.4968, 12.9254, 6.72745, 0.56", "-12.8045, 13.0973, 7.10294, 0.56", "-14.9462, 13.4733, 7.79687, 0.56", "-15.6808, 13.6108, 8.05582, 0.56", "-17.7863, 14.0844, 8.81195, 0.56", "-18.7909, 14.3738, 9.25173, 0.56", "-19.1176, 14.4917, 9.40915, 0.56", "-21.5996, 15.6894, 10.6855, 0.56", "-23.0879, 16.5676, 11.4504, 0.56", "-24.9505, 17.7708, 12.4609, 0.56", "-26.4295, 18.8543, 13.3388, 0.56", "-28.3074, 20.3031, 14.5039, 0.83", "-30.1489, 21.7953, 15.6349, 1.11", "-30.8058, 22.3667, 16.0117, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.03117, 39.8318, 1.53323, 0.647035", "-1.45255, 54.8258, 1.53323, 0.647035", "-1.87393, 69.8199, 1.53323, 0.647035" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-5.97443, 21.2805, 3.84753, 0.83", "-6.83519, 22.32, 5.06558, 0.83", "-7.36254, 22.9355, 5.77982, 1.11", "-9.29531, 25.0644, 8.83612, 0.56", "-10.211, 26.1229, 10.2854, 0.83", "-10.9403, 27.0421, 11.4741, 0.83", "-12.0327, 28.4634, 13.281, 0.83", "-12.9597, 29.7437, 14.8651, 1.39", "-15.6583, 33.7521, 19.5895, 0.83", "-16.5539, 35.2146, 21.3122, 1.11", "-20.7244, 42.7704, 29.9125, 0.28", "-22.013, 45.2026, 32.6365, 1.67", "-23.6673, 48.4504, 36.1688, 0.28", "-24.1064, 49.3093, 37.088, 0.83", "-25.8604, 53.0899, 40.8256, 0.28", "-26.8428, 55.2878, 42.9635, 0.28", "-27.4779, 56.8035, 44.3519, 0.83", "-27.9689, 57.8621, 45.3459, 0.28", "-28.6023, 58.7087, 46.3927, 0.56", "-32.5087, 62.8802, 52.3801, 0.28", "-33.5428, 63.802, 54.0591, 0.83", "-35.7477, 65.5685, 57.7863, 0.56", "-36.4621, 66.1764, 59.1042, 1.39", "-40.2604, 69.4139, 66.4505, 0.28", "-40.7724, 69.8935, 67.5077, 1.39", "-43.7271, 72.6592, 73.6132, 0.28", "-44.2053, 73.2121, 74.6553, 1.11", "-46.0058, 75.7164, 78.6255, 0.28", "-46.2132, 76.0571, 79.0838, 0.83", "-50.2366, 84.1549, 87.9756, 0.28", "-51.0044, 85.7676, 89.6065, 1.67", "-52.8515, 89.8941, 93.214, 0.28", "-53.064, 90.3749, 93.6316, 0.83", "-53.6567, 91.6508, 94.6584, 0.28", "-53.9937, 92.3548, 95.1964, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-5.97443, 21.2805, 3.84753, 1.11", "-8.35897, 27.5244, 0.426695, 1.11", "-10.0824, 32.037, -2.04563, 1.11", "-11.1578, 34.8528, -3.58836, 1.11", "-12.9273, 39.4862, -6.12686, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "5.68838, 24.3574, 17.916, 0.56", "5.97069, 26.2682, 20.5802, 0.56", "6.71286, 28.1332, 23.3374, 0.83", "7.24368, 29.1443, 24.8768, 0.56", "8.43998, 31.1707, 27.8, 1.11", "9.80279, 33.4565, 30.9781, 0.56", "10.6788, 34.9402, 32.9579, 1.39", "12.535, 37.841, 36.5084, 0.28", "13.5814, 39.3964, 38.3866, 1.67", "15.0726, 41.5443, 40.9375, 0.28", "15.3535, 42.0413, 41.4489, 0.56", "15.8293, 43.2299, 42.4331, 0.28", "15.9213, 43.5153, 42.6478, 0.83", "16.3723, 45.2713, 43.8727, 0.28", "16.7382, 46.6804, 44.8301, 1.67", "18.8591, 54.9288, 50.299, 0.28", "19.3781, 56.9403, 51.6662, 2.22", "20.2483, 60.5437, 54.1187, 0.28", "20.3911, 61.1699, 54.5457, 0.83", "20.9867, 63.9943, 56.4467, 0.28", "21.1548, 65.0449, 57.1335, 0.56", "21.5332, 68.8595, 59.4582, 0.28", "21.5566, 70.0884, 60.1956, 1.11", "21.425, 72.1558, 61.3077, 0.28", "21.3414, 73.0054, 61.7341, 0.83", "20.9682, 74.9836, 62.6334, 0.28", "20.3983, 77.4851, 63.69, 1.11", "18.8348, 83.1511, 65.8267, 0.28", "18.5788, 83.9325, 66.1408, 0.28", "18.1856, 84.9826, 66.5831, 1.11", "16.666, 88.7928, 68.2373, 0.28", "16.5367, 89.0799, 68.3661, 0.28", "15.6235, 90.7875, 69.0968, 1.39", "14.4988, 92.4059, 69.9901, 0.28", "13.722, 93.5328, 70.7265, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "5.68838, 24.3574, 17.916, 0.28", "6.4976, 28.5603, 20.1436, 0.28", "6.80623, 29.6746, 20.7629, 0.83", "7.4996, 31.6881, 21.8176, 1.11", "8.2721, 33.8862, 22.8988, 0.83", "8.58872, 34.8079, 23.311, 0.28", "8.82241, 35.4514, 23.5931, 0.28", "10.1665, 38.633, 24.829, 1.39", "11.5174, 41.2501, 25.8088, 0.83", "13.0361, 44.0845, 26.7989, 0.28", "13.6362, 45.2084, 27.1286, 0.83", "15.1125, 48.0394, 27.8513, 0.28", "16.6472, 50.9651, 28.4335, 1.39", "18.2923, 54.1642, 28.8667, 0.28", "19.6411, 56.7829, 29.0762, 0.28", "20.6111, 58.6404, 29.1057, 0.56", "21.4788, 60.0551, 29.1159, 0.83", "23.3273, 62.853, 29.0376, 0.28", "23.6015, 63.2419, 29.0159, 0.83", "25.8146, 65.8632, 29.0583, 0.28", "26.9823, 67.0889, 29.1392, 0.83", "32.2429, 72.215, 29.6965, 0.28", "32.9259, 72.8536, 29.7801, 1.39", "35.7786, 75.4898, 30.2288, 1.94", "41.2665, 80.5988, 31.1942, 0.28", "42.0112, 81.3172, 31.3635, 0.56", "44.2735, 83.7629, 31.9387, 0.28", "45.0054, 84.6993, 32.1315, 1.11", "47.1938, 87.7214, 32.7994, 0.28", "47.9718, 88.9335, 33.109, 1.39", "49.8409, 92.5912, 33.9859, 0.28", "51.5658, 96.7336, 35.121, 0.56", "52.1215, 98.4385, 35.6124, 0.56", "52.7773, 101.015, 36.379, 0.83", "53.2431, 103.994, 37.2621, 0.28", "53.4516, 106.377, 37.9961, 1.39", "53.4325, 110.858, 39.3919, 0.28", "53.307, 112.387, 39.959, 0.56", "53.0999, 114.207, 40.6661, 0.28", "52.8442, 116.7, 41.663, 1.39", "52.7279, 118.583, 42.4738, 0.28", "52.7332, 119.522, 42.9303, 0.56", "53.0746, 125.655, 46.0832, 0.28", "53.1785, 126.69, 46.6346, 1.39", "53.8832, 131.576, 49.2357, 0.28", "54.2397, 133.755, 50.3818, 0.83", "55.0725, 139.756, 53.4613, 0.28", "55.148, 140.407, 53.7802, 0.56", "55.1709, 143.516, 55.2005, 0.28", "55.0901, 144.455, 55.6088, 0.28", "54.7576, 146.63, 56.5142, 1.39", "53.2623, 153.894, 59.3954, 0.28", "52.6829, 156.049, 60.2183, 1.11", "50.4336, 163.371, 63.0514, 0.28", "50.0935, 164.297, 63.4073, 0.83" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-20.6436, -46.6466, -38.8262, 0.28", "-24.8075, -55.8674, -44.6874, 0.28", "-28.4023, -65.962, -49.2696, 0.28", "-31.9153, -75.5086, -55.0091, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-20.6436, -46.6466, -38.8262, 0.28", "-23.6, -56.7192, -44.9683, 0.28", "-25.3333, -66.8355, -51.4954, 0.28", "-24.6065, -76.929, -58.2538, 0.28", "-21.9636, -85.2967, -66.7862, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.46729, -36.1969, 7.68718, 0.83", "-5.19601, -38.5152, 6.86199, 0.83", "-5.49765, -40.0956, 6.3287, 1.11", "-5.94421, -43.1715, 5.04249, 1.11", "-6.29209, -45.9103, 3.87641, 1.11", "-6.54266, -47.883, 3.0365, 1.11", "-7.21004, -53.1373, 0.799437, 1.11", "-7.40427, -55.4441, -0.229099, 0.83", "-7.54242, -59.5515, -2.01218, 0.83", "-7.44311, -62.1814, -3.04521, 0.83" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.46729, -36.1969, 7.68718, 1.11", "-4.51054, -38.2928, 10.7742, 1.11", "-4.46618, -39.2392, 12.3853, 1.11", "-4.44487, -41.007, 15.476, 1.11", "-4.57467, -42.9404, 18.8225, 1.11", "-4.96899, -47.046, 25.9571, 1.11", "-5.26271, -49.3524, 30.024, 1.11", "-5.60205, -51.3245, 33.6931, 0.83", "-5.75491, -52.2353, 35.4362, 0.83", "-5.97397, -54.2328, 39.2597, 0.83", "-5.96993, -55.388, 41.2731, 0.83", "-5.88137, -58.1571, 45.6677, 0.56", "-5.72569, -59.6684, 47.997, 0.56", "-5.53769, -60.53, 49.32, 0.28", "-4.82477, -62.5496, 52.4924, 1.67", "-3.08738, -66.6659, 59.504, 0.28", "-2.61873, -67.727, 61.5892, 1.94", "-2.26875, -68.4733, 63.2608, 3.33", "-1.7339, -69.7066, 66.5128, 0.83", "-1.22168, -71.075, 70.4769, 0.28", "-0.451243, -73.7737, 78.4094, 2.22", "0.298143, -76.72, 87.1975, 0.28", "0.519007, -77.6933, 90.1879, 1.94", "1.00657, -80.5375, 99.2723, 0.28", "1.05195, -80.9927, 100.757, 1.94", "1.15756, -82.4665, 105.693, 0.28", "1.17768, -82.6816, 106.347, 0.56" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-30.8058, 22.3667, 16.0117, 0.28", "-33.437, 25.7867, 16.8803, 0.28", "-35.3845, 28.2359, 17.6567, 0.56", "-36.688, 29.8205, 18.1901, 0.83", "-38.3892, 31.3827, 18.9594, 1.67", "-40.6491, 33.3071, 19.8285, 0.56", "-41.878, 34.3244, 20.2517, 0.56", "-44.6888, 36.4448, 21.2736, 0.28", "-45.5524, 37.0694, 21.5848, 0.83", "-55.7366, 44.3483, 25.1412, 0.28", "-58.7274, 46.48, 26.1178, 1.11", "-61.0148, 48.0751, 26.7459, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.8058, 22.3667, 16.0117, 0.28", "-35.9871, 21.3214, 17.295, 0.28", "-37.6124, 21.0039, 17.735, 0.56", "-39.4112, 20.6467, 18.3486, 0.28", "-40.339, 20.4465, 18.6882, 0.56", "-43.1426, 19.7935, 19.9303, 0.28", "-45.1087, 19.37, 20.872, 0.56", "-45.7206, 19.2725, 21.2609, 0.28", "-48.3573, 19.3001, 23.2397, 0.56", "-49.2057, 19.4474, 23.9173, 0.56", "-52.6592, 20.8557, 25.701, 0.28", "-53.8837, 21.5853, 25.9994, 0.56", "-55.5945, 22.7718, 26.0486, 1.67", "-60.6542, 26.5238, 25.5859, 0.28", "-62.1797, 27.7451, 25.3144, 1.39", "-71.1531, 35.2753, 23.0388, 0.28", "-71.8846, 35.9129, 22.7652, 0.83", "-76.6415, 39.9254, 20.5643, 0.28", "-77.2637, 40.4217, 20.1944, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-12.9273, 39.4862, -6.12686, 0.56", "-13.5388, 42.405, -6.92805, 0.56", "-13.822, 43.7571, -7.29919, 0.83", "-14.1269, 45.2123, -7.69866, 0.28", "-14.4145, 46.585, -8.07546, 0.56", "-15.2749, 50.6917, -9.20272, 0.56", "-15.9602, 53.9626, -10.1005, 0.56", "-18.4476, 63.7689, -11.8385, 0.56" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-12.9273, 39.4862, -6.12686, 0.83", "-12.982, 45.3335, -11.5016, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-7.44311, -62.1814, -3.04521, 0.83", "-9.60172, -65.6728, -4.17891, 0.83", "-12.1965, -71.4535, -6.07575, 0.83", "-13.3552, -74.2278, -6.98384, 0.83", "-14.5738, -77.1455, -7.93886, 0.83", "-16.9782, -82.9025, -9.82323, 0.83", "-18.8704, -87.433, -11.3061, 0.83", "-21.1187, -94.3612, -13.6067, 0.83", "-22.0247, -98.2708, -14.9998, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.44311, -62.1814, -3.04521, 0.83", "-8.08337, -67.742, -1.78664, 0.83", "-8.2836, -70.257, -1.19401, 0.83", "-8.3277, -71.2118, -0.92408, 0.56", "-8.47007, -75.2317, 0.368818, 0.56", "-8.48417, -76.4243, 0.76526, 0.56", "-8.48146, -79.7792, 1.87497, 0.56", "-8.45617, -82.346, 2.65913, 0.56", "-8.42596, -84.6557, 3.49867, 0.56", "-8.49119, -86.9634, 4.42225, 0.28", "-8.61791, -88.4499, 5.0605, 0.83", "-8.76546, -89.7333, 5.59897, 0.83", "-9.35151, -93.4688, 7.06184, 0.28", "-9.65483, -95.088, 7.59601, 0.83", "-10.8082, -100.824, 9.23046, 0.28", "-11.0221, -101.879, 9.49204, 1.11", "-11.5887, -105.082, 10.2284, 0.28", "-11.8451, -106.998, 10.6197, 1.39", "-12.1245, -113.045, 11.6871, 0.28", "-12.0991, -113.703, 11.7995, 1.39", "-11.8666, -115.006, 12.0312, 1.94", "-10.8036, -118.829, 12.83, 0.28", "-10.404, -119.86, 13.0759, 1.11", "-8.93916, -122.808, 13.8409, 0.28", "-8.68409, -123.222, 13.9575, 0.83", "-5.79708, -127.619, 15.0039, 0.28", "-5.14956, -128.536, 15.1854, 0.28", "-4.54042, -129.33, 15.2355, 0.56", "-3.80329, -130.27, 15.1534, 0.28", "-3.36142, -130.786, 14.9507, 0.83", "-1.56058, -132.539, 13.7795, 0.28", "-1.41514, -132.65, 13.6466, 0.56", "-0.453985, -133.329, 12.7243, 0.28", "0.216455, -133.786, 12.0853, 0.56", "2.67862, -135.343, 10.0094, 0.28", "2.83777, -135.44, 9.87666, 0.56", "4.07086, -136.212, 8.87943, 0.28", "4.9103, -136.733, 8.20255, 0.83", "7.61288, -138.365, 6.05527, 0.28", "10.8756, -140.274, 3.47635, 0.28", "11.864, -140.814, 2.61428, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-18.4476, 63.7689, -11.8385, 0.56", "-20.4737, 70.8564, -14.0793, 0.56", "-23.7676, 77.4865, -16.2737, 0.56", "-25.8469, 84.7294, -17.8175, 0.56", "-27.7734, 91.7279, -20.4203, 0.56", "-30.9643, 98.0934, -23.4498, 0.56", "-34.4381, 104.499, -26.0384, 0.56", "-37.5349, 111.142, -28.4735, 0.56", "-41.2592, 117.648, -30.3314, 0.56", "-44.5085, 124.615, -30.6207, 0.56", "-47.5131, 131.448, -32.5579, 0.56", "-51.6861, 137.739, -34.2211, 0.56", "-55.3521, 144.069, -36.7366, 0.56", "-58.2275, 150.489, -39.9588, 0.56", "-60.5161, 156.722, -43.9568, 0.56", "-63.542, 162.903, -47.519, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-18.4476, 63.7689, -11.8385, 0.28", "-20.5402, 76.3011, -14.07, 0.56", "-24.027, 88.5936, -15.9088, 0.56", "-28.1082, 100.822, -16.4733, 0.56", "-31.9867, 112.919, -18.8419, 0.56", "-34.778, 124.977, -22.5884, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.982, 45.3335, -11.5016, 0.56", "-14.6776, 46.4446, -13.8157, 0.56", "-15.6129, 47.1287, -15.0811, 0.56", "-16.5445, 47.8048, -16.2637, 0.28", "-18.173, 48.9392, -18.1568, 0.83", "-21.6966, 51.3751, -22.2352, 0.56", "-22.63, 52.0679, -23.3211, 0.56", "-23.3534, 52.6284, -24.1413, 0.56", "-24.0132, 53.1816, -24.9047, 0.56", "-24.6439, 53.8558, -25.7148, 0.56", "-26.4859, 56.2613, -28.0752, 0.56", "-27.2057, 57.2325, -28.8372, 0.56", "-27.7611, 57.9866, -29.4763, 0.56", "-28.2826, 58.7624, -30.1504, 0.83", "-29.8187, 61.4721, -32.4351, 0.28", "-30.3972, 62.6737, -33.395, 0.56", "-33.5549, 67.2047, -39.4277, 0.56", "-36.0902, 72.3167, -45.2608, 0.56", "-38.2308, 77.7534, -50.9399, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.982, 45.3335, -11.5016, 0.56", "-12.7627, 46.7102, -12.5313, 0.56", "-12.5742, 48.6404, -14.0097, 0.56", "-12.4675, 50.4024, -15.3774, 0.56", "-12.4387, 52.3928, -16.8968, 0.56", "-12.4637, 56.6533, -20.0773, 0.56", "-12.5387, 59.5968, -22.1891, 0.56", "-12.6472, 61.5423, -23.6105, 0.56", "-12.7711, 63.6959, -25.1577, 0.56", "-12.8554, 64.8198, -25.8999, 0.56", "-12.9921, 66.414, -26.8838, 0.56", "-13.2365, 68.2801, -28.0622, 0.56", "-13.5881, 71.1959, -29.7675, 0.56", "-13.6647, 72.147, -30.3557, 0.28", "-13.7285, 73.0893, -30.9519, 0.56", "-13.8524, 76.0957, -32.9749, 0.56", "-14.0062, 78.9051, -35.0062, 0.56", "-15.3397, 87.2331, -39.887, 0.56", "-14.8463, 94.9054, -45.904, 0.56", "-13.7181, 102.685, -51.6817, 0.56", "-14.3534, 109.639, -58.5499, 0.56", "-13.0881, 117.801, -63.7113, 0.56", "-11.6288, 126.276, -68.2564, 0.56", "-9.62273, 133.894, -74.0163, 0.56", "-6.2486, 142.021, -78.1806, 0.56", "-2.25469, 149.788, -82.5086, 0.56", "2.74541, 156.682, -87.315, 0.56", "8.65082, 162.338, -92.754, 0.56", "14.3056, 169.292, -96.6583, 0.56", "19.8536, 176.459, -100.302, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-22.0247, -98.2708, -14.9998, 0.83", "-23.1098, -101.989, -13.3401, 0.83", "-23.8493, -104.16, -12.8794, 0.83", "-24.3649, -105.704, -12.6841, 0.83", "-24.7741, -106.901, -12.6085, 0.83", "-25.1868, -108.116, -12.5865, 0.83", "-26.0115, -110.527, -12.5952, 0.83", "-28.0247, -116.011, -12.9186, 0.83", "-29.1832, -119.215, -13.1234, 0.83", "-30.8796, -124.039, -13.4233, 0.83", "-31.7704, -126.657, -13.6114, 1.11", "-32.6401, -129.418, -13.8344, 0.83", "-33.5551, -132.535, -14.098, 0.83", "-34.6237, -136.498, -14.3847, 0.83", "-35.0694, -138.253, -14.5005, 0.83", "-36.2521, -143.483, -14.7566, 0.83", "-36.4644, -144.504, -14.7992, 0.83", "-37.5449, -148.898, -15.0658, 0.83", "-37.9044, -150.309, -15.1892, 0.83", "-39.4213, -155.713, -15.8094, 0.83", "-41.4785, -162.653, -16.6506, 0.83", "-42.1932, -164.976, -16.934, 0.83", "-44.2678, -171.479, -17.8004, 0.83", "-45.1289, -174.066, -18.1953, 0.83", "-46.2369, -177.048, -18.6999, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-22.0247, -98.2708, -14.9998, 0.83", "-23.6718, -99.1116, -16.3187, 0.83", "-24.9849, -99.8831, -17.2383, 0.83", "-28.5336, -101.871, -19.9085, 0.56", "-29.5132, -102.388, -20.6651, 0.56", "-30.7244, -102.986, -21.6454, 0.56", "-32.5009, -103.862, -23.0833, 0.56", "-34.3284, -104.766, -24.736, 0.56", "-36.0396, -105.639, -26.3304, 0.56", "-38.1257, -106.622, -27.9682, 0.56", "-39.4993, -107.218, -29.1672, 0.83", "-46.6977, -110.298, -34.4464, 0.83", "-54.9363, -111.931, -38.8038, 0.83", "-62.5534, -112.788, -44.3605, 0.83", "-69.9896, -114.329, -50.0061, 0.83", "-77.1804, -115.933, -55.9438, 0.83", "-84.4912, -115.54, -61.9487, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-46.2369, -177.048, -18.6999, 0.56", "-46.9451, -180.735, -19.3587, 0.56", "-47.4734, -183.486, -19.8501, 0.56", "-47.6678, -184.497, -20.0309, 0.56", "-48.3104, -187.843, -20.6288, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-46.2369, -177.048, -18.6999, 0.56", "-45.9839, -178.208, -16.9271, 0.56", "-45.7819, -179.407, -15.2256, 0.56", "-45.1859, -183.412, -9.75278, 0.56", "-45.0223, -184.988, -7.73408, 0.28", "-44.9761, -185.354, -7.25952, 0.83", "-44.7121, -187.457, -4.5468, 0.28", "-44.628, -188.231, -3.44838, 0.56", "-44.5393, -189.509, -1.51718, 0.28", "-44.5281, -190.403, -0.275331, 0.56", "-44.5765, -192.183, 2.03356, 0.28", "-44.5532, -192.568, 2.48362, 0.56", "-44.2785, -194.333, 4.36987, 0.28", "-43.8056, -196.207, 6.22129, 1.11", "-43.5433, -197.142, 7.03786, 1.11", "-42.9052, -199.381, 8.81806, 0.56", "-41.3267, -205.332, 13.2058, 0.28", "-40.9827, -206.527, 14.0522, 1.39", "-40.0917, -209.381, 15.9187, 0.28", "-39.5416, -211.029, 16.9414, 1.11", "-38.5431, -214.074, 18.8796, 0.28", "-38.1751, -215.274, 19.6992, 0.83" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-48.3104, -187.843, -20.6288, 0.56", "-49.3684, -190.634, -20.6835, 0.56", "-50.1318, -192.834, -20.8019, 0.56", "-50.9165, -195.167, -20.9644, 0.56", "-52.2581, -199.155, -21.2421, 0.56", "-52.6821, -200.415, -21.3299, 0.56", "-53.9883, -204.299, -21.6003, 0.56", "-54.3673, -205.565, -21.7094, 0.56", "-54.645, -206.565, -21.8158, 0.56", "-56.2434, -215.288, -21.3151, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-48.3104, -187.843, -20.6288, 0.28", "-48.7236, -190.698, -18.796, 0.28", "-48.9475, -191.748, -18.0102, 0.56", "-49.3417, -193.608, -16.598, 0.28", "-49.594, -194.836, -15.5816, 0.28", "-49.9345, -196.492, -14.2102, 0.28", "-50.3832, -198.675, -12.4028, 0.56", "-51.0491, -201.108, -10.452, 0.28", "-51.479, -202.686, -9.11875, 0.28", "-51.8273, -204.156, -7.88222, 0.56", "-51.8303, -214.139, -1.92027, 0.56" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_28", "dend_25", "dend_20", "dend_8", "dend_5", "dend_0", "dend_32", "dend_29", "dend_27", "dend_26", "dend_24", "dend_21", "dend_9", "dend_7", "dend_6", "dend_4", "dend_1", "dend_40", "dend_33", "dend_31", "dend_30", "dend_23", "dend_22", "dend_11", "dend_10", "dend_3", "dend_2", "dend_37", "dend_34", "dend_13", "dend_12", "dend_39", "dend_38", "dend_36", "dend_35", "dend_15", "dend_14", "dend_17", "dend_16", "dend_19", "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_34", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BTC_38a5da4025_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: soma_0
create dend_20
public dend_20
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_28
create dend_32
public dend_32
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_37, id: dend_37, parent: dend_33
create dend_37
public dend_37
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_44
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_28(0), soma_0(0.450000697082259)
    connect dend_25(0), soma_0(0.450000697082259)
    connect dend_20(0), soma_0(0.450000697082259)
    connect dend_8(0), soma_0(0.450000697082259)
    connect dend_5(0), soma_0(0.450000697082259)
    connect dend_0(0), soma_0(0.450000697082259)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_37(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.414762, -11.6197, -1.62187, 2.64004 ) }
    soma_0 { pt3dadd( 0.384603, -10.5465, -1.46411, 4.71198 ) }
    soma_0 { pt3dadd( 0.354444, -9.47334, -1.30636, 5.74801 ) }
    soma_0 { pt3dadd( 0.324285, -8.40018, -1.1486, 7.28344 ) }
    soma_0 { pt3dadd( 0.294125, -7.32702, -0.990848, 9.16307 ) }
    soma_0 { pt3dadd( 0.263966, -6.25385, -0.833093, 10.6182 ) }
    soma_0 { pt3dadd( 0.233807, -5.18069, -0.675338, 11.6398 ) }
    soma_0 { pt3dadd( 0.203648, -4.10753, -0.517583, 12.315 ) }
    soma_0 { pt3dadd( 0.173489, -3.03436, -0.359828, 12.8408 ) }
    soma_0 { pt3dadd( 0.14333, -1.9612, -0.202073, 12.9638 ) }
    soma_0 { pt3dadd( 0.113171, -0.888035, -0.0443183, 12.9997 ) }
    soma_0 { pt3dadd( 0.083012, 0.185129, 0.113437, 12.9186 ) }
    soma_0 { pt3dadd( 0.052853, 1.25829, 0.271192, 12.6149 ) }
    soma_0 { pt3dadd( 0.0226939, 2.33146, 0.428947, 11.9889 ) }
    soma_0 { pt3dadd( -0.00746517, 3.40462, 0.586702, 11.363 ) }
    soma_0 { pt3dadd( -0.0376242, 4.47778, 0.744457, 10.7371 ) }
    soma_0 { pt3dadd( -0.0677833, 5.55095, 0.902211, 10.104 ) }
    soma_0 { pt3dadd( -0.0979424, 6.62411, 1.05997, 9.17803 ) }
    soma_0 { pt3dadd( -0.128101, 7.69727, 1.21772, 8.07035 ) }
    soma_0 { pt3dadd( -0.15826, 8.77044, 1.37548, 6.54703 ) }
    soma_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 5.23645 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 21/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -0.765137, 9.92633, 2.31562, 3.33 ) }
    dend_28 { pt3dadd( -0.818655, 11.918, 2.31562, 3.33 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 23/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 2.87486, 4.16408, -11.9444, 1.11 ) }
    dend_25 { pt3dadd( 3.80482, 5.74996, -12.3348, 1.11 ) }
    dend_25 { pt3dadd( 4.96279, 7.49957, -12.9151, 0.83 ) }
    dend_25 { pt3dadd( 6.23516, 9.01068, -13.7671, 1.11 ) }
    dend_25 { pt3dadd( 7.41557, 10.1063, -14.843, 0.56 ) }
    dend_25 { pt3dadd( 7.92613, 10.5802, -15.3083, 0.56 ) }
    dend_25 { pt3dadd( 8.43444, 11.052, -15.7716, 0.83 ) }
    dend_25 { pt3dadd( 9.18883, 11.6375, -16.5115, 0.83 ) }
    dend_25 { pt3dadd( 10.7347, 12.5885, -18.2359, 0.56 ) }
    dend_25 { pt3dadd( 12.7259, 13.5245, -20.6443, 0.28 ) }
    dend_25 { pt3dadd( 16.9854, 17.568, -24.9996, 0.28 ) }
    dend_25 { pt3dadd( 21.7981, 20.3666, -29.7861, 0.28 ) }
    dend_25 { pt3dadd( 26.5938, 23.2597, -34.5304, 0.28 ) }
    // Section: dend_20, id: dend_20, parent: soma_0 (entry count 36/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -2.09513, -2.76817, -11.7344, 1.11 ) }
    dend_20 { pt3dadd( -3.22513, -5.41238, -13.6209, 0.83 ) }
    dend_20 { pt3dadd( -4.44887, -8.27594, -15.6639, 0.83 ) }
    dend_20 { pt3dadd( -5.40571, -10.5149, -17.2613, 0.83 ) }
    dend_20 { pt3dadd( -6.73915, -13.6352, -19.4874, 1.39 ) }
    dend_20 { pt3dadd( -11.4751, -21.9185, -23.217, 1.39 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 42/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -1.62514, -11.6211, 1.00562, 2.78 ) }
    dend_8 { pt3dadd( -2.06172, -13.1654, -1.56311, 2.22 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 0.604862, -11.3091, 2.12562, 1.39 ) }
    dend_5 { pt3dadd( 1.3216, -12.8245, 2.99862, 1.39 ) }
    dend_5 { pt3dadd( 3.98167, -19.3302, 5.54914, 1.39 ) }
    dend_5 { pt3dadd( 5.43758, -22.9285, 6.59937, 1.39 ) }
    dend_5 { pt3dadd( 6.43755, -25.2028, 7.11822, 1.39 ) }
    dend_5 { pt3dadd( 8.12234, -28.8959, 7.89158, 1.11 ) }
    dend_5 { pt3dadd( 9.59345, -32.1206, 8.56685, 1.39 ) }
    dend_5 { pt3dadd( 12.3612, -38.3139, 9.61272, 1.11 ) }
    dend_5 { pt3dadd( 13.8506, -41.6572, 9.87367, 1.11 ) }
    dend_5 { pt3dadd( 16.0679, -46.6109, 9.90746, 1.11 ) }
    dend_5 { pt3dadd( 17.3194, -49.2309, 9.832, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.80514, 6.88433, 5.69562, 1.39 ) }
    dend_0 { pt3dadd( -5.00855, 7.30082, 5.66805, 1.39 ) }
    dend_0 { pt3dadd( -5.83009, 8.98293, 5.55671, 1.39 ) }
    dend_0 { pt3dadd( -6.35932, 10.0665, 5.48499, 1.39 ) }
    dend_0 { pt3dadd( -6.67112, 10.705, 5.44273, 1.11 ) }
    dend_0 { pt3dadd( -7.4139, 12.2258, 5.34206, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.18842, 9.8436, 1.53323, 0.904604 ) }
    axon_0 { pt3dadd( -0.609797, 24.8377, 1.53323, 0.904604 ) }
    axon_0 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.904604 ) }
    // Section: dend_32, id: dend_32, parent: dend_28 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -0.818655, 11.918, 2.31562, 1.39 ) }
    dend_32 { pt3dadd( -1.7846, 13.6721, 2.60262, 1.39 ) }
    dend_32 { pt3dadd( -3.75084, 17.2426, 3.18684, 1.39 ) }
    dend_32 { pt3dadd( -5.97443, 21.2805, 3.84753, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 68/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.818655, 11.918, 2.31562, 1.39 ) }
    dend_29 { pt3dadd( 0.507136, 14.3753, 5.10055, 1.39 ) }
    dend_29 { pt3dadd( 1.65126, 16.5627, 7.79999, 1.11 ) }
    dend_29 { pt3dadd( 2.31913, 17.8396, 9.37573, 1.11 ) }
    dend_29 { pt3dadd( 3.12148, 19.3735, 11.2688, 1.39 ) }
    dend_29 { pt3dadd( 4.26917, 21.5678, 13.9767, 1.11 ) }
    dend_29 { pt3dadd( 5.00096, 22.9668, 15.7032, 0.83 ) }
    dend_29 { pt3dadd( 5.68838, 24.3574, 17.916, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 76/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 26.5938, 23.2597, -34.5304, 0.28 ) }
    dend_27 { pt3dadd( 34.714, 29.476, -42.2555, 0.28 ) }
    dend_27 { pt3dadd( 44.0132, 36.8504, -46.9599, 0.28 ) }
    dend_27 { pt3dadd( 52.0677, 45.7774, -51.1008, 0.28 ) }
    dend_27 { pt3dadd( 61.0486, 54.634, -52.5938, 0.28 ) }
    dend_27 { pt3dadd( 70.6978, 62.4034, -55.5871, 0.28 ) }
    dend_27 { pt3dadd( 81.0789, 69.1765, -58.6764, 0.28 ) }
    dend_27 { pt3dadd( 91.2835, 75.2185, -63.5011, 0.28 ) }
    dend_27 { pt3dadd( 102.558, 79.1751, -68.227, 0.28 ) }
    dend_27 { pt3dadd( 113.325, 83.4766, -73.7546, 0.28 ) }
    dend_27 { pt3dadd( 123.52, 86.1148, -81.169, 0.28 ) }
    dend_27 { pt3dadd( 134.11, 90.9702, -86.5506, 0.28 ) }
    dend_27 { pt3dadd( 144.793, 96.3682, -91.1357, 0.28 ) }
    dend_27 { pt3dadd( 155.246, 102.609, -95.0658, 0.28 ) }
    dend_27 { pt3dadd( 164.805, 108.203, -101.527, 0.28 ) }
    dend_27 { pt3dadd( 173.835, 113.22, -109.155, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 92/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 26.5938, 23.2597, -34.5304, 0.28 ) }
    dend_26 { pt3dadd( 31.9961, 27.3921, -39.5907, 0.28 ) }
    dend_26 { pt3dadd( 36.4491, 32.0383, -45.0933, 0.28 ) }
    dend_26 { pt3dadd( 40.8942, 36.5817, -50.6923, 0.28 ) }
    dend_26 { pt3dadd( 44.7915, 41.511, -56.3587, 0.28 ) }
    dend_26 { pt3dadd( 47.4349, 45.874, -63.1362, 0.28 ) }
    dend_26 { pt3dadd( 50.0928, 50.3107, -69.8574, 0.28 ) }
    dend_26 { pt3dadd( 51.8266, 54.1818, -77.2203, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_26 { pt3dadd( 51.9424, 58.88, -84.2811, 0.28 ) }
    dend_26 { pt3dadd( 52.1202, 65.2093, -89.8445, 0.28 ) }
    dend_26 { pt3dadd( 53.0151, 71.1762, -95.7454, 0.28 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 3/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -11.4751, -21.9185, -23.217, 0.83 ) }
    dend_24 { pt3dadd( -14.6728, -29.4213, -27.7121, 0.83 ) }
    dend_24 { pt3dadd( -17.4016, -37.722, -30.8358, 0.83 ) }
    dend_24 { pt3dadd( -20.2382, -45.333, -35.3787, 0.83 ) }
    dend_24 { pt3dadd( -23.3377, -52.2747, -40.7915, 0.83 ) }
    dend_24 { pt3dadd( -25.1095, -58.5704, -47.472, 0.83 ) }
    dend_24 { pt3dadd( -26.7517, -63.6719, -55.1769, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 10/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -11.4751, -21.9185, -23.217, 0.83 ) }
    dend_21 { pt3dadd( -13.9647, -28.2028, -26.9185, 0.83 ) }
    dend_21 { pt3dadd( -15.4811, -34.864, -30.4347, 0.83 ) }
    dend_21 { pt3dadd( -18.2691, -41.1257, -33.9666, 0.83 ) }
    dend_21 { pt3dadd( -20.6436, -46.6466, -38.8262, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 15/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.06172, -13.1654, -1.56311, 1.94 ) }
    dend_9 { pt3dadd( -3.25828, -24.6216, 3.03812, 1.94 ) }
    dend_9 { pt3dadd( -3.97398, -31.4739, 5.79022, 1.94 ) }
    dend_9 { pt3dadd( -4.46729, -36.1969, 7.68718, 1.94 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 17.3194, -49.2309, 9.832, 0.83 ) }
    dend_7 { pt3dadd( 18.3994, -50.2766, 12.051, 0.83 ) }
    dend_7 { pt3dadd( 20.6124, -52.169, 15.8491, 0.83 ) }
    dend_7 { pt3dadd( 21.6249, -52.9755, 17.6088, 0.83 ) }
    dend_7 { pt3dadd( 23.4025, -54.4479, 21.1679, 0.83 ) }
    dend_7 { pt3dadd( 24.2348, -55.1767, 23.0003, 0.83 ) }
    dend_7 { pt3dadd( 24.8377, -55.7069, 24.3733, 0.28 ) }
    dend_7 { pt3dadd( 25.8317, -56.5308, 26.503, 1.39 ) }
    dend_7 { pt3dadd( 27.7728, -58.2523, 30.6425, 1.11 ) }
    dend_7 { pt3dadd( 30.5517, -60.8554, 36.8134, 0.56 ) }
    dend_7 { pt3dadd( 31.726, -62.0204, 39.5987, 2.5 ) }
    dend_7 { pt3dadd( 32.4712, -62.8329, 41.4568, 2.5 ) }
    dend_7 { pt3dadd( 33.4052, -63.9633, 43.967, 0.28 ) }
    dend_7 { pt3dadd( 33.9897, -64.7334, 45.6252, 1.11 ) }
    dend_7 { pt3dadd( 34.3169, -65.1812, 46.4481, 1.11 ) }
    dend_7 { pt3dadd( 36.325, -67.9464, 51.1001, 0.28 ) }
    dend_7 { pt3dadd( 36.5114, -68.2077, 51.5256, 0.56 ) }
    dend_7 { pt3dadd( 37.3857, -69.4656, 53.5629, 0.28 ) }
    dend_7 { pt3dadd( 38.5539, -71.0992, 56.3015, 3.33 ) }
    dend_7 { pt3dadd( 39.8286, -72.749, 58.9261, 0.28 ) }
    dend_7 { pt3dadd( 39.9803, -72.9264, 59.1625, 0.56 ) }
    dend_7 { pt3dadd( 42.1624, -75.3659, 61.7998, 0.28 ) }
    dend_7 { pt3dadd( 42.3438, -75.5662, 61.994, 0.83 ) }
    dend_7 { pt3dadd( 43.9567, -77.3093, 63.4956, 0.28 ) }
    dend_7 { pt3dadd( 44.9226, -78.3077, 64.2772, 1.39 ) }
    dend_7 { pt3dadd( 50.4088, -83.7046, 68.3477, 0.28 ) }
    dend_7 { pt3dadd( 51.5931, -84.8325, 69.1668, 2.5 ) }
    dend_7 { pt3dadd( 53.885, -86.9229, 70.5753, 0.28 ) }
    dend_7 { pt3dadd( 54.3446, -87.3339, 70.8226, 0.83 ) }
    dend_7 { pt3dadd( 56.8395, -89.4793, 71.8929, 0.28 ) }
    dend_7 { pt3dadd( 57.4837, -89.9863, 72.1016, 1.11 ) }
    dend_7 { pt3dadd( 59.98, -91.6808, 72.6038, 0.28 ) }
    dend_7 { pt3dadd( 60.9587, -92.3178, 72.7741, 1.11 ) }
    dend_7 { pt3dadd( 63.0234, -93.5785, 73.0125, 0.28 ) }
    dend_7 { pt3dadd( 64.1785, -94.2885, 73.1208, 1.39 ) }
    dend_7 { pt3dadd( 69.1335, -97.3771, 73.3109, 0.28 ) }
    dend_7 { pt3dadd( 69.5789, -97.6535, 73.323, 1.39 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 56/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 17.3194, -49.2309, 9.832, 0.83 ) }
    dend_6 { pt3dadd( 19.9988, -55.0687, 11.7671, 0.83 ) }
    dend_6 { pt3dadd( 21.7718, -59.092, 13.1391, 0.83 ) }
    dend_6 { pt3dadd( 22.7929, -61.4564, 13.9149, 0.83 ) }
    dend_6 { pt3dadd( 24.0267, -64.2854, 14.7759, 0.83 ) }
    dend_6 { pt3dadd( 25.4273, -67.5732, 15.7102, 0.83 ) }
    dend_6 { pt3dadd( 27.3287, -71.6986, 16.7513, 0.83 ) }
    dend_6 { pt3dadd( 30.3426, -77.23, 18.1792, 0.83 ) }
    dend_6 { pt3dadd( 31.3524, -79.0205, 18.5792, 1.11 ) }
    dend_6 { pt3dadd( 32.5951, -81.2653, 19.0448, 0.83 ) }
    dend_6 { pt3dadd( 33.7735, -83.3678, 19.4299, 1.11 ) }
    dend_6 { pt3dadd( 38.3621, -91.0412, 20.7833, 0.83 ) }
    dend_6 { pt3dadd( 39.9926, -93.4276, 21.2282, 0.28 ) }
    dend_6 { pt3dadd( 40.2036, -93.6991, 21.2788, 0.83 ) }
    dend_6 { pt3dadd( 41.1105, -94.8395, 21.4934, 0.28 ) }
    dend_6 { pt3dadd( 44.7417, -99.3361, 22.3867, 0.83 ) }
    dend_6 { pt3dadd( 47.2721, -102.472, 22.9984, 0.56 ) }
    dend_6 { pt3dadd( 48.573, -104.218, 23.386, 0.83 ) }
    dend_6 { pt3dadd( 49.6179, -105.726, 23.7312, 0.56 ) }
    dend_6 { pt3dadd( 51.9037, -109.242, 24.5654, 1.11 ) }
    dend_6 { pt3dadd( 53.3398, -111.591, 25.1926, 0.56 ) }
    dend_6 { pt3dadd( 54.1499, -113.068, 25.6031, 0.83 ) }
    dend_6 { pt3dadd( 55.6948, -116.287, 26.5345, 0.28 ) }
    dend_6 { pt3dadd( 55.9941, -116.967, 26.7375, 0.83 ) }
    dend_6 { pt3dadd( 58.1192, -122.002, 28.2467, 1.94 ) }
    dend_6 { pt3dadd( 59.1084, -124.323, 28.9344, 1.11 ) }
    dend_6 { pt3dadd( 60.302, -127.097, 29.6788, 0.56 ) }
    dend_6 { pt3dadd( 61.4591, -129.528, 30.3296, 0.83 ) }
    dend_6 { pt3dadd( 62.6867, -131.955, 30.9418, 0.56 ) }
    dend_6 { pt3dadd( 65.2372, -136.685, 32.092, 1.39 ) }
    dend_6 { pt3dadd( 66.5745, -139.137, 32.6375, 0.56 ) }
    dend_6 { pt3dadd( 67.4309, -140.643, 32.9494, 0.83 ) }
    dend_6 { pt3dadd( 70.0072, -144.916, 33.933, 0.28 ) }
    dend_6 { pt3dadd( 70.3681, -145.492, 34.0854, 0.83 ) }
    dend_6 { pt3dadd( 72.4676, -148.79, 35.0154, 2.22 ) }
    dend_6 { pt3dadd( 78.4631, -157.991, 37.8283, 0.28 ) }
    dend_6 { pt3dadd( 80.4421, -161.151, 38.8347, 1.39 ) }
    dend_6 { pt3dadd( 82.2125, -164.136, 39.8645, 0.56 ) }
    dend_6 { pt3dadd( 83.7626, -166.943, 40.8762, 0.28 ) }
    dend_6 { pt3dadd( 84.4424, -168.225, 41.3846, 0.83 ) }
    dend_6 { pt3dadd( 85.865, -171.049, 42.631, 0.28 ) }
    dend_6 { pt3dadd( 88.3447, -176.222, 45.0617, 1.39 ) }
    dend_6 { pt3dadd( 90.2156, -180.556, 46.9371, 0.28 ) }
    dend_6 { pt3dadd( 90.475, -181.225, 47.2162, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 91.2942, -183.604, 48.1817, 0.28 ) }
    dend_6 { pt3dadd( 91.5424, -184.48, 48.5164, 0.83 ) }
    dend_6 { pt3dadd( 92.0973, -187.094, 49.4052, 0.28 ) }
    dend_6 { pt3dadd( 92.4186, -189.023, 50.0161, 1.94 ) }
    dend_6 { pt3dadd( 92.8795, -193.206, 51.2073, 0.28 ) }
    dend_6 { pt3dadd( 92.9948, -194.882, 51.6794, 0.83 ) }
    dend_6 { pt3dadd( 93.3837, -198.121, 52.5599, 0.28 ) }
    dend_6 { pt3dadd( 93.629, -199.586, 52.9484, 0.83 ) }
    dend_6 { pt3dadd( 93.9741, -201.564, 53.4596, 0.56 ) }
    dend_6 { pt3dadd( 94.8926, -206.296, 54.6264, 0.28 ) }
    dend_6 { pt3dadd( 95.1692, -207.492, 54.881, 1.67 ) }
    dend_6 { pt3dadd( 97.2484, -214.482, 56.605, 0.28 ) }
    dend_6 { pt3dadd( 97.6906, -215.58, 56.9336, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 13/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.4139, 12.2258, 5.34206, 0.83 ) }
    dend_4 { pt3dadd( -7.34766, 13.693, 6.60198, 0.83 ) }
    dend_4 { pt3dadd( -7.18829, 15.8392, 8.53678, 0.83 ) }
    dend_4 { pt3dadd( -6.40632, 21.5569, 13.195, 0.83 ) }
    dend_4 { pt3dadd( -6.20765, 22.4447, 13.9031, 0.83 ) }
    dend_4 { pt3dadd( -5.54227, 25.1784, 16.0346, 0.83 ) }
    dend_4 { pt3dadd( -4.42555, 29.3771, 19.2801, 0.83 ) }
    dend_4 { pt3dadd( -3.63526, 32.0559, 21.4504, 0.83 ) }
    dend_4 { pt3dadd( -2.49323, 35.5593, 24.3203, 0.83 ) }
    dend_4 { pt3dadd( -0.83821, 40.9923, 28.6602, 0.56 ) }
    dend_4 { pt3dadd( -0.553012, 41.9871, 29.3764, 0.83 ) }
    dend_4 { pt3dadd( 0.139733, 44.7769, 31.063, 0.83 ) }
    dend_4 { pt3dadd( 0.702848, 47.9357, 32.855, 1.11 ) }
    dend_4 { pt3dadd( 0.917222, 51.1939, 34.6955, 0.28 ) }
    dend_4 { pt3dadd( 0.773879, 52.5556, 35.5216, 1.11 ) }
    dend_4 { pt3dadd( -0.0907922, 55.2926, 37.3468, 0.56 ) }
    dend_4 { pt3dadd( -1.09733, 57.3238, 39.0588, 0.28 ) }
    dend_4 { pt3dadd( -3.14387, 59.8594, 42.2933, 0.56 ) }
    dend_4 { pt3dadd( -3.74028, 60.3885, 43.23, 0.56 ) }
    dend_4 { pt3dadd( -5.86301, 61.9027, 46.5651, 2.22 ) }
    dend_4 { pt3dadd( -8.20449, 63.4859, 50.761, 0.28 ) }
    dend_4 { pt3dadd( -9.75473, 64.372, 53.6675, 0.83 ) }
    dend_4 { pt3dadd( -12.4839, 65.7591, 58.9153, 0.28 ) }
    dend_4 { pt3dadd( -13.0954, 66.0386, 60.0336, 0.56 ) }
    dend_4 { pt3dadd( -13.8186, 66.3276, 61.3993, 0.83 ) }
    dend_4 { pt3dadd( -15.5495, 66.8977, 64.745, 0.83 ) }
    dend_4 { pt3dadd( -16.351, 67.2031, 66.4565, 1.39 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.4139, 12.2258, 5.34206, 0.83 ) }
    dend_1 { pt3dadd( -9.83049, 12.6717, 6.20737, 0.83 ) }
    dend_1 { pt3dadd( -11.4968, 12.9254, 6.72745, 0.56 ) }
    dend_1 { pt3dadd( -12.8045, 13.0973, 7.10294, 0.56 ) }
    dend_1 { pt3dadd( -14.9462, 13.4733, 7.79687, 0.56 ) }
    dend_1 { pt3dadd( -15.6808, 13.6108, 8.05582, 0.56 ) }
    dend_1 { pt3dadd( -17.7863, 14.0844, 8.81195, 0.56 ) }
    dend_1 { pt3dadd( -18.7909, 14.3738, 9.25173, 0.56 ) }
    dend_1 { pt3dadd( -19.1176, 14.4917, 9.40915, 0.56 ) }
    dend_1 { pt3dadd( -21.5996, 15.6894, 10.6855, 0.56 ) }
    dend_1 { pt3dadd( -23.0879, 16.5676, 11.4504, 0.56 ) }
    dend_1 { pt3dadd( -24.9505, 17.7708, 12.4609, 0.56 ) }
    dend_1 { pt3dadd( -26.4295, 18.8543, 13.3388, 0.56 ) }
    dend_1 { pt3dadd( -28.3074, 20.3031, 14.5039, 0.83 ) }
    dend_1 { pt3dadd( -30.1489, 21.7953, 15.6349, 1.11 ) }
    dend_1 { pt3dadd( -30.8058, 22.3667, 16.0117, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.03117, 39.8318, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.45255, 54.8258, 1.53323, 0.647035 ) }
    axon_1 { pt3dadd( -1.87393, 69.8199, 1.53323, 0.647035 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 59/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -5.97443, 21.2805, 3.84753, 0.83 ) }
    dend_40 { pt3dadd( -6.83519, 22.32, 5.06558, 0.83 ) }
    dend_40 { pt3dadd( -7.36254, 22.9355, 5.77982, 1.11 ) }
    dend_40 { pt3dadd( -9.29531, 25.0644, 8.83612, 0.56 ) }
    dend_40 { pt3dadd( -10.211, 26.1229, 10.2854, 0.83 ) }
    dend_40 { pt3dadd( -10.9403, 27.0421, 11.4741, 0.83 ) }
    dend_40 { pt3dadd( -12.0327, 28.4634, 13.281, 0.83 ) }
    dend_40 { pt3dadd( -12.9597, 29.7437, 14.8651, 1.39 ) }
    dend_40 { pt3dadd( -15.6583, 33.7521, 19.5895, 0.83 ) }
    dend_40 { pt3dadd( -16.5539, 35.2146, 21.3122, 1.11 ) }
    dend_40 { pt3dadd( -20.7244, 42.7704, 29.9125, 0.28 ) }
    dend_40 { pt3dadd( -22.013, 45.2026, 32.6365, 1.67 ) }
    dend_40 { pt3dadd( -23.6673, 48.4504, 36.1688, 0.28 ) }
    dend_40 { pt3dadd( -24.1064, 49.3093, 37.088, 0.83 ) }
    dend_40 { pt3dadd( -25.8604, 53.0899, 40.8256, 0.28 ) }
    dend_40 { pt3dadd( -26.8428, 55.2878, 42.9635, 0.28 ) }
    dend_40 { pt3dadd( -27.4779, 56.8035, 44.3519, 0.83 ) }
    dend_40 { pt3dadd( -27.9689, 57.8621, 45.3459, 0.28 ) }
    dend_40 { pt3dadd( -28.6023, 58.7087, 46.3927, 0.56 ) }
    dend_40 { pt3dadd( -32.5087, 62.8802, 52.3801, 0.28 ) }
    dend_40 { pt3dadd( -33.5428, 63.802, 54.0591, 0.83 ) }
    dend_40 { pt3dadd( -35.7477, 65.5685, 57.7863, 0.56 ) }
    dend_40 { pt3dadd( -36.4621, 66.1764, 59.1042, 1.39 ) }
    dend_40 { pt3dadd( -40.2604, 69.4139, 66.4505, 0.28 ) }
    dend_40 { pt3dadd( -40.7724, 69.8935, 67.5077, 1.39 ) }
    dend_40 { pt3dadd( -43.7271, 72.6592, 73.6132, 0.28 ) }
    dend_40 { pt3dadd( -44.2053, 73.2121, 74.6553, 1.11 ) }
    dend_40 { pt3dadd( -46.0058, 75.7164, 78.6255, 0.28 ) }
    dend_40 { pt3dadd( -46.2132, 76.0571, 79.0838, 0.83 ) }
    dend_40 { pt3dadd( -50.2366, 84.1549, 87.9756, 0.28 ) }
    dend_40 { pt3dadd( -51.0044, 85.7676, 89.6065, 1.67 ) }
    dend_40 { pt3dadd( -52.8515, 89.8941, 93.214, 0.28 ) }
    dend_40 { pt3dadd( -53.064, 90.3749, 93.6316, 0.83 ) }
    dend_40 { pt3dadd( -53.6567, 91.6508, 94.6584, 0.28 ) }
    dend_40 { pt3dadd( -53.9937, 92.3548, 95.1964, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -5.97443, 21.2805, 3.84753, 1.11 ) }
    dend_33 { pt3dadd( -8.35897, 27.5244, 0.426695, 1.11 ) }
    dend_33 { pt3dadd( -10.0824, 32.037, -2.04563, 1.11 ) }
    dend_33 { pt3dadd( -11.1578, 34.8528, -3.58836, 1.11 ) }
    dend_33 { pt3dadd( -12.9273, 39.4862, -6.12686, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 99/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 5.68838, 24.3574, 17.916, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_31 { pt3dadd( 5.97069, 26.2682, 20.5802, 0.56 ) }
    dend_31 { pt3dadd( 6.71286, 28.1332, 23.3374, 0.83 ) }
    dend_31 { pt3dadd( 7.24368, 29.1443, 24.8768, 0.56 ) }
    dend_31 { pt3dadd( 8.43998, 31.1707, 27.8, 1.11 ) }
    dend_31 { pt3dadd( 9.80279, 33.4565, 30.9781, 0.56 ) }
    dend_31 { pt3dadd( 10.6788, 34.9402, 32.9579, 1.39 ) }
    dend_31 { pt3dadd( 12.535, 37.841, 36.5084, 0.28 ) }
    dend_31 { pt3dadd( 13.5814, 39.3964, 38.3866, 1.67 ) }
    dend_31 { pt3dadd( 15.0726, 41.5443, 40.9375, 0.28 ) }
    dend_31 { pt3dadd( 15.3535, 42.0413, 41.4489, 0.56 ) }
    dend_31 { pt3dadd( 15.8293, 43.2299, 42.4331, 0.28 ) }
    dend_31 { pt3dadd( 15.9213, 43.5153, 42.6478, 0.83 ) }
    dend_31 { pt3dadd( 16.3723, 45.2713, 43.8727, 0.28 ) }
    dend_31 { pt3dadd( 16.7382, 46.6804, 44.8301, 1.67 ) }
    dend_31 { pt3dadd( 18.8591, 54.9288, 50.299, 0.28 ) }
    dend_31 { pt3dadd( 19.3781, 56.9403, 51.6662, 2.22 ) }
    dend_31 { pt3dadd( 20.2483, 60.5437, 54.1187, 0.28 ) }
    dend_31 { pt3dadd( 20.3911, 61.1699, 54.5457, 0.83 ) }
    dend_31 { pt3dadd( 20.9867, 63.9943, 56.4467, 0.28 ) }
    dend_31 { pt3dadd( 21.1548, 65.0449, 57.1335, 0.56 ) }
    dend_31 { pt3dadd( 21.5332, 68.8595, 59.4582, 0.28 ) }
    dend_31 { pt3dadd( 21.5566, 70.0884, 60.1956, 1.11 ) }
    dend_31 { pt3dadd( 21.425, 72.1558, 61.3077, 0.28 ) }
    dend_31 { pt3dadd( 21.3414, 73.0054, 61.7341, 0.83 ) }
    dend_31 { pt3dadd( 20.9682, 74.9836, 62.6334, 0.28 ) }
    dend_31 { pt3dadd( 20.3983, 77.4851, 63.69, 1.11 ) }
    dend_31 { pt3dadd( 18.8348, 83.1511, 65.8267, 0.28 ) }
    dend_31 { pt3dadd( 18.5788, 83.9325, 66.1408, 0.28 ) }
    dend_31 { pt3dadd( 18.1856, 84.9826, 66.5831, 1.11 ) }
    dend_31 { pt3dadd( 16.666, 88.7928, 68.2373, 0.28 ) }
    dend_31 { pt3dadd( 16.5367, 89.0799, 68.3661, 0.28 ) }
    dend_31 { pt3dadd( 15.6235, 90.7875, 69.0968, 1.39 ) }
    dend_31 { pt3dadd( 14.4988, 92.4059, 69.9901, 0.28 ) }
    dend_31 { pt3dadd( 13.722, 93.5328, 70.7265, 0.83 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 34/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 5.68838, 24.3574, 17.916, 0.28 ) }
    dend_30 { pt3dadd( 6.4976, 28.5603, 20.1436, 0.28 ) }
    dend_30 { pt3dadd( 6.80623, 29.6746, 20.7629, 0.83 ) }
    dend_30 { pt3dadd( 7.4996, 31.6881, 21.8176, 1.11 ) }
    dend_30 { pt3dadd( 8.2721, 33.8862, 22.8988, 0.83 ) }
    dend_30 { pt3dadd( 8.58872, 34.8079, 23.311, 0.28 ) }
    dend_30 { pt3dadd( 8.82241, 35.4514, 23.5931, 0.28 ) }
    dend_30 { pt3dadd( 10.1665, 38.633, 24.829, 1.39 ) }
    dend_30 { pt3dadd( 11.5174, 41.2501, 25.8088, 0.83 ) }
    dend_30 { pt3dadd( 13.0361, 44.0845, 26.7989, 0.28 ) }
    dend_30 { pt3dadd( 13.6362, 45.2084, 27.1286, 0.83 ) }
    dend_30 { pt3dadd( 15.1125, 48.0394, 27.8513, 0.28 ) }
    dend_30 { pt3dadd( 16.6472, 50.9651, 28.4335, 1.39 ) }
    dend_30 { pt3dadd( 18.2923, 54.1642, 28.8667, 0.28 ) }
    dend_30 { pt3dadd( 19.6411, 56.7829, 29.0762, 0.28 ) }
    dend_30 { pt3dadd( 20.6111, 58.6404, 29.1057, 0.56 ) }
    dend_30 { pt3dadd( 21.4788, 60.0551, 29.1159, 0.83 ) }
    dend_30 { pt3dadd( 23.3273, 62.853, 29.0376, 0.28 ) }
    dend_30 { pt3dadd( 23.6015, 63.2419, 29.0159, 0.83 ) }
    dend_30 { pt3dadd( 25.8146, 65.8632, 29.0583, 0.28 ) }
    dend_30 { pt3dadd( 26.9823, 67.0889, 29.1392, 0.83 ) }
    dend_30 { pt3dadd( 32.2429, 72.215, 29.6965, 0.28 ) }
    dend_30 { pt3dadd( 32.9259, 72.8536, 29.7801, 1.39 ) }
    dend_30 { pt3dadd( 35.7786, 75.4898, 30.2288, 1.94 ) }
    dend_30 { pt3dadd( 41.2665, 80.5988, 31.1942, 0.28 ) }
    dend_30 { pt3dadd( 42.0112, 81.3172, 31.3635, 0.56 ) }
    dend_30 { pt3dadd( 44.2735, 83.7629, 31.9387, 0.28 ) }
    dend_30 { pt3dadd( 45.0054, 84.6993, 32.1315, 1.11 ) }
    dend_30 { pt3dadd( 47.1938, 87.7214, 32.7994, 0.28 ) }
    dend_30 { pt3dadd( 47.9718, 88.9335, 33.109, 1.39 ) }
    dend_30 { pt3dadd( 49.8409, 92.5912, 33.9859, 0.28 ) }
    dend_30 { pt3dadd( 51.5658, 96.7336, 35.121, 0.56 ) }
    dend_30 { pt3dadd( 52.1215, 98.4385, 35.6124, 0.56 ) }
    dend_30 { pt3dadd( 52.7773, 101.015, 36.379, 0.83 ) }
    dend_30 { pt3dadd( 53.2431, 103.994, 37.2621, 0.28 ) }
    dend_30 { pt3dadd( 53.4516, 106.377, 37.9961, 1.39 ) }
    dend_30 { pt3dadd( 53.4325, 110.858, 39.3919, 0.28 ) }
    dend_30 { pt3dadd( 53.307, 112.387, 39.959, 0.56 ) }
    dend_30 { pt3dadd( 53.0999, 114.207, 40.6661, 0.28 ) }
    dend_30 { pt3dadd( 52.8442, 116.7, 41.663, 1.39 ) }
    dend_30 { pt3dadd( 52.7279, 118.583, 42.4738, 0.28 ) }
    dend_30 { pt3dadd( 52.7332, 119.522, 42.9303, 0.56 ) }
    dend_30 { pt3dadd( 53.0746, 125.655, 46.0832, 0.28 ) }
    dend_30 { pt3dadd( 53.1785, 126.69, 46.6346, 1.39 ) }
    dend_30 { pt3dadd( 53.8832, 131.576, 49.2357, 0.28 ) }
    dend_30 { pt3dadd( 54.2397, 133.755, 50.3818, 0.83 ) }
    dend_30 { pt3dadd( 55.0725, 139.756, 53.4613, 0.28 ) }
    dend_30 { pt3dadd( 55.148, 140.407, 53.7802, 0.56 ) }
    dend_30 { pt3dadd( 55.1709, 143.516, 55.2005, 0.28 ) }
    dend_30 { pt3dadd( 55.0901, 144.455, 55.6088, 0.28 ) }
    dend_30 { pt3dadd( 54.7576, 146.63, 56.5142, 1.39 ) }
    dend_30 { pt3dadd( 53.2623, 153.894, 59.3954, 0.28 ) }
    dend_30 { pt3dadd( 52.6829, 156.049, 60.2183, 1.11 ) }
    dend_30 { pt3dadd( 50.4336, 163.371, 63.0514, 0.28 ) }
    dend_30 { pt3dadd( 50.0935, 164.297, 63.4073, 0.83 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 89/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -20.6436, -46.6466, -38.8262, 0.28 ) }
    dend_23 { pt3dadd( -24.8075, -55.8674, -44.6874, 0.28 ) }
    dend_23 { pt3dadd( -28.4023, -65.962, -49.2696, 0.28 ) }
    dend_23 { pt3dadd( -31.9153, -75.5086, -55.0091, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 93/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -20.6436, -46.6466, -38.8262, 0.28 ) }
    dend_22 { pt3dadd( -23.6, -56.7192, -44.9683, 0.28 ) }
    dend_22 { pt3dadd( -25.3333, -66.8355, -51.4954, 0.28 ) }
    dend_22 { pt3dadd( -24.6065, -76.929, -58.2538, 0.28 ) }
    dend_22 { pt3dadd( -21.9636, -85.2967, -66.7862, 0.28 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 98/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.46729, -36.1969, 7.68718, 0.83 ) }
    dend_11 { pt3dadd( -5.19601, -38.5152, 6.86199, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_11 { pt3dadd( -5.49765, -40.0956, 6.3287, 1.11 ) }
    dend_11 { pt3dadd( -5.94421, -43.1715, 5.04249, 1.11 ) }
    dend_11 { pt3dadd( -6.29209, -45.9103, 3.87641, 1.11 ) }
    dend_11 { pt3dadd( -6.54266, -47.883, 3.0365, 1.11 ) }
    dend_11 { pt3dadd( -7.21004, -53.1373, 0.799437, 1.11 ) }
    dend_11 { pt3dadd( -7.40427, -55.4441, -0.229099, 0.83 ) }
    dend_11 { pt3dadd( -7.54242, -59.5515, -2.01218, 0.83 ) }
    dend_11 { pt3dadd( -7.44311, -62.1814, -3.04521, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 8/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.46729, -36.1969, 7.68718, 1.11 ) }
    dend_10 { pt3dadd( -4.51054, -38.2928, 10.7742, 1.11 ) }
    dend_10 { pt3dadd( -4.46618, -39.2392, 12.3853, 1.11 ) }
    dend_10 { pt3dadd( -4.44487, -41.007, 15.476, 1.11 ) }
    dend_10 { pt3dadd( -4.57467, -42.9404, 18.8225, 1.11 ) }
    dend_10 { pt3dadd( -4.96899, -47.046, 25.9571, 1.11 ) }
    dend_10 { pt3dadd( -5.26271, -49.3524, 30.024, 1.11 ) }
    dend_10 { pt3dadd( -5.60205, -51.3245, 33.6931, 0.83 ) }
    dend_10 { pt3dadd( -5.75491, -52.2353, 35.4362, 0.83 ) }
    dend_10 { pt3dadd( -5.97397, -54.2328, 39.2597, 0.83 ) }
    dend_10 { pt3dadd( -5.96993, -55.388, 41.2731, 0.83 ) }
    dend_10 { pt3dadd( -5.88137, -58.1571, 45.6677, 0.56 ) }
    dend_10 { pt3dadd( -5.72569, -59.6684, 47.997, 0.56 ) }
    dend_10 { pt3dadd( -5.53769, -60.53, 49.32, 0.28 ) }
    dend_10 { pt3dadd( -4.82477, -62.5496, 52.4924, 1.67 ) }
    dend_10 { pt3dadd( -3.08738, -66.6659, 59.504, 0.28 ) }
    dend_10 { pt3dadd( -2.61873, -67.727, 61.5892, 1.94 ) }
    dend_10 { pt3dadd( -2.26875, -68.4733, 63.2608, 3.33 ) }
    dend_10 { pt3dadd( -1.7339, -69.7066, 66.5128, 0.83 ) }
    dend_10 { pt3dadd( -1.22168, -71.075, 70.4769, 0.28 ) }
    dend_10 { pt3dadd( -0.451243, -73.7737, 78.4094, 2.22 ) }
    dend_10 { pt3dadd( 0.298143, -76.72, 87.1975, 0.28 ) }
    dend_10 { pt3dadd( 0.519007, -77.6933, 90.1879, 1.94 ) }
    dend_10 { pt3dadd( 1.00657, -80.5375, 99.2723, 0.28 ) }
    dend_10 { pt3dadd( 1.05195, -80.9927, 100.757, 1.94 ) }
    dend_10 { pt3dadd( 1.15756, -82.4665, 105.693, 0.28 ) }
    dend_10 { pt3dadd( 1.17768, -82.6816, 106.347, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -30.8058, 22.3667, 16.0117, 0.28 ) }
    dend_3 { pt3dadd( -33.437, 25.7867, 16.8803, 0.28 ) }
    dend_3 { pt3dadd( -35.3845, 28.2359, 17.6567, 0.56 ) }
    dend_3 { pt3dadd( -36.688, 29.8205, 18.1901, 0.83 ) }
    dend_3 { pt3dadd( -38.3892, 31.3827, 18.9594, 1.67 ) }
    dend_3 { pt3dadd( -40.6491, 33.3071, 19.8285, 0.56 ) }
    dend_3 { pt3dadd( -41.878, 34.3244, 20.2517, 0.56 ) }
    dend_3 { pt3dadd( -44.6888, 36.4448, 21.2736, 0.28 ) }
    dend_3 { pt3dadd( -45.5524, 37.0694, 21.5848, 0.83 ) }
    dend_3 { pt3dadd( -55.7366, 44.3483, 25.1412, 0.28 ) }
    dend_3 { pt3dadd( -58.7274, 46.48, 26.1178, 1.11 ) }
    dend_3 { pt3dadd( -61.0148, 48.0751, 26.7459, 0.56 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 47/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.8058, 22.3667, 16.0117, 0.28 ) }
    dend_2 { pt3dadd( -35.9871, 21.3214, 17.295, 0.28 ) }
    dend_2 { pt3dadd( -37.6124, 21.0039, 17.735, 0.56 ) }
    dend_2 { pt3dadd( -39.4112, 20.6467, 18.3486, 0.28 ) }
    dend_2 { pt3dadd( -40.339, 20.4465, 18.6882, 0.56 ) }
    dend_2 { pt3dadd( -43.1426, 19.7935, 19.9303, 0.28 ) }
    dend_2 { pt3dadd( -45.1087, 19.37, 20.872, 0.56 ) }
    dend_2 { pt3dadd( -45.7206, 19.2725, 21.2609, 0.28 ) }
    dend_2 { pt3dadd( -48.3573, 19.3001, 23.2397, 0.56 ) }
    dend_2 { pt3dadd( -49.2057, 19.4474, 23.9173, 0.56 ) }
    dend_2 { pt3dadd( -52.6592, 20.8557, 25.701, 0.28 ) }
    dend_2 { pt3dadd( -53.8837, 21.5853, 25.9994, 0.56 ) }
    dend_2 { pt3dadd( -55.5945, 22.7718, 26.0486, 1.67 ) }
    dend_2 { pt3dadd( -60.6542, 26.5238, 25.5859, 0.28 ) }
    dend_2 { pt3dadd( -62.1797, 27.7451, 25.3144, 1.39 ) }
    dend_2 { pt3dadd( -71.1531, 35.2753, 23.0388, 0.28 ) }
    dend_2 { pt3dadd( -71.8846, 35.9129, 22.7652, 0.83 ) }
    dend_2 { pt3dadd( -76.6415, 39.9254, 20.5643, 0.28 ) }
    dend_2 { pt3dadd( -77.2637, 40.4217, 20.1944, 0.83 ) }
    // Section: dend_37, id: dend_37, parent: dend_33 (entry count 66/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -12.9273, 39.4862, -6.12686, 0.56 ) }
    dend_37 { pt3dadd( -13.5388, 42.405, -6.92805, 0.56 ) }
    dend_37 { pt3dadd( -13.822, 43.7571, -7.29919, 0.83 ) }
    dend_37 { pt3dadd( -14.1269, 45.2123, -7.69866, 0.28 ) }
    dend_37 { pt3dadd( -14.4145, 46.585, -8.07546, 0.56 ) }
    dend_37 { pt3dadd( -15.2749, 50.6917, -9.20272, 0.56 ) }
    dend_37 { pt3dadd( -15.9602, 53.9626, -10.1005, 0.56 ) }
    dend_37 { pt3dadd( -18.4476, 63.7689, -11.8385, 0.56 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 74/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -12.9273, 39.4862, -6.12686, 0.83 ) }
    dend_34 { pt3dadd( -12.982, 45.3335, -11.5016, 0.83 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -7.44311, -62.1814, -3.04521, 0.83 ) }
    dend_13 { pt3dadd( -9.60172, -65.6728, -4.17891, 0.83 ) }
    dend_13 { pt3dadd( -12.1965, -71.4535, -6.07575, 0.83 ) }
    dend_13 { pt3dadd( -13.3552, -74.2278, -6.98384, 0.83 ) }
    dend_13 { pt3dadd( -14.5738, -77.1455, -7.93886, 0.83 ) }
    dend_13 { pt3dadd( -16.9782, -82.9025, -9.82323, 0.83 ) }
    dend_13 { pt3dadd( -18.8704, -87.433, -11.3061, 0.83 ) }
    dend_13 { pt3dadd( -21.1187, -94.3612, -13.6067, 0.83 ) }
    dend_13 { pt3dadd( -22.0247, -98.2708, -14.9998, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 85/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.44311, -62.1814, -3.04521, 0.83 ) }
    dend_12 { pt3dadd( -8.08337, -67.742, -1.78664, 0.83 ) }
    dend_12 { pt3dadd( -8.2836, -70.257, -1.19401, 0.83 ) }
    dend_12 { pt3dadd( -8.3277, -71.2118, -0.92408, 0.56 ) }
    dend_12 { pt3dadd( -8.47007, -75.2317, 0.368818, 0.56 ) }
    dend_12 { pt3dadd( -8.48417, -76.4243, 0.76526, 0.56 ) }
    dend_12 { pt3dadd( -8.48146, -79.7792, 1.87497, 0.56 ) }
    dend_12 { pt3dadd( -8.45617, -82.346, 2.65913, 0.56 ) }
    dend_12 { pt3dadd( -8.42596, -84.6557, 3.49867, 0.56 ) }
    dend_12 { pt3dadd( -8.49119, -86.9634, 4.42225, 0.28 ) }
    dend_12 { pt3dadd( -8.61791, -88.4499, 5.0605, 0.83 ) }
    dend_12 { pt3dadd( -8.76546, -89.7333, 5.59897, 0.83 ) }
    dend_12 { pt3dadd( -9.35151, -93.4688, 7.06184, 0.28 ) }
    dend_12 { pt3dadd( -9.65483, -95.088, 7.59601, 0.83 ) }
    dend_12 { pt3dadd( -10.8082, -100.824, 9.23046, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -11.0221, -101.879, 9.49204, 1.11 ) }
    dend_12 { pt3dadd( -11.5887, -105.082, 10.2284, 0.28 ) }
    dend_12 { pt3dadd( -11.8451, -106.998, 10.6197, 1.39 ) }
    dend_12 { pt3dadd( -12.1245, -113.045, 11.6871, 0.28 ) }
    dend_12 { pt3dadd( -12.0991, -113.703, 11.7995, 1.39 ) }
    dend_12 { pt3dadd( -11.8666, -115.006, 12.0312, 1.94 ) }
    dend_12 { pt3dadd( -10.8036, -118.829, 12.83, 0.28 ) }
    dend_12 { pt3dadd( -10.404, -119.86, 13.0759, 1.11 ) }
    dend_12 { pt3dadd( -8.93916, -122.808, 13.8409, 0.28 ) }
    dend_12 { pt3dadd( -8.68409, -123.222, 13.9575, 0.83 ) }
    dend_12 { pt3dadd( -5.79708, -127.619, 15.0039, 0.28 ) }
    dend_12 { pt3dadd( -5.14956, -128.536, 15.1854, 0.28 ) }
    dend_12 { pt3dadd( -4.54042, -129.33, 15.2355, 0.56 ) }
    dend_12 { pt3dadd( -3.80329, -130.27, 15.1534, 0.28 ) }
    dend_12 { pt3dadd( -3.36142, -130.786, 14.9507, 0.83 ) }
    dend_12 { pt3dadd( -1.56058, -132.539, 13.7795, 0.28 ) }
    dend_12 { pt3dadd( -1.41514, -132.65, 13.6466, 0.56 ) }
    dend_12 { pt3dadd( -0.453985, -133.329, 12.7243, 0.28 ) }
    dend_12 { pt3dadd( 0.216455, -133.786, 12.0853, 0.56 ) }
    dend_12 { pt3dadd( 2.67862, -135.343, 10.0094, 0.28 ) }
    dend_12 { pt3dadd( 2.83777, -135.44, 9.87666, 0.56 ) }
    dend_12 { pt3dadd( 4.07086, -136.212, 8.87943, 0.28 ) }
    dend_12 { pt3dadd( 4.9103, -136.733, 8.20255, 0.83 ) }
    dend_12 { pt3dadd( 7.61288, -138.365, 6.05527, 0.28 ) }
    dend_12 { pt3dadd( 10.8756, -140.274, 3.47635, 0.28 ) }
    dend_12 { pt3dadd( 11.864, -140.814, 2.61428, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 26/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -18.4476, 63.7689, -11.8385, 0.56 ) }
    dend_39 { pt3dadd( -20.4737, 70.8564, -14.0793, 0.56 ) }
    dend_39 { pt3dadd( -23.7676, 77.4865, -16.2737, 0.56 ) }
    dend_39 { pt3dadd( -25.8469, 84.7294, -17.8175, 0.56 ) }
    dend_39 { pt3dadd( -27.7734, 91.7279, -20.4203, 0.56 ) }
    dend_39 { pt3dadd( -30.9643, 98.0934, -23.4498, 0.56 ) }
    dend_39 { pt3dadd( -34.4381, 104.499, -26.0384, 0.56 ) }
    dend_39 { pt3dadd( -37.5349, 111.142, -28.4735, 0.56 ) }
    dend_39 { pt3dadd( -41.2592, 117.648, -30.3314, 0.56 ) }
    dend_39 { pt3dadd( -44.5085, 124.615, -30.6207, 0.56 ) }
    dend_39 { pt3dadd( -47.5131, 131.448, -32.5579, 0.56 ) }
    dend_39 { pt3dadd( -51.6861, 137.739, -34.2211, 0.56 ) }
    dend_39 { pt3dadd( -55.3521, 144.069, -36.7366, 0.56 ) }
    dend_39 { pt3dadd( -58.2275, 150.489, -39.9588, 0.56 ) }
    dend_39 { pt3dadd( -60.5161, 156.722, -43.9568, 0.56 ) }
    dend_39 { pt3dadd( -63.542, 162.903, -47.519, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 42/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -18.4476, 63.7689, -11.8385, 0.28 ) }
    dend_38 { pt3dadd( -20.5402, 76.3011, -14.07, 0.56 ) }
    dend_38 { pt3dadd( -24.027, 88.5936, -15.9088, 0.56 ) }
    dend_38 { pt3dadd( -28.1082, 100.822, -16.4733, 0.56 ) }
    dend_38 { pt3dadd( -31.9867, 112.919, -18.8419, 0.56 ) }
    dend_38 { pt3dadd( -34.778, 124.977, -22.5884, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 48/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.982, 45.3335, -11.5016, 0.56 ) }
    dend_36 { pt3dadd( -14.6776, 46.4446, -13.8157, 0.56 ) }
    dend_36 { pt3dadd( -15.6129, 47.1287, -15.0811, 0.56 ) }
    dend_36 { pt3dadd( -16.5445, 47.8048, -16.2637, 0.28 ) }
    dend_36 { pt3dadd( -18.173, 48.9392, -18.1568, 0.83 ) }
    dend_36 { pt3dadd( -21.6966, 51.3751, -22.2352, 0.56 ) }
    dend_36 { pt3dadd( -22.63, 52.0679, -23.3211, 0.56 ) }
    dend_36 { pt3dadd( -23.3534, 52.6284, -24.1413, 0.56 ) }
    dend_36 { pt3dadd( -24.0132, 53.1816, -24.9047, 0.56 ) }
    dend_36 { pt3dadd( -24.6439, 53.8558, -25.7148, 0.56 ) }
    dend_36 { pt3dadd( -26.4859, 56.2613, -28.0752, 0.56 ) }
    dend_36 { pt3dadd( -27.2057, 57.2325, -28.8372, 0.56 ) }
    dend_36 { pt3dadd( -27.7611, 57.9866, -29.4763, 0.56 ) }
    dend_36 { pt3dadd( -28.2826, 58.7624, -30.1504, 0.83 ) }
    dend_36 { pt3dadd( -29.8187, 61.4721, -32.4351, 0.28 ) }
    dend_36 { pt3dadd( -30.3972, 62.6737, -33.395, 0.56 ) }
    dend_36 { pt3dadd( -33.5549, 67.2047, -39.4277, 0.56 ) }
    dend_36 { pt3dadd( -36.0902, 72.3167, -45.2608, 0.56 ) }
    dend_36 { pt3dadd( -38.2308, 77.7534, -50.9399, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.982, 45.3335, -11.5016, 0.56 ) }
    dend_35 { pt3dadd( -12.7627, 46.7102, -12.5313, 0.56 ) }
    dend_35 { pt3dadd( -12.5742, 48.6404, -14.0097, 0.56 ) }
    dend_35 { pt3dadd( -12.4675, 50.4024, -15.3774, 0.56 ) }
    dend_35 { pt3dadd( -12.4387, 52.3928, -16.8968, 0.56 ) }
    dend_35 { pt3dadd( -12.4637, 56.6533, -20.0773, 0.56 ) }
    dend_35 { pt3dadd( -12.5387, 59.5968, -22.1891, 0.56 ) }
    dend_35 { pt3dadd( -12.6472, 61.5423, -23.6105, 0.56 ) }
    dend_35 { pt3dadd( -12.7711, 63.6959, -25.1577, 0.56 ) }
    dend_35 { pt3dadd( -12.8554, 64.8198, -25.8999, 0.56 ) }
    dend_35 { pt3dadd( -12.9921, 66.414, -26.8838, 0.56 ) }
    dend_35 { pt3dadd( -13.2365, 68.2801, -28.0622, 0.56 ) }
    dend_35 { pt3dadd( -13.5881, 71.1959, -29.7675, 0.56 ) }
    dend_35 { pt3dadd( -13.6647, 72.147, -30.3557, 0.28 ) }
    dend_35 { pt3dadd( -13.7285, 73.0893, -30.9519, 0.56 ) }
    dend_35 { pt3dadd( -13.8524, 76.0957, -32.9749, 0.56 ) }
    dend_35 { pt3dadd( -14.0062, 78.9051, -35.0062, 0.56 ) }
    dend_35 { pt3dadd( -15.3397, 87.2331, -39.887, 0.56 ) }
    dend_35 { pt3dadd( -14.8463, 94.9054, -45.904, 0.56 ) }
    dend_35 { pt3dadd( -13.7181, 102.685, -51.6817, 0.56 ) }
    dend_35 { pt3dadd( -14.3534, 109.639, -58.5499, 0.56 ) }
    dend_35 { pt3dadd( -13.0881, 117.801, -63.7113, 0.56 ) }
    dend_35 { pt3dadd( -11.6288, 126.276, -68.2564, 0.56 ) }
    dend_35 { pt3dadd( -9.62273, 133.894, -74.0163, 0.56 ) }
    dend_35 { pt3dadd( -6.2486, 142.021, -78.1806, 0.56 ) }
    dend_35 { pt3dadd( -2.25469, 149.788, -82.5086, 0.56 ) }
    dend_35 { pt3dadd( 2.74541, 156.682, -87.315, 0.56 ) }
    dend_35 { pt3dadd( 8.65082, 162.338, -92.754, 0.56 ) }
    dend_35 { pt3dadd( 14.3056, 169.292, -96.6583, 0.56 ) }
    dend_35 { pt3dadd( 19.8536, 176.459, -100.302, 0.56 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 97/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -22.0247, -98.2708, -14.9998, 0.83 ) }
    dend_15 { pt3dadd( -23.1098, -101.989, -13.3401, 0.83 ) }
    dend_15 { pt3dadd( -23.8493, -104.16, -12.8794, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_15 { pt3dadd( -24.3649, -105.704, -12.6841, 0.83 ) }
    dend_15 { pt3dadd( -24.7741, -106.901, -12.6085, 0.83 ) }
    dend_15 { pt3dadd( -25.1868, -108.116, -12.5865, 0.83 ) }
    dend_15 { pt3dadd( -26.0115, -110.527, -12.5952, 0.83 ) }
    dend_15 { pt3dadd( -28.0247, -116.011, -12.9186, 0.83 ) }
    dend_15 { pt3dadd( -29.1832, -119.215, -13.1234, 0.83 ) }
    dend_15 { pt3dadd( -30.8796, -124.039, -13.4233, 0.83 ) }
    dend_15 { pt3dadd( -31.7704, -126.657, -13.6114, 1.11 ) }
    dend_15 { pt3dadd( -32.6401, -129.418, -13.8344, 0.83 ) }
    dend_15 { pt3dadd( -33.5551, -132.535, -14.098, 0.83 ) }
    dend_15 { pt3dadd( -34.6237, -136.498, -14.3847, 0.83 ) }
    dend_15 { pt3dadd( -35.0694, -138.253, -14.5005, 0.83 ) }
    dend_15 { pt3dadd( -36.2521, -143.483, -14.7566, 0.83 ) }
    dend_15 { pt3dadd( -36.4644, -144.504, -14.7992, 0.83 ) }
    dend_15 { pt3dadd( -37.5449, -148.898, -15.0658, 0.83 ) }
    dend_15 { pt3dadd( -37.9044, -150.309, -15.1892, 0.83 ) }
    dend_15 { pt3dadd( -39.4213, -155.713, -15.8094, 0.83 ) }
    dend_15 { pt3dadd( -41.4785, -162.653, -16.6506, 0.83 ) }
    dend_15 { pt3dadd( -42.1932, -164.976, -16.934, 0.83 ) }
    dend_15 { pt3dadd( -44.2678, -171.479, -17.8004, 0.83 ) }
    dend_15 { pt3dadd( -45.1289, -174.066, -18.1953, 0.83 ) }
    dend_15 { pt3dadd( -46.2369, -177.048, -18.6999, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 22/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -22.0247, -98.2708, -14.9998, 0.83 ) }
    dend_14 { pt3dadd( -23.6718, -99.1116, -16.3187, 0.83 ) }
    dend_14 { pt3dadd( -24.9849, -99.8831, -17.2383, 0.83 ) }
    dend_14 { pt3dadd( -28.5336, -101.871, -19.9085, 0.56 ) }
    dend_14 { pt3dadd( -29.5132, -102.388, -20.6651, 0.56 ) }
    dend_14 { pt3dadd( -30.7244, -102.986, -21.6454, 0.56 ) }
    dend_14 { pt3dadd( -32.5009, -103.862, -23.0833, 0.56 ) }
    dend_14 { pt3dadd( -34.3284, -104.766, -24.736, 0.56 ) }
    dend_14 { pt3dadd( -36.0396, -105.639, -26.3304, 0.56 ) }
    dend_14 { pt3dadd( -38.1257, -106.622, -27.9682, 0.56 ) }
    dend_14 { pt3dadd( -39.4993, -107.218, -29.1672, 0.83 ) }
    dend_14 { pt3dadd( -46.6977, -110.298, -34.4464, 0.83 ) }
    dend_14 { pt3dadd( -54.9363, -111.931, -38.8038, 0.83 ) }
    dend_14 { pt3dadd( -62.5534, -112.788, -44.3605, 0.83 ) }
    dend_14 { pt3dadd( -69.9896, -114.329, -50.0061, 0.83 ) }
    dend_14 { pt3dadd( -77.1804, -115.933, -55.9438, 0.83 ) }
    dend_14 { pt3dadd( -84.4912, -115.54, -61.9487, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 39/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -46.2369, -177.048, -18.6999, 0.56 ) }
    dend_17 { pt3dadd( -46.9451, -180.735, -19.3587, 0.56 ) }
    dend_17 { pt3dadd( -47.4734, -183.486, -19.8501, 0.56 ) }
    dend_17 { pt3dadd( -47.6678, -184.497, -20.0309, 0.56 ) }
    dend_17 { pt3dadd( -48.3104, -187.843, -20.6288, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 44/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -46.2369, -177.048, -18.6999, 0.56 ) }
    dend_16 { pt3dadd( -45.9839, -178.208, -16.9271, 0.56 ) }
    dend_16 { pt3dadd( -45.7819, -179.407, -15.2256, 0.56 ) }
    dend_16 { pt3dadd( -45.1859, -183.412, -9.75278, 0.56 ) }
    dend_16 { pt3dadd( -45.0223, -184.988, -7.73408, 0.28 ) }
    dend_16 { pt3dadd( -44.9761, -185.354, -7.25952, 0.83 ) }
    dend_16 { pt3dadd( -44.7121, -187.457, -4.5468, 0.28 ) }
    dend_16 { pt3dadd( -44.628, -188.231, -3.44838, 0.56 ) }
    dend_16 { pt3dadd( -44.5393, -189.509, -1.51718, 0.28 ) }
    dend_16 { pt3dadd( -44.5281, -190.403, -0.275331, 0.56 ) }
    dend_16 { pt3dadd( -44.5765, -192.183, 2.03356, 0.28 ) }
    dend_16 { pt3dadd( -44.5532, -192.568, 2.48362, 0.56 ) }
    dend_16 { pt3dadd( -44.2785, -194.333, 4.36987, 0.28 ) }
    dend_16 { pt3dadd( -43.8056, -196.207, 6.22129, 1.11 ) }
    dend_16 { pt3dadd( -43.5433, -197.142, 7.03786, 1.11 ) }
    dend_16 { pt3dadd( -42.9052, -199.381, 8.81806, 0.56 ) }
    dend_16 { pt3dadd( -41.3267, -205.332, 13.2058, 0.28 ) }
    dend_16 { pt3dadd( -40.9827, -206.527, 14.0522, 1.39 ) }
    dend_16 { pt3dadd( -40.0917, -209.381, 15.9187, 0.28 ) }
    dend_16 { pt3dadd( -39.5416, -211.029, 16.9414, 1.11 ) }
    dend_16 { pt3dadd( -38.5431, -214.074, 18.8796, 0.28 ) }
    dend_16 { pt3dadd( -38.1751, -215.274, 19.6992, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 66/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -48.3104, -187.843, -20.6288, 0.56 ) }
    dend_19 { pt3dadd( -49.3684, -190.634, -20.6835, 0.56 ) }
    dend_19 { pt3dadd( -50.1318, -192.834, -20.8019, 0.56 ) }
    dend_19 { pt3dadd( -50.9165, -195.167, -20.9644, 0.56 ) }
    dend_19 { pt3dadd( -52.2581, -199.155, -21.2421, 0.56 ) }
    dend_19 { pt3dadd( -52.6821, -200.415, -21.3299, 0.56 ) }
    dend_19 { pt3dadd( -53.9883, -204.299, -21.6003, 0.56 ) }
    dend_19 { pt3dadd( -54.3673, -205.565, -21.7094, 0.56 ) }
    dend_19 { pt3dadd( -54.645, -206.565, -21.8158, 0.56 ) }
    dend_19 { pt3dadd( -56.2434, -215.288, -21.3151, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 76/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -48.3104, -187.843, -20.6288, 0.28 ) }
    dend_18 { pt3dadd( -48.7236, -190.698, -18.796, 0.28 ) }
    dend_18 { pt3dadd( -48.9475, -191.748, -18.0102, 0.56 ) }
    dend_18 { pt3dadd( -49.3417, -193.608, -16.598, 0.28 ) }
    dend_18 { pt3dadd( -49.594, -194.836, -15.5816, 0.28 ) }
    dend_18 { pt3dadd( -49.9345, -196.492, -14.2102, 0.28 ) }
    dend_18 { pt3dadd( -50.3832, -198.675, -12.4028, 0.56 ) }
    dend_18 { pt3dadd( -51.0491, -201.108, -10.452, 0.28 ) }
    dend_18 { pt3dadd( -51.479, -202.686, -9.11875, 0.28 ) }
    dend_18 { pt3dadd( -51.8273, -204.156, -7.88222, 0.56 ) }
    dend_18 { pt3dadd( -51.8303, -214.139, -1.92027, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_2 = new SectionList()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_28, dend_25, dend_20, dend_8, dend_5, dend_0, dend_32, dend_29, dend_27, dend_26, dend_24, dend_21, dend_9, dend_7, dend_6, dend_4, dend_1, dend_40, dend_33, dend_31, dend_30, dend_23, dend_22, dend_11, dend_10, dend_3, dend_2, dend_37, dend_34, dend_13, dend_12, dend_39, dend_38, dend_36, dend_35, dend_15, dend_14, dend_17, dend_16, dend_19, dend_18]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_5 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_27 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_26 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_24 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_7 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_6 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_40 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_31 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_30 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_22 OneSecGrp_SectionRef_26.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_10 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_3 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_2 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_13 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_36 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_15 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_14 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_28 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_8 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_32 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_20 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_9 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_33 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_34 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_11 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_23 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_19 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_18 OneSecGrp_SectionRef_44.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_34, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_34 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_5 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 5
    dend_24 nseg = 3
    dend_7 nseg = 5
    dend_6 nseg = 9
    dend_4 nseg = 5
    dend_40 nseg = 7
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_22 nseg = 3
    dend_10 nseg = 5
    dend_3 nseg = 3
    dend_2 nseg = 3
    dend_13 nseg = 3
    dend_12 nseg = 5
    dend_39 nseg = 5
    dend_38 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 9
    dend_15 nseg = 5
    dend_14 nseg = 5
    dend_16 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BTC_38a5da4025_0_0


