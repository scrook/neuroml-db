// Cell: bNAC219_L6_DBC_9daccafbcb_0_0
/*
{
  "id" : "bNAC219_L6_DBC_9daccafbcb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "2.20498, -9.63696, 0.0, 2.93949", "1.97921, -8.62937, 0.0, 5.10114", "1.75343, -7.62179, 0.0, 6.34149", "1.52766, -6.61421, 0.0, 7.24948", "1.30189, -5.60662, 0.0, 8.32859", "1.07612, -4.59904, 0.0, 9.63098", "0.850343, -3.59146, 0.0, 10.5761", "0.624571, -2.58388, 0.0, 11.2008", "0.398798, -1.57629, 0.0, 11.5851", "0.173026, -0.56871, 0.0, 11.8715", "-0.0527468, 0.438873, 0.0, 11.942", "-0.278519, 1.44646, 0.0, 11.923", "-0.504292, 2.45404, 0.0, 11.4797", "-0.730064, 3.46162, 0.0, 10.9001", "-0.955837, 4.4692, 0.0, 10.1322", "-1.18161, 5.47679, 0.0, 9.32117", "-1.40738, 6.48437, 0.0, 8.43955", "-1.63315, 7.49195, 0.0, 7.43264", "-1.85893, 8.49954, 0.0, 6.41765", "-2.0847, 9.50712, 0.0, 5.2256", "-2.31047, 10.5147, 0.0, 2.87927" ]
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "1.67666, -9.94541, 7.1, 4.35", "1.67666, -9.94541, 7.1, 4.35", "2.16082, -11.0204, 7.79499, 3.32", "3.03806, -12.696, 9.1702, 2.36", "3.97513, -14.4858, 10.6392, 2.88", "4.06405, -14.6556, 10.7786, 2.65", "4.74122, -15.949, 11.8402, 1.62", "5.66252, -17.5787, 13.3395, 1.84", "6.58441, -18.9433, 14.9525, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.96334, 10.5443, 0.0, 4.28", "-1.96334, 10.5443, 0.0, 4.28", "-2.80418, 12.1985, -0.165946, 3.32", "-3.40047, 13.3661, -0.363115, 2.88", "-3.83248, 14.2144, -0.525144, 2.88", "-4.47767, 15.4813, -0.767129, 3.47", "-5.32115, 17.1375, -1.08348, 2.51", "-6.32402, 19.0756, -1.49305, 2.8", "-7.21289, 20.7359, -1.91816, 4.13", "-7.63237, 21.5058, -2.14798, 4.13" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000015763654744
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.31047, 10.5147, 0.0, 0.48938", "-5.59024, 25.1517, 0.0, 0.48938", "-8.87001, 39.7888, 0.0, 0.48938" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "6.58441, -18.9433, 14.9525, 1.4", "7.50439, -19.7268, 14.0582, 1.4", "8.72862, -20.8015, 12.9087, 1.4", "9.56007, -21.5309, 12.1759, 1.4", "10.6032, -22.4602, 11.3466, 1.4", "11.5152, -23.2812, 10.6592, 1.18", "12.6773, -24.3173, 9.8471, 1.4", "13.2053, -24.8047, 9.51006, 1.55", "13.7261, -25.2881, 9.22925, 1.7", "14.8651, -26.3324, 8.67813, 1.18", "15.7604, -27.1267, 8.3191, 1.18", "16.5675, -27.8266, 8.04647, 1.84", "17.0401, -28.2362, 7.93209, 1.84" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "6.58441, -18.9433, 14.9525, 1.18", "6.3261, -19.5918, 15.8984, 1.18", "5.74414, -21.1901, 18.1555, 1.03", "5.4172, -22.3659, 19.8092, 1.03", "5.30231, -23.0306, 20.7833, 0.96", "5.29054, -23.5835, 21.6577, 0.96", "5.34308, -24.283, 22.867, 1.11", "5.47979, -24.9514, 24.1773, 1.03", "5.67666, -25.6834, 25.7547, 1.18", "5.92383, -26.5822, 27.8762, 1.84", "6.17737, -27.6083, 30.5392, 1.18", "6.27893, -28.3858, 32.6654, 1.18", "6.2065, -28.9434, 34.28, 1.18", "5.82852, -29.5317, 36.0388, 1.33", "5.17651, -30.0072, 37.4907, 1.33", "4.63188, -30.264, 38.2831, 1.33", "3.64368, -30.6298, 39.4946, 1.4", "2.67832, -30.9577, 40.7497, 1.47", "1.3945, -31.3988, 42.7778, 1.33", "0.486005, -31.752, 44.7204, 1.33", "-0.124422, -32.0475, 46.407, 1.4", "-0.859434, -32.486, 49.1308, 1.4", "-1.44447, -32.9306, 52.017, 1.4", "-1.83328, -33.344, 54.3565, 1.4", "-2.27493, -33.9155, 57.103, 1.4", "-2.52416, -34.2323, 58.2586, 1.11", "-3.32579, -35.1385, 60.8452, 1.11", "-4.34357, -36.1364, 63.1879, 1.25", "-4.96281, -36.6985, 64.3379, 1.55", "-6.12385, -37.6739, 66.1251, 1.55", "-7.55395, -38.8278, 68.0407, 1.25", "-9.19884, -40.104, 70.1019, 1.25", "-11.1908, -41.6624, 72.2647, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-7.63237, 21.5058, -2.14798, 2.88", "-8.96769, 23.2245, -3.73904, 2.88", "-9.93486, 24.4694, -4.89144, 2.88", "-10.9053, 25.7184, -6.04773, 3.47" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-7.63237, 21.5058, -2.14798, 2.06", "-6.96196, 23.9982, -0.681685, 2.06", "-6.34662, 26.2739, 0.45713, 0.96", "-6.05448, 27.297, 0.913574, 0.96", "-5.62473, 28.7689, 1.48571, 0.81", "-5.26319, 29.9454, 1.88463, 0.81", "-4.762, 31.5119, 2.36013, 1.03", "-4.43303, 32.5196, 2.53426, 1.11", "-4.04697, 33.6431, 2.63055, 1.55", "-3.55335, 35.1203, 2.71063, 1.18", "-3.11559, 36.5339, 2.75369, 0.88", "-2.89505, 37.3511, 2.76971, 0.74", "-2.59131, 38.7481, 2.77962, 1.18", "-2.30845, 40.3112, 2.82214, 0.81", "-2.01385, 42.1776, 2.89853, 0.96", "-1.76157, 43.8167, 2.95855, 1.25", "-1.53788, 45.2506, 3.0055, 1.25", "-1.28775, 46.589, 3.04274, 0.66", "-0.945216, 47.9804, 3.07508, 0.88", "-0.512262, 49.2208, 3.0529, 0.52", "2.98431E-4, 50.3851, 2.98058, 0.96", "0.366012, 51.1186, 2.90632, 0.96", "1.12434, 52.5043, 2.75695, 0.74", "1.76827, 53.5969, 2.63252, 0.88", "2.57393, 54.9335, 2.47352, 0.88", "3.47061, 56.4669, 2.38607, 0.96", "3.74505, 56.945, 2.3909, 0.96", "4.47637, 58.2631, 2.49861, 0.96", "4.79966, 58.8675, 2.60728, 1.11", "5.19226, 59.6277, 2.79967, 0.96", "5.92832, 60.9687, 3.26695, 0.81", "6.57624, 62.0846, 3.73495, 0.66", "7.42574, 63.5444, 4.37727, 0.59", "8.15244, 64.7884, 5.0191, 0.88", "8.84288, 65.9657, 5.66096, 1.4", "9.86969, 67.6699, 6.65544, 0.88", "10.7503, 69.0625, 7.53056, 0.74", "11.2361, 69.8267, 8.04692, 0.74", "12.4728, 71.6366, 9.31995, 0.74" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-8.87001, 39.7888, 0.0, 0.158858", "-12.1498, 54.4258, 0.0, 0.158858", "-15.4296, 69.0629, 0.0, 0.158858" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "17.0401, -28.2362, 7.93209, 1.7", "18.3843, -28.2555, 9.99047, 1.7", "19.5145, -28.3997, 11.7957, 1.25", "20.379, -28.5994, 13.2219, 1.25", "21.2436, -28.88, 14.6342, 1.55", "22.3331, -29.3137, 16.375, 1.4", "23.3594, -29.7685, 17.9734, 1.62", "24.3745, -30.3115, 19.4591, 1.55", "25.5589, -31.0, 21.1382, 1.4", "26.5709, -31.6052, 22.5025, 1.47", "28.0402, -32.4959, 24.3761, 1.18", "29.4475, -33.3159, 26.0335, 1.18", "31.0063, -34.1735, 27.7159, 1.03", "32.3269, -34.8407, 29.0089, 1.03", "32.8926, -35.0931, 29.509, 1.25", "34.3279, -35.6485, 30.69, 1.11", "35.572, -36.0604, 31.747, 1.33", "36.3568, -36.2841, 32.4181, 1.62", "38.1586, -36.7602, 33.9593, 1.33", "39.9311, -37.184, 35.4917, 1.25", "41.4483, -37.4927, 36.8435, 1.18", "44.0379, -37.907, 39.222, 1.47", "44.7751, -38.007, 39.9395, 1.47" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "17.0401, -28.2362, 7.93209, 0.88", "17.1072, -29.3254, 8.58074, 0.88", "17.0637, -30.944, 9.61445, 0.74", "16.9225, -32.6084, 10.7558, 0.74", "16.772, -33.9089, 11.6303, 0.74", "16.5734, -35.3039, 12.5317, 0.96", "16.3456, -36.6954, 13.3864, 1.7", "15.8784, -38.7782, 14.64, 0.66", "15.4724, -40.228, 15.4157, 0.74", "15.1401, -41.3259, 15.8436, 0.88", "14.8268, -42.3367, 16.0658, 1.11", "14.4661, -43.5643, 16.1351, 1.33", "14.0288, -45.2278, 16.0214, 0.74", "13.698, -46.7826, 15.7703, 0.74", "13.5147, -47.8765, 15.5162, 0.59", "13.2651, -49.7984, 15.0294, 0.88", "13.1108, -51.4674, 14.5984, 0.59", "13.0507, -52.348, 14.3622, 0.59", "12.9878, -53.9512, 13.9442, 0.81", "12.9413, -56.0026, 13.4846, 0.74", "12.9298, -57.0323, 13.2573, 0.59", "12.943, -58.3738, 13.0081, 0.81" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-11.1908, -41.6624, 72.2647, 0.52", "-12.073, -41.0917, 76.1131, 0.52", "-12.4383, -40.7778, 78.0177, 0.52", "-12.7027, -40.5119, 79.5168, 0.52", "-12.9012, -40.3023, 80.7486, 0.52", "-13.2175, -39.961, 82.6076, 0.52", "-13.4564, -39.7057, 83.9229, 0.52", "-13.7039, -39.4214, 85.1244, 0.52", "-14.114, -38.9546, 86.9503, 0.52", "-14.7032, -38.3126, 89.2027, 0.52", "-15.1755, -37.8314, 90.7222, 0.81", "-15.6783, -37.3176, 92.0834, 0.81", "-16.1049, -36.837, 93.1479, 0.59", "-16.9871, -35.7245, 95.3197, 0.59", "-17.5997, -34.7834, 96.9275, 0.52", "-18.093, -33.8666, 98.285, 0.37", "-18.6673, -32.5415, 100.136, 0.44", "-19.1509, -31.137, 101.926, 0.29", "-19.4708, -29.9332, 103.403, 0.29", "-19.7959, -28.3933, 105.096, 0.29", "-20.0234, -27.1291, 106.439, 0.29", "-20.3304, -25.2369, 108.38, 0.29", "-20.4817, -24.2438, 109.39, 0.29", "-20.8137, -22.1372, 111.527, 0.29", "-21.0369, -20.7526, 112.906, 0.22", "-21.422, -18.5133, 115.159, 0.22", "-21.5962, -17.5084, 116.202, 0.22", "-21.9278, -15.7792, 117.977, 0.22", "-22.3419, -13.8163, 120.105, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-11.1908, -41.6624, 72.2647, 1.03", "-11.3067, -42.5645, 72.2647, 1.03", "-11.4745, -43.8279, 72.4112, 0.74", "-11.6537, -45.3202, 72.651, 0.74", "-11.782, -46.5124, 72.8577, 0.88", "-11.929, -48.1212, 73.0828, 0.96", "-11.9916, -48.9473, 73.1778, 0.96", "-12.1063, -51.1908, 73.4033, 1.03", "-12.1562, -52.6925, 73.5337, 0.66", "-12.1685, -53.8978, 73.6313, 0.52", "-12.1287, -55.4349, 73.7352, 0.66", "-12.038, -56.7243, 73.7935, 0.96", "-11.9381, -58.092, 73.8125, 1.11", "-11.893, -58.6227, 73.7975, 1.11", "-11.7514, -59.9914, 73.7899, 0.66", "-11.6575, -60.8199, 73.8042, 0.66", "-11.5185, -61.9863, 73.8495, 0.66", "-11.3557, -63.3867, 73.9616, 0.88", "-11.1887, -64.9399, 74.1602, 0.81", "-11.0231, -66.7167, 74.5034, 0.74", "-10.905, -68.3261, 74.8928, 0.66", "-10.8216, -69.8601, 75.3445, 0.52", "-10.7364, -71.8949, 76.0168, 0.52", "-10.6946, -73.071, 76.465, 0.52", "-10.6981, -74.6748, 77.1156, 0.52", "-10.726, -75.7351, 77.5485, 0.66", "-10.7622, -76.9028, 78.0054, 0.96", "-10.8024, -78.5639, 78.5987, 1.03", "-10.8152, -80.3198, 79.0887, 0.74", "-10.7989, -81.9539, 79.451, 0.44", "-10.7684, -82.9958, 79.6327, 0.22", "-10.7464, -83.4659, 79.7057, 0.22", "-10.6618, -84.6406, 79.8518, 0.52", "-10.5084, -86.0649, 79.9279, 0.52", "-10.2464, -87.7876, 79.8897, 0.22", "-10.0763, -88.6858, 79.8835, 0.22", "-9.83483, -89.8901, 79.9301, 0.66", "-9.47009, -91.5893, 80.0502, 0.66", "-9.07983, -93.241, 80.2069, 0.37", "-8.75208, -94.5057, 80.4115, 0.22", "-8.2109, -96.5862, 80.8581, 0.29", "-7.87877, -97.9499, 81.0625, 0.29", "-7.72112, -98.6421, 81.1266, 0.66", "-7.47974, -99.7357, 81.159, 0.96", "-7.10632, -101.496, 81.1121, 0.96", "-6.77597, -103.039, 80.9307, 0.37", "-6.12337, -106.167, 80.3329, 0.44", "-5.95242, -107.081, 80.1469, 0.44", "-5.66187, -108.866, 79.8496, 0.52", "-5.4163, -110.579, 79.6263, 0.44", "-5.25734, -111.809, 79.5213, 0.44", "-5.04091, -113.616, 79.5025, 0.44", "-4.82017, -115.634, 79.7063, 0.44", "-4.66865, -117.256, 79.924, 0.44", "-4.58414, -118.449, 80.1175, 0.44", "-4.51151, -119.584, 80.3197, 0.44", "-4.47585, -120.808, 80.5565, 0.52", "-4.48694, -122.304, 80.8508, 0.52", "-4.51804, -123.203, 81.0157, 0.52", "-4.6495, -125.216, 81.3185, 0.22", "-4.76237, -126.861, 81.5205, 0.22", "-4.86442, -128.34, 81.6609, 0.22", "-4.9705, -129.88, 81.7639, 0.29", "-5.04207, -131.317, 81.7783, 0.29", "-5.08233, -132.99, 81.8743, 0.29", "-5.07254, -135.107, 82.0802, 0.22", "-5.04563, -135.942, 82.186, 0.29", "-4.94425, -137.511, 82.4141, 0.37", "-4.79065, -139.355, 82.7175, 0.37", "-4.52412, -142.422, 83.1776, 0.22", "-4.43186, -143.395, 83.3071, 0.22", "-4.33276, -144.523, 83.4297, 0.37", "-4.22808, -145.796, 83.5245, 0.37", "-4.05405, -147.982, 83.6445, 0.29", "-3.95264, -149.442, 83.6938, 0.22", "-3.87575, -150.615, 83.6698, 0.22", "-3.80432, -151.895, 83.7213, 0.29", "-3.73876, -153.561, 83.885, 0.29", "-3.71501, -154.976, 84.178, 0.29", "-3.72016, -156.02, 84.4538, 0.29", "-3.74469, -157.958, 85.0856, 0.15", "-3.79293, -159.841, 85.7799, 0.15", "-3.81765, -160.712, 86.1472, 0.37", "-3.87362, -163.021, 87.2717, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-10.9053, 25.7184, -6.04773, 2.8", "-12.2353, 25.9439, -6.96773, 2.8" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.9053, 25.7184, -6.04773, 1.77", "-10.6935, 27.0911, -7.22189, 1.77", "-10.4755, 28.9564, -8.89846, 1.4", "-10.3389, 30.4163, -10.2229, 1.4", "-10.265, 31.3525, -11.0947, 1.7", "-10.1942, 32.5768, -12.2721, 1.84", "-10.1294, 34.0116, -13.6645, 1.84", "-10.1156, 35.3368, -15.013, 1.4", "-10.1184, 36.743, -16.4154, 1.84", "-10.1352, 38.4028, -17.9662, 1.62", "-10.1742, 40.4084, -19.697, 1.77", "-10.2311, 41.535, -20.5463, 1.77", "-10.3927, 43.3361, -21.7611, 1.62", "-10.5415, 44.4748, -22.45, 1.62", "-10.8699, 46.341, -23.4874, 1.47", "-11.1466, 47.6084, -24.1271, 1.47", "-11.7135, 49.9452, -25.2569, 1.4", "-12.1578, 51.7271, -26.1376, 1.47", "-12.5449, 53.3788, -27.004, 1.55", "-12.7268, 54.3436, -27.5725, 1.55", "-12.9331, 56.0952, -28.6907, 1.25", "-12.9859, 57.818, -29.8244, 1.25", "-12.8904, 59.2114, -30.7254, 1.4", "-12.6814, 60.6821, -31.6121, 1.25", "-12.342, 62.4237, -32.537, 1.25", "-12.093, 63.6684, -33.0828, 1.25", "-11.8012, 65.1531, -33.6797, 1.47", "-11.6755, 66.0132, -33.9825, 1.62", "-11.6101, 67.0974, -34.3088, 1.33", "-11.6952, 69.4488, -34.8915, 1.11", "-11.8879, 70.8743, -35.2457, 1.11", "-12.1955, 72.556, -35.6962, 1.25", "-12.4132, 73.4968, -35.9766, 1.47", "-12.8119, 74.9657, -36.4502, 1.4", "-13.2495, 76.3178, -36.9216, 1.25", "-14.0378, 78.1531, -37.5874, 1.47" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.4728, 71.6366, 9.31995, 0.15", "11.9471, 71.8073, 12.6076, 0.15", "11.709, 71.9435, 14.1627, 0.15", "11.5698, 72.0858, 15.1144, 0.29", "11.2554, 72.6374, 17.5934, 0.22", "11.0338, 73.218, 19.6639, 0.22", "10.878, 73.8051, 21.3464, 0.37", "10.8598, 73.9398, 21.6686, 0.81", "10.8371, 74.4826, 22.5601, 0.15", "10.8551, 75.3631, 23.6386, 0.22", "10.8812, 75.7356, 24.0104, 0.59", "10.941, 76.4286, 24.7057, 1.03", "10.9888, 77.6678, 26.0722, 0.15", "10.9726, 78.1088, 26.6739, 0.29", "10.8464, 78.9973, 28.2665, 0.22", "10.6084, 79.866, 30.1674, 0.37", "10.4266, 80.317, 31.3595, 0.37", "10.259, 80.6113, 32.3867, 0.44", "9.92137, 81.0195, 34.239, 0.37", "9.55886, 81.3876, 36.139, 0.37", "9.29531, 81.596, 37.3542, 0.37", "8.93233, 81.8366, 38.9037, 0.37", "8.40765, 82.1933, 41.2978, 0.37", "7.92609, 82.5874, 43.9178, 0.15" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.4728, 71.6366, 9.31995, 0.96", "13.6665, 73.3976, 8.45481, 0.96", "14.0773, 73.9992, 8.21147, 0.88", "14.8245, 75.0679, 7.84148, 0.74", "15.6692, 76.275, 7.49195, 0.96", "16.4335, 77.3826, 7.16491, 0.81", "17.1083, 78.3817, 6.86347, 0.44", "17.7455, 79.4064, 6.6106, 0.44", "18.1995, 80.2093, 6.38354, 0.66", "18.9008, 81.57, 5.96607, 0.52", "19.4437, 82.7169, 5.58046, 0.74", "19.8804, 83.7021, 5.19751, 1.11", "20.261, 84.6651, 4.81017, 0.66", "20.7905, 86.0973, 4.24515, 0.66", "21.1373, 87.0561, 3.88563, 0.66", "21.5977, 88.28, 3.48724, 0.81", "21.9516, 89.1526, 3.2735, 0.59", "22.5194, 90.4575, 2.97888, 0.52", "22.9406, 91.4094, 2.77702, 0.52", "23.2022, 91.9872, 2.67129, 0.52", "23.7125, 93.1341, 2.50645, 0.66", "24.1591, 94.1153, 2.41543, 0.88", "24.7628, 95.3405, 2.32638, 1.03", "25.4313, 96.5844, 2.26202, 0.52", "26.0063, 97.6285, 2.23514, 0.29", "26.5612, 98.5951, 2.23826, 0.29", "27.2146, 99.7201, 2.34356, 0.52", "27.9001, 100.862, 2.5602, 0.22", "28.2702, 101.47, 2.72819, 0.15", "28.7096, 102.22, 2.95121, 0.66", "29.1961, 103.217, 3.27028, 0.29", "29.6843, 104.534, 3.7564, 0.52", "29.8737, 105.203, 4.0393, 1.03", "30.128, 106.214, 4.50404, 0.37", "30.3658, 107.095, 4.86669, 0.44", "30.8247, 108.625, 5.35457, 0.59", "31.2972, 110.171, 5.67041, 0.88", "31.5798, 111.082, 5.74559, 0.88", "31.8323, 111.897, 5.75712, 0.66", "32.4185, 113.658, 5.58339, 0.29", "32.891, 114.96, 5.29424, 0.66", "33.277, 115.968, 4.95369, 0.44", "33.5206, 116.638, 4.69618, 0.44", "33.87, 117.729, 4.31117, 0.22", "34.1922, 118.863, 3.98469, 0.22", "34.4247, 119.717, 3.87169, 0.66", "34.6223, 120.402, 3.85659, 0.88", "34.9834, 121.561, 3.92408, 0.52", "35.2846, 122.483, 4.09396, 0.52", "35.6887, 123.71, 4.49294, 0.52", "36.2548, 125.443, 5.24307, 0.52", "36.5539, 126.319, 5.68768, 0.96", "36.9714, 127.435, 6.31831, 0.66", "37.539, 128.76, 7.11488, 0.22", "37.8556, 129.438, 7.52296, 0.22", "38.2193, 130.176, 7.92338, 0.29", "38.7437, 131.181, 8.3433, 0.37", "39.4442, 132.384, 8.69677, 0.52", "40.0087, 133.222, 8.83154, 0.81", "40.5155, 133.901, 8.81456, 0.81", "41.4456, 135.076, 8.61889, 0.22", "42.0919, 135.866, 8.47777, 0.59", "43.0406, 137.012, 8.24813, 0.59", "43.8221, 137.957, 8.06195, 0.22", "44.8103, 139.207, 7.87583, 0.15", "45.5077, 140.183, 7.79088, 0.15", "46.6406, 141.998, 7.92636, 0.59", "47.011, 142.683, 8.08052, 0.59", "47.4455, 143.612, 8.38764, 0.59", "47.8094, 144.475, 8.70484, 0.29", "48.2121, 145.459, 9.09065, 0.22", "48.9829, 147.265, 9.71171, 0.22", "49.2258, 147.802, 9.82897, 0.22", "49.6779, 148.74, 9.99187, 0.52", "50.2182, 149.812, 10.1238, 0.59", "50.5612, 150.476, 10.1651, 0.59", "51.2168, 151.704, 10.2128, 0.29", "51.6575, 152.564, 10.2131, 0.29", "52.1915, 153.729, 10.2487, 0.37", "52.4929, 154.501, 10.2975, 0.29", "52.7765, 155.431, 10.4489, 0.44", "53.1647, 156.979, 10.797, 0.44", "53.4119, 158.08, 11.0768, 0.66", "53.642, 159.105, 11.3549, 0.88", "53.9446, 160.46, 11.7112, 0.66", "54.5999, 162.99, 12.3301, 0.37", "54.9892, 164.24, 12.6468, 0.22", "55.3838, 165.37, 12.8832, 0.52", "55.6874, 166.103, 13.0087, 0.59", "56.1747, 167.112, 13.1016, 0.29", "56.7028, 168.104, 13.1652, 0.22", "57.6776, 169.888, 13.2407, 0.15", "58.4141, 171.297, 13.3865, 0.37", "58.8499, 172.198, 13.5254, 0.37", "59.2893, 173.213, 13.6999, 0.37", "60.1795, 175.382, 14.0834, 0.81", "60.6202, 176.525, 14.2937, 0.96", "60.9574, 177.429, 14.4495, 0.52", "61.3415, 178.511, 14.6968, 0.22", "61.7936, 179.912, 15.0277, 0.29", "62.2356, 181.337, 15.3306, 0.22", "62.5964, 182.505, 15.5142, 0.74", "63.1235, 184.209, 15.7817, 0.29", "63.7013, 186.082, 16.1398, 0.52", "64.0194, 187.087, 16.3651, 0.59", "64.3823, 188.25, 16.6527, 0.29", "64.6191, 189.1, 16.8388, 0.29", "64.8875, 190.143, 17.0787, 0.29", "65.1533, 191.18, 17.3885, 0.66", "65.3619, 191.934, 17.6518, 0.96", "65.6067, 192.786, 18.0649, 0.37", "65.9547, 194.038, 18.7822, 0.29", "66.3084, 195.567, 19.7013, 0.37", "66.5719, 196.961, 20.5518, 0.66", "66.7093, 197.794, 21.0435, 0.44", "66.9556, 199.322, 21.9109, 0.88", "67.1092, 200.265, 22.4137, 1.11", "67.3771, 202.046, 23.2822, 0.22", "67.49, 202.926, 23.5847, 0.22", "67.5835, 203.822, 23.8071, 0.15", "67.6487, 204.856, 23.999, 0.15", "67.6774, 205.612, 24.0959, 0.15", "67.7071, 206.824, 24.2637, 0.37", "67.7501, 208.04, 24.4385, 0.37", "67.7732, 208.789, 24.5574, 0.22", "67.8124, 209.894, 24.7398, 0.44", "67.8398, 210.491, 24.8341, 0.44", "67.9008, 211.342, 24.9545, 0.44", "67.988, 212.09, 25.0201, 0.66", "68.1374, 212.916, 25.1025, 0.37", "68.3708, 213.851, 25.1955, 0.37", "68.702, 214.849, 25.2876, 0.22", "68.8658, 215.283, 25.3196, 0.22", "69.3033, 216.404, 25.3874, 0.22", "69.8834, 217.863, 25.4064, 0.52", "70.2191, 218.714, 25.3852, 0.96", "70.4556, 219.342, 25.349, 0.96", "70.9013, 220.593, 25.2418, 0.22", "71.2209, 221.602, 25.1225, 0.29", "71.5603, 222.867, 24.9013, 0.29", "71.7259, 223.61, 24.7211, 0.81", "71.8585, 224.265, 24.5517, 0.52", "72.0501, 225.33, 24.2469, 0.37", "72.1607, 226.068, 23.9557, 0.37", "72.278, 227.012, 23.5331, 0.74", "72.3569, 227.728, 23.2074, 0.74", "72.4563, 228.617, 22.7715, 0.29", "72.5506, 229.494, 22.3341, 0.37", "72.7559, 231.438, 21.3954, 0.37", "72.866, 232.379, 20.9418, 0.52", "72.9775, 233.112, 20.6167, 0.52", "73.1207, 233.687, 20.36, 0.52", "73.4213, 234.509, 20.0746, 0.59", "73.7922, 235.317, 19.8814, 0.22", "74.5015, 236.618, 19.7574, 0.44", "75.171, 237.668, 19.7185, 0.52", "76.3449, 239.295, 19.8281, 0.29", "77.5104, 240.693, 20.1551, 0.44", "78.2466, 241.476, 20.5228, 0.44", "79.2126, 242.44, 21.2774, 0.44", "79.851, 243.084, 21.9311, 0.44", "80.5689, 243.866, 22.8613, 0.44", "81.3525, 244.81, 24.0851, 0.22", "82.0039, 245.672, 25.2064, 0.74", "82.6668, 246.7, 26.4905, 0.74", "83.0395, 247.455, 27.3195, 0.59", "83.4424, 248.554, 28.3878, 0.22", "83.5723, 249.023, 28.7677, 0.15", "83.74, 249.952, 29.3649, 0.29", "83.8693, 251.055, 29.9249, 0.29", "83.9401, 252.162, 30.3722, 0.29", "83.9557, 252.808, 30.62, 0.52", "83.955, 253.532, 30.8556, 0.88", "83.9176, 254.785, 31.2281, 0.52", "83.8714, 255.636, 31.3677, 0.52", "83.795, 256.544, 31.4083, 0.22", "83.6719, 257.548, 31.4184, 0.22", "83.5798, 258.218, 31.4188, 0.52", "83.5015, 258.751, 31.4112, 0.81", "83.1825, 260.875, 31.3369, 0.22", "83.0036, 261.912, 31.2914, 0.22", "82.6503, 263.77, 31.2044, 0.22", "82.5774, 264.14, 31.1681, 0.37", "82.449, 264.837, 31.1004, 0.96", "82.4046, 265.114, 31.0786, 0.96", "82.2525, 266.268, 31.0301, 0.22", "82.2238, 266.582, 31.0095, 0.22", "82.1631, 267.753, 30.8982, 0.37", "82.153, 268.501, 30.8889, 0.88", "82.1965, 270.022, 30.9634, 0.22", "82.2496, 270.706, 31.0298, 0.37", "82.4205, 272.134, 31.2542, 0.66", "82.5663, 273.24, 31.525, 0.22", "82.741, 274.49, 31.9365, 0.66", "82.8339, 275.146, 32.193, 0.66", "82.9788, 276.134, 32.6829, 0.44", "83.0412, 276.636, 32.9913, 0.59", "83.1627, 277.752, 33.8007, 0.15", "83.2016, 278.202, 34.2068, 0.37", "83.2279, 278.593, 34.6013, 0.37", "83.2622, 279.435, 35.5312, 0.15", "83.2786, 280.064, 36.2556, 0.15", "83.3047, 280.415, 36.6099, 0.29", "83.4062, 281.151, 37.2713, 0.29", "83.5808, 282.185, 38.0651, 0.22", "83.7352, 283.085, 38.6073, 0.66", "83.7671, 283.299, 38.7084, 0.66", "83.8827, 284.635, 39.3391, 0.15", "83.897, 285.668, 39.8335, 0.15", "83.8321, 286.468, 40.2571, 0.37", "83.7588, 286.997, 40.6102, 0.37", "83.6064, 287.871, 41.2027, 0.22", "83.3221, 289.254, 42.1158, 0.22", "83.1761, 289.953, 42.5543, 0.37", "82.8127, 291.838, 43.5751, 0.15", "82.5039, 293.593, 44.3451, 0.15", "82.192, 295.764, 45.0829, 0.15", "82.0653, 296.969, 45.3717, 0.15", "81.9793, 298.73, 45.6313, 0.15", "82.0552, 300.166, 45.7475, 0.15", "82.457, 302.29, 45.7276, 0.15", "82.8215, 303.342, 45.6243, 0.15", "83.2699, 304.159, 45.5086, 0.15", "83.9235, 305.01, 45.3559, 0.37", "85.6101, 306.641, 45.0002, 0.15", "86.6222, 307.403, 44.8264, 0.15", "87.8599, 308.165, 44.7077, 0.15", "88.3202, 308.428, 44.6772, 0.59", "89.2485, 308.938, 44.6848, 0.29", "89.9702, 309.343, 44.7706, 0.15", "90.3512, 309.594, 44.8762, 0.29", "91.2505, 310.303, 45.2454, 0.88", "91.7975, 310.841, 45.6121, 0.22", "92.5227, 311.798, 46.3583, 0.22", "92.797, 312.297, 46.8277, 0.22", "93.2097, 313.224, 47.8212, 0.29", "93.4432, 313.864, 48.5698, 0.15", "93.8241, 315.156, 50.1632, 0.66", "94.1103, 316.388, 51.7339, 0.37", "94.3356, 317.755, 53.5445, 0.15", "94.4249, 318.669, 54.7242, 0.15", "94.4367, 319.469, 55.6946, 0.15", "94.4156, 319.832, 56.0597, 0.15", "94.3301, 320.58, 56.5891, 0.52", "94.1754, 321.703, 57.0478, 0.52", "93.8725, 323.749, 57.4285, 0.15", "93.6262, 325.475, 57.5557, 0.15", "93.4663, 327.002, 57.5391, 0.15", "93.312, 329.207, 57.4044, 0.15", "93.2209, 332.003, 57.1134, 0.15", "93.2505, 333.951, 56.8292, 0.15", "93.3151, 334.919, 56.66, 0.22", "93.5253, 336.836, 56.282, 0.07", "93.6108, 337.461, 56.15, 0.07", "93.8033, 338.71, 55.8569, 0.22", "94.1033, 340.554, 55.4707, 0.07", "94.217, 341.212, 55.2959, 0.07", "94.3033, 341.707, 55.137, 0.22", "94.4348, 342.383, 54.8838, 0.59", "94.8602, 344.079, 54.1106, 0.07", "95.223, 345.193, 53.5257, 0.07", "95.4005, 345.643, 53.2724, 0.29", "95.6367, 346.181, 52.9589, 0.29", "96.1388, 347.319, 52.313, 0.07", "96.6805, 348.633, 51.6553, 0.07", "96.8927, 349.246, 51.4065, 0.07", "96.9927, 349.677, 51.2367, 0.29", "97.0601, 350.252, 51.0586, 0.29", "97.1504, 351.854, 50.6303, 0.15", "97.0949, 353.301, 50.3033, 0.15", "96.977, 354.306, 50.1305, 0.29", "96.6949, 356.018, 49.8382, 0.22", "96.3445, 357.818, 49.5533, 0.74" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "44.7751, -38.007, 39.9395, 0.88", "45.1135, -36.6487, 39.8854, 0.88", "45.2982, -35.7114, 39.918, 0.74", "45.5152, -34.3685, 40.0029, 0.81", "45.7207, -32.873, 40.1154, 0.88", "45.8893, -31.4888, 40.2258, 1.4", "46.0225, -30.1496, 40.3804, 0.96", "46.071, -28.4788, 40.6431, 0.88", "46.0537, -27.5099, 40.8236, 0.81", "46.0109, -26.9053, 40.893, 0.81", "45.8842, -26.0091, 40.9072, 0.81", "45.5485, -24.367, 40.7646, 1.18", "45.2279, -23.1084, 40.5747, 1.18", "44.8372, -21.6724, 40.2917, 1.18", "44.0024, -18.4253, 39.7437, 0.96", "43.4903, -16.1379, 39.4219, 0.59", "43.2169, -14.5863, 39.294, 0.59", "43.0607, -13.2597, 39.2911, 0.74", "42.9831, -11.8897, 39.4488, 1.11", "42.964, -9.72447, 40.0322, 1.4", "43.0439, -8.01042, 40.7156, 1.4", "43.1925, -6.03827, 41.5787, 1.18", "43.2975, -4.57935, 42.1861, 1.47", "43.3435, -3.49151, 42.5412, 1.11", "43.308, -1.50984, 42.8773, 0.74", "43.2137, -0.279626, 42.844, 1.03", "43.0796, 0.812478, 42.6328, 1.11", "42.8044, 2.4363, 42.0372, 0.88", "42.4658, 4.00834, 41.2475, 0.88", "42.0903, 5.38423, 40.4364, 0.74", "41.8016, 6.28679, 39.8214, 0.66", "41.419, 7.36789, 39.0815, 0.59", "41.0011, 8.59488, 38.262, 0.81", "40.5815, 9.8702, 37.526, 0.88", "40.0811, 11.5579, 36.7199, 0.81", "39.7084, 12.9863, 36.136, 0.81", "39.4092, 14.5061, 35.5966, 0.81", "39.2169, 16.1937, 35.0926, 0.66", "39.1606, 17.693, 34.7345, 0.88", "39.1876, 19.0234, 34.4456, 1.18", "39.2384, 19.8946, 34.2668, 1.18", "39.3835, 21.6552, 33.9283, 0.81", "39.5917, 23.5426, 33.5659, 0.96", "39.764, 25.0868, 33.2347, 0.96", "39.9279, 26.4266, 32.8787, 1.11", "40.0735, 27.5039, 32.58, 1.11", "40.2405, 28.6488, 32.2718, 0.88", "40.476, 30.1464, 31.9492, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "44.7751, -38.007, 39.9395, 0.88", "46.2187, -40.34, 42.8538, 0.88", "46.7528, -41.1058, 43.7107, 0.66", "47.5835, -42.3509, 45.0772, 0.74", "47.876, -42.8673, 45.6233, 1.03", "48.1262, -43.4102, 46.1381, 0.74", "48.4434, -44.2566, 46.8845, 0.96", "48.8758, -45.8727, 48.013, 1.03", "49.1992, -47.7042, 49.2865, 0.74", "49.4069, -49.3943, 50.4388, 1.03", "49.5262, -50.8121, 51.4451, 0.88", "49.6062, -52.2471, 52.5225, 0.81", "49.6249, -53.3505, 53.3554, 0.66", "49.6174, -54.7565, 54.3763, 0.66", "49.644, -56.4202, 55.5054, 0.88", "49.7457, -58.2106, 56.7253, 1.11", "49.9389, -60.0944, 58.0423, 0.96", "50.202, -61.9101, 59.2637, 0.96", "50.4366, -63.1407, 60.0419, 0.96", "50.8731, -65.0436, 61.178, 1.03", "51.3252, -66.9023, 62.2208, 0.81", "51.6383, -68.025, 62.8054, 0.81", "51.9578, -68.9864, 63.2638, 0.66", "52.4744, -70.1652, 63.8559, 0.88", "53.2949, -71.7363, 64.7247, 0.81" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "12.943, -58.3738, 13.0081, 0.29", "12.7062, -59.4245, 13.441, 0.29", "12.4821, -60.6458, 13.9121, 0.29", "12.3657, -61.4523, 14.2401, 0.81", "12.2203, -62.7607, 14.7704, 0.59", "12.1115, -64.12, 15.3658, 0.44", "12.0625, -65.2446, 15.9081, 0.22", "12.0854, -66.0752, 16.3362, 0.22", "12.1903, -67.1238, 16.9223, 0.22", "12.2686, -67.7702, 17.3361, 0.74", "12.4123, -68.951, 18.1598, 0.74", "12.5393, -70.0256, 18.9462, 0.96", "12.5957, -70.642, 19.3773, 1.11", "12.6804, -72.0412, 20.2948, 0.37", "12.7456, -73.2683, 20.9827, 0.22", "12.7914, -74.0239, 21.3272, 0.66", "12.8479, -74.8952, 21.5967, 0.66", "12.9107, -75.7089, 21.7608, 0.66", "12.989, -76.5395, 21.8861, 0.29", "13.1288, -77.5814, 21.9852, 0.22", "13.3575, -78.8171, 22.1125, 0.66", "13.6097, -80.0509, 22.336, 0.88", "13.7874, -80.9451, 22.5649, 0.37", "14.01, -82.1974, 22.9544, 0.22", "14.1192, -82.9564, 23.2445, 0.59", "14.2226, -83.9071, 23.6588, 0.74", "14.3783, -85.5925, 24.4583, 0.15", "14.4309, -86.2319, 24.7666, 0.15", "14.4877, -87.073, 25.1381, 0.37", "14.5847, -88.6365, 25.7171, 0.22", "14.6232, -89.1342, 25.8683, 0.66", "14.686, -89.7356, 26.0179, 1.11", "14.8087, -90.6216, 26.1909, 0.37", "15.0318, -91.8687, 26.4253, 0.15", "15.1996, -92.6726, 26.6052, 0.44", "15.5231, -94.1082, 26.9896, 0.15", "15.7893, -95.2887, 27.3644, 0.15", "15.9389, -95.9866, 27.6277, 0.81", "16.054, -96.5527, 27.8565, 1.18", "16.372, -98.4142, 28.6716, 0.15", "16.5136, -99.4645, 29.1375, 0.15", "16.5561, -100.012, 29.385, 0.81", "16.5831, -100.888, 29.8387, 0.81", "16.5832, -101.749, 30.3329, 0.22", "16.555, -102.975, 31.1114, 0.15", "16.5388, -103.397, 31.3852, 0.22", "16.4991, -104.476, 32.1157, 0.15", "16.4512, -106.056, 33.3224, 0.15", "16.4395, -106.565, 33.7327, 0.59", "16.411, -107.849, 34.8052, 0.15", "16.4022, -108.44, 35.276, 0.15", "16.3998, -109.208, 35.8354, 0.81", "16.4467, -110.938, 36.8801, 0.15", "16.4886, -111.767, 37.2782, 0.15", "16.5232, -112.328, 37.5086, 0.52", "16.5827, -113.116, 37.7568, 0.66", "16.6473, -114.083, 37.9933, 0.29", "16.7011, -115.248, 38.1616, 0.15", "16.71, -115.82, 38.1895, 0.15", "16.7003, -116.43, 38.2131, 0.59", "16.6643, -117.191, 38.202, 0.88", "16.5833, -118.13, 38.1447, 0.29", "16.477, -118.936, 38.0596, 0.22", "16.3092, -120.062, 37.906, 0.07", "16.2195, -120.802, 37.7619, 0.07", "16.1007, -122.081, 37.4695, 0.07", "16.0876, -122.377, 37.3964, 0.29", "16.1027, -123.209, 37.2065, 0.66", "16.1655, -124.264, 36.9946, 0.15", "16.2539, -125.472, 36.8045, 0.15", "16.3155, -126.305, 36.6808, 0.29", "16.3764, -127.305, 36.5637, 0.15", "16.4151, -128.178, 36.455, 0.37", "16.4295, -128.775, 36.3592, 0.37", "16.4211, -129.905, 36.1539, 0.22", "16.389, -130.861, 35.982, 0.44", "16.3477, -131.825, 35.7281, 0.96", "16.32, -132.472, 35.5039, 0.22", "16.2799, -133.795, 34.9655, 0.15", "16.2776, -134.069, 34.8511, 0.15", "16.3053, -135.165, 34.3487, 0.29", "16.3655, -136.413, 33.7277, 0.15", "16.4164, -137.07, 33.3646, 0.15", "16.4387, -137.343, 33.2109, 0.37", "16.4953, -138.069, 32.8221, 0.88", "16.6278, -139.606, 32.0547, 0.15", "16.6922, -140.403, 31.7, 0.15", "16.7409, -141.197, 31.4246, 0.15", "16.7589, -141.932, 31.2202, 0.66", "16.7534, -142.758, 31.0525, 0.22", "16.7233, -143.555, 30.9489, 0.22", "16.6708, -144.275, 30.918, 0.15", "16.624, -144.801, 30.9113, 0.15", "16.5219, -145.791, 30.8958, 0.66", "16.3269, -147.374, 30.8679, 0.15", "16.2498, -147.93, 30.8578, 0.15", "16.1812, -148.401, 30.8495, 0.22", "16.0932, -149.076, 30.8382, 0.15", "16.01, -149.761, 30.8281, 0.96", "15.8795, -150.825, 30.8157, 0.44", "15.7419, -151.954, 30.8078, 0.15", "15.6684, -152.63, 30.7814, 0.15", "15.6078, -153.227, 30.7082, 0.15", "15.5383, -153.901, 30.5789, 0.15", "15.4466, -154.681, 30.391, 0.44", "15.316, -155.623, 30.1368, 0.44", "15.1094, -156.874, 29.8435, 0.15", "14.8375, -158.481, 29.535, 0.15", "14.7103, -159.244, 29.4146, 0.44", "14.5373, -160.34, 29.2818, 0.22", "14.3821, -161.528, 29.2445, 0.22", "14.1751, -163.298, 29.3402, 0.07", "14.0514, -164.49, 29.5168, 0.07", "14.0118, -164.929, 29.6096, 0.29", "13.9469, -165.735, 29.7932, 0.96", "13.7948, -167.901, 30.3621, 0.15", "13.7315, -168.711, 30.5907, 0.15", "13.6511, -169.435, 30.752, 0.15", "13.5083, -170.426, 30.9776, 0.37", "13.4147, -170.982, 31.1063, 0.37", "13.1527, -172.274, 31.3893, 0.15", "12.9676, -173.006, 31.5482, 0.74", "12.4856, -174.653, 32.086, 0.15", "12.097, -175.749, 32.546, 0.15", "11.8369, -176.341, 32.8925, 0.59", "11.5373, -176.92, 33.3248, 0.22", "10.9675, -177.878, 34.1497, 0.15", "10.2422, -178.954, 35.2412, 0.15", "9.86285, -179.445, 35.819, 0.52", "9.03049, -180.362, 36.9652, 0.15", "8.45861, -180.902, 37.7707, 0.15", "8.21809, -181.11, 38.1199, 0.44", "7.76718, -181.472, 38.7627, 0.81", "7.35346, -181.814, 39.329, 0.81", "6.38859, -182.682, 40.7099, 0.15", "5.4256, -183.624, 42.0787, 0.15", "5.13876, -183.954, 42.5033, 0.15", "4.91538, -184.263, 42.8807, 0.66", "4.47485, -185.043, 43.7036, 0.22", "4.00724, -186.118, 44.8035, 0.15", "3.90078, -186.427, 45.1409, 0.22", "3.62129, -187.301, 46.1607, 0.15", "3.38641, -188.018, 47.0597, 0.44", "3.20547, -188.57, 47.7788, 0.88", "2.5619, -190.262, 50.0489, 0.15", "1.93871, -191.594, 51.826, 0.15", "1.55162, -192.311, 52.7777, 0.15", "1.21926, -192.838, 53.4605, 0.37", "0.902753, -193.284, 54.0065, 0.37", "0.0774399, -194.318, 55.2594, 0.07", "-0.563002, -195.061, 56.0059, 0.07", "-0.91214, -195.461, 56.3562, 0.15", "-1.70451, -196.35, 57.1242, 0.07", "-2.15264, -196.846, 57.5604, 0.29", "-2.76592, -197.523, 58.1632, 0.29", "-3.4924, -198.405, 58.911, 0.15", "-3.83626, -198.854, 59.2845, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "12.943, -58.3738, 13.0081, 0.22", "14.3705, -59.2785, 8.33856, 0.22", "14.7812, -59.5651, 7.16446, 0.22", "15.1346, -59.8497, 6.16202, 0.52", "15.4206, -60.1136, 5.31962, 0.88", "15.8589, -60.5937, 3.93215, 0.96", "16.2649, -61.1447, 2.47424, 0.74", "16.6121, -61.9443, 0.854361, 0.29", "16.7634, -62.5637, -0.250534, 0.37", "16.8229, -63.0679, -1.04035, 0.37", "16.8398, -63.5414, -1.73527, 0.74", "16.8447, -64.1728, -2.65178, 0.44", "16.8944, -65.2667, -4.35498, 0.44", "16.9754, -65.6326, -5.04519, 0.44", "17.1938, -66.0701, -6.00265, 0.22", "17.5931, -66.6364, -7.3136, 0.22", "17.9542, -67.0933, -8.39042, 0.44", "18.2829, -67.5488, -9.40407, 0.59", "18.7492, -68.4695, -11.2859, 0.29", "18.8723, -68.9562, -12.2363, 0.22", "18.8551, -69.4393, -13.0737, 0.29", "18.7022, -70.0818, -14.0234, 0.44", "18.3723, -70.9425, -15.175, 0.74", "17.8688, -71.9381, -16.4059, 0.96", "17.6118, -72.3725, -16.9176, 0.96", "17.0775, -73.2455, -17.9644, 0.37", "16.5647, -74.1364, -19.1034, 0.44", "16.2772, -74.7605, -19.962, 0.37", "16.1461, -75.2236, -20.6313, 0.22", "16.1331, -75.6997, -21.3761, 0.22", "16.2205, -75.9731, -21.9114, 0.29", "16.5007, -76.3097, -22.8335, 0.44", "16.8534, -76.5739, -23.8227, 0.44", "17.1296, -76.7516, -24.5802, 0.66", "17.6092, -77.0703, -25.9649, 0.81", "18.1336, -77.4973, -27.6926, 0.96", "18.5135, -77.9356, -29.2239, 0.96", "18.7623, -78.3151, -30.3932, 0.96", "18.8972, -78.5506, -31.1032, 0.66", "19.1063, -78.9319, -32.2287, 0.74", "19.3219, -79.326, -33.3004, 0.74", "19.8018, -80.0972, -35.2984, 0.59", "20.3441, -80.8629, -37.3009, 0.29", "20.7595, -81.3883, -38.8276, 0.29", "21.0755, -81.7326, -39.9118, 0.29", "21.3783, -82.0218, -40.9011, 0.37", "21.8666, -82.4354, -42.4467, 0.52", "22.3053, -82.7913, -43.8456, 0.44", "22.9701, -83.4193, -46.1516, 0.44", "26.0316, -88.2759, -54.4085, 0.44", "28.5868, -94.3474, -62.0495, 0.44", "31.4514, -99.3264, -70.3077, 0.44", "33.9932, -104.25, -78.702, 0.44", "34.6615, -107.997, -87.9858, 0.44", "36.6863, -109.761, -97.6263, 0.44", "38.7426, -111.814, -107.205, 0.44", "42.0884, -114.838, -116.155, 0.44", "45.3555, -116.483, -125.469, 0.44", "47.4959, -116.356, -135.237, 0.44", "50.586, -115.143, -144.673, 0.44", "52.6372, -115.253, -154.46, 0.44", "54.8246, -116.497, -164.142, 0.44", "58.0574, -119.217, -173.226, 0.44", "61.7574, -121.755, -182.18, 0.44", "65.4951, -125.649, -190.641, 0.44", "68.6248, -129.902, -199.185, 0.44", "71.3828, -134.397, -207.739, 0.44", "75.2003, -137.642, -216.422, 0.44", "77.0731, -140.656, -225.795, 0.44", "80.0511, -144.817, -234.435, 0.44", "82.4468, -150.923, -242.101, 0.44", "86.1473, -157.121, -249.154, 0.44", "90.8081, -164.107, -254.795, 0.44", "94.8368, -171.202, -260.784, 0.44", "97.7055, -179.345, -266.136, 0.44", "102.021, -185.404, -272.951, 0.44", "106.084, -192.238, -279.199, 0.44", "110.73, -199.557, -284.436, 0.44", "115.803, -207.007, -289.065, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.87362, -163.021, 87.2717, 0.15", "-3.78695, -164.25, 87.8288, 0.15", "-3.74581, -165.135, 88.2994, 0.22", "-3.72428, -165.771, 88.6491, 0.22", "-3.69497, -166.73, 89.1932, 0.37", "-3.62935, -167.983, 90.0163, 0.15", "-3.44934, -170.045, 91.4996, 0.15", "-3.37816, -170.661, 92.0673, 0.15", "-3.29911, -171.247, 92.6876, 0.29", "-3.00542, -173.099, 94.8756, 0.15", "-2.75222, -174.323, 96.5603, 0.15", "-2.59809, -174.857, 97.4161, 0.15", "-2.05305, -176.186, 99.827, 0.15", "-1.80404, -176.661, 100.926, 0.15", "-1.51612, -177.126, 102.241, 0.22", "-1.10944, -177.706, 104.113, 0.44", "-0.841648, -178.079, 105.33, 0.44", "-0.327322, -178.783, 107.55, 0.15", "0.82196, -180.216, 111.962, 0.22", "1.55152, -181.076, 114.601, 0.22", "1.80627, -181.366, 115.42, 0.22", "2.27863, -181.908, 116.747, 0.22", "2.78699, -182.466, 117.879, 0.22", "3.60111, -183.299, 119.195, 0.22", "4.19876, -183.888, 119.893, 0.22", "5.03658, -184.764, 120.757, 0.07", "6.28164, -186.131, 122.099, 0.07", "7.73765, -187.767, 123.649, 0.07", "8.85464, -189.041, 124.862, 0.07", "10.436, -190.961, 126.587, 0.07", "11.7556, -192.664, 128.143, 0.07", "12.9219, -194.352, 129.864, 0.15" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-3.87362, -163.021, 87.2717, 0.22", "-4.27334, -165.385, 86.142, 0.22", "-4.60174, -167.414, 85.7112, 0.15", "-4.8441, -168.956, 85.6692, 0.15", "-5.0771, -170.447, 85.7764, 0.15", "-5.31666, -171.913, 85.9466, 0.15", "-5.8205, -175.157, 86.365, 0.15", "-6.02643, -176.645, 86.7185, 0.15", "-6.16153, -177.59, 86.9906, 0.37", "-6.3664, -178.839, 87.2892, 0.59", "-6.73864, -180.958, 87.6497, 0.22", "-7.08205, -182.732, 87.8086, 0.22", "-7.38666, -184.14, 87.7455, 0.15", "-7.68992, -185.368, 87.6259, 0.15", "-8.23127, -187.274, 87.4167, 0.15", "-8.50589, -188.129, 87.2707, 0.15", "-8.80803, -188.954, 87.0385, 0.29", "-9.07361, -189.619, 86.8045, 0.29", "-9.52464, -190.792, 86.3294, 0.44", "-9.8517, -191.744, 86.0307, 0.44", "-10.4038, -193.575, 85.7104, 0.22", "-10.8602, -195.293, 85.565, 0.29", "-11.2523, -197.071, 85.5658, 0.07", "-11.5076, -198.512, 85.683, 0.07", "-11.9008, -201.571, 86.0382, 0.22", "-12.0305, -202.95, 86.354, 0.22", "-12.0906, -203.833, 86.6757, 0.22", "-12.1091, -204.523, 87.0035, 0.44", "-12.1114, -205.259, 87.3839, 0.66", "-12.1077, -207.149, 88.3682, 0.22", "-12.0806, -209.307, 89.3851, 0.22", "-12.0599, -210.339, 89.867, 0.07", "-11.9993, -211.655, 90.4071, 0.07", "-11.9082, -212.766, 90.7934, 0.15", "-11.8015, -213.64, 91.0402, 0.15", "-11.5846, -215.01, 91.3298, 0.37", "-11.3068, -216.432, 91.4092, 0.66", "-10.8545, -218.529, 91.348, 0.15", "-10.5292, -219.982, 91.2062, 0.22", "-10.2217, -221.333, 91.0282, 0.22", "-9.96458, -222.518, 90.8322, 0.15", "-9.8033, -223.353, 90.6754, 0.15", "-9.69169, -224.169, 90.5466, 0.59", "-9.64909, -225.078, 90.4548, 0.59", "-9.73281, -226.885, 90.3215, 0.22", "-9.79809, -227.426, 90.2717, 0.22", "-9.93878, -228.315, 90.185, 0.44", "-10.1119, -229.586, 90.0704, 0.66", "-10.2578, -230.997, 89.9338, 0.29", "-10.3278, -232.15, 89.8205, 0.66", "-10.3205, -233.611, 89.676, 0.52", "-10.1947, -235.707, 89.4543, 0.29", "-9.98608, -237.572, 89.1738, 0.22", "-9.76484, -238.93, 88.9037, 0.29", "-9.49697, -240.212, 88.6041, 0.37", "-9.13026, -241.721, 88.2691, 0.22", "-8.93066, -242.5, 88.1174, 0.22", "-8.43382, -244.437, 87.7293, 0.29", "-8.14066, -245.738, 87.4808, 0.52", "-7.98323, -246.533, 87.3514, 0.81", "-7.70446, -248.153, 87.151, 0.29", "-7.48995, -249.497, 87.1527, 0.22", "-7.39936, -250.039, 87.2232, 0.22", "-7.29138, -250.688, 87.3878, 0.44", "-7.15391, -251.632, 87.6612, 0.74", "-7.00264, -252.62, 87.92, 0.29", "-6.66054, -254.525, 88.3279, 0.15", "-6.56557, -254.988, 88.4179, 0.15", "-6.37294, -255.79, 88.5462, 0.15", "-6.04979, -256.946, 88.6929, 0.44", "-5.51383, -258.712, 88.9182, 0.22", "-5.15588, -259.917, 89.0554, 0.22", "-4.70931, -261.463, 89.1831, 0.52", "-4.20805, -263.245, 89.2717, 0.15", "-3.88746, -264.491, 89.2534, 0.29", "-3.56134, -265.997, 89.0838, 0.59", "-3.37437, -267.246, 88.7848, 0.74", "-3.33148, -267.717, 88.6196, 0.74", "-3.30106, -269.542, 87.804, 0.22", "-3.45101, -271.439, 86.819, 0.15", "-3.63994, -272.764, 86.0293, 0.15", "-3.85376, -273.902, 85.3117, 0.29", "-4.05418, -274.801, 84.7645, 0.74", "-4.27456, -275.764, 84.253, 0.66", "-4.65679, -277.549, 83.4737, 0.15", "-4.96075, -279.168, 82.8008, 0.15", "-5.13511, -280.356, 82.3284, 0.22", "-5.27248, -281.715, 81.7762, 0.52", "-5.33672, -283.354, 81.0924, 0.29", "-5.25964, -285.251, 80.3474, 0.15", "-5.06714, -286.727, 79.7882, 0.15", "-4.96799, -287.222, 79.6014, 0.15", "-4.77953, -287.993, 79.2895, 0.81", "-4.55356, -289.017, 78.879, 0.29", "-4.26504, -290.794, 78.1653, 0.15", "-4.14173, -292.13, 77.6138, 0.59", "-4.12376, -293.087, 77.2213, 0.59", "-4.1751, -293.899, 76.8262, 0.59", "-4.39018, -295.301, 75.984, 1.18", "-4.66379, -296.397, 75.0909, 0.74", "-5.1694, -298.017, 73.4887, 0.22", "-5.32889, -298.504, 72.9369, 0.29", "-5.65136, -299.528, 71.6023, 0.37", "-5.94721, -300.543, 70.009, 0.37", "-6.29659, -301.8, 67.5832, 0.37", "-6.4237, -302.185, 66.7222, 0.37", "-6.57974, -302.638, 65.5941, 0.37", "-6.61294, -302.774, 65.2411, 0.37", "-6.6313, -303.026, 64.5847, 0.37", "-6.59832, -303.373, 63.7854, 0.37", "-6.53368, -303.903, 62.7611, 0.44", "-6.50718, -304.436, 61.8436, 0.52", "-6.50486, -305.491, 60.4163, 0.52", "-6.54016, -306.471, 59.258, 0.37", "-6.55469, -306.975, 58.7449, 0.22", "-6.5723, -307.54, 58.242, 0.22", "-6.63247, -308.352, 57.6314, 0.29", "-6.80628, -309.521, 56.964, 0.81", "-7.13036, -311.239, 56.3085, 0.15", "-7.3034, -312.033, 56.0942, 0.15", "-7.45626, -312.754, 55.9074, 0.22", "-7.62641, -313.699, 55.6841, 0.29", "-7.73606, -314.385, 55.5272, 0.81", "-8.00588, -316.034, 55.0982, 0.22", "-8.21955, -317.346, 54.711, 0.22", "-8.39926, -318.456, 54.2603, 0.22", "-8.51306, -319.37, 53.7582, 0.52", "-8.53209, -319.625, 53.5732, 0.52", "-8.57932, -320.932, 52.356, 0.22", "-8.59538, -321.771, 51.421, 0.37", "-8.58487, -322.523, 50.48, 0.66", "-8.55069, -323.477, 49.23, 0.22", "-8.50967, -324.377, 48.0129, 0.22", "-8.44583, -325.2, 46.9512, 0.22", "-8.39211, -325.609, 46.4608, 0.37", "-8.19824, -326.808, 45.1622, 1.11", "-7.96462, -328.154, 43.8871, 0.44", "-7.73466, -329.376, 42.8295, 0.66", "-7.53736, -330.225, 42.1385, 0.59", "-7.33956, -330.893, 41.5834, 0.52", "-7.08146, -331.599, 40.9475, 0.29", "-6.63087, -332.696, 39.857, 0.15", "-6.13948, -333.89, 38.6189, 0.15", "-5.94701, -334.406, 38.0583, 0.52", "-5.62584, -335.576, 36.7771, 0.74", "-5.50495, -336.187, 36.1341, 0.74", "-5.27241, -337.702, 34.6451, 0.37", "-5.14827, -339.039, 33.5387, 0.37", "-5.09028, -340.351, 32.6834, 0.59", "-5.09238, -341.695, 31.9978, 0.88", "-5.11412, -342.404, 31.7341, 0.88", "-5.17683, -343.866, 31.3093, 0.37", "-5.21724, -345.356, 30.9948, 0.66", "-5.18145, -346.693, 30.6965, 0.66", "-5.06011, -348.143, 30.3813, 1.18", "-4.89958, -349.24, 30.1334, 0.81", "-4.50281, -351.293, 29.6449, 0.44", "-4.09877, -352.937, 29.247, 0.37", "-3.36328, -355.2, 28.6413, 0.29", "-3.21055, -355.586, 28.5181, 0.52", "-2.88574, -356.275, 28.2709, 0.96", "-2.31335, -357.369, 27.7889, 0.29", "-1.95615, -357.982, 27.4932, 0.29", "-1.56201, -358.647, 27.1468, 0.59", "-0.879247, -359.868, 26.6751, 0.59", "-0.504781, -360.556, 26.4553, 0.59", "0.530859, -362.512, 25.9452, 0.29", "1.20538, -363.825, 25.7057, 0.22", "1.54644, -364.55, 25.6584, 0.88", "2.48799, -366.844, 25.8859, 0.37", "2.73418, -367.561, 26.0657, 0.66", "2.8914, -368.115, 26.3016, 0.66", "3.21407, -369.431, 27.0967, 0.44", "3.40506, -370.331, 27.7994, 0.44", "3.61773, -371.362, 28.8649, 0.44", "3.77712, -372.16, 29.8455, 0.81", "4.1418, -373.574, 31.7895, 0.22", "4.3535, -374.218, 32.7627, 0.37", "4.80335, -375.286, 34.5118, 0.37", "5.42584, -376.446, 36.4427, 0.37", "5.75429, -376.93, 37.2342, 0.66", "6.36123, -377.661, 38.5059, 0.22", "6.74733, -378.051, 39.1858, 0.22", "7.10254, -378.357, 39.8222, 0.74", "7.47765, -378.614, 40.4961, 0.74", "8.27412, -379.006, 42.1793, 0.22", "8.95793, -379.216, 43.9946, 0.22", "9.26664, -379.274, 45.0719, 0.37", "9.98128, -379.368, 48.1192, 0.37", "10.1551, -379.383, 49.1304, 0.74", "10.4704, -379.375, 51.7407, 0.74", "10.6394, -379.352, 53.8056, 0.52", "10.7811, -379.378, 56.2146, 0.52", "10.8165, -379.414, 57.0587, 0.52", "10.9044, -379.571, 59.5652, 0.52", "10.9405, -379.677, 60.8642, 0.52", "11.0062, -379.9, 63.1423, 0.52", "11.0261, -379.975, 63.8905, 0.52", "11.2323, -380.463, 69.3613, 0.52" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-12.2353, 25.9439, -6.96773, 0.96", "-14.627, 27.3926, -7.13842, 0.96", "-15.7778, 28.1229, -7.19559, 0.96", "-17.0931, 29.045, -7.18819, 0.88", "-18.3155, 29.9713, -7.13253, 0.88", "-19.5251, 30.948, -6.99137, 0.81", "-20.7674, 32.0251, -6.73487, 0.66", "-21.6075, 32.8399, -6.37079, 1.03", "-22.572, 33.8245, -5.74003, 1.18", "-22.9164, 34.173, -5.43817, 1.33", "-23.8671, 35.0882, -4.48389, 1.03", "-24.9291, 36.0439, -3.4308, 0.96", "-26.0574, 36.9031, -2.36098, 0.96", "-27.6383, 37.8405, -1.01645, 1.33", "-28.9586, 38.4272, -0.0106866, 1.03", "-29.616, 38.6294, 0.472409, 1.03", "-31.3452, 38.9238, 1.70812, 0.74", "-32.3444, 38.9916, 2.44412, 0.96", "-33.1195, 39.0108, 3.0425, 1.55", "-34.4541, 39.0478, 4.19128, 1.25", "-35.8994, 39.1222, 5.71163, 1.03", "-36.8597, 39.1988, 6.96224, 0.74", "-37.4571, 39.2845, 7.86771, 0.74", "-38.0844, 39.3983, 8.89602, 1.11", "-38.7096, 39.5228, 9.95095, 1.11", "-39.9909, 39.7931, 12.0477, 0.96", "-41.2214, 40.1073, 13.9754, 1.18", "-42.1105, 40.3903, 15.3136, 1.55", "-42.744, 40.6351, 16.2014, 1.55", "-43.4372, 40.9607, 17.0586, 1.18", "-44.1192, 41.3709, 17.7186, 0.88", "-45.0396, 42.0741, 18.4416, 0.66", "-46.0001, 42.9124, 19.1894, 0.96", "-46.6752, 43.5678, 19.7877, 1.18", "-47.3758, 44.3494, 20.5199, 1.18", "-48.1861, 45.4073, 21.5761, 1.11", "-49.1595, 46.8235, 23.0709, 1.18", "-50.0205, 48.1754, 24.5562, 1.03", "-50.6693, 49.2109, 25.7979, 1.03", "-51.3202, 50.2663, 27.1998, 0.88", "-51.9494, 51.3554, 28.7024, 1.03", "-52.4436, 52.265, 29.9818, 0.74", "-52.9243, 53.2125, 31.2686, 0.66", "-53.4777, 54.3806, 32.8152, 0.59", "-54.1209, 55.6868, 34.6248, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.2353, 25.9439, -6.96773, 1.03", "-13.4822, 26.3816, -9.41931, 1.03", "-14.8256, 26.7936, -11.7498, 1.03", "-16.0488, 27.1233, -13.6463, 1.18", "-17.5204, 27.4722, -15.7642, 1.18", "-18.5499, 27.7044, -17.1762, 1.18", "-19.7167, 27.9693, -18.763, 1.03", "-20.8301, 28.2257, -20.1241, 0.96", "-21.6344, 28.427, -21.0348, 1.18", "-22.531, 28.6683, -22.0252, 1.03", "-23.3672, 28.9016, -22.9395, 1.03", "-24.4376, 29.2185, -24.0952, 1.03", "-25.2702, 29.4745, -24.9672, 1.18", "-26.5855, 29.8966, -26.2046, 1.18", "-27.5086, 30.216, -26.9894, 1.18", "-28.5997, 30.6195, -27.865, 1.11", "-29.7509, 31.0532, -28.7131, 1.18", "-30.4682, 31.3422, -29.1837, 0.96", "-31.4948, 31.8246, -29.7978, 0.81", "-32.7736, 32.5558, -30.5122, 1.03", "-34.6502, 33.8065, -31.501, 1.25", "-35.2441, 34.2468, -31.8043, 1.25", "-36.1376, 34.9332, -32.2328, 0.88", "-37.3815, 35.8639, -32.7974, 0.88", "-38.8037, 36.847, -33.3915, 1.11", "-40.0005, 37.5811, -33.8058, 1.11", "-41.5079, 38.4157, -34.2445, 0.96", "-42.7645, 39.0473, -34.6072, 1.03", "-43.9759, 39.6014, -34.9658, 1.03", "-45.2335, 40.113, -35.3383, 0.96", "-46.4021, 40.5556, -35.6616, 0.96", "-47.656, 41.0097, -36.0291, 0.96", "-49.231, 41.5443, -36.4744, 1.03" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-14.0378, 78.1531, -37.5874, 1.18", "-14.2145, 80.3337, -37.4214, 1.18", "-14.2515, 81.822, -37.3358, 0.96", "-14.2193, 82.8088, -37.3353, 0.96", "-14.1617, 83.7067, -37.396, 0.96", "-14.0463, 85.3497, -37.6002, 0.96", "-13.9712, 86.959, -37.8692, 1.03", "-13.9061, 88.1323, -38.1478, 1.11", "-13.8295, 89.5347, -38.595, 0.88", "-13.8264, 90.6137, -38.9975, 0.88", "-13.9066, 91.7205, -39.416, 0.88", "-14.078, 93.0899, -39.9283, 1.03", "-14.2251, 94.0159, -40.2535, 1.03", "-14.5683, 95.899, -40.8095, 1.18", "-14.918, 97.8578, -41.2908, 0.88", "-15.3017, 100.263, -41.7874, 0.81", "-15.4153, 101.148, -41.9406, 0.96", "-15.5137, 102.056, -42.0866, 0.96", "-15.7195, 103.871, -42.3787, 0.88", "-15.8674, 105.158, -42.5711, 0.88", "-16.0331, 106.583, -42.8222, 1.11", "-16.3051, 108.782, -43.2807, 1.25", "-16.4992, 110.187, -43.5983, 1.03", "-16.7202, 111.719, -43.9757, 1.03", "-16.8909, 112.909, -44.2892, 1.18", "-17.1906, 115.0, -44.9163, 0.96", "-17.4025, 116.684, -45.4756, 1.11", "-17.5169, 118.095, -45.9714, 1.11", "-17.5358, 119.653, -46.496, 1.18", "-17.4298, 121.148, -46.9764, 0.74", "-17.1978, 122.619, -47.4246, 0.88", "-16.927, 123.664, -47.7044, 1.25", "-16.4077, 125.079, -48.0319, 1.33", "-15.7204, 126.531, -48.2764, 0.96", "-15.0239, 127.739, -48.387, 0.74", "-14.3427, 128.787, -48.4126, 0.81", "-13.7312, 129.652, -48.3336, 0.81", "-12.9422, 130.74, -48.1575, 0.74", "-12.2917, 131.675, -47.9309, 1.25", "-11.4399, 132.949, -47.5373, 1.4", "-10.8378, 133.956, -47.1614, 1.4", "-9.72884, 136.017, -46.3215, 0.88", "-9.49404, 136.497, -46.1105, 0.88", "-8.92477, 137.775, -45.5298, 0.88", "-8.55202, 138.694, -45.1366, 0.88", "-7.99732, 140.249, -44.5722, 0.96", "-7.69914, 141.21, -44.3121, 0.96", "-7.31797, 142.649, -44.0655, 1.55", "-7.20505, 143.134, -43.9935, 1.55", "-6.78146, 145.07, -43.8289, 1.18", "-6.40816, 147.045, -43.7813, 1.25", "-6.17975, 148.63, -43.8719, 1.62", "-6.10934, 149.449, -43.9846, 1.62", "-6.03419, 151.687, -44.4441, 0.96", "-6.054, 153.42, -44.9175, 0.96", "-6.12069, 154.56, -45.3166, 1.33", "-6.28511, 156.226, -46.0417, 1.11", "-6.46964, 157.827, -46.9108, 1.33", "-6.60587, 158.967, -47.6257, 1.33", "-6.78447, 160.383, -48.6744, 1.47", "-6.89741, 161.259, -49.3456, 1.62", "-7.0865, 162.867, -50.6171, 1.03", "-7.22651, 164.243, -51.6962, 0.96", "-7.29402, 165.172, -52.3978, 0.88", "-7.35414, 166.636, -53.5088, 0.81", "-7.37599, 167.358, -54.0022, 1.18", "-7.451, 169.481, -55.2862, 0.96", "-7.56029, 171.448, -56.3051, 0.96", "-7.69273, 173.097, -56.9614, 0.74", "-7.86379, 174.85, -57.4904, 0.59", "-8.11793, 177.131, -57.9554, 0.59", "-8.34181, 178.864, -58.223, 0.52", "-8.50955, 180.001, -58.3272, 0.74", "-8.9167, 182.229, -58.4535, 1.03", "-9.16786, 183.36, -58.4778, 1.11", "-9.48047, 184.694, -58.4707, 0.74", "-9.91158, 186.566, -58.4799, 0.66", "-10.1386, 187.567, -58.5021, 0.52", "-10.3845, 188.716, -58.5756, 0.22", "-10.7918, 190.561, -58.8478, 0.15", "-10.9276, 191.149, -58.9353, 0.22", "-12.4906, 200.896, -61.603, 0.22", "-12.8502, 209.983, -66.2159, 0.22", "-13.3448, 219.562, -69.7396, 0.22", "-15.2817, 229.115, -72.8037, 0.22" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-14.0378, 78.1531, -37.5874, 0.66", "-13.2839, 78.7893, -39.8719, 0.66", "-12.7751, 79.2187, -41.4137, 0.59", "-12.2639, 79.6501, -42.9627, 0.74" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "40.476, 30.1464, 31.9492, 0.88", "41.4971, 31.2939, 31.321, 0.88", "42.3646, 32.3112, 30.7012, 0.59", "43.3764, 33.4739, 29.9767, 0.59", "44.1251, 34.2475, 29.4884, 0.59", "44.8064, 34.8776, 29.046, 0.59", "45.5411, 35.495, 28.55, 0.81", "46.372, 36.0871, 27.9315, 0.81", "47.0305, 36.4512, 27.4486, 0.81", "48.0656, 36.8757, 26.7419, 0.52", "49.3241, 37.2656, 25.895, 0.52", "50.2935, 37.4954, 25.2304, 0.52", "51.1864, 37.6781, 24.6262, 0.52", "51.8206, 37.8255, 24.2102, 0.52", "52.7699, 38.0839, 23.5435, 0.44", "53.9513, 38.4519, 22.6684, 0.59", "54.9544, 38.7594, 21.9731, 0.44", "55.5657, 38.9293, 21.5435, 0.66", "56.4528, 39.1362, 20.9303, 0.37", "57.6058, 39.3258, 20.1197, 0.37", "58.7312, 39.3968, 19.3762, 0.59", "59.5759, 39.3821, 18.8305, 1.11", "61.0575, 39.319, 17.8207, 1.11", "62.2062, 39.2757, 17.0063, 0.66", "63.4526, 39.2901, 16.1101, 0.52", "64.3526, 39.3885, 15.4348, 0.29", "65.3114, 39.6487, 14.6374, 0.29", "66.2023, 40.1024, 13.7077, 0.59", "66.6559, 40.4711, 13.1352, 0.59", "67.3196, 41.2054, 12.1566, 0.37", "67.9185, 41.9846, 11.1923, 0.37", "68.3235, 42.5312, 10.509, 0.59", "69.1896, 43.6256, 9.10438, 1.03", "69.8174, 44.3239, 8.15263, 0.88", "70.371, 44.8738, 7.37403, 0.44", "71.2332, 45.6376, 6.18594, 0.44", "71.6997, 46.006, 5.60511, 0.44", "72.1183, 46.278, 5.12548, 0.66", "72.4939, 46.4677, 4.75837, 0.66", "73.1109, 46.7082, 4.1671, 0.44", "74.6372, 47.1669, 2.75529, 0.44", "75.0801, 47.2635, 2.37065, 0.81", "75.7857, 47.3672, 1.7293, 1.03", "76.7478, 47.4246, 0.709132, 0.66", "77.4601, 47.4074, -0.210716, 0.66", "78.2679, 47.3182, -1.58173, 0.52", "78.8991, 47.1742, -3.03706, 0.37", "79.3564, 46.996, -4.54317, 0.44", "79.8649, 46.6758, -6.94133, 0.52", "80.1578, 46.3953, -8.80427, 0.52", "80.5003, 46.009, -11.1255, 0.52", "80.7859, 45.6796, -13.0711, 0.81", "81.053, 45.4414, -14.6234, 1.03", "81.4033, 45.2802, -16.0369, 1.03", "81.8032, 45.2327, -17.0351, 0.81", "82.5862, 45.2806, -18.3772, 0.59", "83.3275, 45.4195, -19.3094, 0.59", "83.8982, 45.5861, -19.9071, 0.44", "85.0787, 45.9794, -21.0384, 0.44", "85.9542, 46.2687, -21.8164, 0.37", "86.6057, 46.4652, -22.349, 0.37", "87.3647, 46.6505, -22.8922, 0.96", "88.8244, 46.9016, -23.7885, 0.66", "89.7924, 47.0295, -24.3389, 0.66", "90.782, 47.1444, -24.9135, 0.88", "92.0436, 47.3184, -25.8014, 0.74", "93.118, 47.5335, -26.785, 0.74", "94.259, 47.8914, -28.1027, 0.74", "95.0279, 48.2823, -29.2089, 0.59", "96.0581, 49.0668, -31.0039, 0.81", "96.9291, 50.0138, -32.8674, 0.96", "97.6013, 51.034, -34.6358, 0.96", "97.9038, 51.6495, -35.5222, 0.66", "98.2087, 52.364, -36.3704, 0.59", "98.4562, 52.8864, -36.9331, 0.44", "98.921, 53.7806, -37.7465, 0.88", "99.1706, 54.184, -38.1382, 0.88", "99.7398, 54.8767, -39.1609, 0.29", "100.472, 55.4476, -40.9413, 0.29", "101.219, 55.7387, -43.27, 0.29", "101.422, 55.7733, -43.9996, 0.88", "101.903, 55.7939, -45.9344, 0.88", "102.25, 55.8234, -47.5119, 0.88", "102.475, 55.8844, -48.8148, 0.88", "102.667, 56.1347, -50.4617, 0.88", "102.703, 56.35, -51.0273, 0.88", "102.716, 56.7927, -51.6198, 0.88", "102.598, 57.7945, -52.2854, 0.52", "102.408, 58.6988, -52.763, 0.52", "102.192, 59.4874, -53.1871, 1.03", "101.978, 60.2579, -53.6471, 1.03", "101.765, 61.103, -54.231, 0.81", "101.511, 62.3712, -55.2313, 0.44", "101.386, 63.4521, -56.176, 0.52", "101.349, 64.3732, -57.0519, 0.52", "101.341, 65.3659, -58.1156, 0.66", "101.318, 65.8273, -58.7234, 0.52", "101.239, 66.4707, -59.7002, 0.66", "101.1, 67.1657, -60.794, 0.88", "100.785, 68.2334, -62.4275, 0.59", "100.514, 68.9819, -63.5307, 0.59", "99.9315, 70.4386, -65.7258, 0.52", "99.7132, 71.008, -66.5913, 0.52", "99.5925, 71.4843, -67.2816, 0.52", "99.5717, 72.2414, -68.2018, 0.52", "99.8287, 73.069, -68.8447, 0.44", "100.277, 74.0034, -69.2839, 0.74", "100.56, 74.5314, -69.4419, 0.81", "101.398, 75.9731, -69.8346, 0.59", "101.985, 76.9101, -70.1351, 0.66", "102.738, 78.1133, -70.5235, 0.59", "103.484, 79.3963, -70.9122, 0.59", "104.01, 80.3976, -71.1749, 0.66", "104.554, 81.5315, -71.4601, 0.52", "105.313, 83.2522, -71.8415, 0.81", "110.858, 87.031, -79.3019, 0.81", "115.469, 90.4788, -87.513, 0.81", "119.189, 93.3307, -96.3687, 0.81", "121.259, 97.1734, -105.405, 0.81", "123.608, 102.793, -113.432, 0.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "40.476, 30.1464, 31.9492, 0.81", "40.1027, 30.9922, 31.8265, 0.81", "39.6675, 32.033, 31.7168, 0.74", "39.2656, 33.0059, 31.7133, 0.59", "38.6901, 34.4616, 31.776, 0.37", "38.2831, 35.5958, 31.892, 0.44", "37.9282, 36.6912, 32.0372, 0.44", "37.6096, 37.8168, 32.2355, 0.74", "37.1684, 39.6135, 32.6193, 0.44", "37.0116, 40.4785, 32.8258, 0.52", "36.8658, 41.8201, 33.1693, 0.66", "36.8292, 42.5632, 33.3383, 0.44", "36.8157, 43.5422, 33.5162, 0.44", "36.8329, 44.4729, 33.6414, 0.37", "36.904, 45.7689, 33.7265, 0.37", "36.977, 46.82, 33.7653, 0.44", "37.045, 47.6082, 33.7719, 0.22", "37.1217, 48.3176, 33.7828, 0.22", "37.2312, 49.2255, 33.8023, 0.29", "37.3498, 50.2059, 33.8025, 0.74", "37.4571, 51.1523, 33.7827, 0.59", "37.5553, 52.0513, 33.7472, 0.44", "37.6661, 52.8698, 33.6417, 0.22", "37.7847, 53.5193, 33.5129, 0.22", "37.9666, 54.359, 33.3447, 0.22", "38.1568, 55.1348, 33.1943, 0.37", "38.295, 55.6413, 33.0779, 0.37", "38.8042, 57.4507, 32.6322, 0.74", "39.1382, 58.6416, 32.3144, 0.22", "39.493, 59.9587, 31.966, 0.22", "39.7307, 60.9454, 31.7015, 0.44", "39.9507, 62.1521, 31.2996, 0.29", "40.0455, 62.8653, 30.9788, 0.66", "40.1076, 63.6679, 30.5588, 0.66", "40.1168, 64.4492, 30.0995, 0.88", "40.0927, 65.3374, 29.5664, 0.88", "40.0574, 67.0275, 28.6323, 0.59", "40.1017, 68.6529, 27.8607, 0.44", "40.1743, 69.6243, 27.4309, 0.44", "40.3213, 71.0407, 26.884, 0.52", "40.4542, 72.0888, 26.4925, 0.59", "40.6668, 73.5372, 25.9653, 0.44", "40.8877, 74.8684, 25.5129, 0.22", "41.0674, 75.9309, 25.1261, 0.44", "41.2316, 76.901, 24.7216, 0.74", "41.4802, 78.41, 24.0562, 1.11", "41.6668, 79.8516, 23.4173, 0.96", "41.737, 80.6758, 23.0667, 0.96", "41.836, 82.4955, 22.3528, 0.59", "41.8756, 83.6419, 21.9786, 0.37", "41.9114, 84.961, 21.6788, 0.22", "41.9069, 85.8064, 21.5956, 0.66", "41.8855, 86.5534, 21.5586, 0.74", "41.8602, 87.3823, 21.5199, 0.52", "41.8254, 88.5576, 21.4412, 0.59", "41.8004, 90.1287, 21.2544, 0.66", "41.7993, 91.4992, 21.0423, 0.29", "41.8058, 93.112, 20.7612, 0.29", "41.8229, 94.2779, 20.5092, 0.37", "41.8769, 95.8465, 20.1214, 0.44", "41.9444, 97.0781, 19.7517, 0.52", "42.0095, 98.2821, 19.3237, 0.66", "42.0784, 99.3867, 18.9361, 0.66", "42.1322, 100.506, 18.5499, 0.66", "42.1687, 101.538, 18.1808, 0.96", "42.2606, 103.44, 17.4612, 0.44", "42.3362, 104.547, 16.9919, 0.44", "42.4428, 105.558, 16.5157, 0.59", "42.6657, 107.042, 15.7529, 0.22", "42.7898, 107.728, 15.3965, 0.22", "42.9054, 108.29, 15.0963, 0.22", "42.9967, 108.652, 14.9105, 0.22", "43.1745, 109.298, 14.5967, 0.22", "43.3104, 109.813, 14.3466, 0.22", "43.476, 110.491, 14.0259, 0.66", "43.6827, 111.458, 13.5623, 0.66", "43.8574, 112.508, 13.0874, 0.66", "43.9474, 113.203, 12.7968, 0.37", "44.0498, 114.325, 12.346, 0.22", "44.1367, 115.545, 11.9648, 0.44", "44.1861, 116.403, 11.7929, 0.44", "44.2551, 117.391, 11.7539, 0.44", "44.3479, 118.662, 12.0345, 0.22", "44.4399, 119.863, 12.4238, 0.29", "44.5892, 121.96, 13.162, 0.44", "44.6808, 123.346, 13.5958, 0.66", "44.7809, 124.723, 13.8606, 0.66", "44.98, 126.931, 13.898, 0.29", "45.1889, 128.87, 13.4805, 0.37", "45.3439, 130.455, 12.7624, 0.52", "45.4142, 131.778, 11.8571, 0.74", "45.4468, 133.185, 10.6843, 0.74", "45.4599, 134.106, 9.83819, 0.74", "45.4861, 135.517, 8.46463, 0.52", "45.5176, 136.749, 7.36928, 0.59", "45.5536, 138.715, 5.77328, 0.22", "45.5659, 139.535, 5.14849, 0.22", "45.5713, 140.495, 4.46239, 0.59", "45.5619, 141.886, 3.45862, 0.96", "45.5533, 143.32, 2.49903, 0.37", "45.5798, 144.391, 1.83234, 0.44", "45.6605, 145.821, 0.982871, 0.44", "45.752, 147.036, 0.267507, 0.44", "45.8548, 148.004, -0.310697, 0.44", "46.0844, 149.452, -1.16997, 0.22", "46.3971, 151.013, -2.11166, 0.22", "46.5232, 151.525, -2.41007, 0.22", "46.7675, 152.428, -2.88624, 0.59", "47.2287, 154.047, -3.64889, 0.29", "47.5199, 155.176, -4.13647, 0.29", "47.767, 156.414, -4.64773, 0.52", "47.9104, 157.537, -5.06458, 0.88", "47.972, 158.375, -5.36483, 0.88", "48.0222, 159.522, -5.74226, 0.59", "48.1011, 161.013, -6.16551, 0.22", "48.1789, 161.783, -6.38407, 0.29", "48.2904, 162.436, -6.58449, 0.29", "48.4706, 163.193, -6.82063, 0.81", "48.7798, 164.206, -7.13973, 0.88", "49.1143, 165.107, -7.40555, 0.59", "49.5918, 166.267, -7.7448, 0.59", "50.1458, 167.625, -8.13947, 0.29", "50.8283, 169.406, -8.67422, 0.52", "51.2097, 170.522, -9.06599, 0.59", "51.5262, 171.695, -9.53841, 0.59", "51.7058, 172.566, -9.93396, 0.74", "51.8014, 173.185, -10.2658, 0.74", "51.9288, 174.338, -10.9911, 0.66", "52.0025, 175.407, -11.7479, 0.66", "52.0463, 176.391, -12.4452, 0.74", "52.1062, 177.731, -13.2645, 0.52", "52.1716, 178.665, -13.6618, 0.59", "52.2848, 179.695, -13.8622, 0.44", "52.4298, 180.738, -13.9315, 0.59", "52.5536, 181.558, -13.9537, 0.37", "52.7667, 183.448, -14.0832, 0.74", "52.7775, 184.676, -14.3167, 1.03", "52.6521, 186.07, -14.8396, 0.44", "52.2594, 188.136, -16.2369, 0.59", "52.027, 189.179, -17.1545, 1.18", "51.7108, 190.466, -18.439, 0.37", "51.3513, 191.696, -19.8115, 0.37", "51.0308, 192.629, -20.9375, 0.81", "50.5078, 194.134, -22.7643, 0.81", "50.2052, 195.101, -23.8198, 0.66", "49.9539, 196.184, -24.8877, 0.37", "49.7891, 197.471, -25.9943, 0.37", "49.6899, 199.067, -27.1572, 0.37", "49.6776, 200.002, -27.6964, 0.52", "49.6813, 201.048, -28.1374, 0.44", "49.694, 202.179, -28.593, 0.66", "49.7524, 203.203, -29.0307, 0.81", "49.8128, 203.902, -29.3241, 0.81", "49.8796, 204.673, -29.6543, 0.74", "49.9783, 206.388, -30.4249, 0.66", "50.052, 208.206, -31.2631, 0.44", "50.081, 209.697, -31.9381, 0.44", "50.0986, 210.87, -32.4412, 1.03", "50.1107, 211.74, -32.7172, 0.66", "50.1125, 212.879, -32.8865, 0.52", "50.1195, 213.487, -32.9027, 0.74", "50.1091, 214.317, -32.9197, 0.96", "50.1038, 214.789, -32.9571, 0.96", "50.0891, 216.875, -33.4184, 0.66", "50.0687, 218.634, -34.0872, 0.66", "50.0106, 220.19, -34.9199, 0.44", "49.8578, 221.983, -36.1399, 0.96", "49.6753, 223.143, -37.1127, 0.52", "49.3639, 224.263, -38.2597, 0.52", "49.0312, 225.289, -39.5092, 0.52", "48.71, 226.024, -40.5319, 0.44", "48.3066, 226.688, -41.5002, 0.44", "47.862, 227.204, -42.3248, 0.96", "46.9013, 227.954, -43.7516, 0.96" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "53.2949, -71.7363, 64.7247, 0.37", "53.4605, -73.1176, 66.4266, 0.37", "53.8152, -74.6609, 68.0652, 0.37", "54.0365, -75.4418, 68.8811, 0.59", "54.4217, -76.6865, 70.1345, 0.44", "54.6287, -77.2931, 70.8145, 0.66", "54.9122, -78.0743, 71.8404, 0.44", "55.3499, -79.1512, 73.2946, 0.44", "55.7144, -79.9397, 74.3816, 0.44", "55.976, -80.444, 75.1002, 0.81", "56.8353, -82.0041, 77.3013, 0.81", "57.6452, -83.4689, 79.3534, 0.81", "57.9102, -83.9514, 80.0084, 0.81", "58.2998, -84.6552, 80.8617, 0.44", "58.6824, -85.3654, 81.5784, 0.44", "59.3103, -86.6342, 82.6884, 0.44", "59.6242, -87.3419, 83.2047, 0.66", "59.8439, -87.9049, 83.5912, 0.66", "60.2941, -89.2515, 84.6388, 0.52", "60.6339, -90.5645, 85.7512, 0.66", "60.975, -92.341, 87.2623, 0.29", "61.0745, -93.0773, 87.8938, 0.29", "61.1858, -94.2692, 88.8995, 0.22", "61.2905, -96.1189, 90.3858, 0.22", "61.3256, -97.383, 91.3658, 0.22", "61.3335, -98.5335, 92.2158, 0.37", "61.328, -100.204, 93.3761, 0.74", "61.3333, -101.161, 93.979, 0.88", "61.3493, -102.218, 94.5828, 0.22", "61.3599, -104.037, 95.4086, 0.22", "61.3642, -104.742, 95.6905, 0.22", "61.3744, -105.838, 95.999, 0.22", "61.4124, -107.574, 96.2664, 0.15", "61.4815, -108.874, 96.3727, 0.15", "61.6722, -111.285, 96.5101, 0.22", "61.8317, -112.943, 96.5709, 0.22", "62.1237, -115.924, 96.7594, 0.15", "62.3182, -118.427, 96.9588, 0.15", "62.4432, -120.828, 97.2483, 0.22", "62.5154, -122.936, 97.6112, 0.22", "62.5532, -124.685, 98.012, 0.22", "62.5568, -126.727, 98.5705, 0.22", "62.5276, -129.395, 99.5033, 0.22", "62.4893, -132.109, 100.51, 0.22", "62.4691, -133.749, 101.141, 0.22", "62.4766, -134.893, 101.553, 0.52", "62.5303, -136.287, 102.039, 0.59", "62.6843, -137.928, 102.586, 0.22", "62.8486, -139.038, 102.948, 0.15", "63.0711, -140.467, 103.449, 0.15", "63.2192, -142.0, 103.854, 0.22", "63.2155, -143.104, 104.091, 0.37", "63.1423, -144.642, 104.395, 0.37", "62.9756, -146.291, 104.649, 0.15", "62.5877, -148.873, 104.992, 0.15", "61.8052, -152.859, 105.298, 0.15", "61.3224, -154.702, 105.382, 0.15" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "53.2949, -71.7363, 64.7247, 0.29", "53.6684, -72.496, 64.0351, 0.29", "54.3298, -73.723, 62.8402, 0.37", "54.7358, -74.4561, 62.1235, 0.37", "55.2971, -75.4088, 61.2101, 0.22", "55.9587, -76.4321, 60.235, 0.22", "56.3438, -76.9961, 59.7203, 0.52", "57.1296, -78.1919, 58.6827, 0.29", "57.4956, -78.7545, 58.2278, 0.44", "57.856, -79.3398, 57.7768, 0.66", "58.3231, -80.1815, 57.1635, 0.37", "58.7012, -81.0348, 56.6128, 0.29", "59.0429, -82.0808, 55.9638, 0.29", "59.2762, -83.039, 55.4043, 0.29", "59.5079, -84.0993, 54.8053, 0.66", "59.7031, -85.1766, 54.2174, 0.66", "59.8708, -86.2555, 53.6605, 0.52", "60.1233, -87.8443, 52.8742, 0.37", "60.3475, -88.9384, 52.3683, 0.66", "60.6443, -90.068, 51.8438, 0.22", "60.8829, -90.7607, 51.4805, 0.22", "61.177, -91.4431, 51.0804, 0.59", "61.5717, -92.1971, 50.6025, 0.81", "62.2093, -93.219, 49.9019, 0.52", "63.04, -94.4092, 49.0232, 0.66", "63.847, -95.4948, 48.1965, 0.44", "64.7258, -96.6371, 47.3793, 0.37", "65.1469, -97.2017, 46.994, 0.37", "65.5989, -97.8379, 46.5913, 0.37", "66.3672, -99.0005, 45.9519, 0.66", "66.8299, -99.7405, 45.6137, 1.11", "67.4947, -100.873, 45.1212, 0.66", "68.1498, -102.044, 44.5482, 0.44", "68.681, -103.066, 43.9419, 0.44", "69.1348, -103.959, 43.3428, 0.59", "69.5205, -104.696, 42.7945, 0.52", "70.14, -105.801, 41.8596, 0.29", "70.7252, -106.759, 40.9293, 0.81", "71.4134, -107.786, 39.8359, 0.22", "71.6604, -108.132, 39.4384, 0.22", "71.8537, -108.381, 39.1383, 0.29", "72.4575, -109.003, 38.3754, 0.52", "73.1591, -109.567, 37.7121, 0.22", "73.9021, -110.051, 37.19, 0.52", "74.4532, -110.349, 36.8905, 0.52", "75.0772, -110.648, 36.6434, 0.29", "76.4734, -111.217, 36.3075, 0.22", "77.3285, -111.517, 36.2354, 0.29", "78.0318, -111.756, 36.249, 0.52", "78.7277, -112.005, 36.3155, 0.66", "80.1838, -112.537, 36.5118, 0.44", "81.3029, -112.982, 36.7024, 0.44", "82.3461, -113.438, 36.8902, 0.44", "83.2998, -113.864, 37.0407, 0.52", "84.1434, -114.247, 37.1078, 0.66", "84.8849, -114.589, 37.1008, 0.66", "85.8897, -115.022, 36.9772, 0.37", "86.6367, -115.309, 36.8544, 0.37", "87.2652, -115.513, 36.6987, 0.74", "88.0734, -115.735, 36.4587, 1.03", "89.0305, -115.987, 36.1479, 0.29", "90.0809, -116.261, 35.7945, 0.22", "91.1945, -116.531, 35.4292, 0.22", "92.4142, -116.846, 35.056, 0.22", "93.4045, -117.125, 34.8218, 0.29", "94.2062, -117.381, 34.7043, 0.44", "94.9748, -117.649, 34.6578, 0.44", "95.7333, -117.949, 34.7024, 0.81", "96.1601, -118.134, 34.7807, 0.88", "97.3566, -118.717, 35.1522, 0.22", "98.0842, -119.136, 35.5003, 0.15", "98.8615, -119.625, 36.0024, 0.15", "99.7212, -120.198, 36.6459, 0.15", "100.154, -120.504, 36.9872, 0.37", "100.723, -120.927, 37.4259, 0.81", "102.035, -121.993, 38.3876, 0.52", "102.87, -122.798, 38.9969, 0.66", "103.276, -123.277, 39.2701, 0.52", "103.752, -123.937, 39.5243, 0.22", "104.319, -124.842, 39.8237, 0.22", "104.7, -125.535, 40.0101, 0.44", "105.338, -126.875, 40.3228, 0.44", "105.767, -127.973, 40.5898, 0.44", "106.099, -129.001, 40.8762, 0.44", "106.551, -130.477, 41.4377, 0.29", "106.711, -130.979, 41.6676, 0.66", "107.096, -132.057, 42.2285, 0.66", "107.54, -133.155, 42.8581, 0.66", "107.869, -133.897, 43.3024, 1.03", "108.66, -135.484, 44.2356, 0.29", "109.17, -136.406, 44.7298, 0.15", "109.37, -136.727, 44.918, 0.15", "109.682, -137.149, 45.2143, 0.15", "110.087, -137.582, 45.6241, 0.59", "110.339, -137.814, 45.8888, 0.81", "111.194, -138.56, 46.7811, 0.29", "112.005, -139.251, 47.6833, 0.44", "113.066, -140.153, 48.8636, 0.22", "114.066, -140.989, 49.9492, 0.22", "114.821, -141.654, 50.8047, 0.22", "115.585, -142.374, 51.6724, 0.29", "116.247, -143.032, 52.3892, 0.59", "116.702, -143.555, 52.8815, 1.03", "116.965, -143.921, 53.1655, 1.03", "118.087, -145.723, 54.4766, 0.15", "118.532, -146.487, 55.0153, 0.15", "118.868, -147.089, 55.4165, 0.22", "119.518, -148.235, 56.0974, 0.74", "119.985, -149.014, 56.5213, 0.96", "120.872, -150.381, 57.1297, 0.22", "121.451, -151.189, 57.3478, 0.22", "122.243, -152.212, 57.5169, 0.37", "123.073, -153.181, 57.5635, 0.15", "123.665, -153.816, 57.4819, 0.29", "124.43, -154.617, 57.2836, 0.15", "125.246, -155.485, 56.9695, 0.66", "126.164, -156.433, 56.5879, 0.22", "126.953, -157.227, 56.2583, 0.22", "127.792, -158.112, 55.9572, 0.29", "128.293, -158.685, 55.8229, 0.15", "128.705, -159.181, 55.767, 0.52", "129.137, -159.738, 55.8182, 0.59", "129.883, -160.783, 56.161, 0.22", "130.518, -161.675, 56.6698, 0.88", "130.973, -162.251, 57.1816, 0.88", "131.365, -162.701, 57.722, 0.59", "132.273, -163.667, 59.1595, 0.15", "132.968, -164.354, 60.4288, 0.22", "133.374, -164.703, 61.2585, 0.22", "134.045, -165.185, 62.7594, 0.15", "134.491, -165.465, 63.8, 0.15", "134.756, -165.61, 64.4392, 0.44", "135.354, -165.877, 65.8592, 0.74", "135.854, -166.096, 67.0562, 0.74", "136.416, -166.387, 68.5565, 0.74" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-54.1209, 55.6868, 34.6248, 1.18", "-56.3819, 57.5645, 35.3835, 1.18", "-57.6547, 58.5334, 35.6922, 1.03", "-58.764, 59.3153, 35.8428, 1.4", "-60.2076, 60.2851, 36.0469, 1.03", "-61.1527, 60.8942, 36.2168, 0.88", "-62.6422, 61.8241, 36.5222, 0.59", "-64.176, 62.7095, 36.7705, 0.29", "-65.5272, 63.4059, 37.034, 0.37", "-67.0369, 64.1205, 37.3937, 0.74", "-68.421, 64.74, 37.7957, 1.4", "-70.2427, 65.5546, 38.4175, 0.88", "-71.3039, 66.0451, 38.8879, 0.88", "-72.0144, 66.4044, 39.2709, 0.88", "-72.9276, 66.8803, 39.8225, 0.59", "-74.0415, 67.4468, 40.5128, 0.44", "-74.9597, 67.8816, 41.1424, 0.29", "-76.5759, 68.6114, 42.4015, 0.52", "-77.6399, 69.0782, 43.3096, 0.74", "-78.678, 69.5048, 44.2677, 1.03", "-79.9481, 69.9739, 45.4638, 0.59", "-81.198, 70.4003, 46.6344, 0.22", "-82.2808, 70.7286, 47.617, 0.22", "-83.5515, 71.0783, 48.7615, 0.22", "-84.7422, 71.4119, 49.9112, 0.37", "-85.3286, 71.5808, 50.4886, 0.52", "-86.4733, 71.9274, 51.5738, 1.33", "-87.8395, 72.3622, 52.8047, 0.29", "-89.5186, 72.8694, 54.184, 0.37", "-91.0267, 73.3047, 55.2914, 0.37", "-91.9453, 73.5476, 55.8831, 0.37", "-93.0785, 73.7938, 56.5144, 0.66", "-93.7441, 73.9098, 56.8242, 0.66", "-95.0466, 74.1245, 57.3029, 0.44", "-95.8331, 74.2589, 57.5603, 0.44", "-96.8879, 74.4403, 57.9824, 0.22", "-97.8073, 74.6187, 58.5073, 0.22", "-98.9188, 74.8345, 59.3547, 0.22", "-99.8732, 75.0246, 60.1994, 0.15", "-101.124, 75.2646, 61.4906, 0.66", "-102.329, 75.4875, 62.763, 0.29", "-103.596, 75.6914, 64.079, 0.66", "-104.845, 75.845, 65.2707, 1.03", "-105.855, 75.9129, 66.1064, 1.25", "-108.244, 75.9293, 67.8077, 0.22", "-109.593, 75.8733, 68.5802, 0.22", "-110.583, 75.7972, 69.0041, 0.29", "-112.061, 75.6422, 69.4175, 0.29", "-113.091, 75.5256, 69.5328, 0.22", "-114.202, 75.3812, 69.4941, 0.29", "-114.948, 75.284, 69.3562, 0.44", "-115.823, 75.1728, 69.1027, 0.66", "-116.743, 75.0867, 68.7683, 0.66", "-118.053, 75.0304, 68.2282, 0.22", "-119.053, 75.039, 67.8148, 0.22", "-120.387, 75.1005, 67.3872, 0.29", "-122.275, 75.2306, 66.9756, 0.29", "-123.107, 75.2975, 66.8832, 0.59", "-124.467, 75.3954, 66.9222, 0.59", "-126.145, 75.5004, 67.1628, 0.22", "-128.389, 75.6304, 67.66, 0.44", "-129.313, 75.6683, 67.9338, 0.44", "-130.354, 75.6961, 68.2936, 0.22", "-131.905, 75.7234, 68.7983, 0.37", "-132.562, 75.7428, 68.9603, 0.59", "-133.297, 75.7948, 69.0606, 0.96", "-134.472, 75.9252, 69.0933, 0.29", "-136.309, 76.191, 69.0591, 0.22", "-137.431, 76.3937, 69.1095, 0.22", "-139.358, 76.7988, 69.2653, 0.22", "-141.036, 77.1953, 69.497, 0.29", "-141.933, 77.4305, 69.6637, 0.29", "-143.08, 77.7684, 69.9351, 0.59", "-146.126, 78.7859, 71.0463, 0.07", "-146.772, 79.026, 71.3761, 0.15", "-147.54, 79.3515, 71.9277, 0.29", "-148.93, 80.0257, 73.1348, 0.15", "-149.388, 80.2683, 73.6043, 0.22", "-150.932, 81.1031, 75.4035, 0.44", "-151.572, 81.4469, 76.1792, 0.81", "-152.856, 82.1019, 77.8226, 0.22", "-153.537, 82.428, 78.6935, 0.29", "-154.784, 82.9767, 80.2802, 0.22", "-155.807, 83.3826, 81.3793, 0.22", "-156.434, 83.6027, 81.8518, 0.66", "-156.895, 83.7504, 82.0669, 0.66", "-158.212, 84.1534, 82.2815, 0.22", "-159.566, 84.5818, 82.1652, 0.29", "-161.003, 85.1097, 81.7428, 0.74", "-163.051, 85.9448, 80.8201, 0.22", "-164.262, 86.4336, 80.1788, 0.15", "-164.889, 86.6761, 79.808, 0.29", "-165.696, 86.9733, 79.2855, 0.74", "-166.761, 87.3448, 78.5894, 0.22", "-168.099, 87.7394, 77.8555, 0.22", "-168.735, 87.9065, 77.6222, 0.52", "-169.153, 88.006, 77.489, 0.88", "-169.964, 88.1903, 77.2655, 0.29", "-171.063, 88.4242, 77.263, 0.22", "-172.502, 88.7641, 77.6125, 0.22", "-173.334, 88.9905, 77.9646, 0.22", "-174.566, 89.3675, 78.6059, 0.22", "-175.856, 89.7708, 79.4022, 0.15", "-179.74, 90.9329, 82.6, 0.15", "-180.768, 91.1972, 83.6523, 0.15", "-181.423, 91.3477, 84.4355, 0.15", "-182.008, 91.4597, 85.2479, 0.15", "-182.777, 91.585, 86.4056, 0.37", "-184.689, 91.8252, 89.4509, 0.15", "-185.984, 91.9193, 91.4559, 0.15", "-186.915, 91.9334, 93.0125, 0.15", "-188.164, 91.9217, 95.2806, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-54.1209, 55.6868, 34.6248, 0.29", "-54.0103, 55.9346, 36.4347, 0.29", "-53.8562, 56.2707, 39.4148, 0.29", "-53.7758, 56.5392, 41.9824, 0.29", "-53.7501, 56.8245, 44.5841, 0.29", "-53.791, 57.0933, 46.6334, 0.29", "-53.8194, 57.1704, 47.1492, 0.29", "-53.9521, 57.3772, 48.3816, 0.29", "-54.082, 57.4937, 49.0294, 0.37", "-54.5807, 57.7574, 50.4778, 0.37", "-55.1272, 57.9359, 51.5435, 0.22", "-55.8569, 58.128, 52.7548, 0.22", "-56.1382, 58.1902, 53.2298, 0.22", "-56.3656, 58.2242, 53.6732, 0.22", "-56.7274, 58.2442, 54.5494, 0.22", "-56.993, 58.2261, 55.2772, 0.22", "-57.1212, 58.1978, 55.6723, 0.22", "-57.2741, 58.16, 56.2154, 0.29", "-57.6462, 58.035, 57.6029, 0.29", "-58.087, 57.8695, 59.1587, 0.29", "-58.4381, 57.7217, 60.2933, 0.29", "-58.6677, 57.6225, 61.0295, 0.15", "-59.5, 57.2231, 63.7403, 0.15", "-60.36, 56.738, 66.574, 0.15", "-61.1265, 56.2242, 69.0586, 0.15", "-61.5516, 55.9006, 70.4291, 0.52" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-49.231, 41.5443, -36.4744, 1.18", "-50.711, 41.8416, -35.9244, 1.18" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-49.231, 41.5443, -36.4744, 0.29", "-50.0295, 42.8068, -36.3064, 0.29", "-50.7446, 43.9158, -36.3137, 0.29", "-51.3726, 44.8674, -36.3939, 0.88", "-52.121, 45.98, -36.5328, 0.44", "-52.8585, 47.0466, -36.7225, 0.44", "-53.3227, 47.6938, -36.8549, 0.29", "-54.2798, 48.9521, -37.2785, 0.29", "-54.7571, 49.538, -37.5122, 0.74", "-55.1367, 49.9448, -37.6821, 0.96", "-55.9222, 50.7113, -37.946, 0.96", "-56.9204, 51.6217, -38.1429, 0.66", "-58.3727, 52.8909, -38.181, 0.37", "-59.1897, 53.6208, -38.0486, 0.22", "-60.2985, 54.6458, -37.7157, 0.29", "-61.5184, 55.8273, -37.1455, 0.29", "-62.1731, 56.49, -36.7046, 0.81", "-63.2149, 57.5919, -35.8049, 1.03", "-64.0976, 58.5971, -34.8996, 0.22", "-64.6067, 59.2486, -34.3398, 0.29", "-65.0631, 59.94, -33.815, 0.44", "-65.4358, 60.5847, -33.4331, 0.44", "-65.875, 61.4972, -32.9691, 0.44", "-66.2922, 62.5801, -32.5957, 0.52", "-66.5669, 63.3659, -32.4716, 0.52", "-66.9169, 64.4582, -32.4542, 0.29", "-67.1339, 65.1848, -32.5081, 0.37", "-67.4406, 66.1847, -32.6277, 0.37", "-68.0668, 67.9599, -32.9199, 0.81", "-68.577, 69.2144, -33.1839, 1.03", "-69.0544, 70.2576, -33.4323, 0.74", "-69.6575, 71.4599, -33.7376, 0.66", "-70.2546, 72.6148, -34.0336, 0.37", "-71.0298, 74.0997, -34.4116, 0.29", "-71.511, 75.0415, -34.5961, 0.29", "-71.7674, 75.5874, -34.7315, 0.66", "-72.0325, 76.2204, -34.911, 1.18", "-72.2261, 76.7861, -35.0801, 1.18", "-72.5053, 77.7258, -35.3469, 0.74", "-72.77, 78.5997, -35.5556, 0.44", "-73.1957, 79.8668, -35.8516, 0.29", "-73.4202, 80.4958, -35.9994, 0.29", "-73.6614, 81.1506, -36.1483, 0.29", "-74.0972, 82.2844, -36.4366, 0.29", "-74.4894, 83.2516, -36.6893, 0.22", "-74.9871, 84.3999, -36.9886, 0.37", "-75.4553, 85.4448, -37.2292, 0.22", "-75.6624, 85.916, -37.34, 0.22", "-76.0595, 86.8788, -37.5585, 0.44", "-76.3314, 87.5963, -37.7066, 0.96", "-76.574, 88.2134, -37.811, 1.18", "-77.0412, 89.2718, -37.9352, 1.18", "-77.3857, 89.9656, -38.0298, 1.25", "-77.8091, 90.7497, -38.1753, 0.37", "-78.1919, 91.4238, -38.3177, 0.22", "-78.6529, 92.216, -38.5387, 0.29", "-78.9426, 92.7555, -38.726, 0.29", "-79.4338, 93.7806, -39.1707, 0.22", "-79.8186, 94.7285, -39.6333, 0.22", "-79.9427, 95.068, -39.805, 0.44", "-80.2569, 95.9927, -40.3107, 0.81", "-80.6991, 97.3918, -41.1384, 0.29", "-81.0355, 98.4325, -41.8116, 0.52", "-81.3329, 99.2395, -42.3647, 1.03", "-81.6553, 99.9666, -42.9024, 1.03", "-82.2831, 101.137, -43.8303, 0.66", "-82.9168, 102.15, -44.6871, 0.59", "-83.6139, 103.15, -45.5586, 0.88", "-84.4564, 104.336, -46.559, 0.22", "-85.123, 105.283, -47.3214, 0.59", "-85.9117, 106.453, -48.2214, 0.22", "-86.3088, 107.088, -48.6673, 0.44", "-86.7454, 107.902, -49.2203, 0.74", "-87.0093, 108.544, -49.6666, 0.88", "-87.2723, 109.396, -50.294, 0.37", "-87.4826, 110.182, -50.9216, 0.37", "-87.7196, 111.112, -51.6865, 0.37", "-88.0391, 112.251, -52.6044, 0.29", "-88.3059, 113.179, -53.379, 0.52", "-88.4317, 113.602, -53.7508, 0.52", "-88.7418, 114.645, -54.6722, 0.52", "-89.0321, 115.496, -55.3649, 0.37", "-89.2699, 116.009, -55.7276, 0.37", "-93.0451, 125.436, -56.8032, 0.37", "-95.1595, 135.417, -55.964, 0.37", "-96.2974, 145.543, -54.9047, 0.37", "-97.3398, 155.707, -54.1407, 0.37", "-96.9207, 165.928, -54.7591, 0.37", "-95.5482, 176.023, -53.6978, 0.37", "-93.5303, 186.06, -53.4875, 0.37", "-91.3326, 196.034, -52.7956, 0.37", "-90.3403, 206.232, -52.6427, 0.37" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-12.2639, 79.6501, -42.9627, 0.52", "-13.4126, 79.4754, -44.4355, 0.52", "-14.4903, 79.1986, -45.9132, 0.52", "-15.0648, 78.9593, -46.9796, 0.66", "-15.4301, 78.6725, -48.0008, 0.44", "-15.6612, 78.3761, -49.0253, 0.37", "-15.9586, 77.8776, -50.8914, 0.37", "-16.0018, 77.7536, -51.3802, 0.37", "-16.0477, 77.1908, -53.5414, 0.37", "-16.0314, 76.7111, -55.2886, 0.52", "-16.0322, 76.3594, -56.544, 0.52", "-16.0652, 76.1749, -57.1625, 0.52", "-16.3109, 75.7609, -58.2926, 0.52", "-16.8221, 75.3043, -59.2774, 0.66", "-17.5669, 74.8387, -59.6773, 0.52", "-18.6251, 74.238, -60.0234, 0.44", "-19.418, 73.779, -60.1924, 0.44", "-20.0489, 73.3881, -60.2763, 0.81", "-21.1022, 72.7106, -60.2713, 0.96", "-22.6217, 71.7778, -60.1107, 0.22", "-28.2899, 66.4476, -66.5005, 0.22", "-35.6535, 60.9656, -70.6444, 0.22", "-42.1167, 54.4383, -74.8487, 0.22" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-12.2639, 79.6501, -42.9627, 0.59", "-12.027, 80.9181, -42.4305, 0.59", "-11.8254, 82.3778, -41.9101, 0.59", "-11.6914, 83.5877, -41.6473, 0.66", "-11.6321, 84.5193, -41.542, 0.81", "-11.6072, 85.8898, -41.5407, 0.52", "-11.648, 87.5566, -41.713, 0.52", "-11.7361, 88.5995, -42.044, 0.66", "-11.9038, 90.1857, -42.9374, 1.03", "-12.0627, 91.7073, -44.2015, 0.37", "-12.1351, 92.8261, -45.465, 0.37", "-12.1387, 93.6573, -46.649, 0.59", "-12.0679, 94.7447, -48.4182, 0.74", "-11.9157, 95.6458, -50.016, 0.74", "-11.6339, 96.6247, -51.8611, 0.37", "-11.3339, 97.3183, -53.2341, 0.37", "-11.0879, 97.7463, -54.0392, 0.37", "-10.7998, 98.1414, -54.8008, 0.44", "-10.2987, 98.8031, -55.9779, 0.44", "-10.0062, 99.1912, -56.623, 0.74", "-9.46973, 99.9188, -57.7919, 0.74", "-8.80756, 100.765, -59.1787, 0.15", "-8.14838, 101.491, -60.5572, 0.15", "-6.26436, 110.337, -65.2439, 0.15", "-4.84367, 119.566, -69.3564, 0.15", "-4.81555, 127.795, -75.3176, 0.15", "-5.34569, 135.336, -82.0704, 0.15", "-6.08264, 143.708, -87.7921, 0.15", "-6.1764, 152.392, -93.1041, 0.15", "-4.8058, 161.162, -98.0947, 0.15", "-3.06413, 170.374, -102.12, 0.15", "-2.25773, 179.916, -105.682, 0.15", "0.6989, 189.452, -107.85, 0.15", "3.99334, 198.993, -109.436, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "46.9013, 227.954, -43.7516, 0.29", "46.6726, 228.666, -45.204, 0.29", "46.3525, 229.45, -47.2001, 0.29", "46.0982, 229.902, -48.4964, 0.29", "45.8528, 230.255, -49.5041, 0.29", "45.673, 230.5, -50.1834, 0.59", "45.178, 231.229, -52.0651, 0.22", "44.8647, 231.798, -53.3305, 0.22", "44.722, 232.141, -53.9749, 0.22", "44.5937, 232.614, -54.7757, 0.15", "44.7595, 233.081, -55.214, 0.15", "45.2, 233.691, -55.4624, 0.66", "46.0636, 234.702, -55.6569, 0.22", "46.5105, 235.198, -55.7237, 0.22", "46.9456, 235.611, -55.7762, 0.44", "48.2177, 236.591, -55.8824, 0.29", "50.6957, 242.522, -63.6526, 0.29", "52.1722, 248.659, -71.5248, 0.29", "52.7535, 254.946, -79.4012, 0.29", "52.8001, 262.266, -86.401, 0.29", "53.3032, 269.276, -93.6795, 0.29", "51.9409, 274.934, -101.906, 0.29", "49.5233, 279.566, -110.493, 0.29", "46.3486, 284.969, -118.376, 0.29", "44.6258, 290.51, -126.61, 0.29", "42.7087, 297.014, -134.097, 0.29", "41.7984, 304.251, -141.12, 0.29", "42.467, 310.725, -148.844, 0.29", "45.4228, 316.607, -156.482, 0.29", "48.4396, 320.728, -165.127, 0.29", "52.2869, 323.64, -173.909, 0.29", "55.7858, 324.718, -183.218, 0.29" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "46.9013, 227.954, -43.7516, 0.74", "46.5293, 228.446, -43.5274, 0.74", "44.739, 230.633, -42.6327, 0.29", "44.0933, 231.351, -42.3588, 0.29", "43.0471, 232.425, -41.9793, 0.52", "42.3117, 233.128, -41.761, 0.29", "41.345, 234.013, -41.58, 0.37", "40.5068, 234.728, -41.5402, 0.59", "39.8608, 235.235, -41.5648, 0.44", "39.1314, 235.827, -41.5643, 0.88", "37.7919, 237.033, -41.4478, 0.37", "36.4879, 238.369, -41.172, 0.66", "35.7519, 239.261, -40.9205, 0.29", "34.9745, 240.402, -40.5545, 0.22", "34.1753, 241.815, -40.0711, 0.74", "33.4072, 243.45, -39.4827, 0.29", "33.0221, 244.465, -39.1077, 0.22", "32.7482, 245.304, -38.802, 0.88", "32.4315, 246.383, -38.5023, 0.88", "32.1989, 247.255, -38.3635, 0.22", "31.9753, 248.155, -38.3102, 0.22", "31.7437, 249.205, -38.3102, 0.15", "31.6267, 249.839, -38.3102, 0.66", "31.5304, 250.511, -38.3102, 0.22", "31.4124, 251.513, -38.3135, 0.15", "31.3774, 252.034, -38.3241, 0.15", "31.3753, 252.864, -38.3992, 0.44", "31.447, 253.991, -38.6003, 0.44", "31.5686, 255.233, -38.9929, 0.22", "31.6537, 255.909, -39.3236, 0.22", "31.7839, 256.772, -39.9065, 0.52", "31.9573, 257.817, -40.8105, 0.52", "32.0845, 258.471, -41.4996, 0.22", "32.343, 259.618, -42.8249, 0.22", "32.5506, 260.493, -43.8923, 0.22", "32.7027, 261.161, -44.7358, 0.22", "32.8563, 261.942, -45.7242, 0.22", "33.0787, 263.097, -47.1226, 0.22", "33.2677, 263.95, -48.1528, 0.66", "33.4304, 264.493, -48.7699, 0.37", "31.7117, 274.358, -50.8726, 0.37", "31.0203, 284.472, -52.3385, 0.37", "28.4715, 294.38, -52.0674, 0.37", "26.631, 304.373, -50.8206, 0.37", "24.3838, 314.359, -51.0097, 0.37", "23.7285, 324.55, -51.8564, 0.37", "24.7065, 334.75, -52.0086, 0.37", "25.9455, 344.836, -50.7272, 0.37", "28.8267, 354.314, -48.2394, 0.37", "33.2159, 363.434, -46.987, 0.37", "38.2085, 372.306, -47.3922, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-50.711, 41.8416, -35.9244, 0.52", "-52.2517, 42.4488, -36.2109, 0.52", "-52.8691, 42.6988, -36.343, 0.66", "-53.8463, 43.0845, -36.5498, 0.88", "-55.3133, 43.6398, -36.8493, 0.74", "-56.6266, 44.0963, -37.0892, 0.52", "-57.729, 44.4511, -37.2734, 0.52", "-59.3884, 44.9339, -37.5783, 0.74", "-60.3176, 45.1758, -37.7364, 0.74", "-61.6367, 45.4626, -37.9112, 0.66", "-63.098, 45.6905, -38.0611, 0.37", "-63.7562, 45.7552, -38.1222, 0.37", "-64.4245, 45.784, -38.2021, 0.88", "-65.4767, 45.7808, -38.3772, 0.88", "-66.3009, 45.7688, -38.5646, 0.59", "-67.1305, 45.7384, -38.8042, 0.59", "-67.9884, 45.7021, -39.1383, 0.59", "-68.7139, 45.6552, -39.5262, 0.59", "-69.4991, 45.5932, -40.0148, 0.59", "-70.0733, 45.5341, -40.3867, 0.81", "-70.8131, 45.4461, -40.8494, 1.03", "-72.1402, 45.2248, -41.607, 0.52", "-73.917, 44.8519, -42.4961, 0.59", "-75.0674, 44.5297, -43.0087, 0.59", "-76.0266, 44.1776, -43.3659, 0.59", "-77.327, 43.5594, -43.759, 0.59", "-78.2182, 43.0129, -43.9307, 0.59", "-79.2454, 42.2219, -43.9732, 0.52", "-79.9173, 41.6092, -43.9185, 0.59", "-80.6405, 40.8516, -43.84, 0.52", "-81.3132, 40.1063, -43.7729, 0.37", "-82.2071, 39.104, -43.7162, 0.66", "-82.7852, 38.4975, -43.7017, 0.66", "-83.3667, 37.9648, -43.7203, 0.88", "-84.1052, 37.3935, -43.7712, 0.88", "-85.4421, 36.4752, -43.9542, 0.52", "-86.227, 35.9922, -44.1426, 0.52", "-86.759, 35.7109, -44.3369, 0.66", "-88.1123, 35.1118, -45.0016, 0.44", "-88.7607, 34.8944, -45.3974, 0.59", "-89.6381, 34.7027, -46.0088, 0.66", "-91.0946, 34.5782, -47.1249, 0.66", "-92.0748, 34.5885, -47.9244, 0.88", "-92.8392, 34.6595, -48.5651, 0.88", "-93.6158, 34.7765, -49.215, 0.81", "-94.335, 34.9088, -49.7617, 1.11", "-95.3527, 35.1116, -50.3888, 0.52", "-96.6929, 35.388, -51.0761, 0.52", "-98.1855, 35.6976, -51.7223, 0.29", "-98.6559, 35.7933, -51.8961, 0.29", "-99.6968, 35.9801, -52.2674, 0.59", "-101.055, 36.1625, -52.8444, 0.29", "-102.827, 36.3438, -53.8095, 0.37", "-103.965, 36.4191, -54.5255, 0.37", "-104.821, 36.4507, -55.127, 0.37", "-106.296, 36.4843, -56.2706, 0.44", "-108.147, 36.4777, -57.9085, 0.96", "-109.863, 36.4043, -59.6664, 0.44", "-110.548, 36.3397, -60.4644, 0.52", "-111.346, 36.2557, -61.5461, 0.52", "-120.11, 34.8692, -66.1669, 0.52", "-129.213, 34.0715, -70.234, 0.52", "-138.561, 32.086, -73.2106, 0.52", "-147.989, 28.7663, -74.0027, 0.52", "-157.069, 24.5103, -73.451, 0.52", "-166.735, 21.8823, -73.5224, 0.52", "-175.713, 17.4949, -74.5583, 0.52", "-184.971, 14.1394, -76.4486, 0.52", "-194.142, 11.6485, -79.6086, 0.52", "-202.858, 9.82426, -84.1759, 0.52", "-211.431, 7.37199, -88.7343, 0.52", "-219.589, 5.2829, -94.1459, 0.52", "-227.996, 3.06823, -99.1112, 0.52" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-50.711, 41.8416, -35.9244, 0.29", "-51.99, 41.9848, -36.9774, 0.29", "-53.4885, 42.1052, -38.1356, 0.44", "-54.1159, 42.1522, -38.5715, 0.44", "-55.124, 42.2389, -39.1933, 0.29", "-56.1728, 42.3474, -39.771, 0.29", "-57.2249, 42.4713, -40.295, 0.59", "-57.9749, 42.5956, -40.5406, 0.81", "-58.9224, 42.7538, -40.7608, 0.59", "-59.8271, 42.8842, -40.9786, 0.44", "-60.578, 42.9737, -41.1918, 0.74", "-61.149, 43.0478, -41.3904, 1.03", "-62.2705, 43.2019, -41.8857, 0.29", "-63.5105, 43.3256, -42.5846, 0.29", "-64.7932, 43.3356, -43.4717, 0.96", "-66.0883, 43.1842, -44.5184, 0.66", "-67.002, 42.9407, -45.346, 0.74", "-67.8454, 42.6658, -46.1762, 0.81", "-68.6119, 42.349, -47.0111, 0.52", "-69.582, 41.8318, -48.1035, 0.52", "-70.3471, 41.256, -49.0079, 0.44", "-70.9403, 40.6223, -49.7139, 0.59" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-227.996, 3.06823, -99.1112, 0.66", "-235.131, -3.88442, -100.868, 0.66", "-241.25, -11.784, -102.647, 0.66", "-247.17, -19.8454, -104.407, 0.66", "-253.806, -27.5007, -104.831, 0.66", "-259.645, -35.8215, -104.76, 0.66", "-265.224, -44.2821, -105.622, 0.66", "-270.349, -52.8001, -107.784, 0.66", "-274.933, -61.6679, -109.82, 0.66", "-279.348, -70.72, -111.405, 0.66", "-283.17, -80.1239, -112.509, 0.66", "-286.317, -89.8514, -112.321, 0.66", "-289.009, -99.7219, -112.198, 0.66", "-293.775, -108.727, -112.529, 0.66", "-298.13, -117.931, -113.166, 0.66", "-302.948, -126.555, -115.613, 0.66", "-308.115, -134.96, -118.075, 0.66", "-313.924, -141.993, -122.453, 0.66", "-319.197, -148.675, -127.904, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-227.996, 3.06823, -99.1112, 0.15", "-236.453, 6.86892, -102.949, 0.66", "-244.463, 12.2009, -105.913, 0.66", "-252.622, 17.4106, -108.67, 0.66", "-260.24, 23.6788, -110.807, 0.66", "-267.909, 29.639, -113.524, 0.66", "-274.375, 36.2687, -117.567, 0.66", "-281.057, 42.3571, -122.047, 0.66", "-287.223, 49.1971, -126.224, 0.66", "-294.449, 54.4643, -130.848, 0.66", "-301.093, 59.1505, -136.76, 0.66", "-306.319, 64.5064, -143.497, 0.66", "-312.758, 68.3318, -150.176, 0.66", "-317.91, 73.1916, -157.316, 0.66", "-322.137, 79.3558, -164.096, 0.66", "-324.978, 86.1939, -170.982, 0.66" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-70.9403, 40.6223, -49.7139, 0.66", "-71.2102, 39.4099, -50.4628, 0.66", "-71.4319, 38.4847, -51.1899, 0.59", "-71.6506, 37.8498, -51.8088, 0.29", "-72.0799, 36.9731, -52.7587, 0.29", "-72.2904, 36.6361, -53.1911, 0.44", "-72.929, 35.8385, -54.4579, 0.59", "-73.4546, 35.3223, -55.4303, 0.59", "-74.0743, 34.8368, -56.5784, 0.59", "-74.5452, 34.5352, -57.4533, 0.66", "-75.3117, 34.1336, -58.8464, 0.66", "-76.2962, 33.7331, -60.6063, 0.22", "-79.7052, 29.5378, -69.0696, 0.22", "-83.3438, 25.3343, -77.4327, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-70.9403, 40.6223, -49.7139, 0.15", "-71.8286, 40.876, -49.5531, 0.15", "-72.7182, 41.0529, -49.3845, 0.22", "-73.6589, 41.1019, -49.2139, 0.37", "-74.5732, 41.0598, -49.0695, 0.52", "-75.8156, 40.8853, -48.8624, 0.22", "-76.5476, 40.7456, -48.7276, 0.22", "-77.0879, 40.6113, -48.5815, 0.22", "-78.2736, 40.2358, -48.1867, 0.29", "-78.9541, 39.9847, -47.9339, 0.22", "-79.9702, 39.6239, -47.621, 0.29", "-81.0186, 39.3168, -47.381, 0.15", "-82.3494, 39.0318, -47.1329, 0.15", "-82.8711, 38.9636, -47.0613, 0.44", "-83.5253, 38.9246, -47.0084, 0.44", "-85.3766, 38.9031, -46.9718, 0.22", "-86.2655, 38.9392, -46.9714, 0.22", "-86.9494, 39.0011, -46.9665, 0.52", "-87.7643, 39.123, -46.9861, 0.52", "-88.712, 39.2999, -46.9757, 0.22", "-89.432, 39.473, -46.9147, 0.44", "-90.7418, 39.8639, -46.602, 0.44", "-91.6337, 40.209, -46.3477, 0.74", "-92.6368, 40.7016, -45.9907, 0.88", "-102.24, 40.2718, -43.2327, 0.88", "-111.72, 38.8037, -40.3902, 0.88", "-121.657, 38.4472, -39.3313, 0.88", "-131.605, 39.1373, -40.1018, 0.88", "-141.398, 39.7999, -42.0185, 0.88", "-151.138, 41.5047, -43.5553, 0.88", "-160.276, 44.2033, -46.6506, 0.88", "-169.093, 45.1594, -51.2753, 0.88", "-177.885, 47.3983, -55.5102, 0.88", "-187.704, 47.9646, -57.321, 0.88", "-197.665, 47.0783, -57.467, 0.88", "-207.094, 44.4305, -59.5688, 0.88", "-216.027, 41.7481, -63.225, 0.88", "-225.68, 40.7964, -65.6632, 0.88", "-235.296, 40.1523, -68.3347, 0.88", "-245.201, 39.7124, -69.6447, 0.88", "-255.197, 39.4785, -69.7642, 0.88", "-264.947, 37.38, -68.8995, 0.88", "-274.623, 36.3935, -66.565, 0.88", "-283.665, 36.9253, -62.3253, 0.88", "-292.159, 36.1303, -57.105, 0.88", "-299.625, 33.6479, -50.9092, 0.88", "-306.275, 30.2497, -44.2168, 0.88", "-313.725, 25.6275, -39.3011, 0.88", "-320.337, 20.1691, -34.0163, 0.88", "-325.335, 13.5501, -28.2442, 0.88", "-329.23, 5.85793, -22.9043, 0.88", "-331.515, -2.65076, -17.8184, 0.88", "-332.493, -12.2417, -14.4287, 0.88", "-334.055, -21.2138, -9.85253, 0.88", "-336.796, -29.8097, -5.1452, 0.88", "-339.327, -38.2665, -0.0933785, 0.88", "-341.14, -47.4149, 4.0365, 0.88", "-342.221, -56.2929, 8.91587, 0.88", "-343.704, -65.2108, 13.6174, 0.88", "-344.806, -74.2368, 18.2263, 0.88", "-347.321, -82.2055, 23.9913, 0.88", "-349.097, -90.5622, 29.5027, 0.88", "-351.989, -97.7281, 36.042, 0.88", "-355.955, -105.502, 41.2137, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-83.3438, 25.3343, -77.4327, 0.22", "-87.6243, 20.4615, -85.1189, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-83.3438, 25.3343, -77.4327, 0.22", "-86.3813, 21.1954, -86.0622, 0.22", "-91.1222, 16.3149, -93.4685, 0.22", "-94.6814, 12.3494, -101.975, 0.22", "-97.7989, 7.44496, -110.184, 0.22", "-99.2538, 3.96105, -119.476, 0.22", "-100.688, -0.939116, -128.141, 0.22", "-100.625, -6.03152, -136.819, 0.22", "-102.001, -12.4865, -144.464, 0.22", "-103.652, -17.9332, -152.773, 0.22", "-106.845, -23.0227, -160.845, 0.22", "-109.992, -28.8191, -168.468, 0.22", "-113.968, -35.087, -175.309, 0.22", "-118.681, -41.0647, -181.925, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_25", "dend_0", "dend_31", "dend_26", "dend_4", "dend_1", "dend_35", "dend_32", "dend_30", "dend_27", "dend_10", "dend_5", "dend_3", "dend_2", "dend_39", "dend_36", "dend_34", "dend_33", "dend_29", "dend_28", "dend_22", "dend_11", "dend_9", "dend_6", "dend_43", "dend_40", "dend_38", "dend_37", "dend_24", "dend_23", "dend_13", "dend_12", "dend_8", "dend_7", "dend_42", "dend_41", "dend_19", "dend_14", "dend_21", "dend_20", "dend_16", "dend_15", "dend_18", "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_10", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_DBC_9daccafbcb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_10, id: dend_10, parent: dend_4
create dend_10
public dend_10
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_22, id: dend_22, parent: dend_10
create dend_22
public dend_22
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_5
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_43, id: dend_43, parent: dend_39
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_25(0), soma_0(0.45000015763654744)
    connect dend_0(0), soma_0(0.45000015763654744)
    connect axon_0(0), soma_0(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_10(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_22(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_43(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 2.20498, -9.63696, 0.0, 2.93949 ) }
    soma_0 { pt3dadd( 1.97921, -8.62937, 0.0, 5.10114 ) }
    soma_0 { pt3dadd( 1.75343, -7.62179, 0.0, 6.34149 ) }
    soma_0 { pt3dadd( 1.52766, -6.61421, 0.0, 7.24948 ) }
    soma_0 { pt3dadd( 1.30189, -5.60662, 0.0, 8.32859 ) }
    soma_0 { pt3dadd( 1.07612, -4.59904, 0.0, 9.63098 ) }
    soma_0 { pt3dadd( 0.850343, -3.59146, 0.0, 10.5761 ) }
    soma_0 { pt3dadd( 0.624571, -2.58388, 0.0, 11.2008 ) }
    soma_0 { pt3dadd( 0.398798, -1.57629, 0.0, 11.5851 ) }
    soma_0 { pt3dadd( 0.173026, -0.56871, 0.0, 11.8715 ) }
    soma_0 { pt3dadd( -0.0527468, 0.438873, 0.0, 11.942 ) }
    soma_0 { pt3dadd( -0.278519, 1.44646, 0.0, 11.923 ) }
    soma_0 { pt3dadd( -0.504292, 2.45404, 0.0, 11.4797 ) }
    soma_0 { pt3dadd( -0.730064, 3.46162, 0.0, 10.9001 ) }
    soma_0 { pt3dadd( -0.955837, 4.4692, 0.0, 10.1322 ) }
    soma_0 { pt3dadd( -1.18161, 5.47679, 0.0, 9.32117 ) }
    soma_0 { pt3dadd( -1.40738, 6.48437, 0.0, 8.43955 ) }
    soma_0 { pt3dadd( -1.63315, 7.49195, 0.0, 7.43264 ) }
    soma_0 { pt3dadd( -1.85893, 8.49954, 0.0, 6.41765 ) }
    soma_0 { pt3dadd( -2.0847, 9.50712, 0.0, 5.2256 ) }
    soma_0 { pt3dadd( -2.31047, 10.5147, 0.0, 2.87927 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 21/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 1.67666, -9.94541, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 1.67666, -9.94541, 7.1, 4.35 ) }
    dend_25 { pt3dadd( 2.16082, -11.0204, 7.79499, 3.32 ) }
    dend_25 { pt3dadd( 3.03806, -12.696, 9.1702, 2.36 ) }
    dend_25 { pt3dadd( 3.97513, -14.4858, 10.6392, 2.88 ) }
    dend_25 { pt3dadd( 4.06405, -14.6556, 10.7786, 2.65 ) }
    dend_25 { pt3dadd( 4.74122, -15.949, 11.8402, 1.62 ) }
    dend_25 { pt3dadd( 5.66252, -17.5787, 13.3395, 1.84 ) }
    dend_25 { pt3dadd( 6.58441, -18.9433, 14.9525, 2.21 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.96334, 10.5443, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -1.96334, 10.5443, 0.0, 4.28 ) }
    dend_0 { pt3dadd( -2.80418, 12.1985, -0.165946, 3.32 ) }
    dend_0 { pt3dadd( -3.40047, 13.3661, -0.363115, 2.88 ) }
    dend_0 { pt3dadd( -3.83248, 14.2144, -0.525144, 2.88 ) }
    dend_0 { pt3dadd( -4.47767, 15.4813, -0.767129, 3.47 ) }
    dend_0 { pt3dadd( -5.32115, 17.1375, -1.08348, 2.51 ) }
    dend_0 { pt3dadd( -6.32402, 19.0756, -1.49305, 2.8 ) }
    dend_0 { pt3dadd( -7.21289, 20.7359, -1.91816, 4.13 ) }
    dend_0 { pt3dadd( -7.63237, 21.5058, -2.14798, 4.13 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.31047, 10.5147, 0.0, 0.48938 ) }
    axon_0 { pt3dadd( -5.59024, 25.1517, 0.0, 0.48938 ) }
    axon_0 { pt3dadd( -8.87001, 39.7888, 0.0, 0.48938 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 43/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 6.58441, -18.9433, 14.9525, 1.4 ) }
    dend_31 { pt3dadd( 7.50439, -19.7268, 14.0582, 1.4 ) }
    dend_31 { pt3dadd( 8.72862, -20.8015, 12.9087, 1.4 ) }
    dend_31 { pt3dadd( 9.56007, -21.5309, 12.1759, 1.4 ) }
    dend_31 { pt3dadd( 10.6032, -22.4602, 11.3466, 1.4 ) }
    dend_31 { pt3dadd( 11.5152, -23.2812, 10.6592, 1.18 ) }
    dend_31 { pt3dadd( 12.6773, -24.3173, 9.8471, 1.4 ) }
    dend_31 { pt3dadd( 13.2053, -24.8047, 9.51006, 1.55 ) }
    dend_31 { pt3dadd( 13.7261, -25.2881, 9.22925, 1.7 ) }
    dend_31 { pt3dadd( 14.8651, -26.3324, 8.67813, 1.18 ) }
    dend_31 { pt3dadd( 15.7604, -27.1267, 8.3191, 1.18 ) }
    dend_31 { pt3dadd( 16.5675, -27.8266, 8.04647, 1.84 ) }
    dend_31 { pt3dadd( 17.0401, -28.2362, 7.93209, 1.84 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 56/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 6.58441, -18.9433, 14.9525, 1.18 ) }
    dend_26 { pt3dadd( 6.3261, -19.5918, 15.8984, 1.18 ) }
    dend_26 { pt3dadd( 5.74414, -21.1901, 18.1555, 1.03 ) }
    dend_26 { pt3dadd( 5.4172, -22.3659, 19.8092, 1.03 ) }
    dend_26 { pt3dadd( 5.30231, -23.0306, 20.7833, 0.96 ) }
    dend_26 { pt3dadd( 5.29054, -23.5835, 21.6577, 0.96 ) }
    dend_26 { pt3dadd( 5.34308, -24.283, 22.867, 1.11 ) }
    dend_26 { pt3dadd( 5.47979, -24.9514, 24.1773, 1.03 ) }
    dend_26 { pt3dadd( 5.67666, -25.6834, 25.7547, 1.18 ) }
    dend_26 { pt3dadd( 5.92383, -26.5822, 27.8762, 1.84 ) }
    dend_26 { pt3dadd( 6.17737, -27.6083, 30.5392, 1.18 ) }
    dend_26 { pt3dadd( 6.27893, -28.3858, 32.6654, 1.18 ) }
    dend_26 { pt3dadd( 6.2065, -28.9434, 34.28, 1.18 ) }
    dend_26 { pt3dadd( 5.82852, -29.5317, 36.0388, 1.33 ) }
    dend_26 { pt3dadd( 5.17651, -30.0072, 37.4907, 1.33 ) }
    dend_26 { pt3dadd( 4.63188, -30.264, 38.2831, 1.33 ) }
    dend_26 { pt3dadd( 3.64368, -30.6298, 39.4946, 1.4 ) }
    dend_26 { pt3dadd( 2.67832, -30.9577, 40.7497, 1.47 ) }
    dend_26 { pt3dadd( 1.3945, -31.3988, 42.7778, 1.33 ) }
    dend_26 { pt3dadd( 0.486005, -31.752, 44.7204, 1.33 ) }
    dend_26 { pt3dadd( -0.124422, -32.0475, 46.407, 1.4 ) }
    dend_26 { pt3dadd( -0.859434, -32.486, 49.1308, 1.4 ) }
    dend_26 { pt3dadd( -1.44447, -32.9306, 52.017, 1.4 ) }
    dend_26 { pt3dadd( -1.83328, -33.344, 54.3565, 1.4 ) }
    dend_26 { pt3dadd( -2.27493, -33.9155, 57.103, 1.4 ) }
    dend_26 { pt3dadd( -2.52416, -34.2323, 58.2586, 1.11 ) }
    dend_26 { pt3dadd( -3.32579, -35.1385, 60.8452, 1.11 ) }
    dend_26 { pt3dadd( -4.34357, -36.1364, 63.1879, 1.25 ) }
    dend_26 { pt3dadd( -4.96281, -36.6985, 64.3379, 1.55 ) }
    dend_26 { pt3dadd( -6.12385, -37.6739, 66.1251, 1.55 ) }
    dend_26 { pt3dadd( -7.55395, -38.8278, 68.0407, 1.25 ) }
    dend_26 { pt3dadd( -9.19884, -40.104, 70.1019, 1.25 ) }
    dend_26 { pt3dadd( -11.1908, -41.6624, 72.2647, 1.62 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 89/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -7.63237, 21.5058, -2.14798, 2.88 ) }
    dend_4 { pt3dadd( -8.96769, 23.2245, -3.73904, 2.88 ) }
    dend_4 { pt3dadd( -9.93486, 24.4694, -4.89144, 2.88 ) }
    dend_4 { pt3dadd( -10.9053, 25.7184, -6.04773, 3.47 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 93/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -7.63237, 21.5058, -2.14798, 2.06 ) }
    dend_1 { pt3dadd( -6.96196, 23.9982, -0.681685, 2.06 ) }
    dend_1 { pt3dadd( -6.34662, 26.2739, 0.45713, 0.96 ) }
    dend_1 { pt3dadd( -6.05448, 27.297, 0.913574, 0.96 ) }
    dend_1 { pt3dadd( -5.62473, 28.7689, 1.48571, 0.81 ) }
    dend_1 { pt3dadd( -5.26319, 29.9454, 1.88463, 0.81 ) }
    dend_1 { pt3dadd( -4.762, 31.5119, 2.36013, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( -4.43303, 32.5196, 2.53426, 1.11 ) }
    dend_1 { pt3dadd( -4.04697, 33.6431, 2.63055, 1.55 ) }
    dend_1 { pt3dadd( -3.55335, 35.1203, 2.71063, 1.18 ) }
    dend_1 { pt3dadd( -3.11559, 36.5339, 2.75369, 0.88 ) }
    dend_1 { pt3dadd( -2.89505, 37.3511, 2.76971, 0.74 ) }
    dend_1 { pt3dadd( -2.59131, 38.7481, 2.77962, 1.18 ) }
    dend_1 { pt3dadd( -2.30845, 40.3112, 2.82214, 0.81 ) }
    dend_1 { pt3dadd( -2.01385, 42.1776, 2.89853, 0.96 ) }
    dend_1 { pt3dadd( -1.76157, 43.8167, 2.95855, 1.25 ) }
    dend_1 { pt3dadd( -1.53788, 45.2506, 3.0055, 1.25 ) }
    dend_1 { pt3dadd( -1.28775, 46.589, 3.04274, 0.66 ) }
    dend_1 { pt3dadd( -0.945216, 47.9804, 3.07508, 0.88 ) }
    dend_1 { pt3dadd( -0.512262, 49.2208, 3.0529, 0.52 ) }
    dend_1 { pt3dadd( 2.98431E-4, 50.3851, 2.98058, 0.96 ) }
    dend_1 { pt3dadd( 0.366012, 51.1186, 2.90632, 0.96 ) }
    dend_1 { pt3dadd( 1.12434, 52.5043, 2.75695, 0.74 ) }
    dend_1 { pt3dadd( 1.76827, 53.5969, 2.63252, 0.88 ) }
    dend_1 { pt3dadd( 2.57393, 54.9335, 2.47352, 0.88 ) }
    dend_1 { pt3dadd( 3.47061, 56.4669, 2.38607, 0.96 ) }
    dend_1 { pt3dadd( 3.74505, 56.945, 2.3909, 0.96 ) }
    dend_1 { pt3dadd( 4.47637, 58.2631, 2.49861, 0.96 ) }
    dend_1 { pt3dadd( 4.79966, 58.8675, 2.60728, 1.11 ) }
    dend_1 { pt3dadd( 5.19226, 59.6277, 2.79967, 0.96 ) }
    dend_1 { pt3dadd( 5.92832, 60.9687, 3.26695, 0.81 ) }
    dend_1 { pt3dadd( 6.57624, 62.0846, 3.73495, 0.66 ) }
    dend_1 { pt3dadd( 7.42574, 63.5444, 4.37727, 0.59 ) }
    dend_1 { pt3dadd( 8.15244, 64.7884, 5.0191, 0.88 ) }
    dend_1 { pt3dadd( 8.84288, 65.9657, 5.66096, 1.4 ) }
    dend_1 { pt3dadd( 9.86969, 67.6699, 6.65544, 0.88 ) }
    dend_1 { pt3dadd( 10.7503, 69.0625, 7.53056, 0.74 ) }
    dend_1 { pt3dadd( 11.2361, 69.8267, 8.04692, 0.74 ) }
    dend_1 { pt3dadd( 12.4728, 71.6366, 9.31995, 0.74 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 32/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -8.87001, 39.7888, 0.0, 0.158858 ) }
    axon_1 { pt3dadd( -12.1498, 54.4258, 0.0, 0.158858 ) }
    axon_1 { pt3dadd( -15.4296, 69.0629, 0.0, 0.158858 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 35/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 17.0401, -28.2362, 7.93209, 1.7 ) }
    dend_35 { pt3dadd( 18.3843, -28.2555, 9.99047, 1.7 ) }
    dend_35 { pt3dadd( 19.5145, -28.3997, 11.7957, 1.25 ) }
    dend_35 { pt3dadd( 20.379, -28.5994, 13.2219, 1.25 ) }
    dend_35 { pt3dadd( 21.2436, -28.88, 14.6342, 1.55 ) }
    dend_35 { pt3dadd( 22.3331, -29.3137, 16.375, 1.4 ) }
    dend_35 { pt3dadd( 23.3594, -29.7685, 17.9734, 1.62 ) }
    dend_35 { pt3dadd( 24.3745, -30.3115, 19.4591, 1.55 ) }
    dend_35 { pt3dadd( 25.5589, -31.0, 21.1382, 1.4 ) }
    dend_35 { pt3dadd( 26.5709, -31.6052, 22.5025, 1.47 ) }
    dend_35 { pt3dadd( 28.0402, -32.4959, 24.3761, 1.18 ) }
    dend_35 { pt3dadd( 29.4475, -33.3159, 26.0335, 1.18 ) }
    dend_35 { pt3dadd( 31.0063, -34.1735, 27.7159, 1.03 ) }
    dend_35 { pt3dadd( 32.3269, -34.8407, 29.0089, 1.03 ) }
    dend_35 { pt3dadd( 32.8926, -35.0931, 29.509, 1.25 ) }
    dend_35 { pt3dadd( 34.3279, -35.6485, 30.69, 1.11 ) }
    dend_35 { pt3dadd( 35.572, -36.0604, 31.747, 1.33 ) }
    dend_35 { pt3dadd( 36.3568, -36.2841, 32.4181, 1.62 ) }
    dend_35 { pt3dadd( 38.1586, -36.7602, 33.9593, 1.33 ) }
    dend_35 { pt3dadd( 39.9311, -37.184, 35.4917, 1.25 ) }
    dend_35 { pt3dadd( 41.4483, -37.4927, 36.8435, 1.18 ) }
    dend_35 { pt3dadd( 44.0379, -37.907, 39.222, 1.47 ) }
    dend_35 { pt3dadd( 44.7751, -38.007, 39.9395, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 58/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 17.0401, -28.2362, 7.93209, 0.88 ) }
    dend_32 { pt3dadd( 17.1072, -29.3254, 8.58074, 0.88 ) }
    dend_32 { pt3dadd( 17.0637, -30.944, 9.61445, 0.74 ) }
    dend_32 { pt3dadd( 16.9225, -32.6084, 10.7558, 0.74 ) }
    dend_32 { pt3dadd( 16.772, -33.9089, 11.6303, 0.74 ) }
    dend_32 { pt3dadd( 16.5734, -35.3039, 12.5317, 0.96 ) }
    dend_32 { pt3dadd( 16.3456, -36.6954, 13.3864, 1.7 ) }
    dend_32 { pt3dadd( 15.8784, -38.7782, 14.64, 0.66 ) }
    dend_32 { pt3dadd( 15.4724, -40.228, 15.4157, 0.74 ) }
    dend_32 { pt3dadd( 15.1401, -41.3259, 15.8436, 0.88 ) }
    dend_32 { pt3dadd( 14.8268, -42.3367, 16.0658, 1.11 ) }
    dend_32 { pt3dadd( 14.4661, -43.5643, 16.1351, 1.33 ) }
    dend_32 { pt3dadd( 14.0288, -45.2278, 16.0214, 0.74 ) }
    dend_32 { pt3dadd( 13.698, -46.7826, 15.7703, 0.74 ) }
    dend_32 { pt3dadd( 13.5147, -47.8765, 15.5162, 0.59 ) }
    dend_32 { pt3dadd( 13.2651, -49.7984, 15.0294, 0.88 ) }
    dend_32 { pt3dadd( 13.1108, -51.4674, 14.5984, 0.59 ) }
    dend_32 { pt3dadd( 13.0507, -52.348, 14.3622, 0.59 ) }
    dend_32 { pt3dadd( 12.9878, -53.9512, 13.9442, 0.81 ) }
    dend_32 { pt3dadd( 12.9413, -56.0026, 13.4846, 0.74 ) }
    dend_32 { pt3dadd( 12.9298, -57.0323, 13.2573, 0.59 ) }
    dend_32 { pt3dadd( 12.943, -58.3738, 13.0081, 0.81 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 80/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -11.1908, -41.6624, 72.2647, 0.52 ) }
    dend_30 { pt3dadd( -12.073, -41.0917, 76.1131, 0.52 ) }
    dend_30 { pt3dadd( -12.4383, -40.7778, 78.0177, 0.52 ) }
    dend_30 { pt3dadd( -12.7027, -40.5119, 79.5168, 0.52 ) }
    dend_30 { pt3dadd( -12.9012, -40.3023, 80.7486, 0.52 ) }
    dend_30 { pt3dadd( -13.2175, -39.961, 82.6076, 0.52 ) }
    dend_30 { pt3dadd( -13.4564, -39.7057, 83.9229, 0.52 ) }
    dend_30 { pt3dadd( -13.7039, -39.4214, 85.1244, 0.52 ) }
    dend_30 { pt3dadd( -14.114, -38.9546, 86.9503, 0.52 ) }
    dend_30 { pt3dadd( -14.7032, -38.3126, 89.2027, 0.52 ) }
    dend_30 { pt3dadd( -15.1755, -37.8314, 90.7222, 0.81 ) }
    dend_30 { pt3dadd( -15.6783, -37.3176, 92.0834, 0.81 ) }
    dend_30 { pt3dadd( -16.1049, -36.837, 93.1479, 0.59 ) }
    dend_30 { pt3dadd( -16.9871, -35.7245, 95.3197, 0.59 ) }
    dend_30 { pt3dadd( -17.5997, -34.7834, 96.9275, 0.52 ) }
    dend_30 { pt3dadd( -18.093, -33.8666, 98.285, 0.37 ) }
    dend_30 { pt3dadd( -18.6673, -32.5415, 100.136, 0.44 ) }
    dend_30 { pt3dadd( -19.1509, -31.137, 101.926, 0.29 ) }
    dend_30 { pt3dadd( -19.4708, -29.9332, 103.403, 0.29 ) }
    dend_30 { pt3dadd( -19.7959, -28.3933, 105.096, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -20.0234, -27.1291, 106.439, 0.29 ) }
    dend_30 { pt3dadd( -20.3304, -25.2369, 108.38, 0.29 ) }
    dend_30 { pt3dadd( -20.4817, -24.2438, 109.39, 0.29 ) }
    dend_30 { pt3dadd( -20.8137, -22.1372, 111.527, 0.29 ) }
    dend_30 { pt3dadd( -21.0369, -20.7526, 112.906, 0.22 ) }
    dend_30 { pt3dadd( -21.422, -18.5133, 115.159, 0.22 ) }
    dend_30 { pt3dadd( -21.5962, -17.5084, 116.202, 0.22 ) }
    dend_30 { pt3dadd( -21.9278, -15.7792, 117.977, 0.22 ) }
    dend_30 { pt3dadd( -22.3419, -13.8163, 120.105, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 9/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -11.1908, -41.6624, 72.2647, 1.03 ) }
    dend_27 { pt3dadd( -11.3067, -42.5645, 72.2647, 1.03 ) }
    dend_27 { pt3dadd( -11.4745, -43.8279, 72.4112, 0.74 ) }
    dend_27 { pt3dadd( -11.6537, -45.3202, 72.651, 0.74 ) }
    dend_27 { pt3dadd( -11.782, -46.5124, 72.8577, 0.88 ) }
    dend_27 { pt3dadd( -11.929, -48.1212, 73.0828, 0.96 ) }
    dend_27 { pt3dadd( -11.9916, -48.9473, 73.1778, 0.96 ) }
    dend_27 { pt3dadd( -12.1063, -51.1908, 73.4033, 1.03 ) }
    dend_27 { pt3dadd( -12.1562, -52.6925, 73.5337, 0.66 ) }
    dend_27 { pt3dadd( -12.1685, -53.8978, 73.6313, 0.52 ) }
    dend_27 { pt3dadd( -12.1287, -55.4349, 73.7352, 0.66 ) }
    dend_27 { pt3dadd( -12.038, -56.7243, 73.7935, 0.96 ) }
    dend_27 { pt3dadd( -11.9381, -58.092, 73.8125, 1.11 ) }
    dend_27 { pt3dadd( -11.893, -58.6227, 73.7975, 1.11 ) }
    dend_27 { pt3dadd( -11.7514, -59.9914, 73.7899, 0.66 ) }
    dend_27 { pt3dadd( -11.6575, -60.8199, 73.8042, 0.66 ) }
    dend_27 { pt3dadd( -11.5185, -61.9863, 73.8495, 0.66 ) }
    dend_27 { pt3dadd( -11.3557, -63.3867, 73.9616, 0.88 ) }
    dend_27 { pt3dadd( -11.1887, -64.9399, 74.1602, 0.81 ) }
    dend_27 { pt3dadd( -11.0231, -66.7167, 74.5034, 0.74 ) }
    dend_27 { pt3dadd( -10.905, -68.3261, 74.8928, 0.66 ) }
    dend_27 { pt3dadd( -10.8216, -69.8601, 75.3445, 0.52 ) }
    dend_27 { pt3dadd( -10.7364, -71.8949, 76.0168, 0.52 ) }
    dend_27 { pt3dadd( -10.6946, -73.071, 76.465, 0.52 ) }
    dend_27 { pt3dadd( -10.6981, -74.6748, 77.1156, 0.52 ) }
    dend_27 { pt3dadd( -10.726, -75.7351, 77.5485, 0.66 ) }
    dend_27 { pt3dadd( -10.7622, -76.9028, 78.0054, 0.96 ) }
    dend_27 { pt3dadd( -10.8024, -78.5639, 78.5987, 1.03 ) }
    dend_27 { pt3dadd( -10.8152, -80.3198, 79.0887, 0.74 ) }
    dend_27 { pt3dadd( -10.7989, -81.9539, 79.451, 0.44 ) }
    dend_27 { pt3dadd( -10.7684, -82.9958, 79.6327, 0.22 ) }
    dend_27 { pt3dadd( -10.7464, -83.4659, 79.7057, 0.22 ) }
    dend_27 { pt3dadd( -10.6618, -84.6406, 79.8518, 0.52 ) }
    dend_27 { pt3dadd( -10.5084, -86.0649, 79.9279, 0.52 ) }
    dend_27 { pt3dadd( -10.2464, -87.7876, 79.8897, 0.22 ) }
    dend_27 { pt3dadd( -10.0763, -88.6858, 79.8835, 0.22 ) }
    dend_27 { pt3dadd( -9.83483, -89.8901, 79.9301, 0.66 ) }
    dend_27 { pt3dadd( -9.47009, -91.5893, 80.0502, 0.66 ) }
    dend_27 { pt3dadd( -9.07983, -93.241, 80.2069, 0.37 ) }
    dend_27 { pt3dadd( -8.75208, -94.5057, 80.4115, 0.22 ) }
    dend_27 { pt3dadd( -8.2109, -96.5862, 80.8581, 0.29 ) }
    dend_27 { pt3dadd( -7.87877, -97.9499, 81.0625, 0.29 ) }
    dend_27 { pt3dadd( -7.72112, -98.6421, 81.1266, 0.66 ) }
    dend_27 { pt3dadd( -7.47974, -99.7357, 81.159, 0.96 ) }
    dend_27 { pt3dadd( -7.10632, -101.496, 81.1121, 0.96 ) }
    dend_27 { pt3dadd( -6.77597, -103.039, 80.9307, 0.37 ) }
    dend_27 { pt3dadd( -6.12337, -106.167, 80.3329, 0.44 ) }
    dend_27 { pt3dadd( -5.95242, -107.081, 80.1469, 0.44 ) }
    dend_27 { pt3dadd( -5.66187, -108.866, 79.8496, 0.52 ) }
    dend_27 { pt3dadd( -5.4163, -110.579, 79.6263, 0.44 ) }
    dend_27 { pt3dadd( -5.25734, -111.809, 79.5213, 0.44 ) }
    dend_27 { pt3dadd( -5.04091, -113.616, 79.5025, 0.44 ) }
    dend_27 { pt3dadd( -4.82017, -115.634, 79.7063, 0.44 ) }
    dend_27 { pt3dadd( -4.66865, -117.256, 79.924, 0.44 ) }
    dend_27 { pt3dadd( -4.58414, -118.449, 80.1175, 0.44 ) }
    dend_27 { pt3dadd( -4.51151, -119.584, 80.3197, 0.44 ) }
    dend_27 { pt3dadd( -4.47585, -120.808, 80.5565, 0.52 ) }
    dend_27 { pt3dadd( -4.48694, -122.304, 80.8508, 0.52 ) }
    dend_27 { pt3dadd( -4.51804, -123.203, 81.0157, 0.52 ) }
    dend_27 { pt3dadd( -4.6495, -125.216, 81.3185, 0.22 ) }
    dend_27 { pt3dadd( -4.76237, -126.861, 81.5205, 0.22 ) }
    dend_27 { pt3dadd( -4.86442, -128.34, 81.6609, 0.22 ) }
    dend_27 { pt3dadd( -4.9705, -129.88, 81.7639, 0.29 ) }
    dend_27 { pt3dadd( -5.04207, -131.317, 81.7783, 0.29 ) }
    dend_27 { pt3dadd( -5.08233, -132.99, 81.8743, 0.29 ) }
    dend_27 { pt3dadd( -5.07254, -135.107, 82.0802, 0.22 ) }
    dend_27 { pt3dadd( -5.04563, -135.942, 82.186, 0.29 ) }
    dend_27 { pt3dadd( -4.94425, -137.511, 82.4141, 0.37 ) }
    dend_27 { pt3dadd( -4.79065, -139.355, 82.7175, 0.37 ) }
    dend_27 { pt3dadd( -4.52412, -142.422, 83.1776, 0.22 ) }
    dend_27 { pt3dadd( -4.43186, -143.395, 83.3071, 0.22 ) }
    dend_27 { pt3dadd( -4.33276, -144.523, 83.4297, 0.37 ) }
    dend_27 { pt3dadd( -4.22808, -145.796, 83.5245, 0.37 ) }
    dend_27 { pt3dadd( -4.05405, -147.982, 83.6445, 0.29 ) }
    dend_27 { pt3dadd( -3.95264, -149.442, 83.6938, 0.22 ) }
    dend_27 { pt3dadd( -3.87575, -150.615, 83.6698, 0.22 ) }
    dend_27 { pt3dadd( -3.80432, -151.895, 83.7213, 0.29 ) }
    dend_27 { pt3dadd( -3.73876, -153.561, 83.885, 0.29 ) }
    dend_27 { pt3dadd( -3.71501, -154.976, 84.178, 0.29 ) }
    dend_27 { pt3dadd( -3.72016, -156.02, 84.4538, 0.29 ) }
    dend_27 { pt3dadd( -3.74469, -157.958, 85.0856, 0.15 ) }
    dend_27 { pt3dadd( -3.79293, -159.841, 85.7799, 0.15 ) }
    dend_27 { pt3dadd( -3.81765, -160.712, 86.1472, 0.37 ) }
    dend_27 { pt3dadd( -3.87362, -163.021, 87.2717, 0.59 ) }
    // Section: dend_10, id: dend_10, parent: dend_4 (entry count 93/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -10.9053, 25.7184, -6.04773, 2.8 ) }
    dend_10 { pt3dadd( -12.2353, 25.9439, -6.96773, 2.8 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 95/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.9053, 25.7184, -6.04773, 1.77 ) }
    dend_5 { pt3dadd( -10.6935, 27.0911, -7.22189, 1.77 ) }
    dend_5 { pt3dadd( -10.4755, 28.9564, -8.89846, 1.4 ) }
    dend_5 { pt3dadd( -10.3389, 30.4163, -10.2229, 1.4 ) }
    dend_5 { pt3dadd( -10.265, 31.3525, -11.0947, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -10.1942, 32.5768, -12.2721, 1.84 ) }
    dend_5 { pt3dadd( -10.1294, 34.0116, -13.6645, 1.84 ) }
    dend_5 { pt3dadd( -10.1156, 35.3368, -15.013, 1.4 ) }
    dend_5 { pt3dadd( -10.1184, 36.743, -16.4154, 1.84 ) }
    dend_5 { pt3dadd( -10.1352, 38.4028, -17.9662, 1.62 ) }
    dend_5 { pt3dadd( -10.1742, 40.4084, -19.697, 1.77 ) }
    dend_5 { pt3dadd( -10.2311, 41.535, -20.5463, 1.77 ) }
    dend_5 { pt3dadd( -10.3927, 43.3361, -21.7611, 1.62 ) }
    dend_5 { pt3dadd( -10.5415, 44.4748, -22.45, 1.62 ) }
    dend_5 { pt3dadd( -10.8699, 46.341, -23.4874, 1.47 ) }
    dend_5 { pt3dadd( -11.1466, 47.6084, -24.1271, 1.47 ) }
    dend_5 { pt3dadd( -11.7135, 49.9452, -25.2569, 1.4 ) }
    dend_5 { pt3dadd( -12.1578, 51.7271, -26.1376, 1.47 ) }
    dend_5 { pt3dadd( -12.5449, 53.3788, -27.004, 1.55 ) }
    dend_5 { pt3dadd( -12.7268, 54.3436, -27.5725, 1.55 ) }
    dend_5 { pt3dadd( -12.9331, 56.0952, -28.6907, 1.25 ) }
    dend_5 { pt3dadd( -12.9859, 57.818, -29.8244, 1.25 ) }
    dend_5 { pt3dadd( -12.8904, 59.2114, -30.7254, 1.4 ) }
    dend_5 { pt3dadd( -12.6814, 60.6821, -31.6121, 1.25 ) }
    dend_5 { pt3dadd( -12.342, 62.4237, -32.537, 1.25 ) }
    dend_5 { pt3dadd( -12.093, 63.6684, -33.0828, 1.25 ) }
    dend_5 { pt3dadd( -11.8012, 65.1531, -33.6797, 1.47 ) }
    dend_5 { pt3dadd( -11.6755, 66.0132, -33.9825, 1.62 ) }
    dend_5 { pt3dadd( -11.6101, 67.0974, -34.3088, 1.33 ) }
    dend_5 { pt3dadd( -11.6952, 69.4488, -34.8915, 1.11 ) }
    dend_5 { pt3dadd( -11.8879, 70.8743, -35.2457, 1.11 ) }
    dend_5 { pt3dadd( -12.1955, 72.556, -35.6962, 1.25 ) }
    dend_5 { pt3dadd( -12.4132, 73.4968, -35.9766, 1.47 ) }
    dend_5 { pt3dadd( -12.8119, 74.9657, -36.4502, 1.4 ) }
    dend_5 { pt3dadd( -13.2495, 76.3178, -36.9216, 1.25 ) }
    dend_5 { pt3dadd( -14.0378, 78.1531, -37.5874, 1.47 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 31/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.4728, 71.6366, 9.31995, 0.15 ) }
    dend_3 { pt3dadd( 11.9471, 71.8073, 12.6076, 0.15 ) }
    dend_3 { pt3dadd( 11.709, 71.9435, 14.1627, 0.15 ) }
    dend_3 { pt3dadd( 11.5698, 72.0858, 15.1144, 0.29 ) }
    dend_3 { pt3dadd( 11.2554, 72.6374, 17.5934, 0.22 ) }
    dend_3 { pt3dadd( 11.0338, 73.218, 19.6639, 0.22 ) }
    dend_3 { pt3dadd( 10.878, 73.8051, 21.3464, 0.37 ) }
    dend_3 { pt3dadd( 10.8598, 73.9398, 21.6686, 0.81 ) }
    dend_3 { pt3dadd( 10.8371, 74.4826, 22.5601, 0.15 ) }
    dend_3 { pt3dadd( 10.8551, 75.3631, 23.6386, 0.22 ) }
    dend_3 { pt3dadd( 10.8812, 75.7356, 24.0104, 0.59 ) }
    dend_3 { pt3dadd( 10.941, 76.4286, 24.7057, 1.03 ) }
    dend_3 { pt3dadd( 10.9888, 77.6678, 26.0722, 0.15 ) }
    dend_3 { pt3dadd( 10.9726, 78.1088, 26.6739, 0.29 ) }
    dend_3 { pt3dadd( 10.8464, 78.9973, 28.2665, 0.22 ) }
    dend_3 { pt3dadd( 10.6084, 79.866, 30.1674, 0.37 ) }
    dend_3 { pt3dadd( 10.4266, 80.317, 31.3595, 0.37 ) }
    dend_3 { pt3dadd( 10.259, 80.6113, 32.3867, 0.44 ) }
    dend_3 { pt3dadd( 9.92137, 81.0195, 34.239, 0.37 ) }
    dend_3 { pt3dadd( 9.55886, 81.3876, 36.139, 0.37 ) }
    dend_3 { pt3dadd( 9.29531, 81.596, 37.3542, 0.37 ) }
    dend_3 { pt3dadd( 8.93233, 81.8366, 38.9037, 0.37 ) }
    dend_3 { pt3dadd( 8.40765, 82.1933, 41.2978, 0.37 ) }
    dend_3 { pt3dadd( 7.92609, 82.5874, 43.9178, 0.15 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 55/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.4728, 71.6366, 9.31995, 0.96 ) }
    dend_2 { pt3dadd( 13.6665, 73.3976, 8.45481, 0.96 ) }
    dend_2 { pt3dadd( 14.0773, 73.9992, 8.21147, 0.88 ) }
    dend_2 { pt3dadd( 14.8245, 75.0679, 7.84148, 0.74 ) }
    dend_2 { pt3dadd( 15.6692, 76.275, 7.49195, 0.96 ) }
    dend_2 { pt3dadd( 16.4335, 77.3826, 7.16491, 0.81 ) }
    dend_2 { pt3dadd( 17.1083, 78.3817, 6.86347, 0.44 ) }
    dend_2 { pt3dadd( 17.7455, 79.4064, 6.6106, 0.44 ) }
    dend_2 { pt3dadd( 18.1995, 80.2093, 6.38354, 0.66 ) }
    dend_2 { pt3dadd( 18.9008, 81.57, 5.96607, 0.52 ) }
    dend_2 { pt3dadd( 19.4437, 82.7169, 5.58046, 0.74 ) }
    dend_2 { pt3dadd( 19.8804, 83.7021, 5.19751, 1.11 ) }
    dend_2 { pt3dadd( 20.261, 84.6651, 4.81017, 0.66 ) }
    dend_2 { pt3dadd( 20.7905, 86.0973, 4.24515, 0.66 ) }
    dend_2 { pt3dadd( 21.1373, 87.0561, 3.88563, 0.66 ) }
    dend_2 { pt3dadd( 21.5977, 88.28, 3.48724, 0.81 ) }
    dend_2 { pt3dadd( 21.9516, 89.1526, 3.2735, 0.59 ) }
    dend_2 { pt3dadd( 22.5194, 90.4575, 2.97888, 0.52 ) }
    dend_2 { pt3dadd( 22.9406, 91.4094, 2.77702, 0.52 ) }
    dend_2 { pt3dadd( 23.2022, 91.9872, 2.67129, 0.52 ) }
    dend_2 { pt3dadd( 23.7125, 93.1341, 2.50645, 0.66 ) }
    dend_2 { pt3dadd( 24.1591, 94.1153, 2.41543, 0.88 ) }
    dend_2 { pt3dadd( 24.7628, 95.3405, 2.32638, 1.03 ) }
    dend_2 { pt3dadd( 25.4313, 96.5844, 2.26202, 0.52 ) }
    dend_2 { pt3dadd( 26.0063, 97.6285, 2.23514, 0.29 ) }
    dend_2 { pt3dadd( 26.5612, 98.5951, 2.23826, 0.29 ) }
    dend_2 { pt3dadd( 27.2146, 99.7201, 2.34356, 0.52 ) }
    dend_2 { pt3dadd( 27.9001, 100.862, 2.5602, 0.22 ) }
    dend_2 { pt3dadd( 28.2702, 101.47, 2.72819, 0.15 ) }
    dend_2 { pt3dadd( 28.7096, 102.22, 2.95121, 0.66 ) }
    dend_2 { pt3dadd( 29.1961, 103.217, 3.27028, 0.29 ) }
    dend_2 { pt3dadd( 29.6843, 104.534, 3.7564, 0.52 ) }
    dend_2 { pt3dadd( 29.8737, 105.203, 4.0393, 1.03 ) }
    dend_2 { pt3dadd( 30.128, 106.214, 4.50404, 0.37 ) }
    dend_2 { pt3dadd( 30.3658, 107.095, 4.86669, 0.44 ) }
    dend_2 { pt3dadd( 30.8247, 108.625, 5.35457, 0.59 ) }
    dend_2 { pt3dadd( 31.2972, 110.171, 5.67041, 0.88 ) }
    dend_2 { pt3dadd( 31.5798, 111.082, 5.74559, 0.88 ) }
    dend_2 { pt3dadd( 31.8323, 111.897, 5.75712, 0.66 ) }
    dend_2 { pt3dadd( 32.4185, 113.658, 5.58339, 0.29 ) }
    dend_2 { pt3dadd( 32.891, 114.96, 5.29424, 0.66 ) }
    dend_2 { pt3dadd( 33.277, 115.968, 4.95369, 0.44 ) }
    dend_2 { pt3dadd( 33.5206, 116.638, 4.69618, 0.44 ) }
    dend_2 { pt3dadd( 33.87, 117.729, 4.31117, 0.22 ) }
    dend_2 { pt3dadd( 34.1922, 118.863, 3.98469, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_2 { pt3dadd( 34.4247, 119.717, 3.87169, 0.66 ) }
    dend_2 { pt3dadd( 34.6223, 120.402, 3.85659, 0.88 ) }
    dend_2 { pt3dadd( 34.9834, 121.561, 3.92408, 0.52 ) }
    dend_2 { pt3dadd( 35.2846, 122.483, 4.09396, 0.52 ) }
    dend_2 { pt3dadd( 35.6887, 123.71, 4.49294, 0.52 ) }
    dend_2 { pt3dadd( 36.2548, 125.443, 5.24307, 0.52 ) }
    dend_2 { pt3dadd( 36.5539, 126.319, 5.68768, 0.96 ) }
    dend_2 { pt3dadd( 36.9714, 127.435, 6.31831, 0.66 ) }
    dend_2 { pt3dadd( 37.539, 128.76, 7.11488, 0.22 ) }
    dend_2 { pt3dadd( 37.8556, 129.438, 7.52296, 0.22 ) }
    dend_2 { pt3dadd( 38.2193, 130.176, 7.92338, 0.29 ) }
    dend_2 { pt3dadd( 38.7437, 131.181, 8.3433, 0.37 ) }
    dend_2 { pt3dadd( 39.4442, 132.384, 8.69677, 0.52 ) }
    dend_2 { pt3dadd( 40.0087, 133.222, 8.83154, 0.81 ) }
    dend_2 { pt3dadd( 40.5155, 133.901, 8.81456, 0.81 ) }
    dend_2 { pt3dadd( 41.4456, 135.076, 8.61889, 0.22 ) }
    dend_2 { pt3dadd( 42.0919, 135.866, 8.47777, 0.59 ) }
    dend_2 { pt3dadd( 43.0406, 137.012, 8.24813, 0.59 ) }
    dend_2 { pt3dadd( 43.8221, 137.957, 8.06195, 0.22 ) }
    dend_2 { pt3dadd( 44.8103, 139.207, 7.87583, 0.15 ) }
    dend_2 { pt3dadd( 45.5077, 140.183, 7.79088, 0.15 ) }
    dend_2 { pt3dadd( 46.6406, 141.998, 7.92636, 0.59 ) }
    dend_2 { pt3dadd( 47.011, 142.683, 8.08052, 0.59 ) }
    dend_2 { pt3dadd( 47.4455, 143.612, 8.38764, 0.59 ) }
    dend_2 { pt3dadd( 47.8094, 144.475, 8.70484, 0.29 ) }
    dend_2 { pt3dadd( 48.2121, 145.459, 9.09065, 0.22 ) }
    dend_2 { pt3dadd( 48.9829, 147.265, 9.71171, 0.22 ) }
    dend_2 { pt3dadd( 49.2258, 147.802, 9.82897, 0.22 ) }
    dend_2 { pt3dadd( 49.6779, 148.74, 9.99187, 0.52 ) }
    dend_2 { pt3dadd( 50.2182, 149.812, 10.1238, 0.59 ) }
    dend_2 { pt3dadd( 50.5612, 150.476, 10.1651, 0.59 ) }
    dend_2 { pt3dadd( 51.2168, 151.704, 10.2128, 0.29 ) }
    dend_2 { pt3dadd( 51.6575, 152.564, 10.2131, 0.29 ) }
    dend_2 { pt3dadd( 52.1915, 153.729, 10.2487, 0.37 ) }
    dend_2 { pt3dadd( 52.4929, 154.501, 10.2975, 0.29 ) }
    dend_2 { pt3dadd( 52.7765, 155.431, 10.4489, 0.44 ) }
    dend_2 { pt3dadd( 53.1647, 156.979, 10.797, 0.44 ) }
    dend_2 { pt3dadd( 53.4119, 158.08, 11.0768, 0.66 ) }
    dend_2 { pt3dadd( 53.642, 159.105, 11.3549, 0.88 ) }
    dend_2 { pt3dadd( 53.9446, 160.46, 11.7112, 0.66 ) }
    dend_2 { pt3dadd( 54.5999, 162.99, 12.3301, 0.37 ) }
    dend_2 { pt3dadd( 54.9892, 164.24, 12.6468, 0.22 ) }
    dend_2 { pt3dadd( 55.3838, 165.37, 12.8832, 0.52 ) }
    dend_2 { pt3dadd( 55.6874, 166.103, 13.0087, 0.59 ) }
    dend_2 { pt3dadd( 56.1747, 167.112, 13.1016, 0.29 ) }
    dend_2 { pt3dadd( 56.7028, 168.104, 13.1652, 0.22 ) }
    dend_2 { pt3dadd( 57.6776, 169.888, 13.2407, 0.15 ) }
    dend_2 { pt3dadd( 58.4141, 171.297, 13.3865, 0.37 ) }
    dend_2 { pt3dadd( 58.8499, 172.198, 13.5254, 0.37 ) }
    dend_2 { pt3dadd( 59.2893, 173.213, 13.6999, 0.37 ) }
    dend_2 { pt3dadd( 60.1795, 175.382, 14.0834, 0.81 ) }
    dend_2 { pt3dadd( 60.6202, 176.525, 14.2937, 0.96 ) }
    dend_2 { pt3dadd( 60.9574, 177.429, 14.4495, 0.52 ) }
    dend_2 { pt3dadd( 61.3415, 178.511, 14.6968, 0.22 ) }
    dend_2 { pt3dadd( 61.7936, 179.912, 15.0277, 0.29 ) }
    dend_2 { pt3dadd( 62.2356, 181.337, 15.3306, 0.22 ) }
    dend_2 { pt3dadd( 62.5964, 182.505, 15.5142, 0.74 ) }
    dend_2 { pt3dadd( 63.1235, 184.209, 15.7817, 0.29 ) }
    dend_2 { pt3dadd( 63.7013, 186.082, 16.1398, 0.52 ) }
    dend_2 { pt3dadd( 64.0194, 187.087, 16.3651, 0.59 ) }
    dend_2 { pt3dadd( 64.3823, 188.25, 16.6527, 0.29 ) }
    dend_2 { pt3dadd( 64.6191, 189.1, 16.8388, 0.29 ) }
    dend_2 { pt3dadd( 64.8875, 190.143, 17.0787, 0.29 ) }
    dend_2 { pt3dadd( 65.1533, 191.18, 17.3885, 0.66 ) }
    dend_2 { pt3dadd( 65.3619, 191.934, 17.6518, 0.96 ) }
    dend_2 { pt3dadd( 65.6067, 192.786, 18.0649, 0.37 ) }
    dend_2 { pt3dadd( 65.9547, 194.038, 18.7822, 0.29 ) }
    dend_2 { pt3dadd( 66.3084, 195.567, 19.7013, 0.37 ) }
    dend_2 { pt3dadd( 66.5719, 196.961, 20.5518, 0.66 ) }
    dend_2 { pt3dadd( 66.7093, 197.794, 21.0435, 0.44 ) }
    dend_2 { pt3dadd( 66.9556, 199.322, 21.9109, 0.88 ) }
    dend_2 { pt3dadd( 67.1092, 200.265, 22.4137, 1.11 ) }
    dend_2 { pt3dadd( 67.3771, 202.046, 23.2822, 0.22 ) }
    dend_2 { pt3dadd( 67.49, 202.926, 23.5847, 0.22 ) }
    dend_2 { pt3dadd( 67.5835, 203.822, 23.8071, 0.15 ) }
    dend_2 { pt3dadd( 67.6487, 204.856, 23.999, 0.15 ) }
    dend_2 { pt3dadd( 67.6774, 205.612, 24.0959, 0.15 ) }
    dend_2 { pt3dadd( 67.7071, 206.824, 24.2637, 0.37 ) }
    dend_2 { pt3dadd( 67.7501, 208.04, 24.4385, 0.37 ) }
    dend_2 { pt3dadd( 67.7732, 208.789, 24.5574, 0.22 ) }
    dend_2 { pt3dadd( 67.8124, 209.894, 24.7398, 0.44 ) }
    dend_2 { pt3dadd( 67.8398, 210.491, 24.8341, 0.44 ) }
    dend_2 { pt3dadd( 67.9008, 211.342, 24.9545, 0.44 ) }
    dend_2 { pt3dadd( 67.988, 212.09, 25.0201, 0.66 ) }
    dend_2 { pt3dadd( 68.1374, 212.916, 25.1025, 0.37 ) }
    dend_2 { pt3dadd( 68.3708, 213.851, 25.1955, 0.37 ) }
    dend_2 { pt3dadd( 68.702, 214.849, 25.2876, 0.22 ) }
    dend_2 { pt3dadd( 68.8658, 215.283, 25.3196, 0.22 ) }
    dend_2 { pt3dadd( 69.3033, 216.404, 25.3874, 0.22 ) }
    dend_2 { pt3dadd( 69.8834, 217.863, 25.4064, 0.52 ) }
    dend_2 { pt3dadd( 70.2191, 218.714, 25.3852, 0.96 ) }
    dend_2 { pt3dadd( 70.4556, 219.342, 25.349, 0.96 ) }
    dend_2 { pt3dadd( 70.9013, 220.593, 25.2418, 0.22 ) }
    dend_2 { pt3dadd( 71.2209, 221.602, 25.1225, 0.29 ) }
    dend_2 { pt3dadd( 71.5603, 222.867, 24.9013, 0.29 ) }
    dend_2 { pt3dadd( 71.7259, 223.61, 24.7211, 0.81 ) }
    dend_2 { pt3dadd( 71.8585, 224.265, 24.5517, 0.52 ) }
    dend_2 { pt3dadd( 72.0501, 225.33, 24.2469, 0.37 ) }
    dend_2 { pt3dadd( 72.1607, 226.068, 23.9557, 0.37 ) }
    dend_2 { pt3dadd( 72.278, 227.012, 23.5331, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 72.3569, 227.728, 23.2074, 0.74 ) }
    dend_2 { pt3dadd( 72.4563, 228.617, 22.7715, 0.29 ) }
    dend_2 { pt3dadd( 72.5506, 229.494, 22.3341, 0.37 ) }
    dend_2 { pt3dadd( 72.7559, 231.438, 21.3954, 0.37 ) }
    dend_2 { pt3dadd( 72.866, 232.379, 20.9418, 0.52 ) }
    dend_2 { pt3dadd( 72.9775, 233.112, 20.6167, 0.52 ) }
    dend_2 { pt3dadd( 73.1207, 233.687, 20.36, 0.52 ) }
    dend_2 { pt3dadd( 73.4213, 234.509, 20.0746, 0.59 ) }
    dend_2 { pt3dadd( 73.7922, 235.317, 19.8814, 0.22 ) }
    dend_2 { pt3dadd( 74.5015, 236.618, 19.7574, 0.44 ) }
    dend_2 { pt3dadd( 75.171, 237.668, 19.7185, 0.52 ) }
    dend_2 { pt3dadd( 76.3449, 239.295, 19.8281, 0.29 ) }
    dend_2 { pt3dadd( 77.5104, 240.693, 20.1551, 0.44 ) }
    dend_2 { pt3dadd( 78.2466, 241.476, 20.5228, 0.44 ) }
    dend_2 { pt3dadd( 79.2126, 242.44, 21.2774, 0.44 ) }
    dend_2 { pt3dadd( 79.851, 243.084, 21.9311, 0.44 ) }
    dend_2 { pt3dadd( 80.5689, 243.866, 22.8613, 0.44 ) }
    dend_2 { pt3dadd( 81.3525, 244.81, 24.0851, 0.22 ) }
    dend_2 { pt3dadd( 82.0039, 245.672, 25.2064, 0.74 ) }
    dend_2 { pt3dadd( 82.6668, 246.7, 26.4905, 0.74 ) }
    dend_2 { pt3dadd( 83.0395, 247.455, 27.3195, 0.59 ) }
    dend_2 { pt3dadd( 83.4424, 248.554, 28.3878, 0.22 ) }
    dend_2 { pt3dadd( 83.5723, 249.023, 28.7677, 0.15 ) }
    dend_2 { pt3dadd( 83.74, 249.952, 29.3649, 0.29 ) }
    dend_2 { pt3dadd( 83.8693, 251.055, 29.9249, 0.29 ) }
    dend_2 { pt3dadd( 83.9401, 252.162, 30.3722, 0.29 ) }
    dend_2 { pt3dadd( 83.9557, 252.808, 30.62, 0.52 ) }
    dend_2 { pt3dadd( 83.955, 253.532, 30.8556, 0.88 ) }
    dend_2 { pt3dadd( 83.9176, 254.785, 31.2281, 0.52 ) }
    dend_2 { pt3dadd( 83.8714, 255.636, 31.3677, 0.52 ) }
    dend_2 { pt3dadd( 83.795, 256.544, 31.4083, 0.22 ) }
    dend_2 { pt3dadd( 83.6719, 257.548, 31.4184, 0.22 ) }
    dend_2 { pt3dadd( 83.5798, 258.218, 31.4188, 0.52 ) }
    dend_2 { pt3dadd( 83.5015, 258.751, 31.4112, 0.81 ) }
    dend_2 { pt3dadd( 83.1825, 260.875, 31.3369, 0.22 ) }
    dend_2 { pt3dadd( 83.0036, 261.912, 31.2914, 0.22 ) }
    dend_2 { pt3dadd( 82.6503, 263.77, 31.2044, 0.22 ) }
    dend_2 { pt3dadd( 82.5774, 264.14, 31.1681, 0.37 ) }
    dend_2 { pt3dadd( 82.449, 264.837, 31.1004, 0.96 ) }
    dend_2 { pt3dadd( 82.4046, 265.114, 31.0786, 0.96 ) }
    dend_2 { pt3dadd( 82.2525, 266.268, 31.0301, 0.22 ) }
    dend_2 { pt3dadd( 82.2238, 266.582, 31.0095, 0.22 ) }
    dend_2 { pt3dadd( 82.1631, 267.753, 30.8982, 0.37 ) }
    dend_2 { pt3dadd( 82.153, 268.501, 30.8889, 0.88 ) }
    dend_2 { pt3dadd( 82.1965, 270.022, 30.9634, 0.22 ) }
    dend_2 { pt3dadd( 82.2496, 270.706, 31.0298, 0.37 ) }
    dend_2 { pt3dadd( 82.4205, 272.134, 31.2542, 0.66 ) }
    dend_2 { pt3dadd( 82.5663, 273.24, 31.525, 0.22 ) }
    dend_2 { pt3dadd( 82.741, 274.49, 31.9365, 0.66 ) }
    dend_2 { pt3dadd( 82.8339, 275.146, 32.193, 0.66 ) }
    dend_2 { pt3dadd( 82.9788, 276.134, 32.6829, 0.44 ) }
    dend_2 { pt3dadd( 83.0412, 276.636, 32.9913, 0.59 ) }
    dend_2 { pt3dadd( 83.1627, 277.752, 33.8007, 0.15 ) }
    dend_2 { pt3dadd( 83.2016, 278.202, 34.2068, 0.37 ) }
    dend_2 { pt3dadd( 83.2279, 278.593, 34.6013, 0.37 ) }
    dend_2 { pt3dadd( 83.2622, 279.435, 35.5312, 0.15 ) }
    dend_2 { pt3dadd( 83.2786, 280.064, 36.2556, 0.15 ) }
    dend_2 { pt3dadd( 83.3047, 280.415, 36.6099, 0.29 ) }
    dend_2 { pt3dadd( 83.4062, 281.151, 37.2713, 0.29 ) }
    dend_2 { pt3dadd( 83.5808, 282.185, 38.0651, 0.22 ) }
    dend_2 { pt3dadd( 83.7352, 283.085, 38.6073, 0.66 ) }
    dend_2 { pt3dadd( 83.7671, 283.299, 38.7084, 0.66 ) }
    dend_2 { pt3dadd( 83.8827, 284.635, 39.3391, 0.15 ) }
    dend_2 { pt3dadd( 83.897, 285.668, 39.8335, 0.15 ) }
    dend_2 { pt3dadd( 83.8321, 286.468, 40.2571, 0.37 ) }
    dend_2 { pt3dadd( 83.7588, 286.997, 40.6102, 0.37 ) }
    dend_2 { pt3dadd( 83.6064, 287.871, 41.2027, 0.22 ) }
    dend_2 { pt3dadd( 83.3221, 289.254, 42.1158, 0.22 ) }
    dend_2 { pt3dadd( 83.1761, 289.953, 42.5543, 0.37 ) }
    dend_2 { pt3dadd( 82.8127, 291.838, 43.5751, 0.15 ) }
    dend_2 { pt3dadd( 82.5039, 293.593, 44.3451, 0.15 ) }
    dend_2 { pt3dadd( 82.192, 295.764, 45.0829, 0.15 ) }
    dend_2 { pt3dadd( 82.0653, 296.969, 45.3717, 0.15 ) }
    dend_2 { pt3dadd( 81.9793, 298.73, 45.6313, 0.15 ) }
    dend_2 { pt3dadd( 82.0552, 300.166, 45.7475, 0.15 ) }
    dend_2 { pt3dadd( 82.457, 302.29, 45.7276, 0.15 ) }
    dend_2 { pt3dadd( 82.8215, 303.342, 45.6243, 0.15 ) }
    dend_2 { pt3dadd( 83.2699, 304.159, 45.5086, 0.15 ) }
    dend_2 { pt3dadd( 83.9235, 305.01, 45.3559, 0.37 ) }
    dend_2 { pt3dadd( 85.6101, 306.641, 45.0002, 0.15 ) }
    dend_2 { pt3dadd( 86.6222, 307.403, 44.8264, 0.15 ) }
    dend_2 { pt3dadd( 87.8599, 308.165, 44.7077, 0.15 ) }
    dend_2 { pt3dadd( 88.3202, 308.428, 44.6772, 0.59 ) }
    dend_2 { pt3dadd( 89.2485, 308.938, 44.6848, 0.29 ) }
    dend_2 { pt3dadd( 89.9702, 309.343, 44.7706, 0.15 ) }
    dend_2 { pt3dadd( 90.3512, 309.594, 44.8762, 0.29 ) }
    dend_2 { pt3dadd( 91.2505, 310.303, 45.2454, 0.88 ) }
    dend_2 { pt3dadd( 91.7975, 310.841, 45.6121, 0.22 ) }
    dend_2 { pt3dadd( 92.5227, 311.798, 46.3583, 0.22 ) }
    dend_2 { pt3dadd( 92.797, 312.297, 46.8277, 0.22 ) }
    dend_2 { pt3dadd( 93.2097, 313.224, 47.8212, 0.29 ) }
    dend_2 { pt3dadd( 93.4432, 313.864, 48.5698, 0.15 ) }
    dend_2 { pt3dadd( 93.8241, 315.156, 50.1632, 0.66 ) }
    dend_2 { pt3dadd( 94.1103, 316.388, 51.7339, 0.37 ) }
    dend_2 { pt3dadd( 94.3356, 317.755, 53.5445, 0.15 ) }
    dend_2 { pt3dadd( 94.4249, 318.669, 54.7242, 0.15 ) }
    dend_2 { pt3dadd( 94.4367, 319.469, 55.6946, 0.15 ) }
    dend_2 { pt3dadd( 94.4156, 319.832, 56.0597, 0.15 ) }
    dend_2 { pt3dadd( 94.3301, 320.58, 56.5891, 0.52 ) }
    dend_2 { pt3dadd( 94.1754, 321.703, 57.0478, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 93.8725, 323.749, 57.4285, 0.15 ) }
    dend_2 { pt3dadd( 93.6262, 325.475, 57.5557, 0.15 ) }
    dend_2 { pt3dadd( 93.4663, 327.002, 57.5391, 0.15 ) }
    dend_2 { pt3dadd( 93.312, 329.207, 57.4044, 0.15 ) }
    dend_2 { pt3dadd( 93.2209, 332.003, 57.1134, 0.15 ) }
    dend_2 { pt3dadd( 93.2505, 333.951, 56.8292, 0.15 ) }
    dend_2 { pt3dadd( 93.3151, 334.919, 56.66, 0.22 ) }
    dend_2 { pt3dadd( 93.5253, 336.836, 56.282, 0.07 ) }
    dend_2 { pt3dadd( 93.6108, 337.461, 56.15, 0.07 ) }
    dend_2 { pt3dadd( 93.8033, 338.71, 55.8569, 0.22 ) }
    dend_2 { pt3dadd( 94.1033, 340.554, 55.4707, 0.07 ) }
    dend_2 { pt3dadd( 94.217, 341.212, 55.2959, 0.07 ) }
    dend_2 { pt3dadd( 94.3033, 341.707, 55.137, 0.22 ) }
    dend_2 { pt3dadd( 94.4348, 342.383, 54.8838, 0.59 ) }
    dend_2 { pt3dadd( 94.8602, 344.079, 54.1106, 0.07 ) }
    dend_2 { pt3dadd( 95.223, 345.193, 53.5257, 0.07 ) }
    dend_2 { pt3dadd( 95.4005, 345.643, 53.2724, 0.29 ) }
    dend_2 { pt3dadd( 95.6367, 346.181, 52.9589, 0.29 ) }
    dend_2 { pt3dadd( 96.1388, 347.319, 52.313, 0.07 ) }
    dend_2 { pt3dadd( 96.6805, 348.633, 51.6553, 0.07 ) }
    dend_2 { pt3dadd( 96.8927, 349.246, 51.4065, 0.07 ) }
    dend_2 { pt3dadd( 96.9927, 349.677, 51.2367, 0.29 ) }
    dend_2 { pt3dadd( 97.0601, 350.252, 51.0586, 0.29 ) }
    dend_2 { pt3dadd( 97.1504, 351.854, 50.6303, 0.15 ) }
    dend_2 { pt3dadd( 97.0949, 353.301, 50.3033, 0.15 ) }
    dend_2 { pt3dadd( 96.977, 354.306, 50.1305, 0.29 ) }
    dend_2 { pt3dadd( 96.6949, 356.018, 49.8382, 0.22 ) }
    dend_2 { pt3dadd( 96.3445, 357.818, 49.5533, 0.74 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 44.7751, -38.007, 39.9395, 0.88 ) }
    dend_39 { pt3dadd( 45.1135, -36.6487, 39.8854, 0.88 ) }
    dend_39 { pt3dadd( 45.2982, -35.7114, 39.918, 0.74 ) }
    dend_39 { pt3dadd( 45.5152, -34.3685, 40.0029, 0.81 ) }
    dend_39 { pt3dadd( 45.7207, -32.873, 40.1154, 0.88 ) }
    dend_39 { pt3dadd( 45.8893, -31.4888, 40.2258, 1.4 ) }
    dend_39 { pt3dadd( 46.0225, -30.1496, 40.3804, 0.96 ) }
    dend_39 { pt3dadd( 46.071, -28.4788, 40.6431, 0.88 ) }
    dend_39 { pt3dadd( 46.0537, -27.5099, 40.8236, 0.81 ) }
    dend_39 { pt3dadd( 46.0109, -26.9053, 40.893, 0.81 ) }
    dend_39 { pt3dadd( 45.8842, -26.0091, 40.9072, 0.81 ) }
    dend_39 { pt3dadd( 45.5485, -24.367, 40.7646, 1.18 ) }
    dend_39 { pt3dadd( 45.2279, -23.1084, 40.5747, 1.18 ) }
    dend_39 { pt3dadd( 44.8372, -21.6724, 40.2917, 1.18 ) }
    dend_39 { pt3dadd( 44.0024, -18.4253, 39.7437, 0.96 ) }
    dend_39 { pt3dadd( 43.4903, -16.1379, 39.4219, 0.59 ) }
    dend_39 { pt3dadd( 43.2169, -14.5863, 39.294, 0.59 ) }
    dend_39 { pt3dadd( 43.0607, -13.2597, 39.2911, 0.74 ) }
    dend_39 { pt3dadd( 42.9831, -11.8897, 39.4488, 1.11 ) }
    dend_39 { pt3dadd( 42.964, -9.72447, 40.0322, 1.4 ) }
    dend_39 { pt3dadd( 43.0439, -8.01042, 40.7156, 1.4 ) }
    dend_39 { pt3dadd( 43.1925, -6.03827, 41.5787, 1.18 ) }
    dend_39 { pt3dadd( 43.2975, -4.57935, 42.1861, 1.47 ) }
    dend_39 { pt3dadd( 43.3435, -3.49151, 42.5412, 1.11 ) }
    dend_39 { pt3dadd( 43.308, -1.50984, 42.8773, 0.74 ) }
    dend_39 { pt3dadd( 43.2137, -0.279626, 42.844, 1.03 ) }
    dend_39 { pt3dadd( 43.0796, 0.812478, 42.6328, 1.11 ) }
    dend_39 { pt3dadd( 42.8044, 2.4363, 42.0372, 0.88 ) }
    dend_39 { pt3dadd( 42.4658, 4.00834, 41.2475, 0.88 ) }
    dend_39 { pt3dadd( 42.0903, 5.38423, 40.4364, 0.74 ) }
    dend_39 { pt3dadd( 41.8016, 6.28679, 39.8214, 0.66 ) }
    dend_39 { pt3dadd( 41.419, 7.36789, 39.0815, 0.59 ) }
    dend_39 { pt3dadd( 41.0011, 8.59488, 38.262, 0.81 ) }
    dend_39 { pt3dadd( 40.5815, 9.8702, 37.526, 0.88 ) }
    dend_39 { pt3dadd( 40.0811, 11.5579, 36.7199, 0.81 ) }
    dend_39 { pt3dadd( 39.7084, 12.9863, 36.136, 0.81 ) }
    dend_39 { pt3dadd( 39.4092, 14.5061, 35.5966, 0.81 ) }
    dend_39 { pt3dadd( 39.2169, 16.1937, 35.0926, 0.66 ) }
    dend_39 { pt3dadd( 39.1606, 17.693, 34.7345, 0.88 ) }
    dend_39 { pt3dadd( 39.1876, 19.0234, 34.4456, 1.18 ) }
    dend_39 { pt3dadd( 39.2384, 19.8946, 34.2668, 1.18 ) }
    dend_39 { pt3dadd( 39.3835, 21.6552, 33.9283, 0.81 ) }
    dend_39 { pt3dadd( 39.5917, 23.5426, 33.5659, 0.96 ) }
    dend_39 { pt3dadd( 39.764, 25.0868, 33.2347, 0.96 ) }
    dend_39 { pt3dadd( 39.9279, 26.4266, 32.8787, 1.11 ) }
    dend_39 { pt3dadd( 40.0735, 27.5039, 32.58, 1.11 ) }
    dend_39 { pt3dadd( 40.2405, 28.6488, 32.2718, 0.88 ) }
    dend_39 { pt3dadd( 40.476, 30.1464, 31.9492, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 76/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 44.7751, -38.007, 39.9395, 0.88 ) }
    dend_36 { pt3dadd( 46.2187, -40.34, 42.8538, 0.88 ) }
    dend_36 { pt3dadd( 46.7528, -41.1058, 43.7107, 0.66 ) }
    dend_36 { pt3dadd( 47.5835, -42.3509, 45.0772, 0.74 ) }
    dend_36 { pt3dadd( 47.876, -42.8673, 45.6233, 1.03 ) }
    dend_36 { pt3dadd( 48.1262, -43.4102, 46.1381, 0.74 ) }
    dend_36 { pt3dadd( 48.4434, -44.2566, 46.8845, 0.96 ) }
    dend_36 { pt3dadd( 48.8758, -45.8727, 48.013, 1.03 ) }
    dend_36 { pt3dadd( 49.1992, -47.7042, 49.2865, 0.74 ) }
    dend_36 { pt3dadd( 49.4069, -49.3943, 50.4388, 1.03 ) }
    dend_36 { pt3dadd( 49.5262, -50.8121, 51.4451, 0.88 ) }
    dend_36 { pt3dadd( 49.6062, -52.2471, 52.5225, 0.81 ) }
    dend_36 { pt3dadd( 49.6249, -53.3505, 53.3554, 0.66 ) }
    dend_36 { pt3dadd( 49.6174, -54.7565, 54.3763, 0.66 ) }
    dend_36 { pt3dadd( 49.644, -56.4202, 55.5054, 0.88 ) }
    dend_36 { pt3dadd( 49.7457, -58.2106, 56.7253, 1.11 ) }
    dend_36 { pt3dadd( 49.9389, -60.0944, 58.0423, 0.96 ) }
    dend_36 { pt3dadd( 50.202, -61.9101, 59.2637, 0.96 ) }
    dend_36 { pt3dadd( 50.4366, -63.1407, 60.0419, 0.96 ) }
    dend_36 { pt3dadd( 50.8731, -65.0436, 61.178, 1.03 ) }
    dend_36 { pt3dadd( 51.3252, -66.9023, 62.2208, 0.81 ) }
    dend_36 { pt3dadd( 51.6383, -68.025, 62.8054, 0.81 ) }
    dend_36 { pt3dadd( 51.9578, -68.9864, 63.2638, 0.66 ) }
    dend_36 { pt3dadd( 52.4744, -70.1652, 63.8559, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_36 { pt3dadd( 53.2949, -71.7363, 64.7247, 0.81 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 1/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 12.943, -58.3738, 13.0081, 0.29 ) }
    dend_34 { pt3dadd( 12.7062, -59.4245, 13.441, 0.29 ) }
    dend_34 { pt3dadd( 12.4821, -60.6458, 13.9121, 0.29 ) }
    dend_34 { pt3dadd( 12.3657, -61.4523, 14.2401, 0.81 ) }
    dend_34 { pt3dadd( 12.2203, -62.7607, 14.7704, 0.59 ) }
    dend_34 { pt3dadd( 12.1115, -64.12, 15.3658, 0.44 ) }
    dend_34 { pt3dadd( 12.0625, -65.2446, 15.9081, 0.22 ) }
    dend_34 { pt3dadd( 12.0854, -66.0752, 16.3362, 0.22 ) }
    dend_34 { pt3dadd( 12.1903, -67.1238, 16.9223, 0.22 ) }
    dend_34 { pt3dadd( 12.2686, -67.7702, 17.3361, 0.74 ) }
    dend_34 { pt3dadd( 12.4123, -68.951, 18.1598, 0.74 ) }
    dend_34 { pt3dadd( 12.5393, -70.0256, 18.9462, 0.96 ) }
    dend_34 { pt3dadd( 12.5957, -70.642, 19.3773, 1.11 ) }
    dend_34 { pt3dadd( 12.6804, -72.0412, 20.2948, 0.37 ) }
    dend_34 { pt3dadd( 12.7456, -73.2683, 20.9827, 0.22 ) }
    dend_34 { pt3dadd( 12.7914, -74.0239, 21.3272, 0.66 ) }
    dend_34 { pt3dadd( 12.8479, -74.8952, 21.5967, 0.66 ) }
    dend_34 { pt3dadd( 12.9107, -75.7089, 21.7608, 0.66 ) }
    dend_34 { pt3dadd( 12.989, -76.5395, 21.8861, 0.29 ) }
    dend_34 { pt3dadd( 13.1288, -77.5814, 21.9852, 0.22 ) }
    dend_34 { pt3dadd( 13.3575, -78.8171, 22.1125, 0.66 ) }
    dend_34 { pt3dadd( 13.6097, -80.0509, 22.336, 0.88 ) }
    dend_34 { pt3dadd( 13.7874, -80.9451, 22.5649, 0.37 ) }
    dend_34 { pt3dadd( 14.01, -82.1974, 22.9544, 0.22 ) }
    dend_34 { pt3dadd( 14.1192, -82.9564, 23.2445, 0.59 ) }
    dend_34 { pt3dadd( 14.2226, -83.9071, 23.6588, 0.74 ) }
    dend_34 { pt3dadd( 14.3783, -85.5925, 24.4583, 0.15 ) }
    dend_34 { pt3dadd( 14.4309, -86.2319, 24.7666, 0.15 ) }
    dend_34 { pt3dadd( 14.4877, -87.073, 25.1381, 0.37 ) }
    dend_34 { pt3dadd( 14.5847, -88.6365, 25.7171, 0.22 ) }
    dend_34 { pt3dadd( 14.6232, -89.1342, 25.8683, 0.66 ) }
    dend_34 { pt3dadd( 14.686, -89.7356, 26.0179, 1.11 ) }
    dend_34 { pt3dadd( 14.8087, -90.6216, 26.1909, 0.37 ) }
    dend_34 { pt3dadd( 15.0318, -91.8687, 26.4253, 0.15 ) }
    dend_34 { pt3dadd( 15.1996, -92.6726, 26.6052, 0.44 ) }
    dend_34 { pt3dadd( 15.5231, -94.1082, 26.9896, 0.15 ) }
    dend_34 { pt3dadd( 15.7893, -95.2887, 27.3644, 0.15 ) }
    dend_34 { pt3dadd( 15.9389, -95.9866, 27.6277, 0.81 ) }
    dend_34 { pt3dadd( 16.054, -96.5527, 27.8565, 1.18 ) }
    dend_34 { pt3dadd( 16.372, -98.4142, 28.6716, 0.15 ) }
    dend_34 { pt3dadd( 16.5136, -99.4645, 29.1375, 0.15 ) }
    dend_34 { pt3dadd( 16.5561, -100.012, 29.385, 0.81 ) }
    dend_34 { pt3dadd( 16.5831, -100.888, 29.8387, 0.81 ) }
    dend_34 { pt3dadd( 16.5832, -101.749, 30.3329, 0.22 ) }
    dend_34 { pt3dadd( 16.555, -102.975, 31.1114, 0.15 ) }
    dend_34 { pt3dadd( 16.5388, -103.397, 31.3852, 0.22 ) }
    dend_34 { pt3dadd( 16.4991, -104.476, 32.1157, 0.15 ) }
    dend_34 { pt3dadd( 16.4512, -106.056, 33.3224, 0.15 ) }
    dend_34 { pt3dadd( 16.4395, -106.565, 33.7327, 0.59 ) }
    dend_34 { pt3dadd( 16.411, -107.849, 34.8052, 0.15 ) }
    dend_34 { pt3dadd( 16.4022, -108.44, 35.276, 0.15 ) }
    dend_34 { pt3dadd( 16.3998, -109.208, 35.8354, 0.81 ) }
    dend_34 { pt3dadd( 16.4467, -110.938, 36.8801, 0.15 ) }
    dend_34 { pt3dadd( 16.4886, -111.767, 37.2782, 0.15 ) }
    dend_34 { pt3dadd( 16.5232, -112.328, 37.5086, 0.52 ) }
    dend_34 { pt3dadd( 16.5827, -113.116, 37.7568, 0.66 ) }
    dend_34 { pt3dadd( 16.6473, -114.083, 37.9933, 0.29 ) }
    dend_34 { pt3dadd( 16.7011, -115.248, 38.1616, 0.15 ) }
    dend_34 { pt3dadd( 16.71, -115.82, 38.1895, 0.15 ) }
    dend_34 { pt3dadd( 16.7003, -116.43, 38.2131, 0.59 ) }
    dend_34 { pt3dadd( 16.6643, -117.191, 38.202, 0.88 ) }
    dend_34 { pt3dadd( 16.5833, -118.13, 38.1447, 0.29 ) }
    dend_34 { pt3dadd( 16.477, -118.936, 38.0596, 0.22 ) }
    dend_34 { pt3dadd( 16.3092, -120.062, 37.906, 0.07 ) }
    dend_34 { pt3dadd( 16.2195, -120.802, 37.7619, 0.07 ) }
    dend_34 { pt3dadd( 16.1007, -122.081, 37.4695, 0.07 ) }
    dend_34 { pt3dadd( 16.0876, -122.377, 37.3964, 0.29 ) }
    dend_34 { pt3dadd( 16.1027, -123.209, 37.2065, 0.66 ) }
    dend_34 { pt3dadd( 16.1655, -124.264, 36.9946, 0.15 ) }
    dend_34 { pt3dadd( 16.2539, -125.472, 36.8045, 0.15 ) }
    dend_34 { pt3dadd( 16.3155, -126.305, 36.6808, 0.29 ) }
    dend_34 { pt3dadd( 16.3764, -127.305, 36.5637, 0.15 ) }
    dend_34 { pt3dadd( 16.4151, -128.178, 36.455, 0.37 ) }
    dend_34 { pt3dadd( 16.4295, -128.775, 36.3592, 0.37 ) }
    dend_34 { pt3dadd( 16.4211, -129.905, 36.1539, 0.22 ) }
    dend_34 { pt3dadd( 16.389, -130.861, 35.982, 0.44 ) }
    dend_34 { pt3dadd( 16.3477, -131.825, 35.7281, 0.96 ) }
    dend_34 { pt3dadd( 16.32, -132.472, 35.5039, 0.22 ) }
    dend_34 { pt3dadd( 16.2799, -133.795, 34.9655, 0.15 ) }
    dend_34 { pt3dadd( 16.2776, -134.069, 34.8511, 0.15 ) }
    dend_34 { pt3dadd( 16.3053, -135.165, 34.3487, 0.29 ) }
    dend_34 { pt3dadd( 16.3655, -136.413, 33.7277, 0.15 ) }
    dend_34 { pt3dadd( 16.4164, -137.07, 33.3646, 0.15 ) }
    dend_34 { pt3dadd( 16.4387, -137.343, 33.2109, 0.37 ) }
    dend_34 { pt3dadd( 16.4953, -138.069, 32.8221, 0.88 ) }
    dend_34 { pt3dadd( 16.6278, -139.606, 32.0547, 0.15 ) }
    dend_34 { pt3dadd( 16.6922, -140.403, 31.7, 0.15 ) }
    dend_34 { pt3dadd( 16.7409, -141.197, 31.4246, 0.15 ) }
    dend_34 { pt3dadd( 16.7589, -141.932, 31.2202, 0.66 ) }
    dend_34 { pt3dadd( 16.7534, -142.758, 31.0525, 0.22 ) }
    dend_34 { pt3dadd( 16.7233, -143.555, 30.9489, 0.22 ) }
    dend_34 { pt3dadd( 16.6708, -144.275, 30.918, 0.15 ) }
    dend_34 { pt3dadd( 16.624, -144.801, 30.9113, 0.15 ) }
    dend_34 { pt3dadd( 16.5219, -145.791, 30.8958, 0.66 ) }
    dend_34 { pt3dadd( 16.3269, -147.374, 30.8679, 0.15 ) }
    dend_34 { pt3dadd( 16.2498, -147.93, 30.8578, 0.15 ) }
    dend_34 { pt3dadd( 16.1812, -148.401, 30.8495, 0.22 ) }
    dend_34 { pt3dadd( 16.0932, -149.076, 30.8382, 0.15 ) }
    dend_34 { pt3dadd( 16.01, -149.761, 30.8281, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_34 { pt3dadd( 15.8795, -150.825, 30.8157, 0.44 ) }
    dend_34 { pt3dadd( 15.7419, -151.954, 30.8078, 0.15 ) }
    dend_34 { pt3dadd( 15.6684, -152.63, 30.7814, 0.15 ) }
    dend_34 { pt3dadd( 15.6078, -153.227, 30.7082, 0.15 ) }
    dend_34 { pt3dadd( 15.5383, -153.901, 30.5789, 0.15 ) }
    dend_34 { pt3dadd( 15.4466, -154.681, 30.391, 0.44 ) }
    dend_34 { pt3dadd( 15.316, -155.623, 30.1368, 0.44 ) }
    dend_34 { pt3dadd( 15.1094, -156.874, 29.8435, 0.15 ) }
    dend_34 { pt3dadd( 14.8375, -158.481, 29.535, 0.15 ) }
    dend_34 { pt3dadd( 14.7103, -159.244, 29.4146, 0.44 ) }
    dend_34 { pt3dadd( 14.5373, -160.34, 29.2818, 0.22 ) }
    dend_34 { pt3dadd( 14.3821, -161.528, 29.2445, 0.22 ) }
    dend_34 { pt3dadd( 14.1751, -163.298, 29.3402, 0.07 ) }
    dend_34 { pt3dadd( 14.0514, -164.49, 29.5168, 0.07 ) }
    dend_34 { pt3dadd( 14.0118, -164.929, 29.6096, 0.29 ) }
    dend_34 { pt3dadd( 13.9469, -165.735, 29.7932, 0.96 ) }
    dend_34 { pt3dadd( 13.7948, -167.901, 30.3621, 0.15 ) }
    dend_34 { pt3dadd( 13.7315, -168.711, 30.5907, 0.15 ) }
    dend_34 { pt3dadd( 13.6511, -169.435, 30.752, 0.15 ) }
    dend_34 { pt3dadd( 13.5083, -170.426, 30.9776, 0.37 ) }
    dend_34 { pt3dadd( 13.4147, -170.982, 31.1063, 0.37 ) }
    dend_34 { pt3dadd( 13.1527, -172.274, 31.3893, 0.15 ) }
    dend_34 { pt3dadd( 12.9676, -173.006, 31.5482, 0.74 ) }
    dend_34 { pt3dadd( 12.4856, -174.653, 32.086, 0.15 ) }
    dend_34 { pt3dadd( 12.097, -175.749, 32.546, 0.15 ) }
    dend_34 { pt3dadd( 11.8369, -176.341, 32.8925, 0.59 ) }
    dend_34 { pt3dadd( 11.5373, -176.92, 33.3248, 0.22 ) }
    dend_34 { pt3dadd( 10.9675, -177.878, 34.1497, 0.15 ) }
    dend_34 { pt3dadd( 10.2422, -178.954, 35.2412, 0.15 ) }
    dend_34 { pt3dadd( 9.86285, -179.445, 35.819, 0.52 ) }
    dend_34 { pt3dadd( 9.03049, -180.362, 36.9652, 0.15 ) }
    dend_34 { pt3dadd( 8.45861, -180.902, 37.7707, 0.15 ) }
    dend_34 { pt3dadd( 8.21809, -181.11, 38.1199, 0.44 ) }
    dend_34 { pt3dadd( 7.76718, -181.472, 38.7627, 0.81 ) }
    dend_34 { pt3dadd( 7.35346, -181.814, 39.329, 0.81 ) }
    dend_34 { pt3dadd( 6.38859, -182.682, 40.7099, 0.15 ) }
    dend_34 { pt3dadd( 5.4256, -183.624, 42.0787, 0.15 ) }
    dend_34 { pt3dadd( 5.13876, -183.954, 42.5033, 0.15 ) }
    dend_34 { pt3dadd( 4.91538, -184.263, 42.8807, 0.66 ) }
    dend_34 { pt3dadd( 4.47485, -185.043, 43.7036, 0.22 ) }
    dend_34 { pt3dadd( 4.00724, -186.118, 44.8035, 0.15 ) }
    dend_34 { pt3dadd( 3.90078, -186.427, 45.1409, 0.22 ) }
    dend_34 { pt3dadd( 3.62129, -187.301, 46.1607, 0.15 ) }
    dend_34 { pt3dadd( 3.38641, -188.018, 47.0597, 0.44 ) }
    dend_34 { pt3dadd( 3.20547, -188.57, 47.7788, 0.88 ) }
    dend_34 { pt3dadd( 2.5619, -190.262, 50.0489, 0.15 ) }
    dend_34 { pt3dadd( 1.93871, -191.594, 51.826, 0.15 ) }
    dend_34 { pt3dadd( 1.55162, -192.311, 52.7777, 0.15 ) }
    dend_34 { pt3dadd( 1.21926, -192.838, 53.4605, 0.37 ) }
    dend_34 { pt3dadd( 0.902753, -193.284, 54.0065, 0.37 ) }
    dend_34 { pt3dadd( 0.0774399, -194.318, 55.2594, 0.07 ) }
    dend_34 { pt3dadd( -0.563002, -195.061, 56.0059, 0.07 ) }
    dend_34 { pt3dadd( -0.91214, -195.461, 56.3562, 0.15 ) }
    dend_34 { pt3dadd( -1.70451, -196.35, 57.1242, 0.07 ) }
    dend_34 { pt3dadd( -2.15264, -196.846, 57.5604, 0.29 ) }
    dend_34 { pt3dadd( -2.76592, -197.523, 58.1632, 0.29 ) }
    dend_34 { pt3dadd( -3.4924, -198.405, 58.911, 0.15 ) }
    dend_34 { pt3dadd( -3.83626, -198.854, 59.2845, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 58/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 12.943, -58.3738, 13.0081, 0.22 ) }
    dend_33 { pt3dadd( 14.3705, -59.2785, 8.33856, 0.22 ) }
    dend_33 { pt3dadd( 14.7812, -59.5651, 7.16446, 0.22 ) }
    dend_33 { pt3dadd( 15.1346, -59.8497, 6.16202, 0.52 ) }
    dend_33 { pt3dadd( 15.4206, -60.1136, 5.31962, 0.88 ) }
    dend_33 { pt3dadd( 15.8589, -60.5937, 3.93215, 0.96 ) }
    dend_33 { pt3dadd( 16.2649, -61.1447, 2.47424, 0.74 ) }
    dend_33 { pt3dadd( 16.6121, -61.9443, 0.854361, 0.29 ) }
    dend_33 { pt3dadd( 16.7634, -62.5637, -0.250534, 0.37 ) }
    dend_33 { pt3dadd( 16.8229, -63.0679, -1.04035, 0.37 ) }
    dend_33 { pt3dadd( 16.8398, -63.5414, -1.73527, 0.74 ) }
    dend_33 { pt3dadd( 16.8447, -64.1728, -2.65178, 0.44 ) }
    dend_33 { pt3dadd( 16.8944, -65.2667, -4.35498, 0.44 ) }
    dend_33 { pt3dadd( 16.9754, -65.6326, -5.04519, 0.44 ) }
    dend_33 { pt3dadd( 17.1938, -66.0701, -6.00265, 0.22 ) }
    dend_33 { pt3dadd( 17.5931, -66.6364, -7.3136, 0.22 ) }
    dend_33 { pt3dadd( 17.9542, -67.0933, -8.39042, 0.44 ) }
    dend_33 { pt3dadd( 18.2829, -67.5488, -9.40407, 0.59 ) }
    dend_33 { pt3dadd( 18.7492, -68.4695, -11.2859, 0.29 ) }
    dend_33 { pt3dadd( 18.8723, -68.9562, -12.2363, 0.22 ) }
    dend_33 { pt3dadd( 18.8551, -69.4393, -13.0737, 0.29 ) }
    dend_33 { pt3dadd( 18.7022, -70.0818, -14.0234, 0.44 ) }
    dend_33 { pt3dadd( 18.3723, -70.9425, -15.175, 0.74 ) }
    dend_33 { pt3dadd( 17.8688, -71.9381, -16.4059, 0.96 ) }
    dend_33 { pt3dadd( 17.6118, -72.3725, -16.9176, 0.96 ) }
    dend_33 { pt3dadd( 17.0775, -73.2455, -17.9644, 0.37 ) }
    dend_33 { pt3dadd( 16.5647, -74.1364, -19.1034, 0.44 ) }
    dend_33 { pt3dadd( 16.2772, -74.7605, -19.962, 0.37 ) }
    dend_33 { pt3dadd( 16.1461, -75.2236, -20.6313, 0.22 ) }
    dend_33 { pt3dadd( 16.1331, -75.6997, -21.3761, 0.22 ) }
    dend_33 { pt3dadd( 16.2205, -75.9731, -21.9114, 0.29 ) }
    dend_33 { pt3dadd( 16.5007, -76.3097, -22.8335, 0.44 ) }
    dend_33 { pt3dadd( 16.8534, -76.5739, -23.8227, 0.44 ) }
    dend_33 { pt3dadd( 17.1296, -76.7516, -24.5802, 0.66 ) }
    dend_33 { pt3dadd( 17.6092, -77.0703, -25.9649, 0.81 ) }
    dend_33 { pt3dadd( 18.1336, -77.4973, -27.6926, 0.96 ) }
    dend_33 { pt3dadd( 18.5135, -77.9356, -29.2239, 0.96 ) }
    dend_33 { pt3dadd( 18.7623, -78.3151, -30.3932, 0.96 ) }
    dend_33 { pt3dadd( 18.8972, -78.5506, -31.1032, 0.66 ) }
    dend_33 { pt3dadd( 19.1063, -78.9319, -32.2287, 0.74 ) }
    dend_33 { pt3dadd( 19.3219, -79.326, -33.3004, 0.74 ) }
    dend_33 { pt3dadd( 19.8018, -80.0972, -35.2984, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_33 { pt3dadd( 20.3441, -80.8629, -37.3009, 0.29 ) }
    dend_33 { pt3dadd( 20.7595, -81.3883, -38.8276, 0.29 ) }
    dend_33 { pt3dadd( 21.0755, -81.7326, -39.9118, 0.29 ) }
    dend_33 { pt3dadd( 21.3783, -82.0218, -40.9011, 0.37 ) }
    dend_33 { pt3dadd( 21.8666, -82.4354, -42.4467, 0.52 ) }
    dend_33 { pt3dadd( 22.3053, -82.7913, -43.8456, 0.44 ) }
    dend_33 { pt3dadd( 22.9701, -83.4193, -46.1516, 0.44 ) }
    dend_33 { pt3dadd( 26.0316, -88.2759, -54.4085, 0.44 ) }
    dend_33 { pt3dadd( 28.5868, -94.3474, -62.0495, 0.44 ) }
    dend_33 { pt3dadd( 31.4514, -99.3264, -70.3077, 0.44 ) }
    dend_33 { pt3dadd( 33.9932, -104.25, -78.702, 0.44 ) }
    dend_33 { pt3dadd( 34.6615, -107.997, -87.9858, 0.44 ) }
    dend_33 { pt3dadd( 36.6863, -109.761, -97.6263, 0.44 ) }
    dend_33 { pt3dadd( 38.7426, -111.814, -107.205, 0.44 ) }
    dend_33 { pt3dadd( 42.0884, -114.838, -116.155, 0.44 ) }
    dend_33 { pt3dadd( 45.3555, -116.483, -125.469, 0.44 ) }
    dend_33 { pt3dadd( 47.4959, -116.356, -135.237, 0.44 ) }
    dend_33 { pt3dadd( 50.586, -115.143, -144.673, 0.44 ) }
    dend_33 { pt3dadd( 52.6372, -115.253, -154.46, 0.44 ) }
    dend_33 { pt3dadd( 54.8246, -116.497, -164.142, 0.44 ) }
    dend_33 { pt3dadd( 58.0574, -119.217, -173.226, 0.44 ) }
    dend_33 { pt3dadd( 61.7574, -121.755, -182.18, 0.44 ) }
    dend_33 { pt3dadd( 65.4951, -125.649, -190.641, 0.44 ) }
    dend_33 { pt3dadd( 68.6248, -129.902, -199.185, 0.44 ) }
    dend_33 { pt3dadd( 71.3828, -134.397, -207.739, 0.44 ) }
    dend_33 { pt3dadd( 75.2003, -137.642, -216.422, 0.44 ) }
    dend_33 { pt3dadd( 77.0731, -140.656, -225.795, 0.44 ) }
    dend_33 { pt3dadd( 80.0511, -144.817, -234.435, 0.44 ) }
    dend_33 { pt3dadd( 82.4468, -150.923, -242.101, 0.44 ) }
    dend_33 { pt3dadd( 86.1473, -157.121, -249.154, 0.44 ) }
    dend_33 { pt3dadd( 90.8081, -164.107, -254.795, 0.44 ) }
    dend_33 { pt3dadd( 94.8368, -171.202, -260.784, 0.44 ) }
    dend_33 { pt3dadd( 97.7055, -179.345, -266.136, 0.44 ) }
    dend_33 { pt3dadd( 102.021, -185.404, -272.951, 0.44 ) }
    dend_33 { pt3dadd( 106.084, -192.238, -279.199, 0.44 ) }
    dend_33 { pt3dadd( 110.73, -199.557, -284.436, 0.44 ) }
    dend_33 { pt3dadd( 115.803, -207.007, -289.065, 0.44 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 37/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.87362, -163.021, 87.2717, 0.15 ) }
    dend_29 { pt3dadd( -3.78695, -164.25, 87.8288, 0.15 ) }
    dend_29 { pt3dadd( -3.74581, -165.135, 88.2994, 0.22 ) }
    dend_29 { pt3dadd( -3.72428, -165.771, 88.6491, 0.22 ) }
    dend_29 { pt3dadd( -3.69497, -166.73, 89.1932, 0.37 ) }
    dend_29 { pt3dadd( -3.62935, -167.983, 90.0163, 0.15 ) }
    dend_29 { pt3dadd( -3.44934, -170.045, 91.4996, 0.15 ) }
    dend_29 { pt3dadd( -3.37816, -170.661, 92.0673, 0.15 ) }
    dend_29 { pt3dadd( -3.29911, -171.247, 92.6876, 0.29 ) }
    dend_29 { pt3dadd( -3.00542, -173.099, 94.8756, 0.15 ) }
    dend_29 { pt3dadd( -2.75222, -174.323, 96.5603, 0.15 ) }
    dend_29 { pt3dadd( -2.59809, -174.857, 97.4161, 0.15 ) }
    dend_29 { pt3dadd( -2.05305, -176.186, 99.827, 0.15 ) }
    dend_29 { pt3dadd( -1.80404, -176.661, 100.926, 0.15 ) }
    dend_29 { pt3dadd( -1.51612, -177.126, 102.241, 0.22 ) }
    dend_29 { pt3dadd( -1.10944, -177.706, 104.113, 0.44 ) }
    dend_29 { pt3dadd( -0.841648, -178.079, 105.33, 0.44 ) }
    dend_29 { pt3dadd( -0.327322, -178.783, 107.55, 0.15 ) }
    dend_29 { pt3dadd( 0.82196, -180.216, 111.962, 0.22 ) }
    dend_29 { pt3dadd( 1.55152, -181.076, 114.601, 0.22 ) }
    dend_29 { pt3dadd( 1.80627, -181.366, 115.42, 0.22 ) }
    dend_29 { pt3dadd( 2.27863, -181.908, 116.747, 0.22 ) }
    dend_29 { pt3dadd( 2.78699, -182.466, 117.879, 0.22 ) }
    dend_29 { pt3dadd( 3.60111, -183.299, 119.195, 0.22 ) }
    dend_29 { pt3dadd( 4.19876, -183.888, 119.893, 0.22 ) }
    dend_29 { pt3dadd( 5.03658, -184.764, 120.757, 0.07 ) }
    dend_29 { pt3dadd( 6.28164, -186.131, 122.099, 0.07 ) }
    dend_29 { pt3dadd( 7.73765, -187.767, 123.649, 0.07 ) }
    dend_29 { pt3dadd( 8.85464, -189.041, 124.862, 0.07 ) }
    dend_29 { pt3dadd( 10.436, -190.961, 126.587, 0.07 ) }
    dend_29 { pt3dadd( 11.7556, -192.664, 128.143, 0.07 ) }
    dend_29 { pt3dadd( 12.9219, -194.352, 129.864, 0.15 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 69/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -3.87362, -163.021, 87.2717, 0.22 ) }
    dend_28 { pt3dadd( -4.27334, -165.385, 86.142, 0.22 ) }
    dend_28 { pt3dadd( -4.60174, -167.414, 85.7112, 0.15 ) }
    dend_28 { pt3dadd( -4.8441, -168.956, 85.6692, 0.15 ) }
    dend_28 { pt3dadd( -5.0771, -170.447, 85.7764, 0.15 ) }
    dend_28 { pt3dadd( -5.31666, -171.913, 85.9466, 0.15 ) }
    dend_28 { pt3dadd( -5.8205, -175.157, 86.365, 0.15 ) }
    dend_28 { pt3dadd( -6.02643, -176.645, 86.7185, 0.15 ) }
    dend_28 { pt3dadd( -6.16153, -177.59, 86.9906, 0.37 ) }
    dend_28 { pt3dadd( -6.3664, -178.839, 87.2892, 0.59 ) }
    dend_28 { pt3dadd( -6.73864, -180.958, 87.6497, 0.22 ) }
    dend_28 { pt3dadd( -7.08205, -182.732, 87.8086, 0.22 ) }
    dend_28 { pt3dadd( -7.38666, -184.14, 87.7455, 0.15 ) }
    dend_28 { pt3dadd( -7.68992, -185.368, 87.6259, 0.15 ) }
    dend_28 { pt3dadd( -8.23127, -187.274, 87.4167, 0.15 ) }
    dend_28 { pt3dadd( -8.50589, -188.129, 87.2707, 0.15 ) }
    dend_28 { pt3dadd( -8.80803, -188.954, 87.0385, 0.29 ) }
    dend_28 { pt3dadd( -9.07361, -189.619, 86.8045, 0.29 ) }
    dend_28 { pt3dadd( -9.52464, -190.792, 86.3294, 0.44 ) }
    dend_28 { pt3dadd( -9.8517, -191.744, 86.0307, 0.44 ) }
    dend_28 { pt3dadd( -10.4038, -193.575, 85.7104, 0.22 ) }
    dend_28 { pt3dadd( -10.8602, -195.293, 85.565, 0.29 ) }
    dend_28 { pt3dadd( -11.2523, -197.071, 85.5658, 0.07 ) }
    dend_28 { pt3dadd( -11.5076, -198.512, 85.683, 0.07 ) }
    dend_28 { pt3dadd( -11.9008, -201.571, 86.0382, 0.22 ) }
    dend_28 { pt3dadd( -12.0305, -202.95, 86.354, 0.22 ) }
    dend_28 { pt3dadd( -12.0906, -203.833, 86.6757, 0.22 ) }
    dend_28 { pt3dadd( -12.1091, -204.523, 87.0035, 0.44 ) }
    dend_28 { pt3dadd( -12.1114, -205.259, 87.3839, 0.66 ) }
    dend_28 { pt3dadd( -12.1077, -207.149, 88.3682, 0.22 ) }
    dend_28 { pt3dadd( -12.0806, -209.307, 89.3851, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( -12.0599, -210.339, 89.867, 0.07 ) }
    dend_28 { pt3dadd( -11.9993, -211.655, 90.4071, 0.07 ) }
    dend_28 { pt3dadd( -11.9082, -212.766, 90.7934, 0.15 ) }
    dend_28 { pt3dadd( -11.8015, -213.64, 91.0402, 0.15 ) }
    dend_28 { pt3dadd( -11.5846, -215.01, 91.3298, 0.37 ) }
    dend_28 { pt3dadd( -11.3068, -216.432, 91.4092, 0.66 ) }
    dend_28 { pt3dadd( -10.8545, -218.529, 91.348, 0.15 ) }
    dend_28 { pt3dadd( -10.5292, -219.982, 91.2062, 0.22 ) }
    dend_28 { pt3dadd( -10.2217, -221.333, 91.0282, 0.22 ) }
    dend_28 { pt3dadd( -9.96458, -222.518, 90.8322, 0.15 ) }
    dend_28 { pt3dadd( -9.8033, -223.353, 90.6754, 0.15 ) }
    dend_28 { pt3dadd( -9.69169, -224.169, 90.5466, 0.59 ) }
    dend_28 { pt3dadd( -9.64909, -225.078, 90.4548, 0.59 ) }
    dend_28 { pt3dadd( -9.73281, -226.885, 90.3215, 0.22 ) }
    dend_28 { pt3dadd( -9.79809, -227.426, 90.2717, 0.22 ) }
    dend_28 { pt3dadd( -9.93878, -228.315, 90.185, 0.44 ) }
    dend_28 { pt3dadd( -10.1119, -229.586, 90.0704, 0.66 ) }
    dend_28 { pt3dadd( -10.2578, -230.997, 89.9338, 0.29 ) }
    dend_28 { pt3dadd( -10.3278, -232.15, 89.8205, 0.66 ) }
    dend_28 { pt3dadd( -10.3205, -233.611, 89.676, 0.52 ) }
    dend_28 { pt3dadd( -10.1947, -235.707, 89.4543, 0.29 ) }
    dend_28 { pt3dadd( -9.98608, -237.572, 89.1738, 0.22 ) }
    dend_28 { pt3dadd( -9.76484, -238.93, 88.9037, 0.29 ) }
    dend_28 { pt3dadd( -9.49697, -240.212, 88.6041, 0.37 ) }
    dend_28 { pt3dadd( -9.13026, -241.721, 88.2691, 0.22 ) }
    dend_28 { pt3dadd( -8.93066, -242.5, 88.1174, 0.22 ) }
    dend_28 { pt3dadd( -8.43382, -244.437, 87.7293, 0.29 ) }
    dend_28 { pt3dadd( -8.14066, -245.738, 87.4808, 0.52 ) }
    dend_28 { pt3dadd( -7.98323, -246.533, 87.3514, 0.81 ) }
    dend_28 { pt3dadd( -7.70446, -248.153, 87.151, 0.29 ) }
    dend_28 { pt3dadd( -7.48995, -249.497, 87.1527, 0.22 ) }
    dend_28 { pt3dadd( -7.39936, -250.039, 87.2232, 0.22 ) }
    dend_28 { pt3dadd( -7.29138, -250.688, 87.3878, 0.44 ) }
    dend_28 { pt3dadd( -7.15391, -251.632, 87.6612, 0.74 ) }
    dend_28 { pt3dadd( -7.00264, -252.62, 87.92, 0.29 ) }
    dend_28 { pt3dadd( -6.66054, -254.525, 88.3279, 0.15 ) }
    dend_28 { pt3dadd( -6.56557, -254.988, 88.4179, 0.15 ) }
    dend_28 { pt3dadd( -6.37294, -255.79, 88.5462, 0.15 ) }
    dend_28 { pt3dadd( -6.04979, -256.946, 88.6929, 0.44 ) }
    dend_28 { pt3dadd( -5.51383, -258.712, 88.9182, 0.22 ) }
    dend_28 { pt3dadd( -5.15588, -259.917, 89.0554, 0.22 ) }
    dend_28 { pt3dadd( -4.70931, -261.463, 89.1831, 0.52 ) }
    dend_28 { pt3dadd( -4.20805, -263.245, 89.2717, 0.15 ) }
    dend_28 { pt3dadd( -3.88746, -264.491, 89.2534, 0.29 ) }
    dend_28 { pt3dadd( -3.56134, -265.997, 89.0838, 0.59 ) }
    dend_28 { pt3dadd( -3.37437, -267.246, 88.7848, 0.74 ) }
    dend_28 { pt3dadd( -3.33148, -267.717, 88.6196, 0.74 ) }
    dend_28 { pt3dadd( -3.30106, -269.542, 87.804, 0.22 ) }
    dend_28 { pt3dadd( -3.45101, -271.439, 86.819, 0.15 ) }
    dend_28 { pt3dadd( -3.63994, -272.764, 86.0293, 0.15 ) }
    dend_28 { pt3dadd( -3.85376, -273.902, 85.3117, 0.29 ) }
    dend_28 { pt3dadd( -4.05418, -274.801, 84.7645, 0.74 ) }
    dend_28 { pt3dadd( -4.27456, -275.764, 84.253, 0.66 ) }
    dend_28 { pt3dadd( -4.65679, -277.549, 83.4737, 0.15 ) }
    dend_28 { pt3dadd( -4.96075, -279.168, 82.8008, 0.15 ) }
    dend_28 { pt3dadd( -5.13511, -280.356, 82.3284, 0.22 ) }
    dend_28 { pt3dadd( -5.27248, -281.715, 81.7762, 0.52 ) }
    dend_28 { pt3dadd( -5.33672, -283.354, 81.0924, 0.29 ) }
    dend_28 { pt3dadd( -5.25964, -285.251, 80.3474, 0.15 ) }
    dend_28 { pt3dadd( -5.06714, -286.727, 79.7882, 0.15 ) }
    dend_28 { pt3dadd( -4.96799, -287.222, 79.6014, 0.15 ) }
    dend_28 { pt3dadd( -4.77953, -287.993, 79.2895, 0.81 ) }
    dend_28 { pt3dadd( -4.55356, -289.017, 78.879, 0.29 ) }
    dend_28 { pt3dadd( -4.26504, -290.794, 78.1653, 0.15 ) }
    dend_28 { pt3dadd( -4.14173, -292.13, 77.6138, 0.59 ) }
    dend_28 { pt3dadd( -4.12376, -293.087, 77.2213, 0.59 ) }
    dend_28 { pt3dadd( -4.1751, -293.899, 76.8262, 0.59 ) }
    dend_28 { pt3dadd( -4.39018, -295.301, 75.984, 1.18 ) }
    dend_28 { pt3dadd( -4.66379, -296.397, 75.0909, 0.74 ) }
    dend_28 { pt3dadd( -5.1694, -298.017, 73.4887, 0.22 ) }
    dend_28 { pt3dadd( -5.32889, -298.504, 72.9369, 0.29 ) }
    dend_28 { pt3dadd( -5.65136, -299.528, 71.6023, 0.37 ) }
    dend_28 { pt3dadd( -5.94721, -300.543, 70.009, 0.37 ) }
    dend_28 { pt3dadd( -6.29659, -301.8, 67.5832, 0.37 ) }
    dend_28 { pt3dadd( -6.4237, -302.185, 66.7222, 0.37 ) }
    dend_28 { pt3dadd( -6.57974, -302.638, 65.5941, 0.37 ) }
    dend_28 { pt3dadd( -6.61294, -302.774, 65.2411, 0.37 ) }
    dend_28 { pt3dadd( -6.6313, -303.026, 64.5847, 0.37 ) }
    dend_28 { pt3dadd( -6.59832, -303.373, 63.7854, 0.37 ) }
    dend_28 { pt3dadd( -6.53368, -303.903, 62.7611, 0.44 ) }
    dend_28 { pt3dadd( -6.50718, -304.436, 61.8436, 0.52 ) }
    dend_28 { pt3dadd( -6.50486, -305.491, 60.4163, 0.52 ) }
    dend_28 { pt3dadd( -6.54016, -306.471, 59.258, 0.37 ) }
    dend_28 { pt3dadd( -6.55469, -306.975, 58.7449, 0.22 ) }
    dend_28 { pt3dadd( -6.5723, -307.54, 58.242, 0.22 ) }
    dend_28 { pt3dadd( -6.63247, -308.352, 57.6314, 0.29 ) }
    dend_28 { pt3dadd( -6.80628, -309.521, 56.964, 0.81 ) }
    dend_28 { pt3dadd( -7.13036, -311.239, 56.3085, 0.15 ) }
    dend_28 { pt3dadd( -7.3034, -312.033, 56.0942, 0.15 ) }
    dend_28 { pt3dadd( -7.45626, -312.754, 55.9074, 0.22 ) }
    dend_28 { pt3dadd( -7.62641, -313.699, 55.6841, 0.29 ) }
    dend_28 { pt3dadd( -7.73606, -314.385, 55.5272, 0.81 ) }
    dend_28 { pt3dadd( -8.00588, -316.034, 55.0982, 0.22 ) }
    dend_28 { pt3dadd( -8.21955, -317.346, 54.711, 0.22 ) }
    dend_28 { pt3dadd( -8.39926, -318.456, 54.2603, 0.22 ) }
    dend_28 { pt3dadd( -8.51306, -319.37, 53.7582, 0.52 ) }
    dend_28 { pt3dadd( -8.53209, -319.625, 53.5732, 0.52 ) }
    dend_28 { pt3dadd( -8.57932, -320.932, 52.356, 0.22 ) }
    dend_28 { pt3dadd( -8.59538, -321.771, 51.421, 0.37 ) }
    dend_28 { pt3dadd( -8.58487, -322.523, 50.48, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_28 { pt3dadd( -8.55069, -323.477, 49.23, 0.22 ) }
    dend_28 { pt3dadd( -8.50967, -324.377, 48.0129, 0.22 ) }
    dend_28 { pt3dadd( -8.44583, -325.2, 46.9512, 0.22 ) }
    dend_28 { pt3dadd( -8.39211, -325.609, 46.4608, 0.37 ) }
    dend_28 { pt3dadd( -8.19824, -326.808, 45.1622, 1.11 ) }
    dend_28 { pt3dadd( -7.96462, -328.154, 43.8871, 0.44 ) }
    dend_28 { pt3dadd( -7.73466, -329.376, 42.8295, 0.66 ) }
    dend_28 { pt3dadd( -7.53736, -330.225, 42.1385, 0.59 ) }
    dend_28 { pt3dadd( -7.33956, -330.893, 41.5834, 0.52 ) }
    dend_28 { pt3dadd( -7.08146, -331.599, 40.9475, 0.29 ) }
    dend_28 { pt3dadd( -6.63087, -332.696, 39.857, 0.15 ) }
    dend_28 { pt3dadd( -6.13948, -333.89, 38.6189, 0.15 ) }
    dend_28 { pt3dadd( -5.94701, -334.406, 38.0583, 0.52 ) }
    dend_28 { pt3dadd( -5.62584, -335.576, 36.7771, 0.74 ) }
    dend_28 { pt3dadd( -5.50495, -336.187, 36.1341, 0.74 ) }
    dend_28 { pt3dadd( -5.27241, -337.702, 34.6451, 0.37 ) }
    dend_28 { pt3dadd( -5.14827, -339.039, 33.5387, 0.37 ) }
    dend_28 { pt3dadd( -5.09028, -340.351, 32.6834, 0.59 ) }
    dend_28 { pt3dadd( -5.09238, -341.695, 31.9978, 0.88 ) }
    dend_28 { pt3dadd( -5.11412, -342.404, 31.7341, 0.88 ) }
    dend_28 { pt3dadd( -5.17683, -343.866, 31.3093, 0.37 ) }
    dend_28 { pt3dadd( -5.21724, -345.356, 30.9948, 0.66 ) }
    dend_28 { pt3dadd( -5.18145, -346.693, 30.6965, 0.66 ) }
    dend_28 { pt3dadd( -5.06011, -348.143, 30.3813, 1.18 ) }
    dend_28 { pt3dadd( -4.89958, -349.24, 30.1334, 0.81 ) }
    dend_28 { pt3dadd( -4.50281, -351.293, 29.6449, 0.44 ) }
    dend_28 { pt3dadd( -4.09877, -352.937, 29.247, 0.37 ) }
    dend_28 { pt3dadd( -3.36328, -355.2, 28.6413, 0.29 ) }
    dend_28 { pt3dadd( -3.21055, -355.586, 28.5181, 0.52 ) }
    dend_28 { pt3dadd( -2.88574, -356.275, 28.2709, 0.96 ) }
    dend_28 { pt3dadd( -2.31335, -357.369, 27.7889, 0.29 ) }
    dend_28 { pt3dadd( -1.95615, -357.982, 27.4932, 0.29 ) }
    dend_28 { pt3dadd( -1.56201, -358.647, 27.1468, 0.59 ) }
    dend_28 { pt3dadd( -0.879247, -359.868, 26.6751, 0.59 ) }
    dend_28 { pt3dadd( -0.504781, -360.556, 26.4553, 0.59 ) }
    dend_28 { pt3dadd( 0.530859, -362.512, 25.9452, 0.29 ) }
    dend_28 { pt3dadd( 1.20538, -363.825, 25.7057, 0.22 ) }
    dend_28 { pt3dadd( 1.54644, -364.55, 25.6584, 0.88 ) }
    dend_28 { pt3dadd( 2.48799, -366.844, 25.8859, 0.37 ) }
    dend_28 { pt3dadd( 2.73418, -367.561, 26.0657, 0.66 ) }
    dend_28 { pt3dadd( 2.8914, -368.115, 26.3016, 0.66 ) }
    dend_28 { pt3dadd( 3.21407, -369.431, 27.0967, 0.44 ) }
    dend_28 { pt3dadd( 3.40506, -370.331, 27.7994, 0.44 ) }
    dend_28 { pt3dadd( 3.61773, -371.362, 28.8649, 0.44 ) }
    dend_28 { pt3dadd( 3.77712, -372.16, 29.8455, 0.81 ) }
    dend_28 { pt3dadd( 4.1418, -373.574, 31.7895, 0.22 ) }
    dend_28 { pt3dadd( 4.3535, -374.218, 32.7627, 0.37 ) }
    dend_28 { pt3dadd( 4.80335, -375.286, 34.5118, 0.37 ) }
    dend_28 { pt3dadd( 5.42584, -376.446, 36.4427, 0.37 ) }
    dend_28 { pt3dadd( 5.75429, -376.93, 37.2342, 0.66 ) }
    dend_28 { pt3dadd( 6.36123, -377.661, 38.5059, 0.22 ) }
    dend_28 { pt3dadd( 6.74733, -378.051, 39.1858, 0.22 ) }
    dend_28 { pt3dadd( 7.10254, -378.357, 39.8222, 0.74 ) }
    dend_28 { pt3dadd( 7.47765, -378.614, 40.4961, 0.74 ) }
    dend_28 { pt3dadd( 8.27412, -379.006, 42.1793, 0.22 ) }
    dend_28 { pt3dadd( 8.95793, -379.216, 43.9946, 0.22 ) }
    dend_28 { pt3dadd( 9.26664, -379.274, 45.0719, 0.37 ) }
    dend_28 { pt3dadd( 9.98128, -379.368, 48.1192, 0.37 ) }
    dend_28 { pt3dadd( 10.1551, -379.383, 49.1304, 0.74 ) }
    dend_28 { pt3dadd( 10.4704, -379.375, 51.7407, 0.74 ) }
    dend_28 { pt3dadd( 10.6394, -379.352, 53.8056, 0.52 ) }
    dend_28 { pt3dadd( 10.7811, -379.378, 56.2146, 0.52 ) }
    dend_28 { pt3dadd( 10.8165, -379.414, 57.0587, 0.52 ) }
    dend_28 { pt3dadd( 10.9044, -379.571, 59.5652, 0.52 ) }
    dend_28 { pt3dadd( 10.9405, -379.677, 60.8642, 0.52 ) }
    dend_28 { pt3dadd( 11.0062, -379.9, 63.1423, 0.52 ) }
    dend_28 { pt3dadd( 11.0261, -379.975, 63.8905, 0.52 ) }
    dend_28 { pt3dadd( 11.2323, -380.463, 69.3613, 0.52 ) }
    // Section: dend_22, id: dend_22, parent: dend_10 (entry count 68/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -12.2353, 25.9439, -6.96773, 0.96 ) }
    dend_22 { pt3dadd( -14.627, 27.3926, -7.13842, 0.96 ) }
    dend_22 { pt3dadd( -15.7778, 28.1229, -7.19559, 0.96 ) }
    dend_22 { pt3dadd( -17.0931, 29.045, -7.18819, 0.88 ) }
    dend_22 { pt3dadd( -18.3155, 29.9713, -7.13253, 0.88 ) }
    dend_22 { pt3dadd( -19.5251, 30.948, -6.99137, 0.81 ) }
    dend_22 { pt3dadd( -20.7674, 32.0251, -6.73487, 0.66 ) }
    dend_22 { pt3dadd( -21.6075, 32.8399, -6.37079, 1.03 ) }
    dend_22 { pt3dadd( -22.572, 33.8245, -5.74003, 1.18 ) }
    dend_22 { pt3dadd( -22.9164, 34.173, -5.43817, 1.33 ) }
    dend_22 { pt3dadd( -23.8671, 35.0882, -4.48389, 1.03 ) }
    dend_22 { pt3dadd( -24.9291, 36.0439, -3.4308, 0.96 ) }
    dend_22 { pt3dadd( -26.0574, 36.9031, -2.36098, 0.96 ) }
    dend_22 { pt3dadd( -27.6383, 37.8405, -1.01645, 1.33 ) }
    dend_22 { pt3dadd( -28.9586, 38.4272, -0.0106866, 1.03 ) }
    dend_22 { pt3dadd( -29.616, 38.6294, 0.472409, 1.03 ) }
    dend_22 { pt3dadd( -31.3452, 38.9238, 1.70812, 0.74 ) }
    dend_22 { pt3dadd( -32.3444, 38.9916, 2.44412, 0.96 ) }
    dend_22 { pt3dadd( -33.1195, 39.0108, 3.0425, 1.55 ) }
    dend_22 { pt3dadd( -34.4541, 39.0478, 4.19128, 1.25 ) }
    dend_22 { pt3dadd( -35.8994, 39.1222, 5.71163, 1.03 ) }
    dend_22 { pt3dadd( -36.8597, 39.1988, 6.96224, 0.74 ) }
    dend_22 { pt3dadd( -37.4571, 39.2845, 7.86771, 0.74 ) }
    dend_22 { pt3dadd( -38.0844, 39.3983, 8.89602, 1.11 ) }
    dend_22 { pt3dadd( -38.7096, 39.5228, 9.95095, 1.11 ) }
    dend_22 { pt3dadd( -39.9909, 39.7931, 12.0477, 0.96 ) }
    dend_22 { pt3dadd( -41.2214, 40.1073, 13.9754, 1.18 ) }
    dend_22 { pt3dadd( -42.1105, 40.3903, 15.3136, 1.55 ) }
    dend_22 { pt3dadd( -42.744, 40.6351, 16.2014, 1.55 ) }
    dend_22 { pt3dadd( -43.4372, 40.9607, 17.0586, 1.18 ) }
    dend_22 { pt3dadd( -44.1192, 41.3709, 17.7186, 0.88 ) }
    dend_22 { pt3dadd( -45.0396, 42.0741, 18.4416, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_22 { pt3dadd( -46.0001, 42.9124, 19.1894, 0.96 ) }
    dend_22 { pt3dadd( -46.6752, 43.5678, 19.7877, 1.18 ) }
    dend_22 { pt3dadd( -47.3758, 44.3494, 20.5199, 1.18 ) }
    dend_22 { pt3dadd( -48.1861, 45.4073, 21.5761, 1.11 ) }
    dend_22 { pt3dadd( -49.1595, 46.8235, 23.0709, 1.18 ) }
    dend_22 { pt3dadd( -50.0205, 48.1754, 24.5562, 1.03 ) }
    dend_22 { pt3dadd( -50.6693, 49.2109, 25.7979, 1.03 ) }
    dend_22 { pt3dadd( -51.3202, 50.2663, 27.1998, 0.88 ) }
    dend_22 { pt3dadd( -51.9494, 51.3554, 28.7024, 1.03 ) }
    dend_22 { pt3dadd( -52.4436, 52.265, 29.9818, 0.74 ) }
    dend_22 { pt3dadd( -52.9243, 53.2125, 31.2686, 0.66 ) }
    dend_22 { pt3dadd( -53.4777, 54.3806, 32.8152, 0.59 ) }
    dend_22 { pt3dadd( -54.1209, 55.6868, 34.6248, 1.03 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 13/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.2353, 25.9439, -6.96773, 1.03 ) }
    dend_11 { pt3dadd( -13.4822, 26.3816, -9.41931, 1.03 ) }
    dend_11 { pt3dadd( -14.8256, 26.7936, -11.7498, 1.03 ) }
    dend_11 { pt3dadd( -16.0488, 27.1233, -13.6463, 1.18 ) }
    dend_11 { pt3dadd( -17.5204, 27.4722, -15.7642, 1.18 ) }
    dend_11 { pt3dadd( -18.5499, 27.7044, -17.1762, 1.18 ) }
    dend_11 { pt3dadd( -19.7167, 27.9693, -18.763, 1.03 ) }
    dend_11 { pt3dadd( -20.8301, 28.2257, -20.1241, 0.96 ) }
    dend_11 { pt3dadd( -21.6344, 28.427, -21.0348, 1.18 ) }
    dend_11 { pt3dadd( -22.531, 28.6683, -22.0252, 1.03 ) }
    dend_11 { pt3dadd( -23.3672, 28.9016, -22.9395, 1.03 ) }
    dend_11 { pt3dadd( -24.4376, 29.2185, -24.0952, 1.03 ) }
    dend_11 { pt3dadd( -25.2702, 29.4745, -24.9672, 1.18 ) }
    dend_11 { pt3dadd( -26.5855, 29.8966, -26.2046, 1.18 ) }
    dend_11 { pt3dadd( -27.5086, 30.216, -26.9894, 1.18 ) }
    dend_11 { pt3dadd( -28.5997, 30.6195, -27.865, 1.11 ) }
    dend_11 { pt3dadd( -29.7509, 31.0532, -28.7131, 1.18 ) }
    dend_11 { pt3dadd( -30.4682, 31.3422, -29.1837, 0.96 ) }
    dend_11 { pt3dadd( -31.4948, 31.8246, -29.7978, 0.81 ) }
    dend_11 { pt3dadd( -32.7736, 32.5558, -30.5122, 1.03 ) }
    dend_11 { pt3dadd( -34.6502, 33.8065, -31.501, 1.25 ) }
    dend_11 { pt3dadd( -35.2441, 34.2468, -31.8043, 1.25 ) }
    dend_11 { pt3dadd( -36.1376, 34.9332, -32.2328, 0.88 ) }
    dend_11 { pt3dadd( -37.3815, 35.8639, -32.7974, 0.88 ) }
    dend_11 { pt3dadd( -38.8037, 36.847, -33.3915, 1.11 ) }
    dend_11 { pt3dadd( -40.0005, 37.5811, -33.8058, 1.11 ) }
    dend_11 { pt3dadd( -41.5079, 38.4157, -34.2445, 0.96 ) }
    dend_11 { pt3dadd( -42.7645, 39.0473, -34.6072, 1.03 ) }
    dend_11 { pt3dadd( -43.9759, 39.6014, -34.9658, 1.03 ) }
    dend_11 { pt3dadd( -45.2335, 40.113, -35.3383, 0.96 ) }
    dend_11 { pt3dadd( -46.4021, 40.5556, -35.6616, 0.96 ) }
    dend_11 { pt3dadd( -47.656, 41.0097, -36.0291, 0.96 ) }
    dend_11 { pt3dadd( -49.231, 41.5443, -36.4744, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_5 (entry count 46/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -14.0378, 78.1531, -37.5874, 1.18 ) }
    dend_9 { pt3dadd( -14.2145, 80.3337, -37.4214, 1.18 ) }
    dend_9 { pt3dadd( -14.2515, 81.822, -37.3358, 0.96 ) }
    dend_9 { pt3dadd( -14.2193, 82.8088, -37.3353, 0.96 ) }
    dend_9 { pt3dadd( -14.1617, 83.7067, -37.396, 0.96 ) }
    dend_9 { pt3dadd( -14.0463, 85.3497, -37.6002, 0.96 ) }
    dend_9 { pt3dadd( -13.9712, 86.959, -37.8692, 1.03 ) }
    dend_9 { pt3dadd( -13.9061, 88.1323, -38.1478, 1.11 ) }
    dend_9 { pt3dadd( -13.8295, 89.5347, -38.595, 0.88 ) }
    dend_9 { pt3dadd( -13.8264, 90.6137, -38.9975, 0.88 ) }
    dend_9 { pt3dadd( -13.9066, 91.7205, -39.416, 0.88 ) }
    dend_9 { pt3dadd( -14.078, 93.0899, -39.9283, 1.03 ) }
    dend_9 { pt3dadd( -14.2251, 94.0159, -40.2535, 1.03 ) }
    dend_9 { pt3dadd( -14.5683, 95.899, -40.8095, 1.18 ) }
    dend_9 { pt3dadd( -14.918, 97.8578, -41.2908, 0.88 ) }
    dend_9 { pt3dadd( -15.3017, 100.263, -41.7874, 0.81 ) }
    dend_9 { pt3dadd( -15.4153, 101.148, -41.9406, 0.96 ) }
    dend_9 { pt3dadd( -15.5137, 102.056, -42.0866, 0.96 ) }
    dend_9 { pt3dadd( -15.7195, 103.871, -42.3787, 0.88 ) }
    dend_9 { pt3dadd( -15.8674, 105.158, -42.5711, 0.88 ) }
    dend_9 { pt3dadd( -16.0331, 106.583, -42.8222, 1.11 ) }
    dend_9 { pt3dadd( -16.3051, 108.782, -43.2807, 1.25 ) }
    dend_9 { pt3dadd( -16.4992, 110.187, -43.5983, 1.03 ) }
    dend_9 { pt3dadd( -16.7202, 111.719, -43.9757, 1.03 ) }
    dend_9 { pt3dadd( -16.8909, 112.909, -44.2892, 1.18 ) }
    dend_9 { pt3dadd( -17.1906, 115.0, -44.9163, 0.96 ) }
    dend_9 { pt3dadd( -17.4025, 116.684, -45.4756, 1.11 ) }
    dend_9 { pt3dadd( -17.5169, 118.095, -45.9714, 1.11 ) }
    dend_9 { pt3dadd( -17.5358, 119.653, -46.496, 1.18 ) }
    dend_9 { pt3dadd( -17.4298, 121.148, -46.9764, 0.74 ) }
    dend_9 { pt3dadd( -17.1978, 122.619, -47.4246, 0.88 ) }
    dend_9 { pt3dadd( -16.927, 123.664, -47.7044, 1.25 ) }
    dend_9 { pt3dadd( -16.4077, 125.079, -48.0319, 1.33 ) }
    dend_9 { pt3dadd( -15.7204, 126.531, -48.2764, 0.96 ) }
    dend_9 { pt3dadd( -15.0239, 127.739, -48.387, 0.74 ) }
    dend_9 { pt3dadd( -14.3427, 128.787, -48.4126, 0.81 ) }
    dend_9 { pt3dadd( -13.7312, 129.652, -48.3336, 0.81 ) }
    dend_9 { pt3dadd( -12.9422, 130.74, -48.1575, 0.74 ) }
    dend_9 { pt3dadd( -12.2917, 131.675, -47.9309, 1.25 ) }
    dend_9 { pt3dadd( -11.4399, 132.949, -47.5373, 1.4 ) }
    dend_9 { pt3dadd( -10.8378, 133.956, -47.1614, 1.4 ) }
    dend_9 { pt3dadd( -9.72884, 136.017, -46.3215, 0.88 ) }
    dend_9 { pt3dadd( -9.49404, 136.497, -46.1105, 0.88 ) }
    dend_9 { pt3dadd( -8.92477, 137.775, -45.5298, 0.88 ) }
    dend_9 { pt3dadd( -8.55202, 138.694, -45.1366, 0.88 ) }
    dend_9 { pt3dadd( -7.99732, 140.249, -44.5722, 0.96 ) }
    dend_9 { pt3dadd( -7.69914, 141.21, -44.3121, 0.96 ) }
    dend_9 { pt3dadd( -7.31797, 142.649, -44.0655, 1.55 ) }
    dend_9 { pt3dadd( -7.20505, 143.134, -43.9935, 1.55 ) }
    dend_9 { pt3dadd( -6.78146, 145.07, -43.8289, 1.18 ) }
    dend_9 { pt3dadd( -6.40816, 147.045, -43.7813, 1.25 ) }
    dend_9 { pt3dadd( -6.17975, 148.63, -43.8719, 1.62 ) }
    dend_9 { pt3dadd( -6.10934, 149.449, -43.9846, 1.62 ) }
    dend_9 { pt3dadd( -6.03419, 151.687, -44.4441, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_9 { pt3dadd( -6.054, 153.42, -44.9175, 0.96 ) }
    dend_9 { pt3dadd( -6.12069, 154.56, -45.3166, 1.33 ) }
    dend_9 { pt3dadd( -6.28511, 156.226, -46.0417, 1.11 ) }
    dend_9 { pt3dadd( -6.46964, 157.827, -46.9108, 1.33 ) }
    dend_9 { pt3dadd( -6.60587, 158.967, -47.6257, 1.33 ) }
    dend_9 { pt3dadd( -6.78447, 160.383, -48.6744, 1.47 ) }
    dend_9 { pt3dadd( -6.89741, 161.259, -49.3456, 1.62 ) }
    dend_9 { pt3dadd( -7.0865, 162.867, -50.6171, 1.03 ) }
    dend_9 { pt3dadd( -7.22651, 164.243, -51.6962, 0.96 ) }
    dend_9 { pt3dadd( -7.29402, 165.172, -52.3978, 0.88 ) }
    dend_9 { pt3dadd( -7.35414, 166.636, -53.5088, 0.81 ) }
    dend_9 { pt3dadd( -7.37599, 167.358, -54.0022, 1.18 ) }
    dend_9 { pt3dadd( -7.451, 169.481, -55.2862, 0.96 ) }
    dend_9 { pt3dadd( -7.56029, 171.448, -56.3051, 0.96 ) }
    dend_9 { pt3dadd( -7.69273, 173.097, -56.9614, 0.74 ) }
    dend_9 { pt3dadd( -7.86379, 174.85, -57.4904, 0.59 ) }
    dend_9 { pt3dadd( -8.11793, 177.131, -57.9554, 0.59 ) }
    dend_9 { pt3dadd( -8.34181, 178.864, -58.223, 0.52 ) }
    dend_9 { pt3dadd( -8.50955, 180.001, -58.3272, 0.74 ) }
    dend_9 { pt3dadd( -8.9167, 182.229, -58.4535, 1.03 ) }
    dend_9 { pt3dadd( -9.16786, 183.36, -58.4778, 1.11 ) }
    dend_9 { pt3dadd( -9.48047, 184.694, -58.4707, 0.74 ) }
    dend_9 { pt3dadd( -9.91158, 186.566, -58.4799, 0.66 ) }
    dend_9 { pt3dadd( -10.1386, 187.567, -58.5021, 0.52 ) }
    dend_9 { pt3dadd( -10.3845, 188.716, -58.5756, 0.22 ) }
    dend_9 { pt3dadd( -10.7918, 190.561, -58.8478, 0.15 ) }
    dend_9 { pt3dadd( -10.9276, 191.149, -58.9353, 0.22 ) }
    dend_9 { pt3dadd( -12.4906, 200.896, -61.603, 0.22 ) }
    dend_9 { pt3dadd( -12.8502, 209.983, -66.2159, 0.22 ) }
    dend_9 { pt3dadd( -13.3448, 219.562, -69.7396, 0.22 ) }
    dend_9 { pt3dadd( -15.2817, 229.115, -72.8037, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 31/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -14.0378, 78.1531, -37.5874, 0.66 ) }
    dend_6 { pt3dadd( -13.2839, 78.7893, -39.8719, 0.66 ) }
    dend_6 { pt3dadd( -12.7751, 79.2187, -41.4137, 0.59 ) }
    dend_6 { pt3dadd( -12.2639, 79.6501, -42.9627, 0.74 ) }
    // Section: dend_43, id: dend_43, parent: dend_39 (entry count 35/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 40.476, 30.1464, 31.9492, 0.88 ) }
    dend_43 { pt3dadd( 41.4971, 31.2939, 31.321, 0.88 ) }
    dend_43 { pt3dadd( 42.3646, 32.3112, 30.7012, 0.59 ) }
    dend_43 { pt3dadd( 43.3764, 33.4739, 29.9767, 0.59 ) }
    dend_43 { pt3dadd( 44.1251, 34.2475, 29.4884, 0.59 ) }
    dend_43 { pt3dadd( 44.8064, 34.8776, 29.046, 0.59 ) }
    dend_43 { pt3dadd( 45.5411, 35.495, 28.55, 0.81 ) }
    dend_43 { pt3dadd( 46.372, 36.0871, 27.9315, 0.81 ) }
    dend_43 { pt3dadd( 47.0305, 36.4512, 27.4486, 0.81 ) }
    dend_43 { pt3dadd( 48.0656, 36.8757, 26.7419, 0.52 ) }
    dend_43 { pt3dadd( 49.3241, 37.2656, 25.895, 0.52 ) }
    dend_43 { pt3dadd( 50.2935, 37.4954, 25.2304, 0.52 ) }
    dend_43 { pt3dadd( 51.1864, 37.6781, 24.6262, 0.52 ) }
    dend_43 { pt3dadd( 51.8206, 37.8255, 24.2102, 0.52 ) }
    dend_43 { pt3dadd( 52.7699, 38.0839, 23.5435, 0.44 ) }
    dend_43 { pt3dadd( 53.9513, 38.4519, 22.6684, 0.59 ) }
    dend_43 { pt3dadd( 54.9544, 38.7594, 21.9731, 0.44 ) }
    dend_43 { pt3dadd( 55.5657, 38.9293, 21.5435, 0.66 ) }
    dend_43 { pt3dadd( 56.4528, 39.1362, 20.9303, 0.37 ) }
    dend_43 { pt3dadd( 57.6058, 39.3258, 20.1197, 0.37 ) }
    dend_43 { pt3dadd( 58.7312, 39.3968, 19.3762, 0.59 ) }
    dend_43 { pt3dadd( 59.5759, 39.3821, 18.8305, 1.11 ) }
    dend_43 { pt3dadd( 61.0575, 39.319, 17.8207, 1.11 ) }
    dend_43 { pt3dadd( 62.2062, 39.2757, 17.0063, 0.66 ) }
    dend_43 { pt3dadd( 63.4526, 39.2901, 16.1101, 0.52 ) }
    dend_43 { pt3dadd( 64.3526, 39.3885, 15.4348, 0.29 ) }
    dend_43 { pt3dadd( 65.3114, 39.6487, 14.6374, 0.29 ) }
    dend_43 { pt3dadd( 66.2023, 40.1024, 13.7077, 0.59 ) }
    dend_43 { pt3dadd( 66.6559, 40.4711, 13.1352, 0.59 ) }
    dend_43 { pt3dadd( 67.3196, 41.2054, 12.1566, 0.37 ) }
    dend_43 { pt3dadd( 67.9185, 41.9846, 11.1923, 0.37 ) }
    dend_43 { pt3dadd( 68.3235, 42.5312, 10.509, 0.59 ) }
    dend_43 { pt3dadd( 69.1896, 43.6256, 9.10438, 1.03 ) }
    dend_43 { pt3dadd( 69.8174, 44.3239, 8.15263, 0.88 ) }
    dend_43 { pt3dadd( 70.371, 44.8738, 7.37403, 0.44 ) }
    dend_43 { pt3dadd( 71.2332, 45.6376, 6.18594, 0.44 ) }
    dend_43 { pt3dadd( 71.6997, 46.006, 5.60511, 0.44 ) }
    dend_43 { pt3dadd( 72.1183, 46.278, 5.12548, 0.66 ) }
    dend_43 { pt3dadd( 72.4939, 46.4677, 4.75837, 0.66 ) }
    dend_43 { pt3dadd( 73.1109, 46.7082, 4.1671, 0.44 ) }
    dend_43 { pt3dadd( 74.6372, 47.1669, 2.75529, 0.44 ) }
    dend_43 { pt3dadd( 75.0801, 47.2635, 2.37065, 0.81 ) }
    dend_43 { pt3dadd( 75.7857, 47.3672, 1.7293, 1.03 ) }
    dend_43 { pt3dadd( 76.7478, 47.4246, 0.709132, 0.66 ) }
    dend_43 { pt3dadd( 77.4601, 47.4074, -0.210716, 0.66 ) }
    dend_43 { pt3dadd( 78.2679, 47.3182, -1.58173, 0.52 ) }
    dend_43 { pt3dadd( 78.8991, 47.1742, -3.03706, 0.37 ) }
    dend_43 { pt3dadd( 79.3564, 46.996, -4.54317, 0.44 ) }
    dend_43 { pt3dadd( 79.8649, 46.6758, -6.94133, 0.52 ) }
    dend_43 { pt3dadd( 80.1578, 46.3953, -8.80427, 0.52 ) }
    dend_43 { pt3dadd( 80.5003, 46.009, -11.1255, 0.52 ) }
    dend_43 { pt3dadd( 80.7859, 45.6796, -13.0711, 0.81 ) }
    dend_43 { pt3dadd( 81.053, 45.4414, -14.6234, 1.03 ) }
    dend_43 { pt3dadd( 81.4033, 45.2802, -16.0369, 1.03 ) }
    dend_43 { pt3dadd( 81.8032, 45.2327, -17.0351, 0.81 ) }
    dend_43 { pt3dadd( 82.5862, 45.2806, -18.3772, 0.59 ) }
    dend_43 { pt3dadd( 83.3275, 45.4195, -19.3094, 0.59 ) }
    dend_43 { pt3dadd( 83.8982, 45.5861, -19.9071, 0.44 ) }
    dend_43 { pt3dadd( 85.0787, 45.9794, -21.0384, 0.44 ) }
    dend_43 { pt3dadd( 85.9542, 46.2687, -21.8164, 0.37 ) }
    dend_43 { pt3dadd( 86.6057, 46.4652, -22.349, 0.37 ) }
    dend_43 { pt3dadd( 87.3647, 46.6505, -22.8922, 0.96 ) }
    dend_43 { pt3dadd( 88.8244, 46.9016, -23.7885, 0.66 ) }
    dend_43 { pt3dadd( 89.7924, 47.0295, -24.3389, 0.66 ) }
    dend_43 { pt3dadd( 90.782, 47.1444, -24.9135, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_43 { pt3dadd( 92.0436, 47.3184, -25.8014, 0.74 ) }
    dend_43 { pt3dadd( 93.118, 47.5335, -26.785, 0.74 ) }
    dend_43 { pt3dadd( 94.259, 47.8914, -28.1027, 0.74 ) }
    dend_43 { pt3dadd( 95.0279, 48.2823, -29.2089, 0.59 ) }
    dend_43 { pt3dadd( 96.0581, 49.0668, -31.0039, 0.81 ) }
    dend_43 { pt3dadd( 96.9291, 50.0138, -32.8674, 0.96 ) }
    dend_43 { pt3dadd( 97.6013, 51.034, -34.6358, 0.96 ) }
    dend_43 { pt3dadd( 97.9038, 51.6495, -35.5222, 0.66 ) }
    dend_43 { pt3dadd( 98.2087, 52.364, -36.3704, 0.59 ) }
    dend_43 { pt3dadd( 98.4562, 52.8864, -36.9331, 0.44 ) }
    dend_43 { pt3dadd( 98.921, 53.7806, -37.7465, 0.88 ) }
    dend_43 { pt3dadd( 99.1706, 54.184, -38.1382, 0.88 ) }
    dend_43 { pt3dadd( 99.7398, 54.8767, -39.1609, 0.29 ) }
    dend_43 { pt3dadd( 100.472, 55.4476, -40.9413, 0.29 ) }
    dend_43 { pt3dadd( 101.219, 55.7387, -43.27, 0.29 ) }
    dend_43 { pt3dadd( 101.422, 55.7733, -43.9996, 0.88 ) }
    dend_43 { pt3dadd( 101.903, 55.7939, -45.9344, 0.88 ) }
    dend_43 { pt3dadd( 102.25, 55.8234, -47.5119, 0.88 ) }
    dend_43 { pt3dadd( 102.475, 55.8844, -48.8148, 0.88 ) }
    dend_43 { pt3dadd( 102.667, 56.1347, -50.4617, 0.88 ) }
    dend_43 { pt3dadd( 102.703, 56.35, -51.0273, 0.88 ) }
    dend_43 { pt3dadd( 102.716, 56.7927, -51.6198, 0.88 ) }
    dend_43 { pt3dadd( 102.598, 57.7945, -52.2854, 0.52 ) }
    dend_43 { pt3dadd( 102.408, 58.6988, -52.763, 0.52 ) }
    dend_43 { pt3dadd( 102.192, 59.4874, -53.1871, 1.03 ) }
    dend_43 { pt3dadd( 101.978, 60.2579, -53.6471, 1.03 ) }
    dend_43 { pt3dadd( 101.765, 61.103, -54.231, 0.81 ) }
    dend_43 { pt3dadd( 101.511, 62.3712, -55.2313, 0.44 ) }
    dend_43 { pt3dadd( 101.386, 63.4521, -56.176, 0.52 ) }
    dend_43 { pt3dadd( 101.349, 64.3732, -57.0519, 0.52 ) }
    dend_43 { pt3dadd( 101.341, 65.3659, -58.1156, 0.66 ) }
    dend_43 { pt3dadd( 101.318, 65.8273, -58.7234, 0.52 ) }
    dend_43 { pt3dadd( 101.239, 66.4707, -59.7002, 0.66 ) }
    dend_43 { pt3dadd( 101.1, 67.1657, -60.794, 0.88 ) }
    dend_43 { pt3dadd( 100.785, 68.2334, -62.4275, 0.59 ) }
    dend_43 { pt3dadd( 100.514, 68.9819, -63.5307, 0.59 ) }
    dend_43 { pt3dadd( 99.9315, 70.4386, -65.7258, 0.52 ) }
    dend_43 { pt3dadd( 99.7132, 71.008, -66.5913, 0.52 ) }
    dend_43 { pt3dadd( 99.5925, 71.4843, -67.2816, 0.52 ) }
    dend_43 { pt3dadd( 99.5717, 72.2414, -68.2018, 0.52 ) }
    dend_43 { pt3dadd( 99.8287, 73.069, -68.8447, 0.44 ) }
    dend_43 { pt3dadd( 100.277, 74.0034, -69.2839, 0.74 ) }
    dend_43 { pt3dadd( 100.56, 74.5314, -69.4419, 0.81 ) }
    dend_43 { pt3dadd( 101.398, 75.9731, -69.8346, 0.59 ) }
    dend_43 { pt3dadd( 101.985, 76.9101, -70.1351, 0.66 ) }
    dend_43 { pt3dadd( 102.738, 78.1133, -70.5235, 0.59 ) }
    dend_43 { pt3dadd( 103.484, 79.3963, -70.9122, 0.59 ) }
    dend_43 { pt3dadd( 104.01, 80.3976, -71.1749, 0.66 ) }
    dend_43 { pt3dadd( 104.554, 81.5315, -71.4601, 0.52 ) }
    dend_43 { pt3dadd( 105.313, 83.2522, -71.8415, 0.81 ) }
    dend_43 { pt3dadd( 110.858, 87.031, -79.3019, 0.81 ) }
    dend_43 { pt3dadd( 115.469, 90.4788, -87.513, 0.81 ) }
    dend_43 { pt3dadd( 119.189, 93.3307, -96.3687, 0.81 ) }
    dend_43 { pt3dadd( 121.259, 97.1734, -105.405, 0.81 ) }
    dend_43 { pt3dadd( 123.608, 102.793, -113.432, 0.81 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 55/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 40.476, 30.1464, 31.9492, 0.81 ) }
    dend_40 { pt3dadd( 40.1027, 30.9922, 31.8265, 0.81 ) }
    dend_40 { pt3dadd( 39.6675, 32.033, 31.7168, 0.74 ) }
    dend_40 { pt3dadd( 39.2656, 33.0059, 31.7133, 0.59 ) }
    dend_40 { pt3dadd( 38.6901, 34.4616, 31.776, 0.37 ) }
    dend_40 { pt3dadd( 38.2831, 35.5958, 31.892, 0.44 ) }
    dend_40 { pt3dadd( 37.9282, 36.6912, 32.0372, 0.44 ) }
    dend_40 { pt3dadd( 37.6096, 37.8168, 32.2355, 0.74 ) }
    dend_40 { pt3dadd( 37.1684, 39.6135, 32.6193, 0.44 ) }
    dend_40 { pt3dadd( 37.0116, 40.4785, 32.8258, 0.52 ) }
    dend_40 { pt3dadd( 36.8658, 41.8201, 33.1693, 0.66 ) }
    dend_40 { pt3dadd( 36.8292, 42.5632, 33.3383, 0.44 ) }
    dend_40 { pt3dadd( 36.8157, 43.5422, 33.5162, 0.44 ) }
    dend_40 { pt3dadd( 36.8329, 44.4729, 33.6414, 0.37 ) }
    dend_40 { pt3dadd( 36.904, 45.7689, 33.7265, 0.37 ) }
    dend_40 { pt3dadd( 36.977, 46.82, 33.7653, 0.44 ) }
    dend_40 { pt3dadd( 37.045, 47.6082, 33.7719, 0.22 ) }
    dend_40 { pt3dadd( 37.1217, 48.3176, 33.7828, 0.22 ) }
    dend_40 { pt3dadd( 37.2312, 49.2255, 33.8023, 0.29 ) }
    dend_40 { pt3dadd( 37.3498, 50.2059, 33.8025, 0.74 ) }
    dend_40 { pt3dadd( 37.4571, 51.1523, 33.7827, 0.59 ) }
    dend_40 { pt3dadd( 37.5553, 52.0513, 33.7472, 0.44 ) }
    dend_40 { pt3dadd( 37.6661, 52.8698, 33.6417, 0.22 ) }
    dend_40 { pt3dadd( 37.7847, 53.5193, 33.5129, 0.22 ) }
    dend_40 { pt3dadd( 37.9666, 54.359, 33.3447, 0.22 ) }
    dend_40 { pt3dadd( 38.1568, 55.1348, 33.1943, 0.37 ) }
    dend_40 { pt3dadd( 38.295, 55.6413, 33.0779, 0.37 ) }
    dend_40 { pt3dadd( 38.8042, 57.4507, 32.6322, 0.74 ) }
    dend_40 { pt3dadd( 39.1382, 58.6416, 32.3144, 0.22 ) }
    dend_40 { pt3dadd( 39.493, 59.9587, 31.966, 0.22 ) }
    dend_40 { pt3dadd( 39.7307, 60.9454, 31.7015, 0.44 ) }
    dend_40 { pt3dadd( 39.9507, 62.1521, 31.2996, 0.29 ) }
    dend_40 { pt3dadd( 40.0455, 62.8653, 30.9788, 0.66 ) }
    dend_40 { pt3dadd( 40.1076, 63.6679, 30.5588, 0.66 ) }
    dend_40 { pt3dadd( 40.1168, 64.4492, 30.0995, 0.88 ) }
    dend_40 { pt3dadd( 40.0927, 65.3374, 29.5664, 0.88 ) }
    dend_40 { pt3dadd( 40.0574, 67.0275, 28.6323, 0.59 ) }
    dend_40 { pt3dadd( 40.1017, 68.6529, 27.8607, 0.44 ) }
    dend_40 { pt3dadd( 40.1743, 69.6243, 27.4309, 0.44 ) }
    dend_40 { pt3dadd( 40.3213, 71.0407, 26.884, 0.52 ) }
    dend_40 { pt3dadd( 40.4542, 72.0888, 26.4925, 0.59 ) }
    dend_40 { pt3dadd( 40.6668, 73.5372, 25.9653, 0.44 ) }
    dend_40 { pt3dadd( 40.8877, 74.8684, 25.5129, 0.22 ) }
    dend_40 { pt3dadd( 41.0674, 75.9309, 25.1261, 0.44 ) }
    dend_40 { pt3dadd( 41.2316, 76.901, 24.7216, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_40 { pt3dadd( 41.4802, 78.41, 24.0562, 1.11 ) }
    dend_40 { pt3dadd( 41.6668, 79.8516, 23.4173, 0.96 ) }
    dend_40 { pt3dadd( 41.737, 80.6758, 23.0667, 0.96 ) }
    dend_40 { pt3dadd( 41.836, 82.4955, 22.3528, 0.59 ) }
    dend_40 { pt3dadd( 41.8756, 83.6419, 21.9786, 0.37 ) }
    dend_40 { pt3dadd( 41.9114, 84.961, 21.6788, 0.22 ) }
    dend_40 { pt3dadd( 41.9069, 85.8064, 21.5956, 0.66 ) }
    dend_40 { pt3dadd( 41.8855, 86.5534, 21.5586, 0.74 ) }
    dend_40 { pt3dadd( 41.8602, 87.3823, 21.5199, 0.52 ) }
    dend_40 { pt3dadd( 41.8254, 88.5576, 21.4412, 0.59 ) }
    dend_40 { pt3dadd( 41.8004, 90.1287, 21.2544, 0.66 ) }
    dend_40 { pt3dadd( 41.7993, 91.4992, 21.0423, 0.29 ) }
    dend_40 { pt3dadd( 41.8058, 93.112, 20.7612, 0.29 ) }
    dend_40 { pt3dadd( 41.8229, 94.2779, 20.5092, 0.37 ) }
    dend_40 { pt3dadd( 41.8769, 95.8465, 20.1214, 0.44 ) }
    dend_40 { pt3dadd( 41.9444, 97.0781, 19.7517, 0.52 ) }
    dend_40 { pt3dadd( 42.0095, 98.2821, 19.3237, 0.66 ) }
    dend_40 { pt3dadd( 42.0784, 99.3867, 18.9361, 0.66 ) }
    dend_40 { pt3dadd( 42.1322, 100.506, 18.5499, 0.66 ) }
    dend_40 { pt3dadd( 42.1687, 101.538, 18.1808, 0.96 ) }
    dend_40 { pt3dadd( 42.2606, 103.44, 17.4612, 0.44 ) }
    dend_40 { pt3dadd( 42.3362, 104.547, 16.9919, 0.44 ) }
    dend_40 { pt3dadd( 42.4428, 105.558, 16.5157, 0.59 ) }
    dend_40 { pt3dadd( 42.6657, 107.042, 15.7529, 0.22 ) }
    dend_40 { pt3dadd( 42.7898, 107.728, 15.3965, 0.22 ) }
    dend_40 { pt3dadd( 42.9054, 108.29, 15.0963, 0.22 ) }
    dend_40 { pt3dadd( 42.9967, 108.652, 14.9105, 0.22 ) }
    dend_40 { pt3dadd( 43.1745, 109.298, 14.5967, 0.22 ) }
    dend_40 { pt3dadd( 43.3104, 109.813, 14.3466, 0.22 ) }
    dend_40 { pt3dadd( 43.476, 110.491, 14.0259, 0.66 ) }
    dend_40 { pt3dadd( 43.6827, 111.458, 13.5623, 0.66 ) }
    dend_40 { pt3dadd( 43.8574, 112.508, 13.0874, 0.66 ) }
    dend_40 { pt3dadd( 43.9474, 113.203, 12.7968, 0.37 ) }
    dend_40 { pt3dadd( 44.0498, 114.325, 12.346, 0.22 ) }
    dend_40 { pt3dadd( 44.1367, 115.545, 11.9648, 0.44 ) }
    dend_40 { pt3dadd( 44.1861, 116.403, 11.7929, 0.44 ) }
    dend_40 { pt3dadd( 44.2551, 117.391, 11.7539, 0.44 ) }
    dend_40 { pt3dadd( 44.3479, 118.662, 12.0345, 0.22 ) }
    dend_40 { pt3dadd( 44.4399, 119.863, 12.4238, 0.29 ) }
    dend_40 { pt3dadd( 44.5892, 121.96, 13.162, 0.44 ) }
    dend_40 { pt3dadd( 44.6808, 123.346, 13.5958, 0.66 ) }
    dend_40 { pt3dadd( 44.7809, 124.723, 13.8606, 0.66 ) }
    dend_40 { pt3dadd( 44.98, 126.931, 13.898, 0.29 ) }
    dend_40 { pt3dadd( 45.1889, 128.87, 13.4805, 0.37 ) }
    dend_40 { pt3dadd( 45.3439, 130.455, 12.7624, 0.52 ) }
    dend_40 { pt3dadd( 45.4142, 131.778, 11.8571, 0.74 ) }
    dend_40 { pt3dadd( 45.4468, 133.185, 10.6843, 0.74 ) }
    dend_40 { pt3dadd( 45.4599, 134.106, 9.83819, 0.74 ) }
    dend_40 { pt3dadd( 45.4861, 135.517, 8.46463, 0.52 ) }
    dend_40 { pt3dadd( 45.5176, 136.749, 7.36928, 0.59 ) }
    dend_40 { pt3dadd( 45.5536, 138.715, 5.77328, 0.22 ) }
    dend_40 { pt3dadd( 45.5659, 139.535, 5.14849, 0.22 ) }
    dend_40 { pt3dadd( 45.5713, 140.495, 4.46239, 0.59 ) }
    dend_40 { pt3dadd( 45.5619, 141.886, 3.45862, 0.96 ) }
    dend_40 { pt3dadd( 45.5533, 143.32, 2.49903, 0.37 ) }
    dend_40 { pt3dadd( 45.5798, 144.391, 1.83234, 0.44 ) }
    dend_40 { pt3dadd( 45.6605, 145.821, 0.982871, 0.44 ) }
    dend_40 { pt3dadd( 45.752, 147.036, 0.267507, 0.44 ) }
    dend_40 { pt3dadd( 45.8548, 148.004, -0.310697, 0.44 ) }
    dend_40 { pt3dadd( 46.0844, 149.452, -1.16997, 0.22 ) }
    dend_40 { pt3dadd( 46.3971, 151.013, -2.11166, 0.22 ) }
    dend_40 { pt3dadd( 46.5232, 151.525, -2.41007, 0.22 ) }
    dend_40 { pt3dadd( 46.7675, 152.428, -2.88624, 0.59 ) }
    dend_40 { pt3dadd( 47.2287, 154.047, -3.64889, 0.29 ) }
    dend_40 { pt3dadd( 47.5199, 155.176, -4.13647, 0.29 ) }
    dend_40 { pt3dadd( 47.767, 156.414, -4.64773, 0.52 ) }
    dend_40 { pt3dadd( 47.9104, 157.537, -5.06458, 0.88 ) }
    dend_40 { pt3dadd( 47.972, 158.375, -5.36483, 0.88 ) }
    dend_40 { pt3dadd( 48.0222, 159.522, -5.74226, 0.59 ) }
    dend_40 { pt3dadd( 48.1011, 161.013, -6.16551, 0.22 ) }
    dend_40 { pt3dadd( 48.1789, 161.783, -6.38407, 0.29 ) }
    dend_40 { pt3dadd( 48.2904, 162.436, -6.58449, 0.29 ) }
    dend_40 { pt3dadd( 48.4706, 163.193, -6.82063, 0.81 ) }
    dend_40 { pt3dadd( 48.7798, 164.206, -7.13973, 0.88 ) }
    dend_40 { pt3dadd( 49.1143, 165.107, -7.40555, 0.59 ) }
    dend_40 { pt3dadd( 49.5918, 166.267, -7.7448, 0.59 ) }
    dend_40 { pt3dadd( 50.1458, 167.625, -8.13947, 0.29 ) }
    dend_40 { pt3dadd( 50.8283, 169.406, -8.67422, 0.52 ) }
    dend_40 { pt3dadd( 51.2097, 170.522, -9.06599, 0.59 ) }
    dend_40 { pt3dadd( 51.5262, 171.695, -9.53841, 0.59 ) }
    dend_40 { pt3dadd( 51.7058, 172.566, -9.93396, 0.74 ) }
    dend_40 { pt3dadd( 51.8014, 173.185, -10.2658, 0.74 ) }
    dend_40 { pt3dadd( 51.9288, 174.338, -10.9911, 0.66 ) }
    dend_40 { pt3dadd( 52.0025, 175.407, -11.7479, 0.66 ) }
    dend_40 { pt3dadd( 52.0463, 176.391, -12.4452, 0.74 ) }
    dend_40 { pt3dadd( 52.1062, 177.731, -13.2645, 0.52 ) }
    dend_40 { pt3dadd( 52.1716, 178.665, -13.6618, 0.59 ) }
    dend_40 { pt3dadd( 52.2848, 179.695, -13.8622, 0.44 ) }
    dend_40 { pt3dadd( 52.4298, 180.738, -13.9315, 0.59 ) }
    dend_40 { pt3dadd( 52.5536, 181.558, -13.9537, 0.37 ) }
    dend_40 { pt3dadd( 52.7667, 183.448, -14.0832, 0.74 ) }
    dend_40 { pt3dadd( 52.7775, 184.676, -14.3167, 1.03 ) }
    dend_40 { pt3dadd( 52.6521, 186.07, -14.8396, 0.44 ) }
    dend_40 { pt3dadd( 52.2594, 188.136, -16.2369, 0.59 ) }
    dend_40 { pt3dadd( 52.027, 189.179, -17.1545, 1.18 ) }
    dend_40 { pt3dadd( 51.7108, 190.466, -18.439, 0.37 ) }
    dend_40 { pt3dadd( 51.3513, 191.696, -19.8115, 0.37 ) }
    dend_40 { pt3dadd( 51.0308, 192.629, -20.9375, 0.81 ) }
    dend_40 { pt3dadd( 50.5078, 194.134, -22.7643, 0.81 ) }
    dend_40 { pt3dadd( 50.2052, 195.101, -23.8198, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_40 { pt3dadd( 49.9539, 196.184, -24.8877, 0.37 ) }
    dend_40 { pt3dadd( 49.7891, 197.471, -25.9943, 0.37 ) }
    dend_40 { pt3dadd( 49.6899, 199.067, -27.1572, 0.37 ) }
    dend_40 { pt3dadd( 49.6776, 200.002, -27.6964, 0.52 ) }
    dend_40 { pt3dadd( 49.6813, 201.048, -28.1374, 0.44 ) }
    dend_40 { pt3dadd( 49.694, 202.179, -28.593, 0.66 ) }
    dend_40 { pt3dadd( 49.7524, 203.203, -29.0307, 0.81 ) }
    dend_40 { pt3dadd( 49.8128, 203.902, -29.3241, 0.81 ) }
    dend_40 { pt3dadd( 49.8796, 204.673, -29.6543, 0.74 ) }
    dend_40 { pt3dadd( 49.9783, 206.388, -30.4249, 0.66 ) }
    dend_40 { pt3dadd( 50.052, 208.206, -31.2631, 0.44 ) }
    dend_40 { pt3dadd( 50.081, 209.697, -31.9381, 0.44 ) }
    dend_40 { pt3dadd( 50.0986, 210.87, -32.4412, 1.03 ) }
    dend_40 { pt3dadd( 50.1107, 211.74, -32.7172, 0.66 ) }
    dend_40 { pt3dadd( 50.1125, 212.879, -32.8865, 0.52 ) }
    dend_40 { pt3dadd( 50.1195, 213.487, -32.9027, 0.74 ) }
    dend_40 { pt3dadd( 50.1091, 214.317, -32.9197, 0.96 ) }
    dend_40 { pt3dadd( 50.1038, 214.789, -32.9571, 0.96 ) }
    dend_40 { pt3dadd( 50.0891, 216.875, -33.4184, 0.66 ) }
    dend_40 { pt3dadd( 50.0687, 218.634, -34.0872, 0.66 ) }
    dend_40 { pt3dadd( 50.0106, 220.19, -34.9199, 0.44 ) }
    dend_40 { pt3dadd( 49.8578, 221.983, -36.1399, 0.96 ) }
    dend_40 { pt3dadd( 49.6753, 223.143, -37.1127, 0.52 ) }
    dend_40 { pt3dadd( 49.3639, 224.263, -38.2597, 0.52 ) }
    dend_40 { pt3dadd( 49.0312, 225.289, -39.5092, 0.52 ) }
    dend_40 { pt3dadd( 48.71, 226.024, -40.5319, 0.44 ) }
    dend_40 { pt3dadd( 48.3066, 226.688, -41.5002, 0.44 ) }
    dend_40 { pt3dadd( 47.862, 227.204, -42.3248, 0.96 ) }
    dend_40 { pt3dadd( 46.9013, 227.954, -43.7516, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 29/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 53.2949, -71.7363, 64.7247, 0.37 ) }
    dend_38 { pt3dadd( 53.4605, -73.1176, 66.4266, 0.37 ) }
    dend_38 { pt3dadd( 53.8152, -74.6609, 68.0652, 0.37 ) }
    dend_38 { pt3dadd( 54.0365, -75.4418, 68.8811, 0.59 ) }
    dend_38 { pt3dadd( 54.4217, -76.6865, 70.1345, 0.44 ) }
    dend_38 { pt3dadd( 54.6287, -77.2931, 70.8145, 0.66 ) }
    dend_38 { pt3dadd( 54.9122, -78.0743, 71.8404, 0.44 ) }
    dend_38 { pt3dadd( 55.3499, -79.1512, 73.2946, 0.44 ) }
    dend_38 { pt3dadd( 55.7144, -79.9397, 74.3816, 0.44 ) }
    dend_38 { pt3dadd( 55.976, -80.444, 75.1002, 0.81 ) }
    dend_38 { pt3dadd( 56.8353, -82.0041, 77.3013, 0.81 ) }
    dend_38 { pt3dadd( 57.6452, -83.4689, 79.3534, 0.81 ) }
    dend_38 { pt3dadd( 57.9102, -83.9514, 80.0084, 0.81 ) }
    dend_38 { pt3dadd( 58.2998, -84.6552, 80.8617, 0.44 ) }
    dend_38 { pt3dadd( 58.6824, -85.3654, 81.5784, 0.44 ) }
    dend_38 { pt3dadd( 59.3103, -86.6342, 82.6884, 0.44 ) }
    dend_38 { pt3dadd( 59.6242, -87.3419, 83.2047, 0.66 ) }
    dend_38 { pt3dadd( 59.8439, -87.9049, 83.5912, 0.66 ) }
    dend_38 { pt3dadd( 60.2941, -89.2515, 84.6388, 0.52 ) }
    dend_38 { pt3dadd( 60.6339, -90.5645, 85.7512, 0.66 ) }
    dend_38 { pt3dadd( 60.975, -92.341, 87.2623, 0.29 ) }
    dend_38 { pt3dadd( 61.0745, -93.0773, 87.8938, 0.29 ) }
    dend_38 { pt3dadd( 61.1858, -94.2692, 88.8995, 0.22 ) }
    dend_38 { pt3dadd( 61.2905, -96.1189, 90.3858, 0.22 ) }
    dend_38 { pt3dadd( 61.3256, -97.383, 91.3658, 0.22 ) }
    dend_38 { pt3dadd( 61.3335, -98.5335, 92.2158, 0.37 ) }
    dend_38 { pt3dadd( 61.328, -100.204, 93.3761, 0.74 ) }
    dend_38 { pt3dadd( 61.3333, -101.161, 93.979, 0.88 ) }
    dend_38 { pt3dadd( 61.3493, -102.218, 94.5828, 0.22 ) }
    dend_38 { pt3dadd( 61.3599, -104.037, 95.4086, 0.22 ) }
    dend_38 { pt3dadd( 61.3642, -104.742, 95.6905, 0.22 ) }
    dend_38 { pt3dadd( 61.3744, -105.838, 95.999, 0.22 ) }
    dend_38 { pt3dadd( 61.4124, -107.574, 96.2664, 0.15 ) }
    dend_38 { pt3dadd( 61.4815, -108.874, 96.3727, 0.15 ) }
    dend_38 { pt3dadd( 61.6722, -111.285, 96.5101, 0.22 ) }
    dend_38 { pt3dadd( 61.8317, -112.943, 96.5709, 0.22 ) }
    dend_38 { pt3dadd( 62.1237, -115.924, 96.7594, 0.15 ) }
    dend_38 { pt3dadd( 62.3182, -118.427, 96.9588, 0.15 ) }
    dend_38 { pt3dadd( 62.4432, -120.828, 97.2483, 0.22 ) }
    dend_38 { pt3dadd( 62.5154, -122.936, 97.6112, 0.22 ) }
    dend_38 { pt3dadd( 62.5532, -124.685, 98.012, 0.22 ) }
    dend_38 { pt3dadd( 62.5568, -126.727, 98.5705, 0.22 ) }
    dend_38 { pt3dadd( 62.5276, -129.395, 99.5033, 0.22 ) }
    dend_38 { pt3dadd( 62.4893, -132.109, 100.51, 0.22 ) }
    dend_38 { pt3dadd( 62.4691, -133.749, 101.141, 0.22 ) }
    dend_38 { pt3dadd( 62.4766, -134.893, 101.553, 0.52 ) }
    dend_38 { pt3dadd( 62.5303, -136.287, 102.039, 0.59 ) }
    dend_38 { pt3dadd( 62.6843, -137.928, 102.586, 0.22 ) }
    dend_38 { pt3dadd( 62.8486, -139.038, 102.948, 0.15 ) }
    dend_38 { pt3dadd( 63.0711, -140.467, 103.449, 0.15 ) }
    dend_38 { pt3dadd( 63.2192, -142.0, 103.854, 0.22 ) }
    dend_38 { pt3dadd( 63.2155, -143.104, 104.091, 0.37 ) }
    dend_38 { pt3dadd( 63.1423, -144.642, 104.395, 0.37 ) }
    dend_38 { pt3dadd( 62.9756, -146.291, 104.649, 0.15 ) }
    dend_38 { pt3dadd( 62.5877, -148.873, 104.992, 0.15 ) }
    dend_38 { pt3dadd( 61.8052, -152.859, 105.298, 0.15 ) }
    dend_38 { pt3dadd( 61.3224, -154.702, 105.382, 0.15 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 86/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 53.2949, -71.7363, 64.7247, 0.29 ) }
    dend_37 { pt3dadd( 53.6684, -72.496, 64.0351, 0.29 ) }
    dend_37 { pt3dadd( 54.3298, -73.723, 62.8402, 0.37 ) }
    dend_37 { pt3dadd( 54.7358, -74.4561, 62.1235, 0.37 ) }
    dend_37 { pt3dadd( 55.2971, -75.4088, 61.2101, 0.22 ) }
    dend_37 { pt3dadd( 55.9587, -76.4321, 60.235, 0.22 ) }
    dend_37 { pt3dadd( 56.3438, -76.9961, 59.7203, 0.52 ) }
    dend_37 { pt3dadd( 57.1296, -78.1919, 58.6827, 0.29 ) }
    dend_37 { pt3dadd( 57.4956, -78.7545, 58.2278, 0.44 ) }
    dend_37 { pt3dadd( 57.856, -79.3398, 57.7768, 0.66 ) }
    dend_37 { pt3dadd( 58.3231, -80.1815, 57.1635, 0.37 ) }
    dend_37 { pt3dadd( 58.7012, -81.0348, 56.6128, 0.29 ) }
    dend_37 { pt3dadd( 59.0429, -82.0808, 55.9638, 0.29 ) }
    dend_37 { pt3dadd( 59.2762, -83.039, 55.4043, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( 59.5079, -84.0993, 54.8053, 0.66 ) }
    dend_37 { pt3dadd( 59.7031, -85.1766, 54.2174, 0.66 ) }
    dend_37 { pt3dadd( 59.8708, -86.2555, 53.6605, 0.52 ) }
    dend_37 { pt3dadd( 60.1233, -87.8443, 52.8742, 0.37 ) }
    dend_37 { pt3dadd( 60.3475, -88.9384, 52.3683, 0.66 ) }
    dend_37 { pt3dadd( 60.6443, -90.068, 51.8438, 0.22 ) }
    dend_37 { pt3dadd( 60.8829, -90.7607, 51.4805, 0.22 ) }
    dend_37 { pt3dadd( 61.177, -91.4431, 51.0804, 0.59 ) }
    dend_37 { pt3dadd( 61.5717, -92.1971, 50.6025, 0.81 ) }
    dend_37 { pt3dadd( 62.2093, -93.219, 49.9019, 0.52 ) }
    dend_37 { pt3dadd( 63.04, -94.4092, 49.0232, 0.66 ) }
    dend_37 { pt3dadd( 63.847, -95.4948, 48.1965, 0.44 ) }
    dend_37 { pt3dadd( 64.7258, -96.6371, 47.3793, 0.37 ) }
    dend_37 { pt3dadd( 65.1469, -97.2017, 46.994, 0.37 ) }
    dend_37 { pt3dadd( 65.5989, -97.8379, 46.5913, 0.37 ) }
    dend_37 { pt3dadd( 66.3672, -99.0005, 45.9519, 0.66 ) }
    dend_37 { pt3dadd( 66.8299, -99.7405, 45.6137, 1.11 ) }
    dend_37 { pt3dadd( 67.4947, -100.873, 45.1212, 0.66 ) }
    dend_37 { pt3dadd( 68.1498, -102.044, 44.5482, 0.44 ) }
    dend_37 { pt3dadd( 68.681, -103.066, 43.9419, 0.44 ) }
    dend_37 { pt3dadd( 69.1348, -103.959, 43.3428, 0.59 ) }
    dend_37 { pt3dadd( 69.5205, -104.696, 42.7945, 0.52 ) }
    dend_37 { pt3dadd( 70.14, -105.801, 41.8596, 0.29 ) }
    dend_37 { pt3dadd( 70.7252, -106.759, 40.9293, 0.81 ) }
    dend_37 { pt3dadd( 71.4134, -107.786, 39.8359, 0.22 ) }
    dend_37 { pt3dadd( 71.6604, -108.132, 39.4384, 0.22 ) }
    dend_37 { pt3dadd( 71.8537, -108.381, 39.1383, 0.29 ) }
    dend_37 { pt3dadd( 72.4575, -109.003, 38.3754, 0.52 ) }
    dend_37 { pt3dadd( 73.1591, -109.567, 37.7121, 0.22 ) }
    dend_37 { pt3dadd( 73.9021, -110.051, 37.19, 0.52 ) }
    dend_37 { pt3dadd( 74.4532, -110.349, 36.8905, 0.52 ) }
    dend_37 { pt3dadd( 75.0772, -110.648, 36.6434, 0.29 ) }
    dend_37 { pt3dadd( 76.4734, -111.217, 36.3075, 0.22 ) }
    dend_37 { pt3dadd( 77.3285, -111.517, 36.2354, 0.29 ) }
    dend_37 { pt3dadd( 78.0318, -111.756, 36.249, 0.52 ) }
    dend_37 { pt3dadd( 78.7277, -112.005, 36.3155, 0.66 ) }
    dend_37 { pt3dadd( 80.1838, -112.537, 36.5118, 0.44 ) }
    dend_37 { pt3dadd( 81.3029, -112.982, 36.7024, 0.44 ) }
    dend_37 { pt3dadd( 82.3461, -113.438, 36.8902, 0.44 ) }
    dend_37 { pt3dadd( 83.2998, -113.864, 37.0407, 0.52 ) }
    dend_37 { pt3dadd( 84.1434, -114.247, 37.1078, 0.66 ) }
    dend_37 { pt3dadd( 84.8849, -114.589, 37.1008, 0.66 ) }
    dend_37 { pt3dadd( 85.8897, -115.022, 36.9772, 0.37 ) }
    dend_37 { pt3dadd( 86.6367, -115.309, 36.8544, 0.37 ) }
    dend_37 { pt3dadd( 87.2652, -115.513, 36.6987, 0.74 ) }
    dend_37 { pt3dadd( 88.0734, -115.735, 36.4587, 1.03 ) }
    dend_37 { pt3dadd( 89.0305, -115.987, 36.1479, 0.29 ) }
    dend_37 { pt3dadd( 90.0809, -116.261, 35.7945, 0.22 ) }
    dend_37 { pt3dadd( 91.1945, -116.531, 35.4292, 0.22 ) }
    dend_37 { pt3dadd( 92.4142, -116.846, 35.056, 0.22 ) }
    dend_37 { pt3dadd( 93.4045, -117.125, 34.8218, 0.29 ) }
    dend_37 { pt3dadd( 94.2062, -117.381, 34.7043, 0.44 ) }
    dend_37 { pt3dadd( 94.9748, -117.649, 34.6578, 0.44 ) }
    dend_37 { pt3dadd( 95.7333, -117.949, 34.7024, 0.81 ) }
    dend_37 { pt3dadd( 96.1601, -118.134, 34.7807, 0.88 ) }
    dend_37 { pt3dadd( 97.3566, -118.717, 35.1522, 0.22 ) }
    dend_37 { pt3dadd( 98.0842, -119.136, 35.5003, 0.15 ) }
    dend_37 { pt3dadd( 98.8615, -119.625, 36.0024, 0.15 ) }
    dend_37 { pt3dadd( 99.7212, -120.198, 36.6459, 0.15 ) }
    dend_37 { pt3dadd( 100.154, -120.504, 36.9872, 0.37 ) }
    dend_37 { pt3dadd( 100.723, -120.927, 37.4259, 0.81 ) }
    dend_37 { pt3dadd( 102.035, -121.993, 38.3876, 0.52 ) }
    dend_37 { pt3dadd( 102.87, -122.798, 38.9969, 0.66 ) }
    dend_37 { pt3dadd( 103.276, -123.277, 39.2701, 0.52 ) }
    dend_37 { pt3dadd( 103.752, -123.937, 39.5243, 0.22 ) }
    dend_37 { pt3dadd( 104.319, -124.842, 39.8237, 0.22 ) }
    dend_37 { pt3dadd( 104.7, -125.535, 40.0101, 0.44 ) }
    dend_37 { pt3dadd( 105.338, -126.875, 40.3228, 0.44 ) }
    dend_37 { pt3dadd( 105.767, -127.973, 40.5898, 0.44 ) }
    dend_37 { pt3dadd( 106.099, -129.001, 40.8762, 0.44 ) }
    dend_37 { pt3dadd( 106.551, -130.477, 41.4377, 0.29 ) }
    dend_37 { pt3dadd( 106.711, -130.979, 41.6676, 0.66 ) }
    dend_37 { pt3dadd( 107.096, -132.057, 42.2285, 0.66 ) }
    dend_37 { pt3dadd( 107.54, -133.155, 42.8581, 0.66 ) }
    dend_37 { pt3dadd( 107.869, -133.897, 43.3024, 1.03 ) }
    dend_37 { pt3dadd( 108.66, -135.484, 44.2356, 0.29 ) }
    dend_37 { pt3dadd( 109.17, -136.406, 44.7298, 0.15 ) }
    dend_37 { pt3dadd( 109.37, -136.727, 44.918, 0.15 ) }
    dend_37 { pt3dadd( 109.682, -137.149, 45.2143, 0.15 ) }
    dend_37 { pt3dadd( 110.087, -137.582, 45.6241, 0.59 ) }
    dend_37 { pt3dadd( 110.339, -137.814, 45.8888, 0.81 ) }
    dend_37 { pt3dadd( 111.194, -138.56, 46.7811, 0.29 ) }
    dend_37 { pt3dadd( 112.005, -139.251, 47.6833, 0.44 ) }
    dend_37 { pt3dadd( 113.066, -140.153, 48.8636, 0.22 ) }
    dend_37 { pt3dadd( 114.066, -140.989, 49.9492, 0.22 ) }
    dend_37 { pt3dadd( 114.821, -141.654, 50.8047, 0.22 ) }
    dend_37 { pt3dadd( 115.585, -142.374, 51.6724, 0.29 ) }
    dend_37 { pt3dadd( 116.247, -143.032, 52.3892, 0.59 ) }
    dend_37 { pt3dadd( 116.702, -143.555, 52.8815, 1.03 ) }
    dend_37 { pt3dadd( 116.965, -143.921, 53.1655, 1.03 ) }
    dend_37 { pt3dadd( 118.087, -145.723, 54.4766, 0.15 ) }
    dend_37 { pt3dadd( 118.532, -146.487, 55.0153, 0.15 ) }
    dend_37 { pt3dadd( 118.868, -147.089, 55.4165, 0.22 ) }
    dend_37 { pt3dadd( 119.518, -148.235, 56.0974, 0.74 ) }
    dend_37 { pt3dadd( 119.985, -149.014, 56.5213, 0.96 ) }
    dend_37 { pt3dadd( 120.872, -150.381, 57.1297, 0.22 ) }
    dend_37 { pt3dadd( 121.451, -151.189, 57.3478, 0.22 ) }
    dend_37 { pt3dadd( 122.243, -152.212, 57.5169, 0.37 ) }
    dend_37 { pt3dadd( 123.073, -153.181, 57.5635, 0.15 ) }
    dend_37 { pt3dadd( 123.665, -153.816, 57.4819, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_37 { pt3dadd( 124.43, -154.617, 57.2836, 0.15 ) }
    dend_37 { pt3dadd( 125.246, -155.485, 56.9695, 0.66 ) }
    dend_37 { pt3dadd( 126.164, -156.433, 56.5879, 0.22 ) }
    dend_37 { pt3dadd( 126.953, -157.227, 56.2583, 0.22 ) }
    dend_37 { pt3dadd( 127.792, -158.112, 55.9572, 0.29 ) }
    dend_37 { pt3dadd( 128.293, -158.685, 55.8229, 0.15 ) }
    dend_37 { pt3dadd( 128.705, -159.181, 55.767, 0.52 ) }
    dend_37 { pt3dadd( 129.137, -159.738, 55.8182, 0.59 ) }
    dend_37 { pt3dadd( 129.883, -160.783, 56.161, 0.22 ) }
    dend_37 { pt3dadd( 130.518, -161.675, 56.6698, 0.88 ) }
    dend_37 { pt3dadd( 130.973, -162.251, 57.1816, 0.88 ) }
    dend_37 { pt3dadd( 131.365, -162.701, 57.722, 0.59 ) }
    dend_37 { pt3dadd( 132.273, -163.667, 59.1595, 0.15 ) }
    dend_37 { pt3dadd( 132.968, -164.354, 60.4288, 0.22 ) }
    dend_37 { pt3dadd( 133.374, -164.703, 61.2585, 0.22 ) }
    dend_37 { pt3dadd( 134.045, -165.185, 62.7594, 0.15 ) }
    dend_37 { pt3dadd( 134.491, -165.465, 63.8, 0.15 ) }
    dend_37 { pt3dadd( 134.756, -165.61, 64.4392, 0.44 ) }
    dend_37 { pt3dadd( 135.354, -165.877, 65.8592, 0.74 ) }
    dend_37 { pt3dadd( 135.854, -166.096, 67.0562, 0.74 ) }
    dend_37 { pt3dadd( 136.416, -166.387, 68.5565, 0.74 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -54.1209, 55.6868, 34.6248, 1.18 ) }
    dend_24 { pt3dadd( -56.3819, 57.5645, 35.3835, 1.18 ) }
    dend_24 { pt3dadd( -57.6547, 58.5334, 35.6922, 1.03 ) }
    dend_24 { pt3dadd( -58.764, 59.3153, 35.8428, 1.4 ) }
    dend_24 { pt3dadd( -60.2076, 60.2851, 36.0469, 1.03 ) }
    dend_24 { pt3dadd( -61.1527, 60.8942, 36.2168, 0.88 ) }
    dend_24 { pt3dadd( -62.6422, 61.8241, 36.5222, 0.59 ) }
    dend_24 { pt3dadd( -64.176, 62.7095, 36.7705, 0.29 ) }
    dend_24 { pt3dadd( -65.5272, 63.4059, 37.034, 0.37 ) }
    dend_24 { pt3dadd( -67.0369, 64.1205, 37.3937, 0.74 ) }
    dend_24 { pt3dadd( -68.421, 64.74, 37.7957, 1.4 ) }
    dend_24 { pt3dadd( -70.2427, 65.5546, 38.4175, 0.88 ) }
    dend_24 { pt3dadd( -71.3039, 66.0451, 38.8879, 0.88 ) }
    dend_24 { pt3dadd( -72.0144, 66.4044, 39.2709, 0.88 ) }
    dend_24 { pt3dadd( -72.9276, 66.8803, 39.8225, 0.59 ) }
    dend_24 { pt3dadd( -74.0415, 67.4468, 40.5128, 0.44 ) }
    dend_24 { pt3dadd( -74.9597, 67.8816, 41.1424, 0.29 ) }
    dend_24 { pt3dadd( -76.5759, 68.6114, 42.4015, 0.52 ) }
    dend_24 { pt3dadd( -77.6399, 69.0782, 43.3096, 0.74 ) }
    dend_24 { pt3dadd( -78.678, 69.5048, 44.2677, 1.03 ) }
    dend_24 { pt3dadd( -79.9481, 69.9739, 45.4638, 0.59 ) }
    dend_24 { pt3dadd( -81.198, 70.4003, 46.6344, 0.22 ) }
    dend_24 { pt3dadd( -82.2808, 70.7286, 47.617, 0.22 ) }
    dend_24 { pt3dadd( -83.5515, 71.0783, 48.7615, 0.22 ) }
    dend_24 { pt3dadd( -84.7422, 71.4119, 49.9112, 0.37 ) }
    dend_24 { pt3dadd( -85.3286, 71.5808, 50.4886, 0.52 ) }
    dend_24 { pt3dadd( -86.4733, 71.9274, 51.5738, 1.33 ) }
    dend_24 { pt3dadd( -87.8395, 72.3622, 52.8047, 0.29 ) }
    dend_24 { pt3dadd( -89.5186, 72.8694, 54.184, 0.37 ) }
    dend_24 { pt3dadd( -91.0267, 73.3047, 55.2914, 0.37 ) }
    dend_24 { pt3dadd( -91.9453, 73.5476, 55.8831, 0.37 ) }
    dend_24 { pt3dadd( -93.0785, 73.7938, 56.5144, 0.66 ) }
    dend_24 { pt3dadd( -93.7441, 73.9098, 56.8242, 0.66 ) }
    dend_24 { pt3dadd( -95.0466, 74.1245, 57.3029, 0.44 ) }
    dend_24 { pt3dadd( -95.8331, 74.2589, 57.5603, 0.44 ) }
    dend_24 { pt3dadd( -96.8879, 74.4403, 57.9824, 0.22 ) }
    dend_24 { pt3dadd( -97.8073, 74.6187, 58.5073, 0.22 ) }
    dend_24 { pt3dadd( -98.9188, 74.8345, 59.3547, 0.22 ) }
    dend_24 { pt3dadd( -99.8732, 75.0246, 60.1994, 0.15 ) }
    dend_24 { pt3dadd( -101.124, 75.2646, 61.4906, 0.66 ) }
    dend_24 { pt3dadd( -102.329, 75.4875, 62.763, 0.29 ) }
    dend_24 { pt3dadd( -103.596, 75.6914, 64.079, 0.66 ) }
    dend_24 { pt3dadd( -104.845, 75.845, 65.2707, 1.03 ) }
    dend_24 { pt3dadd( -105.855, 75.9129, 66.1064, 1.25 ) }
    dend_24 { pt3dadd( -108.244, 75.9293, 67.8077, 0.22 ) }
    dend_24 { pt3dadd( -109.593, 75.8733, 68.5802, 0.22 ) }
    dend_24 { pt3dadd( -110.583, 75.7972, 69.0041, 0.29 ) }
    dend_24 { pt3dadd( -112.061, 75.6422, 69.4175, 0.29 ) }
    dend_24 { pt3dadd( -113.091, 75.5256, 69.5328, 0.22 ) }
    dend_24 { pt3dadd( -114.202, 75.3812, 69.4941, 0.29 ) }
    dend_24 { pt3dadd( -114.948, 75.284, 69.3562, 0.44 ) }
    dend_24 { pt3dadd( -115.823, 75.1728, 69.1027, 0.66 ) }
    dend_24 { pt3dadd( -116.743, 75.0867, 68.7683, 0.66 ) }
    dend_24 { pt3dadd( -118.053, 75.0304, 68.2282, 0.22 ) }
    dend_24 { pt3dadd( -119.053, 75.039, 67.8148, 0.22 ) }
    dend_24 { pt3dadd( -120.387, 75.1005, 67.3872, 0.29 ) }
    dend_24 { pt3dadd( -122.275, 75.2306, 66.9756, 0.29 ) }
    dend_24 { pt3dadd( -123.107, 75.2975, 66.8832, 0.59 ) }
    dend_24 { pt3dadd( -124.467, 75.3954, 66.9222, 0.59 ) }
    dend_24 { pt3dadd( -126.145, 75.5004, 67.1628, 0.22 ) }
    dend_24 { pt3dadd( -128.389, 75.6304, 67.66, 0.44 ) }
    dend_24 { pt3dadd( -129.313, 75.6683, 67.9338, 0.44 ) }
    dend_24 { pt3dadd( -130.354, 75.6961, 68.2936, 0.22 ) }
    dend_24 { pt3dadd( -131.905, 75.7234, 68.7983, 0.37 ) }
    dend_24 { pt3dadd( -132.562, 75.7428, 68.9603, 0.59 ) }
    dend_24 { pt3dadd( -133.297, 75.7948, 69.0606, 0.96 ) }
    dend_24 { pt3dadd( -134.472, 75.9252, 69.0933, 0.29 ) }
    dend_24 { pt3dadd( -136.309, 76.191, 69.0591, 0.22 ) }
    dend_24 { pt3dadd( -137.431, 76.3937, 69.1095, 0.22 ) }
    dend_24 { pt3dadd( -139.358, 76.7988, 69.2653, 0.22 ) }
    dend_24 { pt3dadd( -141.036, 77.1953, 69.497, 0.29 ) }
    dend_24 { pt3dadd( -141.933, 77.4305, 69.6637, 0.29 ) }
    dend_24 { pt3dadd( -143.08, 77.7684, 69.9351, 0.59 ) }
    dend_24 { pt3dadd( -146.126, 78.7859, 71.0463, 0.07 ) }
    dend_24 { pt3dadd( -146.772, 79.026, 71.3761, 0.15 ) }
    dend_24 { pt3dadd( -147.54, 79.3515, 71.9277, 0.29 ) }
    dend_24 { pt3dadd( -148.93, 80.0257, 73.1348, 0.15 ) }
    dend_24 { pt3dadd( -149.388, 80.2683, 73.6043, 0.22 ) }
    dend_24 { pt3dadd( -150.932, 81.1031, 75.4035, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( -151.572, 81.4469, 76.1792, 0.81 ) }
    dend_24 { pt3dadd( -152.856, 82.1019, 77.8226, 0.22 ) }
    dend_24 { pt3dadd( -153.537, 82.428, 78.6935, 0.29 ) }
    dend_24 { pt3dadd( -154.784, 82.9767, 80.2802, 0.22 ) }
    dend_24 { pt3dadd( -155.807, 83.3826, 81.3793, 0.22 ) }
    dend_24 { pt3dadd( -156.434, 83.6027, 81.8518, 0.66 ) }
    dend_24 { pt3dadd( -156.895, 83.7504, 82.0669, 0.66 ) }
    dend_24 { pt3dadd( -158.212, 84.1534, 82.2815, 0.22 ) }
    dend_24 { pt3dadd( -159.566, 84.5818, 82.1652, 0.29 ) }
    dend_24 { pt3dadd( -161.003, 85.1097, 81.7428, 0.74 ) }
    dend_24 { pt3dadd( -163.051, 85.9448, 80.8201, 0.22 ) }
    dend_24 { pt3dadd( -164.262, 86.4336, 80.1788, 0.15 ) }
    dend_24 { pt3dadd( -164.889, 86.6761, 79.808, 0.29 ) }
    dend_24 { pt3dadd( -165.696, 86.9733, 79.2855, 0.74 ) }
    dend_24 { pt3dadd( -166.761, 87.3448, 78.5894, 0.22 ) }
    dend_24 { pt3dadd( -168.099, 87.7394, 77.8555, 0.22 ) }
    dend_24 { pt3dadd( -168.735, 87.9065, 77.6222, 0.52 ) }
    dend_24 { pt3dadd( -169.153, 88.006, 77.489, 0.88 ) }
    dend_24 { pt3dadd( -169.964, 88.1903, 77.2655, 0.29 ) }
    dend_24 { pt3dadd( -171.063, 88.4242, 77.263, 0.22 ) }
    dend_24 { pt3dadd( -172.502, 88.7641, 77.6125, 0.22 ) }
    dend_24 { pt3dadd( -173.334, 88.9905, 77.9646, 0.22 ) }
    dend_24 { pt3dadd( -174.566, 89.3675, 78.6059, 0.22 ) }
    dend_24 { pt3dadd( -175.856, 89.7708, 79.4022, 0.15 ) }
    dend_24 { pt3dadd( -179.74, 90.9329, 82.6, 0.15 ) }
    dend_24 { pt3dadd( -180.768, 91.1972, 83.6523, 0.15 ) }
    dend_24 { pt3dadd( -181.423, 91.3477, 84.4355, 0.15 ) }
    dend_24 { pt3dadd( -182.008, 91.4597, 85.2479, 0.15 ) }
    dend_24 { pt3dadd( -182.777, 91.585, 86.4056, 0.37 ) }
    dend_24 { pt3dadd( -184.689, 91.8252, 89.4509, 0.15 ) }
    dend_24 { pt3dadd( -185.984, 91.9193, 91.4559, 0.15 ) }
    dend_24 { pt3dadd( -186.915, 91.9334, 93.0125, 0.15 ) }
    dend_24 { pt3dadd( -188.164, 91.9217, 95.2806, 0.15 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 33/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -54.1209, 55.6868, 34.6248, 0.29 ) }
    dend_23 { pt3dadd( -54.0103, 55.9346, 36.4347, 0.29 ) }
    dend_23 { pt3dadd( -53.8562, 56.2707, 39.4148, 0.29 ) }
    dend_23 { pt3dadd( -53.7758, 56.5392, 41.9824, 0.29 ) }
    dend_23 { pt3dadd( -53.7501, 56.8245, 44.5841, 0.29 ) }
    dend_23 { pt3dadd( -53.791, 57.0933, 46.6334, 0.29 ) }
    dend_23 { pt3dadd( -53.8194, 57.1704, 47.1492, 0.29 ) }
    dend_23 { pt3dadd( -53.9521, 57.3772, 48.3816, 0.29 ) }
    dend_23 { pt3dadd( -54.082, 57.4937, 49.0294, 0.37 ) }
    dend_23 { pt3dadd( -54.5807, 57.7574, 50.4778, 0.37 ) }
    dend_23 { pt3dadd( -55.1272, 57.9359, 51.5435, 0.22 ) }
    dend_23 { pt3dadd( -55.8569, 58.128, 52.7548, 0.22 ) }
    dend_23 { pt3dadd( -56.1382, 58.1902, 53.2298, 0.22 ) }
    dend_23 { pt3dadd( -56.3656, 58.2242, 53.6732, 0.22 ) }
    dend_23 { pt3dadd( -56.7274, 58.2442, 54.5494, 0.22 ) }
    dend_23 { pt3dadd( -56.993, 58.2261, 55.2772, 0.22 ) }
    dend_23 { pt3dadd( -57.1212, 58.1978, 55.6723, 0.22 ) }
    dend_23 { pt3dadd( -57.2741, 58.16, 56.2154, 0.29 ) }
    dend_23 { pt3dadd( -57.6462, 58.035, 57.6029, 0.29 ) }
    dend_23 { pt3dadd( -58.087, 57.8695, 59.1587, 0.29 ) }
    dend_23 { pt3dadd( -58.4381, 57.7217, 60.2933, 0.29 ) }
    dend_23 { pt3dadd( -58.6677, 57.6225, 61.0295, 0.15 ) }
    dend_23 { pt3dadd( -59.5, 57.2231, 63.7403, 0.15 ) }
    dend_23 { pt3dadd( -60.36, 56.738, 66.574, 0.15 ) }
    dend_23 { pt3dadd( -61.1265, 56.2242, 69.0586, 0.15 ) }
    dend_23 { pt3dadd( -61.5516, 55.9006, 70.4291, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -49.231, 41.5443, -36.4744, 1.18 ) }
    dend_13 { pt3dadd( -50.711, 41.8416, -35.9244, 1.18 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 61/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -49.231, 41.5443, -36.4744, 0.29 ) }
    dend_12 { pt3dadd( -50.0295, 42.8068, -36.3064, 0.29 ) }
    dend_12 { pt3dadd( -50.7446, 43.9158, -36.3137, 0.29 ) }
    dend_12 { pt3dadd( -51.3726, 44.8674, -36.3939, 0.88 ) }
    dend_12 { pt3dadd( -52.121, 45.98, -36.5328, 0.44 ) }
    dend_12 { pt3dadd( -52.8585, 47.0466, -36.7225, 0.44 ) }
    dend_12 { pt3dadd( -53.3227, 47.6938, -36.8549, 0.29 ) }
    dend_12 { pt3dadd( -54.2798, 48.9521, -37.2785, 0.29 ) }
    dend_12 { pt3dadd( -54.7571, 49.538, -37.5122, 0.74 ) }
    dend_12 { pt3dadd( -55.1367, 49.9448, -37.6821, 0.96 ) }
    dend_12 { pt3dadd( -55.9222, 50.7113, -37.946, 0.96 ) }
    dend_12 { pt3dadd( -56.9204, 51.6217, -38.1429, 0.66 ) }
    dend_12 { pt3dadd( -58.3727, 52.8909, -38.181, 0.37 ) }
    dend_12 { pt3dadd( -59.1897, 53.6208, -38.0486, 0.22 ) }
    dend_12 { pt3dadd( -60.2985, 54.6458, -37.7157, 0.29 ) }
    dend_12 { pt3dadd( -61.5184, 55.8273, -37.1455, 0.29 ) }
    dend_12 { pt3dadd( -62.1731, 56.49, -36.7046, 0.81 ) }
    dend_12 { pt3dadd( -63.2149, 57.5919, -35.8049, 1.03 ) }
    dend_12 { pt3dadd( -64.0976, 58.5971, -34.8996, 0.22 ) }
    dend_12 { pt3dadd( -64.6067, 59.2486, -34.3398, 0.29 ) }
    dend_12 { pt3dadd( -65.0631, 59.94, -33.815, 0.44 ) }
    dend_12 { pt3dadd( -65.4358, 60.5847, -33.4331, 0.44 ) }
    dend_12 { pt3dadd( -65.875, 61.4972, -32.9691, 0.44 ) }
    dend_12 { pt3dadd( -66.2922, 62.5801, -32.5957, 0.52 ) }
    dend_12 { pt3dadd( -66.5669, 63.3659, -32.4716, 0.52 ) }
    dend_12 { pt3dadd( -66.9169, 64.4582, -32.4542, 0.29 ) }
    dend_12 { pt3dadd( -67.1339, 65.1848, -32.5081, 0.37 ) }
    dend_12 { pt3dadd( -67.4406, 66.1847, -32.6277, 0.37 ) }
    dend_12 { pt3dadd( -68.0668, 67.9599, -32.9199, 0.81 ) }
    dend_12 { pt3dadd( -68.577, 69.2144, -33.1839, 1.03 ) }
    dend_12 { pt3dadd( -69.0544, 70.2576, -33.4323, 0.74 ) }
    dend_12 { pt3dadd( -69.6575, 71.4599, -33.7376, 0.66 ) }
    dend_12 { pt3dadd( -70.2546, 72.6148, -34.0336, 0.37 ) }
    dend_12 { pt3dadd( -71.0298, 74.0997, -34.4116, 0.29 ) }
    dend_12 { pt3dadd( -71.511, 75.0415, -34.5961, 0.29 ) }
    dend_12 { pt3dadd( -71.7674, 75.5874, -34.7315, 0.66 ) }
    dend_12 { pt3dadd( -72.0325, 76.2204, -34.911, 1.18 ) }
    dend_12 { pt3dadd( -72.2261, 76.7861, -35.0801, 1.18 ) }
    dend_12 { pt3dadd( -72.5053, 77.7258, -35.3469, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -72.77, 78.5997, -35.5556, 0.44 ) }
    dend_12 { pt3dadd( -73.1957, 79.8668, -35.8516, 0.29 ) }
    dend_12 { pt3dadd( -73.4202, 80.4958, -35.9994, 0.29 ) }
    dend_12 { pt3dadd( -73.6614, 81.1506, -36.1483, 0.29 ) }
    dend_12 { pt3dadd( -74.0972, 82.2844, -36.4366, 0.29 ) }
    dend_12 { pt3dadd( -74.4894, 83.2516, -36.6893, 0.22 ) }
    dend_12 { pt3dadd( -74.9871, 84.3999, -36.9886, 0.37 ) }
    dend_12 { pt3dadd( -75.4553, 85.4448, -37.2292, 0.22 ) }
    dend_12 { pt3dadd( -75.6624, 85.916, -37.34, 0.22 ) }
    dend_12 { pt3dadd( -76.0595, 86.8788, -37.5585, 0.44 ) }
    dend_12 { pt3dadd( -76.3314, 87.5963, -37.7066, 0.96 ) }
    dend_12 { pt3dadd( -76.574, 88.2134, -37.811, 1.18 ) }
    dend_12 { pt3dadd( -77.0412, 89.2718, -37.9352, 1.18 ) }
    dend_12 { pt3dadd( -77.3857, 89.9656, -38.0298, 1.25 ) }
    dend_12 { pt3dadd( -77.8091, 90.7497, -38.1753, 0.37 ) }
    dend_12 { pt3dadd( -78.1919, 91.4238, -38.3177, 0.22 ) }
    dend_12 { pt3dadd( -78.6529, 92.216, -38.5387, 0.29 ) }
    dend_12 { pt3dadd( -78.9426, 92.7555, -38.726, 0.29 ) }
    dend_12 { pt3dadd( -79.4338, 93.7806, -39.1707, 0.22 ) }
    dend_12 { pt3dadd( -79.8186, 94.7285, -39.6333, 0.22 ) }
    dend_12 { pt3dadd( -79.9427, 95.068, -39.805, 0.44 ) }
    dend_12 { pt3dadd( -80.2569, 95.9927, -40.3107, 0.81 ) }
    dend_12 { pt3dadd( -80.6991, 97.3918, -41.1384, 0.29 ) }
    dend_12 { pt3dadd( -81.0355, 98.4325, -41.8116, 0.52 ) }
    dend_12 { pt3dadd( -81.3329, 99.2395, -42.3647, 1.03 ) }
    dend_12 { pt3dadd( -81.6553, 99.9666, -42.9024, 1.03 ) }
    dend_12 { pt3dadd( -82.2831, 101.137, -43.8303, 0.66 ) }
    dend_12 { pt3dadd( -82.9168, 102.15, -44.6871, 0.59 ) }
    dend_12 { pt3dadd( -83.6139, 103.15, -45.5586, 0.88 ) }
    dend_12 { pt3dadd( -84.4564, 104.336, -46.559, 0.22 ) }
    dend_12 { pt3dadd( -85.123, 105.283, -47.3214, 0.59 ) }
    dend_12 { pt3dadd( -85.9117, 106.453, -48.2214, 0.22 ) }
    dend_12 { pt3dadd( -86.3088, 107.088, -48.6673, 0.44 ) }
    dend_12 { pt3dadd( -86.7454, 107.902, -49.2203, 0.74 ) }
    dend_12 { pt3dadd( -87.0093, 108.544, -49.6666, 0.88 ) }
    dend_12 { pt3dadd( -87.2723, 109.396, -50.294, 0.37 ) }
    dend_12 { pt3dadd( -87.4826, 110.182, -50.9216, 0.37 ) }
    dend_12 { pt3dadd( -87.7196, 111.112, -51.6865, 0.37 ) }
    dend_12 { pt3dadd( -88.0391, 112.251, -52.6044, 0.29 ) }
    dend_12 { pt3dadd( -88.3059, 113.179, -53.379, 0.52 ) }
    dend_12 { pt3dadd( -88.4317, 113.602, -53.7508, 0.52 ) }
    dend_12 { pt3dadd( -88.7418, 114.645, -54.6722, 0.52 ) }
    dend_12 { pt3dadd( -89.0321, 115.496, -55.3649, 0.37 ) }
    dend_12 { pt3dadd( -89.2699, 116.009, -55.7276, 0.37 ) }
    dend_12 { pt3dadd( -93.0451, 125.436, -56.8032, 0.37 ) }
    dend_12 { pt3dadd( -95.1595, 135.417, -55.964, 0.37 ) }
    dend_12 { pt3dadd( -96.2974, 145.543, -54.9047, 0.37 ) }
    dend_12 { pt3dadd( -97.3398, 155.707, -54.1407, 0.37 ) }
    dend_12 { pt3dadd( -96.9207, 165.928, -54.7591, 0.37 ) }
    dend_12 { pt3dadd( -95.5482, 176.023, -53.6978, 0.37 ) }
    dend_12 { pt3dadd( -93.5303, 186.06, -53.4875, 0.37 ) }
    dend_12 { pt3dadd( -91.3326, 196.034, -52.7956, 0.37 ) }
    dend_12 { pt3dadd( -90.3403, 206.232, -52.6427, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 53/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -12.2639, 79.6501, -42.9627, 0.52 ) }
    dend_8 { pt3dadd( -13.4126, 79.4754, -44.4355, 0.52 ) }
    dend_8 { pt3dadd( -14.4903, 79.1986, -45.9132, 0.52 ) }
    dend_8 { pt3dadd( -15.0648, 78.9593, -46.9796, 0.66 ) }
    dend_8 { pt3dadd( -15.4301, 78.6725, -48.0008, 0.44 ) }
    dend_8 { pt3dadd( -15.6612, 78.3761, -49.0253, 0.37 ) }
    dend_8 { pt3dadd( -15.9586, 77.8776, -50.8914, 0.37 ) }
    dend_8 { pt3dadd( -16.0018, 77.7536, -51.3802, 0.37 ) }
    dend_8 { pt3dadd( -16.0477, 77.1908, -53.5414, 0.37 ) }
    dend_8 { pt3dadd( -16.0314, 76.7111, -55.2886, 0.52 ) }
    dend_8 { pt3dadd( -16.0322, 76.3594, -56.544, 0.52 ) }
    dend_8 { pt3dadd( -16.0652, 76.1749, -57.1625, 0.52 ) }
    dend_8 { pt3dadd( -16.3109, 75.7609, -58.2926, 0.52 ) }
    dend_8 { pt3dadd( -16.8221, 75.3043, -59.2774, 0.66 ) }
    dend_8 { pt3dadd( -17.5669, 74.8387, -59.6773, 0.52 ) }
    dend_8 { pt3dadd( -18.6251, 74.238, -60.0234, 0.44 ) }
    dend_8 { pt3dadd( -19.418, 73.779, -60.1924, 0.44 ) }
    dend_8 { pt3dadd( -20.0489, 73.3881, -60.2763, 0.81 ) }
    dend_8 { pt3dadd( -21.1022, 72.7106, -60.2713, 0.96 ) }
    dend_8 { pt3dadd( -22.6217, 71.7778, -60.1107, 0.22 ) }
    dend_8 { pt3dadd( -28.2899, 66.4476, -66.5005, 0.22 ) }
    dend_8 { pt3dadd( -35.6535, 60.9656, -70.6444, 0.22 ) }
    dend_8 { pt3dadd( -42.1167, 54.4383, -74.8487, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 76/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -12.2639, 79.6501, -42.9627, 0.59 ) }
    dend_7 { pt3dadd( -12.027, 80.9181, -42.4305, 0.59 ) }
    dend_7 { pt3dadd( -11.8254, 82.3778, -41.9101, 0.59 ) }
    dend_7 { pt3dadd( -11.6914, 83.5877, -41.6473, 0.66 ) }
    dend_7 { pt3dadd( -11.6321, 84.5193, -41.542, 0.81 ) }
    dend_7 { pt3dadd( -11.6072, 85.8898, -41.5407, 0.52 ) }
    dend_7 { pt3dadd( -11.648, 87.5566, -41.713, 0.52 ) }
    dend_7 { pt3dadd( -11.7361, 88.5995, -42.044, 0.66 ) }
    dend_7 { pt3dadd( -11.9038, 90.1857, -42.9374, 1.03 ) }
    dend_7 { pt3dadd( -12.0627, 91.7073, -44.2015, 0.37 ) }
    dend_7 { pt3dadd( -12.1351, 92.8261, -45.465, 0.37 ) }
    dend_7 { pt3dadd( -12.1387, 93.6573, -46.649, 0.59 ) }
    dend_7 { pt3dadd( -12.0679, 94.7447, -48.4182, 0.74 ) }
    dend_7 { pt3dadd( -11.9157, 95.6458, -50.016, 0.74 ) }
    dend_7 { pt3dadd( -11.6339, 96.6247, -51.8611, 0.37 ) }
    dend_7 { pt3dadd( -11.3339, 97.3183, -53.2341, 0.37 ) }
    dend_7 { pt3dadd( -11.0879, 97.7463, -54.0392, 0.37 ) }
    dend_7 { pt3dadd( -10.7998, 98.1414, -54.8008, 0.44 ) }
    dend_7 { pt3dadd( -10.2987, 98.8031, -55.9779, 0.44 ) }
    dend_7 { pt3dadd( -10.0062, 99.1912, -56.623, 0.74 ) }
    dend_7 { pt3dadd( -9.46973, 99.9188, -57.7919, 0.74 ) }
    dend_7 { pt3dadd( -8.80756, 100.765, -59.1787, 0.15 ) }
    dend_7 { pt3dadd( -8.14838, 101.491, -60.5572, 0.15 ) }
    dend_7 { pt3dadd( -6.26436, 110.337, -65.2439, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_7 { pt3dadd( -4.84367, 119.566, -69.3564, 0.15 ) }
    dend_7 { pt3dadd( -4.81555, 127.795, -75.3176, 0.15 ) }
    dend_7 { pt3dadd( -5.34569, 135.336, -82.0704, 0.15 ) }
    dend_7 { pt3dadd( -6.08264, 143.708, -87.7921, 0.15 ) }
    dend_7 { pt3dadd( -6.1764, 152.392, -93.1041, 0.15 ) }
    dend_7 { pt3dadd( -4.8058, 161.162, -98.0947, 0.15 ) }
    dend_7 { pt3dadd( -3.06413, 170.374, -102.12, 0.15 ) }
    dend_7 { pt3dadd( -2.25773, 179.916, -105.682, 0.15 ) }
    dend_7 { pt3dadd( 0.6989, 189.452, -107.85, 0.15 ) }
    dend_7 { pt3dadd( 3.99334, 198.993, -109.436, 0.15 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 46.9013, 227.954, -43.7516, 0.29 ) }
    dend_42 { pt3dadd( 46.6726, 228.666, -45.204, 0.29 ) }
    dend_42 { pt3dadd( 46.3525, 229.45, -47.2001, 0.29 ) }
    dend_42 { pt3dadd( 46.0982, 229.902, -48.4964, 0.29 ) }
    dend_42 { pt3dadd( 45.8528, 230.255, -49.5041, 0.29 ) }
    dend_42 { pt3dadd( 45.673, 230.5, -50.1834, 0.59 ) }
    dend_42 { pt3dadd( 45.178, 231.229, -52.0651, 0.22 ) }
    dend_42 { pt3dadd( 44.8647, 231.798, -53.3305, 0.22 ) }
    dend_42 { pt3dadd( 44.722, 232.141, -53.9749, 0.22 ) }
    dend_42 { pt3dadd( 44.5937, 232.614, -54.7757, 0.15 ) }
    dend_42 { pt3dadd( 44.7595, 233.081, -55.214, 0.15 ) }
    dend_42 { pt3dadd( 45.2, 233.691, -55.4624, 0.66 ) }
    dend_42 { pt3dadd( 46.0636, 234.702, -55.6569, 0.22 ) }
    dend_42 { pt3dadd( 46.5105, 235.198, -55.7237, 0.22 ) }
    dend_42 { pt3dadd( 46.9456, 235.611, -55.7762, 0.44 ) }
    dend_42 { pt3dadd( 48.2177, 236.591, -55.8824, 0.29 ) }
    dend_42 { pt3dadd( 50.6957, 242.522, -63.6526, 0.29 ) }
    dend_42 { pt3dadd( 52.1722, 248.659, -71.5248, 0.29 ) }
    dend_42 { pt3dadd( 52.7535, 254.946, -79.4012, 0.29 ) }
    dend_42 { pt3dadd( 52.8001, 262.266, -86.401, 0.29 ) }
    dend_42 { pt3dadd( 53.3032, 269.276, -93.6795, 0.29 ) }
    dend_42 { pt3dadd( 51.9409, 274.934, -101.906, 0.29 ) }
    dend_42 { pt3dadd( 49.5233, 279.566, -110.493, 0.29 ) }
    dend_42 { pt3dadd( 46.3486, 284.969, -118.376, 0.29 ) }
    dend_42 { pt3dadd( 44.6258, 290.51, -126.61, 0.29 ) }
    dend_42 { pt3dadd( 42.7087, 297.014, -134.097, 0.29 ) }
    dend_42 { pt3dadd( 41.7984, 304.251, -141.12, 0.29 ) }
    dend_42 { pt3dadd( 42.467, 310.725, -148.844, 0.29 ) }
    dend_42 { pt3dadd( 45.4228, 316.607, -156.482, 0.29 ) }
    dend_42 { pt3dadd( 48.4396, 320.728, -165.127, 0.29 ) }
    dend_42 { pt3dadd( 52.2869, 323.64, -173.909, 0.29 ) }
    dend_42 { pt3dadd( 55.7858, 324.718, -183.218, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 46.9013, 227.954, -43.7516, 0.74 ) }
    dend_41 { pt3dadd( 46.5293, 228.446, -43.5274, 0.74 ) }
    dend_41 { pt3dadd( 44.739, 230.633, -42.6327, 0.29 ) }
    dend_41 { pt3dadd( 44.0933, 231.351, -42.3588, 0.29 ) }
    dend_41 { pt3dadd( 43.0471, 232.425, -41.9793, 0.52 ) }
    dend_41 { pt3dadd( 42.3117, 233.128, -41.761, 0.29 ) }
    dend_41 { pt3dadd( 41.345, 234.013, -41.58, 0.37 ) }
    dend_41 { pt3dadd( 40.5068, 234.728, -41.5402, 0.59 ) }
    dend_41 { pt3dadd( 39.8608, 235.235, -41.5648, 0.44 ) }
    dend_41 { pt3dadd( 39.1314, 235.827, -41.5643, 0.88 ) }
    dend_41 { pt3dadd( 37.7919, 237.033, -41.4478, 0.37 ) }
    dend_41 { pt3dadd( 36.4879, 238.369, -41.172, 0.66 ) }
    dend_41 { pt3dadd( 35.7519, 239.261, -40.9205, 0.29 ) }
    dend_41 { pt3dadd( 34.9745, 240.402, -40.5545, 0.22 ) }
    dend_41 { pt3dadd( 34.1753, 241.815, -40.0711, 0.74 ) }
    dend_41 { pt3dadd( 33.4072, 243.45, -39.4827, 0.29 ) }
    dend_41 { pt3dadd( 33.0221, 244.465, -39.1077, 0.22 ) }
    dend_41 { pt3dadd( 32.7482, 245.304, -38.802, 0.88 ) }
    dend_41 { pt3dadd( 32.4315, 246.383, -38.5023, 0.88 ) }
    dend_41 { pt3dadd( 32.1989, 247.255, -38.3635, 0.22 ) }
    dend_41 { pt3dadd( 31.9753, 248.155, -38.3102, 0.22 ) }
    dend_41 { pt3dadd( 31.7437, 249.205, -38.3102, 0.15 ) }
    dend_41 { pt3dadd( 31.6267, 249.839, -38.3102, 0.66 ) }
    dend_41 { pt3dadd( 31.5304, 250.511, -38.3102, 0.22 ) }
    dend_41 { pt3dadd( 31.4124, 251.513, -38.3135, 0.15 ) }
    dend_41 { pt3dadd( 31.3774, 252.034, -38.3241, 0.15 ) }
    dend_41 { pt3dadd( 31.3753, 252.864, -38.3992, 0.44 ) }
    dend_41 { pt3dadd( 31.447, 253.991, -38.6003, 0.44 ) }
    dend_41 { pt3dadd( 31.5686, 255.233, -38.9929, 0.22 ) }
    dend_41 { pt3dadd( 31.6537, 255.909, -39.3236, 0.22 ) }
    dend_41 { pt3dadd( 31.7839, 256.772, -39.9065, 0.52 ) }
    dend_41 { pt3dadd( 31.9573, 257.817, -40.8105, 0.52 ) }
    dend_41 { pt3dadd( 32.0845, 258.471, -41.4996, 0.22 ) }
    dend_41 { pt3dadd( 32.343, 259.618, -42.8249, 0.22 ) }
    dend_41 { pt3dadd( 32.5506, 260.493, -43.8923, 0.22 ) }
    dend_41 { pt3dadd( 32.7027, 261.161, -44.7358, 0.22 ) }
    dend_41 { pt3dadd( 32.8563, 261.942, -45.7242, 0.22 ) }
    dend_41 { pt3dadd( 33.0787, 263.097, -47.1226, 0.22 ) }
    dend_41 { pt3dadd( 33.2677, 263.95, -48.1528, 0.66 ) }
    dend_41 { pt3dadd( 33.4304, 264.493, -48.7699, 0.37 ) }
    dend_41 { pt3dadd( 31.7117, 274.358, -50.8726, 0.37 ) }
    dend_41 { pt3dadd( 31.0203, 284.472, -52.3385, 0.37 ) }
    dend_41 { pt3dadd( 28.4715, 294.38, -52.0674, 0.37 ) }
    dend_41 { pt3dadd( 26.631, 304.373, -50.8206, 0.37 ) }
    dend_41 { pt3dadd( 24.3838, 314.359, -51.0097, 0.37 ) }
    dend_41 { pt3dadd( 23.7285, 324.55, -51.8564, 0.37 ) }
    dend_41 { pt3dadd( 24.7065, 334.75, -52.0086, 0.37 ) }
    dend_41 { pt3dadd( 25.9455, 344.836, -50.7272, 0.37 ) }
    dend_41 { pt3dadd( 28.8267, 354.314, -48.2394, 0.37 ) }
    dend_41 { pt3dadd( 33.2159, 363.434, -46.987, 0.37 ) }
    dend_41 { pt3dadd( 38.2085, 372.306, -47.3922, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 93/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -50.711, 41.8416, -35.9244, 0.52 ) }
    dend_19 { pt3dadd( -52.2517, 42.4488, -36.2109, 0.52 ) }
    dend_19 { pt3dadd( -52.8691, 42.6988, -36.343, 0.66 ) }
    dend_19 { pt3dadd( -53.8463, 43.0845, -36.5498, 0.88 ) }
    dend_19 { pt3dadd( -55.3133, 43.6398, -36.8493, 0.74 ) }
    dend_19 { pt3dadd( -56.6266, 44.0963, -37.0892, 0.52 ) }
    dend_19 { pt3dadd( -57.729, 44.4511, -37.2734, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -59.3884, 44.9339, -37.5783, 0.74 ) }
    dend_19 { pt3dadd( -60.3176, 45.1758, -37.7364, 0.74 ) }
    dend_19 { pt3dadd( -61.6367, 45.4626, -37.9112, 0.66 ) }
    dend_19 { pt3dadd( -63.098, 45.6905, -38.0611, 0.37 ) }
    dend_19 { pt3dadd( -63.7562, 45.7552, -38.1222, 0.37 ) }
    dend_19 { pt3dadd( -64.4245, 45.784, -38.2021, 0.88 ) }
    dend_19 { pt3dadd( -65.4767, 45.7808, -38.3772, 0.88 ) }
    dend_19 { pt3dadd( -66.3009, 45.7688, -38.5646, 0.59 ) }
    dend_19 { pt3dadd( -67.1305, 45.7384, -38.8042, 0.59 ) }
    dend_19 { pt3dadd( -67.9884, 45.7021, -39.1383, 0.59 ) }
    dend_19 { pt3dadd( -68.7139, 45.6552, -39.5262, 0.59 ) }
    dend_19 { pt3dadd( -69.4991, 45.5932, -40.0148, 0.59 ) }
    dend_19 { pt3dadd( -70.0733, 45.5341, -40.3867, 0.81 ) }
    dend_19 { pt3dadd( -70.8131, 45.4461, -40.8494, 1.03 ) }
    dend_19 { pt3dadd( -72.1402, 45.2248, -41.607, 0.52 ) }
    dend_19 { pt3dadd( -73.917, 44.8519, -42.4961, 0.59 ) }
    dend_19 { pt3dadd( -75.0674, 44.5297, -43.0087, 0.59 ) }
    dend_19 { pt3dadd( -76.0266, 44.1776, -43.3659, 0.59 ) }
    dend_19 { pt3dadd( -77.327, 43.5594, -43.759, 0.59 ) }
    dend_19 { pt3dadd( -78.2182, 43.0129, -43.9307, 0.59 ) }
    dend_19 { pt3dadd( -79.2454, 42.2219, -43.9732, 0.52 ) }
    dend_19 { pt3dadd( -79.9173, 41.6092, -43.9185, 0.59 ) }
    dend_19 { pt3dadd( -80.6405, 40.8516, -43.84, 0.52 ) }
    dend_19 { pt3dadd( -81.3132, 40.1063, -43.7729, 0.37 ) }
    dend_19 { pt3dadd( -82.2071, 39.104, -43.7162, 0.66 ) }
    dend_19 { pt3dadd( -82.7852, 38.4975, -43.7017, 0.66 ) }
    dend_19 { pt3dadd( -83.3667, 37.9648, -43.7203, 0.88 ) }
    dend_19 { pt3dadd( -84.1052, 37.3935, -43.7712, 0.88 ) }
    dend_19 { pt3dadd( -85.4421, 36.4752, -43.9542, 0.52 ) }
    dend_19 { pt3dadd( -86.227, 35.9922, -44.1426, 0.52 ) }
    dend_19 { pt3dadd( -86.759, 35.7109, -44.3369, 0.66 ) }
    dend_19 { pt3dadd( -88.1123, 35.1118, -45.0016, 0.44 ) }
    dend_19 { pt3dadd( -88.7607, 34.8944, -45.3974, 0.59 ) }
    dend_19 { pt3dadd( -89.6381, 34.7027, -46.0088, 0.66 ) }
    dend_19 { pt3dadd( -91.0946, 34.5782, -47.1249, 0.66 ) }
    dend_19 { pt3dadd( -92.0748, 34.5885, -47.9244, 0.88 ) }
    dend_19 { pt3dadd( -92.8392, 34.6595, -48.5651, 0.88 ) }
    dend_19 { pt3dadd( -93.6158, 34.7765, -49.215, 0.81 ) }
    dend_19 { pt3dadd( -94.335, 34.9088, -49.7617, 1.11 ) }
    dend_19 { pt3dadd( -95.3527, 35.1116, -50.3888, 0.52 ) }
    dend_19 { pt3dadd( -96.6929, 35.388, -51.0761, 0.52 ) }
    dend_19 { pt3dadd( -98.1855, 35.6976, -51.7223, 0.29 ) }
    dend_19 { pt3dadd( -98.6559, 35.7933, -51.8961, 0.29 ) }
    dend_19 { pt3dadd( -99.6968, 35.9801, -52.2674, 0.59 ) }
    dend_19 { pt3dadd( -101.055, 36.1625, -52.8444, 0.29 ) }
    dend_19 { pt3dadd( -102.827, 36.3438, -53.8095, 0.37 ) }
    dend_19 { pt3dadd( -103.965, 36.4191, -54.5255, 0.37 ) }
    dend_19 { pt3dadd( -104.821, 36.4507, -55.127, 0.37 ) }
    dend_19 { pt3dadd( -106.296, 36.4843, -56.2706, 0.44 ) }
    dend_19 { pt3dadd( -108.147, 36.4777, -57.9085, 0.96 ) }
    dend_19 { pt3dadd( -109.863, 36.4043, -59.6664, 0.44 ) }
    dend_19 { pt3dadd( -110.548, 36.3397, -60.4644, 0.52 ) }
    dend_19 { pt3dadd( -111.346, 36.2557, -61.5461, 0.52 ) }
    dend_19 { pt3dadd( -120.11, 34.8692, -66.1669, 0.52 ) }
    dend_19 { pt3dadd( -129.213, 34.0715, -70.234, 0.52 ) }
    dend_19 { pt3dadd( -138.561, 32.086, -73.2106, 0.52 ) }
    dend_19 { pt3dadd( -147.989, 28.7663, -74.0027, 0.52 ) }
    dend_19 { pt3dadd( -157.069, 24.5103, -73.451, 0.52 ) }
    dend_19 { pt3dadd( -166.735, 21.8823, -73.5224, 0.52 ) }
    dend_19 { pt3dadd( -175.713, 17.4949, -74.5583, 0.52 ) }
    dend_19 { pt3dadd( -184.971, 14.1394, -76.4486, 0.52 ) }
    dend_19 { pt3dadd( -194.142, 11.6485, -79.6086, 0.52 ) }
    dend_19 { pt3dadd( -202.858, 9.82426, -84.1759, 0.52 ) }
    dend_19 { pt3dadd( -211.431, 7.37199, -88.7343, 0.52 ) }
    dend_19 { pt3dadd( -219.589, 5.2829, -94.1459, 0.52 ) }
    dend_19 { pt3dadd( -227.996, 3.06823, -99.1112, 0.52 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 66/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -50.711, 41.8416, -35.9244, 0.29 ) }
    dend_14 { pt3dadd( -51.99, 41.9848, -36.9774, 0.29 ) }
    dend_14 { pt3dadd( -53.4885, 42.1052, -38.1356, 0.44 ) }
    dend_14 { pt3dadd( -54.1159, 42.1522, -38.5715, 0.44 ) }
    dend_14 { pt3dadd( -55.124, 42.2389, -39.1933, 0.29 ) }
    dend_14 { pt3dadd( -56.1728, 42.3474, -39.771, 0.29 ) }
    dend_14 { pt3dadd( -57.2249, 42.4713, -40.295, 0.59 ) }
    dend_14 { pt3dadd( -57.9749, 42.5956, -40.5406, 0.81 ) }
    dend_14 { pt3dadd( -58.9224, 42.7538, -40.7608, 0.59 ) }
    dend_14 { pt3dadd( -59.8271, 42.8842, -40.9786, 0.44 ) }
    dend_14 { pt3dadd( -60.578, 42.9737, -41.1918, 0.74 ) }
    dend_14 { pt3dadd( -61.149, 43.0478, -41.3904, 1.03 ) }
    dend_14 { pt3dadd( -62.2705, 43.2019, -41.8857, 0.29 ) }
    dend_14 { pt3dadd( -63.5105, 43.3256, -42.5846, 0.29 ) }
    dend_14 { pt3dadd( -64.7932, 43.3356, -43.4717, 0.96 ) }
    dend_14 { pt3dadd( -66.0883, 43.1842, -44.5184, 0.66 ) }
    dend_14 { pt3dadd( -67.002, 42.9407, -45.346, 0.74 ) }
    dend_14 { pt3dadd( -67.8454, 42.6658, -46.1762, 0.81 ) }
    dend_14 { pt3dadd( -68.6119, 42.349, -47.0111, 0.52 ) }
    dend_14 { pt3dadd( -69.582, 41.8318, -48.1035, 0.52 ) }
    dend_14 { pt3dadd( -70.3471, 41.256, -49.0079, 0.44 ) }
    dend_14 { pt3dadd( -70.9403, 40.6223, -49.7139, 0.59 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 88/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -227.996, 3.06823, -99.1112, 0.66 ) }
    dend_21 { pt3dadd( -235.131, -3.88442, -100.868, 0.66 ) }
    dend_21 { pt3dadd( -241.25, -11.784, -102.647, 0.66 ) }
    dend_21 { pt3dadd( -247.17, -19.8454, -104.407, 0.66 ) }
    dend_21 { pt3dadd( -253.806, -27.5007, -104.831, 0.66 ) }
    dend_21 { pt3dadd( -259.645, -35.8215, -104.76, 0.66 ) }
    dend_21 { pt3dadd( -265.224, -44.2821, -105.622, 0.66 ) }
    dend_21 { pt3dadd( -270.349, -52.8001, -107.784, 0.66 ) }
    dend_21 { pt3dadd( -274.933, -61.6679, -109.82, 0.66 ) }
    dend_21 { pt3dadd( -279.348, -70.72, -111.405, 0.66 ) }
    dend_21 { pt3dadd( -283.17, -80.1239, -112.509, 0.66 ) }
    dend_21 { pt3dadd( -286.317, -89.8514, -112.321, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_21 { pt3dadd( -289.009, -99.7219, -112.198, 0.66 ) }
    dend_21 { pt3dadd( -293.775, -108.727, -112.529, 0.66 ) }
    dend_21 { pt3dadd( -298.13, -117.931, -113.166, 0.66 ) }
    dend_21 { pt3dadd( -302.948, -126.555, -115.613, 0.66 ) }
    dend_21 { pt3dadd( -308.115, -134.96, -118.075, 0.66 ) }
    dend_21 { pt3dadd( -313.924, -141.993, -122.453, 0.66 ) }
    dend_21 { pt3dadd( -319.197, -148.675, -127.904, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 7/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -227.996, 3.06823, -99.1112, 0.15 ) }
    dend_20 { pt3dadd( -236.453, 6.86892, -102.949, 0.66 ) }
    dend_20 { pt3dadd( -244.463, 12.2009, -105.913, 0.66 ) }
    dend_20 { pt3dadd( -252.622, 17.4106, -108.67, 0.66 ) }
    dend_20 { pt3dadd( -260.24, 23.6788, -110.807, 0.66 ) }
    dend_20 { pt3dadd( -267.909, 29.639, -113.524, 0.66 ) }
    dend_20 { pt3dadd( -274.375, 36.2687, -117.567, 0.66 ) }
    dend_20 { pt3dadd( -281.057, 42.3571, -122.047, 0.66 ) }
    dend_20 { pt3dadd( -287.223, 49.1971, -126.224, 0.66 ) }
    dend_20 { pt3dadd( -294.449, 54.4643, -130.848, 0.66 ) }
    dend_20 { pt3dadd( -301.093, 59.1505, -136.76, 0.66 ) }
    dend_20 { pt3dadd( -306.319, 64.5064, -143.497, 0.66 ) }
    dend_20 { pt3dadd( -312.758, 68.3318, -150.176, 0.66 ) }
    dend_20 { pt3dadd( -317.91, 73.1916, -157.316, 0.66 ) }
    dend_20 { pt3dadd( -322.137, 79.3558, -164.096, 0.66 ) }
    dend_20 { pt3dadd( -324.978, 86.1939, -170.982, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 23/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -70.9403, 40.6223, -49.7139, 0.66 ) }
    dend_16 { pt3dadd( -71.2102, 39.4099, -50.4628, 0.66 ) }
    dend_16 { pt3dadd( -71.4319, 38.4847, -51.1899, 0.59 ) }
    dend_16 { pt3dadd( -71.6506, 37.8498, -51.8088, 0.29 ) }
    dend_16 { pt3dadd( -72.0799, 36.9731, -52.7587, 0.29 ) }
    dend_16 { pt3dadd( -72.2904, 36.6361, -53.1911, 0.44 ) }
    dend_16 { pt3dadd( -72.929, 35.8385, -54.4579, 0.59 ) }
    dend_16 { pt3dadd( -73.4546, 35.3223, -55.4303, 0.59 ) }
    dend_16 { pt3dadd( -74.0743, 34.8368, -56.5784, 0.59 ) }
    dend_16 { pt3dadd( -74.5452, 34.5352, -57.4533, 0.66 ) }
    dend_16 { pt3dadd( -75.3117, 34.1336, -58.8464, 0.66 ) }
    dend_16 { pt3dadd( -76.2962, 33.7331, -60.6063, 0.22 ) }
    dend_16 { pt3dadd( -79.7052, 29.5378, -69.0696, 0.22 ) }
    dend_16 { pt3dadd( -83.3438, 25.3343, -77.4327, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 37/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -70.9403, 40.6223, -49.7139, 0.15 ) }
    dend_15 { pt3dadd( -71.8286, 40.876, -49.5531, 0.15 ) }
    dend_15 { pt3dadd( -72.7182, 41.0529, -49.3845, 0.22 ) }
    dend_15 { pt3dadd( -73.6589, 41.1019, -49.2139, 0.37 ) }
    dend_15 { pt3dadd( -74.5732, 41.0598, -49.0695, 0.52 ) }
    dend_15 { pt3dadd( -75.8156, 40.8853, -48.8624, 0.22 ) }
    dend_15 { pt3dadd( -76.5476, 40.7456, -48.7276, 0.22 ) }
    dend_15 { pt3dadd( -77.0879, 40.6113, -48.5815, 0.22 ) }
    dend_15 { pt3dadd( -78.2736, 40.2358, -48.1867, 0.29 ) }
    dend_15 { pt3dadd( -78.9541, 39.9847, -47.9339, 0.22 ) }
    dend_15 { pt3dadd( -79.9702, 39.6239, -47.621, 0.29 ) }
    dend_15 { pt3dadd( -81.0186, 39.3168, -47.381, 0.15 ) }
    dend_15 { pt3dadd( -82.3494, 39.0318, -47.1329, 0.15 ) }
    dend_15 { pt3dadd( -82.8711, 38.9636, -47.0613, 0.44 ) }
    dend_15 { pt3dadd( -83.5253, 38.9246, -47.0084, 0.44 ) }
    dend_15 { pt3dadd( -85.3766, 38.9031, -46.9718, 0.22 ) }
    dend_15 { pt3dadd( -86.2655, 38.9392, -46.9714, 0.22 ) }
    dend_15 { pt3dadd( -86.9494, 39.0011, -46.9665, 0.52 ) }
    dend_15 { pt3dadd( -87.7643, 39.123, -46.9861, 0.52 ) }
    dend_15 { pt3dadd( -88.712, 39.2999, -46.9757, 0.22 ) }
    dend_15 { pt3dadd( -89.432, 39.473, -46.9147, 0.44 ) }
    dend_15 { pt3dadd( -90.7418, 39.8639, -46.602, 0.44 ) }
    dend_15 { pt3dadd( -91.6337, 40.209, -46.3477, 0.74 ) }
    dend_15 { pt3dadd( -92.6368, 40.7016, -45.9907, 0.88 ) }
    dend_15 { pt3dadd( -102.24, 40.2718, -43.2327, 0.88 ) }
    dend_15 { pt3dadd( -111.72, 38.8037, -40.3902, 0.88 ) }
    dend_15 { pt3dadd( -121.657, 38.4472, -39.3313, 0.88 ) }
    dend_15 { pt3dadd( -131.605, 39.1373, -40.1018, 0.88 ) }
    dend_15 { pt3dadd( -141.398, 39.7999, -42.0185, 0.88 ) }
    dend_15 { pt3dadd( -151.138, 41.5047, -43.5553, 0.88 ) }
    dend_15 { pt3dadd( -160.276, 44.2033, -46.6506, 0.88 ) }
    dend_15 { pt3dadd( -169.093, 45.1594, -51.2753, 0.88 ) }
    dend_15 { pt3dadd( -177.885, 47.3983, -55.5102, 0.88 ) }
    dend_15 { pt3dadd( -187.704, 47.9646, -57.321, 0.88 ) }
    dend_15 { pt3dadd( -197.665, 47.0783, -57.467, 0.88 ) }
    dend_15 { pt3dadd( -207.094, 44.4305, -59.5688, 0.88 ) }
    dend_15 { pt3dadd( -216.027, 41.7481, -63.225, 0.88 ) }
    dend_15 { pt3dadd( -225.68, 40.7964, -65.6632, 0.88 ) }
    dend_15 { pt3dadd( -235.296, 40.1523, -68.3347, 0.88 ) }
    dend_15 { pt3dadd( -245.201, 39.7124, -69.6447, 0.88 ) }
    dend_15 { pt3dadd( -255.197, 39.4785, -69.7642, 0.88 ) }
    dend_15 { pt3dadd( -264.947, 37.38, -68.8995, 0.88 ) }
    dend_15 { pt3dadd( -274.623, 36.3935, -66.565, 0.88 ) }
    dend_15 { pt3dadd( -283.665, 36.9253, -62.3253, 0.88 ) }
    dend_15 { pt3dadd( -292.159, 36.1303, -57.105, 0.88 ) }
    dend_15 { pt3dadd( -299.625, 33.6479, -50.9092, 0.88 ) }
    dend_15 { pt3dadd( -306.275, 30.2497, -44.2168, 0.88 ) }
    dend_15 { pt3dadd( -313.725, 25.6275, -39.3011, 0.88 ) }
    dend_15 { pt3dadd( -320.337, 20.1691, -34.0163, 0.88 ) }
    dend_15 { pt3dadd( -325.335, 13.5501, -28.2442, 0.88 ) }
    dend_15 { pt3dadd( -329.23, 5.85793, -22.9043, 0.88 ) }
    dend_15 { pt3dadd( -331.515, -2.65076, -17.8184, 0.88 ) }
    dend_15 { pt3dadd( -332.493, -12.2417, -14.4287, 0.88 ) }
    dend_15 { pt3dadd( -334.055, -21.2138, -9.85253, 0.88 ) }
    dend_15 { pt3dadd( -336.796, -29.8097, -5.1452, 0.88 ) }
    dend_15 { pt3dadd( -339.327, -38.2665, -0.0933785, 0.88 ) }
    dend_15 { pt3dadd( -341.14, -47.4149, 4.0365, 0.88 ) }
    dend_15 { pt3dadd( -342.221, -56.2929, 8.91587, 0.88 ) }
    dend_15 { pt3dadd( -343.704, -65.2108, 13.6174, 0.88 ) }
    dend_15 { pt3dadd( -344.806, -74.2368, 18.2263, 0.88 ) }
    dend_15 { pt3dadd( -347.321, -82.2055, 23.9913, 0.88 ) }
    dend_15 { pt3dadd( -349.097, -90.5622, 29.5027, 0.88 ) }
    dend_15 { pt3dadd( -351.989, -97.7281, 36.042, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_15 { pt3dadd( -355.955, -105.502, 41.2137, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -83.3438, 25.3343, -77.4327, 0.22 ) }
    dend_18 { pt3dadd( -87.6243, 20.4615, -85.1189, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 3/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -83.3438, 25.3343, -77.4327, 0.22 ) }
    dend_17 { pt3dadd( -86.3813, 21.1954, -86.0622, 0.22 ) }
    dend_17 { pt3dadd( -91.1222, 16.3149, -93.4685, 0.22 ) }
    dend_17 { pt3dadd( -94.6814, 12.3494, -101.975, 0.22 ) }
    dend_17 { pt3dadd( -97.7989, 7.44496, -110.184, 0.22 ) }
    dend_17 { pt3dadd( -99.2538, 3.96105, -119.476, 0.22 ) }
    dend_17 { pt3dadd( -100.688, -0.939116, -128.141, 0.22 ) }
    dend_17 { pt3dadd( -100.625, -6.03152, -136.819, 0.22 ) }
    dend_17 { pt3dadd( -102.001, -12.4865, -144.464, 0.22 ) }
    dend_17 { pt3dadd( -103.652, -17.9332, -152.773, 0.22 ) }
    dend_17 { pt3dadd( -106.845, -23.0227, -160.845, 0.22 ) }
    dend_17 { pt3dadd( -109.992, -28.8191, -168.468, 0.22 ) }
    dend_17 { pt3dadd( -113.968, -35.087, -175.309, 0.22 ) }
    dend_17 { pt3dadd( -118.681, -41.0647, -181.925, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_2 = new SectionList()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_25, dend_0, dend_31, dend_26, dend_4, dend_1, dend_35, dend_32, dend_30, dend_27, dend_10, dend_5, dend_3, dend_2, dend_39, dend_36, dend_34, dend_33, dend_29, dend_28, dend_22, dend_11, dend_9, dend_6, dend_43, dend_40, dend_38, dend_37, dend_24, dend_23, dend_13, dend_12, dend_8, dend_7, dend_42, dend_41, dend_19, dend_14, dend_21, dend_20, dend_16, dend_15, dend_18, dend_17]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_35 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_5 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_2 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_33 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_29 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_28 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_22 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_11 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_9 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_40 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_38 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_37 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_7 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_42 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_19 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_15 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_25 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_4 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_10 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_6 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_3 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_23 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_18 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_10, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_10 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_26 nseg = 3
    dend_1 nseg = 3
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_27 nseg = 7
    dend_5 nseg = 3
    dend_2 nseg = 17
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_34 nseg = 9
    dend_33 nseg = 19
    dend_29 nseg = 3
    dend_28 nseg = 15
    dend_22 nseg = 3
    dend_11 nseg = 3
    dend_9 nseg = 9
    dend_43 nseg = 11
    dend_40 nseg = 11
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_24 nseg = 9
    dend_12 nseg = 9
    dend_8 nseg = 3
    dend_7 nseg = 7
    dend_42 nseg = 9
    dend_41 nseg = 7
    dend_19 nseg = 11
    dend_21 nseg = 9
    dend_20 nseg = 7
    dend_15 nseg = 21
    dend_17 nseg = 7
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_DBC_9daccafbcb_0_0


