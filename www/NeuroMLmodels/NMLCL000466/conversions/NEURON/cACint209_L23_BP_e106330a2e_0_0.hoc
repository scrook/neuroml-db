// Cell: cACint209_L23_BP_e106330a2e_0_0
/*
{
  "id" : "cACint209_L23_BP_e106330a2e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.559629, -8.92861, -0.706689, 1.8952", "-0.520561, -8.09769, -0.641537, 3.08207", "-0.481493, -7.26678, -0.576385, 4.07229", "-0.442425, -6.43586, -0.511233, 5.06251", "-0.403357, -5.60495, -0.446081, 6.03705", "-0.364289, -4.77403, -0.380929, 6.87153", "-0.325221, -3.94312, -0.315777, 7.33623", "-0.286154, -3.1122, -0.250625, 7.77277", "-0.247086, -2.28129, -0.185472, 8.20481", "-0.208018, -1.45038, -0.12032, 8.51332", "-0.16895, -0.619461, -0.0551684, 8.81943", "-0.129882, 0.211453, 0.00998366, 9.1018", "-0.0908139, 1.04237, 0.0751357, 8.76619", "-0.051746, 1.87328, 0.140288, 8.18075", "-0.0126781, 2.7042, 0.20544, 7.29107", "0.0263898, 3.53511, 0.270592, 6.47013", "0.0654577, 4.36603, 0.335744, 5.69271", "0.104526, 5.19694, 0.400896, 4.78435", "0.143594, 6.02786, 0.466048, 3.7615", "0.182661, 6.85877, 0.5312, 2.16282", "0.221729, 7.68968, 0.596352, 1.49642" ]
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-0.0529134, -8.92845, 10.7418, 1.66", "-0.513147, -10.7282, 12.233, 1.66", "-1.00989, -12.6707, 13.8426, 1.66", "-1.86299, -16.0067, 16.6068, 1.39", "-5.25577, -29.274, 27.6, 1.11", "-5.85094, -31.6014, 29.5284, 1.11", "-6.60474, -34.5491, 31.9709, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.617087, 7.86155, -0.778182, 1.39", "0.627167, 13.3477, 1.61559, 0.83", "0.630487, 15.1541, 2.40379, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.44999997245508955
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.221729, 7.68968, 0.596352, 0.55", "0.92622, 22.6731, 0.596352, 0.55", "1.63071, 37.6566, 0.596352, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.60474, -34.5491, 31.9709, 0.83", "-7.9002, -38.8382, 30.4429, 0.83", "-8.20866, -39.8595, 30.0791, 0.83", "-8.99605, -42.4664, 29.1504, 0.83", "-9.34901, -43.635, 28.7341, 0.83", "-10.1081, -46.1482, 27.8388, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-6.60474, -34.5491, 31.9709, 0.83", "-6.35831, -36.279, 32.3498, 0.83", "-6.13033, -37.8465, 32.6689, 0.83", "-5.892, -39.9134, 33.0458, 0.83", "-5.23859, -44.6248, 33.7996, 0.83", "-4.63589, -48.5045, 34.3738, 0.55", "-3.58413, -55.089, 35.2032, 0.55", "-2.9766, -58.3449, 35.6637, 0.83", "-2.19843, -62.0514, 36.2128, 0.55", "-0.788271, -68.0661, 37.3301, 0.55", "-0.354989, -69.7762, 37.6781, 0.55", "0.828835, -74.4099, 38.6516, 0.55", "2.30862, -80.2444, 40.0344, 0.55", "3.18165, -83.7376, 40.9022, 0.55", "4.28952, -88.397, 42.0926, 0.55", "5.96829, -96.8433, 44.2672, 0.55", "6.72961, -101.328, 45.3709, 0.55", "7.23549, -104.692, 46.1315, 0.55", "7.46786, -107.056, 46.5303, 0.55", "7.57426, -109.149, 46.8147, 0.55", "7.5922, -113.376, 47.4386, 0.55", "7.55054, -115.501, 47.7586, 0.55", "7.44183, -118.745, 48.3781, 0.55", "7.26649, -123.088, 49.2759, 0.55", "6.92029, -129.367, 50.65, 0.55", "6.62503, -135.009, 51.9761, 0.55", "6.30136, -139.936, 53.2255, 0.83", "5.94415, -144.637, 54.578, 0.83" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "0.630487, 15.1541, 2.40379, 0.83", "-0.595692, 22.668, -0.931451, 0.83", "-0.84111, 24.6493, -1.75279, 0.83", "-1.14943, 27.0779, -2.78289, 0.83", "-1.36074, 29.0844, -3.58391, 0.83", "-1.66669, 32.2933, -4.80314, 0.83", "-1.99155, 36.4908, -6.32055, 0.83", "-2.19031, 39.4727, -7.15253, 0.83", "-2.39099, 42.7001, -8.11506, 0.83", "-2.58547, 46.0156, -9.24269, 0.55", "-2.6486, 47.0656, -9.60584, 0.55", "-2.78684, 48.8613, -10.2314, 0.55", "-3.00845, 52.6116, -11.4837, 0.55", "-3.18726, 55.3316, -12.3531, 0.55", "-3.57958, 62.1491, -14.5363, 0.55", "-3.8187, 65.2265, -15.6418, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.630487, 15.1541, 2.40379, 0.83", "1.54065, 17.6014, 3.22428, 0.83", "2.21617, 19.5307, 3.9471, 0.83", "3.21147, 22.5713, 5.20083, 0.83", "4.14166, 25.5011, 6.44123, 0.83", "5.18804, 29.2085, 7.8661, 0.83", "5.96325, 32.0037, 8.86437, 0.83", "6.47279, 34.1165, 9.63234, 0.83", "6.99551, 36.4344, 10.3955, 0.83", "7.10631, 37.0651, 10.5697, 0.83", "8.32684, 44.3185, 12.1779, 0.83", "8.53984, 45.8604, 12.4196, 0.83", "8.79648, 47.9576, 12.6389, 0.83", "8.99419, 49.7729, 12.7886, 0.83", "9.18494, 51.8778, 12.93, 0.83", "9.44636, 54.5369, 13.1082, 0.83", "9.64382, 57.2756, 13.288, 0.83", "9.78499, 58.8407, 13.39, 0.83", "10.0699, 61.2627, 13.5392, 0.83", "10.3106, 63.6434, 13.6947, 0.83", "10.604, 66.1466, 13.8251, 0.83", "10.9905, 69.4178, 14.0313, 0.83", "11.2546, 71.554, 14.2652, 0.83", "11.3818, 72.7355, 14.4297, 0.83", "11.5065, 74.0709, 14.6872, 0.83", "11.7013, 76.0456, 15.1876, 0.83", "11.8772, 78.941, 16.122, 0.55", "12.1423, 82.7378, 17.504, 0.55", "12.1646, 83.8534, 17.9352, 0.55", "12.2002, 86.1998, 18.829, 0.55", "12.1877, 87.1833, 19.1908, 0.55", "12.1333, 89.0268, 19.8672, 0.55", "12.1027, 90.9515, 20.478, 0.55", "12.1647, 93.7519, 21.1906, 0.55", "12.2088, 95.5979, 21.6309, 0.55", "12.2134, 97.2774, 21.9788, 0.55", "12.2754, 99.3777, 22.4005, 0.55", "12.4648, 101.568, 22.7865, 0.55", "12.8176, 104.557, 23.3504, 0.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.63071, 37.6566, 0.596352, 0.55", "2.3352, 52.64, 0.596352, 0.55", "3.03969, 67.6235, 0.596352, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-10.1081, -46.1482, 27.8388, 0.83", "-11.5847, -50.2004, 29.5598, 0.83", "-12.7459, -53.4085, 30.7664, 0.83", "-14.1372, -57.2745, 32.0491, 0.83", "-15.2956, -60.467, 32.9998, 0.83", "-15.9996, -62.4071, 33.5776, 0.83", "-16.839, -64.7204, 34.2664, 0.83", "-17.3845, -66.3955, 34.641, 0.83", "-18.004, -68.306, 34.9822, 0.83", "-18.7514, -70.7431, 35.045, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-10.1081, -46.1482, 27.8388, 0.55", "-11.5337, -45.6517, 36.7954, 0.55", "-12.7948, -45.0061, 46.4163, 0.55", "-13.4354, -44.6781, 51.3035, 0.55", "-14.2423, -44.2651, 57.459, 0.28", "-14.3756, -44.1968, 58.4758, 0.83", "-15.0748, -43.8389, 63.8104, 0.28", "-15.1749, -43.7143, 64.7209, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.8187, 65.2265, -15.6418, 0.55", "-3.4973, 68.3447, -15.842, 0.55", "-3.14602, 71.6405, -16.1441, 0.55", "-2.89957, 73.9572, -16.3335, 0.55", "-2.49515, 77.4352, -16.5957, 0.83", "-2.20697, 79.9075, -16.7675, 0.55", "-1.91549, 82.2133, -16.9154, 0.55", "-1.64537, 84.3697, -16.9916, 1.11", "-1.14288, 88.1162, -17.2352, 0.55", "-1.00775, 89.3688, -17.3442, 0.55", "-0.84277, 90.9491, -17.5005, 1.11", "-0.647281, 92.91, -17.7099, 0.55", "-0.544141, 94.1906, -17.8496, 1.11", "-0.270768, 98.0978, -18.2384, 0.55", "-0.190887, 100.157, -18.5946, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-3.8187, 65.2265, -15.6418, 0.28", "-3.73032, 68.0164, -18.446, 0.28", "-3.70237, 68.435, -18.8506, 0.55", "-3.4177, 72.1376, -22.2604, 0.28", "-3.02973, 75.5991, -25.6067, 1.11", "-2.75896, 77.4041, -27.4355, 0.28", "-2.75896, 77.4041, -27.4355, 0.55", "-2.23609, 79.608, -29.1552, 0.28", "-1.97568, 80.4553, -29.7082, 1.11", "-0.30824, 84.2326, -30.9412, 0.55", "1.2697, 87.1798, -30.8899, 0.28", "3.94764, 91.7938, -30.178, 1.11", "6.32448, 95.7072, -29.1133, 0.28", "6.38444, 95.7982, -29.0668, 0.55", "8.19011, 98.3766, -27.2174, 0.28", "8.35173, 98.6028, -26.9902, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-18.7514, -70.7431, 35.045, 0.83", "-18.7021, -76.1695, 36.9094, 0.83", "-18.6816, -80.5218, 38.7005, 0.83", "-18.6157, -82.5605, 39.5495, 0.83", "-18.5933, -83.7317, 40.1386, 0.83", "-18.6138, -86.931, 41.8281, 0.83", "-18.6391, -88.8234, 42.6912, 0.83", "-18.6543, -92.4226, 43.9796, 0.83", "-18.562, -94.922, 44.8794, 0.83", "-18.1952, -99.1963, 46.2671, 0.83", "-17.8923, -101.399, 46.8332, 0.83", "-17.0178, -106.828, 47.7063, 0.83", "-16.2747, -111.673, 48.1713, 0.83", "-15.7644, -115.68, 48.2124, 0.83", "-15.5342, -118.578, 48.16, 0.83", "-15.4966, -119.162, 48.1306, 0.83", "-15.4167, -122.511, 48.1359, 0.28", "-15.456, -123.396, 48.2008, 0.83", "-15.7113, -125.674, 48.3089, 0.28", "-16.2186, -129.719, 48.4378, 0.28", "-16.3372, -130.586, 48.4981, 0.28", "-16.6952, -133.352, 48.7113, 0.83", "-16.9512, -135.801, 48.9325, 0.28", "-17.1441, -137.765, 49.1368, 0.83", "-17.2346, -139.338, 49.3423, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-18.7514, -70.7431, 35.045, 0.55", "-21.0206, -73.0529, 34.6242, 0.55", "-22.0142, -74.038, 34.497, 0.55", "-24.1411, -76.125, 34.3153, 0.55", "-25.0645, -77.015, 34.2737, 0.55", "-25.986, -77.875, 34.2761, 0.28", "-26.3978, -78.2594, 34.2772, 0.55", "-27.4036, -79.1347, 34.3992, 0.28", "-28.0592, -79.7031, 34.5017, 0.55", "-28.834, -80.3627, 34.7174, 0.28", "-30.0493, -81.3388, 35.0611, 0.28" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_5", "dend_0", "dend_7", "dend_6", "dend_2", "dend_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_5", "dend_0", "axon_0", "dend_7", "dend_6", "dend_2", "dend_1", "axon_1", "dend_9", "dend_8", "dend_4", "dend_3", "dend_11", "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "axon_0", "axon_0", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_BP_e106330a2e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_12
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_5(0), soma_0(0.44999997245508955)
    connect dend_0(0), soma_0(0.44999997245508955)
    connect axon_0(0), soma_0(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.559629, -8.92861, -0.706689, 1.8952 ) }
    soma_0 { pt3dadd( -0.520561, -8.09769, -0.641537, 3.08207 ) }
    soma_0 { pt3dadd( -0.481493, -7.26678, -0.576385, 4.07229 ) }
    soma_0 { pt3dadd( -0.442425, -6.43586, -0.511233, 5.06251 ) }
    soma_0 { pt3dadd( -0.403357, -5.60495, -0.446081, 6.03705 ) }
    soma_0 { pt3dadd( -0.364289, -4.77403, -0.380929, 6.87153 ) }
    soma_0 { pt3dadd( -0.325221, -3.94312, -0.315777, 7.33623 ) }
    soma_0 { pt3dadd( -0.286154, -3.1122, -0.250625, 7.77277 ) }
    soma_0 { pt3dadd( -0.247086, -2.28129, -0.185472, 8.20481 ) }
    soma_0 { pt3dadd( -0.208018, -1.45038, -0.12032, 8.51332 ) }
    soma_0 { pt3dadd( -0.16895, -0.619461, -0.0551684, 8.81943 ) }
    soma_0 { pt3dadd( -0.129882, 0.211453, 0.00998366, 9.1018 ) }
    soma_0 { pt3dadd( -0.0908139, 1.04237, 0.0751357, 8.76619 ) }
    soma_0 { pt3dadd( -0.051746, 1.87328, 0.140288, 8.18075 ) }
    soma_0 { pt3dadd( -0.0126781, 2.7042, 0.20544, 7.29107 ) }
    soma_0 { pt3dadd( 0.0263898, 3.53511, 0.270592, 6.47013 ) }
    soma_0 { pt3dadd( 0.0654577, 4.36603, 0.335744, 5.69271 ) }
    soma_0 { pt3dadd( 0.104526, 5.19694, 0.400896, 4.78435 ) }
    soma_0 { pt3dadd( 0.143594, 6.02786, 0.466048, 3.7615 ) }
    soma_0 { pt3dadd( 0.182661, 6.85877, 0.5312, 2.16282 ) }
    soma_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 1.49642 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -0.0529134, -8.92845, 10.7418, 1.66 ) }
    dend_5 { pt3dadd( -0.513147, -10.7282, 12.233, 1.66 ) }
    dend_5 { pt3dadd( -1.00989, -12.6707, 13.8426, 1.66 ) }
    dend_5 { pt3dadd( -1.86299, -16.0067, 16.6068, 1.39 ) }
    dend_5 { pt3dadd( -5.25577, -29.274, 27.6, 1.11 ) }
    dend_5 { pt3dadd( -5.85094, -31.6014, 29.5284, 1.11 ) }
    dend_5 { pt3dadd( -6.60474, -34.5491, 31.9709, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 28/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.617087, 7.86155, -0.778182, 1.39 ) }
    dend_0 { pt3dadd( 0.627167, 13.3477, 1.61559, 0.83 ) }
    dend_0 { pt3dadd( 0.630487, 15.1541, 2.40379, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 31/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.221729, 7.68968, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 0.92622, 22.6731, 0.596352, 0.55 ) }
    axon_0 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 34/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.60474, -34.5491, 31.9709, 0.83 ) }
    dend_7 { pt3dadd( -7.9002, -38.8382, 30.4429, 0.83 ) }
    dend_7 { pt3dadd( -8.20866, -39.8595, 30.0791, 0.83 ) }
    dend_7 { pt3dadd( -8.99605, -42.4664, 29.1504, 0.83 ) }
    dend_7 { pt3dadd( -9.34901, -43.635, 28.7341, 0.83 ) }
    dend_7 { pt3dadd( -10.1081, -46.1482, 27.8388, 0.83 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 40/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -6.60474, -34.5491, 31.9709, 0.83 ) }
    dend_6 { pt3dadd( -6.35831, -36.279, 32.3498, 0.83 ) }
    dend_6 { pt3dadd( -6.13033, -37.8465, 32.6689, 0.83 ) }
    dend_6 { pt3dadd( -5.892, -39.9134, 33.0458, 0.83 ) }
    dend_6 { pt3dadd( -5.23859, -44.6248, 33.7996, 0.83 ) }
    dend_6 { pt3dadd( -4.63589, -48.5045, 34.3738, 0.55 ) }
    dend_6 { pt3dadd( -3.58413, -55.089, 35.2032, 0.55 ) }
    dend_6 { pt3dadd( -2.9766, -58.3449, 35.6637, 0.83 ) }
    dend_6 { pt3dadd( -2.19843, -62.0514, 36.2128, 0.55 ) }
    dend_6 { pt3dadd( -0.788271, -68.0661, 37.3301, 0.55 ) }
    dend_6 { pt3dadd( -0.354989, -69.7762, 37.6781, 0.55 ) }
    dend_6 { pt3dadd( 0.828835, -74.4099, 38.6516, 0.55 ) }
    dend_6 { pt3dadd( 2.30862, -80.2444, 40.0344, 0.55 ) }
    dend_6 { pt3dadd( 3.18165, -83.7376, 40.9022, 0.55 ) }
    dend_6 { pt3dadd( 4.28952, -88.397, 42.0926, 0.55 ) }
    dend_6 { pt3dadd( 5.96829, -96.8433, 44.2672, 0.55 ) }
    dend_6 { pt3dadd( 6.72961, -101.328, 45.3709, 0.55 ) }
    dend_6 { pt3dadd( 7.23549, -104.692, 46.1315, 0.55 ) }
    dend_6 { pt3dadd( 7.46786, -107.056, 46.5303, 0.55 ) }
    dend_6 { pt3dadd( 7.57426, -109.149, 46.8147, 0.55 ) }
    dend_6 { pt3dadd( 7.5922, -113.376, 47.4386, 0.55 ) }
    dend_6 { pt3dadd( 7.55054, -115.501, 47.7586, 0.55 ) }
    dend_6 { pt3dadd( 7.44183, -118.745, 48.3781, 0.55 ) }
    dend_6 { pt3dadd( 7.26649, -123.088, 49.2759, 0.55 ) }
    dend_6 { pt3dadd( 6.92029, -129.367, 50.65, 0.55 ) }
    dend_6 { pt3dadd( 6.62503, -135.009, 51.9761, 0.55 ) }
    dend_6 { pt3dadd( 6.30136, -139.936, 53.2255, 0.83 ) }
    dend_6 { pt3dadd( 5.94415, -144.637, 54.578, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 0.630487, 15.1541, 2.40379, 0.83 ) }
    dend_2 { pt3dadd( -0.595692, 22.668, -0.931451, 0.83 ) }
    dend_2 { pt3dadd( -0.84111, 24.6493, -1.75279, 0.83 ) }
    dend_2 { pt3dadd( -1.14943, 27.0779, -2.78289, 0.83 ) }
    dend_2 { pt3dadd( -1.36074, 29.0844, -3.58391, 0.83 ) }
    dend_2 { pt3dadd( -1.66669, 32.2933, -4.80314, 0.83 ) }
    dend_2 { pt3dadd( -1.99155, 36.4908, -6.32055, 0.83 ) }
    dend_2 { pt3dadd( -2.19031, 39.4727, -7.15253, 0.83 ) }
    dend_2 { pt3dadd( -2.39099, 42.7001, -8.11506, 0.83 ) }
    dend_2 { pt3dadd( -2.58547, 46.0156, -9.24269, 0.55 ) }
    dend_2 { pt3dadd( -2.6486, 47.0656, -9.60584, 0.55 ) }
    dend_2 { pt3dadd( -2.78684, 48.8613, -10.2314, 0.55 ) }
    dend_2 { pt3dadd( -3.00845, 52.6116, -11.4837, 0.55 ) }
    dend_2 { pt3dadd( -3.18726, 55.3316, -12.3531, 0.55 ) }
    dend_2 { pt3dadd( -3.57958, 62.1491, -14.5363, 0.55 ) }
    dend_2 { pt3dadd( -3.8187, 65.2265, -15.6418, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 84/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.630487, 15.1541, 2.40379, 0.83 ) }
    dend_1 { pt3dadd( 1.54065, 17.6014, 3.22428, 0.83 ) }
    dend_1 { pt3dadd( 2.21617, 19.5307, 3.9471, 0.83 ) }
    dend_1 { pt3dadd( 3.21147, 22.5713, 5.20083, 0.83 ) }
    dend_1 { pt3dadd( 4.14166, 25.5011, 6.44123, 0.83 ) }
    dend_1 { pt3dadd( 5.18804, 29.2085, 7.8661, 0.83 ) }
    dend_1 { pt3dadd( 5.96325, 32.0037, 8.86437, 0.83 ) }
    dend_1 { pt3dadd( 6.47279, 34.1165, 9.63234, 0.83 ) }
    dend_1 { pt3dadd( 6.99551, 36.4344, 10.3955, 0.83 ) }
    dend_1 { pt3dadd( 7.10631, 37.0651, 10.5697, 0.83 ) }
    dend_1 { pt3dadd( 8.32684, 44.3185, 12.1779, 0.83 ) }
    dend_1 { pt3dadd( 8.53984, 45.8604, 12.4196, 0.83 ) }
    dend_1 { pt3dadd( 8.79648, 47.9576, 12.6389, 0.83 ) }
    dend_1 { pt3dadd( 8.99419, 49.7729, 12.7886, 0.83 ) }
    dend_1 { pt3dadd( 9.18494, 51.8778, 12.93, 0.83 ) }
    dend_1 { pt3dadd( 9.44636, 54.5369, 13.1082, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 9.64382, 57.2756, 13.288, 0.83 ) }
    dend_1 { pt3dadd( 9.78499, 58.8407, 13.39, 0.83 ) }
    dend_1 { pt3dadd( 10.0699, 61.2627, 13.5392, 0.83 ) }
    dend_1 { pt3dadd( 10.3106, 63.6434, 13.6947, 0.83 ) }
    dend_1 { pt3dadd( 10.604, 66.1466, 13.8251, 0.83 ) }
    dend_1 { pt3dadd( 10.9905, 69.4178, 14.0313, 0.83 ) }
    dend_1 { pt3dadd( 11.2546, 71.554, 14.2652, 0.83 ) }
    dend_1 { pt3dadd( 11.3818, 72.7355, 14.4297, 0.83 ) }
    dend_1 { pt3dadd( 11.5065, 74.0709, 14.6872, 0.83 ) }
    dend_1 { pt3dadd( 11.7013, 76.0456, 15.1876, 0.83 ) }
    dend_1 { pt3dadd( 11.8772, 78.941, 16.122, 0.55 ) }
    dend_1 { pt3dadd( 12.1423, 82.7378, 17.504, 0.55 ) }
    dend_1 { pt3dadd( 12.1646, 83.8534, 17.9352, 0.55 ) }
    dend_1 { pt3dadd( 12.2002, 86.1998, 18.829, 0.55 ) }
    dend_1 { pt3dadd( 12.1877, 87.1833, 19.1908, 0.55 ) }
    dend_1 { pt3dadd( 12.1333, 89.0268, 19.8672, 0.55 ) }
    dend_1 { pt3dadd( 12.1027, 90.9515, 20.478, 0.55 ) }
    dend_1 { pt3dadd( 12.1647, 93.7519, 21.1906, 0.55 ) }
    dend_1 { pt3dadd( 12.2088, 95.5979, 21.6309, 0.55 ) }
    dend_1 { pt3dadd( 12.2134, 97.2774, 21.9788, 0.55 ) }
    dend_1 { pt3dadd( 12.2754, 99.3777, 22.4005, 0.55 ) }
    dend_1 { pt3dadd( 12.4648, 101.568, 22.7865, 0.55 ) }
    dend_1 { pt3dadd( 12.8176, 104.557, 23.3504, 0.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.63071, 37.6566, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 2.3352, 52.64, 0.596352, 0.55 ) }
    axon_1 { pt3dadd( 3.03969, 67.6235, 0.596352, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 26/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -10.1081, -46.1482, 27.8388, 0.83 ) }
    dend_9 { pt3dadd( -11.5847, -50.2004, 29.5598, 0.83 ) }
    dend_9 { pt3dadd( -12.7459, -53.4085, 30.7664, 0.83 ) }
    dend_9 { pt3dadd( -14.1372, -57.2745, 32.0491, 0.83 ) }
    dend_9 { pt3dadd( -15.2956, -60.467, 32.9998, 0.83 ) }
    dend_9 { pt3dadd( -15.9996, -62.4071, 33.5776, 0.83 ) }
    dend_9 { pt3dadd( -16.839, -64.7204, 34.2664, 0.83 ) }
    dend_9 { pt3dadd( -17.3845, -66.3955, 34.641, 0.83 ) }
    dend_9 { pt3dadd( -18.004, -68.306, 34.9822, 0.83 ) }
    dend_9 { pt3dadd( -18.7514, -70.7431, 35.045, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 36/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -10.1081, -46.1482, 27.8388, 0.55 ) }
    dend_8 { pt3dadd( -11.5337, -45.6517, 36.7954, 0.55 ) }
    dend_8 { pt3dadd( -12.7948, -45.0061, 46.4163, 0.55 ) }
    dend_8 { pt3dadd( -13.4354, -44.6781, 51.3035, 0.55 ) }
    dend_8 { pt3dadd( -14.2423, -44.2651, 57.459, 0.28 ) }
    dend_8 { pt3dadd( -14.3756, -44.1968, 58.4758, 0.83 ) }
    dend_8 { pt3dadd( -15.0748, -43.8389, 63.8104, 0.28 ) }
    dend_8 { pt3dadd( -15.1749, -43.7143, 64.7209, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 44/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.8187, 65.2265, -15.6418, 0.55 ) }
    dend_4 { pt3dadd( -3.4973, 68.3447, -15.842, 0.55 ) }
    dend_4 { pt3dadd( -3.14602, 71.6405, -16.1441, 0.55 ) }
    dend_4 { pt3dadd( -2.89957, 73.9572, -16.3335, 0.55 ) }
    dend_4 { pt3dadd( -2.49515, 77.4352, -16.5957, 0.83 ) }
    dend_4 { pt3dadd( -2.20697, 79.9075, -16.7675, 0.55 ) }
    dend_4 { pt3dadd( -1.91549, 82.2133, -16.9154, 0.55 ) }
    dend_4 { pt3dadd( -1.64537, 84.3697, -16.9916, 1.11 ) }
    dend_4 { pt3dadd( -1.14288, 88.1162, -17.2352, 0.55 ) }
    dend_4 { pt3dadd( -1.00775, 89.3688, -17.3442, 0.55 ) }
    dend_4 { pt3dadd( -0.84277, 90.9491, -17.5005, 1.11 ) }
    dend_4 { pt3dadd( -0.647281, 92.91, -17.7099, 0.55 ) }
    dend_4 { pt3dadd( -0.544141, 94.1906, -17.8496, 1.11 ) }
    dend_4 { pt3dadd( -0.270768, 98.0978, -18.2384, 0.55 ) }
    dend_4 { pt3dadd( -0.190887, 100.157, -18.5946, 1.11 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 59/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -3.8187, 65.2265, -15.6418, 0.28 ) }
    dend_3 { pt3dadd( -3.73032, 68.0164, -18.446, 0.28 ) }
    dend_3 { pt3dadd( -3.70237, 68.435, -18.8506, 0.55 ) }
    dend_3 { pt3dadd( -3.4177, 72.1376, -22.2604, 0.28 ) }
    dend_3 { pt3dadd( -3.02973, 75.5991, -25.6067, 1.11 ) }
    dend_3 { pt3dadd( -2.75896, 77.4041, -27.4355, 0.28 ) }
    dend_3 { pt3dadd( -2.75896, 77.4041, -27.4355, 0.55 ) }
    dend_3 { pt3dadd( -2.23609, 79.608, -29.1552, 0.28 ) }
    dend_3 { pt3dadd( -1.97568, 80.4553, -29.7082, 1.11 ) }
    dend_3 { pt3dadd( -0.30824, 84.2326, -30.9412, 0.55 ) }
    dend_3 { pt3dadd( 1.2697, 87.1798, -30.8899, 0.28 ) }
    dend_3 { pt3dadd( 3.94764, 91.7938, -30.178, 1.11 ) }
    dend_3 { pt3dadd( 6.32448, 95.7072, -29.1133, 0.28 ) }
    dend_3 { pt3dadd( 6.38444, 95.7982, -29.0668, 0.55 ) }
    dend_3 { pt3dadd( 8.19011, 98.3766, -27.2174, 0.28 ) }
    dend_3 { pt3dadd( 8.35173, 98.6028, -26.9902, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -18.7514, -70.7431, 35.045, 0.83 ) }
    dend_11 { pt3dadd( -18.7021, -76.1695, 36.9094, 0.83 ) }
    dend_11 { pt3dadd( -18.6816, -80.5218, 38.7005, 0.83 ) }
    dend_11 { pt3dadd( -18.6157, -82.5605, 39.5495, 0.83 ) }
    dend_11 { pt3dadd( -18.5933, -83.7317, 40.1386, 0.83 ) }
    dend_11 { pt3dadd( -18.6138, -86.931, 41.8281, 0.83 ) }
    dend_11 { pt3dadd( -18.6391, -88.8234, 42.6912, 0.83 ) }
    dend_11 { pt3dadd( -18.6543, -92.4226, 43.9796, 0.83 ) }
    dend_11 { pt3dadd( -18.562, -94.922, 44.8794, 0.83 ) }
    dend_11 { pt3dadd( -18.1952, -99.1963, 46.2671, 0.83 ) }
    dend_11 { pt3dadd( -17.8923, -101.399, 46.8332, 0.83 ) }
    dend_11 { pt3dadd( -17.0178, -106.828, 47.7063, 0.83 ) }
    dend_11 { pt3dadd( -16.2747, -111.673, 48.1713, 0.83 ) }
    dend_11 { pt3dadd( -15.7644, -115.68, 48.2124, 0.83 ) }
    dend_11 { pt3dadd( -15.5342, -118.578, 48.16, 0.83 ) }
    dend_11 { pt3dadd( -15.4966, -119.162, 48.1306, 0.83 ) }
    dend_11 { pt3dadd( -15.4167, -122.511, 48.1359, 0.28 ) }
    dend_11 { pt3dadd( -15.456, -123.396, 48.2008, 0.83 ) }
    dend_11 { pt3dadd( -15.7113, -125.674, 48.3089, 0.28 ) }
    dend_11 { pt3dadd( -16.2186, -129.719, 48.4378, 0.28 ) }
    dend_11 { pt3dadd( -16.3372, -130.586, 48.4981, 0.28 ) }
    dend_11 { pt3dadd( -16.6952, -133.352, 48.7113, 0.83 ) }
    dend_11 { pt3dadd( -16.9512, -135.801, 48.9325, 0.28 ) }
    dend_11 { pt3dadd( -17.1441, -137.765, 49.1368, 0.83 ) }
    dend_11 { pt3dadd( -17.2346, -139.338, 49.3423, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 0/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -18.7514, -70.7431, 35.045, 0.55 ) }
    dend_10 { pt3dadd( -21.0206, -73.0529, 34.6242, 0.55 ) }
    dend_10 { pt3dadd( -22.0142, -74.038, 34.497, 0.55 ) }
    dend_10 { pt3dadd( -24.1411, -76.125, 34.3153, 0.55 ) }
    dend_10 { pt3dadd( -25.0645, -77.015, 34.2737, 0.55 ) }
    dend_10 { pt3dadd( -25.986, -77.875, 34.2761, 0.28 ) }
    dend_10 { pt3dadd( -26.3978, -78.2594, 34.2772, 0.55 ) }
    dend_10 { pt3dadd( -27.4036, -79.1347, 34.3992, 0.28 ) }
    dend_10 { pt3dadd( -28.0592, -79.7031, 34.5017, 0.55 ) }
    dend_10 { pt3dadd( -28.834, -80.3627, 34.7174, 0.28 ) }
    dend_10 { pt3dadd( -30.0493, -81.3388, 35.0611, 0.28 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_2 = new SectionList()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_5, dend_0, dend_7, dend_6, dend_2, dend_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_5, dend_0, axon_0, dend_7, dend_6, dend_2, dend_1, axon_1, dend_9, dend_8, dend_4, dend_3, dend_11, dend_10]}
    ModelViewParmSubset_5 = new SectionList()
    dend_5 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_6 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_2 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_1 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_3 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_11 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_0 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_5 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_7 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_9 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_8 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_4 OneSecGrp_SectionRef_12.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, axon_0, axon_0, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    axon_0 all.append()
    axon_0 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_6 nseg = 5
    dend_2 nseg = 3
    dend_1 nseg = 5
    dend_3 nseg = 3
    dend_11 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_BP_e106330a2e_0_0


