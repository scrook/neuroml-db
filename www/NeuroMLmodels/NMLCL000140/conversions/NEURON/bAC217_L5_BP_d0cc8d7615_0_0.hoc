// Cell: bAC217_L5_BP_d0cc8d7615_0_0
/*
{
  "id" : "bAC217_L5_BP_d0cc8d7615_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.52847, 2.40803, 0.83", "-3.28953, 8.90532, 2.88526, 0.83", "-6.41843, 11.4518, 3.35714, 1.11", "-8.26325, 12.9521, 3.6026, 0.83", "-10.0556, 14.3972, 3.82253, 0.83", "-11.1168, 15.2212, 3.94305, 1.11", "-14.4399, 17.796, 4.32931, 1.11", "-20.3837, 22.2042, 5.0121, 0.83", "-22.525, 23.7318, 5.23758, 0.83", "-24.2207, 24.9055, 5.37763, 0.83", "-25.8743, 26.0688, 5.49886, 0.83", "-27.2203, 27.0275, 5.56426, 0.55", "-28.2321, 27.6767, 5.63065, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.70947, -5.68197, 0.55", "4.68099, 6.5788, -6.24774, 0.55", "7.46846, 7.21194, -6.87023, 0.55", "9.08592, 7.37176, -7.69392, 0.83", "11.6458, 7.54185, -9.22398, 0.55", "12.8816, 7.62395, -9.96257, 1.38", "15.92, 7.82583, -11.7786, 0.55", "17.214, 7.75747, -12.6451, 0.83", "23.9081, 6.50376, -17.5136, 0.55", "24.5557, 6.33517, -18.0492, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.66503, 2.42803, 1.11", "-0.687877, -11.3691, 3.35128, 1.11", "-0.743343, -16.5076, 5.10571, 1.11", "-0.765933, -18.6004, 5.82022, 0.83", "-0.795943, -21.3807, 6.76949, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.96697, -1.26197, 1.11", "0.97919, 10.0773, -1.4013, 1.11", "1.19101, 11.9364, -1.41403, 1.11", "1.56098, 14.968, -1.33127, 1.38", "1.58512, 15.1366, -1.32473, 1.38", "2.00459, 17.2136, -1.26058, 0.83", "2.56366, 19.4013, -1.11049, 0.83", "3.47554, 21.8508, -0.726202, 0.83", "3.96151, 22.7696, -0.507567, 0.83", "4.41706, 23.4273, -0.312459, 1.11", "5.69357, 25.0168, 0.156845, 0.55", "7.17195, 26.6651, 0.727114, 0.83", "9.0232, 28.3358, 1.31473, 0.55", "9.93665, 29.0189, 1.55557, 0.83", "11.2357, 29.9397, 1.96899, 0.55", "12.8746, 31.1119, 2.56618, 0.55", "15.2155, 32.8856, 3.53124, 0.55", "17.8018, 34.9196, 4.59794, 0.55", "19.4986, 36.2386, 5.4672, 0.55", "21.6571, 37.9056, 6.76743, 0.55", "22.1155, 38.2382, 7.07163, 0.83", "23.3494, 39.1153, 7.94777, 0.55", "24.363, 39.7952, 8.62073, 0.83", "26.7395, 41.6816, 10.2314, 0.55", "27.5758, 42.3727, 10.6587, 0.83", "28.2971, 42.874, 10.8991, 0.55", "28.9774, 43.3011, 11.0432, 0.83", "30.4321, 44.0808, 11.2321, 0.83", "32.3121, 45.1495, 11.3369, 0.83", "33.4351, 45.8648, 11.2933, 0.55", "34.2986, 46.4918, 11.2641, 0.55", "36.5507, 48.1103, 11.1579, 0.83", "37.988, 49.1486, 11.0374, 0.55", "40.1401, 50.666, 10.7751, 0.55", "42.0795, 51.9279, 10.4635, 0.55", "43.7955, 52.9914, 10.1419, 0.55", "45.9264, 54.2282, 9.64416, 0.55", "47.2036, 54.8166, 9.30014, 0.55", "48.0366, 55.1385, 8.96547, 0.55", "49.0964, 55.346, 8.42759, 0.55", "50.6126, 55.3636, 7.49006, 0.55", "51.5346, 55.2321, 6.86597, 0.55", "52.9133, 54.9927, 6.05923, 0.55", "55.6303, 54.631, 4.77775, 0.55", "57.8228, 54.4576, 3.93174, 0.55", "60.2021, 54.3951, 3.17678, 0.55", "61.7713, 54.4097, 2.81295, 0.55", "65.9618, 54.8362, 2.12799, 0.55", "68.5134, 55.2831, 1.89901, 0.55", "70.4897, 55.7413, 1.89181, 0.55", "71.7183, 56.214, 1.92884, 0.55", "73.1536, 56.9461, 1.9656, 0.55", "75.5385, 58.4224, 1.84054, 0.55", "76.0651, 58.7813, 1.74526, 0.55", "77.5403, 59.7358, 1.38085, 0.55", "78.9055, 60.7679, 1.04116, 0.83", "79.6477, 61.3416, 0.844795, 0.55", "80.7554, 62.3385, 0.509526, 0.83", "87.0662, 67.6356, 0.182974, 0.83", "92.545, 73.8411, -0.477613, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.2321, 27.6767, 5.63065, 0.55", "-29.6741, 28.5542, 4.84426, 0.55", "-31.2422, 29.5085, 3.98915, 0.55", "-33.1345, 30.6601, 2.95722, 0.55", "-34.697, 31.611, 2.10512, 0.83", "-36.0064, 32.4078, 1.39106, 0.55", "-38.4369, 33.8868, 0.0656714, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-28.2321, 27.6767, 5.63065, 0.55", "-30.696, 28.0914, 5.51905, 0.55", "-33.2933, 28.4681, 5.6642, 0.55", "-36.2322, 28.8959, 5.90064, 0.55", "-40.4532, 29.4982, 6.63643, 0.55", "-43.9607, 29.9136, 7.51346, 0.55", "-47.6241, 30.3015, 8.59748, 0.55", "-51.1254, 30.4504, 10.0549, 0.55", "-54.1059, 30.2841, 11.6363, 0.55", "-57.7768, 29.8244, 14.0456, 0.55", "-59.3493, 29.5131, 15.3391, 0.55", "-61.0404, 29.1627, 16.8167, 0.55", "-64.0307, 28.2765, 19.2972, 0.55", "-65.6461, 27.789, 20.347, 0.55", "-67.3378, 27.2197, 21.4407, 0.55", "-69.3694, 26.5538, 22.5228, 0.55", "-71.584, 25.8759, 23.6312, 0.55", "-74.7507, 24.894, 25.1416, 0.55", "-79.0223, 23.8615, 26.7375, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "24.5557, 6.33517, -18.0492, 0.55", "30.5432, 8.20948, -19.3503, 0.55", "34.0124, 9.05401, -20.5832, 0.55", "37.4448, 9.72271, -21.8433, 0.55", "39.7946, 10.0807, -22.6993, 0.55", "43.2324, 10.5211, -23.9204, 0.55", "50.3744, 11.2803, -26.6709, 0.55", "58.488, 12.0655, -30.3302, 0.55", "62.4389, 12.1769, -32.3665, 0.55", "64.5596, 12.1765, -33.5933, 0.55", "66.886, 12.1839, -35.0329, 0.55", "71.0428, 12.0769, -37.5805, 0.55", "72.5574, 11.9435, -38.5517, 0.55", "78.97, 11.5253, -43.161, 0.55", "83.5108, 11.2912, -46.7596, 0.55", "86.1238, 11.2064, -48.9049, 0.55", "88.731, 11.098, -51.0416, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "24.5557, 6.33517, -18.0492, 0.83", "27.1235, 7.71834, -17.9817, 0.83", "28.5898, 8.51485, -18.0071, 0.55", "30.7486, 9.75454, -18.2142, 0.83", "32.2023, 10.6299, -18.391, 0.55", "34.2121, 11.8873, -18.6006, 0.83", "36.6347, 13.4367, -18.7623, 0.55", "37.8471, 14.1216, -18.8063, 0.55", "40.6096, 15.2989, -18.7633, 0.83", "43.0984, 16.0282, -18.4455, 0.55", "44.491, 16.4067, -18.1402, 0.83", "46.5884, 16.9971, -17.4635, 0.55", "49.6129, 17.8577, -16.1127, 0.55", "53.7988, 18.8116, -14.0543, 0.55", "57.7833, 19.5466, -11.8414, 0.55", "60.9381, 20.0887, -10.0372, 0.55", "66.1418, 21.0039, -7.03342, 0.55", "69.9596, 21.7751, -4.74188, 0.55", "72.282, 22.4265, -3.25386, 0.55", "76.5952, 24.0607, -0.424577, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.795943, -21.3807, 6.76949, 0.83", "-0.986035, -23.9796, 6.66714, 0.83", "-1.17124, -26.5117, 6.56742, 0.83", "-1.37802, -29.3388, 6.45608, 0.83", "-1.486, -30.8151, 6.39795, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.795943, -21.3807, 6.76949, 0.55", "-0.25069, -23.1432, 8.01753, 0.55", "0.200411, -25.3076, 9.61519, 0.55", "0.364666, -28.157, 11.7758, 0.55", "0.351396, -29.2669, 12.6369, 0.83", "0.0382065, -32.1063, 15.1181, 0.55", "-0.24079, -33.5762, 16.4146, 0.55", "-0.852561, -36.4361, 19.0453, 0.83", "-1.43626, -38.5631, 21.1153, 0.55", "-2.06318, -40.3223, 22.7821, 0.55", "-3.31573, -43.6564, 25.8746, 0.55", "-4.3085, -46.3137, 28.3102, 0.55", "-5.06633, -48.4427, 30.2951, 0.55", "-5.74619, -50.6996, 32.3468, 0.28", "-5.95097, -51.6374, 33.1747, 0.55", "-6.27697, -53.3684, 34.6147, 0.28", "-6.39588, -56.0607, 36.4987, 0.55", "-8.89611, -65.0805, 43.022, 0.55", "-11.707, -73.4239, 50.2019, 0.55", "-14.208, -80.2733, 58.7942, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-38.4369, 33.8868, 0.0656714, 0.55", "-41.5275, 34.0734, 1.58421, 0.55", "-42.8314, 34.0686, 2.37671, 0.83", "-44.3611, 33.9717, 3.49833, 0.55", "-45.5343, 33.8901, 4.4609, 0.83", "-48.6094, 33.7903, 6.96357, 0.55", "-49.7742, 33.7719, 7.92143, 0.28", "-51.7208, 33.7527, 9.68079, 0.55", "-54.3326, 33.7434, 12.0305, 0.55", "-56.3134, 33.7429, 13.7254, 0.55", "-58.9574, 33.747, 15.9066, 0.28", "-59.6423, 33.7587, 16.3923, 0.55", "-61.0588, 33.8037, 17.3458, 0.28", "-62.0186, 33.8659, 17.9059, 0.55", "-63.9736, 33.9897, 18.8805, 0.28", "-65.119, 34.0007, 19.3895, 0.55", "-67.139, 33.8658, 20.2943, 0.28", "-68.4944, 33.769, 20.8543, 0.55", "-76.8392, 32.2554, 27.8699, 0.55", "-84.4851, 29.6264, 35.3617, 0.55", "-91.8304, 25.9232, 42.7368, 0.55", "-99.1011, 20.9446, 49.4731, 0.55", "-105.213, 16.3531, 57.4876, 0.55", "-112.12, 12.2061, 65.0667, 0.55", "-119.189, 9.89055, 73.1924, 0.55", "-126.209, 6.68213, 81.0789, 0.55", "-133.046, 4.21037, 89.3593, 0.55", "-139.391, 1.55112, 97.9707, 0.55", "-144.668, -2.41736, 106.836, 0.55", "-150.064, -5.34375, 115.997, 0.55", "-155.575, -9.38031, 124.691, 0.55", "-159.833, -13.9287, 133.845, 0.55", "-162.312, -17.7553, 143.909, 0.55", "-164.672, -23.6137, 153.068, 0.55", "-165.47, -29.6865, 162.368, 0.55", "-166.862, -35.3004, 171.859, 0.55", "-169.436, -40.1063, 181.507, 0.55", "-174.276, -43.115, 190.949, 0.55", "-178.165, -47.3931, 200.382, 0.55", "-180.07, -49.8424, 210.954, 0.55", "-183.712, -51.4274, 221.219, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-38.4369, 33.8868, 0.0656714, 0.55", "-39.8874, 35.0126, -2.11303, 0.55", "-40.9036, 36.2557, -4.45585, 0.55", "-41.8145, 37.7329, -6.88945, 0.55", "-42.3849, 38.6579, -8.41335, 0.55", "-43.4254, 40.3452, -11.1931, 0.83", "-44.1866, 41.5797, -13.2268, 0.55", "-44.9643, 43.2933, -16.1797, 0.83", "-45.1688, 44.4032, -17.785, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-79.0223, 23.8615, 26.7375, 0.28", "-80.1193, 21.3124, 27.1526, 0.28", "-80.6646, 20.1892, 27.2604, 0.28", "-81.3749, 18.5908, 27.3526, 0.55", "-81.9548, 17.1909, 27.4371, 0.28", "-82.8035, 15.067, 27.5837, 0.55", "-85.1338, 8.85892, 28.0771, 0.28", "-85.9093, 6.64216, 28.092, 0.55", "-87.0971, 3.20119, 28.0153, 0.28", "-87.7886, 1.12221, 27.8875, 0.55", "-88.2708, -0.318956, 27.7714, 0.28", "-88.8183, -1.96953, 27.6484, 0.55", "-90.4397, -7.43407, 27.319, 0.28", "-90.9596, -9.10258, 27.1747, 0.55", "-91.9137, -11.7249, 26.7584, 0.28", "-92.725, -13.4493, 26.4038, 0.28", "-93.4606, -14.622, 26.1622, 0.55", "-96.0134, -17.922, 25.6287, 0.28", "-97.1976, -19.2606, 25.457, 0.55", "-100.118, -22.3636, 24.9516, 0.28", "-103.049, -25.1445, 24.5038, 0.28", "-106.251, -27.8504, 24.0326, 0.28", "-107.717, -28.8873, 23.8855, 0.55", "-114.469, -39.1641, 23.2893, 0.55", "-121.669, -49.013, 24.9368, 0.55", "-129.017, -58.8561, 24.7711, 0.55", "-136.781, -68.228, 23.4947, 0.55", "-144.876, -77.005, 21.0594, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-79.0223, 23.8615, 26.7375, 0.55", "-80.086, 23.7682, 26.9846, 0.55", "-83.0516, 23.5444, 28.0748, 0.55", "-84.1603, 23.4349, 28.548, 0.55", "-86.7625, 23.0955, 29.709, 0.55", "-90.7828, 22.5997, 31.2912, 0.55", "-92.8765, 22.4082, 32.0695, 0.28", "-96.1392, 22.0276, 33.2217, 0.55", "-98.5693, 21.6833, 33.9927, 0.55", "-99.5952, 21.5307, 34.3211, 0.28", "-105.749, 20.6117, 36.2831, 0.55", "-108.639, 20.0233, 37.0326, 0.28", "-112.557, 19.1926, 37.8128, 0.28", "-115.954, 18.5111, 38.281, 0.55", "-128.983, 18.169, 42.8298, 0.55", "-141.424, 17.5987, 48.7886, 0.55", "-152.981, 15.6897, 56.1211, 0.55", "-164.122, 16.3002, 64.2493, 0.55", "-173.338, 16.6528, 74.521, 0.55", "-180.421, 17.9779, 86.2993, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "88.731, 11.098, -51.0416, 0.55", "94.3512, 12.3304, -56.0968, 0.55", "96.1595, 12.5995, -57.7642, 0.55", "98.4385, 12.8775, -59.793, 0.55", "102.609, 13.2499, -63.6812, 0.55", "107.016, 13.4294, -67.7581, 0.55", "109.208, 13.3808, -69.6272, 0.83", "111.055, 13.1756, -71.233, 0.55", "112.478, 12.8681, -72.5068, 0.83", "116.039, 11.6272, -75.581, 0.55", "119.033, 10.3713, -78.0208, 0.55", "122.467, 8.96746, -80.6825, 0.55", "126.274, 7.46631, -83.751, 0.55", "128.846, 6.38756, -85.8366, 0.55", "131.758, 5.13079, -88.2597, 0.55", "134.271, 4.05524, -90.528, 0.55", "135.84, 3.42202, -92.1783, 0.55", "137.998, 1.96079, -95.5342, 0.55", "139.231, 0.942834, -97.5999, 0.55", "140.479, -0.648395, -100.284, 0.55", "142.377, -3.55369, -104.747, 0.55", "142.794, -4.25711, -105.732, 0.28", "148.065, -12.918, -117.642, 0.28", "149.73, -15.4, -121.152, 0.83", "156.082, -24.3595, -133.473, 0.83", "159.288, -28.7376, -139.067, 0.83", "160.763, -30.5814, -141.278, 0.55", "162.365, -32.3482, -143.426, 0.55", "166.343, -35.4843, -147.346, 0.55", "170.418, -38.1364, -150.765, 0.28", "171.484, -38.2966, -150.86, 0.55", "173.711, -38.1905, -150.426, 0.28", "175.045, -37.9564, -150.022, 0.55", "176.426, -37.6813, -149.482, 0.28", "178.056, -37.241, -148.802, 0.55", "180.492, -36.5678, -148.089, 0.28", "182.469, -36.1121, -147.549, 0.55", "184.641, -35.5422, -147.183, 0.28", "187.619, -34.8677, -146.936, 0.55", "190.961, -34.1214, -146.882, 0.55", "193.913, -33.5131, -147.033, 0.28", "198.014, -32.7291, -147.469, 0.55", "205.136, -31.5004, -149.012, 0.55", "208.284, -30.9608, -150.119, 0.55", "209.639, -30.7357, -150.754, 0.83", "212.24, -30.3866, -152.19, 0.55", "214.04, -30.1225, -153.323, 0.83", "218.856, -29.3153, -156.479, 0.55", "221.855, -29.0438, -158.385, 0.28", "223.122, -28.9446, -159.025, 0.55", "226.629, -28.8125, -160.286, 0.28", "227.876, -28.8364, -160.606, 0.55", "230.443, -28.8742, -160.848, 0.28", "233.068, -28.9622, -160.588, 0.55", "238.343, -29.0297, -159.124, 0.28", "240.774, -29.0551, -158.175, 0.55", "244.418, -29.2025, -156.505, 0.28", "248.999, -29.3083, -154.257, 0.55", "252.297, -29.3238, -152.606, 0.55", "257.958, -29.1536, -149.738, 0.28", "260.275, -29.0628, -148.779, 0.55", "264.262, -28.8741, -147.616, 0.28", "268.191, -28.5209, -146.837, 0.55", "270.32, -28.2245, -146.789, 0.28", "272.196, -27.7782, -147.0, 0.55", "277.467, -26.4269, -148.208, 0.28", "281.174, -25.2385, -149.249, 0.28", "284.341, -23.9974, -150.309, 0.55", "287.832, -22.608, -151.7, 0.28", "288.694, -22.1905, -152.047, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "88.731, 11.098, -51.0416, 0.55", "89.4167, 9.08912, -52.2007, 0.55", "89.8523, 7.37764, -53.0683, 0.28", "90.248, 5.81247, -53.7365, 0.55", "91.2476, 2.50963, -55.182, 0.28", "91.3055, 2.3006, -55.3009, 0.55", "91.6385, 1.20638, -56.0091, 0.28", "91.8376, 0.290654, -56.7314, 0.55", "91.9963, -0.672428, -57.588, 0.28", "92.1779, -1.99076, -58.8134, 0.55", "92.631, -5.30001, -61.832, 0.55", "93.0128, -8.32039, -64.6333, 0.55", "93.296, -10.7366, -66.8755, 0.55", "93.5338, -13.1148, -69.0404, 0.55", "93.5931, -13.7288, -69.5755, 0.28", "93.6729, -14.382, -70.0964, 0.55", "93.8604, -15.2777, -70.7396, 0.28", "94.3464, -16.8659, -71.7539, 0.55", "95.5146, -19.8744, -73.2393, 0.55", "96.1544, -21.4877, -73.8993, 0.28", "96.7154, -23.1378, -74.6394, 0.55", "97.3429, -25.4654, -75.7592, 0.28", "97.7374, -27.3553, -76.7049, 0.55", "98.2153, -30.1915, -78.1245, 0.28", "98.7284, -33.1222, -79.5084, 0.55", "99.4215, -37.3831, -81.5529, 0.28", "99.7452, -39.6588, -82.6498, 0.55", "100.043, -41.991, -83.8232, 0.28", "100.286, -44.0494, -84.9753, 0.28", "100.674, -46.6221, -86.622, 0.55", "101.185, -48.9918, -88.0925, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "76.5952, 24.0607, -0.424577, 0.55", "78.9648, 23.5005, 0.0321653, 0.55", "80.6827, 23.0336, 0.192487, 0.55", "84.4359, 21.9798, 0.338776, 0.55", "86.1174, 21.4796, 0.247484, 0.55", "87.9549, 20.9827, 0.0551467, 0.55", "90.4235, 20.3752, -0.379091, 0.55", "93.0156, 19.6787, -1.09673, 0.55", "94.3713, 19.3055, -1.6353, 0.55", "97.1187, 18.5746, -3.11969, 0.55", "98.3843, 18.2525, -3.84428, 0.55", "101.342, 17.4416, -5.62695, 0.55", "103.337, 16.8028, -6.82404, 0.55", "104.806, 16.3174, -7.63567, 0.83", "107.143, 15.4438, -8.91212, 0.55", "109.421, 14.4577, -10.0782, 0.83", "111.346, 13.5167, -11.0023, 0.55", "113.064, 12.7002, -11.7269, 0.55", "114.048, 12.2794, -12.0778, 0.83", "116.347, 11.2953, -12.7686, 0.28", "117.497, 10.8526, -13.0314, 0.28", "118.6, 10.3511, -13.3522, 0.28", "119.797, 9.84467, -13.7018, 0.28", "121.715, 9.07723, -14.2998, 0.28", "122.488, 8.77716, -14.5154, 0.55", "124.344, 8.06633, -14.8393, 0.55", "127.686, 6.7386, -15.2492, 0.55", "128.609, 6.34124, -15.3223, 0.55", "129.431, 5.95408, -15.353, 0.83", "131.226, 5.1626, -15.2632, 0.55", "132.788, 4.47601, -15.1588, 0.55", "134.265, 3.83359, -15.0524, 0.55", "135.405, 3.31676, -15.0055, 0.55", "137.197, 2.3656, -15.0354, 0.55", "139.283, 1.04759, -15.2114, 0.55", "142.475, -1.39235, -15.7631, 0.55", "144.193, -3.01751, -16.2123, 0.55", "145.647, -4.71704, -16.7104, 0.28", "146.067, -5.33574, -16.8975, 0.55", "146.956, -7.04644, -17.398, 0.28", "147.671, -8.94491, -17.9153, 0.55", "148.282, -11.3036, -18.3778, 0.55", "148.7, -12.8601, -18.6136, 0.28", "148.856, -13.4124, -18.6723, 0.55", "149.268, -14.7873, -18.8012, 0.28", "149.842, -16.5818, -18.9302, 0.55", "151.377, -20.9245, -19.1467, 0.55", "152.187, -23.1186, -19.2148, 0.55", "152.942, -25.1315, -19.2611, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "76.5952, 24.0607, -0.424577, 0.55", "78.5968, 24.0094, 1.05734, 0.55", "79.2384, 23.9949, 1.49771, 0.55", "81.6212, 23.8369, 3.01939, 0.55", "84.285, 23.7091, 4.76525, 0.55", "87.6988, 23.526, 7.09075, 0.55", "88.6418, 23.4773, 7.72707, 0.55", "90.3293, 23.3256, 8.84196, 0.55", "92.1819, 23.212, 10.0021, 0.55", "94.3398, 23.1539, 11.2654, 0.55", "96.3752, 23.1275, 12.4676, 0.55", "97.4951, 23.1716, 13.0845, 0.55", "98.8125, 23.2621, 13.8127, 0.55", "100.446, 23.4257, 14.6924, 0.83", "103.119, 23.7233, 15.8601, 0.55", "104.884, 23.8603, 16.5395, 0.83", "107.327, 23.9472, 17.3824, 0.55", "108.075, 23.9336, 17.6241, 0.55", "110.386, 23.78, 18.3079, 0.55", "114.504, 23.2703, 19.3279, 0.55", "117.508, 22.7335, 19.979, 0.55", "119.879, 22.1871, 20.5318, 0.55", "122.288, 21.4871, 21.157, 0.55", "122.793, 21.3254, 21.2888, 0.28", "123.816, 20.9549, 21.5468, 0.83", "128.011, 19.3661, 22.6207, 0.55", "130.946, 18.2658, 23.3151, 0.55", "133.359, 17.4186, 23.9564, 0.55", "134.801, 16.906, 24.3527, 0.83", "135.937, 16.5194, 24.6696, 0.28", "136.967, 16.1718, 24.9475, 0.55", "145.14, 15.3549, 28.6063, 0.55", "153.683, 13.3094, 30.4759, 0.55", "162.268, 12.3318, 32.9422, 0.55", "169.865, 9.86423, 37.0488, 0.55", "176.841, 6.1449, 41.3302, 0.55", "184.359, 1.40627, 42.9163, 0.55", "191.666, -3.9628, 42.8704, 0.55", "199.865, -7.69307, 42.5535, 0.55", "207.966, -11.6392, 42.8065, 0.55", "216.48, -14.5352, 42.6575, 0.55", "225.001, -17.1852, 43.7185, 0.55", "232.86, -21.4168, 44.9852, 0.55", "241.065, -24.1723, 47.3922, 0.55", "249.024, -25.7218, 51.2618, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.486, -30.8151, 6.39795, 1.38", "1.08517, -34.8321, 4.22499, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.486, -30.8151, 6.39795, 0.55", "-3.22789, -33.0373, 6.41576, 0.55", "-5.15266, -35.8879, 6.4336, 0.55", "-6.65228, -37.7741, 6.46719, 0.55", "-7.91501, -39.3493, 6.2924, 0.55", "-10.6692, -42.6091, 5.64432, 0.55", "-12.6009, -44.7851, 5.13545, 0.55", "-14.3181, -46.7357, 4.61592, 0.55", "-18.7306, -51.4815, 3.28759, 0.55", "-24.0336, -56.9753, 1.73659, 0.55", "-28.1404, -61.1351, 0.462889, 0.55", "-30.7609, -63.8669, -0.389705, 0.55", "-33.7672, -67.1457, -1.35974, 0.55", "-37.5792, -71.8527, -2.54326, 0.55", "-39.8078, -75.1964, -3.19207, 0.55", "-42.5561, -80.0116, -3.74973, 0.55", "-44.7461, -84.5275, -4.11069, 0.55", "-46.9571, -90.1673, -4.44542, 0.55", "-49.0394, -96.7934, -4.67965, 0.55", "-50.1582, -101.862, -4.73869, 0.55", "-50.5526, -104.386, -4.60955, 0.55", "-51.1429, -110.322, -3.99537, 0.55", "-51.602, -115.877, -3.28169, 0.55", "-51.7936, -121.478, -2.16653, 0.55", "-51.9366, -124.691, -1.36044, 0.55", "-52.3235, -134.63, 1.47924, 0.55", "-52.3568, -135.362, 1.70049, 0.55", "-52.4806, -139.845, 3.16046, 0.55", "-53.0585, -147.861, 5.94712, 0.55", "-53.2655, -150.541, 6.72763, 0.55", "-53.6828, -154.725, 7.26482, 0.55", "-53.7972, -156.278, 7.12647, 0.55", "-53.9567, -161.529, 5.72054, 0.55", "-53.8744, -164.928, 4.12823, 0.55", "-53.595, -170.337, 0.5441, 0.55", "-52.9937, -176.952, -4.32712, 0.28", "-52.8191, -178.587, -5.74221, 0.55", "-52.5452, -181.063, -8.09626, 0.28", "-52.5071, -181.436, -8.46998, 0.55", "-52.3119, -183.481, -10.3491, 0.28", "-52.292, -184.175, -10.8347, 0.55", "-52.2716, -187.79, -12.6935, 0.28", "-52.3102, -189.02, -13.3115, 0.55", "-52.4657, -192.577, -14.9059, 0.28", "-52.5098, -193.697, -15.4039, 0.55", "-52.693, -197.562, -17.0623, 0.28", "-52.7683, -199.339, -17.8338, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-14.208, -80.2733, 58.7942, 0.55", "-18.7121, -88.542, 66.4033, 0.55", "-24.3054, -95.6823, 74.3267, 0.55", "-29.6283, -103.64, 81.7132, 0.55", "-35.1563, -111.629, 88.9187, 0.55", "-39.5359, -121.053, 95.2861, 0.55", "-43.7768, -130.091, 102.223, 0.55", "-46.8104, -141.087, 106.829, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-14.208, -80.2733, 58.7942, 0.55", "-13.6766, -90.5686, 67.8648, 0.55", "-12.766, -102.405, 74.9855, 0.55", "-14.01, -114.21, 82.1319, 0.55", "-16.1031, -126.619, 88.0653, 0.55", "-17.6486, -139.01, 94.1852, 0.55", "-19.034, -150.923, 101.143, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-45.1688, 44.4032, -17.785, 0.83", "-44.3934, 47.1565, -19.9969, 0.83", "-42.7291, 53.7572, -24.9025, 0.55", "-42.0344, 56.5848, -26.8106, 0.83", "-41.3047, 59.5929, -28.6685, 0.55", "-40.6045, 62.6511, -30.191, 0.55", "-40.2645, 64.1711, -30.7774, 0.28", "-40.1252, 65.1553, -30.9436, 0.55", "-39.6497, 68.3824, -30.8398, 0.28", "-39.4222, 69.7576, -30.7264, 0.55", "-38.7088, 74.5191, -30.1554, 0.28", "-38.2503, 78.2782, -29.5928, 0.55", "-37.8214, 84.1243, -28.5719, 0.28", "-37.6269, 89.2489, -27.6001, 0.28", "-37.6826, 92.1071, -27.0209, 0.55", "-37.9479, 95.489, -26.3554, 0.28", "-38.1786, 97.097, -26.0277, 0.55", "-38.9003, 100.888, -25.4441, 0.28", "-39.5272, 103.421, -25.2004, 0.28", "-40.1847, 105.914, -25.0394, 0.28", "-40.4837, 107.234, -24.9538, 0.55", "-41.4075, 112.596, -24.6954, 0.28", "-42.2894, 118.967, -24.4767, 0.55", "-42.5627, 121.17, -24.4058, 0.55", "-42.8752, 123.372, -24.2936, 0.55", "-43.7639, 128.047, -24.1549, 0.55", "-44.526, 131.113, -24.1484, 0.28", "-44.9396, 132.269, -24.1757, 0.55", "-46.2755, 135.382, -24.211, 0.28", "-47.8117, 138.701, -24.3896, 0.55", "-50.4216, 143.467, -24.8741, 0.28", "-51.7089, 145.452, -25.1624, 0.28", "-53.8057, 148.219, -25.8689, 0.55", "-56.156, 151.106, -26.7725, 0.28", "-56.5871, 151.557, -26.9437, 0.55", "-58.1486, 152.992, -27.5698, 0.28", "-63.5572, 157.567, -29.6582, 0.55", "-71.0696, 163.224, -32.9299, 0.28", "-72.4512, 164.179, -33.6308, 0.55", "-76.2419, 166.647, -35.6381, 0.28", "-77.8295, 167.662, -36.5288, 0.28", "-79.2034, 168.512, -37.3765, 0.55", "-83.2055, 170.493, -40.2384, 0.28", "-86.0532, 171.554, -42.1713, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-45.1688, 44.4032, -17.785, 0.55", "-45.3397, 45.8412, -17.8922, 0.55", "-45.4651, 46.6858, -17.8817, 0.28", "-45.6769, 47.2813, -17.7404, 0.55", "-46.1632, 48.6488, -17.4157, 0.28", "-46.5048, 49.6093, -17.1877, 0.55", "-47.1346, 51.38, -16.7673, 0.28", "-47.5733, 52.3195, -16.388, 0.55", "-49.3098, 54.5078, -14.7479, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-144.876, -77.005, 21.0594, 0.55", "-149.663, -85.0868, 22.0217, 0.55", "-152.985, -93.9663, 22.6291, 0.55", "-155.707, -102.919, 21.2624, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-144.876, -77.005, 21.0594, 0.55", "-150.555, -85.3815, 20.1671, 0.55", "-155.331, -94.1372, 18.1927, 0.55", "-159.713, -103.068, 16.0476, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-180.421, 17.9779, 86.2993, 0.55", "-188.951, 19.0644, 93.4648, 0.55", "-198.284, 21.2005, 99.2847, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-180.421, 17.9779, 86.2993, 0.55", "-188.828, 16.9469, 90.4281, 0.55", "-197.332, 17.5436, 94.4299, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "101.185, -48.9918, -88.0925, 0.28", "109.037, -52.9392, -98.6758, 0.28", "109.786, -53.3991, -99.6177, 0.55", "111.051, -54.1757, -101.208, 0.28", "112.115, -54.8295, -102.547, 0.28", "113.525, -55.695, -104.32, 0.55", "115.383, -56.8361, -106.657, 0.55", "117.435, -58.9824, -107.805, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "101.185, -48.9918, -88.0925, 0.55", "102.152, -50.5369, -89.4694, 0.55", "102.462, -51.2395, -90.0839, 0.28", "102.933, -52.45, -91.1631, 0.55", "103.971, -55.1164, -93.5404, 0.28", "104.69, -56.9644, -95.188, 0.55", "105.908, -60.0952, -97.9793, 0.28", "107.299, -63.9434, -101.684, 0.28", "107.866, -65.7201, -103.423, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "152.942, -25.1315, -19.2611, 0.28", "154.365, -27.1916, -18.3313, 0.28", "156.167, -29.8577, -16.8712, 0.28", "157.307, -31.57, -15.85, 0.55", "158.002, -32.5047, -15.2375, 0.28", "158.371, -33.0066, -14.9025, 0.28", "160.202, -35.4948, -13.2898, 0.55", "160.627, -36.0296, -12.8538, 0.28", "161.63, -37.4115, -11.5971, 0.55", "162.482, -38.6265, -10.5612, 0.28", "163.23, -39.6206, -9.74096, 0.55", "164.101, -40.8296, -8.84262, 0.55", "165.478, -42.8152, -7.68081, 0.55", "165.809, -43.3069, -7.41432, 0.55", "166.987, -45.1473, -6.4403, 0.28", "167.439, -45.9039, -6.06285, 0.55", "168.077, -46.8723, -5.5849, 0.28", "168.974, -48.263, -4.9714, 0.55", "170.457, -50.537, -4.33101, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "152.942, -25.1315, -19.2611, 0.55", "150.073, -24.9423, -19.2391, 0.55", "147.744, -24.7885, -19.2213, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.08517, -34.8321, 4.22499, 0.83", "1.21529, -35.1658, 4.16252, 0.83", "2.80932, -38.1349, 3.69278, 0.83", "4.17222, -40.7314, 3.12105, 0.55", "5.25953, -42.8028, 2.66493, 0.55", "7.57064, -47.2057, 1.69544, 0.83", "10.3738, -52.5462, 0.519507, 0.55", "11.9203, -55.3447, -0.0591841, 0.83", "14.7241, -59.8099, -0.860529, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.08517, -34.8321, 4.22499, 0.55", "-1.35228, -35.6982, 2.40346, 0.55", "-3.96859, -36.6279, 0.448277, 0.55", "-7.05716, -37.7254, -1.85984, 0.55", "-10.8077, -39.0581, -4.66264, 0.55", "-12.936, -39.8144, -6.25313, 0.55", "-13.3636, -39.9663, -6.57264, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-19.034, -150.923, 101.143, 0.55", "-19.2585, -160.898, 107.761, 0.55", "-17.9338, -171.535, 113.196, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-19.034, -150.923, 101.143, 0.55", "-19.7502, -158.543, 105.217, 0.55", "-20.8605, -165.981, 109.5, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-49.3098, 54.5078, -14.7479, 0.28", "-50.877, 56.702, -12.7133, 0.28", "-51.4624, 57.5343, -11.8452, 0.55", "-53.1296, 59.9464, -9.28049, 0.28", "-53.9658, 61.1404, -8.1331, 0.55", "-56.2609, 64.3715, -5.1422, 0.28", "-58.5935, 67.6555, -2.10235, 0.55", "-62.4622, 72.8012, 2.98482, 0.28", "-63.2853, 73.9065, 4.06893, 0.55", "-65.0943, 76.4954, 6.36054, 0.28", "-65.7961, 77.5688, 7.25878, 0.55", "-74.0807, 84.739, 15.1033, 0.55", "-83.3569, 93.3673, 19.9305, 0.55", "-91.1762, 102.377, 26.4025, 0.55", "-97.22, 113.041, 32.4732, 0.55", "-104.693, 123.174, 37.735, 0.55", "-113.275, 131.228, 44.3895, 0.55", "-120.947, 138.245, 52.9486, 0.55", "-127.362, 143.888, 63.2886, 0.55", "-133.796, 150.317, 73.1851, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-49.3098, 54.5078, -14.7479, 0.55", "-52.8838, 53.0459, -13.9418, 0.55", "-54.7386, 52.2232, -13.5339, 0.28", "-56.119, 51.6109, -13.2304, 0.55", "-57.2694, 51.1007, -12.9774, 0.28", "-58.0752, 50.7432, -12.8002, 0.55", "-60.2972, 49.7577, -12.3116, 0.28", "-61.7476, 48.9968, -12.1834, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-155.707, -102.919, 21.2624, 0.55", "-158.171, -110.358, 22.7274, 0.55", "-160.336, -117.699, 25.0023, 0.55", "-162.155, -125.423, 25.9055, 0.55", "-164.578, -132.766, 27.8584, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-155.707, -102.919, 21.2624, 0.55", "-160.411, -107.13, 17.0983, 0.55", "-165.106, -110.309, 12.1612, 0.55", "-170.042, -114.399, 8.16038, 0.55", "-176.257, -117.385, 5.19355, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-159.713, -103.068, 16.0476, 0.55", "-166.648, -111.285, 9.28979, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-159.713, -103.068, 16.0476, 0.55", "-162.972, -113.303, 19.476, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "117.435, -58.9824, -107.805, 0.28", "120.21, -60.5022, -109.056, 0.28", "121.5, -61.2081, -109.637, 0.55", "123.958, -62.5543, -110.746, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "117.435, -58.9824, -107.805, 0.55", "116.942, -60.2928, -109.944, 0.55", "115.956, -62.9138, -114.224, 0.28", "115.634, -63.7676, -115.619, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "107.866, -65.7201, -103.423, 0.28", "109.588, -69.5378, -106.079, 0.28", "110.44, -71.4281, -107.395, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "107.866, -65.7201, -103.423, 0.55", "106.122, -66.6238, -102.422, 0.55", "101.259, -69.1438, -99.6293, 0.28", "100.104, -69.7424, -98.9661, 0.55", "96.9433, -71.38, -97.1518, 0.28", "94.9062, -72.4356, -95.9823, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.7241, -59.8099, -0.860529, 0.83", "14.7327, -60.0691, -0.894041, 0.83", "14.9225, -63.4597, -1.26553, 0.83", "14.9222, -65.9924, -1.32676, 0.83", "14.8525, -68.4295, -1.10334, 0.83", "14.7384, -71.6661, -0.548354, 0.83", "14.5604, -75.3901, 0.249135, 0.83", "14.4505, -79.5453, 1.32998, 0.83", "14.4071, -83.5787, 2.54742, 0.83", "14.0243, -88.5231, 4.04643, 0.83", "13.6922, -90.7932, 4.66026, 0.83", "13.4002, -92.502, 5.02662, 0.83", "12.7537, -95.7795, 5.69002, 0.83", "12.1825, -98.7197, 6.11426, 0.83", "11.037, -105.011, 6.27211, 0.83", "10.2962, -108.461, 5.94067, 0.83", "9.53425, -111.643, 5.42727, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "14.7241, -59.8099, -0.860529, 0.55", "13.6442, -62.3702, -0.291751, 0.55", "12.8809, -64.2241, 0.257909, 0.55", "12.4606, -65.4073, 0.708957, 0.55", "11.9427, -67.2571, 1.55257, 0.55", "11.0819, -70.9166, 3.41, 0.55", "10.5087, -73.6773, 5.10533, 0.55", "10.1287, -75.8837, 6.68278, 0.55", "9.74636, -78.1059, 8.44089, 0.55", "9.44668, -79.9455, 9.99395, 0.28", "9.25437, -81.4417, 11.4759, 0.55", "8.97261, -84.151, 14.5533, 0.55", "8.77405, -85.8033, 16.6397, 0.55", "8.64995, -86.7288, 17.8031, 0.55", "8.43171, -87.8201, 19.1394, 0.83", "7.68381, -91.0616, 22.905, 0.28", "7.4274, -92.1353, 24.123, 0.55", "7.00073, -94.0777, 26.2414, 0.28", "6.88442, -94.6752, 26.9357, 0.55", "6.6766, -96.0819, 28.5135, 0.28", "6.54366, -96.8839, 29.3529, 0.55", "5.7213, -99.5085, 31.4724, 0.55", "6.10297, -106.565, 39.2035, 0.55", "7.08998, -113.282, 47.1511, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-13.3636, -39.9663, -6.57264, 0.55", "-16.2341, -41.0318, -9.55093, 0.55", "-17.0748, -41.2704, -10.3945, 0.55", "-19.192, -41.8644, -12.4317, 0.55", "-23.821, -43.0034, -16.7043, 0.28", "-24.5108, -43.1531, -17.2981, 0.55", "-27.4056, -43.8534, -19.6572, 0.55", "-31.3927, -44.7887, -22.5115, 0.55", "-32.9144, -45.0955, -23.571, 0.28", "-34.2407, -45.2672, -24.4315, 0.28", "-36.5145, -45.495, -25.6082, 0.55", "-39.2694, -45.649, -27.1523, 0.28", "-41.787, -45.5755, -28.6491, 0.55", "-43.7159, -45.3524, -29.781, 0.55", "-45.0297, -45.0874, -30.6097, 0.55", "-48.8649, -44.1359, -33.1724, 0.55", "-52.8719, -42.8428, -35.8126, 0.55", "-54.5179, -42.2097, -36.8684, 0.28", "-56.0839, -41.6365, -37.899, 0.55", "-59.2884, -40.6882, -39.942, 0.28", "-60.3711, -40.4008, -40.6164, 0.83", "-62.3959, -39.8303, -41.7395, 0.28", "-63.875, -39.5213, -42.3503, 0.55", "-66.0336, -39.147, -43.1892, 0.28", "-66.8928, -38.9849, -43.4962, 0.55", "-68.4912, -38.7098, -43.9788, 0.55", "-70.8784, -38.0426, -44.6343, 0.55", "-72.4274, -37.5024, -44.9823, 0.28", "-73.6577, -36.9011, -45.1745, 0.55", "-75.0848, -36.0064, -45.4203, 0.28", "-75.3172, -35.8398, -45.4703, 0.55", "-77.4568, -34.2731, -46.3221, 0.28", "-79.0058, -33.1129, -47.115, 0.55", "-81.0314, -31.454, -48.4659, 0.83", "-82.6943, -30.0577, -49.7795, 0.28", "-83.1241, -29.703, -50.1637, 0.55", "-86.4256, -27.0485, -53.302, 0.28", "-87.0042, -26.5982, -53.9111, 0.55", "-88.6939, -25.1493, -55.8316, 0.28", "-89.1302, -24.7768, -56.3308, 0.55", "-90.2498, -23.803, -57.5296, 0.28", "-91.0425, -23.0997, -58.3251, 0.55", "-92.8186, -21.5114, -59.8124, 0.28", "-93.8857, -20.6491, -60.6456, 0.55", "-96.1878, -18.959, -62.2822, 0.28", "-96.8796, -18.4961, -62.7554, 0.55", "-97.978, -17.8591, -63.4491, 0.28", "-98.9094, -17.3193, -63.9893, 0.55", "-100.849, -16.2191, -64.988, 0.28", "-101.436, -15.9007, -65.268, 0.55", "-105.782, -13.4314, -67.1435, 0.28", "-107.29, -12.4418, -67.6708, 0.55", "-109.959, -10.5261, -68.4396, 0.28", "-111.154, -9.60846, -68.7505, 0.55", "-113.894, -7.5167, -69.2937, 0.28", "-114.906, -6.79553, -69.4428, 0.55", "-118.611, -4.53493, -69.7477, 0.28", "-120.185, -3.80132, -69.8451, 0.55", "-122.487, -3.14543, -69.9295, 0.55", "-123.915, -2.83363, -69.9405, 0.55", "-126.825, -2.26417, -69.7327, 0.28", "-129.68, -1.72452, -69.345, 0.28", "-132.052, -1.26248, -68.9527, 0.55", "-134.885, -0.42064, -68.1704, 0.28", "-136.237, 0.191763, -67.6014, 0.55", "-139.324, 2.23993, -65.9424, 0.28", "-140.787, 3.6753, -64.6899, 0.55", "-141.652, 4.7998, -63.6419, 0.28", "-142.548, 6.077, -62.1507, 0.55", "-143.608, 7.74338, -60.0907, 0.28", "-144.02, 8.33775, -59.3143, 0.55", "-146.331, 11.066, -55.6573, 0.28", "-147.124, 11.9374, -54.4322, 0.55", "-149.008, 13.8984, -51.4434, 0.28", "-150.036, 14.9446, -49.819, 0.55", "-150.883, 15.8024, -48.4857, 0.55", "-151.91, 16.8145, -46.9294, 0.28", "-152.489, 17.3296, -46.242, 0.55", "-154.47, 19.1434, -44.0981, 0.28", "-155.469, 20.2594, -42.9602, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-13.3636, -39.9663, -6.57264, 0.55", "-13.0374, -40.238, -7.79457, 0.55", "-12.6528, -40.37, -9.02155, 0.55", "-12.0808, -40.4296, -10.5298, 0.55", "-11.5485, -40.3783, -11.7423, 0.55", "-7.37866, -39.2149, -19.452, 0.55", "-6.42232, -38.7411, -21.2155, 0.55", "-5.02041, -37.8396, -23.8636, 0.55", "-4.02725, -37.1358, -25.7482, 0.55", "-3.01423, -36.3419, -27.5622, 0.28", "-1.332, -34.9639, -30.2692, 0.55", "1.35762, -32.7926, -34.1491, 0.28", "1.52038, -32.674, -34.5488, 0.55", "1.89136, -32.3707, -37.4056, 0.28", "1.8076, -32.2569, -39.3627, 0.55", "1.50247, -32.2662, -41.4675, 0.55", "0.877856, -32.4772, -45.2347, 0.55", "-0.334114, -32.9481, -52.6282, 0.55", "-1.0665, -33.3286, -57.6033, 0.55", "-1.27542, -33.481, -59.3253, 0.55", "-2.36983, -34.418, -70.6716, 0.55", "-2.53128, -34.639, -73.7551, 0.55", "-2.49197, -34.7765, -75.4902, 0.55", "-2.05956, -35.235, -79.5185, 0.55", "-0.511026, -36.8927, -89.0932, 0.55", "0.0054121, -37.4579, -91.6473, 0.28", "0.40351, -37.8566, -93.0733, 0.55", "1.02428, -38.5424, -95.1703, 0.28", "1.3352, -38.9216, -96.0058, 0.55", "2.82175, -40.4973, -98.14, 0.28", "4.41348, -42.4065, -98.7164, 0.55", "5.36817, -43.7327, -98.9732, 0.28", "6.25375, -45.1609, -99.0614, 0.55", "7.01848, -46.6825, -99.0338, 0.28", "7.33027, -47.4567, -99.0283, 0.55", "8.04648, -49.4657, -98.918, 0.28", "8.20031, -50.0626, -98.9614, 0.55", "9.0266, -53.4877, -99.3806, 0.28", "9.40395, -55.0822, -99.7688, 0.55", "10.236, -58.5107, -100.97, 0.28", "10.5586, -59.7824, -101.549, 0.55", "11.7077, -63.9814, -103.715, 0.28", "11.9834, -65.0039, -104.281, 0.55", "12.7513, -68.2348, -106.159, 0.28", "12.9052, -68.9859, -106.538, 0.55", "13.2569, -70.9633, -107.509, 0.28", "13.4458, -72.1142, -108.175, 0.55", "13.6461, -73.2505, -108.917, 0.55", "14.0508, -75.5174, -110.384, 0.28", "14.3808, -76.9373, -111.466, 0.55", "15.6378, -80.5734, -115.036, 0.28", "16.1592, -81.7801, -116.496, 0.55", "16.5471, -82.5558, -117.495, 0.28", "16.9695, -83.2756, -118.503, 0.55", "18.3605, -85.3261, -121.582, 0.28", "19.442, -86.9118, -123.861, 0.55", "21.3868, -89.8806, -127.486, 0.28", "22.0048, -90.8063, -128.623, 0.55", "23.3002, -92.5218, -130.642, 0.28", "23.7622, -93.0867, -131.262, 0.55", "24.6118, -93.9939, -132.078, 0.28", "25.4051, -94.7654, -132.717, 0.55", "27.7013, -96.7094, -134.191, 0.28", "30.3818, -98.8043, -135.841, 0.28", "31.7967, -99.7886, -136.573, 0.28", "33.1962, -100.728, -137.409, 0.55", "35.2589, -101.986, -138.648, 0.28", "36.188, -102.529, -139.179, 0.83", "38.5901, -103.951, -140.431, 0.28", "39.6026, -104.595, -141.035, 0.55", "43.9238, -107.634, -143.903, 0.28", "45.9976, -109.185, -145.533, 0.28", "47.4561, -110.312, -146.833, 0.55", "48.2499, -110.992, -147.706, 0.55", "50.2491, -112.838, -150.23, 0.28", "52.044, -114.691, -152.683, 0.55", "53.6626, -116.46, -154.912, 0.28", "55.0662, -118.092, -157.033, 0.55", "56.2364, -119.418, -158.779, 0.28", "57.2546, -120.39, -160.141, 0.55", "59.8319, -122.519, -163.29, 0.28", "61.1744, -123.596, -164.816, 0.55", "63.2361, -125.223, -167.012, 0.28", "64.961, -126.485, -168.765, 0.55", "69.0425, -129.192, -172.896, 0.28", "70.6633, -130.163, -174.723, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-17.9338, -171.535, 113.196, 0.55", "-17.5533, -181.035, 117.675, 0.55", "-15.6183, -191.112, 120.189, 0.55", "-14.6134, -200.929, 123.887, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.9338, -171.535, 113.196, 0.55", "-17.2358, -180.785, 120.288, 0.55", "-18.6718, -188.992, 128.348, 0.55", "-20.8509, -195.294, 137.692, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-20.8605, -165.981, 109.5, 0.55", "-20.6548, -179.162, 116.959, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-20.8605, -165.981, 109.5, 0.55", "-21.9959, -173.025, 113.238, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "9.53425, -111.643, 5.42727, 0.83", "10.242, -114.789, 5.82723, 0.83", "10.9687, -117.438, 6.33987, 0.83", "11.6911, -120.071, 6.84944, 0.83", "12.3772, -122.572, 7.33336, 0.83", "13.4344, -126.425, 8.07912, 0.83", "14.484, -130.25, 8.8195, 0.83", "15.3965, -132.778, 9.60264, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "9.53425, -111.643, 5.42727, 0.55", "10.5455, -113.839, 4.57768, 0.55", "11.1379, -115.558, 3.72574, 0.55", "11.4591, -116.829, 3.04672, 0.55", "11.5666, -118.311, 2.26307, 0.83", "11.4858, -119.993, 1.30281, 0.55", "11.4066, -121.638, 0.363555, 0.83", "11.149, -123.421, -0.705068, 0.55", "10.9378, -124.457, -1.38945, 0.83", "9.99521, -127.807, -3.69468, 0.55", "9.00387, -130.43, -5.48157, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "7.08998, -113.282, 47.1511, 0.55", "5.48694, -122.819, 55.5673, 0.55", "2.68553, -130.928, 64.972, 0.55", "-0.481605, -137.733, 75.1624, 0.55", "-4.30269, -142.919, 85.9693, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.08998, -113.282, 47.1511, 0.55", "6.07678, -120.672, 54.0536, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "15.3965, -132.778, 9.60264, 0.55", "15.6339, -135.046, 10.1925, 0.55", "16.0274, -137.939, 10.9953, 0.55", "16.3963, -140.672, 11.7389, 0.55", "16.6309, -142.615, 12.245, 0.55", "17.001, -146.084, 13.1071, 0.55", "18.1225, -155.844, 15.2641, 0.55", "18.5451, -159.164, 15.8449, 0.55", "18.8244, -161.509, 16.143, 0.55", "19.1145, -164.194, 16.2789, 0.55", "19.264, -166.274, 16.2214, 0.55", "19.7008, -171.145, 15.8681, 0.55", "19.9122, -174.841, 15.6253, 0.55", "20.1278, -177.267, 15.5167, 0.55", "20.7411, -183.547, 15.5378, 0.55", "21.172, -187.764, 15.7314, 0.55", "21.8232, -193.192, 16.258, 0.55", "22.7475, -199.338, 17.2763, 0.55", "23.5962, -203.436, 18.1481, 0.55", "24.1675, -205.856, 18.7097, 0.55", "24.6542, -208.088, 19.2312, 0.55", "25.2834, -210.918, 19.7563, 0.55", "26.6154, -217.753, 20.612, 0.55", "27.1907, -220.401, 20.8306, 0.55", "27.7612, -223.351, 21.0723, 0.55", "28.5788, -227.78, 21.4227, 0.55", "29.0682, -231.182, 21.7602, 0.55", "29.3497, -234.414, 22.0868, 0.55", "29.491, -237.494, 22.4316, 0.55", "29.5916, -240.498, 22.8209, 0.55", "29.6702, -242.636, 23.0751, 0.55", "29.7905, -246.139, 23.3733, 0.55", "29.8051, -250.353, 23.4475, 0.55", "29.8254, -252.405, 23.3278, 0.55", "29.8296, -254.21, 23.0912, 0.55", "29.9351, -257.624, 22.4202, 0.55", "29.9677, -259.79, 21.9442, 0.55", "30.059, -262.456, 21.4438, 0.55", "30.0842, -264.327, 21.2142, 0.55", "30.1127, -269.184, 20.8149, 0.55", "30.1116, -272.813, 20.7793, 0.55", "30.1298, -278.416, 21.175, 0.55", "30.2935, -282.023, 21.73, 0.55", "30.4668, -285.807, 22.4348, 0.28", "30.5158, -287.325, 22.7856, 0.28", "30.6963, -291.001, 23.9551, 0.28", "30.8963, -294.388, 25.2964, 0.28", "31.6566, -298.857, 27.4068, 0.28", "34.004, -308.996, 29.4152, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "15.3965, -132.778, 9.60264, 0.55", "16.4594, -133.207, 10.2145, 0.55", "18.5853, -134.299, 11.6371, 0.55", "20.3904, -135.372, 12.9478, 0.28", "22.304, -136.592, 14.4169, 0.55", "23.3956, -137.366, 15.4729, 0.28", "25.2111, -138.757, 17.5056, 0.55", "25.8648, -139.489, 18.6154, 0.28", "26.0757, -139.752, 19.0774, 0.28", "26.4381, -140.126, 19.8825, 0.55", "27.9463, -141.349, 22.8383, 0.28", "28.61, -141.825, 24.0564, 0.55", "30.799, -143.213, 27.3944, 0.28", "32.0506, -143.897, 29.089, 0.28", "33.6721, -144.78, 31.081, 0.55", "36.217, -146.158, 33.7813, 0.28", "36.5828, -146.342, 34.1025, 0.55", "38.447, -147.24, 35.5463, 0.28", "38.6251, -147.324, 35.6571, 0.55", "40.1724, -148.317, 36.6879, 0.28", "40.8878, -148.857, 37.2268, 0.55", "46.7524, -152.855, 41.7115, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-4.30269, -142.919, 85.9693, 0.55", "-5.3569, -146.148, 93.4438, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.30269, -142.919, 85.9693, 0.55", "-7.1117, -149.394, 93.1055, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_BP_d0cc8d7615_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.52847, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -3.28953, 8.90532, 2.88526, 0.83 ) }
    dend_43 { pt3dadd( -6.41843, 11.4518, 3.35714, 1.11 ) }
    dend_43 { pt3dadd( -8.26325, 12.9521, 3.6026, 0.83 ) }
    dend_43 { pt3dadd( -10.0556, 14.3972, 3.82253, 0.83 ) }
    dend_43 { pt3dadd( -11.1168, 15.2212, 3.94305, 1.11 ) }
    dend_43 { pt3dadd( -14.4399, 17.796, 4.32931, 1.11 ) }
    dend_43 { pt3dadd( -20.3837, 22.2042, 5.0121, 0.83 ) }
    dend_43 { pt3dadd( -22.525, 23.7318, 5.23758, 0.83 ) }
    dend_43 { pt3dadd( -24.2207, 24.9055, 5.37763, 0.83 ) }
    dend_43 { pt3dadd( -25.8743, 26.0688, 5.49886, 0.83 ) }
    dend_43 { pt3dadd( -27.2203, 27.0275, 5.56426, 0.55 ) }
    dend_43 { pt3dadd( -28.2321, 27.6767, 5.63065, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.70947, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.68099, 6.5788, -6.24774, 0.55 ) }
    dend_28 { pt3dadd( 7.46846, 7.21194, -6.87023, 0.55 ) }
    dend_28 { pt3dadd( 9.08592, 7.37176, -7.69392, 0.83 ) }
    dend_28 { pt3dadd( 11.6458, 7.54185, -9.22398, 0.55 ) }
    dend_28 { pt3dadd( 12.8816, 7.62395, -9.96257, 1.38 ) }
    dend_28 { pt3dadd( 15.92, 7.82583, -11.7786, 0.55 ) }
    dend_28 { pt3dadd( 17.214, 7.75747, -12.6451, 0.83 ) }
    dend_28 { pt3dadd( 23.9081, 6.50376, -17.5136, 0.55 ) }
    dend_28 { pt3dadd( 24.5557, 6.33517, -18.0492, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.66503, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.687877, -11.3691, 3.35128, 1.11 ) }
    dend_1 { pt3dadd( -0.743343, -16.5076, 5.10571, 1.11 ) }
    dend_1 { pt3dadd( -0.765933, -18.6004, 5.82022, 0.83 ) }
    dend_1 { pt3dadd( -0.795943, -21.3807, 6.76949, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.96697, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.97919, 10.0773, -1.4013, 1.11 ) }
    dend_0 { pt3dadd( 1.19101, 11.9364, -1.41403, 1.11 ) }
    dend_0 { pt3dadd( 1.56098, 14.968, -1.33127, 1.38 ) }
    dend_0 { pt3dadd( 1.58512, 15.1366, -1.32473, 1.38 ) }
    dend_0 { pt3dadd( 2.00459, 17.2136, -1.26058, 0.83 ) }
    dend_0 { pt3dadd( 2.56366, 19.4013, -1.11049, 0.83 ) }
    dend_0 { pt3dadd( 3.47554, 21.8508, -0.726202, 0.83 ) }
    dend_0 { pt3dadd( 3.96151, 22.7696, -0.507567, 0.83 ) }
    dend_0 { pt3dadd( 4.41706, 23.4273, -0.312459, 1.11 ) }
    dend_0 { pt3dadd( 5.69357, 25.0168, 0.156845, 0.55 ) }
    dend_0 { pt3dadd( 7.17195, 26.6651, 0.727114, 0.83 ) }
    dend_0 { pt3dadd( 9.0232, 28.3358, 1.31473, 0.55 ) }
    dend_0 { pt3dadd( 9.93665, 29.0189, 1.55557, 0.83 ) }
    dend_0 { pt3dadd( 11.2357, 29.9397, 1.96899, 0.55 ) }
    dend_0 { pt3dadd( 12.8746, 31.1119, 2.56618, 0.55 ) }
    dend_0 { pt3dadd( 15.2155, 32.8856, 3.53124, 0.55 ) }
    dend_0 { pt3dadd( 17.8018, 34.9196, 4.59794, 0.55 ) }
    dend_0 { pt3dadd( 19.4986, 36.2386, 5.4672, 0.55 ) }
    dend_0 { pt3dadd( 21.6571, 37.9056, 6.76743, 0.55 ) }
    dend_0 { pt3dadd( 22.1155, 38.2382, 7.07163, 0.83 ) }
    dend_0 { pt3dadd( 23.3494, 39.1153, 7.94777, 0.55 ) }
    dend_0 { pt3dadd( 24.363, 39.7952, 8.62073, 0.83 ) }
    dend_0 { pt3dadd( 26.7395, 41.6816, 10.2314, 0.55 ) }
    dend_0 { pt3dadd( 27.5758, 42.3727, 10.6587, 0.83 ) }
    dend_0 { pt3dadd( 28.2971, 42.874, 10.8991, 0.55 ) }
    dend_0 { pt3dadd( 28.9774, 43.3011, 11.0432, 0.83 ) }
    dend_0 { pt3dadd( 30.4321, 44.0808, 11.2321, 0.83 ) }
    dend_0 { pt3dadd( 32.3121, 45.1495, 11.3369, 0.83 ) }
    dend_0 { pt3dadd( 33.4351, 45.8648, 11.2933, 0.55 ) }
    dend_0 { pt3dadd( 34.2986, 46.4918, 11.2641, 0.55 ) }
    dend_0 { pt3dadd( 36.5507, 48.1103, 11.1579, 0.83 ) }
    dend_0 { pt3dadd( 37.988, 49.1486, 11.0374, 0.55 ) }
    dend_0 { pt3dadd( 40.1401, 50.666, 10.7751, 0.55 ) }
    dend_0 { pt3dadd( 42.0795, 51.9279, 10.4635, 0.55 ) }
    dend_0 { pt3dadd( 43.7955, 52.9914, 10.1419, 0.55 ) }
    dend_0 { pt3dadd( 45.9264, 54.2282, 9.64416, 0.55 ) }
    dend_0 { pt3dadd( 47.2036, 54.8166, 9.30014, 0.55 ) }
    dend_0 { pt3dadd( 48.0366, 55.1385, 8.96547, 0.55 ) }
    dend_0 { pt3dadd( 49.0964, 55.346, 8.42759, 0.55 ) }
    dend_0 { pt3dadd( 50.6126, 55.3636, 7.49006, 0.55 ) }
    dend_0 { pt3dadd( 51.5346, 55.2321, 6.86597, 0.55 ) }
    dend_0 { pt3dadd( 52.9133, 54.9927, 6.05923, 0.55 ) }
    dend_0 { pt3dadd( 55.6303, 54.631, 4.77775, 0.55 ) }
    dend_0 { pt3dadd( 57.8228, 54.4576, 3.93174, 0.55 ) }
    dend_0 { pt3dadd( 60.2021, 54.3951, 3.17678, 0.55 ) }
    dend_0 { pt3dadd( 61.7713, 54.4097, 2.81295, 0.55 ) }
    dend_0 { pt3dadd( 65.9618, 54.8362, 2.12799, 0.55 ) }
    dend_0 { pt3dadd( 68.5134, 55.2831, 1.89901, 0.55 ) }
    dend_0 { pt3dadd( 70.4897, 55.7413, 1.89181, 0.55 ) }
    dend_0 { pt3dadd( 71.7183, 56.214, 1.92884, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 73.1536, 56.9461, 1.9656, 0.55 ) }
    dend_0 { pt3dadd( 75.5385, 58.4224, 1.84054, 0.55 ) }
    dend_0 { pt3dadd( 76.0651, 58.7813, 1.74526, 0.55 ) }
    dend_0 { pt3dadd( 77.5403, 59.7358, 1.38085, 0.55 ) }
    dend_0 { pt3dadd( 78.9055, 60.7679, 1.04116, 0.83 ) }
    dend_0 { pt3dadd( 79.6477, 61.3416, 0.844795, 0.55 ) }
    dend_0 { pt3dadd( 80.7554, 62.3385, 0.509526, 0.83 ) }
    dend_0 { pt3dadd( 87.0662, 67.6356, 0.182974, 0.83 ) }
    dend_0 { pt3dadd( 92.545, 73.8411, -0.477613, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.2321, 27.6767, 5.63065, 0.55 ) }
    dend_55 { pt3dadd( -29.6741, 28.5542, 4.84426, 0.55 ) }
    dend_55 { pt3dadd( -31.2422, 29.5085, 3.98915, 0.55 ) }
    dend_55 { pt3dadd( -33.1345, 30.6601, 2.95722, 0.55 ) }
    dend_55 { pt3dadd( -34.697, 31.611, 2.10512, 0.83 ) }
    dend_55 { pt3dadd( -36.0064, 32.4078, 1.39106, 0.55 ) }
    dend_55 { pt3dadd( -38.4369, 33.8868, 0.0656714, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -28.2321, 27.6767, 5.63065, 0.55 ) }
    dend_44 { pt3dadd( -30.696, 28.0914, 5.51905, 0.55 ) }
    dend_44 { pt3dadd( -33.2933, 28.4681, 5.6642, 0.55 ) }
    dend_44 { pt3dadd( -36.2322, 28.8959, 5.90064, 0.55 ) }
    dend_44 { pt3dadd( -40.4532, 29.4982, 6.63643, 0.55 ) }
    dend_44 { pt3dadd( -43.9607, 29.9136, 7.51346, 0.55 ) }
    dend_44 { pt3dadd( -47.6241, 30.3015, 8.59748, 0.55 ) }
    dend_44 { pt3dadd( -51.1254, 30.4504, 10.0549, 0.55 ) }
    dend_44 { pt3dadd( -54.1059, 30.2841, 11.6363, 0.55 ) }
    dend_44 { pt3dadd( -57.7768, 29.8244, 14.0456, 0.55 ) }
    dend_44 { pt3dadd( -59.3493, 29.5131, 15.3391, 0.55 ) }
    dend_44 { pt3dadd( -61.0404, 29.1627, 16.8167, 0.55 ) }
    dend_44 { pt3dadd( -64.0307, 28.2765, 19.2972, 0.55 ) }
    dend_44 { pt3dadd( -65.6461, 27.789, 20.347, 0.55 ) }
    dend_44 { pt3dadd( -67.3378, 27.2197, 21.4407, 0.55 ) }
    dend_44 { pt3dadd( -69.3694, 26.5538, 22.5228, 0.55 ) }
    dend_44 { pt3dadd( -71.584, 25.8759, 23.6312, 0.55 ) }
    dend_44 { pt3dadd( -74.7507, 24.894, 25.1416, 0.55 ) }
    dend_44 { pt3dadd( -79.0223, 23.8615, 26.7375, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 24.5557, 6.33517, -18.0492, 0.55 ) }
    dend_34 { pt3dadd( 30.5432, 8.20948, -19.3503, 0.55 ) }
    dend_34 { pt3dadd( 34.0124, 9.05401, -20.5832, 0.55 ) }
    dend_34 { pt3dadd( 37.4448, 9.72271, -21.8433, 0.55 ) }
    dend_34 { pt3dadd( 39.7946, 10.0807, -22.6993, 0.55 ) }
    dend_34 { pt3dadd( 43.2324, 10.5211, -23.9204, 0.55 ) }
    dend_34 { pt3dadd( 50.3744, 11.2803, -26.6709, 0.55 ) }
    dend_34 { pt3dadd( 58.488, 12.0655, -30.3302, 0.55 ) }
    dend_34 { pt3dadd( 62.4389, 12.1769, -32.3665, 0.55 ) }
    dend_34 { pt3dadd( 64.5596, 12.1765, -33.5933, 0.55 ) }
    dend_34 { pt3dadd( 66.886, 12.1839, -35.0329, 0.55 ) }
    dend_34 { pt3dadd( 71.0428, 12.0769, -37.5805, 0.55 ) }
    dend_34 { pt3dadd( 72.5574, 11.9435, -38.5517, 0.55 ) }
    dend_34 { pt3dadd( 78.97, 11.5253, -43.161, 0.55 ) }
    dend_34 { pt3dadd( 83.5108, 11.2912, -46.7596, 0.55 ) }
    dend_34 { pt3dadd( 86.1238, 11.2064, -48.9049, 0.55 ) }
    dend_34 { pt3dadd( 88.731, 11.098, -51.0416, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 24.5557, 6.33517, -18.0492, 0.83 ) }
    dend_29 { pt3dadd( 27.1235, 7.71834, -17.9817, 0.83 ) }
    dend_29 { pt3dadd( 28.5898, 8.51485, -18.0071, 0.55 ) }
    dend_29 { pt3dadd( 30.7486, 9.75454, -18.2142, 0.83 ) }
    dend_29 { pt3dadd( 32.2023, 10.6299, -18.391, 0.55 ) }
    dend_29 { pt3dadd( 34.2121, 11.8873, -18.6006, 0.83 ) }
    dend_29 { pt3dadd( 36.6347, 13.4367, -18.7623, 0.55 ) }
    dend_29 { pt3dadd( 37.8471, 14.1216, -18.8063, 0.55 ) }
    dend_29 { pt3dadd( 40.6096, 15.2989, -18.7633, 0.83 ) }
    dend_29 { pt3dadd( 43.0984, 16.0282, -18.4455, 0.55 ) }
    dend_29 { pt3dadd( 44.491, 16.4067, -18.1402, 0.83 ) }
    dend_29 { pt3dadd( 46.5884, 16.9971, -17.4635, 0.55 ) }
    dend_29 { pt3dadd( 49.6129, 17.8577, -16.1127, 0.55 ) }
    dend_29 { pt3dadd( 53.7988, 18.8116, -14.0543, 0.55 ) }
    dend_29 { pt3dadd( 57.7833, 19.5466, -11.8414, 0.55 ) }
    dend_29 { pt3dadd( 60.9381, 20.0887, -10.0372, 0.55 ) }
    dend_29 { pt3dadd( 66.1418, 21.0039, -7.03342, 0.55 ) }
    dend_29 { pt3dadd( 69.9596, 21.7751, -4.74188, 0.55 ) }
    dend_29 { pt3dadd( 72.282, 22.4265, -3.25386, 0.55 ) }
    dend_29 { pt3dadd( 76.5952, 24.0607, -0.424577, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.795943, -21.3807, 6.76949, 0.83 ) }
    dend_11 { pt3dadd( -0.986035, -23.9796, 6.66714, 0.83 ) }
    dend_11 { pt3dadd( -1.17124, -26.5117, 6.56742, 0.83 ) }
    dend_11 { pt3dadd( -1.37802, -29.3388, 6.45608, 0.83 ) }
    dend_11 { pt3dadd( -1.486, -30.8151, 6.39795, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.795943, -21.3807, 6.76949, 0.55 ) }
    dend_2 { pt3dadd( -0.25069, -23.1432, 8.01753, 0.55 ) }
    dend_2 { pt3dadd( 0.200411, -25.3076, 9.61519, 0.55 ) }
    dend_2 { pt3dadd( 0.364666, -28.157, 11.7758, 0.55 ) }
    dend_2 { pt3dadd( 0.351396, -29.2669, 12.6369, 0.83 ) }
    dend_2 { pt3dadd( 0.0382065, -32.1063, 15.1181, 0.55 ) }
    dend_2 { pt3dadd( -0.24079, -33.5762, 16.4146, 0.55 ) }
    dend_2 { pt3dadd( -0.852561, -36.4361, 19.0453, 0.83 ) }
    dend_2 { pt3dadd( -1.43626, -38.5631, 21.1153, 0.55 ) }
    dend_2 { pt3dadd( -2.06318, -40.3223, 22.7821, 0.55 ) }
    dend_2 { pt3dadd( -3.31573, -43.6564, 25.8746, 0.55 ) }
    dend_2 { pt3dadd( -4.3085, -46.3137, 28.3102, 0.55 ) }
    dend_2 { pt3dadd( -5.06633, -48.4427, 30.2951, 0.55 ) }
    dend_2 { pt3dadd( -5.74619, -50.6996, 32.3468, 0.28 ) }
    dend_2 { pt3dadd( -5.95097, -51.6374, 33.1747, 0.55 ) }
    dend_2 { pt3dadd( -6.27697, -53.3684, 34.6147, 0.28 ) }
    dend_2 { pt3dadd( -6.39588, -56.0607, 36.4987, 0.55 ) }
    dend_2 { pt3dadd( -8.89611, -65.0805, 43.022, 0.55 ) }
    dend_2 { pt3dadd( -11.707, -73.4239, 50.2019, 0.55 ) }
    dend_2 { pt3dadd( -14.208, -80.2733, 58.7942, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -38.4369, 33.8868, 0.0656714, 0.55 ) }
    dend_61 { pt3dadd( -41.5275, 34.0734, 1.58421, 0.55 ) }
    dend_61 { pt3dadd( -42.8314, 34.0686, 2.37671, 0.83 ) }
    dend_61 { pt3dadd( -44.3611, 33.9717, 3.49833, 0.55 ) }
    dend_61 { pt3dadd( -45.5343, 33.8901, 4.4609, 0.83 ) }
    dend_61 { pt3dadd( -48.6094, 33.7903, 6.96357, 0.55 ) }
    dend_61 { pt3dadd( -49.7742, 33.7719, 7.92143, 0.28 ) }
    dend_61 { pt3dadd( -51.7208, 33.7527, 9.68079, 0.55 ) }
    dend_61 { pt3dadd( -54.3326, 33.7434, 12.0305, 0.55 ) }
    dend_61 { pt3dadd( -56.3134, 33.7429, 13.7254, 0.55 ) }
    dend_61 { pt3dadd( -58.9574, 33.747, 15.9066, 0.28 ) }
    dend_61 { pt3dadd( -59.6423, 33.7587, 16.3923, 0.55 ) }
    dend_61 { pt3dadd( -61.0588, 33.8037, 17.3458, 0.28 ) }
    dend_61 { pt3dadd( -62.0186, 33.8659, 17.9059, 0.55 ) }
    dend_61 { pt3dadd( -63.9736, 33.9897, 18.8805, 0.28 ) }
    dend_61 { pt3dadd( -65.119, 34.0007, 19.3895, 0.55 ) }
    dend_61 { pt3dadd( -67.139, 33.8658, 20.2943, 0.28 ) }
    dend_61 { pt3dadd( -68.4944, 33.769, 20.8543, 0.55 ) }
    dend_61 { pt3dadd( -76.8392, 32.2554, 27.8699, 0.55 ) }
    dend_61 { pt3dadd( -84.4851, 29.6264, 35.3617, 0.55 ) }
    dend_61 { pt3dadd( -91.8304, 25.9232, 42.7368, 0.55 ) }
    dend_61 { pt3dadd( -99.1011, 20.9446, 49.4731, 0.55 ) }
    dend_61 { pt3dadd( -105.213, 16.3531, 57.4876, 0.55 ) }
    dend_61 { pt3dadd( -112.12, 12.2061, 65.0667, 0.55 ) }
    dend_61 { pt3dadd( -119.189, 9.89055, 73.1924, 0.55 ) }
    dend_61 { pt3dadd( -126.209, 6.68213, 81.0789, 0.55 ) }
    dend_61 { pt3dadd( -133.046, 4.21037, 89.3593, 0.55 ) }
    dend_61 { pt3dadd( -139.391, 1.55112, 97.9707, 0.55 ) }
    dend_61 { pt3dadd( -144.668, -2.41736, 106.836, 0.55 ) }
    dend_61 { pt3dadd( -150.064, -5.34375, 115.997, 0.55 ) }
    dend_61 { pt3dadd( -155.575, -9.38031, 124.691, 0.55 ) }
    dend_61 { pt3dadd( -159.833, -13.9287, 133.845, 0.55 ) }
    dend_61 { pt3dadd( -162.312, -17.7553, 143.909, 0.55 ) }
    dend_61 { pt3dadd( -164.672, -23.6137, 153.068, 0.55 ) }
    dend_61 { pt3dadd( -165.47, -29.6865, 162.368, 0.55 ) }
    dend_61 { pt3dadd( -166.862, -35.3004, 171.859, 0.55 ) }
    dend_61 { pt3dadd( -169.436, -40.1063, 181.507, 0.55 ) }
    dend_61 { pt3dadd( -174.276, -43.115, 190.949, 0.55 ) }
    dend_61 { pt3dadd( -178.165, -47.3931, 200.382, 0.55 ) }
    dend_61 { pt3dadd( -180.07, -49.8424, 210.954, 0.55 ) }
    dend_61 { pt3dadd( -183.712, -51.4274, 221.219, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -38.4369, 33.8868, 0.0656714, 0.55 ) }
    dend_56 { pt3dadd( -39.8874, 35.0126, -2.11303, 0.55 ) }
    dend_56 { pt3dadd( -40.9036, 36.2557, -4.45585, 0.55 ) }
    dend_56 { pt3dadd( -41.8145, 37.7329, -6.88945, 0.55 ) }
    dend_56 { pt3dadd( -42.3849, 38.6579, -8.41335, 0.55 ) }
    dend_56 { pt3dadd( -43.4254, 40.3452, -11.1931, 0.83 ) }
    dend_56 { pt3dadd( -44.1866, 41.5797, -13.2268, 0.55 ) }
    dend_56 { pt3dadd( -44.9643, 43.2933, -16.1797, 0.83 ) }
    dend_56 { pt3dadd( -45.1688, 44.4032, -17.785, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -79.0223, 23.8615, 26.7375, 0.28 ) }
    dend_48 { pt3dadd( -80.1193, 21.3124, 27.1526, 0.28 ) }
    dend_48 { pt3dadd( -80.6646, 20.1892, 27.2604, 0.28 ) }
    dend_48 { pt3dadd( -81.3749, 18.5908, 27.3526, 0.55 ) }
    dend_48 { pt3dadd( -81.9548, 17.1909, 27.4371, 0.28 ) }
    dend_48 { pt3dadd( -82.8035, 15.067, 27.5837, 0.55 ) }
    dend_48 { pt3dadd( -85.1338, 8.85892, 28.0771, 0.28 ) }
    dend_48 { pt3dadd( -85.9093, 6.64216, 28.092, 0.55 ) }
    dend_48 { pt3dadd( -87.0971, 3.20119, 28.0153, 0.28 ) }
    dend_48 { pt3dadd( -87.7886, 1.12221, 27.8875, 0.55 ) }
    dend_48 { pt3dadd( -88.2708, -0.318956, 27.7714, 0.28 ) }
    dend_48 { pt3dadd( -88.8183, -1.96953, 27.6484, 0.55 ) }
    dend_48 { pt3dadd( -90.4397, -7.43407, 27.319, 0.28 ) }
    dend_48 { pt3dadd( -90.9596, -9.10258, 27.1747, 0.55 ) }
    dend_48 { pt3dadd( -91.9137, -11.7249, 26.7584, 0.28 ) }
    dend_48 { pt3dadd( -92.725, -13.4493, 26.4038, 0.28 ) }
    dend_48 { pt3dadd( -93.4606, -14.622, 26.1622, 0.55 ) }
    dend_48 { pt3dadd( -96.0134, -17.922, 25.6287, 0.28 ) }
    dend_48 { pt3dadd( -97.1976, -19.2606, 25.457, 0.55 ) }
    dend_48 { pt3dadd( -100.118, -22.3636, 24.9516, 0.28 ) }
    dend_48 { pt3dadd( -103.049, -25.1445, 24.5038, 0.28 ) }
    dend_48 { pt3dadd( -106.251, -27.8504, 24.0326, 0.28 ) }
    dend_48 { pt3dadd( -107.717, -28.8873, 23.8855, 0.55 ) }
    dend_48 { pt3dadd( -114.469, -39.1641, 23.2893, 0.55 ) }
    dend_48 { pt3dadd( -121.669, -49.013, 24.9368, 0.55 ) }
    dend_48 { pt3dadd( -129.017, -58.8561, 24.7711, 0.55 ) }
    dend_48 { pt3dadd( -136.781, -68.228, 23.4947, 0.55 ) }
    dend_48 { pt3dadd( -144.876, -77.005, 21.0594, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -79.0223, 23.8615, 26.7375, 0.55 ) }
    dend_45 { pt3dadd( -80.086, 23.7682, 26.9846, 0.55 ) }
    dend_45 { pt3dadd( -83.0516, 23.5444, 28.0748, 0.55 ) }
    dend_45 { pt3dadd( -84.1603, 23.4349, 28.548, 0.55 ) }
    dend_45 { pt3dadd( -86.7625, 23.0955, 29.709, 0.55 ) }
    dend_45 { pt3dadd( -90.7828, 22.5997, 31.2912, 0.55 ) }
    dend_45 { pt3dadd( -92.8765, 22.4082, 32.0695, 0.28 ) }
    dend_45 { pt3dadd( -96.1392, 22.0276, 33.2217, 0.55 ) }
    dend_45 { pt3dadd( -98.5693, 21.6833, 33.9927, 0.55 ) }
    dend_45 { pt3dadd( -99.5952, 21.5307, 34.3211, 0.28 ) }
    dend_45 { pt3dadd( -105.749, 20.6117, 36.2831, 0.55 ) }
    dend_45 { pt3dadd( -108.639, 20.0233, 37.0326, 0.28 ) }
    dend_45 { pt3dadd( -112.557, 19.1926, 37.8128, 0.28 ) }
    dend_45 { pt3dadd( -115.954, 18.5111, 38.281, 0.55 ) }
    dend_45 { pt3dadd( -128.983, 18.169, 42.8298, 0.55 ) }
    dend_45 { pt3dadd( -141.424, 17.5987, 48.7886, 0.55 ) }
    dend_45 { pt3dadd( -152.981, 15.6897, 56.1211, 0.55 ) }
    dend_45 { pt3dadd( -164.122, 16.3002, 64.2493, 0.55 ) }
    dend_45 { pt3dadd( -173.338, 16.6528, 74.521, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -180.421, 17.9779, 86.2993, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 88.731, 11.098, -51.0416, 0.55 ) }
    dend_42 { pt3dadd( 94.3512, 12.3304, -56.0968, 0.55 ) }
    dend_42 { pt3dadd( 96.1595, 12.5995, -57.7642, 0.55 ) }
    dend_42 { pt3dadd( 98.4385, 12.8775, -59.793, 0.55 ) }
    dend_42 { pt3dadd( 102.609, 13.2499, -63.6812, 0.55 ) }
    dend_42 { pt3dadd( 107.016, 13.4294, -67.7581, 0.55 ) }
    dend_42 { pt3dadd( 109.208, 13.3808, -69.6272, 0.83 ) }
    dend_42 { pt3dadd( 111.055, 13.1756, -71.233, 0.55 ) }
    dend_42 { pt3dadd( 112.478, 12.8681, -72.5068, 0.83 ) }
    dend_42 { pt3dadd( 116.039, 11.6272, -75.581, 0.55 ) }
    dend_42 { pt3dadd( 119.033, 10.3713, -78.0208, 0.55 ) }
    dend_42 { pt3dadd( 122.467, 8.96746, -80.6825, 0.55 ) }
    dend_42 { pt3dadd( 126.274, 7.46631, -83.751, 0.55 ) }
    dend_42 { pt3dadd( 128.846, 6.38756, -85.8366, 0.55 ) }
    dend_42 { pt3dadd( 131.758, 5.13079, -88.2597, 0.55 ) }
    dend_42 { pt3dadd( 134.271, 4.05524, -90.528, 0.55 ) }
    dend_42 { pt3dadd( 135.84, 3.42202, -92.1783, 0.55 ) }
    dend_42 { pt3dadd( 137.998, 1.96079, -95.5342, 0.55 ) }
    dend_42 { pt3dadd( 139.231, 0.942834, -97.5999, 0.55 ) }
    dend_42 { pt3dadd( 140.479, -0.648395, -100.284, 0.55 ) }
    dend_42 { pt3dadd( 142.377, -3.55369, -104.747, 0.55 ) }
    dend_42 { pt3dadd( 142.794, -4.25711, -105.732, 0.28 ) }
    dend_42 { pt3dadd( 148.065, -12.918, -117.642, 0.28 ) }
    dend_42 { pt3dadd( 149.73, -15.4, -121.152, 0.83 ) }
    dend_42 { pt3dadd( 156.082, -24.3595, -133.473, 0.83 ) }
    dend_42 { pt3dadd( 159.288, -28.7376, -139.067, 0.83 ) }
    dend_42 { pt3dadd( 160.763, -30.5814, -141.278, 0.55 ) }
    dend_42 { pt3dadd( 162.365, -32.3482, -143.426, 0.55 ) }
    dend_42 { pt3dadd( 166.343, -35.4843, -147.346, 0.55 ) }
    dend_42 { pt3dadd( 170.418, -38.1364, -150.765, 0.28 ) }
    dend_42 { pt3dadd( 171.484, -38.2966, -150.86, 0.55 ) }
    dend_42 { pt3dadd( 173.711, -38.1905, -150.426, 0.28 ) }
    dend_42 { pt3dadd( 175.045, -37.9564, -150.022, 0.55 ) }
    dend_42 { pt3dadd( 176.426, -37.6813, -149.482, 0.28 ) }
    dend_42 { pt3dadd( 178.056, -37.241, -148.802, 0.55 ) }
    dend_42 { pt3dadd( 180.492, -36.5678, -148.089, 0.28 ) }
    dend_42 { pt3dadd( 182.469, -36.1121, -147.549, 0.55 ) }
    dend_42 { pt3dadd( 184.641, -35.5422, -147.183, 0.28 ) }
    dend_42 { pt3dadd( 187.619, -34.8677, -146.936, 0.55 ) }
    dend_42 { pt3dadd( 190.961, -34.1214, -146.882, 0.55 ) }
    dend_42 { pt3dadd( 193.913, -33.5131, -147.033, 0.28 ) }
    dend_42 { pt3dadd( 198.014, -32.7291, -147.469, 0.55 ) }
    dend_42 { pt3dadd( 205.136, -31.5004, -149.012, 0.55 ) }
    dend_42 { pt3dadd( 208.284, -30.9608, -150.119, 0.55 ) }
    dend_42 { pt3dadd( 209.639, -30.7357, -150.754, 0.83 ) }
    dend_42 { pt3dadd( 212.24, -30.3866, -152.19, 0.55 ) }
    dend_42 { pt3dadd( 214.04, -30.1225, -153.323, 0.83 ) }
    dend_42 { pt3dadd( 218.856, -29.3153, -156.479, 0.55 ) }
    dend_42 { pt3dadd( 221.855, -29.0438, -158.385, 0.28 ) }
    dend_42 { pt3dadd( 223.122, -28.9446, -159.025, 0.55 ) }
    dend_42 { pt3dadd( 226.629, -28.8125, -160.286, 0.28 ) }
    dend_42 { pt3dadd( 227.876, -28.8364, -160.606, 0.55 ) }
    dend_42 { pt3dadd( 230.443, -28.8742, -160.848, 0.28 ) }
    dend_42 { pt3dadd( 233.068, -28.9622, -160.588, 0.55 ) }
    dend_42 { pt3dadd( 238.343, -29.0297, -159.124, 0.28 ) }
    dend_42 { pt3dadd( 240.774, -29.0551, -158.175, 0.55 ) }
    dend_42 { pt3dadd( 244.418, -29.2025, -156.505, 0.28 ) }
    dend_42 { pt3dadd( 248.999, -29.3083, -154.257, 0.55 ) }
    dend_42 { pt3dadd( 252.297, -29.3238, -152.606, 0.55 ) }
    dend_42 { pt3dadd( 257.958, -29.1536, -149.738, 0.28 ) }
    dend_42 { pt3dadd( 260.275, -29.0628, -148.779, 0.55 ) }
    dend_42 { pt3dadd( 264.262, -28.8741, -147.616, 0.28 ) }
    dend_42 { pt3dadd( 268.191, -28.5209, -146.837, 0.55 ) }
    dend_42 { pt3dadd( 270.32, -28.2245, -146.789, 0.28 ) }
    dend_42 { pt3dadd( 272.196, -27.7782, -147.0, 0.55 ) }
    dend_42 { pt3dadd( 277.467, -26.4269, -148.208, 0.28 ) }
    dend_42 { pt3dadd( 281.174, -25.2385, -149.249, 0.28 ) }
    dend_42 { pt3dadd( 284.341, -23.9974, -150.309, 0.55 ) }
    dend_42 { pt3dadd( 287.832, -22.608, -151.7, 0.28 ) }
    dend_42 { pt3dadd( 288.694, -22.1905, -152.047, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 88.731, 11.098, -51.0416, 0.55 ) }
    dend_35 { pt3dadd( 89.4167, 9.08912, -52.2007, 0.55 ) }
    dend_35 { pt3dadd( 89.8523, 7.37764, -53.0683, 0.28 ) }
    dend_35 { pt3dadd( 90.248, 5.81247, -53.7365, 0.55 ) }
    dend_35 { pt3dadd( 91.2476, 2.50963, -55.182, 0.28 ) }
    dend_35 { pt3dadd( 91.3055, 2.3006, -55.3009, 0.55 ) }
    dend_35 { pt3dadd( 91.6385, 1.20638, -56.0091, 0.28 ) }
    dend_35 { pt3dadd( 91.8376, 0.290654, -56.7314, 0.55 ) }
    dend_35 { pt3dadd( 91.9963, -0.672428, -57.588, 0.28 ) }
    dend_35 { pt3dadd( 92.1779, -1.99076, -58.8134, 0.55 ) }
    dend_35 { pt3dadd( 92.631, -5.30001, -61.832, 0.55 ) }
    dend_35 { pt3dadd( 93.0128, -8.32039, -64.6333, 0.55 ) }
    dend_35 { pt3dadd( 93.296, -10.7366, -66.8755, 0.55 ) }
    dend_35 { pt3dadd( 93.5338, -13.1148, -69.0404, 0.55 ) }
    dend_35 { pt3dadd( 93.5931, -13.7288, -69.5755, 0.28 ) }
    dend_35 { pt3dadd( 93.6729, -14.382, -70.0964, 0.55 ) }
    dend_35 { pt3dadd( 93.8604, -15.2777, -70.7396, 0.28 ) }
    dend_35 { pt3dadd( 94.3464, -16.8659, -71.7539, 0.55 ) }
    dend_35 { pt3dadd( 95.5146, -19.8744, -73.2393, 0.55 ) }
    dend_35 { pt3dadd( 96.1544, -21.4877, -73.8993, 0.28 ) }
    dend_35 { pt3dadd( 96.7154, -23.1378, -74.6394, 0.55 ) }
    dend_35 { pt3dadd( 97.3429, -25.4654, -75.7592, 0.28 ) }
    dend_35 { pt3dadd( 97.7374, -27.3553, -76.7049, 0.55 ) }
    dend_35 { pt3dadd( 98.2153, -30.1915, -78.1245, 0.28 ) }
    dend_35 { pt3dadd( 98.7284, -33.1222, -79.5084, 0.55 ) }
    dend_35 { pt3dadd( 99.4215, -37.3831, -81.5529, 0.28 ) }
    dend_35 { pt3dadd( 99.7452, -39.6588, -82.6498, 0.55 ) }
    dend_35 { pt3dadd( 100.043, -41.991, -83.8232, 0.28 ) }
    dend_35 { pt3dadd( 100.286, -44.0494, -84.9753, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 100.674, -46.6221, -86.622, 0.55 ) }
    dend_35 { pt3dadd( 101.185, -48.9918, -88.0925, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 76.5952, 24.0607, -0.424577, 0.55 ) }
    dend_31 { pt3dadd( 78.9648, 23.5005, 0.0321653, 0.55 ) }
    dend_31 { pt3dadd( 80.6827, 23.0336, 0.192487, 0.55 ) }
    dend_31 { pt3dadd( 84.4359, 21.9798, 0.338776, 0.55 ) }
    dend_31 { pt3dadd( 86.1174, 21.4796, 0.247484, 0.55 ) }
    dend_31 { pt3dadd( 87.9549, 20.9827, 0.0551467, 0.55 ) }
    dend_31 { pt3dadd( 90.4235, 20.3752, -0.379091, 0.55 ) }
    dend_31 { pt3dadd( 93.0156, 19.6787, -1.09673, 0.55 ) }
    dend_31 { pt3dadd( 94.3713, 19.3055, -1.6353, 0.55 ) }
    dend_31 { pt3dadd( 97.1187, 18.5746, -3.11969, 0.55 ) }
    dend_31 { pt3dadd( 98.3843, 18.2525, -3.84428, 0.55 ) }
    dend_31 { pt3dadd( 101.342, 17.4416, -5.62695, 0.55 ) }
    dend_31 { pt3dadd( 103.337, 16.8028, -6.82404, 0.55 ) }
    dend_31 { pt3dadd( 104.806, 16.3174, -7.63567, 0.83 ) }
    dend_31 { pt3dadd( 107.143, 15.4438, -8.91212, 0.55 ) }
    dend_31 { pt3dadd( 109.421, 14.4577, -10.0782, 0.83 ) }
    dend_31 { pt3dadd( 111.346, 13.5167, -11.0023, 0.55 ) }
    dend_31 { pt3dadd( 113.064, 12.7002, -11.7269, 0.55 ) }
    dend_31 { pt3dadd( 114.048, 12.2794, -12.0778, 0.83 ) }
    dend_31 { pt3dadd( 116.347, 11.2953, -12.7686, 0.28 ) }
    dend_31 { pt3dadd( 117.497, 10.8526, -13.0314, 0.28 ) }
    dend_31 { pt3dadd( 118.6, 10.3511, -13.3522, 0.28 ) }
    dend_31 { pt3dadd( 119.797, 9.84467, -13.7018, 0.28 ) }
    dend_31 { pt3dadd( 121.715, 9.07723, -14.2998, 0.28 ) }
    dend_31 { pt3dadd( 122.488, 8.77716, -14.5154, 0.55 ) }
    dend_31 { pt3dadd( 124.344, 8.06633, -14.8393, 0.55 ) }
    dend_31 { pt3dadd( 127.686, 6.7386, -15.2492, 0.55 ) }
    dend_31 { pt3dadd( 128.609, 6.34124, -15.3223, 0.55 ) }
    dend_31 { pt3dadd( 129.431, 5.95408, -15.353, 0.83 ) }
    dend_31 { pt3dadd( 131.226, 5.1626, -15.2632, 0.55 ) }
    dend_31 { pt3dadd( 132.788, 4.47601, -15.1588, 0.55 ) }
    dend_31 { pt3dadd( 134.265, 3.83359, -15.0524, 0.55 ) }
    dend_31 { pt3dadd( 135.405, 3.31676, -15.0055, 0.55 ) }
    dend_31 { pt3dadd( 137.197, 2.3656, -15.0354, 0.55 ) }
    dend_31 { pt3dadd( 139.283, 1.04759, -15.2114, 0.55 ) }
    dend_31 { pt3dadd( 142.475, -1.39235, -15.7631, 0.55 ) }
    dend_31 { pt3dadd( 144.193, -3.01751, -16.2123, 0.55 ) }
    dend_31 { pt3dadd( 145.647, -4.71704, -16.7104, 0.28 ) }
    dend_31 { pt3dadd( 146.067, -5.33574, -16.8975, 0.55 ) }
    dend_31 { pt3dadd( 146.956, -7.04644, -17.398, 0.28 ) }
    dend_31 { pt3dadd( 147.671, -8.94491, -17.9153, 0.55 ) }
    dend_31 { pt3dadd( 148.282, -11.3036, -18.3778, 0.55 ) }
    dend_31 { pt3dadd( 148.7, -12.8601, -18.6136, 0.28 ) }
    dend_31 { pt3dadd( 148.856, -13.4124, -18.6723, 0.55 ) }
    dend_31 { pt3dadd( 149.268, -14.7873, -18.8012, 0.28 ) }
    dend_31 { pt3dadd( 149.842, -16.5818, -18.9302, 0.55 ) }
    dend_31 { pt3dadd( 151.377, -20.9245, -19.1467, 0.55 ) }
    dend_31 { pt3dadd( 152.187, -23.1186, -19.2148, 0.55 ) }
    dend_31 { pt3dadd( 152.942, -25.1315, -19.2611, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 76.5952, 24.0607, -0.424577, 0.55 ) }
    dend_30 { pt3dadd( 78.5968, 24.0094, 1.05734, 0.55 ) }
    dend_30 { pt3dadd( 79.2384, 23.9949, 1.49771, 0.55 ) }
    dend_30 { pt3dadd( 81.6212, 23.8369, 3.01939, 0.55 ) }
    dend_30 { pt3dadd( 84.285, 23.7091, 4.76525, 0.55 ) }
    dend_30 { pt3dadd( 87.6988, 23.526, 7.09075, 0.55 ) }
    dend_30 { pt3dadd( 88.6418, 23.4773, 7.72707, 0.55 ) }
    dend_30 { pt3dadd( 90.3293, 23.3256, 8.84196, 0.55 ) }
    dend_30 { pt3dadd( 92.1819, 23.212, 10.0021, 0.55 ) }
    dend_30 { pt3dadd( 94.3398, 23.1539, 11.2654, 0.55 ) }
    dend_30 { pt3dadd( 96.3752, 23.1275, 12.4676, 0.55 ) }
    dend_30 { pt3dadd( 97.4951, 23.1716, 13.0845, 0.55 ) }
    dend_30 { pt3dadd( 98.8125, 23.2621, 13.8127, 0.55 ) }
    dend_30 { pt3dadd( 100.446, 23.4257, 14.6924, 0.83 ) }
    dend_30 { pt3dadd( 103.119, 23.7233, 15.8601, 0.55 ) }
    dend_30 { pt3dadd( 104.884, 23.8603, 16.5395, 0.83 ) }
    dend_30 { pt3dadd( 107.327, 23.9472, 17.3824, 0.55 ) }
    dend_30 { pt3dadd( 108.075, 23.9336, 17.6241, 0.55 ) }
    dend_30 { pt3dadd( 110.386, 23.78, 18.3079, 0.55 ) }
    dend_30 { pt3dadd( 114.504, 23.2703, 19.3279, 0.55 ) }
    dend_30 { pt3dadd( 117.508, 22.7335, 19.979, 0.55 ) }
    dend_30 { pt3dadd( 119.879, 22.1871, 20.5318, 0.55 ) }
    dend_30 { pt3dadd( 122.288, 21.4871, 21.157, 0.55 ) }
    dend_30 { pt3dadd( 122.793, 21.3254, 21.2888, 0.28 ) }
    dend_30 { pt3dadd( 123.816, 20.9549, 21.5468, 0.83 ) }
    dend_30 { pt3dadd( 128.011, 19.3661, 22.6207, 0.55 ) }
    dend_30 { pt3dadd( 130.946, 18.2658, 23.3151, 0.55 ) }
    dend_30 { pt3dadd( 133.359, 17.4186, 23.9564, 0.55 ) }
    dend_30 { pt3dadd( 134.801, 16.906, 24.3527, 0.83 ) }
    dend_30 { pt3dadd( 135.937, 16.5194, 24.6696, 0.28 ) }
    dend_30 { pt3dadd( 136.967, 16.1718, 24.9475, 0.55 ) }
    dend_30 { pt3dadd( 145.14, 15.3549, 28.6063, 0.55 ) }
    dend_30 { pt3dadd( 153.683, 13.3094, 30.4759, 0.55 ) }
    dend_30 { pt3dadd( 162.268, 12.3318, 32.9422, 0.55 ) }
    dend_30 { pt3dadd( 169.865, 9.86423, 37.0488, 0.55 ) }
    dend_30 { pt3dadd( 176.841, 6.1449, 41.3302, 0.55 ) }
    dend_30 { pt3dadd( 184.359, 1.40627, 42.9163, 0.55 ) }
    dend_30 { pt3dadd( 191.666, -3.9628, 42.8704, 0.55 ) }
    dend_30 { pt3dadd( 199.865, -7.69307, 42.5535, 0.55 ) }
    dend_30 { pt3dadd( 207.966, -11.6392, 42.8065, 0.55 ) }
    dend_30 { pt3dadd( 216.48, -14.5352, 42.6575, 0.55 ) }
    dend_30 { pt3dadd( 225.001, -17.1852, 43.7185, 0.55 ) }
    dend_30 { pt3dadd( 232.86, -21.4168, 44.9852, 0.55 ) }
    dend_30 { pt3dadd( 241.065, -24.1723, 47.3922, 0.55 ) }
    dend_30 { pt3dadd( 249.024, -25.7218, 51.2618, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.486, -30.8151, 6.39795, 1.38 ) }
    dend_13 { pt3dadd( 1.08517, -34.8321, 4.22499, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.486, -30.8151, 6.39795, 0.55 ) }
    dend_12 { pt3dadd( -3.22789, -33.0373, 6.41576, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -5.15266, -35.8879, 6.4336, 0.55 ) }
    dend_12 { pt3dadd( -6.65228, -37.7741, 6.46719, 0.55 ) }
    dend_12 { pt3dadd( -7.91501, -39.3493, 6.2924, 0.55 ) }
    dend_12 { pt3dadd( -10.6692, -42.6091, 5.64432, 0.55 ) }
    dend_12 { pt3dadd( -12.6009, -44.7851, 5.13545, 0.55 ) }
    dend_12 { pt3dadd( -14.3181, -46.7357, 4.61592, 0.55 ) }
    dend_12 { pt3dadd( -18.7306, -51.4815, 3.28759, 0.55 ) }
    dend_12 { pt3dadd( -24.0336, -56.9753, 1.73659, 0.55 ) }
    dend_12 { pt3dadd( -28.1404, -61.1351, 0.462889, 0.55 ) }
    dend_12 { pt3dadd( -30.7609, -63.8669, -0.389705, 0.55 ) }
    dend_12 { pt3dadd( -33.7672, -67.1457, -1.35974, 0.55 ) }
    dend_12 { pt3dadd( -37.5792, -71.8527, -2.54326, 0.55 ) }
    dend_12 { pt3dadd( -39.8078, -75.1964, -3.19207, 0.55 ) }
    dend_12 { pt3dadd( -42.5561, -80.0116, -3.74973, 0.55 ) }
    dend_12 { pt3dadd( -44.7461, -84.5275, -4.11069, 0.55 ) }
    dend_12 { pt3dadd( -46.9571, -90.1673, -4.44542, 0.55 ) }
    dend_12 { pt3dadd( -49.0394, -96.7934, -4.67965, 0.55 ) }
    dend_12 { pt3dadd( -50.1582, -101.862, -4.73869, 0.55 ) }
    dend_12 { pt3dadd( -50.5526, -104.386, -4.60955, 0.55 ) }
    dend_12 { pt3dadd( -51.1429, -110.322, -3.99537, 0.55 ) }
    dend_12 { pt3dadd( -51.602, -115.877, -3.28169, 0.55 ) }
    dend_12 { pt3dadd( -51.7936, -121.478, -2.16653, 0.55 ) }
    dend_12 { pt3dadd( -51.9366, -124.691, -1.36044, 0.55 ) }
    dend_12 { pt3dadd( -52.3235, -134.63, 1.47924, 0.55 ) }
    dend_12 { pt3dadd( -52.3568, -135.362, 1.70049, 0.55 ) }
    dend_12 { pt3dadd( -52.4806, -139.845, 3.16046, 0.55 ) }
    dend_12 { pt3dadd( -53.0585, -147.861, 5.94712, 0.55 ) }
    dend_12 { pt3dadd( -53.2655, -150.541, 6.72763, 0.55 ) }
    dend_12 { pt3dadd( -53.6828, -154.725, 7.26482, 0.55 ) }
    dend_12 { pt3dadd( -53.7972, -156.278, 7.12647, 0.55 ) }
    dend_12 { pt3dadd( -53.9567, -161.529, 5.72054, 0.55 ) }
    dend_12 { pt3dadd( -53.8744, -164.928, 4.12823, 0.55 ) }
    dend_12 { pt3dadd( -53.595, -170.337, 0.5441, 0.55 ) }
    dend_12 { pt3dadd( -52.9937, -176.952, -4.32712, 0.28 ) }
    dend_12 { pt3dadd( -52.8191, -178.587, -5.74221, 0.55 ) }
    dend_12 { pt3dadd( -52.5452, -181.063, -8.09626, 0.28 ) }
    dend_12 { pt3dadd( -52.5071, -181.436, -8.46998, 0.55 ) }
    dend_12 { pt3dadd( -52.3119, -183.481, -10.3491, 0.28 ) }
    dend_12 { pt3dadd( -52.292, -184.175, -10.8347, 0.55 ) }
    dend_12 { pt3dadd( -52.2716, -187.79, -12.6935, 0.28 ) }
    dend_12 { pt3dadd( -52.3102, -189.02, -13.3115, 0.55 ) }
    dend_12 { pt3dadd( -52.4657, -192.577, -14.9059, 0.28 ) }
    dend_12 { pt3dadd( -52.5098, -193.697, -15.4039, 0.55 ) }
    dend_12 { pt3dadd( -52.693, -197.562, -17.0623, 0.28 ) }
    dend_12 { pt3dadd( -52.7683, -199.339, -17.8338, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -14.208, -80.2733, 58.7942, 0.55 ) }
    dend_10 { pt3dadd( -18.7121, -88.542, 66.4033, 0.55 ) }
    dend_10 { pt3dadd( -24.3054, -95.6823, 74.3267, 0.55 ) }
    dend_10 { pt3dadd( -29.6283, -103.64, 81.7132, 0.55 ) }
    dend_10 { pt3dadd( -35.1563, -111.629, 88.9187, 0.55 ) }
    dend_10 { pt3dadd( -39.5359, -121.053, 95.2861, 0.55 ) }
    dend_10 { pt3dadd( -43.7768, -130.091, 102.223, 0.55 ) }
    dend_10 { pt3dadd( -46.8104, -141.087, 106.829, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -14.208, -80.2733, 58.7942, 0.55 ) }
    dend_3 { pt3dadd( -13.6766, -90.5686, 67.8648, 0.55 ) }
    dend_3 { pt3dadd( -12.766, -102.405, 74.9855, 0.55 ) }
    dend_3 { pt3dadd( -14.01, -114.21, 82.1319, 0.55 ) }
    dend_3 { pt3dadd( -16.1031, -126.619, 88.0653, 0.55 ) }
    dend_3 { pt3dadd( -17.6486, -139.01, 94.1852, 0.55 ) }
    dend_3 { pt3dadd( -19.034, -150.923, 101.143, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -45.1688, 44.4032, -17.785, 0.83 ) }
    dend_60 { pt3dadd( -44.3934, 47.1565, -19.9969, 0.83 ) }
    dend_60 { pt3dadd( -42.7291, 53.7572, -24.9025, 0.55 ) }
    dend_60 { pt3dadd( -42.0344, 56.5848, -26.8106, 0.83 ) }
    dend_60 { pt3dadd( -41.3047, 59.5929, -28.6685, 0.55 ) }
    dend_60 { pt3dadd( -40.6045, 62.6511, -30.191, 0.55 ) }
    dend_60 { pt3dadd( -40.2645, 64.1711, -30.7774, 0.28 ) }
    dend_60 { pt3dadd( -40.1252, 65.1553, -30.9436, 0.55 ) }
    dend_60 { pt3dadd( -39.6497, 68.3824, -30.8398, 0.28 ) }
    dend_60 { pt3dadd( -39.4222, 69.7576, -30.7264, 0.55 ) }
    dend_60 { pt3dadd( -38.7088, 74.5191, -30.1554, 0.28 ) }
    dend_60 { pt3dadd( -38.2503, 78.2782, -29.5928, 0.55 ) }
    dend_60 { pt3dadd( -37.8214, 84.1243, -28.5719, 0.28 ) }
    dend_60 { pt3dadd( -37.6269, 89.2489, -27.6001, 0.28 ) }
    dend_60 { pt3dadd( -37.6826, 92.1071, -27.0209, 0.55 ) }
    dend_60 { pt3dadd( -37.9479, 95.489, -26.3554, 0.28 ) }
    dend_60 { pt3dadd( -38.1786, 97.097, -26.0277, 0.55 ) }
    dend_60 { pt3dadd( -38.9003, 100.888, -25.4441, 0.28 ) }
    dend_60 { pt3dadd( -39.5272, 103.421, -25.2004, 0.28 ) }
    dend_60 { pt3dadd( -40.1847, 105.914, -25.0394, 0.28 ) }
    dend_60 { pt3dadd( -40.4837, 107.234, -24.9538, 0.55 ) }
    dend_60 { pt3dadd( -41.4075, 112.596, -24.6954, 0.28 ) }
    dend_60 { pt3dadd( -42.2894, 118.967, -24.4767, 0.55 ) }
    dend_60 { pt3dadd( -42.5627, 121.17, -24.4058, 0.55 ) }
    dend_60 { pt3dadd( -42.8752, 123.372, -24.2936, 0.55 ) }
    dend_60 { pt3dadd( -43.7639, 128.047, -24.1549, 0.55 ) }
    dend_60 { pt3dadd( -44.526, 131.113, -24.1484, 0.28 ) }
    dend_60 { pt3dadd( -44.9396, 132.269, -24.1757, 0.55 ) }
    dend_60 { pt3dadd( -46.2755, 135.382, -24.211, 0.28 ) }
    dend_60 { pt3dadd( -47.8117, 138.701, -24.3896, 0.55 ) }
    dend_60 { pt3dadd( -50.4216, 143.467, -24.8741, 0.28 ) }
    dend_60 { pt3dadd( -51.7089, 145.452, -25.1624, 0.28 ) }
    dend_60 { pt3dadd( -53.8057, 148.219, -25.8689, 0.55 ) }
    dend_60 { pt3dadd( -56.156, 151.106, -26.7725, 0.28 ) }
    dend_60 { pt3dadd( -56.5871, 151.557, -26.9437, 0.55 ) }
    dend_60 { pt3dadd( -58.1486, 152.992, -27.5698, 0.28 ) }
    dend_60 { pt3dadd( -63.5572, 157.567, -29.6582, 0.55 ) }
    dend_60 { pt3dadd( -71.0696, 163.224, -32.9299, 0.28 ) }
    dend_60 { pt3dadd( -72.4512, 164.179, -33.6308, 0.55 ) }
    dend_60 { pt3dadd( -76.2419, 166.647, -35.6381, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -77.8295, 167.662, -36.5288, 0.28 ) }
    dend_60 { pt3dadd( -79.2034, 168.512, -37.3765, 0.55 ) }
    dend_60 { pt3dadd( -83.2055, 170.493, -40.2384, 0.28 ) }
    dend_60 { pt3dadd( -86.0532, 171.554, -42.1713, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -45.1688, 44.4032, -17.785, 0.55 ) }
    dend_57 { pt3dadd( -45.3397, 45.8412, -17.8922, 0.55 ) }
    dend_57 { pt3dadd( -45.4651, 46.6858, -17.8817, 0.28 ) }
    dend_57 { pt3dadd( -45.6769, 47.2813, -17.7404, 0.55 ) }
    dend_57 { pt3dadd( -46.1632, 48.6488, -17.4157, 0.28 ) }
    dend_57 { pt3dadd( -46.5048, 49.6093, -17.1877, 0.55 ) }
    dend_57 { pt3dadd( -47.1346, 51.38, -16.7673, 0.28 ) }
    dend_57 { pt3dadd( -47.5733, 52.3195, -16.388, 0.55 ) }
    dend_57 { pt3dadd( -49.3098, 54.5078, -14.7479, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -144.876, -77.005, 21.0594, 0.55 ) }
    dend_52 { pt3dadd( -149.663, -85.0868, 22.0217, 0.55 ) }
    dend_52 { pt3dadd( -152.985, -93.9663, 22.6291, 0.55 ) }
    dend_52 { pt3dadd( -155.707, -102.919, 21.2624, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -144.876, -77.005, 21.0594, 0.55 ) }
    dend_49 { pt3dadd( -150.555, -85.3815, 20.1671, 0.55 ) }
    dend_49 { pt3dadd( -155.331, -94.1372, 18.1927, 0.55 ) }
    dend_49 { pt3dadd( -159.713, -103.068, 16.0476, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -180.421, 17.9779, 86.2993, 0.55 ) }
    dend_47 { pt3dadd( -188.951, 19.0644, 93.4648, 0.55 ) }
    dend_47 { pt3dadd( -198.284, 21.2005, 99.2847, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -180.421, 17.9779, 86.2993, 0.55 ) }
    dend_46 { pt3dadd( -188.828, 16.9469, 90.4281, 0.55 ) }
    dend_46 { pt3dadd( -197.332, 17.5436, 94.4299, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 101.185, -48.9918, -88.0925, 0.28 ) }
    dend_39 { pt3dadd( 109.037, -52.9392, -98.6758, 0.28 ) }
    dend_39 { pt3dadd( 109.786, -53.3991, -99.6177, 0.55 ) }
    dend_39 { pt3dadd( 111.051, -54.1757, -101.208, 0.28 ) }
    dend_39 { pt3dadd( 112.115, -54.8295, -102.547, 0.28 ) }
    dend_39 { pt3dadd( 113.525, -55.695, -104.32, 0.55 ) }
    dend_39 { pt3dadd( 115.383, -56.8361, -106.657, 0.55 ) }
    dend_39 { pt3dadd( 117.435, -58.9824, -107.805, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 101.185, -48.9918, -88.0925, 0.55 ) }
    dend_36 { pt3dadd( 102.152, -50.5369, -89.4694, 0.55 ) }
    dend_36 { pt3dadd( 102.462, -51.2395, -90.0839, 0.28 ) }
    dend_36 { pt3dadd( 102.933, -52.45, -91.1631, 0.55 ) }
    dend_36 { pt3dadd( 103.971, -55.1164, -93.5404, 0.28 ) }
    dend_36 { pt3dadd( 104.69, -56.9644, -95.188, 0.55 ) }
    dend_36 { pt3dadd( 105.908, -60.0952, -97.9793, 0.28 ) }
    dend_36 { pt3dadd( 107.299, -63.9434, -101.684, 0.28 ) }
    dend_36 { pt3dadd( 107.866, -65.7201, -103.423, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 152.942, -25.1315, -19.2611, 0.28 ) }
    dend_33 { pt3dadd( 154.365, -27.1916, -18.3313, 0.28 ) }
    dend_33 { pt3dadd( 156.167, -29.8577, -16.8712, 0.28 ) }
    dend_33 { pt3dadd( 157.307, -31.57, -15.85, 0.55 ) }
    dend_33 { pt3dadd( 158.002, -32.5047, -15.2375, 0.28 ) }
    dend_33 { pt3dadd( 158.371, -33.0066, -14.9025, 0.28 ) }
    dend_33 { pt3dadd( 160.202, -35.4948, -13.2898, 0.55 ) }
    dend_33 { pt3dadd( 160.627, -36.0296, -12.8538, 0.28 ) }
    dend_33 { pt3dadd( 161.63, -37.4115, -11.5971, 0.55 ) }
    dend_33 { pt3dadd( 162.482, -38.6265, -10.5612, 0.28 ) }
    dend_33 { pt3dadd( 163.23, -39.6206, -9.74096, 0.55 ) }
    dend_33 { pt3dadd( 164.101, -40.8296, -8.84262, 0.55 ) }
    dend_33 { pt3dadd( 165.478, -42.8152, -7.68081, 0.55 ) }
    dend_33 { pt3dadd( 165.809, -43.3069, -7.41432, 0.55 ) }
    dend_33 { pt3dadd( 166.987, -45.1473, -6.4403, 0.28 ) }
    dend_33 { pt3dadd( 167.439, -45.9039, -6.06285, 0.55 ) }
    dend_33 { pt3dadd( 168.077, -46.8723, -5.5849, 0.28 ) }
    dend_33 { pt3dadd( 168.974, -48.263, -4.9714, 0.55 ) }
    dend_33 { pt3dadd( 170.457, -50.537, -4.33101, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 152.942, -25.1315, -19.2611, 0.55 ) }
    dend_32 { pt3dadd( 150.073, -24.9423, -19.2391, 0.55 ) }
    dend_32 { pt3dadd( 147.744, -24.7885, -19.2213, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.08517, -34.8321, 4.22499, 0.83 ) }
    dend_17 { pt3dadd( 1.21529, -35.1658, 4.16252, 0.83 ) }
    dend_17 { pt3dadd( 2.80932, -38.1349, 3.69278, 0.83 ) }
    dend_17 { pt3dadd( 4.17222, -40.7314, 3.12105, 0.55 ) }
    dend_17 { pt3dadd( 5.25953, -42.8028, 2.66493, 0.55 ) }
    dend_17 { pt3dadd( 7.57064, -47.2057, 1.69544, 0.83 ) }
    dend_17 { pt3dadd( 10.3738, -52.5462, 0.519507, 0.55 ) }
    dend_17 { pt3dadd( 11.9203, -55.3447, -0.0591841, 0.83 ) }
    dend_17 { pt3dadd( 14.7241, -59.8099, -0.860529, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.08517, -34.8321, 4.22499, 0.55 ) }
    dend_14 { pt3dadd( -1.35228, -35.6982, 2.40346, 0.55 ) }
    dend_14 { pt3dadd( -3.96859, -36.6279, 0.448277, 0.55 ) }
    dend_14 { pt3dadd( -7.05716, -37.7254, -1.85984, 0.55 ) }
    dend_14 { pt3dadd( -10.8077, -39.0581, -4.66264, 0.55 ) }
    dend_14 { pt3dadd( -12.936, -39.8144, -6.25313, 0.55 ) }
    dend_14 { pt3dadd( -13.3636, -39.9663, -6.57264, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -19.034, -150.923, 101.143, 0.55 ) }
    dend_7 { pt3dadd( -19.2585, -160.898, 107.761, 0.55 ) }
    dend_7 { pt3dadd( -17.9338, -171.535, 113.196, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -19.034, -150.923, 101.143, 0.55 ) }
    dend_4 { pt3dadd( -19.7502, -158.543, 105.217, 0.55 ) }
    dend_4 { pt3dadd( -20.8605, -165.981, 109.5, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -49.3098, 54.5078, -14.7479, 0.28 ) }
    dend_59 { pt3dadd( -50.877, 56.702, -12.7133, 0.28 ) }
    dend_59 { pt3dadd( -51.4624, 57.5343, -11.8452, 0.55 ) }
    dend_59 { pt3dadd( -53.1296, 59.9464, -9.28049, 0.28 ) }
    dend_59 { pt3dadd( -53.9658, 61.1404, -8.1331, 0.55 ) }
    dend_59 { pt3dadd( -56.2609, 64.3715, -5.1422, 0.28 ) }
    dend_59 { pt3dadd( -58.5935, 67.6555, -2.10235, 0.55 ) }
    dend_59 { pt3dadd( -62.4622, 72.8012, 2.98482, 0.28 ) }
    dend_59 { pt3dadd( -63.2853, 73.9065, 4.06893, 0.55 ) }
    dend_59 { pt3dadd( -65.0943, 76.4954, 6.36054, 0.28 ) }
    dend_59 { pt3dadd( -65.7961, 77.5688, 7.25878, 0.55 ) }
    dend_59 { pt3dadd( -74.0807, 84.739, 15.1033, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -83.3569, 93.3673, 19.9305, 0.55 ) }
    dend_59 { pt3dadd( -91.1762, 102.377, 26.4025, 0.55 ) }
    dend_59 { pt3dadd( -97.22, 113.041, 32.4732, 0.55 ) }
    dend_59 { pt3dadd( -104.693, 123.174, 37.735, 0.55 ) }
    dend_59 { pt3dadd( -113.275, 131.228, 44.3895, 0.55 ) }
    dend_59 { pt3dadd( -120.947, 138.245, 52.9486, 0.55 ) }
    dend_59 { pt3dadd( -127.362, 143.888, 63.2886, 0.55 ) }
    dend_59 { pt3dadd( -133.796, 150.317, 73.1851, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -49.3098, 54.5078, -14.7479, 0.55 ) }
    dend_58 { pt3dadd( -52.8838, 53.0459, -13.9418, 0.55 ) }
    dend_58 { pt3dadd( -54.7386, 52.2232, -13.5339, 0.28 ) }
    dend_58 { pt3dadd( -56.119, 51.6109, -13.2304, 0.55 ) }
    dend_58 { pt3dadd( -57.2694, 51.1007, -12.9774, 0.28 ) }
    dend_58 { pt3dadd( -58.0752, 50.7432, -12.8002, 0.55 ) }
    dend_58 { pt3dadd( -60.2972, 49.7577, -12.3116, 0.28 ) }
    dend_58 { pt3dadd( -61.7476, 48.9968, -12.1834, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -155.707, -102.919, 21.2624, 0.55 ) }
    dend_54 { pt3dadd( -158.171, -110.358, 22.7274, 0.55 ) }
    dend_54 { pt3dadd( -160.336, -117.699, 25.0023, 0.55 ) }
    dend_54 { pt3dadd( -162.155, -125.423, 25.9055, 0.55 ) }
    dend_54 { pt3dadd( -164.578, -132.766, 27.8584, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -155.707, -102.919, 21.2624, 0.55 ) }
    dend_53 { pt3dadd( -160.411, -107.13, 17.0983, 0.55 ) }
    dend_53 { pt3dadd( -165.106, -110.309, 12.1612, 0.55 ) }
    dend_53 { pt3dadd( -170.042, -114.399, 8.16038, 0.55 ) }
    dend_53 { pt3dadd( -176.257, -117.385, 5.19355, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -159.713, -103.068, 16.0476, 0.55 ) }
    dend_51 { pt3dadd( -166.648, -111.285, 9.28979, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -159.713, -103.068, 16.0476, 0.55 ) }
    dend_50 { pt3dadd( -162.972, -113.303, 19.476, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 117.435, -58.9824, -107.805, 0.28 ) }
    dend_41 { pt3dadd( 120.21, -60.5022, -109.056, 0.28 ) }
    dend_41 { pt3dadd( 121.5, -61.2081, -109.637, 0.55 ) }
    dend_41 { pt3dadd( 123.958, -62.5543, -110.746, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 117.435, -58.9824, -107.805, 0.55 ) }
    dend_40 { pt3dadd( 116.942, -60.2928, -109.944, 0.55 ) }
    dend_40 { pt3dadd( 115.956, -62.9138, -114.224, 0.28 ) }
    dend_40 { pt3dadd( 115.634, -63.7676, -115.619, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 107.866, -65.7201, -103.423, 0.28 ) }
    dend_38 { pt3dadd( 109.588, -69.5378, -106.079, 0.28 ) }
    dend_38 { pt3dadd( 110.44, -71.4281, -107.395, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 107.866, -65.7201, -103.423, 0.55 ) }
    dend_37 { pt3dadd( 106.122, -66.6238, -102.422, 0.55 ) }
    dend_37 { pt3dadd( 101.259, -69.1438, -99.6293, 0.28 ) }
    dend_37 { pt3dadd( 100.104, -69.7424, -98.9661, 0.55 ) }
    dend_37 { pt3dadd( 96.9433, -71.38, -97.1518, 0.28 ) }
    dend_37 { pt3dadd( 94.9062, -72.4356, -95.9823, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.7241, -59.8099, -0.860529, 0.83 ) }
    dend_23 { pt3dadd( 14.7327, -60.0691, -0.894041, 0.83 ) }
    dend_23 { pt3dadd( 14.9225, -63.4597, -1.26553, 0.83 ) }
    dend_23 { pt3dadd( 14.9222, -65.9924, -1.32676, 0.83 ) }
    dend_23 { pt3dadd( 14.8525, -68.4295, -1.10334, 0.83 ) }
    dend_23 { pt3dadd( 14.7384, -71.6661, -0.548354, 0.83 ) }
    dend_23 { pt3dadd( 14.5604, -75.3901, 0.249135, 0.83 ) }
    dend_23 { pt3dadd( 14.4505, -79.5453, 1.32998, 0.83 ) }
    dend_23 { pt3dadd( 14.4071, -83.5787, 2.54742, 0.83 ) }
    dend_23 { pt3dadd( 14.0243, -88.5231, 4.04643, 0.83 ) }
    dend_23 { pt3dadd( 13.6922, -90.7932, 4.66026, 0.83 ) }
    dend_23 { pt3dadd( 13.4002, -92.502, 5.02662, 0.83 ) }
    dend_23 { pt3dadd( 12.7537, -95.7795, 5.69002, 0.83 ) }
    dend_23 { pt3dadd( 12.1825, -98.7197, 6.11426, 0.83 ) }
    dend_23 { pt3dadd( 11.037, -105.011, 6.27211, 0.83 ) }
    dend_23 { pt3dadd( 10.2962, -108.461, 5.94067, 0.83 ) }
    dend_23 { pt3dadd( 9.53425, -111.643, 5.42727, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 14.7241, -59.8099, -0.860529, 0.55 ) }
    dend_18 { pt3dadd( 13.6442, -62.3702, -0.291751, 0.55 ) }
    dend_18 { pt3dadd( 12.8809, -64.2241, 0.257909, 0.55 ) }
    dend_18 { pt3dadd( 12.4606, -65.4073, 0.708957, 0.55 ) }
    dend_18 { pt3dadd( 11.9427, -67.2571, 1.55257, 0.55 ) }
    dend_18 { pt3dadd( 11.0819, -70.9166, 3.41, 0.55 ) }
    dend_18 { pt3dadd( 10.5087, -73.6773, 5.10533, 0.55 ) }
    dend_18 { pt3dadd( 10.1287, -75.8837, 6.68278, 0.55 ) }
    dend_18 { pt3dadd( 9.74636, -78.1059, 8.44089, 0.55 ) }
    dend_18 { pt3dadd( 9.44668, -79.9455, 9.99395, 0.28 ) }
    dend_18 { pt3dadd( 9.25437, -81.4417, 11.4759, 0.55 ) }
    dend_18 { pt3dadd( 8.97261, -84.151, 14.5533, 0.55 ) }
    dend_18 { pt3dadd( 8.77405, -85.8033, 16.6397, 0.55 ) }
    dend_18 { pt3dadd( 8.64995, -86.7288, 17.8031, 0.55 ) }
    dend_18 { pt3dadd( 8.43171, -87.8201, 19.1394, 0.83 ) }
    dend_18 { pt3dadd( 7.68381, -91.0616, 22.905, 0.28 ) }
    dend_18 { pt3dadd( 7.4274, -92.1353, 24.123, 0.55 ) }
    dend_18 { pt3dadd( 7.00073, -94.0777, 26.2414, 0.28 ) }
    dend_18 { pt3dadd( 6.88442, -94.6752, 26.9357, 0.55 ) }
    dend_18 { pt3dadd( 6.6766, -96.0819, 28.5135, 0.28 ) }
    dend_18 { pt3dadd( 6.54366, -96.8839, 29.3529, 0.55 ) }
    dend_18 { pt3dadd( 5.7213, -99.5085, 31.4724, 0.55 ) }
    dend_18 { pt3dadd( 6.10297, -106.565, 39.2035, 0.55 ) }
    dend_18 { pt3dadd( 7.08998, -113.282, 47.1511, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -13.3636, -39.9663, -6.57264, 0.55 ) }
    dend_16 { pt3dadd( -16.2341, -41.0318, -9.55093, 0.55 ) }
    dend_16 { pt3dadd( -17.0748, -41.2704, -10.3945, 0.55 ) }
    dend_16 { pt3dadd( -19.192, -41.8644, -12.4317, 0.55 ) }
    dend_16 { pt3dadd( -23.821, -43.0034, -16.7043, 0.28 ) }
    dend_16 { pt3dadd( -24.5108, -43.1531, -17.2981, 0.55 ) }
    dend_16 { pt3dadd( -27.4056, -43.8534, -19.6572, 0.55 ) }
    dend_16 { pt3dadd( -31.3927, -44.7887, -22.5115, 0.55 ) }
    dend_16 { pt3dadd( -32.9144, -45.0955, -23.571, 0.28 ) }
    dend_16 { pt3dadd( -34.2407, -45.2672, -24.4315, 0.28 ) }
    dend_16 { pt3dadd( -36.5145, -45.495, -25.6082, 0.55 ) }
    dend_16 { pt3dadd( -39.2694, -45.649, -27.1523, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -41.787, -45.5755, -28.6491, 0.55 ) }
    dend_16 { pt3dadd( -43.7159, -45.3524, -29.781, 0.55 ) }
    dend_16 { pt3dadd( -45.0297, -45.0874, -30.6097, 0.55 ) }
    dend_16 { pt3dadd( -48.8649, -44.1359, -33.1724, 0.55 ) }
    dend_16 { pt3dadd( -52.8719, -42.8428, -35.8126, 0.55 ) }
    dend_16 { pt3dadd( -54.5179, -42.2097, -36.8684, 0.28 ) }
    dend_16 { pt3dadd( -56.0839, -41.6365, -37.899, 0.55 ) }
    dend_16 { pt3dadd( -59.2884, -40.6882, -39.942, 0.28 ) }
    dend_16 { pt3dadd( -60.3711, -40.4008, -40.6164, 0.83 ) }
    dend_16 { pt3dadd( -62.3959, -39.8303, -41.7395, 0.28 ) }
    dend_16 { pt3dadd( -63.875, -39.5213, -42.3503, 0.55 ) }
    dend_16 { pt3dadd( -66.0336, -39.147, -43.1892, 0.28 ) }
    dend_16 { pt3dadd( -66.8928, -38.9849, -43.4962, 0.55 ) }
    dend_16 { pt3dadd( -68.4912, -38.7098, -43.9788, 0.55 ) }
    dend_16 { pt3dadd( -70.8784, -38.0426, -44.6343, 0.55 ) }
    dend_16 { pt3dadd( -72.4274, -37.5024, -44.9823, 0.28 ) }
    dend_16 { pt3dadd( -73.6577, -36.9011, -45.1745, 0.55 ) }
    dend_16 { pt3dadd( -75.0848, -36.0064, -45.4203, 0.28 ) }
    dend_16 { pt3dadd( -75.3172, -35.8398, -45.4703, 0.55 ) }
    dend_16 { pt3dadd( -77.4568, -34.2731, -46.3221, 0.28 ) }
    dend_16 { pt3dadd( -79.0058, -33.1129, -47.115, 0.55 ) }
    dend_16 { pt3dadd( -81.0314, -31.454, -48.4659, 0.83 ) }
    dend_16 { pt3dadd( -82.6943, -30.0577, -49.7795, 0.28 ) }
    dend_16 { pt3dadd( -83.1241, -29.703, -50.1637, 0.55 ) }
    dend_16 { pt3dadd( -86.4256, -27.0485, -53.302, 0.28 ) }
    dend_16 { pt3dadd( -87.0042, -26.5982, -53.9111, 0.55 ) }
    dend_16 { pt3dadd( -88.6939, -25.1493, -55.8316, 0.28 ) }
    dend_16 { pt3dadd( -89.1302, -24.7768, -56.3308, 0.55 ) }
    dend_16 { pt3dadd( -90.2498, -23.803, -57.5296, 0.28 ) }
    dend_16 { pt3dadd( -91.0425, -23.0997, -58.3251, 0.55 ) }
    dend_16 { pt3dadd( -92.8186, -21.5114, -59.8124, 0.28 ) }
    dend_16 { pt3dadd( -93.8857, -20.6491, -60.6456, 0.55 ) }
    dend_16 { pt3dadd( -96.1878, -18.959, -62.2822, 0.28 ) }
    dend_16 { pt3dadd( -96.8796, -18.4961, -62.7554, 0.55 ) }
    dend_16 { pt3dadd( -97.978, -17.8591, -63.4491, 0.28 ) }
    dend_16 { pt3dadd( -98.9094, -17.3193, -63.9893, 0.55 ) }
    dend_16 { pt3dadd( -100.849, -16.2191, -64.988, 0.28 ) }
    dend_16 { pt3dadd( -101.436, -15.9007, -65.268, 0.55 ) }
    dend_16 { pt3dadd( -105.782, -13.4314, -67.1435, 0.28 ) }
    dend_16 { pt3dadd( -107.29, -12.4418, -67.6708, 0.55 ) }
    dend_16 { pt3dadd( -109.959, -10.5261, -68.4396, 0.28 ) }
    dend_16 { pt3dadd( -111.154, -9.60846, -68.7505, 0.55 ) }
    dend_16 { pt3dadd( -113.894, -7.5167, -69.2937, 0.28 ) }
    dend_16 { pt3dadd( -114.906, -6.79553, -69.4428, 0.55 ) }
    dend_16 { pt3dadd( -118.611, -4.53493, -69.7477, 0.28 ) }
    dend_16 { pt3dadd( -120.185, -3.80132, -69.8451, 0.55 ) }
    dend_16 { pt3dadd( -122.487, -3.14543, -69.9295, 0.55 ) }
    dend_16 { pt3dadd( -123.915, -2.83363, -69.9405, 0.55 ) }
    dend_16 { pt3dadd( -126.825, -2.26417, -69.7327, 0.28 ) }
    dend_16 { pt3dadd( -129.68, -1.72452, -69.345, 0.28 ) }
    dend_16 { pt3dadd( -132.052, -1.26248, -68.9527, 0.55 ) }
    dend_16 { pt3dadd( -134.885, -0.42064, -68.1704, 0.28 ) }
    dend_16 { pt3dadd( -136.237, 0.191763, -67.6014, 0.55 ) }
    dend_16 { pt3dadd( -139.324, 2.23993, -65.9424, 0.28 ) }
    dend_16 { pt3dadd( -140.787, 3.6753, -64.6899, 0.55 ) }
    dend_16 { pt3dadd( -141.652, 4.7998, -63.6419, 0.28 ) }
    dend_16 { pt3dadd( -142.548, 6.077, -62.1507, 0.55 ) }
    dend_16 { pt3dadd( -143.608, 7.74338, -60.0907, 0.28 ) }
    dend_16 { pt3dadd( -144.02, 8.33775, -59.3143, 0.55 ) }
    dend_16 { pt3dadd( -146.331, 11.066, -55.6573, 0.28 ) }
    dend_16 { pt3dadd( -147.124, 11.9374, -54.4322, 0.55 ) }
    dend_16 { pt3dadd( -149.008, 13.8984, -51.4434, 0.28 ) }
    dend_16 { pt3dadd( -150.036, 14.9446, -49.819, 0.55 ) }
    dend_16 { pt3dadd( -150.883, 15.8024, -48.4857, 0.55 ) }
    dend_16 { pt3dadd( -151.91, 16.8145, -46.9294, 0.28 ) }
    dend_16 { pt3dadd( -152.489, 17.3296, -46.242, 0.55 ) }
    dend_16 { pt3dadd( -154.47, 19.1434, -44.0981, 0.28 ) }
    dend_16 { pt3dadd( -155.469, 20.2594, -42.9602, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -13.3636, -39.9663, -6.57264, 0.55 ) }
    dend_15 { pt3dadd( -13.0374, -40.238, -7.79457, 0.55 ) }
    dend_15 { pt3dadd( -12.6528, -40.37, -9.02155, 0.55 ) }
    dend_15 { pt3dadd( -12.0808, -40.4296, -10.5298, 0.55 ) }
    dend_15 { pt3dadd( -11.5485, -40.3783, -11.7423, 0.55 ) }
    dend_15 { pt3dadd( -7.37866, -39.2149, -19.452, 0.55 ) }
    dend_15 { pt3dadd( -6.42232, -38.7411, -21.2155, 0.55 ) }
    dend_15 { pt3dadd( -5.02041, -37.8396, -23.8636, 0.55 ) }
    dend_15 { pt3dadd( -4.02725, -37.1358, -25.7482, 0.55 ) }
    dend_15 { pt3dadd( -3.01423, -36.3419, -27.5622, 0.28 ) }
    dend_15 { pt3dadd( -1.332, -34.9639, -30.2692, 0.55 ) }
    dend_15 { pt3dadd( 1.35762, -32.7926, -34.1491, 0.28 ) }
    dend_15 { pt3dadd( 1.52038, -32.674, -34.5488, 0.55 ) }
    dend_15 { pt3dadd( 1.89136, -32.3707, -37.4056, 0.28 ) }
    dend_15 { pt3dadd( 1.8076, -32.2569, -39.3627, 0.55 ) }
    dend_15 { pt3dadd( 1.50247, -32.2662, -41.4675, 0.55 ) }
    dend_15 { pt3dadd( 0.877856, -32.4772, -45.2347, 0.55 ) }
    dend_15 { pt3dadd( -0.334114, -32.9481, -52.6282, 0.55 ) }
    dend_15 { pt3dadd( -1.0665, -33.3286, -57.6033, 0.55 ) }
    dend_15 { pt3dadd( -1.27542, -33.481, -59.3253, 0.55 ) }
    dend_15 { pt3dadd( -2.36983, -34.418, -70.6716, 0.55 ) }
    dend_15 { pt3dadd( -2.53128, -34.639, -73.7551, 0.55 ) }
    dend_15 { pt3dadd( -2.49197, -34.7765, -75.4902, 0.55 ) }
    dend_15 { pt3dadd( -2.05956, -35.235, -79.5185, 0.55 ) }
    dend_15 { pt3dadd( -0.511026, -36.8927, -89.0932, 0.55 ) }
    dend_15 { pt3dadd( 0.0054121, -37.4579, -91.6473, 0.28 ) }
    dend_15 { pt3dadd( 0.40351, -37.8566, -93.0733, 0.55 ) }
    dend_15 { pt3dadd( 1.02428, -38.5424, -95.1703, 0.28 ) }
    dend_15 { pt3dadd( 1.3352, -38.9216, -96.0058, 0.55 ) }
    dend_15 { pt3dadd( 2.82175, -40.4973, -98.14, 0.28 ) }
    dend_15 { pt3dadd( 4.41348, -42.4065, -98.7164, 0.55 ) }
    dend_15 { pt3dadd( 5.36817, -43.7327, -98.9732, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 6.25375, -45.1609, -99.0614, 0.55 ) }
    dend_15 { pt3dadd( 7.01848, -46.6825, -99.0338, 0.28 ) }
    dend_15 { pt3dadd( 7.33027, -47.4567, -99.0283, 0.55 ) }
    dend_15 { pt3dadd( 8.04648, -49.4657, -98.918, 0.28 ) }
    dend_15 { pt3dadd( 8.20031, -50.0626, -98.9614, 0.55 ) }
    dend_15 { pt3dadd( 9.0266, -53.4877, -99.3806, 0.28 ) }
    dend_15 { pt3dadd( 9.40395, -55.0822, -99.7688, 0.55 ) }
    dend_15 { pt3dadd( 10.236, -58.5107, -100.97, 0.28 ) }
    dend_15 { pt3dadd( 10.5586, -59.7824, -101.549, 0.55 ) }
    dend_15 { pt3dadd( 11.7077, -63.9814, -103.715, 0.28 ) }
    dend_15 { pt3dadd( 11.9834, -65.0039, -104.281, 0.55 ) }
    dend_15 { pt3dadd( 12.7513, -68.2348, -106.159, 0.28 ) }
    dend_15 { pt3dadd( 12.9052, -68.9859, -106.538, 0.55 ) }
    dend_15 { pt3dadd( 13.2569, -70.9633, -107.509, 0.28 ) }
    dend_15 { pt3dadd( 13.4458, -72.1142, -108.175, 0.55 ) }
    dend_15 { pt3dadd( 13.6461, -73.2505, -108.917, 0.55 ) }
    dend_15 { pt3dadd( 14.0508, -75.5174, -110.384, 0.28 ) }
    dend_15 { pt3dadd( 14.3808, -76.9373, -111.466, 0.55 ) }
    dend_15 { pt3dadd( 15.6378, -80.5734, -115.036, 0.28 ) }
    dend_15 { pt3dadd( 16.1592, -81.7801, -116.496, 0.55 ) }
    dend_15 { pt3dadd( 16.5471, -82.5558, -117.495, 0.28 ) }
    dend_15 { pt3dadd( 16.9695, -83.2756, -118.503, 0.55 ) }
    dend_15 { pt3dadd( 18.3605, -85.3261, -121.582, 0.28 ) }
    dend_15 { pt3dadd( 19.442, -86.9118, -123.861, 0.55 ) }
    dend_15 { pt3dadd( 21.3868, -89.8806, -127.486, 0.28 ) }
    dend_15 { pt3dadd( 22.0048, -90.8063, -128.623, 0.55 ) }
    dend_15 { pt3dadd( 23.3002, -92.5218, -130.642, 0.28 ) }
    dend_15 { pt3dadd( 23.7622, -93.0867, -131.262, 0.55 ) }
    dend_15 { pt3dadd( 24.6118, -93.9939, -132.078, 0.28 ) }
    dend_15 { pt3dadd( 25.4051, -94.7654, -132.717, 0.55 ) }
    dend_15 { pt3dadd( 27.7013, -96.7094, -134.191, 0.28 ) }
    dend_15 { pt3dadd( 30.3818, -98.8043, -135.841, 0.28 ) }
    dend_15 { pt3dadd( 31.7967, -99.7886, -136.573, 0.28 ) }
    dend_15 { pt3dadd( 33.1962, -100.728, -137.409, 0.55 ) }
    dend_15 { pt3dadd( 35.2589, -101.986, -138.648, 0.28 ) }
    dend_15 { pt3dadd( 36.188, -102.529, -139.179, 0.83 ) }
    dend_15 { pt3dadd( 38.5901, -103.951, -140.431, 0.28 ) }
    dend_15 { pt3dadd( 39.6026, -104.595, -141.035, 0.55 ) }
    dend_15 { pt3dadd( 43.9238, -107.634, -143.903, 0.28 ) }
    dend_15 { pt3dadd( 45.9976, -109.185, -145.533, 0.28 ) }
    dend_15 { pt3dadd( 47.4561, -110.312, -146.833, 0.55 ) }
    dend_15 { pt3dadd( 48.2499, -110.992, -147.706, 0.55 ) }
    dend_15 { pt3dadd( 50.2491, -112.838, -150.23, 0.28 ) }
    dend_15 { pt3dadd( 52.044, -114.691, -152.683, 0.55 ) }
    dend_15 { pt3dadd( 53.6626, -116.46, -154.912, 0.28 ) }
    dend_15 { pt3dadd( 55.0662, -118.092, -157.033, 0.55 ) }
    dend_15 { pt3dadd( 56.2364, -119.418, -158.779, 0.28 ) }
    dend_15 { pt3dadd( 57.2546, -120.39, -160.141, 0.55 ) }
    dend_15 { pt3dadd( 59.8319, -122.519, -163.29, 0.28 ) }
    dend_15 { pt3dadd( 61.1744, -123.596, -164.816, 0.55 ) }
    dend_15 { pt3dadd( 63.2361, -125.223, -167.012, 0.28 ) }
    dend_15 { pt3dadd( 64.961, -126.485, -168.765, 0.55 ) }
    dend_15 { pt3dadd( 69.0425, -129.192, -172.896, 0.28 ) }
    dend_15 { pt3dadd( 70.6633, -130.163, -174.723, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -17.9338, -171.535, 113.196, 0.55 ) }
    dend_9 { pt3dadd( -17.5533, -181.035, 117.675, 0.55 ) }
    dend_9 { pt3dadd( -15.6183, -191.112, 120.189, 0.55 ) }
    dend_9 { pt3dadd( -14.6134, -200.929, 123.887, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.9338, -171.535, 113.196, 0.55 ) }
    dend_8 { pt3dadd( -17.2358, -180.785, 120.288, 0.55 ) }
    dend_8 { pt3dadd( -18.6718, -188.992, 128.348, 0.55 ) }
    dend_8 { pt3dadd( -20.8509, -195.294, 137.692, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -20.8605, -165.981, 109.5, 0.55 ) }
    dend_6 { pt3dadd( -20.6548, -179.162, 116.959, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -20.8605, -165.981, 109.5, 0.55 ) }
    dend_5 { pt3dadd( -21.9959, -173.025, 113.238, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 9.53425, -111.643, 5.42727, 0.83 ) }
    dend_25 { pt3dadd( 10.242, -114.789, 5.82723, 0.83 ) }
    dend_25 { pt3dadd( 10.9687, -117.438, 6.33987, 0.83 ) }
    dend_25 { pt3dadd( 11.6911, -120.071, 6.84944, 0.83 ) }
    dend_25 { pt3dadd( 12.3772, -122.572, 7.33336, 0.83 ) }
    dend_25 { pt3dadd( 13.4344, -126.425, 8.07912, 0.83 ) }
    dend_25 { pt3dadd( 14.484, -130.25, 8.8195, 0.83 ) }
    dend_25 { pt3dadd( 15.3965, -132.778, 9.60264, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 9.53425, -111.643, 5.42727, 0.55 ) }
    dend_24 { pt3dadd( 10.5455, -113.839, 4.57768, 0.55 ) }
    dend_24 { pt3dadd( 11.1379, -115.558, 3.72574, 0.55 ) }
    dend_24 { pt3dadd( 11.4591, -116.829, 3.04672, 0.55 ) }
    dend_24 { pt3dadd( 11.5666, -118.311, 2.26307, 0.83 ) }
    dend_24 { pt3dadd( 11.4858, -119.993, 1.30281, 0.55 ) }
    dend_24 { pt3dadd( 11.4066, -121.638, 0.363555, 0.83 ) }
    dend_24 { pt3dadd( 11.149, -123.421, -0.705068, 0.55 ) }
    dend_24 { pt3dadd( 10.9378, -124.457, -1.38945, 0.83 ) }
    dend_24 { pt3dadd( 9.99521, -127.807, -3.69468, 0.55 ) }
    dend_24 { pt3dadd( 9.00387, -130.43, -5.48157, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 7.08998, -113.282, 47.1511, 0.55 ) }
    dend_20 { pt3dadd( 5.48694, -122.819, 55.5673, 0.55 ) }
    dend_20 { pt3dadd( 2.68553, -130.928, 64.972, 0.55 ) }
    dend_20 { pt3dadd( -0.481605, -137.733, 75.1624, 0.55 ) }
    dend_20 { pt3dadd( -4.30269, -142.919, 85.9693, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.08998, -113.282, 47.1511, 0.55 ) }
    dend_19 { pt3dadd( 6.07678, -120.672, 54.0536, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 15.3965, -132.778, 9.60264, 0.55 ) }
    dend_27 { pt3dadd( 15.6339, -135.046, 10.1925, 0.55 ) }
    dend_27 { pt3dadd( 16.0274, -137.939, 10.9953, 0.55 ) }
    dend_27 { pt3dadd( 16.3963, -140.672, 11.7389, 0.55 ) }
    dend_27 { pt3dadd( 16.6309, -142.615, 12.245, 0.55 ) }
    dend_27 { pt3dadd( 17.001, -146.084, 13.1071, 0.55 ) }
    dend_27 { pt3dadd( 18.1225, -155.844, 15.2641, 0.55 ) }
    dend_27 { pt3dadd( 18.5451, -159.164, 15.8449, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 18.8244, -161.509, 16.143, 0.55 ) }
    dend_27 { pt3dadd( 19.1145, -164.194, 16.2789, 0.55 ) }
    dend_27 { pt3dadd( 19.264, -166.274, 16.2214, 0.55 ) }
    dend_27 { pt3dadd( 19.7008, -171.145, 15.8681, 0.55 ) }
    dend_27 { pt3dadd( 19.9122, -174.841, 15.6253, 0.55 ) }
    dend_27 { pt3dadd( 20.1278, -177.267, 15.5167, 0.55 ) }
    dend_27 { pt3dadd( 20.7411, -183.547, 15.5378, 0.55 ) }
    dend_27 { pt3dadd( 21.172, -187.764, 15.7314, 0.55 ) }
    dend_27 { pt3dadd( 21.8232, -193.192, 16.258, 0.55 ) }
    dend_27 { pt3dadd( 22.7475, -199.338, 17.2763, 0.55 ) }
    dend_27 { pt3dadd( 23.5962, -203.436, 18.1481, 0.55 ) }
    dend_27 { pt3dadd( 24.1675, -205.856, 18.7097, 0.55 ) }
    dend_27 { pt3dadd( 24.6542, -208.088, 19.2312, 0.55 ) }
    dend_27 { pt3dadd( 25.2834, -210.918, 19.7563, 0.55 ) }
    dend_27 { pt3dadd( 26.6154, -217.753, 20.612, 0.55 ) }
    dend_27 { pt3dadd( 27.1907, -220.401, 20.8306, 0.55 ) }
    dend_27 { pt3dadd( 27.7612, -223.351, 21.0723, 0.55 ) }
    dend_27 { pt3dadd( 28.5788, -227.78, 21.4227, 0.55 ) }
    dend_27 { pt3dadd( 29.0682, -231.182, 21.7602, 0.55 ) }
    dend_27 { pt3dadd( 29.3497, -234.414, 22.0868, 0.55 ) }
    dend_27 { pt3dadd( 29.491, -237.494, 22.4316, 0.55 ) }
    dend_27 { pt3dadd( 29.5916, -240.498, 22.8209, 0.55 ) }
    dend_27 { pt3dadd( 29.6702, -242.636, 23.0751, 0.55 ) }
    dend_27 { pt3dadd( 29.7905, -246.139, 23.3733, 0.55 ) }
    dend_27 { pt3dadd( 29.8051, -250.353, 23.4475, 0.55 ) }
    dend_27 { pt3dadd( 29.8254, -252.405, 23.3278, 0.55 ) }
    dend_27 { pt3dadd( 29.8296, -254.21, 23.0912, 0.55 ) }
    dend_27 { pt3dadd( 29.9351, -257.624, 22.4202, 0.55 ) }
    dend_27 { pt3dadd( 29.9677, -259.79, 21.9442, 0.55 ) }
    dend_27 { pt3dadd( 30.059, -262.456, 21.4438, 0.55 ) }
    dend_27 { pt3dadd( 30.0842, -264.327, 21.2142, 0.55 ) }
    dend_27 { pt3dadd( 30.1127, -269.184, 20.8149, 0.55 ) }
    dend_27 { pt3dadd( 30.1116, -272.813, 20.7793, 0.55 ) }
    dend_27 { pt3dadd( 30.1298, -278.416, 21.175, 0.55 ) }
    dend_27 { pt3dadd( 30.2935, -282.023, 21.73, 0.55 ) }
    dend_27 { pt3dadd( 30.4668, -285.807, 22.4348, 0.28 ) }
    dend_27 { pt3dadd( 30.5158, -287.325, 22.7856, 0.28 ) }
    dend_27 { pt3dadd( 30.6963, -291.001, 23.9551, 0.28 ) }
    dend_27 { pt3dadd( 30.8963, -294.388, 25.2964, 0.28 ) }
    dend_27 { pt3dadd( 31.6566, -298.857, 27.4068, 0.28 ) }
    dend_27 { pt3dadd( 34.004, -308.996, 29.4152, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 15.3965, -132.778, 9.60264, 0.55 ) }
    dend_26 { pt3dadd( 16.4594, -133.207, 10.2145, 0.55 ) }
    dend_26 { pt3dadd( 18.5853, -134.299, 11.6371, 0.55 ) }
    dend_26 { pt3dadd( 20.3904, -135.372, 12.9478, 0.28 ) }
    dend_26 { pt3dadd( 22.304, -136.592, 14.4169, 0.55 ) }
    dend_26 { pt3dadd( 23.3956, -137.366, 15.4729, 0.28 ) }
    dend_26 { pt3dadd( 25.2111, -138.757, 17.5056, 0.55 ) }
    dend_26 { pt3dadd( 25.8648, -139.489, 18.6154, 0.28 ) }
    dend_26 { pt3dadd( 26.0757, -139.752, 19.0774, 0.28 ) }
    dend_26 { pt3dadd( 26.4381, -140.126, 19.8825, 0.55 ) }
    dend_26 { pt3dadd( 27.9463, -141.349, 22.8383, 0.28 ) }
    dend_26 { pt3dadd( 28.61, -141.825, 24.0564, 0.55 ) }
    dend_26 { pt3dadd( 30.799, -143.213, 27.3944, 0.28 ) }
    dend_26 { pt3dadd( 32.0506, -143.897, 29.089, 0.28 ) }
    dend_26 { pt3dadd( 33.6721, -144.78, 31.081, 0.55 ) }
    dend_26 { pt3dadd( 36.217, -146.158, 33.7813, 0.28 ) }
    dend_26 { pt3dadd( 36.5828, -146.342, 34.1025, 0.55 ) }
    dend_26 { pt3dadd( 38.447, -147.24, 35.5463, 0.28 ) }
    dend_26 { pt3dadd( 38.6251, -147.324, 35.6571, 0.55 ) }
    dend_26 { pt3dadd( 40.1724, -148.317, 36.6879, 0.28 ) }
    dend_26 { pt3dadd( 40.8878, -148.857, 37.2268, 0.55 ) }
    dend_26 { pt3dadd( 46.7524, -152.855, 41.7115, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -4.30269, -142.919, 85.9693, 0.55 ) }
    dend_22 { pt3dadd( -5.3569, -146.148, 93.4438, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.30269, -142.919, 85.9693, 0.55 ) }
    dend_21 { pt3dadd( -7.1117, -149.394, 93.1055, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 15
    dend_48 nseg = 7
    dend_45 nseg = 7
    dend_42 nseg = 13
    dend_35 nseg = 3
    dend_31 nseg = 5
    dend_30 nseg = 9
    dend_12 nseg = 9
    dend_10 nseg = 5
    dend_3 nseg = 5
    dend_60 nseg = 7
    dend_59 nseg = 7
    dend_23 nseg = 3
    dend_18 nseg = 3
    dend_16 nseg = 9
    dend_15 nseg = 13
    dend_20 nseg = 3
    dend_27 nseg = 9
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_BP_d0cc8d7615_0_0


