// Cell: cADpyr231_L6_UTPC_186e8dd6aa_0_0
/*
{
  "id" : "cADpyr231_L6_UTPC_186e8dd6aa_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-6.12491, 4.54947, 0.014993, 2.64062", "-5.50711, 4.09677, 0.00563454, 4.44252", "-4.88931, 3.64407, -0.00372396, 5.94799", "-4.2715, 3.19136, -0.0130825, 7.13406", "-3.6537, 2.73866, -0.022441, 8.2655", "-3.03589, 2.28596, -0.0317995, 9.29453", "-2.41809, 1.83326, -0.041158, 10.3736", "-1.80029, 1.38056, -0.0505165, 11.0642", "-1.18248, 0.927855, -0.059875, 11.6512", "-0.56468, 0.475153, -0.0692335, 11.955", "0.0531242, 0.0224506, -0.078592, 12.1495", "0.670928, -0.430251, -0.0879505, 12.2302", "1.28873, -0.882953, -0.097309, 12.1321", "1.90654, -1.33566, -0.106668, 11.9546", "2.52434, -1.78836, -0.116026, 11.3256", "3.14214, -2.24106, -0.125385, 10.6359", "3.75995, -2.69376, -0.134743, 9.83304", "4.37775, -3.14646, -0.144102, 8.92143", "4.99555, -3.59917, -0.15346, 7.64149", "5.61336, -4.05187, -0.162819, 5.66644", "6.23116, -4.50457, -0.172177, 3.08284" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "-3.16351, 6.05747, -2.8038, 1.8", "-3.93195, 7.63489, -3.56572, 1.8", "-4.4309, 9.46747, -4.04731, 1.8", "-4.88729, 11.2624, -4.54873, 1.8", "-5.57958, 14.1348, -5.35637, 1.68", "-6.0895, 16.3649, -5.96724, 1.56", "-6.40662, 17.7928, -6.36468, 1.56", "-7.07345, 20.6924, -7.39614, 1.32", "-7.35606, 21.9311, -7.85834, 1.32", "-7.51288, 22.662, -8.12548, 1.56", "-7.70393, 23.8447, -8.46456, 1.56", "-7.96593, 26.2263, -9.09479, 1.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "2.08791, 1.2939, -6.53524, 0.24", "5.24368, 2.43757, -15.5288, 0.24", "3.99623, 3.87401, -16.9104, 0.12", "3.23926, 4.54443, -17.6378, 0.12", "2.64134, 4.99176, -18.164, 0.12", "2.49746, 5.07269, -18.2692, 0.12", "1.85935, 5.3711, -18.6767, 0.12", "1.70101, 5.4303, -18.7753, 0.12", "0.583835, 5.83781, -19.4066, 0.12", "0.480472, 5.8647, -19.4947, 0.12", "-0.370421, 6.06328, -20.3932, 0.12", "-0.618286, 6.14076, -20.6861, 0.12", "-1.99173, 6.67199, -22.5385, 0.12", "-2.09699, 6.72465, -22.6949, 0.12", "-3.53657, 7.54514, -24.7752, 0.12", "-3.63393, 7.60744, -24.8946, 0.12", "-4.3378, 8.01842, -25.6909, 0.12", "-4.58668, 8.14881, -25.9457, 0.12", "-7.06082, 9.22775, -28.1586, 0.12", "-8.41334, 9.77367, -29.3007, 0.12", "-10.7778, 10.5579, -31.1541, 0.12", "-12.6912, 11.0242, -32.643, 0.12", "-12.7998, 11.0376, -32.7277, 0.12", "-13.6646, 11.063, -33.3908, 0.12", "-13.8081, 11.0459, -33.5388, 0.12", "-14.9481, 10.8121, -35.1622, 0.12", "-15.0897, 10.7918, -35.4209, 0.12", "-15.7184, 10.8736, -36.7275, 0.12", "-15.8088, 10.9073, -36.9365, 0.12", "-17.5865, 11.9467, -41.3272, 0.12", "-17.6378, 11.9824, -41.4507, 0.12", "-18.2359, 12.4925, -42.8982, 0.12", "-18.2733, 12.5233, -42.9764, 0.12", "-19.8758, 13.7182, -45.6208, 0.12", "-20.0545, 13.8306, -45.8471, 0.12", "-20.8146, 14.1858, -46.5894, 0.12", "-20.9623, 14.2413, -46.7373, 0.12", "-22.2201, 14.604, -48.0922, 0.12", "-23.1065, 14.8489, -49.1038, 0.12", "-23.2205, 14.8977, -49.2396, 0.12", "-25.0457, 16.0664, -51.5656, 0.12", "-25.2296, 16.2194, -51.8178, 0.12", "-25.9282, 16.9178, -52.8145, 0.12", "-26.0164, 17.0257, -52.9515, 0.12", "-27.2363, 18.8251, -55.0748, 0.12", "-27.9672, 19.9546, -56.4233, 0.12", "-28.0477, 20.0866, -56.5745, 0.12", "-28.478, 20.7927, -57.4265, 0.12", "-28.5147, 20.8522, -57.5028, 0.12", "-29.5374, 22.5122, -59.7841, 0.12", "-30.6012, 24.1927, -62.4007, 0.12", "-30.6305, 24.2344, -62.4773, 0.12", "-31.2926, 25.0812, -64.1947, 0.12", "-31.3576, 25.1517, -64.3516, 0.12", "-32.3364, 26.0384, -66.5259, 0.12", "-32.3883, 26.0835, -66.646, 0.12", "-33.4519, 27.2606, -70.6406, 0.12", "-33.5222, 27.3522, -70.9898, 0.12", "-33.7119, 27.6322, -72.0519, 0.12", "-33.8213, 27.8159, -72.7245, 0.12", "-34.5105, 29.1698, -77.2697, 0.12", "-35.3891, 31.2037, -83.3061, 0.12", "-35.3988, 31.2311, -83.3811, 0.12", "-35.7571, 32.2315, -86.1417, 0.12", "-35.791, 32.3302, -86.4094, 0.12", "-36.2947, 33.6503, -89.9155, 0.12", "-36.3343, 33.7242, -90.1047, 0.12", "-37.8931, 36.1645, -95.6838, 0.12", "-37.9249, 36.2157, -95.8084, 0.12", "-38.2573, 36.7781, -97.2949, 0.12", "-38.3021, 36.8498, -97.4715, 0.12", "-38.826, 37.6185, -99.358, 0.12", "-38.8535, 37.6525, -99.4517, 0.12", "-40.0773, 38.9129, -103.255, 0.12", "-40.1245, 38.9578, -103.379, 0.12", "-40.8377, 39.6026, -105.289, 0.12", "-41.3395, 40.0657, -106.677, 0.12", "-42.8446, 41.5485, -110.786, 0.12", "-42.8934, 41.5962, -110.906, 0.12", "-44.3796, 43.0418, -114.067, 0.12", "-47.2724, 45.985, -120.04, 0.12", "-47.3262, 46.05, -120.15, 0.12", "-48.2188, 47.2792, -121.775, 0.12", "-48.4726, 47.6529, -122.211, 0.12", "-49.1731, 48.7337, -123.447, 0.12", "-49.2072, 48.7912, -123.51, 0.12", "-52.67, 54.8754, -128.688, 0.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "1.17376, 0.919378, -6.85126, 0.48", "4.12896, 2.3948, -20.071, 0.48", "4.00617, 2.48542, -20.0812, 0.48", "2.77926, 3.49161, -20.18, 0.48", "2.63996, 3.62469, -20.2551, 0.48", "1.6208, 4.65562, -21.0067, 0.36", "1.49332, 4.77407, -21.1352, 0.36", "0.390839, 5.78317, -22.5729, 0.36", "0.275843, 5.88447, -22.7256, 0.36", "-2.53363, 8.25145, -26.3938, 0.36", "-2.59036, 8.29677, -26.4649, 0.36", "-4.58661, 9.80637, -28.7564, 0.36", "-4.80061, 9.95495, -28.978, 0.36", "-6.3849, 10.8537, -30.5149, 0.36", "-7.42441, 11.3793, -31.3802, 0.36", "-7.54891, 11.433, -31.451, 0.36", "-9.06791, 12.0895, -32.2488, 0.36", "-9.15314, 12.1305, -32.2859, 0.36", "-11.5996, 13.1259, -34.3146, 0.36", "-11.733, 13.1705, -34.479, 0.36", "-12.3595, 13.3422, -35.501, 0.36", "-12.456, 13.3665, -35.6823, 0.36", "-13.1127, 13.5499, -37.0342, 0.36", "-15.5288, 14.368, -42.1875, 0.24", "-15.6595, 14.4281, -42.4707, 0.24", "-17.1455, 15.2136, -45.5647, 0.24", "-17.3509, 15.3298, -45.9861, 0.24", "-18.0594, 15.717, -47.2441, 0.24", "-18.2033, 15.7943, -47.4523, 0.24", "-19.3946, 16.5111, -48.3786, 0.24", "-20.3939, 17.0611, -48.9924, 0.24", "-20.5653, 17.1318, -49.1038, 0.24", "-21.6489, 17.4082, -50.0294, 0.24", "-21.7608, 17.4247, -50.1741, 0.24", "-22.596, 17.5248, -51.5136, 0.24", "-22.6703, 17.5296, -51.6472, 0.24", "-24.5608, 17.6187, -55.0084, 0.24", "-24.6709, 17.6247, -55.1945, 0.24", "-26.2385, 17.7329, -57.7955, 0.24", "-26.449, 17.7524, -58.111, 0.24", "-27.1182, 17.8397, -58.9968, 0.24", "-28.1333, 17.9987, -60.0974, 0.24", "-28.5911, 18.0961, -60.3891, 0.24", "-28.7236, 18.1272, -60.4589, 0.24", "-30.8663, 18.6718, -61.3431, 0.24", "-31.0026, 18.7147, -61.4019, 0.24", "-32.0567, 19.1241, -61.8937, 0.24", "-33.8587, 19.8891, -62.7165, 0.24", "-35.5976, 20.6096, -63.4448, 0.24", "-35.9127, 20.721, -63.557, 0.24", "-37.1208, 21.0813, -63.8893, 0.24", "-37.26, 21.1222, -63.9377, 0.24", "-38.0959, 21.366, -64.3228, 0.24", "-38.2761, 21.4209, -64.4292, 0.24", "-39.2813, 21.8089, -64.9741, 0.24", "-39.5173, 21.9149, -65.1195, 0.24", "-40.5426, 22.4625, -65.9, 0.24", "-40.7125, 22.5923, -66.1058, 0.24", "-40.9607, 22.8289, -66.5102, 0.24", "-41.0547, 22.9274, -66.6778, 0.24", "-41.4348, 23.377, -67.4501, 0.24", "-41.475, 23.4211, -67.5324, 0.24", "-42.8682, 24.7692, -70.4144, 0.24", "-43.075, 24.9706, -70.863, 0.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "2.78247, 0.533684, -6.31588, 1.2", "6.27388, 0.860451, -13.4048, 1.2", "9.58837, 0.17401, -15.0714, 1.2", "10.8293, -0.306135, -15.601, 0.96", "11.7023, -0.683831, -15.9318, 0.96", "13.6007, -1.50511, -16.6511, 0.96", "14.6501, -2.07056, -17.0482, 0.96", "15.7727, -2.83969, -17.4244, 0.96", "17.1405, -4.04698, -17.729, 0.84", "17.6701, -4.59778, -17.8557, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-0.724841, -2.10836, 6.64197, 1.32", "-0.892595, -3.08269, 9.40591, 1.32", "-0.400016, -3.26449, 10.6328, 0.84", "0.218327, -3.46252, 12.1281, 0.84", "1.80087, -3.83403, 16.3817, 0.84", "2.54081, -4.06341, 18.6212, 1.56", "6.06483, -5.2809, 29.4618, 1.56", "7.0232, -5.51572, 32.3533, 1.32", "7.52047, -5.59289, 33.8843, 1.08", "10.2202, -5.63513, 45.031, 1.08", "11.1872, -5.60805, 49.51, 0.72", "11.4706, -5.59693, 51.0795, 0.72", "11.9351, -5.57681, 54.1931, 0.72", "12.1026, -5.54122, 55.7389, 0.72", "13.2888, -4.71858, 72.7216, 0.72", "14.6113, -5.45088, 84.9785, 0.72", "15.5195, -4.19974, 97.2311, 0.72", "15.314, -4.41279, 109.577, 0.72", "14.9432, -5.56066, 121.868, 0.72", "14.5826, -4.44253, 134.162, 0.72", "16.5956, -1.72235, 146.039, 0.72" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.28125, -0.221663, 2.41274, 1.2", "7.02608, -0.273929, 2.68397, 1.2", "8.8475, -0.828492, 2.95118, 0.96", "10.6329, -1.37209, 3.21311, 0.96", "12.4939, -1.93869, 3.48613, 0.84", "13.3947, -2.21298, 3.61829, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-4.24164, -3.93241, 4.12888, 0.84", "-4.6899, -4.4109, 4.60154, 0.84", "-5.13704, -5.7035, 5.44413, 0.72", "-5.94348, -7.55266, 6.65738, 0.72", "-6.31089, -8.27794, 7.13942, 0.72", "-7.02774, -9.55623, 8.0148, 0.72", "-7.60426, -10.4546, 8.71268, 0.6", "-8.12863, -11.0839, 9.30392, 0.6", "-8.6507, -11.5024, 9.79384, 0.6", "-9.21655, -11.851, 10.215, 0.6", "-9.5519, -12.0386, 10.4493, 0.6", "-10.786, -12.7509, 11.1995, 0.6", "-11.3686, -13.1092, 11.5814, 0.6", "-11.846, -13.4235, 11.8905, 0.6", "-12.6793, -13.9935, 12.3954, 0.6", "-13.247, -14.4411, 12.6756, 0.6", "-14.0077, -15.2235, 12.9207, 0.6" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.74899, -4.85459, -3.46875, 0.84", "-4.02003, -5.25872, -3.74418, 0.84", "-4.39331, -7.52574, -3.76608, 0.84", "-4.68525, -9.29879, -3.78322, 0.84", "-5.14675, -12.1016, -3.8103, 0.84", "-5.57986, -14.732, -3.83572, 0.84", "-5.93248, -16.8736, -3.85641, 0.84", "-6.22656, -19.6726, -3.88534, 0.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.15603, -6.26023, -1.11895, 1.68", "1.67981, -5.01494, -0.903701, 1.68", "0.592066, -6.48236, 0.837293, 1.32", "-0.0740458, -7.38098, 1.90345, 1.68", "-2.18433, -10.2279, 5.2811, 2.76", "-3.40484, -11.8744, 7.23459, 1.44", "-4.74742, -13.6856, 9.38349, 1.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999347301206
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "6.23116, -4.50457, -0.172177, 0.605332", "18.3305, -13.3705, -0.172177, 0.605332", "30.4299, -22.2365, -0.172177, 0.605332" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-7.96593, 26.2263, -9.09479, 1.56", "-8.43507, 27.6506, -9.61558, 1.32", "-9.41097, 30.0826, -10.3694, 1.2", "-10.2851, 32.048, -10.8984, 1.2", "-10.8913, 33.3175, -11.2025, 1.2", "-11.6475, 34.9012, -11.5819, 0.96", "-12.6024, 36.9011, -12.061, 0.96", "-13.3153, 38.29, -12.3372, 0.96", "-13.9792, 39.3926, -12.4401, 0.96", "-14.6237, 40.3009, -12.5118, 1.8" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-7.96593, 26.2263, -9.09479, 1.56", "-6.38798, 29.0407, -8.80305, 0.24", "-5.93485, 30.078, -8.57406, 0.24", "-5.29551, 31.865, -8.11585, 0.24", "-4.18486, 35.0447, -7.28704, 0.24", "-3.60387, 36.6161, -6.87554, 0.24", "-2.79558, 38.5832, -6.36762, 0.24", "-1.52296, 41.4571, -5.39699, 0.24", "-0.792121, 42.8265, -4.96274, 0.24", "-0.137858, 43.803, -4.72709, 0.24", "0.539833, 44.5634, -4.68006, 0.24", "1.57136, 45.503, -4.71721, 0.24", "2.19289, 45.9778, -4.78214, 0.24", "4.49712, 47.4922, -5.09531, 0.24", "6.85022, 48.9222, -5.25037, 0.24", "8.61223, 50.0549, -5.24455, 0.24", "10.8746, 51.574, -5.09138, 0.24", "12.4298, 52.6505, -4.8975, 0.24", "13.4959, 53.3992, -4.68854, 0.24", "16.3662, 55.3737, -3.84878, 0.24", "17.9245, 56.3869, -3.251, 0.24", "19.6445, 57.5037, -2.4591, 0.24", "20.8294, 58.2693, -1.85757, 0.24", "22.3039, 59.2681, -1.08184, 0.24", "24.155, 60.5674, -0.0799645, 0.24", "25.7006, 61.5663, 0.735792, 0.24", "27.1473, 62.37, 1.49715, 0.24", "28.6537, 63.2012, 2.23361, 0.24", "30.2252, 64.0676, 2.88839, 0.24", "31.2797, 64.6741, 3.24372, 0.24", "32.7247, 65.6517, 3.55996, 0.24", "34.1697, 66.7776, 3.75951, 0.24", "36.1072, 68.5204, 3.80303, 0.24", "37.2732, 69.7529, 3.73577, 0.24", "38.8348, 71.4535, 3.62698, 0.24", "42.1256, 75.053, 3.4032, 0.24", "43.9481, 77.1015, 3.31292, 0.24", "46.1782, 79.4457, 3.37527, 0.24", "47.1095, 80.3113, 3.45833, 0.24", "49.8048, 82.5702, 3.74802, 0.24", "51.5979, 83.8599, 4.02084, 0.24", "52.7436, 84.5497, 4.37459, 0.24", "55.3705, 86.0388, 5.42984, 0.24", "57.1241, 87.0525, 6.21698, 0.24", "58.6687, 88.0461, 6.83189, 0.24", "60.3813, 89.3198, 7.35759, 0.24", "63.3809, 91.5577, 7.95414, 0.24", "64.8824, 92.6518, 8.05097, 0.24", "67.4739, 94.61, 7.67111, 0.12", "69.5624, 96.1572, 7.0593, 0.24", "71.1188, 97.2305, 6.33676, 0.24", "72.9694, 98.3372, 5.20064, 0.24", "75.0275, 99.2804, 3.74589, 0.24", "77.2911, 100.072, 1.6967, 0.24", "77.9074, 100.285, 0.944446, 0.24", "78.46, 100.487, 0.14863, 0.24", "79.2008, 100.883, -1.16094, 0.24", "79.8663, 101.443, -2.61591, 0.24", "81.9565, 104.003, -7.98466, 0.24", "82.8106, 105.206, -10.373, 0.24", "83.3915, 106.201, -12.2602, 0.24", "83.977, 107.501, -14.5197, 0.24", "84.2996, 108.492, -16.0286, 0.24", "84.6384, 109.867, -17.7759, 0.12", "86.5016, 117.679, -26.1892, 0.12", "89.7407, 122.828, -36.102, 0.12", "93.3584, 128.108, -45.8133, 0.12", "96.288, 131.857, -56.4261, 0.12", "99.7123, 133.58, -67.4068, 0.12", "103.682, 136.131, -78.037, 0.12" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "17.6701, -4.59778, -17.8557, 0.84", "19.0447, -4.99443, -17.9281, 0.48", "20.4371, -5.37531, -17.9963, 0.48", "22.1105, -5.75841, -18.0679, 0.48", "23.5078, -6.04899, -18.1211, 0.48", "25.5854, -6.48105, -18.2001, 0.36", "26.4706, -6.66515, -18.2338, 0.36", "28.302, -7.04817, -18.2959, 0.36", "30.1539, -7.39577, -18.3626, 0.36", "31.2724, -7.62135, -18.4035, 0.36" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "17.6701, -4.59778, -17.8557, 0.84", "18.8303, -5.66852, -23.337, 0.36", "19.3111, -6.12073, -25.3396, 0.36", "20.4282, -7.23998, -29.4024, 0.24", "20.7702, -7.67944, -30.5661, 0.36", "21.2297, -8.4435, -32.307, 0.36", "21.3887, -8.74136, -32.9399, 0.36", "22.3343, -10.4708, -36.1136, 0.36", "22.727, -11.2511, -37.4103, 0.36", "23.7634, -13.802, -41.2357, 0.36", "24.4344, -15.6169, -43.9335, 0.36", "24.8146, -16.7149, -45.4599, 0.24", "25.3997, -18.2628, -47.6476, 0.12", "25.6145, -18.6611, -48.2745, 0.12", "25.8869, -19.0747, -49.0241, 0.12", "26.8813, -20.0333, -51.323, 0.12", "27.2185, -20.2833, -52.1254, 0.12", "27.6943, -20.6035, -53.3001, 0.12", "28.9954, -21.3897, -56.7297, 0.12", "29.8386, -21.8225, -58.9781, 0.12", "31.0158, -22.3406, -62.2047, 0.12", "32.2439, -22.8661, -66.0204, 0.12" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "13.3947, -2.21298, 3.61829, 0.84", "14.5967, -1.31543, 3.68524, 0.36", "15.4629, -0.781892, 3.60453, 0.36", "16.2531, -0.39148, 3.48685, 0.36", "18.2264, 0.353371, 3.15595, 0.36", "20.9005, 1.17992, 2.70337, 0.36", "21.9158, 1.47512, 2.54258, 0.36", "22.8064, 1.69475, 2.34168, 0.36", "23.5777, 1.83217, 2.19034, 0.36", "24.466, 1.95242, 2.04838, 0.36", "25.0663, 2.03689, 1.98026, 0.36", "26.1258, 2.25042, 1.99491, 0.36", "26.9319, 2.55595, 2.02731, 0.36", "28.5712, 3.40397, 2.08615, 0.36", "29.3339, 3.85846, 2.11008, 0.36", "30.5014, 4.59366, 2.14289, 0.36", "31.4851, 5.20013, 2.1677, 0.36", "34.1511, 6.7615, 2.22469, 0.36", "34.6737, 7.06355, 2.23485, 0.36", "35.1805, 7.36091, 2.27097, 0.36", "36.0084, 7.83944, 2.3851, 0.36", "37.5148, 8.65394, 2.75462, 0.36", "38.0391, 8.92469, 2.93692, 0.36", "39.3119, 9.70124, 3.40897, 0.36", "40.2841, 10.3963, 3.82791, 0.36", "40.7821, 10.8153, 4.07062, 0.36", "41.4607, 11.482, 4.44026, 0.36", "42.1112, 12.1779, 4.81909, 0.36", "42.6893, 12.8043, 5.1467, 0.36", "43.5835, 13.7187, 5.70067, 0.36", "44.2695, 14.3777, 6.16386, 0.36", "45.2415, 15.2618, 6.82753, 0.36", "45.7414, 15.7026, 7.16464, 0.36", "46.9089, 16.7235, 7.91244, 0.36", "48.5014, 18.1439, 8.84941, 0.36", "49.4054, 18.9142, 9.35987, 0.36", "50.2858, 19.5755, 9.84999, 0.36", "51.0112, 20.0589, 10.2427, 0.36", "51.8797, 20.6135, 10.6933, 0.36", "52.6629, 21.1059, 11.0717, 0.36", "54.1541, 22.0148, 11.7079, 0.36", "55.1811, 22.566, 12.0762, 0.36", "55.6434, 22.8005, 12.2082, 0.36", "57.1573, 23.5138, 12.5164, 0.36", "58.4544, 24.0841, 12.7887, 0.36", "60.0058, 24.7709, 13.1205, 0.36", "61.8371, 25.6673, 13.49, 0.36", "63.1884, 26.3859, 13.7879, 0.36", "64.9294, 27.3164, 14.1903, 0.36", "67.4728, 28.6233, 14.7916, 0.36", "68.4077, 29.0864, 15.0158, 0.36", "69.4939, 29.6214, 15.2815, 0.36", "70.7474, 30.2405, 15.6366, 0.36", "72.5303, 31.1044, 16.13, 0.36", "73.8804, 31.7849, 16.5197, 0.36", "74.8803, 32.3011, 16.7829, 0.36", "75.8457, 32.7883, 17.0657, 0.36", "77.1686, 33.4077, 17.4867, 0.36", "78.2028, 33.8656, 17.944, 0.36", "79.575, 34.5018, 18.7607, 0.36", "80.0766, 34.7462, 19.1348, 0.36", "80.9986, 35.2258, 19.9379, 0.36", "81.8204, 35.6823, 20.7529, 0.36", "83.7052, 36.8395, 22.785, 0.36", "84.54, 37.3981, 23.6813, 0.36", "85.618, 38.1422, 24.7128, 0.36", "86.2972, 38.6325, 25.2919, 0.36", "87.0173, 39.1816, 25.8135, 0.36", "88.0319, 39.962, 26.367, 0.36", "89.5077, 41.0394, 26.8704, 0.36", "91.3936, 42.2974, 27.3149, 0.36", "92.5898, 43.0682, 27.5618, 0.36", "93.8103, 43.8069, 27.7745, 0.36", "95.2933, 44.6584, 27.9936, 0.36", "96.3646, 45.2616, 28.1403, 0.36", "97.8166, 46.1388, 28.3769, 0.36", "99.111, 47.0259, 28.6398, 0.36" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "13.3947, -2.21298, 3.61829, 0.84", "13.986, -2.42312, 6.48207, 0.84" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-14.0077, -15.2235, 12.9207, 0.6", "-15.5885, -16.9165, 13.2323, 0.48", "-17.1761, -18.3459, 13.5926, 0.48", "-18.4215, -19.3139, 13.8992, 0.48", "-20.0573, -20.6494, 14.3809, 0.48", "-21.3734, -21.8315, 14.8344, 0.48", "-22.992, -23.3058, 15.456, 0.48", "-23.999, -24.1661, 15.8658, 0.48", "-25.4317, -25.3621, 16.5352, 0.48", "-27.3283, -26.9923, 17.6487, 0.48", "-28.6533, -28.1619, 18.5469, 0.48", "-29.4582, -28.8941, 19.123, 0.48", "-30.6058, -29.9407, 19.9253, 0.48", "-31.2382, -30.5143, 20.3772, 0.48", "-33.0179, -32.0456, 21.6633, 0.48", "-34.3979, -33.0936, 22.6861, 0.48", "-35.1651, -33.6704, 23.3211, 0.48", "-35.8122, -34.1945, 23.8751, 0.48", "-37.402, -35.5365, 25.2745, 0.48", "-38.2635, -36.3562, 26.0769, 0.48", "-39.4073, -37.6185, 27.2174, 0.48", "-40.4529, -38.9265, 28.3548, 0.48", "-41.6851, -40.4347, 29.607, 0.48", "-42.017, -40.823, 29.9025, 0.48", "-43.0274, -41.8347, 30.6143, 0.48", "-44.403, -43.1028, 31.4645, 0.48", "-45.7495, -44.2598, 32.1546, 0.48", "-47.6949, -45.868, 33.0491, 0.48", "-49.0212, -46.9004, 33.6663, 0.48", "-50.4866, -47.9417, 34.3025, 0.48", "-51.2027, -48.3849, 34.5717, 0.48", "-52.4914, -49.1207, 34.9786, 0.48", "-53.6778, -49.7241, 35.3403, 0.48", "-61.701, -56.8301, 40.478, 0.48", "-69.1784, -65.5724, 43.4649, 0.48", "-78.1574, -73.2908, 44.4973, 0.48", "-86.2433, -81.8206, 46.2644, 0.48", "-95.6322, -88.4197, 49.357, 0.48", "-105.806, -94.145, 51.5889, 0.48", "-115.458, -100.985, 52.7405, 0.48", "-126.063, -106.297, 51.9762, 0.48", "-137.428, -109.709, 52.6435, 0.48", "-149.004, -112.093, 51.3917, 0.48", "-160.228, -115.918, 52.2055, 0.48", "-171.575, -119.149, 53.6449, 0.48", "-182.523, -122.746, 56.5545, 0.48", "-192.256, -127.879, 61.0477, 0.48", "-201.034, -133.95, 66.2766, 0.48", "-209.313, -138.47, 73.508, 0.48", "-217.146, -142.693, 81.3869, 0.48", "-224.7, -146.409, 89.7762, 0.48", "-233.357, -148.48, 97.6523, 0.48", "-241.876, -151.504, 105.369, 0.48", "-249.144, -155.852, 113.708, 0.48", "-258.71, -158.271, 120.334, 0.48", "-268.736, -161.993, 125.519, 0.48", "-277.564, -167.412, 131.346, 0.48", "-284.97, -174.995, 136.723, 0.48", "-293.046, -182.05, 141.848, 0.48", "-300.89, -187.86, 148.629, 0.48" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-14.0077, -15.2235, 12.9207, 0.6", "-15.5204, -14.8503, 13.903, 0.6", "-16.3877, -14.5859, 14.5094, 0.6", "-17.5941, -14.2581, 15.3082, 0.6", "-18.6095, -14.0195, 15.9463, 0.48", "-21.2826, -13.3985, 17.5067, 0.48", "-21.6655, -13.3046, 17.7043, 0.48", "-22.6304, -13.0657, 18.17, 0.48", "-23.6815, -12.8476, 18.5809, 0.48", "-24.2115, -12.7725, 18.7259, 0.48", "-25.0589, -12.6842, 18.972, 0.48", "-26.5471, -12.5695, 19.3593, 0.48", "-27.9909, -12.4631, 19.799, 0.48", "-28.9877, -12.3977, 20.1257, 0.48", "-29.8273, -12.3597, 20.4089, 0.48", "-33.043, -12.4315, 21.7447, 0.48", "-34.4123, -12.6427, 22.5252, 0.48", "-35.4612, -12.9901, 23.3164, 0.48", "-36.4273, -13.5769, 24.3695, 0.48", "-36.8792, -14.0117, 25.0903, 0.48", "-37.9486, -15.4647, 27.276, 0.48", "-38.8684, -17.1079, 29.4768, 0.48", "-39.2822, -17.8466, 30.4818, 0.48", "-40.2, -19.3085, 32.4937, 0.48", "-41.3321, -20.6879, 34.5046, 0.48", "-41.9139, -21.1729, 35.2321, 0.48", "-42.8212, -21.6808, 35.9526, 0.48", "-44.5055, -22.3486, 36.8443, 0.48", "-46.0488, -22.8883, 37.4625, 0.48", "-47.8154, -23.4898, 37.9762, 0.48", "-49.0957, -23.9302, 38.2828, 0.48", "-50.2481, -24.3431, 38.5734, 0.48", "-53.032, -25.4418, 39.3207, 0.48", "-54.8995, -26.2849, 39.8437, 0.48", "-55.7265, -26.6999, 40.0816, 0.48", "-64.3754, -28.2539, 45.1783, 0.48", "-73.2721, -30.9963, 49.2431, 0.48", "-82.2714, -34.6424, 52.2285, 0.48", "-91.8785, -37.6492, 53.5911, 0.48", "-101.544, -40.7767, 53.5543, 0.48", "-110.943, -44.5814, 52.9412, 0.48", "-120.381, -47.5983, 50.7019, 0.48", "-130.312, -49.0762, 49.16, 0.48", "-139.893, -51.2654, 46.5899, 0.48", "-148.824, -54.0921, 42.6599, 0.48", "-157.435, -57.2648, 38.3026, 0.48", "-164.776, -61.8564, 32.9904, 0.48", "-173.027, -64.2102, 27.5523, 0.48", "-180.59, -65.8057, 20.9602, 0.48", "-189.434, -65.2932, 15.9887, 0.48", "-198.698, -66.0427, 11.8883, 0.48", "-208.282, -67.0707, 8.68138, 0.48", "-217.275, -68.4837, 4.1749, 0.48", "-226.331, -68.988, -0.400907, 0.48", "-235.449, -69.3176, -4.86796, 0.48", "-244.424, -69.8616, -9.594, 0.48", "-253.742, -71.6444, -13.2256, 0.48", "-262.917, -72.5759, -17.4865, 0.48", "-271.807, -73.7605, -22.257, 0.48", "-281.58, -73.5293, -25.0187, 0.48", "-290.935, -74.1193, -28.9342, 0.48", "-300.555, -73.2449, -32.0772, 0.48", "-310.147, -73.8462, -35.3694, 0.48", "-319.086, -72.6295, -40.038, 0.48", "-328.202, -72.6817, -44.5208, 0.48" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-6.22656, -19.6726, -3.88534, 0.84", "-7.12289, -20.1521, -2.75311, 0.72", "-7.82176, -20.4819, -1.92356, 0.48", "-9.13248, -21.0089, -0.502412, 0.48", "-9.76211, -21.247, 0.140782, 0.48", "-11.1225, -21.768, 1.44381, 0.48", "-12.0686, -22.1401, 2.31218, 0.48", "-12.6869, -22.3511, 2.86181, 0.36", "-13.3285, -22.5452, 3.40441, 0.36", "-13.9038, -22.7214, 3.70186, 0.36", "-15.0529, -23.0425, 3.74696, 0.36", "-15.5063, -23.1776, 3.58486, 0.36", "-16.9293, -23.6871, 2.83848, 0.36", "-17.7616, -23.9688, 2.32005, 0.36", "-22.3482, -25.2551, -0.676534, 0.36", "-23.2521, -25.4787, -1.27373, 0.36", "-24.2749, -25.7206, -1.95532, 0.36", "-25.173, -25.9402, -2.54, 0.36", "-27.1331, -26.3918, -3.73165, 0.36", "-28.3079, -26.6619, -4.26, 0.36", "-29.4686, -26.928, -4.54674, 0.36", "-30.5819, -27.1563, -4.90331, 0.36", "-31.472, -27.3113, -5.24742, 0.36", "-33.0187, -27.5963, -5.9188, 0.36", "-34.293, -27.8966, -6.49384, 0.36", "-35.3236, -28.1357, -6.96638, 0.36", "-37.8174, -28.5451, -8.0329, 0.36", "-39.0279, -28.7266, -8.51125, 0.36", "-39.6171, -28.8254, -8.75321, 0.36", "-41.2816, -29.1349, -9.4711, 0.36", "-42.3595, -29.2947, -9.92777, 0.36", "-43.9642, -29.4778, -10.5118, 0.36", "-45.0718, -29.6243, -10.8055, 0.36", "-46.849, -29.7959, -11.2173, 0.36", "-47.9337, -29.8415, -11.5396, 0.36", "-48.8786, -29.8689, -11.872, 0.36", "-50.0878, -29.9314, -12.3171, 0.36", "-51.9195, -30.0636, -12.9857, 0.36", "-53.1486, -30.0957, -13.4195, 0.36", "-55.4383, -30.0597, -14.1427, 0.36", "-56.299, -30.0232, -14.4463, 0.36", "-57.5415, -29.9862, -14.9381, 0.36", "-58.6162, -29.9361, -15.3946, 0.36", "-59.996, -29.8919, -16.2223, 0.36", "-61.2004, -29.9863, -17.0692, 0.36", "-62.1098, -30.1694, -17.8022, 0.36", "-63.0336, -30.4755, -18.7165, 0.36", "-63.4866, -30.7427, -19.2567, 0.36", "-65.4491, -32.5747, -22.0194, 0.36", "-66.2247, -33.5387, -23.2539, 0.36", "-66.8273, -34.3998, -24.2456, 0.36", "-67.318, -35.1238, -24.9976, 0.36", "-67.9851, -36.0918, -25.9342, 0.36", "-68.8198, -37.2596, -26.9547, 0.36", "-70.1222, -38.969, -28.1432, 0.36", "-70.9402, -40.0929, -28.8566, 0.36", "-71.965, -41.5851, -29.7242, 0.36", "-72.7886, -42.8478, -30.3631, 0.36", "-73.0695, -43.279, -30.5574, 0.36", "-73.9843, -44.7778, -31.0432, 0.36", "-74.6508, -45.874, -31.2857, 0.36", "-75.8154, -47.6458, -31.6124, 0.36", "-76.4899, -48.5244, -31.7544, 0.36", "-78.3157, -50.4423, -32.2891, 0.36", "-79.0629, -51.0866, -32.5562, 0.36", "-80.488, -52.0789, -33.1129, 0.36", "-81.8022, -52.8487, -33.5756, 0.24", "-82.792, -53.3341, -33.9236, 0.24", "-85.0276, -54.3613, -34.9005, 0.12", "-85.3478, -54.5103, -35.0554, 0.12", "-86.3206, -54.9735, -35.5569, 0.12", "-86.9431, -55.306, -35.8894, 0.12", "-88.4079, -56.2417, -36.6341, 0.12", "-89.3616, -56.9502, -37.0644, 0.12", "-90.547, -57.8677, -37.4683, 0.12", "-91.9225, -58.9099, -37.8909, 0.12", "-93.0532, -59.7722, -38.1928, 0.12", "-94.0066, -60.509, -38.3882, 0.12", "-94.6701, -61.0549, -38.461, 0.12", "-95.7679, -61.9017, -38.5225, 0.12", "-96.6819, -62.5682, -38.5592, 0.12", "-97.6355, -63.1983, -38.6108, 0.12", "-98.5473, -63.7171, -38.6681, 0.12", "-100.839, -64.8953, -38.8553, 0.12", "-102.499, -65.7036, -39.0479, 0.12", "-103.909, -66.3651, -39.3084, 0.12", "-105.268, -66.9625, -39.63, 0.12", "-106.234, -67.347, -39.9096, 0.12", "-106.522, -67.4566, -40.0005, 0.12", "-108.228, -68.0913, -40.5332, 0.12", "-109.622, -68.7423, -40.9046, 0.12", "-110.251, -69.0827, -40.9996, 0.12", "-111.573, -69.9102, -41.1211, 0.12", "-112.329, -70.4614, -41.106, 0.12", "-113.33, -71.2663, -40.9494, 0.12", "-114.375, -72.1853, -40.6113, 0.12", "-115.598, -73.425, -39.9677, 0.12", "-116.421, -74.4073, -39.4239, 0.12", "-117.689, -76.1297, -38.4561, 0.12", "-118.465, -77.2645, -37.8583, 0.12", "-118.96, -78.0384, -37.4688, 0.12", "-120.014, -79.738, -36.6493, 0.12", "-120.747, -81.0026, -36.1213, 0.12", "-121.296, -81.9268, -35.8126, 0.12", "-121.933, -82.9112, -35.5931, 0.12", "-122.67, -83.9604, -35.4302, 0.12", "-123.885, -85.4766, -35.2706, 0.12", "-125.11, -86.7851, -35.1905, 0.12", "-126.494, -88.1533, -35.1015, 0.12", "-127.354, -88.9724, -35.0458, 0.12", "-128.287, -89.8024, -34.9843, 0.12", "-129.149, -90.5066, -34.9254, 0.12", "-130.131, -91.2266, -34.8536, 0.12", "-130.885, -91.6635, -34.7896, 0.12" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-6.22656, -19.6726, -3.88534, 0.84", "-5.34175, -22.7059, -3.97031, 0.24", "-4.86894, -24.2247, -3.91176, 0.24", "-4.36902, -25.8577, -3.91412, 0.24", "-3.57666, -28.7059, -3.98094, 0.24", "-2.86574, -31.7317, -4.08251, 0.24", "-2.60718, -33.1806, -4.13388, 0.24", "-2.24335, -35.7424, -4.21698, 0.24", "-1.9658, -38.0672, -4.35839, 0.24", "-1.78783, -40.1404, -4.53959, 0.24", "-1.60178, -42.3644, -4.80795, 0.24", "-1.28371, -45.133, -5.08761, 0.24", "-1.10984, -46.4959, -5.28115, 0.24", "-0.920875, -48.0505, -5.55085, 0.24", "-0.594221, -50.6346, -5.93789, 0.24", "-0.270716, -53.0203, -6.30851, 0.24", "-0.144891, -54.0398, -6.47171, 0.24", "0.18555, -56.9187, -7.03842, 0.24", "0.345771, -58.9992, -7.46597, 0.24", "0.45764, -61.5574, -8.02077, 0.24", "0.504798, -63.3804, -8.41466, 0.24", "0.548333, -66.2815, -9.00689, 0.24", "0.707188, -69.1984, -9.68411, 0.24", "0.933828, -71.0895, -10.1765, 0.24", "1.16219, -72.4617, -10.6063, 0.24", "1.48739, -73.9335, -11.2242, 0.24", "1.82595, -75.0586, -11.7843, 0.24", "2.65652, -77.0679, -13.2008, 0.24", "2.9252, -77.648, -13.6907, 0.24", "3.29083, -78.3337, -14.4033, 0.24", "4.40977, -80.5225, -16.7949, 0.24", "4.92628, -81.7345, -18.0959, 0.24", "5.95453, -84.5409, -20.9636, 0.24", "6.364, -85.8057, -22.1318, 0.24", "7.26815, -88.7921, -24.6473, 0.24", "7.62694, -90.2209, -25.8251, 0.24", "7.90628, -91.722, -26.9321, 0.24", "8.27218, -94.6623, -28.8645, 0.24", "8.48546, -96.4316, -29.825, 0.24", "8.72619, -98.2496, -30.8148, 0.24", "9.25842, -101.256, -32.4548, 0.24", "9.5558, -102.62, -33.3086, 0.24", "9.78681, -103.457, -33.8889, 0.24", "10.4766, -105.822, -35.5074, 0.24", "11.4426, -108.917, -37.6672, 0.12", "12.1536, -111.069, -39.2466, 0.12", "13.0445, -113.794, -41.2032, 0.12", "13.6761, -115.734, -42.709, 0.12", "14.0911, -117.06, -43.724, 0.12", "14.4928, -118.439, -44.7375, 0.12", "15.3597, -121.133, -46.642, 0.12", "15.7076, -122.2, -47.3712, 0.12", "16.7043, -124.924, -49.2389, 0.12", "17.3186, -126.675, -50.4513, 0.12", "18.6525, -130.493, -53.0479, 0.12", "19.3743, -132.478, -54.2935, 0.12", "19.7306, -133.466, -54.875, 0.12", "20.8636, -136.71, -56.7249, 0.12", "21.5076, -138.704, -57.7291, 0.12", "22.1061, -140.685, -58.6476, 0.12", "22.5085, -142.115, -59.1991, 0.12", "23.3537, -145.292, -60.2253, 0.12", "23.6366, -146.405, -60.521, 0.12", "24.1256, -148.519, -61.0686, 0.12", "24.6331, -150.895, -61.769, 0.12", "25.0581, -153.248, -62.5988, 0.12", "25.4574, -155.66, -63.5401, 0.12", "25.8172, -157.698, -64.393, 0.12", "26.3961, -161.066, -65.9509, 0.12", "26.6798, -162.912, -66.87, 0.12", "27.0488, -165.106, -67.953, 0.12", "27.3109, -166.734, -68.7376, 0.12", "27.5092, -167.831, -69.2424, 0.12", "27.8754, -169.394, -69.8814, 0.12", "28.2307, -170.61, -70.255, 0.12", "28.6294, -171.888, -70.6666, 0.12", "29.1003, -173.467, -71.1976, 0.12", "29.387, -174.631, -71.6452, 0.12", "29.6544, -176.023, -72.2337, 0.12", "29.8554, -177.324, -72.8331, 0.12", "30.1433, -179.831, -74.2295, 0.12", "30.2031, -180.978, -75.0017, 0.12", "30.2538, -182.173, -75.939, 0.12", "30.2561, -183.359, -76.9214, 0.12", "30.2137, -184.39, -77.7797, 0.12", "30.078, -186.937, -79.8681, 0.12", "30.0453, -189.008, -81.6123, 0.12", "30.0614, -190.686, -83.049, 0.12", "30.1273, -191.731, -83.9129, 0.12", "30.2025, -192.366, -84.3971, 0.12", "30.3688, -193.471, -85.1245, 0.12", "30.7128, -195.737, -86.2381, 0.12", "30.8899, -196.95, -86.7944, 0.12", "31.0709, -198.457, -87.5885, 0.12", "31.2313, -199.818, -88.3986, 0.12", "31.3027, -200.438, -88.8065, 0.12", "31.3907, -201.235, -89.363, 0.12", "31.6394, -203.931, -91.2041, 0.12", "31.8495, -205.867, -92.6044, 0.12", "31.9374, -206.496, -93.0842, 0.12", "32.2686, -208.225, -94.3917, 0.12", "32.6107, -209.545, -95.298, 0.12", "32.9271, -210.502, -95.8825, 0.12", "33.8367, -212.882, -97.1451, 0.12", "34.481, -214.487, -97.8951, 0.12", "34.9483, -215.648, -98.4913, 0.12", "35.4356, -217.117, -99.1999, 0.12", "35.8785, -218.662, -99.9614, 0.12", "36.7568, -222.413, -101.642, 0.12", "37.1092, -224.319, -102.4, 0.12", "37.5148, -227.2, -103.475, 0.12", "37.9706, -231.371, -105.005, 0.12", "38.227, -234.379, -106.129, 0.12", "38.5258, -239.831, -107.634, 0.12", "38.5705, -242.444, -108.169, 0.12", "38.5104, -246.94, -108.873, 0.12", "38.4036, -249.474, -109.169, 0.12", "37.8421, -257.354, -109.723, 0.12", "36.9205, -264.745, -109.774, 0.12", "36.3052, -268.206, -109.63, 0.12", "35.9404, -270.025, -109.535, 0.12", "35.3883, -272.433, -109.324, 0.12", "34.5867, -275.795, -109.139, 0.12", "33.6845, -279.549, -109.181, 0.12", "33.2108, -282.104, -109.586, 0.12", "32.859, -285.447, -110.187, 0.12", "32.8181, -287.576, -110.442, 0.12", "33.0066, -291.329, -110.457, 0.12", "33.2197, -294.191, -110.121, 0.12", "33.3612, -295.881, -109.704, 0.12", "33.5649, -298.876, -108.74, 0.12", "33.7876, -304.218, -106.746, 0.12", "33.9213, -309.268, -104.911, 0.12", "33.9, -313.802, -103.461, 0.12", "33.7657, -317.157, -102.768, 0.12", "33.4853, -320.03, -102.452, 0.12", "33.1649, -321.869, -102.546, 0.12", "32.4552, -325.162, -103.361, 0.12", "31.4469, -329.597, -104.93, 0.12", "30.6513, -332.901, -106.414, 0.12", "30.1771, -334.677, -107.306, 0.12", "28.3495, -340.878, -110.714, 0.12", "27.2797, -344.311, -112.692, 0.12" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-4.74742, -13.6856, 9.38349, 1.8", "-5.4077, -14.8142, 10.0418, 1.08", "-5.81328, -15.5847, 10.3451, 1.08", "-6.94857, -17.8739, 10.9124, 0.96", "-7.35925, -18.7185, 11.088, 0.96", "-7.90472, -19.859, 11.2446, 0.96", "-8.14646, -20.3882, 11.2873, 0.96", "-8.91978, -22.2216, 11.2035, 0.84", "-9.21394, -23.0162, 11.1294, 0.84", "-9.51886, -23.9464, 11.0065, 0.84", "-9.86949, -25.0157, 10.9422, 0.84", "-10.2639, -26.1665, 10.9644, 0.84", "-10.645, -27.2638, 11.0706, 0.84", "-11.0226, -28.3795, 11.2654, 0.84", "-11.3886, -29.4948, 11.4816, 0.84", "-11.6795, -30.3994, 11.6521, 0.84", "-11.9505, -31.2344, 11.8589, 0.84", "-12.3542, -32.4239, 12.1564, 0.84", "-12.6552, -33.3225, 12.3428, 0.84" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-4.74742, -13.6856, 9.38349, 1.8", "-6.72143, -13.4343, 9.82566, 0.72", "-8.65448, -13.1882, 10.2586, 0.72", "-10.4353, -12.9614, 10.6575, 1.2", "-12.3608, -12.7163, 11.0888, 0.96", "-14.1675, -12.4863, 11.4935, 0.96", "-15.0155, -12.3783, 11.6835, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "30.4299, -22.2365, -0.172177, 0.163892", "42.5293, -31.1024, -0.172177, 0.163892", "54.6287, -39.9684, -0.172177, 0.163892" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-14.6237, 40.3009, -12.5118, 1.8", "-14.702, 42.0128, -12.8291, 1.2", "-14.7755, 43.6208, -13.127, 1.08", "-14.8137, 44.4568, -13.2819, 1.08", "-14.868, 45.6426, -13.5016, 1.08", "-14.9513, 47.4648, -13.8393, 1.8" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-14.6237, 40.3009, -12.5118, 1.8", "-16.1734, 41.6291, -13.0692, 0.12", "-16.2678, 41.7012, -13.0826, 0.24", "-16.9908, 42.1407, -13.1361, 0.24", "-17.5249, 42.4074, -13.168, 0.24", "-18.9701, 43.0539, -13.075, 0.24", "-20.0516, 43.546, -12.9411, 0.24", "-21.281, 44.1263, -12.8126, 0.24", "-22.7769, 44.8532, -12.603, 0.24", "-23.733, 45.3031, -12.419, 0.24", "-25.6339, 46.356, -11.9659, 0.24", "-26.549, 46.9592, -11.7626, 0.24", "-28.852, 48.5706, -10.8522, 0.24", "-31.0392, 50.118, -9.7913, 0.24", "-32.387, 51.0978, -8.98195, 0.24", "-34.0008, 52.3209, -7.79313, 0.24", "-35.2119, 53.2368, -6.7147, 0.24", "-38.6299, 55.6885, -3.16556, 0.24", "-39.6931, 56.4725, -1.92562, 0.24", "-40.6498, 57.2463, -0.766914, 0.24", "-42.0196, 58.3488, 0.93528, 0.24", "-43.4198, 59.4022, 2.56537, 0.24", "-44.116, 59.9386, 3.24712, 0.24", "-45.6478, 61.2219, 4.2421, 0.24", "-46.4348, 61.9448, 4.74575, 0.24", "-47.6371, 63.034, 5.43747, 0.24", "-49.1725, 64.3109, 6.222, 0.24", "-50.7945, 65.5557, 7.01411, 0.24", "-51.8879, 66.3161, 7.55862, 0.24", "-54.3949, 67.8136, 8.88078, 0.24", "-55.5285, 68.4926, 9.54404, 0.24", "-57.1519, 69.5928, 10.7324, 0.24", "-57.9788, 70.1932, 11.4481, 0.24", "-58.6574, 70.6827, 12.0215, 0.24", "-59.7296, 71.4167, 12.7253, 0.24", "-61.0789, 72.2782, 13.2912, 0.24", "-62.4652, 73.2309, 13.7103, 0.24", "-63.4219, 73.9142, 13.9181, 0.24", "-64.4237, 74.6075, 14.0747, 0.24", "-65.8448, 75.5979, 14.1994, 0.24", "-67.7184, 76.8216, 14.2323, 0.24", "-69.4143, 77.8506, 14.1815, 0.24", "-70.7267, 78.5905, 14.0988, 0.24", "-71.7565, 79.1395, 14.0294, 0.24", "-74.4597, 80.5873, 13.8419, 0.24", "-75.6954, 81.1722, 13.743, 0.24", "-76.7307, 81.6291, 13.664, 0.24", "-77.6558, 82.0361, 13.6081, 0.24", "-78.8326, 82.5982, 13.5501, 0.24", "-80.1224, 83.2231, 13.4744, 0.24", "-83.1199, 84.6847, 13.252, 0.24", "-85.2383, 85.7446, 13.0533, 0.24", "-86.9453, 86.6766, 12.8843, 0.24", "-88.5379, 87.6564, 12.7198, 0.24", "-89.693, 88.3928, 12.6091, 0.24", "-90.7348, 89.0295, 12.4369, 0.24", "-92.0835, 89.8006, 12.1089, 0.24", "-94.5657, 91.0035, 11.3283, 0.24", "-95.8741, 91.526, 10.8584, 0.24", "-97.2379, 92.0736, 10.3635, 0.24", "-100.237, 93.3042, 9.31206, 0.24", "-101.409, 93.7653, 8.9174, 0.24", "-102.491, 94.2231, 8.67573, 0.24", "-103.891, 94.861, 8.49196, 0.24", "-106.749, 96.1971, 8.17903, 0.24", "-108.53, 97.1497, 8.0406, 0.24", "-110.666, 98.5267, 7.88146, 0.24", "-114.243, 101.164, 7.6782, 0.24", "-116.273, 102.862, 7.52689, 0.24", "-118.294, 104.856, 7.2996, 0.24", "-119.46, 106.171, 7.10355, 0.24", "-121.502, 108.82, 6.56058, 0.24", "-123.066, 111.112, 5.85805, 0.24", "-124.171, 112.887, 5.0311, 0.24", "-124.904, 114.117, 4.39917, 0.24", "-125.397, 115.011, 3.96562, 0.24", "-126.267, 116.446, 3.13783, 0.24", "-127.102, 117.815, 2.28767, 0.24", "-127.989, 119.449, 1.19128, 0.24", "-129.156, 121.818, -0.324089, 0.24", "-129.819, 123.399, -1.25738, 0.12", "-130.294, 124.618, -1.91703, 0.12", "-131.048, 126.847, -2.94186, 0.12", "-131.738, 128.816, -3.70412, 0.12", "-131.978, 129.439, -3.91208, 0.12", "-132.61, 130.758, -4.18349, 0.12", "-133.741, 132.621, -4.41782, 0.12", "-134.743, 133.97, -4.52565, 0.12", "-136.423, 135.738, -4.51173, 0.12", "-137.313, 136.59, -4.47021, 0.12", "-140.574, 139.505, -4.27254, 0.12", "-142.147, 140.785, -4.15181, 0.12", "-143.648, 141.941, -3.98826, 0.12" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "31.2724, -7.62135, -18.4035, 0.36", "32.6654, -6.40434, -19.1907, 0.36", "34.1978, -5.17115, -19.8713, 0.36", "35.1071, -4.50773, -20.2184, 0.36", "36.0965, -3.74219, -20.5013, 0.36", "37.6733, -2.52012, -20.8548, 0.36", "39.4958, -1.0351, -21.2088, 0.36", "41.6914, 0.909346, -21.4963, 0.36", "43.6995, 2.80518, -21.7034, 0.36", "45.7465, 4.82652, -21.8978, 0.36", "47.3538, 6.47263, -22.042, 0.36", "48.876, 8.07533, -22.169, 0.36", "50.2946, 9.57936, -22.2936, 0.36", "51.5558, 11.0544, -22.4369, 0.36", "52.7406, 12.4909, -22.6058, 0.36", "54.3329, 14.4029, -22.8947, 0.36", "55.9826, 16.3685, -23.2135, 0.36", "56.6643, 17.1519, -23.3471, 0.36", "57.4475, 18.0018, -23.4971, 0.36", "58.5625, 19.1959, -23.7093, 0.36", "60.413, 21.0838, -24.0717, 0.36", "62.0329, 22.6344, -24.3859, 0.36", "62.9206, 23.477, -24.5603, 0.36", "64.0491, 24.5156, -24.7743, 0.36", "64.7209, 25.1159, -24.8958, 0.36", "66.0377, 26.3647, -25.1284, 0.36", "67.296, 27.7107, -25.3523, 0.24", "68.1133, 28.7718, -25.4834, 0.24", "69.1764, 30.4699, -25.6831, 0.24", "69.9146, 32.0361, -25.8616, 0.24", "70.4904, 33.4817, -26.0243, 0.24", "70.959, 34.8114, -26.1737, 0.24", "71.7439, 37.2144, -26.4311, 0.24", "72.4069, 39.3019, -26.6494, 0.24", "73.1215, 41.6416, -26.8839, 0.24", "73.5672, 43.1284, -26.9974, 0.24", "74.2938, 45.4342, -27.133, 0.24", "74.8007, 46.8857, -27.1914, 0.24", "75.3955, 48.3903, -27.225, 0.24", "76.1521, 50.021, -27.2371, 0.24", "77.0826, 51.92, -27.2375, 0.24", "77.5906, 52.9928, -27.2431, 0.24", "78.1084, 54.0722, -27.2631, 0.24", "78.8397, 55.5385, -27.3027, 0.24", "79.509, 56.8855, -27.3734, 0.24", "80.265, 58.3882, -27.5272, 0.24", "80.9767, 59.7795, -27.7329, 0.24", "81.6091, 61.1442, -27.9099, 0.24", "82.0714, 62.3605, -28.0242, 0.24", "82.6194, 64.0141, -28.1111, 0.24", "83.0116, 65.233, -28.1277, 0.24", "83.3051, 66.1246, -28.1103, 0.24", "83.8362, 67.7188, -28.0437, 0.24", "84.3271, 69.0556, -27.9675, 0.24", "84.7563, 70.1827, -27.9777, 0.24", "85.2364, 71.381, -28.0714, 0.24", "85.6067, 72.261, -28.2901, 0.24", "86.1681, 73.528, -28.7888, 0.24", "86.8388, 74.8532, -29.5436, 0.24", "87.8813, 76.9596, -30.9306, 0.24", "88.4283, 78.1993, -31.7958, 0.24", "89.3418, 80.5531, -33.4524, 0.24", "89.7627, 81.897, -34.3579, 0.24", "90.3811, 84.1242, -35.8884, 0.12", "90.7132, 85.4927, -36.8195, 0.12", "90.9608, 86.5103, -37.4434, 0.12", "91.1886, 87.6515, -38.0536, 0.12", "91.3622, 89.5689, -38.7601, 0.12" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "31.2724, -7.62135, -18.4035, 0.36", "33.1676, -8.38428, -18.0688, 0.36", "34.3575, -8.72625, -17.8893, 0.36", "35.6996, -9.02958, -17.6598, 0.36", "37.2991, -9.33652, -17.4327, 0.36", "38.9686, -9.67124, -17.2329, 0.36", "41.1095, -10.1352, -17.011, 0.36", "43.1727, -10.5401, -16.8751, 0.36", "44.4329, -10.793, -16.8699, 0.36", "45.8329, -11.118, -16.9483, 0.36", "47.2992, -11.5333, -17.2074, 0.36", "48.0083, -11.7224, -17.409, 0.36", "49.3238, -11.9916, -17.8632, 0.36", "51.5926, -12.3424, -18.8429, 0.36", "52.8705, -12.4855, -19.4301, 0.36", "55.0089, -12.615, -20.365, 0.36", "57.1342, -12.6024, -21.2637, 0.36", "58.8659, -12.519, -21.8908, 0.24", "61.671, -12.339, -22.9343, 0.24", "63.3972, -12.215, -23.5812, 0.24", "65.3116, -12.0419, -24.318, 0.24", "66.5635, -11.9206, -24.7872, 0.24", "70.3579, -11.6594, -26.3209, 0.24", "73.7882, -11.5036, -27.7604, 0.24", "74.4189, -11.4851, -28.0251, 0.24", "75.5344, -11.5161, -28.5337, 0.24", "76.3648, -11.6366, -28.9095, 0.24", "77.8734, -12.0335, -29.4119, 0.24", "79.6183, -12.7689, -29.6379, 0.24", "81.2224, -13.6226, -29.5009, 0.24", "82.4435, -14.4183, -29.2947, 0.24", "84.1796, -15.8294, -28.6783, 0.24", "86.6507, -18.0081, -27.3716, 0.24", "87.7537, -18.9643, -26.6186, 0.24", "88.7129, -19.7345, -25.8139, 0.24", "89.9446, -20.6706, -24.6636, 0.24", "92.3389, -22.4853, -22.3575, 0.24", "93.6955, -23.5452, -21.064, 0.24", "94.9824, -24.5407, -19.9677, 0.24", "97.4141, -26.3107, -17.9669, 0.24", "98.2059, -26.8235, -17.3458, 0.24", "99.4226, -27.5334, -16.5183, 0.24", "100.353, -28.0267, -16.0183, 0.24", "101.139, -28.4729, -15.6304, 0.24", "102.415, -29.2278, -15.0539, 0.24", "105.413, -30.9836, -13.8812, 0.24", "106.564, -31.6123, -13.4651, 0.24", "107.89, -32.2404, -12.9044, 0.24", "109.039, -32.7749, -12.3838, 0.24", "110.752, -33.5361, -11.5732, 0.24", "111.649, -33.916, -11.1337, 0.24", "113.524, -34.7359, -10.2179, 0.24", "116.756, -36.2218, -8.45316, 0.24", "117.896, -36.764, -7.7723, 0.24", "120.007, -37.7526, -6.49892, 0.24", "121.707, -38.5114, -5.59738, 0.24", "123.172, -39.1193, -4.9078, 0.24", "124.696, -39.6815, -4.21936, 0.24", "126.403, -40.274, -3.5569, 0.24", "128.102, -40.8899, -2.7752, 0.24", "130.755, -41.9103, -1.50034, 0.24", "132.437, -42.5598, -0.674706, 0.24", "135.649, -43.6679, 0.893119, 0.24", "137.747, -44.3213, 1.92656, 0.24", "141.394, -45.4206, 3.73356, 0.24", "143.433, -46.0541, 4.80311, 0.24", "145.087, -46.6326, 5.68657, 0.24", "146.622, -47.2156, 6.40024, 0.24", "148.354, -47.905, 6.99211, 0.24", "150.316, -48.5791, 7.579, 0.24", "151.535, -48.9057, 7.89117, 0.24", "152.7, -49.2084, 8.28233, 0.24", "153.15, -49.3136, 8.46969, 0.24", "153.888, -49.5066, 8.88214, 0.24", "156.428, -50.2061, 10.5202, 0.24", "157.519, -50.5132, 11.3047, 0.24", "158.75, -50.9268, 12.2679, 0.24", "159.884, -51.4087, 13.252, 0.24", "161.596, -52.2684, 14.7489, 0.12", "162.822, -52.9961, 15.744, 0.12", "163.506, -53.4922, 16.2277, 0.12", "164.842, -54.5492, 17.0662, 0.12", "165.988, -55.5492, 17.7264, 0.12", "167.162, -56.5539, 18.2637, 0.12", "168.663, -57.6769, 18.8104, 0.12", "169.671, -58.2961, 19.152, 0.12", "171.331, -59.1418, 19.6666, 0.12", "172.429, -59.5954, 19.9615, 0.12", "174.671, -60.4682, 20.5104, 0.12", "176.057, -60.9676, 20.8635, 0.12", "179.793, -62.1263, 21.8334, 0.12", "181.812, -62.6944, 22.3587, 0.12", "183.438, -63.0668, 22.7983, 0.12", "186.074, -63.5738, 23.5572, 0.12", "187.842, -63.9058, 24.0933, 0.12", "189.551, -64.2161, 24.5958, 0.12", "191.322, -64.476, 24.998, 0.12", "193.154, -64.6608, 25.339, 0.12", "194.606, -64.7137, 25.413, 0.12", "195.467, -64.6277, 25.2941, 0.12", "196.938, -64.2171, 24.3749, 0.12", "198.94, -63.4206, 22.501, 0.12", "199.855, -62.9359, 21.3426, 0.12", "201.886, -61.6441, 17.9838, 0.12", "202.439, -61.1804, 16.8217, 0.12", "203.587, -59.7937, 13.6189, 0.12", "213.892, -64.4918, 13.8625, 0.12", "224.251, -68.7646, 15.5228, 0.12", "234.586, -73.3166, 16.4057, 0.12", "243.45, -80.2959, 17.425, 0.12", "253.322, -85.7648, 18.402, 0.12", "261.949, -93.027, 19.4709, 0.12", "268.636, -102.171, 19.5044, 0.12", "276.006, -110.58, 17.69, 0.12", "283.54, -118.893, 16.1252, 0.12", "290.769, -127.574, 15.2881, 0.12", "299.298, -134.501, 12.5341, 0.12", "307.612, -141.543, 9.43537, 0.12", "315.914, -149.118, 8.01406, 0.12", "324.523, -156.447, 7.31955, 0.12", "334.516, -161.576, 5.85334, 0.12" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "99.111, 47.0259, 28.6398, 0.36", "99.9313, 47.8189, 28.7257, 0.36", "101.293, 48.9923, 28.7443, 0.36", "101.919, 49.4757, 28.73, 0.36", "102.53, 49.8792, 28.6979, 0.36", "103.686, 50.5639, 28.6148, 0.36", "105.83, 51.8336, 28.4606, 0.36", "106.982, 52.4151, 28.3084, 0.36", "107.754, 52.7592, 28.1503, 0.36", "108.782, 53.1431, 27.8987, 0.36", "109.402, 53.3137, 27.7417, 0.36", "117.618, 59.3219, 28.378, 0.36", "125.527, 65.2748, 30.8319, 0.36", "132.891, 71.5298, 34.0963, 0.36" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "99.111, 47.0259, 28.6398, 0.36", "101.385, 46.5942, 28.7324, 0.36", "102.919, 46.3029, 28.7948, 0.36", "104.576, 45.9884, 28.8623, 0.36", "114.502, 43.5475, 26.4914, 0.36", "123.702, 39.6941, 23.2308, 0.36", "133.519, 37.8557, 20.0148, 0.36", "143.475, 35.6589, 17.5302, 0.36", "153.516, 34.7563, 14.6197, 0.36" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "13.986, -2.42312, 6.48207, 0.84", "16.0054, -3.83011, 7.1959, 0.48", "17.4593, -5.1045, 7.74803, 0.48", "18.628, -6.30051, 8.40902, 0.36", "20.4099, -8.5005, 9.75307, 0.36", "21.0758, -9.53173, 10.4225, 0.36", "21.8211, -10.9289, 11.3245, 0.36", "22.4396, -12.707, 12.395, 0.36", "23.1791, -15.7111, 14.1547, 0.36", "23.5106, -17.5744, 15.1362, 0.36", "23.858, -19.8937, 16.2129, 0.36", "24.0544, -21.1551, 16.7007, 0.36", "24.5012, -23.8229, 17.5288, 0.36", "24.8889, -25.781, 17.9609, 0.36", "25.4795, -28.1353, 18.2509, 0.36", "26.1783, -30.2822, 18.3802, 0.36", "27.1766, -32.837, 18.4179, 0.36", "27.7945, -34.2596, 18.4221, 0.36", "28.2382, -35.21, 18.4141, 0.36", "28.8698, -36.5599, 18.429, 0.36", "29.63, -38.32, 18.5441, 0.36", "30.3476, -40.2816, 18.7551, 0.36", "30.7906, -41.7296, 18.947, 0.36", "31.1744, -43.2808, 19.2722, 0.36", "31.68, -45.7931, 20.0971, 0.36", "32.0832, -48.1392, 21.1381, 0.36", "32.3265, -49.6984, 21.9939, 0.36", "32.6214, -51.6298, 23.1417, 0.36", "33.0944, -54.4399, 24.9245, 0.36", "33.604, -56.8988, 26.6334, 0.36", "34.0203, -58.2768, 27.7288, 0.36", "34.4695, -59.3189, 28.6396, 0.36", "35.125, -60.5572, 29.8005, 0.36", "35.4934, -61.1491, 30.3736, 0.36", "36.2283, -62.1971, 31.2572, 0.36", "37.1388, -63.4832, 32.2369, 0.36", "37.8456, -64.5663, 33.0792, 0.36", "38.556, -65.7667, 34.0309, 0.36", "39.178, -66.9373, 34.9342, 0.36", "39.5841, -67.7927, 35.5629, 0.36", "40.486, -69.881, 36.9982, 0.36", "41.3444, -72.1727, 38.4778, 0.36", "41.6653, -73.1446, 39.1015, 0.36", "42.039, -74.3892, 39.8983, 0.36", "42.634, -76.6264, 41.3484, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "13.986, -2.42312, 6.48207, 0.84", "14.5589, -2.69379, 7.51557, 0.72", "14.7781, -2.82146, 7.94777, 0.72", "15.2348, -3.1567, 8.894, 0.72", "15.9384, -3.77563, 10.3053, 0.6", "16.4382, -4.2718, 11.2685, 0.6", "17.7495, -5.69615, 13.5942, 0.6", "18.223, -6.25639, 14.3589, 0.6", "18.7538, -6.94814, 15.2389, 0.6", "19.1927, -7.57744, 15.9888, 0.48", "19.4525, -8.00036, 16.4259, 0.48", "19.9967, -8.89128, 17.2714, 0.48", "20.7568, -10.065, 18.2193, 0.48", "21.5725, -11.1519, 19.1543, 0.48", "21.7845, -11.4125, 19.3928, 0.48", "22.1737, -11.8603, 19.8261, 0.48", "23.1788, -12.9352, 20.872, 0.48", "23.8519, -13.572, 21.5479, 0.48", "24.6426, -14.2263, 22.2461, 0.48", "25.2183, -14.6625, 22.7212, 0.48", "26.0913, -15.3055, 23.4533, 0.48", "26.6178, -15.6793, 23.8979, 0.48", "27.6755, -16.3503, 24.7976, 0.48", "28.2171, -16.6408, 25.2475, 0.48", "28.9006, -16.9407, 25.7969, 0.48", "29.3759, -17.103, 26.1574, 0.48", "32.4088, -19.8867, 31.6226, 0.48", "37.0665, -21.79, 36.2593, 0.48", "41.5339, -23.9031, 40.9914, 0.48", "44.9575, -25.0742, 46.7986, 0.48", "47.2424, -27.3008, 52.8515, 0.48", "49.3042, -29.4656, 59.006, 0.48", "51.237, -30.8912, 65.4128, 0.48", "53.63, -31.0182, 71.8217, 0.48", "55.4461, -32.0627, 78.3352, 0.48", "58.3138, -34.3231, 84.1216, 0.48", "60.3941, -37.0351, 90.049, 0.48", "61.1289, -38.9685, 96.5711, 0.48", "62.7003, -41.4485, 102.751, 0.48", "65.1181, -43.0906, 108.938, 0.48", "67.2847, -45.1882, 115.08, 0.48", "68.3171, -47.0782, 121.574, 0.48", "69.2086, -47.7964, 128.32, 0.48", "71.4007, -49.6632, 134.527, 0.48", "73.2853, -50.3786, 141.065, 0.48", "75.5548, -51.1206, 147.477, 0.48", "77.9926, -52.9146, 153.614, 0.48", "80.5673, -54.3028, 159.799, 0.48", "83.6601, -55.0979, 165.85, 0.48", "86.0582, -56.4984, 172.104, 0.48", "88.8571, -58.9387, 177.851, 0.48", "90.8871, -62.0371, 183.603, 0.48", "93.6491, -66.4493, 188.044, 0.48", "96.9526, -70.6174, 192.349, 0.48", "99.4439, -74.3925, 197.483, 0.48" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.6552, -33.3225, 12.3428, 0.84", "-13.6752, -36.4873, 13.1688, 0.24", "-14.1902, -38.0333, 13.5227, 0.84", "-14.6241, -39.2935, 13.7875, 0.84", "-15.2892, -41.2029, 14.1554, 0.6", "-16.9259, -45.6177, 14.9745, 0.48", "-17.5535, -47.1304, 15.2574, 0.48", "-18.2215, -48.4113, 15.4406, 0.48", "-18.6882, -49.1615, 15.5246, 0.48", "-19.3794, -50.0913, 15.6083, 0.48", "-20.2019, -50.89, 15.6596, 0.48", "-21.6675, -51.6846, 15.6782, 0.48", "-22.8672, -52.1646, 15.66, 0.48", "-24.955, -52.869, 15.5523, 0.48", "-25.5138, -53.0513, 15.5127, 0.48", "-26.7322, -53.4554, 15.4195, 0.48", "-28.0422, -53.9668, 15.3085, 0.48", "-29.5973, -54.6838, 15.192, 0.48", "-30.6793, -55.2521, 15.1448, 0.48", "-32.0901, -56.0711, 15.0279, 0.48", "-33.3653, -56.8746, 14.8363, 0.48", "-34.3049, -57.4908, 14.6484, 0.48", "-35.5803, -58.3348, 14.3617, 0.48", "-36.5378, -58.9501, 14.1478, 0.48", "-38.9878, -60.4412, 13.5806, 0.48", "-40.4727, -61.2881, 13.2199, 0.48", "-41.7316, -61.977, 12.9333, 0.48", "-42.6536, -62.4883, 12.6932, 0.48", "-43.2735, -62.8587, 12.5276, 0.48", "-44.0293, -63.3407, 12.3524, 0.48", "-44.9625, -63.9889, 12.2151, 0.48", "-46.0397, -64.8603, 12.0398, 0.48", "-47.7954, -66.5119, 11.7099, 0.48", "-48.6536, -67.4107, 11.5331, 0.48", "-49.204, -68.0393, 11.4147, 0.48", "-49.7274, -68.6848, 11.3271, 0.48", "-50.6373, -69.8734, 11.2354, 0.48", "-51.5244, -71.0957, 11.2392, 0.48", "-52.3742, -72.2999, 11.3558, 0.48", "-52.7255, -72.8173, 11.4074, 0.48", "-53.5455, -74.033, 11.5357, 0.48", "-53.9735, -74.6361, 11.609, 0.48", "-54.9121, -75.8373, 11.786, 0.48", "-55.8898, -77.0263, 11.9839, 0.48", "-56.7436, -78.0251, 12.1441, 0.48", "-57.4944, -78.8965, 12.2619, 0.48", "-58.3436, -79.8969, 12.2647, 0.48", "-59.067, -80.7832, 12.1779, 0.48", "-59.8819, -81.7874, 12.0, 0.48", "-60.8004, -82.9421, 11.6624, 0.48", "-61.2971, -83.5633, 11.424, 0.48", "-62.87, -85.5012, 10.4581, 0.48", "-63.7148, -86.4896, 9.85122, 0.48", "-64.284, -87.0768, 9.44252, 0.48", "-65.3578, -88.0278, 8.71364, 0.48", "-66.1596, -88.6581, 8.23728, 0.48", "-67.2765, -89.4154, 7.59451, 0.48", "-68.2872, -90.0286, 7.0622, 0.48", "-69.5591, -90.7426, 6.33685, 0.48", "-70.4203, -91.2473, 5.81397, 0.48", "-71.6501, -92.0354, 5.04448, 0.48", "-74.0935, -93.746, 3.41533, 0.48", "-75.1035, -94.5018, 2.75186, 0.48", "-76.0648, -95.2662, 2.13385, 0.48", "-77.1762, -96.2006, 1.44461, 0.48", "-78.5634, -97.4257, 0.683498, 0.48", "-79.4988, -98.3253, 0.26044, 0.48", "-80.8028, -99.7033, -0.102646, 0.48", "-81.5571, -100.564, -0.314669, 0.48", "-82.1394, -101.24, -0.462461, 0.48", "-83.0527, -102.292, -0.708442, 0.48", "-84.1351, -103.55, -1.03009, 0.48", "-85.0658, -104.635, -1.32647, 0.48", "-87.8704, -107.954, -2.29821, 0.36", "-89.1885, -109.595, -2.76117, 0.36", "-90.2641, -110.99, -3.0799, 0.36", "-91.3136, -112.377, -3.34884, 0.36", "-92.3596, -113.749, -3.59254, 0.36", "-93.1667, -114.823, -3.73978, 0.36", "-95.3336, -117.806, -3.81043, 0.36", "-96.6419, -119.75, -3.77202, 0.36", "-97.1515, -120.556, -3.69448, 0.36" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-12.6552, -33.3225, 12.3428, 0.84", "-14.7011, -33.9554, 13.6411, 0.6", "-15.3919, -34.107, 14.025, 0.6", "-16.3589, -34.2625, 14.5042, 0.6", "-18.8229, -34.5602, 15.6412, 0.36", "-19.495, -34.6677, 15.9246, 0.36", "-20.1287, -34.7761, 16.1886, 0.36", "-20.8693, -34.8763, 16.4459, 0.36", "-21.2707, -34.9194, 16.6208, 0.36", "-22.226, -35.0172, 17.0558, 0.36", "-23.5354, -35.2083, 17.5672, 0.36", "-24.7559, -35.4542, 18.1142, 0.24", "-25.3599, -35.6002, 18.4222, 0.24", "-27.0558, -36.0672, 19.372, 0.24", "-33.5423, -37.3634, 21.9251, 0.24", "-39.6124, -38.4814, 25.4149, 0.24", "-45.4057, -40.6262, 28.895, 0.24", "-51.9171, -41.8115, 31.4385, 0.24", "-58.2618, -43.9883, 33.7366, 0.24", "-64.0716, -47.0791, 36.376, 0.24", "-69.6365, -50.2543, 39.4129, 0.24", "-74.0604, -55.1026, 42.0957, 0.24", "-77.9311, -60.7013, 44.0821, 0.24", "-81.1616, -66.4933, 46.5901, 0.24", "-84.0881, -71.4931, 50.6781, 0.24", "-86.215, -76.7259, 54.9638, 0.24", "-88.8249, -81.333, 59.6794, 0.24" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-15.0155, -12.3783, 11.6835, 0.96", "-16.6984, -11.5379, 10.272, 0.36", "-19.52, -10.1141, 8.11668, 0.36", "-20.868, -9.45256, 7.06852, 0.36", "-25.9425, -7.1019, 3.19594, 0.36", "-27.805, -6.2738, 1.827, 0.36", "-29.8947, -5.37865, 0.304031, 0.36", "-31.8069, -4.58396, -1.16519, 0.36", "-33.1725, -4.06926, -2.21852, 0.36", "-34.9584, -3.50245, -3.48431, 0.36", "-36.2529, -3.23992, -4.23094, 0.36", "-38.5579, -2.71936, -5.44378, 0.36", "-40.5533, -2.24285, -6.28027, 0.36", "-41.5742, -1.96916, -6.50911, 0.36", "-44.4954, -1.1018, -6.64687, 0.36", "-45.7657, -0.674365, -6.52468, 0.36", "-48.7964, 0.376458, -6.0132, 0.36", "-50.9956, 1.17538, -5.49287, 0.36", "-54.6767, 2.50765, -4.50824, 0.36", "-56.8148, 3.22677, -3.95261, 0.36", "-58.9703, 3.89207, -3.43047, 0.36", "-60.91, 4.46069, -3.02015, 0.36", "-62.8525, 4.93027, -2.72543, 0.36", "-64.4923, 5.29493, -2.59626, 0.36", "-65.7565, 5.59073, -2.6457, 0.36", "-67.7205, 6.07333, -2.79762, 0.36", "-69.5168, 6.52032, -3.0261, 0.36", "-71.3412, 7.03659, -3.28811, 0.36", "-73.4749, 7.71185, -3.64956, 0.36", "-77.3071, 8.96493, -4.3717, 0.36", "-79.4377, 9.67688, -4.78302, 0.36", "-82.0863, 10.6418, -5.35313, 0.36", "-83.8222, 11.3364, -5.68106, 0.36", "-85.2965, 11.9901, -5.93069, 0.36", "-87.0311, 12.8098, -6.19533, 0.36", "-89.895, 14.15, -6.52361, 0.36", "-91.7996, 15.217, -6.96133, 0.36", "-93.7709, 16.4208, -7.60902, 0.36", "-95.7384, 17.601, -8.49522, 0.24", "-97.1989, 18.4658, -9.26287, 0.24", "-98.4701, 19.2321, -10.083, 0.24", "-103.135, 21.7756, -13.3983, 0.24", "-104.208, 22.2546, -14.1591, 0.24", "-105.747, 22.8704, -15.3128, 0.24", "-107.433, 23.4614, -16.5059, 0.24", "-109.979, 24.2524, -18.2117, 0.12", "-112.252, 24.8911, -19.5945, 0.12", "-113.637, 25.2652, -20.3536, 0.12", "-116.107, 26.1082, -21.8858, 0.12", "-117.448, 26.6325, -22.7671, 0.12", "-118.783, 27.1469, -23.7953, 0.12", "-119.952, 27.5736, -24.8188, 0.12", "-123.043, 28.627, -27.9793, 0.12", "-126.022, 29.5508, -31.2779, 0.12", "-128.623, 30.189, -34.2357, 0.12", "-132.814, 30.9529, -39.0304, 0.12", "-135.811, 31.3055, -42.3176, 0.12", "-139.484, 31.56, -46.0867, 0.12", "-141.939, 31.6326, -48.3369, 0.12", "-144.23, 31.6879, -50.1377, 0.12", "-147.429, 31.8234, -52.2544, 0.12", "-151.575, 32.1443, -54.1804, 0.12", "-154.525, 32.4673, -55.2569, 0.12", "-157.662, 32.8473, -56.0942, 0.12", "-161.171, 33.3531, -56.8837, 0.12", "-162.546, 33.5796, -57.1539, 0.12", "-166.744, 34.2349, -57.8241, 0.12", "-169.526, 34.5882, -58.1823, 0.12", "-172.464, 34.8289, -58.5623, 0.12", "-173.98, 34.9267, -58.7574, 0.12", "-175.743, 35.0456, -58.9475, 0.12", "-177.424, 35.2005, -59.1335, 0.12", "-180.132, 35.4731, -59.4957, 0.12", "-182.185, 35.6813, -59.7933, 0.12", "-184.677, 35.9549, -60.2925, 0.12", "-187.809, 36.2649, -61.0845, 0.12", "-189.73, 36.4476, -61.6631, 0.12", "-193.022, 36.7659, -62.8585, 0.12", "-195.931, 37.0732, -64.2348, 0.12", "-198.154, 37.4902, -65.8246, 0.12", "-200.18, 38.1534, -68.0666, 0.12", "-201.747, 38.7869, -70.109, 0.12", "-203.364, 39.5982, -72.57, 0.12", "-205.479, 41.1016, -76.8372, 0.12", "-208.209, 43.8275, -84.3821, 0.12", "-209.324, 45.4967, -88.8326, 0.12" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-15.0155, -12.3783, 11.6835, 0.96", "-16.7247, -12.5486, 11.7385, 0.72", "-18.0951, -12.7986, 11.9805, 0.72", "-18.7016, -12.9093, 12.0876, 0.72", "-19.95, -13.1371, 12.308, 0.72", "-21.1099, -13.3487, 12.5128, 0.72", "-22.1469, -13.5379, 12.6959, 0.72", "-23.6366, -13.9804, 12.9021, 0.72" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "-14.9513, 47.4648, -13.8393, 1.8", "-15.102, 49.1852, -13.9142, 1.08", "-15.2306, 50.0635, -14.0376, 1.08", "-15.4885, 51.2506, -14.2543, 1.08", "-15.7718, 52.3363, -14.457, 1.08", "-16.5851, 55.3045, -14.9586, 1.08", "-17.2663, 57.8739, -15.2614, 1.08", "-17.8209, 59.9574, -15.4523, 1.08", "-18.4117, 62.1544, -15.6506, 1.08", "-18.9498, 64.157, -15.8108, 1.08", "-19.4649, 65.9763, -15.9222, 1.08", "-20.2409, 68.4344, -15.9421, 1.08", "-20.6202, 69.6169, -15.7894, 1.08" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "-14.9513, 47.4648, -13.8393, 1.8", "-15.7933, 47.6305, -16.4209, 0.36", "-16.0117, 47.6577, -17.3075, 0.36", "-16.1495, 47.6275, -18.0298, 0.36", "-16.3077, 47.4861, -19.4557, 0.36", "-16.3641, 47.4358, -19.9633, 0.36", "-16.4368, 47.3708, -20.6188, 0.36", "-16.5729, 47.0126, -22.7231, 0.48", "-16.5676, 46.7975, -23.9589, 0.48", "-16.4369, 46.422, -25.9107, 0.48" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "42.634, -76.6264, 41.3484, 0.36", "41.8325, -79.121, 41.9827, 0.36", "41.6701, -80.2206, 42.2892, 0.36", "41.6962, -81.3305, 42.6004, 0.36", "41.9552, -83.0559, 43.0362, 0.36", "42.2925, -84.5838, 43.4528, 0.36", "42.5775, -85.7099, 43.7733, 0.36", "43.2097, -87.539, 44.4244, 0.36", "43.8498, -89.0065, 44.927, 0.36", "44.6457, -90.5063, 45.3956, 0.36", "45.1171, -91.2793, 45.5687, 0.36", "45.6735, -92.0426, 45.7453, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "42.634, -76.6264, 41.3484, 0.36", "41.4804, -77.6956, 40.8799, 0.36", "41.1261, -78.024, 40.736, 0.36" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-97.1515, -120.556, -3.69448, 0.36", "-99.1922, -124.277, -3.31702, 0.24", "-100.829, -127.057, -3.05843, 0.24", "-102.155, -129.229, -2.70431, 0.24", "-104.472, -132.908, -1.98305, 0.24", "-105.734, -134.841, -1.5833, 0.24", "-107.776, -137.873, -0.94535, 0.24", "-108.746, -139.259, -0.630773, 0.24", "-111.604, -143.256, 0.350864, 0.24", "-113.053, -145.212, 0.846491, 0.24", "-114.589, -147.172, 1.35391, 0.24", "-115.924, -148.867, 1.77035, 0.24", "-117.55, -150.984, 2.40164, 0.24", "-119.505, -153.433, 3.20335, 0.24", "-121.433, -155.717, 3.97553, 0.24", "-123.108, -157.622, 4.69802, 0.24", "-125.1, -159.809, 5.57422, 0.24", "-129.417, -164.484, 7.42, 0.24", "-131.135, -166.276, 8.11203, 0.24", "-132.887, -168.1, 8.85066, 0.12", "-134.575, -169.875, 9.45111, 0.12", "-136.866, -172.335, 10.0649, 0.12", "-139.448, -175.219, 10.4397, 0.12", "-140.47, -176.438, 10.4114, 0.12", "-142.246, -178.802, 10.2788, 0.12", "-144.869, -182.628, 9.9976, 0.12", "-145.953, -184.42, 9.86098, 0.12", "-147.217, -186.873, 9.79275, 0.12", "-148.311, -189.352, 9.73697, 0.12", "-149.027, -191.197, 9.78019, 0.12", "-149.749, -193.187, 10.0057, 0.12", "-150.48, -195.161, 10.5922, 0.12", "-151.462, -197.799, 11.5536, 0.12", "-152.389, -200.116, 12.5763, 0.12", "-153.376, -202.266, 13.6332, 0.12", "-154.608, -204.565, 14.8143, 0.12", "-156.307, -207.156, 16.1925, 0.12", "-157.524, -208.678, 17.032, 0.12", "-158.947, -210.231, 17.8637, 0.12", "-160.796, -212.075, 18.6906, 0.12", "-162.29, -213.495, 19.1589, 0.12", "-164.729, -215.729, 19.7323, 0.12", "-166.023, -216.928, 20.03, 0.12", "-167.529, -218.41, 20.4875, 0.12", "-170.389, -221.48, 21.6025, 0.12", "-172.367, -223.756, 22.5854, 0.12", "-173.721, -225.372, 23.3746, 0.12", "-175.521, -227.578, 24.5645, 0.12", "-177.661, -230.205, 26.0044, 0.12", "-179.094, -231.919, 26.9809, 0.12", "-180.758, -233.813, 28.0663, 0.12", "-182.088, -235.355, 28.7502, 0.12", "-183.016, -236.44, 29.1455, 0.12", "-184.452, -238.121, 29.638, 0.12", "-185.977, -239.952, 30.0598, 0.12", "-187.445, -241.813, 30.417, 0.12", "-189.612, -244.874, 30.6143, 0.12", "-190.901, -246.793, 30.6051, 0.12", "-192.112, -248.62, 30.5368, 0.12", "-193.352, -250.423, 30.466, 0.12", "-194.467, -251.971, 30.2401, 0.12", "-197.779, -256.142, 29.0593, 0.12", "-199.081, -257.544, 28.4228, 0.12", "-201.083, -259.562, 27.3153, 0.12", "-202.439, -260.919, 26.5655, 0.12", "-204.212, -262.747, 25.5166, 0.12", "-205.654, -264.203, 24.7519, 0.12", "-207.753, -266.215, 23.8969, 0.12", "-208.851, -267.236, 23.4621, 0.12", "-211.163, -269.299, 22.6682, 0.12", "-213.418, -271.277, 22.1794, 0.12", "-216.214, -273.715, 21.7932, 0.12", "-218.391, -275.604, 21.5952, 0.12", "-220.593, -277.456, 21.5017, 0.12", "-222.472, -278.926, 21.478, 0.12", "-225.033, -280.604, 21.6066, 0.12" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-97.1515, -120.556, -3.69448, 0.36", "-97.8042, -120.817, -3.47786, 0.36", "-98.584, -121.138, -3.22291, 0.36", "-99.3166, -121.508, -2.82059, 0.36", "-99.8834, -121.816, -2.46023, 0.24", "-100.529, -122.158, -2.04812, 0.24", "-101.104, -122.454, -1.69125, 0.24", "-101.814, -122.819, -1.24559, 0.24", "-103.609, -123.736, -0.0459132, 0.24", "-104.749, -124.319, 0.753207, 0.24", "-106.161, -125.003, 1.75078, 0.24", "-107.162, -125.428, 2.45051, 0.24", "-108.36, -125.844, 3.26967, 0.24", "-109.374, -126.118, 3.94548, 0.24", "-110.493, -126.332, 4.67205, 0.24", "-111.704, -126.487, 5.54842, 0.24", "-112.786, -126.572, 6.45036, 0.24", "-113.716, -126.61, 7.32683, 0.24", "-114.452, -126.615, 8.058, 0.24", "-115.403, -126.625, 9.0091, 0.24", "-116.597, -126.696, 10.265, 0.24", "-117.841, -126.946, 11.7507, 0.24", "-118.642, -127.223, 12.7668, 0.24", "-119.417, -127.588, 13.7959, 0.24", "-120.058, -127.962, 14.6374, 0.24", "-120.898, -128.526, 15.6668, 0.24", "-122.309, -129.58, 17.1954, 0.24", "-123.244, -130.326, 18.0727, 0.24", "-124.2, -131.127, 18.9389, 0.24", "-125.228, -132.034, 19.8735, 0.24", "-125.998, -132.69, 20.5317, 0.24", "-126.917, -133.38, 21.152, 0.24", "-127.95, -134.043, 21.611, 0.24", "-131.877, -135.755, 26.5377, 0.24", "-135.359, -138.161, 31.5093, 0.24", "-138.614, -140.968, 36.4232, 0.24", "-140.835, -143.813, 41.8642, 0.24", "-144.559, -146.169, 46.6817, 0.24", "-149.298, -147.405, 50.9997, 0.24", "-153.384, -149.515, 55.6338, 0.24", "-157.279, -150.829, 60.7064, 0.24", "-161.024, -152.149, 65.8891, 0.24", "-163.644, -154.218, 71.5001, 0.24", "-165.2, -156.608, 77.3733, 0.24", "-166.434, -158.163, 83.5931, 0.24", "-167.094, -159.845, 89.867, 0.24", "-167.893, -161.05, 96.2338, 0.24", "-169.724, -163.325, 102.073, 0.24" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-23.6366, -13.9804, 12.9021, 0.72", "-25.5764, -15.3497, 14.9645, 0.36", "-26.5948, -16.0685, 16.0472, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-23.6366, -13.9804, 12.9021, 0.72", "-25.839, -12.5848, 12.3667, 0.72", "-27.2621, -11.9059, 12.1689, 0.72", "-28.6877, -11.3792, 12.1319, 0.72", "-29.4407, -11.1227, 12.1501, 0.6", "-30.7182, -10.6895, 12.2173, 0.6", "-31.6141, -10.3745, 12.2859, 0.6", "-33.8757, -9.71039, 12.6086, 0.6", "-35.6934, -9.284, 12.9, 0.6", "-36.8591, -9.08767, 13.0811, 0.6", "-37.8002, -8.97428, 13.2235, 0.6", "-39.2159, -8.88317, 13.4226, 0.6", "-40.9017, -8.97257, 13.7655, 0.6", "-41.9197, -9.19891, 14.0005, 0.6", "-43.2249, -9.65239, 14.3383, 0.6", "-44.31, -10.1156, 14.6529, 0.6", "-45.3791, -10.6245, 14.9766, 0.6", "-48.2846, -12.1803, 15.895, 0.6", "-49.0067, -12.5844, 16.1257, 0.6", "-49.6223, -12.9109, 16.3126, 0.48", "-50.3146, -13.2506, 16.4712, 0.48", "-51.0715, -13.5891, 16.5288, 0.48", "-51.8224, -13.8383, 16.4443, 0.48", "-53.043, -14.0426, 16.2355, 0.48", "-54.2389, -14.097, 16.0978, 0.48", "-55.3069, -14.0984, 16.0055, 0.48", "-56.6197, -14.1151, 15.9099, 0.48", "-59.0826, -14.2226, 15.738, 0.48", "-61.6576, -14.3982, 15.5482, 0.48", "-63.0748, -14.5135, 15.4298, 0.48", "-64.3443, -14.6241, 15.302, 0.48", "-66.4178, -14.7957, 15.0236, 0.48", "-68.3035, -14.9721, 14.7026, 0.48", "-69.4757, -15.1421, 14.4644, 0.48", "-71.4175, -15.5442, 13.9871, 0.48", "-72.9909, -15.8957, 13.6068, 0.48", "-74.7326, -16.2422, 13.1971, 0.48", "-76.108, -16.4393, 12.8764, 0.48", "-77.2977, -16.5788, 12.6074, 0.48", "-78.7856, -16.8171, 12.2901, 0.48", "-79.929, -17.1856, 12.0752, 0.48" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "-20.6202, 69.6169, -15.7894, 1.08", "-21.0402, 71.3401, -15.7474, 0.96", "-21.3633, 72.7291, -15.6966, 0.96", "-21.7226, 74.4666, -15.6071, 0.96", "-21.9677, 75.885, -15.504, 0.96", "-22.1269, 76.9615, -15.408, 0.96", "-22.4173, 78.9248, -15.2331, 0.96", "-22.5793, 80.0715, -15.1045, 0.96", "-22.7468, 81.5918, -14.91, 0.96", "-22.8626, 83.2293, -14.6835, 0.84", "-22.9347, 84.4857, -14.4985, 0.84" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "-20.6202, 69.6169, -15.7894, 1.08", "-18.3905, 72.6109, -15.9566, 0.24", "-17.2858, 74.1577, -16.0519, 0.24", "-16.4329, 75.3374, -16.0736, 0.24", "-14.8512, 77.4754, -15.9431, 0.24", "-13.2536, 79.5646, -15.7872, 0.24", "-12.0552, 81.074, -15.6256, 0.24", "-11.3906, 81.9844, -15.4524, 0.24", "-10.3984, 83.3816, -15.157, 0.24", "-9.42828, 84.89, -14.7952, 0.24", "-8.1372, 87.098, -14.1364, 0.24", "-7.25158, 88.8565, -13.6805, 0.24", "-6.27171, 90.899, -13.2082, 0.24", "-5.45955, 92.8066, -12.8354, 0.24", "-4.71257, 94.8644, -12.6154, 0.24", "-4.10823, 96.8472, -12.5134, 0.24", "-3.38916, 99.7149, -12.4058, 0.24", "-2.83626, 102.183, -12.3912, 0.24", "-2.30067, 104.72, -12.5065, 0.24", "-1.73418, 107.68, -12.7093, 0.24", "-1.47655, 109.231, -12.8193, 0.24", "-1.18201, 111.149, -12.9229, 0.24", "-0.79184, 113.631, -13.0356, 0.24", "-0.0751184, 117.672, -13.2582, 0.24", "0.576651, 120.342, -13.4156, 0.24", "1.1854, 122.151, -13.4969, 0.24", "1.84703, 123.631, -13.6348, 0.24", "3.19766, 126.111, -14.0251, 0.24", "4.46677, 127.985, -14.4454, 0.24", "6.13525, 130.056, -15.0034, 0.24", "7.63036, 131.711, -15.513, 0.24", "9.49828, 133.607, -16.0314, 0.24", "10.6372, 134.76, -16.276, 0.24", "12.1312, 136.356, -16.5074, 0.24", "12.782, 137.148, -16.581, 0.24", "14.3775, 139.418, -16.5972, 0.24", "15.6616, 141.531, -16.4963, 0.24", "16.6068, 143.267, -16.3015, 0.24", "17.9238, 145.816, -16.0285, 0.24", "18.8892, 147.818, -15.8354, 0.24", "19.8376, 149.797, -15.6951, 0.24", "20.2665, 150.768, -15.6639, 0.24", "20.5718, 151.487, -15.6474, 0.24", "21.4607, 153.443, -15.5236, 0.24", "22.3129, 155.09, -15.3049, 0.24", "22.914, 156.159, -15.1374, 0.24", "23.5999, 157.405, -14.8979, 0.24", "24.1928, 158.506, -14.6594, 0.24", "24.8707, 159.878, -14.385, 0.24", "25.5159, 161.354, -14.2007, 0.24", "26.0708, 162.687, -14.1356, 0.24", "26.6843, 164.221, -14.1819, 0.24", "27.4584, 166.24, -14.3791, 0.24", "28.1801, 168.151, -14.6769, 0.24", "29.3467, 171.242, -15.3189, 0.24", "29.7782, 172.312, -15.5831, 0.24", "30.5431, 174.09, -16.1201, 0.12", "31.2248, 175.617, -16.6052, 0.12", "32.1733, 177.752, -17.3472, 0.12", "32.7756, 179.201, -17.8858, 0.12", "33.5549, 181.211, -18.7015, 0.12", "34.37, 183.594, -19.7649, 0.12", "34.8477, 185.167, -20.4668, 0.12", "35.7042, 188.496, -21.8939, 0.12", "36.1546, 190.491, -22.6953, 0.12", "36.5181, 192.395, -23.3615, 0.12", "36.8109, 194.151, -23.8536, 0.12", "37.0702, 195.599, -24.1375, 0.12", "37.625, 198.663, -24.679, 0.12", "37.9978, 200.648, -25.001, 0.12", "38.3785, 202.335, -25.465, 0.12", "38.8992, 204.517, -26.1903, 0.12", "39.3024, 206.217, -26.8178, 0.12", "40.3391, 210.641, -28.5725, 0.12", "40.8873, 213.022, -29.5486, 0.12", "42.3631, 219.144, -32.047, 0.12", "42.9104, 221.23, -32.8679, 0.12", "43.4957, 223.352, -33.6366, 0.12", "44.3531, 226.317, -34.5149, 0.12", "45.0573, 228.669, -34.9408, 0.12", "45.5703, 230.416, -35.0755, 0.12", "46.4738, 233.164, -34.9949, 0.12", "47.017, 234.495, -34.9941, 0.12", "48.1183, 236.805, -35.118, 0.12", "49.2655, 239.135, -35.2769, 0.12", "49.8175, 240.222, -35.3593, 0.12", "51.0294, 242.582, -35.574, 0.12", "52.6378, 245.52, -35.9211, 0.12", "55.1513, 249.945, -36.6076, 0.12", "57.1035, 253.214, -37.2631, 0.12" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "-16.4369, 46.422, -25.9107, 0.48", "-15.7114, 46.0597, -29.8705, 0.48", "-15.5308, 46.0237, -31.4737, 0.48", "-15.3308, 46.2057, -33.0966, 0.48", "-15.2158, 46.3637, -34.2598, 0.48", "-14.9674, 47.0443, -38.601, 0.36", "-14.9053, 47.2506, -39.6568, 0.36", "-14.8435, 48.1049, -43.0474, 0.36", "-14.8079, 49.5036, -47.269, 0.36", "-14.7997, 49.9843, -48.4033, 0.36", "-14.7896, 51.2927, -50.9807, 0.36", "-14.7545, 53.139, -53.9848, 0.36", "-14.6373, 54.6835, -56.2961, 0.36", "-14.4903, 55.896, -57.9629, 0.36", "-14.1025, 58.2601, -61.3744, 0.24", "-13.9612, 59.0527, -62.5608, 0.24", "-13.7769, 60.1397, -64.3738, 0.24", "-13.6865, 61.1463, -66.3172, 0.24", "-13.6321, 61.9239, -68.0332, 0.24", "-13.7257, 63.5987, -72.015, 0.24", "-13.8603, 64.2916, -73.6271, 0.24", "-14.0736, 65.7571, -76.8567, 0.24", "-14.1658, 66.8473, -78.9749, 0.24", "-14.1904, 68.7034, -82.3796, 0.24", "-14.0534, 69.8177, -84.3454, 0.24", "-13.815, 70.9151, -86.1128, 0.24", "-12.6564, 74.4958, -91.5551, 0.12", "-12.1478, 75.6742, -93.2356, 0.12", "-10.7057, 78.2584, -96.9202, 0.12", "-8.64387, 81.4831, -101.425, 0.12", "-7.72725, 82.7182, -103.139, 0.12", "-6.56462, 84.1482, -105.163, 0.12", "-4.4076, 86.6618, -108.677, 0.12", "-1.01528, 90.3665, -113.686, 0.12", "-0.0801244, 91.3291, -114.838, 0.12" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "-16.4369, 46.422, -25.9107, 0.48", "-17.3392, 46.6616, -26.8445, 0.24", "-17.7374, 46.9295, -27.716, 0.24", "-17.8967, 47.0255, -28.1487, 0.24", "-18.1604, 47.1295, -28.8871, 0.24", "-18.3905, 47.1718, -29.5222, 0.24", "-19.171, 47.2186, -31.5873, 0.24", "-19.4269, 47.2429, -32.4859, 0.24", "-19.6682, 47.2844, -33.426, 0.24", "-19.8187, 47.3409, -34.0813, 0.24", "-19.9841, 47.4322, -34.841, 0.24", "-20.1418, 47.5099, -35.7015, 0.24", "-20.321, 47.6031, -36.9096, 0.24", "-20.4474, 47.709, -38.1233, 0.24", "-20.5741, 47.8571, -39.5492, 0.24", "-20.6075, 47.9121, -39.9466, 0.24", "-20.7298, 48.1245, -41.3127, 0.24", "-20.853, 48.2851, -42.3622, 0.24", "-21.0135, 48.3917, -43.3183, 0.24", "-21.1596, 48.4639, -44.1115, 0.24", "-21.3781, 48.5387, -45.1393, 0.24", "-21.6124, 48.6087, -46.1381, 0.24", "-21.8072, 48.6451, -46.7821, 0.24", "-22.0619, 48.6546, -47.5249, 0.24", "-22.4941, 48.5843, -48.7468, 0.24", "-22.8758, 48.4043, -49.8932, 0.24", "-23.0662, 48.2941, -50.4084, 0.24", "-23.5456, 48.0388, -51.4558, 0.24", "-24.0245, 47.7835, -52.403, 0.24", "-24.5549, 47.5072, -53.3838, 0.24", "-25.132, 47.2003, -54.3212, 0.24", "-25.8239, 46.8412, -55.3879, 0.24", "-26.3829, 46.6052, -56.195, 0.24", "-27.0988, 46.4042, -57.1049, 0.24", "-27.7959, 46.3444, -57.7882, 0.24", "-28.7365, 46.4591, -58.3713, 0.24", "-29.2794, 46.6179, -58.5638, 0.24", "-30.5513, 47.1585, -58.8137, 0.24", "-31.4607, 47.6888, -58.9523, 0.24", "-32.5109, 48.2955, -59.0153, 0.24", "-34.1686, 49.2165, -59.0584, 0.24", "-35.0217, 49.6701, -59.1078, 0.24", "-35.8333, 50.0564, -59.1892, 0.24", "-37.2361, 50.5928, -59.4824, 0.24", "-39.164, 51.1832, -60.1824, 0.24", "-40.0448, 51.4126, -60.6513, 0.24", "-41.7306, 51.8166, -61.7747, 0.24", "-42.1588, 51.9131, -62.0815, 0.24", "-43.3682, 52.2367, -63.1146, 0.24", "-44.0655, 52.4819, -63.821, 0.24", "-44.8233, 52.9305, -64.8475, 0.24", "-45.0065, 53.0678, -65.1369, 0.24", "-45.469, 53.4632, -65.9916, 0.24", "-46.1916, 54.0654, -67.3865, 0.24", "-46.5278, 54.3182, -68.0417, 0.24", "-47.2619, 54.7368, -69.6394, 0.24", "-47.4703, 54.8047, -70.1007, 0.24", "-47.8262, 54.8323, -70.8239, 0.24", "-48.3295, 54.7481, -71.8638, 0.24", "-48.6726, 54.633, -72.6631, 0.24", "-48.9675, 54.5175, -73.5114, 0.24", "-49.2064, 54.451, -74.4721, 0.24", "-49.4091, 54.4885, -75.5982, 0.24", "-49.5661, 54.6597, -77.124, 0.24", "-49.7553, 55.0275, -79.2646, 0.24", "-49.8686, 55.2207, -80.1851, 0.24", "-50.1225, 55.6068, -81.8251, 0.24", "-50.2291, 55.7426, -82.3795, 0.24", "-50.7331, 56.1427, -83.8865, 0.24", "-51.3137, 56.4388, -85.1369, 0.24", "-52.0531, 56.654, -86.4364, 0.24", "-52.4422, 56.7098, -87.0689, 0.24", "-52.9175, 56.7601, -87.7332, 0.24", "-54.0917, 56.8889, -89.5755, 0.24", "-54.9579, 56.9695, -91.0479, 0.24", "-55.2963, 56.9722, -91.6957, 0.24", "-55.7063, 56.9428, -92.4905, 0.24", "-56.675, 56.8641, -94.3211, 0.24", "-57.9096, 56.8193, -96.6468, 0.24", "-58.5191, 56.798, -97.6981, 0.24", "-59.3494, 56.8107, -99.0431, 0.24", "-60.1131, 56.8832, -100.295, 0.24", "-61.0624, 57.0774, -101.977, 0.24", "-61.5028, 57.2103, -102.773, 0.24", "-62.1249, 57.4414, -103.765, 0.24", "-63.1006, 57.9467, -105.465, 0.24", "-63.521, 58.2502, -106.325, 0.24", "-64.0999, 58.7834, -107.76, 0.24" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "45.6735, -92.0426, 45.7453, 0.36", "46.7281, -93.417, 46.0018, 0.36", "48.0366, -95.3984, 46.5049, 0.36", "48.9889, -96.9501, 46.961, 0.36", "49.7103, -98.1997, 47.3495, 0.36", "50.7193, -99.9327, 47.9194, 0.36", "51.8255, -101.832, 48.5608, 0.36", "52.6749, -103.413, 49.1413, 0.36", "52.9081, -103.843, 49.3226, 0.36", "53.601, -105.116, 49.8503, 0.36", "54.17, -106.144, 50.2468, 0.36", "54.9768, -107.432, 50.7454, 0.36", "55.6345, -108.407, 51.0629, 0.36", "56.2366, -109.243, 51.3232, 0.36", "56.9663, -110.248, 51.6159, 0.36", "57.6305, -111.169, 51.8805, 0.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "45.6735, -92.0426, 45.7453, 0.36", "44.128, -93.5684, 45.9311, 0.36", "37.7953, -101.542, 46.9857, 0.36", "31.8509, -109.853, 46.3826, 0.36", "26.6774, -118.685, 46.5289, 0.36", "22.4957, -128.021, 46.1538, 0.36", "16.9605, -136.475, 44.519, 0.36", "11.5738, -145.176, 44.7634, 0.36", "6.17064, -153.756, 43.3571, 0.36", "0.31656, -161.861, 41.1617, 0.36", "-3.90592, -170.349, 37.3012, 0.36", "-9.14115, -178.687, 34.4988, 0.36", "-13.7765, -187.344, 31.6056, 0.36", "-17.4329, -196.693, 29.6044, 0.36", "-21.7824, -205.816, 27.9792, 0.36", "-26.2631, -214.982, 27.1505, 0.36", "-29.8423, -224.566, 27.4839, 0.36", "-31.951, -234.536, 28.4542, 0.36", "-33.6344, -244.632, 28.5824, 0.36", "-33.6697, -254.761, 27.1015, 0.36", "-34.3047, -264.901, 25.8486, 0.36", "-35.8289, -274.725, 23.4085, 0.36", "-38.6151, -283.301, 18.5649, 0.36", "-41.7062, -292.03, 14.202, 0.36", "-43.3523, -301.102, 9.75412, 0.36", "-44.3472, -310.745, 6.46846, 0.36", "-43.477, -319.746, 1.67114, 0.36", "-42.5109, -329.493, -1.30334, 0.36" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "41.1261, -78.024, 40.736, 0.36", "42.1263, -80.2625, 42.0467, 0.24", "44.3817, -83.7825, 44.4628, 0.24", "45.0677, -84.8215, 45.2079, 0.24", "45.9383, -86.1718, 46.2525, 0.12", "46.8202, -87.5788, 47.3652, 0.12", "47.9192, -89.1012, 48.7842, 0.12", "48.433, -89.7834, 49.4673, 0.12", "49.4958, -91.2184, 50.9603, 0.24", "50.8138, -93.0842, 52.9839, 0.24", "51.3794, -93.9847, 53.9132, 0.24", "52.0046, -95.1608, 54.9076, 0.24", "52.7059, -96.8738, 56.0784, 0.24", "53.3904, -99.0795, 57.1122, 0.24", "53.7693, -100.786, 57.5934, 0.24", "54.2359, -103.517, 58.0837, 0.24", "54.6565, -106.962, 58.4466, 0.12", "54.8289, -109.687, 58.4839, 0.12", "54.8023, -113.647, 58.1268, 0.12", "54.7351, -114.496, 57.9596, 0.12", "60.5217, -125.088, 62.1378, 0.12", "66.3174, -135.59, 66.526, 0.12", "74.2187, -145.17, 69.5107, 0.12", "81.5487, -155.579, 70.5433, 0.12", "89.0466, -165.516, 73.4018, 0.12" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "41.1261, -78.024, 40.736, 0.36", "40.2494, -76.984, 40.232, 0.24", "39.5633, -76.1702, 39.8376, 0.24", "38.5981, -75.0253, 39.2828, 0.24", "36.6636, -72.7306, 38.1707, 0.24", "34.3237, -69.955, 36.8256, 0.24", "29.9134, -63.0708, 34.1054, 0.24", "26.519, -55.6401, 31.3662, 0.24" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-26.5948, -16.0685, 16.0472, 0.36", "-27.616, -17.3802, 16.4728, 0.36", "-28.2449, -18.188, 16.7349, 0.36", "-29.0178, -19.1807, 17.057, 0.36", "-29.6142, -19.9468, 17.3055, 0.36", "-34.6762, -25.1839, 18.6976, 0.36", "-39.8359, -30.1138, 20.7128, 0.36", "-45.5024, -34.5346, 22.5393, 0.36", "-50.3345, -39.9024, 24.2207, 0.36", "-55.0205, -45.3034, 26.185, 0.36", "-59.4498, -50.7844, 28.4935, 0.36", "-64.774, -55.7571, 29.8766, 0.36", "-71.063, -59.2761, 31.624, 0.36", "-77.6781, -62.2296, 33.2073, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-26.5948, -16.0685, 16.0472, 0.36", "-29.5139, -13.9281, 18.4839, 0.36", "-31.5714, -12.4196, 20.2013, 0.36", "-41.8734, -6.69566, 28.2479, 0.36", "-51.9166, -1.07904, 36.6875, 0.36", "-62.1313, 4.55219, 44.9089, 0.36", "-73.5419, 9.78751, 51.6935, 0.36", "-83.7883, 14.2479, 60.5681, 0.36", "-95.8814, 17.8637, 67.2258, 0.36", "-107.389, 22.3589, 74.3678, 0.36", "-119.051, 27.6848, 80.6345, 0.36", "-130.921, 29.7573, 88.281, 0.36", "-141.011, 33.5067, 97.6495, 0.36", "-150.78, 36.7395, 107.537, 0.36", "-158.942, 38.8295, 119.055, 0.36", "-167.172, 42.5038, 130.118, 0.36", "-176.53, 48.9128, 138.778, 0.36", "-183.974, 55.8677, 148.77, 0.36", "-193.531, 62.0917, 157.348, 0.36", "-203.58, 67.7309, 165.766, 0.36", "-212.772, 72.2759, 175.69, 0.36", "-221.401, 76.765, 186.132, 0.36", "-229.893, 79.2028, 197.338, 0.36", "-239.155, 80.6251, 208.101, 0.36", "-249.069, 80.4256, 218.363, 0.36", "-258.032, 81.9393, 229.364, 0.36", "-269.27, 83.4385, 238.03, 0.36", "-279.166, 83.9882, 248.297, 0.36", "-288.876, 81.9858, 258.561, 0.36", "-297.28, 81.09, 270.059, 0.36", "-304.037, 79.3066, 282.501, 0.36", "-310.272, 74.5166, 294.41, 0.36", "-317.06, 68.1445, 305.225, 0.36", "-322.783, 63.3695, 317.394, 0.36", "-326.169, 58.1695, 330.245, 0.36" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 23
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-79.929, -17.1856, 12.0752, 0.48", "-83.1539, -18.7964, 11.4425, 0.48", "-84.5, -19.3866, 11.0412, 0.48", "-85.4827, -19.8174, 10.7483, 0.48", "-86.3582, -20.2012, 10.4873, 0.48", "-87.3857, -20.6517, 10.181, 0.48", "-89.1222, -21.413, 9.6633, 0.48", "-95.5539, -24.8309, 8.31587, 0.48", "-101.789, -28.1122, 6.03126, 0.48", "-107.674, -31.5696, 3.1537, 0.48", "-113.262, -35.826, 0.802993, 0.48", "-118.528, -40.288, -1.88437, 0.48", "-124.234, -44.1652, -4.58303, 0.48", "-130.388, -47.356, -7.19298, 0.48", "-135.999, -51.753, -9.20466, 0.48", "-141.716, -55.955, -11.3312, 0.48", "-148.115, -59.338, -12.9011, 0.48", "-153.576, -63.7835, -15.2005, 0.48", "-159.651, -67.5722, -17.0981, 0.48", "-165.124, -72.1809, -19.0146, 0.48", "-170.456, -76.2757, -22.1243, 0.48", "-176.624, -79.6725, -24.4223, 0.48", "-182.725, -82.0782, -27.8645, 0.48", "-189.212, -83.4578, -31.1636, 0.48", "-195.994, -85.0228, -33.6977, 0.48", "-203.213, -85.6058, -35.2504, 0.48", "-210.613, -85.5494, -35.5652, 0.48", "-217.878, -84.1182, -35.3823, 0.48", "-224.85, -82.0169, -34.0239, 0.48", "-231.631, -79.2168, -33.0046, 0.48", "-237.946, -75.6765, -31.4377, 0.48", "-244.423, -72.2588, -30.3251, 0.48", "-250.049, -67.8363, -28.4149, 0.48", "-255.417, -63.3654, -25.9531, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-79.929, -17.1856, 12.0752, 0.48", "-82.123, -17.6779, 11.7813, 0.48", "-82.914, -17.659, 11.6256, 0.48", "-83.8708, -17.6361, 11.4373, 0.48", "-85.0376, -17.6082, 11.2076, 0.48", "-85.6605, -17.5933, 11.085, 0.48", "-87.0031, -17.5611, 10.8208, 0.48", "-88.3331, -17.5127, 10.6196, 0.48", "-93.9099, -16.5109, 9.53354, 0.48", "-99.2953, -15.2242, 7.91358, 0.48", "-104.938, -15.0853, 6.71758, 0.48", "-110.308, -15.5359, 4.65788, 0.48", "-115.415, -15.7704, 1.98564, 0.48", "-120.057, -16.0493, -1.42942, 0.48", "-124.245, -16.3304, -5.38706, 0.48", "-128.309, -15.9369, -9.4629, 0.48", "-132.894, -15.9858, -12.9638, 0.48", "-137.704, -16.0859, -16.1473, 0.48", "-142.8, -17.2927, -18.567, 0.48", "-148.057, -19.2277, -19.9488, 0.48", "-153.557, -20.9401, -20.2562, 0.48", "-159.109, -22.466, -19.8895, 0.48", "-164.585, -24.2588, -20.1752, 0.48", "-169.522, -27.0816, -21.1466, 0.48", "-174.822, -29.2473, -21.8519, 0.48", "-180.265, -31.0341, -22.5328, 0.48", "-185.507, -33.2149, -23.5547, 0.48", "-190.532, -35.9803, -24.1757, 0.48", "-195.453, -38.7385, -25.3848, 0.48", "-200.342, -41.7987, -25.4983, 0.48", "-205.023, -45.1009, -24.8149, 0.48", "-210.18, -47.6852, -24.7062, 0.48", "-214.701, -51.2655, -24.871, 0.48", "-219.267, -54.7264, -24.1991, 0.48" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-22.9347, 84.4857, -14.4985, 0.84", "-23.6666, 87.1325, -14.7671, 0.84", "-24.3106, 90.103, -14.9889, 0.84", "-24.8815, 93.767, -15.1576, 0.84", "-25.1705, 96.393, -15.2116, 0.84", "-25.4181, 99.1849, -15.2208, 0.84", "-25.5445, 100.652, -15.21, 0.84", "-25.6579, 102.507, -15.1438, 0.84", "-25.663, 104.057, -15.024, 0.84", "-25.5655, 105.653, -14.8671, 0.84", "-25.4363, 107.34, -14.692, 0.84", "-25.2509, 109.945, -14.4229, 0.84", "-25.1799, 111.603, -14.2722, 0.84", "-25.1708, 113.166, -14.155, 0.84", "-25.1497, 115.387, -13.9899, 0.84", "-25.0813, 116.906, -13.8623, 0.84", "-24.9451, 118.63, -13.6892, 0.84", "-24.8651, 119.731, -13.5716, 0.84", "-24.7717, 121.335, -13.3969, 0.84", "-24.6546, 123.268, -13.1599, 0.84", "-24.5336, 125.036, -12.976, 0.84", "-24.4034, 127.208, -12.7876, 0.84", "-24.2984, 129.641, -12.6284, 0.84", "-24.2483, 131.786, -12.626, 0.84", "-24.2731, 134.044, -12.7434, 0.84", "-24.3868, 136.006, -12.9282, 0.84", "-24.5515, 137.943, -13.1798, 0.84", "-24.6822, 139.268, -13.396, 0.84", "-25.1182, 142.862, -14.1038, 0.84", "-25.5318, 145.236, -14.6892, 0.84", "-26.0658, 147.755, -15.3734, 0.84", "-26.3381, 149.267, -15.817, 0.84", "-26.5396, 150.896, -16.292, 0.84", "-26.6842, 152.81, -16.8444, 0.84", "-26.8393, 155.222, -17.4446, 0.84", "-26.8697, 156.567, -17.7346, 0.84", "-26.8744, 159.835, -18.2772, 0.84", "-26.9403, 162.776, -18.618, 0.84", "-27.0362, 165.85, -18.8494, 0.84", "-27.1061, 167.913, -18.9497, 0.84", "-27.286, 171.149, -19.0386, 0.84", "-27.5092, 173.723, -19.1488, 0.84", "-27.8894, 177.094, -19.3256, 0.84", "-28.1709, 179.321, -19.5778, 0.84", "-28.4361, 181.305, -19.8834, 0.84", "-28.7044, 183.597, -20.3219, 0.84", "-28.9077, 185.477, -20.6892, 0.84", "-29.1224, 188.283, -21.2843, 0.84", "-29.2445, 190.916, -21.8501, 0.84", "-29.3489, 193.082, -22.3115, 0.84", "-29.4263, 195.113, -22.7165, 0.84", "-29.4613, 196.566, -22.9976, 0.84", "-29.6059, 199.085, -23.3802, 0.84" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-22.9347, 84.4857, -14.4985, 0.84", "-24.5761, 85.0441, -15.3049, 0.24", "-25.4981, 85.3549, -15.5905, 0.24", "-26.8348, 85.8692, -15.8311, 0.24", "-28.057, 86.4547, -15.9399, 0.24", "-28.7594, 86.8507, -15.9924, 0.24", "-30.7929, 88.1224, -16.1821, 0.24", "-32.9325, 89.5706, -16.3274, 0.24", "-34.1659, 90.49, -16.4241, 0.24", "-35.7264, 91.823, -16.5541, 0.24", "-37.2045, 93.2687, -16.7026, 0.24", "-38.4097, 94.5703, -16.8676, 0.24", "-39.3693, 95.676, -17.0672, 0.24", "-40.4538, 96.824, -17.3381, 0.24", "-41.7581, 98.0031, -17.6363, 0.24", "-43.1463, 99.117, -17.8744, 0.24", "-44.0064, 99.7647, -17.9671, 0.24", "-45.0618, 100.464, -18.0723, 0.24", "-47.4731, 101.941, -18.337, 0.24", "-49.2878, 102.97, -18.5881, 0.24", "-50.8598, 103.806, -18.8058, 0.24", "-51.8006, 104.306, -18.9186, 0.24", "-53.8856, 105.513, -19.118, 0.24", "-55.0475, 106.238, -19.1115, 0.24", "-55.8902, 106.806, -19.0597, 0.24", "-57.7404, 108.143, -18.792, 0.24", "-59.5485, 109.457, -18.3454, 0.24", "-62.0157, 111.244, -17.5901, 0.24", "-65.4337, 113.782, -16.3573, 0.24", "-67.0417, 114.988, -15.712, 0.24", "-69.1, 116.592, -14.8471, 0.24", "-71.9966, 118.866, -13.6289, 0.24", "-73.2815, 119.885, -13.093, 0.24", "-74.5115, 120.864, -12.6007, 0.24", "-75.8456, 121.845, -12.1545, 0.24", "-78.1432, 123.33, -11.4746, 0.24", "-80.5467, 124.806, -10.8627, 0.24", "-82.3339, 125.903, -10.4981, 0.24", "-83.755, 126.73, -10.2406, 0.24", "-86.1676, 128.065, -9.85939, 0.24", "-88.2335, 129.216, -9.62616, 0.24", "-89.569, 130.026, -9.50982, 0.24", "-90.9329, 130.983, -9.43913, 0.24", "-92.5232, 132.217, -9.39081, 0.24", "-94.8362, 134.249, -9.36061, 0.24", "-97.3791, 136.898, -9.36138, 0.12", "-98.7461, 138.418, -9.39218, 0.12", "-99.8937, 139.751, -9.50646, 0.12", "-100.503, 140.531, -9.61809, 0.12", "-100.955, 141.197, -9.73754, 0.12", "-101.408, 141.946, -9.90048, 0.12", "-102.389, 143.835, -10.3151, 0.12", "-103.671, 146.108, -10.9065, 0.12", "-105.174, 148.592, -11.5368, 0.12", "-106.425, 150.527, -12.0018, 0.12", "-107.513, 152.131, -12.3563, 0.12", "-108.706, 153.941, -12.673, 0.12", "-110.492, 156.808, -13.0066, 0.12", "-111.358, 158.145, -13.1016, 0.12", "-112.35, 159.669, -13.1961, 0.12", "-113.522, 161.495, -13.2892, 0.12", "-114.686, 163.452, -13.342, 0.12", "-115.597, 165.073, -13.2529, 0.12", "-116.326, 166.541, -13.0752, 0.12", "-117.3, 168.457, -12.7902, 0.12", "-118.779, 171.289, -12.2175, 0.12", "-119.522, 172.718, -11.8578, 0.12", "-120.945, 175.41, -11.1142, 0.12", "-121.955, 177.299, -10.5259, 0.12", "-122.474, 178.194, -10.2427, 0.12", "-123.291, 179.408, -9.90071, 0.12", "-124.586, 181.091, -9.53586, 0.12", "-125.95, 182.808, -9.29944, 0.12", "-126.93, 184.05, -9.23862, 0.12", "-129.326, 186.941, -9.21859, 0.12", "-130.868, 188.683, -9.30295, 0.12", "-131.853, 189.74, -9.40118, 0.12", "-133.221, 191.211, -9.57581, 0.12", "-134.037, 192.165, -9.67054, 0.12", "-134.84, 193.315, -9.77302, 0.12", "-136.352, 195.913, -9.99421, 0.12", "-137.201, 197.607, -10.0838, 0.12", "-138.121, 199.832, -10.1068, 0.12", "-138.832, 201.931, -10.0336, 0.12", "-139.502, 204.542, -9.90941, 0.12", "-139.79, 205.96, -9.85167, 0.12", "-140.074, 207.555, -9.81042, 0.12", "-140.473, 209.676, -9.82495, 0.12", "-140.803, 211.455, -9.87238, 0.12", "-141.291, 214.278, -9.94434, 0.12", "-141.61, 215.942, -9.96232, 0.12", "-142.007, 218.111, -9.95453, 0.12", "-142.311, 219.891, -10.0102, 0.12", "-142.806, 222.619, -10.1268, 0.12", "-143.27, 225.377, -10.2103, 0.12", "-143.547, 227.361, -10.1704, 0.12", "-143.713, 228.945, -10.101, 0.12", "-143.938, 231.777, -9.9869, 0.12" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "57.6305, -111.169, 51.8805, 0.36", "58.2382, -111.816, 52.076, 0.36", "58.6779, -112.314, 52.2165, 0.36", "59.3154, -112.948, 52.054, 0.36", "59.9958, -113.521, 51.7225, 0.36", "60.551, -113.989, 51.4519, 0.36", "61.2352, -114.566, 51.1185, 0.36", "61.6442, -114.903, 50.8387, 0.36", "64.0924, -116.875, 48.66, 0.36", "64.4991, -117.154, 48.1905, 0.36", "69.1146, -122.247, 46.6584, 0.36", "74.5419, -126.636, 45.7221, 0.36", "80.3878, -130.246, 44.1793, 0.36", "86.8573, -133.006, 43.8319, 0.36", "93.6607, -134.762, 44.3014, 0.36", "100.597, -135.957, 44.5198, 0.36", "107.598, -136.555, 44.0475, 0.36", "114.381, -138.023, 42.856, 0.36", "120.92, -139.772, 40.9126, 0.36", "126.966, -142.711, 38.814, 0.36", "133.713, -144.029, 37.2865, 0.36", "140.4, -144.766, 35.206, 0.36", "146.747, -145.43, 32.2292, 0.36", "153.378, -147.006, 30.4555, 0.36", "159.992, -149.42, 30.3704, 0.36", "166.226, -152.634, 29.7342, 0.36", "172.803, -155.06, 30.4069, 0.36", "179.587, -156.861, 29.8449, 0.36", "185.835, -159.764, 28.3833, 0.36", "192.376, -161.883, 26.8644, 0.36", "198.624, -165.119, 26.5638, 0.36", "204.612, -168.562, 27.9372, 0.36" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "57.6305, -111.169, 51.8805, 0.36", "55.4527, -111.795, 52.9433, 0.36", "44.8798, -112.149, 58.6648, 0.36", "33.7939, -112.399, 63.3218, 0.36", "23.3062, -112.473, 69.2084, 0.36", "13.0564, -114.756, 75.0712, 0.36", "3.78541, -115.087, 82.7256, 0.36", "-5.7375, -114.26, 90.0248, 0.36", "-16.1828, -112.612, 95.7543, 0.36", "-25.9486, -109.392, 101.992, 0.36" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-29.6059, 199.085, -23.3802, 0.84", "-30.3525, 202.833, -23.5146, 0.84", "-30.8237, 204.943, -23.6038, 0.84", "-31.3449, 207.04, -23.687, 0.84", "-31.9901, 209.529, -23.7571, 0.84", "-32.4431, 211.611, -23.8409, 0.84", "-32.7536, 213.115, -23.907, 0.84", "-33.0815, 215.207, -23.9232, 0.84", "-33.5257, 218.156, -23.9446, 0.84", "-34.0621, 221.425, -23.9842, 0.84", "-34.8222, 226.129, -24.0135, 0.84", "-35.1895, 228.677, -24.0388, 0.84", "-35.8978, 234.496, -24.1655, 0.84", "-36.1295, 236.835, -24.23, 0.84", "-36.3206, 238.839, -24.2961, 0.84", "-36.6018, 241.65, -24.3877, 0.84", "-36.9925, 244.9, -24.4745, 0.84", "-37.3336, 247.846, -24.5626, 0.84", "-37.5711, 250.527, -24.7083, 0.84", "-37.7554, 254.008, -24.9, 0.84", "-37.8444, 256.125, -25.0012, 0.84", "-37.9466, 257.794, -25.0714, 0.84", "-38.1333, 260.483, -25.0721, 0.84", "-38.2314, 264.044, -25.1102, 0.84", "-38.2297, 264.162, -25.1154, 0.84" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-29.6059, 199.085, -23.3802, 0.84", "-28.6208, 199.972, -22.1167, 0.24", "-28.1402, 200.563, -21.18, 0.24", "-27.6151, 201.367, -19.9738, 0.24", "-27.2044, 202.05, -19.0232, 0.24", "-26.3826, 203.6, -17.1264, 0.24", "-25.72, 204.888, -15.6736, 0.24", "-24.8639, 206.776, -13.7052, 0.24", "-24.5251, 207.651, -12.8787, 0.24", "-24.1088, 208.783, -11.9609, 0.24", "-23.4662, 210.415, -10.8842, 0.24", "-22.777, 212.091, -10.0446, 0.24", "-21.8166, 214.656, -8.94652, 0.24", "-21.37, 215.757, -8.51071, 0.24", "-20.645, 217.44, -7.90943, 0.24", "-19.8315, 219.277, -7.32975, 0.24", "-18.7002, 221.798, -6.65105, 0.24", "-17.923, 223.543, -6.26855, 0.24", "-16.8631, 225.84, -5.70243, 0.24", "-15.8102, 227.878, -5.06369, 0.24", "-15.2634, 228.859, -4.64181, 0.24", "-14.5906, 229.907, -4.12575, 0.24", "-12.8918, 232.208, -2.919, 0.24", "-11.4726, 234.059, -1.95439, 0.24", "-9.95251, 236.092, -0.816007, 0.24", "-8.95295, 237.366, -0.0383425, 0.24", "-8.01972, 238.511, 0.629583, 0.24", "-7.32073, 239.354, 1.06046, 0.24", "-6.39735, 240.433, 1.50406, 0.24", "-5.14122, 241.834, 1.85594, 0.24", "-3.68486, 243.518, 2.14038, 0.24", "-2.73976, 244.643, 2.2868, 0.24", "-1.18229, 246.507, 2.5482, 0.24", "0.43347, 248.358, 2.79974, 0.24", "2.4036, 250.65, 3.05161, 0.24", "3.7974, 252.427, 3.11428, 0.24", "4.86012, 253.921, 3.08403, 0.24", "5.67204, 255.131, 2.97961, 0.24", "6.305, 256.232, 2.80233, 0.24", "7.19837, 258.23, 2.35785, 0.24", "8.16725, 260.565, 1.61141, 0.24", "8.85932, 262.296, 0.900082, 0.24", "9.53551, 264.21, 0.0556369, 0.24", "10.1035, 266.052, -0.835629, 0.24", "10.4335, 267.327, -1.53071, 0.24", "11.065, 269.968, -2.94981, 0.24", "11.4835, 272.11, -4.01604, 0.24", "11.8295, 273.999, -4.99528, 0.24", "12.0988, 275.648, -5.82233, 0.24", "12.6973, 279.562, -7.62459, 0.12", "13.112, 282.283, -8.75487, 0.12", "13.3187, 283.854, -9.34422, 0.12", "14.0694, 288.154, -10.9251, 0.12", "14.4006, 289.653, -11.4221, 0.12", "15.0685, 292.09, -12.006, 0.12", "15.6484, 293.834, -12.2845, 0.12", "15.9589, 294.654, -12.3831, 0.12", "16.8518, 296.822, -12.481, 0.12", "17.4008, 298.187, -12.4365, 0.12", "18.4381, 300.772, -12.2996, 0.12", "19.2485, 303.069, -12.2498, 0.12", "20.0041, 305.724, -12.2632, 0.12", "20.4307, 307.506, -12.3183, 0.12", "20.7832, 309.271, -12.4494, 0.12", "21.3725, 312.215, -12.8131, 0.12", "21.98, 315.244, -13.1545, 0.12", "22.4497, 317.341, -13.3157, 0.12", "23.2027, 320.017, -13.5121, 0.12", "23.9835, 322.116, -13.63, 0.12", "25.0416, 324.259, -13.6715, 0.12", "26.9663, 327.4, -13.3378, 0.12", "27.8749, 328.567, -13.0646, 0.12", "29.3772, 330.082, -12.4493, 0.12", "30.4488, 330.939, -11.8832, 0.12", "31.1676, 331.407, -11.4481, 0.12", "33.7216, 332.801, -9.75258, 0.12", "35.765, 333.877, -8.23406, 0.12", "37.7075, 335.009, -6.49483, 0.12", "38.8058, 335.706, -5.36235, 0.12", "39.5288, 336.188, -4.5972, 0.12", "40.8842, 337.136, -3.15616, 0.12", "43.1635, 338.75, -0.789222, 0.12", "43.7702, 339.204, -0.114225, 0.12", "44.3775, 339.672, 0.563451, 0.12", "45.5299, 340.544, 1.86812, 0.12", "46.1143, 340.986, 2.52571, 0.12", "47.3174, 341.873, 3.78813, 0.12", "48.3994, 342.552, 4.82354, 0.12", "50.1355, 343.633, 6.52308, 0.12", "50.7503, 344.015, 7.14991, 0.12", "51.6308, 344.55, 8.07858, 0.12", "52.6022, 345.135, 9.08414, 0.12", "53.9145, 345.905, 10.3924, 0.12" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-143.938, 231.777, -9.9869, 0.12", "-145.333, 231.516, -10.6552, 0.12", "-146.761, 231.249, -11.34, 0.12", "-148.06, 231.006, -11.9628, 0.12" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-143.938, 231.777, -9.9869, 0.12", "-144.242, 233.814, -9.65515, 0.12", "-144.475, 235.38, -9.40795, 0.12", "-144.925, 237.735, -9.09475, 0.12", "-145.468, 240.354, -8.77376, 0.12", "-145.865, 242.213, -8.55454, 0.12", "-146.281, 243.872, -8.33068, 0.12", "-147.223, 246.821, -7.97092, 0.12", "-147.908, 248.742, -7.73861, 0.12", "-148.568, 250.436, -7.53741, 0.12", "-149.32, 252.214, -7.34394, 0.12", "-150.17, 254.313, -7.10204, 0.12", "-150.877, 256.289, -6.84556, 0.12", "-151.497, 258.043, -6.61125, 0.12", "-152.103, 259.95, -6.33683, 0.12", "-152.732, 262.044, -6.0582, 0.12", "-153.396, 264.7, -5.74399, 0.12", "-153.809, 267.396, -5.48153, 0.12" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "-38.2297, 264.162, -25.1154, 0.84", "-31.98, 266.505, -31.6364, 0.48", "-30.6892, 266.919, -32.8827, 0.48", "-29.7937, 267.181, -33.7124, 0.48", "-29.6308, 267.232, -33.8575, 0.48", "-28.8352, 267.498, -34.5517, 0.48", "-28.6308, 267.568, -34.7213, 0.48", "-25.9908, 268.436, -36.1479, 0.48", "-25.8751, 268.476, -36.2103, 0.48", "-24.3559, 269.027, -36.996, 0.48", "-24.233, 269.077, -37.0557, 0.48", "-23.5414, 269.362, -37.3477, 0.48", "-23.4314, 269.405, -37.3768, 0.48", "-22.3341, 269.716, -37.3894, 0.48", "-21.5118, 269.846, -37.3554, 0.48", "-21.4474, 269.849, -37.3504, 0.48", "-20.0947, 269.903, -37.3147, 0.48", "-19.7637, 269.913, -37.3259, 0.48", "-18.6186, 269.959, -37.3493, 0.48", "-17.8645, 269.991, -37.376, 0.48", "-17.5651, 270.011, -37.3793, 0.48", "-16.3226, 270.159, -37.3614, 0.48", "-15.8446, 270.244, -37.3346, 0.48", "-14.2014, 270.547, -37.1888, 0.48", "-13.9341, 270.602, -37.1583, 0.48", "-12.7522, 270.822, -37.0116, 0.48", "-12.6985, 270.835, -36.9994, 0.48", "-11.7161, 271.146, -36.6464, 0.48", "-11.6553, 271.174, -36.6182, 0.48", "-10.9204, 271.664, -36.2141, 0.48", "-10.8646, 271.7, -36.1844, 0.48", "-9.55946, 272.57, -35.5261, 0.48", "-9.51367, 272.595, -35.5047, 0.48", "-8.80697, 272.947, -35.1621, 0.48", "-8.40932, 273.088, -34.9533, 0.48", "-7.29161, 273.364, -34.4923, 0.48", "-7.22374, 273.377, -34.4697, 0.48", "-6.18909, 273.615, -34.3356, 0.48", "-5.80975, 273.754, -34.3313, 0.48", "-4.79291, 274.222, -34.3988, 0.48", "-3.50721, 274.916, -34.7661, 0.48", "-3.41635, 274.97, -34.805, 0.48", "-1.75928, 275.992, -35.9783, 0.36", "-0.809313, 276.542, -36.847, 0.36", "-0.761143, 276.566, -36.8962, 0.36", "1.3533, 277.511, -39.197, 0.36", "1.41685, 277.538, -39.2672, 0.36", "4.76904, 278.848, -42.9985, 0.36", "7.83745, 279.881, -46.3732, 0.36", "11.0039, 280.857, -49.8112, 0.36", "11.0483, 280.87, -49.8564, 0.36", "11.9566, 281.131, -50.7039, 0.36", "12.7073, 281.345, -51.3448, 0.36", "15.8784, 282.284, -53.5998, 0.36", "16.3803, 282.463, -53.9043, 0.36", "18.6713, 283.417, -55.8049, 0.36", "20.1584, 284.046, -57.1862, 0.36", "20.5373, 284.207, -57.5254, 0.36", "21.8906, 284.79, -58.7126, 0.36", "22.0369, 284.852, -58.8372, 0.36", "33.2159, 289.306, -68.2084, 0.36", "33.365, 289.361, -68.3332, 0.36", "41.6996, 292.02, -75.1372, 0.36", "41.7762, 292.041, -75.1937, 0.36", "44.3063, 292.588, -77.0443, 0.36", "44.8288, 292.703, -77.389, 0.36", "46.4018, 293.08, -78.3445, 0.36", "46.624, 293.133, -78.4655, 0.36", "50.7235, 294.084, -80.6346, 0.36", "51.2472, 294.209, -80.9129, 0.36", "53.3234, 294.76, -82.0289, 0.36", "58.0719, 296.063, -84.5411, 0.36", "58.1553, 296.086, -84.5854, 0.36", "59.3023, 296.414, -85.168, 0.36", "59.6069, 296.507, -85.3069, 0.36", "62.0402, 297.229, -86.4093, 0.36", "62.1245, 297.252, -86.4523, 0.36" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "-38.2297, 264.162, -25.1154, 0.84", "-38.6826, 266.471, -25.4225, 0.84", "-39.0492, 268.864, -25.6793, 0.84", "-39.5242, 272.382, -25.9991, 0.84", "-39.8237, 274.657, -26.1571, 0.84", "-40.2773, 277.666, -26.3572, 0.84", "-40.6032, 279.761, -26.5579, 0.84", "-40.9255, 282.137, -26.8668, 0.84", "-41.0687, 283.117, -26.9973, 0.84", "-41.4523, 285.385, -27.3466, 0.84", "-42.0163, 288.657, -27.9299, 0.84", "-42.5947, 291.646, -28.5258, 0.84", "-43.1534, 294.211, -29.0479, 0.84", "-43.7091, 296.97, -29.6295, 0.84", "-44.0611, 299.663, -30.2459, 0.84", "-44.1791, 301.546, -30.6712, 0.84", "-44.2255, 303.109, -30.9667, 0.84", "-44.2378, 305.659, -31.3657, 0.84", "-44.1671, 308.529, -31.8245, 0.84", "-43.9893, 311.455, -32.3363, 0.84", "-43.7532, 314.845, -32.8754, 0.84", "-43.4961, 318.728, -33.4464, 0.84", "-43.3556, 322.526, -33.9888, 0.84", "-43.3862, 325.416, -34.4091, 0.84", "-43.4863, 328.028, -34.7433, 0.84", "-43.5186, 329.345, -34.9053, 0.84", "-43.4966, 331.66, -35.2284, 0.84", "-43.4467, 333.909, -35.5641, 0.84", "-43.4572, 334.431, -35.6456, 0.84", "-43.5056, 337.01, -36.0433, 0.84", "-43.4844, 339.983, -36.461, 0.84", "-43.4045, 343.374, -36.8549, 0.84", "-43.3458, 345.851, -37.0805, 0.84", "-43.3331, 349.424, -37.2153, 0.84", "-43.381, 352.544, -37.149, 0.84", "-43.484, 355.125, -36.9423, 0.84", "-43.6119, 357.812, -36.6366, 0.84", "-43.7216, 360.11, -36.3522, 0.84", "-43.8264, 362.8, -36.059, 0.84", "-43.9164, 365.086, -35.8805, 0.84", "-43.9752, 366.028, -35.9004, 0.84", "-44.1706, 368.958, -36.3241, 0.84", "-44.3866, 371.478, -36.9245, 0.84", "-44.6106, 373.25, -37.4697, 0.84", "-44.8414, 374.717, -37.9616, 0.84", "-45.3778, 377.475, -38.7996, 0.84", "-45.6301, 378.643, -39.0785, 0.84", "-46.1083, 380.616, -39.382, 0.84", "-46.462, 381.997, -39.5089, 0.84", "-47.1708, 384.378, -39.5754, 0.84", "-47.5871, 385.657, -39.5632, 0.84", "-48.1483, 387.284, -39.4868, 0.84", "-48.7258, 389.077, -39.395, 0.84", "-49.1438, 390.569, -39.3573, 0.84", "-49.7062, 392.459, -39.363, 0.84", "-50.1818, 393.697, -39.4217, 0.84" ],
    "parent" : "apic_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "-50.1818, 393.697, -39.4217, 0.84", "-50.2615, 396.897, -39.9322, 0.84", "-50.2681, 399.998, -40.3725, 0.84", "-50.2672, 401.611, -40.5652, 0.84", "-50.2579, 404.951, -41.0228, 0.84", "-50.2566, 407.82, -41.4388, 0.84", "-50.249, 411.031, -41.8774, 0.84", "-50.2529, 413.685, -42.2184, 0.84", "-50.2409, 415.631, -42.4555, 0.84", "-50.1448, 418.373, -42.6468, 0.84", "-50.1216, 418.994, -42.6554, 0.84", "-50.1389, 421.041, -42.5995, 0.84", "-50.2374, 423.061, -42.5022, 0.84", "-50.368, 425.626, -42.3926, 0.72", "-50.555, 428.824, -42.1807, 0.72", "-50.7369, 431.538, -41.9928, 0.72", "-50.8921, 433.666, -41.9085, 0.72", "-51.0596, 435.881, -41.8784, 0.72", "-51.2423, 438.178, -41.8906, 0.72", "-51.4112, 440.034, -41.9464, 0.72", "-51.6838, 442.316, -42.0898, 0.72", "-51.9081, 444.058, -42.1713, 0.72", "-52.1941, 445.692, -42.1242, 0.72", "-52.4666, 447.179, -42.0632, 0.72", "-52.8588, 448.846, -42.0515, 0.72", "-53.4466, 450.982, -42.0895, 0.72", "-54.2246, 453.644, -42.1484, 0.72", "-55.0742, 457.238, -42.3347, 0.72", "-55.5488, 460.371, -42.5933, 0.72", "-55.6443, 463.171, -42.8588, 0.72", "-55.4879, 464.784, -43.007, 0.72", "-55.1933, 466.22, -43.1646, 0.72", "-54.2632, 469.494, -43.6336, 0.6", "-53.6823, 471.225, -43.8474, 0.6", "-53.4045, 472.403, -43.8345, 0.6", "-53.1874, 473.858, -43.7328, 0.6", "-53.1343, 475.321, -43.6198, 0.6", "-53.2907, 476.932, -43.529, 0.6", "-53.5264, 478.124, -43.4982, 0.6", "-54.8009, 482.586, -43.2498, 0.6", "-55.7022, 485.292, -43.082, 0.6", "-56.2332, 486.752, -42.989, 0.6", "-57.1005, 489.091, -42.8083, 0.6", "-57.6816, 490.643, -42.6632, 0.6", "-59.2789, 494.979, -42.1591, 0.6", "-60.3045, 497.828, -41.7563, 0.6", "-61.2862, 500.62, -41.3336, 0.6", "-62.1, 503.01, -40.9618, 0.6", "-63.0414, 505.824, -40.4664, 0.6", "-63.6641, 507.714, -40.1445, 0.6", "-64.1776, 509.276, -39.9513, 0.6", "-64.7961, 510.958, -39.726, 0.6", "-65.293, 512.272, -39.5448, 0.6", "-66.4938, 515.254, -39.2107, 0.6", "-67.3081, 517.204, -39.0508, 0.6", "-68.5077, 520.141, -38.8425, 0.6", "-69.3849, 522.379, -38.6898, 0.6", "-70.1862, 524.505, -38.5647, 0.6", "-71.0387, 526.775, -38.4964, 0.6", "-71.6751, 528.709, -38.5403, 0.6", "-72.3869, 531.178, -38.6499, 0.6", "-72.7281, 532.542, -38.7527, 0.6", "-73.2082, 534.493, -38.9903, 0.6", "-73.603, 536.178, -39.2602, 0.6", "-74.2675, 539.985, -39.8529, 0.6", "-74.4684, 541.495, -40.0868, 0.6", "-74.6166, 542.919, -40.2984, 0.6", "-74.717, 544.192, -40.4289, 0.6", "-74.8265, 545.86, -40.5096, 0.6", "-74.9765, 548.187, -40.5649, 0.6", "-75.1116, 550.026, -40.5914, 0.6", "-75.2502, 551.833, -40.6165, 0.6", "-75.4469, 554.834, -40.6092, 0.6", "-75.5814, 557.375, -40.6753, 0.6", "-75.7548, 561.575, -40.9077, 0.6", "-75.7867, 564.927, -41.0907, 0.6", "-75.7259, 568.02, -41.2284, 0.6", "-75.6305, 571.253, -41.3511, 0.6", "-75.5225, 575.451, -41.4725, 0.6", "-75.4424, 578.244, -41.5236, 0.6", "-75.2744, 583.626, -41.4712, 0.48", "-75.2016, 585.578, -41.4214, 0.48", "-75.1002, 588.852, -41.3235, 0.48", "-75.0963, 592.484, -41.1959, 0.48", "-75.1392, 595.475, -41.099, 0.48", "-75.1946, 597.71, -41.0773, 0.48", "-75.262, 599.61, -41.1174, 0.48", "-75.3483, 602.022, -41.2051, 0.48", "-75.4235, 604.29, -41.2907, 0.48", "-75.6377, 608.925, -41.4409, 0.48", "-75.9845, 613.645, -41.548, 0.48", "-76.0779, 615.144, -41.601, 0.36", "-76.1626, 617.278, -41.6527, 0.36", "-76.1681, 618.959, -41.6632, 0.36", "-76.1376, 621.366, -41.6383, 0.36", "-76.1235, 623.492, -41.5582, 0.36", "-76.0498, 625.837, -41.5023, 0.36", "-75.9659, 627.324, -41.4634, 0.36", "-75.8022, 629.637, -41.4974, 0.36", "-75.7321, 632.198, -41.542, 0.36", "-75.719, 635.234, -41.617, 0.36", "-75.8296, 637.661, -41.6308, 0.36", "-76.1645, 640.651, -41.6218, 0.36", "-76.7022, 644.575, -41.6316, 0.36", "-77.294, 648.692, -41.681, 0.36", "-77.763, 651.524, -41.6608, 0.36", "-78.3187, 654.396, -41.5418, 0.36", "-78.7379, 656.596, -41.3743, 0.36", "-79.3014, 659.194, -41.0067, 0.36", "-79.8707, 661.601, -40.5341, 0.36", "-80.4404, 664.089, -40.0359, 0.36", "-81.0008, 666.456, -39.5257, 0.36", "-81.619, 669.461, -39.0088, 0.36", "-82.1919, 672.433, -38.5227, 0.36", "-82.5996, 674.81, -38.1933, 0.36", "-83.0768, 678.23, -37.842, 0.36", "-83.5645, 682.577, -37.6528, 0.36", "-83.9504, 686.529, -37.6198, 0.36", "-84.1559, 689.182, -37.6649, 0.36", "-84.2218, 692.348, -37.7768, 0.36", "-84.1808, 694.95, -37.8725, 0.36", "-84.0618, 698.524, -38.0302, 0.36", "-83.9757, 700.636, -38.0998, 0.36", "-83.8662, 703.19, -38.148, 0.36", "-83.7704, 705.538, -38.2298, 0.36", "-83.7511, 706.437, -38.2974, 0.36", "-83.5748, 708.569, -38.4515, 0.36", "-83.3957, 709.984, -38.5619, 0.36", "-83.1425, 712.273, -38.7708, 0.36", "-82.9825, 714.208, -38.9418, 0.36", "-82.6313, 718.092, -39.2334, 0.36", "-82.289, 721.76, -39.4259, 0.36", "-82.0833, 724.048, -39.5032, 0.36", "-81.8803, 726.773, -39.5312, 0.36", "-81.713, 729.314, -39.4845, 0.36", "-81.5587, 732.151, -39.3599, 0.36", "-81.487, 734.731, -39.1988, 0.36", "-81.4982, 737.379, -39.0837, 0.36", "-81.5355, 739.953, -38.9679, 0.36", "-81.6107, 742.946, -38.8352, 0.36", "-81.7177, 744.885, -38.7576, 0.36", "-81.8875, 747.031, -38.6508, 0.36", "-82.0468, 749.197, -38.4994, 0.36", "-82.3723, 752.368, -38.1779, 0.36", "-82.6527, 755.054, -37.9796, 0.36", "-82.9183, 757.23, -37.906, 0.36", "-83.1439, 759.177, -37.9185, 0.36", "-83.2815, 761.013, -38.0554, 0.36", "-83.4586, 763.739, -38.462, 0.36", "-83.6427, 767.819, -39.2597, 0.36", "-83.7083, 769.41, -39.6205, 0.36", "-83.771, 771.237, -40.0491, 0.36", "-83.7914, 774.49, -40.8685, 0.36", "-83.6931, 777.921, -41.7254, 0.36", "-83.5521, 780.86, -42.4125, 0.36", "-83.4049, 783.771, -42.9612, 0.36", "-83.2304, 786.526, -43.4205, 0.36", "-83.024, 789.458, -43.9265, 0.36", "-82.9339, 791.243, -44.2371, 0.36", "-82.8993, 796.823, -45.2683, 0.36", "-82.895, 799.679, -45.8212, 0.36", "-82.9386, 802.488, -46.3736, 0.36", "-83.1759, 807.255, -47.3178, 0.36", "-83.4522, 809.887, -47.8139, 0.36", "-84.1561, 814.886, -48.7887, 0.36" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "-50.1818, 393.697, -39.4217, 0.84", "-52.9066, 396.183, -41.3626, 0.48", "-54.1268, 397.042, -42.1914, 0.48", "-55.2174, 397.713, -43.0029, 0.48", "-55.9198, 398.096, -43.5302, 0.48", "-56.8567, 398.519, -44.2011, 0.48", "-58.2342, 399.113, -45.1572, 0.48", "-59.1286, 399.424, -45.6886, 0.48", "-60.7808, 399.963, -46.6776, 0.48", "-61.7844, 400.347, -47.2598, 0.48", "-63.6431, 401.255, -48.2475, 0.48", "-64.5234, 401.767, -48.7119, 0.48", "-66.0575, 402.725, -49.4929, 0.48", "-67.3323, 403.565, -50.1683, 0.48", "-68.8854, 404.684, -51.0103, 0.48", "-70.0776, 405.654, -51.7522, 0.48", "-71.3451, 406.752, -52.646, 0.48", "-72.8474, 408.056, -53.8229, 0.48", "-74.7823, 409.769, -55.4903, 0.48", "-76.0343, 410.843, -56.6168, 0.48", "-77.0881, 411.697, -57.5957, 0.48", "-77.8909, 412.363, -58.3185, 0.48", "-78.8776, 413.171, -59.0312, 0.48", "-79.8275, 413.883, -59.5562, 0.48", "-81.2148, 414.688, -60.0652, 0.36", "-82.0356, 415.044, -60.2778, 0.36", "-84.1082, 415.752, -60.5705, 0.36", "-86.8761, 416.568, -60.7733, 0.36", "-88.4498, 416.976, -60.8903, 0.36", "-89.9738, 417.296, -60.9924, 0.36", "-91.4928, 417.573, -61.1106, 0.36", "-93.5431, 417.899, -61.2736, 0.36", "-94.4918, 418.051, -61.3429, 0.36", "-96.9131, 418.525, -61.496, 0.36", "-99.2887, 419.061, -61.6191, 0.36", "-101.253, 419.527, -61.738, 0.36", "-103.056, 419.962, -61.7964, 0.36", "-105.346, 420.499, -61.7464, 0.36", "-106.905, 420.855, -61.5699, 0.36", "-108.329, 421.157, -61.3336, 0.36", "-110.203, 421.546, -61.0858, 0.36", "-112.043, 421.882, -60.8777, 0.36", "-113.714, 422.199, -60.5993, 0.36", "-114.941, 422.496, -60.299, 0.36", "-116.997, 423.191, -59.5548, 0.36", "-118.327, 423.775, -58.8973, 0.36", "-119.538, 424.38, -58.2111, 0.36", "-122.35, 425.84, -56.6229, 0.36", "-123.48, 426.461, -55.9707, 0.36", "-124.702, 427.23, -55.2335, 0.36", "-126.25, 428.328, -54.2377, 0.36", "-127.559, 429.288, -53.5271, 0.36", "-128.069, 429.622, -53.3671, 0.36", "-128.82, 430.038, -53.3184, 0.36", "-131.361, 431.294, -53.5047, 0.36", "-132.215, 431.705, -53.6134, 0.36", "-134.325, 432.722, -53.9715, 0.36", "-136.585, 433.778, -54.4036, 0.36", "-137.776, 434.325, -54.634, 0.36", "-139.685, 435.177, -55.0149, 0.36", "-141.822, 436.13, -55.5016, 0.36", "-143.584, 436.974, -55.8881, 0.36", "-145.159, 437.823, -56.1995, 0.36", "-146.394, 438.563, -56.3732, 0.36", "-147.498, 439.221, -56.4761, 0.36", "-149.359, 440.221, -56.5791, 0.36", "-151.199, 441.102, -56.6609, 0.36", "-152.383, 441.566, -56.6114, 0.36", "-154.633, 442.241, -56.4068, 0.36", "-156.18, 442.598, -56.2285, 0.36", "-158.133, 443.021, -55.9362, 0.36", "-159.312, 443.256, -55.7235, 0.36", "-161.332, 443.646, -55.4541, 0.36", "-163.213, 444.034, -55.414, 0.36", "-164.683, 444.443, -55.606, 0.36", "-166.259, 445.093, -55.9785, 0.36", "-167.385, 445.765, -56.4428, 0.36", "-168.409, 446.504, -57.0141, 0.36", "-169.356, 447.318, -57.633, 0.36", "-170.964, 448.627, -58.5308, 0.36", "-172.33, 449.591, -59.1963, 0.36", "-174.641, 451.017, -60.195, 0.36", "-175.53, 451.565, -60.5191, 0.36", "-178.459, 453.445, -61.3382, 0.36", "-181.445, 455.26, -61.8412, 0.36", "-183.355, 456.318, -62.0224, 0.36", "-184.987, 457.16, -62.0714, 0.36", "-186.85, 458.102, -62.014, 0.36", "-188.928, 459.117, -61.8985, 0.36", "-191.649, 460.278, -61.746, 0.36", "-193.775, 461.138, -61.7125, 0.36", "-195.137, 461.604, -61.7008, 0.36", "-197.117, 462.201, -61.7309, 0.36", "-199.053, 462.72, -61.8449, 0.36", "-200.629, 463.133, -61.992, 0.36", "-202.106, 463.611, -62.2079, 0.36", "-204.226, 464.388, -62.5138, 0.36", "-205.707, 464.987, -62.7488, 0.36", "-207.026, 465.514, -62.9636, 0.36", "-209.16, 466.47, -63.3921, 0.36", "-210.398, 467.1, -63.617, 0.36", "-212.033, 467.984, -63.8708, 0.36", "-213.139, 468.576, -64.085, 0.36", "-215.373, 469.692, -64.5126, 0.36", "-216.877, 470.489, -64.7385, 0.36", "-218.825, 471.659, -64.8255, 0.36", "-219.905, 472.354, -64.7555, 0.36", "-221.824, 473.669, -64.4957, 0.36", "-223.443, 474.898, -64.1563, 0.36", "-225.149, 476.428, -63.6182, 0.36", "-227.192, 478.407, -62.7305, 0.36", "-228.637, 479.935, -62.0908, 0.36", "-229.533, 481.01, -61.7006, 0.36", "-230.252, 482.018, -61.4087, 0.36", "-231.508, 484.067, -61.1796, 0.36", "-232.216, 485.285, -61.2621, 0.36", "-233.509, 487.418, -61.8383, 0.36", "-234.672, 489.263, -62.7452, 0.36", "-235.476, 490.509, -63.4988, 0.36", "-236.405, 492.045, -64.6838, 0.36", "-237.215, 493.457, -65.9525, 0.36", "-238.174, 495.222, -67.6848, 0.36", "-239.258, 497.324, -69.9006, 0.36", "-239.871, 498.534, -71.3418, 0.36", "-241.107, 500.963, -74.7312, 0.36", "-241.512, 501.772, -76.0026, 0.36", "-242.034, 502.767, -78.0537, 0.36", "-242.329, 503.007, -79.3116, 0.36", "-242.675, 502.591, -80.5258, 0.36", "-243.362, 501.377, -82.6097, 0.36", "-244.273, 499.82, -84.5646, 0.36", "-245.501, 498.065, -86.6639, 0.36", "-246.462, 497.065, -87.9329, 0.36", "-248.204, 496.179, -89.6733, 0.36", "-249.552, 496.445, -90.5669, 0.36", "-251.284, 497.783, -91.3461, 0.36", "-252.849, 499.494, -91.9161, 0.36", "-254.326, 501.595, -92.2451, 0.36", "-255.373, 503.374, -92.3981, 0.36", "-256.444, 505.314, -92.4834, 0.36", "-257.739, 507.81, -92.6012, 0.36", "-258.249, 508.816, -92.6744, 0.36", "-259.647, 511.332, -92.9495, 0.36", "-260.658, 512.835, -93.1814, 0.36", "-262.049, 514.603, -93.5305, 0.36", "-263.18, 515.954, -93.8126, 0.36", "-264.195, 517.173, -94.0721, 0.36", "-265.325, 518.665, -94.3965, 0.36", "-266.692, 520.593, -94.8268, 0.36", "-269.235, 524.616, -95.6557, 0.36", "-270.839, 527.544, -96.1821, 0.36", "-271.748, 529.354, -96.4828, 0.36", "-272.651, 531.112, -96.7692, 0.36", "-273.529, 532.704, -97.014, 0.36", "-274.61, 534.408, -97.2762, 0.36", "-275.275, 535.25, -97.4089, 0.36", "-276.547, 536.597, -97.6442, 0.36", "-278.896, 538.619, -97.9609, 0.36", "-280.534, 539.829, -98.1172, 0.36", "-281.548, 540.626, -98.1377, 0.36", "-282.925, 541.967, -98.0457, 0.36", "-283.888, 543.096, -97.916, 0.36", "-285.157, 544.857, -97.5464, 0.36", "-285.797, 545.883, -97.2722, 0.36", "-288.024, 549.594, -96.0955, 0.36", "-289.87, 552.5, -95.0482, 0.36", "-290.699, 553.638, -94.6165, 0.36", "-292.47, 555.747, -93.7815, 0.36", "-293.619, 556.957, -93.311, 0.36", "-295.55, 558.672, -92.6482, 0.36", "-296.745, 559.492, -92.337, 0.36", "-299.325, 560.951, -91.7924, 0.36", "-301.821, 562.178, -91.391, 0.36", "-303.403, 562.815, -91.2635, 0.36", "-305.894, 563.551, -91.1562, 0.36", "-307.157, 563.878, -91.2208, 0.36", "-308.539, 564.301, -91.426, 0.36", "-310.193, 564.897, -91.8655, 0.36", "-311.735, 565.527, -92.4595, 0.36", "-313.422, 566.325, -93.0931, 0.36", "-316.62, 568.14, -94.1829, 0.36", "-318.294, 569.374, -94.6368, 0.36", "-320.067, 570.987, -94.9004, 0.36", "-321.108, 572.089, -94.9069, 0.36", "-323.425, 574.682, -94.6594, 0.36", "-324.358, 575.756, -94.5583, 0.36", "-326.243, 577.828, -94.312, 0.36", "-327.895, 579.72, -94.1745, 0.36", "-328.875, 581.021, -94.1838, 0.36", "-330.378, 583.379, -94.353, 0.36", "-332.072, 586.651, -94.7838, 0.36", "-332.585, 587.811, -94.9386, 0.36", "-333.478, 590.031, -95.2317, 0.36", "-334.763, 593.436, -95.6691, 0.36", "-335.514, 595.627, -95.8597, 0.36", "-336.03, 597.096, -95.8407, 0.36", "-337.163, 599.963, -95.6047, 0.36", "-338.636, 603.197, -95.3276, 0.36", "-339.704, 605.265, -95.1505, 0.36", "-340.718, 607.018, -94.9666, 0.36", "-343.354, 611.159, -94.5148, 0.36", "-344.101, 612.298, -94.3782, 0.36", "-345.042, 613.756, -94.188, 0.36", "-346.367, 615.738, -93.9699, 0.36", "-347.65, 617.466, -93.8695, 0.36", "-349.015, 619.186, -93.8868, 0.36", "-350.52, 621.007, -93.9321, 0.36", "-352.34, 623.055, -93.9443, 0.36", "-354.555, 625.42, -93.9329, 0.36", "-355.77, 626.636, -93.9313, 0.36", "-357.046, 627.894, -93.9532, 0.36", "-359.132, 629.92, -93.7808, 0.36", "-360.241, 631.008, -93.5967, 0.36", "-361.166, 631.946, -93.3676, 0.36", "-362.204, 633.079, -93.0106, 0.36", "-364.92, 636.076, -92.0032, 0.36", "-366.799, 638.135, -91.3189, 0.36", "-367.939, 639.429, -90.9219, 0.36", "-368.952, 640.647, -90.5743, 0.36", "-369.915, 641.78, -90.2978, 0.36", "-371.278, 643.44, -90.0014, 0.36", "-372.17, 644.65, -89.8676, 0.36", "-373.267, 646.263, -89.8849, 0.36", "-374.659, 648.501, -89.9984, 0.36", "-375.684, 650.301, -90.1604, 0.36", "-376.893, 652.74, -90.4735, 0.36", "-377.687, 654.545, -90.7362, 0.36", "-378.626, 656.674, -91.0356, 0.36", "-380.198, 660.137, -91.4857, 0.36", "-381.065, 661.962, -91.6539, 0.36", "-382.119, 664.225, -91.7522, 0.36", "-383.584, 667.271, -91.7595, 0.36", "-384.552, 669.143, -91.7048, 0.36", "-385.285, 670.395, -91.5872, 0.36", "-387.148, 673.278, -91.1292, 0.36", "-389.087, 675.953, -90.5774, 0.36", "-389.833, 676.874, -90.3629, 0.36", "-391.079, 678.382, -90.024, 0.36", "-393.309, 681.212, -89.5148, 0.36", "-394.606, 682.88, -89.2762, 0.36", "-396.002, 684.659, -89.1634, 0.36", "-397.393, 686.41, -89.2421, 0.36", "-398.831, 688.354, -89.4584, 0.36", "-400.367, 690.789, -89.9831, 0.36", "-401.231, 692.366, -90.4958, 0.36", "-402.192, 694.28, -91.2209, 0.36", "-403.014, 696.296, -92.0493, 0.36", "-403.512, 697.918, -92.7639, 0.36", "-404.011, 700.736, -94.1929, 0.36", "-404.053, 701.731, -94.7316, 0.36", "-403.983, 703.073, -95.4532, 0.36", "-403.775, 704.671, -96.2445, 0.36", "-403.432, 706.428, -97.0403, 0.36", "-402.973, 708.752, -97.9861, 0.36", "-402.826, 709.759, -98.338, 0.36", "-402.748, 711.091, -98.7668, 0.36", "-402.785, 712.81, -99.2407, 0.36", "-402.889, 714.271, -99.5711, 0.36", "-403.038, 715.719, -99.8387, 0.36", "-403.346, 718.243, -100.164, 0.36", "-403.64, 720.551, -100.427, 0.36", "-403.88, 722.499, -100.625, 0.36", "-404.22, 724.858, -100.829, 0.36", "-404.549, 727.151, -100.973, 0.36", "-404.921, 730.17, -101.059, 0.36", "-405.175, 732.575, -101.051, 0.36", "-405.476, 735.295, -101.104, 0.36", "-405.961, 738.523, -101.256, 0.36", "-406.428, 740.75, -101.438, 0.36", "-406.912, 742.765, -101.689, 0.36", "-407.188, 743.677, -101.853, 0.36", "-408.312, 746.528, -102.626, 0.36", "-409.108, 748.271, -103.296, 0.36", "-410.129, 750.483, -104.427, 0.36", "-411.101, 752.526, -105.659, 0.36", "-411.731, 753.864, -106.529, 0.36", "-412.608, 755.896, -107.854, 0.36", "-413.462, 758.226, -109.278, 0.36", "-413.995, 759.838, -110.331, 0.36", "-414.313, 760.768, -110.95, 0.36", "-414.782, 761.933, -111.739, 0.36", "-415.206, 762.791, -112.273, 0.36", "-415.854, 763.619, -112.657, 0.36", "-416.832, 764.547, -112.99, 0.36", "-419.105, 766.483, -113.667, 0.36", "-419.955, 767.121, -113.913, 0.36", "-421.531, 768.265, -114.429, 0.36", "-424.31, 770.307, -115.439, 0.36", "-426.67, 772.034, -116.394, 0.36", "-428.157, 773.189, -117.05, 0.36", "-430.348, 775.006, -118.161, 0.36", "-431.955, 776.379, -119.056, 0.36", "-433.207, 777.462, -119.825, 0.36", "-434.27, 778.438, -120.577, 0.36", "-435.636, 779.64, -121.386, 0.36", "-437.157, 781.01, -122.151, 0.36", "-438.629, 782.287, -122.761, 0.36", "-440.514, 783.745, -123.363, 0.36", "-442.41, 785.037, -123.824, 0.36", "-444.577, 786.388, -124.226, 0.36", "-446.205, 787.3, -124.345, 0.36", "-447.992, 788.191, -124.178, 0.24", "-449.924, 789.026, -123.845, 0.24", "-452.1, 789.857, -123.299, 0.24", "-452.783, 790.075, -123.047, 0.24", "-455.508, 790.919, -121.744, 0.24", "-458.422, 791.839, -119.831, 0.12", "-460.031, 792.425, -118.325, 0.12", "-461.508, 793.008, -116.598, 0.12", "-463.479, 794.003, -113.963, 0.12", "-464.17, 794.474, -112.96, 0.12", "-465.317, 795.643, -111.059, 0.12", "-467.099, 798.153, -107.869, 0.12", "-467.472, 798.738, -107.16, 0.12", "-468.305, 800.119, -105.754, 0.12", "-469.662, 802.606, -103.898, 0.12", "-470.907, 804.907, -102.5, 0.12", "-471.405, 806.036, -102.072, 0.12" ],
    "parent" : "apic_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 33
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "-84.1561, 814.886, -48.7887, 0.36", "-84.171, 816.278, -48.7017, 0.36", "-84.0426, 821.139, -48.6556, 0.36", "-83.9723, 823.803, -48.6303, 0.24", "-83.8945, 826.747, -48.6023, 0.24", "-83.8307, 829.165, -48.5793, 0.24", "-83.692, 831.067, -48.6285, 0.24" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "-84.1561, 814.886, -48.7887, 0.36", "-86.9603, 815.533, -52.0461, 0.24", "-88.3595, 815.771, -53.6135, 0.24", "-90.2704, 816.141, -55.6644, 0.24", "-92.3776, 816.633, -58.0674, 0.24", "-93.7059, 816.926, -59.6412, 0.24", "-95.4915, 817.263, -61.8094, 0.24", "-96.616, 817.373, -63.1871, 0.24", "-97.6491, 817.528, -64.7141, 0.24", "-98.6067, 817.764, -66.4295, 0.24", "-99.205, 817.985, -67.6237, 0.24", "-99.7965, 818.35, -69.0746, 0.24", "-100.422, 819.056, -71.1698, 0.24", "-101.192, 820.135, -74.049, 0.24", "-101.583, 820.705, -75.5111, 0.24", "-102.148, 821.49, -77.3076, 0.24", "-102.732, 822.447, -79.4563, 0.24", "-103.758, 824.23, -83.5421, 0.24", "-104.068, 824.735, -84.8501, 0.24", "-104.757, 825.7, -87.6014, 0.24", "-105.294, 826.432, -89.949, 0.24", "-106.149, 827.394, -93.7617, 0.24", "-106.665, 827.871, -96.1845, 0.24", "-107.105, 828.237, -98.1699, 0.24", "-107.369, 828.522, -99.4001, 0.24", "-107.915, 829.152, -101.593, 0.24", "-108.259, 829.536, -102.649, 0.24", "-108.849, 830.053, -103.819, 0.24", "-109.586, 830.776, -105.316, 0.24", "-110.151, 831.424, -106.415, 0.24", "-111.116, 832.578, -108.234, 0.24", "-111.925, 833.525, -109.727, 0.24", "-113.043, 834.722, -111.772, 0.24", "-114.121, 836.07, -114.172, 0.24", "-114.937, 837.121, -116.235, 0.24", "-115.384, 837.727, -117.457, 0.24", "-115.657, 838.173, -118.297, 0.24", "-116.086, 839.093, -119.769, 0.24", "-116.751, 841.61, -123.135, 0.24", "-116.904, 842.854, -124.675, 0.24", "-116.838, 844.038, -126.069, 0.24", "-116.67, 845.048, -126.998, 0.24", "-116.413, 846.367, -127.993, 0.24", "-115.892, 849.158, -129.735, 0.24", "-115.59, 851.385, -130.948, 0.24", "-115.394, 853.112, -131.808, 0.24", "-115.189, 855.977, -133.301, 0.24", "-115.186, 857.597, -134.228, 0.24", "-115.318, 859.41, -135.314, 0.24", "-115.619, 861.294, -136.494, 0.24", "-115.921, 862.594, -137.428, 0.24", "-116.484, 864.291, -138.905, 0.24", "-117.175, 866.001, -140.64, 0.24", "-117.787, 867.441, -142.158, 0.24", "-118.367, 868.842, -143.641, 0.24", "-118.939, 870.283, -145.131, 0.24", "-119.577, 871.968, -146.947, 0.24", "-120.213, 873.565, -148.844, 0.12", "-120.775, 874.72, -150.541, 0.12", "-121.214, 875.461, -151.838, 0.12", "-121.579, 876.019, -152.902, 0.12", "-122.421, 877.167, -155.105, 0.12", "-123.408, 878.285, -157.335, 0.12", "-124.374, 879.06, -159.102, 0.12", "-125.47, 879.752, -160.742, 0.12", "-127.063, 880.697, -162.719, 0.12", "-129.105, 881.953, -164.84, 0.12", "-130.203, 882.68, -165.767, 0.12", "-131.262, 883.44, -166.54, 0.12", "-132.697, 884.546, -167.484, 0.12", "-134.125, 885.602, -168.223, 0.12", "-134.658, 886.028, -168.51, 0.12", "-135.927, 887.291, -169.393, 0.12", "-136.367, 887.964, -169.845, 0.12", "-136.923, 889.24, -170.647, 0.12", "-137.608, 891.579, -172.1, 0.12", "-138.293, 895.41, -174.412, 0.12", "-138.452, 896.996, -175.304, 0.12", "-138.551, 899.424, -176.76, 0.12", "-138.548, 901.034, -177.795, 0.12", "-138.522, 902.651, -178.879, 0.12", "-138.448, 904.905, -180.324, 0.12", "-138.493, 906.311, -181.132, 0.12", "-138.559, 909.204, -182.997, 0.12", "-138.585, 910.978, -184.267, 0.12", "-138.616, 912.561, -185.431, 0.12", "-138.636, 914.251, -186.627, 0.12", "-138.657, 916.076, -187.947, 0.12", "-138.765, 919.026, -190.097, 0.12", "-138.798, 920.656, -191.236, 0.12", "-138.799, 923.318, -193.087, 0.12", "-138.779, 925.965, -194.927, 0.12", "-138.829, 928.506, -196.714, 0.12", "-138.925, 930.56, -198.092, 0.12", "-139.187, 932.812, -199.504, 0.12", "-139.505, 934.643, -200.767, 0.12", "-139.93, 936.545, -202.175, 0.12", "-140.402, 938.294, -203.453, 0.12", "-141.174, 941.05, -205.349, 0.12", "-141.791, 942.965, -206.734, 0.12", "-142.59, 944.869, -208.268, 0.12", "-143.193, 946.31, -209.472, 0.12", "-143.95, 948.228, -211.093, 0.12", "-144.373, 949.267, -212.013, 0.12", "-144.954, 950.817, -213.487, 0.12", "-145.257, 951.692, -214.35, 0.12", "-146.133, 954.039, -216.66, 0.12", "-146.473, 954.9, -217.54, 0.12", "-147.028, 956.283, -219.006, 0.12", "-147.909, 959.037, -221.78, 0.12", "-148.193, 960.252, -222.894, 0.12", "-148.468, 961.409, -223.974, 0.12", "-148.79, 962.603, -225.102, 0.12", "-149.215, 964.195, -226.514, 0.12", "-149.929, 966.791, -228.834, 0.12", "-150.266, 967.798, -229.769, 0.12", "-150.784, 969.495, -231.427, 0.12", "-151.586, 972.073, -234.079, 0.12", "-151.701, 972.418, -234.439, 0.12", "-152.081, 973.629, -235.66, 0.12", "-152.518, 974.91, -237.056, 0.12", "-153.255, 976.978, -239.484, 0.12", "-153.614, 978.083, -240.836, 0.12", "-154.35, 980.7, -244.325, 0.12", "-154.667, 981.88, -245.977, 0.12", "-155.264, 983.849, -248.915, 0.12", "-155.651, 984.996, -250.778, 0.12", "-156.094, 986.227, -252.781, 0.12", "-156.626, 987.74, -255.216, 0.12", "-157.547, 990.315, -259.217, 0.12", "-157.955, 991.345, -260.632, 0.12", "-158.171, 991.933, -261.289, 0.12", "-158.726, 993.566, -262.722, 0.12", "-159.616, 996.269, -264.641, 0.12", "-160.151, 998.113, -265.688, 0.12", "-160.716, 1001.04, -267.012, 0.12", "-160.901, 1002.73, -267.666, 0.12", "-161.099, 1005.91, -268.669, 0.12", "-161.088, 1008.57, -269.28, 0.12", "-160.874, 1011.0, -269.626, 0.12", "-160.519, 1013.33, -269.833, 0.12", "-160.004, 1015.6, -269.903, 0.12", "-159.044, 1019.43, -269.957, 0.12", "-158.27, 1022.25, -269.912, 0.12", "-157.768, 1023.98, -269.76, 0.12", "-157.257, 1025.73, -269.534, 0.12", "-156.752, 1027.52, -269.262, 0.12" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "-83.692, 831.067, -48.6285, 0.24", "-85.4541, 834.275, -47.5489, 0.24", "-87.6616, 838.735, -46.0455, 0.24", "-89.9172, 843.293, -44.5093, 0.24", "-91.5344, 846.561, -43.4079, 0.24", "-93.3728, 850.276, -42.1559, 0.24", "-94.7209, 853.0, -41.2378, 0.24", "-95.5935, 855.031, -40.5203, 0.24" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "-83.692, 831.067, -48.6285, 0.24", "-83.3313, 832.897, -48.1316, 0.24", "-83.0094, 834.885, -47.5926, 0.24", "-82.8911, 836.046, -47.3117, 0.24", "-82.732, 838.027, -46.8268, 0.24", "-82.5602, 839.995, -46.4234, 0.24", "-82.4147, 841.583, -46.1427, 0.24", "-82.1912, 843.221, -46.0031, 0.24", "-81.8535, 845.241, -45.9773, 0.24", "-81.4596, 847.172, -46.0865, 0.24", "-81.0515, 849.187, -46.2897, 0.24", "-80.6186, 850.805, -46.5389, 0.24", "-79.4856, 854.284, -47.1148, 0.24", "-78.7975, 856.122, -47.3992, 0.24", "-77.8977, 857.99, -47.6726, 0.24", "-76.6646, 860.117, -47.975, 0.24", "-74.8472, 862.831, -48.2557, 0.24", "-73.4025, 864.695, -48.4367, 0.24", "-72.1038, 866.257, -48.5451, 0.24", "-68.8202, 869.844, -48.9736, 0.24", "-66.3894, 872.32, -49.3632, 0.24", "-64.1911, 874.375, -49.7894, 0.24", "-61.8585, 876.504, -50.3072, 0.12", "-60.3464, 877.906, -50.7077, 0.12", "-56.2287, 881.828, -51.8333, 0.24", "-55.7599, 882.302, -51.9508, 0.24", "-54.1437, 883.884, -52.3182, 0.24", "-53.4522, 884.564, -52.4501, 0.24", "-52.3226, 885.649, -52.5564, 0.24", "-50.1773, 887.515, -52.5301, 0.24", "-48.4997, 888.951, -52.2501, 0.24", "-46.3405, 890.738, -51.8082, 0.24", "-45.1473, 891.716, -51.5552, 0.24", "-44.2302, 892.467, -51.4069, 0.24", "-42.0391, 894.333, -51.1097, 0.24", "-40.3455, 895.868, -50.9512, 0.24", "-39.1101, 897.063, -50.8282, 0.24", "-37.2302, 898.982, -50.7779, 0.12", "-35.6792, 900.598, -50.9399, 0.12", "-34.8011, 901.566, -51.1584, 0.12", "-33.5568, 903.002, -51.6645, 0.12", "-32.4239, 904.36, -52.3309, 0.12", "-30.2088, 906.968, -53.8014, 0.12", "-28.8243, 908.529, -54.6688, 0.12", "-27.8868, 909.557, -55.1709, 0.12", "-27.443, 910.082, -55.398, 0.12", "-25.8738, 912.107, -56.1418, 0.12", "-23.0034, 916.222, -57.1762, 0.12", "-21.0753, 919.443, -57.5366, 0.12", "-19.5006, 922.415, -57.5635, 0.12", "-18.4416, 924.662, -57.3946, 0.12", "-17.6228, 926.549, -57.0937, 0.12", "-16.4558, 929.792, -56.2728, 0.12", "-16.0625, 931.397, -55.801, 0.12", "-15.7498, 932.827, -55.3829, 0.12", "-15.4135, 934.055, -55.0648, 0.12", "-14.8748, 935.394, -54.7149, 0.12", "-14.2532, 936.76, -54.3523, 0.12", "-13.1955, 938.739, -54.0132, 0.12", "-12.4758, 940.154, -53.8204, 0.12", "-12.0035, 941.132, -53.7039, 0.12", "-11.2264, 942.674, -53.5494, 0.12", "-10.2649, 944.919, -53.3491, 0.12", "-9.5198, 946.485, -53.0975, 0.12", "-8.9749, 947.441, -52.9323, 0.12", "-7.80661, 949.201, -52.7008, 0.12", "-6.75355, 950.704, -52.529, 0.12", "-4.58431, 953.477, -52.2858, 0.12", "-2.82975, 955.48, -52.0544, 0.12", "-0.601236, 957.92, -51.5295, 0.12", "1.27418, 959.824, -51.0682, 0.12", "2.21338, 960.769, -50.8786, 0.12", "3.31397, 961.827, -50.7149, 0.12", "4.56755, 962.847, -50.5565, 0.12", "6.49059, 964.455, -50.3337, 0.12", "8.87341, 966.409, -50.1239, 0.12", "10.9449, 968.187, -50.1165, 0.12", "12.0246, 969.15, -50.2311, 0.12", "13.745, 970.784, -50.5248, 0.12", "14.8966, 971.904, -50.8437, 0.12", "16.3358, 973.372, -51.3089, 0.12", "17.3687, 974.472, -51.6154, 0.12", "19.1319, 976.338, -52.0944, 0.12", "20.2603, 977.498, -52.3709, 0.12", "22.4704, 979.762, -52.9121, 0.12", "23.3073, 980.494, -53.0475, 0.12", "26.0668, 982.656, -53.3448, 0.12", "26.9057, 983.277, -53.4301, 0.12", "29.0342, 984.856, -53.6533, 0.12", "30.3689, 985.83, -53.7869, 0.12", "33.4188, 988.078, -54.1377, 0.12", "36.0723, 990.143, -54.5443, 0.12", "37.274, 991.227, -54.7599, 0.12", "38.9185, 992.959, -55.1087, 0.12", "39.4614, 993.642, -55.213, 0.12", "41.0277, 995.931, -55.391, 0.12", "41.6679, 997.204, -55.3541, 0.12", "42.9716, 1000.29, -54.8601, 0.12", "43.5429, 1001.75, -54.5501, 0.12", "44.3353, 1004.05, -53.9434, 0.12", "44.7882, 1005.45, -53.5014, 0.12", "45.6095, 1008.05, -52.3432, 0.12", "45.983, 1009.21, -51.7367, 0.12" ],
    "parent" : "apic_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "-95.5935, 855.031, -40.5203, 0.24", "-95.673, 855.254, -40.5312, 0.24", "-96.6035, 858.024, -40.5874, 0.24", "-97.7164, 861.778, -40.4638, 0.24", "-98.673, 865.063, -40.3517, 0.24", "-99.486, 867.989, -40.2318, 0.24", "-99.9762, 869.974, -40.1368, 0.24", "-100.396, 871.853, -40.0278, 0.24", "-101.323, 876.646, -39.6288, 0.24", "-102.007, 880.461, -39.2872, 0.24", "-102.312, 882.276, -39.1416, 0.24", "-103.075, 887.054, -38.725, 0.24", "-103.507, 889.948, -38.4713, 0.24", "-103.956, 893.086, -38.2491, 0.24", "-104.453, 896.581, -38.0592, 0.24", "-104.95, 899.72, -37.8714, 0.24", "-105.432, 902.349, -37.7013, 0.24", "-106.195, 906.048, -37.4492, 0.24", "-107.06, 910.226, -37.1559, 0.12", "-107.842, 913.662, -36.9091, 0.12", "-108.617, 916.562, -36.6561, 0.12", "-110.339, 922.067, -36.1242, 0.12", "-111.205, 924.459, -35.8844, 0.12", "-111.68, 925.645, -35.7494, 0.12", "-112.952, 928.721, -35.3909, 0.12", "-114.217, 931.862, -35.0605, 0.12", "-115.289, 934.636, -34.8411, 0.12", "-116.957, 938.881, -34.626, 0.12", "-117.796, 941.094, -34.5341, 0.12", "-119.662, 946.318, -34.3318, 0.12", "-120.652, 949.409, -34.2381, 0.12", "-121.819, 953.567, -34.041, 0.12", "-122.513, 956.23, -33.7831, 0.12", "-123.147, 958.775, -33.4458, 0.12", "-123.681, 960.978, -33.1075, 0.12", "-124.355, 963.83, -32.6123, 0.12", "-125.439, 968.455, -31.7726, 0.12", "-126.749, 973.667, -30.8194, 0.12", "-127.758, 977.457, -30.1728, 0.12", "-128.928, 981.622, -29.5478, 0.12", "-129.754, 984.475, -29.1585, 0.12", "-130.661, 987.41, -28.7638, 0.12", "-132.624, 993.471, -27.9999, 0.12", "-134.388, 998.785, -27.3723, 0.12", "-135.867, 1003.36, -26.7182, 0.12", "-136.524, 1005.52, -26.3373, 0.12", "-137.813, 1009.95, -25.4609, 0.12", "-138.843, 1013.72, -24.6579, 0.12", "-139.487, 1016.31, -24.0437, 0.12", "-140.592, 1021.04, -22.9149, 0.12", "-141.125, 1023.43, -22.3775, 0.12", "-142.072, 1027.91, -21.4641, 0.12", "-143.078, 1032.73, -20.5836, 0.12", "-144.07, 1037.24, -19.806, 0.12", "-145.08, 1041.6, -19.1325, 0.12", "-145.872, 1044.73, -18.7606, 0.12", "-147.08, 1049.42, -18.2632, 0.12", "-147.86, 1052.56, -17.9189, 0.12", "-148.535, 1055.44, -17.5526, 0.12", "-149.169, 1058.01, -17.1253, 0.12", "-149.709, 1060.13, -16.6378, 0.12", "-150.662, 1063.84, -15.4604, 0.12", "-151.238, 1066.19, -14.4962, 0.12", "-152.086, 1069.85, -12.758, 0.12", "-152.725, 1072.82, -11.2049, 0.12", "-153.231, 1074.87, -9.99361, 0.12", "-154.134, 1078.16, -7.92087, 0.12", "-154.689, 1079.75, -6.87078, 0.12", "-155.518, 1081.98, -5.35262, 0.12", "-156.551, 1084.62, -3.56419, 0.12", "-157.818, 1088.04, -1.29301, 0.12", "-158.646, 1090.1, 0.0672627, 0.12", "-160.061, 1093.34, 2.08774, 0.12", "-160.864, 1094.92, 3.12756, 0.12" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "-95.5935, 855.031, -40.5203, 0.24", "-94.7896, 856.967, -38.6787, 0.24", "-93.2905, 859.888, -35.5623, 0.24", "-92.5371, 861.304, -33.9708, 0.24", "-91.0163, 863.631, -31.2429, 0.24", "-89.5281, 865.571, -28.8161, 0.24", "-87.8127, 867.521, -26.3729, 0.24", "-86.521, 868.658, -24.8147, 0.24", "-85.1298, 869.646, -23.3625, 0.24", "-82.9517, 871.03, -21.4178, 0.24", "-81.1221, 872.215, -19.9228, 0.24", "-78.6047, 873.924, -17.8125, 0.24", "-76.7788, 875.292, -16.1393, 0.24", "-75.7173, 876.138, -15.102, 0.24", "-73.5866, 878.154, -12.6894, 0.24", "-72.0017, 880.104, -10.4952, 0.12", "-71.1652, 881.326, -9.21058, 0.12", "-70.1432, 883.339, -7.13952, 0.12", "-69.4013, 885.375, -5.18857, 0.12", "-68.6217, 888.315, -2.55978, 0.12", "-68.335, 889.843, -1.27827, 0.12", "-68.1686, 891.614, 0.116196, 0.12", "-68.1962, 894.65, 2.29954, 0.12", "-68.4886, 896.219, 3.45978, 0.12", "-69.1157, 898.539, 5.16325, 0.12", "-69.532, 899.705, 6.05752, 0.12", "-70.3634, 901.553, 7.58358, 0.12", "-71.0104, 902.681, 8.56851, 0.12", "-73.1298, 906.087, 11.6481, 0.12" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "axon_0", "apic_2", "apic_1", "axon_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "apic_2", "apic_1", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "apic_4", "apic_3", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "apic_8", "apic_5", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "apic_10", "apic_9", "apic_7", "apic_6", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "apic_14", "apic_11", "dend_32", "dend_31", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_6",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "apic_2", "apic_1", "apic_4", "apic_3", "apic_8", "apic_5", "apic_10", "apic_9", "apic_7", "apic_6", "apic_14", "apic_11", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_7",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "apic_2", "apic_1", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "apic_4", "apic_3", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "apic_8", "apic_5", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "apic_10", "apic_9", "apic_7", "apic_6", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "apic_14", "apic_11", "dend_32", "dend_31", "apic_16", "apic_15", "apic_13", "apic_12", "apic_26", "apic_17", "apic_19", "apic_18", "apic_21", "apic_20", "apic_23", "apic_22", "apic_25", "apic_24" ]
  }, {
    "name" : "ModelViewParmSubset_8",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_42", "dend_37", "dend_36", "dend_21", "dend_18", "dend_15", "dend_0", "dend_39", "dend_38", "dend_33", "dend_22", "dend_20", "dend_19", "dend_17", "dend_16", "dend_10", "dend_1", "dend_41", "dend_40", "dend_35", "dend_34", "dend_24", "dend_23", "dend_12", "dend_11", "dend_9", "dend_2", "dend_28", "dend_25", "dend_14", "dend_13", "dend_6", "dend_3", "dend_30", "dend_29", "dend_27", "dend_26", "dend_8", "dend_7", "dend_5", "dend_4", "dend_32", "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "apic_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "apic_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "apic_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "apic_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "apic_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "apic_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "apic_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "apic_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "apic_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "apic_23" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16", "apic_17", "apic_18", "apic_19", "apic_20", "apic_21", "apic_22", "apic_23", "apic_24", "apic_25", "apic_26" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_19", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "2.0"
  }, {
    "group" : "apical",
    "value" : "2.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "all_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "all",
    "condDens" : "3.0000001E-5",
    "erev" : "-75.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "basal",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.025689999",
    "erev" : "50.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.039763",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "9.999999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.288755",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.029455999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "6.71E-4",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098377",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.957198",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "1.936176",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.072928995",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0038689997",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.97688496",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gIhbar_Ih",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "somatic",
    "condDens" : "8.0E-5",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.8399997E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "6.9999996E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_HVAbar_Ca_HVA",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "4.59E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0055919997",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cADpyr_231_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cADpyr231_L6_UTPC_186e8dd6aa_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: soma_0
create dend_42
public dend_42
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_2, id: apic_2, parent: apic_0
create apic_2
public apic_2
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_21
create dend_33
public dend_33
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_4, id: apic_4, parent: apic_2
create apic_4
public apic_4
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_2
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_26, id: apic_26, parent: apic_16
create apic_26
public apic_26
// Section: apic_17, id: apic_17, parent: apic_16
create apic_17
public apic_17
// Section: apic_19, id: apic_19, parent: apic_17
create apic_19
public apic_19
// Section: apic_18, id: apic_18, parent: apic_17
create apic_18
public apic_18
// Section: apic_21, id: apic_21, parent: apic_19
create apic_21
public apic_21
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_23, id: apic_23, parent: apic_21
create apic_23
public apic_23
// Section: apic_22, id: apic_22, parent: apic_21
create apic_22
public apic_22
// Section: apic_25, id: apic_25, parent: apic_23
create apic_25
public apic_25
// Section: apic_24, id: apic_24, parent: apic_23
create apic_24
public apic_24

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_5
// Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_6
// Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
objref ModelViewParmSubset_7
// Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, dend_32, dend_31]}
objref ModelViewParmSubset_8
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[apic_17]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_18]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_20]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_22]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_25]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_24]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_23]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4999999347301206)
    connect dend_43(0), soma_0(0.4999999347301206)
    connect dend_42(0), soma_0(0.4999999347301206)
    connect dend_37(0), soma_0(0.4999999347301206)
    connect dend_36(0), soma_0(0.4999999347301206)
    connect dend_21(0), soma_0(0.4999999347301206)
    connect dend_18(0), soma_0(0.4999999347301206)
    connect dend_15(0), soma_0(0.4999999347301206)
    connect dend_0(0), soma_0(0.4999999347301206)
    connect axon_0(0), soma_0(1.0)
    connect apic_2(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_4(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_26(0), apic_16(1.0)
    connect apic_17(0), apic_16(1.0)
    connect apic_19(0), apic_17(1.0)
    connect apic_18(0), apic_17(1.0)
    connect apic_21(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_23(0), apic_21(1.0)
    connect apic_22(0), apic_21(1.0)
    connect apic_25(0), apic_23(1.0)
    connect apic_24(0), apic_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -6.12491, 4.54947, 0.014993, 2.64062 ) }
    soma_0 { pt3dadd( -5.50711, 4.09677, 0.00563454, 4.44252 ) }
    soma_0 { pt3dadd( -4.88931, 3.64407, -0.00372396, 5.94799 ) }
    soma_0 { pt3dadd( -4.2715, 3.19136, -0.0130825, 7.13406 ) }
    soma_0 { pt3dadd( -3.6537, 2.73866, -0.022441, 8.2655 ) }
    soma_0 { pt3dadd( -3.03589, 2.28596, -0.0317995, 9.29453 ) }
    soma_0 { pt3dadd( -2.41809, 1.83326, -0.041158, 10.3736 ) }
    soma_0 { pt3dadd( -1.80029, 1.38056, -0.0505165, 11.0642 ) }
    soma_0 { pt3dadd( -1.18248, 0.927855, -0.059875, 11.6512 ) }
    soma_0 { pt3dadd( -0.56468, 0.475153, -0.0692335, 11.955 ) }
    soma_0 { pt3dadd( 0.0531242, 0.0224506, -0.078592, 12.1495 ) }
    soma_0 { pt3dadd( 0.670928, -0.430251, -0.0879505, 12.2302 ) }
    soma_0 { pt3dadd( 1.28873, -0.882953, -0.097309, 12.1321 ) }
    soma_0 { pt3dadd( 1.90654, -1.33566, -0.106668, 11.9546 ) }
    soma_0 { pt3dadd( 2.52434, -1.78836, -0.116026, 11.3256 ) }
    soma_0 { pt3dadd( 3.14214, -2.24106, -0.125385, 10.6359 ) }
    soma_0 { pt3dadd( 3.75995, -2.69376, -0.134743, 9.83304 ) }
    soma_0 { pt3dadd( 4.37775, -3.14646, -0.144102, 8.92143 ) }
    soma_0 { pt3dadd( 4.99555, -3.59917, -0.15346, 7.64149 ) }
    soma_0 { pt3dadd( 5.61336, -4.05187, -0.162819, 5.66644 ) }
    soma_0 { pt3dadd( 6.23116, -4.50457, -0.172177, 3.08284 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( -3.16351, 6.05747, -2.8038, 1.8 ) }
    apic_0 { pt3dadd( -3.93195, 7.63489, -3.56572, 1.8 ) }
    apic_0 { pt3dadd( -4.4309, 9.46747, -4.04731, 1.8 ) }
    apic_0 { pt3dadd( -4.88729, 11.2624, -4.54873, 1.8 ) }
    apic_0 { pt3dadd( -5.57958, 14.1348, -5.35637, 1.68 ) }
    apic_0 { pt3dadd( -6.0895, 16.3649, -5.96724, 1.56 ) }
    apic_0 { pt3dadd( -6.40662, 17.7928, -6.36468, 1.56 ) }
    apic_0 { pt3dadd( -7.07345, 20.6924, -7.39614, 1.32 ) }
    apic_0 { pt3dadd( -7.35606, 21.9311, -7.85834, 1.32 ) }
    apic_0 { pt3dadd( -7.51288, 22.662, -8.12548, 1.56 ) }
    apic_0 { pt3dadd( -7.70393, 23.8447, -8.46456, 1.56 ) }
    apic_0 { pt3dadd( -7.96593, 26.2263, -9.09479, 1.56 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 33/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 2.08791, 1.2939, -6.53524, 0.24 ) }
    dend_43 { pt3dadd( 5.24368, 2.43757, -15.5288, 0.24 ) }
    dend_43 { pt3dadd( 3.99623, 3.87401, -16.9104, 0.12 ) }
    dend_43 { pt3dadd( 3.23926, 4.54443, -17.6378, 0.12 ) }
    dend_43 { pt3dadd( 2.64134, 4.99176, -18.164, 0.12 ) }
    dend_43 { pt3dadd( 2.49746, 5.07269, -18.2692, 0.12 ) }
    dend_43 { pt3dadd( 1.85935, 5.3711, -18.6767, 0.12 ) }
    dend_43 { pt3dadd( 1.70101, 5.4303, -18.7753, 0.12 ) }
    dend_43 { pt3dadd( 0.583835, 5.83781, -19.4066, 0.12 ) }
    dend_43 { pt3dadd( 0.480472, 5.8647, -19.4947, 0.12 ) }
    dend_43 { pt3dadd( -0.370421, 6.06328, -20.3932, 0.12 ) }
    dend_43 { pt3dadd( -0.618286, 6.14076, -20.6861, 0.12 ) }
    dend_43 { pt3dadd( -1.99173, 6.67199, -22.5385, 0.12 ) }
    dend_43 { pt3dadd( -2.09699, 6.72465, -22.6949, 0.12 ) }
    dend_43 { pt3dadd( -3.53657, 7.54514, -24.7752, 0.12 ) }
    dend_43 { pt3dadd( -3.63393, 7.60744, -24.8946, 0.12 ) }
    dend_43 { pt3dadd( -4.3378, 8.01842, -25.6909, 0.12 ) }
    dend_43 { pt3dadd( -4.58668, 8.14881, -25.9457, 0.12 ) }
    dend_43 { pt3dadd( -7.06082, 9.22775, -28.1586, 0.12 ) }
    dend_43 { pt3dadd( -8.41334, 9.77367, -29.3007, 0.12 ) }
    dend_43 { pt3dadd( -10.7778, 10.5579, -31.1541, 0.12 ) }
    dend_43 { pt3dadd( -12.6912, 11.0242, -32.643, 0.12 ) }
    dend_43 { pt3dadd( -12.7998, 11.0376, -32.7277, 0.12 ) }
    dend_43 { pt3dadd( -13.6646, 11.063, -33.3908, 0.12 ) }
    dend_43 { pt3dadd( -13.8081, 11.0459, -33.5388, 0.12 ) }
    dend_43 { pt3dadd( -14.9481, 10.8121, -35.1622, 0.12 ) }
    dend_43 { pt3dadd( -15.0897, 10.7918, -35.4209, 0.12 ) }
    dend_43 { pt3dadd( -15.7184, 10.8736, -36.7275, 0.12 ) }
    dend_43 { pt3dadd( -15.8088, 10.9073, -36.9365, 0.12 ) }
    dend_43 { pt3dadd( -17.5865, 11.9467, -41.3272, 0.12 ) }
    dend_43 { pt3dadd( -17.6378, 11.9824, -41.4507, 0.12 ) }
    dend_43 { pt3dadd( -18.2359, 12.4925, -42.8982, 0.12 ) }
    dend_43 { pt3dadd( -18.2733, 12.5233, -42.9764, 0.12 ) }
    dend_43 { pt3dadd( -19.8758, 13.7182, -45.6208, 0.12 ) }
    dend_43 { pt3dadd( -20.0545, 13.8306, -45.8471, 0.12 ) }
    dend_43 { pt3dadd( -20.8146, 14.1858, -46.5894, 0.12 ) }
    dend_43 { pt3dadd( -20.9623, 14.2413, -46.7373, 0.12 ) }
    dend_43 { pt3dadd( -22.2201, 14.604, -48.0922, 0.12 ) }
    dend_43 { pt3dadd( -23.1065, 14.8489, -49.1038, 0.12 ) }
    dend_43 { pt3dadd( -23.2205, 14.8977, -49.2396, 0.12 ) }
    dend_43 { pt3dadd( -25.0457, 16.0664, -51.5656, 0.12 ) }
    dend_43 { pt3dadd( -25.2296, 16.2194, -51.8178, 0.12 ) }
    dend_43 { pt3dadd( -25.9282, 16.9178, -52.8145, 0.12 ) }
    dend_43 { pt3dadd( -26.0164, 17.0257, -52.9515, 0.12 ) }
    dend_43 { pt3dadd( -27.2363, 18.8251, -55.0748, 0.12 ) }
    dend_43 { pt3dadd( -27.9672, 19.9546, -56.4233, 0.12 ) }
    dend_43 { pt3dadd( -28.0477, 20.0866, -56.5745, 0.12 ) }
    dend_43 { pt3dadd( -28.478, 20.7927, -57.4265, 0.12 ) }
    dend_43 { pt3dadd( -28.5147, 20.8522, -57.5028, 0.12 ) }
    dend_43 { pt3dadd( -29.5374, 22.5122, -59.7841, 0.12 ) }
    dend_43 { pt3dadd( -30.6012, 24.1927, -62.4007, 0.12 ) }
    dend_43 { pt3dadd( -30.6305, 24.2344, -62.4773, 0.12 ) }
    dend_43 { pt3dadd( -31.2926, 25.0812, -64.1947, 0.12 ) }
    dend_43 { pt3dadd( -31.3576, 25.1517, -64.3516, 0.12 ) }
    dend_43 { pt3dadd( -32.3364, 26.0384, -66.5259, 0.12 ) }
    dend_43 { pt3dadd( -32.3883, 26.0835, -66.646, 0.12 ) }
    dend_43 { pt3dadd( -33.4519, 27.2606, -70.6406, 0.12 ) }
    dend_43 { pt3dadd( -33.5222, 27.3522, -70.9898, 0.12 ) }
    dend_43 { pt3dadd( -33.7119, 27.6322, -72.0519, 0.12 ) }
    dend_43 { pt3dadd( -33.8213, 27.8159, -72.7245, 0.12 ) }
    dend_43 { pt3dadd( -34.5105, 29.1698, -77.2697, 0.12 ) }
    dend_43 { pt3dadd( -35.3891, 31.2037, -83.3061, 0.12 ) }
    dend_43 { pt3dadd( -35.3988, 31.2311, -83.3811, 0.12 ) }
    dend_43 { pt3dadd( -35.7571, 32.2315, -86.1417, 0.12 ) }
    dend_43 { pt3dadd( -35.791, 32.3302, -86.4094, 0.12 ) }
    dend_43 { pt3dadd( -36.2947, 33.6503, -89.9155, 0.12 ) }
    dend_43 { pt3dadd( -36.3343, 33.7242, -90.1047, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_43 { pt3dadd( -37.8931, 36.1645, -95.6838, 0.12 ) }
    dend_43 { pt3dadd( -37.9249, 36.2157, -95.8084, 0.12 ) }
    dend_43 { pt3dadd( -38.2573, 36.7781, -97.2949, 0.12 ) }
    dend_43 { pt3dadd( -38.3021, 36.8498, -97.4715, 0.12 ) }
    dend_43 { pt3dadd( -38.826, 37.6185, -99.358, 0.12 ) }
    dend_43 { pt3dadd( -38.8535, 37.6525, -99.4517, 0.12 ) }
    dend_43 { pt3dadd( -40.0773, 38.9129, -103.255, 0.12 ) }
    dend_43 { pt3dadd( -40.1245, 38.9578, -103.379, 0.12 ) }
    dend_43 { pt3dadd( -40.8377, 39.6026, -105.289, 0.12 ) }
    dend_43 { pt3dadd( -41.3395, 40.0657, -106.677, 0.12 ) }
    dend_43 { pt3dadd( -42.8446, 41.5485, -110.786, 0.12 ) }
    dend_43 { pt3dadd( -42.8934, 41.5962, -110.906, 0.12 ) }
    dend_43 { pt3dadd( -44.3796, 43.0418, -114.067, 0.12 ) }
    dend_43 { pt3dadd( -47.2724, 45.985, -120.04, 0.12 ) }
    dend_43 { pt3dadd( -47.3262, 46.05, -120.15, 0.12 ) }
    dend_43 { pt3dadd( -48.2188, 47.2792, -121.775, 0.12 ) }
    dend_43 { pt3dadd( -48.4726, 47.6529, -122.211, 0.12 ) }
    dend_43 { pt3dadd( -49.1731, 48.7337, -123.447, 0.12 ) }
    dend_43 { pt3dadd( -49.2072, 48.7912, -123.51, 0.12 ) }
    dend_43 { pt3dadd( -52.67, 54.8754, -128.688, 0.12 ) }
    // Section: dend_42, id: dend_42, parent: soma_0 (entry count 20/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 1.17376, 0.919378, -6.85126, 0.48 ) }
    dend_42 { pt3dadd( 4.12896, 2.3948, -20.071, 0.48 ) }
    dend_42 { pt3dadd( 4.00617, 2.48542, -20.0812, 0.48 ) }
    dend_42 { pt3dadd( 2.77926, 3.49161, -20.18, 0.48 ) }
    dend_42 { pt3dadd( 2.63996, 3.62469, -20.2551, 0.48 ) }
    dend_42 { pt3dadd( 1.6208, 4.65562, -21.0067, 0.36 ) }
    dend_42 { pt3dadd( 1.49332, 4.77407, -21.1352, 0.36 ) }
    dend_42 { pt3dadd( 0.390839, 5.78317, -22.5729, 0.36 ) }
    dend_42 { pt3dadd( 0.275843, 5.88447, -22.7256, 0.36 ) }
    dend_42 { pt3dadd( -2.53363, 8.25145, -26.3938, 0.36 ) }
    dend_42 { pt3dadd( -2.59036, 8.29677, -26.4649, 0.36 ) }
    dend_42 { pt3dadd( -4.58661, 9.80637, -28.7564, 0.36 ) }
    dend_42 { pt3dadd( -4.80061, 9.95495, -28.978, 0.36 ) }
    dend_42 { pt3dadd( -6.3849, 10.8537, -30.5149, 0.36 ) }
    dend_42 { pt3dadd( -7.42441, 11.3793, -31.3802, 0.36 ) }
    dend_42 { pt3dadd( -7.54891, 11.433, -31.451, 0.36 ) }
    dend_42 { pt3dadd( -9.06791, 12.0895, -32.2488, 0.36 ) }
    dend_42 { pt3dadd( -9.15314, 12.1305, -32.2859, 0.36 ) }
    dend_42 { pt3dadd( -11.5996, 13.1259, -34.3146, 0.36 ) }
    dend_42 { pt3dadd( -11.733, 13.1705, -34.479, 0.36 ) }
    dend_42 { pt3dadd( -12.3595, 13.3422, -35.501, 0.36 ) }
    dend_42 { pt3dadd( -12.456, 13.3665, -35.6823, 0.36 ) }
    dend_42 { pt3dadd( -13.1127, 13.5499, -37.0342, 0.36 ) }
    dend_42 { pt3dadd( -15.5288, 14.368, -42.1875, 0.24 ) }
    dend_42 { pt3dadd( -15.6595, 14.4281, -42.4707, 0.24 ) }
    dend_42 { pt3dadd( -17.1455, 15.2136, -45.5647, 0.24 ) }
    dend_42 { pt3dadd( -17.3509, 15.3298, -45.9861, 0.24 ) }
    dend_42 { pt3dadd( -18.0594, 15.717, -47.2441, 0.24 ) }
    dend_42 { pt3dadd( -18.2033, 15.7943, -47.4523, 0.24 ) }
    dend_42 { pt3dadd( -19.3946, 16.5111, -48.3786, 0.24 ) }
    dend_42 { pt3dadd( -20.3939, 17.0611, -48.9924, 0.24 ) }
    dend_42 { pt3dadd( -20.5653, 17.1318, -49.1038, 0.24 ) }
    dend_42 { pt3dadd( -21.6489, 17.4082, -50.0294, 0.24 ) }
    dend_42 { pt3dadd( -21.7608, 17.4247, -50.1741, 0.24 ) }
    dend_42 { pt3dadd( -22.596, 17.5248, -51.5136, 0.24 ) }
    dend_42 { pt3dadd( -22.6703, 17.5296, -51.6472, 0.24 ) }
    dend_42 { pt3dadd( -24.5608, 17.6187, -55.0084, 0.24 ) }
    dend_42 { pt3dadd( -24.6709, 17.6247, -55.1945, 0.24 ) }
    dend_42 { pt3dadd( -26.2385, 17.7329, -57.7955, 0.24 ) }
    dend_42 { pt3dadd( -26.449, 17.7524, -58.111, 0.24 ) }
    dend_42 { pt3dadd( -27.1182, 17.8397, -58.9968, 0.24 ) }
    dend_42 { pt3dadd( -28.1333, 17.9987, -60.0974, 0.24 ) }
    dend_42 { pt3dadd( -28.5911, 18.0961, -60.3891, 0.24 ) }
    dend_42 { pt3dadd( -28.7236, 18.1272, -60.4589, 0.24 ) }
    dend_42 { pt3dadd( -30.8663, 18.6718, -61.3431, 0.24 ) }
    dend_42 { pt3dadd( -31.0026, 18.7147, -61.4019, 0.24 ) }
    dend_42 { pt3dadd( -32.0567, 19.1241, -61.8937, 0.24 ) }
    dend_42 { pt3dadd( -33.8587, 19.8891, -62.7165, 0.24 ) }
    dend_42 { pt3dadd( -35.5976, 20.6096, -63.4448, 0.24 ) }
    dend_42 { pt3dadd( -35.9127, 20.721, -63.557, 0.24 ) }
    dend_42 { pt3dadd( -37.1208, 21.0813, -63.8893, 0.24 ) }
    dend_42 { pt3dadd( -37.26, 21.1222, -63.9377, 0.24 ) }
    dend_42 { pt3dadd( -38.0959, 21.366, -64.3228, 0.24 ) }
    dend_42 { pt3dadd( -38.2761, 21.4209, -64.4292, 0.24 ) }
    dend_42 { pt3dadd( -39.2813, 21.8089, -64.9741, 0.24 ) }
    dend_42 { pt3dadd( -39.5173, 21.9149, -65.1195, 0.24 ) }
    dend_42 { pt3dadd( -40.5426, 22.4625, -65.9, 0.24 ) }
    dend_42 { pt3dadd( -40.7125, 22.5923, -66.1058, 0.24 ) }
    dend_42 { pt3dadd( -40.9607, 22.8289, -66.5102, 0.24 ) }
    dend_42 { pt3dadd( -41.0547, 22.9274, -66.6778, 0.24 ) }
    dend_42 { pt3dadd( -41.4348, 23.377, -67.4501, 0.24 ) }
    dend_42 { pt3dadd( -41.475, 23.4211, -67.5324, 0.24 ) }
    dend_42 { pt3dadd( -42.8682, 24.7692, -70.4144, 0.24 ) }
    dend_42 { pt3dadd( -43.075, 24.9706, -70.863, 0.24 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 84/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 2.78247, 0.533684, -6.31588, 1.2 ) }
    dend_37 { pt3dadd( 6.27388, 0.860451, -13.4048, 1.2 ) }
    dend_37 { pt3dadd( 9.58837, 0.17401, -15.0714, 1.2 ) }
    dend_37 { pt3dadd( 10.8293, -0.306135, -15.601, 0.96 ) }
    dend_37 { pt3dadd( 11.7023, -0.683831, -15.9318, 0.96 ) }
    dend_37 { pt3dadd( 13.6007, -1.50511, -16.6511, 0.96 ) }
    dend_37 { pt3dadd( 14.6501, -2.07056, -17.0482, 0.96 ) }
    dend_37 { pt3dadd( 15.7727, -2.83969, -17.4244, 0.96 ) }
    dend_37 { pt3dadd( 17.1405, -4.04698, -17.729, 0.84 ) }
    dend_37 { pt3dadd( 17.6701, -4.59778, -17.8557, 0.84 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -0.724841, -2.10836, 6.64197, 1.32 ) }
    dend_36 { pt3dadd( -0.892595, -3.08269, 9.40591, 1.32 ) }
    dend_36 { pt3dadd( -0.400016, -3.26449, 10.6328, 0.84 ) }
    dend_36 { pt3dadd( 0.218327, -3.46252, 12.1281, 0.84 ) }
    dend_36 { pt3dadd( 1.80087, -3.83403, 16.3817, 0.84 ) }
    dend_36 { pt3dadd( 2.54081, -4.06341, 18.6212, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_36 { pt3dadd( 6.06483, -5.2809, 29.4618, 1.56 ) }
    dend_36 { pt3dadd( 7.0232, -5.51572, 32.3533, 1.32 ) }
    dend_36 { pt3dadd( 7.52047, -5.59289, 33.8843, 1.08 ) }
    dend_36 { pt3dadd( 10.2202, -5.63513, 45.031, 1.08 ) }
    dend_36 { pt3dadd( 11.1872, -5.60805, 49.51, 0.72 ) }
    dend_36 { pt3dadd( 11.4706, -5.59693, 51.0795, 0.72 ) }
    dend_36 { pt3dadd( 11.9351, -5.57681, 54.1931, 0.72 ) }
    dend_36 { pt3dadd( 12.1026, -5.54122, 55.7389, 0.72 ) }
    dend_36 { pt3dadd( 13.2888, -4.71858, 72.7216, 0.72 ) }
    dend_36 { pt3dadd( 14.6113, -5.45088, 84.9785, 0.72 ) }
    dend_36 { pt3dadd( 15.5195, -4.19974, 97.2311, 0.72 ) }
    dend_36 { pt3dadd( 15.314, -4.41279, 109.577, 0.72 ) }
    dend_36 { pt3dadd( 14.9432, -5.56066, 121.868, 0.72 ) }
    dend_36 { pt3dadd( 14.5826, -4.44253, 134.162, 0.72 ) }
    dend_36 { pt3dadd( 16.5956, -1.72235, 146.039, 0.72 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 15/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.28125, -0.221663, 2.41274, 1.2 ) }
    dend_21 { pt3dadd( 7.02608, -0.273929, 2.68397, 1.2 ) }
    dend_21 { pt3dadd( 8.8475, -0.828492, 2.95118, 0.96 ) }
    dend_21 { pt3dadd( 10.6329, -1.37209, 3.21311, 0.96 ) }
    dend_21 { pt3dadd( 12.4939, -1.93869, 3.48613, 0.84 ) }
    dend_21 { pt3dadd( 13.3947, -2.21298, 3.61829, 0.84 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 21/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -4.24164, -3.93241, 4.12888, 0.84 ) }
    dend_18 { pt3dadd( -4.6899, -4.4109, 4.60154, 0.84 ) }
    dend_18 { pt3dadd( -5.13704, -5.7035, 5.44413, 0.72 ) }
    dend_18 { pt3dadd( -5.94348, -7.55266, 6.65738, 0.72 ) }
    dend_18 { pt3dadd( -6.31089, -8.27794, 7.13942, 0.72 ) }
    dend_18 { pt3dadd( -7.02774, -9.55623, 8.0148, 0.72 ) }
    dend_18 { pt3dadd( -7.60426, -10.4546, 8.71268, 0.6 ) }
    dend_18 { pt3dadd( -8.12863, -11.0839, 9.30392, 0.6 ) }
    dend_18 { pt3dadd( -8.6507, -11.5024, 9.79384, 0.6 ) }
    dend_18 { pt3dadd( -9.21655, -11.851, 10.215, 0.6 ) }
    dend_18 { pt3dadd( -9.5519, -12.0386, 10.4493, 0.6 ) }
    dend_18 { pt3dadd( -10.786, -12.7509, 11.1995, 0.6 ) }
    dend_18 { pt3dadd( -11.3686, -13.1092, 11.5814, 0.6 ) }
    dend_18 { pt3dadd( -11.846, -13.4235, 11.8905, 0.6 ) }
    dend_18 { pt3dadd( -12.6793, -13.9935, 12.3954, 0.6 ) }
    dend_18 { pt3dadd( -13.247, -14.4411, 12.6756, 0.6 ) }
    dend_18 { pt3dadd( -14.0077, -15.2235, 12.9207, 0.6 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 38/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.74899, -4.85459, -3.46875, 0.84 ) }
    dend_15 { pt3dadd( -4.02003, -5.25872, -3.74418, 0.84 ) }
    dend_15 { pt3dadd( -4.39331, -7.52574, -3.76608, 0.84 ) }
    dend_15 { pt3dadd( -4.68525, -9.29879, -3.78322, 0.84 ) }
    dend_15 { pt3dadd( -5.14675, -12.1016, -3.8103, 0.84 ) }
    dend_15 { pt3dadd( -5.57986, -14.732, -3.83572, 0.84 ) }
    dend_15 { pt3dadd( -5.93248, -16.8736, -3.85641, 0.84 ) }
    dend_15 { pt3dadd( -6.22656, -19.6726, -3.88534, 0.84 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 46/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.15603, -6.26023, -1.11895, 1.68 ) }
    dend_0 { pt3dadd( 1.67981, -5.01494, -0.903701, 1.68 ) }
    dend_0 { pt3dadd( 0.592066, -6.48236, 0.837293, 1.32 ) }
    dend_0 { pt3dadd( -0.0740458, -7.38098, 1.90345, 1.68 ) }
    dend_0 { pt3dadd( -2.18433, -10.2279, 5.2811, 2.76 ) }
    dend_0 { pt3dadd( -3.40484, -11.8744, 7.23459, 1.44 ) }
    dend_0 { pt3dadd( -4.74742, -13.6856, 9.38349, 1.8 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 53/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 6.23116, -4.50457, -0.172177, 0.605332 ) }
    axon_0 { pt3dadd( 18.3305, -13.3705, -0.172177, 0.605332 ) }
    axon_0 { pt3dadd( 30.4299, -22.2365, -0.172177, 0.605332 ) }
    // Section: apic_2, id: apic_2, parent: apic_0 (entry count 56/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -7.96593, 26.2263, -9.09479, 1.56 ) }
    apic_2 { pt3dadd( -8.43507, 27.6506, -9.61558, 1.32 ) }
    apic_2 { pt3dadd( -9.41097, 30.0826, -10.3694, 1.2 ) }
    apic_2 { pt3dadd( -10.2851, 32.048, -10.8984, 1.2 ) }
    apic_2 { pt3dadd( -10.8913, 33.3175, -11.2025, 1.2 ) }
    apic_2 { pt3dadd( -11.6475, 34.9012, -11.5819, 0.96 ) }
    apic_2 { pt3dadd( -12.6024, 36.9011, -12.061, 0.96 ) }
    apic_2 { pt3dadd( -13.3153, 38.29, -12.3372, 0.96 ) }
    apic_2 { pt3dadd( -13.9792, 39.3926, -12.4401, 0.96 ) }
    apic_2 { pt3dadd( -14.6237, 40.3009, -12.5118, 1.8 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 66/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -7.96593, 26.2263, -9.09479, 1.56 ) }
    apic_1 { pt3dadd( -6.38798, 29.0407, -8.80305, 0.24 ) }
    apic_1 { pt3dadd( -5.93485, 30.078, -8.57406, 0.24 ) }
    apic_1 { pt3dadd( -5.29551, 31.865, -8.11585, 0.24 ) }
    apic_1 { pt3dadd( -4.18486, 35.0447, -7.28704, 0.24 ) }
    apic_1 { pt3dadd( -3.60387, 36.6161, -6.87554, 0.24 ) }
    apic_1 { pt3dadd( -2.79558, 38.5832, -6.36762, 0.24 ) }
    apic_1 { pt3dadd( -1.52296, 41.4571, -5.39699, 0.24 ) }
    apic_1 { pt3dadd( -0.792121, 42.8265, -4.96274, 0.24 ) }
    apic_1 { pt3dadd( -0.137858, 43.803, -4.72709, 0.24 ) }
    apic_1 { pt3dadd( 0.539833, 44.5634, -4.68006, 0.24 ) }
    apic_1 { pt3dadd( 1.57136, 45.503, -4.71721, 0.24 ) }
    apic_1 { pt3dadd( 2.19289, 45.9778, -4.78214, 0.24 ) }
    apic_1 { pt3dadd( 4.49712, 47.4922, -5.09531, 0.24 ) }
    apic_1 { pt3dadd( 6.85022, 48.9222, -5.25037, 0.24 ) }
    apic_1 { pt3dadd( 8.61223, 50.0549, -5.24455, 0.24 ) }
    apic_1 { pt3dadd( 10.8746, 51.574, -5.09138, 0.24 ) }
    apic_1 { pt3dadd( 12.4298, 52.6505, -4.8975, 0.24 ) }
    apic_1 { pt3dadd( 13.4959, 53.3992, -4.68854, 0.24 ) }
    apic_1 { pt3dadd( 16.3662, 55.3737, -3.84878, 0.24 ) }
    apic_1 { pt3dadd( 17.9245, 56.3869, -3.251, 0.24 ) }
    apic_1 { pt3dadd( 19.6445, 57.5037, -2.4591, 0.24 ) }
    apic_1 { pt3dadd( 20.8294, 58.2693, -1.85757, 0.24 ) }
    apic_1 { pt3dadd( 22.3039, 59.2681, -1.08184, 0.24 ) }
    apic_1 { pt3dadd( 24.155, 60.5674, -0.0799645, 0.24 ) }
    apic_1 { pt3dadd( 25.7006, 61.5663, 0.735792, 0.24 ) }
    apic_1 { pt3dadd( 27.1473, 62.37, 1.49715, 0.24 ) }
    apic_1 { pt3dadd( 28.6537, 63.2012, 2.23361, 0.24 ) }
    apic_1 { pt3dadd( 30.2252, 64.0676, 2.88839, 0.24 ) }
    apic_1 { pt3dadd( 31.2797, 64.6741, 3.24372, 0.24 ) }
    apic_1 { pt3dadd( 32.7247, 65.6517, 3.55996, 0.24 ) }
    apic_1 { pt3dadd( 34.1697, 66.7776, 3.75951, 0.24 ) }
    apic_1 { pt3dadd( 36.1072, 68.5204, 3.80303, 0.24 ) }
    apic_1 { pt3dadd( 37.2732, 69.7529, 3.73577, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    apic_1 { pt3dadd( 38.8348, 71.4535, 3.62698, 0.24 ) }
    apic_1 { pt3dadd( 42.1256, 75.053, 3.4032, 0.24 ) }
    apic_1 { pt3dadd( 43.9481, 77.1015, 3.31292, 0.24 ) }
    apic_1 { pt3dadd( 46.1782, 79.4457, 3.37527, 0.24 ) }
    apic_1 { pt3dadd( 47.1095, 80.3113, 3.45833, 0.24 ) }
    apic_1 { pt3dadd( 49.8048, 82.5702, 3.74802, 0.24 ) }
    apic_1 { pt3dadd( 51.5979, 83.8599, 4.02084, 0.24 ) }
    apic_1 { pt3dadd( 52.7436, 84.5497, 4.37459, 0.24 ) }
    apic_1 { pt3dadd( 55.3705, 86.0388, 5.42984, 0.24 ) }
    apic_1 { pt3dadd( 57.1241, 87.0525, 6.21698, 0.24 ) }
    apic_1 { pt3dadd( 58.6687, 88.0461, 6.83189, 0.24 ) }
    apic_1 { pt3dadd( 60.3813, 89.3198, 7.35759, 0.24 ) }
    apic_1 { pt3dadd( 63.3809, 91.5577, 7.95414, 0.24 ) }
    apic_1 { pt3dadd( 64.8824, 92.6518, 8.05097, 0.24 ) }
    apic_1 { pt3dadd( 67.4739, 94.61, 7.67111, 0.12 ) }
    apic_1 { pt3dadd( 69.5624, 96.1572, 7.0593, 0.24 ) }
    apic_1 { pt3dadd( 71.1188, 97.2305, 6.33676, 0.24 ) }
    apic_1 { pt3dadd( 72.9694, 98.3372, 5.20064, 0.24 ) }
    apic_1 { pt3dadd( 75.0275, 99.2804, 3.74589, 0.24 ) }
    apic_1 { pt3dadd( 77.2911, 100.072, 1.6967, 0.24 ) }
    apic_1 { pt3dadd( 77.9074, 100.285, 0.944446, 0.24 ) }
    apic_1 { pt3dadd( 78.46, 100.487, 0.14863, 0.24 ) }
    apic_1 { pt3dadd( 79.2008, 100.883, -1.16094, 0.24 ) }
    apic_1 { pt3dadd( 79.8663, 101.443, -2.61591, 0.24 ) }
    apic_1 { pt3dadd( 81.9565, 104.003, -7.98466, 0.24 ) }
    apic_1 { pt3dadd( 82.8106, 105.206, -10.373, 0.24 ) }
    apic_1 { pt3dadd( 83.3915, 106.201, -12.2602, 0.24 ) }
    apic_1 { pt3dadd( 83.977, 107.501, -14.5197, 0.24 ) }
    apic_1 { pt3dadd( 84.2996, 108.492, -16.0286, 0.24 ) }
    apic_1 { pt3dadd( 84.6384, 109.867, -17.7759, 0.12 ) }
    apic_1 { pt3dadd( 86.5016, 117.679, -26.1892, 0.12 ) }
    apic_1 { pt3dadd( 89.7407, 122.828, -36.102, 0.12 ) }
    apic_1 { pt3dadd( 93.3584, 128.108, -45.8133, 0.12 ) }
    apic_1 { pt3dadd( 96.288, 131.857, -56.4261, 0.12 ) }
    apic_1 { pt3dadd( 99.7123, 133.58, -67.4068, 0.12 ) }
    apic_1 { pt3dadd( 103.682, 136.131, -78.037, 0.12 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 36/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 17.6701, -4.59778, -17.8557, 0.84 ) }
    dend_39 { pt3dadd( 19.0447, -4.99443, -17.9281, 0.48 ) }
    dend_39 { pt3dadd( 20.4371, -5.37531, -17.9963, 0.48 ) }
    dend_39 { pt3dadd( 22.1105, -5.75841, -18.0679, 0.48 ) }
    dend_39 { pt3dadd( 23.5078, -6.04899, -18.1211, 0.48 ) }
    dend_39 { pt3dadd( 25.5854, -6.48105, -18.2001, 0.36 ) }
    dend_39 { pt3dadd( 26.4706, -6.66515, -18.2338, 0.36 ) }
    dend_39 { pt3dadd( 28.302, -7.04817, -18.2959, 0.36 ) }
    dend_39 { pt3dadd( 30.1539, -7.39577, -18.3626, 0.36 ) }
    dend_39 { pt3dadd( 31.2724, -7.62135, -18.4035, 0.36 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 46/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 17.6701, -4.59778, -17.8557, 0.84 ) }
    dend_38 { pt3dadd( 18.8303, -5.66852, -23.337, 0.36 ) }
    dend_38 { pt3dadd( 19.3111, -6.12073, -25.3396, 0.36 ) }
    dend_38 { pt3dadd( 20.4282, -7.23998, -29.4024, 0.24 ) }
    dend_38 { pt3dadd( 20.7702, -7.67944, -30.5661, 0.36 ) }
    dend_38 { pt3dadd( 21.2297, -8.4435, -32.307, 0.36 ) }
    dend_38 { pt3dadd( 21.3887, -8.74136, -32.9399, 0.36 ) }
    dend_38 { pt3dadd( 22.3343, -10.4708, -36.1136, 0.36 ) }
    dend_38 { pt3dadd( 22.727, -11.2511, -37.4103, 0.36 ) }
    dend_38 { pt3dadd( 23.7634, -13.802, -41.2357, 0.36 ) }
    dend_38 { pt3dadd( 24.4344, -15.6169, -43.9335, 0.36 ) }
    dend_38 { pt3dadd( 24.8146, -16.7149, -45.4599, 0.24 ) }
    dend_38 { pt3dadd( 25.3997, -18.2628, -47.6476, 0.12 ) }
    dend_38 { pt3dadd( 25.6145, -18.6611, -48.2745, 0.12 ) }
    dend_38 { pt3dadd( 25.8869, -19.0747, -49.0241, 0.12 ) }
    dend_38 { pt3dadd( 26.8813, -20.0333, -51.323, 0.12 ) }
    dend_38 { pt3dadd( 27.2185, -20.2833, -52.1254, 0.12 ) }
    dend_38 { pt3dadd( 27.6943, -20.6035, -53.3001, 0.12 ) }
    dend_38 { pt3dadd( 28.9954, -21.3897, -56.7297, 0.12 ) }
    dend_38 { pt3dadd( 29.8386, -21.8225, -58.9781, 0.12 ) }
    dend_38 { pt3dadd( 31.0158, -22.3406, -62.2047, 0.12 ) }
    dend_38 { pt3dadd( 32.2439, -22.8661, -66.0204, 0.12 ) }
    // Section: dend_33, id: dend_33, parent: dend_21 (entry count 68/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 13.3947, -2.21298, 3.61829, 0.84 ) }
    dend_33 { pt3dadd( 14.5967, -1.31543, 3.68524, 0.36 ) }
    dend_33 { pt3dadd( 15.4629, -0.781892, 3.60453, 0.36 ) }
    dend_33 { pt3dadd( 16.2531, -0.39148, 3.48685, 0.36 ) }
    dend_33 { pt3dadd( 18.2264, 0.353371, 3.15595, 0.36 ) }
    dend_33 { pt3dadd( 20.9005, 1.17992, 2.70337, 0.36 ) }
    dend_33 { pt3dadd( 21.9158, 1.47512, 2.54258, 0.36 ) }
    dend_33 { pt3dadd( 22.8064, 1.69475, 2.34168, 0.36 ) }
    dend_33 { pt3dadd( 23.5777, 1.83217, 2.19034, 0.36 ) }
    dend_33 { pt3dadd( 24.466, 1.95242, 2.04838, 0.36 ) }
    dend_33 { pt3dadd( 25.0663, 2.03689, 1.98026, 0.36 ) }
    dend_33 { pt3dadd( 26.1258, 2.25042, 1.99491, 0.36 ) }
    dend_33 { pt3dadd( 26.9319, 2.55595, 2.02731, 0.36 ) }
    dend_33 { pt3dadd( 28.5712, 3.40397, 2.08615, 0.36 ) }
    dend_33 { pt3dadd( 29.3339, 3.85846, 2.11008, 0.36 ) }
    dend_33 { pt3dadd( 30.5014, 4.59366, 2.14289, 0.36 ) }
    dend_33 { pt3dadd( 31.4851, 5.20013, 2.1677, 0.36 ) }
    dend_33 { pt3dadd( 34.1511, 6.7615, 2.22469, 0.36 ) }
    dend_33 { pt3dadd( 34.6737, 7.06355, 2.23485, 0.36 ) }
    dend_33 { pt3dadd( 35.1805, 7.36091, 2.27097, 0.36 ) }
    dend_33 { pt3dadd( 36.0084, 7.83944, 2.3851, 0.36 ) }
    dend_33 { pt3dadd( 37.5148, 8.65394, 2.75462, 0.36 ) }
    dend_33 { pt3dadd( 38.0391, 8.92469, 2.93692, 0.36 ) }
    dend_33 { pt3dadd( 39.3119, 9.70124, 3.40897, 0.36 ) }
    dend_33 { pt3dadd( 40.2841, 10.3963, 3.82791, 0.36 ) }
    dend_33 { pt3dadd( 40.7821, 10.8153, 4.07062, 0.36 ) }
    dend_33 { pt3dadd( 41.4607, 11.482, 4.44026, 0.36 ) }
    dend_33 { pt3dadd( 42.1112, 12.1779, 4.81909, 0.36 ) }
    dend_33 { pt3dadd( 42.6893, 12.8043, 5.1467, 0.36 ) }
    dend_33 { pt3dadd( 43.5835, 13.7187, 5.70067, 0.36 ) }
    dend_33 { pt3dadd( 44.2695, 14.3777, 6.16386, 0.36 ) }
    dend_33 { pt3dadd( 45.2415, 15.2618, 6.82753, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_33 { pt3dadd( 45.7414, 15.7026, 7.16464, 0.36 ) }
    dend_33 { pt3dadd( 46.9089, 16.7235, 7.91244, 0.36 ) }
    dend_33 { pt3dadd( 48.5014, 18.1439, 8.84941, 0.36 ) }
    dend_33 { pt3dadd( 49.4054, 18.9142, 9.35987, 0.36 ) }
    dend_33 { pt3dadd( 50.2858, 19.5755, 9.84999, 0.36 ) }
    dend_33 { pt3dadd( 51.0112, 20.0589, 10.2427, 0.36 ) }
    dend_33 { pt3dadd( 51.8797, 20.6135, 10.6933, 0.36 ) }
    dend_33 { pt3dadd( 52.6629, 21.1059, 11.0717, 0.36 ) }
    dend_33 { pt3dadd( 54.1541, 22.0148, 11.7079, 0.36 ) }
    dend_33 { pt3dadd( 55.1811, 22.566, 12.0762, 0.36 ) }
    dend_33 { pt3dadd( 55.6434, 22.8005, 12.2082, 0.36 ) }
    dend_33 { pt3dadd( 57.1573, 23.5138, 12.5164, 0.36 ) }
    dend_33 { pt3dadd( 58.4544, 24.0841, 12.7887, 0.36 ) }
    dend_33 { pt3dadd( 60.0058, 24.7709, 13.1205, 0.36 ) }
    dend_33 { pt3dadd( 61.8371, 25.6673, 13.49, 0.36 ) }
    dend_33 { pt3dadd( 63.1884, 26.3859, 13.7879, 0.36 ) }
    dend_33 { pt3dadd( 64.9294, 27.3164, 14.1903, 0.36 ) }
    dend_33 { pt3dadd( 67.4728, 28.6233, 14.7916, 0.36 ) }
    dend_33 { pt3dadd( 68.4077, 29.0864, 15.0158, 0.36 ) }
    dend_33 { pt3dadd( 69.4939, 29.6214, 15.2815, 0.36 ) }
    dend_33 { pt3dadd( 70.7474, 30.2405, 15.6366, 0.36 ) }
    dend_33 { pt3dadd( 72.5303, 31.1044, 16.13, 0.36 ) }
    dend_33 { pt3dadd( 73.8804, 31.7849, 16.5197, 0.36 ) }
    dend_33 { pt3dadd( 74.8803, 32.3011, 16.7829, 0.36 ) }
    dend_33 { pt3dadd( 75.8457, 32.7883, 17.0657, 0.36 ) }
    dend_33 { pt3dadd( 77.1686, 33.4077, 17.4867, 0.36 ) }
    dend_33 { pt3dadd( 78.2028, 33.8656, 17.944, 0.36 ) }
    dend_33 { pt3dadd( 79.575, 34.5018, 18.7607, 0.36 ) }
    dend_33 { pt3dadd( 80.0766, 34.7462, 19.1348, 0.36 ) }
    dend_33 { pt3dadd( 80.9986, 35.2258, 19.9379, 0.36 ) }
    dend_33 { pt3dadd( 81.8204, 35.6823, 20.7529, 0.36 ) }
    dend_33 { pt3dadd( 83.7052, 36.8395, 22.785, 0.36 ) }
    dend_33 { pt3dadd( 84.54, 37.3981, 23.6813, 0.36 ) }
    dend_33 { pt3dadd( 85.618, 38.1422, 24.7128, 0.36 ) }
    dend_33 { pt3dadd( 86.2972, 38.6325, 25.2919, 0.36 ) }
    dend_33 { pt3dadd( 87.0173, 39.1816, 25.8135, 0.36 ) }
    dend_33 { pt3dadd( 88.0319, 39.962, 26.367, 0.36 ) }
    dend_33 { pt3dadd( 89.5077, 41.0394, 26.8704, 0.36 ) }
    dend_33 { pt3dadd( 91.3936, 42.2974, 27.3149, 0.36 ) }
    dend_33 { pt3dadd( 92.5898, 43.0682, 27.5618, 0.36 ) }
    dend_33 { pt3dadd( 93.8103, 43.8069, 27.7745, 0.36 ) }
    dend_33 { pt3dadd( 95.2933, 44.6584, 27.9936, 0.36 ) }
    dend_33 { pt3dadd( 96.3646, 45.2616, 28.1403, 0.36 ) }
    dend_33 { pt3dadd( 97.8166, 46.1388, 28.3769, 0.36 ) }
    dend_33 { pt3dadd( 99.111, 47.0259, 28.6398, 0.36 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 45/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 13.3947, -2.21298, 3.61829, 0.84 ) }
    dend_22 { pt3dadd( 13.986, -2.42312, 6.48207, 0.84 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 47/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -14.0077, -15.2235, 12.9207, 0.6 ) }
    dend_20 { pt3dadd( -15.5885, -16.9165, 13.2323, 0.48 ) }
    dend_20 { pt3dadd( -17.1761, -18.3459, 13.5926, 0.48 ) }
    dend_20 { pt3dadd( -18.4215, -19.3139, 13.8992, 0.48 ) }
    dend_20 { pt3dadd( -20.0573, -20.6494, 14.3809, 0.48 ) }
    dend_20 { pt3dadd( -21.3734, -21.8315, 14.8344, 0.48 ) }
    dend_20 { pt3dadd( -22.992, -23.3058, 15.456, 0.48 ) }
    dend_20 { pt3dadd( -23.999, -24.1661, 15.8658, 0.48 ) }
    dend_20 { pt3dadd( -25.4317, -25.3621, 16.5352, 0.48 ) }
    dend_20 { pt3dadd( -27.3283, -26.9923, 17.6487, 0.48 ) }
    dend_20 { pt3dadd( -28.6533, -28.1619, 18.5469, 0.48 ) }
    dend_20 { pt3dadd( -29.4582, -28.8941, 19.123, 0.48 ) }
    dend_20 { pt3dadd( -30.6058, -29.9407, 19.9253, 0.48 ) }
    dend_20 { pt3dadd( -31.2382, -30.5143, 20.3772, 0.48 ) }
    dend_20 { pt3dadd( -33.0179, -32.0456, 21.6633, 0.48 ) }
    dend_20 { pt3dadd( -34.3979, -33.0936, 22.6861, 0.48 ) }
    dend_20 { pt3dadd( -35.1651, -33.6704, 23.3211, 0.48 ) }
    dend_20 { pt3dadd( -35.8122, -34.1945, 23.8751, 0.48 ) }
    dend_20 { pt3dadd( -37.402, -35.5365, 25.2745, 0.48 ) }
    dend_20 { pt3dadd( -38.2635, -36.3562, 26.0769, 0.48 ) }
    dend_20 { pt3dadd( -39.4073, -37.6185, 27.2174, 0.48 ) }
    dend_20 { pt3dadd( -40.4529, -38.9265, 28.3548, 0.48 ) }
    dend_20 { pt3dadd( -41.6851, -40.4347, 29.607, 0.48 ) }
    dend_20 { pt3dadd( -42.017, -40.823, 29.9025, 0.48 ) }
    dend_20 { pt3dadd( -43.0274, -41.8347, 30.6143, 0.48 ) }
    dend_20 { pt3dadd( -44.403, -43.1028, 31.4645, 0.48 ) }
    dend_20 { pt3dadd( -45.7495, -44.2598, 32.1546, 0.48 ) }
    dend_20 { pt3dadd( -47.6949, -45.868, 33.0491, 0.48 ) }
    dend_20 { pt3dadd( -49.0212, -46.9004, 33.6663, 0.48 ) }
    dend_20 { pt3dadd( -50.4866, -47.9417, 34.3025, 0.48 ) }
    dend_20 { pt3dadd( -51.2027, -48.3849, 34.5717, 0.48 ) }
    dend_20 { pt3dadd( -52.4914, -49.1207, 34.9786, 0.48 ) }
    dend_20 { pt3dadd( -53.6778, -49.7241, 35.3403, 0.48 ) }
    dend_20 { pt3dadd( -61.701, -56.8301, 40.478, 0.48 ) }
    dend_20 { pt3dadd( -69.1784, -65.5724, 43.4649, 0.48 ) }
    dend_20 { pt3dadd( -78.1574, -73.2908, 44.4973, 0.48 ) }
    dend_20 { pt3dadd( -86.2433, -81.8206, 46.2644, 0.48 ) }
    dend_20 { pt3dadd( -95.6322, -88.4197, 49.357, 0.48 ) }
    dend_20 { pt3dadd( -105.806, -94.145, 51.5889, 0.48 ) }
    dend_20 { pt3dadd( -115.458, -100.985, 52.7405, 0.48 ) }
    dend_20 { pt3dadd( -126.063, -106.297, 51.9762, 0.48 ) }
    dend_20 { pt3dadd( -137.428, -109.709, 52.6435, 0.48 ) }
    dend_20 { pt3dadd( -149.004, -112.093, 51.3917, 0.48 ) }
    dend_20 { pt3dadd( -160.228, -115.918, 52.2055, 0.48 ) }
    dend_20 { pt3dadd( -171.575, -119.149, 53.6449, 0.48 ) }
    dend_20 { pt3dadd( -182.523, -122.746, 56.5545, 0.48 ) }
    dend_20 { pt3dadd( -192.256, -127.879, 61.0477, 0.48 ) }
    dend_20 { pt3dadd( -201.034, -133.95, 66.2766, 0.48 ) }
    dend_20 { pt3dadd( -209.313, -138.47, 73.508, 0.48 ) }
    dend_20 { pt3dadd( -217.146, -142.693, 81.3869, 0.48 ) }
    dend_20 { pt3dadd( -224.7, -146.409, 89.7762, 0.48 ) }
    dend_20 { pt3dadd( -233.357, -148.48, 97.6523, 0.48 ) }
    dend_20 { pt3dadd( -241.876, -151.504, 105.369, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_20 { pt3dadd( -249.144, -155.852, 113.708, 0.48 ) }
    dend_20 { pt3dadd( -258.71, -158.271, 120.334, 0.48 ) }
    dend_20 { pt3dadd( -268.736, -161.993, 125.519, 0.48 ) }
    dend_20 { pt3dadd( -277.564, -167.412, 131.346, 0.48 ) }
    dend_20 { pt3dadd( -284.97, -174.995, 136.723, 0.48 ) }
    dend_20 { pt3dadd( -293.046, -182.05, 141.848, 0.48 ) }
    dend_20 { pt3dadd( -300.89, -187.86, 148.629, 0.48 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 7/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -14.0077, -15.2235, 12.9207, 0.6 ) }
    dend_19 { pt3dadd( -15.5204, -14.8503, 13.903, 0.6 ) }
    dend_19 { pt3dadd( -16.3877, -14.5859, 14.5094, 0.6 ) }
    dend_19 { pt3dadd( -17.5941, -14.2581, 15.3082, 0.6 ) }
    dend_19 { pt3dadd( -18.6095, -14.0195, 15.9463, 0.48 ) }
    dend_19 { pt3dadd( -21.2826, -13.3985, 17.5067, 0.48 ) }
    dend_19 { pt3dadd( -21.6655, -13.3046, 17.7043, 0.48 ) }
    dend_19 { pt3dadd( -22.6304, -13.0657, 18.17, 0.48 ) }
    dend_19 { pt3dadd( -23.6815, -12.8476, 18.5809, 0.48 ) }
    dend_19 { pt3dadd( -24.2115, -12.7725, 18.7259, 0.48 ) }
    dend_19 { pt3dadd( -25.0589, -12.6842, 18.972, 0.48 ) }
    dend_19 { pt3dadd( -26.5471, -12.5695, 19.3593, 0.48 ) }
    dend_19 { pt3dadd( -27.9909, -12.4631, 19.799, 0.48 ) }
    dend_19 { pt3dadd( -28.9877, -12.3977, 20.1257, 0.48 ) }
    dend_19 { pt3dadd( -29.8273, -12.3597, 20.4089, 0.48 ) }
    dend_19 { pt3dadd( -33.043, -12.4315, 21.7447, 0.48 ) }
    dend_19 { pt3dadd( -34.4123, -12.6427, 22.5252, 0.48 ) }
    dend_19 { pt3dadd( -35.4612, -12.9901, 23.3164, 0.48 ) }
    dend_19 { pt3dadd( -36.4273, -13.5769, 24.3695, 0.48 ) }
    dend_19 { pt3dadd( -36.8792, -14.0117, 25.0903, 0.48 ) }
    dend_19 { pt3dadd( -37.9486, -15.4647, 27.276, 0.48 ) }
    dend_19 { pt3dadd( -38.8684, -17.1079, 29.4768, 0.48 ) }
    dend_19 { pt3dadd( -39.2822, -17.8466, 30.4818, 0.48 ) }
    dend_19 { pt3dadd( -40.2, -19.3085, 32.4937, 0.48 ) }
    dend_19 { pt3dadd( -41.3321, -20.6879, 34.5046, 0.48 ) }
    dend_19 { pt3dadd( -41.9139, -21.1729, 35.2321, 0.48 ) }
    dend_19 { pt3dadd( -42.8212, -21.6808, 35.9526, 0.48 ) }
    dend_19 { pt3dadd( -44.5055, -22.3486, 36.8443, 0.48 ) }
    dend_19 { pt3dadd( -46.0488, -22.8883, 37.4625, 0.48 ) }
    dend_19 { pt3dadd( -47.8154, -23.4898, 37.9762, 0.48 ) }
    dend_19 { pt3dadd( -49.0957, -23.9302, 38.2828, 0.48 ) }
    dend_19 { pt3dadd( -50.2481, -24.3431, 38.5734, 0.48 ) }
    dend_19 { pt3dadd( -53.032, -25.4418, 39.3207, 0.48 ) }
    dend_19 { pt3dadd( -54.8995, -26.2849, 39.8437, 0.48 ) }
    dend_19 { pt3dadd( -55.7265, -26.6999, 40.0816, 0.48 ) }
    dend_19 { pt3dadd( -64.3754, -28.2539, 45.1783, 0.48 ) }
    dend_19 { pt3dadd( -73.2721, -30.9963, 49.2431, 0.48 ) }
    dend_19 { pt3dadd( -82.2714, -34.6424, 52.2285, 0.48 ) }
    dend_19 { pt3dadd( -91.8785, -37.6492, 53.5911, 0.48 ) }
    dend_19 { pt3dadd( -101.544, -40.7767, 53.5543, 0.48 ) }
    dend_19 { pt3dadd( -110.943, -44.5814, 52.9412, 0.48 ) }
    dend_19 { pt3dadd( -120.381, -47.5983, 50.7019, 0.48 ) }
    dend_19 { pt3dadd( -130.312, -49.0762, 49.16, 0.48 ) }
    dend_19 { pt3dadd( -139.893, -51.2654, 46.5899, 0.48 ) }
    dend_19 { pt3dadd( -148.824, -54.0921, 42.6599, 0.48 ) }
    dend_19 { pt3dadd( -157.435, -57.2648, 38.3026, 0.48 ) }
    dend_19 { pt3dadd( -164.776, -61.8564, 32.9904, 0.48 ) }
    dend_19 { pt3dadd( -173.027, -64.2102, 27.5523, 0.48 ) }
    dend_19 { pt3dadd( -180.59, -65.8057, 20.9602, 0.48 ) }
    dend_19 { pt3dadd( -189.434, -65.2932, 15.9887, 0.48 ) }
    dend_19 { pt3dadd( -198.698, -66.0427, 11.8883, 0.48 ) }
    dend_19 { pt3dadd( -208.282, -67.0707, 8.68138, 0.48 ) }
    dend_19 { pt3dadd( -217.275, -68.4837, 4.1749, 0.48 ) }
    dend_19 { pt3dadd( -226.331, -68.988, -0.400907, 0.48 ) }
    dend_19 { pt3dadd( -235.449, -69.3176, -4.86796, 0.48 ) }
    dend_19 { pt3dadd( -244.424, -69.8616, -9.594, 0.48 ) }
    dend_19 { pt3dadd( -253.742, -71.6444, -13.2256, 0.48 ) }
    dend_19 { pt3dadd( -262.917, -72.5759, -17.4865, 0.48 ) }
    dend_19 { pt3dadd( -271.807, -73.7605, -22.257, 0.48 ) }
    dend_19 { pt3dadd( -281.58, -73.5293, -25.0187, 0.48 ) }
    dend_19 { pt3dadd( -290.935, -74.1193, -28.9342, 0.48 ) }
    dend_19 { pt3dadd( -300.555, -73.2449, -32.0772, 0.48 ) }
    dend_19 { pt3dadd( -310.147, -73.8462, -35.3694, 0.48 ) }
    dend_19 { pt3dadd( -319.086, -72.6295, -40.038, 0.48 ) }
    dend_19 { pt3dadd( -328.202, -72.6817, -44.5208, 0.48 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -6.22656, -19.6726, -3.88534, 0.84 ) }
    dend_17 { pt3dadd( -7.12289, -20.1521, -2.75311, 0.72 ) }
    dend_17 { pt3dadd( -7.82176, -20.4819, -1.92356, 0.48 ) }
    dend_17 { pt3dadd( -9.13248, -21.0089, -0.502412, 0.48 ) }
    dend_17 { pt3dadd( -9.76211, -21.247, 0.140782, 0.48 ) }
    dend_17 { pt3dadd( -11.1225, -21.768, 1.44381, 0.48 ) }
    dend_17 { pt3dadd( -12.0686, -22.1401, 2.31218, 0.48 ) }
    dend_17 { pt3dadd( -12.6869, -22.3511, 2.86181, 0.36 ) }
    dend_17 { pt3dadd( -13.3285, -22.5452, 3.40441, 0.36 ) }
    dend_17 { pt3dadd( -13.9038, -22.7214, 3.70186, 0.36 ) }
    dend_17 { pt3dadd( -15.0529, -23.0425, 3.74696, 0.36 ) }
    dend_17 { pt3dadd( -15.5063, -23.1776, 3.58486, 0.36 ) }
    dend_17 { pt3dadd( -16.9293, -23.6871, 2.83848, 0.36 ) }
    dend_17 { pt3dadd( -17.7616, -23.9688, 2.32005, 0.36 ) }
    dend_17 { pt3dadd( -22.3482, -25.2551, -0.676534, 0.36 ) }
    dend_17 { pt3dadd( -23.2521, -25.4787, -1.27373, 0.36 ) }
    dend_17 { pt3dadd( -24.2749, -25.7206, -1.95532, 0.36 ) }
    dend_17 { pt3dadd( -25.173, -25.9402, -2.54, 0.36 ) }
    dend_17 { pt3dadd( -27.1331, -26.3918, -3.73165, 0.36 ) }
    dend_17 { pt3dadd( -28.3079, -26.6619, -4.26, 0.36 ) }
    dend_17 { pt3dadd( -29.4686, -26.928, -4.54674, 0.36 ) }
    dend_17 { pt3dadd( -30.5819, -27.1563, -4.90331, 0.36 ) }
    dend_17 { pt3dadd( -31.472, -27.3113, -5.24742, 0.36 ) }
    dend_17 { pt3dadd( -33.0187, -27.5963, -5.9188, 0.36 ) }
    dend_17 { pt3dadd( -34.293, -27.8966, -6.49384, 0.36 ) }
    dend_17 { pt3dadd( -35.3236, -28.1357, -6.96638, 0.36 ) }
    dend_17 { pt3dadd( -37.8174, -28.5451, -8.0329, 0.36 ) }
    dend_17 { pt3dadd( -39.0279, -28.7266, -8.51125, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_17 { pt3dadd( -39.6171, -28.8254, -8.75321, 0.36 ) }
    dend_17 { pt3dadd( -41.2816, -29.1349, -9.4711, 0.36 ) }
    dend_17 { pt3dadd( -42.3595, -29.2947, -9.92777, 0.36 ) }
    dend_17 { pt3dadd( -43.9642, -29.4778, -10.5118, 0.36 ) }
    dend_17 { pt3dadd( -45.0718, -29.6243, -10.8055, 0.36 ) }
    dend_17 { pt3dadd( -46.849, -29.7959, -11.2173, 0.36 ) }
    dend_17 { pt3dadd( -47.9337, -29.8415, -11.5396, 0.36 ) }
    dend_17 { pt3dadd( -48.8786, -29.8689, -11.872, 0.36 ) }
    dend_17 { pt3dadd( -50.0878, -29.9314, -12.3171, 0.36 ) }
    dend_17 { pt3dadd( -51.9195, -30.0636, -12.9857, 0.36 ) }
    dend_17 { pt3dadd( -53.1486, -30.0957, -13.4195, 0.36 ) }
    dend_17 { pt3dadd( -55.4383, -30.0597, -14.1427, 0.36 ) }
    dend_17 { pt3dadd( -56.299, -30.0232, -14.4463, 0.36 ) }
    dend_17 { pt3dadd( -57.5415, -29.9862, -14.9381, 0.36 ) }
    dend_17 { pt3dadd( -58.6162, -29.9361, -15.3946, 0.36 ) }
    dend_17 { pt3dadd( -59.996, -29.8919, -16.2223, 0.36 ) }
    dend_17 { pt3dadd( -61.2004, -29.9863, -17.0692, 0.36 ) }
    dend_17 { pt3dadd( -62.1098, -30.1694, -17.8022, 0.36 ) }
    dend_17 { pt3dadd( -63.0336, -30.4755, -18.7165, 0.36 ) }
    dend_17 { pt3dadd( -63.4866, -30.7427, -19.2567, 0.36 ) }
    dend_17 { pt3dadd( -65.4491, -32.5747, -22.0194, 0.36 ) }
    dend_17 { pt3dadd( -66.2247, -33.5387, -23.2539, 0.36 ) }
    dend_17 { pt3dadd( -66.8273, -34.3998, -24.2456, 0.36 ) }
    dend_17 { pt3dadd( -67.318, -35.1238, -24.9976, 0.36 ) }
    dend_17 { pt3dadd( -67.9851, -36.0918, -25.9342, 0.36 ) }
    dend_17 { pt3dadd( -68.8198, -37.2596, -26.9547, 0.36 ) }
    dend_17 { pt3dadd( -70.1222, -38.969, -28.1432, 0.36 ) }
    dend_17 { pt3dadd( -70.9402, -40.0929, -28.8566, 0.36 ) }
    dend_17 { pt3dadd( -71.965, -41.5851, -29.7242, 0.36 ) }
    dend_17 { pt3dadd( -72.7886, -42.8478, -30.3631, 0.36 ) }
    dend_17 { pt3dadd( -73.0695, -43.279, -30.5574, 0.36 ) }
    dend_17 { pt3dadd( -73.9843, -44.7778, -31.0432, 0.36 ) }
    dend_17 { pt3dadd( -74.6508, -45.874, -31.2857, 0.36 ) }
    dend_17 { pt3dadd( -75.8154, -47.6458, -31.6124, 0.36 ) }
    dend_17 { pt3dadd( -76.4899, -48.5244, -31.7544, 0.36 ) }
    dend_17 { pt3dadd( -78.3157, -50.4423, -32.2891, 0.36 ) }
    dend_17 { pt3dadd( -79.0629, -51.0866, -32.5562, 0.36 ) }
    dend_17 { pt3dadd( -80.488, -52.0789, -33.1129, 0.36 ) }
    dend_17 { pt3dadd( -81.8022, -52.8487, -33.5756, 0.24 ) }
    dend_17 { pt3dadd( -82.792, -53.3341, -33.9236, 0.24 ) }
    dend_17 { pt3dadd( -85.0276, -54.3613, -34.9005, 0.12 ) }
    dend_17 { pt3dadd( -85.3478, -54.5103, -35.0554, 0.12 ) }
    dend_17 { pt3dadd( -86.3206, -54.9735, -35.5569, 0.12 ) }
    dend_17 { pt3dadd( -86.9431, -55.306, -35.8894, 0.12 ) }
    dend_17 { pt3dadd( -88.4079, -56.2417, -36.6341, 0.12 ) }
    dend_17 { pt3dadd( -89.3616, -56.9502, -37.0644, 0.12 ) }
    dend_17 { pt3dadd( -90.547, -57.8677, -37.4683, 0.12 ) }
    dend_17 { pt3dadd( -91.9225, -58.9099, -37.8909, 0.12 ) }
    dend_17 { pt3dadd( -93.0532, -59.7722, -38.1928, 0.12 ) }
    dend_17 { pt3dadd( -94.0066, -60.509, -38.3882, 0.12 ) }
    dend_17 { pt3dadd( -94.6701, -61.0549, -38.461, 0.12 ) }
    dend_17 { pt3dadd( -95.7679, -61.9017, -38.5225, 0.12 ) }
    dend_17 { pt3dadd( -96.6819, -62.5682, -38.5592, 0.12 ) }
    dend_17 { pt3dadd( -97.6355, -63.1983, -38.6108, 0.12 ) }
    dend_17 { pt3dadd( -98.5473, -63.7171, -38.6681, 0.12 ) }
    dend_17 { pt3dadd( -100.839, -64.8953, -38.8553, 0.12 ) }
    dend_17 { pt3dadd( -102.499, -65.7036, -39.0479, 0.12 ) }
    dend_17 { pt3dadd( -103.909, -66.3651, -39.3084, 0.12 ) }
    dend_17 { pt3dadd( -105.268, -66.9625, -39.63, 0.12 ) }
    dend_17 { pt3dadd( -106.234, -67.347, -39.9096, 0.12 ) }
    dend_17 { pt3dadd( -106.522, -67.4566, -40.0005, 0.12 ) }
    dend_17 { pt3dadd( -108.228, -68.0913, -40.5332, 0.12 ) }
    dend_17 { pt3dadd( -109.622, -68.7423, -40.9046, 0.12 ) }
    dend_17 { pt3dadd( -110.251, -69.0827, -40.9996, 0.12 ) }
    dend_17 { pt3dadd( -111.573, -69.9102, -41.1211, 0.12 ) }
    dend_17 { pt3dadd( -112.329, -70.4614, -41.106, 0.12 ) }
    dend_17 { pt3dadd( -113.33, -71.2663, -40.9494, 0.12 ) }
    dend_17 { pt3dadd( -114.375, -72.1853, -40.6113, 0.12 ) }
    dend_17 { pt3dadd( -115.598, -73.425, -39.9677, 0.12 ) }
    dend_17 { pt3dadd( -116.421, -74.4073, -39.4239, 0.12 ) }
    dend_17 { pt3dadd( -117.689, -76.1297, -38.4561, 0.12 ) }
    dend_17 { pt3dadd( -118.465, -77.2645, -37.8583, 0.12 ) }
    dend_17 { pt3dadd( -118.96, -78.0384, -37.4688, 0.12 ) }
    dend_17 { pt3dadd( -120.014, -79.738, -36.6493, 0.12 ) }
    dend_17 { pt3dadd( -120.747, -81.0026, -36.1213, 0.12 ) }
    dend_17 { pt3dadd( -121.296, -81.9268, -35.8126, 0.12 ) }
    dend_17 { pt3dadd( -121.933, -82.9112, -35.5931, 0.12 ) }
    dend_17 { pt3dadd( -122.67, -83.9604, -35.4302, 0.12 ) }
    dend_17 { pt3dadd( -123.885, -85.4766, -35.2706, 0.12 ) }
    dend_17 { pt3dadd( -125.11, -86.7851, -35.1905, 0.12 ) }
    dend_17 { pt3dadd( -126.494, -88.1533, -35.1015, 0.12 ) }
    dend_17 { pt3dadd( -127.354, -88.9724, -35.0458, 0.12 ) }
    dend_17 { pt3dadd( -128.287, -89.8024, -34.9843, 0.12 ) }
    dend_17 { pt3dadd( -129.149, -90.5066, -34.9254, 0.12 ) }
    dend_17 { pt3dadd( -130.131, -91.2266, -34.8536, 0.12 ) }
    dend_17 { pt3dadd( -130.885, -91.6635, -34.7896, 0.12 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 86/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -6.22656, -19.6726, -3.88534, 0.84 ) }
    dend_16 { pt3dadd( -5.34175, -22.7059, -3.97031, 0.24 ) }
    dend_16 { pt3dadd( -4.86894, -24.2247, -3.91176, 0.24 ) }
    dend_16 { pt3dadd( -4.36902, -25.8577, -3.91412, 0.24 ) }
    dend_16 { pt3dadd( -3.57666, -28.7059, -3.98094, 0.24 ) }
    dend_16 { pt3dadd( -2.86574, -31.7317, -4.08251, 0.24 ) }
    dend_16 { pt3dadd( -2.60718, -33.1806, -4.13388, 0.24 ) }
    dend_16 { pt3dadd( -2.24335, -35.7424, -4.21698, 0.24 ) }
    dend_16 { pt3dadd( -1.9658, -38.0672, -4.35839, 0.24 ) }
    dend_16 { pt3dadd( -1.78783, -40.1404, -4.53959, 0.24 ) }
    dend_16 { pt3dadd( -1.60178, -42.3644, -4.80795, 0.24 ) }
    dend_16 { pt3dadd( -1.28371, -45.133, -5.08761, 0.24 ) }
    dend_16 { pt3dadd( -1.10984, -46.4959, -5.28115, 0.24 ) }
    dend_16 { pt3dadd( -0.920875, -48.0505, -5.55085, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_16 { pt3dadd( -0.594221, -50.6346, -5.93789, 0.24 ) }
    dend_16 { pt3dadd( -0.270716, -53.0203, -6.30851, 0.24 ) }
    dend_16 { pt3dadd( -0.144891, -54.0398, -6.47171, 0.24 ) }
    dend_16 { pt3dadd( 0.18555, -56.9187, -7.03842, 0.24 ) }
    dend_16 { pt3dadd( 0.345771, -58.9992, -7.46597, 0.24 ) }
    dend_16 { pt3dadd( 0.45764, -61.5574, -8.02077, 0.24 ) }
    dend_16 { pt3dadd( 0.504798, -63.3804, -8.41466, 0.24 ) }
    dend_16 { pt3dadd( 0.548333, -66.2815, -9.00689, 0.24 ) }
    dend_16 { pt3dadd( 0.707188, -69.1984, -9.68411, 0.24 ) }
    dend_16 { pt3dadd( 0.933828, -71.0895, -10.1765, 0.24 ) }
    dend_16 { pt3dadd( 1.16219, -72.4617, -10.6063, 0.24 ) }
    dend_16 { pt3dadd( 1.48739, -73.9335, -11.2242, 0.24 ) }
    dend_16 { pt3dadd( 1.82595, -75.0586, -11.7843, 0.24 ) }
    dend_16 { pt3dadd( 2.65652, -77.0679, -13.2008, 0.24 ) }
    dend_16 { pt3dadd( 2.9252, -77.648, -13.6907, 0.24 ) }
    dend_16 { pt3dadd( 3.29083, -78.3337, -14.4033, 0.24 ) }
    dend_16 { pt3dadd( 4.40977, -80.5225, -16.7949, 0.24 ) }
    dend_16 { pt3dadd( 4.92628, -81.7345, -18.0959, 0.24 ) }
    dend_16 { pt3dadd( 5.95453, -84.5409, -20.9636, 0.24 ) }
    dend_16 { pt3dadd( 6.364, -85.8057, -22.1318, 0.24 ) }
    dend_16 { pt3dadd( 7.26815, -88.7921, -24.6473, 0.24 ) }
    dend_16 { pt3dadd( 7.62694, -90.2209, -25.8251, 0.24 ) }
    dend_16 { pt3dadd( 7.90628, -91.722, -26.9321, 0.24 ) }
    dend_16 { pt3dadd( 8.27218, -94.6623, -28.8645, 0.24 ) }
    dend_16 { pt3dadd( 8.48546, -96.4316, -29.825, 0.24 ) }
    dend_16 { pt3dadd( 8.72619, -98.2496, -30.8148, 0.24 ) }
    dend_16 { pt3dadd( 9.25842, -101.256, -32.4548, 0.24 ) }
    dend_16 { pt3dadd( 9.5558, -102.62, -33.3086, 0.24 ) }
    dend_16 { pt3dadd( 9.78681, -103.457, -33.8889, 0.24 ) }
    dend_16 { pt3dadd( 10.4766, -105.822, -35.5074, 0.24 ) }
    dend_16 { pt3dadd( 11.4426, -108.917, -37.6672, 0.12 ) }
    dend_16 { pt3dadd( 12.1536, -111.069, -39.2466, 0.12 ) }
    dend_16 { pt3dadd( 13.0445, -113.794, -41.2032, 0.12 ) }
    dend_16 { pt3dadd( 13.6761, -115.734, -42.709, 0.12 ) }
    dend_16 { pt3dadd( 14.0911, -117.06, -43.724, 0.12 ) }
    dend_16 { pt3dadd( 14.4928, -118.439, -44.7375, 0.12 ) }
    dend_16 { pt3dadd( 15.3597, -121.133, -46.642, 0.12 ) }
    dend_16 { pt3dadd( 15.7076, -122.2, -47.3712, 0.12 ) }
    dend_16 { pt3dadd( 16.7043, -124.924, -49.2389, 0.12 ) }
    dend_16 { pt3dadd( 17.3186, -126.675, -50.4513, 0.12 ) }
    dend_16 { pt3dadd( 18.6525, -130.493, -53.0479, 0.12 ) }
    dend_16 { pt3dadd( 19.3743, -132.478, -54.2935, 0.12 ) }
    dend_16 { pt3dadd( 19.7306, -133.466, -54.875, 0.12 ) }
    dend_16 { pt3dadd( 20.8636, -136.71, -56.7249, 0.12 ) }
    dend_16 { pt3dadd( 21.5076, -138.704, -57.7291, 0.12 ) }
    dend_16 { pt3dadd( 22.1061, -140.685, -58.6476, 0.12 ) }
    dend_16 { pt3dadd( 22.5085, -142.115, -59.1991, 0.12 ) }
    dend_16 { pt3dadd( 23.3537, -145.292, -60.2253, 0.12 ) }
    dend_16 { pt3dadd( 23.6366, -146.405, -60.521, 0.12 ) }
    dend_16 { pt3dadd( 24.1256, -148.519, -61.0686, 0.12 ) }
    dend_16 { pt3dadd( 24.6331, -150.895, -61.769, 0.12 ) }
    dend_16 { pt3dadd( 25.0581, -153.248, -62.5988, 0.12 ) }
    dend_16 { pt3dadd( 25.4574, -155.66, -63.5401, 0.12 ) }
    dend_16 { pt3dadd( 25.8172, -157.698, -64.393, 0.12 ) }
    dend_16 { pt3dadd( 26.3961, -161.066, -65.9509, 0.12 ) }
    dend_16 { pt3dadd( 26.6798, -162.912, -66.87, 0.12 ) }
    dend_16 { pt3dadd( 27.0488, -165.106, -67.953, 0.12 ) }
    dend_16 { pt3dadd( 27.3109, -166.734, -68.7376, 0.12 ) }
    dend_16 { pt3dadd( 27.5092, -167.831, -69.2424, 0.12 ) }
    dend_16 { pt3dadd( 27.8754, -169.394, -69.8814, 0.12 ) }
    dend_16 { pt3dadd( 28.2307, -170.61, -70.255, 0.12 ) }
    dend_16 { pt3dadd( 28.6294, -171.888, -70.6666, 0.12 ) }
    dend_16 { pt3dadd( 29.1003, -173.467, -71.1976, 0.12 ) }
    dend_16 { pt3dadd( 29.387, -174.631, -71.6452, 0.12 ) }
    dend_16 { pt3dadd( 29.6544, -176.023, -72.2337, 0.12 ) }
    dend_16 { pt3dadd( 29.8554, -177.324, -72.8331, 0.12 ) }
    dend_16 { pt3dadd( 30.1433, -179.831, -74.2295, 0.12 ) }
    dend_16 { pt3dadd( 30.2031, -180.978, -75.0017, 0.12 ) }
    dend_16 { pt3dadd( 30.2538, -182.173, -75.939, 0.12 ) }
    dend_16 { pt3dadd( 30.2561, -183.359, -76.9214, 0.12 ) }
    dend_16 { pt3dadd( 30.2137, -184.39, -77.7797, 0.12 ) }
    dend_16 { pt3dadd( 30.078, -186.937, -79.8681, 0.12 ) }
    dend_16 { pt3dadd( 30.0453, -189.008, -81.6123, 0.12 ) }
    dend_16 { pt3dadd( 30.0614, -190.686, -83.049, 0.12 ) }
    dend_16 { pt3dadd( 30.1273, -191.731, -83.9129, 0.12 ) }
    dend_16 { pt3dadd( 30.2025, -192.366, -84.3971, 0.12 ) }
    dend_16 { pt3dadd( 30.3688, -193.471, -85.1245, 0.12 ) }
    dend_16 { pt3dadd( 30.7128, -195.737, -86.2381, 0.12 ) }
    dend_16 { pt3dadd( 30.8899, -196.95, -86.7944, 0.12 ) }
    dend_16 { pt3dadd( 31.0709, -198.457, -87.5885, 0.12 ) }
    dend_16 { pt3dadd( 31.2313, -199.818, -88.3986, 0.12 ) }
    dend_16 { pt3dadd( 31.3027, -200.438, -88.8065, 0.12 ) }
    dend_16 { pt3dadd( 31.3907, -201.235, -89.363, 0.12 ) }
    dend_16 { pt3dadd( 31.6394, -203.931, -91.2041, 0.12 ) }
    dend_16 { pt3dadd( 31.8495, -205.867, -92.6044, 0.12 ) }
    dend_16 { pt3dadd( 31.9374, -206.496, -93.0842, 0.12 ) }
    dend_16 { pt3dadd( 32.2686, -208.225, -94.3917, 0.12 ) }
    dend_16 { pt3dadd( 32.6107, -209.545, -95.298, 0.12 ) }
    dend_16 { pt3dadd( 32.9271, -210.502, -95.8825, 0.12 ) }
    dend_16 { pt3dadd( 33.8367, -212.882, -97.1451, 0.12 ) }
    dend_16 { pt3dadd( 34.481, -214.487, -97.8951, 0.12 ) }
    dend_16 { pt3dadd( 34.9483, -215.648, -98.4913, 0.12 ) }
    dend_16 { pt3dadd( 35.4356, -217.117, -99.1999, 0.12 ) }
    dend_16 { pt3dadd( 35.8785, -218.662, -99.9614, 0.12 ) }
    dend_16 { pt3dadd( 36.7568, -222.413, -101.642, 0.12 ) }
    dend_16 { pt3dadd( 37.1092, -224.319, -102.4, 0.12 ) }
    dend_16 { pt3dadd( 37.5148, -227.2, -103.475, 0.12 ) }
    dend_16 { pt3dadd( 37.9706, -231.371, -105.005, 0.12 ) }
    dend_16 { pt3dadd( 38.227, -234.379, -106.129, 0.12 ) }
    dend_16 { pt3dadd( 38.5258, -239.831, -107.634, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( 38.5705, -242.444, -108.169, 0.12 ) }
    dend_16 { pt3dadd( 38.5104, -246.94, -108.873, 0.12 ) }
    dend_16 { pt3dadd( 38.4036, -249.474, -109.169, 0.12 ) }
    dend_16 { pt3dadd( 37.8421, -257.354, -109.723, 0.12 ) }
    dend_16 { pt3dadd( 36.9205, -264.745, -109.774, 0.12 ) }
    dend_16 { pt3dadd( 36.3052, -268.206, -109.63, 0.12 ) }
    dend_16 { pt3dadd( 35.9404, -270.025, -109.535, 0.12 ) }
    dend_16 { pt3dadd( 35.3883, -272.433, -109.324, 0.12 ) }
    dend_16 { pt3dadd( 34.5867, -275.795, -109.139, 0.12 ) }
    dend_16 { pt3dadd( 33.6845, -279.549, -109.181, 0.12 ) }
    dend_16 { pt3dadd( 33.2108, -282.104, -109.586, 0.12 ) }
    dend_16 { pt3dadd( 32.859, -285.447, -110.187, 0.12 ) }
    dend_16 { pt3dadd( 32.8181, -287.576, -110.442, 0.12 ) }
    dend_16 { pt3dadd( 33.0066, -291.329, -110.457, 0.12 ) }
    dend_16 { pt3dadd( 33.2197, -294.191, -110.121, 0.12 ) }
    dend_16 { pt3dadd( 33.3612, -295.881, -109.704, 0.12 ) }
    dend_16 { pt3dadd( 33.5649, -298.876, -108.74, 0.12 ) }
    dend_16 { pt3dadd( 33.7876, -304.218, -106.746, 0.12 ) }
    dend_16 { pt3dadd( 33.9213, -309.268, -104.911, 0.12 ) }
    dend_16 { pt3dadd( 33.9, -313.802, -103.461, 0.12 ) }
    dend_16 { pt3dadd( 33.7657, -317.157, -102.768, 0.12 ) }
    dend_16 { pt3dadd( 33.4853, -320.03, -102.452, 0.12 ) }
    dend_16 { pt3dadd( 33.1649, -321.869, -102.546, 0.12 ) }
    dend_16 { pt3dadd( 32.4552, -325.162, -103.361, 0.12 ) }
    dend_16 { pt3dadd( 31.4469, -329.597, -104.93, 0.12 ) }
    dend_16 { pt3dadd( 30.6513, -332.901, -106.414, 0.12 ) }
    dend_16 { pt3dadd( 30.1771, -334.677, -107.306, 0.12 ) }
    dend_16 { pt3dadd( 28.3495, -340.878, -110.714, 0.12 ) }
    dend_16 { pt3dadd( 27.2797, -344.311, -112.692, 0.12 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 29/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -4.74742, -13.6856, 9.38349, 1.8 ) }
    dend_10 { pt3dadd( -5.4077, -14.8142, 10.0418, 1.08 ) }
    dend_10 { pt3dadd( -5.81328, -15.5847, 10.3451, 1.08 ) }
    dend_10 { pt3dadd( -6.94857, -17.8739, 10.9124, 0.96 ) }
    dend_10 { pt3dadd( -7.35925, -18.7185, 11.088, 0.96 ) }
    dend_10 { pt3dadd( -7.90472, -19.859, 11.2446, 0.96 ) }
    dend_10 { pt3dadd( -8.14646, -20.3882, 11.2873, 0.96 ) }
    dend_10 { pt3dadd( -8.91978, -22.2216, 11.2035, 0.84 ) }
    dend_10 { pt3dadd( -9.21394, -23.0162, 11.1294, 0.84 ) }
    dend_10 { pt3dadd( -9.51886, -23.9464, 11.0065, 0.84 ) }
    dend_10 { pt3dadd( -9.86949, -25.0157, 10.9422, 0.84 ) }
    dend_10 { pt3dadd( -10.2639, -26.1665, 10.9644, 0.84 ) }
    dend_10 { pt3dadd( -10.645, -27.2638, 11.0706, 0.84 ) }
    dend_10 { pt3dadd( -11.0226, -28.3795, 11.2654, 0.84 ) }
    dend_10 { pt3dadd( -11.3886, -29.4948, 11.4816, 0.84 ) }
    dend_10 { pt3dadd( -11.6795, -30.3994, 11.6521, 0.84 ) }
    dend_10 { pt3dadd( -11.9505, -31.2344, 11.8589, 0.84 ) }
    dend_10 { pt3dadd( -12.3542, -32.4239, 12.1564, 0.84 ) }
    dend_10 { pt3dadd( -12.6552, -33.3225, 12.3428, 0.84 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 48/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -4.74742, -13.6856, 9.38349, 1.8 ) }
    dend_1 { pt3dadd( -6.72143, -13.4343, 9.82566, 0.72 ) }
    dend_1 { pt3dadd( -8.65448, -13.1882, 10.2586, 0.72 ) }
    dend_1 { pt3dadd( -10.4353, -12.9614, 10.6575, 1.2 ) }
    dend_1 { pt3dadd( -12.3608, -12.7163, 11.0888, 0.96 ) }
    dend_1 { pt3dadd( -14.1675, -12.4863, 11.4935, 0.96 ) }
    dend_1 { pt3dadd( -15.0155, -12.3783, 11.6835, 0.96 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 55/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 30.4299, -22.2365, -0.172177, 0.163892 ) }
    axon_1 { pt3dadd( 42.5293, -31.1024, -0.172177, 0.163892 ) }
    axon_1 { pt3dadd( 54.6287, -39.9684, -0.172177, 0.163892 ) }
    // Section: apic_4, id: apic_4, parent: apic_2 (entry count 58/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -14.6237, 40.3009, -12.5118, 1.8 ) }
    apic_4 { pt3dadd( -14.702, 42.0128, -12.8291, 1.2 ) }
    apic_4 { pt3dadd( -14.7755, 43.6208, -13.127, 1.08 ) }
    apic_4 { pt3dadd( -14.8137, 44.4568, -13.2819, 1.08 ) }
    apic_4 { pt3dadd( -14.868, 45.6426, -13.5016, 1.08 ) }
    apic_4 { pt3dadd( -14.9513, 47.4648, -13.8393, 1.8 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 64/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -14.6237, 40.3009, -12.5118, 1.8 ) }
    apic_3 { pt3dadd( -16.1734, 41.6291, -13.0692, 0.12 ) }
    apic_3 { pt3dadd( -16.2678, 41.7012, -13.0826, 0.24 ) }
    apic_3 { pt3dadd( -16.9908, 42.1407, -13.1361, 0.24 ) }
    apic_3 { pt3dadd( -17.5249, 42.4074, -13.168, 0.24 ) }
    apic_3 { pt3dadd( -18.9701, 43.0539, -13.075, 0.24 ) }
    apic_3 { pt3dadd( -20.0516, 43.546, -12.9411, 0.24 ) }
    apic_3 { pt3dadd( -21.281, 44.1263, -12.8126, 0.24 ) }
    apic_3 { pt3dadd( -22.7769, 44.8532, -12.603, 0.24 ) }
    apic_3 { pt3dadd( -23.733, 45.3031, -12.419, 0.24 ) }
    apic_3 { pt3dadd( -25.6339, 46.356, -11.9659, 0.24 ) }
    apic_3 { pt3dadd( -26.549, 46.9592, -11.7626, 0.24 ) }
    apic_3 { pt3dadd( -28.852, 48.5706, -10.8522, 0.24 ) }
    apic_3 { pt3dadd( -31.0392, 50.118, -9.7913, 0.24 ) }
    apic_3 { pt3dadd( -32.387, 51.0978, -8.98195, 0.24 ) }
    apic_3 { pt3dadd( -34.0008, 52.3209, -7.79313, 0.24 ) }
    apic_3 { pt3dadd( -35.2119, 53.2368, -6.7147, 0.24 ) }
    apic_3 { pt3dadd( -38.6299, 55.6885, -3.16556, 0.24 ) }
    apic_3 { pt3dadd( -39.6931, 56.4725, -1.92562, 0.24 ) }
    apic_3 { pt3dadd( -40.6498, 57.2463, -0.766914, 0.24 ) }
    apic_3 { pt3dadd( -42.0196, 58.3488, 0.93528, 0.24 ) }
    apic_3 { pt3dadd( -43.4198, 59.4022, 2.56537, 0.24 ) }
    apic_3 { pt3dadd( -44.116, 59.9386, 3.24712, 0.24 ) }
    apic_3 { pt3dadd( -45.6478, 61.2219, 4.2421, 0.24 ) }
    apic_3 { pt3dadd( -46.4348, 61.9448, 4.74575, 0.24 ) }
    apic_3 { pt3dadd( -47.6371, 63.034, 5.43747, 0.24 ) }
    apic_3 { pt3dadd( -49.1725, 64.3109, 6.222, 0.24 ) }
    apic_3 { pt3dadd( -50.7945, 65.5557, 7.01411, 0.24 ) }
    apic_3 { pt3dadd( -51.8879, 66.3161, 7.55862, 0.24 ) }
    apic_3 { pt3dadd( -54.3949, 67.8136, 8.88078, 0.24 ) }
    apic_3 { pt3dadd( -55.5285, 68.4926, 9.54404, 0.24 ) }
    apic_3 { pt3dadd( -57.1519, 69.5928, 10.7324, 0.24 ) }
    apic_3 { pt3dadd( -57.9788, 70.1932, 11.4481, 0.24 ) }
    apic_3 { pt3dadd( -58.6574, 70.6827, 12.0215, 0.24 ) }
    apic_3 { pt3dadd( -59.7296, 71.4167, 12.7253, 0.24 ) }
    apic_3 { pt3dadd( -61.0789, 72.2782, 13.2912, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_3 { pt3dadd( -62.4652, 73.2309, 13.7103, 0.24 ) }
    apic_3 { pt3dadd( -63.4219, 73.9142, 13.9181, 0.24 ) }
    apic_3 { pt3dadd( -64.4237, 74.6075, 14.0747, 0.24 ) }
    apic_3 { pt3dadd( -65.8448, 75.5979, 14.1994, 0.24 ) }
    apic_3 { pt3dadd( -67.7184, 76.8216, 14.2323, 0.24 ) }
    apic_3 { pt3dadd( -69.4143, 77.8506, 14.1815, 0.24 ) }
    apic_3 { pt3dadd( -70.7267, 78.5905, 14.0988, 0.24 ) }
    apic_3 { pt3dadd( -71.7565, 79.1395, 14.0294, 0.24 ) }
    apic_3 { pt3dadd( -74.4597, 80.5873, 13.8419, 0.24 ) }
    apic_3 { pt3dadd( -75.6954, 81.1722, 13.743, 0.24 ) }
    apic_3 { pt3dadd( -76.7307, 81.6291, 13.664, 0.24 ) }
    apic_3 { pt3dadd( -77.6558, 82.0361, 13.6081, 0.24 ) }
    apic_3 { pt3dadd( -78.8326, 82.5982, 13.5501, 0.24 ) }
    apic_3 { pt3dadd( -80.1224, 83.2231, 13.4744, 0.24 ) }
    apic_3 { pt3dadd( -83.1199, 84.6847, 13.252, 0.24 ) }
    apic_3 { pt3dadd( -85.2383, 85.7446, 13.0533, 0.24 ) }
    apic_3 { pt3dadd( -86.9453, 86.6766, 12.8843, 0.24 ) }
    apic_3 { pt3dadd( -88.5379, 87.6564, 12.7198, 0.24 ) }
    apic_3 { pt3dadd( -89.693, 88.3928, 12.6091, 0.24 ) }
    apic_3 { pt3dadd( -90.7348, 89.0295, 12.4369, 0.24 ) }
    apic_3 { pt3dadd( -92.0835, 89.8006, 12.1089, 0.24 ) }
    apic_3 { pt3dadd( -94.5657, 91.0035, 11.3283, 0.24 ) }
    apic_3 { pt3dadd( -95.8741, 91.526, 10.8584, 0.24 ) }
    apic_3 { pt3dadd( -97.2379, 92.0736, 10.3635, 0.24 ) }
    apic_3 { pt3dadd( -100.237, 93.3042, 9.31206, 0.24 ) }
    apic_3 { pt3dadd( -101.409, 93.7653, 8.9174, 0.24 ) }
    apic_3 { pt3dadd( -102.491, 94.2231, 8.67573, 0.24 ) }
    apic_3 { pt3dadd( -103.891, 94.861, 8.49196, 0.24 ) }
    apic_3 { pt3dadd( -106.749, 96.1971, 8.17903, 0.24 ) }
    apic_3 { pt3dadd( -108.53, 97.1497, 8.0406, 0.24 ) }
    apic_3 { pt3dadd( -110.666, 98.5267, 7.88146, 0.24 ) }
    apic_3 { pt3dadd( -114.243, 101.164, 7.6782, 0.24 ) }
    apic_3 { pt3dadd( -116.273, 102.862, 7.52689, 0.24 ) }
    apic_3 { pt3dadd( -118.294, 104.856, 7.2996, 0.24 ) }
    apic_3 { pt3dadd( -119.46, 106.171, 7.10355, 0.24 ) }
    apic_3 { pt3dadd( -121.502, 108.82, 6.56058, 0.24 ) }
    apic_3 { pt3dadd( -123.066, 111.112, 5.85805, 0.24 ) }
    apic_3 { pt3dadd( -124.171, 112.887, 5.0311, 0.24 ) }
    apic_3 { pt3dadd( -124.904, 114.117, 4.39917, 0.24 ) }
    apic_3 { pt3dadd( -125.397, 115.011, 3.96562, 0.24 ) }
    apic_3 { pt3dadd( -126.267, 116.446, 3.13783, 0.24 ) }
    apic_3 { pt3dadd( -127.102, 117.815, 2.28767, 0.24 ) }
    apic_3 { pt3dadd( -127.989, 119.449, 1.19128, 0.24 ) }
    apic_3 { pt3dadd( -129.156, 121.818, -0.324089, 0.24 ) }
    apic_3 { pt3dadd( -129.819, 123.399, -1.25738, 0.12 ) }
    apic_3 { pt3dadd( -130.294, 124.618, -1.91703, 0.12 ) }
    apic_3 { pt3dadd( -131.048, 126.847, -2.94186, 0.12 ) }
    apic_3 { pt3dadd( -131.738, 128.816, -3.70412, 0.12 ) }
    apic_3 { pt3dadd( -131.978, 129.439, -3.91208, 0.12 ) }
    apic_3 { pt3dadd( -132.61, 130.758, -4.18349, 0.12 ) }
    apic_3 { pt3dadd( -133.741, 132.621, -4.41782, 0.12 ) }
    apic_3 { pt3dadd( -134.743, 133.97, -4.52565, 0.12 ) }
    apic_3 { pt3dadd( -136.423, 135.738, -4.51173, 0.12 ) }
    apic_3 { pt3dadd( -137.313, 136.59, -4.47021, 0.12 ) }
    apic_3 { pt3dadd( -140.574, 139.505, -4.27254, 0.12 ) }
    apic_3 { pt3dadd( -142.147, 140.785, -4.15181, 0.12 ) }
    apic_3 { pt3dadd( -143.648, 141.941, -3.98826, 0.12 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 57/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 31.2724, -7.62135, -18.4035, 0.36 ) }
    dend_41 { pt3dadd( 32.6654, -6.40434, -19.1907, 0.36 ) }
    dend_41 { pt3dadd( 34.1978, -5.17115, -19.8713, 0.36 ) }
    dend_41 { pt3dadd( 35.1071, -4.50773, -20.2184, 0.36 ) }
    dend_41 { pt3dadd( 36.0965, -3.74219, -20.5013, 0.36 ) }
    dend_41 { pt3dadd( 37.6733, -2.52012, -20.8548, 0.36 ) }
    dend_41 { pt3dadd( 39.4958, -1.0351, -21.2088, 0.36 ) }
    dend_41 { pt3dadd( 41.6914, 0.909346, -21.4963, 0.36 ) }
    dend_41 { pt3dadd( 43.6995, 2.80518, -21.7034, 0.36 ) }
    dend_41 { pt3dadd( 45.7465, 4.82652, -21.8978, 0.36 ) }
    dend_41 { pt3dadd( 47.3538, 6.47263, -22.042, 0.36 ) }
    dend_41 { pt3dadd( 48.876, 8.07533, -22.169, 0.36 ) }
    dend_41 { pt3dadd( 50.2946, 9.57936, -22.2936, 0.36 ) }
    dend_41 { pt3dadd( 51.5558, 11.0544, -22.4369, 0.36 ) }
    dend_41 { pt3dadd( 52.7406, 12.4909, -22.6058, 0.36 ) }
    dend_41 { pt3dadd( 54.3329, 14.4029, -22.8947, 0.36 ) }
    dend_41 { pt3dadd( 55.9826, 16.3685, -23.2135, 0.36 ) }
    dend_41 { pt3dadd( 56.6643, 17.1519, -23.3471, 0.36 ) }
    dend_41 { pt3dadd( 57.4475, 18.0018, -23.4971, 0.36 ) }
    dend_41 { pt3dadd( 58.5625, 19.1959, -23.7093, 0.36 ) }
    dend_41 { pt3dadd( 60.413, 21.0838, -24.0717, 0.36 ) }
    dend_41 { pt3dadd( 62.0329, 22.6344, -24.3859, 0.36 ) }
    dend_41 { pt3dadd( 62.9206, 23.477, -24.5603, 0.36 ) }
    dend_41 { pt3dadd( 64.0491, 24.5156, -24.7743, 0.36 ) }
    dend_41 { pt3dadd( 64.7209, 25.1159, -24.8958, 0.36 ) }
    dend_41 { pt3dadd( 66.0377, 26.3647, -25.1284, 0.36 ) }
    dend_41 { pt3dadd( 67.296, 27.7107, -25.3523, 0.24 ) }
    dend_41 { pt3dadd( 68.1133, 28.7718, -25.4834, 0.24 ) }
    dend_41 { pt3dadd( 69.1764, 30.4699, -25.6831, 0.24 ) }
    dend_41 { pt3dadd( 69.9146, 32.0361, -25.8616, 0.24 ) }
    dend_41 { pt3dadd( 70.4904, 33.4817, -26.0243, 0.24 ) }
    dend_41 { pt3dadd( 70.959, 34.8114, -26.1737, 0.24 ) }
    dend_41 { pt3dadd( 71.7439, 37.2144, -26.4311, 0.24 ) }
    dend_41 { pt3dadd( 72.4069, 39.3019, -26.6494, 0.24 ) }
    dend_41 { pt3dadd( 73.1215, 41.6416, -26.8839, 0.24 ) }
    dend_41 { pt3dadd( 73.5672, 43.1284, -26.9974, 0.24 ) }
    dend_41 { pt3dadd( 74.2938, 45.4342, -27.133, 0.24 ) }
    dend_41 { pt3dadd( 74.8007, 46.8857, -27.1914, 0.24 ) }
    dend_41 { pt3dadd( 75.3955, 48.3903, -27.225, 0.24 ) }
    dend_41 { pt3dadd( 76.1521, 50.021, -27.2371, 0.24 ) }
    dend_41 { pt3dadd( 77.0826, 51.92, -27.2375, 0.24 ) }
    dend_41 { pt3dadd( 77.5906, 52.9928, -27.2431, 0.24 ) }
    dend_41 { pt3dadd( 78.1084, 54.0722, -27.2631, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_41 { pt3dadd( 78.8397, 55.5385, -27.3027, 0.24 ) }
    dend_41 { pt3dadd( 79.509, 56.8855, -27.3734, 0.24 ) }
    dend_41 { pt3dadd( 80.265, 58.3882, -27.5272, 0.24 ) }
    dend_41 { pt3dadd( 80.9767, 59.7795, -27.7329, 0.24 ) }
    dend_41 { pt3dadd( 81.6091, 61.1442, -27.9099, 0.24 ) }
    dend_41 { pt3dadd( 82.0714, 62.3605, -28.0242, 0.24 ) }
    dend_41 { pt3dadd( 82.6194, 64.0141, -28.1111, 0.24 ) }
    dend_41 { pt3dadd( 83.0116, 65.233, -28.1277, 0.24 ) }
    dend_41 { pt3dadd( 83.3051, 66.1246, -28.1103, 0.24 ) }
    dend_41 { pt3dadd( 83.8362, 67.7188, -28.0437, 0.24 ) }
    dend_41 { pt3dadd( 84.3271, 69.0556, -27.9675, 0.24 ) }
    dend_41 { pt3dadd( 84.7563, 70.1827, -27.9777, 0.24 ) }
    dend_41 { pt3dadd( 85.2364, 71.381, -28.0714, 0.24 ) }
    dend_41 { pt3dadd( 85.6067, 72.261, -28.2901, 0.24 ) }
    dend_41 { pt3dadd( 86.1681, 73.528, -28.7888, 0.24 ) }
    dend_41 { pt3dadd( 86.8388, 74.8532, -29.5436, 0.24 ) }
    dend_41 { pt3dadd( 87.8813, 76.9596, -30.9306, 0.24 ) }
    dend_41 { pt3dadd( 88.4283, 78.1993, -31.7958, 0.24 ) }
    dend_41 { pt3dadd( 89.3418, 80.5531, -33.4524, 0.24 ) }
    dend_41 { pt3dadd( 89.7627, 81.897, -34.3579, 0.24 ) }
    dend_41 { pt3dadd( 90.3811, 84.1242, -35.8884, 0.12 ) }
    dend_41 { pt3dadd( 90.7132, 85.4927, -36.8195, 0.12 ) }
    dend_41 { pt3dadd( 90.9608, 86.5103, -37.4434, 0.12 ) }
    dend_41 { pt3dadd( 91.1886, 87.6515, -38.0536, 0.12 ) }
    dend_41 { pt3dadd( 91.3622, 89.5689, -38.7601, 0.12 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 25/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 31.2724, -7.62135, -18.4035, 0.36 ) }
    dend_40 { pt3dadd( 33.1676, -8.38428, -18.0688, 0.36 ) }
    dend_40 { pt3dadd( 34.3575, -8.72625, -17.8893, 0.36 ) }
    dend_40 { pt3dadd( 35.6996, -9.02958, -17.6598, 0.36 ) }
    dend_40 { pt3dadd( 37.2991, -9.33652, -17.4327, 0.36 ) }
    dend_40 { pt3dadd( 38.9686, -9.67124, -17.2329, 0.36 ) }
    dend_40 { pt3dadd( 41.1095, -10.1352, -17.011, 0.36 ) }
    dend_40 { pt3dadd( 43.1727, -10.5401, -16.8751, 0.36 ) }
    dend_40 { pt3dadd( 44.4329, -10.793, -16.8699, 0.36 ) }
    dend_40 { pt3dadd( 45.8329, -11.118, -16.9483, 0.36 ) }
    dend_40 { pt3dadd( 47.2992, -11.5333, -17.2074, 0.36 ) }
    dend_40 { pt3dadd( 48.0083, -11.7224, -17.409, 0.36 ) }
    dend_40 { pt3dadd( 49.3238, -11.9916, -17.8632, 0.36 ) }
    dend_40 { pt3dadd( 51.5926, -12.3424, -18.8429, 0.36 ) }
    dend_40 { pt3dadd( 52.8705, -12.4855, -19.4301, 0.36 ) }
    dend_40 { pt3dadd( 55.0089, -12.615, -20.365, 0.36 ) }
    dend_40 { pt3dadd( 57.1342, -12.6024, -21.2637, 0.36 ) }
    dend_40 { pt3dadd( 58.8659, -12.519, -21.8908, 0.24 ) }
    dend_40 { pt3dadd( 61.671, -12.339, -22.9343, 0.24 ) }
    dend_40 { pt3dadd( 63.3972, -12.215, -23.5812, 0.24 ) }
    dend_40 { pt3dadd( 65.3116, -12.0419, -24.318, 0.24 ) }
    dend_40 { pt3dadd( 66.5635, -11.9206, -24.7872, 0.24 ) }
    dend_40 { pt3dadd( 70.3579, -11.6594, -26.3209, 0.24 ) }
    dend_40 { pt3dadd( 73.7882, -11.5036, -27.7604, 0.24 ) }
    dend_40 { pt3dadd( 74.4189, -11.4851, -28.0251, 0.24 ) }
    dend_40 { pt3dadd( 75.5344, -11.5161, -28.5337, 0.24 ) }
    dend_40 { pt3dadd( 76.3648, -11.6366, -28.9095, 0.24 ) }
    dend_40 { pt3dadd( 77.8734, -12.0335, -29.4119, 0.24 ) }
    dend_40 { pt3dadd( 79.6183, -12.7689, -29.6379, 0.24 ) }
    dend_40 { pt3dadd( 81.2224, -13.6226, -29.5009, 0.24 ) }
    dend_40 { pt3dadd( 82.4435, -14.4183, -29.2947, 0.24 ) }
    dend_40 { pt3dadd( 84.1796, -15.8294, -28.6783, 0.24 ) }
    dend_40 { pt3dadd( 86.6507, -18.0081, -27.3716, 0.24 ) }
    dend_40 { pt3dadd( 87.7537, -18.9643, -26.6186, 0.24 ) }
    dend_40 { pt3dadd( 88.7129, -19.7345, -25.8139, 0.24 ) }
    dend_40 { pt3dadd( 89.9446, -20.6706, -24.6636, 0.24 ) }
    dend_40 { pt3dadd( 92.3389, -22.4853, -22.3575, 0.24 ) }
    dend_40 { pt3dadd( 93.6955, -23.5452, -21.064, 0.24 ) }
    dend_40 { pt3dadd( 94.9824, -24.5407, -19.9677, 0.24 ) }
    dend_40 { pt3dadd( 97.4141, -26.3107, -17.9669, 0.24 ) }
    dend_40 { pt3dadd( 98.2059, -26.8235, -17.3458, 0.24 ) }
    dend_40 { pt3dadd( 99.4226, -27.5334, -16.5183, 0.24 ) }
    dend_40 { pt3dadd( 100.353, -28.0267, -16.0183, 0.24 ) }
    dend_40 { pt3dadd( 101.139, -28.4729, -15.6304, 0.24 ) }
    dend_40 { pt3dadd( 102.415, -29.2278, -15.0539, 0.24 ) }
    dend_40 { pt3dadd( 105.413, -30.9836, -13.8812, 0.24 ) }
    dend_40 { pt3dadd( 106.564, -31.6123, -13.4651, 0.24 ) }
    dend_40 { pt3dadd( 107.89, -32.2404, -12.9044, 0.24 ) }
    dend_40 { pt3dadd( 109.039, -32.7749, -12.3838, 0.24 ) }
    dend_40 { pt3dadd( 110.752, -33.5361, -11.5732, 0.24 ) }
    dend_40 { pt3dadd( 111.649, -33.916, -11.1337, 0.24 ) }
    dend_40 { pt3dadd( 113.524, -34.7359, -10.2179, 0.24 ) }
    dend_40 { pt3dadd( 116.756, -36.2218, -8.45316, 0.24 ) }
    dend_40 { pt3dadd( 117.896, -36.764, -7.7723, 0.24 ) }
    dend_40 { pt3dadd( 120.007, -37.7526, -6.49892, 0.24 ) }
    dend_40 { pt3dadd( 121.707, -38.5114, -5.59738, 0.24 ) }
    dend_40 { pt3dadd( 123.172, -39.1193, -4.9078, 0.24 ) }
    dend_40 { pt3dadd( 124.696, -39.6815, -4.21936, 0.24 ) }
    dend_40 { pt3dadd( 126.403, -40.274, -3.5569, 0.24 ) }
    dend_40 { pt3dadd( 128.102, -40.8899, -2.7752, 0.24 ) }
    dend_40 { pt3dadd( 130.755, -41.9103, -1.50034, 0.24 ) }
    dend_40 { pt3dadd( 132.437, -42.5598, -0.674706, 0.24 ) }
    dend_40 { pt3dadd( 135.649, -43.6679, 0.893119, 0.24 ) }
    dend_40 { pt3dadd( 137.747, -44.3213, 1.92656, 0.24 ) }
    dend_40 { pt3dadd( 141.394, -45.4206, 3.73356, 0.24 ) }
    dend_40 { pt3dadd( 143.433, -46.0541, 4.80311, 0.24 ) }
    dend_40 { pt3dadd( 145.087, -46.6326, 5.68657, 0.24 ) }
    dend_40 { pt3dadd( 146.622, -47.2156, 6.40024, 0.24 ) }
    dend_40 { pt3dadd( 148.354, -47.905, 6.99211, 0.24 ) }
    dend_40 { pt3dadd( 150.316, -48.5791, 7.579, 0.24 ) }
    dend_40 { pt3dadd( 151.535, -48.9057, 7.89117, 0.24 ) }
    dend_40 { pt3dadd( 152.7, -49.2084, 8.28233, 0.24 ) }
    dend_40 { pt3dadd( 153.15, -49.3136, 8.46969, 0.24 ) }
    dend_40 { pt3dadd( 153.888, -49.5066, 8.88214, 0.24 ) }
    dend_40 { pt3dadd( 156.428, -50.2061, 10.5202, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_40 { pt3dadd( 157.519, -50.5132, 11.3047, 0.24 ) }
    dend_40 { pt3dadd( 158.75, -50.9268, 12.2679, 0.24 ) }
    dend_40 { pt3dadd( 159.884, -51.4087, 13.252, 0.24 ) }
    dend_40 { pt3dadd( 161.596, -52.2684, 14.7489, 0.12 ) }
    dend_40 { pt3dadd( 162.822, -52.9961, 15.744, 0.12 ) }
    dend_40 { pt3dadd( 163.506, -53.4922, 16.2277, 0.12 ) }
    dend_40 { pt3dadd( 164.842, -54.5492, 17.0662, 0.12 ) }
    dend_40 { pt3dadd( 165.988, -55.5492, 17.7264, 0.12 ) }
    dend_40 { pt3dadd( 167.162, -56.5539, 18.2637, 0.12 ) }
    dend_40 { pt3dadd( 168.663, -57.6769, 18.8104, 0.12 ) }
    dend_40 { pt3dadd( 169.671, -58.2961, 19.152, 0.12 ) }
    dend_40 { pt3dadd( 171.331, -59.1418, 19.6666, 0.12 ) }
    dend_40 { pt3dadd( 172.429, -59.5954, 19.9615, 0.12 ) }
    dend_40 { pt3dadd( 174.671, -60.4682, 20.5104, 0.12 ) }
    dend_40 { pt3dadd( 176.057, -60.9676, 20.8635, 0.12 ) }
    dend_40 { pt3dadd( 179.793, -62.1263, 21.8334, 0.12 ) }
    dend_40 { pt3dadd( 181.812, -62.6944, 22.3587, 0.12 ) }
    dend_40 { pt3dadd( 183.438, -63.0668, 22.7983, 0.12 ) }
    dend_40 { pt3dadd( 186.074, -63.5738, 23.5572, 0.12 ) }
    dend_40 { pt3dadd( 187.842, -63.9058, 24.0933, 0.12 ) }
    dend_40 { pt3dadd( 189.551, -64.2161, 24.5958, 0.12 ) }
    dend_40 { pt3dadd( 191.322, -64.476, 24.998, 0.12 ) }
    dend_40 { pt3dadd( 193.154, -64.6608, 25.339, 0.12 ) }
    dend_40 { pt3dadd( 194.606, -64.7137, 25.413, 0.12 ) }
    dend_40 { pt3dadd( 195.467, -64.6277, 25.2941, 0.12 ) }
    dend_40 { pt3dadd( 196.938, -64.2171, 24.3749, 0.12 ) }
    dend_40 { pt3dadd( 198.94, -63.4206, 22.501, 0.12 ) }
    dend_40 { pt3dadd( 199.855, -62.9359, 21.3426, 0.12 ) }
    dend_40 { pt3dadd( 201.886, -61.6441, 17.9838, 0.12 ) }
    dend_40 { pt3dadd( 202.439, -61.1804, 16.8217, 0.12 ) }
    dend_40 { pt3dadd( 203.587, -59.7937, 13.6189, 0.12 ) }
    dend_40 { pt3dadd( 213.892, -64.4918, 13.8625, 0.12 ) }
    dend_40 { pt3dadd( 224.251, -68.7646, 15.5228, 0.12 ) }
    dend_40 { pt3dadd( 234.586, -73.3166, 16.4057, 0.12 ) }
    dend_40 { pt3dadd( 243.45, -80.2959, 17.425, 0.12 ) }
    dend_40 { pt3dadd( 253.322, -85.7648, 18.402, 0.12 ) }
    dend_40 { pt3dadd( 261.949, -93.027, 19.4709, 0.12 ) }
    dend_40 { pt3dadd( 268.636, -102.171, 19.5044, 0.12 ) }
    dend_40 { pt3dadd( 276.006, -110.58, 17.69, 0.12 ) }
    dend_40 { pt3dadd( 283.54, -118.893, 16.1252, 0.12 ) }
    dend_40 { pt3dadd( 290.769, -127.574, 15.2881, 0.12 ) }
    dend_40 { pt3dadd( 299.298, -134.501, 12.5341, 0.12 ) }
    dend_40 { pt3dadd( 307.612, -141.543, 9.43537, 0.12 ) }
    dend_40 { pt3dadd( 315.914, -149.118, 8.01406, 0.12 ) }
    dend_40 { pt3dadd( 324.523, -156.447, 7.31955, 0.12 ) }
    dend_40 { pt3dadd( 334.516, -161.576, 5.85334, 0.12 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 46/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 99.111, 47.0259, 28.6398, 0.36 ) }
    dend_35 { pt3dadd( 99.9313, 47.8189, 28.7257, 0.36 ) }
    dend_35 { pt3dadd( 101.293, 48.9923, 28.7443, 0.36 ) }
    dend_35 { pt3dadd( 101.919, 49.4757, 28.73, 0.36 ) }
    dend_35 { pt3dadd( 102.53, 49.8792, 28.6979, 0.36 ) }
    dend_35 { pt3dadd( 103.686, 50.5639, 28.6148, 0.36 ) }
    dend_35 { pt3dadd( 105.83, 51.8336, 28.4606, 0.36 ) }
    dend_35 { pt3dadd( 106.982, 52.4151, 28.3084, 0.36 ) }
    dend_35 { pt3dadd( 107.754, 52.7592, 28.1503, 0.36 ) }
    dend_35 { pt3dadd( 108.782, 53.1431, 27.8987, 0.36 ) }
    dend_35 { pt3dadd( 109.402, 53.3137, 27.7417, 0.36 ) }
    dend_35 { pt3dadd( 117.618, 59.3219, 28.378, 0.36 ) }
    dend_35 { pt3dadd( 125.527, 65.2748, 30.8319, 0.36 ) }
    dend_35 { pt3dadd( 132.891, 71.5298, 34.0963, 0.36 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 60/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 99.111, 47.0259, 28.6398, 0.36 ) }
    dend_34 { pt3dadd( 101.385, 46.5942, 28.7324, 0.36 ) }
    dend_34 { pt3dadd( 102.919, 46.3029, 28.7948, 0.36 ) }
    dend_34 { pt3dadd( 104.576, 45.9884, 28.8623, 0.36 ) }
    dend_34 { pt3dadd( 114.502, 43.5475, 26.4914, 0.36 ) }
    dend_34 { pt3dadd( 123.702, 39.6941, 23.2308, 0.36 ) }
    dend_34 { pt3dadd( 133.519, 37.8557, 20.0148, 0.36 ) }
    dend_34 { pt3dadd( 143.475, 35.6589, 17.5302, 0.36 ) }
    dend_34 { pt3dadd( 153.516, 34.7563, 14.6197, 0.36 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 69/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 13.986, -2.42312, 6.48207, 0.84 ) }
    dend_24 { pt3dadd( 16.0054, -3.83011, 7.1959, 0.48 ) }
    dend_24 { pt3dadd( 17.4593, -5.1045, 7.74803, 0.48 ) }
    dend_24 { pt3dadd( 18.628, -6.30051, 8.40902, 0.36 ) }
    dend_24 { pt3dadd( 20.4099, -8.5005, 9.75307, 0.36 ) }
    dend_24 { pt3dadd( 21.0758, -9.53173, 10.4225, 0.36 ) }
    dend_24 { pt3dadd( 21.8211, -10.9289, 11.3245, 0.36 ) }
    dend_24 { pt3dadd( 22.4396, -12.707, 12.395, 0.36 ) }
    dend_24 { pt3dadd( 23.1791, -15.7111, 14.1547, 0.36 ) }
    dend_24 { pt3dadd( 23.5106, -17.5744, 15.1362, 0.36 ) }
    dend_24 { pt3dadd( 23.858, -19.8937, 16.2129, 0.36 ) }
    dend_24 { pt3dadd( 24.0544, -21.1551, 16.7007, 0.36 ) }
    dend_24 { pt3dadd( 24.5012, -23.8229, 17.5288, 0.36 ) }
    dend_24 { pt3dadd( 24.8889, -25.781, 17.9609, 0.36 ) }
    dend_24 { pt3dadd( 25.4795, -28.1353, 18.2509, 0.36 ) }
    dend_24 { pt3dadd( 26.1783, -30.2822, 18.3802, 0.36 ) }
    dend_24 { pt3dadd( 27.1766, -32.837, 18.4179, 0.36 ) }
    dend_24 { pt3dadd( 27.7945, -34.2596, 18.4221, 0.36 ) }
    dend_24 { pt3dadd( 28.2382, -35.21, 18.4141, 0.36 ) }
    dend_24 { pt3dadd( 28.8698, -36.5599, 18.429, 0.36 ) }
    dend_24 { pt3dadd( 29.63, -38.32, 18.5441, 0.36 ) }
    dend_24 { pt3dadd( 30.3476, -40.2816, 18.7551, 0.36 ) }
    dend_24 { pt3dadd( 30.7906, -41.7296, 18.947, 0.36 ) }
    dend_24 { pt3dadd( 31.1744, -43.2808, 19.2722, 0.36 ) }
    dend_24 { pt3dadd( 31.68, -45.7931, 20.0971, 0.36 ) }
    dend_24 { pt3dadd( 32.0832, -48.1392, 21.1381, 0.36 ) }
    dend_24 { pt3dadd( 32.3265, -49.6984, 21.9939, 0.36 ) }
    dend_24 { pt3dadd( 32.6214, -51.6298, 23.1417, 0.36 ) }
    dend_24 { pt3dadd( 33.0944, -54.4399, 24.9245, 0.36 ) }
    dend_24 { pt3dadd( 33.604, -56.8988, 26.6334, 0.36 ) }
    dend_24 { pt3dadd( 34.0203, -58.2768, 27.7288, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 34.4695, -59.3189, 28.6396, 0.36 ) }
    dend_24 { pt3dadd( 35.125, -60.5572, 29.8005, 0.36 ) }
    dend_24 { pt3dadd( 35.4934, -61.1491, 30.3736, 0.36 ) }
    dend_24 { pt3dadd( 36.2283, -62.1971, 31.2572, 0.36 ) }
    dend_24 { pt3dadd( 37.1388, -63.4832, 32.2369, 0.36 ) }
    dend_24 { pt3dadd( 37.8456, -64.5663, 33.0792, 0.36 ) }
    dend_24 { pt3dadd( 38.556, -65.7667, 34.0309, 0.36 ) }
    dend_24 { pt3dadd( 39.178, -66.9373, 34.9342, 0.36 ) }
    dend_24 { pt3dadd( 39.5841, -67.7927, 35.5629, 0.36 ) }
    dend_24 { pt3dadd( 40.486, -69.881, 36.9982, 0.36 ) }
    dend_24 { pt3dadd( 41.3444, -72.1727, 38.4778, 0.36 ) }
    dend_24 { pt3dadd( 41.6653, -73.1446, 39.1015, 0.36 ) }
    dend_24 { pt3dadd( 42.039, -74.3892, 39.8983, 0.36 ) }
    dend_24 { pt3dadd( 42.634, -76.6264, 41.3484, 0.36 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 14/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 13.986, -2.42312, 6.48207, 0.84 ) }
    dend_23 { pt3dadd( 14.5589, -2.69379, 7.51557, 0.72 ) }
    dend_23 { pt3dadd( 14.7781, -2.82146, 7.94777, 0.72 ) }
    dend_23 { pt3dadd( 15.2348, -3.1567, 8.894, 0.72 ) }
    dend_23 { pt3dadd( 15.9384, -3.77563, 10.3053, 0.6 ) }
    dend_23 { pt3dadd( 16.4382, -4.2718, 11.2685, 0.6 ) }
    dend_23 { pt3dadd( 17.7495, -5.69615, 13.5942, 0.6 ) }
    dend_23 { pt3dadd( 18.223, -6.25639, 14.3589, 0.6 ) }
    dend_23 { pt3dadd( 18.7538, -6.94814, 15.2389, 0.6 ) }
    dend_23 { pt3dadd( 19.1927, -7.57744, 15.9888, 0.48 ) }
    dend_23 { pt3dadd( 19.4525, -8.00036, 16.4259, 0.48 ) }
    dend_23 { pt3dadd( 19.9967, -8.89128, 17.2714, 0.48 ) }
    dend_23 { pt3dadd( 20.7568, -10.065, 18.2193, 0.48 ) }
    dend_23 { pt3dadd( 21.5725, -11.1519, 19.1543, 0.48 ) }
    dend_23 { pt3dadd( 21.7845, -11.4125, 19.3928, 0.48 ) }
    dend_23 { pt3dadd( 22.1737, -11.8603, 19.8261, 0.48 ) }
    dend_23 { pt3dadd( 23.1788, -12.9352, 20.872, 0.48 ) }
    dend_23 { pt3dadd( 23.8519, -13.572, 21.5479, 0.48 ) }
    dend_23 { pt3dadd( 24.6426, -14.2263, 22.2461, 0.48 ) }
    dend_23 { pt3dadd( 25.2183, -14.6625, 22.7212, 0.48 ) }
    dend_23 { pt3dadd( 26.0913, -15.3055, 23.4533, 0.48 ) }
    dend_23 { pt3dadd( 26.6178, -15.6793, 23.8979, 0.48 ) }
    dend_23 { pt3dadd( 27.6755, -16.3503, 24.7976, 0.48 ) }
    dend_23 { pt3dadd( 28.2171, -16.6408, 25.2475, 0.48 ) }
    dend_23 { pt3dadd( 28.9006, -16.9407, 25.7969, 0.48 ) }
    dend_23 { pt3dadd( 29.3759, -17.103, 26.1574, 0.48 ) }
    dend_23 { pt3dadd( 32.4088, -19.8867, 31.6226, 0.48 ) }
    dend_23 { pt3dadd( 37.0665, -21.79, 36.2593, 0.48 ) }
    dend_23 { pt3dadd( 41.5339, -23.9031, 40.9914, 0.48 ) }
    dend_23 { pt3dadd( 44.9575, -25.0742, 46.7986, 0.48 ) }
    dend_23 { pt3dadd( 47.2424, -27.3008, 52.8515, 0.48 ) }
    dend_23 { pt3dadd( 49.3042, -29.4656, 59.006, 0.48 ) }
    dend_23 { pt3dadd( 51.237, -30.8912, 65.4128, 0.48 ) }
    dend_23 { pt3dadd( 53.63, -31.0182, 71.8217, 0.48 ) }
    dend_23 { pt3dadd( 55.4461, -32.0627, 78.3352, 0.48 ) }
    dend_23 { pt3dadd( 58.3138, -34.3231, 84.1216, 0.48 ) }
    dend_23 { pt3dadd( 60.3941, -37.0351, 90.049, 0.48 ) }
    dend_23 { pt3dadd( 61.1289, -38.9685, 96.5711, 0.48 ) }
    dend_23 { pt3dadd( 62.7003, -41.4485, 102.751, 0.48 ) }
    dend_23 { pt3dadd( 65.1181, -43.0906, 108.938, 0.48 ) }
    dend_23 { pt3dadd( 67.2847, -45.1882, 115.08, 0.48 ) }
    dend_23 { pt3dadd( 68.3171, -47.0782, 121.574, 0.48 ) }
    dend_23 { pt3dadd( 69.2086, -47.7964, 128.32, 0.48 ) }
    dend_23 { pt3dadd( 71.4007, -49.6632, 134.527, 0.48 ) }
    dend_23 { pt3dadd( 73.2853, -50.3786, 141.065, 0.48 ) }
    dend_23 { pt3dadd( 75.5548, -51.1206, 147.477, 0.48 ) }
    dend_23 { pt3dadd( 77.9926, -52.9146, 153.614, 0.48 ) }
    dend_23 { pt3dadd( 80.5673, -54.3028, 159.799, 0.48 ) }
    dend_23 { pt3dadd( 83.6601, -55.0979, 165.85, 0.48 ) }
    dend_23 { pt3dadd( 86.0582, -56.4984, 172.104, 0.48 ) }
    dend_23 { pt3dadd( 88.8571, -58.9387, 177.851, 0.48 ) }
    dend_23 { pt3dadd( 90.8871, -62.0371, 183.603, 0.48 ) }
    dend_23 { pt3dadd( 93.6491, -66.4493, 188.044, 0.48 ) }
    dend_23 { pt3dadd( 96.9526, -70.6174, 192.349, 0.48 ) }
    dend_23 { pt3dadd( 99.4439, -74.3925, 197.483, 0.48 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 69/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.6552, -33.3225, 12.3428, 0.84 ) }
    dend_12 { pt3dadd( -13.6752, -36.4873, 13.1688, 0.24 ) }
    dend_12 { pt3dadd( -14.1902, -38.0333, 13.5227, 0.84 ) }
    dend_12 { pt3dadd( -14.6241, -39.2935, 13.7875, 0.84 ) }
    dend_12 { pt3dadd( -15.2892, -41.2029, 14.1554, 0.6 ) }
    dend_12 { pt3dadd( -16.9259, -45.6177, 14.9745, 0.48 ) }
    dend_12 { pt3dadd( -17.5535, -47.1304, 15.2574, 0.48 ) }
    dend_12 { pt3dadd( -18.2215, -48.4113, 15.4406, 0.48 ) }
    dend_12 { pt3dadd( -18.6882, -49.1615, 15.5246, 0.48 ) }
    dend_12 { pt3dadd( -19.3794, -50.0913, 15.6083, 0.48 ) }
    dend_12 { pt3dadd( -20.2019, -50.89, 15.6596, 0.48 ) }
    dend_12 { pt3dadd( -21.6675, -51.6846, 15.6782, 0.48 ) }
    dend_12 { pt3dadd( -22.8672, -52.1646, 15.66, 0.48 ) }
    dend_12 { pt3dadd( -24.955, -52.869, 15.5523, 0.48 ) }
    dend_12 { pt3dadd( -25.5138, -53.0513, 15.5127, 0.48 ) }
    dend_12 { pt3dadd( -26.7322, -53.4554, 15.4195, 0.48 ) }
    dend_12 { pt3dadd( -28.0422, -53.9668, 15.3085, 0.48 ) }
    dend_12 { pt3dadd( -29.5973, -54.6838, 15.192, 0.48 ) }
    dend_12 { pt3dadd( -30.6793, -55.2521, 15.1448, 0.48 ) }
    dend_12 { pt3dadd( -32.0901, -56.0711, 15.0279, 0.48 ) }
    dend_12 { pt3dadd( -33.3653, -56.8746, 14.8363, 0.48 ) }
    dend_12 { pt3dadd( -34.3049, -57.4908, 14.6484, 0.48 ) }
    dend_12 { pt3dadd( -35.5803, -58.3348, 14.3617, 0.48 ) }
    dend_12 { pt3dadd( -36.5378, -58.9501, 14.1478, 0.48 ) }
    dend_12 { pt3dadd( -38.9878, -60.4412, 13.5806, 0.48 ) }
    dend_12 { pt3dadd( -40.4727, -61.2881, 13.2199, 0.48 ) }
    dend_12 { pt3dadd( -41.7316, -61.977, 12.9333, 0.48 ) }
    dend_12 { pt3dadd( -42.6536, -62.4883, 12.6932, 0.48 ) }
    dend_12 { pt3dadd( -43.2735, -62.8587, 12.5276, 0.48 ) }
    dend_12 { pt3dadd( -44.0293, -63.3407, 12.3524, 0.48 ) }
    dend_12 { pt3dadd( -44.9625, -63.9889, 12.2151, 0.48 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_12 { pt3dadd( -46.0397, -64.8603, 12.0398, 0.48 ) }
    dend_12 { pt3dadd( -47.7954, -66.5119, 11.7099, 0.48 ) }
    dend_12 { pt3dadd( -48.6536, -67.4107, 11.5331, 0.48 ) }
    dend_12 { pt3dadd( -49.204, -68.0393, 11.4147, 0.48 ) }
    dend_12 { pt3dadd( -49.7274, -68.6848, 11.3271, 0.48 ) }
    dend_12 { pt3dadd( -50.6373, -69.8734, 11.2354, 0.48 ) }
    dend_12 { pt3dadd( -51.5244, -71.0957, 11.2392, 0.48 ) }
    dend_12 { pt3dadd( -52.3742, -72.2999, 11.3558, 0.48 ) }
    dend_12 { pt3dadd( -52.7255, -72.8173, 11.4074, 0.48 ) }
    dend_12 { pt3dadd( -53.5455, -74.033, 11.5357, 0.48 ) }
    dend_12 { pt3dadd( -53.9735, -74.6361, 11.609, 0.48 ) }
    dend_12 { pt3dadd( -54.9121, -75.8373, 11.786, 0.48 ) }
    dend_12 { pt3dadd( -55.8898, -77.0263, 11.9839, 0.48 ) }
    dend_12 { pt3dadd( -56.7436, -78.0251, 12.1441, 0.48 ) }
    dend_12 { pt3dadd( -57.4944, -78.8965, 12.2619, 0.48 ) }
    dend_12 { pt3dadd( -58.3436, -79.8969, 12.2647, 0.48 ) }
    dend_12 { pt3dadd( -59.067, -80.7832, 12.1779, 0.48 ) }
    dend_12 { pt3dadd( -59.8819, -81.7874, 12.0, 0.48 ) }
    dend_12 { pt3dadd( -60.8004, -82.9421, 11.6624, 0.48 ) }
    dend_12 { pt3dadd( -61.2971, -83.5633, 11.424, 0.48 ) }
    dend_12 { pt3dadd( -62.87, -85.5012, 10.4581, 0.48 ) }
    dend_12 { pt3dadd( -63.7148, -86.4896, 9.85122, 0.48 ) }
    dend_12 { pt3dadd( -64.284, -87.0768, 9.44252, 0.48 ) }
    dend_12 { pt3dadd( -65.3578, -88.0278, 8.71364, 0.48 ) }
    dend_12 { pt3dadd( -66.1596, -88.6581, 8.23728, 0.48 ) }
    dend_12 { pt3dadd( -67.2765, -89.4154, 7.59451, 0.48 ) }
    dend_12 { pt3dadd( -68.2872, -90.0286, 7.0622, 0.48 ) }
    dend_12 { pt3dadd( -69.5591, -90.7426, 6.33685, 0.48 ) }
    dend_12 { pt3dadd( -70.4203, -91.2473, 5.81397, 0.48 ) }
    dend_12 { pt3dadd( -71.6501, -92.0354, 5.04448, 0.48 ) }
    dend_12 { pt3dadd( -74.0935, -93.746, 3.41533, 0.48 ) }
    dend_12 { pt3dadd( -75.1035, -94.5018, 2.75186, 0.48 ) }
    dend_12 { pt3dadd( -76.0648, -95.2662, 2.13385, 0.48 ) }
    dend_12 { pt3dadd( -77.1762, -96.2006, 1.44461, 0.48 ) }
    dend_12 { pt3dadd( -78.5634, -97.4257, 0.683498, 0.48 ) }
    dend_12 { pt3dadd( -79.4988, -98.3253, 0.26044, 0.48 ) }
    dend_12 { pt3dadd( -80.8028, -99.7033, -0.102646, 0.48 ) }
    dend_12 { pt3dadd( -81.5571, -100.564, -0.314669, 0.48 ) }
    dend_12 { pt3dadd( -82.1394, -101.24, -0.462461, 0.48 ) }
    dend_12 { pt3dadd( -83.0527, -102.292, -0.708442, 0.48 ) }
    dend_12 { pt3dadd( -84.1351, -103.55, -1.03009, 0.48 ) }
    dend_12 { pt3dadd( -85.0658, -104.635, -1.32647, 0.48 ) }
    dend_12 { pt3dadd( -87.8704, -107.954, -2.29821, 0.36 ) }
    dend_12 { pt3dadd( -89.1885, -109.595, -2.76117, 0.36 ) }
    dend_12 { pt3dadd( -90.2641, -110.99, -3.0799, 0.36 ) }
    dend_12 { pt3dadd( -91.3136, -112.377, -3.34884, 0.36 ) }
    dend_12 { pt3dadd( -92.3596, -113.749, -3.59254, 0.36 ) }
    dend_12 { pt3dadd( -93.1667, -114.823, -3.73978, 0.36 ) }
    dend_12 { pt3dadd( -95.3336, -117.806, -3.81043, 0.36 ) }
    dend_12 { pt3dadd( -96.6419, -119.75, -3.77202, 0.36 ) }
    dend_12 { pt3dadd( -97.1515, -120.556, -3.69448, 0.36 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 51/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -12.6552, -33.3225, 12.3428, 0.84 ) }
    dend_11 { pt3dadd( -14.7011, -33.9554, 13.6411, 0.6 ) }
    dend_11 { pt3dadd( -15.3919, -34.107, 14.025, 0.6 ) }
    dend_11 { pt3dadd( -16.3589, -34.2625, 14.5042, 0.6 ) }
    dend_11 { pt3dadd( -18.8229, -34.5602, 15.6412, 0.36 ) }
    dend_11 { pt3dadd( -19.495, -34.6677, 15.9246, 0.36 ) }
    dend_11 { pt3dadd( -20.1287, -34.7761, 16.1886, 0.36 ) }
    dend_11 { pt3dadd( -20.8693, -34.8763, 16.4459, 0.36 ) }
    dend_11 { pt3dadd( -21.2707, -34.9194, 16.6208, 0.36 ) }
    dend_11 { pt3dadd( -22.226, -35.0172, 17.0558, 0.36 ) }
    dend_11 { pt3dadd( -23.5354, -35.2083, 17.5672, 0.36 ) }
    dend_11 { pt3dadd( -24.7559, -35.4542, 18.1142, 0.24 ) }
    dend_11 { pt3dadd( -25.3599, -35.6002, 18.4222, 0.24 ) }
    dend_11 { pt3dadd( -27.0558, -36.0672, 19.372, 0.24 ) }
    dend_11 { pt3dadd( -33.5423, -37.3634, 21.9251, 0.24 ) }
    dend_11 { pt3dadd( -39.6124, -38.4814, 25.4149, 0.24 ) }
    dend_11 { pt3dadd( -45.4057, -40.6262, 28.895, 0.24 ) }
    dend_11 { pt3dadd( -51.9171, -41.8115, 31.4385, 0.24 ) }
    dend_11 { pt3dadd( -58.2618, -43.9883, 33.7366, 0.24 ) }
    dend_11 { pt3dadd( -64.0716, -47.0791, 36.376, 0.24 ) }
    dend_11 { pt3dadd( -69.6365, -50.2543, 39.4129, 0.24 ) }
    dend_11 { pt3dadd( -74.0604, -55.1026, 42.0957, 0.24 ) }
    dend_11 { pt3dadd( -77.9311, -60.7013, 44.0821, 0.24 ) }
    dend_11 { pt3dadd( -81.1616, -66.4933, 46.5901, 0.24 ) }
    dend_11 { pt3dadd( -84.0881, -71.4931, 50.6781, 0.24 ) }
    dend_11 { pt3dadd( -86.215, -76.7259, 54.9638, 0.24 ) }
    dend_11 { pt3dadd( -88.8249, -81.333, 59.6794, 0.24 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 78/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -15.0155, -12.3783, 11.6835, 0.96 ) }
    dend_9 { pt3dadd( -16.6984, -11.5379, 10.272, 0.36 ) }
    dend_9 { pt3dadd( -19.52, -10.1141, 8.11668, 0.36 ) }
    dend_9 { pt3dadd( -20.868, -9.45256, 7.06852, 0.36 ) }
    dend_9 { pt3dadd( -25.9425, -7.1019, 3.19594, 0.36 ) }
    dend_9 { pt3dadd( -27.805, -6.2738, 1.827, 0.36 ) }
    dend_9 { pt3dadd( -29.8947, -5.37865, 0.304031, 0.36 ) }
    dend_9 { pt3dadd( -31.8069, -4.58396, -1.16519, 0.36 ) }
    dend_9 { pt3dadd( -33.1725, -4.06926, -2.21852, 0.36 ) }
    dend_9 { pt3dadd( -34.9584, -3.50245, -3.48431, 0.36 ) }
    dend_9 { pt3dadd( -36.2529, -3.23992, -4.23094, 0.36 ) }
    dend_9 { pt3dadd( -38.5579, -2.71936, -5.44378, 0.36 ) }
    dend_9 { pt3dadd( -40.5533, -2.24285, -6.28027, 0.36 ) }
    dend_9 { pt3dadd( -41.5742, -1.96916, -6.50911, 0.36 ) }
    dend_9 { pt3dadd( -44.4954, -1.1018, -6.64687, 0.36 ) }
    dend_9 { pt3dadd( -45.7657, -0.674365, -6.52468, 0.36 ) }
    dend_9 { pt3dadd( -48.7964, 0.376458, -6.0132, 0.36 ) }
    dend_9 { pt3dadd( -50.9956, 1.17538, -5.49287, 0.36 ) }
    dend_9 { pt3dadd( -54.6767, 2.50765, -4.50824, 0.36 ) }
    dend_9 { pt3dadd( -56.8148, 3.22677, -3.95261, 0.36 ) }
    dend_9 { pt3dadd( -58.9703, 3.89207, -3.43047, 0.36 ) }
    dend_9 { pt3dadd( -60.91, 4.46069, -3.02015, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_9 { pt3dadd( -62.8525, 4.93027, -2.72543, 0.36 ) }
    dend_9 { pt3dadd( -64.4923, 5.29493, -2.59626, 0.36 ) }
    dend_9 { pt3dadd( -65.7565, 5.59073, -2.6457, 0.36 ) }
    dend_9 { pt3dadd( -67.7205, 6.07333, -2.79762, 0.36 ) }
    dend_9 { pt3dadd( -69.5168, 6.52032, -3.0261, 0.36 ) }
    dend_9 { pt3dadd( -71.3412, 7.03659, -3.28811, 0.36 ) }
    dend_9 { pt3dadd( -73.4749, 7.71185, -3.64956, 0.36 ) }
    dend_9 { pt3dadd( -77.3071, 8.96493, -4.3717, 0.36 ) }
    dend_9 { pt3dadd( -79.4377, 9.67688, -4.78302, 0.36 ) }
    dend_9 { pt3dadd( -82.0863, 10.6418, -5.35313, 0.36 ) }
    dend_9 { pt3dadd( -83.8222, 11.3364, -5.68106, 0.36 ) }
    dend_9 { pt3dadd( -85.2965, 11.9901, -5.93069, 0.36 ) }
    dend_9 { pt3dadd( -87.0311, 12.8098, -6.19533, 0.36 ) }
    dend_9 { pt3dadd( -89.895, 14.15, -6.52361, 0.36 ) }
    dend_9 { pt3dadd( -91.7996, 15.217, -6.96133, 0.36 ) }
    dend_9 { pt3dadd( -93.7709, 16.4208, -7.60902, 0.36 ) }
    dend_9 { pt3dadd( -95.7384, 17.601, -8.49522, 0.24 ) }
    dend_9 { pt3dadd( -97.1989, 18.4658, -9.26287, 0.24 ) }
    dend_9 { pt3dadd( -98.4701, 19.2321, -10.083, 0.24 ) }
    dend_9 { pt3dadd( -103.135, 21.7756, -13.3983, 0.24 ) }
    dend_9 { pt3dadd( -104.208, 22.2546, -14.1591, 0.24 ) }
    dend_9 { pt3dadd( -105.747, 22.8704, -15.3128, 0.24 ) }
    dend_9 { pt3dadd( -107.433, 23.4614, -16.5059, 0.24 ) }
    dend_9 { pt3dadd( -109.979, 24.2524, -18.2117, 0.12 ) }
    dend_9 { pt3dadd( -112.252, 24.8911, -19.5945, 0.12 ) }
    dend_9 { pt3dadd( -113.637, 25.2652, -20.3536, 0.12 ) }
    dend_9 { pt3dadd( -116.107, 26.1082, -21.8858, 0.12 ) }
    dend_9 { pt3dadd( -117.448, 26.6325, -22.7671, 0.12 ) }
    dend_9 { pt3dadd( -118.783, 27.1469, -23.7953, 0.12 ) }
    dend_9 { pt3dadd( -119.952, 27.5736, -24.8188, 0.12 ) }
    dend_9 { pt3dadd( -123.043, 28.627, -27.9793, 0.12 ) }
    dend_9 { pt3dadd( -126.022, 29.5508, -31.2779, 0.12 ) }
    dend_9 { pt3dadd( -128.623, 30.189, -34.2357, 0.12 ) }
    dend_9 { pt3dadd( -132.814, 30.9529, -39.0304, 0.12 ) }
    dend_9 { pt3dadd( -135.811, 31.3055, -42.3176, 0.12 ) }
    dend_9 { pt3dadd( -139.484, 31.56, -46.0867, 0.12 ) }
    dend_9 { pt3dadd( -141.939, 31.6326, -48.3369, 0.12 ) }
    dend_9 { pt3dadd( -144.23, 31.6879, -50.1377, 0.12 ) }
    dend_9 { pt3dadd( -147.429, 31.8234, -52.2544, 0.12 ) }
    dend_9 { pt3dadd( -151.575, 32.1443, -54.1804, 0.12 ) }
    dend_9 { pt3dadd( -154.525, 32.4673, -55.2569, 0.12 ) }
    dend_9 { pt3dadd( -157.662, 32.8473, -56.0942, 0.12 ) }
    dend_9 { pt3dadd( -161.171, 33.3531, -56.8837, 0.12 ) }
    dend_9 { pt3dadd( -162.546, 33.5796, -57.1539, 0.12 ) }
    dend_9 { pt3dadd( -166.744, 34.2349, -57.8241, 0.12 ) }
    dend_9 { pt3dadd( -169.526, 34.5882, -58.1823, 0.12 ) }
    dend_9 { pt3dadd( -172.464, 34.8289, -58.5623, 0.12 ) }
    dend_9 { pt3dadd( -173.98, 34.9267, -58.7574, 0.12 ) }
    dend_9 { pt3dadd( -175.743, 35.0456, -58.9475, 0.12 ) }
    dend_9 { pt3dadd( -177.424, 35.2005, -59.1335, 0.12 ) }
    dend_9 { pt3dadd( -180.132, 35.4731, -59.4957, 0.12 ) }
    dend_9 { pt3dadd( -182.185, 35.6813, -59.7933, 0.12 ) }
    dend_9 { pt3dadd( -184.677, 35.9549, -60.2925, 0.12 ) }
    dend_9 { pt3dadd( -187.809, 36.2649, -61.0845, 0.12 ) }
    dend_9 { pt3dadd( -189.73, 36.4476, -61.6631, 0.12 ) }
    dend_9 { pt3dadd( -193.022, 36.7659, -62.8585, 0.12 ) }
    dend_9 { pt3dadd( -195.931, 37.0732, -64.2348, 0.12 ) }
    dend_9 { pt3dadd( -198.154, 37.4902, -65.8246, 0.12 ) }
    dend_9 { pt3dadd( -200.18, 38.1534, -68.0666, 0.12 ) }
    dend_9 { pt3dadd( -201.747, 38.7869, -70.109, 0.12 ) }
    dend_9 { pt3dadd( -203.364, 39.5982, -72.57, 0.12 ) }
    dend_9 { pt3dadd( -205.479, 41.1016, -76.8372, 0.12 ) }
    dend_9 { pt3dadd( -208.209, 43.8275, -84.3821, 0.12 ) }
    dend_9 { pt3dadd( -209.324, 45.4967, -88.8326, 0.12 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 64/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -15.0155, -12.3783, 11.6835, 0.96 ) }
    dend_2 { pt3dadd( -16.7247, -12.5486, 11.7385, 0.72 ) }
    dend_2 { pt3dadd( -18.0951, -12.7986, 11.9805, 0.72 ) }
    dend_2 { pt3dadd( -18.7016, -12.9093, 12.0876, 0.72 ) }
    dend_2 { pt3dadd( -19.95, -13.1371, 12.308, 0.72 ) }
    dend_2 { pt3dadd( -21.1099, -13.3487, 12.5128, 0.72 ) }
    dend_2 { pt3dadd( -22.1469, -13.5379, 12.6959, 0.72 ) }
    dend_2 { pt3dadd( -23.6366, -13.9804, 12.9021, 0.72 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 72/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( -14.9513, 47.4648, -13.8393, 1.8 ) }
    apic_8 { pt3dadd( -15.102, 49.1852, -13.9142, 1.08 ) }
    apic_8 { pt3dadd( -15.2306, 50.0635, -14.0376, 1.08 ) }
    apic_8 { pt3dadd( -15.4885, 51.2506, -14.2543, 1.08 ) }
    apic_8 { pt3dadd( -15.7718, 52.3363, -14.457, 1.08 ) }
    apic_8 { pt3dadd( -16.5851, 55.3045, -14.9586, 1.08 ) }
    apic_8 { pt3dadd( -17.2663, 57.8739, -15.2614, 1.08 ) }
    apic_8 { pt3dadd( -17.8209, 59.9574, -15.4523, 1.08 ) }
    apic_8 { pt3dadd( -18.4117, 62.1544, -15.6506, 1.08 ) }
    apic_8 { pt3dadd( -18.9498, 64.157, -15.8108, 1.08 ) }
    apic_8 { pt3dadd( -19.4649, 65.9763, -15.9222, 1.08 ) }
    apic_8 { pt3dadd( -20.2409, 68.4344, -15.9421, 1.08 ) }
    apic_8 { pt3dadd( -20.6202, 69.6169, -15.7894, 1.08 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 85/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( -14.9513, 47.4648, -13.8393, 1.8 ) }
    apic_5 { pt3dadd( -15.7933, 47.6305, -16.4209, 0.36 ) }
    apic_5 { pt3dadd( -16.0117, 47.6577, -17.3075, 0.36 ) }
    apic_5 { pt3dadd( -16.1495, 47.6275, -18.0298, 0.36 ) }
    apic_5 { pt3dadd( -16.3077, 47.4861, -19.4557, 0.36 ) }
    apic_5 { pt3dadd( -16.3641, 47.4358, -19.9633, 0.36 ) }
    apic_5 { pt3dadd( -16.4368, 47.3708, -20.6188, 0.36 ) }
    apic_5 { pt3dadd( -16.5729, 47.0126, -22.7231, 0.48 ) }
    apic_5 { pt3dadd( -16.5676, 46.7975, -23.9589, 0.48 ) }
    apic_5 { pt3dadd( -16.4369, 46.422, -25.9107, 0.48 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 42.634, -76.6264, 41.3484, 0.36 ) }
    dend_28 { pt3dadd( 41.8325, -79.121, 41.9827, 0.36 ) }
    dend_28 { pt3dadd( 41.6701, -80.2206, 42.2892, 0.36 ) }
    dend_28 { pt3dadd( 41.6962, -81.3305, 42.6004, 0.36 ) }
    dend_28 { pt3dadd( 41.9552, -83.0559, 43.0362, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 42.2925, -84.5838, 43.4528, 0.36 ) }
    dend_28 { pt3dadd( 42.5775, -85.7099, 43.7733, 0.36 ) }
    dend_28 { pt3dadd( 43.2097, -87.539, 44.4244, 0.36 ) }
    dend_28 { pt3dadd( 43.8498, -89.0065, 44.927, 0.36 ) }
    dend_28 { pt3dadd( 44.6457, -90.5063, 45.3956, 0.36 ) }
    dend_28 { pt3dadd( 45.1171, -91.2793, 45.5687, 0.36 ) }
    dend_28 { pt3dadd( 45.6735, -92.0426, 45.7453, 0.36 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 42.634, -76.6264, 41.3484, 0.36 ) }
    dend_25 { pt3dadd( 41.4804, -77.6956, 40.8799, 0.36 ) }
    dend_25 { pt3dadd( 41.1261, -78.024, 40.736, 0.36 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 10/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -97.1515, -120.556, -3.69448, 0.36 ) }
    dend_14 { pt3dadd( -99.1922, -124.277, -3.31702, 0.24 ) }
    dend_14 { pt3dadd( -100.829, -127.057, -3.05843, 0.24 ) }
    dend_14 { pt3dadd( -102.155, -129.229, -2.70431, 0.24 ) }
    dend_14 { pt3dadd( -104.472, -132.908, -1.98305, 0.24 ) }
    dend_14 { pt3dadd( -105.734, -134.841, -1.5833, 0.24 ) }
    dend_14 { pt3dadd( -107.776, -137.873, -0.94535, 0.24 ) }
    dend_14 { pt3dadd( -108.746, -139.259, -0.630773, 0.24 ) }
    dend_14 { pt3dadd( -111.604, -143.256, 0.350864, 0.24 ) }
    dend_14 { pt3dadd( -113.053, -145.212, 0.846491, 0.24 ) }
    dend_14 { pt3dadd( -114.589, -147.172, 1.35391, 0.24 ) }
    dend_14 { pt3dadd( -115.924, -148.867, 1.77035, 0.24 ) }
    dend_14 { pt3dadd( -117.55, -150.984, 2.40164, 0.24 ) }
    dend_14 { pt3dadd( -119.505, -153.433, 3.20335, 0.24 ) }
    dend_14 { pt3dadd( -121.433, -155.717, 3.97553, 0.24 ) }
    dend_14 { pt3dadd( -123.108, -157.622, 4.69802, 0.24 ) }
    dend_14 { pt3dadd( -125.1, -159.809, 5.57422, 0.24 ) }
    dend_14 { pt3dadd( -129.417, -164.484, 7.42, 0.24 ) }
    dend_14 { pt3dadd( -131.135, -166.276, 8.11203, 0.24 ) }
    dend_14 { pt3dadd( -132.887, -168.1, 8.85066, 0.12 ) }
    dend_14 { pt3dadd( -134.575, -169.875, 9.45111, 0.12 ) }
    dend_14 { pt3dadd( -136.866, -172.335, 10.0649, 0.12 ) }
    dend_14 { pt3dadd( -139.448, -175.219, 10.4397, 0.12 ) }
    dend_14 { pt3dadd( -140.47, -176.438, 10.4114, 0.12 ) }
    dend_14 { pt3dadd( -142.246, -178.802, 10.2788, 0.12 ) }
    dend_14 { pt3dadd( -144.869, -182.628, 9.9976, 0.12 ) }
    dend_14 { pt3dadd( -145.953, -184.42, 9.86098, 0.12 ) }
    dend_14 { pt3dadd( -147.217, -186.873, 9.79275, 0.12 ) }
    dend_14 { pt3dadd( -148.311, -189.352, 9.73697, 0.12 ) }
    dend_14 { pt3dadd( -149.027, -191.197, 9.78019, 0.12 ) }
    dend_14 { pt3dadd( -149.749, -193.187, 10.0057, 0.12 ) }
    dend_14 { pt3dadd( -150.48, -195.161, 10.5922, 0.12 ) }
    dend_14 { pt3dadd( -151.462, -197.799, 11.5536, 0.12 ) }
    dend_14 { pt3dadd( -152.389, -200.116, 12.5763, 0.12 ) }
    dend_14 { pt3dadd( -153.376, -202.266, 13.6332, 0.12 ) }
    dend_14 { pt3dadd( -154.608, -204.565, 14.8143, 0.12 ) }
    dend_14 { pt3dadd( -156.307, -207.156, 16.1925, 0.12 ) }
    dend_14 { pt3dadd( -157.524, -208.678, 17.032, 0.12 ) }
    dend_14 { pt3dadd( -158.947, -210.231, 17.8637, 0.12 ) }
    dend_14 { pt3dadd( -160.796, -212.075, 18.6906, 0.12 ) }
    dend_14 { pt3dadd( -162.29, -213.495, 19.1589, 0.12 ) }
    dend_14 { pt3dadd( -164.729, -215.729, 19.7323, 0.12 ) }
    dend_14 { pt3dadd( -166.023, -216.928, 20.03, 0.12 ) }
    dend_14 { pt3dadd( -167.529, -218.41, 20.4875, 0.12 ) }
    dend_14 { pt3dadd( -170.389, -221.48, 21.6025, 0.12 ) }
    dend_14 { pt3dadd( -172.367, -223.756, 22.5854, 0.12 ) }
    dend_14 { pt3dadd( -173.721, -225.372, 23.3746, 0.12 ) }
    dend_14 { pt3dadd( -175.521, -227.578, 24.5645, 0.12 ) }
    dend_14 { pt3dadd( -177.661, -230.205, 26.0044, 0.12 ) }
    dend_14 { pt3dadd( -179.094, -231.919, 26.9809, 0.12 ) }
    dend_14 { pt3dadd( -180.758, -233.813, 28.0663, 0.12 ) }
    dend_14 { pt3dadd( -182.088, -235.355, 28.7502, 0.12 ) }
    dend_14 { pt3dadd( -183.016, -236.44, 29.1455, 0.12 ) }
    dend_14 { pt3dadd( -184.452, -238.121, 29.638, 0.12 ) }
    dend_14 { pt3dadd( -185.977, -239.952, 30.0598, 0.12 ) }
    dend_14 { pt3dadd( -187.445, -241.813, 30.417, 0.12 ) }
    dend_14 { pt3dadd( -189.612, -244.874, 30.6143, 0.12 ) }
    dend_14 { pt3dadd( -190.901, -246.793, 30.6051, 0.12 ) }
    dend_14 { pt3dadd( -192.112, -248.62, 30.5368, 0.12 ) }
    dend_14 { pt3dadd( -193.352, -250.423, 30.466, 0.12 ) }
    dend_14 { pt3dadd( -194.467, -251.971, 30.2401, 0.12 ) }
    dend_14 { pt3dadd( -197.779, -256.142, 29.0593, 0.12 ) }
    dend_14 { pt3dadd( -199.081, -257.544, 28.4228, 0.12 ) }
    dend_14 { pt3dadd( -201.083, -259.562, 27.3153, 0.12 ) }
    dend_14 { pt3dadd( -202.439, -260.919, 26.5655, 0.12 ) }
    dend_14 { pt3dadd( -204.212, -262.747, 25.5166, 0.12 ) }
    dend_14 { pt3dadd( -205.654, -264.203, 24.7519, 0.12 ) }
    dend_14 { pt3dadd( -207.753, -266.215, 23.8969, 0.12 ) }
    dend_14 { pt3dadd( -208.851, -267.236, 23.4621, 0.12 ) }
    dend_14 { pt3dadd( -211.163, -269.299, 22.6682, 0.12 ) }
    dend_14 { pt3dadd( -213.418, -271.277, 22.1794, 0.12 ) }
    dend_14 { pt3dadd( -216.214, -273.715, 21.7932, 0.12 ) }
    dend_14 { pt3dadd( -218.391, -275.604, 21.5952, 0.12 ) }
    dend_14 { pt3dadd( -220.593, -277.456, 21.5017, 0.12 ) }
    dend_14 { pt3dadd( -222.472, -278.926, 21.478, 0.12 ) }
    dend_14 { pt3dadd( -225.033, -280.604, 21.6066, 0.12 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 86/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -97.1515, -120.556, -3.69448, 0.36 ) }
    dend_13 { pt3dadd( -97.8042, -120.817, -3.47786, 0.36 ) }
    dend_13 { pt3dadd( -98.584, -121.138, -3.22291, 0.36 ) }
    dend_13 { pt3dadd( -99.3166, -121.508, -2.82059, 0.36 ) }
    dend_13 { pt3dadd( -99.8834, -121.816, -2.46023, 0.24 ) }
    dend_13 { pt3dadd( -100.529, -122.158, -2.04812, 0.24 ) }
    dend_13 { pt3dadd( -101.104, -122.454, -1.69125, 0.24 ) }
    dend_13 { pt3dadd( -101.814, -122.819, -1.24559, 0.24 ) }
    dend_13 { pt3dadd( -103.609, -123.736, -0.0459132, 0.24 ) }
    dend_13 { pt3dadd( -104.749, -124.319, 0.753207, 0.24 ) }
    dend_13 { pt3dadd( -106.161, -125.003, 1.75078, 0.24 ) }
    dend_13 { pt3dadd( -107.162, -125.428, 2.45051, 0.24 ) }
    dend_13 { pt3dadd( -108.36, -125.844, 3.26967, 0.24 ) }
    dend_13 { pt3dadd( -109.374, -126.118, 3.94548, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_13 { pt3dadd( -110.493, -126.332, 4.67205, 0.24 ) }
    dend_13 { pt3dadd( -111.704, -126.487, 5.54842, 0.24 ) }
    dend_13 { pt3dadd( -112.786, -126.572, 6.45036, 0.24 ) }
    dend_13 { pt3dadd( -113.716, -126.61, 7.32683, 0.24 ) }
    dend_13 { pt3dadd( -114.452, -126.615, 8.058, 0.24 ) }
    dend_13 { pt3dadd( -115.403, -126.625, 9.0091, 0.24 ) }
    dend_13 { pt3dadd( -116.597, -126.696, 10.265, 0.24 ) }
    dend_13 { pt3dadd( -117.841, -126.946, 11.7507, 0.24 ) }
    dend_13 { pt3dadd( -118.642, -127.223, 12.7668, 0.24 ) }
    dend_13 { pt3dadd( -119.417, -127.588, 13.7959, 0.24 ) }
    dend_13 { pt3dadd( -120.058, -127.962, 14.6374, 0.24 ) }
    dend_13 { pt3dadd( -120.898, -128.526, 15.6668, 0.24 ) }
    dend_13 { pt3dadd( -122.309, -129.58, 17.1954, 0.24 ) }
    dend_13 { pt3dadd( -123.244, -130.326, 18.0727, 0.24 ) }
    dend_13 { pt3dadd( -124.2, -131.127, 18.9389, 0.24 ) }
    dend_13 { pt3dadd( -125.228, -132.034, 19.8735, 0.24 ) }
    dend_13 { pt3dadd( -125.998, -132.69, 20.5317, 0.24 ) }
    dend_13 { pt3dadd( -126.917, -133.38, 21.152, 0.24 ) }
    dend_13 { pt3dadd( -127.95, -134.043, 21.611, 0.24 ) }
    dend_13 { pt3dadd( -131.877, -135.755, 26.5377, 0.24 ) }
    dend_13 { pt3dadd( -135.359, -138.161, 31.5093, 0.24 ) }
    dend_13 { pt3dadd( -138.614, -140.968, 36.4232, 0.24 ) }
    dend_13 { pt3dadd( -140.835, -143.813, 41.8642, 0.24 ) }
    dend_13 { pt3dadd( -144.559, -146.169, 46.6817, 0.24 ) }
    dend_13 { pt3dadd( -149.298, -147.405, 50.9997, 0.24 ) }
    dend_13 { pt3dadd( -153.384, -149.515, 55.6338, 0.24 ) }
    dend_13 { pt3dadd( -157.279, -150.829, 60.7064, 0.24 ) }
    dend_13 { pt3dadd( -161.024, -152.149, 65.8891, 0.24 ) }
    dend_13 { pt3dadd( -163.644, -154.218, 71.5001, 0.24 ) }
    dend_13 { pt3dadd( -165.2, -156.608, 77.3733, 0.24 ) }
    dend_13 { pt3dadd( -166.434, -158.163, 83.5931, 0.24 ) }
    dend_13 { pt3dadd( -167.094, -159.845, 89.867, 0.24 ) }
    dend_13 { pt3dadd( -167.893, -161.05, 96.2338, 0.24 ) }
    dend_13 { pt3dadd( -169.724, -163.325, 102.073, 0.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_2 (entry count 34/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -23.6366, -13.9804, 12.9021, 0.72 ) }
    dend_6 { pt3dadd( -25.5764, -15.3497, 14.9645, 0.36 ) }
    dend_6 { pt3dadd( -26.5948, -16.0685, 16.0472, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 37/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -23.6366, -13.9804, 12.9021, 0.72 ) }
    dend_3 { pt3dadd( -25.839, -12.5848, 12.3667, 0.72 ) }
    dend_3 { pt3dadd( -27.2621, -11.9059, 12.1689, 0.72 ) }
    dend_3 { pt3dadd( -28.6877, -11.3792, 12.1319, 0.72 ) }
    dend_3 { pt3dadd( -29.4407, -11.1227, 12.1501, 0.6 ) }
    dend_3 { pt3dadd( -30.7182, -10.6895, 12.2173, 0.6 ) }
    dend_3 { pt3dadd( -31.6141, -10.3745, 12.2859, 0.6 ) }
    dend_3 { pt3dadd( -33.8757, -9.71039, 12.6086, 0.6 ) }
    dend_3 { pt3dadd( -35.6934, -9.284, 12.9, 0.6 ) }
    dend_3 { pt3dadd( -36.8591, -9.08767, 13.0811, 0.6 ) }
    dend_3 { pt3dadd( -37.8002, -8.97428, 13.2235, 0.6 ) }
    dend_3 { pt3dadd( -39.2159, -8.88317, 13.4226, 0.6 ) }
    dend_3 { pt3dadd( -40.9017, -8.97257, 13.7655, 0.6 ) }
    dend_3 { pt3dadd( -41.9197, -9.19891, 14.0005, 0.6 ) }
    dend_3 { pt3dadd( -43.2249, -9.65239, 14.3383, 0.6 ) }
    dend_3 { pt3dadd( -44.31, -10.1156, 14.6529, 0.6 ) }
    dend_3 { pt3dadd( -45.3791, -10.6245, 14.9766, 0.6 ) }
    dend_3 { pt3dadd( -48.2846, -12.1803, 15.895, 0.6 ) }
    dend_3 { pt3dadd( -49.0067, -12.5844, 16.1257, 0.6 ) }
    dend_3 { pt3dadd( -49.6223, -12.9109, 16.3126, 0.48 ) }
    dend_3 { pt3dadd( -50.3146, -13.2506, 16.4712, 0.48 ) }
    dend_3 { pt3dadd( -51.0715, -13.5891, 16.5288, 0.48 ) }
    dend_3 { pt3dadd( -51.8224, -13.8383, 16.4443, 0.48 ) }
    dend_3 { pt3dadd( -53.043, -14.0426, 16.2355, 0.48 ) }
    dend_3 { pt3dadd( -54.2389, -14.097, 16.0978, 0.48 ) }
    dend_3 { pt3dadd( -55.3069, -14.0984, 16.0055, 0.48 ) }
    dend_3 { pt3dadd( -56.6197, -14.1151, 15.9099, 0.48 ) }
    dend_3 { pt3dadd( -59.0826, -14.2226, 15.738, 0.48 ) }
    dend_3 { pt3dadd( -61.6576, -14.3982, 15.5482, 0.48 ) }
    dend_3 { pt3dadd( -63.0748, -14.5135, 15.4298, 0.48 ) }
    dend_3 { pt3dadd( -64.3443, -14.6241, 15.302, 0.48 ) }
    dend_3 { pt3dadd( -66.4178, -14.7957, 15.0236, 0.48 ) }
    dend_3 { pt3dadd( -68.3035, -14.9721, 14.7026, 0.48 ) }
    dend_3 { pt3dadd( -69.4757, -15.1421, 14.4644, 0.48 ) }
    dend_3 { pt3dadd( -71.4175, -15.5442, 13.9871, 0.48 ) }
    dend_3 { pt3dadd( -72.9909, -15.8957, 13.6068, 0.48 ) }
    dend_3 { pt3dadd( -74.7326, -16.2422, 13.1971, 0.48 ) }
    dend_3 { pt3dadd( -76.108, -16.4393, 12.8764, 0.48 ) }
    dend_3 { pt3dadd( -77.2977, -16.5788, 12.6074, 0.48 ) }
    dend_3 { pt3dadd( -78.7856, -16.8171, 12.2901, 0.48 ) }
    dend_3 { pt3dadd( -79.929, -17.1856, 12.0752, 0.48 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 78/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( -20.6202, 69.6169, -15.7894, 1.08 ) }
    apic_10 { pt3dadd( -21.0402, 71.3401, -15.7474, 0.96 ) }
    apic_10 { pt3dadd( -21.3633, 72.7291, -15.6966, 0.96 ) }
    apic_10 { pt3dadd( -21.7226, 74.4666, -15.6071, 0.96 ) }
    apic_10 { pt3dadd( -21.9677, 75.885, -15.504, 0.96 ) }
    apic_10 { pt3dadd( -22.1269, 76.9615, -15.408, 0.96 ) }
    apic_10 { pt3dadd( -22.4173, 78.9248, -15.2331, 0.96 ) }
    apic_10 { pt3dadd( -22.5793, 80.0715, -15.1045, 0.96 ) }
    apic_10 { pt3dadd( -22.7468, 81.5918, -14.91, 0.96 ) }
    apic_10 { pt3dadd( -22.8626, 83.2293, -14.6835, 0.84 ) }
    apic_10 { pt3dadd( -22.9347, 84.4857, -14.4985, 0.84 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 89/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( -20.6202, 69.6169, -15.7894, 1.08 ) }
    apic_9 { pt3dadd( -18.3905, 72.6109, -15.9566, 0.24 ) }
    apic_9 { pt3dadd( -17.2858, 74.1577, -16.0519, 0.24 ) }
    apic_9 { pt3dadd( -16.4329, 75.3374, -16.0736, 0.24 ) }
    apic_9 { pt3dadd( -14.8512, 77.4754, -15.9431, 0.24 ) }
    apic_9 { pt3dadd( -13.2536, 79.5646, -15.7872, 0.24 ) }
    apic_9 { pt3dadd( -12.0552, 81.074, -15.6256, 0.24 ) }
    apic_9 { pt3dadd( -11.3906, 81.9844, -15.4524, 0.24 ) }
    apic_9 { pt3dadd( -10.3984, 83.3816, -15.157, 0.24 ) }
    apic_9 { pt3dadd( -9.42828, 84.89, -14.7952, 0.24 ) }
    apic_9 { pt3dadd( -8.1372, 87.098, -14.1364, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_9 { pt3dadd( -7.25158, 88.8565, -13.6805, 0.24 ) }
    apic_9 { pt3dadd( -6.27171, 90.899, -13.2082, 0.24 ) }
    apic_9 { pt3dadd( -5.45955, 92.8066, -12.8354, 0.24 ) }
    apic_9 { pt3dadd( -4.71257, 94.8644, -12.6154, 0.24 ) }
    apic_9 { pt3dadd( -4.10823, 96.8472, -12.5134, 0.24 ) }
    apic_9 { pt3dadd( -3.38916, 99.7149, -12.4058, 0.24 ) }
    apic_9 { pt3dadd( -2.83626, 102.183, -12.3912, 0.24 ) }
    apic_9 { pt3dadd( -2.30067, 104.72, -12.5065, 0.24 ) }
    apic_9 { pt3dadd( -1.73418, 107.68, -12.7093, 0.24 ) }
    apic_9 { pt3dadd( -1.47655, 109.231, -12.8193, 0.24 ) }
    apic_9 { pt3dadd( -1.18201, 111.149, -12.9229, 0.24 ) }
    apic_9 { pt3dadd( -0.79184, 113.631, -13.0356, 0.24 ) }
    apic_9 { pt3dadd( -0.0751184, 117.672, -13.2582, 0.24 ) }
    apic_9 { pt3dadd( 0.576651, 120.342, -13.4156, 0.24 ) }
    apic_9 { pt3dadd( 1.1854, 122.151, -13.4969, 0.24 ) }
    apic_9 { pt3dadd( 1.84703, 123.631, -13.6348, 0.24 ) }
    apic_9 { pt3dadd( 3.19766, 126.111, -14.0251, 0.24 ) }
    apic_9 { pt3dadd( 4.46677, 127.985, -14.4454, 0.24 ) }
    apic_9 { pt3dadd( 6.13525, 130.056, -15.0034, 0.24 ) }
    apic_9 { pt3dadd( 7.63036, 131.711, -15.513, 0.24 ) }
    apic_9 { pt3dadd( 9.49828, 133.607, -16.0314, 0.24 ) }
    apic_9 { pt3dadd( 10.6372, 134.76, -16.276, 0.24 ) }
    apic_9 { pt3dadd( 12.1312, 136.356, -16.5074, 0.24 ) }
    apic_9 { pt3dadd( 12.782, 137.148, -16.581, 0.24 ) }
    apic_9 { pt3dadd( 14.3775, 139.418, -16.5972, 0.24 ) }
    apic_9 { pt3dadd( 15.6616, 141.531, -16.4963, 0.24 ) }
    apic_9 { pt3dadd( 16.6068, 143.267, -16.3015, 0.24 ) }
    apic_9 { pt3dadd( 17.9238, 145.816, -16.0285, 0.24 ) }
    apic_9 { pt3dadd( 18.8892, 147.818, -15.8354, 0.24 ) }
    apic_9 { pt3dadd( 19.8376, 149.797, -15.6951, 0.24 ) }
    apic_9 { pt3dadd( 20.2665, 150.768, -15.6639, 0.24 ) }
    apic_9 { pt3dadd( 20.5718, 151.487, -15.6474, 0.24 ) }
    apic_9 { pt3dadd( 21.4607, 153.443, -15.5236, 0.24 ) }
    apic_9 { pt3dadd( 22.3129, 155.09, -15.3049, 0.24 ) }
    apic_9 { pt3dadd( 22.914, 156.159, -15.1374, 0.24 ) }
    apic_9 { pt3dadd( 23.5999, 157.405, -14.8979, 0.24 ) }
    apic_9 { pt3dadd( 24.1928, 158.506, -14.6594, 0.24 ) }
    apic_9 { pt3dadd( 24.8707, 159.878, -14.385, 0.24 ) }
    apic_9 { pt3dadd( 25.5159, 161.354, -14.2007, 0.24 ) }
    apic_9 { pt3dadd( 26.0708, 162.687, -14.1356, 0.24 ) }
    apic_9 { pt3dadd( 26.6843, 164.221, -14.1819, 0.24 ) }
    apic_9 { pt3dadd( 27.4584, 166.24, -14.3791, 0.24 ) }
    apic_9 { pt3dadd( 28.1801, 168.151, -14.6769, 0.24 ) }
    apic_9 { pt3dadd( 29.3467, 171.242, -15.3189, 0.24 ) }
    apic_9 { pt3dadd( 29.7782, 172.312, -15.5831, 0.24 ) }
    apic_9 { pt3dadd( 30.5431, 174.09, -16.1201, 0.12 ) }
    apic_9 { pt3dadd( 31.2248, 175.617, -16.6052, 0.12 ) }
    apic_9 { pt3dadd( 32.1733, 177.752, -17.3472, 0.12 ) }
    apic_9 { pt3dadd( 32.7756, 179.201, -17.8858, 0.12 ) }
    apic_9 { pt3dadd( 33.5549, 181.211, -18.7015, 0.12 ) }
    apic_9 { pt3dadd( 34.37, 183.594, -19.7649, 0.12 ) }
    apic_9 { pt3dadd( 34.8477, 185.167, -20.4668, 0.12 ) }
    apic_9 { pt3dadd( 35.7042, 188.496, -21.8939, 0.12 ) }
    apic_9 { pt3dadd( 36.1546, 190.491, -22.6953, 0.12 ) }
    apic_9 { pt3dadd( 36.5181, 192.395, -23.3615, 0.12 ) }
    apic_9 { pt3dadd( 36.8109, 194.151, -23.8536, 0.12 ) }
    apic_9 { pt3dadd( 37.0702, 195.599, -24.1375, 0.12 ) }
    apic_9 { pt3dadd( 37.625, 198.663, -24.679, 0.12 ) }
    apic_9 { pt3dadd( 37.9978, 200.648, -25.001, 0.12 ) }
    apic_9 { pt3dadd( 38.3785, 202.335, -25.465, 0.12 ) }
    apic_9 { pt3dadd( 38.8992, 204.517, -26.1903, 0.12 ) }
    apic_9 { pt3dadd( 39.3024, 206.217, -26.8178, 0.12 ) }
    apic_9 { pt3dadd( 40.3391, 210.641, -28.5725, 0.12 ) }
    apic_9 { pt3dadd( 40.8873, 213.022, -29.5486, 0.12 ) }
    apic_9 { pt3dadd( 42.3631, 219.144, -32.047, 0.12 ) }
    apic_9 { pt3dadd( 42.9104, 221.23, -32.8679, 0.12 ) }
    apic_9 { pt3dadd( 43.4957, 223.352, -33.6366, 0.12 ) }
    apic_9 { pt3dadd( 44.3531, 226.317, -34.5149, 0.12 ) }
    apic_9 { pt3dadd( 45.0573, 228.669, -34.9408, 0.12 ) }
    apic_9 { pt3dadd( 45.5703, 230.416, -35.0755, 0.12 ) }
    apic_9 { pt3dadd( 46.4738, 233.164, -34.9949, 0.12 ) }
    apic_9 { pt3dadd( 47.017, 234.495, -34.9941, 0.12 ) }
    apic_9 { pt3dadd( 48.1183, 236.805, -35.118, 0.12 ) }
    apic_9 { pt3dadd( 49.2655, 239.135, -35.2769, 0.12 ) }
    apic_9 { pt3dadd( 49.8175, 240.222, -35.3593, 0.12 ) }
    apic_9 { pt3dadd( 51.0294, 242.582, -35.574, 0.12 ) }
    apic_9 { pt3dadd( 52.6378, 245.52, -35.9211, 0.12 ) }
    apic_9 { pt3dadd( 55.1513, 249.945, -36.6076, 0.12 ) }
    apic_9 { pt3dadd( 57.1035, 253.214, -37.2631, 0.12 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 79/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( -16.4369, 46.422, -25.9107, 0.48 ) }
    apic_7 { pt3dadd( -15.7114, 46.0597, -29.8705, 0.48 ) }
    apic_7 { pt3dadd( -15.5308, 46.0237, -31.4737, 0.48 ) }
    apic_7 { pt3dadd( -15.3308, 46.2057, -33.0966, 0.48 ) }
    apic_7 { pt3dadd( -15.2158, 46.3637, -34.2598, 0.48 ) }
    apic_7 { pt3dadd( -14.9674, 47.0443, -38.601, 0.36 ) }
    apic_7 { pt3dadd( -14.9053, 47.2506, -39.6568, 0.36 ) }
    apic_7 { pt3dadd( -14.8435, 48.1049, -43.0474, 0.36 ) }
    apic_7 { pt3dadd( -14.8079, 49.5036, -47.269, 0.36 ) }
    apic_7 { pt3dadd( -14.7997, 49.9843, -48.4033, 0.36 ) }
    apic_7 { pt3dadd( -14.7896, 51.2927, -50.9807, 0.36 ) }
    apic_7 { pt3dadd( -14.7545, 53.139, -53.9848, 0.36 ) }
    apic_7 { pt3dadd( -14.6373, 54.6835, -56.2961, 0.36 ) }
    apic_7 { pt3dadd( -14.4903, 55.896, -57.9629, 0.36 ) }
    apic_7 { pt3dadd( -14.1025, 58.2601, -61.3744, 0.24 ) }
    apic_7 { pt3dadd( -13.9612, 59.0527, -62.5608, 0.24 ) }
    apic_7 { pt3dadd( -13.7769, 60.1397, -64.3738, 0.24 ) }
    apic_7 { pt3dadd( -13.6865, 61.1463, -66.3172, 0.24 ) }
    apic_7 { pt3dadd( -13.6321, 61.9239, -68.0332, 0.24 ) }
    apic_7 { pt3dadd( -13.7257, 63.5987, -72.015, 0.24 ) }
    apic_7 { pt3dadd( -13.8603, 64.2916, -73.6271, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_7 { pt3dadd( -14.0736, 65.7571, -76.8567, 0.24 ) }
    apic_7 { pt3dadd( -14.1658, 66.8473, -78.9749, 0.24 ) }
    apic_7 { pt3dadd( -14.1904, 68.7034, -82.3796, 0.24 ) }
    apic_7 { pt3dadd( -14.0534, 69.8177, -84.3454, 0.24 ) }
    apic_7 { pt3dadd( -13.815, 70.9151, -86.1128, 0.24 ) }
    apic_7 { pt3dadd( -12.6564, 74.4958, -91.5551, 0.12 ) }
    apic_7 { pt3dadd( -12.1478, 75.6742, -93.2356, 0.12 ) }
    apic_7 { pt3dadd( -10.7057, 78.2584, -96.9202, 0.12 ) }
    apic_7 { pt3dadd( -8.64387, 81.4831, -101.425, 0.12 ) }
    apic_7 { pt3dadd( -7.72725, 82.7182, -103.139, 0.12 ) }
    apic_7 { pt3dadd( -6.56462, 84.1482, -105.163, 0.12 ) }
    apic_7 { pt3dadd( -4.4076, 86.6618, -108.677, 0.12 ) }
    apic_7 { pt3dadd( -1.01528, 90.3665, -113.686, 0.12 ) }
    apic_7 { pt3dadd( -0.0801244, 91.3291, -114.838, 0.12 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 14/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( -16.4369, 46.422, -25.9107, 0.48 ) }
    apic_6 { pt3dadd( -17.3392, 46.6616, -26.8445, 0.24 ) }
    apic_6 { pt3dadd( -17.7374, 46.9295, -27.716, 0.24 ) }
    apic_6 { pt3dadd( -17.8967, 47.0255, -28.1487, 0.24 ) }
    apic_6 { pt3dadd( -18.1604, 47.1295, -28.8871, 0.24 ) }
    apic_6 { pt3dadd( -18.3905, 47.1718, -29.5222, 0.24 ) }
    apic_6 { pt3dadd( -19.171, 47.2186, -31.5873, 0.24 ) }
    apic_6 { pt3dadd( -19.4269, 47.2429, -32.4859, 0.24 ) }
    apic_6 { pt3dadd( -19.6682, 47.2844, -33.426, 0.24 ) }
    apic_6 { pt3dadd( -19.8187, 47.3409, -34.0813, 0.24 ) }
    apic_6 { pt3dadd( -19.9841, 47.4322, -34.841, 0.24 ) }
    apic_6 { pt3dadd( -20.1418, 47.5099, -35.7015, 0.24 ) }
    apic_6 { pt3dadd( -20.321, 47.6031, -36.9096, 0.24 ) }
    apic_6 { pt3dadd( -20.4474, 47.709, -38.1233, 0.24 ) }
    apic_6 { pt3dadd( -20.5741, 47.8571, -39.5492, 0.24 ) }
    apic_6 { pt3dadd( -20.6075, 47.9121, -39.9466, 0.24 ) }
    apic_6 { pt3dadd( -20.7298, 48.1245, -41.3127, 0.24 ) }
    apic_6 { pt3dadd( -20.853, 48.2851, -42.3622, 0.24 ) }
    apic_6 { pt3dadd( -21.0135, 48.3917, -43.3183, 0.24 ) }
    apic_6 { pt3dadd( -21.1596, 48.4639, -44.1115, 0.24 ) }
    apic_6 { pt3dadd( -21.3781, 48.5387, -45.1393, 0.24 ) }
    apic_6 { pt3dadd( -21.6124, 48.6087, -46.1381, 0.24 ) }
    apic_6 { pt3dadd( -21.8072, 48.6451, -46.7821, 0.24 ) }
    apic_6 { pt3dadd( -22.0619, 48.6546, -47.5249, 0.24 ) }
    apic_6 { pt3dadd( -22.4941, 48.5843, -48.7468, 0.24 ) }
    apic_6 { pt3dadd( -22.8758, 48.4043, -49.8932, 0.24 ) }
    apic_6 { pt3dadd( -23.0662, 48.2941, -50.4084, 0.24 ) }
    apic_6 { pt3dadd( -23.5456, 48.0388, -51.4558, 0.24 ) }
    apic_6 { pt3dadd( -24.0245, 47.7835, -52.403, 0.24 ) }
    apic_6 { pt3dadd( -24.5549, 47.5072, -53.3838, 0.24 ) }
    apic_6 { pt3dadd( -25.132, 47.2003, -54.3212, 0.24 ) }
    apic_6 { pt3dadd( -25.8239, 46.8412, -55.3879, 0.24 ) }
    apic_6 { pt3dadd( -26.3829, 46.6052, -56.195, 0.24 ) }
    apic_6 { pt3dadd( -27.0988, 46.4042, -57.1049, 0.24 ) }
    apic_6 { pt3dadd( -27.7959, 46.3444, -57.7882, 0.24 ) }
    apic_6 { pt3dadd( -28.7365, 46.4591, -58.3713, 0.24 ) }
    apic_6 { pt3dadd( -29.2794, 46.6179, -58.5638, 0.24 ) }
    apic_6 { pt3dadd( -30.5513, 47.1585, -58.8137, 0.24 ) }
    apic_6 { pt3dadd( -31.4607, 47.6888, -58.9523, 0.24 ) }
    apic_6 { pt3dadd( -32.5109, 48.2955, -59.0153, 0.24 ) }
    apic_6 { pt3dadd( -34.1686, 49.2165, -59.0584, 0.24 ) }
    apic_6 { pt3dadd( -35.0217, 49.6701, -59.1078, 0.24 ) }
    apic_6 { pt3dadd( -35.8333, 50.0564, -59.1892, 0.24 ) }
    apic_6 { pt3dadd( -37.2361, 50.5928, -59.4824, 0.24 ) }
    apic_6 { pt3dadd( -39.164, 51.1832, -60.1824, 0.24 ) }
    apic_6 { pt3dadd( -40.0448, 51.4126, -60.6513, 0.24 ) }
    apic_6 { pt3dadd( -41.7306, 51.8166, -61.7747, 0.24 ) }
    apic_6 { pt3dadd( -42.1588, 51.9131, -62.0815, 0.24 ) }
    apic_6 { pt3dadd( -43.3682, 52.2367, -63.1146, 0.24 ) }
    apic_6 { pt3dadd( -44.0655, 52.4819, -63.821, 0.24 ) }
    apic_6 { pt3dadd( -44.8233, 52.9305, -64.8475, 0.24 ) }
    apic_6 { pt3dadd( -45.0065, 53.0678, -65.1369, 0.24 ) }
    apic_6 { pt3dadd( -45.469, 53.4632, -65.9916, 0.24 ) }
    apic_6 { pt3dadd( -46.1916, 54.0654, -67.3865, 0.24 ) }
    apic_6 { pt3dadd( -46.5278, 54.3182, -68.0417, 0.24 ) }
    apic_6 { pt3dadd( -47.2619, 54.7368, -69.6394, 0.24 ) }
    apic_6 { pt3dadd( -47.4703, 54.8047, -70.1007, 0.24 ) }
    apic_6 { pt3dadd( -47.8262, 54.8323, -70.8239, 0.24 ) }
    apic_6 { pt3dadd( -48.3295, 54.7481, -71.8638, 0.24 ) }
    apic_6 { pt3dadd( -48.6726, 54.633, -72.6631, 0.24 ) }
    apic_6 { pt3dadd( -48.9675, 54.5175, -73.5114, 0.24 ) }
    apic_6 { pt3dadd( -49.2064, 54.451, -74.4721, 0.24 ) }
    apic_6 { pt3dadd( -49.4091, 54.4885, -75.5982, 0.24 ) }
    apic_6 { pt3dadd( -49.5661, 54.6597, -77.124, 0.24 ) }
    apic_6 { pt3dadd( -49.7553, 55.0275, -79.2646, 0.24 ) }
    apic_6 { pt3dadd( -49.8686, 55.2207, -80.1851, 0.24 ) }
    apic_6 { pt3dadd( -50.1225, 55.6068, -81.8251, 0.24 ) }
    apic_6 { pt3dadd( -50.2291, 55.7426, -82.3795, 0.24 ) }
    apic_6 { pt3dadd( -50.7331, 56.1427, -83.8865, 0.24 ) }
    apic_6 { pt3dadd( -51.3137, 56.4388, -85.1369, 0.24 ) }
    apic_6 { pt3dadd( -52.0531, 56.654, -86.4364, 0.24 ) }
    apic_6 { pt3dadd( -52.4422, 56.7098, -87.0689, 0.24 ) }
    apic_6 { pt3dadd( -52.9175, 56.7601, -87.7332, 0.24 ) }
    apic_6 { pt3dadd( -54.0917, 56.8889, -89.5755, 0.24 ) }
    apic_6 { pt3dadd( -54.9579, 56.9695, -91.0479, 0.24 ) }
    apic_6 { pt3dadd( -55.2963, 56.9722, -91.6957, 0.24 ) }
    apic_6 { pt3dadd( -55.7063, 56.9428, -92.4905, 0.24 ) }
    apic_6 { pt3dadd( -56.675, 56.8641, -94.3211, 0.24 ) }
    apic_6 { pt3dadd( -57.9096, 56.8193, -96.6468, 0.24 ) }
    apic_6 { pt3dadd( -58.5191, 56.798, -97.6981, 0.24 ) }
    apic_6 { pt3dadd( -59.3494, 56.8107, -99.0431, 0.24 ) }
    apic_6 { pt3dadd( -60.1131, 56.8832, -100.295, 0.24 ) }
    apic_6 { pt3dadd( -61.0624, 57.0774, -101.977, 0.24 ) }
    apic_6 { pt3dadd( -61.5028, 57.2103, -102.773, 0.24 ) }
    apic_6 { pt3dadd( -62.1249, 57.4414, -103.765, 0.24 ) }
    apic_6 { pt3dadd( -63.1006, 57.9467, -105.465, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_6 { pt3dadd( -63.521, 58.2502, -106.325, 0.24 ) }
    apic_6 { pt3dadd( -64.0999, 58.7834, -107.76, 0.24 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 2/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 45.6735, -92.0426, 45.7453, 0.36 ) }
    dend_30 { pt3dadd( 46.7281, -93.417, 46.0018, 0.36 ) }
    dend_30 { pt3dadd( 48.0366, -95.3984, 46.5049, 0.36 ) }
    dend_30 { pt3dadd( 48.9889, -96.9501, 46.961, 0.36 ) }
    dend_30 { pt3dadd( 49.7103, -98.1997, 47.3495, 0.36 ) }
    dend_30 { pt3dadd( 50.7193, -99.9327, 47.9194, 0.36 ) }
    dend_30 { pt3dadd( 51.8255, -101.832, 48.5608, 0.36 ) }
    dend_30 { pt3dadd( 52.6749, -103.413, 49.1413, 0.36 ) }
    dend_30 { pt3dadd( 52.9081, -103.843, 49.3226, 0.36 ) }
    dend_30 { pt3dadd( 53.601, -105.116, 49.8503, 0.36 ) }
    dend_30 { pt3dadd( 54.17, -106.144, 50.2468, 0.36 ) }
    dend_30 { pt3dadd( 54.9768, -107.432, 50.7454, 0.36 ) }
    dend_30 { pt3dadd( 55.6345, -108.407, 51.0629, 0.36 ) }
    dend_30 { pt3dadd( 56.2366, -109.243, 51.3232, 0.36 ) }
    dend_30 { pt3dadd( 56.9663, -110.248, 51.6159, 0.36 ) }
    dend_30 { pt3dadd( 57.6305, -111.169, 51.8805, 0.36 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 18/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 45.6735, -92.0426, 45.7453, 0.36 ) }
    dend_29 { pt3dadd( 44.128, -93.5684, 45.9311, 0.36 ) }
    dend_29 { pt3dadd( 37.7953, -101.542, 46.9857, 0.36 ) }
    dend_29 { pt3dadd( 31.8509, -109.853, 46.3826, 0.36 ) }
    dend_29 { pt3dadd( 26.6774, -118.685, 46.5289, 0.36 ) }
    dend_29 { pt3dadd( 22.4957, -128.021, 46.1538, 0.36 ) }
    dend_29 { pt3dadd( 16.9605, -136.475, 44.519, 0.36 ) }
    dend_29 { pt3dadd( 11.5738, -145.176, 44.7634, 0.36 ) }
    dend_29 { pt3dadd( 6.17064, -153.756, 43.3571, 0.36 ) }
    dend_29 { pt3dadd( 0.31656, -161.861, 41.1617, 0.36 ) }
    dend_29 { pt3dadd( -3.90592, -170.349, 37.3012, 0.36 ) }
    dend_29 { pt3dadd( -9.14115, -178.687, 34.4988, 0.36 ) }
    dend_29 { pt3dadd( -13.7765, -187.344, 31.6056, 0.36 ) }
    dend_29 { pt3dadd( -17.4329, -196.693, 29.6044, 0.36 ) }
    dend_29 { pt3dadd( -21.7824, -205.816, 27.9792, 0.36 ) }
    dend_29 { pt3dadd( -26.2631, -214.982, 27.1505, 0.36 ) }
    dend_29 { pt3dadd( -29.8423, -224.566, 27.4839, 0.36 ) }
    dend_29 { pt3dadd( -31.951, -234.536, 28.4542, 0.36 ) }
    dend_29 { pt3dadd( -33.6344, -244.632, 28.5824, 0.36 ) }
    dend_29 { pt3dadd( -33.6697, -254.761, 27.1015, 0.36 ) }
    dend_29 { pt3dadd( -34.3047, -264.901, 25.8486, 0.36 ) }
    dend_29 { pt3dadd( -35.8289, -274.725, 23.4085, 0.36 ) }
    dend_29 { pt3dadd( -38.6151, -283.301, 18.5649, 0.36 ) }
    dend_29 { pt3dadd( -41.7062, -292.03, 14.202, 0.36 ) }
    dend_29 { pt3dadd( -43.3523, -301.102, 9.75412, 0.36 ) }
    dend_29 { pt3dadd( -44.3472, -310.745, 6.46846, 0.36 ) }
    dend_29 { pt3dadd( -43.477, -319.746, 1.67114, 0.36 ) }
    dend_29 { pt3dadd( -42.5109, -329.493, -1.30334, 0.36 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 41.1261, -78.024, 40.736, 0.36 ) }
    dend_27 { pt3dadd( 42.1263, -80.2625, 42.0467, 0.24 ) }
    dend_27 { pt3dadd( 44.3817, -83.7825, 44.4628, 0.24 ) }
    dend_27 { pt3dadd( 45.0677, -84.8215, 45.2079, 0.24 ) }
    dend_27 { pt3dadd( 45.9383, -86.1718, 46.2525, 0.12 ) }
    dend_27 { pt3dadd( 46.8202, -87.5788, 47.3652, 0.12 ) }
    dend_27 { pt3dadd( 47.9192, -89.1012, 48.7842, 0.12 ) }
    dend_27 { pt3dadd( 48.433, -89.7834, 49.4673, 0.12 ) }
    dend_27 { pt3dadd( 49.4958, -91.2184, 50.9603, 0.24 ) }
    dend_27 { pt3dadd( 50.8138, -93.0842, 52.9839, 0.24 ) }
    dend_27 { pt3dadd( 51.3794, -93.9847, 53.9132, 0.24 ) }
    dend_27 { pt3dadd( 52.0046, -95.1608, 54.9076, 0.24 ) }
    dend_27 { pt3dadd( 52.7059, -96.8738, 56.0784, 0.24 ) }
    dend_27 { pt3dadd( 53.3904, -99.0795, 57.1122, 0.24 ) }
    dend_27 { pt3dadd( 53.7693, -100.786, 57.5934, 0.24 ) }
    dend_27 { pt3dadd( 54.2359, -103.517, 58.0837, 0.24 ) }
    dend_27 { pt3dadd( 54.6565, -106.962, 58.4466, 0.12 ) }
    dend_27 { pt3dadd( 54.8289, -109.687, 58.4839, 0.12 ) }
    dend_27 { pt3dadd( 54.8023, -113.647, 58.1268, 0.12 ) }
    dend_27 { pt3dadd( 54.7351, -114.496, 57.9596, 0.12 ) }
    dend_27 { pt3dadd( 60.5217, -125.088, 62.1378, 0.12 ) }
    dend_27 { pt3dadd( 66.3174, -135.59, 66.526, 0.12 ) }
    dend_27 { pt3dadd( 74.2187, -145.17, 69.5107, 0.12 ) }
    dend_27 { pt3dadd( 81.5487, -155.579, 70.5433, 0.12 ) }
    dend_27 { pt3dadd( 89.0466, -165.516, 73.4018, 0.12 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 71/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 41.1261, -78.024, 40.736, 0.36 ) }
    dend_26 { pt3dadd( 40.2494, -76.984, 40.232, 0.24 ) }
    dend_26 { pt3dadd( 39.5633, -76.1702, 39.8376, 0.24 ) }
    dend_26 { pt3dadd( 38.5981, -75.0253, 39.2828, 0.24 ) }
    dend_26 { pt3dadd( 36.6636, -72.7306, 38.1707, 0.24 ) }
    dend_26 { pt3dadd( 34.3237, -69.955, 36.8256, 0.24 ) }
    dend_26 { pt3dadd( 29.9134, -63.0708, 34.1054, 0.24 ) }
    dend_26 { pt3dadd( 26.519, -55.6401, 31.3662, 0.24 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 79/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -26.5948, -16.0685, 16.0472, 0.36 ) }
    dend_8 { pt3dadd( -27.616, -17.3802, 16.4728, 0.36 ) }
    dend_8 { pt3dadd( -28.2449, -18.188, 16.7349, 0.36 ) }
    dend_8 { pt3dadd( -29.0178, -19.1807, 17.057, 0.36 ) }
    dend_8 { pt3dadd( -29.6142, -19.9468, 17.3055, 0.36 ) }
    dend_8 { pt3dadd( -34.6762, -25.1839, 18.6976, 0.36 ) }
    dend_8 { pt3dadd( -39.8359, -30.1138, 20.7128, 0.36 ) }
    dend_8 { pt3dadd( -45.5024, -34.5346, 22.5393, 0.36 ) }
    dend_8 { pt3dadd( -50.3345, -39.9024, 24.2207, 0.36 ) }
    dend_8 { pt3dadd( -55.0205, -45.3034, 26.185, 0.36 ) }
    dend_8 { pt3dadd( -59.4498, -50.7844, 28.4935, 0.36 ) }
    dend_8 { pt3dadd( -64.774, -55.7571, 29.8766, 0.36 ) }
    dend_8 { pt3dadd( -71.063, -59.2761, 31.624, 0.36 ) }
    dend_8 { pt3dadd( -77.6781, -62.2296, 33.2073, 0.36 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 93/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -26.5948, -16.0685, 16.0472, 0.36 ) }
    dend_7 { pt3dadd( -29.5139, -13.9281, 18.4839, 0.36 ) }
    dend_7 { pt3dadd( -31.5714, -12.4196, 20.2013, 0.36 ) }
    dend_7 { pt3dadd( -41.8734, -6.69566, 28.2479, 0.36 ) }
    dend_7 { pt3dadd( -51.9166, -1.07904, 36.6875, 0.36 ) }
    dend_7 { pt3dadd( -62.1313, 4.55219, 44.9089, 0.36 ) }
    dend_7 { pt3dadd( -73.5419, 9.78751, 51.6935, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_7 { pt3dadd( -83.7883, 14.2479, 60.5681, 0.36 ) }
    dend_7 { pt3dadd( -95.8814, 17.8637, 67.2258, 0.36 ) }
    dend_7 { pt3dadd( -107.389, 22.3589, 74.3678, 0.36 ) }
    dend_7 { pt3dadd( -119.051, 27.6848, 80.6345, 0.36 ) }
    dend_7 { pt3dadd( -130.921, 29.7573, 88.281, 0.36 ) }
    dend_7 { pt3dadd( -141.011, 33.5067, 97.6495, 0.36 ) }
    dend_7 { pt3dadd( -150.78, 36.7395, 107.537, 0.36 ) }
    dend_7 { pt3dadd( -158.942, 38.8295, 119.055, 0.36 ) }
    dend_7 { pt3dadd( -167.172, 42.5038, 130.118, 0.36 ) }
    dend_7 { pt3dadd( -176.53, 48.9128, 138.778, 0.36 ) }
    dend_7 { pt3dadd( -183.974, 55.8677, 148.77, 0.36 ) }
    dend_7 { pt3dadd( -193.531, 62.0917, 157.348, 0.36 ) }
    dend_7 { pt3dadd( -203.58, 67.7309, 165.766, 0.36 ) }
    dend_7 { pt3dadd( -212.772, 72.2759, 175.69, 0.36 ) }
    dend_7 { pt3dadd( -221.401, 76.765, 186.132, 0.36 ) }
    dend_7 { pt3dadd( -229.893, 79.2028, 197.338, 0.36 ) }
    dend_7 { pt3dadd( -239.155, 80.6251, 208.101, 0.36 ) }
    dend_7 { pt3dadd( -249.069, 80.4256, 218.363, 0.36 ) }
    dend_7 { pt3dadd( -258.032, 81.9393, 229.364, 0.36 ) }
    dend_7 { pt3dadd( -269.27, 83.4385, 238.03, 0.36 ) }
    dend_7 { pt3dadd( -279.166, 83.9882, 248.297, 0.36 ) }
    dend_7 { pt3dadd( -288.876, 81.9858, 258.561, 0.36 ) }
    dend_7 { pt3dadd( -297.28, 81.09, 270.059, 0.36 ) }
    dend_7 { pt3dadd( -304.037, 79.3066, 282.501, 0.36 ) }
    dend_7 { pt3dadd( -310.272, 74.5166, 294.41, 0.36 ) }
    dend_7 { pt3dadd( -317.06, 68.1445, 305.225, 0.36 ) }
    dend_7 { pt3dadd( -322.783, 63.3695, 317.394, 0.36 ) }
    dend_7 { pt3dadd( -326.169, 58.1695, 330.245, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 28/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -79.929, -17.1856, 12.0752, 0.48 ) }
    dend_5 { pt3dadd( -83.1539, -18.7964, 11.4425, 0.48 ) }
    dend_5 { pt3dadd( -84.5, -19.3866, 11.0412, 0.48 ) }
    dend_5 { pt3dadd( -85.4827, -19.8174, 10.7483, 0.48 ) }
    dend_5 { pt3dadd( -86.3582, -20.2012, 10.4873, 0.48 ) }
    dend_5 { pt3dadd( -87.3857, -20.6517, 10.181, 0.48 ) }
    dend_5 { pt3dadd( -89.1222, -21.413, 9.6633, 0.48 ) }
    dend_5 { pt3dadd( -95.5539, -24.8309, 8.31587, 0.48 ) }
    dend_5 { pt3dadd( -101.789, -28.1122, 6.03126, 0.48 ) }
    dend_5 { pt3dadd( -107.674, -31.5696, 3.1537, 0.48 ) }
    dend_5 { pt3dadd( -113.262, -35.826, 0.802993, 0.48 ) }
    dend_5 { pt3dadd( -118.528, -40.288, -1.88437, 0.48 ) }
    dend_5 { pt3dadd( -124.234, -44.1652, -4.58303, 0.48 ) }
    dend_5 { pt3dadd( -130.388, -47.356, -7.19298, 0.48 ) }
    dend_5 { pt3dadd( -135.999, -51.753, -9.20466, 0.48 ) }
    dend_5 { pt3dadd( -141.716, -55.955, -11.3312, 0.48 ) }
    dend_5 { pt3dadd( -148.115, -59.338, -12.9011, 0.48 ) }
    dend_5 { pt3dadd( -153.576, -63.7835, -15.2005, 0.48 ) }
    dend_5 { pt3dadd( -159.651, -67.5722, -17.0981, 0.48 ) }
    dend_5 { pt3dadd( -165.124, -72.1809, -19.0146, 0.48 ) }
    dend_5 { pt3dadd( -170.456, -76.2757, -22.1243, 0.48 ) }
    dend_5 { pt3dadd( -176.624, -79.6725, -24.4223, 0.48 ) }
    dend_5 { pt3dadd( -182.725, -82.0782, -27.8645, 0.48 ) }
    dend_5 { pt3dadd( -189.212, -83.4578, -31.1636, 0.48 ) }
    dend_5 { pt3dadd( -195.994, -85.0228, -33.6977, 0.48 ) }
    dend_5 { pt3dadd( -203.213, -85.6058, -35.2504, 0.48 ) }
    dend_5 { pt3dadd( -210.613, -85.5494, -35.5652, 0.48 ) }
    dend_5 { pt3dadd( -217.878, -84.1182, -35.3823, 0.48 ) }
    dend_5 { pt3dadd( -224.85, -82.0169, -34.0239, 0.48 ) }
    dend_5 { pt3dadd( -231.631, -79.2168, -33.0046, 0.48 ) }
    dend_5 { pt3dadd( -237.946, -75.6765, -31.4377, 0.48 ) }
    dend_5 { pt3dadd( -244.423, -72.2588, -30.3251, 0.48 ) }
    dend_5 { pt3dadd( -250.049, -67.8363, -28.4149, 0.48 ) }
    dend_5 { pt3dadd( -255.417, -63.3654, -25.9531, 0.48 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -79.929, -17.1856, 12.0752, 0.48 ) }
    dend_4 { pt3dadd( -82.123, -17.6779, 11.7813, 0.48 ) }
    dend_4 { pt3dadd( -82.914, -17.659, 11.6256, 0.48 ) }
    dend_4 { pt3dadd( -83.8708, -17.6361, 11.4373, 0.48 ) }
    dend_4 { pt3dadd( -85.0376, -17.6082, 11.2076, 0.48 ) }
    dend_4 { pt3dadd( -85.6605, -17.5933, 11.085, 0.48 ) }
    dend_4 { pt3dadd( -87.0031, -17.5611, 10.8208, 0.48 ) }
    dend_4 { pt3dadd( -88.3331, -17.5127, 10.6196, 0.48 ) }
    dend_4 { pt3dadd( -93.9099, -16.5109, 9.53354, 0.48 ) }
    dend_4 { pt3dadd( -99.2953, -15.2242, 7.91358, 0.48 ) }
    dend_4 { pt3dadd( -104.938, -15.0853, 6.71758, 0.48 ) }
    dend_4 { pt3dadd( -110.308, -15.5359, 4.65788, 0.48 ) }
    dend_4 { pt3dadd( -115.415, -15.7704, 1.98564, 0.48 ) }
    dend_4 { pt3dadd( -120.057, -16.0493, -1.42942, 0.48 ) }
    dend_4 { pt3dadd( -124.245, -16.3304, -5.38706, 0.48 ) }
    dend_4 { pt3dadd( -128.309, -15.9369, -9.4629, 0.48 ) }
    dend_4 { pt3dadd( -132.894, -15.9858, -12.9638, 0.48 ) }
    dend_4 { pt3dadd( -137.704, -16.0859, -16.1473, 0.48 ) }
    dend_4 { pt3dadd( -142.8, -17.2927, -18.567, 0.48 ) }
    dend_4 { pt3dadd( -148.057, -19.2277, -19.9488, 0.48 ) }
    dend_4 { pt3dadd( -153.557, -20.9401, -20.2562, 0.48 ) }
    dend_4 { pt3dadd( -159.109, -22.466, -19.8895, 0.48 ) }
    dend_4 { pt3dadd( -164.585, -24.2588, -20.1752, 0.48 ) }
    dend_4 { pt3dadd( -169.522, -27.0816, -21.1466, 0.48 ) }
    dend_4 { pt3dadd( -174.822, -29.2473, -21.8519, 0.48 ) }
    dend_4 { pt3dadd( -180.265, -31.0341, -22.5328, 0.48 ) }
    dend_4 { pt3dadd( -185.507, -33.2149, -23.5547, 0.48 ) }
    dend_4 { pt3dadd( -190.532, -35.9803, -24.1757, 0.48 ) }
    dend_4 { pt3dadd( -195.453, -38.7385, -25.3848, 0.48 ) }
    dend_4 { pt3dadd( -200.342, -41.7987, -25.4983, 0.48 ) }
    dend_4 { pt3dadd( -205.023, -45.1009, -24.8149, 0.48 ) }
    dend_4 { pt3dadd( -210.18, -47.6852, -24.7062, 0.48 ) }
    dend_4 { pt3dadd( -214.701, -51.2655, -24.871, 0.48 ) }
    dend_4 { pt3dadd( -219.267, -54.7264, -24.1991, 0.48 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 96/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -22.9347, 84.4857, -14.4985, 0.84 ) }
    apic_14 { pt3dadd( -23.6666, 87.1325, -14.7671, 0.84 ) }
    apic_14 { pt3dadd( -24.3106, 90.103, -14.9889, 0.84 ) }
    apic_14 { pt3dadd( -24.8815, 93.767, -15.1576, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_14 { pt3dadd( -25.1705, 96.393, -15.2116, 0.84 ) }
    apic_14 { pt3dadd( -25.4181, 99.1849, -15.2208, 0.84 ) }
    apic_14 { pt3dadd( -25.5445, 100.652, -15.21, 0.84 ) }
    apic_14 { pt3dadd( -25.6579, 102.507, -15.1438, 0.84 ) }
    apic_14 { pt3dadd( -25.663, 104.057, -15.024, 0.84 ) }
    apic_14 { pt3dadd( -25.5655, 105.653, -14.8671, 0.84 ) }
    apic_14 { pt3dadd( -25.4363, 107.34, -14.692, 0.84 ) }
    apic_14 { pt3dadd( -25.2509, 109.945, -14.4229, 0.84 ) }
    apic_14 { pt3dadd( -25.1799, 111.603, -14.2722, 0.84 ) }
    apic_14 { pt3dadd( -25.1708, 113.166, -14.155, 0.84 ) }
    apic_14 { pt3dadd( -25.1497, 115.387, -13.9899, 0.84 ) }
    apic_14 { pt3dadd( -25.0813, 116.906, -13.8623, 0.84 ) }
    apic_14 { pt3dadd( -24.9451, 118.63, -13.6892, 0.84 ) }
    apic_14 { pt3dadd( -24.8651, 119.731, -13.5716, 0.84 ) }
    apic_14 { pt3dadd( -24.7717, 121.335, -13.3969, 0.84 ) }
    apic_14 { pt3dadd( -24.6546, 123.268, -13.1599, 0.84 ) }
    apic_14 { pt3dadd( -24.5336, 125.036, -12.976, 0.84 ) }
    apic_14 { pt3dadd( -24.4034, 127.208, -12.7876, 0.84 ) }
    apic_14 { pt3dadd( -24.2984, 129.641, -12.6284, 0.84 ) }
    apic_14 { pt3dadd( -24.2483, 131.786, -12.626, 0.84 ) }
    apic_14 { pt3dadd( -24.2731, 134.044, -12.7434, 0.84 ) }
    apic_14 { pt3dadd( -24.3868, 136.006, -12.9282, 0.84 ) }
    apic_14 { pt3dadd( -24.5515, 137.943, -13.1798, 0.84 ) }
    apic_14 { pt3dadd( -24.6822, 139.268, -13.396, 0.84 ) }
    apic_14 { pt3dadd( -25.1182, 142.862, -14.1038, 0.84 ) }
    apic_14 { pt3dadd( -25.5318, 145.236, -14.6892, 0.84 ) }
    apic_14 { pt3dadd( -26.0658, 147.755, -15.3734, 0.84 ) }
    apic_14 { pt3dadd( -26.3381, 149.267, -15.817, 0.84 ) }
    apic_14 { pt3dadd( -26.5396, 150.896, -16.292, 0.84 ) }
    apic_14 { pt3dadd( -26.6842, 152.81, -16.8444, 0.84 ) }
    apic_14 { pt3dadd( -26.8393, 155.222, -17.4446, 0.84 ) }
    apic_14 { pt3dadd( -26.8697, 156.567, -17.7346, 0.84 ) }
    apic_14 { pt3dadd( -26.8744, 159.835, -18.2772, 0.84 ) }
    apic_14 { pt3dadd( -26.9403, 162.776, -18.618, 0.84 ) }
    apic_14 { pt3dadd( -27.0362, 165.85, -18.8494, 0.84 ) }
    apic_14 { pt3dadd( -27.1061, 167.913, -18.9497, 0.84 ) }
    apic_14 { pt3dadd( -27.286, 171.149, -19.0386, 0.84 ) }
    apic_14 { pt3dadd( -27.5092, 173.723, -19.1488, 0.84 ) }
    apic_14 { pt3dadd( -27.8894, 177.094, -19.3256, 0.84 ) }
    apic_14 { pt3dadd( -28.1709, 179.321, -19.5778, 0.84 ) }
    apic_14 { pt3dadd( -28.4361, 181.305, -19.8834, 0.84 ) }
    apic_14 { pt3dadd( -28.7044, 183.597, -20.3219, 0.84 ) }
    apic_14 { pt3dadd( -28.9077, 185.477, -20.6892, 0.84 ) }
    apic_14 { pt3dadd( -29.1224, 188.283, -21.2843, 0.84 ) }
    apic_14 { pt3dadd( -29.2445, 190.916, -21.8501, 0.84 ) }
    apic_14 { pt3dadd( -29.3489, 193.082, -22.3115, 0.84 ) }
    apic_14 { pt3dadd( -29.4263, 195.113, -22.7165, 0.84 ) }
    apic_14 { pt3dadd( -29.4613, 196.566, -22.9976, 0.84 ) }
    apic_14 { pt3dadd( -29.6059, 199.085, -23.3802, 0.84 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 49/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -22.9347, 84.4857, -14.4985, 0.84 ) }
    apic_11 { pt3dadd( -24.5761, 85.0441, -15.3049, 0.24 ) }
    apic_11 { pt3dadd( -25.4981, 85.3549, -15.5905, 0.24 ) }
    apic_11 { pt3dadd( -26.8348, 85.8692, -15.8311, 0.24 ) }
    apic_11 { pt3dadd( -28.057, 86.4547, -15.9399, 0.24 ) }
    apic_11 { pt3dadd( -28.7594, 86.8507, -15.9924, 0.24 ) }
    apic_11 { pt3dadd( -30.7929, 88.1224, -16.1821, 0.24 ) }
    apic_11 { pt3dadd( -32.9325, 89.5706, -16.3274, 0.24 ) }
    apic_11 { pt3dadd( -34.1659, 90.49, -16.4241, 0.24 ) }
    apic_11 { pt3dadd( -35.7264, 91.823, -16.5541, 0.24 ) }
    apic_11 { pt3dadd( -37.2045, 93.2687, -16.7026, 0.24 ) }
    apic_11 { pt3dadd( -38.4097, 94.5703, -16.8676, 0.24 ) }
    apic_11 { pt3dadd( -39.3693, 95.676, -17.0672, 0.24 ) }
    apic_11 { pt3dadd( -40.4538, 96.824, -17.3381, 0.24 ) }
    apic_11 { pt3dadd( -41.7581, 98.0031, -17.6363, 0.24 ) }
    apic_11 { pt3dadd( -43.1463, 99.117, -17.8744, 0.24 ) }
    apic_11 { pt3dadd( -44.0064, 99.7647, -17.9671, 0.24 ) }
    apic_11 { pt3dadd( -45.0618, 100.464, -18.0723, 0.24 ) }
    apic_11 { pt3dadd( -47.4731, 101.941, -18.337, 0.24 ) }
    apic_11 { pt3dadd( -49.2878, 102.97, -18.5881, 0.24 ) }
    apic_11 { pt3dadd( -50.8598, 103.806, -18.8058, 0.24 ) }
    apic_11 { pt3dadd( -51.8006, 104.306, -18.9186, 0.24 ) }
    apic_11 { pt3dadd( -53.8856, 105.513, -19.118, 0.24 ) }
    apic_11 { pt3dadd( -55.0475, 106.238, -19.1115, 0.24 ) }
    apic_11 { pt3dadd( -55.8902, 106.806, -19.0597, 0.24 ) }
    apic_11 { pt3dadd( -57.7404, 108.143, -18.792, 0.24 ) }
    apic_11 { pt3dadd( -59.5485, 109.457, -18.3454, 0.24 ) }
    apic_11 { pt3dadd( -62.0157, 111.244, -17.5901, 0.24 ) }
    apic_11 { pt3dadd( -65.4337, 113.782, -16.3573, 0.24 ) }
    apic_11 { pt3dadd( -67.0417, 114.988, -15.712, 0.24 ) }
    apic_11 { pt3dadd( -69.1, 116.592, -14.8471, 0.24 ) }
    apic_11 { pt3dadd( -71.9966, 118.866, -13.6289, 0.24 ) }
    apic_11 { pt3dadd( -73.2815, 119.885, -13.093, 0.24 ) }
    apic_11 { pt3dadd( -74.5115, 120.864, -12.6007, 0.24 ) }
    apic_11 { pt3dadd( -75.8456, 121.845, -12.1545, 0.24 ) }
    apic_11 { pt3dadd( -78.1432, 123.33, -11.4746, 0.24 ) }
    apic_11 { pt3dadd( -80.5467, 124.806, -10.8627, 0.24 ) }
    apic_11 { pt3dadd( -82.3339, 125.903, -10.4981, 0.24 ) }
    apic_11 { pt3dadd( -83.755, 126.73, -10.2406, 0.24 ) }
    apic_11 { pt3dadd( -86.1676, 128.065, -9.85939, 0.24 ) }
    apic_11 { pt3dadd( -88.2335, 129.216, -9.62616, 0.24 ) }
    apic_11 { pt3dadd( -89.569, 130.026, -9.50982, 0.24 ) }
    apic_11 { pt3dadd( -90.9329, 130.983, -9.43913, 0.24 ) }
    apic_11 { pt3dadd( -92.5232, 132.217, -9.39081, 0.24 ) }
    apic_11 { pt3dadd( -94.8362, 134.249, -9.36061, 0.24 ) }
    apic_11 { pt3dadd( -97.3791, 136.898, -9.36138, 0.12 ) }
    apic_11 { pt3dadd( -98.7461, 138.418, -9.39218, 0.12 ) }
    apic_11 { pt3dadd( -99.8937, 139.751, -9.50646, 0.12 ) }
    apic_11 { pt3dadd( -100.503, 140.531, -9.61809, 0.12 ) }
    apic_11 { pt3dadd( -100.955, 141.197, -9.73754, 0.12 ) }
    apic_11 { pt3dadd( -101.408, 141.946, -9.90048, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    apic_11 { pt3dadd( -102.389, 143.835, -10.3151, 0.12 ) }
    apic_11 { pt3dadd( -103.671, 146.108, -10.9065, 0.12 ) }
    apic_11 { pt3dadd( -105.174, 148.592, -11.5368, 0.12 ) }
    apic_11 { pt3dadd( -106.425, 150.527, -12.0018, 0.12 ) }
    apic_11 { pt3dadd( -107.513, 152.131, -12.3563, 0.12 ) }
    apic_11 { pt3dadd( -108.706, 153.941, -12.673, 0.12 ) }
    apic_11 { pt3dadd( -110.492, 156.808, -13.0066, 0.12 ) }
    apic_11 { pt3dadd( -111.358, 158.145, -13.1016, 0.12 ) }
    apic_11 { pt3dadd( -112.35, 159.669, -13.1961, 0.12 ) }
    apic_11 { pt3dadd( -113.522, 161.495, -13.2892, 0.12 ) }
    apic_11 { pt3dadd( -114.686, 163.452, -13.342, 0.12 ) }
    apic_11 { pt3dadd( -115.597, 165.073, -13.2529, 0.12 ) }
    apic_11 { pt3dadd( -116.326, 166.541, -13.0752, 0.12 ) }
    apic_11 { pt3dadd( -117.3, 168.457, -12.7902, 0.12 ) }
    apic_11 { pt3dadd( -118.779, 171.289, -12.2175, 0.12 ) }
    apic_11 { pt3dadd( -119.522, 172.718, -11.8578, 0.12 ) }
    apic_11 { pt3dadd( -120.945, 175.41, -11.1142, 0.12 ) }
    apic_11 { pt3dadd( -121.955, 177.299, -10.5259, 0.12 ) }
    apic_11 { pt3dadd( -122.474, 178.194, -10.2427, 0.12 ) }
    apic_11 { pt3dadd( -123.291, 179.408, -9.90071, 0.12 ) }
    apic_11 { pt3dadd( -124.586, 181.091, -9.53586, 0.12 ) }
    apic_11 { pt3dadd( -125.95, 182.808, -9.29944, 0.12 ) }
    apic_11 { pt3dadd( -126.93, 184.05, -9.23862, 0.12 ) }
    apic_11 { pt3dadd( -129.326, 186.941, -9.21859, 0.12 ) }
    apic_11 { pt3dadd( -130.868, 188.683, -9.30295, 0.12 ) }
    apic_11 { pt3dadd( -131.853, 189.74, -9.40118, 0.12 ) }
    apic_11 { pt3dadd( -133.221, 191.211, -9.57581, 0.12 ) }
    apic_11 { pt3dadd( -134.037, 192.165, -9.67054, 0.12 ) }
    apic_11 { pt3dadd( -134.84, 193.315, -9.77302, 0.12 ) }
    apic_11 { pt3dadd( -136.352, 195.913, -9.99421, 0.12 ) }
    apic_11 { pt3dadd( -137.201, 197.607, -10.0838, 0.12 ) }
    apic_11 { pt3dadd( -138.121, 199.832, -10.1068, 0.12 ) }
    apic_11 { pt3dadd( -138.832, 201.931, -10.0336, 0.12 ) }
    apic_11 { pt3dadd( -139.502, 204.542, -9.90941, 0.12 ) }
    apic_11 { pt3dadd( -139.79, 205.96, -9.85167, 0.12 ) }
    apic_11 { pt3dadd( -140.074, 207.555, -9.81042, 0.12 ) }
    apic_11 { pt3dadd( -140.473, 209.676, -9.82495, 0.12 ) }
    apic_11 { pt3dadd( -140.803, 211.455, -9.87238, 0.12 ) }
    apic_11 { pt3dadd( -141.291, 214.278, -9.94434, 0.12 ) }
    apic_11 { pt3dadd( -141.61, 215.942, -9.96232, 0.12 ) }
    apic_11 { pt3dadd( -142.007, 218.111, -9.95453, 0.12 ) }
    apic_11 { pt3dadd( -142.311, 219.891, -10.0102, 0.12 ) }
    apic_11 { pt3dadd( -142.806, 222.619, -10.1268, 0.12 ) }
    apic_11 { pt3dadd( -143.27, 225.377, -10.2103, 0.12 ) }
    apic_11 { pt3dadd( -143.547, 227.361, -10.1704, 0.12 ) }
    apic_11 { pt3dadd( -143.713, 228.945, -10.101, 0.12 ) }
    apic_11 { pt3dadd( -143.938, 231.777, -9.9869, 0.12 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 47/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 57.6305, -111.169, 51.8805, 0.36 ) }
    dend_32 { pt3dadd( 58.2382, -111.816, 52.076, 0.36 ) }
    dend_32 { pt3dadd( 58.6779, -112.314, 52.2165, 0.36 ) }
    dend_32 { pt3dadd( 59.3154, -112.948, 52.054, 0.36 ) }
    dend_32 { pt3dadd( 59.9958, -113.521, 51.7225, 0.36 ) }
    dend_32 { pt3dadd( 60.551, -113.989, 51.4519, 0.36 ) }
    dend_32 { pt3dadd( 61.2352, -114.566, 51.1185, 0.36 ) }
    dend_32 { pt3dadd( 61.6442, -114.903, 50.8387, 0.36 ) }
    dend_32 { pt3dadd( 64.0924, -116.875, 48.66, 0.36 ) }
    dend_32 { pt3dadd( 64.4991, -117.154, 48.1905, 0.36 ) }
    dend_32 { pt3dadd( 69.1146, -122.247, 46.6584, 0.36 ) }
    dend_32 { pt3dadd( 74.5419, -126.636, 45.7221, 0.36 ) }
    dend_32 { pt3dadd( 80.3878, -130.246, 44.1793, 0.36 ) }
    dend_32 { pt3dadd( 86.8573, -133.006, 43.8319, 0.36 ) }
    dend_32 { pt3dadd( 93.6607, -134.762, 44.3014, 0.36 ) }
    dend_32 { pt3dadd( 100.597, -135.957, 44.5198, 0.36 ) }
    dend_32 { pt3dadd( 107.598, -136.555, 44.0475, 0.36 ) }
    dend_32 { pt3dadd( 114.381, -138.023, 42.856, 0.36 ) }
    dend_32 { pt3dadd( 120.92, -139.772, 40.9126, 0.36 ) }
    dend_32 { pt3dadd( 126.966, -142.711, 38.814, 0.36 ) }
    dend_32 { pt3dadd( 133.713, -144.029, 37.2865, 0.36 ) }
    dend_32 { pt3dadd( 140.4, -144.766, 35.206, 0.36 ) }
    dend_32 { pt3dadd( 146.747, -145.43, 32.2292, 0.36 ) }
    dend_32 { pt3dadd( 153.378, -147.006, 30.4555, 0.36 ) }
    dend_32 { pt3dadd( 159.992, -149.42, 30.3704, 0.36 ) }
    dend_32 { pt3dadd( 166.226, -152.634, 29.7342, 0.36 ) }
    dend_32 { pt3dadd( 172.803, -155.06, 30.4069, 0.36 ) }
    dend_32 { pt3dadd( 179.587, -156.861, 29.8449, 0.36 ) }
    dend_32 { pt3dadd( 185.835, -159.764, 28.3833, 0.36 ) }
    dend_32 { pt3dadd( 192.376, -161.883, 26.8644, 0.36 ) }
    dend_32 { pt3dadd( 198.624, -165.119, 26.5638, 0.36 ) }
    dend_32 { pt3dadd( 204.612, -168.562, 27.9372, 0.36 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 57.6305, -111.169, 51.8805, 0.36 ) }
    dend_31 { pt3dadd( 55.4527, -111.795, 52.9433, 0.36 ) }
    dend_31 { pt3dadd( 44.8798, -112.149, 58.6648, 0.36 ) }
    dend_31 { pt3dadd( 33.7939, -112.399, 63.3218, 0.36 ) }
    dend_31 { pt3dadd( 23.3062, -112.473, 69.2084, 0.36 ) }
    dend_31 { pt3dadd( 13.0564, -114.756, 75.0712, 0.36 ) }
    dend_31 { pt3dadd( 3.78541, -115.087, 82.7256, 0.36 ) }
    dend_31 { pt3dadd( -5.7375, -114.26, 90.0248, 0.36 ) }
    dend_31 { pt3dadd( -16.1828, -112.612, 95.7543, 0.36 ) }
    dend_31 { pt3dadd( -25.9486, -109.392, 101.992, 0.36 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 89/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -29.6059, 199.085, -23.3802, 0.84 ) }
    apic_16 { pt3dadd( -30.3525, 202.833, -23.5146, 0.84 ) }
    apic_16 { pt3dadd( -30.8237, 204.943, -23.6038, 0.84 ) }
    apic_16 { pt3dadd( -31.3449, 207.04, -23.687, 0.84 ) }
    apic_16 { pt3dadd( -31.9901, 209.529, -23.7571, 0.84 ) }
    apic_16 { pt3dadd( -32.4431, 211.611, -23.8409, 0.84 ) }
    apic_16 { pt3dadd( -32.7536, 213.115, -23.907, 0.84 ) }
    apic_16 { pt3dadd( -33.0815, 215.207, -23.9232, 0.84 ) }
    apic_16 { pt3dadd( -33.5257, 218.156, -23.9446, 0.84 ) }
    apic_16 { pt3dadd( -34.0621, 221.425, -23.9842, 0.84 ) }
    apic_16 { pt3dadd( -34.8222, 226.129, -24.0135, 0.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    apic_16 { pt3dadd( -35.1895, 228.677, -24.0388, 0.84 ) }
    apic_16 { pt3dadd( -35.8978, 234.496, -24.1655, 0.84 ) }
    apic_16 { pt3dadd( -36.1295, 236.835, -24.23, 0.84 ) }
    apic_16 { pt3dadd( -36.3206, 238.839, -24.2961, 0.84 ) }
    apic_16 { pt3dadd( -36.6018, 241.65, -24.3877, 0.84 ) }
    apic_16 { pt3dadd( -36.9925, 244.9, -24.4745, 0.84 ) }
    apic_16 { pt3dadd( -37.3336, 247.846, -24.5626, 0.84 ) }
    apic_16 { pt3dadd( -37.5711, 250.527, -24.7083, 0.84 ) }
    apic_16 { pt3dadd( -37.7554, 254.008, -24.9, 0.84 ) }
    apic_16 { pt3dadd( -37.8444, 256.125, -25.0012, 0.84 ) }
    apic_16 { pt3dadd( -37.9466, 257.794, -25.0714, 0.84 ) }
    apic_16 { pt3dadd( -38.1333, 260.483, -25.0721, 0.84 ) }
    apic_16 { pt3dadd( -38.2314, 264.044, -25.1102, 0.84 ) }
    apic_16 { pt3dadd( -38.2297, 264.162, -25.1154, 0.84 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 14/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -29.6059, 199.085, -23.3802, 0.84 ) }
    apic_15 { pt3dadd( -28.6208, 199.972, -22.1167, 0.24 ) }
    apic_15 { pt3dadd( -28.1402, 200.563, -21.18, 0.24 ) }
    apic_15 { pt3dadd( -27.6151, 201.367, -19.9738, 0.24 ) }
    apic_15 { pt3dadd( -27.2044, 202.05, -19.0232, 0.24 ) }
    apic_15 { pt3dadd( -26.3826, 203.6, -17.1264, 0.24 ) }
    apic_15 { pt3dadd( -25.72, 204.888, -15.6736, 0.24 ) }
    apic_15 { pt3dadd( -24.8639, 206.776, -13.7052, 0.24 ) }
    apic_15 { pt3dadd( -24.5251, 207.651, -12.8787, 0.24 ) }
    apic_15 { pt3dadd( -24.1088, 208.783, -11.9609, 0.24 ) }
    apic_15 { pt3dadd( -23.4662, 210.415, -10.8842, 0.24 ) }
    apic_15 { pt3dadd( -22.777, 212.091, -10.0446, 0.24 ) }
    apic_15 { pt3dadd( -21.8166, 214.656, -8.94652, 0.24 ) }
    apic_15 { pt3dadd( -21.37, 215.757, -8.51071, 0.24 ) }
    apic_15 { pt3dadd( -20.645, 217.44, -7.90943, 0.24 ) }
    apic_15 { pt3dadd( -19.8315, 219.277, -7.32975, 0.24 ) }
    apic_15 { pt3dadd( -18.7002, 221.798, -6.65105, 0.24 ) }
    apic_15 { pt3dadd( -17.923, 223.543, -6.26855, 0.24 ) }
    apic_15 { pt3dadd( -16.8631, 225.84, -5.70243, 0.24 ) }
    apic_15 { pt3dadd( -15.8102, 227.878, -5.06369, 0.24 ) }
    apic_15 { pt3dadd( -15.2634, 228.859, -4.64181, 0.24 ) }
    apic_15 { pt3dadd( -14.5906, 229.907, -4.12575, 0.24 ) }
    apic_15 { pt3dadd( -12.8918, 232.208, -2.919, 0.24 ) }
    apic_15 { pt3dadd( -11.4726, 234.059, -1.95439, 0.24 ) }
    apic_15 { pt3dadd( -9.95251, 236.092, -0.816007, 0.24 ) }
    apic_15 { pt3dadd( -8.95295, 237.366, -0.0383425, 0.24 ) }
    apic_15 { pt3dadd( -8.01972, 238.511, 0.629583, 0.24 ) }
    apic_15 { pt3dadd( -7.32073, 239.354, 1.06046, 0.24 ) }
    apic_15 { pt3dadd( -6.39735, 240.433, 1.50406, 0.24 ) }
    apic_15 { pt3dadd( -5.14122, 241.834, 1.85594, 0.24 ) }
    apic_15 { pt3dadd( -3.68486, 243.518, 2.14038, 0.24 ) }
    apic_15 { pt3dadd( -2.73976, 244.643, 2.2868, 0.24 ) }
    apic_15 { pt3dadd( -1.18229, 246.507, 2.5482, 0.24 ) }
    apic_15 { pt3dadd( 0.43347, 248.358, 2.79974, 0.24 ) }
    apic_15 { pt3dadd( 2.4036, 250.65, 3.05161, 0.24 ) }
    apic_15 { pt3dadd( 3.7974, 252.427, 3.11428, 0.24 ) }
    apic_15 { pt3dadd( 4.86012, 253.921, 3.08403, 0.24 ) }
    apic_15 { pt3dadd( 5.67204, 255.131, 2.97961, 0.24 ) }
    apic_15 { pt3dadd( 6.305, 256.232, 2.80233, 0.24 ) }
    apic_15 { pt3dadd( 7.19837, 258.23, 2.35785, 0.24 ) }
    apic_15 { pt3dadd( 8.16725, 260.565, 1.61141, 0.24 ) }
    apic_15 { pt3dadd( 8.85932, 262.296, 0.900082, 0.24 ) }
    apic_15 { pt3dadd( 9.53551, 264.21, 0.0556369, 0.24 ) }
    apic_15 { pt3dadd( 10.1035, 266.052, -0.835629, 0.24 ) }
    apic_15 { pt3dadd( 10.4335, 267.327, -1.53071, 0.24 ) }
    apic_15 { pt3dadd( 11.065, 269.968, -2.94981, 0.24 ) }
    apic_15 { pt3dadd( 11.4835, 272.11, -4.01604, 0.24 ) }
    apic_15 { pt3dadd( 11.8295, 273.999, -4.99528, 0.24 ) }
    apic_15 { pt3dadd( 12.0988, 275.648, -5.82233, 0.24 ) }
    apic_15 { pt3dadd( 12.6973, 279.562, -7.62459, 0.12 ) }
    apic_15 { pt3dadd( 13.112, 282.283, -8.75487, 0.12 ) }
    apic_15 { pt3dadd( 13.3187, 283.854, -9.34422, 0.12 ) }
    apic_15 { pt3dadd( 14.0694, 288.154, -10.9251, 0.12 ) }
    apic_15 { pt3dadd( 14.4006, 289.653, -11.4221, 0.12 ) }
    apic_15 { pt3dadd( 15.0685, 292.09, -12.006, 0.12 ) }
    apic_15 { pt3dadd( 15.6484, 293.834, -12.2845, 0.12 ) }
    apic_15 { pt3dadd( 15.9589, 294.654, -12.3831, 0.12 ) }
    apic_15 { pt3dadd( 16.8518, 296.822, -12.481, 0.12 ) }
    apic_15 { pt3dadd( 17.4008, 298.187, -12.4365, 0.12 ) }
    apic_15 { pt3dadd( 18.4381, 300.772, -12.2996, 0.12 ) }
    apic_15 { pt3dadd( 19.2485, 303.069, -12.2498, 0.12 ) }
    apic_15 { pt3dadd( 20.0041, 305.724, -12.2632, 0.12 ) }
    apic_15 { pt3dadd( 20.4307, 307.506, -12.3183, 0.12 ) }
    apic_15 { pt3dadd( 20.7832, 309.271, -12.4494, 0.12 ) }
    apic_15 { pt3dadd( 21.3725, 312.215, -12.8131, 0.12 ) }
    apic_15 { pt3dadd( 21.98, 315.244, -13.1545, 0.12 ) }
    apic_15 { pt3dadd( 22.4497, 317.341, -13.3157, 0.12 ) }
    apic_15 { pt3dadd( 23.2027, 320.017, -13.5121, 0.12 ) }
    apic_15 { pt3dadd( 23.9835, 322.116, -13.63, 0.12 ) }
    apic_15 { pt3dadd( 25.0416, 324.259, -13.6715, 0.12 ) }
    apic_15 { pt3dadd( 26.9663, 327.4, -13.3378, 0.12 ) }
    apic_15 { pt3dadd( 27.8749, 328.567, -13.0646, 0.12 ) }
    apic_15 { pt3dadd( 29.3772, 330.082, -12.4493, 0.12 ) }
    apic_15 { pt3dadd( 30.4488, 330.939, -11.8832, 0.12 ) }
    apic_15 { pt3dadd( 31.1676, 331.407, -11.4481, 0.12 ) }
    apic_15 { pt3dadd( 33.7216, 332.801, -9.75258, 0.12 ) }
    apic_15 { pt3dadd( 35.765, 333.877, -8.23406, 0.12 ) }
    apic_15 { pt3dadd( 37.7075, 335.009, -6.49483, 0.12 ) }
    apic_15 { pt3dadd( 38.8058, 335.706, -5.36235, 0.12 ) }
    apic_15 { pt3dadd( 39.5288, 336.188, -4.5972, 0.12 ) }
    apic_15 { pt3dadd( 40.8842, 337.136, -3.15616, 0.12 ) }
    apic_15 { pt3dadd( 43.1635, 338.75, -0.789222, 0.12 ) }
    apic_15 { pt3dadd( 43.7702, 339.204, -0.114225, 0.12 ) }
    apic_15 { pt3dadd( 44.3775, 339.672, 0.563451, 0.12 ) }
    apic_15 { pt3dadd( 45.5299, 340.544, 1.86812, 0.12 ) }
    apic_15 { pt3dadd( 46.1143, 340.986, 2.52571, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    apic_15 { pt3dadd( 47.3174, 341.873, 3.78813, 0.12 ) }
    apic_15 { pt3dadd( 48.3994, 342.552, 4.82354, 0.12 ) }
    apic_15 { pt3dadd( 50.1355, 343.633, 6.52308, 0.12 ) }
    apic_15 { pt3dadd( 50.7503, 344.015, 7.14991, 0.12 ) }
    apic_15 { pt3dadd( 51.6308, 344.55, 8.07858, 0.12 ) }
    apic_15 { pt3dadd( 52.6022, 345.135, 9.08414, 0.12 ) }
    apic_15 { pt3dadd( 53.9145, 345.905, 10.3924, 0.12 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 7/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -143.938, 231.777, -9.9869, 0.12 ) }
    apic_13 { pt3dadd( -145.333, 231.516, -10.6552, 0.12 ) }
    apic_13 { pt3dadd( -146.761, 231.249, -11.34, 0.12 ) }
    apic_13 { pt3dadd( -148.06, 231.006, -11.9628, 0.12 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 11/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -143.938, 231.777, -9.9869, 0.12 ) }
    apic_12 { pt3dadd( -144.242, 233.814, -9.65515, 0.12 ) }
    apic_12 { pt3dadd( -144.475, 235.38, -9.40795, 0.12 ) }
    apic_12 { pt3dadd( -144.925, 237.735, -9.09475, 0.12 ) }
    apic_12 { pt3dadd( -145.468, 240.354, -8.77376, 0.12 ) }
    apic_12 { pt3dadd( -145.865, 242.213, -8.55454, 0.12 ) }
    apic_12 { pt3dadd( -146.281, 243.872, -8.33068, 0.12 ) }
    apic_12 { pt3dadd( -147.223, 246.821, -7.97092, 0.12 ) }
    apic_12 { pt3dadd( -147.908, 248.742, -7.73861, 0.12 ) }
    apic_12 { pt3dadd( -148.568, 250.436, -7.53741, 0.12 ) }
    apic_12 { pt3dadd( -149.32, 252.214, -7.34394, 0.12 ) }
    apic_12 { pt3dadd( -150.17, 254.313, -7.10204, 0.12 ) }
    apic_12 { pt3dadd( -150.877, 256.289, -6.84556, 0.12 ) }
    apic_12 { pt3dadd( -151.497, 258.043, -6.61125, 0.12 ) }
    apic_12 { pt3dadd( -152.103, 259.95, -6.33683, 0.12 ) }
    apic_12 { pt3dadd( -152.732, 262.044, -6.0582, 0.12 ) }
    apic_12 { pt3dadd( -153.396, 264.7, -5.74399, 0.12 ) }
    apic_12 { pt3dadd( -153.809, 267.396, -5.48153, 0.12 ) }
    // Section: apic_26, id: apic_26, parent: apic_16 (entry count 29/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( -38.2297, 264.162, -25.1154, 0.84 ) }
    apic_26 { pt3dadd( -31.98, 266.505, -31.6364, 0.48 ) }
    apic_26 { pt3dadd( -30.6892, 266.919, -32.8827, 0.48 ) }
    apic_26 { pt3dadd( -29.7937, 267.181, -33.7124, 0.48 ) }
    apic_26 { pt3dadd( -29.6308, 267.232, -33.8575, 0.48 ) }
    apic_26 { pt3dadd( -28.8352, 267.498, -34.5517, 0.48 ) }
    apic_26 { pt3dadd( -28.6308, 267.568, -34.7213, 0.48 ) }
    apic_26 { pt3dadd( -25.9908, 268.436, -36.1479, 0.48 ) }
    apic_26 { pt3dadd( -25.8751, 268.476, -36.2103, 0.48 ) }
    apic_26 { pt3dadd( -24.3559, 269.027, -36.996, 0.48 ) }
    apic_26 { pt3dadd( -24.233, 269.077, -37.0557, 0.48 ) }
    apic_26 { pt3dadd( -23.5414, 269.362, -37.3477, 0.48 ) }
    apic_26 { pt3dadd( -23.4314, 269.405, -37.3768, 0.48 ) }
    apic_26 { pt3dadd( -22.3341, 269.716, -37.3894, 0.48 ) }
    apic_26 { pt3dadd( -21.5118, 269.846, -37.3554, 0.48 ) }
    apic_26 { pt3dadd( -21.4474, 269.849, -37.3504, 0.48 ) }
    apic_26 { pt3dadd( -20.0947, 269.903, -37.3147, 0.48 ) }
    apic_26 { pt3dadd( -19.7637, 269.913, -37.3259, 0.48 ) }
    apic_26 { pt3dadd( -18.6186, 269.959, -37.3493, 0.48 ) }
    apic_26 { pt3dadd( -17.8645, 269.991, -37.376, 0.48 ) }
    apic_26 { pt3dadd( -17.5651, 270.011, -37.3793, 0.48 ) }
    apic_26 { pt3dadd( -16.3226, 270.159, -37.3614, 0.48 ) }
    apic_26 { pt3dadd( -15.8446, 270.244, -37.3346, 0.48 ) }
    apic_26 { pt3dadd( -14.2014, 270.547, -37.1888, 0.48 ) }
    apic_26 { pt3dadd( -13.9341, 270.602, -37.1583, 0.48 ) }
    apic_26 { pt3dadd( -12.7522, 270.822, -37.0116, 0.48 ) }
    apic_26 { pt3dadd( -12.6985, 270.835, -36.9994, 0.48 ) }
    apic_26 { pt3dadd( -11.7161, 271.146, -36.6464, 0.48 ) }
    apic_26 { pt3dadd( -11.6553, 271.174, -36.6182, 0.48 ) }
    apic_26 { pt3dadd( -10.9204, 271.664, -36.2141, 0.48 ) }
    apic_26 { pt3dadd( -10.8646, 271.7, -36.1844, 0.48 ) }
    apic_26 { pt3dadd( -9.55946, 272.57, -35.5261, 0.48 ) }
    apic_26 { pt3dadd( -9.51367, 272.595, -35.5047, 0.48 ) }
    apic_26 { pt3dadd( -8.80697, 272.947, -35.1621, 0.48 ) }
    apic_26 { pt3dadd( -8.40932, 273.088, -34.9533, 0.48 ) }
    apic_26 { pt3dadd( -7.29161, 273.364, -34.4923, 0.48 ) }
    apic_26 { pt3dadd( -7.22374, 273.377, -34.4697, 0.48 ) }
    apic_26 { pt3dadd( -6.18909, 273.615, -34.3356, 0.48 ) }
    apic_26 { pt3dadd( -5.80975, 273.754, -34.3313, 0.48 ) }
    apic_26 { pt3dadd( -4.79291, 274.222, -34.3988, 0.48 ) }
    apic_26 { pt3dadd( -3.50721, 274.916, -34.7661, 0.48 ) }
    apic_26 { pt3dadd( -3.41635, 274.97, -34.805, 0.48 ) }
    apic_26 { pt3dadd( -1.75928, 275.992, -35.9783, 0.36 ) }
    apic_26 { pt3dadd( -0.809313, 276.542, -36.847, 0.36 ) }
    apic_26 { pt3dadd( -0.761143, 276.566, -36.8962, 0.36 ) }
    apic_26 { pt3dadd( 1.3533, 277.511, -39.197, 0.36 ) }
    apic_26 { pt3dadd( 1.41685, 277.538, -39.2672, 0.36 ) }
    apic_26 { pt3dadd( 4.76904, 278.848, -42.9985, 0.36 ) }
    apic_26 { pt3dadd( 7.83745, 279.881, -46.3732, 0.36 ) }
    apic_26 { pt3dadd( 11.0039, 280.857, -49.8112, 0.36 ) }
    apic_26 { pt3dadd( 11.0483, 280.87, -49.8564, 0.36 ) }
    apic_26 { pt3dadd( 11.9566, 281.131, -50.7039, 0.36 ) }
    apic_26 { pt3dadd( 12.7073, 281.345, -51.3448, 0.36 ) }
    apic_26 { pt3dadd( 15.8784, 282.284, -53.5998, 0.36 ) }
    apic_26 { pt3dadd( 16.3803, 282.463, -53.9043, 0.36 ) }
    apic_26 { pt3dadd( 18.6713, 283.417, -55.8049, 0.36 ) }
    apic_26 { pt3dadd( 20.1584, 284.046, -57.1862, 0.36 ) }
    apic_26 { pt3dadd( 20.5373, 284.207, -57.5254, 0.36 ) }
    apic_26 { pt3dadd( 21.8906, 284.79, -58.7126, 0.36 ) }
    apic_26 { pt3dadd( 22.0369, 284.852, -58.8372, 0.36 ) }
    apic_26 { pt3dadd( 33.2159, 289.306, -68.2084, 0.36 ) }
    apic_26 { pt3dadd( 33.365, 289.361, -68.3332, 0.36 ) }
    apic_26 { pt3dadd( 41.6996, 292.02, -75.1372, 0.36 ) }
    apic_26 { pt3dadd( 41.7762, 292.041, -75.1937, 0.36 ) }
    apic_26 { pt3dadd( 44.3063, 292.588, -77.0443, 0.36 ) }
    apic_26 { pt3dadd( 44.8288, 292.703, -77.389, 0.36 ) }
    apic_26 { pt3dadd( 46.4018, 293.08, -78.3445, 0.36 ) }
    apic_26 { pt3dadd( 46.624, 293.133, -78.4655, 0.36 ) }
    apic_26 { pt3dadd( 50.7235, 294.084, -80.6346, 0.36 ) }
    apic_26 { pt3dadd( 51.2472, 294.209, -80.9129, 0.36 ) }
    apic_26 { pt3dadd( 53.3234, 294.76, -82.0289, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    apic_26 { pt3dadd( 58.0719, 296.063, -84.5411, 0.36 ) }
    apic_26 { pt3dadd( 58.1553, 296.086, -84.5854, 0.36 ) }
    apic_26 { pt3dadd( 59.3023, 296.414, -85.168, 0.36 ) }
    apic_26 { pt3dadd( 59.6069, 296.507, -85.3069, 0.36 ) }
    apic_26 { pt3dadd( 62.0402, 297.229, -86.4093, 0.36 ) }
    apic_26 { pt3dadd( 62.1245, 297.252, -86.4523, 0.36 ) }
    // Section: apic_17, id: apic_17, parent: apic_16 (entry count 6/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( -38.2297, 264.162, -25.1154, 0.84 ) }
    apic_17 { pt3dadd( -38.6826, 266.471, -25.4225, 0.84 ) }
    apic_17 { pt3dadd( -39.0492, 268.864, -25.6793, 0.84 ) }
    apic_17 { pt3dadd( -39.5242, 272.382, -25.9991, 0.84 ) }
    apic_17 { pt3dadd( -39.8237, 274.657, -26.1571, 0.84 ) }
    apic_17 { pt3dadd( -40.2773, 277.666, -26.3572, 0.84 ) }
    apic_17 { pt3dadd( -40.6032, 279.761, -26.5579, 0.84 ) }
    apic_17 { pt3dadd( -40.9255, 282.137, -26.8668, 0.84 ) }
    apic_17 { pt3dadd( -41.0687, 283.117, -26.9973, 0.84 ) }
    apic_17 { pt3dadd( -41.4523, 285.385, -27.3466, 0.84 ) }
    apic_17 { pt3dadd( -42.0163, 288.657, -27.9299, 0.84 ) }
    apic_17 { pt3dadd( -42.5947, 291.646, -28.5258, 0.84 ) }
    apic_17 { pt3dadd( -43.1534, 294.211, -29.0479, 0.84 ) }
    apic_17 { pt3dadd( -43.7091, 296.97, -29.6295, 0.84 ) }
    apic_17 { pt3dadd( -44.0611, 299.663, -30.2459, 0.84 ) }
    apic_17 { pt3dadd( -44.1791, 301.546, -30.6712, 0.84 ) }
    apic_17 { pt3dadd( -44.2255, 303.109, -30.9667, 0.84 ) }
    apic_17 { pt3dadd( -44.2378, 305.659, -31.3657, 0.84 ) }
    apic_17 { pt3dadd( -44.1671, 308.529, -31.8245, 0.84 ) }
    apic_17 { pt3dadd( -43.9893, 311.455, -32.3363, 0.84 ) }
    apic_17 { pt3dadd( -43.7532, 314.845, -32.8754, 0.84 ) }
    apic_17 { pt3dadd( -43.4961, 318.728, -33.4464, 0.84 ) }
    apic_17 { pt3dadd( -43.3556, 322.526, -33.9888, 0.84 ) }
    apic_17 { pt3dadd( -43.3862, 325.416, -34.4091, 0.84 ) }
    apic_17 { pt3dadd( -43.4863, 328.028, -34.7433, 0.84 ) }
    apic_17 { pt3dadd( -43.5186, 329.345, -34.9053, 0.84 ) }
    apic_17 { pt3dadd( -43.4966, 331.66, -35.2284, 0.84 ) }
    apic_17 { pt3dadd( -43.4467, 333.909, -35.5641, 0.84 ) }
    apic_17 { pt3dadd( -43.4572, 334.431, -35.6456, 0.84 ) }
    apic_17 { pt3dadd( -43.5056, 337.01, -36.0433, 0.84 ) }
    apic_17 { pt3dadd( -43.4844, 339.983, -36.461, 0.84 ) }
    apic_17 { pt3dadd( -43.4045, 343.374, -36.8549, 0.84 ) }
    apic_17 { pt3dadd( -43.3458, 345.851, -37.0805, 0.84 ) }
    apic_17 { pt3dadd( -43.3331, 349.424, -37.2153, 0.84 ) }
    apic_17 { pt3dadd( -43.381, 352.544, -37.149, 0.84 ) }
    apic_17 { pt3dadd( -43.484, 355.125, -36.9423, 0.84 ) }
    apic_17 { pt3dadd( -43.6119, 357.812, -36.6366, 0.84 ) }
    apic_17 { pt3dadd( -43.7216, 360.11, -36.3522, 0.84 ) }
    apic_17 { pt3dadd( -43.8264, 362.8, -36.059, 0.84 ) }
    apic_17 { pt3dadd( -43.9164, 365.086, -35.8805, 0.84 ) }
    apic_17 { pt3dadd( -43.9752, 366.028, -35.9004, 0.84 ) }
    apic_17 { pt3dadd( -44.1706, 368.958, -36.3241, 0.84 ) }
    apic_17 { pt3dadd( -44.3866, 371.478, -36.9245, 0.84 ) }
    apic_17 { pt3dadd( -44.6106, 373.25, -37.4697, 0.84 ) }
    apic_17 { pt3dadd( -44.8414, 374.717, -37.9616, 0.84 ) }
    apic_17 { pt3dadd( -45.3778, 377.475, -38.7996, 0.84 ) }
    apic_17 { pt3dadd( -45.6301, 378.643, -39.0785, 0.84 ) }
    apic_17 { pt3dadd( -46.1083, 380.616, -39.382, 0.84 ) }
    apic_17 { pt3dadd( -46.462, 381.997, -39.5089, 0.84 ) }
    apic_17 { pt3dadd( -47.1708, 384.378, -39.5754, 0.84 ) }
    apic_17 { pt3dadd( -47.5871, 385.657, -39.5632, 0.84 ) }
    apic_17 { pt3dadd( -48.1483, 387.284, -39.4868, 0.84 ) }
    apic_17 { pt3dadd( -48.7258, 389.077, -39.395, 0.84 ) }
    apic_17 { pt3dadd( -49.1438, 390.569, -39.3573, 0.84 ) }
    apic_17 { pt3dadd( -49.7062, 392.459, -39.363, 0.84 ) }
    apic_17 { pt3dadd( -50.1818, 393.697, -39.4217, 0.84 ) }
    // Section: apic_19, id: apic_19, parent: apic_17 (entry count 62/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( -50.1818, 393.697, -39.4217, 0.84 ) }
    apic_19 { pt3dadd( -50.2615, 396.897, -39.9322, 0.84 ) }
    apic_19 { pt3dadd( -50.2681, 399.998, -40.3725, 0.84 ) }
    apic_19 { pt3dadd( -50.2672, 401.611, -40.5652, 0.84 ) }
    apic_19 { pt3dadd( -50.2579, 404.951, -41.0228, 0.84 ) }
    apic_19 { pt3dadd( -50.2566, 407.82, -41.4388, 0.84 ) }
    apic_19 { pt3dadd( -50.249, 411.031, -41.8774, 0.84 ) }
    apic_19 { pt3dadd( -50.2529, 413.685, -42.2184, 0.84 ) }
    apic_19 { pt3dadd( -50.2409, 415.631, -42.4555, 0.84 ) }
    apic_19 { pt3dadd( -50.1448, 418.373, -42.6468, 0.84 ) }
    apic_19 { pt3dadd( -50.1216, 418.994, -42.6554, 0.84 ) }
    apic_19 { pt3dadd( -50.1389, 421.041, -42.5995, 0.84 ) }
    apic_19 { pt3dadd( -50.2374, 423.061, -42.5022, 0.84 ) }
    apic_19 { pt3dadd( -50.368, 425.626, -42.3926, 0.72 ) }
    apic_19 { pt3dadd( -50.555, 428.824, -42.1807, 0.72 ) }
    apic_19 { pt3dadd( -50.7369, 431.538, -41.9928, 0.72 ) }
    apic_19 { pt3dadd( -50.8921, 433.666, -41.9085, 0.72 ) }
    apic_19 { pt3dadd( -51.0596, 435.881, -41.8784, 0.72 ) }
    apic_19 { pt3dadd( -51.2423, 438.178, -41.8906, 0.72 ) }
    apic_19 { pt3dadd( -51.4112, 440.034, -41.9464, 0.72 ) }
    apic_19 { pt3dadd( -51.6838, 442.316, -42.0898, 0.72 ) }
    apic_19 { pt3dadd( -51.9081, 444.058, -42.1713, 0.72 ) }
    apic_19 { pt3dadd( -52.1941, 445.692, -42.1242, 0.72 ) }
    apic_19 { pt3dadd( -52.4666, 447.179, -42.0632, 0.72 ) }
    apic_19 { pt3dadd( -52.8588, 448.846, -42.0515, 0.72 ) }
    apic_19 { pt3dadd( -53.4466, 450.982, -42.0895, 0.72 ) }
    apic_19 { pt3dadd( -54.2246, 453.644, -42.1484, 0.72 ) }
    apic_19 { pt3dadd( -55.0742, 457.238, -42.3347, 0.72 ) }
    apic_19 { pt3dadd( -55.5488, 460.371, -42.5933, 0.72 ) }
    apic_19 { pt3dadd( -55.6443, 463.171, -42.8588, 0.72 ) }
    apic_19 { pt3dadd( -55.4879, 464.784, -43.007, 0.72 ) }
    apic_19 { pt3dadd( -55.1933, 466.22, -43.1646, 0.72 ) }
    apic_19 { pt3dadd( -54.2632, 469.494, -43.6336, 0.6 ) }
    apic_19 { pt3dadd( -53.6823, 471.225, -43.8474, 0.6 ) }
    apic_19 { pt3dadd( -53.4045, 472.403, -43.8345, 0.6 ) }
    apic_19 { pt3dadd( -53.1874, 473.858, -43.7328, 0.6 ) }
    apic_19 { pt3dadd( -53.1343, 475.321, -43.6198, 0.6 ) }
    apic_19 { pt3dadd( -53.2907, 476.932, -43.529, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    apic_19 { pt3dadd( -53.5264, 478.124, -43.4982, 0.6 ) }
    apic_19 { pt3dadd( -54.8009, 482.586, -43.2498, 0.6 ) }
    apic_19 { pt3dadd( -55.7022, 485.292, -43.082, 0.6 ) }
    apic_19 { pt3dadd( -56.2332, 486.752, -42.989, 0.6 ) }
    apic_19 { pt3dadd( -57.1005, 489.091, -42.8083, 0.6 ) }
    apic_19 { pt3dadd( -57.6816, 490.643, -42.6632, 0.6 ) }
    apic_19 { pt3dadd( -59.2789, 494.979, -42.1591, 0.6 ) }
    apic_19 { pt3dadd( -60.3045, 497.828, -41.7563, 0.6 ) }
    apic_19 { pt3dadd( -61.2862, 500.62, -41.3336, 0.6 ) }
    apic_19 { pt3dadd( -62.1, 503.01, -40.9618, 0.6 ) }
    apic_19 { pt3dadd( -63.0414, 505.824, -40.4664, 0.6 ) }
    apic_19 { pt3dadd( -63.6641, 507.714, -40.1445, 0.6 ) }
    apic_19 { pt3dadd( -64.1776, 509.276, -39.9513, 0.6 ) }
    apic_19 { pt3dadd( -64.7961, 510.958, -39.726, 0.6 ) }
    apic_19 { pt3dadd( -65.293, 512.272, -39.5448, 0.6 ) }
    apic_19 { pt3dadd( -66.4938, 515.254, -39.2107, 0.6 ) }
    apic_19 { pt3dadd( -67.3081, 517.204, -39.0508, 0.6 ) }
    apic_19 { pt3dadd( -68.5077, 520.141, -38.8425, 0.6 ) }
    apic_19 { pt3dadd( -69.3849, 522.379, -38.6898, 0.6 ) }
    apic_19 { pt3dadd( -70.1862, 524.505, -38.5647, 0.6 ) }
    apic_19 { pt3dadd( -71.0387, 526.775, -38.4964, 0.6 ) }
    apic_19 { pt3dadd( -71.6751, 528.709, -38.5403, 0.6 ) }
    apic_19 { pt3dadd( -72.3869, 531.178, -38.6499, 0.6 ) }
    apic_19 { pt3dadd( -72.7281, 532.542, -38.7527, 0.6 ) }
    apic_19 { pt3dadd( -73.2082, 534.493, -38.9903, 0.6 ) }
    apic_19 { pt3dadd( -73.603, 536.178, -39.2602, 0.6 ) }
    apic_19 { pt3dadd( -74.2675, 539.985, -39.8529, 0.6 ) }
    apic_19 { pt3dadd( -74.4684, 541.495, -40.0868, 0.6 ) }
    apic_19 { pt3dadd( -74.6166, 542.919, -40.2984, 0.6 ) }
    apic_19 { pt3dadd( -74.717, 544.192, -40.4289, 0.6 ) }
    apic_19 { pt3dadd( -74.8265, 545.86, -40.5096, 0.6 ) }
    apic_19 { pt3dadd( -74.9765, 548.187, -40.5649, 0.6 ) }
    apic_19 { pt3dadd( -75.1116, 550.026, -40.5914, 0.6 ) }
    apic_19 { pt3dadd( -75.2502, 551.833, -40.6165, 0.6 ) }
    apic_19 { pt3dadd( -75.4469, 554.834, -40.6092, 0.6 ) }
    apic_19 { pt3dadd( -75.5814, 557.375, -40.6753, 0.6 ) }
    apic_19 { pt3dadd( -75.7548, 561.575, -40.9077, 0.6 ) }
    apic_19 { pt3dadd( -75.7867, 564.927, -41.0907, 0.6 ) }
    apic_19 { pt3dadd( -75.7259, 568.02, -41.2284, 0.6 ) }
    apic_19 { pt3dadd( -75.6305, 571.253, -41.3511, 0.6 ) }
    apic_19 { pt3dadd( -75.5225, 575.451, -41.4725, 0.6 ) }
    apic_19 { pt3dadd( -75.4424, 578.244, -41.5236, 0.6 ) }
    apic_19 { pt3dadd( -75.2744, 583.626, -41.4712, 0.48 ) }
    apic_19 { pt3dadd( -75.2016, 585.578, -41.4214, 0.48 ) }
    apic_19 { pt3dadd( -75.1002, 588.852, -41.3235, 0.48 ) }
    apic_19 { pt3dadd( -75.0963, 592.484, -41.1959, 0.48 ) }
    apic_19 { pt3dadd( -75.1392, 595.475, -41.099, 0.48 ) }
    apic_19 { pt3dadd( -75.1946, 597.71, -41.0773, 0.48 ) }
    apic_19 { pt3dadd( -75.262, 599.61, -41.1174, 0.48 ) }
    apic_19 { pt3dadd( -75.3483, 602.022, -41.2051, 0.48 ) }
    apic_19 { pt3dadd( -75.4235, 604.29, -41.2907, 0.48 ) }
    apic_19 { pt3dadd( -75.6377, 608.925, -41.4409, 0.48 ) }
    apic_19 { pt3dadd( -75.9845, 613.645, -41.548, 0.48 ) }
    apic_19 { pt3dadd( -76.0779, 615.144, -41.601, 0.36 ) }
    apic_19 { pt3dadd( -76.1626, 617.278, -41.6527, 0.36 ) }
    apic_19 { pt3dadd( -76.1681, 618.959, -41.6632, 0.36 ) }
    apic_19 { pt3dadd( -76.1376, 621.366, -41.6383, 0.36 ) }
    apic_19 { pt3dadd( -76.1235, 623.492, -41.5582, 0.36 ) }
    apic_19 { pt3dadd( -76.0498, 625.837, -41.5023, 0.36 ) }
    apic_19 { pt3dadd( -75.9659, 627.324, -41.4634, 0.36 ) }
    apic_19 { pt3dadd( -75.8022, 629.637, -41.4974, 0.36 ) }
    apic_19 { pt3dadd( -75.7321, 632.198, -41.542, 0.36 ) }
    apic_19 { pt3dadd( -75.719, 635.234, -41.617, 0.36 ) }
    apic_19 { pt3dadd( -75.8296, 637.661, -41.6308, 0.36 ) }
    apic_19 { pt3dadd( -76.1645, 640.651, -41.6218, 0.36 ) }
    apic_19 { pt3dadd( -76.7022, 644.575, -41.6316, 0.36 ) }
    apic_19 { pt3dadd( -77.294, 648.692, -41.681, 0.36 ) }
    apic_19 { pt3dadd( -77.763, 651.524, -41.6608, 0.36 ) }
    apic_19 { pt3dadd( -78.3187, 654.396, -41.5418, 0.36 ) }
    apic_19 { pt3dadd( -78.7379, 656.596, -41.3743, 0.36 ) }
    apic_19 { pt3dadd( -79.3014, 659.194, -41.0067, 0.36 ) }
    apic_19 { pt3dadd( -79.8707, 661.601, -40.5341, 0.36 ) }
    apic_19 { pt3dadd( -80.4404, 664.089, -40.0359, 0.36 ) }
    apic_19 { pt3dadd( -81.0008, 666.456, -39.5257, 0.36 ) }
    apic_19 { pt3dadd( -81.619, 669.461, -39.0088, 0.36 ) }
    apic_19 { pt3dadd( -82.1919, 672.433, -38.5227, 0.36 ) }
    apic_19 { pt3dadd( -82.5996, 674.81, -38.1933, 0.36 ) }
    apic_19 { pt3dadd( -83.0768, 678.23, -37.842, 0.36 ) }
    apic_19 { pt3dadd( -83.5645, 682.577, -37.6528, 0.36 ) }
    apic_19 { pt3dadd( -83.9504, 686.529, -37.6198, 0.36 ) }
    apic_19 { pt3dadd( -84.1559, 689.182, -37.6649, 0.36 ) }
    apic_19 { pt3dadd( -84.2218, 692.348, -37.7768, 0.36 ) }
    apic_19 { pt3dadd( -84.1808, 694.95, -37.8725, 0.36 ) }
    apic_19 { pt3dadd( -84.0618, 698.524, -38.0302, 0.36 ) }
    apic_19 { pt3dadd( -83.9757, 700.636, -38.0998, 0.36 ) }
    apic_19 { pt3dadd( -83.8662, 703.19, -38.148, 0.36 ) }
    apic_19 { pt3dadd( -83.7704, 705.538, -38.2298, 0.36 ) }
    apic_19 { pt3dadd( -83.7511, 706.437, -38.2974, 0.36 ) }
    apic_19 { pt3dadd( -83.5748, 708.569, -38.4515, 0.36 ) }
    apic_19 { pt3dadd( -83.3957, 709.984, -38.5619, 0.36 ) }
    apic_19 { pt3dadd( -83.1425, 712.273, -38.7708, 0.36 ) }
    apic_19 { pt3dadd( -82.9825, 714.208, -38.9418, 0.36 ) }
    apic_19 { pt3dadd( -82.6313, 718.092, -39.2334, 0.36 ) }
    apic_19 { pt3dadd( -82.289, 721.76, -39.4259, 0.36 ) }
    apic_19 { pt3dadd( -82.0833, 724.048, -39.5032, 0.36 ) }
    apic_19 { pt3dadd( -81.8803, 726.773, -39.5312, 0.36 ) }
    apic_19 { pt3dadd( -81.713, 729.314, -39.4845, 0.36 ) }
    apic_19 { pt3dadd( -81.5587, 732.151, -39.3599, 0.36 ) }
    apic_19 { pt3dadd( -81.487, 734.731, -39.1988, 0.36 ) }
    apic_19 { pt3dadd( -81.4982, 737.379, -39.0837, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    apic_19 { pt3dadd( -81.5355, 739.953, -38.9679, 0.36 ) }
    apic_19 { pt3dadd( -81.6107, 742.946, -38.8352, 0.36 ) }
    apic_19 { pt3dadd( -81.7177, 744.885, -38.7576, 0.36 ) }
    apic_19 { pt3dadd( -81.8875, 747.031, -38.6508, 0.36 ) }
    apic_19 { pt3dadd( -82.0468, 749.197, -38.4994, 0.36 ) }
    apic_19 { pt3dadd( -82.3723, 752.368, -38.1779, 0.36 ) }
    apic_19 { pt3dadd( -82.6527, 755.054, -37.9796, 0.36 ) }
    apic_19 { pt3dadd( -82.9183, 757.23, -37.906, 0.36 ) }
    apic_19 { pt3dadd( -83.1439, 759.177, -37.9185, 0.36 ) }
    apic_19 { pt3dadd( -83.2815, 761.013, -38.0554, 0.36 ) }
    apic_19 { pt3dadd( -83.4586, 763.739, -38.462, 0.36 ) }
    apic_19 { pt3dadd( -83.6427, 767.819, -39.2597, 0.36 ) }
    apic_19 { pt3dadd( -83.7083, 769.41, -39.6205, 0.36 ) }
    apic_19 { pt3dadd( -83.771, 771.237, -40.0491, 0.36 ) }
    apic_19 { pt3dadd( -83.7914, 774.49, -40.8685, 0.36 ) }
    apic_19 { pt3dadd( -83.6931, 777.921, -41.7254, 0.36 ) }
    apic_19 { pt3dadd( -83.5521, 780.86, -42.4125, 0.36 ) }
    apic_19 { pt3dadd( -83.4049, 783.771, -42.9612, 0.36 ) }
    apic_19 { pt3dadd( -83.2304, 786.526, -43.4205, 0.36 ) }
    apic_19 { pt3dadd( -83.024, 789.458, -43.9265, 0.36 ) }
    apic_19 { pt3dadd( -82.9339, 791.243, -44.2371, 0.36 ) }
    apic_19 { pt3dadd( -82.8993, 796.823, -45.2683, 0.36 ) }
    apic_19 { pt3dadd( -82.895, 799.679, -45.8212, 0.36 ) }
    apic_19 { pt3dadd( -82.9386, 802.488, -46.3736, 0.36 ) }
    apic_19 { pt3dadd( -83.1759, 807.255, -47.3178, 0.36 ) }
    apic_19 { pt3dadd( -83.4522, 809.887, -47.8139, 0.36 ) }
    apic_19 { pt3dadd( -84.1561, 814.886, -48.7887, 0.36 ) }
    // Section: apic_18, id: apic_18, parent: apic_17 (entry count 27/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( -50.1818, 393.697, -39.4217, 0.84 ) }
    apic_18 { pt3dadd( -52.9066, 396.183, -41.3626, 0.48 ) }
    apic_18 { pt3dadd( -54.1268, 397.042, -42.1914, 0.48 ) }
    apic_18 { pt3dadd( -55.2174, 397.713, -43.0029, 0.48 ) }
    apic_18 { pt3dadd( -55.9198, 398.096, -43.5302, 0.48 ) }
    apic_18 { pt3dadd( -56.8567, 398.519, -44.2011, 0.48 ) }
    apic_18 { pt3dadd( -58.2342, 399.113, -45.1572, 0.48 ) }
    apic_18 { pt3dadd( -59.1286, 399.424, -45.6886, 0.48 ) }
    apic_18 { pt3dadd( -60.7808, 399.963, -46.6776, 0.48 ) }
    apic_18 { pt3dadd( -61.7844, 400.347, -47.2598, 0.48 ) }
    apic_18 { pt3dadd( -63.6431, 401.255, -48.2475, 0.48 ) }
    apic_18 { pt3dadd( -64.5234, 401.767, -48.7119, 0.48 ) }
    apic_18 { pt3dadd( -66.0575, 402.725, -49.4929, 0.48 ) }
    apic_18 { pt3dadd( -67.3323, 403.565, -50.1683, 0.48 ) }
    apic_18 { pt3dadd( -68.8854, 404.684, -51.0103, 0.48 ) }
    apic_18 { pt3dadd( -70.0776, 405.654, -51.7522, 0.48 ) }
    apic_18 { pt3dadd( -71.3451, 406.752, -52.646, 0.48 ) }
    apic_18 { pt3dadd( -72.8474, 408.056, -53.8229, 0.48 ) }
    apic_18 { pt3dadd( -74.7823, 409.769, -55.4903, 0.48 ) }
    apic_18 { pt3dadd( -76.0343, 410.843, -56.6168, 0.48 ) }
    apic_18 { pt3dadd( -77.0881, 411.697, -57.5957, 0.48 ) }
    apic_18 { pt3dadd( -77.8909, 412.363, -58.3185, 0.48 ) }
    apic_18 { pt3dadd( -78.8776, 413.171, -59.0312, 0.48 ) }
    apic_18 { pt3dadd( -79.8275, 413.883, -59.5562, 0.48 ) }
    apic_18 { pt3dadd( -81.2148, 414.688, -60.0652, 0.36 ) }
    apic_18 { pt3dadd( -82.0356, 415.044, -60.2778, 0.36 ) }
    apic_18 { pt3dadd( -84.1082, 415.752, -60.5705, 0.36 ) }
    apic_18 { pt3dadd( -86.8761, 416.568, -60.7733, 0.36 ) }
    apic_18 { pt3dadd( -88.4498, 416.976, -60.8903, 0.36 ) }
    apic_18 { pt3dadd( -89.9738, 417.296, -60.9924, 0.36 ) }
    apic_18 { pt3dadd( -91.4928, 417.573, -61.1106, 0.36 ) }
    apic_18 { pt3dadd( -93.5431, 417.899, -61.2736, 0.36 ) }
    apic_18 { pt3dadd( -94.4918, 418.051, -61.3429, 0.36 ) }
    apic_18 { pt3dadd( -96.9131, 418.525, -61.496, 0.36 ) }
    apic_18 { pt3dadd( -99.2887, 419.061, -61.6191, 0.36 ) }
    apic_18 { pt3dadd( -101.253, 419.527, -61.738, 0.36 ) }
    apic_18 { pt3dadd( -103.056, 419.962, -61.7964, 0.36 ) }
    apic_18 { pt3dadd( -105.346, 420.499, -61.7464, 0.36 ) }
    apic_18 { pt3dadd( -106.905, 420.855, -61.5699, 0.36 ) }
    apic_18 { pt3dadd( -108.329, 421.157, -61.3336, 0.36 ) }
    apic_18 { pt3dadd( -110.203, 421.546, -61.0858, 0.36 ) }
    apic_18 { pt3dadd( -112.043, 421.882, -60.8777, 0.36 ) }
    apic_18 { pt3dadd( -113.714, 422.199, -60.5993, 0.36 ) }
    apic_18 { pt3dadd( -114.941, 422.496, -60.299, 0.36 ) }
    apic_18 { pt3dadd( -116.997, 423.191, -59.5548, 0.36 ) }
    apic_18 { pt3dadd( -118.327, 423.775, -58.8973, 0.36 ) }
    apic_18 { pt3dadd( -119.538, 424.38, -58.2111, 0.36 ) }
    apic_18 { pt3dadd( -122.35, 425.84, -56.6229, 0.36 ) }
    apic_18 { pt3dadd( -123.48, 426.461, -55.9707, 0.36 ) }
    apic_18 { pt3dadd( -124.702, 427.23, -55.2335, 0.36 ) }
    apic_18 { pt3dadd( -126.25, 428.328, -54.2377, 0.36 ) }
    apic_18 { pt3dadd( -127.559, 429.288, -53.5271, 0.36 ) }
    apic_18 { pt3dadd( -128.069, 429.622, -53.3671, 0.36 ) }
    apic_18 { pt3dadd( -128.82, 430.038, -53.3184, 0.36 ) }
    apic_18 { pt3dadd( -131.361, 431.294, -53.5047, 0.36 ) }
    apic_18 { pt3dadd( -132.215, 431.705, -53.6134, 0.36 ) }
    apic_18 { pt3dadd( -134.325, 432.722, -53.9715, 0.36 ) }
    apic_18 { pt3dadd( -136.585, 433.778, -54.4036, 0.36 ) }
    apic_18 { pt3dadd( -137.776, 434.325, -54.634, 0.36 ) }
    apic_18 { pt3dadd( -139.685, 435.177, -55.0149, 0.36 ) }
    apic_18 { pt3dadd( -141.822, 436.13, -55.5016, 0.36 ) }
    apic_18 { pt3dadd( -143.584, 436.974, -55.8881, 0.36 ) }
    apic_18 { pt3dadd( -145.159, 437.823, -56.1995, 0.36 ) }
    apic_18 { pt3dadd( -146.394, 438.563, -56.3732, 0.36 ) }
    apic_18 { pt3dadd( -147.498, 439.221, -56.4761, 0.36 ) }
    apic_18 { pt3dadd( -149.359, 440.221, -56.5791, 0.36 ) }
    apic_18 { pt3dadd( -151.199, 441.102, -56.6609, 0.36 ) }
    apic_18 { pt3dadd( -152.383, 441.566, -56.6114, 0.36 ) }
    apic_18 { pt3dadd( -154.633, 442.241, -56.4068, 0.36 ) }
    apic_18 { pt3dadd( -156.18, 442.598, -56.2285, 0.36 ) }
    apic_18 { pt3dadd( -158.133, 443.021, -55.9362, 0.36 ) }
    apic_18 { pt3dadd( -159.312, 443.256, -55.7235, 0.36 ) }
    apic_18 { pt3dadd( -161.332, 443.646, -55.4541, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    apic_18 { pt3dadd( -163.213, 444.034, -55.414, 0.36 ) }
    apic_18 { pt3dadd( -164.683, 444.443, -55.606, 0.36 ) }
    apic_18 { pt3dadd( -166.259, 445.093, -55.9785, 0.36 ) }
    apic_18 { pt3dadd( -167.385, 445.765, -56.4428, 0.36 ) }
    apic_18 { pt3dadd( -168.409, 446.504, -57.0141, 0.36 ) }
    apic_18 { pt3dadd( -169.356, 447.318, -57.633, 0.36 ) }
    apic_18 { pt3dadd( -170.964, 448.627, -58.5308, 0.36 ) }
    apic_18 { pt3dadd( -172.33, 449.591, -59.1963, 0.36 ) }
    apic_18 { pt3dadd( -174.641, 451.017, -60.195, 0.36 ) }
    apic_18 { pt3dadd( -175.53, 451.565, -60.5191, 0.36 ) }
    apic_18 { pt3dadd( -178.459, 453.445, -61.3382, 0.36 ) }
    apic_18 { pt3dadd( -181.445, 455.26, -61.8412, 0.36 ) }
    apic_18 { pt3dadd( -183.355, 456.318, -62.0224, 0.36 ) }
    apic_18 { pt3dadd( -184.987, 457.16, -62.0714, 0.36 ) }
    apic_18 { pt3dadd( -186.85, 458.102, -62.014, 0.36 ) }
    apic_18 { pt3dadd( -188.928, 459.117, -61.8985, 0.36 ) }
    apic_18 { pt3dadd( -191.649, 460.278, -61.746, 0.36 ) }
    apic_18 { pt3dadd( -193.775, 461.138, -61.7125, 0.36 ) }
    apic_18 { pt3dadd( -195.137, 461.604, -61.7008, 0.36 ) }
    apic_18 { pt3dadd( -197.117, 462.201, -61.7309, 0.36 ) }
    apic_18 { pt3dadd( -199.053, 462.72, -61.8449, 0.36 ) }
    apic_18 { pt3dadd( -200.629, 463.133, -61.992, 0.36 ) }
    apic_18 { pt3dadd( -202.106, 463.611, -62.2079, 0.36 ) }
    apic_18 { pt3dadd( -204.226, 464.388, -62.5138, 0.36 ) }
    apic_18 { pt3dadd( -205.707, 464.987, -62.7488, 0.36 ) }
    apic_18 { pt3dadd( -207.026, 465.514, -62.9636, 0.36 ) }
    apic_18 { pt3dadd( -209.16, 466.47, -63.3921, 0.36 ) }
    apic_18 { pt3dadd( -210.398, 467.1, -63.617, 0.36 ) }
    apic_18 { pt3dadd( -212.033, 467.984, -63.8708, 0.36 ) }
    apic_18 { pt3dadd( -213.139, 468.576, -64.085, 0.36 ) }
    apic_18 { pt3dadd( -215.373, 469.692, -64.5126, 0.36 ) }
    apic_18 { pt3dadd( -216.877, 470.489, -64.7385, 0.36 ) }
    apic_18 { pt3dadd( -218.825, 471.659, -64.8255, 0.36 ) }
    apic_18 { pt3dadd( -219.905, 472.354, -64.7555, 0.36 ) }
    apic_18 { pt3dadd( -221.824, 473.669, -64.4957, 0.36 ) }
    apic_18 { pt3dadd( -223.443, 474.898, -64.1563, 0.36 ) }
    apic_18 { pt3dadd( -225.149, 476.428, -63.6182, 0.36 ) }
    apic_18 { pt3dadd( -227.192, 478.407, -62.7305, 0.36 ) }
    apic_18 { pt3dadd( -228.637, 479.935, -62.0908, 0.36 ) }
    apic_18 { pt3dadd( -229.533, 481.01, -61.7006, 0.36 ) }
    apic_18 { pt3dadd( -230.252, 482.018, -61.4087, 0.36 ) }
    apic_18 { pt3dadd( -231.508, 484.067, -61.1796, 0.36 ) }
    apic_18 { pt3dadd( -232.216, 485.285, -61.2621, 0.36 ) }
    apic_18 { pt3dadd( -233.509, 487.418, -61.8383, 0.36 ) }
    apic_18 { pt3dadd( -234.672, 489.263, -62.7452, 0.36 ) }
    apic_18 { pt3dadd( -235.476, 490.509, -63.4988, 0.36 ) }
    apic_18 { pt3dadd( -236.405, 492.045, -64.6838, 0.36 ) }
    apic_18 { pt3dadd( -237.215, 493.457, -65.9525, 0.36 ) }
    apic_18 { pt3dadd( -238.174, 495.222, -67.6848, 0.36 ) }
    apic_18 { pt3dadd( -239.258, 497.324, -69.9006, 0.36 ) }
    apic_18 { pt3dadd( -239.871, 498.534, -71.3418, 0.36 ) }
    apic_18 { pt3dadd( -241.107, 500.963, -74.7312, 0.36 ) }
    apic_18 { pt3dadd( -241.512, 501.772, -76.0026, 0.36 ) }
    apic_18 { pt3dadd( -242.034, 502.767, -78.0537, 0.36 ) }
    apic_18 { pt3dadd( -242.329, 503.007, -79.3116, 0.36 ) }
    apic_18 { pt3dadd( -242.675, 502.591, -80.5258, 0.36 ) }
    apic_18 { pt3dadd( -243.362, 501.377, -82.6097, 0.36 ) }
    apic_18 { pt3dadd( -244.273, 499.82, -84.5646, 0.36 ) }
    apic_18 { pt3dadd( -245.501, 498.065, -86.6639, 0.36 ) }
    apic_18 { pt3dadd( -246.462, 497.065, -87.9329, 0.36 ) }
    apic_18 { pt3dadd( -248.204, 496.179, -89.6733, 0.36 ) }
    apic_18 { pt3dadd( -249.552, 496.445, -90.5669, 0.36 ) }
    apic_18 { pt3dadd( -251.284, 497.783, -91.3461, 0.36 ) }
    apic_18 { pt3dadd( -252.849, 499.494, -91.9161, 0.36 ) }
    apic_18 { pt3dadd( -254.326, 501.595, -92.2451, 0.36 ) }
    apic_18 { pt3dadd( -255.373, 503.374, -92.3981, 0.36 ) }
    apic_18 { pt3dadd( -256.444, 505.314, -92.4834, 0.36 ) }
    apic_18 { pt3dadd( -257.739, 507.81, -92.6012, 0.36 ) }
    apic_18 { pt3dadd( -258.249, 508.816, -92.6744, 0.36 ) }
    apic_18 { pt3dadd( -259.647, 511.332, -92.9495, 0.36 ) }
    apic_18 { pt3dadd( -260.658, 512.835, -93.1814, 0.36 ) }
    apic_18 { pt3dadd( -262.049, 514.603, -93.5305, 0.36 ) }
    apic_18 { pt3dadd( -263.18, 515.954, -93.8126, 0.36 ) }
    apic_18 { pt3dadd( -264.195, 517.173, -94.0721, 0.36 ) }
    apic_18 { pt3dadd( -265.325, 518.665, -94.3965, 0.36 ) }
    apic_18 { pt3dadd( -266.692, 520.593, -94.8268, 0.36 ) }
    apic_18 { pt3dadd( -269.235, 524.616, -95.6557, 0.36 ) }
    apic_18 { pt3dadd( -270.839, 527.544, -96.1821, 0.36 ) }
    apic_18 { pt3dadd( -271.748, 529.354, -96.4828, 0.36 ) }
    apic_18 { pt3dadd( -272.651, 531.112, -96.7692, 0.36 ) }
    apic_18 { pt3dadd( -273.529, 532.704, -97.014, 0.36 ) }
    apic_18 { pt3dadd( -274.61, 534.408, -97.2762, 0.36 ) }
    apic_18 { pt3dadd( -275.275, 535.25, -97.4089, 0.36 ) }
    apic_18 { pt3dadd( -276.547, 536.597, -97.6442, 0.36 ) }
    apic_18 { pt3dadd( -278.896, 538.619, -97.9609, 0.36 ) }
    apic_18 { pt3dadd( -280.534, 539.829, -98.1172, 0.36 ) }
    apic_18 { pt3dadd( -281.548, 540.626, -98.1377, 0.36 ) }
    apic_18 { pt3dadd( -282.925, 541.967, -98.0457, 0.36 ) }
    apic_18 { pt3dadd( -283.888, 543.096, -97.916, 0.36 ) }
    apic_18 { pt3dadd( -285.157, 544.857, -97.5464, 0.36 ) }
    apic_18 { pt3dadd( -285.797, 545.883, -97.2722, 0.36 ) }
    apic_18 { pt3dadd( -288.024, 549.594, -96.0955, 0.36 ) }
    apic_18 { pt3dadd( -289.87, 552.5, -95.0482, 0.36 ) }
    apic_18 { pt3dadd( -290.699, 553.638, -94.6165, 0.36 ) }
    apic_18 { pt3dadd( -292.47, 555.747, -93.7815, 0.36 ) }
    apic_18 { pt3dadd( -293.619, 556.957, -93.311, 0.36 ) }
    apic_18 { pt3dadd( -295.55, 558.672, -92.6482, 0.36 ) }
    apic_18 { pt3dadd( -296.745, 559.492, -92.337, 0.36 ) }
    apic_18 { pt3dadd( -299.325, 560.951, -91.7924, 0.36 ) }
    apic_18 { pt3dadd( -301.821, 562.178, -91.391, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    apic_18 { pt3dadd( -303.403, 562.815, -91.2635, 0.36 ) }
    apic_18 { pt3dadd( -305.894, 563.551, -91.1562, 0.36 ) }
    apic_18 { pt3dadd( -307.157, 563.878, -91.2208, 0.36 ) }
    apic_18 { pt3dadd( -308.539, 564.301, -91.426, 0.36 ) }
    apic_18 { pt3dadd( -310.193, 564.897, -91.8655, 0.36 ) }
    apic_18 { pt3dadd( -311.735, 565.527, -92.4595, 0.36 ) }
    apic_18 { pt3dadd( -313.422, 566.325, -93.0931, 0.36 ) }
    apic_18 { pt3dadd( -316.62, 568.14, -94.1829, 0.36 ) }
    apic_18 { pt3dadd( -318.294, 569.374, -94.6368, 0.36 ) }
    apic_18 { pt3dadd( -320.067, 570.987, -94.9004, 0.36 ) }
    apic_18 { pt3dadd( -321.108, 572.089, -94.9069, 0.36 ) }
    apic_18 { pt3dadd( -323.425, 574.682, -94.6594, 0.36 ) }
    apic_18 { pt3dadd( -324.358, 575.756, -94.5583, 0.36 ) }
    apic_18 { pt3dadd( -326.243, 577.828, -94.312, 0.36 ) }
    apic_18 { pt3dadd( -327.895, 579.72, -94.1745, 0.36 ) }
    apic_18 { pt3dadd( -328.875, 581.021, -94.1838, 0.36 ) }
    apic_18 { pt3dadd( -330.378, 583.379, -94.353, 0.36 ) }
    apic_18 { pt3dadd( -332.072, 586.651, -94.7838, 0.36 ) }
    apic_18 { pt3dadd( -332.585, 587.811, -94.9386, 0.36 ) }
    apic_18 { pt3dadd( -333.478, 590.031, -95.2317, 0.36 ) }
    apic_18 { pt3dadd( -334.763, 593.436, -95.6691, 0.36 ) }
    apic_18 { pt3dadd( -335.514, 595.627, -95.8597, 0.36 ) }
    apic_18 { pt3dadd( -336.03, 597.096, -95.8407, 0.36 ) }
    apic_18 { pt3dadd( -337.163, 599.963, -95.6047, 0.36 ) }
    apic_18 { pt3dadd( -338.636, 603.197, -95.3276, 0.36 ) }
    apic_18 { pt3dadd( -339.704, 605.265, -95.1505, 0.36 ) }
    apic_18 { pt3dadd( -340.718, 607.018, -94.9666, 0.36 ) }
    apic_18 { pt3dadd( -343.354, 611.159, -94.5148, 0.36 ) }
    apic_18 { pt3dadd( -344.101, 612.298, -94.3782, 0.36 ) }
    apic_18 { pt3dadd( -345.042, 613.756, -94.188, 0.36 ) }
    apic_18 { pt3dadd( -346.367, 615.738, -93.9699, 0.36 ) }
    apic_18 { pt3dadd( -347.65, 617.466, -93.8695, 0.36 ) }
    apic_18 { pt3dadd( -349.015, 619.186, -93.8868, 0.36 ) }
    apic_18 { pt3dadd( -350.52, 621.007, -93.9321, 0.36 ) }
    apic_18 { pt3dadd( -352.34, 623.055, -93.9443, 0.36 ) }
    apic_18 { pt3dadd( -354.555, 625.42, -93.9329, 0.36 ) }
    apic_18 { pt3dadd( -355.77, 626.636, -93.9313, 0.36 ) }
    apic_18 { pt3dadd( -357.046, 627.894, -93.9532, 0.36 ) }
    apic_18 { pt3dadd( -359.132, 629.92, -93.7808, 0.36 ) }
    apic_18 { pt3dadd( -360.241, 631.008, -93.5967, 0.36 ) }
    apic_18 { pt3dadd( -361.166, 631.946, -93.3676, 0.36 ) }
    apic_18 { pt3dadd( -362.204, 633.079, -93.0106, 0.36 ) }
    apic_18 { pt3dadd( -364.92, 636.076, -92.0032, 0.36 ) }
    apic_18 { pt3dadd( -366.799, 638.135, -91.3189, 0.36 ) }
    apic_18 { pt3dadd( -367.939, 639.429, -90.9219, 0.36 ) }
    apic_18 { pt3dadd( -368.952, 640.647, -90.5743, 0.36 ) }
    apic_18 { pt3dadd( -369.915, 641.78, -90.2978, 0.36 ) }
    apic_18 { pt3dadd( -371.278, 643.44, -90.0014, 0.36 ) }
    apic_18 { pt3dadd( -372.17, 644.65, -89.8676, 0.36 ) }
    apic_18 { pt3dadd( -373.267, 646.263, -89.8849, 0.36 ) }
    apic_18 { pt3dadd( -374.659, 648.501, -89.9984, 0.36 ) }
    apic_18 { pt3dadd( -375.684, 650.301, -90.1604, 0.36 ) }
    apic_18 { pt3dadd( -376.893, 652.74, -90.4735, 0.36 ) }
    apic_18 { pt3dadd( -377.687, 654.545, -90.7362, 0.36 ) }
    apic_18 { pt3dadd( -378.626, 656.674, -91.0356, 0.36 ) }
    apic_18 { pt3dadd( -380.198, 660.137, -91.4857, 0.36 ) }
    apic_18 { pt3dadd( -381.065, 661.962, -91.6539, 0.36 ) }
    apic_18 { pt3dadd( -382.119, 664.225, -91.7522, 0.36 ) }
    apic_18 { pt3dadd( -383.584, 667.271, -91.7595, 0.36 ) }
    apic_18 { pt3dadd( -384.552, 669.143, -91.7048, 0.36 ) }
    apic_18 { pt3dadd( -385.285, 670.395, -91.5872, 0.36 ) }
    apic_18 { pt3dadd( -387.148, 673.278, -91.1292, 0.36 ) }
    apic_18 { pt3dadd( -389.087, 675.953, -90.5774, 0.36 ) }
    apic_18 { pt3dadd( -389.833, 676.874, -90.3629, 0.36 ) }
    apic_18 { pt3dadd( -391.079, 678.382, -90.024, 0.36 ) }
    apic_18 { pt3dadd( -393.309, 681.212, -89.5148, 0.36 ) }
    apic_18 { pt3dadd( -394.606, 682.88, -89.2762, 0.36 ) }
    apic_18 { pt3dadd( -396.002, 684.659, -89.1634, 0.36 ) }
    apic_18 { pt3dadd( -397.393, 686.41, -89.2421, 0.36 ) }
    apic_18 { pt3dadd( -398.831, 688.354, -89.4584, 0.36 ) }
    apic_18 { pt3dadd( -400.367, 690.789, -89.9831, 0.36 ) }
    apic_18 { pt3dadd( -401.231, 692.366, -90.4958, 0.36 ) }
    apic_18 { pt3dadd( -402.192, 694.28, -91.2209, 0.36 ) }
    apic_18 { pt3dadd( -403.014, 696.296, -92.0493, 0.36 ) }
    apic_18 { pt3dadd( -403.512, 697.918, -92.7639, 0.36 ) }
    apic_18 { pt3dadd( -404.011, 700.736, -94.1929, 0.36 ) }
    apic_18 { pt3dadd( -404.053, 701.731, -94.7316, 0.36 ) }
    apic_18 { pt3dadd( -403.983, 703.073, -95.4532, 0.36 ) }
    apic_18 { pt3dadd( -403.775, 704.671, -96.2445, 0.36 ) }
    apic_18 { pt3dadd( -403.432, 706.428, -97.0403, 0.36 ) }
    apic_18 { pt3dadd( -402.973, 708.752, -97.9861, 0.36 ) }
    apic_18 { pt3dadd( -402.826, 709.759, -98.338, 0.36 ) }
    apic_18 { pt3dadd( -402.748, 711.091, -98.7668, 0.36 ) }
    apic_18 { pt3dadd( -402.785, 712.81, -99.2407, 0.36 ) }
    apic_18 { pt3dadd( -402.889, 714.271, -99.5711, 0.36 ) }
    apic_18 { pt3dadd( -403.038, 715.719, -99.8387, 0.36 ) }
    apic_18 { pt3dadd( -403.346, 718.243, -100.164, 0.36 ) }
    apic_18 { pt3dadd( -403.64, 720.551, -100.427, 0.36 ) }
    apic_18 { pt3dadd( -403.88, 722.499, -100.625, 0.36 ) }
    apic_18 { pt3dadd( -404.22, 724.858, -100.829, 0.36 ) }
    apic_18 { pt3dadd( -404.549, 727.151, -100.973, 0.36 ) }
    apic_18 { pt3dadd( -404.921, 730.17, -101.059, 0.36 ) }
    apic_18 { pt3dadd( -405.175, 732.575, -101.051, 0.36 ) }
    apic_18 { pt3dadd( -405.476, 735.295, -101.104, 0.36 ) }
    apic_18 { pt3dadd( -405.961, 738.523, -101.256, 0.36 ) }
    apic_18 { pt3dadd( -406.428, 740.75, -101.438, 0.36 ) }
    apic_18 { pt3dadd( -406.912, 742.765, -101.689, 0.36 ) }
    apic_18 { pt3dadd( -407.188, 743.677, -101.853, 0.36 ) }
    apic_18 { pt3dadd( -408.312, 746.528, -102.626, 0.36 ) }
    apic_18 { pt3dadd( -409.108, 748.271, -103.296, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    apic_18 { pt3dadd( -410.129, 750.483, -104.427, 0.36 ) }
    apic_18 { pt3dadd( -411.101, 752.526, -105.659, 0.36 ) }
    apic_18 { pt3dadd( -411.731, 753.864, -106.529, 0.36 ) }
    apic_18 { pt3dadd( -412.608, 755.896, -107.854, 0.36 ) }
    apic_18 { pt3dadd( -413.462, 758.226, -109.278, 0.36 ) }
    apic_18 { pt3dadd( -413.995, 759.838, -110.331, 0.36 ) }
    apic_18 { pt3dadd( -414.313, 760.768, -110.95, 0.36 ) }
    apic_18 { pt3dadd( -414.782, 761.933, -111.739, 0.36 ) }
    apic_18 { pt3dadd( -415.206, 762.791, -112.273, 0.36 ) }
    apic_18 { pt3dadd( -415.854, 763.619, -112.657, 0.36 ) }
    apic_18 { pt3dadd( -416.832, 764.547, -112.99, 0.36 ) }
    apic_18 { pt3dadd( -419.105, 766.483, -113.667, 0.36 ) }
    apic_18 { pt3dadd( -419.955, 767.121, -113.913, 0.36 ) }
    apic_18 { pt3dadd( -421.531, 768.265, -114.429, 0.36 ) }
    apic_18 { pt3dadd( -424.31, 770.307, -115.439, 0.36 ) }
    apic_18 { pt3dadd( -426.67, 772.034, -116.394, 0.36 ) }
    apic_18 { pt3dadd( -428.157, 773.189, -117.05, 0.36 ) }
    apic_18 { pt3dadd( -430.348, 775.006, -118.161, 0.36 ) }
    apic_18 { pt3dadd( -431.955, 776.379, -119.056, 0.36 ) }
    apic_18 { pt3dadd( -433.207, 777.462, -119.825, 0.36 ) }
    apic_18 { pt3dadd( -434.27, 778.438, -120.577, 0.36 ) }
    apic_18 { pt3dadd( -435.636, 779.64, -121.386, 0.36 ) }
    apic_18 { pt3dadd( -437.157, 781.01, -122.151, 0.36 ) }
    apic_18 { pt3dadd( -438.629, 782.287, -122.761, 0.36 ) }
    apic_18 { pt3dadd( -440.514, 783.745, -123.363, 0.36 ) }
    apic_18 { pt3dadd( -442.41, 785.037, -123.824, 0.36 ) }
    apic_18 { pt3dadd( -444.577, 786.388, -124.226, 0.36 ) }
    apic_18 { pt3dadd( -446.205, 787.3, -124.345, 0.36 ) }
    apic_18 { pt3dadd( -447.992, 788.191, -124.178, 0.24 ) }
    apic_18 { pt3dadd( -449.924, 789.026, -123.845, 0.24 ) }
    apic_18 { pt3dadd( -452.1, 789.857, -123.299, 0.24 ) }
    apic_18 { pt3dadd( -452.783, 790.075, -123.047, 0.24 ) }
    apic_18 { pt3dadd( -455.508, 790.919, -121.744, 0.24 ) }
    apic_18 { pt3dadd( -458.422, 791.839, -119.831, 0.12 ) }
    apic_18 { pt3dadd( -460.031, 792.425, -118.325, 0.12 ) }
    apic_18 { pt3dadd( -461.508, 793.008, -116.598, 0.12 ) }
    apic_18 { pt3dadd( -463.479, 794.003, -113.963, 0.12 ) }
    apic_18 { pt3dadd( -464.17, 794.474, -112.96, 0.12 ) }
    apic_18 { pt3dadd( -465.317, 795.643, -111.059, 0.12 ) }
    apic_18 { pt3dadd( -467.099, 798.153, -107.869, 0.12 ) }
    apic_18 { pt3dadd( -467.472, 798.738, -107.16, 0.12 ) }
    apic_18 { pt3dadd( -468.305, 800.119, -105.754, 0.12 ) }
    apic_18 { pt3dadd( -469.662, 802.606, -103.898, 0.12 ) }
    apic_18 { pt3dadd( -470.907, 804.907, -102.5, 0.12 ) }
    apic_18 { pt3dadd( -471.405, 806.036, -102.072, 0.12 ) }
    // Section: apic_21, id: apic_21, parent: apic_19 (entry count 45/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( -84.1561, 814.886, -48.7887, 0.36 ) }
    apic_21 { pt3dadd( -84.171, 816.278, -48.7017, 0.36 ) }
    apic_21 { pt3dadd( -84.0426, 821.139, -48.6556, 0.36 ) }
    apic_21 { pt3dadd( -83.9723, 823.803, -48.6303, 0.24 ) }
    apic_21 { pt3dadd( -83.8945, 826.747, -48.6023, 0.24 ) }
    apic_21 { pt3dadd( -83.8307, 829.165, -48.5793, 0.24 ) }
    apic_21 { pt3dadd( -83.692, 831.067, -48.6285, 0.24 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 52/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( -84.1561, 814.886, -48.7887, 0.36 ) }
    apic_20 { pt3dadd( -86.9603, 815.533, -52.0461, 0.24 ) }
    apic_20 { pt3dadd( -88.3595, 815.771, -53.6135, 0.24 ) }
    apic_20 { pt3dadd( -90.2704, 816.141, -55.6644, 0.24 ) }
    apic_20 { pt3dadd( -92.3776, 816.633, -58.0674, 0.24 ) }
    apic_20 { pt3dadd( -93.7059, 816.926, -59.6412, 0.24 ) }
    apic_20 { pt3dadd( -95.4915, 817.263, -61.8094, 0.24 ) }
    apic_20 { pt3dadd( -96.616, 817.373, -63.1871, 0.24 ) }
    apic_20 { pt3dadd( -97.6491, 817.528, -64.7141, 0.24 ) }
    apic_20 { pt3dadd( -98.6067, 817.764, -66.4295, 0.24 ) }
    apic_20 { pt3dadd( -99.205, 817.985, -67.6237, 0.24 ) }
    apic_20 { pt3dadd( -99.7965, 818.35, -69.0746, 0.24 ) }
    apic_20 { pt3dadd( -100.422, 819.056, -71.1698, 0.24 ) }
    apic_20 { pt3dadd( -101.192, 820.135, -74.049, 0.24 ) }
    apic_20 { pt3dadd( -101.583, 820.705, -75.5111, 0.24 ) }
    apic_20 { pt3dadd( -102.148, 821.49, -77.3076, 0.24 ) }
    apic_20 { pt3dadd( -102.732, 822.447, -79.4563, 0.24 ) }
    apic_20 { pt3dadd( -103.758, 824.23, -83.5421, 0.24 ) }
    apic_20 { pt3dadd( -104.068, 824.735, -84.8501, 0.24 ) }
    apic_20 { pt3dadd( -104.757, 825.7, -87.6014, 0.24 ) }
    apic_20 { pt3dadd( -105.294, 826.432, -89.949, 0.24 ) }
    apic_20 { pt3dadd( -106.149, 827.394, -93.7617, 0.24 ) }
    apic_20 { pt3dadd( -106.665, 827.871, -96.1845, 0.24 ) }
    apic_20 { pt3dadd( -107.105, 828.237, -98.1699, 0.24 ) }
    apic_20 { pt3dadd( -107.369, 828.522, -99.4001, 0.24 ) }
    apic_20 { pt3dadd( -107.915, 829.152, -101.593, 0.24 ) }
    apic_20 { pt3dadd( -108.259, 829.536, -102.649, 0.24 ) }
    apic_20 { pt3dadd( -108.849, 830.053, -103.819, 0.24 ) }
    apic_20 { pt3dadd( -109.586, 830.776, -105.316, 0.24 ) }
    apic_20 { pt3dadd( -110.151, 831.424, -106.415, 0.24 ) }
    apic_20 { pt3dadd( -111.116, 832.578, -108.234, 0.24 ) }
    apic_20 { pt3dadd( -111.925, 833.525, -109.727, 0.24 ) }
    apic_20 { pt3dadd( -113.043, 834.722, -111.772, 0.24 ) }
    apic_20 { pt3dadd( -114.121, 836.07, -114.172, 0.24 ) }
    apic_20 { pt3dadd( -114.937, 837.121, -116.235, 0.24 ) }
    apic_20 { pt3dadd( -115.384, 837.727, -117.457, 0.24 ) }
    apic_20 { pt3dadd( -115.657, 838.173, -118.297, 0.24 ) }
    apic_20 { pt3dadd( -116.086, 839.093, -119.769, 0.24 ) }
    apic_20 { pt3dadd( -116.751, 841.61, -123.135, 0.24 ) }
    apic_20 { pt3dadd( -116.904, 842.854, -124.675, 0.24 ) }
    apic_20 { pt3dadd( -116.838, 844.038, -126.069, 0.24 ) }
    apic_20 { pt3dadd( -116.67, 845.048, -126.998, 0.24 ) }
    apic_20 { pt3dadd( -116.413, 846.367, -127.993, 0.24 ) }
    apic_20 { pt3dadd( -115.892, 849.158, -129.735, 0.24 ) }
    apic_20 { pt3dadd( -115.59, 851.385, -130.948, 0.24 ) }
    apic_20 { pt3dadd( -115.394, 853.112, -131.808, 0.24 ) }
    apic_20 { pt3dadd( -115.189, 855.977, -133.301, 0.24 ) }
    apic_20 { pt3dadd( -115.186, 857.597, -134.228, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    apic_20 { pt3dadd( -115.318, 859.41, -135.314, 0.24 ) }
    apic_20 { pt3dadd( -115.619, 861.294, -136.494, 0.24 ) }
    apic_20 { pt3dadd( -115.921, 862.594, -137.428, 0.24 ) }
    apic_20 { pt3dadd( -116.484, 864.291, -138.905, 0.24 ) }
    apic_20 { pt3dadd( -117.175, 866.001, -140.64, 0.24 ) }
    apic_20 { pt3dadd( -117.787, 867.441, -142.158, 0.24 ) }
    apic_20 { pt3dadd( -118.367, 868.842, -143.641, 0.24 ) }
    apic_20 { pt3dadd( -118.939, 870.283, -145.131, 0.24 ) }
    apic_20 { pt3dadd( -119.577, 871.968, -146.947, 0.24 ) }
    apic_20 { pt3dadd( -120.213, 873.565, -148.844, 0.12 ) }
    apic_20 { pt3dadd( -120.775, 874.72, -150.541, 0.12 ) }
    apic_20 { pt3dadd( -121.214, 875.461, -151.838, 0.12 ) }
    apic_20 { pt3dadd( -121.579, 876.019, -152.902, 0.12 ) }
    apic_20 { pt3dadd( -122.421, 877.167, -155.105, 0.12 ) }
    apic_20 { pt3dadd( -123.408, 878.285, -157.335, 0.12 ) }
    apic_20 { pt3dadd( -124.374, 879.06, -159.102, 0.12 ) }
    apic_20 { pt3dadd( -125.47, 879.752, -160.742, 0.12 ) }
    apic_20 { pt3dadd( -127.063, 880.697, -162.719, 0.12 ) }
    apic_20 { pt3dadd( -129.105, 881.953, -164.84, 0.12 ) }
    apic_20 { pt3dadd( -130.203, 882.68, -165.767, 0.12 ) }
    apic_20 { pt3dadd( -131.262, 883.44, -166.54, 0.12 ) }
    apic_20 { pt3dadd( -132.697, 884.546, -167.484, 0.12 ) }
    apic_20 { pt3dadd( -134.125, 885.602, -168.223, 0.12 ) }
    apic_20 { pt3dadd( -134.658, 886.028, -168.51, 0.12 ) }
    apic_20 { pt3dadd( -135.927, 887.291, -169.393, 0.12 ) }
    apic_20 { pt3dadd( -136.367, 887.964, -169.845, 0.12 ) }
    apic_20 { pt3dadd( -136.923, 889.24, -170.647, 0.12 ) }
    apic_20 { pt3dadd( -137.608, 891.579, -172.1, 0.12 ) }
    apic_20 { pt3dadd( -138.293, 895.41, -174.412, 0.12 ) }
    apic_20 { pt3dadd( -138.452, 896.996, -175.304, 0.12 ) }
    apic_20 { pt3dadd( -138.551, 899.424, -176.76, 0.12 ) }
    apic_20 { pt3dadd( -138.548, 901.034, -177.795, 0.12 ) }
    apic_20 { pt3dadd( -138.522, 902.651, -178.879, 0.12 ) }
    apic_20 { pt3dadd( -138.448, 904.905, -180.324, 0.12 ) }
    apic_20 { pt3dadd( -138.493, 906.311, -181.132, 0.12 ) }
    apic_20 { pt3dadd( -138.559, 909.204, -182.997, 0.12 ) }
    apic_20 { pt3dadd( -138.585, 910.978, -184.267, 0.12 ) }
    apic_20 { pt3dadd( -138.616, 912.561, -185.431, 0.12 ) }
    apic_20 { pt3dadd( -138.636, 914.251, -186.627, 0.12 ) }
    apic_20 { pt3dadd( -138.657, 916.076, -187.947, 0.12 ) }
    apic_20 { pt3dadd( -138.765, 919.026, -190.097, 0.12 ) }
    apic_20 { pt3dadd( -138.798, 920.656, -191.236, 0.12 ) }
    apic_20 { pt3dadd( -138.799, 923.318, -193.087, 0.12 ) }
    apic_20 { pt3dadd( -138.779, 925.965, -194.927, 0.12 ) }
    apic_20 { pt3dadd( -138.829, 928.506, -196.714, 0.12 ) }
    apic_20 { pt3dadd( -138.925, 930.56, -198.092, 0.12 ) }
    apic_20 { pt3dadd( -139.187, 932.812, -199.504, 0.12 ) }
    apic_20 { pt3dadd( -139.505, 934.643, -200.767, 0.12 ) }
    apic_20 { pt3dadd( -139.93, 936.545, -202.175, 0.12 ) }
    apic_20 { pt3dadd( -140.402, 938.294, -203.453, 0.12 ) }
    apic_20 { pt3dadd( -141.174, 941.05, -205.349, 0.12 ) }
    apic_20 { pt3dadd( -141.791, 942.965, -206.734, 0.12 ) }
    apic_20 { pt3dadd( -142.59, 944.869, -208.268, 0.12 ) }
    apic_20 { pt3dadd( -143.193, 946.31, -209.472, 0.12 ) }
    apic_20 { pt3dadd( -143.95, 948.228, -211.093, 0.12 ) }
    apic_20 { pt3dadd( -144.373, 949.267, -212.013, 0.12 ) }
    apic_20 { pt3dadd( -144.954, 950.817, -213.487, 0.12 ) }
    apic_20 { pt3dadd( -145.257, 951.692, -214.35, 0.12 ) }
    apic_20 { pt3dadd( -146.133, 954.039, -216.66, 0.12 ) }
    apic_20 { pt3dadd( -146.473, 954.9, -217.54, 0.12 ) }
    apic_20 { pt3dadd( -147.028, 956.283, -219.006, 0.12 ) }
    apic_20 { pt3dadd( -147.909, 959.037, -221.78, 0.12 ) }
    apic_20 { pt3dadd( -148.193, 960.252, -222.894, 0.12 ) }
    apic_20 { pt3dadd( -148.468, 961.409, -223.974, 0.12 ) }
    apic_20 { pt3dadd( -148.79, 962.603, -225.102, 0.12 ) }
    apic_20 { pt3dadd( -149.215, 964.195, -226.514, 0.12 ) }
    apic_20 { pt3dadd( -149.929, 966.791, -228.834, 0.12 ) }
    apic_20 { pt3dadd( -150.266, 967.798, -229.769, 0.12 ) }
    apic_20 { pt3dadd( -150.784, 969.495, -231.427, 0.12 ) }
    apic_20 { pt3dadd( -151.586, 972.073, -234.079, 0.12 ) }
    apic_20 { pt3dadd( -151.701, 972.418, -234.439, 0.12 ) }
    apic_20 { pt3dadd( -152.081, 973.629, -235.66, 0.12 ) }
    apic_20 { pt3dadd( -152.518, 974.91, -237.056, 0.12 ) }
    apic_20 { pt3dadd( -153.255, 976.978, -239.484, 0.12 ) }
    apic_20 { pt3dadd( -153.614, 978.083, -240.836, 0.12 ) }
    apic_20 { pt3dadd( -154.35, 980.7, -244.325, 0.12 ) }
    apic_20 { pt3dadd( -154.667, 981.88, -245.977, 0.12 ) }
    apic_20 { pt3dadd( -155.264, 983.849, -248.915, 0.12 ) }
    apic_20 { pt3dadd( -155.651, 984.996, -250.778, 0.12 ) }
    apic_20 { pt3dadd( -156.094, 986.227, -252.781, 0.12 ) }
    apic_20 { pt3dadd( -156.626, 987.74, -255.216, 0.12 ) }
    apic_20 { pt3dadd( -157.547, 990.315, -259.217, 0.12 ) }
    apic_20 { pt3dadd( -157.955, 991.345, -260.632, 0.12 ) }
    apic_20 { pt3dadd( -158.171, 991.933, -261.289, 0.12 ) }
    apic_20 { pt3dadd( -158.726, 993.566, -262.722, 0.12 ) }
    apic_20 { pt3dadd( -159.616, 996.269, -264.641, 0.12 ) }
    apic_20 { pt3dadd( -160.151, 998.113, -265.688, 0.12 ) }
    apic_20 { pt3dadd( -160.716, 1001.04, -267.012, 0.12 ) }
    apic_20 { pt3dadd( -160.901, 1002.73, -267.666, 0.12 ) }
    apic_20 { pt3dadd( -161.099, 1005.91, -268.669, 0.12 ) }
    apic_20 { pt3dadd( -161.088, 1008.57, -269.28, 0.12 ) }
    apic_20 { pt3dadd( -160.874, 1011.0, -269.626, 0.12 ) }
    apic_20 { pt3dadd( -160.519, 1013.33, -269.833, 0.12 ) }
    apic_20 { pt3dadd( -160.004, 1015.6, -269.903, 0.12 ) }
    apic_20 { pt3dadd( -159.044, 1019.43, -269.957, 0.12 ) }
    apic_20 { pt3dadd( -158.27, 1022.25, -269.912, 0.12 ) }
    apic_20 { pt3dadd( -157.768, 1023.98, -269.76, 0.12 ) }
    apic_20 { pt3dadd( -157.257, 1025.73, -269.534, 0.12 ) }
    apic_20 { pt3dadd( -156.752, 1027.52, -269.262, 0.12 ) }
    // Section: apic_23, id: apic_23, parent: apic_21 (entry count 99/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( -83.692, 831.067, -48.6285, 0.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    apic_23 { pt3dadd( -85.4541, 834.275, -47.5489, 0.24 ) }
    apic_23 { pt3dadd( -87.6616, 838.735, -46.0455, 0.24 ) }
    apic_23 { pt3dadd( -89.9172, 843.293, -44.5093, 0.24 ) }
    apic_23 { pt3dadd( -91.5344, 846.561, -43.4079, 0.24 ) }
    apic_23 { pt3dadd( -93.3728, 850.276, -42.1559, 0.24 ) }
    apic_23 { pt3dadd( -94.7209, 853.0, -41.2378, 0.24 ) }
    apic_23 { pt3dadd( -95.5935, 855.031, -40.5203, 0.24 ) }
    // Section: apic_22, id: apic_22, parent: apic_21 (entry count 7/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( -83.692, 831.067, -48.6285, 0.24 ) }
    apic_22 { pt3dadd( -83.3313, 832.897, -48.1316, 0.24 ) }
    apic_22 { pt3dadd( -83.0094, 834.885, -47.5926, 0.24 ) }
    apic_22 { pt3dadd( -82.8911, 836.046, -47.3117, 0.24 ) }
    apic_22 { pt3dadd( -82.732, 838.027, -46.8268, 0.24 ) }
    apic_22 { pt3dadd( -82.5602, 839.995, -46.4234, 0.24 ) }
    apic_22 { pt3dadd( -82.4147, 841.583, -46.1427, 0.24 ) }
    apic_22 { pt3dadd( -82.1912, 843.221, -46.0031, 0.24 ) }
    apic_22 { pt3dadd( -81.8535, 845.241, -45.9773, 0.24 ) }
    apic_22 { pt3dadd( -81.4596, 847.172, -46.0865, 0.24 ) }
    apic_22 { pt3dadd( -81.0515, 849.187, -46.2897, 0.24 ) }
    apic_22 { pt3dadd( -80.6186, 850.805, -46.5389, 0.24 ) }
    apic_22 { pt3dadd( -79.4856, 854.284, -47.1148, 0.24 ) }
    apic_22 { pt3dadd( -78.7975, 856.122, -47.3992, 0.24 ) }
    apic_22 { pt3dadd( -77.8977, 857.99, -47.6726, 0.24 ) }
    apic_22 { pt3dadd( -76.6646, 860.117, -47.975, 0.24 ) }
    apic_22 { pt3dadd( -74.8472, 862.831, -48.2557, 0.24 ) }
    apic_22 { pt3dadd( -73.4025, 864.695, -48.4367, 0.24 ) }
    apic_22 { pt3dadd( -72.1038, 866.257, -48.5451, 0.24 ) }
    apic_22 { pt3dadd( -68.8202, 869.844, -48.9736, 0.24 ) }
    apic_22 { pt3dadd( -66.3894, 872.32, -49.3632, 0.24 ) }
    apic_22 { pt3dadd( -64.1911, 874.375, -49.7894, 0.24 ) }
    apic_22 { pt3dadd( -61.8585, 876.504, -50.3072, 0.12 ) }
    apic_22 { pt3dadd( -60.3464, 877.906, -50.7077, 0.12 ) }
    apic_22 { pt3dadd( -56.2287, 881.828, -51.8333, 0.24 ) }
    apic_22 { pt3dadd( -55.7599, 882.302, -51.9508, 0.24 ) }
    apic_22 { pt3dadd( -54.1437, 883.884, -52.3182, 0.24 ) }
    apic_22 { pt3dadd( -53.4522, 884.564, -52.4501, 0.24 ) }
    apic_22 { pt3dadd( -52.3226, 885.649, -52.5564, 0.24 ) }
    apic_22 { pt3dadd( -50.1773, 887.515, -52.5301, 0.24 ) }
    apic_22 { pt3dadd( -48.4997, 888.951, -52.2501, 0.24 ) }
    apic_22 { pt3dadd( -46.3405, 890.738, -51.8082, 0.24 ) }
    apic_22 { pt3dadd( -45.1473, 891.716, -51.5552, 0.24 ) }
    apic_22 { pt3dadd( -44.2302, 892.467, -51.4069, 0.24 ) }
    apic_22 { pt3dadd( -42.0391, 894.333, -51.1097, 0.24 ) }
    apic_22 { pt3dadd( -40.3455, 895.868, -50.9512, 0.24 ) }
    apic_22 { pt3dadd( -39.1101, 897.063, -50.8282, 0.24 ) }
    apic_22 { pt3dadd( -37.2302, 898.982, -50.7779, 0.12 ) }
    apic_22 { pt3dadd( -35.6792, 900.598, -50.9399, 0.12 ) }
    apic_22 { pt3dadd( -34.8011, 901.566, -51.1584, 0.12 ) }
    apic_22 { pt3dadd( -33.5568, 903.002, -51.6645, 0.12 ) }
    apic_22 { pt3dadd( -32.4239, 904.36, -52.3309, 0.12 ) }
    apic_22 { pt3dadd( -30.2088, 906.968, -53.8014, 0.12 ) }
    apic_22 { pt3dadd( -28.8243, 908.529, -54.6688, 0.12 ) }
    apic_22 { pt3dadd( -27.8868, 909.557, -55.1709, 0.12 ) }
    apic_22 { pt3dadd( -27.443, 910.082, -55.398, 0.12 ) }
    apic_22 { pt3dadd( -25.8738, 912.107, -56.1418, 0.12 ) }
    apic_22 { pt3dadd( -23.0034, 916.222, -57.1762, 0.12 ) }
    apic_22 { pt3dadd( -21.0753, 919.443, -57.5366, 0.12 ) }
    apic_22 { pt3dadd( -19.5006, 922.415, -57.5635, 0.12 ) }
    apic_22 { pt3dadd( -18.4416, 924.662, -57.3946, 0.12 ) }
    apic_22 { pt3dadd( -17.6228, 926.549, -57.0937, 0.12 ) }
    apic_22 { pt3dadd( -16.4558, 929.792, -56.2728, 0.12 ) }
    apic_22 { pt3dadd( -16.0625, 931.397, -55.801, 0.12 ) }
    apic_22 { pt3dadd( -15.7498, 932.827, -55.3829, 0.12 ) }
    apic_22 { pt3dadd( -15.4135, 934.055, -55.0648, 0.12 ) }
    apic_22 { pt3dadd( -14.8748, 935.394, -54.7149, 0.12 ) }
    apic_22 { pt3dadd( -14.2532, 936.76, -54.3523, 0.12 ) }
    apic_22 { pt3dadd( -13.1955, 938.739, -54.0132, 0.12 ) }
    apic_22 { pt3dadd( -12.4758, 940.154, -53.8204, 0.12 ) }
    apic_22 { pt3dadd( -12.0035, 941.132, -53.7039, 0.12 ) }
    apic_22 { pt3dadd( -11.2264, 942.674, -53.5494, 0.12 ) }
    apic_22 { pt3dadd( -10.2649, 944.919, -53.3491, 0.12 ) }
    apic_22 { pt3dadd( -9.5198, 946.485, -53.0975, 0.12 ) }
    apic_22 { pt3dadd( -8.9749, 947.441, -52.9323, 0.12 ) }
    apic_22 { pt3dadd( -7.80661, 949.201, -52.7008, 0.12 ) }
    apic_22 { pt3dadd( -6.75355, 950.704, -52.529, 0.12 ) }
    apic_22 { pt3dadd( -4.58431, 953.477, -52.2858, 0.12 ) }
    apic_22 { pt3dadd( -2.82975, 955.48, -52.0544, 0.12 ) }
    apic_22 { pt3dadd( -0.601236, 957.92, -51.5295, 0.12 ) }
    apic_22 { pt3dadd( 1.27418, 959.824, -51.0682, 0.12 ) }
    apic_22 { pt3dadd( 2.21338, 960.769, -50.8786, 0.12 ) }
    apic_22 { pt3dadd( 3.31397, 961.827, -50.7149, 0.12 ) }
    apic_22 { pt3dadd( 4.56755, 962.847, -50.5565, 0.12 ) }
    apic_22 { pt3dadd( 6.49059, 964.455, -50.3337, 0.12 ) }
    apic_22 { pt3dadd( 8.87341, 966.409, -50.1239, 0.12 ) }
    apic_22 { pt3dadd( 10.9449, 968.187, -50.1165, 0.12 ) }
    apic_22 { pt3dadd( 12.0246, 969.15, -50.2311, 0.12 ) }
    apic_22 { pt3dadd( 13.745, 970.784, -50.5248, 0.12 ) }
    apic_22 { pt3dadd( 14.8966, 971.904, -50.8437, 0.12 ) }
    apic_22 { pt3dadd( 16.3358, 973.372, -51.3089, 0.12 ) }
    apic_22 { pt3dadd( 17.3687, 974.472, -51.6154, 0.12 ) }
    apic_22 { pt3dadd( 19.1319, 976.338, -52.0944, 0.12 ) }
    apic_22 { pt3dadd( 20.2603, 977.498, -52.3709, 0.12 ) }
    apic_22 { pt3dadd( 22.4704, 979.762, -52.9121, 0.12 ) }
    apic_22 { pt3dadd( 23.3073, 980.494, -53.0475, 0.12 ) }
    apic_22 { pt3dadd( 26.0668, 982.656, -53.3448, 0.12 ) }
    apic_22 { pt3dadd( 26.9057, 983.277, -53.4301, 0.12 ) }
    apic_22 { pt3dadd( 29.0342, 984.856, -53.6533, 0.12 ) }
    apic_22 { pt3dadd( 30.3689, 985.83, -53.7869, 0.12 ) }
    apic_22 { pt3dadd( 33.4188, 988.078, -54.1377, 0.12 ) }
    apic_22 { pt3dadd( 36.0723, 990.143, -54.5443, 0.12 ) }
    apic_22 { pt3dadd( 37.274, 991.227, -54.7599, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    apic_22 { pt3dadd( 38.9185, 992.959, -55.1087, 0.12 ) }
    apic_22 { pt3dadd( 39.4614, 993.642, -55.213, 0.12 ) }
    apic_22 { pt3dadd( 41.0277, 995.931, -55.391, 0.12 ) }
    apic_22 { pt3dadd( 41.6679, 997.204, -55.3541, 0.12 ) }
    apic_22 { pt3dadd( 42.9716, 1000.29, -54.8601, 0.12 ) }
    apic_22 { pt3dadd( 43.5429, 1001.75, -54.5501, 0.12 ) }
    apic_22 { pt3dadd( 44.3353, 1004.05, -53.9434, 0.12 ) }
    apic_22 { pt3dadd( 44.7882, 1005.45, -53.5014, 0.12 ) }
    apic_22 { pt3dadd( 45.6095, 1008.05, -52.3432, 0.12 ) }
    apic_22 { pt3dadd( 45.983, 1009.21, -51.7367, 0.12 ) }
    // Section: apic_25, id: apic_25, parent: apic_23 (entry count 10/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( -95.5935, 855.031, -40.5203, 0.24 ) }
    apic_25 { pt3dadd( -95.673, 855.254, -40.5312, 0.24 ) }
    apic_25 { pt3dadd( -96.6035, 858.024, -40.5874, 0.24 ) }
    apic_25 { pt3dadd( -97.7164, 861.778, -40.4638, 0.24 ) }
    apic_25 { pt3dadd( -98.673, 865.063, -40.3517, 0.24 ) }
    apic_25 { pt3dadd( -99.486, 867.989, -40.2318, 0.24 ) }
    apic_25 { pt3dadd( -99.9762, 869.974, -40.1368, 0.24 ) }
    apic_25 { pt3dadd( -100.396, 871.853, -40.0278, 0.24 ) }
    apic_25 { pt3dadd( -101.323, 876.646, -39.6288, 0.24 ) }
    apic_25 { pt3dadd( -102.007, 880.461, -39.2872, 0.24 ) }
    apic_25 { pt3dadd( -102.312, 882.276, -39.1416, 0.24 ) }
    apic_25 { pt3dadd( -103.075, 887.054, -38.725, 0.24 ) }
    apic_25 { pt3dadd( -103.507, 889.948, -38.4713, 0.24 ) }
    apic_25 { pt3dadd( -103.956, 893.086, -38.2491, 0.24 ) }
    apic_25 { pt3dadd( -104.453, 896.581, -38.0592, 0.24 ) }
    apic_25 { pt3dadd( -104.95, 899.72, -37.8714, 0.24 ) }
    apic_25 { pt3dadd( -105.432, 902.349, -37.7013, 0.24 ) }
    apic_25 { pt3dadd( -106.195, 906.048, -37.4492, 0.24 ) }
    apic_25 { pt3dadd( -107.06, 910.226, -37.1559, 0.12 ) }
    apic_25 { pt3dadd( -107.842, 913.662, -36.9091, 0.12 ) }
    apic_25 { pt3dadd( -108.617, 916.562, -36.6561, 0.12 ) }
    apic_25 { pt3dadd( -110.339, 922.067, -36.1242, 0.12 ) }
    apic_25 { pt3dadd( -111.205, 924.459, -35.8844, 0.12 ) }
    apic_25 { pt3dadd( -111.68, 925.645, -35.7494, 0.12 ) }
    apic_25 { pt3dadd( -112.952, 928.721, -35.3909, 0.12 ) }
    apic_25 { pt3dadd( -114.217, 931.862, -35.0605, 0.12 ) }
    apic_25 { pt3dadd( -115.289, 934.636, -34.8411, 0.12 ) }
    apic_25 { pt3dadd( -116.957, 938.881, -34.626, 0.12 ) }
    apic_25 { pt3dadd( -117.796, 941.094, -34.5341, 0.12 ) }
    apic_25 { pt3dadd( -119.662, 946.318, -34.3318, 0.12 ) }
    apic_25 { pt3dadd( -120.652, 949.409, -34.2381, 0.12 ) }
    apic_25 { pt3dadd( -121.819, 953.567, -34.041, 0.12 ) }
    apic_25 { pt3dadd( -122.513, 956.23, -33.7831, 0.12 ) }
    apic_25 { pt3dadd( -123.147, 958.775, -33.4458, 0.12 ) }
    apic_25 { pt3dadd( -123.681, 960.978, -33.1075, 0.12 ) }
    apic_25 { pt3dadd( -124.355, 963.83, -32.6123, 0.12 ) }
    apic_25 { pt3dadd( -125.439, 968.455, -31.7726, 0.12 ) }
    apic_25 { pt3dadd( -126.749, 973.667, -30.8194, 0.12 ) }
    apic_25 { pt3dadd( -127.758, 977.457, -30.1728, 0.12 ) }
    apic_25 { pt3dadd( -128.928, 981.622, -29.5478, 0.12 ) }
    apic_25 { pt3dadd( -129.754, 984.475, -29.1585, 0.12 ) }
    apic_25 { pt3dadd( -130.661, 987.41, -28.7638, 0.12 ) }
    apic_25 { pt3dadd( -132.624, 993.471, -27.9999, 0.12 ) }
    apic_25 { pt3dadd( -134.388, 998.785, -27.3723, 0.12 ) }
    apic_25 { pt3dadd( -135.867, 1003.36, -26.7182, 0.12 ) }
    apic_25 { pt3dadd( -136.524, 1005.52, -26.3373, 0.12 ) }
    apic_25 { pt3dadd( -137.813, 1009.95, -25.4609, 0.12 ) }
    apic_25 { pt3dadd( -138.843, 1013.72, -24.6579, 0.12 ) }
    apic_25 { pt3dadd( -139.487, 1016.31, -24.0437, 0.12 ) }
    apic_25 { pt3dadd( -140.592, 1021.04, -22.9149, 0.12 ) }
    apic_25 { pt3dadd( -141.125, 1023.43, -22.3775, 0.12 ) }
    apic_25 { pt3dadd( -142.072, 1027.91, -21.4641, 0.12 ) }
    apic_25 { pt3dadd( -143.078, 1032.73, -20.5836, 0.12 ) }
    apic_25 { pt3dadd( -144.07, 1037.24, -19.806, 0.12 ) }
    apic_25 { pt3dadd( -145.08, 1041.6, -19.1325, 0.12 ) }
    apic_25 { pt3dadd( -145.872, 1044.73, -18.7606, 0.12 ) }
    apic_25 { pt3dadd( -147.08, 1049.42, -18.2632, 0.12 ) }
    apic_25 { pt3dadd( -147.86, 1052.56, -17.9189, 0.12 ) }
    apic_25 { pt3dadd( -148.535, 1055.44, -17.5526, 0.12 ) }
    apic_25 { pt3dadd( -149.169, 1058.01, -17.1253, 0.12 ) }
    apic_25 { pt3dadd( -149.709, 1060.13, -16.6378, 0.12 ) }
    apic_25 { pt3dadd( -150.662, 1063.84, -15.4604, 0.12 ) }
    apic_25 { pt3dadd( -151.238, 1066.19, -14.4962, 0.12 ) }
    apic_25 { pt3dadd( -152.086, 1069.85, -12.758, 0.12 ) }
    apic_25 { pt3dadd( -152.725, 1072.82, -11.2049, 0.12 ) }
    apic_25 { pt3dadd( -153.231, 1074.87, -9.99361, 0.12 ) }
    apic_25 { pt3dadd( -154.134, 1078.16, -7.92087, 0.12 ) }
    apic_25 { pt3dadd( -154.689, 1079.75, -6.87078, 0.12 ) }
    apic_25 { pt3dadd( -155.518, 1081.98, -5.35262, 0.12 ) }
    apic_25 { pt3dadd( -156.551, 1084.62, -3.56419, 0.12 ) }
    apic_25 { pt3dadd( -157.818, 1088.04, -1.29301, 0.12 ) }
    apic_25 { pt3dadd( -158.646, 1090.1, 0.0672627, 0.12 ) }
    apic_25 { pt3dadd( -160.061, 1093.34, 2.08774, 0.12 ) }
    apic_25 { pt3dadd( -160.864, 1094.92, 3.12756, 0.12 ) }
    // Section: apic_24, id: apic_24, parent: apic_23 (entry count 84/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( -95.5935, 855.031, -40.5203, 0.24 ) }
    apic_24 { pt3dadd( -94.7896, 856.967, -38.6787, 0.24 ) }
    apic_24 { pt3dadd( -93.2905, 859.888, -35.5623, 0.24 ) }
    apic_24 { pt3dadd( -92.5371, 861.304, -33.9708, 0.24 ) }
    apic_24 { pt3dadd( -91.0163, 863.631, -31.2429, 0.24 ) }
    apic_24 { pt3dadd( -89.5281, 865.571, -28.8161, 0.24 ) }
    apic_24 { pt3dadd( -87.8127, 867.521, -26.3729, 0.24 ) }
    apic_24 { pt3dadd( -86.521, 868.658, -24.8147, 0.24 ) }
    apic_24 { pt3dadd( -85.1298, 869.646, -23.3625, 0.24 ) }
    apic_24 { pt3dadd( -82.9517, 871.03, -21.4178, 0.24 ) }
    apic_24 { pt3dadd( -81.1221, 872.215, -19.9228, 0.24 ) }
    apic_24 { pt3dadd( -78.6047, 873.924, -17.8125, 0.24 ) }
    apic_24 { pt3dadd( -76.7788, 875.292, -16.1393, 0.24 ) }
    apic_24 { pt3dadd( -75.7173, 876.138, -15.102, 0.24 ) }
    apic_24 { pt3dadd( -73.5866, 878.154, -12.6894, 0.24 ) }
    apic_24 { pt3dadd( -72.0017, 880.104, -10.4952, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    apic_24 { pt3dadd( -71.1652, 881.326, -9.21058, 0.12 ) }
    apic_24 { pt3dadd( -70.1432, 883.339, -7.13952, 0.12 ) }
    apic_24 { pt3dadd( -69.4013, 885.375, -5.18857, 0.12 ) }
    apic_24 { pt3dadd( -68.6217, 888.315, -2.55978, 0.12 ) }
    apic_24 { pt3dadd( -68.335, 889.843, -1.27827, 0.12 ) }
    apic_24 { pt3dadd( -68.1686, 891.614, 0.116196, 0.12 ) }
    apic_24 { pt3dadd( -68.1962, 894.65, 2.29954, 0.12 ) }
    apic_24 { pt3dadd( -68.4886, 896.219, 3.45978, 0.12 ) }
    apic_24 { pt3dadd( -69.1157, 898.539, 5.16325, 0.12 ) }
    apic_24 { pt3dadd( -69.532, 899.705, 6.05752, 0.12 ) }
    apic_24 { pt3dadd( -70.3634, 901.553, 7.58358, 0.12 ) }
    apic_24 { pt3dadd( -71.0104, 902.681, 8.56851, 0.12 ) }
    apic_24 { pt3dadd( -73.1298, 906.087, 11.6481, 0.12 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, apic_0, axon_0, apic_2, apic_1, axon_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    apic_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    apic_2 ModelViewParmSubset_1.append()
    apic_1 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()
    apic_4 ModelViewParmSubset_1.append()
    apic_3 ModelViewParmSubset_1.append()
    apic_8 ModelViewParmSubset_1.append()
    apic_5 ModelViewParmSubset_1.append()
    apic_10 ModelViewParmSubset_1.append()
    apic_9 ModelViewParmSubset_1.append()
    apic_7 ModelViewParmSubset_1.append()
    apic_6 ModelViewParmSubset_1.append()
    apic_14 ModelViewParmSubset_1.append()
    apic_11 ModelViewParmSubset_1.append()
    apic_16 ModelViewParmSubset_1.append()
    apic_15 ModelViewParmSubset_1.append()
    apic_13 ModelViewParmSubset_1.append()
    apic_12 ModelViewParmSubset_1.append()
    apic_26 ModelViewParmSubset_1.append()
    apic_17 ModelViewParmSubset_1.append()
    apic_19 ModelViewParmSubset_1.append()
    apic_18 ModelViewParmSubset_1.append()
    apic_21 ModelViewParmSubset_1.append()
    apic_20 ModelViewParmSubset_1.append()
    apic_23 ModelViewParmSubset_1.append()
    apic_22 ModelViewParmSubset_1.append()
    apic_25 ModelViewParmSubset_1.append()
    apic_24 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_2 = new SectionList()
    soma_0 ModelViewParmSubset_2.append()
    axon_0 ModelViewParmSubset_2.append()
    axon_1 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    apic_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    apic_2 ModelViewParmSubset_3.append()
    apic_1 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    apic_4 ModelViewParmSubset_3.append()
    apic_3 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    apic_8 ModelViewParmSubset_3.append()
    apic_5 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    apic_10 ModelViewParmSubset_3.append()
    apic_9 ModelViewParmSubset_3.append()
    apic_7 ModelViewParmSubset_3.append()
    apic_6 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    apic_14 ModelViewParmSubset_3.append()
    apic_11 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    apic_16 ModelViewParmSubset_3.append()
    apic_15 ModelViewParmSubset_3.append()
    apic_13 ModelViewParmSubset_3.append()
    apic_12 ModelViewParmSubset_3.append()
    apic_26 ModelViewParmSubset_3.append()
    apic_17 ModelViewParmSubset_3.append()
    apic_19 ModelViewParmSubset_3.append()
    apic_18 ModelViewParmSubset_3.append()
    apic_21 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_20 ModelViewParmSubset_3.append()
    apic_23 ModelViewParmSubset_3.append()
    apic_22 ModelViewParmSubset_3.append()
    apic_25 ModelViewParmSubset_3.append()
    apic_24 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_4 = new SectionList()
    apic_0 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_26 ModelViewParmSubset_4.append()
    apic_17 ModelViewParmSubset_4.append()
    apic_19 ModelViewParmSubset_4.append()
    apic_18 ModelViewParmSubset_4.append()
    apic_21 ModelViewParmSubset_4.append()
    apic_20 ModelViewParmSubset_4.append()
    apic_23 ModelViewParmSubset_4.append()
    apic_22 ModelViewParmSubset_4.append()
    apic_25 ModelViewParmSubset_4.append()
    apic_24 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_5 = new SectionList()
    axon_0 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()

    // Group: {name=ModelViewParmSubset_6, groups=[], sections=[soma_0, apic_0, apic_2, apic_1, apic_4, apic_3, apic_8, apic_5, apic_10, apic_9, apic_7, apic_6, apic_14, apic_11, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_6 = new SectionList()
    soma_0 ModelViewParmSubset_6.append()
    apic_0 ModelViewParmSubset_6.append()
    apic_2 ModelViewParmSubset_6.append()
    apic_1 ModelViewParmSubset_6.append()
    apic_4 ModelViewParmSubset_6.append()
    apic_3 ModelViewParmSubset_6.append()
    apic_8 ModelViewParmSubset_6.append()
    apic_5 ModelViewParmSubset_6.append()
    apic_10 ModelViewParmSubset_6.append()
    apic_9 ModelViewParmSubset_6.append()
    apic_7 ModelViewParmSubset_6.append()
    apic_6 ModelViewParmSubset_6.append()
    apic_14 ModelViewParmSubset_6.append()
    apic_11 ModelViewParmSubset_6.append()
    apic_16 ModelViewParmSubset_6.append()
    apic_15 ModelViewParmSubset_6.append()
    apic_13 ModelViewParmSubset_6.append()
    apic_12 ModelViewParmSubset_6.append()
    apic_26 ModelViewParmSubset_6.append()
    apic_17 ModelViewParmSubset_6.append()
    apic_19 ModelViewParmSubset_6.append()
    apic_18 ModelViewParmSubset_6.append()
    apic_21 ModelViewParmSubset_6.append()
    apic_20 ModelViewParmSubset_6.append()
    apic_23 ModelViewParmSubset_6.append()
    apic_22 ModelViewParmSubset_6.append()
    apic_25 ModelViewParmSubset_6.append()
    apic_24 ModelViewParmSubset_6.append()

    // Group: {name=ModelViewParmSubset_7, groups=[], sections=[apic_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, apic_2, apic_1, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, apic_4, apic_3, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, apic_8, apic_5, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, apic_10, apic_9, apic_7, apic_6, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, apic_14, apic_11, dend_32, dend_31, apic_16, apic_15, apic_13, apic_12, apic_26, apic_17, apic_19, apic_18, apic_21, apic_20, apic_23, apic_22, apic_25, apic_24]}
    ModelViewParmSubset_7 = new SectionList()
    apic_0 ModelViewParmSubset_7.append()
    dend_43 ModelViewParmSubset_7.append()
    dend_42 ModelViewParmSubset_7.append()
    dend_37 ModelViewParmSubset_7.append()
    dend_36 ModelViewParmSubset_7.append()
    dend_21 ModelViewParmSubset_7.append()
    dend_18 ModelViewParmSubset_7.append()
    dend_15 ModelViewParmSubset_7.append()
    dend_0 ModelViewParmSubset_7.append()
    apic_2 ModelViewParmSubset_7.append()
    apic_1 ModelViewParmSubset_7.append()
    dend_39 ModelViewParmSubset_7.append()
    dend_38 ModelViewParmSubset_7.append()
    dend_33 ModelViewParmSubset_7.append()
    dend_22 ModelViewParmSubset_7.append()
    dend_20 ModelViewParmSubset_7.append()
    dend_19 ModelViewParmSubset_7.append()
    dend_17 ModelViewParmSubset_7.append()
    dend_16 ModelViewParmSubset_7.append()
    dend_10 ModelViewParmSubset_7.append()
    dend_1 ModelViewParmSubset_7.append()
    apic_4 ModelViewParmSubset_7.append()
    apic_3 ModelViewParmSubset_7.append()
    dend_41 ModelViewParmSubset_7.append()
    dend_40 ModelViewParmSubset_7.append()
    dend_35 ModelViewParmSubset_7.append()
    dend_34 ModelViewParmSubset_7.append()
    dend_24 ModelViewParmSubset_7.append()
    dend_23 ModelViewParmSubset_7.append()
    dend_12 ModelViewParmSubset_7.append()
    dend_11 ModelViewParmSubset_7.append()
    dend_9 ModelViewParmSubset_7.append()
    dend_2 ModelViewParmSubset_7.append()
    apic_8 ModelViewParmSubset_7.append()
    apic_5 ModelViewParmSubset_7.append()
    dend_28 ModelViewParmSubset_7.append()
    dend_25 ModelViewParmSubset_7.append()
    dend_14 ModelViewParmSubset_7.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_13 ModelViewParmSubset_7.append()
    dend_6 ModelViewParmSubset_7.append()
    dend_3 ModelViewParmSubset_7.append()
    apic_10 ModelViewParmSubset_7.append()
    apic_9 ModelViewParmSubset_7.append()
    apic_7 ModelViewParmSubset_7.append()
    apic_6 ModelViewParmSubset_7.append()
    dend_30 ModelViewParmSubset_7.append()
    dend_29 ModelViewParmSubset_7.append()
    dend_27 ModelViewParmSubset_7.append()
    dend_26 ModelViewParmSubset_7.append()
    dend_8 ModelViewParmSubset_7.append()
    dend_7 ModelViewParmSubset_7.append()
    dend_5 ModelViewParmSubset_7.append()
    dend_4 ModelViewParmSubset_7.append()
    apic_14 ModelViewParmSubset_7.append()
    apic_11 ModelViewParmSubset_7.append()
    dend_32 ModelViewParmSubset_7.append()
    dend_31 ModelViewParmSubset_7.append()
    apic_16 ModelViewParmSubset_7.append()
    apic_15 ModelViewParmSubset_7.append()
    apic_13 ModelViewParmSubset_7.append()
    apic_12 ModelViewParmSubset_7.append()
    apic_26 ModelViewParmSubset_7.append()
    apic_17 ModelViewParmSubset_7.append()
    apic_19 ModelViewParmSubset_7.append()
    apic_18 ModelViewParmSubset_7.append()
    apic_21 ModelViewParmSubset_7.append()
    apic_20 ModelViewParmSubset_7.append()
    apic_23 ModelViewParmSubset_7.append()
    apic_22 ModelViewParmSubset_7.append()
    apic_25 ModelViewParmSubset_7.append()
    apic_24 ModelViewParmSubset_7.append()

    // Group: {name=ModelViewParmSubset_8, groups=[], sections=[soma_0, dend_43, dend_42, dend_37, dend_36, dend_21, dend_18, dend_15, dend_0, dend_39, dend_38, dend_33, dend_22, dend_20, dend_19, dend_17, dend_16, dend_10, dend_1, dend_41, dend_40, dend_35, dend_34, dend_24, dend_23, dend_12, dend_11, dend_9, dend_2, dend_28, dend_25, dend_14, dend_13, dend_6, dend_3, dend_30, dend_29, dend_27, dend_26, dend_8, dend_7, dend_5, dend_4, dend_32, dend_31]}
    ModelViewParmSubset_8 = new SectionList()
    soma_0 ModelViewParmSubset_8.append()
    dend_43 ModelViewParmSubset_8.append()
    dend_42 ModelViewParmSubset_8.append()
    dend_37 ModelViewParmSubset_8.append()
    dend_36 ModelViewParmSubset_8.append()
    dend_21 ModelViewParmSubset_8.append()
    dend_18 ModelViewParmSubset_8.append()
    dend_15 ModelViewParmSubset_8.append()
    dend_0 ModelViewParmSubset_8.append()
    dend_39 ModelViewParmSubset_8.append()
    dend_38 ModelViewParmSubset_8.append()
    dend_33 ModelViewParmSubset_8.append()
    dend_22 ModelViewParmSubset_8.append()
    dend_20 ModelViewParmSubset_8.append()
    dend_19 ModelViewParmSubset_8.append()
    dend_17 ModelViewParmSubset_8.append()
    dend_16 ModelViewParmSubset_8.append()
    dend_10 ModelViewParmSubset_8.append()
    dend_1 ModelViewParmSubset_8.append()
    dend_41 ModelViewParmSubset_8.append()
    dend_40 ModelViewParmSubset_8.append()
    dend_35 ModelViewParmSubset_8.append()
    dend_34 ModelViewParmSubset_8.append()
    dend_24 ModelViewParmSubset_8.append()
    dend_23 ModelViewParmSubset_8.append()
    dend_12 ModelViewParmSubset_8.append()
    dend_11 ModelViewParmSubset_8.append()
    dend_9 ModelViewParmSubset_8.append()
    dend_2 ModelViewParmSubset_8.append()
    dend_28 ModelViewParmSubset_8.append()
    dend_25 ModelViewParmSubset_8.append()
    dend_14 ModelViewParmSubset_8.append()
    dend_13 ModelViewParmSubset_8.append()
    dend_6 ModelViewParmSubset_8.append()
    dend_3 ModelViewParmSubset_8.append()
    dend_30 ModelViewParmSubset_8.append()
    dend_29 ModelViewParmSubset_8.append()
    dend_27 ModelViewParmSubset_8.append()
    dend_26 ModelViewParmSubset_8.append()
    dend_8 ModelViewParmSubset_8.append()
    dend_7 ModelViewParmSubset_8.append()
    dend_5 ModelViewParmSubset_8.append()
    dend_4 ModelViewParmSubset_8.append()
    dend_32 ModelViewParmSubset_8.append()
    dend_31 ModelViewParmSubset_8.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_1 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_9 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_47 = new SectionList()
    apic_7 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_48 = new SectionList()
    apic_6 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_57 = new SectionList()
    apic_14 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_58 = new SectionList()
    apic_11 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_61 = new SectionList()
    apic_16 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_62 = new SectionList()
    apic_15 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[apic_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    apic_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[apic_17]}
    OneSecGrp_SectionRef_66 = new SectionList()
    apic_17 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[apic_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    apic_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[apic_18]}
    OneSecGrp_SectionRef_68 = new SectionList()
    apic_18 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[apic_20]}
    OneSecGrp_SectionRef_70 = new SectionList()
    apic_20 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[apic_22]}
    OneSecGrp_SectionRef_72 = new SectionList()
    apic_22 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[apic_25]}
    OneSecGrp_SectionRef_73 = new SectionList()
    apic_25 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[apic_24]}
    OneSecGrp_SectionRef_74 = new SectionList()
    apic_24 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    apic_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_4 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_5 OneSecGrp_SectionRef_38.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_8 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_63 = new SectionList()
    apic_13 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_64 = new SectionList()
    apic_12 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[apic_21]}
    OneSecGrp_SectionRef_69 = new SectionList()
    apic_21 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[apic_23]}
    OneSecGrp_SectionRef_71 = new SectionList()
    apic_23 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16, apic_17, apic_18, apic_19, apic_20, apic_21, apic_22, apic_23, apic_24, apic_25, apic_26], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()
    apic_17 apical.append()
    apic_18 apical.append()
    apic_19 apical.append()
    apic_20 apical.append()
    apic_21 apical.append()
    apic_22 apical.append()
    apic_23 apical.append()
    apic_24 apical.append()
    apic_25 apical.append()
    apic_26 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_4, apic_4, apic_4, apic_4, apic_4, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_19, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_18, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_19 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 2.0  // units: uF/cm2
    forsec apical cm = 2.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec all {
        insert pas_nml2
        gmax_pas_nml2 = 3.0000001E-5  // units: S cm-2
        e_pas_nml2 = -75.0  // units: mV
    }
    forsec basal {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.025689999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.039763  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 9.999999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.288755  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.029455999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 6.71E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.098377  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.957198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 1.936176  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.072928995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.0038689997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.97688496  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert Ih
        gmax_Ih = 8.0E-5  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_HVA
        gmax_Ca_HVA = 6.8399997E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 6.9999996E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_HVA
        gmax_Ca_HVA = 4.59E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0055919997  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cADpyr_231_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cADpyr_231_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cADpyr_231_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cADpyr_231_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003100))*0.000080))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_43 nseg = 7
    dend_42 nseg = 5
    dend_36 nseg = 7
    apic_1 nseg = 11
    dend_38 nseg = 3
    dend_33 nseg = 5
    dend_20 nseg = 19
    dend_19 nseg = 19
    dend_17 nseg = 9
    dend_16 nseg = 19
    apic_3 nseg = 9
    dend_41 nseg = 7
    dend_40 nseg = 19
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_24 nseg = 5
    dend_23 nseg = 11
    dend_12 nseg = 7
    dend_11 nseg = 5
    dend_9 nseg = 13
    dend_14 nseg = 11
    dend_13 nseg = 7
    dend_3 nseg = 3
    apic_9 nseg = 11
    apic_7 nseg = 5
    apic_6 nseg = 5
    dend_29 nseg = 13
    dend_27 nseg = 5
    dend_8 nseg = 3
    dend_7 nseg = 23
    dend_5 nseg = 11
    dend_4 nseg = 7
    apic_14 nseg = 5
    apic_11 nseg = 11
    dend_32 nseg = 9
    dend_31 nseg = 5
    apic_16 nseg = 3
    apic_15 nseg = 9
    apic_26 nseg = 7
    apic_17 nseg = 7
    apic_19 nseg = 21
    apic_18 nseg = 33
    apic_20 nseg = 17
    apic_22 nseg = 11
    apic_25 nseg = 13
    apic_24 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cADpyr231_L6_UTPC_186e8dd6aa_0_0


