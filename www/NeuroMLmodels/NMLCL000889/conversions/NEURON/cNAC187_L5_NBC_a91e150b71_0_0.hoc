// Cell: cNAC187_L5_NBC_a91e150b71_0_0
/*
{
  "id" : "cNAC187_L5_NBC_a91e150b71_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-0.277629, -9.42436, 0.0, 2.9454", "-0.225418, -8.4907, 0.0, 4.92187", "-0.173208, -7.55704, 0.0, 6.69655", "-0.120997, -6.62338, 0.0, 8.28957", "-0.0687862, -5.68972, 0.0, 9.36061", "-0.0165755, -4.75606, 0.0, 10.2397", "0.0356352, -3.8224, 0.0, 11.0293", "0.087846, -2.88873, 0.0, 11.6457", "0.140057, -1.95507, 0.0, 12.2691", "0.192267, -1.02141, 0.0, 12.5588", "0.244478, -0.0877535, 0.0, 12.7806", "0.296689, 0.845907, 0.0, 13.0398", "0.3489, 1.77957, 0.0, 13.1732", "0.40111, 2.71323, 0.0, 13.0581", "0.453321, 3.64689, 0.0, 12.8607", "0.505532, 4.58055, 0.0, 12.1633", "0.557743, 5.51421, 0.0, 11.3807", "0.609953, 6.44787, 0.0, 10.3357", "0.662164, 7.38153, 0.0, 8.86929", "0.714375, 8.31519, 0.0, 6.73974", "0.766585, 9.24885, 0.0, 3.85991" ]
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-0.0596826, 9.24235, 5.51, 1.4", "-0.0596826, 9.24235, 5.51, 1.4", "-0.430932, 10.8717, 5.8614, 1.47", "-0.687436, 12.1013, 6.11602, 1.47", "-0.907259, 13.3694, 6.36815, 1.55", "-1.03878, 14.3089, 6.55961, 1.55", "-1.15963, 15.3237, 6.75683, 1.55", "-1.21452, 16.0051, 6.88246, 1.55", "-1.25167, 16.9071, 7.04864, 1.55", "-1.27058, 17.9722, 7.24613, 1.55", "-1.2988, 19.2091, 7.50496, 1.92", "-1.37109, 20.6785, 7.84641, 2.14", "-1.49046, 22.1341, 8.22137, 1.18", "-1.62685, 23.3245, 8.56181, 1.25", "-1.79209, 24.5948, 8.94698, 1.25", "-2.03936, 26.1696, 9.45059, 1.33", "-2.30194, 27.6121, 9.94012, 1.47", "-2.56128, 28.8503, 10.4137, 1.77", "-2.86975, 30.0651, 10.9153, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-0.299673, -8.88065, 3.35, 2.29", "-0.299673, -8.88065, 3.35, 2.29", "-0.604306, -9.95968, 3.83748, 1.62", "-0.842286, -11.0353, 4.30962, 1.4", "-1.0146, -11.9646, 4.67078, 1.4", "-1.15128, -12.6525, 4.90527, 1.25", "-1.31644, -13.4008, 5.12735, 1.25", "-1.49855, -14.2197, 5.32902, 1.18", "-1.60828, -14.7582, 5.42886, 1.18", "-1.83327, -16.0415, 5.62082, 1.55", "-2.02362, -17.1402, 5.76029, 1.62", "-2.23275, -18.2122, 5.88343, 1.47", "-2.48796, -19.384, 5.9901, 1.47", "-2.69908, -20.2922, 6.07312, 1.47", "-2.92472, -21.3156, 6.15953, 1.47", "-3.04194, -21.9978, 6.22991, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.04042, 8.08735, -5.24, 2.43", "5.04042, 8.08735, -5.24, 2.43", "6.38094, 9.08375, -5.1066, 1.55", "7.68362, 10.075, -5.00033, 1.47", "8.60034, 10.7868, -4.94474, 1.25", "10.3461, 12.1556, -4.79254, 1.11", "11.4079, 12.9881, -4.66482, 1.25", "12.7593, 14.0641, -4.42717, 1.4", "14.3106, 15.3156, -4.06187, 1.62", "16.046, 16.6801, -3.58516, 1.03", "17.3055, 17.5849, -3.19408, 0.88", "18.5722, 18.3725, -2.73941, 1.11", "20.0259, 19.1782, -2.11045, 0.88", "21.4031, 19.8675, -1.43648, 1.47", "22.1495, 20.2114, -1.01573, 1.33", "23.4797, 20.8017, -0.224233, 1.03", "24.735, 21.3993, 0.495343, 1.03", "25.7132, 21.9161, 1.03272, 1.18", "26.8718, 22.6258, 1.64716, 1.18", "28.3747, 23.6595, 2.39496, 1.4", "29.3171, 24.368, 2.81103, 1.03", "30.3114, 25.1647, 3.08168, 0.81", "31.2459, 25.8975, 3.1782, 0.74", "32.2801, 26.6763, 3.14362, 1.11", "33.6474, 27.6476, 2.97846, 1.11", "34.6324, 28.3013, 2.79011, 1.33", "36.7104, 29.6043, 2.43475, 1.33", "38.5431, 30.7313, 2.20686, 0.88", "40.0174, 31.6653, 2.12825, 1.11", "40.8291, 32.1992, 2.13917, 1.33", "42.0337, 33.0537, 2.26277, 1.33", "43.5681, 34.238, 2.55562, 0.96", "44.7852, 35.2217, 2.92619, 0.96", "46.0751, 36.3318, 3.41368, 1.4", "46.9254, 37.0896, 3.79794, 1.4", "47.9947, 38.0828, 4.30689, 1.4", "49.2251, 39.2492, 4.88773, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.129629, -10.3401, -2.13, 1.84", "-0.129629, -10.3401, -2.13, 1.84", "-0.607855, -11.4348, -2.01782, 1.55", "-0.945398, -12.3251, -1.94195, 1.47", "-1.47303, -14.0215, -1.77202, 1.47", "-1.85186, -15.5288, -1.61707, 1.25", "-2.03711, -16.5025, -1.52159, 1.18", "-2.18167, -17.6888, -1.41553, 1.33", "-2.26558, -19.1688, -1.2976, 1.7", "-2.25082, -20.7339, -1.19345, 1.4", "-2.17106, -21.9594, -1.12501, 1.18", "-1.986, -23.7453, -1.02164, 1.4", "-1.74967, -25.7223, -0.907568, 1.4", "-1.57163, -27.0573, -0.835848, 1.55", "-1.36273, -28.5278, -0.777362, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.330332, 1.55635, -10.46, 3.02", "0.330332, 1.55635, -10.46, 3.02", "-1.50797, 1.48845, -10.46, 3.32" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.450000292725816
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.766585, 9.24885, 0.0, 0.673131", "1.60408, 24.2255, 0.0, 0.673131", "2.44158, 39.2021, 0.0, 0.673131" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-2.86975, 30.0651, 10.9153, 2.21", "-3.00153, 31.4856, 11.8113, 2.21" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-2.86975, 30.0651, 10.9153, 0.59", "-3.48872, 30.3948, 11.7738, 0.59", "-4.38747, 30.8578, 12.8851, 0.59", "-5.035, 31.1748, 13.6374, 0.44", "-6.00942, 31.6246, 14.7121, 0.29", "-6.38847, 31.7885, 15.1021, 0.29", "-6.82, 31.9753, 15.5455, 0.29", "-7.26053, 32.1889, 15.9833, 0.44", "-7.70952, 32.4159, 16.3889, 0.66", "-8.36658, 32.7852, 17.0139, 0.66", "-8.82254, 33.0799, 17.508, 0.44", "-9.32483, 33.4458, 18.1216, 0.44", "-9.77122, 33.8316, 18.7839, 0.66", "-10.0059, 34.0751, 19.2037, 0.66", "-10.4211, 34.5661, 20.0544, 0.29", "-10.6795, 34.9014, 20.6602, 0.29", "-11.1369, 35.4681, 21.7376, 0.44", "-11.5877, 35.9425, 22.7009, 0.37", "-11.9757, 36.2816, 23.4671, 0.37", "-12.3929, 36.5861, 24.2013, 0.66", "-12.8626, 36.8795, 24.9336, 1.18", "-13.5171, 37.2301, 25.8065, 1.47", "-14.3204, 37.5985, 26.7398, 0.37", "-14.8382, 37.8062, 27.283, 0.29", "-15.4573, 38.0296, 27.8895, 0.29", "-16.085, 38.2455, 28.4733, 0.15", "-16.6173, 38.4374, 28.9574, 0.37", "-17.4807, 38.7808, 29.777, 0.22", "-18.023, 39.0311, 30.2833, 0.22", "-18.7978, 39.4266, 31.0156, 0.22", "-19.209, 39.6479, 31.4053, 0.96", "-19.9455, 40.0684, 32.0919, 1.84", "-20.4762, 40.397, 32.5877, 1.84", "-21.2607, 40.9323, 33.3049, 0.22", "-21.6973, 41.259, 33.6955, 0.22", "-22.0729, 41.5645, 34.0383, 0.22", "-22.4475, 41.8609, 34.375, 0.22", "-22.7045, 42.0496, 34.5958, 0.22", "-22.8731, 42.1633, 34.7352, 0.22", "-23.2137, 42.3835, 35.0448, 0.52", "-23.492, 42.5739, 35.3001, 1.03", "-23.8127, 42.822, 35.6223, 1.25", "-24.3687, 43.2806, 36.1756, 0.81", "-24.8559, 43.7162, 36.6491, 0.22", "-25.1544, 44.0087, 36.9692, 0.22", "-25.5088, 44.4093, 37.4217, 0.59", "-26.1039, 45.206, 38.2666, 0.07", "-26.2758, 45.4882, 38.533, 0.15", "-26.6314, 46.1985, 39.099, 0.15", "-27.1331, 47.373, 39.8975, 0.07", "-27.564, 48.4699, 40.5311, 0.07", "-27.7564, 49.0258, 40.8205, 0.07", "-28.0116, 49.8473, 41.1974, 0.07", "-28.3253, 50.9282, 41.6385, 0.07", "-28.532, 51.6812, 41.9136, 0.07", "-28.7295, 52.386, 42.1331, 0.07", "-28.9887, 53.2133, 42.3921, 0.22", "-29.1475, 53.6662, 42.562, 0.44", "-29.4499, 54.3982, 42.8925, 0.07", "-29.8368, 55.225, 43.3426, 0.07", "-30.0381, 55.6149, 43.5811, 0.07", "-30.3378, 56.1253, 43.909, 0.37", "-30.4562, 56.3011, 44.0215, 0.37", "-30.8454, 56.8407, 44.3979, 0.07", "-31.2891, 57.413, 44.8063, 0.07", "-31.4693, 57.6386, 44.9548, 0.37", "-32.0086, 58.3447, 45.3733, 1.11", "-32.3373, 58.811, 45.6225, 0.81", "-32.9461, 59.715, 46.0517, 0.07", "-33.2677, 60.1909, 46.2535, 0.07", "-33.6238, 60.698, 46.4602, 0.59", "-34.2543, 61.5823, 46.8371, 0.15", "-34.9884, 62.5682, 47.2828, 0.15", "-35.5091, 63.2068, 47.6025, 0.15", "-36.0933, 63.8533, 47.9786, 0.44", "-36.7958, 64.5599, 48.4928, 0.15", "-37.14, 64.8569, 48.7364, 0.15", "-37.7486, 65.3027, 49.1412, 0.74", "-38.624, 65.8753, 49.6767, 0.07", "-39.2984, 66.2878, 50.0471, 0.07", "-39.927, 66.6688, 50.3533, 0.07", "-40.9749, 67.2957, 50.7735, 0.07", "-41.7428, 67.7477, 50.9984, 0.52", "-42.1403, 67.9744, 51.0715, 0.52", "-43.102, 68.5132, 51.1584, 0.07", "-43.967, 69.0101, 51.174, 0.37", "-45.1312, 69.6738, 51.1543, 0.07", "-46.3977, 70.3771, 51.123, 0.07", "-47.3606, 70.8935, 51.056, 0.07", "-48.609, 71.5478, 50.9338, 0.07", "-50.0205, 72.2746, 50.7481, 0.07", "-50.7615, 72.6417, 50.6272, 0.07", "-51.5795, 73.0436, 50.481, 0.07", "-52.3989, 73.4531, 50.3587, 0.07", "-53.1498, 73.8316, 50.2654, 0.81" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.04194, -21.9978, 6.22991, 0.52", "-2.32954, -22.1247, 6.88994, 0.52", "-1.22027, -22.3572, 7.90042, 0.52", "-0.143806, -22.6392, 8.87861, 0.59", "0.979024, -23.0124, 9.91675, 0.59", "1.9503, -23.409, 10.8237, 0.59", "2.88953, -23.8806, 11.7095, 0.59", "3.90615, -24.5541, 12.7115, 0.59", "4.29304, -24.9399, 13.1105, 0.59", "4.73309, -25.5386, 13.5661, 0.59", "5.08384, -26.0987, 13.9271, 0.52", "5.55104, -26.8858, 14.407, 0.52", "6.0571, -27.7587, 14.9015, 0.59", "6.91091, -29.1141, 15.6438, 0.81", "7.89135, -30.4794, 16.4332, 0.52", "8.52078, -31.2644, 16.9016, 0.59", "9.28636, -32.1086, 17.4144, 0.81", "9.94579, -32.7575, 17.8226, 1.11", "11.37, -34.0504, 18.6204, 0.37", "12.3642, -34.888, 19.156, 0.59", "13.2385, -35.6007, 19.6159, 0.66", "14.5109, -36.5635, 20.2703, 0.37", "15.451, -37.1915, 20.7637, 0.37", "16.0001, -37.5065, 21.0949, 0.37", "16.8343, -37.935, 21.6893, 0.37", "17.4782, -38.2567, 22.2568, 0.96", "18.302, -38.6889, 23.1247, 0.96", "19.1444, -39.1885, 24.1438, 0.96", "20.4891, -40.1084, 25.9416, 0.66", "21.5475, -40.9261, 27.5201, 0.37", "22.5546, -41.8352, 29.2286, 0.37", "23.4188, -42.73, 30.914, 0.37", "23.7357, -43.1021, 31.6184, 0.37", "24.3192, -43.8579, 33.0477, 0.66", "24.9853, -44.7681, 34.7269, 0.66", "25.6015, -45.6052, 36.2337, 0.81", "26.4381, -46.7316, 38.1953, 0.88", "27.1967, -47.7601, 39.8973, 0.88", "28.0979, -48.9596, 41.7549, 0.37", "28.8959, -49.9932, 43.2458, 0.29", "29.3864, -50.6686, 44.0746, 0.29", "29.8903, -51.3915, 44.8454, 0.29", "30.5664, -52.4515, 45.8305, 0.52", "31.348, -53.7602, 46.9475, 0.96", "32.1964, -55.3297, 48.1924, 0.96", "32.8604, -56.6175, 49.2068, 0.29", "33.4585, -57.817, 50.1587, 0.29", "34.053, -59.0178, 51.1422, 0.29", "34.4804, -59.9153, 51.9028, 0.88", "34.9204, -60.9842, 52.7283, 2.21" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-3.04194, -21.9978, 6.22991, 0.96", "-3.76515, -23.3082, 6.51622, 0.96", "-4.71026, -25.1229, 6.98698, 0.81", "-5.40921, -26.7342, 7.52373, 0.74", "-6.05914, -28.4905, 8.24208, 0.88", "-6.66057, -30.3639, 9.11956, 0.88", "-6.82289, -30.9496, 9.39747, 0.88", "-7.00337, -31.8907, 9.86406, 0.66", "-7.30211, -33.866, 10.8745, 0.66", "-7.51456, -35.1581, 11.5609, 0.88", "-7.71839, -36.1995, 12.1255, 0.88", "-8.12467, -37.81, 13.0066, 1.03", "-8.57781, -39.3651, 13.829, 1.03", "-9.13848, -41.075, 14.6447, 0.88", "-9.73982, -42.7935, 15.3778, 0.59", "-10.0264, -43.6837, 15.7448, 0.44", "-10.5033, -45.3272, 16.4497, 1.03", "-10.7951, -46.4472, 16.9564, 1.03", "-11.0378, -47.5322, 17.4166, 1.03", "-11.3803, -49.3323, 18.1241, 0.88", "-11.7154, -51.2547, 18.818, 0.81", "-12.0832, -53.484, 19.5962, 1.03", "-12.3832, -55.2358, 20.1897, 1.47", "-12.7201, -57.085, 20.8301, 1.11", "-13.0652, -58.9218, 21.4584, 0.74", "-13.3189, -60.2921, 21.9036, 0.66", "-13.5616, -61.6455, 22.3235, 0.66", "-13.8626, -63.3591, 22.8416, 1.03", "-14.2591, -65.5617, 23.5018, 0.96", "-14.606, -67.3119, 24.0209, 0.81", "-14.9558, -68.8584, 24.4661, 1.11", "-15.4611, -70.7945, 25.0261, 0.74", "-15.9203, -72.412, 25.5427, 0.37", "-16.2738, -73.6039, 25.9768, 0.37", "-16.6198, -74.7553, 26.4468, 0.96", "-17.0267, -76.1069, 27.0352, 1.55", "-17.3049, -77.0375, 27.4463, 1.7", "-17.8929, -79.0578, 28.3347, 0.81", "-18.2846, -80.5068, 28.9763, 0.74", "-18.5793, -81.6863, 29.4773, 0.74", "-18.9408, -83.2929, 30.0825, 0.44", "-19.2954, -84.9981, 30.6282, 0.37", "-19.6215, -86.5384, 31.0347, 0.37", "-19.883, -87.6044, 31.2464, 0.37", "-20.288, -89.0473, 31.4801, 0.74", "-20.7279, -90.486, 31.6754, 1.03", "-20.8873, -91.019, 31.7523, 1.03", "-21.2803, -92.4312, 31.9552, 0.59", "-21.5279, -93.4003, 32.1163, 0.59", "-21.928, -95.1164, 32.4917, 0.81", "-22.2469, -96.8324, 33.013, 0.52", "-22.42, -98.1786, 33.5302, 0.96", "-22.5299, -99.6422, 34.158, 1.25", "-22.5674, -101.482, 34.9909, 0.66", "-22.5777, -103.339, 35.8233, 0.29", "-22.5826, -104.995, 36.5955, 0.29", "-22.6258, -106.284, 37.1962, 0.29", "-22.6813, -106.925, 37.478, 0.74", "-22.8624, -108.155, 37.9841, 0.96", "-23.4002, -110.511, 38.8126, 0.22", "-23.858, -111.93, 39.2308, 0.22", "-24.31, -113.056, 39.5209, 0.52", "-24.6745, -113.863, 39.7242, 1.03", "-25.0993, -114.762, 39.9683, 1.11", "-25.6531, -115.895, 40.3112, 0.59", "-26.2626, -117.114, 40.7258, 0.22", "-26.616, -117.803, 40.9647, 0.22", "-26.9004, -118.37, 41.1709, 0.22", "-27.2567, -119.105, 41.4355, 0.44", "-27.723, -120.114, 41.7808, 0.96", "-28.2383, -121.268, 42.1531, 0.96", "-28.637, -122.16, 42.4392, 0.44", "-29.2679, -123.569, 42.9154, 0.22", "-29.6139, -124.37, 43.2019, 0.59", "-29.8989, -125.064, 43.4517, 0.59", "-30.3462, -126.233, 43.8585, 0.15", "-30.7468, -127.432, 44.2958, 0.15", "-31.0738, -128.619, 44.7891, 0.15", "-31.358, -129.78, 45.2877, 0.52", "-31.5186, -130.491, 45.6166, 1.33", "-31.7714, -131.648, 46.1821, 1.55", "-32.0956, -133.077, 46.88, 1.18", "-32.6779, -135.324, 47.9344, 0.37", "-33.1981, -137.023, 48.7041, 0.22", "-33.7215, -138.478, 49.3459, 0.22", "-34.2818, -139.861, 49.9457, 0.37", "-34.9619, -141.358, 50.5634, 0.96", "-35.6964, -142.822, 51.1272, 0.22", "-36.3021, -143.93, 51.5193, 0.22", "-37.0813, -145.311, 51.9849, 0.22", "-37.5848, -146.193, 52.2485, 0.37", "-38.1056, -147.117, 52.5135, 0.88", "-38.8256, -148.543, 52.9525, 0.88", "-39.6706, -150.458, 53.5615, 0.22", "-40.0462, -151.431, 53.8782, 0.44", "-40.4619, -152.612, 54.2735, 0.88", "-40.8371, -153.716, 54.6467, 0.37", "-41.5771, -155.865, 55.369, 0.15", "-42.1305, -157.435, 55.8704, 0.15", "-42.525, -158.646, 56.2721, 0.15", "-42.715, -159.274, 56.4812, 0.29", "-43.044, -160.43, 56.8753, 0.96", "-43.4018, -161.79, 57.3506, 0.29", "-43.7034, -163.017, 57.7897, 0.15", "-44.0087, -164.509, 58.3651, 0.15", "-44.2138, -165.667, 58.8332, 0.15", "-44.4318, -167.013, 59.3805, 0.15", "-44.5988, -168.048, 59.7955, 0.15", "-44.8279, -169.345, 60.3038, 0.29", "-45.069, -170.422, 60.711, 0.81", "-45.4874, -171.939, 61.242, 1.11", "-45.9314, -173.349, 61.7092, 0.29", "-46.4534, -174.862, 62.1636, 0.15", "-46.9518, -176.199, 62.5253, 0.15", "-47.4715, -177.523, 62.838, 0.15", "-47.8274, -178.409, 63.0223, 0.15", "-48.0216, -178.89, 63.1065, 0.37", "-48.3083, -179.612, 63.253, 0.88", "-48.5539, -180.181, 63.3912, 1.11", "-49.1178, -181.323, 63.718, 0.29", "-49.7326, -182.354, 64.077, 0.15", "-50.1762, -182.993, 64.3281, 0.15", "-51.1894, -184.238, 64.8402, 0.15", "-51.8625, -184.97, 65.1584, 0.59", "-52.6027, -185.713, 65.4864, 0.59", "-54.4159, -187.4, 66.2076, 0.15", "-55.545, -188.392, 66.5652, 0.15", "-56.8172, -189.483, 66.872, 0.15", "-57.1958, -189.804, 66.9269, 0.37", "-58.321, -190.796, 67.0345, 0.96", "-59.3049, -191.689, 67.0848, 0.22", "-60.2075, -192.556, 67.0919, 0.22", "-60.6605, -193.054, 67.1115, 0.22", "-61.0915, -193.608, 67.1468, 0.44", "-61.5904, -194.247, 67.1809, 0.81", "-62.3682, -195.194, 67.2362, 0.22", "-63.1225, -196.064, 67.3214, 0.29", "-64.03, -197.074, 67.4558, 0.22", "-65.1099, -198.219, 67.6133, 0.88", "-66.5003, -199.605, 67.825, 0.07", "-67.2809, -200.35, 67.9487, 0.07", "-68.2583, -201.225, 68.0896, 0.15", "-69.4965, -202.266, 68.2626, 0.07", "-69.9238, -202.603, 68.3252, 0.29", "-70.8334, -203.331, 68.516, 0.44", "-71.5476, -203.929, 68.6887, 0.15", "-72.4901, -204.737, 68.9091, 0.15", "-73.0207, -205.19, 69.0231, 0.37", "-73.6548, -205.735, 69.157, 0.44", "-74.6564, -206.643, 69.3661, 0.15", "-75.219, -207.184, 69.4894, 0.15", "-75.6915, -207.644, 69.6155, 0.37", "-76.0897, -208.052, 69.7432, 0.52", "-76.8595, -208.877, 69.9684, 0.15", "-77.1468, -209.201, 70.047, 0.15", "-77.8497, -210.035, 70.2324, 0.52", "-78.8741, -211.313, 70.5029, 0.15", "-79.4912, -212.122, 70.6524, 0.52", "-80.4568, -213.468, 70.8676, 0.15", "-80.7628, -213.919, 70.9119, 0.37", "-80.9803, -214.255, 70.9179, 0.81", "-81.2739, -214.729, 70.8759, 1.03", "-81.789, -215.592, 70.7224, 0.07", "-82.4186, -216.579, 70.5023, 0.15", "-83.0797, -217.484, 70.2502, 0.29", "-83.7449, -218.293, 69.9542, 0.15", "-84.345, -218.946, 69.653, 0.15", "-84.7671, -219.366, 69.4156, 0.29", "-85.3695, -219.942, 69.0479, 0.37", "-86.3032, -220.797, 68.4554, 0.22", "-87.1625, -221.57, 67.9191, 0.22", "-88.082, -222.381, 67.3411, 0.22", "-88.5904, -222.818, 67.0151, 0.22", "-89.0595, -223.209, 66.6864, 0.66" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "49.2251, 39.2492, 4.88773, 0.59", "50.726, 39.4661, 5.12749, 0.59", "51.5558, 39.5943, 5.29258, 0.59", "52.7423, 39.7349, 5.58911, 0.59", "53.6498, 39.808, 5.77572, 0.59", "54.3429, 39.8444, 5.86852, 0.44", "55.5033, 39.9013, 5.91784, 0.59", "56.6787, 39.9821, 5.85409, 0.59", "57.9813, 40.1138, 5.66256, 0.66", "59.3421, 40.3388, 5.32963, 0.66", "60.5009, 40.6656, 4.94574, 0.66", "61.7486, 41.2242, 4.40222, 0.52", "62.4406, 41.6513, 4.04942, 0.52", "63.0396, 42.1101, 3.74923, 0.88", "63.7822, 42.7397, 3.41091, 1.03", "64.7203, 43.5523, 3.0888, 0.74", "65.9948, 44.5502, 2.82059, 0.81", "66.6607, 44.9605, 2.7676, 0.59", "67.9267, 45.5377, 2.80932, 0.52", "68.9895, 45.8777, 2.97333, 0.81", "69.5727, 46.005, 3.14701, 1.03", "70.9368, 46.2421, 3.70143, 0.59", "72.2237, 46.4718, 4.30012, 0.44", "73.3056, 46.7187, 4.8213, 0.52", "74.3633, 47.0597, 5.29138, 0.52", "75.7075, 47.6471, 5.78974, 0.59", "76.8122, 48.246, 6.07042, 0.66", "77.8656, 48.9113, 6.19116, 1.11", "78.6072, 49.4192, 6.18743, 1.18", "80.0685, 50.4178, 6.03027, 0.74", "81.0437, 51.0791, 5.8698, 0.37", "81.7117, 51.5349, 5.74815, 0.37", "82.4992, 52.0689, 5.59979, 0.44", "83.0087, 52.4222, 5.51158, 0.44", "83.6065, 52.871, 5.38974, 0.44", "84.476, 53.6066, 5.2017, 0.74", "85.3457, 54.4365, 4.9475, 0.96", "86.3836, 55.5086, 4.54645, 0.88", "87.0844, 56.2414, 4.21569, 0.66", "87.8033, 56.933, 3.81538, 0.66", "88.5492, 57.5664, 3.3218, 0.37", "89.2421, 58.0632, 2.78298, 0.29", "89.8306, 58.4268, 2.26407, 0.52", "90.3957, 58.7608, 1.73913, 1.11", "91.15, 59.2353, 1.02303, 0.59", "91.8767, 59.7845, 0.369612, 0.37", "92.3719, 60.2643, -0.0493972, 0.37", "93.1606, 61.2034, -0.607899, 0.88", "93.6116, 61.8174, -0.867584, 0.96", "94.3927, 62.9258, -1.21424, 0.74", "95.1707, 63.9943, -1.43874, 0.59", "95.9287, 64.9044, -1.54925, 0.44", "96.6184, 65.6265, -1.57435, 1.03", "97.082, 66.0684, -1.57935, 1.03", "97.9374, 66.8394, -1.61964, 0.81", "98.4684, 67.3295, -1.66208, 0.88", "99.3132, 68.2384, -1.7585, 0.59", "100.193, 69.4139, -1.85375, 0.44", "100.982, 70.7161, -1.87299, 0.44", "101.396, 71.5057, -1.82414, 0.44", "101.877, 72.5237, -1.66301, 0.59", "102.59, 74.002, -1.24835, 0.74", "103.088, 74.8913, -0.858907, 0.44", "103.735, 75.812, -0.29457, 0.44", "104.406, 76.6172, 0.31842, 0.66", "105.257, 77.5339, 1.11117, 0.88", "106.224, 78.4781, 1.99721, 0.88", "107.329, 79.4776, 2.97967, 0.37", "108.255, 80.3216, 3.73901, 0.29", "108.479, 80.5314, 3.90493, 0.29", "108.963, 81.0032, 4.22501, 0.29", "109.336, 81.3668, 4.42313, 0.29", "109.691, 81.7083, 4.56044, 0.29", "110.619, 82.5491, 4.80989, 0.37", "111.437, 83.2, 4.95974, 0.74", "112.431, 83.9207, 5.03942, 0.96", "113.345, 84.5491, 5.04104, 1.18", "114.148, 85.0829, 5.00583, 1.11", "114.791, 85.499, 4.95057, 0.88", "115.695, 86.0687, 4.85996, 0.66", "117.149, 86.9637, 4.7475, 0.44", "118.208, 87.582, 4.73277, 0.66", "118.817, 87.9239, 4.77471, 0.44", "119.434, 88.2468, 4.87829, 0.44", "120.389, 88.7183, 5.13437, 0.74", "121.273, 89.1351, 5.45647, 1.18", "122.485, 89.7077, 6.00792, 1.11", "123.49, 90.2203, 6.48677, 0.81", "124.599, 90.8308, 7.01373, 0.44", "125.467, 91.3268, 7.42034, 0.44", "126.009, 91.6391, 7.66127, 0.44", "126.753, 92.0617, 7.96242, 0.66", "127.77, 92.6174, 8.35679, 0.37", "128.294, 92.896, 8.55665, 0.29", "128.806, 93.1862, 8.76612, 0.29", "129.439, 93.5717, 9.06752, 0.29", "130.146, 94.0439, 9.43918, 0.81", "130.795, 94.5495, 9.82891, 1.03", "131.649, 95.345, 10.4356, 0.59", "132.537, 96.2829, 11.1958, 0.52", "133.237, 97.0756, 11.8448, 0.74", "133.704, 97.6158, 12.3154, 0.37", "134.58, 98.5933, 13.202, 0.29", "135.359, 99.417, 13.9611, 0.29", "136.432, 100.47, 14.9995, 0.29", "136.842, 100.846, 15.3761, 0.88", "137.534, 101.461, 15.9673, 0.88", "138.369, 102.156, 16.6128, 0.29", "139.031, 102.673, 17.0535, 0.22", "139.743, 103.23, 17.4421, 0.29", "140.51, 103.833, 17.772, 0.74", "141.073, 104.27, 17.9885, 0.29", "142.248, 105.164, 18.3605, 0.22", "143.08, 105.795, 18.6045, 0.22", "143.801, 106.322, 18.7797, 0.37", "144.744, 106.972, 18.9655, 0.74", "145.417, 107.411, 19.1062, 0.74", "146.149, 107.884, 19.2584, 0.29", "147.049, 108.465, 19.4555, 0.22", "147.709, 108.863, 19.6265, 0.37", "148.559, 109.328, 19.8959, 0.22", "149.433, 109.759, 20.2048, 0.22", "149.882, 109.955, 20.3803, 0.37", "150.849, 110.33, 20.7772, 0.37", "151.869, 110.694, 21.2232, 0.37", "152.679, 111.003, 21.5981, 0.44", "153.241, 111.236, 21.8698, 0.81", "154.084, 111.626, 22.2954, 1.47", "154.607, 111.894, 22.5815, 1.62", "155.754, 112.549, 23.2607, 0.59", "157.135, 113.393, 24.1417, 0.29", "158.015, 113.952, 24.7254, 0.22", "158.56, 114.308, 25.1039, 0.22", "159.035, 114.63, 25.4351, 0.22", "159.503, 114.95, 25.7592, 0.22", "159.964, 115.263, 26.0647, 0.22", "160.611, 115.668, 26.4907, 0.37", "161.178, 115.998, 26.8433, 0.88", "161.655, 116.262, 27.1214, 1.25", "162.4, 116.676, 27.5544, 1.25", "163.118, 117.09, 27.9969, 0.29", "163.837, 117.531, 28.4788, 0.15", "164.393, 117.886, 28.8563, 0.29", "165.129, 118.362, 29.3249, 0.15", "165.585, 118.665, 29.6157, 0.15", "165.954, 118.918, 29.8382, 0.44", "166.897, 119.554, 30.3053, 0.74", "167.674, 120.069, 30.6427, 0.22", "168.551, 120.63, 30.9803, 0.15", "169.171, 121.025, 31.1906, 0.66", "169.734, 121.412, 31.348, 0.66", "171.129, 122.44, 31.7189, 0.22", "171.783, 122.97, 31.8883, 0.66", "172.311, 123.455, 32.0316, 1.18", "172.822, 123.981, 32.1899, 0.96", "173.971, 125.265, 32.5862, 0.15", "174.375, 125.758, 32.7458, 0.15", "174.835, 126.377, 32.9425, 0.22", "175.366, 127.053, 33.1727, 0.07", "176.109, 127.912, 33.547, 0.07", "176.408, 128.224, 33.7239, 0.74", "177.0, 128.773, 34.1051, 1.03", "177.656, 129.342, 34.5296, 0.44", "178.683, 130.191, 35.3034, 0.15", "179.38, 130.745, 35.9143, 0.15", "179.827, 131.098, 36.3766, 0.15", "180.183, 131.377, 36.8141, 0.37", "180.666, 131.738, 37.5098, 0.59", "181.568, 132.382, 39.0793, 0.22", "182.03, 132.713, 40.0448, 0.44", "182.399, 132.97, 40.9559, 0.44", "182.608, 133.108, 41.5534, 0.44", "182.784, 133.2, 42.1405, 0.44", "183.081, 133.268, 43.1825, 0.44", "183.166, 133.267, 43.4691, 0.44", "183.303, 133.257, 43.8967, 0.44", "183.576, 133.218, 44.6328, 0.44", "183.871, 133.156, 45.3564, 0.44", "184.672, 132.949, 47.1882, 0.22", "185.236, 132.773, 48.388, 0.22", "185.683, 132.614, 49.3331, 0.22", "186.088, 132.445, 50.2112, 0.74", "186.939, 132.004, 52.1459, 0.22", "187.612, 131.596, 53.7997, 0.52", "188.112, 131.253, 55.0964, 0.22", "188.56, 130.936, 56.3245, 0.52", "188.963, 130.653, 57.5235, 0.52", "189.348, 130.385, 58.9207, 0.29", "189.642, 130.195, 60.3995, 0.29", "189.724, 130.164, 61.0903, 0.29", "189.78, 130.227, 62.059, 0.29", "189.803, 130.328, 62.536, 0.29", "189.871, 130.658, 63.4535, 0.29", "190.023, 131.156, 64.4906, 0.29", "190.159, 131.424, 64.9958, 0.29", "190.41, 131.763, 65.6807, 0.52", "190.873, 132.253, 66.815, 0.22", "191.524, 132.834, 68.1374, 0.22", "192.038, 133.25, 69.0491, 0.22", "192.486, 133.635, 69.7748, 0.52", "193.279, 134.413, 71.024, 0.52", "193.992, 135.147, 72.171, 0.52", "194.982, 136.271, 73.7541, 0.22", "195.645, 137.113, 74.7651, 0.22", "196.325, 138.084, 75.7969, 0.22", "196.829, 138.88, 76.5129, 0.59" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "49.2251, 39.2492, 4.88773, 0.81", "49.6132, 40.6927, 4.19697, 0.81", "50.057, 41.8831, 3.44407, 0.52", "50.4637, 42.7261, 2.76918, 0.66", "51.0752, 43.7651, 1.66139, 0.44", "51.5585, 44.529, 0.630524, 0.44", "52.0197, 45.2307, -0.483269, 0.44", "52.3938, 45.6281, -1.46058, 0.44", "52.7328, 45.842, -2.36635, 0.44", "53.1886, 46.0144, -3.65058, 0.44", "53.5183, 46.1023, -4.62467, 0.44", "53.7419, 46.1734, -5.22632, 0.44", "54.1267, 46.3694, -6.15998, 0.59", "54.6094, 46.7727, -7.17443, 0.59", "54.8263, 47.0169, -7.54261, 0.59", "55.2521, 47.5753, -8.13829, 0.66", "55.5955, 48.0939, -8.57856, 0.96", "55.8924, 48.6597, -8.97639, 0.96", "56.2448, 49.5235, -9.47418, 0.96", "56.7029, 50.8155, -10.0973, 0.88", "56.9845, 51.6521, -10.4537, 0.52", "57.3083, 52.5465, -10.7828, 0.29", "57.6115, 53.3169, -11.0245, 0.29", "57.9241, 54.0182, -11.2056, 0.44", "58.2869, 54.7515, -11.3465, 0.88", "58.7314, 55.6002, -11.4986, 0.66", "59.3972, 56.8611, -11.7853, 0.52", "59.7572, 57.5737, -12.0082, 0.59", "60.3302, 58.7921, -12.5102, 0.74", "60.8846, 60.0952, -13.2082, 0.88", "61.2133, 60.9593, -13.7896, 0.52", "61.5153, 61.8526, -14.504, 0.52", "61.807, 62.7578, -15.3471, 0.59", "62.0005, 63.2248, -15.8394, 0.59", "62.2925, 63.7615, -16.4648, 0.81", "62.7421, 64.4169, -17.2363, 0.81", "63.2563, 65.0705, -17.8713, 0.81", "63.8711, 65.7903, -18.4085, 0.52", "64.8103, 66.8807, -19.0052, 0.29", "65.2607, 67.4063, -19.2132, 0.29", "65.8629, 68.0805, -19.3936, 0.59", "66.7591, 69.0408, -19.5387, 0.81", "67.3167, 69.626, -19.5946, 1.03", "67.9773, 70.3653, -19.6303, 0.29", "68.5585, 71.0848, -19.6663, 0.22", "69.1318, 71.8878, -19.7439, 0.22", "69.504, 72.5361, -19.8677, 0.29", "69.9521, 73.5067, -20.1217, 0.74", "70.2654, 74.3428, -20.3408, 0.88", "70.5248, 75.1646, -20.564, 0.88", "70.7738, 76.14, -20.8235, 0.52", "71.103, 77.7157, -21.2224, 0.52", "71.2746, 78.6988, -21.4662, 0.44", "71.4824, 80.1363, -21.8364, 0.44", "71.5856, 81.1302, -22.116, 0.44", "71.6338, 82.088, -22.3988, 0.74", "71.6249, 82.7534, -22.5879, 0.88", "71.5006, 84.1596, -22.9637, 0.96", "71.3401, 85.4792, -23.2613, 0.29", "71.2438, 86.4215, -23.3889, 0.22", "71.2287, 87.1874, -23.3783, 0.22", "71.3478, 88.3623, -23.1861, 0.74", "71.4289, 88.7633, -23.0885, 0.74", "71.8269, 90.1595, -22.6963, 0.52", "72.2816, 91.5391, -22.3645, 0.44", "72.7049, 92.7481, -22.193, 0.44", "73.094, 93.9541, -22.1728, 0.66", "73.4107, 95.1599, -22.3271, 0.66", "73.5741, 96.0208, -22.4903, 0.66", "73.7461, 97.3677, -22.8592, 0.29", "73.8258, 98.3082, -23.128, 0.29", "73.8891, 99.38, -23.3435, 0.44", "73.9125, 100.068, -23.391, 0.44", "73.9312, 101.325, -23.2762, 0.74", "73.9288, 101.907, -23.167, 1.11", "73.901, 103.297, -22.8499, 0.44", "73.8479, 104.751, -22.534, 0.74", "73.804, 105.434, -22.4368, 0.52", "73.7234, 106.227, -22.4203, 0.29", "73.6107, 107.002, -22.5347, 0.22", "73.3908, 108.051, -22.8705, 0.59", "73.1804, 108.85, -23.2687, 0.96", "72.9204, 109.7, -23.7583, 0.66", "72.5936, 110.723, -24.3111, 0.44", "72.2626, 111.817, -24.8113, 0.44", "71.9156, 113.132, -25.1949, 0.22", "71.7674, 113.867, -25.2755, 0.37", "71.6169, 115.037, -25.2149, 0.59", "71.5358, 116.363, -24.975, 0.29", "71.5214, 117.707, -24.6269, 0.29", "71.5083, 119.115, -24.2256, 0.37", "71.4614, 119.8, -24.0384, 0.29", "71.2912, 120.855, -23.8236, 0.66", "71.0392, 121.76, -23.7408, 1.11", "70.7445, 122.5, -23.7585, 1.11", "70.1174, 123.815, -23.935, 0.37", "69.3694, 125.345, -24.2481, 0.22", "69.073, 125.964, -24.3894, 0.59", "68.7836, 126.567, -24.5391, 1.11", "68.1711, 127.912, -24.8944, 0.29", "67.5728, 129.413, -25.3156, 0.96", "67.2641, 130.44, -25.6461, 0.15", "67.1481, 131.004, -25.8496, 0.22", "66.92, 132.323, -26.3937, 0.07", "66.8388, 132.858, -26.6713, 0.22", "66.8025, 133.149, -26.8622, 0.22", "66.7432, 133.982, -27.5495, 0.07", "66.7464, 134.329, -27.8907, 0.22", "66.7846, 134.68, -28.278, 0.22", "66.9434, 135.298, -29.042, 0.15", "67.0243, 135.6, -29.4378, 0.29", "67.1473, 136.18, -30.1929, 0.07", "67.1916, 136.524, -30.622, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-1.36273, -28.5278, -0.777362, 0.81", "-0.98227, -29.3462, -1.95344, 0.81", "-0.46652, -30.3006, -3.4109, 0.81", "-0.130025, -30.8211, -4.26085, 0.81", "0.32111, -31.3784, -5.22671, 0.88", "0.814703, -31.8459, -6.12566, 1.18", "1.19515, -32.1187, -6.73052, 1.18", "1.52709, -32.2671, -7.18071, 1.18", "2.17667, -32.4765, -7.88925, 0.96", "3.00804, -32.72, -8.67961, 0.96", "3.97711, -32.9937, -9.52422, 0.81", "5.23115, -33.3705, -10.5077, 0.81", "5.99927, -33.6212, -11.029, 0.81", "7.22677, -34.0429, -11.699, 0.81", "8.36682, -34.4544, -12.1446, 0.88", "9.37061, -34.844, -12.3558, 0.88", "10.3304, -35.2535, -12.3361, 0.59", "11.3514, -35.6972, -12.073, 0.59", "12.5798, -36.1906, -11.5236, 0.59", "13.4278, -36.4912, -11.003, 0.74", "14.275, -36.7577, -10.3902, 0.59", "15.3172, -37.0726, -9.59173, 0.59", "16.2776, -37.3703, -8.87622, 0.88", "17.4322, -37.7454, -8.11436, 0.88", "18.5131, -38.137, -7.52309, 1.03", "19.7425, -38.6493, -7.01069, 0.81", "20.6075, -39.062, -6.76131, 0.66", "21.5469, -39.5929, -6.59849, 0.66", "22.6319, -40.3263, -6.43933, 0.44", "23.8829, -41.2784, -6.20937, 0.44", "24.8409, -42.0406, -5.91954, 0.66", "25.391, -42.4856, -5.66291, 1.11", "26.4242, -43.2784, -4.95143, 1.25", "27.679, -44.1813, -3.86513, 0.44", "28.6912, -44.8629, -2.89395, 0.52", "29.8159, -45.564, -1.76277, 0.52", "30.6504, -46.0606, -0.917893, 0.52", "31.7973, -46.7689, 0.259017, 0.59", "32.4611, -47.2056, 0.95055, 0.96", "33.164, -47.7124, 1.6884, 1.11", "33.9776, -48.3526, 2.55527, 0.81", "34.8291, -49.0463, 3.48583, 0.52", "35.5007, -49.5391, 4.2317, 0.52", "35.754, -49.7102, 4.50922, 0.52", "36.1398, -49.9485, 4.93051, 0.52", "36.5154, -50.1641, 5.28408, 0.52", "37.2725, -50.5673, 5.83145, 0.96", "38.5048, -51.2048, 6.48207, 0.44", "39.2251, -51.5947, 6.77364, 0.81", "39.9287, -52.0063, 7.02774, 1.03", "41.2845, -52.8949, 7.43958, 0.44", "42.1183, -53.4887, 7.6817, 0.44", "42.7103, -53.9346, 7.86363, 0.88", "43.2995, -54.3917, 8.08431, 1.55", "44.132, -55.0208, 8.46856, 1.55", "45.1098, -55.7585, 9.03141, 0.52", "46.2538, -56.6531, 9.82218, 0.22", "46.7992, -57.0912, 10.2362, 0.22", "47.3947, -57.5761, 10.7383, 0.22", "47.8594, -57.9574, 11.1581, 0.74", "48.3931, -58.3964, 11.6365, 1.18", "48.802, -58.7343, 12.0013, 1.18", "49.9027, -59.6744, 12.8836, 0.22", "50.3889, -60.0824, 13.2216, 0.22", "51.171, -60.7276, 13.6657, 0.88", "52.2106, -61.5815, 14.1669, 0.15", "52.6882, -61.9672, 14.3605, 0.96", "53.2409, -62.414, 14.5472, 1.25", "54.3804, -63.3438, 14.8047, 0.15", "55.6655, -64.3973, 14.9908, 0.15", "56.2233, -64.8635, 15.0394, 0.15", "57.1695, -65.683, 15.084, 0.15", "57.6424, -66.1037, 15.112, 0.96", "58.4929, -66.8885, 15.1862, 1.4", "58.8322, -67.2146, 15.2195, 1.33", "59.7162, -68.0823, 15.3767, 0.22", "60.2139, -68.561, 15.4829, 0.29", "60.9942, -69.3, 15.6754, 0.59", "61.6951, -69.9366, 15.861, 0.59", "62.3837, -70.5139, 16.0647, 1.7", "63.0446, -71.0193, 16.2632, 0.81", "64.2501, -71.8506, 16.6311, 0.15", "64.7625, -72.1746, 16.7971, 0.44", "65.4089, -72.5521, 16.9934, 0.74", "66.6598, -73.2405, 17.4003, 0.22", "67.383, -73.6194, 17.6442, 0.96", "68.117, -73.9849, 17.8933, 1.25", "69.0529, -74.4448, 18.2514, 0.29", "70.2669, -75.0356, 18.7221, 0.07", "70.8629, -75.3226, 18.9507, 0.29", "71.7059, -75.7338, 19.2526, 0.74", "73.0592, -76.4093, 19.7494, 0.15", "73.9981, -76.893, 20.143, 0.15", "74.4407, -77.1347, 20.3677, 0.15", "74.8138, -77.3559, 20.6116, 0.74", "75.047, -77.5006, 20.7825, 0.96", "76.066, -78.1579, 21.6033, 0.15", "76.6744, -78.5634, 22.1086, 0.15", "77.4276, -79.0925, 22.7341, 0.88", "78.4303, -79.8422, 23.6454, 0.15", "78.6805, -80.0403, 23.8981, 0.15", "79.0795, -80.3728, 24.2938, 0.29", "79.3684, -80.6281, 24.583, 0.29", "80.0009, -81.1907, 25.2599, 0.15", "80.645, -81.7644, 26.0464, 0.15", "81.1919, -82.2264, 26.7854, 0.15", "81.7237, -82.6499, 27.5843, 1.03", "82.556, -83.2541, 28.9914, 0.15", "83.181, -83.6565, 30.1193, 0.15", "83.631, -83.9003, 30.9263, 0.15", "84.2363, -84.1907, 32.0253, 0.15", "84.843, -84.4573, 33.186, 0.15", "85.4879, -84.7096, 34.5089, 0.15", "86.0218, -84.895, 35.6481, 0.15", "86.5302, -85.0678, 36.7339, 0.15", "87.1545, -85.2761, 38.0758, 0.15", "87.8396, -85.5094, 39.593, 0.15", "88.225, -85.6377, 40.441, 0.15", "89.1623, -85.9519, 42.5286, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.36273, -28.5278, -0.777362, 0.96", "-2.32101, -29.7406, -0.90128, 0.96", "-3.15671, -31.0503, -1.10183, 0.74", "-3.86799, -32.4641, -1.38921, 0.74", "-4.48674, -33.9516, -1.73744, 1.03", "-4.86003, -34.9978, -2.01096, 1.18", "-5.39514, -36.6121, -2.46236, 0.81", "-5.71929, -37.8959, -2.85153, 0.81", "-6.03124, -39.2578, -3.27284, 0.88", "-6.20104, -39.9712, -3.48834, 1.25", "-6.53912, -41.2667, -3.84381, 1.25", "-7.14376, -43.3839, -4.37732, 0.96", "-7.65006, -45.098, -4.71624, 0.74", "-8.06049, -46.5935, -4.91621, 0.74", "-8.38826, -48.0034, -5.05631, 0.96", "-8.60676, -49.3102, -5.15161, 0.74", "-8.72963, -50.8237, -5.22133, 0.74", "-8.71078, -53.0252, -5.2424, 0.96", "-8.58092, -54.581, -5.19902, 0.74", "-8.35318, -56.0576, -5.12059, 0.81", "-7.98941, -57.7784, -4.97046, 1.18", "-7.53091, -59.5461, -4.7622, 1.18", "-6.78957, -62.0628, -4.40977, 0.96", "-6.15248, -64.1512, -4.07876, 0.96", "-5.68466, -65.7532, -3.7773, 1.03", "-5.20884, -67.4922, -3.38432, 0.74", "-4.83445, -69.041, -3.00275, 0.74", "-4.57446, -70.5871, -2.58038, 1.03", "-4.49297, -72.2078, -2.11391, 0.88", "-4.66344, -73.937, -1.60849, 0.66", "-4.88313, -74.953, -1.31415, 0.59", "-5.17277, -75.9459, -1.04165, 0.81", "-5.76931, -77.7352, -0.584538, 0.59", "-6.2563, -79.1639, -0.276244, 0.81", "-6.60983, -80.295, -0.118119, 0.81", "-6.9754, -81.6648, -0.0553931, 0.81", "-7.25823, -82.9096, -0.0873925, 1.25", "-7.53946, -84.3113, -0.213737, 1.25", "-7.9373, -86.2238, -0.552405, 0.66", "-8.26411, -87.6322, -0.914316, 0.66", "-8.58762, -88.8365, -1.32901, 1.03", "-8.94363, -90.0798, -1.88695, 1.33", "-9.17286, -91.0626, -2.42671, 0.88", "-9.30715, -92.2325, -3.17884, 0.59", "-9.2389, -92.9951, -3.71708, 0.59", "-8.94518, -93.7933, -4.23463, 0.59", "-8.33944, -94.7903, -4.82465, 0.59", "-7.3604, -96.1696, -5.55338, 0.22", "-6.84356, -96.913, -5.90833, 0.74", "-6.3574, -97.6895, -6.26011, 1.11", "-5.6719, -99.0851, -6.89501, 0.52", "-5.34201, -100.11, -7.37308, 0.66", "-5.1289, -101.284, -7.92061, 0.96", "-4.99718, -102.74, -8.55148, 0.81", "-4.92361, -103.905, -8.998, 0.59", "-4.86203, -105.105, -9.40114, 0.59", "-4.80056, -106.498, -9.78243, 0.44", "-4.75468, -107.984, -10.0112, 0.74", "-4.7646, -109.7, -10.1156, 0.74", "-4.85136, -111.041, -10.1185, 0.81", "-5.0141, -112.181, -10.0943, 1.03", "-5.34973, -113.576, -10.0799, 1.03", "-6.01393, -115.551, -10.1544, 0.59", "-6.61307, -117.045, -10.2887, 0.44", "-7.20099, -118.389, -10.4395, 0.52", "-7.77218, -119.651, -10.5712, 1.03", "-8.41281, -121.1, -10.6624, 0.81", "-8.97209, -122.502, -10.6457, 0.29", "-9.4446, -124.005, -10.4806, 0.29", "-9.67751, -125.093, -10.2238, 0.44", "-9.82724, -126.153, -9.85343, 0.96", "-9.9671, -127.579, -9.26149, 1.11", "-10.0896, -129.247, -8.56787, 0.59", "-10.1881, -130.663, -8.01641, 0.59", "-10.3337, -132.576, -7.39184, 0.52", "-10.4056, -133.615, -7.16154, 0.52", "-10.5014, -135.327, -6.94203, 0.81", "-10.5984, -137.078, -6.91561, 0.88", "-10.6647, -138.09, -6.99865, 0.66", "-10.7642, -139.346, -7.24021, 0.52", "-10.8657, -140.651, -7.63093, 0.81", "-10.9037, -141.492, -7.94381, 0.52", "-10.8868, -142.703, -8.45763, 0.37", "-10.8164, -143.656, -8.8816, 0.96", "-10.6132, -145.198, -9.54501, 0.74", "-10.4128, -146.281, -9.97763, 0.96", "-10.2179, -147.158, -10.2398, 0.96", "-9.91025, -148.493, -10.438, 0.37", "-9.7019, -149.5, -10.3338, 0.29", "-9.4594, -151.008, -9.79062, 0.59", "-9.38492, -151.619, -9.42417, 0.59", "-9.26857, -152.796, -8.5824, 0.59", "-9.16422, -153.976, -7.67923, 0.96", "-9.0486, -155.356, -6.60163, 0.52", "-8.98129, -156.271, -5.90919, 0.44", "-8.9308, -157.223, -5.22609, 0.44", "-8.90114, -158.18, -4.5336, 0.88", "-8.89685, -159.173, -3.84403, 0.44", "-8.93209, -160.19, -3.18119, 0.37", "-9.04507, -161.301, -2.51644, 0.74", "-9.27004, -162.52, -1.85573, 0.22", "-9.5764, -163.701, -1.24776, 0.29", "-9.95897, -164.883, -0.617183, 0.59", "-10.4758, -166.3, 0.147249, 1.18", "-10.943, -167.565, 0.809485, 0.66", "-11.2957, -168.752, 1.40871, 0.37", "-11.487, -169.775, 1.93615, 0.29", "-11.5221, -170.539, 2.36011, 0.29", "-11.4683, -171.085, 2.69251, 0.74", "-11.3426, -171.644, 3.07203, 1.11", "-10.8774, -173.23, 4.10565, 0.44", "-10.5979, -174.223, 4.66154, 0.44", "-10.4551, -175.007, 4.97627, 0.44", "-10.3501, -176.131, 5.33333, 0.29", "-10.3442, -177.27, 5.62241, 0.29", "-10.4423, -178.746, 5.92807, 0.59", "-10.6173, -180.256, 6.1767, 1.18", "-10.8554, -182.4, 6.50003, 1.4", "-10.9575, -183.519, 6.67159, 1.18", "-11.0268, -185.044, 6.86342, 0.52", "-11.0368, -186.145, 6.93212, 0.52", "-11.0178, -187.486, 6.92853, 0.96", "-10.9364, -189.037, 6.7706, 0.74", "-10.8486, -189.902, 6.58409, 0.74", "-10.6675, -191.311, 6.09135, 0.37", "-10.4647, -192.56, 5.49191, 0.44", "-10.3334, -193.303, 5.05948, 0.44", "-10.1776, -194.147, 4.52009, 0.44", "-10.0125, -195.068, 3.94463, 0.29", "-9.88246, -195.85, 3.58008, 0.29", "-9.78361, -196.594, 3.4253, 0.29", "-9.67972, -197.689, 3.51397, 0.88", "-9.60387, -198.838, 3.85529, 0.81", "-9.5479, -199.709, 4.22721, 0.22", "-9.39607, -201.236, 4.93375, 0.22", "-9.20099, -202.385, 5.43438, 0.44", "-8.82968, -203.847, 5.97174, 1.11", "-8.41988, -204.999, 6.28997, 0.52", "-7.74104, -206.411, 6.47188, 0.22", "-6.91274, -207.792, 6.38346, 0.22", "-5.85384, -209.343, 6.03182, 0.22", "-5.1082, -210.399, 5.69944, 0.37", "-4.71693, -210.985, 5.49997, 0.52", "-4.24149, -211.829, 5.25811, 0.52", "-3.72636, -213.134, 5.03302, 1.11", "-3.48179, -214.259, 4.98849, 1.11", "-3.30941, -215.994, 5.08239, 0.52", "-3.24637, -217.573, 5.26151, 0.29", "-3.23093, -219.124, 5.49424, 0.52", "-3.24092, -220.565, 5.71619, 0.52", "-3.24253, -221.64, 5.83344, 0.22", "-3.2387, -222.314, 5.84999, 0.22", "-3.23536, -223.022, 5.81253, 0.59", "-3.24899, -223.973, 5.71734, 1.11", "-3.31968, -225.557, 5.51297, 1.11", "-3.47051, -227.394, 5.29226, 0.44", "-3.61559, -228.6, 5.1769, 0.44", "-3.7884, -229.857, 5.11249, 0.44", "-4.05666, -231.472, 5.10651, 0.29", "-4.24507, -232.311, 5.16627, 0.29", "-4.49148, -233.249, 5.30758, 0.88", "-4.72721, -234.126, 5.46293, 0.96", "-5.07151, -235.564, 5.69435, 0.37", "-5.30461, -236.71, 5.85764, 0.37", "-5.66975, -238.452, 6.14199, 0.37", "-5.79718, -238.96, 6.24213, 0.37", "-6.0379, -239.832, 6.43286, 1.03", "-6.21012, -240.42, 6.56572, 1.03", "-6.52411, -241.516, 6.80899, 0.52", "-6.91629, -243.353, 7.21536, 0.22", "-7.03087, -244.232, 7.42365, 0.22", "-7.14626, -245.222, 7.72071, 0.29", "-7.24245, -245.994, 8.00563, 0.59", "-7.33137, -246.64, 8.26572, 0.88", "-7.45502, -247.4, 8.56911, 0.96", "-7.64804, -248.55, 9.03316, 0.37", "-7.88425, -249.925, 9.60475, 0.22", "-7.97996, -250.603, 9.88181, 0.22", "-8.04685, -251.364, 10.1765, 0.96", "-8.09832, -252.693, 10.6496, 0.44", "-8.06183, -254.03, 11.0499, 0.22", "-7.96904, -254.886, 11.2314, 0.22", "-7.78823, -256.009, 11.4032, 0.22", "-7.71765, -256.435, 11.4619, 0.22", "-7.60397, -257.232, 11.5645, 0.74", "-7.53327, -258.185, 11.6732, 0.88", "-7.60241, -259.433, 11.7742, 0.22", "-7.76894, -260.295, 11.8271, 0.22", "-7.97569, -260.972, 11.8804, 0.22", "-8.26423, -261.729, 11.9679, 0.22", "-8.5885, -262.46, 12.0746, 0.66", "-8.99948, -263.316, 12.241, 0.74", "-9.56723, -264.451, 12.493, 0.44", "-10.1297, -265.575, 12.7261, 0.44", "-10.8519, -266.977, 12.9646, 0.74", "-11.5717, -268.309, 13.1475, 0.96", "-12.2362, -269.495, 13.2608, 0.59", "-13.0126, -270.835, 13.3216, 0.22", "-13.6027, -271.846, 13.3909, 0.22", "-14.2177, -272.903, 13.502, 0.22", "-14.6431, -273.634, 13.6222, 0.22", "-14.8285, -273.943, 13.7016, 0.22", "-15.3195, -274.751, 14.0065, 0.88", "-16.5795, -276.895, 15.0889, 0.22", "-17.0272, -277.678, 15.5402, 0.22", "-17.3228, -278.213, 15.8595, 0.74", "-17.6743, -278.897, 16.2545, 0.96", "-18.4159, -280.494, 17.1305, 0.37", "-18.9049, -281.705, 17.7382, 0.22", "-19.2043, -282.585, 18.0856, 0.88", "-19.3366, -283.081, 18.2774, 0.88", "-19.5505, -284.256, 18.7307, 0.22", "-19.6055, -284.787, 18.9218, 0.22", "-19.6317, -285.316, 19.0871, 0.22", "-19.6656, -286.396, 19.374, 0.81", "-19.6679, -288.052, 19.7554, 0.29", "-19.6318, -289.427, 20.0687, 0.44", "-19.5712, -290.553, 20.3061, 0.88", "-19.4912, -291.451, 20.5041, 0.88", "-19.3367, -292.548, 20.7577, 0.29", "-19.1275, -293.491, 20.9945, 0.22", "-18.8341, -294.441, 21.2517, 0.22", "-18.5409, -295.127, 21.5041, 0.22", "-18.168, -295.874, 21.8539, 0.22", "-17.9033, -296.381, 22.135, 0.22", "-17.5649, -297.122, 22.575, 0.74", "-17.473, -297.426, 22.7584, 0.74", "-17.1776, -299.079, 23.6677, 0.22", "-17.1365, -299.818, 24.0457, 0.22", "-17.1813, -300.428, 24.3198, 0.22", "-17.3645, -301.356, 24.6911, 1.11", "-17.778, -302.565, 25.0843, 0.29", "-18.1985, -303.498, 25.3049, 0.22", "-18.7068, -304.458, 25.4178, 0.22", "-19.1564, -305.337, 25.486, 0.44", "-19.5561, -306.184, 25.5803, 0.88", "-20.1233, -307.545, 25.8291, 0.96", "-20.5617, -308.835, 26.1958, 0.29", "-20.8099, -309.734, 26.5554, 0.66", "-21.0499, -311.017, 27.1729, 0.74", "-21.205, -312.591, 28.0148, 0.29", "-21.2126, -313.872, 28.7167, 0.66", "-21.0703, -315.424, 29.6025, 0.22", "-20.9854, -316.035, 29.9728, 0.22", "-20.8753, -316.784, 30.4399, 0.81", "-20.7957, -317.352, 30.7602, 0.96", "-20.6384, -318.496, 31.3209, 0.37", "-20.5039, -319.675, 31.8461, 0.22", "-20.4625, -320.543, 32.2268, 0.22", "-20.4618, -321.14, 32.5133, 0.22", "-20.4674, -321.521, 32.7298, 0.66", "-20.4798, -322.072, 33.0903, 1.11", "-20.5062, -322.977, 33.7086, 0.88", "-20.5671, -324.284, 34.4639, 0.22", "-20.6348, -325.507, 35.0415, 0.88", "-20.7513, -326.956, 35.6246, 0.22", "-20.8443, -327.827, 35.9175, 0.22", "-20.9661, -328.671, 36.1655, 0.74", "-21.2647, -330.258, 36.663, 0.15", "-21.528, -331.305, 36.98, 0.15", "-21.716, -331.878, 37.1489, 0.66", "-22.0166, -332.68, 37.3629, 0.81", "-22.533, -334.003, 37.7508, 0.22", "-23.0455, -335.294, 38.3099, 0.22", "-23.2523, -335.846, 38.6724, 0.59", "-23.5714, -336.675, 39.3566, 1.03" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.50797, 1.48845, -10.46, 1.99", "-1.36599, 2.47084, -11.2959, 1.99", "-1.26972, 3.43927, -12.0675, 1.77", "-1.25675, 4.16225, -12.6106, 1.84", "-1.28212, 4.84761, -13.0977, 1.4", "-1.35074, 5.5687, -13.5848, 1.25", "-1.45966, 6.24928, -14.0216, 1.4", "-1.60269, 6.82603, -14.3531, 1.4", "-1.88601, 7.73942, -14.7889, 1.03", "-2.16748, 8.57802, -15.1184, 1.03", "-2.51109, 9.51224, -15.452, 1.11", "-2.89472, 10.5028, -15.7798, 0.96", "-3.30487, 11.5827, -16.1146, 0.96", "-3.68207, 12.6292, -16.4296, 0.88", "-3.90392, 13.3046, -16.6021, 1.18" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.50797, 1.48845, -10.46, 3.32", "-3.72271, 1.23644, -10.2058, 3.32" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.44158, 39.2021, 0.0, 0.15", "3.27908, 54.1787, 0.0, 0.15", "4.11658, 69.1553, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.00153, 31.4856, 11.8113, 1.7", "-3.19786, 32.2939, 12.1962, 1.7", "-3.45199, 33.3547, 12.6984, 1.03", "-3.76379, 34.6562, 13.3146, 0.74", "-3.98791, 35.5918, 13.7576, 0.74", "-4.20523, 36.499, 14.187, 0.74", "-4.38101, 37.2327, 14.5344, 1.03", "-4.58211, 38.2183, 15.0656, 1.84" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.00153, 31.4856, 11.8113, 0.29", "-2.6941, 32.1119, 12.639, 0.29", "-2.09469, 33.2469, 13.9965, 0.22", "-1.63178, 34.1223, 14.8485, 0.22", "-1.30261, 34.7643, 15.4333, 0.37", "-0.893935, 35.607, 16.1684, 0.37", "-0.467101, 36.5188, 16.9595, 0.37", "-0.115654, 37.309, 17.6053, 0.37", "0.405673, 38.5099, 18.4767, 0.22", "0.888937, 39.5552, 19.2002, 0.22", "1.39255, 40.6476, 19.9506, 0.22", "1.6837, 41.2598, 20.379, 0.22", "2.03597, 41.986, 20.9389, 0.22", "2.26369, 42.421, 21.3338, 0.37", "2.90041, 43.5181, 22.4399, 0.37", "3.39453, 44.2951, 23.199, 0.22", "4.10305, 45.3416, 24.2458, 0.44", "4.62963, 46.1166, 25.0517, 0.81", "5.15325, 46.8976, 25.8931, 0.81", "5.80198, 47.8694, 26.9713, 0.29", "6.41895, 48.8134, 28.0167, 0.22", "7.02462, 49.7429, 29.0291, 0.22", "7.58657, 50.6446, 29.9275, 0.22", "8.06446, 51.4406, 30.6697, 0.22", "8.54621, 52.2373, 31.3937, 0.22", "9.10539, 53.1071, 32.237, 0.22", "9.38254, 53.5263, 32.6786, 0.66", "9.71122, 54.0026, 33.1704, 1.55", "10.5678, 55.1722, 34.3875, 2.06", "11.8172, 56.8108, 36.0514, 0.22", "12.5349, 57.7464, 36.9959, 0.22", "13.1975, 58.5964, 37.8772, 0.22", "13.7264, 59.2965, 38.6019, 0.44", "14.2416, 60.0217, 39.3705, 0.44", "14.811, 60.9219, 40.2817, 0.22", "15.4169, 62.1477, 41.369, 0.22", "15.9474, 63.501, 42.3918, 0.44", "16.3782, 64.8275, 43.331, 0.15", "16.7199, 66.2128, 44.3225, 0.15", "16.8485, 66.9189, 44.8162, 0.15", "17.0492, 68.338, 45.7753, 0.15", "17.2146, 69.4849, 46.4713, 0.37", "17.3915, 70.5299, 47.0819, 0.59", "17.6943, 71.8101, 47.8307, 1.25", "18.07, 72.9747, 48.5417, 2.21", "18.3963, 73.7443, 49.0656, 2.21", "19.2007, 75.2466, 50.1493, 0.52", "19.9947, 76.497, 51.0806, 0.15", "20.6871, 77.4621, 51.7531, 0.15", "21.3226, 78.2486, 52.2659, 0.29", "21.8711, 78.8702, 52.6464, 0.29", "22.5714, 79.6643, 53.0779, 0.07", "23.3249, 80.5282, 53.4862, 0.07", "23.9002, 81.2055, 53.7761, 0.07", "24.3814, 81.7997, 54.0098, 0.88", "24.9744, 82.5691, 54.2929, 1.62", "26.5551, 84.7182, 55.0146, 0.15", "27.3394, 85.7873, 55.3828, 0.15", "28.1187, 86.8529, 55.7547, 0.15", "28.6966, 87.6254, 56.0331, 0.29", "29.3533, 88.4664, 56.4179, 0.29", "30.617, 90.004, 57.297, 0.07", "31.6023, 91.1482, 58.0719, 0.07", "32.1301, 91.7572, 58.5259, 0.07", "32.8906, 92.6136, 59.2245, 0.96", "34.5791, 94.4512, 60.8671, 0.15", "35.3718, 95.3083, 61.6781, 0.15", "35.9304, 95.9015, 62.3004, 0.15", "36.3403, 96.3584, 62.7387, 0.15", "36.8012, 96.8848, 63.2107, 0.37", "37.3096, 97.5, 63.698, 0.37", "38.3047, 98.7456, 64.4889, 0.15", "39.127, 99.8114, 65.1162, 0.15", "39.9228, 100.902, 65.7752, 0.15", "40.837, 102.214, 66.5866, 0.15", "41.3471, 102.966, 67.0579, 0.15", "42.1954, 104.234, 67.8486, 0.15", "43.1829, 105.73, 68.7591, 0.07", "44.2964, 107.501, 69.8015, 0.07", "45.3563, 109.209, 70.8766, 0.07" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-89.0595, -223.209, 66.6864, 0.74", "-89.5774, -224.019, 66.5705, 0.74", "-90.1548, -224.899, 66.4744, 0.29", "-90.964, -226.053, 66.3788, 0.07", "-91.6606, -226.996, 66.2948, 0.15", "-92.1103, -227.598, 66.2396, 0.52", "-92.5159, -228.123, 66.1814, 0.74", "-92.8557, -228.529, 66.1321, 0.88", "-93.7792, -229.597, 66.0276, 0.22", "-94.3603, -230.263, 65.9779, 0.22", "-94.94, -230.953, 65.9279, 0.22", "-95.5632, -231.727, 65.8568, 0.15", "-96.0162, -232.305, 65.7902, 0.74", "-96.6709, -233.143, 65.6704, 0.88", "-97.2552, -233.914, 65.5473, 0.22", "-97.9149, -234.781, 65.3783, 0.15", "-98.4425, -235.473, 65.1816, 0.15", "-98.8372, -235.995, 64.9894, 0.29", "-99.2792, -236.554, 64.7306, 0.66", "-99.8836, -237.255, 64.3666, 1.03", "-100.653, -238.013, 63.9633, 0.37", "-101.569, -238.789, 63.5534, 0.22", "-102.112, -239.225, 63.3445, 0.44", "-102.626, -239.635, 63.1774, 0.74", "-103.416, -240.281, 62.9805, 1.03", "-104.741, -241.378, 62.7659, 0.29", "-105.481, -242.025, 62.7124, 0.29", "-106.128, -242.633, 62.7085, 0.74", "-106.66, -243.174, 62.7232, 0.74", "-107.626, -244.223, 62.7578, 0.29", "-108.48, -245.2, 62.806, 0.22", "-108.947, -245.73, 62.8426, 0.22", "-109.579, -246.316, 62.8956, 0.22", "-110.124, -246.693, 62.9226, 0.29", "-110.688, -246.978, 62.9218, 0.74", "-111.43, -247.258, 62.8892, 0.96", "-112.538, -247.64, 62.8104, 0.44", "-113.785, -248.101, 62.7067, 0.22", "-114.434, -248.376, 62.656, 0.22", "-115.029, -248.683, 62.617, 0.22", "-115.697, -249.112, 62.6187, 0.81", "-116.381, -249.662, 62.6607, 0.44", "-116.952, -250.224, 62.7436, 0.22", "-117.434, -250.733, 62.8219, 0.37", "-117.738, -251.029, 62.8601, 0.37", "-118.709, -251.822, 62.9559, 0.22", "-119.101, -252.075, 62.9799, 0.59", "-119.987, -252.546, 63.0127, 0.88", "-120.904, -252.999, 63.0049, 0.22", "-121.628, -253.358, 62.9668, 0.22", "-122.134, -253.614, 62.9187, 0.22", "-122.746, -253.936, 62.8362, 0.22", "-123.367, -254.285, 62.7549, 0.66", "-124.391, -254.956, 62.6273, 0.15", "-124.773, -255.247, 62.5536, 0.15", "-125.177, -255.597, 62.453, 0.15", "-125.383, -255.789, 62.3729, 0.15", "-125.624, -256.038, 62.249, 0.15", "-126.117, -256.551, 61.9496, 0.88", "-127.173, -257.614, 61.3243, 0.22", "-127.372, -257.8, 61.2172, 0.22", "-127.872, -258.247, 60.9794, 0.22", "-128.436, -258.748, 60.7448, 0.22", "-128.787, -259.07, 60.6245, 0.22", "-129.403, -259.669, 60.4786, 0.66", "-130.23, -260.505, 60.4262, 0.29", "-130.824, -261.123, 60.4377, 0.29", "-131.321, -261.67, 60.4812, 0.44", "-131.888, -262.34, 60.5449, 0.74", "-132.321, -262.918, 60.6088, 0.81", "-133.12, -264.058, 60.7686, 0.22", "-133.627, -264.776, 60.926, 0.22", "-133.857, -265.083, 61.0089, 0.22", "-134.127, -265.437, 61.1101, 0.22", "-134.539, -265.969, 61.235, 0.22", "-135.157, -266.734, 61.3302, 0.59", "-135.868, -267.557, 61.3093, 0.22", "-136.352, -268.068, 61.2408, 0.22", "-136.988, -268.647, 61.0941, 0.59", "-137.946, -269.428, 60.819, 0.22", "-138.691, -270.01, 60.5504, 0.22", "-139.259, -270.465, 60.3063, 0.44", "-139.912, -271.022, 60.0046, 1.03", "-140.791, -271.808, 59.6127, 0.22", "-141.176, -272.204, 59.4575, 0.22", "-141.522, -272.7, 59.3511, 0.22", "-141.803, -273.3, 59.2677, 0.22", "-142.139, -274.239, 59.1623, 0.22", "-142.238, -274.558, 59.1316, 0.44", "-142.459, -275.355, 59.0691, 0.88", "-142.66, -276.061, 59.0108, 0.88", "-143.107, -277.505, 58.9027, 0.22", "-143.384, -278.305, 58.8495, 0.22", "-143.807, -279.38, 58.7713, 0.22", "-144.008, -279.861, 58.7448, 0.22", "-144.195, -280.263, 58.7363, 0.59", "-144.532, -280.919, 58.7464, 0.81", "-144.76, -281.315, 58.7586, 0.59", "-145.31, -282.206, 58.76, 0.22", "-145.687, -282.781, 58.7538, 0.22", "-146.099, -283.328, 58.7687, 0.22", "-146.514, -283.786, 58.7872, 0.22", "-147.207, -284.442, 58.8177, 0.22", "-147.727, -284.883, 58.8276, 0.44", "-148.338, -285.356, 58.8194, 0.74", "-149.057, -285.911, 58.7527, 0.29", "-149.751, -286.461, 58.6233, 0.22", "-149.937, -286.609, 58.5808, 0.22", "-150.336, -286.91, 58.4806, 0.22", "-150.747, -287.214, 58.3687, 0.22", "-151.21, -287.58, 58.2428, 0.29", "-151.748, -288.086, 58.1053, 0.66", "-152.216, -288.569, 58.0268, 0.88", "-153.315, -289.685, 57.9284, 0.22", "-153.756, -290.116, 57.9261, 0.22", "-154.279, -290.599, 57.9646, 0.22", "-154.972, -291.21, 58.1203, 0.22", "-155.523, -291.696, 58.3349, 0.15", "-155.876, -292.022, 58.5227, 0.15", "-156.108, -292.256, 58.6861, 0.52", "-156.5, -292.665, 58.9806, 0.81", "-157.357, -293.644, 59.5949, 0.15", "-157.703, -294.082, 59.8056, 0.15", "-158.198, -294.816, 60.0334, 0.15", "-158.311, -294.998, 60.0672, 0.37", "-158.661, -295.577, 60.1163, 0.74", "-159.267, -296.597, 60.1096, 0.15", "-159.62, -297.182, 60.0527, 0.15", "-159.96, -297.761, 59.9904, 0.37", "-160.278, -298.308, 59.9162, 0.37", "-160.657, -298.997, 59.8093, 0.37", "-161.128, -299.886, 59.6494, 0.29", "-161.615, -300.848, 59.4813, 0.81", "-161.958, -301.576, 59.3433, 0.66", "-162.272, -302.259, 59.1808, 0.59", "-162.611, -302.995, 58.9625, 0.15", "-162.877, -303.507, 58.7935, 0.15", "-163.173, -303.975, 58.6274, 0.66", "-163.324, -304.177, 58.5565, 0.66", "-163.919, -304.912, 58.3184, 0.22", "-164.327, -305.446, 58.1613, 0.22", "-164.797, -306.101, 57.9713, 0.59", "-165.337, -306.971, 57.7202, 0.15", "-165.581, -307.413, 57.5922, 0.15", "-165.908, -308.048, 57.4158, 0.81", "-166.513, -309.357, 57.0741, 0.15", "-166.736, -309.891, 56.9482, 0.52", "-167.056, -310.723, 56.7664, 0.15", "-167.216, -311.113, 56.694, 0.15", "-167.643, -311.974, 56.5406, 0.15", "-167.811, -312.259, 56.4912, 0.15", "-168.257, -312.933, 56.389, 0.88", "-168.703, -313.57, 56.2899, 0.22", "-169.427, -314.541, 56.1384, 0.15", "-170.139, -315.485, 55.9795, 0.15", "-170.483, -315.934, 55.9028, 0.22", "-170.916, -316.455, 55.8098, 0.81" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-89.0595, -223.209, 66.6864, 0.07", "-89.5393, -222.477, 65.9349, 0.07", "-89.9588, -221.821, 65.3465, 0.07", "-90.3607, -221.222, 64.831, 0.37", "-91.0889, -220.163, 63.9809, 0.07", "-91.3604, -219.774, 63.6906, 0.07", "-91.8042, -219.165, 63.2441, 0.22", "-92.674, -218.047, 62.4929, 0.07", "-93.3526, -217.268, 61.9993, 0.07", "-93.8295, -216.77, 61.6909, 0.07", "-94.2649, -216.369, 61.462, 0.22", "-95.0899, -215.677, 61.08, 0.07", "-95.6221, -215.264, 60.8433, 0.37", "-97.223, -214.113, 60.194, 0.07", "-97.7496, -213.749, 59.9912, 0.22", "-99.074, -212.881, 59.4749, 0.07", "-99.6294, -212.531, 59.2651, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-23.5714, -336.675, 39.3566, 0.15", "-24.1039, -337.383, 40.1948, 0.15", "-24.5842, -338.141, 40.9553, 0.15", "-24.953, -338.801, 41.5527, 0.07", "-25.2649, -339.387, 42.083, 0.07", "-25.4937, -339.83, 42.4798, 0.07", "-25.6532, -340.145, 42.7558, 0.37", "-25.9167, -340.751, 43.2367, 0.66", "-26.3434, -341.762, 43.9975, 0.07", "-26.5832, -342.347, 44.4705, 0.07", "-26.8104, -342.896, 44.9602, 0.07", "-26.9259, -343.17, 45.2387, 0.52", "-27.1302, -343.675, 45.79, 0.88", "-27.4718, -344.592, 46.854, 0.15", "-27.7374, -345.389, 47.7993, 0.15", "-27.8628, -345.814, 48.2906, 0.15", "-27.9962, -346.376, 48.967, 0.15", "-28.0911, -346.917, 49.6389, 0.88", "-28.2003, -347.906, 50.9299, 0.07", "-28.2181, -348.224, 51.3583, 0.07", "-28.2305, -348.57, 51.8061, 0.37", "-28.2627, -349.407, 52.8492, 0.15", "-28.2889, -349.933, 53.4767, 0.37", "-28.3679, -350.673, 54.3551, 0.22", "-28.4631, -351.277, 55.0325, 0.44", "-28.5669, -351.767, 55.5517, 0.81", "-28.7527, -352.426, 56.2073, 0.29", "-29.0667, -353.223, 56.8728, 0.15", "-29.5356, -354.212, 57.5484, 0.15", "-29.9507, -355.03, 57.9831, 0.15", "-30.2168, -355.548, 58.2068, 0.81", "-30.4882, -356.107, 58.4115, 1.47", "-31.2961, -357.911, 58.9338, 0.15", "-31.8287, -359.182, 59.3249, 0.07", "-32.3582, -360.544, 59.7428, 0.07", "-32.63, -361.259, 59.991, 0.15", "-33.0612, -362.457, 60.4301, 0.07", "-33.2878, -363.116, 60.6771, 0.22", "-34.2446, -365.887, 61.808, 0.07", "-34.551, -366.696, 62.1551, 0.29", "-35.2299, -368.298, 62.8579, 0.07", "-35.6045, -369.105, 63.1965, 0.07", "-36.0534, -369.979, 63.5405, 0.44", "-36.8996, -371.579, 64.1281, 0.15", "-37.5527, -372.793, 64.5194, 0.07", "-37.9325, -373.484, 64.7554, 0.07", "-38.3047, -374.157, 64.9959, 0.29", "-39.4179, -376.143, 65.7757, 0.07", "-39.9891, -377.175, 66.2023, 0.07", "-40.4266, -377.984, 66.5332, 0.07", "-40.8613, -378.784, 66.8872, 0.07", "-41.2745, -379.534, 67.2224, 0.15" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-23.5714, -336.675, 39.3566, 0.22", "-22.9042, -337.752, 40.2333, 0.22", "-21.7039, -339.429, 41.6394, 0.37", "-20.8678, -340.48, 42.5861, 0.15", "-20.1852, -341.302, 43.3359, 0.15", "-19.9417, -341.568, 43.6211, 0.37", "-19.3496, -342.194, 44.3993, 0.88", "-18.0881, -343.371, 46.201, 0.15", "-17.4868, -343.9, 47.1801, 0.52", "-17.3094, -344.06, 47.503, 1.03", "-16.1328, -345.174, 49.9095, 0.22", "-15.3714, -345.941, 51.6421, 0.22", "-15.1578, -346.166, 52.1719, 0.37", "-14.3211, -347.237, 54.5328, 0.22", "-14.0284, -347.687, 55.4212, 0.22", "-13.6839, -348.336, 56.5592, 0.22", "-13.4658, -348.863, 57.3398, 0.22", "-13.2405, -349.464, 58.1092, 0.88", "-12.5902, -351.197, 60.0072, 0.15", "-12.2433, -352.13, 60.8497, 0.22", "-11.7996, -353.32, 61.6813, 0.07", "-11.2376, -354.839, 62.4654, 0.07", "-10.6889, -356.358, 62.9252, 1.18", "-9.84856, -358.861, 63.2512, 0.07", "-9.52629, -359.937, 63.1664, 0.74", "-8.81095, -362.712, 62.6134, 0.07", "-8.65049, -363.514, 62.3529, 0.44", "-8.28987, -366.385, 61.104, 0.07", "-8.21752, -367.898, 60.3895, 1.11", "-8.29295, -370.815, 58.8295, 0.07", "-8.32999, -371.481, 58.4538, 0.22", "-8.5069, -373.614, 57.2186, 0.07", "-8.58642, -374.632, 56.5392, 0.07", "-8.6805, -376.131, 55.2887, 0.96", "-8.63928, -377.875, 53.5946, 0.07", "-8.53848, -378.515, 52.9207, 0.07", "-8.45802, -378.843, 52.5384, 0.29", "-8.04341, -380.144, 50.8339, 0.07", "-7.65496, -381.287, 49.2794, 0.07", "-7.46794, -381.872, 48.4629, 0.66", "-7.07778, -383.273, 46.6319, 0.07", "-6.84858, -384.315, 45.4079, 0.07", "-6.615, -385.494, 44.23, 0.07", "-6.44854, -386.313, 43.5797, 0.96", "-6.14178, -387.855, 42.468, 0.15", "-5.96232, -388.807, 41.817, 0.15", "-5.74821, -389.997, 41.1235, 0.74", "-5.28191, -392.316, 40.0513, 0.15", "-4.99593, -393.583, 39.5801, 0.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-3.90392, 13.3046, -16.6021, 0.59", "-4.66551, 13.9783, -15.7217, 0.59", "-5.23435, 14.5542, -15.0589, 0.59", "-5.79851, 15.1424, -14.4282, 0.59", "-6.38155, 15.7303, -13.8324, 0.74", "-6.86382, 16.1964, -13.3987, 0.74", "-7.61671, 16.9014, -12.8425, 0.44", "-7.81332, 17.0862, -12.7568, 0.44", "-8.26696, 17.518, -12.6718, 0.44", "-8.71885, 17.928, -12.6535, 0.66", "-9.37151, 18.4561, -12.6832, 0.81", "-10.2903, 19.1003, -12.7421, 0.59", "-11.0223, 19.5475, -12.7838, 0.37", "-11.9921, 20.1228, -12.811, 0.22", "-12.5857, 20.4779, -12.8088, 0.44", "-12.9904, 20.7357, -12.7884, 0.74", "-13.8787, 21.3632, -12.6995, 0.37", "-14.6835, 21.9974, -12.5739, 0.22", "-15.0615, 22.3519, -12.5209, 0.22", "-15.4964, 22.8299, -12.4724, 0.66", "-16.0225, 23.4938, -12.4419, 0.52", "-16.6371, 24.3399, -12.4668, 0.81", "-16.8955, 24.7188, -12.5126, 0.81", "-17.5482, 25.677, -12.7239, 0.44", "-18.2053, 26.5671, -13.0304, 0.74", "-18.8653, 27.3352, -13.4325, 0.44", "-19.6186, 28.0572, -13.9907, 0.29", "-20.1461, 28.4653, -14.442, 0.29", "-20.6948, 28.8101, -14.9715, 0.29", "-21.2458, 29.0823, -15.5566, 0.88", "-21.9268, 29.3544, -16.3025, 0.59", "-22.3748, 29.5168, -16.7843, 0.59", "-23.0149, 29.7507, -17.4287, 0.29", "-23.7927, 30.0672, -18.1422, 0.74", "-24.1275, 30.2359, -18.4252, 0.74", "-24.6365, 30.574, -18.8285, 0.29", "-24.9995, 30.9089, -19.0795, 0.22", "-25.2647, 31.2317, -19.2405, 0.22", "-25.5552, 31.6903, -19.3949, 0.22", "-25.9066, 32.3193, -19.5716, 0.74", "-26.1977, 32.8482, -19.746, 0.74", "-26.4742, 33.3467, -19.9498, 0.29", "-26.6907, 33.7061, -20.1206, 0.29", "-27.0055, 34.1935, -20.3675, 0.52", "-27.359, 34.743, -20.677, 0.52", "-27.889, 35.5686, -21.1819, 0.22", "-28.1964, 36.087, -21.5174, 0.15", "-28.6326, 36.8336, -22.0123, 0.59", "-29.0697, 37.6236, -22.5207, 0.22", "-29.2914, 38.069, -22.793, 0.22", "-29.3565, 38.2257, -22.8771, 0.22", "-29.5624, 38.8336, -23.1616, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-3.90392, 13.3046, -16.6021, 1.03", "-3.43073, 13.9253, -16.7554, 1.03", "-2.24041, 15.0649, -17.0456, 0.88", "-1.25328, 15.9108, -17.3002, 0.88", "-0.564451, 16.4891, -17.4981, 0.59", "0.0279822, 17.0129, -17.6799, 0.59", "1.02706, 17.9532, -18.0025, 0.96", "2.16816, 19.0351, -18.3747, 0.52", "3.11182, 20.0334, -18.6871, 0.66", "3.49044, 20.5515, -18.8386, 0.66", "3.92373, 21.3521, -19.0586, 0.66", "4.15697, 21.948, -19.1943, 0.66", "4.45786, 22.9987, -19.4004, 1.18", "4.77505, 24.3232, -19.6408, 0.96", "4.94256, 25.0304, -19.7769, 0.96", "5.21191, 26.08, -20.0266, 0.88", "5.56844, 27.2424, -20.3968, 1.03", "5.7911, 27.9197, -20.6491, 1.18", "6.14181, 28.8785, -21.0316, 0.74", "6.51401, 29.7806, -21.3985, 0.74", "6.81837, 30.4573, -21.6842, 0.96", "7.30685, 31.4921, -22.126, 1.11", "7.89823, 32.6176, -22.6425, 0.96", "8.86036, 34.2206, -23.4094, 0.59", "9.41598, 35.0346, -23.7978, 0.59", "10.2144, 36.0268, -24.2915, 0.74", "10.5985, 36.4323, -24.5089, 0.74", "11.4656, 37.2074, -24.9403, 0.59", "12.3932, 37.9053, -25.3585, 0.59", "13.2073, 38.467, -25.6994, 0.59", "14.1385, 39.149, -26.0781, 0.52", "14.8208, 39.7348, -26.3609, 0.52", "15.5734, 40.5543, -26.7415, 0.74", "15.9743, 41.2014, -27.0315, 0.88", "16.3274, 42.0869, -27.4671, 0.59", "16.5871, 43.1246, -28.0488, 0.44", "16.7533, 44.2077, -28.7077, 0.59", "16.871, 45.2332, -29.3663, 0.96", "17.0518, 46.5119, -30.2183, 0.52", "17.2665, 47.5012, -30.8883, 0.52", "17.5126, 48.2449, -31.3819, 0.52", "18.0522, 49.3771, -32.1143, 0.37", "18.455, 50.0608, -32.5265, 0.37", "19.2312, 51.2727, -33.1697, 0.44", "19.8182, 52.2402, -33.6088, 0.59", "20.2716, 53.1501, -33.9567, 0.59", "20.5294, 53.8549, -34.184, 0.59", "20.7904, 55.114, -34.5674, 0.59", "20.8642, 56.111, -34.9043, 0.66", "20.825, 57.3337, -35.3704, 0.74", "20.7415, 58.4624, -35.8603, 0.52", "20.6643, 59.4333, -36.3579, 0.29", "20.6458, 60.3731, -36.9918, 0.29", "20.8028, 60.9573, -37.7412, 0.44", "21.0936, 61.1217, -38.4595, 0.59", "21.558, 61.0377, -39.4201, 0.29", "21.864, 60.8675, -40.0037, 0.29", "22.3386, 60.4892, -40.8913, 0.29", "22.6987, 60.1637, -41.5397, 0.29", "23.0375, 59.8596, -42.1702, 0.44", "23.3627, 59.6244, -42.843, 0.44", "23.5995, 59.5312, -43.4408, 0.52", "23.7289, 59.7041, -43.9533, 0.52", "23.6966, 60.1805, -44.3219, 0.52", "23.5054, 60.9436, -44.7332, 0.66", "23.1709, 61.8591, -45.1313, 0.66", "22.7351, 62.7135, -45.4348, 0.37", "22.1019, 63.5813, -45.7295, 0.37", "21.462, 64.1742, -45.9637, 0.37", "20.9287, 64.4507, -46.1403, 0.37", "20.4836, 64.5439, -46.2835, 0.37", "19.6813, 64.5217, -46.5541, 0.29", "18.7573, 64.275, -46.8922, 0.22", "17.9898, 63.8622, -47.2079, 0.22", "17.0274, 62.9642, -47.6864, 0.66", "16.7012, 62.4218, -47.9212, 0.37", "16.4591, 61.7563, -48.217, 0.22", "16.3186, 60.93, -48.5948, 0.22", "16.3025, 60.2745, -48.9162, 0.22", "16.3535, 59.328, -49.3905, 0.29", "16.4948, 58.0688, -50.0398, 0.15", "16.6421, 56.9109, -50.6801, 0.15", "16.8014, 55.5403, -51.4969, 0.15", "16.9065, 54.54, -52.1691, 0.15", "16.9303, 54.2291, -52.3994, 0.15" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.72271, 1.23644, -10.2058, 1.25", "-4.0259, -0.611968, -11.3978, 1.25", "-4.10228, -1.7461, -12.0584, 1.25", "-4.11846, -3.18741, -12.8511, 1.25", "-4.13226, -4.08727, -13.3111, 1.25", "-4.21871, -5.33773, -13.9019, 1.11", "-4.36878, -6.29107, -14.3263, 1.33", "-4.75294, -7.78654, -14.8616, 0.81", "-5.23627, -8.86261, -15.1258, 0.66", "-5.78212, -9.67537, -15.2648, 0.66", "-6.76511, -10.8449, -15.3992, 1.03", "-7.99778, -12.1632, -15.4857, 1.4", "-8.96662, -13.186, -15.5225, 1.99", "-10.3033, -14.6435, -15.5254, 1.33", "-11.2411, -15.7943, -15.5132, 0.96", "-12.2831, -17.1992, -15.5074, 0.81", "-12.9886, -18.3212, -15.5065, 0.74", "-13.632, -19.5726, -15.4932, 0.96", "-14.1114, -20.744, -15.4964, 1.33", "-14.4346, -21.7719, -15.5117, 1.47" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-3.72271, 1.23644, -10.2058, 1.77", "-4.9032, 0.949825, -10.2507, 1.77", "-6.10157, 0.630644, -10.318, 1.62", "-7.14016, 0.325209, -10.4142, 1.84", "-7.84578, 0.117696, -10.4796, 2.06", "-9.11253, -0.254836, -10.597, 1.84", "-10.3005, -0.604206, -10.707, 1.84", "-11.5233, -1.00386, -10.8589, 1.84", "-12.4845, -1.32271, -11.01, 2.36" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.58211, 38.2183, 15.0656, 0.52", "-4.37642, 39.4913, 14.282, 0.52", "-4.25196, 40.7403, 13.4693, 0.52", "-4.23854, 41.4076, 12.9929, 0.52", "-4.27276, 42.2554, 12.3625, 0.59", "-4.32836, 43.0353, 11.7604, 0.44", "-4.37733, 43.6179, 11.303, 0.44", "-4.45887, 44.2405, 10.8071, 0.52", "-4.56866, 45.1529, 10.082, 0.88", "-4.64487, 45.7882, 9.55376, 1.25", "-4.74407, 46.6419, 8.84239, 1.18", "-4.86359, 47.7812, 7.91747, 1.18", "-4.95278, 48.8785, 7.04782, 0.52", "-5.01162, 50.0466, 6.1445, 0.44", "-5.0384, 50.8135, 5.5582, 0.44", "-5.05431, 51.3199, 5.17959, 0.44", "-5.08114, 52.226, 4.5453, 0.52", "-5.09227, 53.0389, 4.04097, 0.59", "-5.07774, 54.1109, 3.47956, 0.66", "-5.04494, 54.9807, 3.10452, 0.66", "-5.00441, 55.827, 2.81695, 0.96", "-4.95806, 56.7079, 2.58056, 1.18", "-4.86331, 58.0922, 2.32361, 0.96", "-4.78493, 59.092, 2.2016, 0.44", "-4.72935, 59.7349, 2.14419, 0.29", "-4.6466, 60.5284, 2.08047, 0.29", "-4.58992, 60.9143, 2.03973, 0.29", "-4.42497, 61.6295, 1.94302, 0.59", "-4.28068, 62.0311, 1.87502, 0.96", "-3.80613, 63.0042, 1.6405, 1.25", "-3.50993, 63.5046, 1.47228, 1.11", "-2.85311, 64.5365, 1.0426, 0.52", "-2.37932, 65.3259, 0.68838, 0.52", "-1.9885, 66.0417, 0.365706, 0.22", "-1.58547, 66.8561, -0.00503683, 0.29", "-1.24491, 67.605, -0.37448, 0.59", "-0.951409, 68.3103, -0.779091, 1.11", "-0.636152, 69.1235, -1.30986, 1.25", "-0.278397, 70.0728, -2.02738, 0.96", "-0.0112869, 70.7272, -2.65045, 0.29", "0.22854, 71.1796, -3.26525, 0.22", "0.44483, 71.4554, -3.89221, 0.22", "0.609794, 71.6124, -4.48482, 0.37", "0.779448, 71.7746, -5.37537, 0.59", "0.88317, 71.9442, -6.44415, 0.74", "0.934417, 72.1563, -7.57206, 0.96", "0.964403, 72.3644, -8.50312, 1.18", "0.999188, 72.6356, -9.54585, 1.18", "1.0518, 72.98, -10.7132, 1.25", "1.16587, 73.4258, -11.9369, 1.25", "1.33431, 73.8952, -12.901, 0.52", "1.51149, 74.2939, -13.528, 0.29", "1.789, 74.8252, -14.172, 0.29", "2.0152, 75.2099, -14.524, 0.66", "2.42449, 75.9445, -14.9863, 0.66", "2.89457, 76.9958, -15.4352, 0.52", "3.07735, 77.6748, -15.6274, 0.59", "3.17626, 78.4501, -15.7854, 0.74", "3.18883, 78.915, -15.8497, 0.74", "3.11113, 80.0244, -16.0118, 0.29", "2.99181, 80.8103, -16.1243, 0.29", "2.75981, 82.0111, -16.2854, 0.44", "2.6671, 82.4777, -16.348, 0.81", "2.55647, 83.1071, -16.4531, 0.81", "2.38429, 84.3554, -16.7365, 0.66", "2.3069, 85.4279, -17.0628, 0.66", "2.30542, 85.8658, -17.2164, 0.66", "2.33591, 86.7246, -17.5558, 0.44", "2.36392, 87.8429, -18.0244, 0.59", "2.36098, 88.619, -18.3465, 0.44", "2.3003, 89.6876, -18.7786, 0.52", "2.21092, 90.3596, -19.0595, 0.52", "2.06557, 91.0527, -19.3639, 0.44", "1.85259, 91.8387, -19.7391, 0.81", "1.57076, 92.7286, -20.1985, 1.03", "1.20826, 93.8, -20.8043, 0.66", "0.95771, 94.4994, -21.2316, 0.44", "0.755277, 95.1331, -21.6181, 0.29", "0.595768, 95.8129, -21.9759, 0.29", "0.523784, 96.2457, -22.1484, 0.29", "0.43801, 96.8769, -22.3629, 0.29", "0.37147, 97.4247, -22.5102, 0.44", "0.180359, 98.7362, -22.8325, 0.74", "-0.123576, 100.4, -23.2361, 0.59", "-0.42789, 101.725, -23.606, 0.44", "-0.651535, 102.534, -23.8937, 0.44", "-0.738492, 102.802, -24.0293, 0.59", "-0.950777, 103.365, -24.4549, 0.59", "-1.15664, 103.828, -24.9512, 0.59", "-1.37899, 104.292, -25.6123, 0.59", "-1.54811, 104.682, -26.2474, 0.74", "-1.75291, 105.298, -27.2266, 0.96", "-1.89528, 105.873, -28.0483, 1.18", "-2.00059, 106.527, -28.8411, 0.59", "-2.06521, 107.201, -29.5149, 0.59", "-2.10973, 107.983, -30.1444, 0.59", "-2.14137, 108.459, -30.4446, 0.29", "-2.25039, 109.259, -30.8188, 0.22", "-2.38677, 109.816, -31.0472, 0.22", "-2.65211, 110.533, -31.3283, 0.22", "-3.00997, 111.194, -31.6401, 0.22", "-3.5722, 111.982, -32.102, 0.81", "-4.27026, 112.795, -32.6728, 0.22", "-4.8815, 113.436, -33.1845, 0.37", "-5.52618, 114.046, -33.7313, 0.88", "-6.78368, 115.111, -34.8163, 0.15", "-7.44497, 115.63, -35.4132, 0.15", "-7.76556, 115.87, -35.7349, 0.15" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-4.58211, 38.2183, 15.0656, 0.81", "-4.8118, 39.3807, 16.2498, 0.81", "-5.01283, 40.4792, 17.2333, 0.81", "-5.31127, 41.7255, 18.1986, 0.81", "-5.52541, 42.4499, 18.684, 0.59", "-5.77761, 43.2261, 19.1623, 0.59", "-6.02705, 43.9853, 19.588, 0.44", "-6.22045, 44.6036, 19.8238, 0.44", "-6.60327, 45.7741, 20.1719, 0.44", "-6.88604, 46.6054, 20.4061, 0.74", "-7.22458, 47.5887, 20.752, 1.11", "-7.47305, 48.3193, 21.026, 1.11", "-7.92146, 49.6907, 21.573, 0.52", "-8.2273, 50.7743, 22.0217, 0.66", "-8.45959, 51.7914, 22.4757, 0.96", "-8.68044, 52.8563, 22.9779, 1.33", "-8.98763, 54.2885, 23.6662, 1.77" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-170.916, -316.455, 55.8098, 0.29", "-171.135, -317.803, 56.2539, 0.29", "-171.459, -319.171, 56.6117, 0.66", "-171.998, -321.064, 57.0026, 0.15", "-172.332, -322.134, 57.174, 0.15", "-172.604, -322.823, 57.2424, 0.59", "-173.308, -324.228, 57.311, 0.07", "-173.956, -325.096, 57.2613, 0.07", "-174.386, -325.524, 57.193, 0.15", "-174.889, -325.95, 57.0259, 0.37", "-176.126, -326.952, 56.4723, 0.07", "-177.006, -327.63, 56.014, 0.07", "-177.452, -327.962, 55.764, 0.07", "-177.976, -328.346, 55.4907, 0.81", "-179.301, -329.36, 54.8008, 0.22", "-180.097, -330.037, 54.3736, 0.44", "-180.931, -330.926, 53.8844, 0.15", "-181.354, -331.454, 53.604, 0.15", "-181.641, -331.867, 53.3965, 0.44", "-182.097, -332.548, 53.0764, 0.66", "-182.9, -333.815, 52.5924, 0.15", "-183.37, -334.655, 52.295, 0.15", "-183.686, -335.394, 52.0261, 0.15", "-183.982, -336.213, 51.6936, 0.37" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-170.916, -316.455, 55.8098, 0.07", "-172.332, -315.275, 56.1532, 0.07", "-173.355, -314.415, 56.3485, 0.07", "-174.311, -313.624, 56.5032, 0.07", "-174.768, -313.239, 56.5652, 0.15", "-175.582, -312.487, 56.6548, 0.07", "-176.106, -311.947, 56.7006, 0.07", "-176.545, -311.392, 56.6683, 0.22", "-176.864, -310.931, 56.6811, 0.15", "-177.052, -310.646, 56.7028, 0.15", "-177.677, -309.74, 56.7836, 0.29", "-178.229, -309.018, 56.8681, 0.07", "-178.804, -308.345, 56.9662, 0.15", "-180.122, -306.978, 57.1606, 0.07", "-180.926, -306.314, 57.2693, 0.15", "-181.607, -305.906, 57.3497, 0.15", "-182.247, -305.66, 57.4133, 0.15", "-182.919, -305.535, 57.4675, 0.15", "-183.917, -305.449, 57.516, 0.15", "-184.836, -305.485, 57.4992, 0.07", "-185.721, -305.61, 57.5348, 0.07", "-186.268, -305.728, 57.5813, 0.66", "-187.312, -306.042, 57.666, 0.81" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-4.99593, -393.583, 39.5801, 0.15", "-4.91337, -394.453, 38.8508, 0.15", "-4.91007, -394.934, 38.5071, 0.15", "-4.89971, -395.158, 38.3617, 0.15", "-4.88436, -395.409, 38.1982, 0.52", "-4.86257, -395.761, 37.9807, 0.81", "-4.8252, -396.634, 37.4358, 0.22", "-4.80248, -397.305, 37.0513, 0.22", "-4.79839, -397.782, 36.789, 0.15", "-4.78335, -398.186, 36.5662, 0.22", "-4.73179, -398.7, 36.2676, 0.29", "-4.63501, -399.221, 35.9433, 0.22", "-4.54989, -399.535, 35.7312, 0.22", "-4.45555, -399.889, 35.4805, 0.37", "-4.34947, -400.364, 35.1322, 0.37", "-4.21428, -400.993, 34.6763, 0.22", "-4.14604, -401.247, 34.4758, 0.22", "-4.02999, -401.625, 34.1559, 0.22", "-3.97923, -401.814, 33.9848, 0.22", "-3.93621, -402.093, 33.7229, 0.22", "-3.90237, -402.381, 33.4588, 0.15", "-3.81829, -402.953, 32.9605, 0.44", "-3.71494, -403.636, 32.4115, 0.22", "-3.66349, -404.044, 32.1194, 0.29", "-3.56559, -404.89, 31.5573, 0.07", "-3.50528, -405.431, 31.2237, 0.66", "-3.42886, -406.189, 30.7978, 0.07", "-3.38197, -406.707, 30.5358, 0.07", "-3.30062, -407.298, 30.2354, 0.29", "-3.18142, -407.926, 29.9057, 0.07", "-3.11971, -408.223, 29.7437, 0.44", "-3.09677, -408.383, 29.651, 0.44", "-3.03359, -408.897, 29.3363, 0.74", "-2.85868, -409.687, 28.7808, 0.07", "-2.75407, -410.009, 28.5389, 0.22", "-2.57493, -410.442, 28.216, 0.07", "-2.42041, -410.822, 27.9341, 0.07", "-2.27376, -411.166, 27.6853, 0.66", "-1.79446, -412.104, 27.0405, 0.07", "-1.51534, -412.496, 26.7794, 0.07", "-1.14342, -412.875, 26.4912, 0.29" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-4.99593, -393.583, 39.5801, 0.07", "-3.53449, -394.041, 39.4627, 0.07", "-2.85651, -394.224, 39.4005, 0.29", "-2.02719, -394.429, 39.3185, 0.07", "-1.33406, -394.585, 39.2465, 0.52", "0.543537, -394.897, 38.9699, 0.07", "1.63648, -395.018, 38.7615, 0.07", "2.0628, -395.04, 38.6686, 0.59", "2.64403, -395.044, 38.5218, 0.74", "3.20889, -395.01, 38.3638, 0.37", "4.6852, -394.815, 37.8831, 0.07", "5.40177, -394.627, 37.5648, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.4346, -21.7719, -15.5117, 0.59", "-13.8069, -22.5546, -17.5703, 0.59", "-13.3851, -23.2093, -19.1696, 0.59", "-12.8718, -24.1765, -21.4863, 0.52", "-12.5587, -24.8917, -23.3369, 0.52", "-12.3698, -25.3667, -24.6817, 0.52", "-12.2807, -25.5685, -25.3663, 0.52", "-12.1371, -25.784, -26.6318, 0.52", "-12.0565, -25.8198, -27.2168, 0.52", "-11.7447, -25.7467, -28.59, 0.66", "-11.5401, -25.6896, -29.0903, 0.66", "-10.7393, -25.6154, -30.4492, 0.29", "-9.80803, -25.7152, -31.6999, 0.88", "-8.91482, -26.0736, -32.6066, 0.37", "-8.02809, -26.6441, -33.3687, 0.29", "-7.22617, -27.2483, -33.9441, 0.29", "-6.61959, -27.7386, -34.3248, 0.29", "-6.21091, -28.0875, -34.5334, 0.44", "-5.30669, -28.7573, -34.9302, 0.52", "-4.32795, -29.263, -35.2825, 0.15", "-3.42101, -29.5486, -35.5238, 0.15", "-2.32563, -29.7495, -35.7304, 0.15", "-1.47533, -29.8122, -35.8525, 0.15", "-0.406812, -29.7885, -36.0358, 0.15", "0.934698, -29.644, -36.284, 0.15", "2.43295, -29.4513, -36.5529, 0.29", "3.33434, -29.3284, -36.7261, 0.15", "4.7942, -29.0781, -37.0239, 0.22", "6.70677, -28.6684, -37.4559, 0.07", "7.49197, -28.4778, -37.6576, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-14.4346, -21.7719, -15.5117, 0.88", "-14.9676, -23.1739, -16.1999, 0.88", "-15.4723, -24.4737, -17.0719, 0.74", "-15.917, -25.6187, -17.84, 0.88", "-16.5697, -27.2997, -18.9678, 0.88", "-17.1048, -28.6776, -19.8921, 0.96", "-17.6893, -30.1828, -20.902, 0.96", "-18.0587, -30.9885, -21.7243, 0.96" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-12.4845, -1.32271, -11.01, 0.81", "-13.9058, -1.31788, -10.7393, 0.81", "-14.9318, -1.28406, -10.4246, 0.44", "-15.5724, -1.20647, -10.1154, 0.44", "-16.3422, -1.01358, -9.58778, 0.66", "-16.8413, -0.828899, -9.16985, 0.74", "-17.5121, -0.517328, -8.55082, 0.44", "-18.1448, -0.122261, -7.84472, 0.59", "-18.9181, 0.461204, -6.91714, 0.59", "-19.6459, 1.10075, -6.02713, 0.59", "-20.241, 1.6708, -5.28622, 0.59", "-20.8976, 2.27975, -4.49584, 0.81", "-21.3914, 2.67066, -3.96061, 0.66", "-21.8126, 2.91942, -3.5663, 0.88", "-22.7607, 3.31962, -2.75574, 0.37", "-23.2955, 3.49441, -2.29806, 0.44", "-24.0173, 3.70308, -1.648, 0.59", "-24.8414, 3.95157, -0.856739, 0.44", "-25.57, 4.2323, -0.121183, 0.44", "-26.2145, 4.58655, 0.518334, 0.44", "-26.8273, 5.04178, 1.08498, 0.66", "-27.3494, 5.52708, 1.5024, 0.81", "-27.7809, 5.99587, 1.80556, 0.81", "-28.4711, 6.76742, 2.21838, 0.66", "-29.387, 7.7591, 2.63788, 0.59", "-30.1541, 8.50454, 2.85236, 0.59", "-31.1914, 9.36279, 2.98896, 0.74", "-31.5957, 9.64097, 3.00256, 0.52", "-32.4312, 10.1052, 2.98122, 0.22", "-33.2778, 10.4752, 2.91419, 0.22", "-34.138, 10.8043, 2.79746, 0.22", "-34.7022, 11.02, 2.70598, 0.37", "-35.3521, 11.2769, 2.60132, 0.81", "-35.9742, 11.535, 2.51159, 0.81", "-36.7932, 11.9112, 2.41555, 0.59", "-37.7295, 12.3677, 2.35526, 0.37", "-38.4805, 12.7637, 2.32517, 0.29", "-39.2246, 13.1949, 2.27156, 0.37", "-39.7091, 13.5085, 2.19328, 0.29", "-40.4872, 14.053, 2.01801, 0.29", "-41.2109, 14.591, 1.82756, 0.81", "-41.9708, 15.1682, 1.60587, 0.52", "-42.6177, 15.6768, 1.37823, 0.52", "-43.5855, 16.4714, 0.99028, 0.37", "-44.1291, 16.9498, 0.727143, 0.66", "-44.6847, 17.4678, 0.397601, 0.66", "-45.5007, 18.2585, -0.170309, 0.44", "-46.3504, 19.0845, -0.816811, 0.81", "-46.7348, 19.4524, -1.11273, 0.81", "-47.3707, 20.0464, -1.6223, 0.37", "-47.8635, 20.4643, -2.06586, 0.22", "-48.3783, 20.7747, -2.53561, 0.22", "-48.8103, 20.8919, -2.93199, 0.22", "-49.1907, 20.9036, -3.25857, 0.81", "-49.4796, 20.8861, -3.49777, 1.03", "-50.1897, 20.7894, -4.0635, 0.66", "-51.1869, 20.6234, -4.83077, 0.29", "-52.4829, 20.4406, -5.84052, 0.29", "-53.1992, 20.3902, -6.40816, 0.22", "-53.7263, 20.4093, -6.84687, 0.22", "-54.0242, 20.4575, -7.10518, 0.22", "-54.4737, 20.6234, -7.51654, 0.22", "-54.9233, 20.9008, -7.95217, 0.22", "-55.2532, 21.1644, -8.27267, 0.22", "-55.8387, 21.6322, -8.8692, 0.22", "-56.1806, 21.9192, -9.23102, 0.66", "-56.8072, 22.4759, -9.92508, 0.66", "-57.3929, 23.0051, -10.606, 0.15", "-57.9632, 23.4749, -11.2515, 0.15", "-58.7414, 24.0583, -12.1114, 0.74" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-12.4845, -1.32271, -11.01, 1.55", "-12.9435, -3.1451, -11.6931, 1.55", "-13.3809, -4.53823, -12.2121, 1.4", "-13.8558, -5.7361, -12.6183, 1.33", "-14.4835, -7.05941, -12.9846, 0.96", "-15.093, -8.18662, -13.21, 0.88", "-15.7129, -9.23183, -13.336, 1.4", "-16.3185, -10.0504, -13.3383, 1.47", "-17.5107, -11.4371, -13.186, 1.03", "-18.6462, -12.6079, -12.9772, 0.96", "-19.9247, -13.8595, -12.6908, 1.03", "-21.0281, -14.9682, -12.4166, 1.03", "-22.2122, -16.2203, -12.1153, 1.11", "-23.029, -17.1407, -11.946, 0.88", "-24.0512, -18.3945, -11.8077, 0.88", "-24.7391, -19.3176, -11.8013, 1.11", "-25.6387, -20.6451, -11.9202, 1.11", "-26.3487, -21.8236, -12.0983, 0.96", "-27.1233, -23.3157, -12.3649, 1.03", "-27.5785, -24.2998, -12.5589, 1.11", "-28.2375, -25.7958, -12.7981, 0.96", "-28.7237, -26.8434, -12.9462, 0.88", "-28.9702, -27.338, -13.0058, 0.81", "-29.4859, -28.3397, -13.1123, 0.74", "-30.0198, -29.3371, -13.2116, 0.88", "-30.8267, -30.732, -13.3555, 1.03", "-31.3431, -31.5168, -13.4156, 1.25", "-32.3518, -32.8528, -13.4864, 1.25", "-33.4059, -34.1031, -13.5245, 1.18", "-34.4391, -35.2679, -13.5663, 1.11", "-35.4473, -36.3651, -13.6152, 1.03", "-36.9381, -37.9603, -13.7184, 0.96", "-37.9594, -38.9929, -13.7347, 0.96", "-38.7112, -39.6668, -13.6852, 1.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-8.98763, 54.2885, 23.6662, 0.29", "-9.83054, 55.553, 24.7607, 0.29", "-10.4189, 56.4215, 25.5003, 0.22", "-10.8993, 57.1182, 26.0931, 0.22", "-11.1414, 57.4915, 26.4126, 0.22", "-11.3346, 57.8128, 26.6972, 0.59", "-11.6325, 58.3488, 27.1942, 1.03", "-11.8774, 58.9195, 27.762, 1.33", "-12.2166, 59.8193, 28.599, 0.59", "-12.4409, 60.4428, 29.1385, 0.22", "-12.6224, 61.0907, 29.5864, 0.22", "-12.7871, 61.9556, 30.0491, 0.22", "-12.8615, 62.5801, 30.2986, 0.74", "-12.908, 63.4894, 30.5331, 1.84", "-12.9175, 64.2508, 30.6463, 1.84", "-12.9162, 66.6375, 30.7781, 0.22", "-12.8901, 68.0375, 30.7495, 0.22", "-12.8429, 68.8076, 30.7043, 0.22", "-12.6658, 70.3532, 30.6317, 0.22", "-12.6, 70.7399, 30.6198, 0.44", "-12.4197, 71.5417, 30.6078, 1.18", "-12.0873, 72.7373, 30.6267, 1.7", "-11.4983, 74.7732, 30.7213, 0.15", "-11.1341, 76.0778, 30.821, 0.15", "-11.0234, 76.5046, 30.8802, 0.74", "-10.8289, 77.3263, 31.0154, 1.7", "-10.7998, 77.4655, 31.0422, 1.7", "-10.5901, 78.961, 31.3132, 0.15", "-10.5693, 79.5319, 31.3892, 0.15", "-10.5973, 80.4455, 31.4635, 0.15", "-10.6727, 81.2954, 31.4994, 0.29", "-10.7329, 81.6749, 31.5025, 0.29", "-10.9858, 82.949, 31.4664, 0.07", "-11.1145, 83.529, 31.4304, 0.22", "-11.2401, 84.0857, 31.3672, 0.66", "-11.5315, 85.3474, 31.17, 0.96", "-11.7683, 86.436, 30.9721, 0.22", "-12.0253, 87.7712, 30.6965, 0.66", "-12.1873, 88.8096, 30.4933, 0.44", "-12.2719, 89.5112, 30.3694, 0.74", "-12.3373, 90.2593, 30.2666, 1.55", "-12.3737, 91.2106, 30.1937, 1.84", "-12.3885, 93.1939, 30.2353, 0.22", "-12.384, 94.2717, 30.4057, 0.22", "-12.3805, 94.6382, 30.5159, 0.59", "-12.388, 95.3666, 30.8342, 1.25", "-12.4241, 96.1669, 31.2545, 1.62", "-12.5472, 97.7337, 32.1705, 0.22", "-12.6269, 98.5221, 32.6556, 0.22", "-12.7929, 99.7276, 33.3381, 1.03", "-13.1065, 101.603, 34.2255, 0.15", "-13.3439, 102.806, 34.6549, 0.15", "-13.4763, 103.406, 34.795, 0.52", "-13.6021, 103.941, 34.8416, 1.03", "-13.8613, 105.019, 34.7985, 1.18", "-14.2567, 106.518, 34.5585, 0.22", "-14.4669, 107.234, 34.3609, 0.22", "-14.7138, 107.974, 34.1299, 0.22", "-15.133, 109.094, 33.7527, 0.22", "-15.3424, 109.596, 33.5698, 0.74", "-15.7803, 110.541, 33.2116, 1.77", "-16.3814, 111.711, 32.747, 0.22", "-16.7881, 112.446, 32.4196, 0.22", "-17.132, 113.012, 32.1248, 0.22", "-17.3473, 113.35, 31.9243, 0.22", "-17.8245, 114.135, 31.4653, 0.07", "-18.2309, 114.914, 31.0451, 0.07", "-18.4922, 115.48, 30.7787, 0.07", "-18.7887, 116.175, 30.4991, 0.37", "-19.1173, 116.98, 30.2431, 1.03", "-19.6471, 118.315, 29.9127, 0.52", "-20.2723, 119.922, 29.6571, 0.15", "-20.5748, 120.733, 29.5962, 0.29", "-20.7892, 121.326, 29.5858, 0.96", "-21.0666, 122.1, 29.6036, 1.11", "-21.4066, 123.025, 29.6564, 0.22", "-21.8203, 124.123, 29.7637, 0.22", "-22.111, 124.836, 29.8815, 0.37", "-22.3994, 125.509, 30.0093, 0.96", "-22.6753, 126.091, 30.1397, 0.96", "-23.102, 126.877, 30.3308, 0.15", "-23.6516, 127.756, 30.5274, 0.22", "-24.2714, 128.635, 30.7085, 0.37", "-24.942, 129.501, 30.8868, 0.74", "-25.7885, 130.517, 31.0888, 0.22", "-26.8742, 131.738, 31.3142, 0.66", "-27.7703, 132.697, 31.4969, 0.07", "-28.1142, 133.061, 31.5712, 0.07", "-28.5426, 133.533, 31.6515, 0.15", "-29.0243, 134.094, 31.7207, 0.81", "-29.5229, 134.722, 31.7698, 1.25", "-30.3012, 135.767, 31.8346, 0.37", "-31.1387, 136.953, 31.8819, 0.22", "-31.9288, 138.093, 31.8889, 0.37", "-32.7207, 139.254, 31.8643, 0.88", "-33.1399, 139.88, 31.8357, 0.37", "-33.7026, 140.739, 31.7897, 0.15", "-34.2352, 141.56, 31.7404, 0.15", "-34.6635, 142.245, 31.7312, 0.37", "-35.1268, 143.03, 31.8055, 0.74", "-35.5254, 143.734, 31.9208, 0.29", "-36.1772, 144.935, 32.1895, 0.15", "-36.3744, 145.327, 32.3046, 0.44", "-36.8289, 146.28, 32.6401, 1.03", "-37.3145, 147.341, 33.0441, 0.44", "-37.7361, 148.269, 33.4278, 0.15", "-38.2114, 149.317, 33.8737, 0.74", "-38.8441, 150.792, 34.4651, 0.15", "-39.101, 151.452, 34.7167, 0.22", "-39.3272, 152.118, 34.9588, 0.81", "-39.4727, 152.657, 35.1389, 0.81", "-39.6956, 153.614, 35.44, 0.22", "-39.9893, 154.981, 35.8184, 0.15", "-40.1785, 155.925, 36.071, 0.22", "-40.3078, 156.61, 36.2506, 0.37", "-40.5442, 157.917, 36.5903, 0.96", "-40.8438, 159.552, 36.9891, 0.15", "-40.9924, 160.303, 37.1482, 0.15", "-41.1402, 160.939, 37.259, 0.15", "-41.345, 161.689, 37.3453, 0.66", "-41.4789, 162.132, 37.3715, 0.66", "-41.8552, 163.259, 37.3675, 0.07", "-42.1586, 164.167, 37.359, 0.07", "-42.2881, 164.534, 37.3674, 0.44", "-42.4571, 164.996, 37.3909, 0.74", "-42.6554, 165.515, 37.4413, 0.96", "-42.8683, 166.058, 37.5247, 0.96", "-43.396, 167.374, 37.796, 0.15", "-43.7743, 168.309, 38.0232, 0.15", "-44.226, 169.387, 38.284, 0.15", "-44.4706, 169.951, 38.4081, 0.15", "-44.7269, 170.502, 38.5119, 0.15", "-44.9947, 171.012, 38.5847, 0.37", "-45.294, 171.493, 38.6503, 0.81", "-45.7049, 172.048, 38.7416, 1.03", "-46.3, 172.772, 38.899, 0.37", "-46.9736, 173.534, 39.089, 0.15", "-47.8276, 174.447, 39.3584, 0.29", "-49.0512, 175.648, 39.7862, 0.29", "-49.9801, 176.491, 40.139, 0.15", "-50.6012, 177.027, 40.3912, 0.29", "-51.3334, 177.63, 40.7083, 0.88", "-52.2633, 178.362, 41.1276, 0.15", "-53.1493, 179.04, 41.5392, 0.15", "-53.9039, 179.601, 41.8734, 0.15", "-54.7465, 180.232, 42.252, 0.96" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-8.98763, 54.2885, 23.6662, 0.22", "-8.04733, 55.4089, 24.2516, 0.22", "-7.42994, 56.1921, 24.574, 0.15", "-6.8451, 56.9767, 24.8904, 0.22", "-6.36217, 57.6584, 25.1813, 0.15", "-5.96001, 58.2403, 25.4385, 0.37", "-5.75196, 58.5663, 25.5887, 0.37", "-5.19757, 59.5383, 26.0532, 0.15", "-4.7089, 60.486, 26.5093, 0.15", "-4.42479, 61.0748, 26.8058, 0.66", "-4.01942, 61.9258, 27.2467, 1.03", "-3.45895, 63.0834, 27.8806, 0.15", "-3.16514, 63.6707, 28.2046, 0.15", "-2.81834, 64.3434, 28.5702, 0.15", "-2.43848, 65.063, 28.9158, 0.59", "-1.96061, 65.971, 29.3146, 0.07", "-1.64158, 66.5984, 29.5676, 0.07", "-1.33254, 67.2149, 29.7801, 0.66", "-1.21725, 67.4705, 29.8548, 0.66", "-0.962233, 68.1334, 30.0492, 0.15", "-0.747513, 68.8139, 30.2391, 0.15", "-0.646053, 69.1877, 30.3381, 0.52", "-0.467814, 69.8654, 30.499, 1.55", "-0.32509, 70.4006, 30.6405, 1.77", "0.0216875, 71.6686, 30.9979, 0.74", "0.311792, 72.6946, 31.3291, 0.15", "0.490286, 73.3124, 31.5463, 0.15", "0.654409, 73.9128, 31.7842, 0.22", "0.809946, 74.6191, 32.1012, 0.22", "0.937283, 75.3249, 32.4531, 0.37", "1.05302, 76.1305, 32.8883, 0.52", "1.11147, 76.6304, 33.1793, 1.47", "1.18401, 77.3058, 33.6268, 2.06", "1.34145, 78.6674, 34.5887, 0.29", "1.41707, 79.2448, 35.0017, 0.29", "1.55222, 80.1909, 35.6997, 0.74", "1.69243, 81.0376, 36.2995, 0.22", "1.94791, 82.2703, 37.1377, 0.29", "2.07172, 82.7699, 37.4547, 0.52", "2.16968, 83.1251, 37.6573, 0.22", "2.37662, 83.9919, 38.0352, 0.22", "2.54605, 84.8278, 38.3245, 0.22", "2.72988, 85.8637, 38.6102, 0.22", "2.79493, 86.3232, 38.7081, 0.44", "2.88541, 87.1563, 38.8764, 1.25", "3.05366, 89.0736, 39.2574, 0.07", "3.12586, 90.1409, 39.4552, 0.07", "3.14529, 90.6094, 39.5403, 0.22", "3.16125, 91.3083, 39.6567, 0.96", "3.16422, 92.0168, 39.7736, 0.29", "3.15556, 93.1867, 39.9574, 0.07", "3.14558, 93.8843, 40.0741, 0.07", "3.13687, 94.2833, 40.1196, 0.15", "3.11965, 95.0008, 40.1739, 1.25", "3.07274, 97.5194, 40.289, 0.15", "3.06574, 97.9141, 40.298, 0.44", "3.05197, 98.6847, 40.2963, 0.96", "3.02973, 99.9902, 40.3001, 1.18", "3.00103, 101.718, 40.3131, 0.07", "2.99281, 102.309, 40.3175, 0.22", "2.99574, 103.196, 40.3371, 0.88", "3.00351, 103.91, 40.369, 0.44", "3.02788, 104.793, 40.4308, 0.15", "3.05473, 105.57, 40.5148, 0.15", "3.07051, 106.054, 40.5641, 0.37", "3.09367, 107.291, 40.6695, 1.55", "3.11742, 109.287, 40.8151, 0.07", "3.11895, 110.184, 40.8694, 0.07", "3.11573, 110.833, 40.8941, 0.37", "3.10901, 111.325, 40.9176, 0.37", "3.08217, 112.468, 40.9701, 0.07", "3.06925, 112.758, 40.982, 0.29", "3.02351, 113.548, 41.0269, 1.18", "2.93273, 115.358, 41.1201, 0.07", "2.91048, 116.54, 41.1612, 0.07", "2.91617, 116.938, 41.1684, 0.07", "2.9357, 117.44, 41.1584, 0.37", "2.97184, 118.147, 41.1243, 0.96", "3.03149, 119.168, 41.0329, 0.07", "3.08536, 120.091, 40.8796, 0.29", "3.15781, 121.537, 40.5193, 0.07", "3.22782, 122.967, 40.0957, 0.07", "3.23806, 123.163, 40.0241, 0.44", "3.30778, 124.123, 39.5548, 1.18", "3.42875, 125.251, 38.8131, 0.15", "3.51867, 125.858, 38.2856, 0.15", "3.58377, 126.18, 37.9052, 0.59", "3.66704, 126.495, 37.4244, 0.59", "3.84887, 127.171, 36.2662, 0.22", "3.9531, 127.502, 35.6165, 0.22", "4.051, 127.78, 35.0681, 0.22", "4.125, 127.992, 34.6593, 0.22", "4.25613, 128.423, 33.8528, 0.37", "4.34471, 128.804, 33.1807, 1.03", "4.43014, 129.27, 32.4064, 0.74", "4.53719, 129.739, 31.6127, 0.22", "4.72112, 130.315, 30.6831, 0.22", "4.78023, 130.473, 30.4358, 0.22", "4.92139, 130.82, 29.8765, 0.22", "5.02981, 131.08, 29.4312, 0.22", "5.17833, 131.484, 28.746, 0.22", "5.30003, 131.856, 28.0967, 0.88", "5.50713, 132.499, 26.9439, 0.15", "5.6755, 133.029, 25.9594, 0.15", "5.82316, 133.524, 25.0819, 0.15", "5.97695, 134.11, 24.1065, 0.74", "6.15002, 134.81, 22.964, 0.44", "6.28883, 135.354, 22.0863, 0.44", "6.42119, 135.802, 21.4065, 0.44", "6.55632, 136.286, 20.7214, 0.74", "6.69282, 136.943, 19.8459, 0.22", "6.72903, 137.317, 19.371, 0.22", "6.72017, 137.651, 18.965, 0.44", "6.66622, 138.086, 18.451, 0.44", "6.55798, 138.665, 17.7769, 0.22", "6.41422, 139.327, 17.0827, 0.29", "6.25729, 140.042, 16.4768, 0.22", "6.12742, 140.714, 16.0222, 0.22", "6.06681, 141.132, 15.7973, 0.66", "5.9938, 142.096, 15.4274, 0.96", "5.97949, 143.677, 15.023, 0.22", "6.00197, 144.608, 14.8856, 0.37", "6.01649, 145.269, 14.864, 0.07", "6.02678, 145.968, 14.9259, 0.07", "6.03725, 146.676, 15.0488, 0.07", "6.04183, 147.183, 15.1819, 0.29", "6.04099, 147.727, 15.3593, 0.66", "6.03423, 148.48, 15.6281, 0.88", "6.01915, 149.767, 16.1107, 0.15", "6.01831, 150.427, 16.3516, 0.15", "6.04725, 150.887, 16.5249, 0.22", "6.12047, 151.31, 16.6821, 0.22", "6.33492, 152.034, 16.9513, 0.22", "6.57967, 152.669, 17.1845, 0.22", "6.84108, 153.246, 17.3902, 0.81", "7.49006, 154.612, 17.8778, 0.22", "8.04604, 155.681, 18.2714, 0.22", "8.61024, 156.685, 18.6575, 0.22", "8.83211, 157.055, 18.8054, 0.37", "9.18451, 157.603, 19.0461, 0.96", "10.0642, 158.926, 19.7061, 0.15", "10.5713, 159.673, 20.1281, 0.15", "10.8023, 160.029, 20.3523, 0.15", "11.0528, 160.427, 20.6204, 0.15", "11.4632, 161.05, 21.0774, 0.15", "11.6983, 161.383, 21.3596, 0.29", "12.063, 161.859, 21.8305, 0.66", "12.2277, 162.069, 22.0469, 0.66", "12.8233, 162.825, 22.8077, 0.15", "13.1506, 163.246, 23.2023, 0.22", "13.8053, 164.085, 23.9828, 0.15", "14.2102, 164.583, 24.4306, 0.15", "14.7612, 165.236, 25.0204, 0.15", "15.0789, 165.608, 25.3423, 0.29", "15.6683, 166.295, 25.9093, 0.15", "16.0058, 166.705, 26.2139, 0.15", "16.3518, 167.14, 26.4825, 0.37", "16.9166, 167.879, 26.8857, 0.15", "17.2732, 168.374, 27.1645, 0.29" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-183.982, -336.213, 51.6936, 0.07", "-183.355, -335.708, 51.5788, 0.07", "-182.446, -334.886, 51.2917, 0.29", "-181.733, -334.211, 50.9866, 0.07", "-181.031, -333.53, 50.5552, 0.07", "-180.268, -332.777, 49.94, 0.15", "-179.733, -332.236, 49.4504, 0.15", "-179.391, -331.881, 49.0512, 0.15", "-178.979, -331.389, 48.3795, 0.29", "-178.537, -330.816, 47.4634, 0.07", "-178.262, -330.432, 46.7858, 0.29", "-178.006, -330.142, 46.1984, 0.44", "-177.883, -330.038, 45.9418, 0.44", "-177.393, -329.687, 44.885, 0.15", "-177.043, -329.432, 44.083, 0.15", "-176.903, -329.333, 43.7777, 0.15", "-176.376, -328.976, 42.58, 0.15", "-176.158, -328.836, 42.0227, 0.37", "-175.643, -328.488, 40.5187, 0.22", "-175.398, -328.316, 39.7601, 0.22", "-175.265, -328.205, 39.3258, 0.22", "-174.984, -327.909, 38.3743, 0.15", "-174.66, -327.539, 37.3334, 0.15", "-174.334, -327.231, 36.4595, 0.15", "-174.078, -327.049, 35.9409, 0.37", "-173.572, -326.779, 35.2279, 0.44", "-173.012, -326.485, 34.6041, 0.22", "-172.367, -326.161, 34.0294, 0.37", "-171.941, -325.96, 33.7284, 0.37", "-170.984, -325.552, 33.1635, 0.22", "-169.666, -325.03, 32.4437, 0.22", "-168.327, -324.622, 31.8193, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-183.982, -336.213, 51.6936, 0.15", "-184.407, -336.991, 51.7339, 0.15", "-184.808, -337.894, 51.8395, 0.29", "-185.187, -338.807, 51.9903, 0.15", "-185.582, -339.659, 52.1686, 0.15", "-185.922, -340.352, 52.3274, 0.15", "-186.121, -340.748, 52.4201, 0.15", "-186.549, -341.587, 52.6562, 0.29", "-186.999, -342.517, 52.9119, 0.81", "-187.485, -343.726, 53.1972, 0.15", "-187.798, -344.691, 53.3862, 0.22", "-188.042, -345.688, 53.5433, 0.07", "-188.17, -346.754, 53.6906, 0.07", "-188.159, -347.805, 53.8421, 0.37", "-187.894, -349.355, 54.0867, 0.15", "-187.623, -350.257, 54.2498, 0.15", "-187.38, -350.902, 54.3827, 0.37", "-186.726, -352.479, 54.7692, 0.15", "-186.343, -353.433, 55.0336, 0.15", "-186.104, -354.162, 55.2644, 0.15", "-186.035, -354.532, 55.3919, 0.15", "-185.98, -355.461, 55.7033, 0.37", "-186.053, -356.572, 56.0355, 0.07", "-186.247, -357.431, 56.2511, 0.07", "-186.492, -358.169, 56.42, 0.22", "-186.941, -359.347, 56.6985, 0.07", "-187.135, -359.813, 56.8052, 0.07", "-187.549, -360.687, 57.0119, 0.52", "-188.343, -362.152, 57.3425, 0.07", "-188.69, -362.726, 57.483, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-18.0587, -30.9885, -21.7243, 0.44", "-18.1429, -31.2225, -21.9615, 0.44", "-18.412, -32.0801, -22.9219, 0.44", "-18.5227, -32.5462, -23.4822, 0.44", "-18.6246, -33.1785, -24.2433, 0.44", "-18.6579, -33.4657, -24.5922, 0.44", "-18.6931, -33.7484, -24.9463, 0.44", "-18.7283, -33.9756, -25.2574, 0.44", "-18.7664, -34.2135, -25.608, 0.44", "-18.8205, -34.548, -26.1112, 0.44", "-18.8934, -35.0172, -26.7873, 0.44", "-18.9582, -35.4259, -27.3178, 0.44", "-19.0564, -36.0077, -28.0175, 0.44", "-19.1805, -36.7317, -28.8352, 0.44", "-19.2154, -36.9789, -29.0924, 0.29", "-19.2739, -37.6401, -29.749, 0.22", "-19.2886, -38.1165, -30.188, 0.22", "-19.2813, -38.4731, -30.5002, 0.22", "-19.2751, -38.6712, -30.6653, 0.22", "-19.2867, -39.0237, -30.9427, 0.29", "-19.3193, -39.5992, -31.3787, 0.29", "-19.3459, -39.959, -31.6393, 0.29", "-19.3404, -40.3425, -31.9254, 0.29", "-19.3098, -40.5394, -32.064, 0.29", "-19.2383, -40.8502, -32.251, 0.29", "-19.1292, -41.3481, -32.5012, 0.29", "-19.0086, -41.9821, -32.7365, 0.22", "-18.8766, -42.8651, -33.0095, 0.37", "-18.8252, -43.3643, -33.1593, 0.37", "-18.8039, -43.7798, -33.3142, 0.22", "-18.8144, -44.4173, -33.6081, 0.22", "-18.8634, -44.8026, -33.8185, 0.22", "-18.9595, -45.1801, -34.047, 0.29", "-19.1382, -45.6574, -34.3727, 0.29", "-19.3815, -46.1501, -34.81, 0.29", "-19.5457, -46.4048, -35.1237, 0.29", "-19.689, -46.59, -35.4202, 0.29", "-19.8102, -46.724, -35.6795, 0.22", "-20.0381, -46.9397, -36.1692, 0.22", "-20.3894, -47.2164, -36.8454, 0.22", "-20.5408, -47.3627, -37.1317, 0.22", "-20.7239, -47.628, -37.4788, 0.22", "-20.8833, -47.9526, -37.7909, 0.29", "-20.9758, -48.1687, -37.9647, 0.29", "-21.0617, -48.3555, -38.0979, 0.29", "-21.3318, -48.8036, -38.4268, 0.29", "-21.696, -49.2725, -38.8215, 0.22", "-22.035, -49.6341, -39.167, 0.22", "-22.3677, -49.9725, -39.5203, 0.22", "-22.6339, -50.2848, -39.8467, 0.22", "-23.0543, -50.7669, -40.3887, 0.22", "-23.2126, -50.9322, -40.5968, 0.22", "-23.3868, -51.1202, -40.8708, 0.22", "-23.6054, -51.4687, -41.3411, 0.44", "-23.6312, -52.0281, -41.895, 0.44" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-18.0587, -30.9885, -21.7243, 0.52", "-18.3482, -32.1956, -21.7793, 0.52", "-18.6611, -33.1449, -21.8932, 0.52", "-18.9837, -33.9151, -22.0378, 0.59", "-19.2218, -34.3787, -22.1411, 0.96", "-19.4577, -34.7491, -22.2345, 0.96", "-20.1897, -35.6772, -22.483, 0.81", "-20.8661, -36.2937, -22.6857, 0.52", "-21.5882, -36.8335, -22.8672, 0.52", "-22.1983, -37.2588, -23.0256, 0.74", "-22.9716, -37.8105, -23.2413, 0.74", "-23.7901, -38.4447, -23.5171, 0.66", "-24.2788, -38.872, -23.7078, 0.52", "-24.7872, -39.4299, -23.9337, 0.37", "-25.2383, -40.0617, -24.208, 0.66", "-25.6127, -40.6736, -24.4941, 0.88", "-25.9752, -41.3009, -24.8194, 0.88", "-26.2516, -41.7422, -25.0878, 0.66", "-26.679, -42.3032, -25.4788, 0.52", "-27.1669, -42.8297, -25.866, 0.52", "-27.6932, -43.3327, -26.2137, 0.59", "-28.2077, -43.7888, -26.5302, 0.59", "-28.8182, -44.3104, -26.9149, 0.59", "-29.2892, -44.7093, -27.2423, 0.59", "-29.6723, -45.0167, -27.5118, 0.66", "-30.2577, -45.4542, -27.8941, 0.59", "-30.8663, -45.8952, -28.2659, 0.52", "-31.5681, -46.3816, -28.6354, 0.81", "-32.3139, -46.8556, -28.9489, 1.03", "-33.1305, -47.3036, -29.2017, 0.59", "-33.9959, -47.7075, -29.3681, 0.44", "-34.5106, -47.9184, -29.3972, 0.59", "-35.1721, -48.1766, -29.3672, 0.59", "-35.7868, -48.4109, -29.2703, 0.52", "-36.56, -48.7115, -29.0612, 0.52", "-37.1534, -48.9664, -28.8397, 0.66", "-37.526, -49.1335, -28.6607, 0.66" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-38.7112, -39.6668, -13.6852, 0.59", "-39.16, -39.8652, -12.9184, 0.59", "-40.2509, -40.4706, -11.0731, 0.52", "-40.8542, -40.8441, -10.1464, 0.52", "-41.4095, -41.216, -9.37856, 0.52", "-42.0306, -41.6732, -8.56788, 0.52", "-42.8502, -42.288, -7.59589, 0.66", "-43.5408, -42.8724, -6.89601, 0.81", "-44.5324, -43.7867, -6.10372, 0.52", "-45.1736, -44.4388, -5.66187, 0.52", "-45.9292, -45.2983, -5.22105, 0.74", "-46.6472, -46.215, -4.89126, 0.44", "-47.431, -47.2985, -4.66374, 0.59", "-48.0625, -48.223, -4.52686, 0.81", "-48.6792, -49.157, -4.38378, 0.66", "-49.5161, -50.3935, -4.17645, 0.59", "-50.3589, -51.5555, -3.97607, 0.52", "-51.6224, -53.1343, -3.66405, 0.44", "-52.6956, -54.2755, -3.37563, 0.52", "-53.7246, -55.1962, -3.08279, 0.44", "-54.4678, -55.7753, -2.8688, 0.44", "-55.3608, -56.4279, -2.61002, 0.37", "-56.3986, -57.243, -2.27903, 0.22", "-57.1464, -57.9318, -2.02316, 0.59", "-57.7433, -58.6082, -1.82358, 0.88", "-58.6178, -59.7987, -1.52486, 0.59", "-59.3059, -60.8584, -1.25124, 0.44", "-60.0008, -61.9983, -0.916182, 0.59", "-60.4814, -62.8234, -0.627064, 0.52", "-61.0345, -63.8061, -0.249381, 0.29", "-61.5726, -64.8081, 0.198653, 0.29", "-62.33, -66.2324, 0.982062, 0.37", "-63.0144, -67.4725, 1.83048, 0.29", "-63.4945, -68.2985, 2.51707, 0.29", "-63.7876, -68.8091, 3.00283, 0.52", "-64.1345, -69.4369, 3.65199, 0.37", "-64.6208, -70.3349, 4.59574, 0.29", "-65.2416, -71.3452, 5.67933, 0.37", "-65.8755, -72.197, 6.59238, 0.66", "-66.5171, -72.938, 7.37676, 1.03", "-67.5661, -74.0635, 8.56648, 0.81", "-68.4163, -74.9478, 9.47342, 1.25", "-69.4366, -76.0446, 10.4943, 0.96", "-70.4396, -77.1504, 11.4242, 0.37", "-71.4616, -78.2627, 12.2603, 0.44", "-72.3351, -79.168, 12.8827, 0.44", "-73.0565, -79.8734, 13.3066, 0.59", "-74.2114, -80.9304, 13.8404, 0.96", "-75.0525, -81.613, 14.0716, 0.37", "-76.1632, -82.3474, 14.1817, 0.22", "-77.0014, -82.8165, 14.1787, 0.22", "-77.7341, -83.2025, 14.1398, 0.66", "-78.7749, -83.779, 14.0667, 0.74", "-80.0192, -84.5458, 13.9884, 0.37", "-81.1839, -85.4441, 13.9556, 0.44", "-82.0207, -86.289, 13.9871, 0.37", "-82.7102, -87.1772, 14.0493, 0.22", "-83.228, -88.0491, 14.1222, 0.22", "-83.5005, -88.6516, 14.1787, 0.59", "-83.819, -89.5027, 14.2719, 0.88", "-84.2661, -90.6484, 14.4248, 0.29", "-84.5304, -91.2143, 14.5153, 0.22", "-85.0978, -92.1675, 14.7233, 0.52", "-85.9205, -93.2927, 15.034, 0.22", "-86.354, -93.8168, 15.1987, 0.22", "-87.1778, -94.779, 15.5111, 0.29", "-87.6124, -95.3291, 15.6953, 0.29", "-88.2427, -96.2002, 16.0176, 0.22", "-88.5193, -96.6157, 16.182, 0.74", "-88.9128, -97.2627, 16.4345, 0.96", "-89.531, -98.3087, 16.8597, 0.59", "-90.2511, -99.5625, 17.4171, 0.15", "-90.7255, -100.347, 17.8367, 0.15", "-91.0134, -100.77, 18.0955, 0.59", "-91.8146, -101.786, 18.8153, 0.96", "-92.8153, -102.848, 19.6934, 0.22", "-93.4518, -103.387, 20.227, 0.15", "-94.5157, -104.116, 21.0649, 0.15", "-94.9498, -104.393, 21.4162, 0.66", "-95.3063, -104.61, 21.7329, 0.96", "-95.7239, -104.854, 22.1209, 1.11", "-96.6169, -105.342, 22.885, 0.52", "-97.5603, -105.851, 23.6578, 0.15", "-98.4636, -106.385, 24.4299, 0.15", "-98.9481, -106.705, 24.8888, 0.15", "-99.382, -107.021, 25.3238, 0.59", "-100.215, -107.672, 26.191, 0.96", "-101.374, -108.631, 27.3954, 0.22", "-102.197, -109.364, 28.301, 0.22", "-102.781, -109.922, 29.0078, 0.22", "-103.196, -110.363, 29.5746, 0.59", "-103.733, -111.032, 30.4864, 1.11", "-104.078, -111.604, 31.3044, 0.44", "-104.429, -112.418, 32.562, 0.22", "-104.6, -112.971, 33.4577, 0.22", "-104.631, -113.137, 33.7232, 0.22", "-104.677, -113.458, 34.2571, 0.22", "-104.773, -113.955, 35.1242, 0.22", "-104.906, -114.326, 35.8513, 0.22", "-105.054, -114.541, 36.3907, 0.44", "-105.381, -114.866, 37.3596, 0.81", "-105.884, -115.291, 38.7096, 0.81", "-106.376, -115.675, 39.9319, 0.66", "-106.803, -116.011, 40.9522, 0.66", "-107.709, -116.702, 43.0382, 0.22", "-108.265, -117.107, 44.2945, 0.22", "-108.582, -117.328, 44.9865, 0.66", "-108.958, -117.589, 45.7142, 0.74", "-109.867, -118.248, 47.211, 0.22", "-110.662, -118.857, 48.3353, 0.15", "-111.494, -119.509, 49.3428, 0.15", "-112.397, -120.218, 50.3653, 0.15", "-113.204, -120.839, 51.1967, 1.18", "-114.202, -121.586, 52.132, 0.07", "-115.183, -122.324, 52.8682, 0.07", "-115.854, -122.838, 53.2599, 0.07", "-116.255, -123.12, 53.4658, 0.07", "-117.061, -123.612, 53.91, 0.96", "-118.592, -124.419, 54.8523, 0.07", "-119.803, -124.991, 55.5973, 0.07", "-120.592, -125.339, 56.086, 0.66", "-123.126, -126.408, 57.6703, 0.07", "-124.435, -126.966, 58.533, 0.07", "-125.682, -127.506, 59.4005, 0.07", "-126.746, -127.96, 60.2303, 0.07", "-127.828, -128.409, 61.2301, 0.07", "-128.534, -128.692, 61.9331, 0.07", "-129.553, -129.062, 63.0258, 0.07", "-130.768, -129.435, 64.3818, 0.15", "-132.771, -129.961, 66.7815, 0.07", "-134.228, -130.268, 68.6298, 0.07", "-134.976, -130.397, 69.61, 0.07", "-135.953, -130.519, 70.9726, 0.07", "-136.443, -130.538, 71.6718, 0.59" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-38.7112, -39.6668, -13.6852, 0.66", "-39.5928, -40.6516, -14.0801, 0.66", "-40.5547, -41.6914, -14.3926, 0.66", "-41.2156, -42.4365, -14.5549, 0.66", "-41.6874, -42.9939, -14.65, 0.66", "-42.5966, -44.1265, -14.806, 0.59", "-43.373, -45.1846, -14.8949, 0.66", "-43.9496, -46.0799, -14.8745, 0.88", "-44.5275, -47.2172, -14.71, 0.59", "-45.0032, -48.5443, -14.3563, 0.59", "-45.1819, -49.3896, -14.0436, 0.59", "-45.2856, -50.6421, -13.4559, 0.81", "-45.327, -51.7636, -12.84, 0.81", "-45.3688, -52.9467, -12.1342, 0.88", "-45.474, -54.3906, -11.2051, 0.88", "-45.6741, -55.6808, -10.3546, 0.74", "-46.0835, -57.0146, -9.52119, 0.74", "-46.7802, -58.3778, -8.79575, 0.74", "-47.2848, -59.094, -8.46654, 0.81", "-48.0109, -59.9515, -8.14129, 0.81", "-49.0525, -61.0788, -7.82583, 0.74", "-50.152, -62.2564, -7.65521, 0.74", "-51.0928, -63.3468, -7.61797, 0.74", "-51.7718, -64.2633, -7.6476, 0.81", "-52.3121, -65.1329, -7.68585, 0.81", "-53.0651, -66.6189, -7.75447, 0.59", "-53.8198, -68.4836, -7.80268, 0.81", "-54.2443, -69.8018, -7.80885, 0.66", "-54.6989, -71.4209, -7.78203, 0.59", "-55.0292, -72.6154, -7.76799, 0.59", "-55.2786, -73.5084, -7.73761, 0.52", "-55.7073, -74.9338, -7.67144, 0.88", "-56.1781, -76.2529, -7.6045, 0.88", "-56.8421, -77.7842, -7.59098, 0.81", "-57.6062, -79.2604, -7.63985, 0.81", "-58.0337, -79.9743, -7.68521, 0.88", "-58.9826, -81.3758, -7.80566, 0.81", "-59.8972, -82.6001, -7.90187, 0.81", "-60.6549, -83.5343, -7.93087, 0.96", "-61.6944, -84.7339, -7.86229, 0.74", "-62.3312, -85.4159, -7.73982, 0.74", "-63.2363, -86.3083, -7.45655, 0.44", "-63.956, -86.9821, -7.12181, 0.66", "-64.8464, -87.7556, -6.63748, 0.59", "-65.6375, -88.3391, -6.21359, 0.59", "-66.4024, -88.7754, -5.81054, 0.96", "-67.7474, -89.353, -5.12201, 0.52", "-68.9006, -89.7597, -4.5666, 0.52", "-69.6844, -90.0301, -4.24716, 0.52", "-70.7608, -90.4389, -3.85499, 0.52", "-71.8705, -90.9621, -3.51136, 0.59", "-73.1892, -91.7884, -3.15498, 0.52", "-74.1446, -92.5953, -2.94711, 0.66", "-75.1729, -93.6951, -2.78246, 0.74", "-75.9036, -94.6148, -2.69426, 1.03", "-76.6439, -95.678, -2.66471, 1.03", "-77.4794, -96.992, -2.69765, 0.96", "-78.128, -98.1126, -2.78692, 0.66", "-78.8505, -99.4315, -2.90541, 0.52", "-79.6038, -100.868, -3.07356, 0.59", "-80.2485, -102.118, -3.28547, 0.44", "-80.6604, -102.926, -3.4665, 0.88", "-81.309, -104.223, -3.84703, 0.59", "-81.806, -105.296, -4.22437, 0.59", "-82.3277, -106.56, -4.74958, 0.66", "-82.645, -107.296, -5.10117, 0.66", "-83.0106, -108.01, -5.46462, 0.96", "-83.4976, -108.792, -5.86719, 0.96", "-84.3333, -109.895, -6.36767, 0.44", "-85.1045, -110.775, -6.6887, 0.44", "-86.0849, -111.785, -6.92907, 0.44", "-86.8179, -112.504, -7.00119, 0.88", "-87.971, -113.597, -6.94442, 0.66", "-89.1424, -114.711, -6.7266, 0.52", "-90.0621, -115.673, -6.43584, 0.74", "-90.5969, -116.362, -6.17373, 0.74", "-91.0559, -117.161, -5.82924, 0.74", "-91.4663, -118.173, -5.34076, 0.59", "-91.6829, -118.975, -4.93452, 0.81", "-92.0119, -120.516, -4.15038, 0.88", "-92.3445, -121.961, -3.42943, 0.59", "-92.6858, -123.11, -2.87508, 0.66", "-93.2221, -124.469, -2.25561, 0.66", "-93.5041, -125.002, -2.02814, 0.66", "-94.2805, -126.169, -1.57892, 0.52", "-95.2405, -127.414, -1.17511, 0.52", "-96.147, -128.603, -0.90289, 0.74", "-96.7306, -129.456, -0.79486, 0.96", "-97.5325, -130.861, -0.715531, 1.18", "-98.1118, -132.124, -0.672545, 0.66", "-98.4714, -133.086, -0.657217, 0.66", "-99.0261, -134.644, -0.646436, 0.59", "-99.6456, -136.183, -0.649943, 0.81", "-100.431, -137.743, -0.672597, 0.66", "-101.342, -139.134, -0.69728, 0.66", "-102.137, -140.063, -0.711125, 0.66", "-103.289, -141.12, -0.714943, 0.59", "-104.616, -142.057, -0.697114, 0.52", "-106.0, -142.885, -0.647482, 0.44", "-106.798, -143.343, -0.598808, 0.44", "-107.41, -143.726, -0.544242, 0.44", "-107.861, -144.065, -0.489816, 0.44", "-108.707, -144.841, -0.329996, 0.44", "-109.781, -145.981, -0.0650342, 0.52", "-110.864, -147.236, 0.26612, 0.52", "-111.716, -148.251, 0.543933, 0.59", "-112.463, -149.125, 0.812718, 0.44", "-113.153, -149.9, 1.08852, 0.44", "-114.137, -150.954, 1.53829, 0.66", "-114.929, -151.752, 1.94842, 0.66", "-115.778, -152.596, 2.45046, 0.74", "-116.835, -153.72, 3.20223, 0.52", "-117.499, -154.544, 3.79933, 0.52", "-118.075, -155.48, 4.48372, 0.66", "-118.495, -156.479, 5.16626, 0.59", "-118.744, -157.441, 5.70955, 0.44", "-118.905, -158.535, 6.18539, 0.44", "-119.046, -159.861, 6.60199, 0.44", "-119.198, -161.166, 6.92254, 0.52", "-119.496, -162.832, 7.24915, 0.88", "-119.875, -164.048, 7.46416, 0.96", "-120.463, -165.198, 7.69194, 0.74", "-121.285, -166.349, 7.9855, 0.44", "-121.805, -166.931, 8.16843, 0.74", "-122.478, -167.606, 8.45054, 1.03", "-123.307, -168.436, 8.88771, 0.44", "-124.068, -169.295, 9.32808, 0.37", "-124.475, -169.939, 9.61415, 0.37", "-124.728, -170.577, 9.8329, 0.74", "-125.015, -171.66, 10.1798, 1.11", "-125.189, -172.621, 10.4869, 0.74", "-125.383, -173.934, 10.9113, 0.59", "-125.684, -175.635, 11.5075, 0.52", "-125.97, -176.732, 11.9642, 0.29", "-126.308, -177.704, 12.444, 0.29", "-126.59, -178.334, 12.7874, 0.81", "-127.065, -179.259, 13.2704, 1.11", "-127.836, -180.632, 13.887, 0.52", "-128.56, -181.934, 14.3223, 0.44", "-129.017, -182.869, 14.5494, 0.88", "-129.49, -184.066, 14.7184, 0.88", "-129.952, -185.632, 14.8262, 0.66", "-130.184, -186.879, 14.8563, 0.37", "-130.315, -188.225, 14.8408, 0.29", "-130.37, -189.107, 14.8183, 0.29", "-130.412, -189.718, 14.8174, 0.74", "-130.503, -190.536, 14.8693, 1.03", "-130.764, -191.687, 15.0442, 0.29", "-131.173, -192.716, 15.2305, 0.22", "-131.534, -193.345, 15.3171, 0.22", "-131.86, -193.838, 15.3576, 0.44", "-132.426, -194.706, 15.3948, 0.66", "-132.958, -195.598, 15.3953, 0.29", "-133.339, -196.377, 15.3609, 0.29", "-133.581, -197.05, 15.3507, 0.29", "-133.827, -198.008, 15.3817, 0.66", "-134.079, -199.138, 15.4944, 0.37", "-134.252, -199.96, 15.6191, 0.44", "-134.465, -200.835, 15.8176, 0.37", "-134.725, -201.701, 16.1117, 0.37", "-135.009, -202.527, 16.497, 0.74", "-135.412, -203.639, 17.132, 1.11", "-135.626, -204.312, 17.5711, 1.11", "-135.875, -205.397, 18.3649, 0.66", "-136.03, -206.618, 19.3401, 0.44", "-136.069, -207.627, 20.1629, 0.44", "-136.052, -208.584, 20.9522, 0.29", "-136.015, -209.561, 21.749, 0.29", "-136.028, -210.355, 22.3656, 0.29", "-136.098, -210.866, 22.6784, 0.29", "-136.405, -211.612, 22.9555, 0.59", "-136.864, -212.31, 23.0918, 0.96", "-137.491, -213.125, 23.2069, 0.96", "-138.187, -214.023, 23.3332, 0.44", "-139.077, -215.277, 23.5154, 0.29", "-139.6, -216.135, 23.6634, 0.29", "-140.064, -217.057, 23.858, 0.66", "-140.482, -218.072, 24.0854, 0.44", "-140.856, -219.047, 24.3012, 0.29", "-141.163, -219.84, 24.4544, 0.44", "-141.499, -220.684, 24.6156, 1.25", "-141.845, -221.537, 24.7431, 1.25", "-142.312, -222.681, 24.8915, 1.03", "-142.854, -223.972, 25.0318, 0.52", "-143.412, -225.251, 25.1813, 0.29", "-143.914, -226.382, 25.341, 0.29", "-144.208, -227.024, 25.4537, 0.29", "-144.591, -227.814, 25.6215, 0.37", "-144.912, -228.364, 25.7611, 0.29", "-145.276, -228.851, 25.8776, 0.29", "-145.672, -229.259, 25.9344, 0.52", "-146.353, -229.868, 25.9353, 1.18", "-146.935, -230.378, 25.8935, 1.18", "-148.096, -231.471, 25.7151, 0.81", "-148.846, -232.338, 25.4977, 0.29", "-149.272, -232.998, 25.2975, 0.29", "-149.518, -233.532, 25.1326, 0.52", "-149.772, -234.34, 24.9123, 0.88", "-150.031, -235.407, 24.7065, 0.29", "-150.264, -236.564, 24.6263, 0.22", "-150.461, -237.379, 24.7236, 0.22", "-150.663, -238.002, 24.8979, 0.44", "-150.966, -238.746, 25.2383, 0.59", "-151.501, -239.803, 25.8771, 0.29", "-151.953, -240.575, 26.4189, 0.81", "-152.458, -241.381, 27.0052, 0.81", "-152.792, -241.919, 27.3612, 0.81", "-153.447, -243.021, 27.9808, 0.29", "-153.915, -243.815, 28.3285, 0.29", "-154.285, -244.435, 28.5492, 0.88", "-154.83, -245.27, 28.779, 1.18", "-155.511, -246.234, 29.0167, 0.52", "-155.944, -246.835, 29.1607, 0.37", "-156.568, -247.75, 29.3525, 0.22", "-156.932, -248.366, 29.4914, 0.44", "-157.354, -249.235, 29.6937, 0.96", "-157.815, -250.435, 29.9319, 0.22", "-158.037, -251.179, 30.0475, 0.22", "-158.269, -252.062, 30.1423, 0.37", "-158.455, -252.745, 30.1824, 0.37", "-158.812, -253.797, 30.1629, 0.22", "-159.208, -254.722, 30.0953, 0.22", "-159.62, -255.494, 30.0178, 0.81", "-160.201, -256.454, 29.9368, 0.88", "-160.853, -257.488, 29.8937, 0.29", "-161.473, -258.519, 29.9204, 0.22", "-161.938, -259.361, 29.9942, 0.22", "-162.406, -260.321, 30.1287, 0.96", "-162.821, -261.278, 30.2498, 0.81", "-163.226, -262.338, 30.375, 0.37", "-163.72, -263.721, 30.5244, 0.22", "-164.139, -264.843, 30.6122, 0.22", "-164.607, -266.004, 30.6161, 0.22", "-165.07, -267.094, 30.5386, 0.22", "-165.253, -267.526, 30.4961, 0.59", "-165.583, -268.328, 30.4097, 1.03", "-166.104, -269.604, 30.2781, 0.37", "-166.534, -270.68, 30.224, 0.22", "-166.802, -271.343, 30.2748, 0.22", "-167.282, -272.44, 30.5819, 0.22", "-167.61, -273.113, 30.8768, 0.22", "-167.878, -273.617, 31.1867, 0.22", "-168.163, -274.147, 31.5602, 0.37", "-168.581, -274.93, 32.1128, 0.22", "-168.862, -275.489, 32.4801, 0.22", "-169.068, -275.939, 32.7344, 0.74", "-169.31, -276.637, 33.1134, 1.03", "-169.52, -277.608, 33.6584, 0.66", "-169.629, -278.499, 34.1605, 0.29", "-169.679, -279.109, 34.5108, 0.29", "-169.709, -279.516, 34.7341, 0.29", "-169.771, -280.202, 35.0919, 0.29", "-169.874, -281.098, 35.5499, 0.22", "-169.933, -281.519, 35.7416, 0.22", "-170.074, -282.401, 36.0937, 0.22", "-170.227, -283.272, 36.4231, 0.22", "-170.451, -284.456, 36.874, 0.74", "-170.68, -285.509, 37.2417, 0.74", "-170.916, -286.475, 37.5591, 0.74", "-171.158, -287.413, 37.8534, 0.37", "-171.469, -288.575, 38.2302, 0.37", "-171.708, -289.406, 38.5207, 0.37", "-171.978, -290.334, 38.8561, 0.88", "-172.274, -291.443, 39.1998, 0.88", "-172.497, -292.382, 39.5008, 0.44", "-172.763, -293.549, 39.8878, 0.22", "-172.901, -294.146, 40.1099, 0.22", "-173.104, -294.956, 40.4618, 0.37", "-173.457, -296.178, 41.1415, 0.74", "-173.915, -297.241, 41.9402, 0.22", "-174.399, -297.866, 42.5699, 0.22", "-174.771, -298.116, 42.9194, 0.22", "-175.259, -298.33, 43.2969, 0.22", "-175.674, -298.485, 43.5508, 0.22", "-176.576, -298.861, 44.0748, 0.22", "-177.128, -299.176, 44.3476, 0.81", "-177.798, -299.706, 44.6808, 1.18", "-178.229, -300.151, 44.8962, 1.18", "-179.016, -301.168, 45.2912, 0.37", "-179.887, -302.497, 45.7009, 0.22", "-180.513, -303.6, 45.9738, 0.22", "-180.886, -304.295, 46.1134, 0.22", "-181.406, -305.257, 46.2325, 0.37", "-181.944, -306.223, 46.297, 0.74", "-182.528, -307.189, 46.2915, 0.59", "-183.11, -308.025, 46.1974, 0.29", "-183.707, -308.794, 46.0917, 0.15", "-184.412, -309.667, 45.9616, 0.15", "-184.789, -310.151, 45.9118, 0.44", "-185.412, -311.02, 45.8998, 0.66", "-185.942, -311.975, 46.0175, 0.22", "-186.304, -313.019, 46.3733, 0.22", "-186.442, -313.758, 46.7894, 0.81", "-186.557, -314.683, 47.4695, 0.96", "-186.648, -315.447, 48.1199, 0.96", "-186.729, -316.153, 48.79, 0.44", "-186.841, -316.92, 49.574, 0.29", "-187.013, -317.585, 50.2262, 0.22", "-187.285, -318.222, 50.7569, 0.22", "-187.669, -318.863, 51.1523, 0.22", "-187.913, -319.215, 51.3133, 0.22", "-188.131, -319.499, 51.4107, 0.74", "-188.689, -320.199, 51.567, 1.03", "-189.507, -321.238, 51.7219, 0.22", "-190.056, -321.964, 51.8064, 0.22", "-190.336, -322.356, 51.8478, 0.74", "-190.664, -322.839, 51.8807, 0.96", "-191.158, -323.605, 51.9537, 0.29", "-191.545, -324.23, 52.0285, 0.22", "-191.827, -324.703, 52.0931, 0.22", "-192.221, -325.371, 52.204, 0.37", "-192.751, -326.161, 52.3565, 0.22", "-193.492, -327.117, 52.6254, 0.22", "-193.78, -327.453, 52.7678, 0.22", "-194.074, -327.758, 52.9423, 0.44", "-194.536, -328.209, 53.259, 0.88", "-195.107, -328.746, 53.6989, 0.44", "-195.87, -329.482, 54.3406, 0.22", "-196.426, -330.056, 54.79, 0.22", "-196.978, -330.656, 55.2192, 0.22", "-197.394, -331.109, 55.512, 0.22", "-197.701, -331.454, 55.7017, 0.22", "-198.002, -331.81, 55.8492, 0.59", "-198.582, -332.489, 56.0615, 1.25", "-199.394, -333.393, 56.3016, 0.44", "-200.134, -334.194, 56.4957, 0.44", "-200.679, -334.785, 56.6571, 0.52", "-201.559, -335.772, 57.018, 0.22", "-202.197, -336.491, 57.3386, 0.15", "-202.77, -337.134, 57.683, 0.15", "-203.006, -337.392, 57.8378, 0.37", "-203.766, -338.178, 58.3461, 1.03", "-204.994, -339.352, 59.1898, 0.22", "-205.549, -339.839, 59.577, 0.22", "-205.887, -340.131, 59.8087, 0.22", "-206.49, -340.662, 60.2283, 0.22", "-207.255, -341.318, 60.7301, 1.47" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-54.7465, 180.232, 42.252, 0.07", "-55.7679, 181.6, 42.4352, 0.07", "-56.4405, 182.564, 42.5514, 0.66", "-57.0951, 183.55, 42.6611, 0.15", "-57.7021, 184.49, 42.7611, 0.59", "-58.2446, 185.324, 42.8508, 0.15", "-58.6722, 185.981, 42.9216, 0.52", "-59.0596, 186.667, 42.9794, 0.15", "-59.4506, 187.401, 43.0349, 0.29", "-59.8118, 188.104, 43.0844, 0.07", "-60.0992, 188.627, 43.1263, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-54.7465, 180.232, 42.252, 0.22", "-55.0962, 181.144, 42.6757, 0.22", "-55.7358, 182.547, 43.0142, 0.07", "-56.0686, 183.207, 43.0609, 0.07", "-56.4888, 184.029, 43.0229, 0.29", "-57.0114, 185.063, 42.8976, 0.07", "-57.5363, 186.129, 42.7283, 0.07", "-57.889, 186.828, 42.5166, 0.52", "-58.4044, 187.848, 42.0897, 0.07", "-58.7038, 188.468, 41.7981, 0.07", "-58.9229, 188.959, 41.5635, 0.07", "-59.0444, 189.273, 41.4274, 0.22", "-59.2975, 190.046, 41.1372, 0.44", "-59.6381, 191.279, 40.727, 0.07", "-59.7864, 191.929, 40.5556, 0.07", "-59.8612, 192.288, 40.486, 0.52", "-60.0217, 193.077, 40.3616, 0.74", "-60.2495, 194.216, 40.2148, 0.07", "-60.404, 195.0, 40.1458, 0.07", "-60.5643, 195.786, 40.1252, 0.37", "-60.8362, 197.038, 40.153, 0.07", "-60.981, 197.621, 40.1892, 0.22", "-61.0919, 197.996, 40.2397, 0.37", "-61.3434, 198.717, 40.4155, 0.96", "-61.7529, 199.742, 40.7912, 0.15", "-61.9285, 200.134, 40.9876, 0.15", "-62.2796, 200.882, 41.482, 0.59", "-62.7785, 201.858, 42.2319, 0.07", "-63.1652, 202.499, 42.7649, 0.07", "-63.6326, 203.169, 43.3771, 0.59", "-64.1536, 203.823, 43.9791, 0.15", "-64.708, 204.471, 44.5389, 0.15", "-65.1554, 204.95, 44.932, 0.88", "-66.0093, 205.799, 45.5261, 0.07", "-66.5448, 206.341, 45.8221, 0.07", "-67.2768, 207.127, 46.1428, 0.07", "-67.6435, 207.553, 46.2632, 0.81", "-68.0636, 208.07, 46.3889, 1.25", "-68.7402, 208.947, 46.5663, 0.22", "-69.4706, 209.937, 46.751, 0.15", "-70.224, 210.967, 46.9199, 0.37", "-71.2742, 212.429, 47.1681, 0.07", "-71.9022, 213.315, 47.3209, 0.07", "-72.5575, 214.269, 47.4844, 0.96" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-37.526, -49.1335, -28.6607, 0.22", "-37.0697, -50.251, -28.9525, 0.22", "-36.915, -50.8158, -29.0894, 0.22", "-36.8489, -51.2313, -29.2068, 0.22", "-36.8338, -51.5506, -29.3067, 0.22", "-36.8539, -52.0123, -29.4579, 0.29", "-36.9598, -52.706, -29.6874, 0.29", "-37.1951, -53.203, -29.8416, 0.29", "-37.5646, -53.6864, -29.9803, 0.29", "-37.9634, -54.0902, -30.0733, 0.29", "-38.2191, -54.3114, -30.1092, 0.52", "-38.7212, -54.7009, -30.1669, 0.88", "-39.4897, -55.2381, -30.2155, 0.29", "-40.3123, -55.7793, -30.2226, 0.29", "-40.9814, -56.2022, -30.1844, 0.52", "-41.428, -56.4786, -30.1429, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-37.526, -49.1335, -28.6607, 0.15", "-38.5142, -49.1265, -28.0901, 0.15", "-39.0526, -49.1227, -27.7792, 0.15", "-39.5684, -49.1191, -27.4814, 0.15", "-39.9813, -49.1162, -27.243, 0.15", "-40.4657, -49.1128, -26.9633, 0.15", "-41.083, -49.1084, -26.6069, 0.15" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-207.255, -341.318, 60.7301, 0.22", "-207.993, -341.904, 62.3952, 0.22", "-208.222, -342.191, 62.936, 0.22", "-208.452, -342.534, 63.4583, 0.22", "-208.811, -343.213, 64.2325, 0.22", "-209.156, -343.949, 64.9408, 0.22", "-209.352, -344.373, 65.3281, 0.37", "-209.658, -345.074, 65.8376, 1.03", "-209.82, -345.385, 66.0517, 1.03", "-210.56, -346.594, 66.8986, 0.37", "-211.284, -347.558, 67.5604, 0.29", "-211.694, -348.019, 67.9051, 0.29", "-212.476, -348.773, 68.5711, 0.59", "-213.24, -349.44, 69.2375, 0.22", "-213.751, -349.877, 69.7223, 0.52", "-214.626, -350.627, 70.627, 0.96", "-215.612, -351.559, 71.7658, 0.22", "-216.239, -352.227, 72.5476, 0.22", "-216.62, -352.696, 73.1047, 0.22", "-216.946, -353.158, 73.6469, 0.22", "-217.252, -353.668, 74.2424, 0.22", "-217.421, -354.066, 74.7373, 0.22", "-217.639, -355.021, 75.655, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-207.255, -341.318, 60.7301, 0.22", "-206.475, -341.782, 61.2868, 0.22", "-206.005, -342.068, 61.5717, 0.22", "-205.735, -342.232, 61.6836, 0.22", "-205.299, -342.498, 61.8354, 0.07", "-204.986, -342.689, 61.9446, 0.07", "-204.846, -342.774, 61.9935, 0.07", "-204.347, -343.07, 62.1169, 0.88", "-203.353, -343.667, 62.2761, 0.15", "-202.76, -344.028, 62.3358, 0.44" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-72.5575, 214.269, 47.4844, 0.07", "-73.2156, 215.594, 48.542, 0.07", "-73.6225, 216.428, 49.2364, 0.59", "-74.2958, 217.866, 50.4661, 0.15", "-74.776, 218.922, 51.4224, 0.74", "-75.1955, 219.859, 52.3138, 0.07", "-75.6031, 220.769, 53.1799, 0.07", "-75.891, 221.398, 53.8534, 0.07", "-76.2177, 222.123, 54.6729, 0.74", "-76.6768, 223.274, 55.9716, 0.07", "-76.9429, 223.992, 56.7722, 0.29" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-72.5575, 214.269, 47.4844, 0.07", "-73.5659, 214.504, 46.7947, 0.07", "-74.3508, 214.747, 46.1404, 0.07", "-75.1061, 215.065, 45.3834, 0.07", "-75.3811, 215.215, 45.0485, 0.29", "-75.9199, 215.553, 44.3444, 0.74", "-76.4777, 215.937, 43.6003, 0.29", "-76.963, 216.345, 42.9078, 0.29", "-77.6198, 216.912, 42.0484, 0.29", "-78.4168, 217.539, 41.1942, 0.29", "-78.7186, 217.739, 40.9461, 0.74", "-79.3434, 218.063, 40.6161, 1.47", "-80.3426, 218.474, 40.3183, 0.52", "-81.342, 218.815, 40.1919, 0.22", "-82.4789, 219.156, 40.1744, 0.15", "-83.2862, 219.373, 40.2069, 0.29", "-84.5011, 219.68, 40.2791, 0.07", "-85.0238, 219.803, 40.3239, 0.52", "-86.2991, 220.12, 40.4522, 0.07", "-87.2199, 220.393, 40.58, 0.81" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-41.428, -56.4786, -30.1429, 0.22", "-41.7979, -57.7329, -29.8982, 0.22", "-42.1123, -58.754, -29.7496, 0.22", "-42.3754, -59.6047, -29.6464, 0.22", "-42.5632, -60.3015, -29.5949, 0.22", "-42.8925, -61.7077, -29.5442, 0.22", "-43.0416, -62.4509, -29.5269, 0.22", "-43.1484, -63.138, -29.543, 0.22", "-43.253, -63.8418, -29.5968, 0.22", "-43.3946, -64.9268, -29.7791, 0.37", "-43.4724, -65.5586, -29.9238, 0.52", "-43.5332, -66.0385, -30.0443, 0.29", "-43.5614, -66.2035, -30.0907, 0.29", "-43.7803, -66.9039, -30.3254, 0.22", "-44.2559, -67.6735, -30.6404, 0.22", "-44.537, -67.9883, -30.7802, 0.22", "-44.8471, -68.2723, -30.9239, 0.29", "-45.1323, -68.5024, -31.0558, 0.29", "-45.9047, -69.0863, -31.3853, 0.15", "-46.3103, -69.365, -31.512, 0.22" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-41.428, -56.4786, -30.1429, 0.07", "-42.0477, -56.2623, -29.2714, 0.07", "-43.0063, -55.9276, -27.9234, 0.07", "-43.8169, -55.6446, -26.7835, 0.07", "-44.2084, -55.5079, -26.233, 0.29", "-45.065, -55.2089, -25.0285, 0.22", "-45.411, -55.0881, -24.5419, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-217.639, -355.021, 75.655, 0.07", "-216.556, -354.505, 76.19, 0.07", "-215.675, -354.063, 76.6289, 0.07", "-214.991, -353.726, 76.9501, 0.22", "-214.658, -353.558, 77.0857, 0.22", "-213.995, -353.216, 77.3268, 0.22", "-212.955, -352.697, 77.6324, 0.15", "-212.232, -352.347, 77.7449, 0.15", "-211.299, -351.943, 77.7462, 0.15", "-210.693, -351.739, 77.688, 0.37", "-210.141, -351.617, 77.5936, 0.59", "-208.777, -351.507, 77.2659, 0.15", "-207.519, -351.542, 76.8523, 0.15", "-207.017, -351.589, 76.6534, 0.15", "-206.158, -351.742, 76.2604, 0.29", "-205.241, -351.986, 75.8255, 0.15", "-204.441, -352.263, 75.4293, 0.52", "-203.243, -352.756, 74.8118, 0.15", "-202.55, -353.06, 74.4682, 0.29", "-201.639, -353.437, 74.0397, 0.29", "-200.765, -353.783, 73.6262, 0.15", "-199.873, -354.138, 73.1928, 0.44", "-199.158, -354.41, 72.8195, 0.15", "-198.605, -354.606, 72.4992, 0.22", "-197.379, -354.975, 71.7309, 0.07", "-196.681, -355.128, 71.2714, 0.59", "-195.572, -355.262, 70.4607, 0.07", "-194.457, -355.3, 69.5607, 0.37", "-193.6, -355.277, 68.8032, 0.15", "-193.246, -355.245, 68.4447, 0.44", "-192.849, -355.185, 67.9892, 0.44", "-191.962, -355.018, 66.9724, 0.07", "-191.328, -354.901, 66.2575, 0.07", "-190.662, -354.816, 65.4955, 0.07", "-189.901, -354.769, 64.6404, 0.07", "-189.474, -354.777, 64.1634, 0.07", "-188.751, -354.852, 63.3526, 0.37", "-187.716, -355.07, 62.2429, 0.07", "-187.222, -355.21, 61.7416, 0.07", "-186.345, -355.485, 60.89, 0.52", "-185.234, -355.869, 59.855, 0.07", "-184.679, -356.079, 59.3446, 0.07", "-183.84, -356.439, 58.5705, 0.52", "-182.853, -356.957, 57.7232, 0.15", "-182.317, -357.273, 57.3089, 0.15", "-182.178, -357.364, 57.2106, 0.15", "-181.724, -357.669, 56.9327, 0.29", "-181.37, -357.906, 56.7359, 0.29", "-180.419, -358.538, 56.2511, 0.07", "-179.592, -359.027, 55.8973, 0.07", "-179.112, -359.278, 55.7029, 0.15", "-178.199, -359.713, 55.3294, 0.07", "-177.819, -359.882, 55.1648, 0.07", "-177.177, -360.181, 54.8728, 0.29", "-175.822, -360.859, 54.1908, 0.07", "-175.109, -361.256, 53.767, 0.07", "-174.688, -361.498, 53.4594, 0.29", "-174.09, -361.83, 52.9499, 0.37", "-173.045, -362.422, 51.8875, 0.07", "-172.377, -362.851, 51.096, 0.15", "-171.676, -363.394, 50.1554, 0.15", "-171.002, -363.924, 49.2375, 0.15", "-170.517, -364.26, 48.6257, 0.29", "-170.028, -364.578, 48.0087, 0.59", "-169.479, -364.909, 47.3118, 0.88", "-168.779, -365.37, 46.5179, 0.29", "-168.104, -365.887, 45.9107, 0.29", "-167.374, -366.541, 45.3837, 0.15" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-217.639, -355.021, 75.655, 0.44", "-218.619, -355.397, 75.5253, 0.44", "-219.807, -355.936, 75.458, 0.22", "-220.83, -356.467, 75.456, 0.66", "-221.791, -357.032, 75.4966, 0.15", "-222.518, -357.493, 75.5501, 0.15", "-222.947, -357.781, 75.6087, 0.15", "-223.611, -358.29, 75.8351, 0.15", "-224.005, -358.621, 76.0586, 0.52", "-224.66, -359.185, 76.522, 0.96", "-225.404, -359.822, 77.0955, 0.66", "-226.115, -360.41, 77.6595, 0.22", "-227.26, -361.354, 78.5429, 0.22", "-227.72, -361.748, 78.8789, 0.22", "-228.188, -362.178, 79.2179, 0.22", "-228.521, -362.508, 79.4592, 0.22", "-228.919, -362.933, 79.7167, 0.37", "-229.478, -363.522, 80.0102, 0.88", "-230.019, -364.059, 80.2569, 0.52", "-230.761, -364.742, 80.5966, 0.15", "-231.324, -365.206, 80.8581, 0.15", "-231.927, -365.648, 81.123, 0.81", "-232.881, -366.308, 81.4934, 0.15", "-233.951, -367.005, 81.8604, 0.15", "-234.332, -367.252, 81.9699, 0.66", "-234.945, -367.673, 82.0963, 1.03", "-235.899, -368.421, 82.2013, 0.15", "-236.58, -369.035, 82.2143, 0.15", "-236.702, -369.156, 82.2033, 0.15", "-237.068, -369.502, 82.1586, 0.59", "-237.523, -369.884, 82.1159, 0.81", "-238.344, -370.482, 82.0691, 0.22", "-238.895, -370.842, 82.0591, 0.22", "-239.842, -371.389, 82.082, 0.44", "-240.815, -371.893, 82.1029, 0.15", "-241.439, -372.162, 82.1138, 0.15", "-242.016, -372.357, 82.1208, 1.11" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-242.016, -372.357, 82.1208, 0.22", "-242.949, -373.225, 81.8846, 0.22", "-243.327, -373.553, 81.7927, 0.22", "-243.969, -374.1, 81.6516, 0.29", "-244.614, -374.648, 81.4913, 0.15", "-245.038, -375.01, 81.36, 0.15", "-245.457, -375.383, 81.2057, 0.15", "-245.871, -375.747, 81.0485, 0.52", "-246.36, -376.232, 80.8224, 0.74", "-247.099, -377.119, 80.387, 0.29", "-247.526, -377.732, 80.0695, 0.15", "-247.832, -378.225, 79.8204, 0.15", "-247.981, -378.491, 79.6977, 0.15", "-248.215, -378.999, 79.4865, 0.37", "-248.482, -379.679, 79.2589, 0.15", "-248.706, -380.331, 79.1144, 0.15", "-248.942, -381.05, 79.0015, 0.22", "-249.123, -381.6, 78.9275, 0.81", "-249.354, -382.244, 78.8285, 0.66", "-249.766, -383.255, 78.6675, 0.44", "-250.045, -383.838, 78.5648, 0.44", "-250.528, -384.775, 78.3874, 0.15", "-250.765, -385.211, 78.2928, 0.15", "-251.237, -386.017, 78.0931, 0.15", "-251.598, -386.583, 77.9403, 0.81", "-252.395, -387.776, 77.616, 0.15", "-252.631, -388.107, 77.5266, 0.15", "-252.883, -388.456, 77.433, 0.15", "-253.176, -388.901, 77.3237, 0.15", "-253.373, -389.263, 77.2525, 0.37", "-253.678, -389.994, 77.1096, 0.74", "-253.973, -390.88, 76.9313, 0.22", "-254.185, -391.573, 76.7824, 0.22", "-254.355, -392.214, 76.6489, 0.59", "-254.526, -393.019, 76.5014, 0.22", "-254.71, -394.101, 76.3118, 0.15", "-254.783, -394.604, 76.2298, 0.15", "-254.858, -395.089, 76.1637, 0.37", "-255.009, -395.768, 76.081, 0.66", "-255.275, -396.478, 75.9861, 0.22", "-255.608, -397.033, 75.916, 0.15", "-255.943, -397.435, 75.8826, 0.15", "-256.31, -397.809, 75.858, 0.29", "-256.671, -398.139, 75.837, 0.88", "-257.437, -398.809, 75.8058, 0.22", "-257.991, -399.272, 75.8144, 0.15", "-258.556, -399.754, 75.8473, 0.15", "-258.802, -399.974, 75.8671, 0.15", "-259.282, -400.437, 75.914, 0.22", "-260.005, -401.175, 75.9702, 0.15", "-260.956, -402.172, 76.0242, 0.15", "-261.25, -402.465, 76.0323, 0.37", "-261.689, -402.897, 76.013, 0.37", "-262.237, -403.444, 75.959, 0.22", "-262.824, -404.071, 75.871, 0.22", "-263.238, -404.574, 75.7835, 0.66", "-263.652, -405.19, 75.658, 0.66", "-264.268, -406.239, 75.4579, 0.15", "-264.469, -406.6, 75.3839, 0.15", "-264.887, -407.395, 75.2202, 0.59", "-265.213, -408.059, 75.0849, 0.15", "-265.584, -408.869, 74.9099, 0.15", "-265.827, -409.459, 74.7662, 0.44", "-266.264, -410.526, 74.4591, 0.15", "-266.424, -410.895, 74.3296, 0.15", "-266.64, -411.325, 74.1403, 0.15", "-266.883, -411.729, 73.9253, 0.37", "-267.364, -412.405, 73.5082, 0.44", "-267.901, -413.074, 73.0458, 0.22", "-268.11, -413.293, 72.8896, 0.22", "-268.542, -413.66, 72.6246, 0.15", "-269.012, -413.977, 72.3995, 0.15", "-269.226, -414.092, 72.3164, 0.15", "-269.636, -414.277, 72.1893, 0.29", "-270.297, -414.573, 71.9882, 0.37", "-270.919, -414.877, 71.7971, 0.22", "-271.622, -415.283, 71.5921, 0.15", "-272.383, -415.759, 71.3748, 0.29", "-273.065, -416.204, 71.1697, 0.15", "-273.495, -416.491, 71.0347, 0.15", "-274.054, -416.864, 70.8589, 0.52", "-274.942, -417.437, 70.5722, 0.15", "-275.552, -417.838, 70.3551, 0.15", "-276.371, -418.409, 69.9777, 0.15", "-276.85, -418.751, 69.6978, 0.52", "-277.278, -419.034, 69.4144, 0.52", "-278.034, -419.509, 68.8523, 0.15", "-278.444, -419.746, 68.5089, 0.15", "-279.318, -420.255, 67.6887, 0.15", "-279.776, -420.534, 67.1945, 0.29", "-280.292, -420.892, 66.5423, 0.96" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-242.016, -372.357, 82.1208, 0.88", "-242.781, -372.795, 82.6192, 0.88", "-243.725, -373.356, 83.1605, 0.22", "-244.622, -373.934, 83.6332, 0.15", "-245.371, -374.455, 84.0074, 0.15", "-245.799, -374.778, 84.2105, 0.37", "-246.431, -375.3, 84.4936, 1.03", "-247.259, -376.071, 84.8323, 0.44", "-247.976, -376.839, 85.08, 0.15", "-248.339, -377.279, 85.1994, 0.15", "-248.775, -377.853, 85.3505, 0.37", "-249.408, -378.711, 85.5861, 0.15", "-249.788, -379.204, 85.7354, 0.29", "-250.606, -380.145, 86.0531, 0.07", "-251.362, -380.87, 86.2875, 0.07", "-252.169, -381.527, 86.5168, 0.07", "-252.688, -381.872, 86.6503, 0.29", "-253.747, -382.446, 86.8892, 0.07", "-254.609, -382.83, 87.0756, 0.59", "-255.833, -383.272, 87.3466, 0.15", "-256.613, -383.522, 87.5448, 0.15", "-257.695, -383.853, 87.9083, 0.15", "-258.254, -384.042, 88.1385, 0.37", "-259.294, -384.455, 88.6589, 0.07", "-259.915, -384.755, 89.0305, 0.22", "-260.622, -385.16, 89.4801, 0.07", "-261.348, -385.609, 89.9128, 0.07", "-262.007, -386.035, 90.2791, 0.59", "-263.023, -386.683, 90.7594, 0.15", "-263.83, -387.187, 91.0686, 0.74", "-265.226, -388.002, 91.4815, 0.07", "-266.387, -388.636, 91.7755, 0.07", "-267.364, -389.131, 91.9886, 0.29", "-268.78, -389.789, 92.269, 0.07", "-269.601, -390.141, 92.4121, 0.44", "-271.335, -390.822, 92.6888, 0.07", "-272.014, -391.071, 92.7904, 0.07", "-272.966, -391.415, 92.9423, 0.37", "-274.54, -392.002, 93.2224, 0.07", "-276.134, -392.625, 93.5274, 0.07", "-277.137, -393.052, 93.7258, 0.37", "-278.479, -393.702, 93.9917, 0.15", "-279.706, -394.384, 94.2235, 0.07", "-280.587, -394.906, 94.4024, 0.22", "-281.223, -395.327, 94.5437, 0.52", "-281.856, -395.82, 94.6927, 0.88", "-282.701, -396.597, 94.9044, 0.44", "-283.397, -397.389, 95.072, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_44", "dend_35", "dend_32", "dend_25", "dend_0", "dend_46", "dend_45", "dend_43", "dend_36", "dend_34", "dend_33", "dend_31", "dend_26", "dend_22", "dend_1", "dend_48", "dend_47", "dend_38", "dend_37", "dend_30", "dend_27", "dend_24", "dend_23", "dend_13", "dend_2", "dend_56", "dend_49", "dend_40", "dend_39", "dend_29", "dend_28", "dend_21", "dend_14", "dend_12", "dend_3", "dend_51", "dend_50", "dend_42", "dend_41", "dend_20", "dend_15", "dend_11", "dend_4", "dend_55", "dend_52", "dend_17", "dend_16", "dend_6", "dend_5", "dend_54", "dend_53", "dend_19", "dend_18", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_0", "dend_0", "axon_0", "axon_0", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "axon_1", "axon_1", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_NBC_a91e150b71_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_44, id: dend_44, parent: soma_0
create dend_44
public dend_44
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_35
create dend_43
public dend_43
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_56, id: dend_56, parent: dend_48
create dend_56
public dend_56
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_21, id: dend_21, parent: dend_13
create dend_21
public dend_21
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_58
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_44(0), soma_0(0.450000292725816)
    connect dend_35(0), soma_0(0.450000292725816)
    connect dend_32(0), soma_0(0.450000292725816)
    connect dend_25(0), soma_0(0.450000292725816)
    connect dend_0(0), soma_0(0.450000292725816)
    connect axon_0(0), soma_0(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_56(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_21(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -0.277629, -9.42436, 0.0, 2.9454 ) }
    soma_0 { pt3dadd( -0.225418, -8.4907, 0.0, 4.92187 ) }
    soma_0 { pt3dadd( -0.173208, -7.55704, 0.0, 6.69655 ) }
    soma_0 { pt3dadd( -0.120997, -6.62338, 0.0, 8.28957 ) }
    soma_0 { pt3dadd( -0.0687862, -5.68972, 0.0, 9.36061 ) }
    soma_0 { pt3dadd( -0.0165755, -4.75606, 0.0, 10.2397 ) }
    soma_0 { pt3dadd( 0.0356352, -3.8224, 0.0, 11.0293 ) }
    soma_0 { pt3dadd( 0.087846, -2.88873, 0.0, 11.6457 ) }
    soma_0 { pt3dadd( 0.140057, -1.95507, 0.0, 12.2691 ) }
    soma_0 { pt3dadd( 0.192267, -1.02141, 0.0, 12.5588 ) }
    soma_0 { pt3dadd( 0.244478, -0.0877535, 0.0, 12.7806 ) }
    soma_0 { pt3dadd( 0.296689, 0.845907, 0.0, 13.0398 ) }
    soma_0 { pt3dadd( 0.3489, 1.77957, 0.0, 13.1732 ) }
    soma_0 { pt3dadd( 0.40111, 2.71323, 0.0, 13.0581 ) }
    soma_0 { pt3dadd( 0.453321, 3.64689, 0.0, 12.8607 ) }
    soma_0 { pt3dadd( 0.505532, 4.58055, 0.0, 12.1633 ) }
    soma_0 { pt3dadd( 0.557743, 5.51421, 0.0, 11.3807 ) }
    soma_0 { pt3dadd( 0.609953, 6.44787, 0.0, 10.3357 ) }
    soma_0 { pt3dadd( 0.662164, 7.38153, 0.0, 8.86929 ) }
    soma_0 { pt3dadd( 0.714375, 8.31519, 0.0, 6.73974 ) }
    soma_0 { pt3dadd( 0.766585, 9.24885, 0.0, 3.85991 ) }
    // Section: dend_44, id: dend_44, parent: soma_0 (entry count 21/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.0596826, 9.24235, 5.51, 1.4 ) }
    dend_44 { pt3dadd( -0.430932, 10.8717, 5.8614, 1.47 ) }
    dend_44 { pt3dadd( -0.687436, 12.1013, 6.11602, 1.47 ) }
    dend_44 { pt3dadd( -0.907259, 13.3694, 6.36815, 1.55 ) }
    dend_44 { pt3dadd( -1.03878, 14.3089, 6.55961, 1.55 ) }
    dend_44 { pt3dadd( -1.15963, 15.3237, 6.75683, 1.55 ) }
    dend_44 { pt3dadd( -1.21452, 16.0051, 6.88246, 1.55 ) }
    dend_44 { pt3dadd( -1.25167, 16.9071, 7.04864, 1.55 ) }
    dend_44 { pt3dadd( -1.27058, 17.9722, 7.24613, 1.55 ) }
    dend_44 { pt3dadd( -1.2988, 19.2091, 7.50496, 1.92 ) }
    dend_44 { pt3dadd( -1.37109, 20.6785, 7.84641, 2.14 ) }
    dend_44 { pt3dadd( -1.49046, 22.1341, 8.22137, 1.18 ) }
    dend_44 { pt3dadd( -1.62685, 23.3245, 8.56181, 1.25 ) }
    dend_44 { pt3dadd( -1.79209, 24.5948, 8.94698, 1.25 ) }
    dend_44 { pt3dadd( -2.03936, 26.1696, 9.45059, 1.33 ) }
    dend_44 { pt3dadd( -2.30194, 27.6121, 9.94012, 1.47 ) }
    dend_44 { pt3dadd( -2.56128, 28.8503, 10.4137, 1.77 ) }
    dend_44 { pt3dadd( -2.86975, 30.0651, 10.9153, 2.14 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 40/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.299673, -8.88065, 3.35, 2.29 ) }
    dend_35 { pt3dadd( -0.604306, -9.95968, 3.83748, 1.62 ) }
    dend_35 { pt3dadd( -0.842286, -11.0353, 4.30962, 1.4 ) }
    dend_35 { pt3dadd( -1.0146, -11.9646, 4.67078, 1.4 ) }
    dend_35 { pt3dadd( -1.15128, -12.6525, 4.90527, 1.25 ) }
    dend_35 { pt3dadd( -1.31644, -13.4008, 5.12735, 1.25 ) }
    dend_35 { pt3dadd( -1.49855, -14.2197, 5.32902, 1.18 ) }
    dend_35 { pt3dadd( -1.60828, -14.7582, 5.42886, 1.18 ) }
    dend_35 { pt3dadd( -1.83327, -16.0415, 5.62082, 1.55 ) }
    dend_35 { pt3dadd( -2.02362, -17.1402, 5.76029, 1.62 ) }
    dend_35 { pt3dadd( -2.23275, -18.2122, 5.88343, 1.47 ) }
    dend_35 { pt3dadd( -2.48796, -19.384, 5.9901, 1.47 ) }
    dend_35 { pt3dadd( -2.69908, -20.2922, 6.07312, 1.47 ) }
    dend_35 { pt3dadd( -2.92472, -21.3156, 6.15953, 1.47 ) }
    dend_35 { pt3dadd( -3.04194, -21.9978, 6.22991, 1.47 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 56/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 5.04042, 8.08735, -5.24, 2.43 ) }
    dend_32 { pt3dadd( 6.38094, 9.08375, -5.1066, 1.55 ) }
    dend_32 { pt3dadd( 7.68362, 10.075, -5.00033, 1.47 ) }
    dend_32 { pt3dadd( 8.60034, 10.7868, -4.94474, 1.25 ) }
    dend_32 { pt3dadd( 10.3461, 12.1556, -4.79254, 1.11 ) }
    dend_32 { pt3dadd( 11.4079, 12.9881, -4.66482, 1.25 ) }
    dend_32 { pt3dadd( 12.7593, 14.0641, -4.42717, 1.4 ) }
    dend_32 { pt3dadd( 14.3106, 15.3156, -4.06187, 1.62 ) }
    dend_32 { pt3dadd( 16.046, 16.6801, -3.58516, 1.03 ) }
    dend_32 { pt3dadd( 17.3055, 17.5849, -3.19408, 0.88 ) }
    dend_32 { pt3dadd( 18.5722, 18.3725, -2.73941, 1.11 ) }
    dend_32 { pt3dadd( 20.0259, 19.1782, -2.11045, 0.88 ) }
    dend_32 { pt3dadd( 21.4031, 19.8675, -1.43648, 1.47 ) }
    dend_32 { pt3dadd( 22.1495, 20.2114, -1.01573, 1.33 ) }
    dend_32 { pt3dadd( 23.4797, 20.8017, -0.224233, 1.03 ) }
    dend_32 { pt3dadd( 24.735, 21.3993, 0.495343, 1.03 ) }
    dend_32 { pt3dadd( 25.7132, 21.9161, 1.03272, 1.18 ) }
    dend_32 { pt3dadd( 26.8718, 22.6258, 1.64716, 1.18 ) }
    dend_32 { pt3dadd( 28.3747, 23.6595, 2.39496, 1.4 ) }
    dend_32 { pt3dadd( 29.3171, 24.368, 2.81103, 1.03 ) }
    dend_32 { pt3dadd( 30.3114, 25.1647, 3.08168, 0.81 ) }
    dend_32 { pt3dadd( 31.2459, 25.8975, 3.1782, 0.74 ) }
    dend_32 { pt3dadd( 32.2801, 26.6763, 3.14362, 1.11 ) }
    dend_32 { pt3dadd( 33.6474, 27.6476, 2.97846, 1.11 ) }
    dend_32 { pt3dadd( 34.6324, 28.3013, 2.79011, 1.33 ) }
    dend_32 { pt3dadd( 36.7104, 29.6043, 2.43475, 1.33 ) }
    dend_32 { pt3dadd( 38.5431, 30.7313, 2.20686, 0.88 ) }
    dend_32 { pt3dadd( 40.0174, 31.6653, 2.12825, 1.11 ) }
    dend_32 { pt3dadd( 40.8291, 32.1992, 2.13917, 1.33 ) }
    dend_32 { pt3dadd( 42.0337, 33.0537, 2.26277, 1.33 ) }
    dend_32 { pt3dadd( 43.5681, 34.238, 2.55562, 0.96 ) }
    dend_32 { pt3dadd( 44.7852, 35.2217, 2.92619, 0.96 ) }
    dend_32 { pt3dadd( 46.0751, 36.3318, 3.41368, 1.4 ) }
    dend_32 { pt3dadd( 46.9254, 37.0896, 3.79794, 1.4 ) }
    dend_32 { pt3dadd( 47.9947, 38.0828, 4.30689, 1.4 ) }
    dend_32 { pt3dadd( 49.2251, 39.2492, 4.88773, 1.84 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 93/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.129629, -10.3401, -2.13, 1.84 ) }
    dend_25 { pt3dadd( -0.607855, -11.4348, -2.01782, 1.55 ) }
    dend_25 { pt3dadd( -0.945398, -12.3251, -1.94195, 1.47 ) }
    dend_25 { pt3dadd( -1.47303, -14.0215, -1.77202, 1.47 ) }
    dend_25 { pt3dadd( -1.85186, -15.5288, -1.61707, 1.25 ) }
    dend_25 { pt3dadd( -2.03711, -16.5025, -1.52159, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_25 { pt3dadd( -2.18167, -17.6888, -1.41553, 1.33 ) }
    dend_25 { pt3dadd( -2.26558, -19.1688, -1.2976, 1.7 ) }
    dend_25 { pt3dadd( -2.25082, -20.7339, -1.19345, 1.4 ) }
    dend_25 { pt3dadd( -2.17106, -21.9594, -1.12501, 1.18 ) }
    dend_25 { pt3dadd( -1.986, -23.7453, -1.02164, 1.4 ) }
    dend_25 { pt3dadd( -1.74967, -25.7223, -0.907568, 1.4 ) }
    dend_25 { pt3dadd( -1.57163, -27.0573, -0.835848, 1.55 ) }
    dend_25 { pt3dadd( -1.36273, -28.5278, -0.777362, 2.14 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 8/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( 0.330332, 1.55635, -10.46, 3.02 ) }
    dend_0 { pt3dadd( -1.50797, 1.48845, -10.46, 3.32 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 11/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.766585, 9.24885, 0.0, 0.673131 ) }
    axon_0 { pt3dadd( 1.60408, 24.2255, 0.0, 0.673131 ) }
    axon_0 { pt3dadd( 2.44158, 39.2021, 0.0, 0.673131 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 14/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -2.86975, 30.0651, 10.9153, 2.21 ) }
    dend_46 { pt3dadd( -3.00153, 31.4856, 11.8113, 2.21 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 16/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -2.86975, 30.0651, 10.9153, 0.59 ) }
    dend_45 { pt3dadd( -3.48872, 30.3948, 11.7738, 0.59 ) }
    dend_45 { pt3dadd( -4.38747, 30.8578, 12.8851, 0.59 ) }
    dend_45 { pt3dadd( -5.035, 31.1748, 13.6374, 0.44 ) }
    dend_45 { pt3dadd( -6.00942, 31.6246, 14.7121, 0.29 ) }
    dend_45 { pt3dadd( -6.38847, 31.7885, 15.1021, 0.29 ) }
    dend_45 { pt3dadd( -6.82, 31.9753, 15.5455, 0.29 ) }
    dend_45 { pt3dadd( -7.26053, 32.1889, 15.9833, 0.44 ) }
    dend_45 { pt3dadd( -7.70952, 32.4159, 16.3889, 0.66 ) }
    dend_45 { pt3dadd( -8.36658, 32.7852, 17.0139, 0.66 ) }
    dend_45 { pt3dadd( -8.82254, 33.0799, 17.508, 0.44 ) }
    dend_45 { pt3dadd( -9.32483, 33.4458, 18.1216, 0.44 ) }
    dend_45 { pt3dadd( -9.77122, 33.8316, 18.7839, 0.66 ) }
    dend_45 { pt3dadd( -10.0059, 34.0751, 19.2037, 0.66 ) }
    dend_45 { pt3dadd( -10.4211, 34.5661, 20.0544, 0.29 ) }
    dend_45 { pt3dadd( -10.6795, 34.9014, 20.6602, 0.29 ) }
    dend_45 { pt3dadd( -11.1369, 35.4681, 21.7376, 0.44 ) }
    dend_45 { pt3dadd( -11.5877, 35.9425, 22.7009, 0.37 ) }
    dend_45 { pt3dadd( -11.9757, 36.2816, 23.4671, 0.37 ) }
    dend_45 { pt3dadd( -12.3929, 36.5861, 24.2013, 0.66 ) }
    dend_45 { pt3dadd( -12.8626, 36.8795, 24.9336, 1.18 ) }
    dend_45 { pt3dadd( -13.5171, 37.2301, 25.8065, 1.47 ) }
    dend_45 { pt3dadd( -14.3204, 37.5985, 26.7398, 0.37 ) }
    dend_45 { pt3dadd( -14.8382, 37.8062, 27.283, 0.29 ) }
    dend_45 { pt3dadd( -15.4573, 38.0296, 27.8895, 0.29 ) }
    dend_45 { pt3dadd( -16.085, 38.2455, 28.4733, 0.15 ) }
    dend_45 { pt3dadd( -16.6173, 38.4374, 28.9574, 0.37 ) }
    dend_45 { pt3dadd( -17.4807, 38.7808, 29.777, 0.22 ) }
    dend_45 { pt3dadd( -18.023, 39.0311, 30.2833, 0.22 ) }
    dend_45 { pt3dadd( -18.7978, 39.4266, 31.0156, 0.22 ) }
    dend_45 { pt3dadd( -19.209, 39.6479, 31.4053, 0.96 ) }
    dend_45 { pt3dadd( -19.9455, 40.0684, 32.0919, 1.84 ) }
    dend_45 { pt3dadd( -20.4762, 40.397, 32.5877, 1.84 ) }
    dend_45 { pt3dadd( -21.2607, 40.9323, 33.3049, 0.22 ) }
    dend_45 { pt3dadd( -21.6973, 41.259, 33.6955, 0.22 ) }
    dend_45 { pt3dadd( -22.0729, 41.5645, 34.0383, 0.22 ) }
    dend_45 { pt3dadd( -22.4475, 41.8609, 34.375, 0.22 ) }
    dend_45 { pt3dadd( -22.7045, 42.0496, 34.5958, 0.22 ) }
    dend_45 { pt3dadd( -22.8731, 42.1633, 34.7352, 0.22 ) }
    dend_45 { pt3dadd( -23.2137, 42.3835, 35.0448, 0.52 ) }
    dend_45 { pt3dadd( -23.492, 42.5739, 35.3001, 1.03 ) }
    dend_45 { pt3dadd( -23.8127, 42.822, 35.6223, 1.25 ) }
    dend_45 { pt3dadd( -24.3687, 43.2806, 36.1756, 0.81 ) }
    dend_45 { pt3dadd( -24.8559, 43.7162, 36.6491, 0.22 ) }
    dend_45 { pt3dadd( -25.1544, 44.0087, 36.9692, 0.22 ) }
    dend_45 { pt3dadd( -25.5088, 44.4093, 37.4217, 0.59 ) }
    dend_45 { pt3dadd( -26.1039, 45.206, 38.2666, 0.07 ) }
    dend_45 { pt3dadd( -26.2758, 45.4882, 38.533, 0.15 ) }
    dend_45 { pt3dadd( -26.6314, 46.1985, 39.099, 0.15 ) }
    dend_45 { pt3dadd( -27.1331, 47.373, 39.8975, 0.07 ) }
    dend_45 { pt3dadd( -27.564, 48.4699, 40.5311, 0.07 ) }
    dend_45 { pt3dadd( -27.7564, 49.0258, 40.8205, 0.07 ) }
    dend_45 { pt3dadd( -28.0116, 49.8473, 41.1974, 0.07 ) }
    dend_45 { pt3dadd( -28.3253, 50.9282, 41.6385, 0.07 ) }
    dend_45 { pt3dadd( -28.532, 51.6812, 41.9136, 0.07 ) }
    dend_45 { pt3dadd( -28.7295, 52.386, 42.1331, 0.07 ) }
    dend_45 { pt3dadd( -28.9887, 53.2133, 42.3921, 0.22 ) }
    dend_45 { pt3dadd( -29.1475, 53.6662, 42.562, 0.44 ) }
    dend_45 { pt3dadd( -29.4499, 54.3982, 42.8925, 0.07 ) }
    dend_45 { pt3dadd( -29.8368, 55.225, 43.3426, 0.07 ) }
    dend_45 { pt3dadd( -30.0381, 55.6149, 43.5811, 0.07 ) }
    dend_45 { pt3dadd( -30.3378, 56.1253, 43.909, 0.37 ) }
    dend_45 { pt3dadd( -30.4562, 56.3011, 44.0215, 0.37 ) }
    dend_45 { pt3dadd( -30.8454, 56.8407, 44.3979, 0.07 ) }
    dend_45 { pt3dadd( -31.2891, 57.413, 44.8063, 0.07 ) }
    dend_45 { pt3dadd( -31.4693, 57.6386, 44.9548, 0.37 ) }
    dend_45 { pt3dadd( -32.0086, 58.3447, 45.3733, 1.11 ) }
    dend_45 { pt3dadd( -32.3373, 58.811, 45.6225, 0.81 ) }
    dend_45 { pt3dadd( -32.9461, 59.715, 46.0517, 0.07 ) }
    dend_45 { pt3dadd( -33.2677, 60.1909, 46.2535, 0.07 ) }
    dend_45 { pt3dadd( -33.6238, 60.698, 46.4602, 0.59 ) }
    dend_45 { pt3dadd( -34.2543, 61.5823, 46.8371, 0.15 ) }
    dend_45 { pt3dadd( -34.9884, 62.5682, 47.2828, 0.15 ) }
    dend_45 { pt3dadd( -35.5091, 63.2068, 47.6025, 0.15 ) }
    dend_45 { pt3dadd( -36.0933, 63.8533, 47.9786, 0.44 ) }
    dend_45 { pt3dadd( -36.7958, 64.5599, 48.4928, 0.15 ) }
    dend_45 { pt3dadd( -37.14, 64.8569, 48.7364, 0.15 ) }
    dend_45 { pt3dadd( -37.7486, 65.3027, 49.1412, 0.74 ) }
    dend_45 { pt3dadd( -38.624, 65.8753, 49.6767, 0.07 ) }
    dend_45 { pt3dadd( -39.2984, 66.2878, 50.0471, 0.07 ) }
    dend_45 { pt3dadd( -39.927, 66.6688, 50.3533, 0.07 ) }
    dend_45 { pt3dadd( -40.9749, 67.2957, 50.7735, 0.07 ) }
    dend_45 { pt3dadd( -41.7428, 67.7477, 50.9984, 0.52 ) }
    dend_45 { pt3dadd( -42.1403, 67.9744, 51.0715, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_45 { pt3dadd( -43.102, 68.5132, 51.1584, 0.07 ) }
    dend_45 { pt3dadd( -43.967, 69.0101, 51.174, 0.37 ) }
    dend_45 { pt3dadd( -45.1312, 69.6738, 51.1543, 0.07 ) }
    dend_45 { pt3dadd( -46.3977, 70.3771, 51.123, 0.07 ) }
    dend_45 { pt3dadd( -47.3606, 70.8935, 51.056, 0.07 ) }
    dend_45 { pt3dadd( -48.609, 71.5478, 50.9338, 0.07 ) }
    dend_45 { pt3dadd( -50.0205, 72.2746, 50.7481, 0.07 ) }
    dend_45 { pt3dadd( -50.7615, 72.6417, 50.6272, 0.07 ) }
    dend_45 { pt3dadd( -51.5795, 73.0436, 50.481, 0.07 ) }
    dend_45 { pt3dadd( -52.3989, 73.4531, 50.3587, 0.07 ) }
    dend_45 { pt3dadd( -53.1498, 73.8316, 50.2654, 0.81 ) }
    // Section: dend_43, id: dend_43, parent: dend_35 (entry count 11/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.04194, -21.9978, 6.22991, 0.52 ) }
    dend_43 { pt3dadd( -2.32954, -22.1247, 6.88994, 0.52 ) }
    dend_43 { pt3dadd( -1.22027, -22.3572, 7.90042, 0.52 ) }
    dend_43 { pt3dadd( -0.143806, -22.6392, 8.87861, 0.59 ) }
    dend_43 { pt3dadd( 0.979024, -23.0124, 9.91675, 0.59 ) }
    dend_43 { pt3dadd( 1.9503, -23.409, 10.8237, 0.59 ) }
    dend_43 { pt3dadd( 2.88953, -23.8806, 11.7095, 0.59 ) }
    dend_43 { pt3dadd( 3.90615, -24.5541, 12.7115, 0.59 ) }
    dend_43 { pt3dadd( 4.29304, -24.9399, 13.1105, 0.59 ) }
    dend_43 { pt3dadd( 4.73309, -25.5386, 13.5661, 0.59 ) }
    dend_43 { pt3dadd( 5.08384, -26.0987, 13.9271, 0.52 ) }
    dend_43 { pt3dadd( 5.55104, -26.8858, 14.407, 0.52 ) }
    dend_43 { pt3dadd( 6.0571, -27.7587, 14.9015, 0.59 ) }
    dend_43 { pt3dadd( 6.91091, -29.1141, 15.6438, 0.81 ) }
    dend_43 { pt3dadd( 7.89135, -30.4794, 16.4332, 0.52 ) }
    dend_43 { pt3dadd( 8.52078, -31.2644, 16.9016, 0.59 ) }
    dend_43 { pt3dadd( 9.28636, -32.1086, 17.4144, 0.81 ) }
    dend_43 { pt3dadd( 9.94579, -32.7575, 17.8226, 1.11 ) }
    dend_43 { pt3dadd( 11.37, -34.0504, 18.6204, 0.37 ) }
    dend_43 { pt3dadd( 12.3642, -34.888, 19.156, 0.59 ) }
    dend_43 { pt3dadd( 13.2385, -35.6007, 19.6159, 0.66 ) }
    dend_43 { pt3dadd( 14.5109, -36.5635, 20.2703, 0.37 ) }
    dend_43 { pt3dadd( 15.451, -37.1915, 20.7637, 0.37 ) }
    dend_43 { pt3dadd( 16.0001, -37.5065, 21.0949, 0.37 ) }
    dend_43 { pt3dadd( 16.8343, -37.935, 21.6893, 0.37 ) }
    dend_43 { pt3dadd( 17.4782, -38.2567, 22.2568, 0.96 ) }
    dend_43 { pt3dadd( 18.302, -38.6889, 23.1247, 0.96 ) }
    dend_43 { pt3dadd( 19.1444, -39.1885, 24.1438, 0.96 ) }
    dend_43 { pt3dadd( 20.4891, -40.1084, 25.9416, 0.66 ) }
    dend_43 { pt3dadd( 21.5475, -40.9261, 27.5201, 0.37 ) }
    dend_43 { pt3dadd( 22.5546, -41.8352, 29.2286, 0.37 ) }
    dend_43 { pt3dadd( 23.4188, -42.73, 30.914, 0.37 ) }
    dend_43 { pt3dadd( 23.7357, -43.1021, 31.6184, 0.37 ) }
    dend_43 { pt3dadd( 24.3192, -43.8579, 33.0477, 0.66 ) }
    dend_43 { pt3dadd( 24.9853, -44.7681, 34.7269, 0.66 ) }
    dend_43 { pt3dadd( 25.6015, -45.6052, 36.2337, 0.81 ) }
    dend_43 { pt3dadd( 26.4381, -46.7316, 38.1953, 0.88 ) }
    dend_43 { pt3dadd( 27.1967, -47.7601, 39.8973, 0.88 ) }
    dend_43 { pt3dadd( 28.0979, -48.9596, 41.7549, 0.37 ) }
    dend_43 { pt3dadd( 28.8959, -49.9932, 43.2458, 0.29 ) }
    dend_43 { pt3dadd( 29.3864, -50.6686, 44.0746, 0.29 ) }
    dend_43 { pt3dadd( 29.8903, -51.3915, 44.8454, 0.29 ) }
    dend_43 { pt3dadd( 30.5664, -52.4515, 45.8305, 0.52 ) }
    dend_43 { pt3dadd( 31.348, -53.7602, 46.9475, 0.96 ) }
    dend_43 { pt3dadd( 32.1964, -55.3297, 48.1924, 0.96 ) }
    dend_43 { pt3dadd( 32.8604, -56.6175, 49.2068, 0.29 ) }
    dend_43 { pt3dadd( 33.4585, -57.817, 50.1587, 0.29 ) }
    dend_43 { pt3dadd( 34.053, -59.0178, 51.1422, 0.29 ) }
    dend_43 { pt3dadd( 34.4804, -59.9153, 51.9028, 0.88 ) }
    dend_43 { pt3dadd( 34.9204, -60.9842, 52.7283, 2.21 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -3.04194, -21.9978, 6.22991, 0.96 ) }
    dend_36 { pt3dadd( -3.76515, -23.3082, 6.51622, 0.96 ) }
    dend_36 { pt3dadd( -4.71026, -25.1229, 6.98698, 0.81 ) }
    dend_36 { pt3dadd( -5.40921, -26.7342, 7.52373, 0.74 ) }
    dend_36 { pt3dadd( -6.05914, -28.4905, 8.24208, 0.88 ) }
    dend_36 { pt3dadd( -6.66057, -30.3639, 9.11956, 0.88 ) }
    dend_36 { pt3dadd( -6.82289, -30.9496, 9.39747, 0.88 ) }
    dend_36 { pt3dadd( -7.00337, -31.8907, 9.86406, 0.66 ) }
    dend_36 { pt3dadd( -7.30211, -33.866, 10.8745, 0.66 ) }
    dend_36 { pt3dadd( -7.51456, -35.1581, 11.5609, 0.88 ) }
    dend_36 { pt3dadd( -7.71839, -36.1995, 12.1255, 0.88 ) }
    dend_36 { pt3dadd( -8.12467, -37.81, 13.0066, 1.03 ) }
    dend_36 { pt3dadd( -8.57781, -39.3651, 13.829, 1.03 ) }
    dend_36 { pt3dadd( -9.13848, -41.075, 14.6447, 0.88 ) }
    dend_36 { pt3dadd( -9.73982, -42.7935, 15.3778, 0.59 ) }
    dend_36 { pt3dadd( -10.0264, -43.6837, 15.7448, 0.44 ) }
    dend_36 { pt3dadd( -10.5033, -45.3272, 16.4497, 1.03 ) }
    dend_36 { pt3dadd( -10.7951, -46.4472, 16.9564, 1.03 ) }
    dend_36 { pt3dadd( -11.0378, -47.5322, 17.4166, 1.03 ) }
    dend_36 { pt3dadd( -11.3803, -49.3323, 18.1241, 0.88 ) }
    dend_36 { pt3dadd( -11.7154, -51.2547, 18.818, 0.81 ) }
    dend_36 { pt3dadd( -12.0832, -53.484, 19.5962, 1.03 ) }
    dend_36 { pt3dadd( -12.3832, -55.2358, 20.1897, 1.47 ) }
    dend_36 { pt3dadd( -12.7201, -57.085, 20.8301, 1.11 ) }
    dend_36 { pt3dadd( -13.0652, -58.9218, 21.4584, 0.74 ) }
    dend_36 { pt3dadd( -13.3189, -60.2921, 21.9036, 0.66 ) }
    dend_36 { pt3dadd( -13.5616, -61.6455, 22.3235, 0.66 ) }
    dend_36 { pt3dadd( -13.8626, -63.3591, 22.8416, 1.03 ) }
    dend_36 { pt3dadd( -14.2591, -65.5617, 23.5018, 0.96 ) }
    dend_36 { pt3dadd( -14.606, -67.3119, 24.0209, 0.81 ) }
    dend_36 { pt3dadd( -14.9558, -68.8584, 24.4661, 1.11 ) }
    dend_36 { pt3dadd( -15.4611, -70.7945, 25.0261, 0.74 ) }
    dend_36 { pt3dadd( -15.9203, -72.412, 25.5427, 0.37 ) }
    dend_36 { pt3dadd( -16.2738, -73.6039, 25.9768, 0.37 ) }
    dend_36 { pt3dadd( -16.6198, -74.7553, 26.4468, 0.96 ) }
    dend_36 { pt3dadd( -17.0267, -76.1069, 27.0352, 1.55 ) }
    dend_36 { pt3dadd( -17.3049, -77.0375, 27.4463, 1.7 ) }
    dend_36 { pt3dadd( -17.8929, -79.0578, 28.3347, 0.81 ) }
    dend_36 { pt3dadd( -18.2846, -80.5068, 28.9763, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_36 { pt3dadd( -18.5793, -81.6863, 29.4773, 0.74 ) }
    dend_36 { pt3dadd( -18.9408, -83.2929, 30.0825, 0.44 ) }
    dend_36 { pt3dadd( -19.2954, -84.9981, 30.6282, 0.37 ) }
    dend_36 { pt3dadd( -19.6215, -86.5384, 31.0347, 0.37 ) }
    dend_36 { pt3dadd( -19.883, -87.6044, 31.2464, 0.37 ) }
    dend_36 { pt3dadd( -20.288, -89.0473, 31.4801, 0.74 ) }
    dend_36 { pt3dadd( -20.7279, -90.486, 31.6754, 1.03 ) }
    dend_36 { pt3dadd( -20.8873, -91.019, 31.7523, 1.03 ) }
    dend_36 { pt3dadd( -21.2803, -92.4312, 31.9552, 0.59 ) }
    dend_36 { pt3dadd( -21.5279, -93.4003, 32.1163, 0.59 ) }
    dend_36 { pt3dadd( -21.928, -95.1164, 32.4917, 0.81 ) }
    dend_36 { pt3dadd( -22.2469, -96.8324, 33.013, 0.52 ) }
    dend_36 { pt3dadd( -22.42, -98.1786, 33.5302, 0.96 ) }
    dend_36 { pt3dadd( -22.5299, -99.6422, 34.158, 1.25 ) }
    dend_36 { pt3dadd( -22.5674, -101.482, 34.9909, 0.66 ) }
    dend_36 { pt3dadd( -22.5777, -103.339, 35.8233, 0.29 ) }
    dend_36 { pt3dadd( -22.5826, -104.995, 36.5955, 0.29 ) }
    dend_36 { pt3dadd( -22.6258, -106.284, 37.1962, 0.29 ) }
    dend_36 { pt3dadd( -22.6813, -106.925, 37.478, 0.74 ) }
    dend_36 { pt3dadd( -22.8624, -108.155, 37.9841, 0.96 ) }
    dend_36 { pt3dadd( -23.4002, -110.511, 38.8126, 0.22 ) }
    dend_36 { pt3dadd( -23.858, -111.93, 39.2308, 0.22 ) }
    dend_36 { pt3dadd( -24.31, -113.056, 39.5209, 0.52 ) }
    dend_36 { pt3dadd( -24.6745, -113.863, 39.7242, 1.03 ) }
    dend_36 { pt3dadd( -25.0993, -114.762, 39.9683, 1.11 ) }
    dend_36 { pt3dadd( -25.6531, -115.895, 40.3112, 0.59 ) }
    dend_36 { pt3dadd( -26.2626, -117.114, 40.7258, 0.22 ) }
    dend_36 { pt3dadd( -26.616, -117.803, 40.9647, 0.22 ) }
    dend_36 { pt3dadd( -26.9004, -118.37, 41.1709, 0.22 ) }
    dend_36 { pt3dadd( -27.2567, -119.105, 41.4355, 0.44 ) }
    dend_36 { pt3dadd( -27.723, -120.114, 41.7808, 0.96 ) }
    dend_36 { pt3dadd( -28.2383, -121.268, 42.1531, 0.96 ) }
    dend_36 { pt3dadd( -28.637, -122.16, 42.4392, 0.44 ) }
    dend_36 { pt3dadd( -29.2679, -123.569, 42.9154, 0.22 ) }
    dend_36 { pt3dadd( -29.6139, -124.37, 43.2019, 0.59 ) }
    dend_36 { pt3dadd( -29.8989, -125.064, 43.4517, 0.59 ) }
    dend_36 { pt3dadd( -30.3462, -126.233, 43.8585, 0.15 ) }
    dend_36 { pt3dadd( -30.7468, -127.432, 44.2958, 0.15 ) }
    dend_36 { pt3dadd( -31.0738, -128.619, 44.7891, 0.15 ) }
    dend_36 { pt3dadd( -31.358, -129.78, 45.2877, 0.52 ) }
    dend_36 { pt3dadd( -31.5186, -130.491, 45.6166, 1.33 ) }
    dend_36 { pt3dadd( -31.7714, -131.648, 46.1821, 1.55 ) }
    dend_36 { pt3dadd( -32.0956, -133.077, 46.88, 1.18 ) }
    dend_36 { pt3dadd( -32.6779, -135.324, 47.9344, 0.37 ) }
    dend_36 { pt3dadd( -33.1981, -137.023, 48.7041, 0.22 ) }
    dend_36 { pt3dadd( -33.7215, -138.478, 49.3459, 0.22 ) }
    dend_36 { pt3dadd( -34.2818, -139.861, 49.9457, 0.37 ) }
    dend_36 { pt3dadd( -34.9619, -141.358, 50.5634, 0.96 ) }
    dend_36 { pt3dadd( -35.6964, -142.822, 51.1272, 0.22 ) }
    dend_36 { pt3dadd( -36.3021, -143.93, 51.5193, 0.22 ) }
    dend_36 { pt3dadd( -37.0813, -145.311, 51.9849, 0.22 ) }
    dend_36 { pt3dadd( -37.5848, -146.193, 52.2485, 0.37 ) }
    dend_36 { pt3dadd( -38.1056, -147.117, 52.5135, 0.88 ) }
    dend_36 { pt3dadd( -38.8256, -148.543, 52.9525, 0.88 ) }
    dend_36 { pt3dadd( -39.6706, -150.458, 53.5615, 0.22 ) }
    dend_36 { pt3dadd( -40.0462, -151.431, 53.8782, 0.44 ) }
    dend_36 { pt3dadd( -40.4619, -152.612, 54.2735, 0.88 ) }
    dend_36 { pt3dadd( -40.8371, -153.716, 54.6467, 0.37 ) }
    dend_36 { pt3dadd( -41.5771, -155.865, 55.369, 0.15 ) }
    dend_36 { pt3dadd( -42.1305, -157.435, 55.8704, 0.15 ) }
    dend_36 { pt3dadd( -42.525, -158.646, 56.2721, 0.15 ) }
    dend_36 { pt3dadd( -42.715, -159.274, 56.4812, 0.29 ) }
    dend_36 { pt3dadd( -43.044, -160.43, 56.8753, 0.96 ) }
    dend_36 { pt3dadd( -43.4018, -161.79, 57.3506, 0.29 ) }
    dend_36 { pt3dadd( -43.7034, -163.017, 57.7897, 0.15 ) }
    dend_36 { pt3dadd( -44.0087, -164.509, 58.3651, 0.15 ) }
    dend_36 { pt3dadd( -44.2138, -165.667, 58.8332, 0.15 ) }
    dend_36 { pt3dadd( -44.4318, -167.013, 59.3805, 0.15 ) }
    dend_36 { pt3dadd( -44.5988, -168.048, 59.7955, 0.15 ) }
    dend_36 { pt3dadd( -44.8279, -169.345, 60.3038, 0.29 ) }
    dend_36 { pt3dadd( -45.069, -170.422, 60.711, 0.81 ) }
    dend_36 { pt3dadd( -45.4874, -171.939, 61.242, 1.11 ) }
    dend_36 { pt3dadd( -45.9314, -173.349, 61.7092, 0.29 ) }
    dend_36 { pt3dadd( -46.4534, -174.862, 62.1636, 0.15 ) }
    dend_36 { pt3dadd( -46.9518, -176.199, 62.5253, 0.15 ) }
    dend_36 { pt3dadd( -47.4715, -177.523, 62.838, 0.15 ) }
    dend_36 { pt3dadd( -47.8274, -178.409, 63.0223, 0.15 ) }
    dend_36 { pt3dadd( -48.0216, -178.89, 63.1065, 0.37 ) }
    dend_36 { pt3dadd( -48.3083, -179.612, 63.253, 0.88 ) }
    dend_36 { pt3dadd( -48.5539, -180.181, 63.3912, 1.11 ) }
    dend_36 { pt3dadd( -49.1178, -181.323, 63.718, 0.29 ) }
    dend_36 { pt3dadd( -49.7326, -182.354, 64.077, 0.15 ) }
    dend_36 { pt3dadd( -50.1762, -182.993, 64.3281, 0.15 ) }
    dend_36 { pt3dadd( -51.1894, -184.238, 64.8402, 0.15 ) }
    dend_36 { pt3dadd( -51.8625, -184.97, 65.1584, 0.59 ) }
    dend_36 { pt3dadd( -52.6027, -185.713, 65.4864, 0.59 ) }
    dend_36 { pt3dadd( -54.4159, -187.4, 66.2076, 0.15 ) }
    dend_36 { pt3dadd( -55.545, -188.392, 66.5652, 0.15 ) }
    dend_36 { pt3dadd( -56.8172, -189.483, 66.872, 0.15 ) }
    dend_36 { pt3dadd( -57.1958, -189.804, 66.9269, 0.37 ) }
    dend_36 { pt3dadd( -58.321, -190.796, 67.0345, 0.96 ) }
    dend_36 { pt3dadd( -59.3049, -191.689, 67.0848, 0.22 ) }
    dend_36 { pt3dadd( -60.2075, -192.556, 67.0919, 0.22 ) }
    dend_36 { pt3dadd( -60.6605, -193.054, 67.1115, 0.22 ) }
    dend_36 { pt3dadd( -61.0915, -193.608, 67.1468, 0.44 ) }
    dend_36 { pt3dadd( -61.5904, -194.247, 67.1809, 0.81 ) }
    dend_36 { pt3dadd( -62.3682, -195.194, 67.2362, 0.22 ) }
    dend_36 { pt3dadd( -63.1225, -196.064, 67.3214, 0.29 ) }
    dend_36 { pt3dadd( -64.03, -197.074, 67.4558, 0.22 ) }
    dend_36 { pt3dadd( -65.1099, -198.219, 67.6133, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_36 { pt3dadd( -66.5003, -199.605, 67.825, 0.07 ) }
    dend_36 { pt3dadd( -67.2809, -200.35, 67.9487, 0.07 ) }
    dend_36 { pt3dadd( -68.2583, -201.225, 68.0896, 0.15 ) }
    dend_36 { pt3dadd( -69.4965, -202.266, 68.2626, 0.07 ) }
    dend_36 { pt3dadd( -69.9238, -202.603, 68.3252, 0.29 ) }
    dend_36 { pt3dadd( -70.8334, -203.331, 68.516, 0.44 ) }
    dend_36 { pt3dadd( -71.5476, -203.929, 68.6887, 0.15 ) }
    dend_36 { pt3dadd( -72.4901, -204.737, 68.9091, 0.15 ) }
    dend_36 { pt3dadd( -73.0207, -205.19, 69.0231, 0.37 ) }
    dend_36 { pt3dadd( -73.6548, -205.735, 69.157, 0.44 ) }
    dend_36 { pt3dadd( -74.6564, -206.643, 69.3661, 0.15 ) }
    dend_36 { pt3dadd( -75.219, -207.184, 69.4894, 0.15 ) }
    dend_36 { pt3dadd( -75.6915, -207.644, 69.6155, 0.37 ) }
    dend_36 { pt3dadd( -76.0897, -208.052, 69.7432, 0.52 ) }
    dend_36 { pt3dadd( -76.8595, -208.877, 69.9684, 0.15 ) }
    dend_36 { pt3dadd( -77.1468, -209.201, 70.047, 0.15 ) }
    dend_36 { pt3dadd( -77.8497, -210.035, 70.2324, 0.52 ) }
    dend_36 { pt3dadd( -78.8741, -211.313, 70.5029, 0.15 ) }
    dend_36 { pt3dadd( -79.4912, -212.122, 70.6524, 0.52 ) }
    dend_36 { pt3dadd( -80.4568, -213.468, 70.8676, 0.15 ) }
    dend_36 { pt3dadd( -80.7628, -213.919, 70.9119, 0.37 ) }
    dend_36 { pt3dadd( -80.9803, -214.255, 70.9179, 0.81 ) }
    dend_36 { pt3dadd( -81.2739, -214.729, 70.8759, 1.03 ) }
    dend_36 { pt3dadd( -81.789, -215.592, 70.7224, 0.07 ) }
    dend_36 { pt3dadd( -82.4186, -216.579, 70.5023, 0.15 ) }
    dend_36 { pt3dadd( -83.0797, -217.484, 70.2502, 0.29 ) }
    dend_36 { pt3dadd( -83.7449, -218.293, 69.9542, 0.15 ) }
    dend_36 { pt3dadd( -84.345, -218.946, 69.653, 0.15 ) }
    dend_36 { pt3dadd( -84.7671, -219.366, 69.4156, 0.29 ) }
    dend_36 { pt3dadd( -85.3695, -219.942, 69.0479, 0.37 ) }
    dend_36 { pt3dadd( -86.3032, -220.797, 68.4554, 0.22 ) }
    dend_36 { pt3dadd( -87.1625, -221.57, 67.9191, 0.22 ) }
    dend_36 { pt3dadd( -88.082, -222.381, 67.3411, 0.22 ) }
    dend_36 { pt3dadd( -88.5904, -222.818, 67.0151, 0.22 ) }
    dend_36 { pt3dadd( -89.0595, -223.209, 66.6864, 0.66 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 35/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 49.2251, 39.2492, 4.88773, 0.59 ) }
    dend_34 { pt3dadd( 50.726, 39.4661, 5.12749, 0.59 ) }
    dend_34 { pt3dadd( 51.5558, 39.5943, 5.29258, 0.59 ) }
    dend_34 { pt3dadd( 52.7423, 39.7349, 5.58911, 0.59 ) }
    dend_34 { pt3dadd( 53.6498, 39.808, 5.77572, 0.59 ) }
    dend_34 { pt3dadd( 54.3429, 39.8444, 5.86852, 0.44 ) }
    dend_34 { pt3dadd( 55.5033, 39.9013, 5.91784, 0.59 ) }
    dend_34 { pt3dadd( 56.6787, 39.9821, 5.85409, 0.59 ) }
    dend_34 { pt3dadd( 57.9813, 40.1138, 5.66256, 0.66 ) }
    dend_34 { pt3dadd( 59.3421, 40.3388, 5.32963, 0.66 ) }
    dend_34 { pt3dadd( 60.5009, 40.6656, 4.94574, 0.66 ) }
    dend_34 { pt3dadd( 61.7486, 41.2242, 4.40222, 0.52 ) }
    dend_34 { pt3dadd( 62.4406, 41.6513, 4.04942, 0.52 ) }
    dend_34 { pt3dadd( 63.0396, 42.1101, 3.74923, 0.88 ) }
    dend_34 { pt3dadd( 63.7822, 42.7397, 3.41091, 1.03 ) }
    dend_34 { pt3dadd( 64.7203, 43.5523, 3.0888, 0.74 ) }
    dend_34 { pt3dadd( 65.9948, 44.5502, 2.82059, 0.81 ) }
    dend_34 { pt3dadd( 66.6607, 44.9605, 2.7676, 0.59 ) }
    dend_34 { pt3dadd( 67.9267, 45.5377, 2.80932, 0.52 ) }
    dend_34 { pt3dadd( 68.9895, 45.8777, 2.97333, 0.81 ) }
    dend_34 { pt3dadd( 69.5727, 46.005, 3.14701, 1.03 ) }
    dend_34 { pt3dadd( 70.9368, 46.2421, 3.70143, 0.59 ) }
    dend_34 { pt3dadd( 72.2237, 46.4718, 4.30012, 0.44 ) }
    dend_34 { pt3dadd( 73.3056, 46.7187, 4.8213, 0.52 ) }
    dend_34 { pt3dadd( 74.3633, 47.0597, 5.29138, 0.52 ) }
    dend_34 { pt3dadd( 75.7075, 47.6471, 5.78974, 0.59 ) }
    dend_34 { pt3dadd( 76.8122, 48.246, 6.07042, 0.66 ) }
    dend_34 { pt3dadd( 77.8656, 48.9113, 6.19116, 1.11 ) }
    dend_34 { pt3dadd( 78.6072, 49.4192, 6.18743, 1.18 ) }
    dend_34 { pt3dadd( 80.0685, 50.4178, 6.03027, 0.74 ) }
    dend_34 { pt3dadd( 81.0437, 51.0791, 5.8698, 0.37 ) }
    dend_34 { pt3dadd( 81.7117, 51.5349, 5.74815, 0.37 ) }
    dend_34 { pt3dadd( 82.4992, 52.0689, 5.59979, 0.44 ) }
    dend_34 { pt3dadd( 83.0087, 52.4222, 5.51158, 0.44 ) }
    dend_34 { pt3dadd( 83.6065, 52.871, 5.38974, 0.44 ) }
    dend_34 { pt3dadd( 84.476, 53.6066, 5.2017, 0.74 ) }
    dend_34 { pt3dadd( 85.3457, 54.4365, 4.9475, 0.96 ) }
    dend_34 { pt3dadd( 86.3836, 55.5086, 4.54645, 0.88 ) }
    dend_34 { pt3dadd( 87.0844, 56.2414, 4.21569, 0.66 ) }
    dend_34 { pt3dadd( 87.8033, 56.933, 3.81538, 0.66 ) }
    dend_34 { pt3dadd( 88.5492, 57.5664, 3.3218, 0.37 ) }
    dend_34 { pt3dadd( 89.2421, 58.0632, 2.78298, 0.29 ) }
    dend_34 { pt3dadd( 89.8306, 58.4268, 2.26407, 0.52 ) }
    dend_34 { pt3dadd( 90.3957, 58.7608, 1.73913, 1.11 ) }
    dend_34 { pt3dadd( 91.15, 59.2353, 1.02303, 0.59 ) }
    dend_34 { pt3dadd( 91.8767, 59.7845, 0.369612, 0.37 ) }
    dend_34 { pt3dadd( 92.3719, 60.2643, -0.0493972, 0.37 ) }
    dend_34 { pt3dadd( 93.1606, 61.2034, -0.607899, 0.88 ) }
    dend_34 { pt3dadd( 93.6116, 61.8174, -0.867584, 0.96 ) }
    dend_34 { pt3dadd( 94.3927, 62.9258, -1.21424, 0.74 ) }
    dend_34 { pt3dadd( 95.1707, 63.9943, -1.43874, 0.59 ) }
    dend_34 { pt3dadd( 95.9287, 64.9044, -1.54925, 0.44 ) }
    dend_34 { pt3dadd( 96.6184, 65.6265, -1.57435, 1.03 ) }
    dend_34 { pt3dadd( 97.082, 66.0684, -1.57935, 1.03 ) }
    dend_34 { pt3dadd( 97.9374, 66.8394, -1.61964, 0.81 ) }
    dend_34 { pt3dadd( 98.4684, 67.3295, -1.66208, 0.88 ) }
    dend_34 { pt3dadd( 99.3132, 68.2384, -1.7585, 0.59 ) }
    dend_34 { pt3dadd( 100.193, 69.4139, -1.85375, 0.44 ) }
    dend_34 { pt3dadd( 100.982, 70.7161, -1.87299, 0.44 ) }
    dend_34 { pt3dadd( 101.396, 71.5057, -1.82414, 0.44 ) }
    dend_34 { pt3dadd( 101.877, 72.5237, -1.66301, 0.59 ) }
    dend_34 { pt3dadd( 102.59, 74.002, -1.24835, 0.74 ) }
    dend_34 { pt3dadd( 103.088, 74.8913, -0.858907, 0.44 ) }
    dend_34 { pt3dadd( 103.735, 75.812, -0.29457, 0.44 ) }
    dend_34 { pt3dadd( 104.406, 76.6172, 0.31842, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_34 { pt3dadd( 105.257, 77.5339, 1.11117, 0.88 ) }
    dend_34 { pt3dadd( 106.224, 78.4781, 1.99721, 0.88 ) }
    dend_34 { pt3dadd( 107.329, 79.4776, 2.97967, 0.37 ) }
    dend_34 { pt3dadd( 108.255, 80.3216, 3.73901, 0.29 ) }
    dend_34 { pt3dadd( 108.479, 80.5314, 3.90493, 0.29 ) }
    dend_34 { pt3dadd( 108.963, 81.0032, 4.22501, 0.29 ) }
    dend_34 { pt3dadd( 109.336, 81.3668, 4.42313, 0.29 ) }
    dend_34 { pt3dadd( 109.691, 81.7083, 4.56044, 0.29 ) }
    dend_34 { pt3dadd( 110.619, 82.5491, 4.80989, 0.37 ) }
    dend_34 { pt3dadd( 111.437, 83.2, 4.95974, 0.74 ) }
    dend_34 { pt3dadd( 112.431, 83.9207, 5.03942, 0.96 ) }
    dend_34 { pt3dadd( 113.345, 84.5491, 5.04104, 1.18 ) }
    dend_34 { pt3dadd( 114.148, 85.0829, 5.00583, 1.11 ) }
    dend_34 { pt3dadd( 114.791, 85.499, 4.95057, 0.88 ) }
    dend_34 { pt3dadd( 115.695, 86.0687, 4.85996, 0.66 ) }
    dend_34 { pt3dadd( 117.149, 86.9637, 4.7475, 0.44 ) }
    dend_34 { pt3dadd( 118.208, 87.582, 4.73277, 0.66 ) }
    dend_34 { pt3dadd( 118.817, 87.9239, 4.77471, 0.44 ) }
    dend_34 { pt3dadd( 119.434, 88.2468, 4.87829, 0.44 ) }
    dend_34 { pt3dadd( 120.389, 88.7183, 5.13437, 0.74 ) }
    dend_34 { pt3dadd( 121.273, 89.1351, 5.45647, 1.18 ) }
    dend_34 { pt3dadd( 122.485, 89.7077, 6.00792, 1.11 ) }
    dend_34 { pt3dadd( 123.49, 90.2203, 6.48677, 0.81 ) }
    dend_34 { pt3dadd( 124.599, 90.8308, 7.01373, 0.44 ) }
    dend_34 { pt3dadd( 125.467, 91.3268, 7.42034, 0.44 ) }
    dend_34 { pt3dadd( 126.009, 91.6391, 7.66127, 0.44 ) }
    dend_34 { pt3dadd( 126.753, 92.0617, 7.96242, 0.66 ) }
    dend_34 { pt3dadd( 127.77, 92.6174, 8.35679, 0.37 ) }
    dend_34 { pt3dadd( 128.294, 92.896, 8.55665, 0.29 ) }
    dend_34 { pt3dadd( 128.806, 93.1862, 8.76612, 0.29 ) }
    dend_34 { pt3dadd( 129.439, 93.5717, 9.06752, 0.29 ) }
    dend_34 { pt3dadd( 130.146, 94.0439, 9.43918, 0.81 ) }
    dend_34 { pt3dadd( 130.795, 94.5495, 9.82891, 1.03 ) }
    dend_34 { pt3dadd( 131.649, 95.345, 10.4356, 0.59 ) }
    dend_34 { pt3dadd( 132.537, 96.2829, 11.1958, 0.52 ) }
    dend_34 { pt3dadd( 133.237, 97.0756, 11.8448, 0.74 ) }
    dend_34 { pt3dadd( 133.704, 97.6158, 12.3154, 0.37 ) }
    dend_34 { pt3dadd( 134.58, 98.5933, 13.202, 0.29 ) }
    dend_34 { pt3dadd( 135.359, 99.417, 13.9611, 0.29 ) }
    dend_34 { pt3dadd( 136.432, 100.47, 14.9995, 0.29 ) }
    dend_34 { pt3dadd( 136.842, 100.846, 15.3761, 0.88 ) }
    dend_34 { pt3dadd( 137.534, 101.461, 15.9673, 0.88 ) }
    dend_34 { pt3dadd( 138.369, 102.156, 16.6128, 0.29 ) }
    dend_34 { pt3dadd( 139.031, 102.673, 17.0535, 0.22 ) }
    dend_34 { pt3dadd( 139.743, 103.23, 17.4421, 0.29 ) }
    dend_34 { pt3dadd( 140.51, 103.833, 17.772, 0.74 ) }
    dend_34 { pt3dadd( 141.073, 104.27, 17.9885, 0.29 ) }
    dend_34 { pt3dadd( 142.248, 105.164, 18.3605, 0.22 ) }
    dend_34 { pt3dadd( 143.08, 105.795, 18.6045, 0.22 ) }
    dend_34 { pt3dadd( 143.801, 106.322, 18.7797, 0.37 ) }
    dend_34 { pt3dadd( 144.744, 106.972, 18.9655, 0.74 ) }
    dend_34 { pt3dadd( 145.417, 107.411, 19.1062, 0.74 ) }
    dend_34 { pt3dadd( 146.149, 107.884, 19.2584, 0.29 ) }
    dend_34 { pt3dadd( 147.049, 108.465, 19.4555, 0.22 ) }
    dend_34 { pt3dadd( 147.709, 108.863, 19.6265, 0.37 ) }
    dend_34 { pt3dadd( 148.559, 109.328, 19.8959, 0.22 ) }
    dend_34 { pt3dadd( 149.433, 109.759, 20.2048, 0.22 ) }
    dend_34 { pt3dadd( 149.882, 109.955, 20.3803, 0.37 ) }
    dend_34 { pt3dadd( 150.849, 110.33, 20.7772, 0.37 ) }
    dend_34 { pt3dadd( 151.869, 110.694, 21.2232, 0.37 ) }
    dend_34 { pt3dadd( 152.679, 111.003, 21.5981, 0.44 ) }
    dend_34 { pt3dadd( 153.241, 111.236, 21.8698, 0.81 ) }
    dend_34 { pt3dadd( 154.084, 111.626, 22.2954, 1.47 ) }
    dend_34 { pt3dadd( 154.607, 111.894, 22.5815, 1.62 ) }
    dend_34 { pt3dadd( 155.754, 112.549, 23.2607, 0.59 ) }
    dend_34 { pt3dadd( 157.135, 113.393, 24.1417, 0.29 ) }
    dend_34 { pt3dadd( 158.015, 113.952, 24.7254, 0.22 ) }
    dend_34 { pt3dadd( 158.56, 114.308, 25.1039, 0.22 ) }
    dend_34 { pt3dadd( 159.035, 114.63, 25.4351, 0.22 ) }
    dend_34 { pt3dadd( 159.503, 114.95, 25.7592, 0.22 ) }
    dend_34 { pt3dadd( 159.964, 115.263, 26.0647, 0.22 ) }
    dend_34 { pt3dadd( 160.611, 115.668, 26.4907, 0.37 ) }
    dend_34 { pt3dadd( 161.178, 115.998, 26.8433, 0.88 ) }
    dend_34 { pt3dadd( 161.655, 116.262, 27.1214, 1.25 ) }
    dend_34 { pt3dadd( 162.4, 116.676, 27.5544, 1.25 ) }
    dend_34 { pt3dadd( 163.118, 117.09, 27.9969, 0.29 ) }
    dend_34 { pt3dadd( 163.837, 117.531, 28.4788, 0.15 ) }
    dend_34 { pt3dadd( 164.393, 117.886, 28.8563, 0.29 ) }
    dend_34 { pt3dadd( 165.129, 118.362, 29.3249, 0.15 ) }
    dend_34 { pt3dadd( 165.585, 118.665, 29.6157, 0.15 ) }
    dend_34 { pt3dadd( 165.954, 118.918, 29.8382, 0.44 ) }
    dend_34 { pt3dadd( 166.897, 119.554, 30.3053, 0.74 ) }
    dend_34 { pt3dadd( 167.674, 120.069, 30.6427, 0.22 ) }
    dend_34 { pt3dadd( 168.551, 120.63, 30.9803, 0.15 ) }
    dend_34 { pt3dadd( 169.171, 121.025, 31.1906, 0.66 ) }
    dend_34 { pt3dadd( 169.734, 121.412, 31.348, 0.66 ) }
    dend_34 { pt3dadd( 171.129, 122.44, 31.7189, 0.22 ) }
    dend_34 { pt3dadd( 171.783, 122.97, 31.8883, 0.66 ) }
    dend_34 { pt3dadd( 172.311, 123.455, 32.0316, 1.18 ) }
    dend_34 { pt3dadd( 172.822, 123.981, 32.1899, 0.96 ) }
    dend_34 { pt3dadd( 173.971, 125.265, 32.5862, 0.15 ) }
    dend_34 { pt3dadd( 174.375, 125.758, 32.7458, 0.15 ) }
    dend_34 { pt3dadd( 174.835, 126.377, 32.9425, 0.22 ) }
    dend_34 { pt3dadd( 175.366, 127.053, 33.1727, 0.07 ) }
    dend_34 { pt3dadd( 176.109, 127.912, 33.547, 0.07 ) }
    dend_34 { pt3dadd( 176.408, 128.224, 33.7239, 0.74 ) }
    dend_34 { pt3dadd( 177.0, 128.773, 34.1051, 1.03 ) }
    dend_34 { pt3dadd( 177.656, 129.342, 34.5296, 0.44 ) }
    dend_34 { pt3dadd( 178.683, 130.191, 35.3034, 0.15 ) }
    dend_34 { pt3dadd( 179.38, 130.745, 35.9143, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_34 { pt3dadd( 179.827, 131.098, 36.3766, 0.15 ) }
    dend_34 { pt3dadd( 180.183, 131.377, 36.8141, 0.37 ) }
    dend_34 { pt3dadd( 180.666, 131.738, 37.5098, 0.59 ) }
    dend_34 { pt3dadd( 181.568, 132.382, 39.0793, 0.22 ) }
    dend_34 { pt3dadd( 182.03, 132.713, 40.0448, 0.44 ) }
    dend_34 { pt3dadd( 182.399, 132.97, 40.9559, 0.44 ) }
    dend_34 { pt3dadd( 182.608, 133.108, 41.5534, 0.44 ) }
    dend_34 { pt3dadd( 182.784, 133.2, 42.1405, 0.44 ) }
    dend_34 { pt3dadd( 183.081, 133.268, 43.1825, 0.44 ) }
    dend_34 { pt3dadd( 183.166, 133.267, 43.4691, 0.44 ) }
    dend_34 { pt3dadd( 183.303, 133.257, 43.8967, 0.44 ) }
    dend_34 { pt3dadd( 183.576, 133.218, 44.6328, 0.44 ) }
    dend_34 { pt3dadd( 183.871, 133.156, 45.3564, 0.44 ) }
    dend_34 { pt3dadd( 184.672, 132.949, 47.1882, 0.22 ) }
    dend_34 { pt3dadd( 185.236, 132.773, 48.388, 0.22 ) }
    dend_34 { pt3dadd( 185.683, 132.614, 49.3331, 0.22 ) }
    dend_34 { pt3dadd( 186.088, 132.445, 50.2112, 0.74 ) }
    dend_34 { pt3dadd( 186.939, 132.004, 52.1459, 0.22 ) }
    dend_34 { pt3dadd( 187.612, 131.596, 53.7997, 0.52 ) }
    dend_34 { pt3dadd( 188.112, 131.253, 55.0964, 0.22 ) }
    dend_34 { pt3dadd( 188.56, 130.936, 56.3245, 0.52 ) }
    dend_34 { pt3dadd( 188.963, 130.653, 57.5235, 0.52 ) }
    dend_34 { pt3dadd( 189.348, 130.385, 58.9207, 0.29 ) }
    dend_34 { pt3dadd( 189.642, 130.195, 60.3995, 0.29 ) }
    dend_34 { pt3dadd( 189.724, 130.164, 61.0903, 0.29 ) }
    dend_34 { pt3dadd( 189.78, 130.227, 62.059, 0.29 ) }
    dend_34 { pt3dadd( 189.803, 130.328, 62.536, 0.29 ) }
    dend_34 { pt3dadd( 189.871, 130.658, 63.4535, 0.29 ) }
    dend_34 { pt3dadd( 190.023, 131.156, 64.4906, 0.29 ) }
    dend_34 { pt3dadd( 190.159, 131.424, 64.9958, 0.29 ) }
    dend_34 { pt3dadd( 190.41, 131.763, 65.6807, 0.52 ) }
    dend_34 { pt3dadd( 190.873, 132.253, 66.815, 0.22 ) }
    dend_34 { pt3dadd( 191.524, 132.834, 68.1374, 0.22 ) }
    dend_34 { pt3dadd( 192.038, 133.25, 69.0491, 0.22 ) }
    dend_34 { pt3dadd( 192.486, 133.635, 69.7748, 0.52 ) }
    dend_34 { pt3dadd( 193.279, 134.413, 71.024, 0.52 ) }
    dend_34 { pt3dadd( 193.992, 135.147, 72.171, 0.52 ) }
    dend_34 { pt3dadd( 194.982, 136.271, 73.7541, 0.22 ) }
    dend_34 { pt3dadd( 195.645, 137.113, 74.7651, 0.22 ) }
    dend_34 { pt3dadd( 196.325, 138.084, 75.7969, 0.22 ) }
    dend_34 { pt3dadd( 196.829, 138.88, 76.5129, 0.59 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 49.2251, 39.2492, 4.88773, 0.81 ) }
    dend_33 { pt3dadd( 49.6132, 40.6927, 4.19697, 0.81 ) }
    dend_33 { pt3dadd( 50.057, 41.8831, 3.44407, 0.52 ) }
    dend_33 { pt3dadd( 50.4637, 42.7261, 2.76918, 0.66 ) }
    dend_33 { pt3dadd( 51.0752, 43.7651, 1.66139, 0.44 ) }
    dend_33 { pt3dadd( 51.5585, 44.529, 0.630524, 0.44 ) }
    dend_33 { pt3dadd( 52.0197, 45.2307, -0.483269, 0.44 ) }
    dend_33 { pt3dadd( 52.3938, 45.6281, -1.46058, 0.44 ) }
    dend_33 { pt3dadd( 52.7328, 45.842, -2.36635, 0.44 ) }
    dend_33 { pt3dadd( 53.1886, 46.0144, -3.65058, 0.44 ) }
    dend_33 { pt3dadd( 53.5183, 46.1023, -4.62467, 0.44 ) }
    dend_33 { pt3dadd( 53.7419, 46.1734, -5.22632, 0.44 ) }
    dend_33 { pt3dadd( 54.1267, 46.3694, -6.15998, 0.59 ) }
    dend_33 { pt3dadd( 54.6094, 46.7727, -7.17443, 0.59 ) }
    dend_33 { pt3dadd( 54.8263, 47.0169, -7.54261, 0.59 ) }
    dend_33 { pt3dadd( 55.2521, 47.5753, -8.13829, 0.66 ) }
    dend_33 { pt3dadd( 55.5955, 48.0939, -8.57856, 0.96 ) }
    dend_33 { pt3dadd( 55.8924, 48.6597, -8.97639, 0.96 ) }
    dend_33 { pt3dadd( 56.2448, 49.5235, -9.47418, 0.96 ) }
    dend_33 { pt3dadd( 56.7029, 50.8155, -10.0973, 0.88 ) }
    dend_33 { pt3dadd( 56.9845, 51.6521, -10.4537, 0.52 ) }
    dend_33 { pt3dadd( 57.3083, 52.5465, -10.7828, 0.29 ) }
    dend_33 { pt3dadd( 57.6115, 53.3169, -11.0245, 0.29 ) }
    dend_33 { pt3dadd( 57.9241, 54.0182, -11.2056, 0.44 ) }
    dend_33 { pt3dadd( 58.2869, 54.7515, -11.3465, 0.88 ) }
    dend_33 { pt3dadd( 58.7314, 55.6002, -11.4986, 0.66 ) }
    dend_33 { pt3dadd( 59.3972, 56.8611, -11.7853, 0.52 ) }
    dend_33 { pt3dadd( 59.7572, 57.5737, -12.0082, 0.59 ) }
    dend_33 { pt3dadd( 60.3302, 58.7921, -12.5102, 0.74 ) }
    dend_33 { pt3dadd( 60.8846, 60.0952, -13.2082, 0.88 ) }
    dend_33 { pt3dadd( 61.2133, 60.9593, -13.7896, 0.52 ) }
    dend_33 { pt3dadd( 61.5153, 61.8526, -14.504, 0.52 ) }
    dend_33 { pt3dadd( 61.807, 62.7578, -15.3471, 0.59 ) }
    dend_33 { pt3dadd( 62.0005, 63.2248, -15.8394, 0.59 ) }
    dend_33 { pt3dadd( 62.2925, 63.7615, -16.4648, 0.81 ) }
    dend_33 { pt3dadd( 62.7421, 64.4169, -17.2363, 0.81 ) }
    dend_33 { pt3dadd( 63.2563, 65.0705, -17.8713, 0.81 ) }
    dend_33 { pt3dadd( 63.8711, 65.7903, -18.4085, 0.52 ) }
    dend_33 { pt3dadd( 64.8103, 66.8807, -19.0052, 0.29 ) }
    dend_33 { pt3dadd( 65.2607, 67.4063, -19.2132, 0.29 ) }
    dend_33 { pt3dadd( 65.8629, 68.0805, -19.3936, 0.59 ) }
    dend_33 { pt3dadd( 66.7591, 69.0408, -19.5387, 0.81 ) }
    dend_33 { pt3dadd( 67.3167, 69.626, -19.5946, 1.03 ) }
    dend_33 { pt3dadd( 67.9773, 70.3653, -19.6303, 0.29 ) }
    dend_33 { pt3dadd( 68.5585, 71.0848, -19.6663, 0.22 ) }
    dend_33 { pt3dadd( 69.1318, 71.8878, -19.7439, 0.22 ) }
    dend_33 { pt3dadd( 69.504, 72.5361, -19.8677, 0.29 ) }
    dend_33 { pt3dadd( 69.9521, 73.5067, -20.1217, 0.74 ) }
    dend_33 { pt3dadd( 70.2654, 74.3428, -20.3408, 0.88 ) }
    dend_33 { pt3dadd( 70.5248, 75.1646, -20.564, 0.88 ) }
    dend_33 { pt3dadd( 70.7738, 76.14, -20.8235, 0.52 ) }
    dend_33 { pt3dadd( 71.103, 77.7157, -21.2224, 0.52 ) }
    dend_33 { pt3dadd( 71.2746, 78.6988, -21.4662, 0.44 ) }
    dend_33 { pt3dadd( 71.4824, 80.1363, -21.8364, 0.44 ) }
    dend_33 { pt3dadd( 71.5856, 81.1302, -22.116, 0.44 ) }
    dend_33 { pt3dadd( 71.6338, 82.088, -22.3988, 0.74 ) }
    dend_33 { pt3dadd( 71.6249, 82.7534, -22.5879, 0.88 ) }
    dend_33 { pt3dadd( 71.5006, 84.1596, -22.9637, 0.96 ) }
    dend_33 { pt3dadd( 71.3401, 85.4792, -23.2613, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_33 { pt3dadd( 71.2438, 86.4215, -23.3889, 0.22 ) }
    dend_33 { pt3dadd( 71.2287, 87.1874, -23.3783, 0.22 ) }
    dend_33 { pt3dadd( 71.3478, 88.3623, -23.1861, 0.74 ) }
    dend_33 { pt3dadd( 71.4289, 88.7633, -23.0885, 0.74 ) }
    dend_33 { pt3dadd( 71.8269, 90.1595, -22.6963, 0.52 ) }
    dend_33 { pt3dadd( 72.2816, 91.5391, -22.3645, 0.44 ) }
    dend_33 { pt3dadd( 72.7049, 92.7481, -22.193, 0.44 ) }
    dend_33 { pt3dadd( 73.094, 93.9541, -22.1728, 0.66 ) }
    dend_33 { pt3dadd( 73.4107, 95.1599, -22.3271, 0.66 ) }
    dend_33 { pt3dadd( 73.5741, 96.0208, -22.4903, 0.66 ) }
    dend_33 { pt3dadd( 73.7461, 97.3677, -22.8592, 0.29 ) }
    dend_33 { pt3dadd( 73.8258, 98.3082, -23.128, 0.29 ) }
    dend_33 { pt3dadd( 73.8891, 99.38, -23.3435, 0.44 ) }
    dend_33 { pt3dadd( 73.9125, 100.068, -23.391, 0.44 ) }
    dend_33 { pt3dadd( 73.9312, 101.325, -23.2762, 0.74 ) }
    dend_33 { pt3dadd( 73.9288, 101.907, -23.167, 1.11 ) }
    dend_33 { pt3dadd( 73.901, 103.297, -22.8499, 0.44 ) }
    dend_33 { pt3dadd( 73.8479, 104.751, -22.534, 0.74 ) }
    dend_33 { pt3dadd( 73.804, 105.434, -22.4368, 0.52 ) }
    dend_33 { pt3dadd( 73.7234, 106.227, -22.4203, 0.29 ) }
    dend_33 { pt3dadd( 73.6107, 107.002, -22.5347, 0.22 ) }
    dend_33 { pt3dadd( 73.3908, 108.051, -22.8705, 0.59 ) }
    dend_33 { pt3dadd( 73.1804, 108.85, -23.2687, 0.96 ) }
    dend_33 { pt3dadd( 72.9204, 109.7, -23.7583, 0.66 ) }
    dend_33 { pt3dadd( 72.5936, 110.723, -24.3111, 0.44 ) }
    dend_33 { pt3dadd( 72.2626, 111.817, -24.8113, 0.44 ) }
    dend_33 { pt3dadd( 71.9156, 113.132, -25.1949, 0.22 ) }
    dend_33 { pt3dadd( 71.7674, 113.867, -25.2755, 0.37 ) }
    dend_33 { pt3dadd( 71.6169, 115.037, -25.2149, 0.59 ) }
    dend_33 { pt3dadd( 71.5358, 116.363, -24.975, 0.29 ) }
    dend_33 { pt3dadd( 71.5214, 117.707, -24.6269, 0.29 ) }
    dend_33 { pt3dadd( 71.5083, 119.115, -24.2256, 0.37 ) }
    dend_33 { pt3dadd( 71.4614, 119.8, -24.0384, 0.29 ) }
    dend_33 { pt3dadd( 71.2912, 120.855, -23.8236, 0.66 ) }
    dend_33 { pt3dadd( 71.0392, 121.76, -23.7408, 1.11 ) }
    dend_33 { pt3dadd( 70.7445, 122.5, -23.7585, 1.11 ) }
    dend_33 { pt3dadd( 70.1174, 123.815, -23.935, 0.37 ) }
    dend_33 { pt3dadd( 69.3694, 125.345, -24.2481, 0.22 ) }
    dend_33 { pt3dadd( 69.073, 125.964, -24.3894, 0.59 ) }
    dend_33 { pt3dadd( 68.7836, 126.567, -24.5391, 1.11 ) }
    dend_33 { pt3dadd( 68.1711, 127.912, -24.8944, 0.29 ) }
    dend_33 { pt3dadd( 67.5728, 129.413, -25.3156, 0.96 ) }
    dend_33 { pt3dadd( 67.2641, 130.44, -25.6461, 0.15 ) }
    dend_33 { pt3dadd( 67.1481, 131.004, -25.8496, 0.22 ) }
    dend_33 { pt3dadd( 66.92, 132.323, -26.3937, 0.07 ) }
    dend_33 { pt3dadd( 66.8388, 132.858, -26.6713, 0.22 ) }
    dend_33 { pt3dadd( 66.8025, 133.149, -26.8622, 0.22 ) }
    dend_33 { pt3dadd( 66.7432, 133.982, -27.5495, 0.07 ) }
    dend_33 { pt3dadd( 66.7464, 134.329, -27.8907, 0.22 ) }
    dend_33 { pt3dadd( 66.7846, 134.68, -28.278, 0.22 ) }
    dend_33 { pt3dadd( 66.9434, 135.298, -29.042, 0.15 ) }
    dend_33 { pt3dadd( 67.0243, 135.6, -29.4378, 0.29 ) }
    dend_33 { pt3dadd( 67.1473, 136.18, -30.1929, 0.07 ) }
    dend_33 { pt3dadd( 67.1916, 136.524, -30.622, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 54/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -1.36273, -28.5278, -0.777362, 0.81 ) }
    dend_31 { pt3dadd( -0.98227, -29.3462, -1.95344, 0.81 ) }
    dend_31 { pt3dadd( -0.46652, -30.3006, -3.4109, 0.81 ) }
    dend_31 { pt3dadd( -0.130025, -30.8211, -4.26085, 0.81 ) }
    dend_31 { pt3dadd( 0.32111, -31.3784, -5.22671, 0.88 ) }
    dend_31 { pt3dadd( 0.814703, -31.8459, -6.12566, 1.18 ) }
    dend_31 { pt3dadd( 1.19515, -32.1187, -6.73052, 1.18 ) }
    dend_31 { pt3dadd( 1.52709, -32.2671, -7.18071, 1.18 ) }
    dend_31 { pt3dadd( 2.17667, -32.4765, -7.88925, 0.96 ) }
    dend_31 { pt3dadd( 3.00804, -32.72, -8.67961, 0.96 ) }
    dend_31 { pt3dadd( 3.97711, -32.9937, -9.52422, 0.81 ) }
    dend_31 { pt3dadd( 5.23115, -33.3705, -10.5077, 0.81 ) }
    dend_31 { pt3dadd( 5.99927, -33.6212, -11.029, 0.81 ) }
    dend_31 { pt3dadd( 7.22677, -34.0429, -11.699, 0.81 ) }
    dend_31 { pt3dadd( 8.36682, -34.4544, -12.1446, 0.88 ) }
    dend_31 { pt3dadd( 9.37061, -34.844, -12.3558, 0.88 ) }
    dend_31 { pt3dadd( 10.3304, -35.2535, -12.3361, 0.59 ) }
    dend_31 { pt3dadd( 11.3514, -35.6972, -12.073, 0.59 ) }
    dend_31 { pt3dadd( 12.5798, -36.1906, -11.5236, 0.59 ) }
    dend_31 { pt3dadd( 13.4278, -36.4912, -11.003, 0.74 ) }
    dend_31 { pt3dadd( 14.275, -36.7577, -10.3902, 0.59 ) }
    dend_31 { pt3dadd( 15.3172, -37.0726, -9.59173, 0.59 ) }
    dend_31 { pt3dadd( 16.2776, -37.3703, -8.87622, 0.88 ) }
    dend_31 { pt3dadd( 17.4322, -37.7454, -8.11436, 0.88 ) }
    dend_31 { pt3dadd( 18.5131, -38.137, -7.52309, 1.03 ) }
    dend_31 { pt3dadd( 19.7425, -38.6493, -7.01069, 0.81 ) }
    dend_31 { pt3dadd( 20.6075, -39.062, -6.76131, 0.66 ) }
    dend_31 { pt3dadd( 21.5469, -39.5929, -6.59849, 0.66 ) }
    dend_31 { pt3dadd( 22.6319, -40.3263, -6.43933, 0.44 ) }
    dend_31 { pt3dadd( 23.8829, -41.2784, -6.20937, 0.44 ) }
    dend_31 { pt3dadd( 24.8409, -42.0406, -5.91954, 0.66 ) }
    dend_31 { pt3dadd( 25.391, -42.4856, -5.66291, 1.11 ) }
    dend_31 { pt3dadd( 26.4242, -43.2784, -4.95143, 1.25 ) }
    dend_31 { pt3dadd( 27.679, -44.1813, -3.86513, 0.44 ) }
    dend_31 { pt3dadd( 28.6912, -44.8629, -2.89395, 0.52 ) }
    dend_31 { pt3dadd( 29.8159, -45.564, -1.76277, 0.52 ) }
    dend_31 { pt3dadd( 30.6504, -46.0606, -0.917893, 0.52 ) }
    dend_31 { pt3dadd( 31.7973, -46.7689, 0.259017, 0.59 ) }
    dend_31 { pt3dadd( 32.4611, -47.2056, 0.95055, 0.96 ) }
    dend_31 { pt3dadd( 33.164, -47.7124, 1.6884, 1.11 ) }
    dend_31 { pt3dadd( 33.9776, -48.3526, 2.55527, 0.81 ) }
    dend_31 { pt3dadd( 34.8291, -49.0463, 3.48583, 0.52 ) }
    dend_31 { pt3dadd( 35.5007, -49.5391, 4.2317, 0.52 ) }
    dend_31 { pt3dadd( 35.754, -49.7102, 4.50922, 0.52 ) }
    dend_31 { pt3dadd( 36.1398, -49.9485, 4.93051, 0.52 ) }
    dend_31 { pt3dadd( 36.5154, -50.1641, 5.28408, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_31 { pt3dadd( 37.2725, -50.5673, 5.83145, 0.96 ) }
    dend_31 { pt3dadd( 38.5048, -51.2048, 6.48207, 0.44 ) }
    dend_31 { pt3dadd( 39.2251, -51.5947, 6.77364, 0.81 ) }
    dend_31 { pt3dadd( 39.9287, -52.0063, 7.02774, 1.03 ) }
    dend_31 { pt3dadd( 41.2845, -52.8949, 7.43958, 0.44 ) }
    dend_31 { pt3dadd( 42.1183, -53.4887, 7.6817, 0.44 ) }
    dend_31 { pt3dadd( 42.7103, -53.9346, 7.86363, 0.88 ) }
    dend_31 { pt3dadd( 43.2995, -54.3917, 8.08431, 1.55 ) }
    dend_31 { pt3dadd( 44.132, -55.0208, 8.46856, 1.55 ) }
    dend_31 { pt3dadd( 45.1098, -55.7585, 9.03141, 0.52 ) }
    dend_31 { pt3dadd( 46.2538, -56.6531, 9.82218, 0.22 ) }
    dend_31 { pt3dadd( 46.7992, -57.0912, 10.2362, 0.22 ) }
    dend_31 { pt3dadd( 47.3947, -57.5761, 10.7383, 0.22 ) }
    dend_31 { pt3dadd( 47.8594, -57.9574, 11.1581, 0.74 ) }
    dend_31 { pt3dadd( 48.3931, -58.3964, 11.6365, 1.18 ) }
    dend_31 { pt3dadd( 48.802, -58.7343, 12.0013, 1.18 ) }
    dend_31 { pt3dadd( 49.9027, -59.6744, 12.8836, 0.22 ) }
    dend_31 { pt3dadd( 50.3889, -60.0824, 13.2216, 0.22 ) }
    dend_31 { pt3dadd( 51.171, -60.7276, 13.6657, 0.88 ) }
    dend_31 { pt3dadd( 52.2106, -61.5815, 14.1669, 0.15 ) }
    dend_31 { pt3dadd( 52.6882, -61.9672, 14.3605, 0.96 ) }
    dend_31 { pt3dadd( 53.2409, -62.414, 14.5472, 1.25 ) }
    dend_31 { pt3dadd( 54.3804, -63.3438, 14.8047, 0.15 ) }
    dend_31 { pt3dadd( 55.6655, -64.3973, 14.9908, 0.15 ) }
    dend_31 { pt3dadd( 56.2233, -64.8635, 15.0394, 0.15 ) }
    dend_31 { pt3dadd( 57.1695, -65.683, 15.084, 0.15 ) }
    dend_31 { pt3dadd( 57.6424, -66.1037, 15.112, 0.96 ) }
    dend_31 { pt3dadd( 58.4929, -66.8885, 15.1862, 1.4 ) }
    dend_31 { pt3dadd( 58.8322, -67.2146, 15.2195, 1.33 ) }
    dend_31 { pt3dadd( 59.7162, -68.0823, 15.3767, 0.22 ) }
    dend_31 { pt3dadd( 60.2139, -68.561, 15.4829, 0.29 ) }
    dend_31 { pt3dadd( 60.9942, -69.3, 15.6754, 0.59 ) }
    dend_31 { pt3dadd( 61.6951, -69.9366, 15.861, 0.59 ) }
    dend_31 { pt3dadd( 62.3837, -70.5139, 16.0647, 1.7 ) }
    dend_31 { pt3dadd( 63.0446, -71.0193, 16.2632, 0.81 ) }
    dend_31 { pt3dadd( 64.2501, -71.8506, 16.6311, 0.15 ) }
    dend_31 { pt3dadd( 64.7625, -72.1746, 16.7971, 0.44 ) }
    dend_31 { pt3dadd( 65.4089, -72.5521, 16.9934, 0.74 ) }
    dend_31 { pt3dadd( 66.6598, -73.2405, 17.4003, 0.22 ) }
    dend_31 { pt3dadd( 67.383, -73.6194, 17.6442, 0.96 ) }
    dend_31 { pt3dadd( 68.117, -73.9849, 17.8933, 1.25 ) }
    dend_31 { pt3dadd( 69.0529, -74.4448, 18.2514, 0.29 ) }
    dend_31 { pt3dadd( 70.2669, -75.0356, 18.7221, 0.07 ) }
    dend_31 { pt3dadd( 70.8629, -75.3226, 18.9507, 0.29 ) }
    dend_31 { pt3dadd( 71.7059, -75.7338, 19.2526, 0.74 ) }
    dend_31 { pt3dadd( 73.0592, -76.4093, 19.7494, 0.15 ) }
    dend_31 { pt3dadd( 73.9981, -76.893, 20.143, 0.15 ) }
    dend_31 { pt3dadd( 74.4407, -77.1347, 20.3677, 0.15 ) }
    dend_31 { pt3dadd( 74.8138, -77.3559, 20.6116, 0.74 ) }
    dend_31 { pt3dadd( 75.047, -77.5006, 20.7825, 0.96 ) }
    dend_31 { pt3dadd( 76.066, -78.1579, 21.6033, 0.15 ) }
    dend_31 { pt3dadd( 76.6744, -78.5634, 22.1086, 0.15 ) }
    dend_31 { pt3dadd( 77.4276, -79.0925, 22.7341, 0.88 ) }
    dend_31 { pt3dadd( 78.4303, -79.8422, 23.6454, 0.15 ) }
    dend_31 { pt3dadd( 78.6805, -80.0403, 23.8981, 0.15 ) }
    dend_31 { pt3dadd( 79.0795, -80.3728, 24.2938, 0.29 ) }
    dend_31 { pt3dadd( 79.3684, -80.6281, 24.583, 0.29 ) }
    dend_31 { pt3dadd( 80.0009, -81.1907, 25.2599, 0.15 ) }
    dend_31 { pt3dadd( 80.645, -81.7644, 26.0464, 0.15 ) }
    dend_31 { pt3dadd( 81.1919, -82.2264, 26.7854, 0.15 ) }
    dend_31 { pt3dadd( 81.7237, -82.6499, 27.5843, 1.03 ) }
    dend_31 { pt3dadd( 82.556, -83.2541, 28.9914, 0.15 ) }
    dend_31 { pt3dadd( 83.181, -83.6565, 30.1193, 0.15 ) }
    dend_31 { pt3dadd( 83.631, -83.9003, 30.9263, 0.15 ) }
    dend_31 { pt3dadd( 84.2363, -84.1907, 32.0253, 0.15 ) }
    dend_31 { pt3dadd( 84.843, -84.4573, 33.186, 0.15 ) }
    dend_31 { pt3dadd( 85.4879, -84.7096, 34.5089, 0.15 ) }
    dend_31 { pt3dadd( 86.0218, -84.895, 35.6481, 0.15 ) }
    dend_31 { pt3dadd( 86.5302, -85.0678, 36.7339, 0.15 ) }
    dend_31 { pt3dadd( 87.1545, -85.2761, 38.0758, 0.15 ) }
    dend_31 { pt3dadd( 87.8396, -85.5094, 39.593, 0.15 ) }
    dend_31 { pt3dadd( 88.225, -85.6377, 40.441, 0.15 ) }
    dend_31 { pt3dadd( 89.1623, -85.9519, 42.5286, 0.15 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 73/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.36273, -28.5278, -0.777362, 0.96 ) }
    dend_26 { pt3dadd( -2.32101, -29.7406, -0.90128, 0.96 ) }
    dend_26 { pt3dadd( -3.15671, -31.0503, -1.10183, 0.74 ) }
    dend_26 { pt3dadd( -3.86799, -32.4641, -1.38921, 0.74 ) }
    dend_26 { pt3dadd( -4.48674, -33.9516, -1.73744, 1.03 ) }
    dend_26 { pt3dadd( -4.86003, -34.9978, -2.01096, 1.18 ) }
    dend_26 { pt3dadd( -5.39514, -36.6121, -2.46236, 0.81 ) }
    dend_26 { pt3dadd( -5.71929, -37.8959, -2.85153, 0.81 ) }
    dend_26 { pt3dadd( -6.03124, -39.2578, -3.27284, 0.88 ) }
    dend_26 { pt3dadd( -6.20104, -39.9712, -3.48834, 1.25 ) }
    dend_26 { pt3dadd( -6.53912, -41.2667, -3.84381, 1.25 ) }
    dend_26 { pt3dadd( -7.14376, -43.3839, -4.37732, 0.96 ) }
    dend_26 { pt3dadd( -7.65006, -45.098, -4.71624, 0.74 ) }
    dend_26 { pt3dadd( -8.06049, -46.5935, -4.91621, 0.74 ) }
    dend_26 { pt3dadd( -8.38826, -48.0034, -5.05631, 0.96 ) }
    dend_26 { pt3dadd( -8.60676, -49.3102, -5.15161, 0.74 ) }
    dend_26 { pt3dadd( -8.72963, -50.8237, -5.22133, 0.74 ) }
    dend_26 { pt3dadd( -8.71078, -53.0252, -5.2424, 0.96 ) }
    dend_26 { pt3dadd( -8.58092, -54.581, -5.19902, 0.74 ) }
    dend_26 { pt3dadd( -8.35318, -56.0576, -5.12059, 0.81 ) }
    dend_26 { pt3dadd( -7.98941, -57.7784, -4.97046, 1.18 ) }
    dend_26 { pt3dadd( -7.53091, -59.5461, -4.7622, 1.18 ) }
    dend_26 { pt3dadd( -6.78957, -62.0628, -4.40977, 0.96 ) }
    dend_26 { pt3dadd( -6.15248, -64.1512, -4.07876, 0.96 ) }
    dend_26 { pt3dadd( -5.68466, -65.7532, -3.7773, 1.03 ) }
    dend_26 { pt3dadd( -5.20884, -67.4922, -3.38432, 0.74 ) }
    dend_26 { pt3dadd( -4.83445, -69.041, -3.00275, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_26 { pt3dadd( -4.57446, -70.5871, -2.58038, 1.03 ) }
    dend_26 { pt3dadd( -4.49297, -72.2078, -2.11391, 0.88 ) }
    dend_26 { pt3dadd( -4.66344, -73.937, -1.60849, 0.66 ) }
    dend_26 { pt3dadd( -4.88313, -74.953, -1.31415, 0.59 ) }
    dend_26 { pt3dadd( -5.17277, -75.9459, -1.04165, 0.81 ) }
    dend_26 { pt3dadd( -5.76931, -77.7352, -0.584538, 0.59 ) }
    dend_26 { pt3dadd( -6.2563, -79.1639, -0.276244, 0.81 ) }
    dend_26 { pt3dadd( -6.60983, -80.295, -0.118119, 0.81 ) }
    dend_26 { pt3dadd( -6.9754, -81.6648, -0.0553931, 0.81 ) }
    dend_26 { pt3dadd( -7.25823, -82.9096, -0.0873925, 1.25 ) }
    dend_26 { pt3dadd( -7.53946, -84.3113, -0.213737, 1.25 ) }
    dend_26 { pt3dadd( -7.9373, -86.2238, -0.552405, 0.66 ) }
    dend_26 { pt3dadd( -8.26411, -87.6322, -0.914316, 0.66 ) }
    dend_26 { pt3dadd( -8.58762, -88.8365, -1.32901, 1.03 ) }
    dend_26 { pt3dadd( -8.94363, -90.0798, -1.88695, 1.33 ) }
    dend_26 { pt3dadd( -9.17286, -91.0626, -2.42671, 0.88 ) }
    dend_26 { pt3dadd( -9.30715, -92.2325, -3.17884, 0.59 ) }
    dend_26 { pt3dadd( -9.2389, -92.9951, -3.71708, 0.59 ) }
    dend_26 { pt3dadd( -8.94518, -93.7933, -4.23463, 0.59 ) }
    dend_26 { pt3dadd( -8.33944, -94.7903, -4.82465, 0.59 ) }
    dend_26 { pt3dadd( -7.3604, -96.1696, -5.55338, 0.22 ) }
    dend_26 { pt3dadd( -6.84356, -96.913, -5.90833, 0.74 ) }
    dend_26 { pt3dadd( -6.3574, -97.6895, -6.26011, 1.11 ) }
    dend_26 { pt3dadd( -5.6719, -99.0851, -6.89501, 0.52 ) }
    dend_26 { pt3dadd( -5.34201, -100.11, -7.37308, 0.66 ) }
    dend_26 { pt3dadd( -5.1289, -101.284, -7.92061, 0.96 ) }
    dend_26 { pt3dadd( -4.99718, -102.74, -8.55148, 0.81 ) }
    dend_26 { pt3dadd( -4.92361, -103.905, -8.998, 0.59 ) }
    dend_26 { pt3dadd( -4.86203, -105.105, -9.40114, 0.59 ) }
    dend_26 { pt3dadd( -4.80056, -106.498, -9.78243, 0.44 ) }
    dend_26 { pt3dadd( -4.75468, -107.984, -10.0112, 0.74 ) }
    dend_26 { pt3dadd( -4.7646, -109.7, -10.1156, 0.74 ) }
    dend_26 { pt3dadd( -4.85136, -111.041, -10.1185, 0.81 ) }
    dend_26 { pt3dadd( -5.0141, -112.181, -10.0943, 1.03 ) }
    dend_26 { pt3dadd( -5.34973, -113.576, -10.0799, 1.03 ) }
    dend_26 { pt3dadd( -6.01393, -115.551, -10.1544, 0.59 ) }
    dend_26 { pt3dadd( -6.61307, -117.045, -10.2887, 0.44 ) }
    dend_26 { pt3dadd( -7.20099, -118.389, -10.4395, 0.52 ) }
    dend_26 { pt3dadd( -7.77218, -119.651, -10.5712, 1.03 ) }
    dend_26 { pt3dadd( -8.41281, -121.1, -10.6624, 0.81 ) }
    dend_26 { pt3dadd( -8.97209, -122.502, -10.6457, 0.29 ) }
    dend_26 { pt3dadd( -9.4446, -124.005, -10.4806, 0.29 ) }
    dend_26 { pt3dadd( -9.67751, -125.093, -10.2238, 0.44 ) }
    dend_26 { pt3dadd( -9.82724, -126.153, -9.85343, 0.96 ) }
    dend_26 { pt3dadd( -9.9671, -127.579, -9.26149, 1.11 ) }
    dend_26 { pt3dadd( -10.0896, -129.247, -8.56787, 0.59 ) }
    dend_26 { pt3dadd( -10.1881, -130.663, -8.01641, 0.59 ) }
    dend_26 { pt3dadd( -10.3337, -132.576, -7.39184, 0.52 ) }
    dend_26 { pt3dadd( -10.4056, -133.615, -7.16154, 0.52 ) }
    dend_26 { pt3dadd( -10.5014, -135.327, -6.94203, 0.81 ) }
    dend_26 { pt3dadd( -10.5984, -137.078, -6.91561, 0.88 ) }
    dend_26 { pt3dadd( -10.6647, -138.09, -6.99865, 0.66 ) }
    dend_26 { pt3dadd( -10.7642, -139.346, -7.24021, 0.52 ) }
    dend_26 { pt3dadd( -10.8657, -140.651, -7.63093, 0.81 ) }
    dend_26 { pt3dadd( -10.9037, -141.492, -7.94381, 0.52 ) }
    dend_26 { pt3dadd( -10.8868, -142.703, -8.45763, 0.37 ) }
    dend_26 { pt3dadd( -10.8164, -143.656, -8.8816, 0.96 ) }
    dend_26 { pt3dadd( -10.6132, -145.198, -9.54501, 0.74 ) }
    dend_26 { pt3dadd( -10.4128, -146.281, -9.97763, 0.96 ) }
    dend_26 { pt3dadd( -10.2179, -147.158, -10.2398, 0.96 ) }
    dend_26 { pt3dadd( -9.91025, -148.493, -10.438, 0.37 ) }
    dend_26 { pt3dadd( -9.7019, -149.5, -10.3338, 0.29 ) }
    dend_26 { pt3dadd( -9.4594, -151.008, -9.79062, 0.59 ) }
    dend_26 { pt3dadd( -9.38492, -151.619, -9.42417, 0.59 ) }
    dend_26 { pt3dadd( -9.26857, -152.796, -8.5824, 0.59 ) }
    dend_26 { pt3dadd( -9.16422, -153.976, -7.67923, 0.96 ) }
    dend_26 { pt3dadd( -9.0486, -155.356, -6.60163, 0.52 ) }
    dend_26 { pt3dadd( -8.98129, -156.271, -5.90919, 0.44 ) }
    dend_26 { pt3dadd( -8.9308, -157.223, -5.22609, 0.44 ) }
    dend_26 { pt3dadd( -8.90114, -158.18, -4.5336, 0.88 ) }
    dend_26 { pt3dadd( -8.89685, -159.173, -3.84403, 0.44 ) }
    dend_26 { pt3dadd( -8.93209, -160.19, -3.18119, 0.37 ) }
    dend_26 { pt3dadd( -9.04507, -161.301, -2.51644, 0.74 ) }
    dend_26 { pt3dadd( -9.27004, -162.52, -1.85573, 0.22 ) }
    dend_26 { pt3dadd( -9.5764, -163.701, -1.24776, 0.29 ) }
    dend_26 { pt3dadd( -9.95897, -164.883, -0.617183, 0.59 ) }
    dend_26 { pt3dadd( -10.4758, -166.3, 0.147249, 1.18 ) }
    dend_26 { pt3dadd( -10.943, -167.565, 0.809485, 0.66 ) }
    dend_26 { pt3dadd( -11.2957, -168.752, 1.40871, 0.37 ) }
    dend_26 { pt3dadd( -11.487, -169.775, 1.93615, 0.29 ) }
    dend_26 { pt3dadd( -11.5221, -170.539, 2.36011, 0.29 ) }
    dend_26 { pt3dadd( -11.4683, -171.085, 2.69251, 0.74 ) }
    dend_26 { pt3dadd( -11.3426, -171.644, 3.07203, 1.11 ) }
    dend_26 { pt3dadd( -10.8774, -173.23, 4.10565, 0.44 ) }
    dend_26 { pt3dadd( -10.5979, -174.223, 4.66154, 0.44 ) }
    dend_26 { pt3dadd( -10.4551, -175.007, 4.97627, 0.44 ) }
    dend_26 { pt3dadd( -10.3501, -176.131, 5.33333, 0.29 ) }
    dend_26 { pt3dadd( -10.3442, -177.27, 5.62241, 0.29 ) }
    dend_26 { pt3dadd( -10.4423, -178.746, 5.92807, 0.59 ) }
    dend_26 { pt3dadd( -10.6173, -180.256, 6.1767, 1.18 ) }
    dend_26 { pt3dadd( -10.8554, -182.4, 6.50003, 1.4 ) }
    dend_26 { pt3dadd( -10.9575, -183.519, 6.67159, 1.18 ) }
    dend_26 { pt3dadd( -11.0268, -185.044, 6.86342, 0.52 ) }
    dend_26 { pt3dadd( -11.0368, -186.145, 6.93212, 0.52 ) }
    dend_26 { pt3dadd( -11.0178, -187.486, 6.92853, 0.96 ) }
    dend_26 { pt3dadd( -10.9364, -189.037, 6.7706, 0.74 ) }
    dend_26 { pt3dadd( -10.8486, -189.902, 6.58409, 0.74 ) }
    dend_26 { pt3dadd( -10.6675, -191.311, 6.09135, 0.37 ) }
    dend_26 { pt3dadd( -10.4647, -192.56, 5.49191, 0.44 ) }
    dend_26 { pt3dadd( -10.3334, -193.303, 5.05948, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -10.1776, -194.147, 4.52009, 0.44 ) }
    dend_26 { pt3dadd( -10.0125, -195.068, 3.94463, 0.29 ) }
    dend_26 { pt3dadd( -9.88246, -195.85, 3.58008, 0.29 ) }
    dend_26 { pt3dadd( -9.78361, -196.594, 3.4253, 0.29 ) }
    dend_26 { pt3dadd( -9.67972, -197.689, 3.51397, 0.88 ) }
    dend_26 { pt3dadd( -9.60387, -198.838, 3.85529, 0.81 ) }
    dend_26 { pt3dadd( -9.5479, -199.709, 4.22721, 0.22 ) }
    dend_26 { pt3dadd( -9.39607, -201.236, 4.93375, 0.22 ) }
    dend_26 { pt3dadd( -9.20099, -202.385, 5.43438, 0.44 ) }
    dend_26 { pt3dadd( -8.82968, -203.847, 5.97174, 1.11 ) }
    dend_26 { pt3dadd( -8.41988, -204.999, 6.28997, 0.52 ) }
    dend_26 { pt3dadd( -7.74104, -206.411, 6.47188, 0.22 ) }
    dend_26 { pt3dadd( -6.91274, -207.792, 6.38346, 0.22 ) }
    dend_26 { pt3dadd( -5.85384, -209.343, 6.03182, 0.22 ) }
    dend_26 { pt3dadd( -5.1082, -210.399, 5.69944, 0.37 ) }
    dend_26 { pt3dadd( -4.71693, -210.985, 5.49997, 0.52 ) }
    dend_26 { pt3dadd( -4.24149, -211.829, 5.25811, 0.52 ) }
    dend_26 { pt3dadd( -3.72636, -213.134, 5.03302, 1.11 ) }
    dend_26 { pt3dadd( -3.48179, -214.259, 4.98849, 1.11 ) }
    dend_26 { pt3dadd( -3.30941, -215.994, 5.08239, 0.52 ) }
    dend_26 { pt3dadd( -3.24637, -217.573, 5.26151, 0.29 ) }
    dend_26 { pt3dadd( -3.23093, -219.124, 5.49424, 0.52 ) }
    dend_26 { pt3dadd( -3.24092, -220.565, 5.71619, 0.52 ) }
    dend_26 { pt3dadd( -3.24253, -221.64, 5.83344, 0.22 ) }
    dend_26 { pt3dadd( -3.2387, -222.314, 5.84999, 0.22 ) }
    dend_26 { pt3dadd( -3.23536, -223.022, 5.81253, 0.59 ) }
    dend_26 { pt3dadd( -3.24899, -223.973, 5.71734, 1.11 ) }
    dend_26 { pt3dadd( -3.31968, -225.557, 5.51297, 1.11 ) }
    dend_26 { pt3dadd( -3.47051, -227.394, 5.29226, 0.44 ) }
    dend_26 { pt3dadd( -3.61559, -228.6, 5.1769, 0.44 ) }
    dend_26 { pt3dadd( -3.7884, -229.857, 5.11249, 0.44 ) }
    dend_26 { pt3dadd( -4.05666, -231.472, 5.10651, 0.29 ) }
    dend_26 { pt3dadd( -4.24507, -232.311, 5.16627, 0.29 ) }
    dend_26 { pt3dadd( -4.49148, -233.249, 5.30758, 0.88 ) }
    dend_26 { pt3dadd( -4.72721, -234.126, 5.46293, 0.96 ) }
    dend_26 { pt3dadd( -5.07151, -235.564, 5.69435, 0.37 ) }
    dend_26 { pt3dadd( -5.30461, -236.71, 5.85764, 0.37 ) }
    dend_26 { pt3dadd( -5.66975, -238.452, 6.14199, 0.37 ) }
    dend_26 { pt3dadd( -5.79718, -238.96, 6.24213, 0.37 ) }
    dend_26 { pt3dadd( -6.0379, -239.832, 6.43286, 1.03 ) }
    dend_26 { pt3dadd( -6.21012, -240.42, 6.56572, 1.03 ) }
    dend_26 { pt3dadd( -6.52411, -241.516, 6.80899, 0.52 ) }
    dend_26 { pt3dadd( -6.91629, -243.353, 7.21536, 0.22 ) }
    dend_26 { pt3dadd( -7.03087, -244.232, 7.42365, 0.22 ) }
    dend_26 { pt3dadd( -7.14626, -245.222, 7.72071, 0.29 ) }
    dend_26 { pt3dadd( -7.24245, -245.994, 8.00563, 0.59 ) }
    dend_26 { pt3dadd( -7.33137, -246.64, 8.26572, 0.88 ) }
    dend_26 { pt3dadd( -7.45502, -247.4, 8.56911, 0.96 ) }
    dend_26 { pt3dadd( -7.64804, -248.55, 9.03316, 0.37 ) }
    dend_26 { pt3dadd( -7.88425, -249.925, 9.60475, 0.22 ) }
    dend_26 { pt3dadd( -7.97996, -250.603, 9.88181, 0.22 ) }
    dend_26 { pt3dadd( -8.04685, -251.364, 10.1765, 0.96 ) }
    dend_26 { pt3dadd( -8.09832, -252.693, 10.6496, 0.44 ) }
    dend_26 { pt3dadd( -8.06183, -254.03, 11.0499, 0.22 ) }
    dend_26 { pt3dadd( -7.96904, -254.886, 11.2314, 0.22 ) }
    dend_26 { pt3dadd( -7.78823, -256.009, 11.4032, 0.22 ) }
    dend_26 { pt3dadd( -7.71765, -256.435, 11.4619, 0.22 ) }
    dend_26 { pt3dadd( -7.60397, -257.232, 11.5645, 0.74 ) }
    dend_26 { pt3dadd( -7.53327, -258.185, 11.6732, 0.88 ) }
    dend_26 { pt3dadd( -7.60241, -259.433, 11.7742, 0.22 ) }
    dend_26 { pt3dadd( -7.76894, -260.295, 11.8271, 0.22 ) }
    dend_26 { pt3dadd( -7.97569, -260.972, 11.8804, 0.22 ) }
    dend_26 { pt3dadd( -8.26423, -261.729, 11.9679, 0.22 ) }
    dend_26 { pt3dadd( -8.5885, -262.46, 12.0746, 0.66 ) }
    dend_26 { pt3dadd( -8.99948, -263.316, 12.241, 0.74 ) }
    dend_26 { pt3dadd( -9.56723, -264.451, 12.493, 0.44 ) }
    dend_26 { pt3dadd( -10.1297, -265.575, 12.7261, 0.44 ) }
    dend_26 { pt3dadd( -10.8519, -266.977, 12.9646, 0.74 ) }
    dend_26 { pt3dadd( -11.5717, -268.309, 13.1475, 0.96 ) }
    dend_26 { pt3dadd( -12.2362, -269.495, 13.2608, 0.59 ) }
    dend_26 { pt3dadd( -13.0126, -270.835, 13.3216, 0.22 ) }
    dend_26 { pt3dadd( -13.6027, -271.846, 13.3909, 0.22 ) }
    dend_26 { pt3dadd( -14.2177, -272.903, 13.502, 0.22 ) }
    dend_26 { pt3dadd( -14.6431, -273.634, 13.6222, 0.22 ) }
    dend_26 { pt3dadd( -14.8285, -273.943, 13.7016, 0.22 ) }
    dend_26 { pt3dadd( -15.3195, -274.751, 14.0065, 0.88 ) }
    dend_26 { pt3dadd( -16.5795, -276.895, 15.0889, 0.22 ) }
    dend_26 { pt3dadd( -17.0272, -277.678, 15.5402, 0.22 ) }
    dend_26 { pt3dadd( -17.3228, -278.213, 15.8595, 0.74 ) }
    dend_26 { pt3dadd( -17.6743, -278.897, 16.2545, 0.96 ) }
    dend_26 { pt3dadd( -18.4159, -280.494, 17.1305, 0.37 ) }
    dend_26 { pt3dadd( -18.9049, -281.705, 17.7382, 0.22 ) }
    dend_26 { pt3dadd( -19.2043, -282.585, 18.0856, 0.88 ) }
    dend_26 { pt3dadd( -19.3366, -283.081, 18.2774, 0.88 ) }
    dend_26 { pt3dadd( -19.5505, -284.256, 18.7307, 0.22 ) }
    dend_26 { pt3dadd( -19.6055, -284.787, 18.9218, 0.22 ) }
    dend_26 { pt3dadd( -19.6317, -285.316, 19.0871, 0.22 ) }
    dend_26 { pt3dadd( -19.6656, -286.396, 19.374, 0.81 ) }
    dend_26 { pt3dadd( -19.6679, -288.052, 19.7554, 0.29 ) }
    dend_26 { pt3dadd( -19.6318, -289.427, 20.0687, 0.44 ) }
    dend_26 { pt3dadd( -19.5712, -290.553, 20.3061, 0.88 ) }
    dend_26 { pt3dadd( -19.4912, -291.451, 20.5041, 0.88 ) }
    dend_26 { pt3dadd( -19.3367, -292.548, 20.7577, 0.29 ) }
    dend_26 { pt3dadd( -19.1275, -293.491, 20.9945, 0.22 ) }
    dend_26 { pt3dadd( -18.8341, -294.441, 21.2517, 0.22 ) }
    dend_26 { pt3dadd( -18.5409, -295.127, 21.5041, 0.22 ) }
    dend_26 { pt3dadd( -18.168, -295.874, 21.8539, 0.22 ) }
    dend_26 { pt3dadd( -17.9033, -296.381, 22.135, 0.22 ) }
    dend_26 { pt3dadd( -17.5649, -297.122, 22.575, 0.74 ) }
    dend_26 { pt3dadd( -17.473, -297.426, 22.7584, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_26 { pt3dadd( -17.1776, -299.079, 23.6677, 0.22 ) }
    dend_26 { pt3dadd( -17.1365, -299.818, 24.0457, 0.22 ) }
    dend_26 { pt3dadd( -17.1813, -300.428, 24.3198, 0.22 ) }
    dend_26 { pt3dadd( -17.3645, -301.356, 24.6911, 1.11 ) }
    dend_26 { pt3dadd( -17.778, -302.565, 25.0843, 0.29 ) }
    dend_26 { pt3dadd( -18.1985, -303.498, 25.3049, 0.22 ) }
    dend_26 { pt3dadd( -18.7068, -304.458, 25.4178, 0.22 ) }
    dend_26 { pt3dadd( -19.1564, -305.337, 25.486, 0.44 ) }
    dend_26 { pt3dadd( -19.5561, -306.184, 25.5803, 0.88 ) }
    dend_26 { pt3dadd( -20.1233, -307.545, 25.8291, 0.96 ) }
    dend_26 { pt3dadd( -20.5617, -308.835, 26.1958, 0.29 ) }
    dend_26 { pt3dadd( -20.8099, -309.734, 26.5554, 0.66 ) }
    dend_26 { pt3dadd( -21.0499, -311.017, 27.1729, 0.74 ) }
    dend_26 { pt3dadd( -21.205, -312.591, 28.0148, 0.29 ) }
    dend_26 { pt3dadd( -21.2126, -313.872, 28.7167, 0.66 ) }
    dend_26 { pt3dadd( -21.0703, -315.424, 29.6025, 0.22 ) }
    dend_26 { pt3dadd( -20.9854, -316.035, 29.9728, 0.22 ) }
    dend_26 { pt3dadd( -20.8753, -316.784, 30.4399, 0.81 ) }
    dend_26 { pt3dadd( -20.7957, -317.352, 30.7602, 0.96 ) }
    dend_26 { pt3dadd( -20.6384, -318.496, 31.3209, 0.37 ) }
    dend_26 { pt3dadd( -20.5039, -319.675, 31.8461, 0.22 ) }
    dend_26 { pt3dadd( -20.4625, -320.543, 32.2268, 0.22 ) }
    dend_26 { pt3dadd( -20.4618, -321.14, 32.5133, 0.22 ) }
    dend_26 { pt3dadd( -20.4674, -321.521, 32.7298, 0.66 ) }
    dend_26 { pt3dadd( -20.4798, -322.072, 33.0903, 1.11 ) }
    dend_26 { pt3dadd( -20.5062, -322.977, 33.7086, 0.88 ) }
    dend_26 { pt3dadd( -20.5671, -324.284, 34.4639, 0.22 ) }
    dend_26 { pt3dadd( -20.6348, -325.507, 35.0415, 0.88 ) }
    dend_26 { pt3dadd( -20.7513, -326.956, 35.6246, 0.22 ) }
    dend_26 { pt3dadd( -20.8443, -327.827, 35.9175, 0.22 ) }
    dend_26 { pt3dadd( -20.9661, -328.671, 36.1655, 0.74 ) }
    dend_26 { pt3dadd( -21.2647, -330.258, 36.663, 0.15 ) }
    dend_26 { pt3dadd( -21.528, -331.305, 36.98, 0.15 ) }
    dend_26 { pt3dadd( -21.716, -331.878, 37.1489, 0.66 ) }
    dend_26 { pt3dadd( -22.0166, -332.68, 37.3629, 0.81 ) }
    dend_26 { pt3dadd( -22.533, -334.003, 37.7508, 0.22 ) }
    dend_26 { pt3dadd( -23.0455, -335.294, 38.3099, 0.22 ) }
    dend_26 { pt3dadd( -23.2523, -335.846, 38.6724, 0.59 ) }
    dend_26 { pt3dadd( -23.5714, -336.675, 39.3566, 1.03 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 39/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.50797, 1.48845, -10.46, 1.99 ) }
    dend_22 { pt3dadd( -1.36599, 2.47084, -11.2959, 1.99 ) }
    dend_22 { pt3dadd( -1.26972, 3.43927, -12.0675, 1.77 ) }
    dend_22 { pt3dadd( -1.25675, 4.16225, -12.6106, 1.84 ) }
    dend_22 { pt3dadd( -1.28212, 4.84761, -13.0977, 1.4 ) }
    dend_22 { pt3dadd( -1.35074, 5.5687, -13.5848, 1.25 ) }
    dend_22 { pt3dadd( -1.45966, 6.24928, -14.0216, 1.4 ) }
    dend_22 { pt3dadd( -1.60269, 6.82603, -14.3531, 1.4 ) }
    dend_22 { pt3dadd( -1.88601, 7.73942, -14.7889, 1.03 ) }
    dend_22 { pt3dadd( -2.16748, 8.57802, -15.1184, 1.03 ) }
    dend_22 { pt3dadd( -2.51109, 9.51224, -15.452, 1.11 ) }
    dend_22 { pt3dadd( -2.89472, 10.5028, -15.7798, 0.96 ) }
    dend_22 { pt3dadd( -3.30487, 11.5827, -16.1146, 0.96 ) }
    dend_22 { pt3dadd( -3.68207, 12.6292, -16.4296, 0.88 ) }
    dend_22 { pt3dadd( -3.90392, 13.3046, -16.6021, 1.18 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 54/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.50797, 1.48845, -10.46, 3.32 ) }
    dend_1 { pt3dadd( -3.72271, 1.23644, -10.2058, 3.32 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 56/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.44158, 39.2021, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 3.27908, 54.1787, 0.0, 0.15 ) }
    axon_1 { pt3dadd( 4.11658, 69.1553, 0.0, 0.15 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 59/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.00153, 31.4856, 11.8113, 1.7 ) }
    dend_48 { pt3dadd( -3.19786, 32.2939, 12.1962, 1.7 ) }
    dend_48 { pt3dadd( -3.45199, 33.3547, 12.6984, 1.03 ) }
    dend_48 { pt3dadd( -3.76379, 34.6562, 13.3146, 0.74 ) }
    dend_48 { pt3dadd( -3.98791, 35.5918, 13.7576, 0.74 ) }
    dend_48 { pt3dadd( -4.20523, 36.499, 14.187, 0.74 ) }
    dend_48 { pt3dadd( -4.38101, 37.2327, 14.5344, 1.03 ) }
    dend_48 { pt3dadd( -4.58211, 38.2183, 15.0656, 1.84 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 67/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.00153, 31.4856, 11.8113, 0.29 ) }
    dend_47 { pt3dadd( -2.6941, 32.1119, 12.639, 0.29 ) }
    dend_47 { pt3dadd( -2.09469, 33.2469, 13.9965, 0.22 ) }
    dend_47 { pt3dadd( -1.63178, 34.1223, 14.8485, 0.22 ) }
    dend_47 { pt3dadd( -1.30261, 34.7643, 15.4333, 0.37 ) }
    dend_47 { pt3dadd( -0.893935, 35.607, 16.1684, 0.37 ) }
    dend_47 { pt3dadd( -0.467101, 36.5188, 16.9595, 0.37 ) }
    dend_47 { pt3dadd( -0.115654, 37.309, 17.6053, 0.37 ) }
    dend_47 { pt3dadd( 0.405673, 38.5099, 18.4767, 0.22 ) }
    dend_47 { pt3dadd( 0.888937, 39.5552, 19.2002, 0.22 ) }
    dend_47 { pt3dadd( 1.39255, 40.6476, 19.9506, 0.22 ) }
    dend_47 { pt3dadd( 1.6837, 41.2598, 20.379, 0.22 ) }
    dend_47 { pt3dadd( 2.03597, 41.986, 20.9389, 0.22 ) }
    dend_47 { pt3dadd( 2.26369, 42.421, 21.3338, 0.37 ) }
    dend_47 { pt3dadd( 2.90041, 43.5181, 22.4399, 0.37 ) }
    dend_47 { pt3dadd( 3.39453, 44.2951, 23.199, 0.22 ) }
    dend_47 { pt3dadd( 4.10305, 45.3416, 24.2458, 0.44 ) }
    dend_47 { pt3dadd( 4.62963, 46.1166, 25.0517, 0.81 ) }
    dend_47 { pt3dadd( 5.15325, 46.8976, 25.8931, 0.81 ) }
    dend_47 { pt3dadd( 5.80198, 47.8694, 26.9713, 0.29 ) }
    dend_47 { pt3dadd( 6.41895, 48.8134, 28.0167, 0.22 ) }
    dend_47 { pt3dadd( 7.02462, 49.7429, 29.0291, 0.22 ) }
    dend_47 { pt3dadd( 7.58657, 50.6446, 29.9275, 0.22 ) }
    dend_47 { pt3dadd( 8.06446, 51.4406, 30.6697, 0.22 ) }
    dend_47 { pt3dadd( 8.54621, 52.2373, 31.3937, 0.22 ) }
    dend_47 { pt3dadd( 9.10539, 53.1071, 32.237, 0.22 ) }
    dend_47 { pt3dadd( 9.38254, 53.5263, 32.6786, 0.66 ) }
    dend_47 { pt3dadd( 9.71122, 54.0026, 33.1704, 1.55 ) }
    dend_47 { pt3dadd( 10.5678, 55.1722, 34.3875, 2.06 ) }
    dend_47 { pt3dadd( 11.8172, 56.8108, 36.0514, 0.22 ) }
    dend_47 { pt3dadd( 12.5349, 57.7464, 36.9959, 0.22 ) }
    dend_47 { pt3dadd( 13.1975, 58.5964, 37.8772, 0.22 ) }
    dend_47 { pt3dadd( 13.7264, 59.2965, 38.6019, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_47 { pt3dadd( 14.2416, 60.0217, 39.3705, 0.44 ) }
    dend_47 { pt3dadd( 14.811, 60.9219, 40.2817, 0.22 ) }
    dend_47 { pt3dadd( 15.4169, 62.1477, 41.369, 0.22 ) }
    dend_47 { pt3dadd( 15.9474, 63.501, 42.3918, 0.44 ) }
    dend_47 { pt3dadd( 16.3782, 64.8275, 43.331, 0.15 ) }
    dend_47 { pt3dadd( 16.7199, 66.2128, 44.3225, 0.15 ) }
    dend_47 { pt3dadd( 16.8485, 66.9189, 44.8162, 0.15 ) }
    dend_47 { pt3dadd( 17.0492, 68.338, 45.7753, 0.15 ) }
    dend_47 { pt3dadd( 17.2146, 69.4849, 46.4713, 0.37 ) }
    dend_47 { pt3dadd( 17.3915, 70.5299, 47.0819, 0.59 ) }
    dend_47 { pt3dadd( 17.6943, 71.8101, 47.8307, 1.25 ) }
    dend_47 { pt3dadd( 18.07, 72.9747, 48.5417, 2.21 ) }
    dend_47 { pt3dadd( 18.3963, 73.7443, 49.0656, 2.21 ) }
    dend_47 { pt3dadd( 19.2007, 75.2466, 50.1493, 0.52 ) }
    dend_47 { pt3dadd( 19.9947, 76.497, 51.0806, 0.15 ) }
    dend_47 { pt3dadd( 20.6871, 77.4621, 51.7531, 0.15 ) }
    dend_47 { pt3dadd( 21.3226, 78.2486, 52.2659, 0.29 ) }
    dend_47 { pt3dadd( 21.8711, 78.8702, 52.6464, 0.29 ) }
    dend_47 { pt3dadd( 22.5714, 79.6643, 53.0779, 0.07 ) }
    dend_47 { pt3dadd( 23.3249, 80.5282, 53.4862, 0.07 ) }
    dend_47 { pt3dadd( 23.9002, 81.2055, 53.7761, 0.07 ) }
    dend_47 { pt3dadd( 24.3814, 81.7997, 54.0098, 0.88 ) }
    dend_47 { pt3dadd( 24.9744, 82.5691, 54.2929, 1.62 ) }
    dend_47 { pt3dadd( 26.5551, 84.7182, 55.0146, 0.15 ) }
    dend_47 { pt3dadd( 27.3394, 85.7873, 55.3828, 0.15 ) }
    dend_47 { pt3dadd( 28.1187, 86.8529, 55.7547, 0.15 ) }
    dend_47 { pt3dadd( 28.6966, 87.6254, 56.0331, 0.29 ) }
    dend_47 { pt3dadd( 29.3533, 88.4664, 56.4179, 0.29 ) }
    dend_47 { pt3dadd( 30.617, 90.004, 57.297, 0.07 ) }
    dend_47 { pt3dadd( 31.6023, 91.1482, 58.0719, 0.07 ) }
    dend_47 { pt3dadd( 32.1301, 91.7572, 58.5259, 0.07 ) }
    dend_47 { pt3dadd( 32.8906, 92.6136, 59.2245, 0.96 ) }
    dend_47 { pt3dadd( 34.5791, 94.4512, 60.8671, 0.15 ) }
    dend_47 { pt3dadd( 35.3718, 95.3083, 61.6781, 0.15 ) }
    dend_47 { pt3dadd( 35.9304, 95.9015, 62.3004, 0.15 ) }
    dend_47 { pt3dadd( 36.3403, 96.3584, 62.7387, 0.15 ) }
    dend_47 { pt3dadd( 36.8012, 96.8848, 63.2107, 0.37 ) }
    dend_47 { pt3dadd( 37.3096, 97.5, 63.698, 0.37 ) }
    dend_47 { pt3dadd( 38.3047, 98.7456, 64.4889, 0.15 ) }
    dend_47 { pt3dadd( 39.127, 99.8114, 65.1162, 0.15 ) }
    dend_47 { pt3dadd( 39.9228, 100.902, 65.7752, 0.15 ) }
    dend_47 { pt3dadd( 40.837, 102.214, 66.5866, 0.15 ) }
    dend_47 { pt3dadd( 41.3471, 102.966, 67.0579, 0.15 ) }
    dend_47 { pt3dadd( 42.1954, 104.234, 67.8486, 0.15 ) }
    dend_47 { pt3dadd( 43.1829, 105.73, 68.7591, 0.07 ) }
    dend_47 { pt3dadd( 44.2964, 107.501, 69.8015, 0.07 ) }
    dend_47 { pt3dadd( 45.3563, 109.209, 70.8766, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 47/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -89.0595, -223.209, 66.6864, 0.74 ) }
    dend_38 { pt3dadd( -89.5774, -224.019, 66.5705, 0.74 ) }
    dend_38 { pt3dadd( -90.1548, -224.899, 66.4744, 0.29 ) }
    dend_38 { pt3dadd( -90.964, -226.053, 66.3788, 0.07 ) }
    dend_38 { pt3dadd( -91.6606, -226.996, 66.2948, 0.15 ) }
    dend_38 { pt3dadd( -92.1103, -227.598, 66.2396, 0.52 ) }
    dend_38 { pt3dadd( -92.5159, -228.123, 66.1814, 0.74 ) }
    dend_38 { pt3dadd( -92.8557, -228.529, 66.1321, 0.88 ) }
    dend_38 { pt3dadd( -93.7792, -229.597, 66.0276, 0.22 ) }
    dend_38 { pt3dadd( -94.3603, -230.263, 65.9779, 0.22 ) }
    dend_38 { pt3dadd( -94.94, -230.953, 65.9279, 0.22 ) }
    dend_38 { pt3dadd( -95.5632, -231.727, 65.8568, 0.15 ) }
    dend_38 { pt3dadd( -96.0162, -232.305, 65.7902, 0.74 ) }
    dend_38 { pt3dadd( -96.6709, -233.143, 65.6704, 0.88 ) }
    dend_38 { pt3dadd( -97.2552, -233.914, 65.5473, 0.22 ) }
    dend_38 { pt3dadd( -97.9149, -234.781, 65.3783, 0.15 ) }
    dend_38 { pt3dadd( -98.4425, -235.473, 65.1816, 0.15 ) }
    dend_38 { pt3dadd( -98.8372, -235.995, 64.9894, 0.29 ) }
    dend_38 { pt3dadd( -99.2792, -236.554, 64.7306, 0.66 ) }
    dend_38 { pt3dadd( -99.8836, -237.255, 64.3666, 1.03 ) }
    dend_38 { pt3dadd( -100.653, -238.013, 63.9633, 0.37 ) }
    dend_38 { pt3dadd( -101.569, -238.789, 63.5534, 0.22 ) }
    dend_38 { pt3dadd( -102.112, -239.225, 63.3445, 0.44 ) }
    dend_38 { pt3dadd( -102.626, -239.635, 63.1774, 0.74 ) }
    dend_38 { pt3dadd( -103.416, -240.281, 62.9805, 1.03 ) }
    dend_38 { pt3dadd( -104.741, -241.378, 62.7659, 0.29 ) }
    dend_38 { pt3dadd( -105.481, -242.025, 62.7124, 0.29 ) }
    dend_38 { pt3dadd( -106.128, -242.633, 62.7085, 0.74 ) }
    dend_38 { pt3dadd( -106.66, -243.174, 62.7232, 0.74 ) }
    dend_38 { pt3dadd( -107.626, -244.223, 62.7578, 0.29 ) }
    dend_38 { pt3dadd( -108.48, -245.2, 62.806, 0.22 ) }
    dend_38 { pt3dadd( -108.947, -245.73, 62.8426, 0.22 ) }
    dend_38 { pt3dadd( -109.579, -246.316, 62.8956, 0.22 ) }
    dend_38 { pt3dadd( -110.124, -246.693, 62.9226, 0.29 ) }
    dend_38 { pt3dadd( -110.688, -246.978, 62.9218, 0.74 ) }
    dend_38 { pt3dadd( -111.43, -247.258, 62.8892, 0.96 ) }
    dend_38 { pt3dadd( -112.538, -247.64, 62.8104, 0.44 ) }
    dend_38 { pt3dadd( -113.785, -248.101, 62.7067, 0.22 ) }
    dend_38 { pt3dadd( -114.434, -248.376, 62.656, 0.22 ) }
    dend_38 { pt3dadd( -115.029, -248.683, 62.617, 0.22 ) }
    dend_38 { pt3dadd( -115.697, -249.112, 62.6187, 0.81 ) }
    dend_38 { pt3dadd( -116.381, -249.662, 62.6607, 0.44 ) }
    dend_38 { pt3dadd( -116.952, -250.224, 62.7436, 0.22 ) }
    dend_38 { pt3dadd( -117.434, -250.733, 62.8219, 0.37 ) }
    dend_38 { pt3dadd( -117.738, -251.029, 62.8601, 0.37 ) }
    dend_38 { pt3dadd( -118.709, -251.822, 62.9559, 0.22 ) }
    dend_38 { pt3dadd( -119.101, -252.075, 62.9799, 0.59 ) }
    dend_38 { pt3dadd( -119.987, -252.546, 63.0127, 0.88 ) }
    dend_38 { pt3dadd( -120.904, -252.999, 63.0049, 0.22 ) }
    dend_38 { pt3dadd( -121.628, -253.358, 62.9668, 0.22 ) }
    dend_38 { pt3dadd( -122.134, -253.614, 62.9187, 0.22 ) }
    dend_38 { pt3dadd( -122.746, -253.936, 62.8362, 0.22 ) }
    dend_38 { pt3dadd( -123.367, -254.285, 62.7549, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( -124.391, -254.956, 62.6273, 0.15 ) }
    dend_38 { pt3dadd( -124.773, -255.247, 62.5536, 0.15 ) }
    dend_38 { pt3dadd( -125.177, -255.597, 62.453, 0.15 ) }
    dend_38 { pt3dadd( -125.383, -255.789, 62.3729, 0.15 ) }
    dend_38 { pt3dadd( -125.624, -256.038, 62.249, 0.15 ) }
    dend_38 { pt3dadd( -126.117, -256.551, 61.9496, 0.88 ) }
    dend_38 { pt3dadd( -127.173, -257.614, 61.3243, 0.22 ) }
    dend_38 { pt3dadd( -127.372, -257.8, 61.2172, 0.22 ) }
    dend_38 { pt3dadd( -127.872, -258.247, 60.9794, 0.22 ) }
    dend_38 { pt3dadd( -128.436, -258.748, 60.7448, 0.22 ) }
    dend_38 { pt3dadd( -128.787, -259.07, 60.6245, 0.22 ) }
    dend_38 { pt3dadd( -129.403, -259.669, 60.4786, 0.66 ) }
    dend_38 { pt3dadd( -130.23, -260.505, 60.4262, 0.29 ) }
    dend_38 { pt3dadd( -130.824, -261.123, 60.4377, 0.29 ) }
    dend_38 { pt3dadd( -131.321, -261.67, 60.4812, 0.44 ) }
    dend_38 { pt3dadd( -131.888, -262.34, 60.5449, 0.74 ) }
    dend_38 { pt3dadd( -132.321, -262.918, 60.6088, 0.81 ) }
    dend_38 { pt3dadd( -133.12, -264.058, 60.7686, 0.22 ) }
    dend_38 { pt3dadd( -133.627, -264.776, 60.926, 0.22 ) }
    dend_38 { pt3dadd( -133.857, -265.083, 61.0089, 0.22 ) }
    dend_38 { pt3dadd( -134.127, -265.437, 61.1101, 0.22 ) }
    dend_38 { pt3dadd( -134.539, -265.969, 61.235, 0.22 ) }
    dend_38 { pt3dadd( -135.157, -266.734, 61.3302, 0.59 ) }
    dend_38 { pt3dadd( -135.868, -267.557, 61.3093, 0.22 ) }
    dend_38 { pt3dadd( -136.352, -268.068, 61.2408, 0.22 ) }
    dend_38 { pt3dadd( -136.988, -268.647, 61.0941, 0.59 ) }
    dend_38 { pt3dadd( -137.946, -269.428, 60.819, 0.22 ) }
    dend_38 { pt3dadd( -138.691, -270.01, 60.5504, 0.22 ) }
    dend_38 { pt3dadd( -139.259, -270.465, 60.3063, 0.44 ) }
    dend_38 { pt3dadd( -139.912, -271.022, 60.0046, 1.03 ) }
    dend_38 { pt3dadd( -140.791, -271.808, 59.6127, 0.22 ) }
    dend_38 { pt3dadd( -141.176, -272.204, 59.4575, 0.22 ) }
    dend_38 { pt3dadd( -141.522, -272.7, 59.3511, 0.22 ) }
    dend_38 { pt3dadd( -141.803, -273.3, 59.2677, 0.22 ) }
    dend_38 { pt3dadd( -142.139, -274.239, 59.1623, 0.22 ) }
    dend_38 { pt3dadd( -142.238, -274.558, 59.1316, 0.44 ) }
    dend_38 { pt3dadd( -142.459, -275.355, 59.0691, 0.88 ) }
    dend_38 { pt3dadd( -142.66, -276.061, 59.0108, 0.88 ) }
    dend_38 { pt3dadd( -143.107, -277.505, 58.9027, 0.22 ) }
    dend_38 { pt3dadd( -143.384, -278.305, 58.8495, 0.22 ) }
    dend_38 { pt3dadd( -143.807, -279.38, 58.7713, 0.22 ) }
    dend_38 { pt3dadd( -144.008, -279.861, 58.7448, 0.22 ) }
    dend_38 { pt3dadd( -144.195, -280.263, 58.7363, 0.59 ) }
    dend_38 { pt3dadd( -144.532, -280.919, 58.7464, 0.81 ) }
    dend_38 { pt3dadd( -144.76, -281.315, 58.7586, 0.59 ) }
    dend_38 { pt3dadd( -145.31, -282.206, 58.76, 0.22 ) }
    dend_38 { pt3dadd( -145.687, -282.781, 58.7538, 0.22 ) }
    dend_38 { pt3dadd( -146.099, -283.328, 58.7687, 0.22 ) }
    dend_38 { pt3dadd( -146.514, -283.786, 58.7872, 0.22 ) }
    dend_38 { pt3dadd( -147.207, -284.442, 58.8177, 0.22 ) }
    dend_38 { pt3dadd( -147.727, -284.883, 58.8276, 0.44 ) }
    dend_38 { pt3dadd( -148.338, -285.356, 58.8194, 0.74 ) }
    dend_38 { pt3dadd( -149.057, -285.911, 58.7527, 0.29 ) }
    dend_38 { pt3dadd( -149.751, -286.461, 58.6233, 0.22 ) }
    dend_38 { pt3dadd( -149.937, -286.609, 58.5808, 0.22 ) }
    dend_38 { pt3dadd( -150.336, -286.91, 58.4806, 0.22 ) }
    dend_38 { pt3dadd( -150.747, -287.214, 58.3687, 0.22 ) }
    dend_38 { pt3dadd( -151.21, -287.58, 58.2428, 0.29 ) }
    dend_38 { pt3dadd( -151.748, -288.086, 58.1053, 0.66 ) }
    dend_38 { pt3dadd( -152.216, -288.569, 58.0268, 0.88 ) }
    dend_38 { pt3dadd( -153.315, -289.685, 57.9284, 0.22 ) }
    dend_38 { pt3dadd( -153.756, -290.116, 57.9261, 0.22 ) }
    dend_38 { pt3dadd( -154.279, -290.599, 57.9646, 0.22 ) }
    dend_38 { pt3dadd( -154.972, -291.21, 58.1203, 0.22 ) }
    dend_38 { pt3dadd( -155.523, -291.696, 58.3349, 0.15 ) }
    dend_38 { pt3dadd( -155.876, -292.022, 58.5227, 0.15 ) }
    dend_38 { pt3dadd( -156.108, -292.256, 58.6861, 0.52 ) }
    dend_38 { pt3dadd( -156.5, -292.665, 58.9806, 0.81 ) }
    dend_38 { pt3dadd( -157.357, -293.644, 59.5949, 0.15 ) }
    dend_38 { pt3dadd( -157.703, -294.082, 59.8056, 0.15 ) }
    dend_38 { pt3dadd( -158.198, -294.816, 60.0334, 0.15 ) }
    dend_38 { pt3dadd( -158.311, -294.998, 60.0672, 0.37 ) }
    dend_38 { pt3dadd( -158.661, -295.577, 60.1163, 0.74 ) }
    dend_38 { pt3dadd( -159.267, -296.597, 60.1096, 0.15 ) }
    dend_38 { pt3dadd( -159.62, -297.182, 60.0527, 0.15 ) }
    dend_38 { pt3dadd( -159.96, -297.761, 59.9904, 0.37 ) }
    dend_38 { pt3dadd( -160.278, -298.308, 59.9162, 0.37 ) }
    dend_38 { pt3dadd( -160.657, -298.997, 59.8093, 0.37 ) }
    dend_38 { pt3dadd( -161.128, -299.886, 59.6494, 0.29 ) }
    dend_38 { pt3dadd( -161.615, -300.848, 59.4813, 0.81 ) }
    dend_38 { pt3dadd( -161.958, -301.576, 59.3433, 0.66 ) }
    dend_38 { pt3dadd( -162.272, -302.259, 59.1808, 0.59 ) }
    dend_38 { pt3dadd( -162.611, -302.995, 58.9625, 0.15 ) }
    dend_38 { pt3dadd( -162.877, -303.507, 58.7935, 0.15 ) }
    dend_38 { pt3dadd( -163.173, -303.975, 58.6274, 0.66 ) }
    dend_38 { pt3dadd( -163.324, -304.177, 58.5565, 0.66 ) }
    dend_38 { pt3dadd( -163.919, -304.912, 58.3184, 0.22 ) }
    dend_38 { pt3dadd( -164.327, -305.446, 58.1613, 0.22 ) }
    dend_38 { pt3dadd( -164.797, -306.101, 57.9713, 0.59 ) }
    dend_38 { pt3dadd( -165.337, -306.971, 57.7202, 0.15 ) }
    dend_38 { pt3dadd( -165.581, -307.413, 57.5922, 0.15 ) }
    dend_38 { pt3dadd( -165.908, -308.048, 57.4158, 0.81 ) }
    dend_38 { pt3dadd( -166.513, -309.357, 57.0741, 0.15 ) }
    dend_38 { pt3dadd( -166.736, -309.891, 56.9482, 0.52 ) }
    dend_38 { pt3dadd( -167.056, -310.723, 56.7664, 0.15 ) }
    dend_38 { pt3dadd( -167.216, -311.113, 56.694, 0.15 ) }
    dend_38 { pt3dadd( -167.643, -311.974, 56.5406, 0.15 ) }
    dend_38 { pt3dadd( -167.811, -312.259, 56.4912, 0.15 ) }
    dend_38 { pt3dadd( -168.257, -312.933, 56.389, 0.88 ) }
    dend_38 { pt3dadd( -168.703, -313.57, 56.2899, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -169.427, -314.541, 56.1384, 0.15 ) }
    dend_38 { pt3dadd( -170.139, -315.485, 55.9795, 0.15 ) }
    dend_38 { pt3dadd( -170.483, -315.934, 55.9028, 0.22 ) }
    dend_38 { pt3dadd( -170.916, -316.455, 55.8098, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 4/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -89.0595, -223.209, 66.6864, 0.07 ) }
    dend_37 { pt3dadd( -89.5393, -222.477, 65.9349, 0.07 ) }
    dend_37 { pt3dadd( -89.9588, -221.821, 65.3465, 0.07 ) }
    dend_37 { pt3dadd( -90.3607, -221.222, 64.831, 0.37 ) }
    dend_37 { pt3dadd( -91.0889, -220.163, 63.9809, 0.07 ) }
    dend_37 { pt3dadd( -91.3604, -219.774, 63.6906, 0.07 ) }
    dend_37 { pt3dadd( -91.8042, -219.165, 63.2441, 0.22 ) }
    dend_37 { pt3dadd( -92.674, -218.047, 62.4929, 0.07 ) }
    dend_37 { pt3dadd( -93.3526, -217.268, 61.9993, 0.07 ) }
    dend_37 { pt3dadd( -93.8295, -216.77, 61.6909, 0.07 ) }
    dend_37 { pt3dadd( -94.2649, -216.369, 61.462, 0.22 ) }
    dend_37 { pt3dadd( -95.0899, -215.677, 61.08, 0.07 ) }
    dend_37 { pt3dadd( -95.6221, -215.264, 60.8433, 0.37 ) }
    dend_37 { pt3dadd( -97.223, -214.113, 60.194, 0.07 ) }
    dend_37 { pt3dadd( -97.7496, -213.749, 59.9912, 0.22 ) }
    dend_37 { pt3dadd( -99.074, -212.881, 59.4749, 0.07 ) }
    dend_37 { pt3dadd( -99.6294, -212.531, 59.2651, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 21/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -23.5714, -336.675, 39.3566, 0.15 ) }
    dend_30 { pt3dadd( -24.1039, -337.383, 40.1948, 0.15 ) }
    dend_30 { pt3dadd( -24.5842, -338.141, 40.9553, 0.15 ) }
    dend_30 { pt3dadd( -24.953, -338.801, 41.5527, 0.07 ) }
    dend_30 { pt3dadd( -25.2649, -339.387, 42.083, 0.07 ) }
    dend_30 { pt3dadd( -25.4937, -339.83, 42.4798, 0.07 ) }
    dend_30 { pt3dadd( -25.6532, -340.145, 42.7558, 0.37 ) }
    dend_30 { pt3dadd( -25.9167, -340.751, 43.2367, 0.66 ) }
    dend_30 { pt3dadd( -26.3434, -341.762, 43.9975, 0.07 ) }
    dend_30 { pt3dadd( -26.5832, -342.347, 44.4705, 0.07 ) }
    dend_30 { pt3dadd( -26.8104, -342.896, 44.9602, 0.07 ) }
    dend_30 { pt3dadd( -26.9259, -343.17, 45.2387, 0.52 ) }
    dend_30 { pt3dadd( -27.1302, -343.675, 45.79, 0.88 ) }
    dend_30 { pt3dadd( -27.4718, -344.592, 46.854, 0.15 ) }
    dend_30 { pt3dadd( -27.7374, -345.389, 47.7993, 0.15 ) }
    dend_30 { pt3dadd( -27.8628, -345.814, 48.2906, 0.15 ) }
    dend_30 { pt3dadd( -27.9962, -346.376, 48.967, 0.15 ) }
    dend_30 { pt3dadd( -28.0911, -346.917, 49.6389, 0.88 ) }
    dend_30 { pt3dadd( -28.2003, -347.906, 50.9299, 0.07 ) }
    dend_30 { pt3dadd( -28.2181, -348.224, 51.3583, 0.07 ) }
    dend_30 { pt3dadd( -28.2305, -348.57, 51.8061, 0.37 ) }
    dend_30 { pt3dadd( -28.2627, -349.407, 52.8492, 0.15 ) }
    dend_30 { pt3dadd( -28.2889, -349.933, 53.4767, 0.37 ) }
    dend_30 { pt3dadd( -28.3679, -350.673, 54.3551, 0.22 ) }
    dend_30 { pt3dadd( -28.4631, -351.277, 55.0325, 0.44 ) }
    dend_30 { pt3dadd( -28.5669, -351.767, 55.5517, 0.81 ) }
    dend_30 { pt3dadd( -28.7527, -352.426, 56.2073, 0.29 ) }
    dend_30 { pt3dadd( -29.0667, -353.223, 56.8728, 0.15 ) }
    dend_30 { pt3dadd( -29.5356, -354.212, 57.5484, 0.15 ) }
    dend_30 { pt3dadd( -29.9507, -355.03, 57.9831, 0.15 ) }
    dend_30 { pt3dadd( -30.2168, -355.548, 58.2068, 0.81 ) }
    dend_30 { pt3dadd( -30.4882, -356.107, 58.4115, 1.47 ) }
    dend_30 { pt3dadd( -31.2961, -357.911, 58.9338, 0.15 ) }
    dend_30 { pt3dadd( -31.8287, -359.182, 59.3249, 0.07 ) }
    dend_30 { pt3dadd( -32.3582, -360.544, 59.7428, 0.07 ) }
    dend_30 { pt3dadd( -32.63, -361.259, 59.991, 0.15 ) }
    dend_30 { pt3dadd( -33.0612, -362.457, 60.4301, 0.07 ) }
    dend_30 { pt3dadd( -33.2878, -363.116, 60.6771, 0.22 ) }
    dend_30 { pt3dadd( -34.2446, -365.887, 61.808, 0.07 ) }
    dend_30 { pt3dadd( -34.551, -366.696, 62.1551, 0.29 ) }
    dend_30 { pt3dadd( -35.2299, -368.298, 62.8579, 0.07 ) }
    dend_30 { pt3dadd( -35.6045, -369.105, 63.1965, 0.07 ) }
    dend_30 { pt3dadd( -36.0534, -369.979, 63.5405, 0.44 ) }
    dend_30 { pt3dadd( -36.8996, -371.579, 64.1281, 0.15 ) }
    dend_30 { pt3dadd( -37.5527, -372.793, 64.5194, 0.07 ) }
    dend_30 { pt3dadd( -37.9325, -373.484, 64.7554, 0.07 ) }
    dend_30 { pt3dadd( -38.3047, -374.157, 64.9959, 0.29 ) }
    dend_30 { pt3dadd( -39.4179, -376.143, 65.7757, 0.07 ) }
    dend_30 { pt3dadd( -39.9891, -377.175, 66.2023, 0.07 ) }
    dend_30 { pt3dadd( -40.4266, -377.984, 66.5332, 0.07 ) }
    dend_30 { pt3dadd( -40.8613, -378.784, 66.8872, 0.07 ) }
    dend_30 { pt3dadd( -41.2745, -379.534, 67.2224, 0.15 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 73/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -23.5714, -336.675, 39.3566, 0.22 ) }
    dend_27 { pt3dadd( -22.9042, -337.752, 40.2333, 0.22 ) }
    dend_27 { pt3dadd( -21.7039, -339.429, 41.6394, 0.37 ) }
    dend_27 { pt3dadd( -20.8678, -340.48, 42.5861, 0.15 ) }
    dend_27 { pt3dadd( -20.1852, -341.302, 43.3359, 0.15 ) }
    dend_27 { pt3dadd( -19.9417, -341.568, 43.6211, 0.37 ) }
    dend_27 { pt3dadd( -19.3496, -342.194, 44.3993, 0.88 ) }
    dend_27 { pt3dadd( -18.0881, -343.371, 46.201, 0.15 ) }
    dend_27 { pt3dadd( -17.4868, -343.9, 47.1801, 0.52 ) }
    dend_27 { pt3dadd( -17.3094, -344.06, 47.503, 1.03 ) }
    dend_27 { pt3dadd( -16.1328, -345.174, 49.9095, 0.22 ) }
    dend_27 { pt3dadd( -15.3714, -345.941, 51.6421, 0.22 ) }
    dend_27 { pt3dadd( -15.1578, -346.166, 52.1719, 0.37 ) }
    dend_27 { pt3dadd( -14.3211, -347.237, 54.5328, 0.22 ) }
    dend_27 { pt3dadd( -14.0284, -347.687, 55.4212, 0.22 ) }
    dend_27 { pt3dadd( -13.6839, -348.336, 56.5592, 0.22 ) }
    dend_27 { pt3dadd( -13.4658, -348.863, 57.3398, 0.22 ) }
    dend_27 { pt3dadd( -13.2405, -349.464, 58.1092, 0.88 ) }
    dend_27 { pt3dadd( -12.5902, -351.197, 60.0072, 0.15 ) }
    dend_27 { pt3dadd( -12.2433, -352.13, 60.8497, 0.22 ) }
    dend_27 { pt3dadd( -11.7996, -353.32, 61.6813, 0.07 ) }
    dend_27 { pt3dadd( -11.2376, -354.839, 62.4654, 0.07 ) }
    dend_27 { pt3dadd( -10.6889, -356.358, 62.9252, 1.18 ) }
    dend_27 { pt3dadd( -9.84856, -358.861, 63.2512, 0.07 ) }
    dend_27 { pt3dadd( -9.52629, -359.937, 63.1664, 0.74 ) }
    dend_27 { pt3dadd( -8.81095, -362.712, 62.6134, 0.07 ) }
    dend_27 { pt3dadd( -8.65049, -363.514, 62.3529, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_27 { pt3dadd( -8.28987, -366.385, 61.104, 0.07 ) }
    dend_27 { pt3dadd( -8.21752, -367.898, 60.3895, 1.11 ) }
    dend_27 { pt3dadd( -8.29295, -370.815, 58.8295, 0.07 ) }
    dend_27 { pt3dadd( -8.32999, -371.481, 58.4538, 0.22 ) }
    dend_27 { pt3dadd( -8.5069, -373.614, 57.2186, 0.07 ) }
    dend_27 { pt3dadd( -8.58642, -374.632, 56.5392, 0.07 ) }
    dend_27 { pt3dadd( -8.6805, -376.131, 55.2887, 0.96 ) }
    dend_27 { pt3dadd( -8.63928, -377.875, 53.5946, 0.07 ) }
    dend_27 { pt3dadd( -8.53848, -378.515, 52.9207, 0.07 ) }
    dend_27 { pt3dadd( -8.45802, -378.843, 52.5384, 0.29 ) }
    dend_27 { pt3dadd( -8.04341, -380.144, 50.8339, 0.07 ) }
    dend_27 { pt3dadd( -7.65496, -381.287, 49.2794, 0.07 ) }
    dend_27 { pt3dadd( -7.46794, -381.872, 48.4629, 0.66 ) }
    dend_27 { pt3dadd( -7.07778, -383.273, 46.6319, 0.07 ) }
    dend_27 { pt3dadd( -6.84858, -384.315, 45.4079, 0.07 ) }
    dend_27 { pt3dadd( -6.615, -385.494, 44.23, 0.07 ) }
    dend_27 { pt3dadd( -6.44854, -386.313, 43.5797, 0.96 ) }
    dend_27 { pt3dadd( -6.14178, -387.855, 42.468, 0.15 ) }
    dend_27 { pt3dadd( -5.96232, -388.807, 41.817, 0.15 ) }
    dend_27 { pt3dadd( -5.74821, -389.997, 41.1235, 0.74 ) }
    dend_27 { pt3dadd( -5.28191, -392.316, 40.0513, 0.15 ) }
    dend_27 { pt3dadd( -4.99593, -393.583, 39.5801, 0.81 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 22/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -3.90392, 13.3046, -16.6021, 0.59 ) }
    dend_24 { pt3dadd( -4.66551, 13.9783, -15.7217, 0.59 ) }
    dend_24 { pt3dadd( -5.23435, 14.5542, -15.0589, 0.59 ) }
    dend_24 { pt3dadd( -5.79851, 15.1424, -14.4282, 0.59 ) }
    dend_24 { pt3dadd( -6.38155, 15.7303, -13.8324, 0.74 ) }
    dend_24 { pt3dadd( -6.86382, 16.1964, -13.3987, 0.74 ) }
    dend_24 { pt3dadd( -7.61671, 16.9014, -12.8425, 0.44 ) }
    dend_24 { pt3dadd( -7.81332, 17.0862, -12.7568, 0.44 ) }
    dend_24 { pt3dadd( -8.26696, 17.518, -12.6718, 0.44 ) }
    dend_24 { pt3dadd( -8.71885, 17.928, -12.6535, 0.66 ) }
    dend_24 { pt3dadd( -9.37151, 18.4561, -12.6832, 0.81 ) }
    dend_24 { pt3dadd( -10.2903, 19.1003, -12.7421, 0.59 ) }
    dend_24 { pt3dadd( -11.0223, 19.5475, -12.7838, 0.37 ) }
    dend_24 { pt3dadd( -11.9921, 20.1228, -12.811, 0.22 ) }
    dend_24 { pt3dadd( -12.5857, 20.4779, -12.8088, 0.44 ) }
    dend_24 { pt3dadd( -12.9904, 20.7357, -12.7884, 0.74 ) }
    dend_24 { pt3dadd( -13.8787, 21.3632, -12.6995, 0.37 ) }
    dend_24 { pt3dadd( -14.6835, 21.9974, -12.5739, 0.22 ) }
    dend_24 { pt3dadd( -15.0615, 22.3519, -12.5209, 0.22 ) }
    dend_24 { pt3dadd( -15.4964, 22.8299, -12.4724, 0.66 ) }
    dend_24 { pt3dadd( -16.0225, 23.4938, -12.4419, 0.52 ) }
    dend_24 { pt3dadd( -16.6371, 24.3399, -12.4668, 0.81 ) }
    dend_24 { pt3dadd( -16.8955, 24.7188, -12.5126, 0.81 ) }
    dend_24 { pt3dadd( -17.5482, 25.677, -12.7239, 0.44 ) }
    dend_24 { pt3dadd( -18.2053, 26.5671, -13.0304, 0.74 ) }
    dend_24 { pt3dadd( -18.8653, 27.3352, -13.4325, 0.44 ) }
    dend_24 { pt3dadd( -19.6186, 28.0572, -13.9907, 0.29 ) }
    dend_24 { pt3dadd( -20.1461, 28.4653, -14.442, 0.29 ) }
    dend_24 { pt3dadd( -20.6948, 28.8101, -14.9715, 0.29 ) }
    dend_24 { pt3dadd( -21.2458, 29.0823, -15.5566, 0.88 ) }
    dend_24 { pt3dadd( -21.9268, 29.3544, -16.3025, 0.59 ) }
    dend_24 { pt3dadd( -22.3748, 29.5168, -16.7843, 0.59 ) }
    dend_24 { pt3dadd( -23.0149, 29.7507, -17.4287, 0.29 ) }
    dend_24 { pt3dadd( -23.7927, 30.0672, -18.1422, 0.74 ) }
    dend_24 { pt3dadd( -24.1275, 30.2359, -18.4252, 0.74 ) }
    dend_24 { pt3dadd( -24.6365, 30.574, -18.8285, 0.29 ) }
    dend_24 { pt3dadd( -24.9995, 30.9089, -19.0795, 0.22 ) }
    dend_24 { pt3dadd( -25.2647, 31.2317, -19.2405, 0.22 ) }
    dend_24 { pt3dadd( -25.5552, 31.6903, -19.3949, 0.22 ) }
    dend_24 { pt3dadd( -25.9066, 32.3193, -19.5716, 0.74 ) }
    dend_24 { pt3dadd( -26.1977, 32.8482, -19.746, 0.74 ) }
    dend_24 { pt3dadd( -26.4742, 33.3467, -19.9498, 0.29 ) }
    dend_24 { pt3dadd( -26.6907, 33.7061, -20.1206, 0.29 ) }
    dend_24 { pt3dadd( -27.0055, 34.1935, -20.3675, 0.52 ) }
    dend_24 { pt3dadd( -27.359, 34.743, -20.677, 0.52 ) }
    dend_24 { pt3dadd( -27.889, 35.5686, -21.1819, 0.22 ) }
    dend_24 { pt3dadd( -28.1964, 36.087, -21.5174, 0.15 ) }
    dend_24 { pt3dadd( -28.6326, 36.8336, -22.0123, 0.59 ) }
    dend_24 { pt3dadd( -29.0697, 37.6236, -22.5207, 0.22 ) }
    dend_24 { pt3dadd( -29.2914, 38.069, -22.793, 0.22 ) }
    dend_24 { pt3dadd( -29.3565, 38.2257, -22.8771, 0.22 ) }
    dend_24 { pt3dadd( -29.5624, 38.8336, -23.1616, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 74/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -3.90392, 13.3046, -16.6021, 1.03 ) }
    dend_23 { pt3dadd( -3.43073, 13.9253, -16.7554, 1.03 ) }
    dend_23 { pt3dadd( -2.24041, 15.0649, -17.0456, 0.88 ) }
    dend_23 { pt3dadd( -1.25328, 15.9108, -17.3002, 0.88 ) }
    dend_23 { pt3dadd( -0.564451, 16.4891, -17.4981, 0.59 ) }
    dend_23 { pt3dadd( 0.0279822, 17.0129, -17.6799, 0.59 ) }
    dend_23 { pt3dadd( 1.02706, 17.9532, -18.0025, 0.96 ) }
    dend_23 { pt3dadd( 2.16816, 19.0351, -18.3747, 0.52 ) }
    dend_23 { pt3dadd( 3.11182, 20.0334, -18.6871, 0.66 ) }
    dend_23 { pt3dadd( 3.49044, 20.5515, -18.8386, 0.66 ) }
    dend_23 { pt3dadd( 3.92373, 21.3521, -19.0586, 0.66 ) }
    dend_23 { pt3dadd( 4.15697, 21.948, -19.1943, 0.66 ) }
    dend_23 { pt3dadd( 4.45786, 22.9987, -19.4004, 1.18 ) }
    dend_23 { pt3dadd( 4.77505, 24.3232, -19.6408, 0.96 ) }
    dend_23 { pt3dadd( 4.94256, 25.0304, -19.7769, 0.96 ) }
    dend_23 { pt3dadd( 5.21191, 26.08, -20.0266, 0.88 ) }
    dend_23 { pt3dadd( 5.56844, 27.2424, -20.3968, 1.03 ) }
    dend_23 { pt3dadd( 5.7911, 27.9197, -20.6491, 1.18 ) }
    dend_23 { pt3dadd( 6.14181, 28.8785, -21.0316, 0.74 ) }
    dend_23 { pt3dadd( 6.51401, 29.7806, -21.3985, 0.74 ) }
    dend_23 { pt3dadd( 6.81837, 30.4573, -21.6842, 0.96 ) }
    dend_23 { pt3dadd( 7.30685, 31.4921, -22.126, 1.11 ) }
    dend_23 { pt3dadd( 7.89823, 32.6176, -22.6425, 0.96 ) }
    dend_23 { pt3dadd( 8.86036, 34.2206, -23.4094, 0.59 ) }
    dend_23 { pt3dadd( 9.41598, 35.0346, -23.7978, 0.59 ) }
    dend_23 { pt3dadd( 10.2144, 36.0268, -24.2915, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_23 { pt3dadd( 10.5985, 36.4323, -24.5089, 0.74 ) }
    dend_23 { pt3dadd( 11.4656, 37.2074, -24.9403, 0.59 ) }
    dend_23 { pt3dadd( 12.3932, 37.9053, -25.3585, 0.59 ) }
    dend_23 { pt3dadd( 13.2073, 38.467, -25.6994, 0.59 ) }
    dend_23 { pt3dadd( 14.1385, 39.149, -26.0781, 0.52 ) }
    dend_23 { pt3dadd( 14.8208, 39.7348, -26.3609, 0.52 ) }
    dend_23 { pt3dadd( 15.5734, 40.5543, -26.7415, 0.74 ) }
    dend_23 { pt3dadd( 15.9743, 41.2014, -27.0315, 0.88 ) }
    dend_23 { pt3dadd( 16.3274, 42.0869, -27.4671, 0.59 ) }
    dend_23 { pt3dadd( 16.5871, 43.1246, -28.0488, 0.44 ) }
    dend_23 { pt3dadd( 16.7533, 44.2077, -28.7077, 0.59 ) }
    dend_23 { pt3dadd( 16.871, 45.2332, -29.3663, 0.96 ) }
    dend_23 { pt3dadd( 17.0518, 46.5119, -30.2183, 0.52 ) }
    dend_23 { pt3dadd( 17.2665, 47.5012, -30.8883, 0.52 ) }
    dend_23 { pt3dadd( 17.5126, 48.2449, -31.3819, 0.52 ) }
    dend_23 { pt3dadd( 18.0522, 49.3771, -32.1143, 0.37 ) }
    dend_23 { pt3dadd( 18.455, 50.0608, -32.5265, 0.37 ) }
    dend_23 { pt3dadd( 19.2312, 51.2727, -33.1697, 0.44 ) }
    dend_23 { pt3dadd( 19.8182, 52.2402, -33.6088, 0.59 ) }
    dend_23 { pt3dadd( 20.2716, 53.1501, -33.9567, 0.59 ) }
    dend_23 { pt3dadd( 20.5294, 53.8549, -34.184, 0.59 ) }
    dend_23 { pt3dadd( 20.7904, 55.114, -34.5674, 0.59 ) }
    dend_23 { pt3dadd( 20.8642, 56.111, -34.9043, 0.66 ) }
    dend_23 { pt3dadd( 20.825, 57.3337, -35.3704, 0.74 ) }
    dend_23 { pt3dadd( 20.7415, 58.4624, -35.8603, 0.52 ) }
    dend_23 { pt3dadd( 20.6643, 59.4333, -36.3579, 0.29 ) }
    dend_23 { pt3dadd( 20.6458, 60.3731, -36.9918, 0.29 ) }
    dend_23 { pt3dadd( 20.8028, 60.9573, -37.7412, 0.44 ) }
    dend_23 { pt3dadd( 21.0936, 61.1217, -38.4595, 0.59 ) }
    dend_23 { pt3dadd( 21.558, 61.0377, -39.4201, 0.29 ) }
    dend_23 { pt3dadd( 21.864, 60.8675, -40.0037, 0.29 ) }
    dend_23 { pt3dadd( 22.3386, 60.4892, -40.8913, 0.29 ) }
    dend_23 { pt3dadd( 22.6987, 60.1637, -41.5397, 0.29 ) }
    dend_23 { pt3dadd( 23.0375, 59.8596, -42.1702, 0.44 ) }
    dend_23 { pt3dadd( 23.3627, 59.6244, -42.843, 0.44 ) }
    dend_23 { pt3dadd( 23.5995, 59.5312, -43.4408, 0.52 ) }
    dend_23 { pt3dadd( 23.7289, 59.7041, -43.9533, 0.52 ) }
    dend_23 { pt3dadd( 23.6966, 60.1805, -44.3219, 0.52 ) }
    dend_23 { pt3dadd( 23.5054, 60.9436, -44.7332, 0.66 ) }
    dend_23 { pt3dadd( 23.1709, 61.8591, -45.1313, 0.66 ) }
    dend_23 { pt3dadd( 22.7351, 62.7135, -45.4348, 0.37 ) }
    dend_23 { pt3dadd( 22.1019, 63.5813, -45.7295, 0.37 ) }
    dend_23 { pt3dadd( 21.462, 64.1742, -45.9637, 0.37 ) }
    dend_23 { pt3dadd( 20.9287, 64.4507, -46.1403, 0.37 ) }
    dend_23 { pt3dadd( 20.4836, 64.5439, -46.2835, 0.37 ) }
    dend_23 { pt3dadd( 19.6813, 64.5217, -46.5541, 0.29 ) }
    dend_23 { pt3dadd( 18.7573, 64.275, -46.8922, 0.22 ) }
    dend_23 { pt3dadd( 17.9898, 63.8622, -47.2079, 0.22 ) }
    dend_23 { pt3dadd( 17.0274, 62.9642, -47.6864, 0.66 ) }
    dend_23 { pt3dadd( 16.7012, 62.4218, -47.9212, 0.37 ) }
    dend_23 { pt3dadd( 16.4591, 61.7563, -48.217, 0.22 ) }
    dend_23 { pt3dadd( 16.3186, 60.93, -48.5948, 0.22 ) }
    dend_23 { pt3dadd( 16.3025, 60.2745, -48.9162, 0.22 ) }
    dend_23 { pt3dadd( 16.3535, 59.328, -49.3905, 0.29 ) }
    dend_23 { pt3dadd( 16.4948, 58.0688, -50.0398, 0.15 ) }
    dend_23 { pt3dadd( 16.6421, 56.9109, -50.6801, 0.15 ) }
    dend_23 { pt3dadd( 16.8014, 55.5403, -51.4969, 0.15 ) }
    dend_23 { pt3dadd( 16.9065, 54.54, -52.1691, 0.15 ) }
    dend_23 { pt3dadd( 16.9303, 54.2291, -52.3994, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 59/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.72271, 1.23644, -10.2058, 1.25 ) }
    dend_13 { pt3dadd( -4.0259, -0.611968, -11.3978, 1.25 ) }
    dend_13 { pt3dadd( -4.10228, -1.7461, -12.0584, 1.25 ) }
    dend_13 { pt3dadd( -4.11846, -3.18741, -12.8511, 1.25 ) }
    dend_13 { pt3dadd( -4.13226, -4.08727, -13.3111, 1.25 ) }
    dend_13 { pt3dadd( -4.21871, -5.33773, -13.9019, 1.11 ) }
    dend_13 { pt3dadd( -4.36878, -6.29107, -14.3263, 1.33 ) }
    dend_13 { pt3dadd( -4.75294, -7.78654, -14.8616, 0.81 ) }
    dend_13 { pt3dadd( -5.23627, -8.86261, -15.1258, 0.66 ) }
    dend_13 { pt3dadd( -5.78212, -9.67537, -15.2648, 0.66 ) }
    dend_13 { pt3dadd( -6.76511, -10.8449, -15.3992, 1.03 ) }
    dend_13 { pt3dadd( -7.99778, -12.1632, -15.4857, 1.4 ) }
    dend_13 { pt3dadd( -8.96662, -13.186, -15.5225, 1.99 ) }
    dend_13 { pt3dadd( -10.3033, -14.6435, -15.5254, 1.33 ) }
    dend_13 { pt3dadd( -11.2411, -15.7943, -15.5132, 0.96 ) }
    dend_13 { pt3dadd( -12.2831, -17.1992, -15.5074, 0.81 ) }
    dend_13 { pt3dadd( -12.9886, -18.3212, -15.5065, 0.74 ) }
    dend_13 { pt3dadd( -13.632, -19.5726, -15.4932, 0.96 ) }
    dend_13 { pt3dadd( -14.1114, -20.744, -15.4964, 1.33 ) }
    dend_13 { pt3dadd( -14.4346, -21.7719, -15.5117, 1.47 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 79/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -3.72271, 1.23644, -10.2058, 1.77 ) }
    dend_2 { pt3dadd( -4.9032, 0.949825, -10.2507, 1.77 ) }
    dend_2 { pt3dadd( -6.10157, 0.630644, -10.318, 1.62 ) }
    dend_2 { pt3dadd( -7.14016, 0.325209, -10.4142, 1.84 ) }
    dend_2 { pt3dadd( -7.84578, 0.117696, -10.4796, 2.06 ) }
    dend_2 { pt3dadd( -9.11253, -0.254836, -10.597, 1.84 ) }
    dend_2 { pt3dadd( -10.3005, -0.604206, -10.707, 1.84 ) }
    dend_2 { pt3dadd( -11.5233, -1.00386, -10.8589, 1.84 ) }
    dend_2 { pt3dadd( -12.4845, -1.32271, -11.01, 2.36 ) }
    // Section: dend_56, id: dend_56, parent: dend_48 (entry count 88/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.58211, 38.2183, 15.0656, 0.52 ) }
    dend_56 { pt3dadd( -4.37642, 39.4913, 14.282, 0.52 ) }
    dend_56 { pt3dadd( -4.25196, 40.7403, 13.4693, 0.52 ) }
    dend_56 { pt3dadd( -4.23854, 41.4076, 12.9929, 0.52 ) }
    dend_56 { pt3dadd( -4.27276, 42.2554, 12.3625, 0.59 ) }
    dend_56 { pt3dadd( -4.32836, 43.0353, 11.7604, 0.44 ) }
    dend_56 { pt3dadd( -4.37733, 43.6179, 11.303, 0.44 ) }
    dend_56 { pt3dadd( -4.45887, 44.2405, 10.8071, 0.52 ) }
    dend_56 { pt3dadd( -4.56866, 45.1529, 10.082, 0.88 ) }
    dend_56 { pt3dadd( -4.64487, 45.7882, 9.55376, 1.25 ) }
    dend_56 { pt3dadd( -4.74407, 46.6419, 8.84239, 1.18 ) }
    dend_56 { pt3dadd( -4.86359, 47.7812, 7.91747, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_56 { pt3dadd( -4.95278, 48.8785, 7.04782, 0.52 ) }
    dend_56 { pt3dadd( -5.01162, 50.0466, 6.1445, 0.44 ) }
    dend_56 { pt3dadd( -5.0384, 50.8135, 5.5582, 0.44 ) }
    dend_56 { pt3dadd( -5.05431, 51.3199, 5.17959, 0.44 ) }
    dend_56 { pt3dadd( -5.08114, 52.226, 4.5453, 0.52 ) }
    dend_56 { pt3dadd( -5.09227, 53.0389, 4.04097, 0.59 ) }
    dend_56 { pt3dadd( -5.07774, 54.1109, 3.47956, 0.66 ) }
    dend_56 { pt3dadd( -5.04494, 54.9807, 3.10452, 0.66 ) }
    dend_56 { pt3dadd( -5.00441, 55.827, 2.81695, 0.96 ) }
    dend_56 { pt3dadd( -4.95806, 56.7079, 2.58056, 1.18 ) }
    dend_56 { pt3dadd( -4.86331, 58.0922, 2.32361, 0.96 ) }
    dend_56 { pt3dadd( -4.78493, 59.092, 2.2016, 0.44 ) }
    dend_56 { pt3dadd( -4.72935, 59.7349, 2.14419, 0.29 ) }
    dend_56 { pt3dadd( -4.6466, 60.5284, 2.08047, 0.29 ) }
    dend_56 { pt3dadd( -4.58992, 60.9143, 2.03973, 0.29 ) }
    dend_56 { pt3dadd( -4.42497, 61.6295, 1.94302, 0.59 ) }
    dend_56 { pt3dadd( -4.28068, 62.0311, 1.87502, 0.96 ) }
    dend_56 { pt3dadd( -3.80613, 63.0042, 1.6405, 1.25 ) }
    dend_56 { pt3dadd( -3.50993, 63.5046, 1.47228, 1.11 ) }
    dend_56 { pt3dadd( -2.85311, 64.5365, 1.0426, 0.52 ) }
    dend_56 { pt3dadd( -2.37932, 65.3259, 0.68838, 0.52 ) }
    dend_56 { pt3dadd( -1.9885, 66.0417, 0.365706, 0.22 ) }
    dend_56 { pt3dadd( -1.58547, 66.8561, -0.00503683, 0.29 ) }
    dend_56 { pt3dadd( -1.24491, 67.605, -0.37448, 0.59 ) }
    dend_56 { pt3dadd( -0.951409, 68.3103, -0.779091, 1.11 ) }
    dend_56 { pt3dadd( -0.636152, 69.1235, -1.30986, 1.25 ) }
    dend_56 { pt3dadd( -0.278397, 70.0728, -2.02738, 0.96 ) }
    dend_56 { pt3dadd( -0.0112869, 70.7272, -2.65045, 0.29 ) }
    dend_56 { pt3dadd( 0.22854, 71.1796, -3.26525, 0.22 ) }
    dend_56 { pt3dadd( 0.44483, 71.4554, -3.89221, 0.22 ) }
    dend_56 { pt3dadd( 0.609794, 71.6124, -4.48482, 0.37 ) }
    dend_56 { pt3dadd( 0.779448, 71.7746, -5.37537, 0.59 ) }
    dend_56 { pt3dadd( 0.88317, 71.9442, -6.44415, 0.74 ) }
    dend_56 { pt3dadd( 0.934417, 72.1563, -7.57206, 0.96 ) }
    dend_56 { pt3dadd( 0.964403, 72.3644, -8.50312, 1.18 ) }
    dend_56 { pt3dadd( 0.999188, 72.6356, -9.54585, 1.18 ) }
    dend_56 { pt3dadd( 1.0518, 72.98, -10.7132, 1.25 ) }
    dend_56 { pt3dadd( 1.16587, 73.4258, -11.9369, 1.25 ) }
    dend_56 { pt3dadd( 1.33431, 73.8952, -12.901, 0.52 ) }
    dend_56 { pt3dadd( 1.51149, 74.2939, -13.528, 0.29 ) }
    dend_56 { pt3dadd( 1.789, 74.8252, -14.172, 0.29 ) }
    dend_56 { pt3dadd( 2.0152, 75.2099, -14.524, 0.66 ) }
    dend_56 { pt3dadd( 2.42449, 75.9445, -14.9863, 0.66 ) }
    dend_56 { pt3dadd( 2.89457, 76.9958, -15.4352, 0.52 ) }
    dend_56 { pt3dadd( 3.07735, 77.6748, -15.6274, 0.59 ) }
    dend_56 { pt3dadd( 3.17626, 78.4501, -15.7854, 0.74 ) }
    dend_56 { pt3dadd( 3.18883, 78.915, -15.8497, 0.74 ) }
    dend_56 { pt3dadd( 3.11113, 80.0244, -16.0118, 0.29 ) }
    dend_56 { pt3dadd( 2.99181, 80.8103, -16.1243, 0.29 ) }
    dend_56 { pt3dadd( 2.75981, 82.0111, -16.2854, 0.44 ) }
    dend_56 { pt3dadd( 2.6671, 82.4777, -16.348, 0.81 ) }
    dend_56 { pt3dadd( 2.55647, 83.1071, -16.4531, 0.81 ) }
    dend_56 { pt3dadd( 2.38429, 84.3554, -16.7365, 0.66 ) }
    dend_56 { pt3dadd( 2.3069, 85.4279, -17.0628, 0.66 ) }
    dend_56 { pt3dadd( 2.30542, 85.8658, -17.2164, 0.66 ) }
    dend_56 { pt3dadd( 2.33591, 86.7246, -17.5558, 0.44 ) }
    dend_56 { pt3dadd( 2.36392, 87.8429, -18.0244, 0.59 ) }
    dend_56 { pt3dadd( 2.36098, 88.619, -18.3465, 0.44 ) }
    dend_56 { pt3dadd( 2.3003, 89.6876, -18.7786, 0.52 ) }
    dend_56 { pt3dadd( 2.21092, 90.3596, -19.0595, 0.52 ) }
    dend_56 { pt3dadd( 2.06557, 91.0527, -19.3639, 0.44 ) }
    dend_56 { pt3dadd( 1.85259, 91.8387, -19.7391, 0.81 ) }
    dend_56 { pt3dadd( 1.57076, 92.7286, -20.1985, 1.03 ) }
    dend_56 { pt3dadd( 1.20826, 93.8, -20.8043, 0.66 ) }
    dend_56 { pt3dadd( 0.95771, 94.4994, -21.2316, 0.44 ) }
    dend_56 { pt3dadd( 0.755277, 95.1331, -21.6181, 0.29 ) }
    dend_56 { pt3dadd( 0.595768, 95.8129, -21.9759, 0.29 ) }
    dend_56 { pt3dadd( 0.523784, 96.2457, -22.1484, 0.29 ) }
    dend_56 { pt3dadd( 0.43801, 96.8769, -22.3629, 0.29 ) }
    dend_56 { pt3dadd( 0.37147, 97.4247, -22.5102, 0.44 ) }
    dend_56 { pt3dadd( 0.180359, 98.7362, -22.8325, 0.74 ) }
    dend_56 { pt3dadd( -0.123576, 100.4, -23.2361, 0.59 ) }
    dend_56 { pt3dadd( -0.42789, 101.725, -23.606, 0.44 ) }
    dend_56 { pt3dadd( -0.651535, 102.534, -23.8937, 0.44 ) }
    dend_56 { pt3dadd( -0.738492, 102.802, -24.0293, 0.59 ) }
    dend_56 { pt3dadd( -0.950777, 103.365, -24.4549, 0.59 ) }
    dend_56 { pt3dadd( -1.15664, 103.828, -24.9512, 0.59 ) }
    dend_56 { pt3dadd( -1.37899, 104.292, -25.6123, 0.59 ) }
    dend_56 { pt3dadd( -1.54811, 104.682, -26.2474, 0.74 ) }
    dend_56 { pt3dadd( -1.75291, 105.298, -27.2266, 0.96 ) }
    dend_56 { pt3dadd( -1.89528, 105.873, -28.0483, 1.18 ) }
    dend_56 { pt3dadd( -2.00059, 106.527, -28.8411, 0.59 ) }
    dend_56 { pt3dadd( -2.06521, 107.201, -29.5149, 0.59 ) }
    dend_56 { pt3dadd( -2.10973, 107.983, -30.1444, 0.59 ) }
    dend_56 { pt3dadd( -2.14137, 108.459, -30.4446, 0.29 ) }
    dend_56 { pt3dadd( -2.25039, 109.259, -30.8188, 0.22 ) }
    dend_56 { pt3dadd( -2.38677, 109.816, -31.0472, 0.22 ) }
    dend_56 { pt3dadd( -2.65211, 110.533, -31.3283, 0.22 ) }
    dend_56 { pt3dadd( -3.00997, 111.194, -31.6401, 0.22 ) }
    dend_56 { pt3dadd( -3.5722, 111.982, -32.102, 0.81 ) }
    dend_56 { pt3dadd( -4.27026, 112.795, -32.6728, 0.22 ) }
    dend_56 { pt3dadd( -4.8815, 113.436, -33.1845, 0.37 ) }
    dend_56 { pt3dadd( -5.52618, 114.046, -33.7313, 0.88 ) }
    dend_56 { pt3dadd( -6.78368, 115.111, -34.8163, 0.15 ) }
    dend_56 { pt3dadd( -7.44497, 115.63, -35.4132, 0.15 ) }
    dend_56 { pt3dadd( -7.76556, 115.87, -35.7349, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 96/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -4.58211, 38.2183, 15.0656, 0.81 ) }
    dend_49 { pt3dadd( -4.8118, 39.3807, 16.2498, 0.81 ) }
    dend_49 { pt3dadd( -5.01283, 40.4792, 17.2333, 0.81 ) }
    dend_49 { pt3dadd( -5.31127, 41.7255, 18.1986, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_49 { pt3dadd( -5.52541, 42.4499, 18.684, 0.59 ) }
    dend_49 { pt3dadd( -5.77761, 43.2261, 19.1623, 0.59 ) }
    dend_49 { pt3dadd( -6.02705, 43.9853, 19.588, 0.44 ) }
    dend_49 { pt3dadd( -6.22045, 44.6036, 19.8238, 0.44 ) }
    dend_49 { pt3dadd( -6.60327, 45.7741, 20.1719, 0.44 ) }
    dend_49 { pt3dadd( -6.88604, 46.6054, 20.4061, 0.74 ) }
    dend_49 { pt3dadd( -7.22458, 47.5887, 20.752, 1.11 ) }
    dend_49 { pt3dadd( -7.47305, 48.3193, 21.026, 1.11 ) }
    dend_49 { pt3dadd( -7.92146, 49.6907, 21.573, 0.52 ) }
    dend_49 { pt3dadd( -8.2273, 50.7743, 22.0217, 0.66 ) }
    dend_49 { pt3dadd( -8.45959, 51.7914, 22.4757, 0.96 ) }
    dend_49 { pt3dadd( -8.68044, 52.8563, 22.9779, 1.33 ) }
    dend_49 { pt3dadd( -8.98763, 54.2885, 23.6662, 1.77 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -170.916, -316.455, 55.8098, 0.29 ) }
    dend_40 { pt3dadd( -171.135, -317.803, 56.2539, 0.29 ) }
    dend_40 { pt3dadd( -171.459, -319.171, 56.6117, 0.66 ) }
    dend_40 { pt3dadd( -171.998, -321.064, 57.0026, 0.15 ) }
    dend_40 { pt3dadd( -172.332, -322.134, 57.174, 0.15 ) }
    dend_40 { pt3dadd( -172.604, -322.823, 57.2424, 0.59 ) }
    dend_40 { pt3dadd( -173.308, -324.228, 57.311, 0.07 ) }
    dend_40 { pt3dadd( -173.956, -325.096, 57.2613, 0.07 ) }
    dend_40 { pt3dadd( -174.386, -325.524, 57.193, 0.15 ) }
    dend_40 { pt3dadd( -174.889, -325.95, 57.0259, 0.37 ) }
    dend_40 { pt3dadd( -176.126, -326.952, 56.4723, 0.07 ) }
    dend_40 { pt3dadd( -177.006, -327.63, 56.014, 0.07 ) }
    dend_40 { pt3dadd( -177.452, -327.962, 55.764, 0.07 ) }
    dend_40 { pt3dadd( -177.976, -328.346, 55.4907, 0.81 ) }
    dend_40 { pt3dadd( -179.301, -329.36, 54.8008, 0.22 ) }
    dend_40 { pt3dadd( -180.097, -330.037, 54.3736, 0.44 ) }
    dend_40 { pt3dadd( -180.931, -330.926, 53.8844, 0.15 ) }
    dend_40 { pt3dadd( -181.354, -331.454, 53.604, 0.15 ) }
    dend_40 { pt3dadd( -181.641, -331.867, 53.3965, 0.44 ) }
    dend_40 { pt3dadd( -182.097, -332.548, 53.0764, 0.66 ) }
    dend_40 { pt3dadd( -182.9, -333.815, 52.5924, 0.15 ) }
    dend_40 { pt3dadd( -183.37, -334.655, 52.295, 0.15 ) }
    dend_40 { pt3dadd( -183.686, -335.394, 52.0261, 0.15 ) }
    dend_40 { pt3dadd( -183.982, -336.213, 51.6936, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 37/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -170.916, -316.455, 55.8098, 0.07 ) }
    dend_39 { pt3dadd( -172.332, -315.275, 56.1532, 0.07 ) }
    dend_39 { pt3dadd( -173.355, -314.415, 56.3485, 0.07 ) }
    dend_39 { pt3dadd( -174.311, -313.624, 56.5032, 0.07 ) }
    dend_39 { pt3dadd( -174.768, -313.239, 56.5652, 0.15 ) }
    dend_39 { pt3dadd( -175.582, -312.487, 56.6548, 0.07 ) }
    dend_39 { pt3dadd( -176.106, -311.947, 56.7006, 0.07 ) }
    dend_39 { pt3dadd( -176.545, -311.392, 56.6683, 0.22 ) }
    dend_39 { pt3dadd( -176.864, -310.931, 56.6811, 0.15 ) }
    dend_39 { pt3dadd( -177.052, -310.646, 56.7028, 0.15 ) }
    dend_39 { pt3dadd( -177.677, -309.74, 56.7836, 0.29 ) }
    dend_39 { pt3dadd( -178.229, -309.018, 56.8681, 0.07 ) }
    dend_39 { pt3dadd( -178.804, -308.345, 56.9662, 0.15 ) }
    dend_39 { pt3dadd( -180.122, -306.978, 57.1606, 0.07 ) }
    dend_39 { pt3dadd( -180.926, -306.314, 57.2693, 0.15 ) }
    dend_39 { pt3dadd( -181.607, -305.906, 57.3497, 0.15 ) }
    dend_39 { pt3dadd( -182.247, -305.66, 57.4133, 0.15 ) }
    dend_39 { pt3dadd( -182.919, -305.535, 57.4675, 0.15 ) }
    dend_39 { pt3dadd( -183.917, -305.449, 57.516, 0.15 ) }
    dend_39 { pt3dadd( -184.836, -305.485, 57.4992, 0.07 ) }
    dend_39 { pt3dadd( -185.721, -305.61, 57.5348, 0.07 ) }
    dend_39 { pt3dadd( -186.268, -305.728, 57.5813, 0.66 ) }
    dend_39 { pt3dadd( -187.312, -306.042, 57.666, 0.81 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 60/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -4.99593, -393.583, 39.5801, 0.15 ) }
    dend_29 { pt3dadd( -4.91337, -394.453, 38.8508, 0.15 ) }
    dend_29 { pt3dadd( -4.91007, -394.934, 38.5071, 0.15 ) }
    dend_29 { pt3dadd( -4.89971, -395.158, 38.3617, 0.15 ) }
    dend_29 { pt3dadd( -4.88436, -395.409, 38.1982, 0.52 ) }
    dend_29 { pt3dadd( -4.86257, -395.761, 37.9807, 0.81 ) }
    dend_29 { pt3dadd( -4.8252, -396.634, 37.4358, 0.22 ) }
    dend_29 { pt3dadd( -4.80248, -397.305, 37.0513, 0.22 ) }
    dend_29 { pt3dadd( -4.79839, -397.782, 36.789, 0.15 ) }
    dend_29 { pt3dadd( -4.78335, -398.186, 36.5662, 0.22 ) }
    dend_29 { pt3dadd( -4.73179, -398.7, 36.2676, 0.29 ) }
    dend_29 { pt3dadd( -4.63501, -399.221, 35.9433, 0.22 ) }
    dend_29 { pt3dadd( -4.54989, -399.535, 35.7312, 0.22 ) }
    dend_29 { pt3dadd( -4.45555, -399.889, 35.4805, 0.37 ) }
    dend_29 { pt3dadd( -4.34947, -400.364, 35.1322, 0.37 ) }
    dend_29 { pt3dadd( -4.21428, -400.993, 34.6763, 0.22 ) }
    dend_29 { pt3dadd( -4.14604, -401.247, 34.4758, 0.22 ) }
    dend_29 { pt3dadd( -4.02999, -401.625, 34.1559, 0.22 ) }
    dend_29 { pt3dadd( -3.97923, -401.814, 33.9848, 0.22 ) }
    dend_29 { pt3dadd( -3.93621, -402.093, 33.7229, 0.22 ) }
    dend_29 { pt3dadd( -3.90237, -402.381, 33.4588, 0.15 ) }
    dend_29 { pt3dadd( -3.81829, -402.953, 32.9605, 0.44 ) }
    dend_29 { pt3dadd( -3.71494, -403.636, 32.4115, 0.22 ) }
    dend_29 { pt3dadd( -3.66349, -404.044, 32.1194, 0.29 ) }
    dend_29 { pt3dadd( -3.56559, -404.89, 31.5573, 0.07 ) }
    dend_29 { pt3dadd( -3.50528, -405.431, 31.2237, 0.66 ) }
    dend_29 { pt3dadd( -3.42886, -406.189, 30.7978, 0.07 ) }
    dend_29 { pt3dadd( -3.38197, -406.707, 30.5358, 0.07 ) }
    dend_29 { pt3dadd( -3.30062, -407.298, 30.2354, 0.29 ) }
    dend_29 { pt3dadd( -3.18142, -407.926, 29.9057, 0.07 ) }
    dend_29 { pt3dadd( -3.11971, -408.223, 29.7437, 0.44 ) }
    dend_29 { pt3dadd( -3.09677, -408.383, 29.651, 0.44 ) }
    dend_29 { pt3dadd( -3.03359, -408.897, 29.3363, 0.74 ) }
    dend_29 { pt3dadd( -2.85868, -409.687, 28.7808, 0.07 ) }
    dend_29 { pt3dadd( -2.75407, -410.009, 28.5389, 0.22 ) }
    dend_29 { pt3dadd( -2.57493, -410.442, 28.216, 0.07 ) }
    dend_29 { pt3dadd( -2.42041, -410.822, 27.9341, 0.07 ) }
    dend_29 { pt3dadd( -2.27376, -411.166, 27.6853, 0.66 ) }
    dend_29 { pt3dadd( -1.79446, -412.104, 27.0405, 0.07 ) }
    dend_29 { pt3dadd( -1.51534, -412.496, 26.7794, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_29 { pt3dadd( -1.14342, -412.875, 26.4912, 0.29 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 1/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -4.99593, -393.583, 39.5801, 0.07 ) }
    dend_28 { pt3dadd( -3.53449, -394.041, 39.4627, 0.07 ) }
    dend_28 { pt3dadd( -2.85651, -394.224, 39.4005, 0.29 ) }
    dend_28 { pt3dadd( -2.02719, -394.429, 39.3185, 0.07 ) }
    dend_28 { pt3dadd( -1.33406, -394.585, 39.2465, 0.52 ) }
    dend_28 { pt3dadd( 0.543537, -394.897, 38.9699, 0.07 ) }
    dend_28 { pt3dadd( 1.63648, -395.018, 38.7615, 0.07 ) }
    dend_28 { pt3dadd( 2.0628, -395.04, 38.6686, 0.59 ) }
    dend_28 { pt3dadd( 2.64403, -395.044, 38.5218, 0.74 ) }
    dend_28 { pt3dadd( 3.20889, -395.01, 38.3638, 0.37 ) }
    dend_28 { pt3dadd( 4.6852, -394.815, 37.8831, 0.07 ) }
    dend_28 { pt3dadd( 5.40177, -394.627, 37.5648, 0.44 ) }
    // Section: dend_21, id: dend_21, parent: dend_13 (entry count 13/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.4346, -21.7719, -15.5117, 0.59 ) }
    dend_21 { pt3dadd( -13.8069, -22.5546, -17.5703, 0.59 ) }
    dend_21 { pt3dadd( -13.3851, -23.2093, -19.1696, 0.59 ) }
    dend_21 { pt3dadd( -12.8718, -24.1765, -21.4863, 0.52 ) }
    dend_21 { pt3dadd( -12.5587, -24.8917, -23.3369, 0.52 ) }
    dend_21 { pt3dadd( -12.3698, -25.3667, -24.6817, 0.52 ) }
    dend_21 { pt3dadd( -12.2807, -25.5685, -25.3663, 0.52 ) }
    dend_21 { pt3dadd( -12.1371, -25.784, -26.6318, 0.52 ) }
    dend_21 { pt3dadd( -12.0565, -25.8198, -27.2168, 0.52 ) }
    dend_21 { pt3dadd( -11.7447, -25.7467, -28.59, 0.66 ) }
    dend_21 { pt3dadd( -11.5401, -25.6896, -29.0903, 0.66 ) }
    dend_21 { pt3dadd( -10.7393, -25.6154, -30.4492, 0.29 ) }
    dend_21 { pt3dadd( -9.80803, -25.7152, -31.6999, 0.88 ) }
    dend_21 { pt3dadd( -8.91482, -26.0736, -32.6066, 0.37 ) }
    dend_21 { pt3dadd( -8.02809, -26.6441, -33.3687, 0.29 ) }
    dend_21 { pt3dadd( -7.22617, -27.2483, -33.9441, 0.29 ) }
    dend_21 { pt3dadd( -6.61959, -27.7386, -34.3248, 0.29 ) }
    dend_21 { pt3dadd( -6.21091, -28.0875, -34.5334, 0.44 ) }
    dend_21 { pt3dadd( -5.30669, -28.7573, -34.9302, 0.52 ) }
    dend_21 { pt3dadd( -4.32795, -29.263, -35.2825, 0.15 ) }
    dend_21 { pt3dadd( -3.42101, -29.5486, -35.5238, 0.15 ) }
    dend_21 { pt3dadd( -2.32563, -29.7495, -35.7304, 0.15 ) }
    dend_21 { pt3dadd( -1.47533, -29.8122, -35.8525, 0.15 ) }
    dend_21 { pt3dadd( -0.406812, -29.7885, -36.0358, 0.15 ) }
    dend_21 { pt3dadd( 0.934698, -29.644, -36.284, 0.15 ) }
    dend_21 { pt3dadd( 2.43295, -29.4513, -36.5529, 0.29 ) }
    dend_21 { pt3dadd( 3.33434, -29.3284, -36.7261, 0.15 ) }
    dend_21 { pt3dadd( 4.7942, -29.0781, -37.0239, 0.22 ) }
    dend_21 { pt3dadd( 6.70677, -28.6684, -37.4559, 0.07 ) }
    dend_21 { pt3dadd( 7.49197, -28.4778, -37.6576, 0.29 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 43/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -14.4346, -21.7719, -15.5117, 0.88 ) }
    dend_14 { pt3dadd( -14.9676, -23.1739, -16.1999, 0.88 ) }
    dend_14 { pt3dadd( -15.4723, -24.4737, -17.0719, 0.74 ) }
    dend_14 { pt3dadd( -15.917, -25.6187, -17.84, 0.88 ) }
    dend_14 { pt3dadd( -16.5697, -27.2997, -18.9678, 0.88 ) }
    dend_14 { pt3dadd( -17.1048, -28.6776, -19.8921, 0.96 ) }
    dend_14 { pt3dadd( -17.6893, -30.1828, -20.902, 0.96 ) }
    dend_14 { pt3dadd( -18.0587, -30.9885, -21.7243, 0.96 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 51/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -12.4845, -1.32271, -11.01, 0.81 ) }
    dend_12 { pt3dadd( -13.9058, -1.31788, -10.7393, 0.81 ) }
    dend_12 { pt3dadd( -14.9318, -1.28406, -10.4246, 0.44 ) }
    dend_12 { pt3dadd( -15.5724, -1.20647, -10.1154, 0.44 ) }
    dend_12 { pt3dadd( -16.3422, -1.01358, -9.58778, 0.66 ) }
    dend_12 { pt3dadd( -16.8413, -0.828899, -9.16985, 0.74 ) }
    dend_12 { pt3dadd( -17.5121, -0.517328, -8.55082, 0.44 ) }
    dend_12 { pt3dadd( -18.1448, -0.122261, -7.84472, 0.59 ) }
    dend_12 { pt3dadd( -18.9181, 0.461204, -6.91714, 0.59 ) }
    dend_12 { pt3dadd( -19.6459, 1.10075, -6.02713, 0.59 ) }
    dend_12 { pt3dadd( -20.241, 1.6708, -5.28622, 0.59 ) }
    dend_12 { pt3dadd( -20.8976, 2.27975, -4.49584, 0.81 ) }
    dend_12 { pt3dadd( -21.3914, 2.67066, -3.96061, 0.66 ) }
    dend_12 { pt3dadd( -21.8126, 2.91942, -3.5663, 0.88 ) }
    dend_12 { pt3dadd( -22.7607, 3.31962, -2.75574, 0.37 ) }
    dend_12 { pt3dadd( -23.2955, 3.49441, -2.29806, 0.44 ) }
    dend_12 { pt3dadd( -24.0173, 3.70308, -1.648, 0.59 ) }
    dend_12 { pt3dadd( -24.8414, 3.95157, -0.856739, 0.44 ) }
    dend_12 { pt3dadd( -25.57, 4.2323, -0.121183, 0.44 ) }
    dend_12 { pt3dadd( -26.2145, 4.58655, 0.518334, 0.44 ) }
    dend_12 { pt3dadd( -26.8273, 5.04178, 1.08498, 0.66 ) }
    dend_12 { pt3dadd( -27.3494, 5.52708, 1.5024, 0.81 ) }
    dend_12 { pt3dadd( -27.7809, 5.99587, 1.80556, 0.81 ) }
    dend_12 { pt3dadd( -28.4711, 6.76742, 2.21838, 0.66 ) }
    dend_12 { pt3dadd( -29.387, 7.7591, 2.63788, 0.59 ) }
    dend_12 { pt3dadd( -30.1541, 8.50454, 2.85236, 0.59 ) }
    dend_12 { pt3dadd( -31.1914, 9.36279, 2.98896, 0.74 ) }
    dend_12 { pt3dadd( -31.5957, 9.64097, 3.00256, 0.52 ) }
    dend_12 { pt3dadd( -32.4312, 10.1052, 2.98122, 0.22 ) }
    dend_12 { pt3dadd( -33.2778, 10.4752, 2.91419, 0.22 ) }
    dend_12 { pt3dadd( -34.138, 10.8043, 2.79746, 0.22 ) }
    dend_12 { pt3dadd( -34.7022, 11.02, 2.70598, 0.37 ) }
    dend_12 { pt3dadd( -35.3521, 11.2769, 2.60132, 0.81 ) }
    dend_12 { pt3dadd( -35.9742, 11.535, 2.51159, 0.81 ) }
    dend_12 { pt3dadd( -36.7932, 11.9112, 2.41555, 0.59 ) }
    dend_12 { pt3dadd( -37.7295, 12.3677, 2.35526, 0.37 ) }
    dend_12 { pt3dadd( -38.4805, 12.7637, 2.32517, 0.29 ) }
    dend_12 { pt3dadd( -39.2246, 13.1949, 2.27156, 0.37 ) }
    dend_12 { pt3dadd( -39.7091, 13.5085, 2.19328, 0.29 ) }
    dend_12 { pt3dadd( -40.4872, 14.053, 2.01801, 0.29 ) }
    dend_12 { pt3dadd( -41.2109, 14.591, 1.82756, 0.81 ) }
    dend_12 { pt3dadd( -41.9708, 15.1682, 1.60587, 0.52 ) }
    dend_12 { pt3dadd( -42.6177, 15.6768, 1.37823, 0.52 ) }
    dend_12 { pt3dadd( -43.5855, 16.4714, 0.99028, 0.37 ) }
    dend_12 { pt3dadd( -44.1291, 16.9498, 0.727143, 0.66 ) }
    dend_12 { pt3dadd( -44.6847, 17.4678, 0.397601, 0.66 ) }
    dend_12 { pt3dadd( -45.5007, 18.2585, -0.170309, 0.44 ) }
    dend_12 { pt3dadd( -46.3504, 19.0845, -0.816811, 0.81 ) }
    dend_12 { pt3dadd( -46.7348, 19.4524, -1.11273, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_12 { pt3dadd( -47.3707, 20.0464, -1.6223, 0.37 ) }
    dend_12 { pt3dadd( -47.8635, 20.4643, -2.06586, 0.22 ) }
    dend_12 { pt3dadd( -48.3783, 20.7747, -2.53561, 0.22 ) }
    dend_12 { pt3dadd( -48.8103, 20.8919, -2.93199, 0.22 ) }
    dend_12 { pt3dadd( -49.1907, 20.9036, -3.25857, 0.81 ) }
    dend_12 { pt3dadd( -49.4796, 20.8861, -3.49777, 1.03 ) }
    dend_12 { pt3dadd( -50.1897, 20.7894, -4.0635, 0.66 ) }
    dend_12 { pt3dadd( -51.1869, 20.6234, -4.83077, 0.29 ) }
    dend_12 { pt3dadd( -52.4829, 20.4406, -5.84052, 0.29 ) }
    dend_12 { pt3dadd( -53.1992, 20.3902, -6.40816, 0.22 ) }
    dend_12 { pt3dadd( -53.7263, 20.4093, -6.84687, 0.22 ) }
    dend_12 { pt3dadd( -54.0242, 20.4575, -7.10518, 0.22 ) }
    dend_12 { pt3dadd( -54.4737, 20.6234, -7.51654, 0.22 ) }
    dend_12 { pt3dadd( -54.9233, 20.9008, -7.95217, 0.22 ) }
    dend_12 { pt3dadd( -55.2532, 21.1644, -8.27267, 0.22 ) }
    dend_12 { pt3dadd( -55.8387, 21.6322, -8.8692, 0.22 ) }
    dend_12 { pt3dadd( -56.1806, 21.9192, -9.23102, 0.66 ) }
    dend_12 { pt3dadd( -56.8072, 22.4759, -9.92508, 0.66 ) }
    dend_12 { pt3dadd( -57.3929, 23.0051, -10.606, 0.15 ) }
    dend_12 { pt3dadd( -57.9632, 23.4749, -11.2515, 0.15 ) }
    dend_12 { pt3dadd( -58.7414, 24.0583, -12.1114, 0.74 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 21/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -12.4845, -1.32271, -11.01, 1.55 ) }
    dend_3 { pt3dadd( -12.9435, -3.1451, -11.6931, 1.55 ) }
    dend_3 { pt3dadd( -13.3809, -4.53823, -12.2121, 1.4 ) }
    dend_3 { pt3dadd( -13.8558, -5.7361, -12.6183, 1.33 ) }
    dend_3 { pt3dadd( -14.4835, -7.05941, -12.9846, 0.96 ) }
    dend_3 { pt3dadd( -15.093, -8.18662, -13.21, 0.88 ) }
    dend_3 { pt3dadd( -15.7129, -9.23183, -13.336, 1.4 ) }
    dend_3 { pt3dadd( -16.3185, -10.0504, -13.3383, 1.47 ) }
    dend_3 { pt3dadd( -17.5107, -11.4371, -13.186, 1.03 ) }
    dend_3 { pt3dadd( -18.6462, -12.6079, -12.9772, 0.96 ) }
    dend_3 { pt3dadd( -19.9247, -13.8595, -12.6908, 1.03 ) }
    dend_3 { pt3dadd( -21.0281, -14.9682, -12.4166, 1.03 ) }
    dend_3 { pt3dadd( -22.2122, -16.2203, -12.1153, 1.11 ) }
    dend_3 { pt3dadd( -23.029, -17.1407, -11.946, 0.88 ) }
    dend_3 { pt3dadd( -24.0512, -18.3945, -11.8077, 0.88 ) }
    dend_3 { pt3dadd( -24.7391, -19.3176, -11.8013, 1.11 ) }
    dend_3 { pt3dadd( -25.6387, -20.6451, -11.9202, 1.11 ) }
    dend_3 { pt3dadd( -26.3487, -21.8236, -12.0983, 0.96 ) }
    dend_3 { pt3dadd( -27.1233, -23.3157, -12.3649, 1.03 ) }
    dend_3 { pt3dadd( -27.5785, -24.2998, -12.5589, 1.11 ) }
    dend_3 { pt3dadd( -28.2375, -25.7958, -12.7981, 0.96 ) }
    dend_3 { pt3dadd( -28.7237, -26.8434, -12.9462, 0.88 ) }
    dend_3 { pt3dadd( -28.9702, -27.338, -13.0058, 0.81 ) }
    dend_3 { pt3dadd( -29.4859, -28.3397, -13.1123, 0.74 ) }
    dend_3 { pt3dadd( -30.0198, -29.3371, -13.2116, 0.88 ) }
    dend_3 { pt3dadd( -30.8267, -30.732, -13.3555, 1.03 ) }
    dend_3 { pt3dadd( -31.3431, -31.5168, -13.4156, 1.25 ) }
    dend_3 { pt3dadd( -32.3518, -32.8528, -13.4864, 1.25 ) }
    dend_3 { pt3dadd( -33.4059, -34.1031, -13.5245, 1.18 ) }
    dend_3 { pt3dadd( -34.4391, -35.2679, -13.5663, 1.11 ) }
    dend_3 { pt3dadd( -35.4473, -36.3651, -13.6152, 1.03 ) }
    dend_3 { pt3dadd( -36.9381, -37.9603, -13.7184, 0.96 ) }
    dend_3 { pt3dadd( -37.9594, -38.9929, -13.7347, 0.96 ) }
    dend_3 { pt3dadd( -38.7112, -39.6668, -13.6852, 1.25 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -8.98763, 54.2885, 23.6662, 0.29 ) }
    dend_51 { pt3dadd( -9.83054, 55.553, 24.7607, 0.29 ) }
    dend_51 { pt3dadd( -10.4189, 56.4215, 25.5003, 0.22 ) }
    dend_51 { pt3dadd( -10.8993, 57.1182, 26.0931, 0.22 ) }
    dend_51 { pt3dadd( -11.1414, 57.4915, 26.4126, 0.22 ) }
    dend_51 { pt3dadd( -11.3346, 57.8128, 26.6972, 0.59 ) }
    dend_51 { pt3dadd( -11.6325, 58.3488, 27.1942, 1.03 ) }
    dend_51 { pt3dadd( -11.8774, 58.9195, 27.762, 1.33 ) }
    dend_51 { pt3dadd( -12.2166, 59.8193, 28.599, 0.59 ) }
    dend_51 { pt3dadd( -12.4409, 60.4428, 29.1385, 0.22 ) }
    dend_51 { pt3dadd( -12.6224, 61.0907, 29.5864, 0.22 ) }
    dend_51 { pt3dadd( -12.7871, 61.9556, 30.0491, 0.22 ) }
    dend_51 { pt3dadd( -12.8615, 62.5801, 30.2986, 0.74 ) }
    dend_51 { pt3dadd( -12.908, 63.4894, 30.5331, 1.84 ) }
    dend_51 { pt3dadd( -12.9175, 64.2508, 30.6463, 1.84 ) }
    dend_51 { pt3dadd( -12.9162, 66.6375, 30.7781, 0.22 ) }
    dend_51 { pt3dadd( -12.8901, 68.0375, 30.7495, 0.22 ) }
    dend_51 { pt3dadd( -12.8429, 68.8076, 30.7043, 0.22 ) }
    dend_51 { pt3dadd( -12.6658, 70.3532, 30.6317, 0.22 ) }
    dend_51 { pt3dadd( -12.6, 70.7399, 30.6198, 0.44 ) }
    dend_51 { pt3dadd( -12.4197, 71.5417, 30.6078, 1.18 ) }
    dend_51 { pt3dadd( -12.0873, 72.7373, 30.6267, 1.7 ) }
    dend_51 { pt3dadd( -11.4983, 74.7732, 30.7213, 0.15 ) }
    dend_51 { pt3dadd( -11.1341, 76.0778, 30.821, 0.15 ) }
    dend_51 { pt3dadd( -11.0234, 76.5046, 30.8802, 0.74 ) }
    dend_51 { pt3dadd( -10.8289, 77.3263, 31.0154, 1.7 ) }
    dend_51 { pt3dadd( -10.7998, 77.4655, 31.0422, 1.7 ) }
    dend_51 { pt3dadd( -10.5901, 78.961, 31.3132, 0.15 ) }
    dend_51 { pt3dadd( -10.5693, 79.5319, 31.3892, 0.15 ) }
    dend_51 { pt3dadd( -10.5973, 80.4455, 31.4635, 0.15 ) }
    dend_51 { pt3dadd( -10.6727, 81.2954, 31.4994, 0.29 ) }
    dend_51 { pt3dadd( -10.7329, 81.6749, 31.5025, 0.29 ) }
    dend_51 { pt3dadd( -10.9858, 82.949, 31.4664, 0.07 ) }
    dend_51 { pt3dadd( -11.1145, 83.529, 31.4304, 0.22 ) }
    dend_51 { pt3dadd( -11.2401, 84.0857, 31.3672, 0.66 ) }
    dend_51 { pt3dadd( -11.5315, 85.3474, 31.17, 0.96 ) }
    dend_51 { pt3dadd( -11.7683, 86.436, 30.9721, 0.22 ) }
    dend_51 { pt3dadd( -12.0253, 87.7712, 30.6965, 0.66 ) }
    dend_51 { pt3dadd( -12.1873, 88.8096, 30.4933, 0.44 ) }
    dend_51 { pt3dadd( -12.2719, 89.5112, 30.3694, 0.74 ) }
    dend_51 { pt3dadd( -12.3373, 90.2593, 30.2666, 1.55 ) }
    dend_51 { pt3dadd( -12.3737, 91.2106, 30.1937, 1.84 ) }
    dend_51 { pt3dadd( -12.3885, 93.1939, 30.2353, 0.22 ) }
    dend_51 { pt3dadd( -12.384, 94.2717, 30.4057, 0.22 ) }
    dend_51 { pt3dadd( -12.3805, 94.6382, 30.5159, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_51 { pt3dadd( -12.388, 95.3666, 30.8342, 1.25 ) }
    dend_51 { pt3dadd( -12.4241, 96.1669, 31.2545, 1.62 ) }
    dend_51 { pt3dadd( -12.5472, 97.7337, 32.1705, 0.22 ) }
    dend_51 { pt3dadd( -12.6269, 98.5221, 32.6556, 0.22 ) }
    dend_51 { pt3dadd( -12.7929, 99.7276, 33.3381, 1.03 ) }
    dend_51 { pt3dadd( -13.1065, 101.603, 34.2255, 0.15 ) }
    dend_51 { pt3dadd( -13.3439, 102.806, 34.6549, 0.15 ) }
    dend_51 { pt3dadd( -13.4763, 103.406, 34.795, 0.52 ) }
    dend_51 { pt3dadd( -13.6021, 103.941, 34.8416, 1.03 ) }
    dend_51 { pt3dadd( -13.8613, 105.019, 34.7985, 1.18 ) }
    dend_51 { pt3dadd( -14.2567, 106.518, 34.5585, 0.22 ) }
    dend_51 { pt3dadd( -14.4669, 107.234, 34.3609, 0.22 ) }
    dend_51 { pt3dadd( -14.7138, 107.974, 34.1299, 0.22 ) }
    dend_51 { pt3dadd( -15.133, 109.094, 33.7527, 0.22 ) }
    dend_51 { pt3dadd( -15.3424, 109.596, 33.5698, 0.74 ) }
    dend_51 { pt3dadd( -15.7803, 110.541, 33.2116, 1.77 ) }
    dend_51 { pt3dadd( -16.3814, 111.711, 32.747, 0.22 ) }
    dend_51 { pt3dadd( -16.7881, 112.446, 32.4196, 0.22 ) }
    dend_51 { pt3dadd( -17.132, 113.012, 32.1248, 0.22 ) }
    dend_51 { pt3dadd( -17.3473, 113.35, 31.9243, 0.22 ) }
    dend_51 { pt3dadd( -17.8245, 114.135, 31.4653, 0.07 ) }
    dend_51 { pt3dadd( -18.2309, 114.914, 31.0451, 0.07 ) }
    dend_51 { pt3dadd( -18.4922, 115.48, 30.7787, 0.07 ) }
    dend_51 { pt3dadd( -18.7887, 116.175, 30.4991, 0.37 ) }
    dend_51 { pt3dadd( -19.1173, 116.98, 30.2431, 1.03 ) }
    dend_51 { pt3dadd( -19.6471, 118.315, 29.9127, 0.52 ) }
    dend_51 { pt3dadd( -20.2723, 119.922, 29.6571, 0.15 ) }
    dend_51 { pt3dadd( -20.5748, 120.733, 29.5962, 0.29 ) }
    dend_51 { pt3dadd( -20.7892, 121.326, 29.5858, 0.96 ) }
    dend_51 { pt3dadd( -21.0666, 122.1, 29.6036, 1.11 ) }
    dend_51 { pt3dadd( -21.4066, 123.025, 29.6564, 0.22 ) }
    dend_51 { pt3dadd( -21.8203, 124.123, 29.7637, 0.22 ) }
    dend_51 { pt3dadd( -22.111, 124.836, 29.8815, 0.37 ) }
    dend_51 { pt3dadd( -22.3994, 125.509, 30.0093, 0.96 ) }
    dend_51 { pt3dadd( -22.6753, 126.091, 30.1397, 0.96 ) }
    dend_51 { pt3dadd( -23.102, 126.877, 30.3308, 0.15 ) }
    dend_51 { pt3dadd( -23.6516, 127.756, 30.5274, 0.22 ) }
    dend_51 { pt3dadd( -24.2714, 128.635, 30.7085, 0.37 ) }
    dend_51 { pt3dadd( -24.942, 129.501, 30.8868, 0.74 ) }
    dend_51 { pt3dadd( -25.7885, 130.517, 31.0888, 0.22 ) }
    dend_51 { pt3dadd( -26.8742, 131.738, 31.3142, 0.66 ) }
    dend_51 { pt3dadd( -27.7703, 132.697, 31.4969, 0.07 ) }
    dend_51 { pt3dadd( -28.1142, 133.061, 31.5712, 0.07 ) }
    dend_51 { pt3dadd( -28.5426, 133.533, 31.6515, 0.15 ) }
    dend_51 { pt3dadd( -29.0243, 134.094, 31.7207, 0.81 ) }
    dend_51 { pt3dadd( -29.5229, 134.722, 31.7698, 1.25 ) }
    dend_51 { pt3dadd( -30.3012, 135.767, 31.8346, 0.37 ) }
    dend_51 { pt3dadd( -31.1387, 136.953, 31.8819, 0.22 ) }
    dend_51 { pt3dadd( -31.9288, 138.093, 31.8889, 0.37 ) }
    dend_51 { pt3dadd( -32.7207, 139.254, 31.8643, 0.88 ) }
    dend_51 { pt3dadd( -33.1399, 139.88, 31.8357, 0.37 ) }
    dend_51 { pt3dadd( -33.7026, 140.739, 31.7897, 0.15 ) }
    dend_51 { pt3dadd( -34.2352, 141.56, 31.7404, 0.15 ) }
    dend_51 { pt3dadd( -34.6635, 142.245, 31.7312, 0.37 ) }
    dend_51 { pt3dadd( -35.1268, 143.03, 31.8055, 0.74 ) }
    dend_51 { pt3dadd( -35.5254, 143.734, 31.9208, 0.29 ) }
    dend_51 { pt3dadd( -36.1772, 144.935, 32.1895, 0.15 ) }
    dend_51 { pt3dadd( -36.3744, 145.327, 32.3046, 0.44 ) }
    dend_51 { pt3dadd( -36.8289, 146.28, 32.6401, 1.03 ) }
    dend_51 { pt3dadd( -37.3145, 147.341, 33.0441, 0.44 ) }
    dend_51 { pt3dadd( -37.7361, 148.269, 33.4278, 0.15 ) }
    dend_51 { pt3dadd( -38.2114, 149.317, 33.8737, 0.74 ) }
    dend_51 { pt3dadd( -38.8441, 150.792, 34.4651, 0.15 ) }
    dend_51 { pt3dadd( -39.101, 151.452, 34.7167, 0.22 ) }
    dend_51 { pt3dadd( -39.3272, 152.118, 34.9588, 0.81 ) }
    dend_51 { pt3dadd( -39.4727, 152.657, 35.1389, 0.81 ) }
    dend_51 { pt3dadd( -39.6956, 153.614, 35.44, 0.22 ) }
    dend_51 { pt3dadd( -39.9893, 154.981, 35.8184, 0.15 ) }
    dend_51 { pt3dadd( -40.1785, 155.925, 36.071, 0.22 ) }
    dend_51 { pt3dadd( -40.3078, 156.61, 36.2506, 0.37 ) }
    dend_51 { pt3dadd( -40.5442, 157.917, 36.5903, 0.96 ) }
    dend_51 { pt3dadd( -40.8438, 159.552, 36.9891, 0.15 ) }
    dend_51 { pt3dadd( -40.9924, 160.303, 37.1482, 0.15 ) }
    dend_51 { pt3dadd( -41.1402, 160.939, 37.259, 0.15 ) }
    dend_51 { pt3dadd( -41.345, 161.689, 37.3453, 0.66 ) }
    dend_51 { pt3dadd( -41.4789, 162.132, 37.3715, 0.66 ) }
    dend_51 { pt3dadd( -41.8552, 163.259, 37.3675, 0.07 ) }
    dend_51 { pt3dadd( -42.1586, 164.167, 37.359, 0.07 ) }
    dend_51 { pt3dadd( -42.2881, 164.534, 37.3674, 0.44 ) }
    dend_51 { pt3dadd( -42.4571, 164.996, 37.3909, 0.74 ) }
    dend_51 { pt3dadd( -42.6554, 165.515, 37.4413, 0.96 ) }
    dend_51 { pt3dadd( -42.8683, 166.058, 37.5247, 0.96 ) }
    dend_51 { pt3dadd( -43.396, 167.374, 37.796, 0.15 ) }
    dend_51 { pt3dadd( -43.7743, 168.309, 38.0232, 0.15 ) }
    dend_51 { pt3dadd( -44.226, 169.387, 38.284, 0.15 ) }
    dend_51 { pt3dadd( -44.4706, 169.951, 38.4081, 0.15 ) }
    dend_51 { pt3dadd( -44.7269, 170.502, 38.5119, 0.15 ) }
    dend_51 { pt3dadd( -44.9947, 171.012, 38.5847, 0.37 ) }
    dend_51 { pt3dadd( -45.294, 171.493, 38.6503, 0.81 ) }
    dend_51 { pt3dadd( -45.7049, 172.048, 38.7416, 1.03 ) }
    dend_51 { pt3dadd( -46.3, 172.772, 38.899, 0.37 ) }
    dend_51 { pt3dadd( -46.9736, 173.534, 39.089, 0.15 ) }
    dend_51 { pt3dadd( -47.8276, 174.447, 39.3584, 0.29 ) }
    dend_51 { pt3dadd( -49.0512, 175.648, 39.7862, 0.29 ) }
    dend_51 { pt3dadd( -49.9801, 176.491, 40.139, 0.15 ) }
    dend_51 { pt3dadd( -50.6012, 177.027, 40.3912, 0.29 ) }
    dend_51 { pt3dadd( -51.3334, 177.63, 40.7083, 0.88 ) }
    dend_51 { pt3dadd( -52.2633, 178.362, 41.1276, 0.15 ) }
    dend_51 { pt3dadd( -53.1493, 179.04, 41.5392, 0.15 ) }
    dend_51 { pt3dadd( -53.9039, 179.601, 41.8734, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_51 { pt3dadd( -54.7465, 180.232, 42.252, 0.96 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 1/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -8.98763, 54.2885, 23.6662, 0.22 ) }
    dend_50 { pt3dadd( -8.04733, 55.4089, 24.2516, 0.22 ) }
    dend_50 { pt3dadd( -7.42994, 56.1921, 24.574, 0.15 ) }
    dend_50 { pt3dadd( -6.8451, 56.9767, 24.8904, 0.22 ) }
    dend_50 { pt3dadd( -6.36217, 57.6584, 25.1813, 0.15 ) }
    dend_50 { pt3dadd( -5.96001, 58.2403, 25.4385, 0.37 ) }
    dend_50 { pt3dadd( -5.75196, 58.5663, 25.5887, 0.37 ) }
    dend_50 { pt3dadd( -5.19757, 59.5383, 26.0532, 0.15 ) }
    dend_50 { pt3dadd( -4.7089, 60.486, 26.5093, 0.15 ) }
    dend_50 { pt3dadd( -4.42479, 61.0748, 26.8058, 0.66 ) }
    dend_50 { pt3dadd( -4.01942, 61.9258, 27.2467, 1.03 ) }
    dend_50 { pt3dadd( -3.45895, 63.0834, 27.8806, 0.15 ) }
    dend_50 { pt3dadd( -3.16514, 63.6707, 28.2046, 0.15 ) }
    dend_50 { pt3dadd( -2.81834, 64.3434, 28.5702, 0.15 ) }
    dend_50 { pt3dadd( -2.43848, 65.063, 28.9158, 0.59 ) }
    dend_50 { pt3dadd( -1.96061, 65.971, 29.3146, 0.07 ) }
    dend_50 { pt3dadd( -1.64158, 66.5984, 29.5676, 0.07 ) }
    dend_50 { pt3dadd( -1.33254, 67.2149, 29.7801, 0.66 ) }
    dend_50 { pt3dadd( -1.21725, 67.4705, 29.8548, 0.66 ) }
    dend_50 { pt3dadd( -0.962233, 68.1334, 30.0492, 0.15 ) }
    dend_50 { pt3dadd( -0.747513, 68.8139, 30.2391, 0.15 ) }
    dend_50 { pt3dadd( -0.646053, 69.1877, 30.3381, 0.52 ) }
    dend_50 { pt3dadd( -0.467814, 69.8654, 30.499, 1.55 ) }
    dend_50 { pt3dadd( -0.32509, 70.4006, 30.6405, 1.77 ) }
    dend_50 { pt3dadd( 0.0216875, 71.6686, 30.9979, 0.74 ) }
    dend_50 { pt3dadd( 0.311792, 72.6946, 31.3291, 0.15 ) }
    dend_50 { pt3dadd( 0.490286, 73.3124, 31.5463, 0.15 ) }
    dend_50 { pt3dadd( 0.654409, 73.9128, 31.7842, 0.22 ) }
    dend_50 { pt3dadd( 0.809946, 74.6191, 32.1012, 0.22 ) }
    dend_50 { pt3dadd( 0.937283, 75.3249, 32.4531, 0.37 ) }
    dend_50 { pt3dadd( 1.05302, 76.1305, 32.8883, 0.52 ) }
    dend_50 { pt3dadd( 1.11147, 76.6304, 33.1793, 1.47 ) }
    dend_50 { pt3dadd( 1.18401, 77.3058, 33.6268, 2.06 ) }
    dend_50 { pt3dadd( 1.34145, 78.6674, 34.5887, 0.29 ) }
    dend_50 { pt3dadd( 1.41707, 79.2448, 35.0017, 0.29 ) }
    dend_50 { pt3dadd( 1.55222, 80.1909, 35.6997, 0.74 ) }
    dend_50 { pt3dadd( 1.69243, 81.0376, 36.2995, 0.22 ) }
    dend_50 { pt3dadd( 1.94791, 82.2703, 37.1377, 0.29 ) }
    dend_50 { pt3dadd( 2.07172, 82.7699, 37.4547, 0.52 ) }
    dend_50 { pt3dadd( 2.16968, 83.1251, 37.6573, 0.22 ) }
    dend_50 { pt3dadd( 2.37662, 83.9919, 38.0352, 0.22 ) }
    dend_50 { pt3dadd( 2.54605, 84.8278, 38.3245, 0.22 ) }
    dend_50 { pt3dadd( 2.72988, 85.8637, 38.6102, 0.22 ) }
    dend_50 { pt3dadd( 2.79493, 86.3232, 38.7081, 0.44 ) }
    dend_50 { pt3dadd( 2.88541, 87.1563, 38.8764, 1.25 ) }
    dend_50 { pt3dadd( 3.05366, 89.0736, 39.2574, 0.07 ) }
    dend_50 { pt3dadd( 3.12586, 90.1409, 39.4552, 0.07 ) }
    dend_50 { pt3dadd( 3.14529, 90.6094, 39.5403, 0.22 ) }
    dend_50 { pt3dadd( 3.16125, 91.3083, 39.6567, 0.96 ) }
    dend_50 { pt3dadd( 3.16422, 92.0168, 39.7736, 0.29 ) }
    dend_50 { pt3dadd( 3.15556, 93.1867, 39.9574, 0.07 ) }
    dend_50 { pt3dadd( 3.14558, 93.8843, 40.0741, 0.07 ) }
    dend_50 { pt3dadd( 3.13687, 94.2833, 40.1196, 0.15 ) }
    dend_50 { pt3dadd( 3.11965, 95.0008, 40.1739, 1.25 ) }
    dend_50 { pt3dadd( 3.07274, 97.5194, 40.289, 0.15 ) }
    dend_50 { pt3dadd( 3.06574, 97.9141, 40.298, 0.44 ) }
    dend_50 { pt3dadd( 3.05197, 98.6847, 40.2963, 0.96 ) }
    dend_50 { pt3dadd( 3.02973, 99.9902, 40.3001, 1.18 ) }
    dend_50 { pt3dadd( 3.00103, 101.718, 40.3131, 0.07 ) }
    dend_50 { pt3dadd( 2.99281, 102.309, 40.3175, 0.22 ) }
    dend_50 { pt3dadd( 2.99574, 103.196, 40.3371, 0.88 ) }
    dend_50 { pt3dadd( 3.00351, 103.91, 40.369, 0.44 ) }
    dend_50 { pt3dadd( 3.02788, 104.793, 40.4308, 0.15 ) }
    dend_50 { pt3dadd( 3.05473, 105.57, 40.5148, 0.15 ) }
    dend_50 { pt3dadd( 3.07051, 106.054, 40.5641, 0.37 ) }
    dend_50 { pt3dadd( 3.09367, 107.291, 40.6695, 1.55 ) }
    dend_50 { pt3dadd( 3.11742, 109.287, 40.8151, 0.07 ) }
    dend_50 { pt3dadd( 3.11895, 110.184, 40.8694, 0.07 ) }
    dend_50 { pt3dadd( 3.11573, 110.833, 40.8941, 0.37 ) }
    dend_50 { pt3dadd( 3.10901, 111.325, 40.9176, 0.37 ) }
    dend_50 { pt3dadd( 3.08217, 112.468, 40.9701, 0.07 ) }
    dend_50 { pt3dadd( 3.06925, 112.758, 40.982, 0.29 ) }
    dend_50 { pt3dadd( 3.02351, 113.548, 41.0269, 1.18 ) }
    dend_50 { pt3dadd( 2.93273, 115.358, 41.1201, 0.07 ) }
    dend_50 { pt3dadd( 2.91048, 116.54, 41.1612, 0.07 ) }
    dend_50 { pt3dadd( 2.91617, 116.938, 41.1684, 0.07 ) }
    dend_50 { pt3dadd( 2.9357, 117.44, 41.1584, 0.37 ) }
    dend_50 { pt3dadd( 2.97184, 118.147, 41.1243, 0.96 ) }
    dend_50 { pt3dadd( 3.03149, 119.168, 41.0329, 0.07 ) }
    dend_50 { pt3dadd( 3.08536, 120.091, 40.8796, 0.29 ) }
    dend_50 { pt3dadd( 3.15781, 121.537, 40.5193, 0.07 ) }
    dend_50 { pt3dadd( 3.22782, 122.967, 40.0957, 0.07 ) }
    dend_50 { pt3dadd( 3.23806, 123.163, 40.0241, 0.44 ) }
    dend_50 { pt3dadd( 3.30778, 124.123, 39.5548, 1.18 ) }
    dend_50 { pt3dadd( 3.42875, 125.251, 38.8131, 0.15 ) }
    dend_50 { pt3dadd( 3.51867, 125.858, 38.2856, 0.15 ) }
    dend_50 { pt3dadd( 3.58377, 126.18, 37.9052, 0.59 ) }
    dend_50 { pt3dadd( 3.66704, 126.495, 37.4244, 0.59 ) }
    dend_50 { pt3dadd( 3.84887, 127.171, 36.2662, 0.22 ) }
    dend_50 { pt3dadd( 3.9531, 127.502, 35.6165, 0.22 ) }
    dend_50 { pt3dadd( 4.051, 127.78, 35.0681, 0.22 ) }
    dend_50 { pt3dadd( 4.125, 127.992, 34.6593, 0.22 ) }
    dend_50 { pt3dadd( 4.25613, 128.423, 33.8528, 0.37 ) }
    dend_50 { pt3dadd( 4.34471, 128.804, 33.1807, 1.03 ) }
    dend_50 { pt3dadd( 4.43014, 129.27, 32.4064, 0.74 ) }
    dend_50 { pt3dadd( 4.53719, 129.739, 31.6127, 0.22 ) }
    dend_50 { pt3dadd( 4.72112, 130.315, 30.6831, 0.22 ) }
    dend_50 { pt3dadd( 4.78023, 130.473, 30.4358, 0.22 ) }
    dend_50 { pt3dadd( 4.92139, 130.82, 29.8765, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_50 { pt3dadd( 5.02981, 131.08, 29.4312, 0.22 ) }
    dend_50 { pt3dadd( 5.17833, 131.484, 28.746, 0.22 ) }
    dend_50 { pt3dadd( 5.30003, 131.856, 28.0967, 0.88 ) }
    dend_50 { pt3dadd( 5.50713, 132.499, 26.9439, 0.15 ) }
    dend_50 { pt3dadd( 5.6755, 133.029, 25.9594, 0.15 ) }
    dend_50 { pt3dadd( 5.82316, 133.524, 25.0819, 0.15 ) }
    dend_50 { pt3dadd( 5.97695, 134.11, 24.1065, 0.74 ) }
    dend_50 { pt3dadd( 6.15002, 134.81, 22.964, 0.44 ) }
    dend_50 { pt3dadd( 6.28883, 135.354, 22.0863, 0.44 ) }
    dend_50 { pt3dadd( 6.42119, 135.802, 21.4065, 0.44 ) }
    dend_50 { pt3dadd( 6.55632, 136.286, 20.7214, 0.74 ) }
    dend_50 { pt3dadd( 6.69282, 136.943, 19.8459, 0.22 ) }
    dend_50 { pt3dadd( 6.72903, 137.317, 19.371, 0.22 ) }
    dend_50 { pt3dadd( 6.72017, 137.651, 18.965, 0.44 ) }
    dend_50 { pt3dadd( 6.66622, 138.086, 18.451, 0.44 ) }
    dend_50 { pt3dadd( 6.55798, 138.665, 17.7769, 0.22 ) }
    dend_50 { pt3dadd( 6.41422, 139.327, 17.0827, 0.29 ) }
    dend_50 { pt3dadd( 6.25729, 140.042, 16.4768, 0.22 ) }
    dend_50 { pt3dadd( 6.12742, 140.714, 16.0222, 0.22 ) }
    dend_50 { pt3dadd( 6.06681, 141.132, 15.7973, 0.66 ) }
    dend_50 { pt3dadd( 5.9938, 142.096, 15.4274, 0.96 ) }
    dend_50 { pt3dadd( 5.97949, 143.677, 15.023, 0.22 ) }
    dend_50 { pt3dadd( 6.00197, 144.608, 14.8856, 0.37 ) }
    dend_50 { pt3dadd( 6.01649, 145.269, 14.864, 0.07 ) }
    dend_50 { pt3dadd( 6.02678, 145.968, 14.9259, 0.07 ) }
    dend_50 { pt3dadd( 6.03725, 146.676, 15.0488, 0.07 ) }
    dend_50 { pt3dadd( 6.04183, 147.183, 15.1819, 0.29 ) }
    dend_50 { pt3dadd( 6.04099, 147.727, 15.3593, 0.66 ) }
    dend_50 { pt3dadd( 6.03423, 148.48, 15.6281, 0.88 ) }
    dend_50 { pt3dadd( 6.01915, 149.767, 16.1107, 0.15 ) }
    dend_50 { pt3dadd( 6.01831, 150.427, 16.3516, 0.15 ) }
    dend_50 { pt3dadd( 6.04725, 150.887, 16.5249, 0.22 ) }
    dend_50 { pt3dadd( 6.12047, 151.31, 16.6821, 0.22 ) }
    dend_50 { pt3dadd( 6.33492, 152.034, 16.9513, 0.22 ) }
    dend_50 { pt3dadd( 6.57967, 152.669, 17.1845, 0.22 ) }
    dend_50 { pt3dadd( 6.84108, 153.246, 17.3902, 0.81 ) }
    dend_50 { pt3dadd( 7.49006, 154.612, 17.8778, 0.22 ) }
    dend_50 { pt3dadd( 8.04604, 155.681, 18.2714, 0.22 ) }
    dend_50 { pt3dadd( 8.61024, 156.685, 18.6575, 0.22 ) }
    dend_50 { pt3dadd( 8.83211, 157.055, 18.8054, 0.37 ) }
    dend_50 { pt3dadd( 9.18451, 157.603, 19.0461, 0.96 ) }
    dend_50 { pt3dadd( 10.0642, 158.926, 19.7061, 0.15 ) }
    dend_50 { pt3dadd( 10.5713, 159.673, 20.1281, 0.15 ) }
    dend_50 { pt3dadd( 10.8023, 160.029, 20.3523, 0.15 ) }
    dend_50 { pt3dadd( 11.0528, 160.427, 20.6204, 0.15 ) }
    dend_50 { pt3dadd( 11.4632, 161.05, 21.0774, 0.15 ) }
    dend_50 { pt3dadd( 11.6983, 161.383, 21.3596, 0.29 ) }
    dend_50 { pt3dadd( 12.063, 161.859, 21.8305, 0.66 ) }
    dend_50 { pt3dadd( 12.2277, 162.069, 22.0469, 0.66 ) }
    dend_50 { pt3dadd( 12.8233, 162.825, 22.8077, 0.15 ) }
    dend_50 { pt3dadd( 13.1506, 163.246, 23.2023, 0.22 ) }
    dend_50 { pt3dadd( 13.8053, 164.085, 23.9828, 0.15 ) }
    dend_50 { pt3dadd( 14.2102, 164.583, 24.4306, 0.15 ) }
    dend_50 { pt3dadd( 14.7612, 165.236, 25.0204, 0.15 ) }
    dend_50 { pt3dadd( 15.0789, 165.608, 25.3423, 0.29 ) }
    dend_50 { pt3dadd( 15.6683, 166.295, 25.9093, 0.15 ) }
    dend_50 { pt3dadd( 16.0058, 166.705, 26.2139, 0.15 ) }
    dend_50 { pt3dadd( 16.3518, 167.14, 26.4825, 0.37 ) }
    dend_50 { pt3dadd( 16.9166, 167.879, 26.8857, 0.15 ) }
    dend_50 { pt3dadd( 17.2732, 168.374, 27.1645, 0.29 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 60/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -183.982, -336.213, 51.6936, 0.07 ) }
    dend_42 { pt3dadd( -183.355, -335.708, 51.5788, 0.07 ) }
    dend_42 { pt3dadd( -182.446, -334.886, 51.2917, 0.29 ) }
    dend_42 { pt3dadd( -181.733, -334.211, 50.9866, 0.07 ) }
    dend_42 { pt3dadd( -181.031, -333.53, 50.5552, 0.07 ) }
    dend_42 { pt3dadd( -180.268, -332.777, 49.94, 0.15 ) }
    dend_42 { pt3dadd( -179.733, -332.236, 49.4504, 0.15 ) }
    dend_42 { pt3dadd( -179.391, -331.881, 49.0512, 0.15 ) }
    dend_42 { pt3dadd( -178.979, -331.389, 48.3795, 0.29 ) }
    dend_42 { pt3dadd( -178.537, -330.816, 47.4634, 0.07 ) }
    dend_42 { pt3dadd( -178.262, -330.432, 46.7858, 0.29 ) }
    dend_42 { pt3dadd( -178.006, -330.142, 46.1984, 0.44 ) }
    dend_42 { pt3dadd( -177.883, -330.038, 45.9418, 0.44 ) }
    dend_42 { pt3dadd( -177.393, -329.687, 44.885, 0.15 ) }
    dend_42 { pt3dadd( -177.043, -329.432, 44.083, 0.15 ) }
    dend_42 { pt3dadd( -176.903, -329.333, 43.7777, 0.15 ) }
    dend_42 { pt3dadd( -176.376, -328.976, 42.58, 0.15 ) }
    dend_42 { pt3dadd( -176.158, -328.836, 42.0227, 0.37 ) }
    dend_42 { pt3dadd( -175.643, -328.488, 40.5187, 0.22 ) }
    dend_42 { pt3dadd( -175.398, -328.316, 39.7601, 0.22 ) }
    dend_42 { pt3dadd( -175.265, -328.205, 39.3258, 0.22 ) }
    dend_42 { pt3dadd( -174.984, -327.909, 38.3743, 0.15 ) }
    dend_42 { pt3dadd( -174.66, -327.539, 37.3334, 0.15 ) }
    dend_42 { pt3dadd( -174.334, -327.231, 36.4595, 0.15 ) }
    dend_42 { pt3dadd( -174.078, -327.049, 35.9409, 0.37 ) }
    dend_42 { pt3dadd( -173.572, -326.779, 35.2279, 0.44 ) }
    dend_42 { pt3dadd( -173.012, -326.485, 34.6041, 0.22 ) }
    dend_42 { pt3dadd( -172.367, -326.161, 34.0294, 0.37 ) }
    dend_42 { pt3dadd( -171.941, -325.96, 33.7284, 0.37 ) }
    dend_42 { pt3dadd( -170.984, -325.552, 33.1635, 0.22 ) }
    dend_42 { pt3dadd( -169.666, -325.03, 32.4437, 0.22 ) }
    dend_42 { pt3dadd( -168.327, -324.622, 31.8193, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 92/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -183.982, -336.213, 51.6936, 0.15 ) }
    dend_41 { pt3dadd( -184.407, -336.991, 51.7339, 0.15 ) }
    dend_41 { pt3dadd( -184.808, -337.894, 51.8395, 0.29 ) }
    dend_41 { pt3dadd( -185.187, -338.807, 51.9903, 0.15 ) }
    dend_41 { pt3dadd( -185.582, -339.659, 52.1686, 0.15 ) }
    dend_41 { pt3dadd( -185.922, -340.352, 52.3274, 0.15 ) }
    dend_41 { pt3dadd( -186.121, -340.748, 52.4201, 0.15 ) }
    dend_41 { pt3dadd( -186.549, -341.587, 52.6562, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_41 { pt3dadd( -186.999, -342.517, 52.9119, 0.81 ) }
    dend_41 { pt3dadd( -187.485, -343.726, 53.1972, 0.15 ) }
    dend_41 { pt3dadd( -187.798, -344.691, 53.3862, 0.22 ) }
    dend_41 { pt3dadd( -188.042, -345.688, 53.5433, 0.07 ) }
    dend_41 { pt3dadd( -188.17, -346.754, 53.6906, 0.07 ) }
    dend_41 { pt3dadd( -188.159, -347.805, 53.8421, 0.37 ) }
    dend_41 { pt3dadd( -187.894, -349.355, 54.0867, 0.15 ) }
    dend_41 { pt3dadd( -187.623, -350.257, 54.2498, 0.15 ) }
    dend_41 { pt3dadd( -187.38, -350.902, 54.3827, 0.37 ) }
    dend_41 { pt3dadd( -186.726, -352.479, 54.7692, 0.15 ) }
    dend_41 { pt3dadd( -186.343, -353.433, 55.0336, 0.15 ) }
    dend_41 { pt3dadd( -186.104, -354.162, 55.2644, 0.15 ) }
    dend_41 { pt3dadd( -186.035, -354.532, 55.3919, 0.15 ) }
    dend_41 { pt3dadd( -185.98, -355.461, 55.7033, 0.37 ) }
    dend_41 { pt3dadd( -186.053, -356.572, 56.0355, 0.07 ) }
    dend_41 { pt3dadd( -186.247, -357.431, 56.2511, 0.07 ) }
    dend_41 { pt3dadd( -186.492, -358.169, 56.42, 0.22 ) }
    dend_41 { pt3dadd( -186.941, -359.347, 56.6985, 0.07 ) }
    dend_41 { pt3dadd( -187.135, -359.813, 56.8052, 0.07 ) }
    dend_41 { pt3dadd( -187.549, -360.687, 57.0119, 0.52 ) }
    dend_41 { pt3dadd( -188.343, -362.152, 57.3425, 0.07 ) }
    dend_41 { pt3dadd( -188.69, -362.726, 57.483, 0.07 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 22/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -18.0587, -30.9885, -21.7243, 0.44 ) }
    dend_20 { pt3dadd( -18.1429, -31.2225, -21.9615, 0.44 ) }
    dend_20 { pt3dadd( -18.412, -32.0801, -22.9219, 0.44 ) }
    dend_20 { pt3dadd( -18.5227, -32.5462, -23.4822, 0.44 ) }
    dend_20 { pt3dadd( -18.6246, -33.1785, -24.2433, 0.44 ) }
    dend_20 { pt3dadd( -18.6579, -33.4657, -24.5922, 0.44 ) }
    dend_20 { pt3dadd( -18.6931, -33.7484, -24.9463, 0.44 ) }
    dend_20 { pt3dadd( -18.7283, -33.9756, -25.2574, 0.44 ) }
    dend_20 { pt3dadd( -18.7664, -34.2135, -25.608, 0.44 ) }
    dend_20 { pt3dadd( -18.8205, -34.548, -26.1112, 0.44 ) }
    dend_20 { pt3dadd( -18.8934, -35.0172, -26.7873, 0.44 ) }
    dend_20 { pt3dadd( -18.9582, -35.4259, -27.3178, 0.44 ) }
    dend_20 { pt3dadd( -19.0564, -36.0077, -28.0175, 0.44 ) }
    dend_20 { pt3dadd( -19.1805, -36.7317, -28.8352, 0.44 ) }
    dend_20 { pt3dadd( -19.2154, -36.9789, -29.0924, 0.29 ) }
    dend_20 { pt3dadd( -19.2739, -37.6401, -29.749, 0.22 ) }
    dend_20 { pt3dadd( -19.2886, -38.1165, -30.188, 0.22 ) }
    dend_20 { pt3dadd( -19.2813, -38.4731, -30.5002, 0.22 ) }
    dend_20 { pt3dadd( -19.2751, -38.6712, -30.6653, 0.22 ) }
    dend_20 { pt3dadd( -19.2867, -39.0237, -30.9427, 0.29 ) }
    dend_20 { pt3dadd( -19.3193, -39.5992, -31.3787, 0.29 ) }
    dend_20 { pt3dadd( -19.3459, -39.959, -31.6393, 0.29 ) }
    dend_20 { pt3dadd( -19.3404, -40.3425, -31.9254, 0.29 ) }
    dend_20 { pt3dadd( -19.3098, -40.5394, -32.064, 0.29 ) }
    dend_20 { pt3dadd( -19.2383, -40.8502, -32.251, 0.29 ) }
    dend_20 { pt3dadd( -19.1292, -41.3481, -32.5012, 0.29 ) }
    dend_20 { pt3dadd( -19.0086, -41.9821, -32.7365, 0.22 ) }
    dend_20 { pt3dadd( -18.8766, -42.8651, -33.0095, 0.37 ) }
    dend_20 { pt3dadd( -18.8252, -43.3643, -33.1593, 0.37 ) }
    dend_20 { pt3dadd( -18.8039, -43.7798, -33.3142, 0.22 ) }
    dend_20 { pt3dadd( -18.8144, -44.4173, -33.6081, 0.22 ) }
    dend_20 { pt3dadd( -18.8634, -44.8026, -33.8185, 0.22 ) }
    dend_20 { pt3dadd( -18.9595, -45.1801, -34.047, 0.29 ) }
    dend_20 { pt3dadd( -19.1382, -45.6574, -34.3727, 0.29 ) }
    dend_20 { pt3dadd( -19.3815, -46.1501, -34.81, 0.29 ) }
    dend_20 { pt3dadd( -19.5457, -46.4048, -35.1237, 0.29 ) }
    dend_20 { pt3dadd( -19.689, -46.59, -35.4202, 0.29 ) }
    dend_20 { pt3dadd( -19.8102, -46.724, -35.6795, 0.22 ) }
    dend_20 { pt3dadd( -20.0381, -46.9397, -36.1692, 0.22 ) }
    dend_20 { pt3dadd( -20.3894, -47.2164, -36.8454, 0.22 ) }
    dend_20 { pt3dadd( -20.5408, -47.3627, -37.1317, 0.22 ) }
    dend_20 { pt3dadd( -20.7239, -47.628, -37.4788, 0.22 ) }
    dend_20 { pt3dadd( -20.8833, -47.9526, -37.7909, 0.29 ) }
    dend_20 { pt3dadd( -20.9758, -48.1687, -37.9647, 0.29 ) }
    dend_20 { pt3dadd( -21.0617, -48.3555, -38.0979, 0.29 ) }
    dend_20 { pt3dadd( -21.3318, -48.8036, -38.4268, 0.29 ) }
    dend_20 { pt3dadd( -21.696, -49.2725, -38.8215, 0.22 ) }
    dend_20 { pt3dadd( -22.035, -49.6341, -39.167, 0.22 ) }
    dend_20 { pt3dadd( -22.3677, -49.9725, -39.5203, 0.22 ) }
    dend_20 { pt3dadd( -22.6339, -50.2848, -39.8467, 0.22 ) }
    dend_20 { pt3dadd( -23.0543, -50.7669, -40.3887, 0.22 ) }
    dend_20 { pt3dadd( -23.2126, -50.9322, -40.5968, 0.22 ) }
    dend_20 { pt3dadd( -23.3868, -51.1202, -40.8708, 0.22 ) }
    dend_20 { pt3dadd( -23.6054, -51.4687, -41.3411, 0.44 ) }
    dend_20 { pt3dadd( -23.6312, -52.0281, -41.895, 0.44 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 77/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -18.0587, -30.9885, -21.7243, 0.52 ) }
    dend_15 { pt3dadd( -18.3482, -32.1956, -21.7793, 0.52 ) }
    dend_15 { pt3dadd( -18.6611, -33.1449, -21.8932, 0.52 ) }
    dend_15 { pt3dadd( -18.9837, -33.9151, -22.0378, 0.59 ) }
    dend_15 { pt3dadd( -19.2218, -34.3787, -22.1411, 0.96 ) }
    dend_15 { pt3dadd( -19.4577, -34.7491, -22.2345, 0.96 ) }
    dend_15 { pt3dadd( -20.1897, -35.6772, -22.483, 0.81 ) }
    dend_15 { pt3dadd( -20.8661, -36.2937, -22.6857, 0.52 ) }
    dend_15 { pt3dadd( -21.5882, -36.8335, -22.8672, 0.52 ) }
    dend_15 { pt3dadd( -22.1983, -37.2588, -23.0256, 0.74 ) }
    dend_15 { pt3dadd( -22.9716, -37.8105, -23.2413, 0.74 ) }
    dend_15 { pt3dadd( -23.7901, -38.4447, -23.5171, 0.66 ) }
    dend_15 { pt3dadd( -24.2788, -38.872, -23.7078, 0.52 ) }
    dend_15 { pt3dadd( -24.7872, -39.4299, -23.9337, 0.37 ) }
    dend_15 { pt3dadd( -25.2383, -40.0617, -24.208, 0.66 ) }
    dend_15 { pt3dadd( -25.6127, -40.6736, -24.4941, 0.88 ) }
    dend_15 { pt3dadd( -25.9752, -41.3009, -24.8194, 0.88 ) }
    dend_15 { pt3dadd( -26.2516, -41.7422, -25.0878, 0.66 ) }
    dend_15 { pt3dadd( -26.679, -42.3032, -25.4788, 0.52 ) }
    dend_15 { pt3dadd( -27.1669, -42.8297, -25.866, 0.52 ) }
    dend_15 { pt3dadd( -27.6932, -43.3327, -26.2137, 0.59 ) }
    dend_15 { pt3dadd( -28.2077, -43.7888, -26.5302, 0.59 ) }
    dend_15 { pt3dadd( -28.8182, -44.3104, -26.9149, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_15 { pt3dadd( -29.2892, -44.7093, -27.2423, 0.59 ) }
    dend_15 { pt3dadd( -29.6723, -45.0167, -27.5118, 0.66 ) }
    dend_15 { pt3dadd( -30.2577, -45.4542, -27.8941, 0.59 ) }
    dend_15 { pt3dadd( -30.8663, -45.8952, -28.2659, 0.52 ) }
    dend_15 { pt3dadd( -31.5681, -46.3816, -28.6354, 0.81 ) }
    dend_15 { pt3dadd( -32.3139, -46.8556, -28.9489, 1.03 ) }
    dend_15 { pt3dadd( -33.1305, -47.3036, -29.2017, 0.59 ) }
    dend_15 { pt3dadd( -33.9959, -47.7075, -29.3681, 0.44 ) }
    dend_15 { pt3dadd( -34.5106, -47.9184, -29.3972, 0.59 ) }
    dend_15 { pt3dadd( -35.1721, -48.1766, -29.3672, 0.59 ) }
    dend_15 { pt3dadd( -35.7868, -48.4109, -29.2703, 0.52 ) }
    dend_15 { pt3dadd( -36.56, -48.7115, -29.0612, 0.52 ) }
    dend_15 { pt3dadd( -37.1534, -48.9664, -28.8397, 0.66 ) }
    dend_15 { pt3dadd( -37.526, -49.1335, -28.6607, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 14/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -38.7112, -39.6668, -13.6852, 0.59 ) }
    dend_11 { pt3dadd( -39.16, -39.8652, -12.9184, 0.59 ) }
    dend_11 { pt3dadd( -40.2509, -40.4706, -11.0731, 0.52 ) }
    dend_11 { pt3dadd( -40.8542, -40.8441, -10.1464, 0.52 ) }
    dend_11 { pt3dadd( -41.4095, -41.216, -9.37856, 0.52 ) }
    dend_11 { pt3dadd( -42.0306, -41.6732, -8.56788, 0.52 ) }
    dend_11 { pt3dadd( -42.8502, -42.288, -7.59589, 0.66 ) }
    dend_11 { pt3dadd( -43.5408, -42.8724, -6.89601, 0.81 ) }
    dend_11 { pt3dadd( -44.5324, -43.7867, -6.10372, 0.52 ) }
    dend_11 { pt3dadd( -45.1736, -44.4388, -5.66187, 0.52 ) }
    dend_11 { pt3dadd( -45.9292, -45.2983, -5.22105, 0.74 ) }
    dend_11 { pt3dadd( -46.6472, -46.215, -4.89126, 0.44 ) }
    dend_11 { pt3dadd( -47.431, -47.2985, -4.66374, 0.59 ) }
    dend_11 { pt3dadd( -48.0625, -48.223, -4.52686, 0.81 ) }
    dend_11 { pt3dadd( -48.6792, -49.157, -4.38378, 0.66 ) }
    dend_11 { pt3dadd( -49.5161, -50.3935, -4.17645, 0.59 ) }
    dend_11 { pt3dadd( -50.3589, -51.5555, -3.97607, 0.52 ) }
    dend_11 { pt3dadd( -51.6224, -53.1343, -3.66405, 0.44 ) }
    dend_11 { pt3dadd( -52.6956, -54.2755, -3.37563, 0.52 ) }
    dend_11 { pt3dadd( -53.7246, -55.1962, -3.08279, 0.44 ) }
    dend_11 { pt3dadd( -54.4678, -55.7753, -2.8688, 0.44 ) }
    dend_11 { pt3dadd( -55.3608, -56.4279, -2.61002, 0.37 ) }
    dend_11 { pt3dadd( -56.3986, -57.243, -2.27903, 0.22 ) }
    dend_11 { pt3dadd( -57.1464, -57.9318, -2.02316, 0.59 ) }
    dend_11 { pt3dadd( -57.7433, -58.6082, -1.82358, 0.88 ) }
    dend_11 { pt3dadd( -58.6178, -59.7987, -1.52486, 0.59 ) }
    dend_11 { pt3dadd( -59.3059, -60.8584, -1.25124, 0.44 ) }
    dend_11 { pt3dadd( -60.0008, -61.9983, -0.916182, 0.59 ) }
    dend_11 { pt3dadd( -60.4814, -62.8234, -0.627064, 0.52 ) }
    dend_11 { pt3dadd( -61.0345, -63.8061, -0.249381, 0.29 ) }
    dend_11 { pt3dadd( -61.5726, -64.8081, 0.198653, 0.29 ) }
    dend_11 { pt3dadd( -62.33, -66.2324, 0.982062, 0.37 ) }
    dend_11 { pt3dadd( -63.0144, -67.4725, 1.83048, 0.29 ) }
    dend_11 { pt3dadd( -63.4945, -68.2985, 2.51707, 0.29 ) }
    dend_11 { pt3dadd( -63.7876, -68.8091, 3.00283, 0.52 ) }
    dend_11 { pt3dadd( -64.1345, -69.4369, 3.65199, 0.37 ) }
    dend_11 { pt3dadd( -64.6208, -70.3349, 4.59574, 0.29 ) }
    dend_11 { pt3dadd( -65.2416, -71.3452, 5.67933, 0.37 ) }
    dend_11 { pt3dadd( -65.8755, -72.197, 6.59238, 0.66 ) }
    dend_11 { pt3dadd( -66.5171, -72.938, 7.37676, 1.03 ) }
    dend_11 { pt3dadd( -67.5661, -74.0635, 8.56648, 0.81 ) }
    dend_11 { pt3dadd( -68.4163, -74.9478, 9.47342, 1.25 ) }
    dend_11 { pt3dadd( -69.4366, -76.0446, 10.4943, 0.96 ) }
    dend_11 { pt3dadd( -70.4396, -77.1504, 11.4242, 0.37 ) }
    dend_11 { pt3dadd( -71.4616, -78.2627, 12.2603, 0.44 ) }
    dend_11 { pt3dadd( -72.3351, -79.168, 12.8827, 0.44 ) }
    dend_11 { pt3dadd( -73.0565, -79.8734, 13.3066, 0.59 ) }
    dend_11 { pt3dadd( -74.2114, -80.9304, 13.8404, 0.96 ) }
    dend_11 { pt3dadd( -75.0525, -81.613, 14.0716, 0.37 ) }
    dend_11 { pt3dadd( -76.1632, -82.3474, 14.1817, 0.22 ) }
    dend_11 { pt3dadd( -77.0014, -82.8165, 14.1787, 0.22 ) }
    dend_11 { pt3dadd( -77.7341, -83.2025, 14.1398, 0.66 ) }
    dend_11 { pt3dadd( -78.7749, -83.779, 14.0667, 0.74 ) }
    dend_11 { pt3dadd( -80.0192, -84.5458, 13.9884, 0.37 ) }
    dend_11 { pt3dadd( -81.1839, -85.4441, 13.9556, 0.44 ) }
    dend_11 { pt3dadd( -82.0207, -86.289, 13.9871, 0.37 ) }
    dend_11 { pt3dadd( -82.7102, -87.1772, 14.0493, 0.22 ) }
    dend_11 { pt3dadd( -83.228, -88.0491, 14.1222, 0.22 ) }
    dend_11 { pt3dadd( -83.5005, -88.6516, 14.1787, 0.59 ) }
    dend_11 { pt3dadd( -83.819, -89.5027, 14.2719, 0.88 ) }
    dend_11 { pt3dadd( -84.2661, -90.6484, 14.4248, 0.29 ) }
    dend_11 { pt3dadd( -84.5304, -91.2143, 14.5153, 0.22 ) }
    dend_11 { pt3dadd( -85.0978, -92.1675, 14.7233, 0.52 ) }
    dend_11 { pt3dadd( -85.9205, -93.2927, 15.034, 0.22 ) }
    dend_11 { pt3dadd( -86.354, -93.8168, 15.1987, 0.22 ) }
    dend_11 { pt3dadd( -87.1778, -94.779, 15.5111, 0.29 ) }
    dend_11 { pt3dadd( -87.6124, -95.3291, 15.6953, 0.29 ) }
    dend_11 { pt3dadd( -88.2427, -96.2002, 16.0176, 0.22 ) }
    dend_11 { pt3dadd( -88.5193, -96.6157, 16.182, 0.74 ) }
    dend_11 { pt3dadd( -88.9128, -97.2627, 16.4345, 0.96 ) }
    dend_11 { pt3dadd( -89.531, -98.3087, 16.8597, 0.59 ) }
    dend_11 { pt3dadd( -90.2511, -99.5625, 17.4171, 0.15 ) }
    dend_11 { pt3dadd( -90.7255, -100.347, 17.8367, 0.15 ) }
    dend_11 { pt3dadd( -91.0134, -100.77, 18.0955, 0.59 ) }
    dend_11 { pt3dadd( -91.8146, -101.786, 18.8153, 0.96 ) }
    dend_11 { pt3dadd( -92.8153, -102.848, 19.6934, 0.22 ) }
    dend_11 { pt3dadd( -93.4518, -103.387, 20.227, 0.15 ) }
    dend_11 { pt3dadd( -94.5157, -104.116, 21.0649, 0.15 ) }
    dend_11 { pt3dadd( -94.9498, -104.393, 21.4162, 0.66 ) }
    dend_11 { pt3dadd( -95.3063, -104.61, 21.7329, 0.96 ) }
    dend_11 { pt3dadd( -95.7239, -104.854, 22.1209, 1.11 ) }
    dend_11 { pt3dadd( -96.6169, -105.342, 22.885, 0.52 ) }
    dend_11 { pt3dadd( -97.5603, -105.851, 23.6578, 0.15 ) }
    dend_11 { pt3dadd( -98.4636, -106.385, 24.4299, 0.15 ) }
    dend_11 { pt3dadd( -98.9481, -106.705, 24.8888, 0.15 ) }
    dend_11 { pt3dadd( -99.382, -107.021, 25.3238, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_11 { pt3dadd( -100.215, -107.672, 26.191, 0.96 ) }
    dend_11 { pt3dadd( -101.374, -108.631, 27.3954, 0.22 ) }
    dend_11 { pt3dadd( -102.197, -109.364, 28.301, 0.22 ) }
    dend_11 { pt3dadd( -102.781, -109.922, 29.0078, 0.22 ) }
    dend_11 { pt3dadd( -103.196, -110.363, 29.5746, 0.59 ) }
    dend_11 { pt3dadd( -103.733, -111.032, 30.4864, 1.11 ) }
    dend_11 { pt3dadd( -104.078, -111.604, 31.3044, 0.44 ) }
    dend_11 { pt3dadd( -104.429, -112.418, 32.562, 0.22 ) }
    dend_11 { pt3dadd( -104.6, -112.971, 33.4577, 0.22 ) }
    dend_11 { pt3dadd( -104.631, -113.137, 33.7232, 0.22 ) }
    dend_11 { pt3dadd( -104.677, -113.458, 34.2571, 0.22 ) }
    dend_11 { pt3dadd( -104.773, -113.955, 35.1242, 0.22 ) }
    dend_11 { pt3dadd( -104.906, -114.326, 35.8513, 0.22 ) }
    dend_11 { pt3dadd( -105.054, -114.541, 36.3907, 0.44 ) }
    dend_11 { pt3dadd( -105.381, -114.866, 37.3596, 0.81 ) }
    dend_11 { pt3dadd( -105.884, -115.291, 38.7096, 0.81 ) }
    dend_11 { pt3dadd( -106.376, -115.675, 39.9319, 0.66 ) }
    dend_11 { pt3dadd( -106.803, -116.011, 40.9522, 0.66 ) }
    dend_11 { pt3dadd( -107.709, -116.702, 43.0382, 0.22 ) }
    dend_11 { pt3dadd( -108.265, -117.107, 44.2945, 0.22 ) }
    dend_11 { pt3dadd( -108.582, -117.328, 44.9865, 0.66 ) }
    dend_11 { pt3dadd( -108.958, -117.589, 45.7142, 0.74 ) }
    dend_11 { pt3dadd( -109.867, -118.248, 47.211, 0.22 ) }
    dend_11 { pt3dadd( -110.662, -118.857, 48.3353, 0.15 ) }
    dend_11 { pt3dadd( -111.494, -119.509, 49.3428, 0.15 ) }
    dend_11 { pt3dadd( -112.397, -120.218, 50.3653, 0.15 ) }
    dend_11 { pt3dadd( -113.204, -120.839, 51.1967, 1.18 ) }
    dend_11 { pt3dadd( -114.202, -121.586, 52.132, 0.07 ) }
    dend_11 { pt3dadd( -115.183, -122.324, 52.8682, 0.07 ) }
    dend_11 { pt3dadd( -115.854, -122.838, 53.2599, 0.07 ) }
    dend_11 { pt3dadd( -116.255, -123.12, 53.4658, 0.07 ) }
    dend_11 { pt3dadd( -117.061, -123.612, 53.91, 0.96 ) }
    dend_11 { pt3dadd( -118.592, -124.419, 54.8523, 0.07 ) }
    dend_11 { pt3dadd( -119.803, -124.991, 55.5973, 0.07 ) }
    dend_11 { pt3dadd( -120.592, -125.339, 56.086, 0.66 ) }
    dend_11 { pt3dadd( -123.126, -126.408, 57.6703, 0.07 ) }
    dend_11 { pt3dadd( -124.435, -126.966, 58.533, 0.07 ) }
    dend_11 { pt3dadd( -125.682, -127.506, 59.4005, 0.07 ) }
    dend_11 { pt3dadd( -126.746, -127.96, 60.2303, 0.07 ) }
    dend_11 { pt3dadd( -127.828, -128.409, 61.2301, 0.07 ) }
    dend_11 { pt3dadd( -128.534, -128.692, 61.9331, 0.07 ) }
    dend_11 { pt3dadd( -129.553, -129.062, 63.0258, 0.07 ) }
    dend_11 { pt3dadd( -130.768, -129.435, 64.3818, 0.15 ) }
    dend_11 { pt3dadd( -132.771, -129.961, 66.7815, 0.07 ) }
    dend_11 { pt3dadd( -134.228, -130.268, 68.6298, 0.07 ) }
    dend_11 { pt3dadd( -134.976, -130.397, 69.61, 0.07 ) }
    dend_11 { pt3dadd( -135.953, -130.519, 70.9726, 0.07 ) }
    dend_11 { pt3dadd( -136.443, -130.538, 71.6718, 0.59 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 48/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -38.7112, -39.6668, -13.6852, 0.66 ) }
    dend_4 { pt3dadd( -39.5928, -40.6516, -14.0801, 0.66 ) }
    dend_4 { pt3dadd( -40.5547, -41.6914, -14.3926, 0.66 ) }
    dend_4 { pt3dadd( -41.2156, -42.4365, -14.5549, 0.66 ) }
    dend_4 { pt3dadd( -41.6874, -42.9939, -14.65, 0.66 ) }
    dend_4 { pt3dadd( -42.5966, -44.1265, -14.806, 0.59 ) }
    dend_4 { pt3dadd( -43.373, -45.1846, -14.8949, 0.66 ) }
    dend_4 { pt3dadd( -43.9496, -46.0799, -14.8745, 0.88 ) }
    dend_4 { pt3dadd( -44.5275, -47.2172, -14.71, 0.59 ) }
    dend_4 { pt3dadd( -45.0032, -48.5443, -14.3563, 0.59 ) }
    dend_4 { pt3dadd( -45.1819, -49.3896, -14.0436, 0.59 ) }
    dend_4 { pt3dadd( -45.2856, -50.6421, -13.4559, 0.81 ) }
    dend_4 { pt3dadd( -45.327, -51.7636, -12.84, 0.81 ) }
    dend_4 { pt3dadd( -45.3688, -52.9467, -12.1342, 0.88 ) }
    dend_4 { pt3dadd( -45.474, -54.3906, -11.2051, 0.88 ) }
    dend_4 { pt3dadd( -45.6741, -55.6808, -10.3546, 0.74 ) }
    dend_4 { pt3dadd( -46.0835, -57.0146, -9.52119, 0.74 ) }
    dend_4 { pt3dadd( -46.7802, -58.3778, -8.79575, 0.74 ) }
    dend_4 { pt3dadd( -47.2848, -59.094, -8.46654, 0.81 ) }
    dend_4 { pt3dadd( -48.0109, -59.9515, -8.14129, 0.81 ) }
    dend_4 { pt3dadd( -49.0525, -61.0788, -7.82583, 0.74 ) }
    dend_4 { pt3dadd( -50.152, -62.2564, -7.65521, 0.74 ) }
    dend_4 { pt3dadd( -51.0928, -63.3468, -7.61797, 0.74 ) }
    dend_4 { pt3dadd( -51.7718, -64.2633, -7.6476, 0.81 ) }
    dend_4 { pt3dadd( -52.3121, -65.1329, -7.68585, 0.81 ) }
    dend_4 { pt3dadd( -53.0651, -66.6189, -7.75447, 0.59 ) }
    dend_4 { pt3dadd( -53.8198, -68.4836, -7.80268, 0.81 ) }
    dend_4 { pt3dadd( -54.2443, -69.8018, -7.80885, 0.66 ) }
    dend_4 { pt3dadd( -54.6989, -71.4209, -7.78203, 0.59 ) }
    dend_4 { pt3dadd( -55.0292, -72.6154, -7.76799, 0.59 ) }
    dend_4 { pt3dadd( -55.2786, -73.5084, -7.73761, 0.52 ) }
    dend_4 { pt3dadd( -55.7073, -74.9338, -7.67144, 0.88 ) }
    dend_4 { pt3dadd( -56.1781, -76.2529, -7.6045, 0.88 ) }
    dend_4 { pt3dadd( -56.8421, -77.7842, -7.59098, 0.81 ) }
    dend_4 { pt3dadd( -57.6062, -79.2604, -7.63985, 0.81 ) }
    dend_4 { pt3dadd( -58.0337, -79.9743, -7.68521, 0.88 ) }
    dend_4 { pt3dadd( -58.9826, -81.3758, -7.80566, 0.81 ) }
    dend_4 { pt3dadd( -59.8972, -82.6001, -7.90187, 0.81 ) }
    dend_4 { pt3dadd( -60.6549, -83.5343, -7.93087, 0.96 ) }
    dend_4 { pt3dadd( -61.6944, -84.7339, -7.86229, 0.74 ) }
    dend_4 { pt3dadd( -62.3312, -85.4159, -7.73982, 0.74 ) }
    dend_4 { pt3dadd( -63.2363, -86.3083, -7.45655, 0.44 ) }
    dend_4 { pt3dadd( -63.956, -86.9821, -7.12181, 0.66 ) }
    dend_4 { pt3dadd( -64.8464, -87.7556, -6.63748, 0.59 ) }
    dend_4 { pt3dadd( -65.6375, -88.3391, -6.21359, 0.59 ) }
    dend_4 { pt3dadd( -66.4024, -88.7754, -5.81054, 0.96 ) }
    dend_4 { pt3dadd( -67.7474, -89.353, -5.12201, 0.52 ) }
    dend_4 { pt3dadd( -68.9006, -89.7597, -4.5666, 0.52 ) }
    dend_4 { pt3dadd( -69.6844, -90.0301, -4.24716, 0.52 ) }
    dend_4 { pt3dadd( -70.7608, -90.4389, -3.85499, 0.52 ) }
    dend_4 { pt3dadd( -71.8705, -90.9621, -3.51136, 0.59 ) }
    dend_4 { pt3dadd( -73.1892, -91.7884, -3.15498, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_4 { pt3dadd( -74.1446, -92.5953, -2.94711, 0.66 ) }
    dend_4 { pt3dadd( -75.1729, -93.6951, -2.78246, 0.74 ) }
    dend_4 { pt3dadd( -75.9036, -94.6148, -2.69426, 1.03 ) }
    dend_4 { pt3dadd( -76.6439, -95.678, -2.66471, 1.03 ) }
    dend_4 { pt3dadd( -77.4794, -96.992, -2.69765, 0.96 ) }
    dend_4 { pt3dadd( -78.128, -98.1126, -2.78692, 0.66 ) }
    dend_4 { pt3dadd( -78.8505, -99.4315, -2.90541, 0.52 ) }
    dend_4 { pt3dadd( -79.6038, -100.868, -3.07356, 0.59 ) }
    dend_4 { pt3dadd( -80.2485, -102.118, -3.28547, 0.44 ) }
    dend_4 { pt3dadd( -80.6604, -102.926, -3.4665, 0.88 ) }
    dend_4 { pt3dadd( -81.309, -104.223, -3.84703, 0.59 ) }
    dend_4 { pt3dadd( -81.806, -105.296, -4.22437, 0.59 ) }
    dend_4 { pt3dadd( -82.3277, -106.56, -4.74958, 0.66 ) }
    dend_4 { pt3dadd( -82.645, -107.296, -5.10117, 0.66 ) }
    dend_4 { pt3dadd( -83.0106, -108.01, -5.46462, 0.96 ) }
    dend_4 { pt3dadd( -83.4976, -108.792, -5.86719, 0.96 ) }
    dend_4 { pt3dadd( -84.3333, -109.895, -6.36767, 0.44 ) }
    dend_4 { pt3dadd( -85.1045, -110.775, -6.6887, 0.44 ) }
    dend_4 { pt3dadd( -86.0849, -111.785, -6.92907, 0.44 ) }
    dend_4 { pt3dadd( -86.8179, -112.504, -7.00119, 0.88 ) }
    dend_4 { pt3dadd( -87.971, -113.597, -6.94442, 0.66 ) }
    dend_4 { pt3dadd( -89.1424, -114.711, -6.7266, 0.52 ) }
    dend_4 { pt3dadd( -90.0621, -115.673, -6.43584, 0.74 ) }
    dend_4 { pt3dadd( -90.5969, -116.362, -6.17373, 0.74 ) }
    dend_4 { pt3dadd( -91.0559, -117.161, -5.82924, 0.74 ) }
    dend_4 { pt3dadd( -91.4663, -118.173, -5.34076, 0.59 ) }
    dend_4 { pt3dadd( -91.6829, -118.975, -4.93452, 0.81 ) }
    dend_4 { pt3dadd( -92.0119, -120.516, -4.15038, 0.88 ) }
    dend_4 { pt3dadd( -92.3445, -121.961, -3.42943, 0.59 ) }
    dend_4 { pt3dadd( -92.6858, -123.11, -2.87508, 0.66 ) }
    dend_4 { pt3dadd( -93.2221, -124.469, -2.25561, 0.66 ) }
    dend_4 { pt3dadd( -93.5041, -125.002, -2.02814, 0.66 ) }
    dend_4 { pt3dadd( -94.2805, -126.169, -1.57892, 0.52 ) }
    dend_4 { pt3dadd( -95.2405, -127.414, -1.17511, 0.52 ) }
    dend_4 { pt3dadd( -96.147, -128.603, -0.90289, 0.74 ) }
    dend_4 { pt3dadd( -96.7306, -129.456, -0.79486, 0.96 ) }
    dend_4 { pt3dadd( -97.5325, -130.861, -0.715531, 1.18 ) }
    dend_4 { pt3dadd( -98.1118, -132.124, -0.672545, 0.66 ) }
    dend_4 { pt3dadd( -98.4714, -133.086, -0.657217, 0.66 ) }
    dend_4 { pt3dadd( -99.0261, -134.644, -0.646436, 0.59 ) }
    dend_4 { pt3dadd( -99.6456, -136.183, -0.649943, 0.81 ) }
    dend_4 { pt3dadd( -100.431, -137.743, -0.672597, 0.66 ) }
    dend_4 { pt3dadd( -101.342, -139.134, -0.69728, 0.66 ) }
    dend_4 { pt3dadd( -102.137, -140.063, -0.711125, 0.66 ) }
    dend_4 { pt3dadd( -103.289, -141.12, -0.714943, 0.59 ) }
    dend_4 { pt3dadd( -104.616, -142.057, -0.697114, 0.52 ) }
    dend_4 { pt3dadd( -106.0, -142.885, -0.647482, 0.44 ) }
    dend_4 { pt3dadd( -106.798, -143.343, -0.598808, 0.44 ) }
    dend_4 { pt3dadd( -107.41, -143.726, -0.544242, 0.44 ) }
    dend_4 { pt3dadd( -107.861, -144.065, -0.489816, 0.44 ) }
    dend_4 { pt3dadd( -108.707, -144.841, -0.329996, 0.44 ) }
    dend_4 { pt3dadd( -109.781, -145.981, -0.0650342, 0.52 ) }
    dend_4 { pt3dadd( -110.864, -147.236, 0.26612, 0.52 ) }
    dend_4 { pt3dadd( -111.716, -148.251, 0.543933, 0.59 ) }
    dend_4 { pt3dadd( -112.463, -149.125, 0.812718, 0.44 ) }
    dend_4 { pt3dadd( -113.153, -149.9, 1.08852, 0.44 ) }
    dend_4 { pt3dadd( -114.137, -150.954, 1.53829, 0.66 ) }
    dend_4 { pt3dadd( -114.929, -151.752, 1.94842, 0.66 ) }
    dend_4 { pt3dadd( -115.778, -152.596, 2.45046, 0.74 ) }
    dend_4 { pt3dadd( -116.835, -153.72, 3.20223, 0.52 ) }
    dend_4 { pt3dadd( -117.499, -154.544, 3.79933, 0.52 ) }
    dend_4 { pt3dadd( -118.075, -155.48, 4.48372, 0.66 ) }
    dend_4 { pt3dadd( -118.495, -156.479, 5.16626, 0.59 ) }
    dend_4 { pt3dadd( -118.744, -157.441, 5.70955, 0.44 ) }
    dend_4 { pt3dadd( -118.905, -158.535, 6.18539, 0.44 ) }
    dend_4 { pt3dadd( -119.046, -159.861, 6.60199, 0.44 ) }
    dend_4 { pt3dadd( -119.198, -161.166, 6.92254, 0.52 ) }
    dend_4 { pt3dadd( -119.496, -162.832, 7.24915, 0.88 ) }
    dend_4 { pt3dadd( -119.875, -164.048, 7.46416, 0.96 ) }
    dend_4 { pt3dadd( -120.463, -165.198, 7.69194, 0.74 ) }
    dend_4 { pt3dadd( -121.285, -166.349, 7.9855, 0.44 ) }
    dend_4 { pt3dadd( -121.805, -166.931, 8.16843, 0.74 ) }
    dend_4 { pt3dadd( -122.478, -167.606, 8.45054, 1.03 ) }
    dend_4 { pt3dadd( -123.307, -168.436, 8.88771, 0.44 ) }
    dend_4 { pt3dadd( -124.068, -169.295, 9.32808, 0.37 ) }
    dend_4 { pt3dadd( -124.475, -169.939, 9.61415, 0.37 ) }
    dend_4 { pt3dadd( -124.728, -170.577, 9.8329, 0.74 ) }
    dend_4 { pt3dadd( -125.015, -171.66, 10.1798, 1.11 ) }
    dend_4 { pt3dadd( -125.189, -172.621, 10.4869, 0.74 ) }
    dend_4 { pt3dadd( -125.383, -173.934, 10.9113, 0.59 ) }
    dend_4 { pt3dadd( -125.684, -175.635, 11.5075, 0.52 ) }
    dend_4 { pt3dadd( -125.97, -176.732, 11.9642, 0.29 ) }
    dend_4 { pt3dadd( -126.308, -177.704, 12.444, 0.29 ) }
    dend_4 { pt3dadd( -126.59, -178.334, 12.7874, 0.81 ) }
    dend_4 { pt3dadd( -127.065, -179.259, 13.2704, 1.11 ) }
    dend_4 { pt3dadd( -127.836, -180.632, 13.887, 0.52 ) }
    dend_4 { pt3dadd( -128.56, -181.934, 14.3223, 0.44 ) }
    dend_4 { pt3dadd( -129.017, -182.869, 14.5494, 0.88 ) }
    dend_4 { pt3dadd( -129.49, -184.066, 14.7184, 0.88 ) }
    dend_4 { pt3dadd( -129.952, -185.632, 14.8262, 0.66 ) }
    dend_4 { pt3dadd( -130.184, -186.879, 14.8563, 0.37 ) }
    dend_4 { pt3dadd( -130.315, -188.225, 14.8408, 0.29 ) }
    dend_4 { pt3dadd( -130.37, -189.107, 14.8183, 0.29 ) }
    dend_4 { pt3dadd( -130.412, -189.718, 14.8174, 0.74 ) }
    dend_4 { pt3dadd( -130.503, -190.536, 14.8693, 1.03 ) }
    dend_4 { pt3dadd( -130.764, -191.687, 15.0442, 0.29 ) }
    dend_4 { pt3dadd( -131.173, -192.716, 15.2305, 0.22 ) }
    dend_4 { pt3dadd( -131.534, -193.345, 15.3171, 0.22 ) }
    dend_4 { pt3dadd( -131.86, -193.838, 15.3576, 0.44 ) }
    dend_4 { pt3dadd( -132.426, -194.706, 15.3948, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_4 { pt3dadd( -132.958, -195.598, 15.3953, 0.29 ) }
    dend_4 { pt3dadd( -133.339, -196.377, 15.3609, 0.29 ) }
    dend_4 { pt3dadd( -133.581, -197.05, 15.3507, 0.29 ) }
    dend_4 { pt3dadd( -133.827, -198.008, 15.3817, 0.66 ) }
    dend_4 { pt3dadd( -134.079, -199.138, 15.4944, 0.37 ) }
    dend_4 { pt3dadd( -134.252, -199.96, 15.6191, 0.44 ) }
    dend_4 { pt3dadd( -134.465, -200.835, 15.8176, 0.37 ) }
    dend_4 { pt3dadd( -134.725, -201.701, 16.1117, 0.37 ) }
    dend_4 { pt3dadd( -135.009, -202.527, 16.497, 0.74 ) }
    dend_4 { pt3dadd( -135.412, -203.639, 17.132, 1.11 ) }
    dend_4 { pt3dadd( -135.626, -204.312, 17.5711, 1.11 ) }
    dend_4 { pt3dadd( -135.875, -205.397, 18.3649, 0.66 ) }
    dend_4 { pt3dadd( -136.03, -206.618, 19.3401, 0.44 ) }
    dend_4 { pt3dadd( -136.069, -207.627, 20.1629, 0.44 ) }
    dend_4 { pt3dadd( -136.052, -208.584, 20.9522, 0.29 ) }
    dend_4 { pt3dadd( -136.015, -209.561, 21.749, 0.29 ) }
    dend_4 { pt3dadd( -136.028, -210.355, 22.3656, 0.29 ) }
    dend_4 { pt3dadd( -136.098, -210.866, 22.6784, 0.29 ) }
    dend_4 { pt3dadd( -136.405, -211.612, 22.9555, 0.59 ) }
    dend_4 { pt3dadd( -136.864, -212.31, 23.0918, 0.96 ) }
    dend_4 { pt3dadd( -137.491, -213.125, 23.2069, 0.96 ) }
    dend_4 { pt3dadd( -138.187, -214.023, 23.3332, 0.44 ) }
    dend_4 { pt3dadd( -139.077, -215.277, 23.5154, 0.29 ) }
    dend_4 { pt3dadd( -139.6, -216.135, 23.6634, 0.29 ) }
    dend_4 { pt3dadd( -140.064, -217.057, 23.858, 0.66 ) }
    dend_4 { pt3dadd( -140.482, -218.072, 24.0854, 0.44 ) }
    dend_4 { pt3dadd( -140.856, -219.047, 24.3012, 0.29 ) }
    dend_4 { pt3dadd( -141.163, -219.84, 24.4544, 0.44 ) }
    dend_4 { pt3dadd( -141.499, -220.684, 24.6156, 1.25 ) }
    dend_4 { pt3dadd( -141.845, -221.537, 24.7431, 1.25 ) }
    dend_4 { pt3dadd( -142.312, -222.681, 24.8915, 1.03 ) }
    dend_4 { pt3dadd( -142.854, -223.972, 25.0318, 0.52 ) }
    dend_4 { pt3dadd( -143.412, -225.251, 25.1813, 0.29 ) }
    dend_4 { pt3dadd( -143.914, -226.382, 25.341, 0.29 ) }
    dend_4 { pt3dadd( -144.208, -227.024, 25.4537, 0.29 ) }
    dend_4 { pt3dadd( -144.591, -227.814, 25.6215, 0.37 ) }
    dend_4 { pt3dadd( -144.912, -228.364, 25.7611, 0.29 ) }
    dend_4 { pt3dadd( -145.276, -228.851, 25.8776, 0.29 ) }
    dend_4 { pt3dadd( -145.672, -229.259, 25.9344, 0.52 ) }
    dend_4 { pt3dadd( -146.353, -229.868, 25.9353, 1.18 ) }
    dend_4 { pt3dadd( -146.935, -230.378, 25.8935, 1.18 ) }
    dend_4 { pt3dadd( -148.096, -231.471, 25.7151, 0.81 ) }
    dend_4 { pt3dadd( -148.846, -232.338, 25.4977, 0.29 ) }
    dend_4 { pt3dadd( -149.272, -232.998, 25.2975, 0.29 ) }
    dend_4 { pt3dadd( -149.518, -233.532, 25.1326, 0.52 ) }
    dend_4 { pt3dadd( -149.772, -234.34, 24.9123, 0.88 ) }
    dend_4 { pt3dadd( -150.031, -235.407, 24.7065, 0.29 ) }
    dend_4 { pt3dadd( -150.264, -236.564, 24.6263, 0.22 ) }
    dend_4 { pt3dadd( -150.461, -237.379, 24.7236, 0.22 ) }
    dend_4 { pt3dadd( -150.663, -238.002, 24.8979, 0.44 ) }
    dend_4 { pt3dadd( -150.966, -238.746, 25.2383, 0.59 ) }
    dend_4 { pt3dadd( -151.501, -239.803, 25.8771, 0.29 ) }
    dend_4 { pt3dadd( -151.953, -240.575, 26.4189, 0.81 ) }
    dend_4 { pt3dadd( -152.458, -241.381, 27.0052, 0.81 ) }
    dend_4 { pt3dadd( -152.792, -241.919, 27.3612, 0.81 ) }
    dend_4 { pt3dadd( -153.447, -243.021, 27.9808, 0.29 ) }
    dend_4 { pt3dadd( -153.915, -243.815, 28.3285, 0.29 ) }
    dend_4 { pt3dadd( -154.285, -244.435, 28.5492, 0.88 ) }
    dend_4 { pt3dadd( -154.83, -245.27, 28.779, 1.18 ) }
    dend_4 { pt3dadd( -155.511, -246.234, 29.0167, 0.52 ) }
    dend_4 { pt3dadd( -155.944, -246.835, 29.1607, 0.37 ) }
    dend_4 { pt3dadd( -156.568, -247.75, 29.3525, 0.22 ) }
    dend_4 { pt3dadd( -156.932, -248.366, 29.4914, 0.44 ) }
    dend_4 { pt3dadd( -157.354, -249.235, 29.6937, 0.96 ) }
    dend_4 { pt3dadd( -157.815, -250.435, 29.9319, 0.22 ) }
    dend_4 { pt3dadd( -158.037, -251.179, 30.0475, 0.22 ) }
    dend_4 { pt3dadd( -158.269, -252.062, 30.1423, 0.37 ) }
    dend_4 { pt3dadd( -158.455, -252.745, 30.1824, 0.37 ) }
    dend_4 { pt3dadd( -158.812, -253.797, 30.1629, 0.22 ) }
    dend_4 { pt3dadd( -159.208, -254.722, 30.0953, 0.22 ) }
    dend_4 { pt3dadd( -159.62, -255.494, 30.0178, 0.81 ) }
    dend_4 { pt3dadd( -160.201, -256.454, 29.9368, 0.88 ) }
    dend_4 { pt3dadd( -160.853, -257.488, 29.8937, 0.29 ) }
    dend_4 { pt3dadd( -161.473, -258.519, 29.9204, 0.22 ) }
    dend_4 { pt3dadd( -161.938, -259.361, 29.9942, 0.22 ) }
    dend_4 { pt3dadd( -162.406, -260.321, 30.1287, 0.96 ) }
    dend_4 { pt3dadd( -162.821, -261.278, 30.2498, 0.81 ) }
    dend_4 { pt3dadd( -163.226, -262.338, 30.375, 0.37 ) }
    dend_4 { pt3dadd( -163.72, -263.721, 30.5244, 0.22 ) }
    dend_4 { pt3dadd( -164.139, -264.843, 30.6122, 0.22 ) }
    dend_4 { pt3dadd( -164.607, -266.004, 30.6161, 0.22 ) }
    dend_4 { pt3dadd( -165.07, -267.094, 30.5386, 0.22 ) }
    dend_4 { pt3dadd( -165.253, -267.526, 30.4961, 0.59 ) }
    dend_4 { pt3dadd( -165.583, -268.328, 30.4097, 1.03 ) }
    dend_4 { pt3dadd( -166.104, -269.604, 30.2781, 0.37 ) }
    dend_4 { pt3dadd( -166.534, -270.68, 30.224, 0.22 ) }
    dend_4 { pt3dadd( -166.802, -271.343, 30.2748, 0.22 ) }
    dend_4 { pt3dadd( -167.282, -272.44, 30.5819, 0.22 ) }
    dend_4 { pt3dadd( -167.61, -273.113, 30.8768, 0.22 ) }
    dend_4 { pt3dadd( -167.878, -273.617, 31.1867, 0.22 ) }
    dend_4 { pt3dadd( -168.163, -274.147, 31.5602, 0.37 ) }
    dend_4 { pt3dadd( -168.581, -274.93, 32.1128, 0.22 ) }
    dend_4 { pt3dadd( -168.862, -275.489, 32.4801, 0.22 ) }
    dend_4 { pt3dadd( -169.068, -275.939, 32.7344, 0.74 ) }
    dend_4 { pt3dadd( -169.31, -276.637, 33.1134, 1.03 ) }
    dend_4 { pt3dadd( -169.52, -277.608, 33.6584, 0.66 ) }
    dend_4 { pt3dadd( -169.629, -278.499, 34.1605, 0.29 ) }
    dend_4 { pt3dadd( -169.679, -279.109, 34.5108, 0.29 ) }
    dend_4 { pt3dadd( -169.709, -279.516, 34.7341, 0.29 ) }
    dend_4 { pt3dadd( -169.771, -280.202, 35.0919, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_4 { pt3dadd( -169.874, -281.098, 35.5499, 0.22 ) }
    dend_4 { pt3dadd( -169.933, -281.519, 35.7416, 0.22 ) }
    dend_4 { pt3dadd( -170.074, -282.401, 36.0937, 0.22 ) }
    dend_4 { pt3dadd( -170.227, -283.272, 36.4231, 0.22 ) }
    dend_4 { pt3dadd( -170.451, -284.456, 36.874, 0.74 ) }
    dend_4 { pt3dadd( -170.68, -285.509, 37.2417, 0.74 ) }
    dend_4 { pt3dadd( -170.916, -286.475, 37.5591, 0.74 ) }
    dend_4 { pt3dadd( -171.158, -287.413, 37.8534, 0.37 ) }
    dend_4 { pt3dadd( -171.469, -288.575, 38.2302, 0.37 ) }
    dend_4 { pt3dadd( -171.708, -289.406, 38.5207, 0.37 ) }
    dend_4 { pt3dadd( -171.978, -290.334, 38.8561, 0.88 ) }
    dend_4 { pt3dadd( -172.274, -291.443, 39.1998, 0.88 ) }
    dend_4 { pt3dadd( -172.497, -292.382, 39.5008, 0.44 ) }
    dend_4 { pt3dadd( -172.763, -293.549, 39.8878, 0.22 ) }
    dend_4 { pt3dadd( -172.901, -294.146, 40.1099, 0.22 ) }
    dend_4 { pt3dadd( -173.104, -294.956, 40.4618, 0.37 ) }
    dend_4 { pt3dadd( -173.457, -296.178, 41.1415, 0.74 ) }
    dend_4 { pt3dadd( -173.915, -297.241, 41.9402, 0.22 ) }
    dend_4 { pt3dadd( -174.399, -297.866, 42.5699, 0.22 ) }
    dend_4 { pt3dadd( -174.771, -298.116, 42.9194, 0.22 ) }
    dend_4 { pt3dadd( -175.259, -298.33, 43.2969, 0.22 ) }
    dend_4 { pt3dadd( -175.674, -298.485, 43.5508, 0.22 ) }
    dend_4 { pt3dadd( -176.576, -298.861, 44.0748, 0.22 ) }
    dend_4 { pt3dadd( -177.128, -299.176, 44.3476, 0.81 ) }
    dend_4 { pt3dadd( -177.798, -299.706, 44.6808, 1.18 ) }
    dend_4 { pt3dadd( -178.229, -300.151, 44.8962, 1.18 ) }
    dend_4 { pt3dadd( -179.016, -301.168, 45.2912, 0.37 ) }
    dend_4 { pt3dadd( -179.887, -302.497, 45.7009, 0.22 ) }
    dend_4 { pt3dadd( -180.513, -303.6, 45.9738, 0.22 ) }
    dend_4 { pt3dadd( -180.886, -304.295, 46.1134, 0.22 ) }
    dend_4 { pt3dadd( -181.406, -305.257, 46.2325, 0.37 ) }
    dend_4 { pt3dadd( -181.944, -306.223, 46.297, 0.74 ) }
    dend_4 { pt3dadd( -182.528, -307.189, 46.2915, 0.59 ) }
    dend_4 { pt3dadd( -183.11, -308.025, 46.1974, 0.29 ) }
    dend_4 { pt3dadd( -183.707, -308.794, 46.0917, 0.15 ) }
    dend_4 { pt3dadd( -184.412, -309.667, 45.9616, 0.15 ) }
    dend_4 { pt3dadd( -184.789, -310.151, 45.9118, 0.44 ) }
    dend_4 { pt3dadd( -185.412, -311.02, 45.8998, 0.66 ) }
    dend_4 { pt3dadd( -185.942, -311.975, 46.0175, 0.22 ) }
    dend_4 { pt3dadd( -186.304, -313.019, 46.3733, 0.22 ) }
    dend_4 { pt3dadd( -186.442, -313.758, 46.7894, 0.81 ) }
    dend_4 { pt3dadd( -186.557, -314.683, 47.4695, 0.96 ) }
    dend_4 { pt3dadd( -186.648, -315.447, 48.1199, 0.96 ) }
    dend_4 { pt3dadd( -186.729, -316.153, 48.79, 0.44 ) }
    dend_4 { pt3dadd( -186.841, -316.92, 49.574, 0.29 ) }
    dend_4 { pt3dadd( -187.013, -317.585, 50.2262, 0.22 ) }
    dend_4 { pt3dadd( -187.285, -318.222, 50.7569, 0.22 ) }
    dend_4 { pt3dadd( -187.669, -318.863, 51.1523, 0.22 ) }
    dend_4 { pt3dadd( -187.913, -319.215, 51.3133, 0.22 ) }
    dend_4 { pt3dadd( -188.131, -319.499, 51.4107, 0.74 ) }
    dend_4 { pt3dadd( -188.689, -320.199, 51.567, 1.03 ) }
    dend_4 { pt3dadd( -189.507, -321.238, 51.7219, 0.22 ) }
    dend_4 { pt3dadd( -190.056, -321.964, 51.8064, 0.22 ) }
    dend_4 { pt3dadd( -190.336, -322.356, 51.8478, 0.74 ) }
    dend_4 { pt3dadd( -190.664, -322.839, 51.8807, 0.96 ) }
    dend_4 { pt3dadd( -191.158, -323.605, 51.9537, 0.29 ) }
    dend_4 { pt3dadd( -191.545, -324.23, 52.0285, 0.22 ) }
    dend_4 { pt3dadd( -191.827, -324.703, 52.0931, 0.22 ) }
    dend_4 { pt3dadd( -192.221, -325.371, 52.204, 0.37 ) }
    dend_4 { pt3dadd( -192.751, -326.161, 52.3565, 0.22 ) }
    dend_4 { pt3dadd( -193.492, -327.117, 52.6254, 0.22 ) }
    dend_4 { pt3dadd( -193.78, -327.453, 52.7678, 0.22 ) }
    dend_4 { pt3dadd( -194.074, -327.758, 52.9423, 0.44 ) }
    dend_4 { pt3dadd( -194.536, -328.209, 53.259, 0.88 ) }
    dend_4 { pt3dadd( -195.107, -328.746, 53.6989, 0.44 ) }
    dend_4 { pt3dadd( -195.87, -329.482, 54.3406, 0.22 ) }
    dend_4 { pt3dadd( -196.426, -330.056, 54.79, 0.22 ) }
    dend_4 { pt3dadd( -196.978, -330.656, 55.2192, 0.22 ) }
    dend_4 { pt3dadd( -197.394, -331.109, 55.512, 0.22 ) }
    dend_4 { pt3dadd( -197.701, -331.454, 55.7017, 0.22 ) }
    dend_4 { pt3dadd( -198.002, -331.81, 55.8492, 0.59 ) }
    dend_4 { pt3dadd( -198.582, -332.489, 56.0615, 1.25 ) }
    dend_4 { pt3dadd( -199.394, -333.393, 56.3016, 0.44 ) }
    dend_4 { pt3dadd( -200.134, -334.194, 56.4957, 0.44 ) }
    dend_4 { pt3dadd( -200.679, -334.785, 56.6571, 0.52 ) }
    dend_4 { pt3dadd( -201.559, -335.772, 57.018, 0.22 ) }
    dend_4 { pt3dadd( -202.197, -336.491, 57.3386, 0.15 ) }
    dend_4 { pt3dadd( -202.77, -337.134, 57.683, 0.15 ) }
    dend_4 { pt3dadd( -203.006, -337.392, 57.8378, 0.37 ) }
    dend_4 { pt3dadd( -203.766, -338.178, 58.3461, 1.03 ) }
    dend_4 { pt3dadd( -204.994, -339.352, 59.1898, 0.22 ) }
    dend_4 { pt3dadd( -205.549, -339.839, 59.577, 0.22 ) }
    dend_4 { pt3dadd( -205.887, -340.131, 59.8087, 0.22 ) }
    dend_4 { pt3dadd( -206.49, -340.662, 60.2283, 0.22 ) }
    dend_4 { pt3dadd( -207.255, -341.318, 60.7301, 1.47 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 85/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -54.7465, 180.232, 42.252, 0.07 ) }
    dend_55 { pt3dadd( -55.7679, 181.6, 42.4352, 0.07 ) }
    dend_55 { pt3dadd( -56.4405, 182.564, 42.5514, 0.66 ) }
    dend_55 { pt3dadd( -57.0951, 183.55, 42.6611, 0.15 ) }
    dend_55 { pt3dadd( -57.7021, 184.49, 42.7611, 0.59 ) }
    dend_55 { pt3dadd( -58.2446, 185.324, 42.8508, 0.15 ) }
    dend_55 { pt3dadd( -58.6722, 185.981, 42.9216, 0.52 ) }
    dend_55 { pt3dadd( -59.0596, 186.667, 42.9794, 0.15 ) }
    dend_55 { pt3dadd( -59.4506, 187.401, 43.0349, 0.29 ) }
    dend_55 { pt3dadd( -59.8118, 188.104, 43.0844, 0.07 ) }
    dend_55 { pt3dadd( -60.0992, 188.627, 43.1263, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 96/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -54.7465, 180.232, 42.252, 0.22 ) }
    dend_52 { pt3dadd( -55.0962, 181.144, 42.6757, 0.22 ) }
    dend_52 { pt3dadd( -55.7358, 182.547, 43.0142, 0.07 ) }
    dend_52 { pt3dadd( -56.0686, 183.207, 43.0609, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_52 { pt3dadd( -56.4888, 184.029, 43.0229, 0.29 ) }
    dend_52 { pt3dadd( -57.0114, 185.063, 42.8976, 0.07 ) }
    dend_52 { pt3dadd( -57.5363, 186.129, 42.7283, 0.07 ) }
    dend_52 { pt3dadd( -57.889, 186.828, 42.5166, 0.52 ) }
    dend_52 { pt3dadd( -58.4044, 187.848, 42.0897, 0.07 ) }
    dend_52 { pt3dadd( -58.7038, 188.468, 41.7981, 0.07 ) }
    dend_52 { pt3dadd( -58.9229, 188.959, 41.5635, 0.07 ) }
    dend_52 { pt3dadd( -59.0444, 189.273, 41.4274, 0.22 ) }
    dend_52 { pt3dadd( -59.2975, 190.046, 41.1372, 0.44 ) }
    dend_52 { pt3dadd( -59.6381, 191.279, 40.727, 0.07 ) }
    dend_52 { pt3dadd( -59.7864, 191.929, 40.5556, 0.07 ) }
    dend_52 { pt3dadd( -59.8612, 192.288, 40.486, 0.52 ) }
    dend_52 { pt3dadd( -60.0217, 193.077, 40.3616, 0.74 ) }
    dend_52 { pt3dadd( -60.2495, 194.216, 40.2148, 0.07 ) }
    dend_52 { pt3dadd( -60.404, 195.0, 40.1458, 0.07 ) }
    dend_52 { pt3dadd( -60.5643, 195.786, 40.1252, 0.37 ) }
    dend_52 { pt3dadd( -60.8362, 197.038, 40.153, 0.07 ) }
    dend_52 { pt3dadd( -60.981, 197.621, 40.1892, 0.22 ) }
    dend_52 { pt3dadd( -61.0919, 197.996, 40.2397, 0.37 ) }
    dend_52 { pt3dadd( -61.3434, 198.717, 40.4155, 0.96 ) }
    dend_52 { pt3dadd( -61.7529, 199.742, 40.7912, 0.15 ) }
    dend_52 { pt3dadd( -61.9285, 200.134, 40.9876, 0.15 ) }
    dend_52 { pt3dadd( -62.2796, 200.882, 41.482, 0.59 ) }
    dend_52 { pt3dadd( -62.7785, 201.858, 42.2319, 0.07 ) }
    dend_52 { pt3dadd( -63.1652, 202.499, 42.7649, 0.07 ) }
    dend_52 { pt3dadd( -63.6326, 203.169, 43.3771, 0.59 ) }
    dend_52 { pt3dadd( -64.1536, 203.823, 43.9791, 0.15 ) }
    dend_52 { pt3dadd( -64.708, 204.471, 44.5389, 0.15 ) }
    dend_52 { pt3dadd( -65.1554, 204.95, 44.932, 0.88 ) }
    dend_52 { pt3dadd( -66.0093, 205.799, 45.5261, 0.07 ) }
    dend_52 { pt3dadd( -66.5448, 206.341, 45.8221, 0.07 ) }
    dend_52 { pt3dadd( -67.2768, 207.127, 46.1428, 0.07 ) }
    dend_52 { pt3dadd( -67.6435, 207.553, 46.2632, 0.81 ) }
    dend_52 { pt3dadd( -68.0636, 208.07, 46.3889, 1.25 ) }
    dend_52 { pt3dadd( -68.7402, 208.947, 46.5663, 0.22 ) }
    dend_52 { pt3dadd( -69.4706, 209.937, 46.751, 0.15 ) }
    dend_52 { pt3dadd( -70.224, 210.967, 46.9199, 0.37 ) }
    dend_52 { pt3dadd( -71.2742, 212.429, 47.1681, 0.07 ) }
    dend_52 { pt3dadd( -71.9022, 213.315, 47.3209, 0.07 ) }
    dend_52 { pt3dadd( -72.5575, 214.269, 47.4844, 0.96 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 40/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -37.526, -49.1335, -28.6607, 0.22 ) }
    dend_17 { pt3dadd( -37.0697, -50.251, -28.9525, 0.22 ) }
    dend_17 { pt3dadd( -36.915, -50.8158, -29.0894, 0.22 ) }
    dend_17 { pt3dadd( -36.8489, -51.2313, -29.2068, 0.22 ) }
    dend_17 { pt3dadd( -36.8338, -51.5506, -29.3067, 0.22 ) }
    dend_17 { pt3dadd( -36.8539, -52.0123, -29.4579, 0.29 ) }
    dend_17 { pt3dadd( -36.9598, -52.706, -29.6874, 0.29 ) }
    dend_17 { pt3dadd( -37.1951, -53.203, -29.8416, 0.29 ) }
    dend_17 { pt3dadd( -37.5646, -53.6864, -29.9803, 0.29 ) }
    dend_17 { pt3dadd( -37.9634, -54.0902, -30.0733, 0.29 ) }
    dend_17 { pt3dadd( -38.2191, -54.3114, -30.1092, 0.52 ) }
    dend_17 { pt3dadd( -38.7212, -54.7009, -30.1669, 0.88 ) }
    dend_17 { pt3dadd( -39.4897, -55.2381, -30.2155, 0.29 ) }
    dend_17 { pt3dadd( -40.3123, -55.7793, -30.2226, 0.29 ) }
    dend_17 { pt3dadd( -40.9814, -56.2022, -30.1844, 0.52 ) }
    dend_17 { pt3dadd( -41.428, -56.4786, -30.1429, 0.66 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 56/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -37.526, -49.1335, -28.6607, 0.15 ) }
    dend_16 { pt3dadd( -38.5142, -49.1265, -28.0901, 0.15 ) }
    dend_16 { pt3dadd( -39.0526, -49.1227, -27.7792, 0.15 ) }
    dend_16 { pt3dadd( -39.5684, -49.1191, -27.4814, 0.15 ) }
    dend_16 { pt3dadd( -39.9813, -49.1162, -27.243, 0.15 ) }
    dend_16 { pt3dadd( -40.4657, -49.1128, -26.9633, 0.15 ) }
    dend_16 { pt3dadd( -41.083, -49.1084, -26.6069, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 63/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -207.255, -341.318, 60.7301, 0.22 ) }
    dend_6 { pt3dadd( -207.993, -341.904, 62.3952, 0.22 ) }
    dend_6 { pt3dadd( -208.222, -342.191, 62.936, 0.22 ) }
    dend_6 { pt3dadd( -208.452, -342.534, 63.4583, 0.22 ) }
    dend_6 { pt3dadd( -208.811, -343.213, 64.2325, 0.22 ) }
    dend_6 { pt3dadd( -209.156, -343.949, 64.9408, 0.22 ) }
    dend_6 { pt3dadd( -209.352, -344.373, 65.3281, 0.37 ) }
    dend_6 { pt3dadd( -209.658, -345.074, 65.8376, 1.03 ) }
    dend_6 { pt3dadd( -209.82, -345.385, 66.0517, 1.03 ) }
    dend_6 { pt3dadd( -210.56, -346.594, 66.8986, 0.37 ) }
    dend_6 { pt3dadd( -211.284, -347.558, 67.5604, 0.29 ) }
    dend_6 { pt3dadd( -211.694, -348.019, 67.9051, 0.29 ) }
    dend_6 { pt3dadd( -212.476, -348.773, 68.5711, 0.59 ) }
    dend_6 { pt3dadd( -213.24, -349.44, 69.2375, 0.22 ) }
    dend_6 { pt3dadd( -213.751, -349.877, 69.7223, 0.52 ) }
    dend_6 { pt3dadd( -214.626, -350.627, 70.627, 0.96 ) }
    dend_6 { pt3dadd( -215.612, -351.559, 71.7658, 0.22 ) }
    dend_6 { pt3dadd( -216.239, -352.227, 72.5476, 0.22 ) }
    dend_6 { pt3dadd( -216.62, -352.696, 73.1047, 0.22 ) }
    dend_6 { pt3dadd( -216.946, -353.158, 73.6469, 0.22 ) }
    dend_6 { pt3dadd( -217.252, -353.668, 74.2424, 0.22 ) }
    dend_6 { pt3dadd( -217.421, -354.066, 74.7373, 0.22 ) }
    dend_6 { pt3dadd( -217.639, -355.021, 75.655, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 86/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -207.255, -341.318, 60.7301, 0.22 ) }
    dend_5 { pt3dadd( -206.475, -341.782, 61.2868, 0.22 ) }
    dend_5 { pt3dadd( -206.005, -342.068, 61.5717, 0.22 ) }
    dend_5 { pt3dadd( -205.735, -342.232, 61.6836, 0.22 ) }
    dend_5 { pt3dadd( -205.299, -342.498, 61.8354, 0.07 ) }
    dend_5 { pt3dadd( -204.986, -342.689, 61.9446, 0.07 ) }
    dend_5 { pt3dadd( -204.846, -342.774, 61.9935, 0.07 ) }
    dend_5 { pt3dadd( -204.347, -343.07, 62.1169, 0.88 ) }
    dend_5 { pt3dadd( -203.353, -343.667, 62.2761, 0.15 ) }
    dend_5 { pt3dadd( -202.76, -344.028, 62.3358, 0.44 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -72.5575, 214.269, 47.4844, 0.07 ) }
    dend_54 { pt3dadd( -73.2156, 215.594, 48.542, 0.07 ) }
    dend_54 { pt3dadd( -73.6225, 216.428, 49.2364, 0.59 ) }
    dend_54 { pt3dadd( -74.2958, 217.866, 50.4661, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( -74.776, 218.922, 51.4224, 0.74 ) }
    dend_54 { pt3dadd( -75.1955, 219.859, 52.3138, 0.07 ) }
    dend_54 { pt3dadd( -75.6031, 220.769, 53.1799, 0.07 ) }
    dend_54 { pt3dadd( -75.891, 221.398, 53.8534, 0.07 ) }
    dend_54 { pt3dadd( -76.2177, 222.123, 54.6729, 0.74 ) }
    dend_54 { pt3dadd( -76.6768, 223.274, 55.9716, 0.07 ) }
    dend_54 { pt3dadd( -76.9429, 223.992, 56.7722, 0.29 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 7/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -72.5575, 214.269, 47.4844, 0.07 ) }
    dend_53 { pt3dadd( -73.5659, 214.504, 46.7947, 0.07 ) }
    dend_53 { pt3dadd( -74.3508, 214.747, 46.1404, 0.07 ) }
    dend_53 { pt3dadd( -75.1061, 215.065, 45.3834, 0.07 ) }
    dend_53 { pt3dadd( -75.3811, 215.215, 45.0485, 0.29 ) }
    dend_53 { pt3dadd( -75.9199, 215.553, 44.3444, 0.74 ) }
    dend_53 { pt3dadd( -76.4777, 215.937, 43.6003, 0.29 ) }
    dend_53 { pt3dadd( -76.963, 216.345, 42.9078, 0.29 ) }
    dend_53 { pt3dadd( -77.6198, 216.912, 42.0484, 0.29 ) }
    dend_53 { pt3dadd( -78.4168, 217.539, 41.1942, 0.29 ) }
    dend_53 { pt3dadd( -78.7186, 217.739, 40.9461, 0.74 ) }
    dend_53 { pt3dadd( -79.3434, 218.063, 40.6161, 1.47 ) }
    dend_53 { pt3dadd( -80.3426, 218.474, 40.3183, 0.52 ) }
    dend_53 { pt3dadd( -81.342, 218.815, 40.1919, 0.22 ) }
    dend_53 { pt3dadd( -82.4789, 219.156, 40.1744, 0.15 ) }
    dend_53 { pt3dadd( -83.2862, 219.373, 40.2069, 0.29 ) }
    dend_53 { pt3dadd( -84.5011, 219.68, 40.2791, 0.07 ) }
    dend_53 { pt3dadd( -85.0238, 219.803, 40.3239, 0.52 ) }
    dend_53 { pt3dadd( -86.2991, 220.12, 40.4522, 0.07 ) }
    dend_53 { pt3dadd( -87.2199, 220.393, 40.58, 0.81 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -41.428, -56.4786, -30.1429, 0.22 ) }
    dend_19 { pt3dadd( -41.7979, -57.7329, -29.8982, 0.22 ) }
    dend_19 { pt3dadd( -42.1123, -58.754, -29.7496, 0.22 ) }
    dend_19 { pt3dadd( -42.3754, -59.6047, -29.6464, 0.22 ) }
    dend_19 { pt3dadd( -42.5632, -60.3015, -29.5949, 0.22 ) }
    dend_19 { pt3dadd( -42.8925, -61.7077, -29.5442, 0.22 ) }
    dend_19 { pt3dadd( -43.0416, -62.4509, -29.5269, 0.22 ) }
    dend_19 { pt3dadd( -43.1484, -63.138, -29.543, 0.22 ) }
    dend_19 { pt3dadd( -43.253, -63.8418, -29.5968, 0.22 ) }
    dend_19 { pt3dadd( -43.3946, -64.9268, -29.7791, 0.37 ) }
    dend_19 { pt3dadd( -43.4724, -65.5586, -29.9238, 0.52 ) }
    dend_19 { pt3dadd( -43.5332, -66.0385, -30.0443, 0.29 ) }
    dend_19 { pt3dadd( -43.5614, -66.2035, -30.0907, 0.29 ) }
    dend_19 { pt3dadd( -43.7803, -66.9039, -30.3254, 0.22 ) }
    dend_19 { pt3dadd( -44.2559, -67.6735, -30.6404, 0.22 ) }
    dend_19 { pt3dadd( -44.537, -67.9883, -30.7802, 0.22 ) }
    dend_19 { pt3dadd( -44.8471, -68.2723, -30.9239, 0.29 ) }
    dend_19 { pt3dadd( -45.1323, -68.5024, -31.0558, 0.29 ) }
    dend_19 { pt3dadd( -45.9047, -69.0863, -31.3853, 0.15 ) }
    dend_19 { pt3dadd( -46.3103, -69.365, -31.512, 0.22 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 47/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -41.428, -56.4786, -30.1429, 0.07 ) }
    dend_18 { pt3dadd( -42.0477, -56.2623, -29.2714, 0.07 ) }
    dend_18 { pt3dadd( -43.0063, -55.9276, -27.9234, 0.07 ) }
    dend_18 { pt3dadd( -43.8169, -55.6446, -26.7835, 0.07 ) }
    dend_18 { pt3dadd( -44.2084, -55.5079, -26.233, 0.29 ) }
    dend_18 { pt3dadd( -45.065, -55.2089, -25.0285, 0.22 ) }
    dend_18 { pt3dadd( -45.411, -55.0881, -24.5419, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 54/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -217.639, -355.021, 75.655, 0.07 ) }
    dend_10 { pt3dadd( -216.556, -354.505, 76.19, 0.07 ) }
    dend_10 { pt3dadd( -215.675, -354.063, 76.6289, 0.07 ) }
    dend_10 { pt3dadd( -214.991, -353.726, 76.9501, 0.22 ) }
    dend_10 { pt3dadd( -214.658, -353.558, 77.0857, 0.22 ) }
    dend_10 { pt3dadd( -213.995, -353.216, 77.3268, 0.22 ) }
    dend_10 { pt3dadd( -212.955, -352.697, 77.6324, 0.15 ) }
    dend_10 { pt3dadd( -212.232, -352.347, 77.7449, 0.15 ) }
    dend_10 { pt3dadd( -211.299, -351.943, 77.7462, 0.15 ) }
    dend_10 { pt3dadd( -210.693, -351.739, 77.688, 0.37 ) }
    dend_10 { pt3dadd( -210.141, -351.617, 77.5936, 0.59 ) }
    dend_10 { pt3dadd( -208.777, -351.507, 77.2659, 0.15 ) }
    dend_10 { pt3dadd( -207.519, -351.542, 76.8523, 0.15 ) }
    dend_10 { pt3dadd( -207.017, -351.589, 76.6534, 0.15 ) }
    dend_10 { pt3dadd( -206.158, -351.742, 76.2604, 0.29 ) }
    dend_10 { pt3dadd( -205.241, -351.986, 75.8255, 0.15 ) }
    dend_10 { pt3dadd( -204.441, -352.263, 75.4293, 0.52 ) }
    dend_10 { pt3dadd( -203.243, -352.756, 74.8118, 0.15 ) }
    dend_10 { pt3dadd( -202.55, -353.06, 74.4682, 0.29 ) }
    dend_10 { pt3dadd( -201.639, -353.437, 74.0397, 0.29 ) }
    dend_10 { pt3dadd( -200.765, -353.783, 73.6262, 0.15 ) }
    dend_10 { pt3dadd( -199.873, -354.138, 73.1928, 0.44 ) }
    dend_10 { pt3dadd( -199.158, -354.41, 72.8195, 0.15 ) }
    dend_10 { pt3dadd( -198.605, -354.606, 72.4992, 0.22 ) }
    dend_10 { pt3dadd( -197.379, -354.975, 71.7309, 0.07 ) }
    dend_10 { pt3dadd( -196.681, -355.128, 71.2714, 0.59 ) }
    dend_10 { pt3dadd( -195.572, -355.262, 70.4607, 0.07 ) }
    dend_10 { pt3dadd( -194.457, -355.3, 69.5607, 0.37 ) }
    dend_10 { pt3dadd( -193.6, -355.277, 68.8032, 0.15 ) }
    dend_10 { pt3dadd( -193.246, -355.245, 68.4447, 0.44 ) }
    dend_10 { pt3dadd( -192.849, -355.185, 67.9892, 0.44 ) }
    dend_10 { pt3dadd( -191.962, -355.018, 66.9724, 0.07 ) }
    dend_10 { pt3dadd( -191.328, -354.901, 66.2575, 0.07 ) }
    dend_10 { pt3dadd( -190.662, -354.816, 65.4955, 0.07 ) }
    dend_10 { pt3dadd( -189.901, -354.769, 64.6404, 0.07 ) }
    dend_10 { pt3dadd( -189.474, -354.777, 64.1634, 0.07 ) }
    dend_10 { pt3dadd( -188.751, -354.852, 63.3526, 0.37 ) }
    dend_10 { pt3dadd( -187.716, -355.07, 62.2429, 0.07 ) }
    dend_10 { pt3dadd( -187.222, -355.21, 61.7416, 0.07 ) }
    dend_10 { pt3dadd( -186.345, -355.485, 60.89, 0.52 ) }
    dend_10 { pt3dadd( -185.234, -355.869, 59.855, 0.07 ) }
    dend_10 { pt3dadd( -184.679, -356.079, 59.3446, 0.07 ) }
    dend_10 { pt3dadd( -183.84, -356.439, 58.5705, 0.52 ) }
    dend_10 { pt3dadd( -182.853, -356.957, 57.7232, 0.15 ) }
    dend_10 { pt3dadd( -182.317, -357.273, 57.3089, 0.15 ) }
    dend_10 { pt3dadd( -182.178, -357.364, 57.2106, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_10 { pt3dadd( -181.724, -357.669, 56.9327, 0.29 ) }
    dend_10 { pt3dadd( -181.37, -357.906, 56.7359, 0.29 ) }
    dend_10 { pt3dadd( -180.419, -358.538, 56.2511, 0.07 ) }
    dend_10 { pt3dadd( -179.592, -359.027, 55.8973, 0.07 ) }
    dend_10 { pt3dadd( -179.112, -359.278, 55.7029, 0.15 ) }
    dend_10 { pt3dadd( -178.199, -359.713, 55.3294, 0.07 ) }
    dend_10 { pt3dadd( -177.819, -359.882, 55.1648, 0.07 ) }
    dend_10 { pt3dadd( -177.177, -360.181, 54.8728, 0.29 ) }
    dend_10 { pt3dadd( -175.822, -360.859, 54.1908, 0.07 ) }
    dend_10 { pt3dadd( -175.109, -361.256, 53.767, 0.07 ) }
    dend_10 { pt3dadd( -174.688, -361.498, 53.4594, 0.29 ) }
    dend_10 { pt3dadd( -174.09, -361.83, 52.9499, 0.37 ) }
    dend_10 { pt3dadd( -173.045, -362.422, 51.8875, 0.07 ) }
    dend_10 { pt3dadd( -172.377, -362.851, 51.096, 0.15 ) }
    dend_10 { pt3dadd( -171.676, -363.394, 50.1554, 0.15 ) }
    dend_10 { pt3dadd( -171.002, -363.924, 49.2375, 0.15 ) }
    dend_10 { pt3dadd( -170.517, -364.26, 48.6257, 0.29 ) }
    dend_10 { pt3dadd( -170.028, -364.578, 48.0087, 0.59 ) }
    dend_10 { pt3dadd( -169.479, -364.909, 47.3118, 0.88 ) }
    dend_10 { pt3dadd( -168.779, -365.37, 46.5179, 0.29 ) }
    dend_10 { pt3dadd( -168.104, -365.887, 45.9107, 0.29 ) }
    dend_10 { pt3dadd( -167.374, -366.541, 45.3837, 0.15 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 22/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -217.639, -355.021, 75.655, 0.44 ) }
    dend_7 { pt3dadd( -218.619, -355.397, 75.5253, 0.44 ) }
    dend_7 { pt3dadd( -219.807, -355.936, 75.458, 0.22 ) }
    dend_7 { pt3dadd( -220.83, -356.467, 75.456, 0.66 ) }
    dend_7 { pt3dadd( -221.791, -357.032, 75.4966, 0.15 ) }
    dend_7 { pt3dadd( -222.518, -357.493, 75.5501, 0.15 ) }
    dend_7 { pt3dadd( -222.947, -357.781, 75.6087, 0.15 ) }
    dend_7 { pt3dadd( -223.611, -358.29, 75.8351, 0.15 ) }
    dend_7 { pt3dadd( -224.005, -358.621, 76.0586, 0.52 ) }
    dend_7 { pt3dadd( -224.66, -359.185, 76.522, 0.96 ) }
    dend_7 { pt3dadd( -225.404, -359.822, 77.0955, 0.66 ) }
    dend_7 { pt3dadd( -226.115, -360.41, 77.6595, 0.22 ) }
    dend_7 { pt3dadd( -227.26, -361.354, 78.5429, 0.22 ) }
    dend_7 { pt3dadd( -227.72, -361.748, 78.8789, 0.22 ) }
    dend_7 { pt3dadd( -228.188, -362.178, 79.2179, 0.22 ) }
    dend_7 { pt3dadd( -228.521, -362.508, 79.4592, 0.22 ) }
    dend_7 { pt3dadd( -228.919, -362.933, 79.7167, 0.37 ) }
    dend_7 { pt3dadd( -229.478, -363.522, 80.0102, 0.88 ) }
    dend_7 { pt3dadd( -230.019, -364.059, 80.2569, 0.52 ) }
    dend_7 { pt3dadd( -230.761, -364.742, 80.5966, 0.15 ) }
    dend_7 { pt3dadd( -231.324, -365.206, 80.8581, 0.15 ) }
    dend_7 { pt3dadd( -231.927, -365.648, 81.123, 0.81 ) }
    dend_7 { pt3dadd( -232.881, -366.308, 81.4934, 0.15 ) }
    dend_7 { pt3dadd( -233.951, -367.005, 81.8604, 0.15 ) }
    dend_7 { pt3dadd( -234.332, -367.252, 81.9699, 0.66 ) }
    dend_7 { pt3dadd( -234.945, -367.673, 82.0963, 1.03 ) }
    dend_7 { pt3dadd( -235.899, -368.421, 82.2013, 0.15 ) }
    dend_7 { pt3dadd( -236.58, -369.035, 82.2143, 0.15 ) }
    dend_7 { pt3dadd( -236.702, -369.156, 82.2033, 0.15 ) }
    dend_7 { pt3dadd( -237.068, -369.502, 82.1586, 0.59 ) }
    dend_7 { pt3dadd( -237.523, -369.884, 82.1159, 0.81 ) }
    dend_7 { pt3dadd( -238.344, -370.482, 82.0691, 0.22 ) }
    dend_7 { pt3dadd( -238.895, -370.842, 82.0591, 0.22 ) }
    dend_7 { pt3dadd( -239.842, -371.389, 82.082, 0.44 ) }
    dend_7 { pt3dadd( -240.815, -371.893, 82.1029, 0.15 ) }
    dend_7 { pt3dadd( -241.439, -372.162, 82.1138, 0.15 ) }
    dend_7 { pt3dadd( -242.016, -372.357, 82.1208, 1.11 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 59/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -242.016, -372.357, 82.1208, 0.22 ) }
    dend_9 { pt3dadd( -242.949, -373.225, 81.8846, 0.22 ) }
    dend_9 { pt3dadd( -243.327, -373.553, 81.7927, 0.22 ) }
    dend_9 { pt3dadd( -243.969, -374.1, 81.6516, 0.29 ) }
    dend_9 { pt3dadd( -244.614, -374.648, 81.4913, 0.15 ) }
    dend_9 { pt3dadd( -245.038, -375.01, 81.36, 0.15 ) }
    dend_9 { pt3dadd( -245.457, -375.383, 81.2057, 0.15 ) }
    dend_9 { pt3dadd( -245.871, -375.747, 81.0485, 0.52 ) }
    dend_9 { pt3dadd( -246.36, -376.232, 80.8224, 0.74 ) }
    dend_9 { pt3dadd( -247.099, -377.119, 80.387, 0.29 ) }
    dend_9 { pt3dadd( -247.526, -377.732, 80.0695, 0.15 ) }
    dend_9 { pt3dadd( -247.832, -378.225, 79.8204, 0.15 ) }
    dend_9 { pt3dadd( -247.981, -378.491, 79.6977, 0.15 ) }
    dend_9 { pt3dadd( -248.215, -378.999, 79.4865, 0.37 ) }
    dend_9 { pt3dadd( -248.482, -379.679, 79.2589, 0.15 ) }
    dend_9 { pt3dadd( -248.706, -380.331, 79.1144, 0.15 ) }
    dend_9 { pt3dadd( -248.942, -381.05, 79.0015, 0.22 ) }
    dend_9 { pt3dadd( -249.123, -381.6, 78.9275, 0.81 ) }
    dend_9 { pt3dadd( -249.354, -382.244, 78.8285, 0.66 ) }
    dend_9 { pt3dadd( -249.766, -383.255, 78.6675, 0.44 ) }
    dend_9 { pt3dadd( -250.045, -383.838, 78.5648, 0.44 ) }
    dend_9 { pt3dadd( -250.528, -384.775, 78.3874, 0.15 ) }
    dend_9 { pt3dadd( -250.765, -385.211, 78.2928, 0.15 ) }
    dend_9 { pt3dadd( -251.237, -386.017, 78.0931, 0.15 ) }
    dend_9 { pt3dadd( -251.598, -386.583, 77.9403, 0.81 ) }
    dend_9 { pt3dadd( -252.395, -387.776, 77.616, 0.15 ) }
    dend_9 { pt3dadd( -252.631, -388.107, 77.5266, 0.15 ) }
    dend_9 { pt3dadd( -252.883, -388.456, 77.433, 0.15 ) }
    dend_9 { pt3dadd( -253.176, -388.901, 77.3237, 0.15 ) }
    dend_9 { pt3dadd( -253.373, -389.263, 77.2525, 0.37 ) }
    dend_9 { pt3dadd( -253.678, -389.994, 77.1096, 0.74 ) }
    dend_9 { pt3dadd( -253.973, -390.88, 76.9313, 0.22 ) }
    dend_9 { pt3dadd( -254.185, -391.573, 76.7824, 0.22 ) }
    dend_9 { pt3dadd( -254.355, -392.214, 76.6489, 0.59 ) }
    dend_9 { pt3dadd( -254.526, -393.019, 76.5014, 0.22 ) }
    dend_9 { pt3dadd( -254.71, -394.101, 76.3118, 0.15 ) }
    dend_9 { pt3dadd( -254.783, -394.604, 76.2298, 0.15 ) }
    dend_9 { pt3dadd( -254.858, -395.089, 76.1637, 0.37 ) }
    dend_9 { pt3dadd( -255.009, -395.768, 76.081, 0.66 ) }
    dend_9 { pt3dadd( -255.275, -396.478, 75.9861, 0.22 ) }
    dend_9 { pt3dadd( -255.608, -397.033, 75.916, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_9 { pt3dadd( -255.943, -397.435, 75.8826, 0.15 ) }
    dend_9 { pt3dadd( -256.31, -397.809, 75.858, 0.29 ) }
    dend_9 { pt3dadd( -256.671, -398.139, 75.837, 0.88 ) }
    dend_9 { pt3dadd( -257.437, -398.809, 75.8058, 0.22 ) }
    dend_9 { pt3dadd( -257.991, -399.272, 75.8144, 0.15 ) }
    dend_9 { pt3dadd( -258.556, -399.754, 75.8473, 0.15 ) }
    dend_9 { pt3dadd( -258.802, -399.974, 75.8671, 0.15 ) }
    dend_9 { pt3dadd( -259.282, -400.437, 75.914, 0.22 ) }
    dend_9 { pt3dadd( -260.005, -401.175, 75.9702, 0.15 ) }
    dend_9 { pt3dadd( -260.956, -402.172, 76.0242, 0.15 ) }
    dend_9 { pt3dadd( -261.25, -402.465, 76.0323, 0.37 ) }
    dend_9 { pt3dadd( -261.689, -402.897, 76.013, 0.37 ) }
    dend_9 { pt3dadd( -262.237, -403.444, 75.959, 0.22 ) }
    dend_9 { pt3dadd( -262.824, -404.071, 75.871, 0.22 ) }
    dend_9 { pt3dadd( -263.238, -404.574, 75.7835, 0.66 ) }
    dend_9 { pt3dadd( -263.652, -405.19, 75.658, 0.66 ) }
    dend_9 { pt3dadd( -264.268, -406.239, 75.4579, 0.15 ) }
    dend_9 { pt3dadd( -264.469, -406.6, 75.3839, 0.15 ) }
    dend_9 { pt3dadd( -264.887, -407.395, 75.2202, 0.59 ) }
    dend_9 { pt3dadd( -265.213, -408.059, 75.0849, 0.15 ) }
    dend_9 { pt3dadd( -265.584, -408.869, 74.9099, 0.15 ) }
    dend_9 { pt3dadd( -265.827, -409.459, 74.7662, 0.44 ) }
    dend_9 { pt3dadd( -266.264, -410.526, 74.4591, 0.15 ) }
    dend_9 { pt3dadd( -266.424, -410.895, 74.3296, 0.15 ) }
    dend_9 { pt3dadd( -266.64, -411.325, 74.1403, 0.15 ) }
    dend_9 { pt3dadd( -266.883, -411.729, 73.9253, 0.37 ) }
    dend_9 { pt3dadd( -267.364, -412.405, 73.5082, 0.44 ) }
    dend_9 { pt3dadd( -267.901, -413.074, 73.0458, 0.22 ) }
    dend_9 { pt3dadd( -268.11, -413.293, 72.8896, 0.22 ) }
    dend_9 { pt3dadd( -268.542, -413.66, 72.6246, 0.15 ) }
    dend_9 { pt3dadd( -269.012, -413.977, 72.3995, 0.15 ) }
    dend_9 { pt3dadd( -269.226, -414.092, 72.3164, 0.15 ) }
    dend_9 { pt3dadd( -269.636, -414.277, 72.1893, 0.29 ) }
    dend_9 { pt3dadd( -270.297, -414.573, 71.9882, 0.37 ) }
    dend_9 { pt3dadd( -270.919, -414.877, 71.7971, 0.22 ) }
    dend_9 { pt3dadd( -271.622, -415.283, 71.5921, 0.15 ) }
    dend_9 { pt3dadd( -272.383, -415.759, 71.3748, 0.29 ) }
    dend_9 { pt3dadd( -273.065, -416.204, 71.1697, 0.15 ) }
    dend_9 { pt3dadd( -273.495, -416.491, 71.0347, 0.15 ) }
    dend_9 { pt3dadd( -274.054, -416.864, 70.8589, 0.52 ) }
    dend_9 { pt3dadd( -274.942, -417.437, 70.5722, 0.15 ) }
    dend_9 { pt3dadd( -275.552, -417.838, 70.3551, 0.15 ) }
    dend_9 { pt3dadd( -276.371, -418.409, 69.9777, 0.15 ) }
    dend_9 { pt3dadd( -276.85, -418.751, 69.6978, 0.52 ) }
    dend_9 { pt3dadd( -277.278, -419.034, 69.4144, 0.52 ) }
    dend_9 { pt3dadd( -278.034, -419.509, 68.8523, 0.15 ) }
    dend_9 { pt3dadd( -278.444, -419.746, 68.5089, 0.15 ) }
    dend_9 { pt3dadd( -279.318, -420.255, 67.6887, 0.15 ) }
    dend_9 { pt3dadd( -279.776, -420.534, 67.1945, 0.29 ) }
    dend_9 { pt3dadd( -280.292, -420.892, 66.5423, 0.96 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 50/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -242.016, -372.357, 82.1208, 0.88 ) }
    dend_8 { pt3dadd( -242.781, -372.795, 82.6192, 0.88 ) }
    dend_8 { pt3dadd( -243.725, -373.356, 83.1605, 0.22 ) }
    dend_8 { pt3dadd( -244.622, -373.934, 83.6332, 0.15 ) }
    dend_8 { pt3dadd( -245.371, -374.455, 84.0074, 0.15 ) }
    dend_8 { pt3dadd( -245.799, -374.778, 84.2105, 0.37 ) }
    dend_8 { pt3dadd( -246.431, -375.3, 84.4936, 1.03 ) }
    dend_8 { pt3dadd( -247.259, -376.071, 84.8323, 0.44 ) }
    dend_8 { pt3dadd( -247.976, -376.839, 85.08, 0.15 ) }
    dend_8 { pt3dadd( -248.339, -377.279, 85.1994, 0.15 ) }
    dend_8 { pt3dadd( -248.775, -377.853, 85.3505, 0.37 ) }
    dend_8 { pt3dadd( -249.408, -378.711, 85.5861, 0.15 ) }
    dend_8 { pt3dadd( -249.788, -379.204, 85.7354, 0.29 ) }
    dend_8 { pt3dadd( -250.606, -380.145, 86.0531, 0.07 ) }
    dend_8 { pt3dadd( -251.362, -380.87, 86.2875, 0.07 ) }
    dend_8 { pt3dadd( -252.169, -381.527, 86.5168, 0.07 ) }
    dend_8 { pt3dadd( -252.688, -381.872, 86.6503, 0.29 ) }
    dend_8 { pt3dadd( -253.747, -382.446, 86.8892, 0.07 ) }
    dend_8 { pt3dadd( -254.609, -382.83, 87.0756, 0.59 ) }
    dend_8 { pt3dadd( -255.833, -383.272, 87.3466, 0.15 ) }
    dend_8 { pt3dadd( -256.613, -383.522, 87.5448, 0.15 ) }
    dend_8 { pt3dadd( -257.695, -383.853, 87.9083, 0.15 ) }
    dend_8 { pt3dadd( -258.254, -384.042, 88.1385, 0.37 ) }
    dend_8 { pt3dadd( -259.294, -384.455, 88.6589, 0.07 ) }
    dend_8 { pt3dadd( -259.915, -384.755, 89.0305, 0.22 ) }
    dend_8 { pt3dadd( -260.622, -385.16, 89.4801, 0.07 ) }
    dend_8 { pt3dadd( -261.348, -385.609, 89.9128, 0.07 ) }
    dend_8 { pt3dadd( -262.007, -386.035, 90.2791, 0.59 ) }
    dend_8 { pt3dadd( -263.023, -386.683, 90.7594, 0.15 ) }
    dend_8 { pt3dadd( -263.83, -387.187, 91.0686, 0.74 ) }
    dend_8 { pt3dadd( -265.226, -388.002, 91.4815, 0.07 ) }
    dend_8 { pt3dadd( -266.387, -388.636, 91.7755, 0.07 ) }
    dend_8 { pt3dadd( -267.364, -389.131, 91.9886, 0.29 ) }
    dend_8 { pt3dadd( -268.78, -389.789, 92.269, 0.07 ) }
    dend_8 { pt3dadd( -269.601, -390.141, 92.4121, 0.44 ) }
    dend_8 { pt3dadd( -271.335, -390.822, 92.6888, 0.07 ) }
    dend_8 { pt3dadd( -272.014, -391.071, 92.7904, 0.07 ) }
    dend_8 { pt3dadd( -272.966, -391.415, 92.9423, 0.37 ) }
    dend_8 { pt3dadd( -274.54, -392.002, 93.2224, 0.07 ) }
    dend_8 { pt3dadd( -276.134, -392.625, 93.5274, 0.07 ) }
    dend_8 { pt3dadd( -277.137, -393.052, 93.7258, 0.37 ) }
    dend_8 { pt3dadd( -278.479, -393.702, 93.9917, 0.15 ) }
    dend_8 { pt3dadd( -279.706, -394.384, 94.2235, 0.07 ) }
    dend_8 { pt3dadd( -280.587, -394.906, 94.4024, 0.22 ) }
    dend_8 { pt3dadd( -281.223, -395.327, 94.5437, 0.52 ) }
    dend_8 { pt3dadd( -281.856, -395.82, 94.6927, 0.88 ) }
    dend_8 { pt3dadd( -282.701, -396.597, 94.9044, 0.44 ) }
    dend_8 { pt3dadd( -283.397, -397.389, 95.072, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_44 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_44, dend_35, dend_32, dend_25, dend_0, dend_46, dend_45, dend_43, dend_36, dend_34, dend_33, dend_31, dend_26, dend_22, dend_1, dend_48, dend_47, dend_38, dend_37, dend_30, dend_27, dend_24, dend_23, dend_13, dend_2, dend_56, dend_49, dend_40, dend_39, dend_29, dend_28, dend_21, dend_14, dend_12, dend_3, dend_51, dend_50, dend_42, dend_41, dend_20, dend_15, dend_11, dend_4, dend_55, dend_52, dend_17, dend_16, dend_6, dend_5, dend_54, dend_53, dend_19, dend_18, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_45 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_43 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_34 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_31 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_26 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_47 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_38 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_27 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_24 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_23 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_56 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_12 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_3 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_51 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_50 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_11 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_4 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_10 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_9 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_8 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_2 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_35 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_22 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_25 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_44 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_46 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_48 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_49 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_21 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_15 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_20 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_16 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_17 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_18 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_19 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_55 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_54 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_53 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_37 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_40 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_41 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_42 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_5 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_28 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_6 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_29 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_7 OneSecGrp_SectionRef_58.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_0, dend_0, axon_0, axon_0, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, axon_1, axon_1, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_32 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 3
    dend_36 nseg = 11
    dend_34 nseg = 11
    dend_33 nseg = 5
    dend_31 nseg = 7
    dend_26 nseg = 17
    dend_47 nseg = 5
    dend_38 nseg = 7
    dend_30 nseg = 3
    dend_27 nseg = 5
    dend_24 nseg = 3
    dend_23 nseg = 5
    dend_56 nseg = 5
    dend_12 nseg = 3
    dend_3 nseg = 3
    dend_51 nseg = 7
    dend_50 nseg = 7
    dend_11 nseg = 9
    dend_4 nseg = 19
    dend_52 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_NBC_a91e150b71_0_0


