// Cell: bAC217_L5_DBC_7f0bb8efe9_0_0
/*
{
  "id" : "bAC217_L5_DBC_7f0bb8efe9_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-4.28115, -11.0873, 1.6054, 2.71903", "-3.90555, -10.0189, 1.46271, 4.54351", "-3.52995, -8.95054, 1.32001, 6.06676", "-3.15435, -7.88215, 1.17732, 7.70089", "-2.77875, -6.81375, 1.03462, 9.50221", "-2.40315, -5.74536, 0.891931, 11.4189", "-2.02755, -4.67696, 0.749237, 12.8756", "-1.65195, -3.60857, 0.606544, 14.0093", "-1.27635, -2.54017, 0.46385, 14.551", "-0.900746, -1.47178, 0.321156, 14.6039", "-0.525145, -0.403386, 0.178462, 14.3615", "-0.149545, 0.665008, 0.0357687, 13.9828", "0.226055, 1.7334, -0.106925, 13.3923", "0.601655, 2.8018, -0.249619, 12.9274", "0.977256, 3.87019, -0.392313, 12.1033", "1.35286, 4.93859, -0.535006, 10.4725", "1.72846, 6.00698, -0.6777, 8.96565", "2.10406, 7.07537, -0.820394, 7.72714", "2.47966, 8.14377, -0.963088, 6.28127", "2.85526, 9.21216, -1.10578, 4.62664", "3.23086, 10.2806, -1.24848, 2.72659" ]
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-6.8285, -4.03579, -7.44048, 0.74", "-6.8285, -4.03579, -7.44048, 0.74", "-7.33358, -5.1251, -7.60388, 0.74", "-7.37874, -5.18553, -7.61316, 0.74", "-8.3237, -6.01746, -7.73811, 0.66", "-9.27997, -6.60471, -7.81972, 0.44", "-10.4166, -7.12518, -7.88152, 0.44", "-11.5125, -7.42444, -8.03569, 0.44", "-12.2305, -7.54562, -8.17414, 1.03", "-13.1327, -7.67607, -8.43393, 1.33", "-13.9443, -7.75302, -8.73149, 1.47", "-14.7535, -7.84416, -9.12917, 0.66", "-16.2968, -8.33325, -10.393, 0.37", "-16.6313, -8.60009, -10.9213, 0.37", "-17.0784, -9.23012, -12.0178, 1.11", "-17.0981, -9.27499, -12.0899, 1.11", "-17.208, -9.67991, -12.6823, 0.88", "-17.3495, -10.5916, -13.8882, 0.59", "-17.4827, -11.8154, -15.3082, 1.03", "-17.5061, -12.0259, -15.5663, 1.25", "-17.5178, -12.0991, -15.6535, 1.25", "-17.5838, -12.4214, -16.0373, 1.25", "-17.6119, -12.5087, -16.1454, 1.25", "-18.0302, -13.3788, -17.1722, 0.52", "-18.5147, -14.0427, -17.936, 0.22", "-18.8419, -14.2857, -18.2906, 0.22", "-19.0778, -14.3898, -18.48, 0.22", "-19.6611, -14.5572, -18.8528, 0.88", "-20.0595, -14.6656, -19.059, 1.25", "-20.6743, -14.8495, -19.3326, 1.25", "-21.95, -15.3505, -19.9997, 0.29", "-22.3077, -15.554, -20.2425, 0.29", "-22.8265, -15.9826, -20.6797, 0.29", "-23.383, -16.6012, -21.2289, 0.29", "-23.9211, -17.3153, -21.8305, 0.29", "-24.4212, -18.0857, -22.4365, 0.52", "-24.6122, -18.4282, -22.6818, 0.52", "-24.7829, -18.6986, -22.8789, 0.29", "-25.0537, -19.0616, -23.2493, 0.29", "-25.3994, -19.4478, -23.7594, 1.25", "-25.6509, -19.6911, -24.1146, 1.47", "-25.6903, -19.7279, -24.1721, 1.47", "-25.8802, -19.9132, -24.4796, 1.47", "-26.9777, -21.0653, -26.5272, 0.22", "-27.1483, -21.2735, -26.8968, 0.81", "-27.3556, -21.5404, -27.3547, 0.81", "-27.3841, -21.574, -27.4164, 0.81", "-27.6792, -21.868, -27.9804, 0.96", "-28.3529, -22.4566, -29.2135, 0.29", "-28.3972, -22.4883, -29.2846, 0.29", "-28.656, -22.7143, -29.7518, 0.29", "-29.3662, -23.5868, -31.2182, 1.92", "-29.725, -24.1566, -32.0413, 2.58", "-30.0627, -24.8133, -32.8928, 2.58", "-30.0866, -24.8613, -32.947, 2.58", "-30.7535, -26.1983, -34.3003, 0.66", "-31.2786, -27.1136, -35.1449, 0.22", "-31.3899, -27.2758, -35.2687, 0.81", "-32.0594, -28.0954, -35.8814, 0.22", "-32.8709, -28.9853, -36.5223, 2.58", "-33.2601, -29.3692, -36.8125, 3.32", "-34.7509, -30.6962, -37.8595, 0.44", "-35.5294, -31.3895, -38.419, 1.33", "-36.126, -31.9793, -38.867, 1.47", "-36.7615, -32.7675, -39.4403, 0.22", "-36.826, -32.8667, -39.5148, 0.22", "-37.2105, -33.5094, -39.9929, 0.22", "-37.5802, -34.2262, -40.4838, 1.69", "-37.7228, -34.483, -40.6602, 2.06", "-38.7813, -36.0347, -41.9069, 0.22", "-38.82, -36.0817, -41.9515, 0.22", "-39.3015, -36.655, -42.5546, 0.22", "-39.5455, -36.9418, -42.8813, 0.88", "-39.7802, -37.2636, -43.2949, 1.11", "-40.746, -38.7297, -45.2047, 0.22", "-40.7736, -38.7786, -45.2712, 0.22", "-41.0971, -39.4279, -46.1772, 1.84", "-41.2346, -39.7596, -46.6384, 1.99", "-41.8143, -41.3299, -48.7268, 0.29", "-41.9857, -41.7944, -49.2866, 0.29", "-42.5759, -43.1023, -50.6888, 0.29", "-42.6455, -43.234, -50.8292, 0.29", "-43.1132, -43.9544, -51.5906, 1.11", "-43.3721, -44.2934, -51.977, 1.47", "-44.055, -45.0701, -52.889, 0.29", "-44.9796, -46.013, -54.0643, 2.43", "-45.7344, -46.6813, -54.9247, 2.43", "-46.9082, -47.602, -56.2141, 0.52", "-47.792, -48.2102, -57.1614, 0.66", "-48.5085, -48.6561, -57.9184, 0.22", "-48.8797, -48.8617, -58.2877, 0.59", "-49.2306, -49.0479, -58.6004, 0.59", "-50.0604, -49.5233, -59.2622, 0.22", "-50.6408, -49.9383, -59.718, 1.18", "-50.8963, -50.1714, -59.9119, 1.33", "-51.9092, -51.2897, -60.7909, 0.37", "-52.5, -52.0423, -61.3557, 0.22", "-52.9753, -52.7129, -61.8278, 0.22", "-53.5161, -53.5609, -62.3731, 1.55", "-53.8626, -54.1544, -62.7299, 2.06", "-54.7459, -55.8185, -63.6802, 0.22", "-54.9233, -56.1758, -63.8661, 0.52", "-55.1094, -56.5005, -64.0354, 0.52", "-55.6981, -57.4124, -64.5071, 0.22", "-56.0325, -57.9067, -64.7539, 0.22", "-56.4009, -58.4434, -65.0468, 1.11", "-56.717, -58.8911, -65.2901, 1.33", "-57.6678, -60.1636, -66.0553, 0.22", "-58.0067, -60.5858, -66.3271, 1.03", "-58.1985, -60.7999, -66.4766, 1.03", "-59.2348, -61.9054, -67.2592, 0.22", "-59.6124, -62.312, -67.5355, 0.22", "-59.9372, -62.6667, -67.7662, 1.18", "-60.2406, -62.986, -67.9689, 1.4", "-61.4452, -64.2041, -68.8378, 0.22", "-61.8413, -64.592, -69.1174, 1.11", "-62.1382, -64.8761, -69.3192, 1.33", "-62.3938, -65.1338, -69.5123, 1.18", "-63.3805, -66.1911, -70.2971, 0.15", "-64.2193, -67.1316, -70.9814, 0.15", "-64.5416, -67.5033, -71.24, 0.81", "-64.7386, -67.7365, -71.4279, 0.81", "-65.5505, -68.7235, -72.2555, 0.22", "-66.2147, -69.5611, -72.9536, 0.22", "-66.8188, -70.3502, -73.6024, 1.47", "-67.0815, -70.6801, -73.8933, 1.84", "-68.5058, -72.4065, -75.671, 0.15", "-68.8551, -72.7994, -76.1263, 0.15", "-69.0696, -73.024, -76.4272, 0.74", "-69.1721, -73.124, -76.575, 0.74", "-69.9905, -73.8529, -77.7362, 0.29", "-70.7236, -74.4589, -78.7318, 1.25", "-71.0088, -74.6809, -79.0839, 1.33", "-71.9297, -75.418, -80.4214, 0.15", "-72.212, -75.651, -80.8668, 0.74", "-72.8063, -76.1543, -81.8334, 0.22", "-72.8377, -76.1816, -81.8835, 0.22", "-73.0869, -76.3959, -82.2659, 0.88", "-74.4982, -77.609, -84.4104, 0.22", "-74.5444, -77.6487, -84.4759, 0.22", "-74.6802, -77.7591, -84.6371, 0.22", "-75.2842, -78.2229, -85.2033, 1.47", "-75.5653, -78.4265, -85.4112, 1.84", "-75.8131, -78.6033, -85.5498, 1.84", "-76.1024, -78.8092, -85.6548, 1.84", "-77.3666, -79.7906, -86.4302, 0.15", "-77.4471, -79.8513, -86.4899, 0.15", "-78.1021, -80.294, -87.0219, 0.15", "-78.6636, -80.673, -87.4974, 0.96", "-79.0067, -80.9189, -87.7996, 0.96", "-80.7963, -82.2907, -89.4484, 0.22", "-81.2564, -82.689, -89.9048, 0.22", "-81.8271, -83.214, -90.4698, 0.22", "-82.47, -83.8333, -91.0818, 1.11", "-82.8963, -84.2683, -91.4734, 1.69", "-83.0343, -84.4272, -91.5938, 1.69", "-84.2163, -86.0217, -92.588, 0.22", "-84.6297, -86.6506, -92.9698, 0.37", "-85.0174, -87.2635, -93.344, 0.22", "-85.5519, -88.0719, -93.8389, 1.47", "-85.9342, -88.6096, -94.2079, 1.69", "-86.9153, -89.9374, -95.1463, 0.22", "-87.7429, -91.0895, -95.9464, 0.22", "-88.1571, -91.6677, -96.3687, 1.4", "-88.5517, -92.2167, -96.7834, 1.84", "-89.8385, -93.9375, -98.1306, 0.15", "-90.2931, -94.5135, -98.6085, 0.15", "-90.7266, -95.0316, -99.0622, 1.18", "-90.9632, -95.3127, -99.3181, 1.18", "-90.9969, -95.354, -99.3549, 1.18", "-92.0506, -96.746, -100.516, 0.22", "-92.5373, -97.4694, -101.026, 1.25", "-93.2308, -98.5107, -101.781, 0.15", "-93.5145, -98.891, -102.079, 0.88", "-93.6625, -99.0784, -102.225, 1.03", "-94.1247, -99.6423, -102.654, 0.15", "-94.6536, -100.262, -103.096, 0.15", "-95.0831, -100.715, -103.459, 0.74", "-95.9022, -101.501, -104.135, 0.22", "-96.6073, -102.181, -104.717, 0.22", "-97.2393, -102.794, -105.237, 1.99", "-97.5244, -103.08, -105.472, 2.28", "-99.0997, -104.778, -106.758, 0.22", "-99.3144, -105.045, -106.94, 0.52", "-100.017, -105.991, -107.512, 0.15", "-100.059, -106.046, -107.545, 0.15", "-100.386, -106.457, -107.774, 0.81", "-100.423, -106.505, -107.796, 0.81", "-101.478, -107.835, -108.237, 0.22", "-102.253, -108.818, -108.62, 0.22", "-102.306, -108.881, -108.647, 0.22", "-103.048, -109.82, -109.04, 0.22", "-103.567, -110.483, -109.353, 0.81", "-103.615, -110.548, -109.384, 0.81", "-104.4, -111.719, -109.983, 0.22", "-104.856, -112.408, -110.355, 1.47", "-105.022, -112.653, -110.485, 1.77", "-106.286, -114.474, -111.454, 0.22", "-106.661, -114.978, -111.725, 0.52", "-107.52, -116.062, -112.291, 0.22", "-108.578, -117.308, -112.913, 0.22", "-109.123, -117.927, -113.231, 1.18", "-109.289, -118.114, -113.325, 1.4", "-110.575, -119.592, -114.149, 0.15", "-110.866, -119.936, -114.359, 0.66", "-112.299, -121.692, -115.487, 0.15", "-112.986, -122.563, -116.107, 1.69", "-113.197, -122.835, -116.309, 1.84", "-114.73, -124.887, -117.852, 0.22", "-115.014, -125.292, -118.169, 0.66", "-115.052, -125.353, -118.221, 0.66", "-115.435, -125.984, -118.82, 0.15", "-115.603, -126.241, -119.071, 0.59", "-115.657, -126.319, -119.149, 0.59", "-116.31, -127.229, -120.027, 0.22", "-116.906, -128.034, -120.852, 1.33", "-117.529, -128.894, -121.747, 0.15", "-117.81, -129.31, -122.189, 0.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "4.2915, 5.40221, -8.94048, 1.18", "4.32579, 6.31484, -8.64175, 1.18", "4.37034, 7.5928, -8.25048, 1.47", "4.39687, 8.5873, -8.05487, 1.92", "4.41152, 9.93295, -7.93868, 0.81", "4.40705, 11.0505, -7.94048, 0.81", "4.39637, 11.7646, -7.99529, 0.74", "4.39072, 11.8813, -8.03011, 0.74", "4.26757, 13.2149, -8.72229, 0.74", "4.18757, 13.9486, -9.26835, 1.11", "4.14364, 14.3883, -9.69791, 1.11", "4.09875, 15.0279, -10.3983, 1.11", "4.08205, 16.2066, -11.6475, 1.25", "4.08329, 16.2498, -11.6914, 1.25", "4.18771, 17.3078, -12.7113, 1.03", "4.3731, 18.4806, -13.7794, 0.52", "4.63571, 19.6845, -14.7881, 0.52", "4.86459, 20.4932, -15.3898, 0.81", "4.88253, 20.5442, -15.4187, 0.81", "5.12645, 21.1568, -15.7041, 1.18", "5.25758, 21.408, -15.7664, 1.18", "5.46145, 21.7247, -15.768, 1.18", "5.50322, 21.7835, -15.7625, 1.18", "5.65329, 22.0071, -15.7471, 1.4", "5.73358, 22.1545, -15.736, 1.4", "5.9685, 22.7043, -15.6915, 1.4", "6.15572, 23.2775, -15.6385, 0.88", "6.3374, 24.1795, -15.5471, 0.52", "6.37535, 25.0129, -15.5398, 0.37", "6.30043, 25.8951, -15.6427, 0.37", "6.2277, 26.2881, -15.7279, 0.29", "6.03066, 26.9863, -15.9507, 0.29", "5.8939, 27.3949, -16.1466, 0.29", "5.47297, 28.6997, -17.1286, 1.33", "5.24428, 29.4273, -17.769, 1.92", "5.20038, 29.6082, -17.946, 2.21", "5.18042, 29.747, -18.0867, 2.21", "5.1554, 30.5069, -18.8737, 2.5", "5.19681, 31.5004, -19.9723, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "1.6115, 9.73122, -2.50048, 3.68", "1.6115, 9.73122, -2.50048, 3.68", "1.12651, 11.2251, -2.74062, 2.8", "1.09369, 11.3238, -2.76136, 2.8", "0.892088, 11.9247, -2.89621, 2.8", "0.801293, 12.183, -2.95673, 2.8", "0.592284, 12.7645, -3.09743, 2.8", "0.277182, 13.5952, -3.31775, 3.02", "-0.16401, 14.6649, -3.64925, 3.02", "-0.181033, 14.7037, -3.66315, 3.02", "-0.553698, 15.4976, -3.97168, 3.02", "-0.571808, 15.5355, -3.98665, 3.02", "-0.99255, 16.4005, -4.33933, 2.87", "-1.3835, 17.2407, -4.64171, 2.87", "-1.4012, 17.2802, -4.65215, 2.87", "-1.76797, 18.1383, -4.82698, 2.73", "-2.15057, 19.0587, -4.96543, 2.58", "-2.17044, 19.1063, -4.9713, 2.58", "-2.71758, 20.4065, -5.08864, 2.36", "-3.26626, 21.6759, -5.1797, 2.06", "-3.76809, 22.7806, -5.25424, 2.06", "-4.09482, 23.4867, -5.30068, 2.65", "-4.67781, 24.7117, -5.37368, 2.73", "-5.15529, 25.6911, -5.4347, 2.95", "-5.59969, 26.5522, -5.49977, 3.17", "-6.00628, 27.3034, -5.56736, 2.95" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.5085, -10.4416, 0.999524, 4.05", "-3.5085, -10.4416, 0.999524, 4.05", "-4.34739, -12.4863, 0.999524, 3.68", "-5.14948, -14.4414, 0.999524, 3.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999985130312626
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "3.23086, 10.2806, -1.24848, 0.532211", "8.20573, 24.4316, -1.24848, 0.532211", "13.1806, 38.5826, -1.24848, 0.532211" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "5.19681, 31.5004, -19.9723, 1.25", "4.91503, 32.1959, -20.5075, 1.25", "4.68235, 32.8754, -21.028, 1.77", "4.63179, 33.0398, -21.1552, 1.84", "4.44011, 33.9161, -21.986, 0.22", "4.37274, 34.517, -22.6828, 1.33", "4.37208, 34.5472, -22.7267, 1.33", "4.39119, 34.6871, -22.9804, 1.77", "4.40256, 34.7254, -23.0588, 1.77", "4.64922, 35.3064, -24.3925, 1.18", "4.86211, 35.6726, -25.3488, 1.4", "5.14468, 36.1347, -26.7906, 0.29", "5.15205, 36.1474, -26.8322, 0.29", "5.36034, 36.5223, -28.0767, 1.55", "5.38343, 36.5733, -28.2328, 1.84", "5.39001, 36.5921, -28.2802, 1.84", "5.67425, 37.6363, -30.4275, 0.52", "5.68199, 37.6654, -30.4715, 0.52", "5.72902, 37.8533, -30.7028, 0.74", "6.05229, 39.2365, -32.1409, 1.47", "6.21462, 39.9125, -32.7211, 0.29", "6.38078, 40.5772, -33.1756, 1.69", "6.73526, 42.1186, -34.0272, 0.15", "6.82622, 42.5897, -34.2799, 0.66", "6.83322, 42.6341, -34.3031, 0.66", "6.93853, 43.4946, -34.7624, 0.15", "6.98843, 44.1106, -35.1294, 1.69", "7.06508, 45.9294, -36.2583, 0.22", "7.06448, 46.3823, -36.5624, 0.59", "7.04856, 47.3592, -37.2617, 1.92", "7.00561, 48.8831, -38.3985, 0.15", "7.0021, 48.964, -38.4617, 0.15", "6.99269, 49.3299, -38.762, 0.37", "6.986, 49.8922, -39.2527, 0.22", "6.98042, 50.4881, -39.8499, 1.11", "6.97908, 50.5241, -39.8889, 1.11", "6.96397, 50.7718, -40.1662, 1.25", "6.88842, 51.7837, -41.3385, 0.22", "6.82826, 52.4715, -42.142, 0.96", "6.74926, 53.2358, -42.9837, 0.15", "6.68689, 53.877, -43.6448, 1.18", "6.67409, 54.002, -43.7629, 1.47", "6.58436, 54.9184, -44.5118, 0.22", "6.55711, 55.1866, -44.6782, 0.44", "6.50936, 55.7133, -44.9228, 0.15", "6.43002, 56.4339, -45.1795, 1.11", "6.39203, 56.7435, -45.2718, 1.47", "6.26058, 58.0504, -45.5916, 0.22", "6.21704, 58.5676, -45.6907, 0.74", "6.15821, 59.3579, -45.8363, 0.15", "6.12273, 59.97, -45.9455, 1.11", "6.10928, 60.2316, -45.9879, 1.55", "6.01231, 62.5551, -46.3422, 0.15", "5.99623, 63.0897, -46.4126, 0.66", "5.99334, 63.3496, -46.4488, 0.66", "6.00561, 64.8657, -46.6668, 0.15", "6.01571, 65.3449, -46.7319, 0.37", "6.01681, 65.4086, -46.7407, 0.37", "6.01179, 65.6773, -46.7742, 0.37" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "5.19681, 31.5004, -19.9723, 0.37", "5.93015, 33.245, -20.1735, 0.37", "6.47516, 34.8176, -20.3458, 0.37", "6.86636, 36.2165, -20.4888, 0.37", "6.88538, 36.3126, -20.4977, 0.37", "6.9567, 36.9988, -20.5525, 0.37", "6.96, 37.0835, -20.5621, 0.37", "6.78555, 38.1013, -20.7342, 0.66", "6.65856, 38.4648, -20.8063, 0.81", "6.45279, 39.0695, -20.9358, 0.81", "6.28429, 39.7203, -21.0696, 0.37", "6.11272, 40.7449, -21.2517, 0.29", "6.10543, 40.8298, -21.2652, 0.29", "6.08515, 41.8692, -21.415, 0.29", "6.12788, 43.543, -21.6192, 1.84", "6.17012, 44.18, -21.6799, 2.36", "6.31294, 45.6198, -21.7781, 1.55", "6.50126, 47.2732, -21.839, 1.92", "6.59163, 47.9153, -21.8595, 2.5", "6.77642, 48.934, -21.9003, 1.99", "7.09519, 50.3956, -21.9619, 0.22", "7.29802, 51.3396, -22.0154, 0.22", "7.4321, 52.0022, -22.0557, 0.88", "7.52813, 52.5639, -22.0952, 0.59", "7.67175, 53.5978, -22.176, 0.29", "7.79839, 54.7535, -22.2713, 0.29", "7.92225, 56.1034, -22.383, 0.29", "8.02275, 57.2896, -22.4858, 0.29", "8.13256, 58.5614, -22.5908, 1.18", "8.20933, 59.3213, -22.6396, 1.84", "8.30915, 60.0812, -22.6773, 1.4", "8.45771, 60.9044, -22.7189, 0.88", "8.76577, 62.3413, -22.7939, 0.29", "9.05143, 63.5885, -22.8536, 0.29", "9.54372, 65.6206, -22.9273, 2.14", "9.7422, 66.4446, -22.9565, 3.09", "9.92608, 67.2218, -22.9809, 3.46" ],
    "parent" : "dend_70",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-6.00628, 27.3034, -5.56736, 1.62", "-6.39489, 29.1673, -5.92714, 1.62", "-6.40327, 29.235, -5.93342, 1.62", "-6.52128, 30.1893, -6.02193, 1.62", "-6.5466, 30.3941, -6.04092, 1.62", "-6.66108, 31.3198, -6.12678, 1.62", "-6.66857, 31.3804, -6.1324, 1.62", "-6.70405, 32.864, -6.00321, 1.55" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-6.00628, 27.3034, -5.56736, 0.66", "-4.12701, 30.5962, -4.14013, 0.66", "-3.42417, 31.6831, -3.94529, 0.59", "-2.74366, 32.6782, -3.87059, 1.03", "-2.6149, 32.8701, -3.86903, 1.03", "-2.32966, 33.3315, -3.88427, 1.18", "-1.34004, 35.1785, -4.02302, 0.81", "-0.711363, 36.4397, -4.34832, 0.66", "-0.667538, 36.5447, -4.37782, 0.66", "-0.281272, 37.7477, -4.62807, 0.66", "0.0552382, 39.1311, -4.81081, 0.88", "0.350559, 41.0171, -4.92175, 1.4", "0.387697, 41.4978, -4.91337, 1.77", "0.418733, 42.5512, -4.84416, 2.14", "0.440379, 44.5854, -4.49875, 1.77", "0.491255, 45.9035, -4.03765, 1.25", "0.569953, 46.9586, -3.49675, 1.03", "0.706114, 47.8233, -2.87862, 0.81", "0.95699, 48.9079, -1.93982, 0.81", "1.52181, 50.5124, -0.226762, 0.59", "2.31856, 52.001, 1.70688, 0.59", "2.35996, 52.0599, 1.80186, 0.59", "2.99895, 52.7408, 3.17328, 1.77", "3.03705, 52.7696, 3.24843, 1.77", "3.46931, 52.9533, 3.9717, 1.92", "3.53376, 52.959, 4.05328, 1.92" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.14948, -14.4414, 0.999524, 0.37", "-6.50031, -15.0499, 0.828156, 0.37", "-7.2878, -15.5967, 0.874869, 0.37", "-8.20382, -16.6086, 1.23612, 0.37", "-8.47669, -17.2136, 1.60576, 0.66", "-8.58436, -17.6022, 1.89494, 0.96", "-8.59594, -17.65, 1.94203, 0.96", "-8.66399, -19.0312, 3.63782, 0.59", "-8.66278, -19.0624, 3.68475, 0.59", "-8.66256, -19.4293, 4.4034, 1.25", "-8.6886, -19.52, 4.61939, 1.25", "-9.02433, -20.0101, 5.85414, 0.59", "-9.22457, -20.216, 6.31157, 0.96", "-9.26379, -20.2461, 6.36926, 0.96", "-9.59205, -20.6288, 6.94942, 0.96", "-9.82497, -21.0643, 7.4582, 0.59", "-9.94408, -21.5864, 7.93404, 0.29", "-9.94365, -22.2263, 8.41251, 0.29", "-9.9112, -22.8047, 8.86284, 1.11", "-9.84305, -23.9283, 9.77873, 0.22", "-9.8293, -24.2051, 10.0131, 1.25", "-9.85852, -24.6436, 10.4238, 1.55", "-9.88407, -24.7252, 10.5105, 1.55", "-10.4767, -25.4358, 11.41, 0.59", "-10.719, -25.635, 11.6613, 0.74", "-11.1465, -25.9193, 12.0124, 0.74", "-11.7501, -26.3169, 12.49, 0.59", "-11.8377, -26.389, 12.5622, 0.59", "-12.3441, -27.1012, 13.0646, 0.59", "-12.4409, -27.5753, 13.3086, 1.11", "-12.4514, -27.9512, 13.514, 1.18", "-12.4485, -28.0341, 13.5615, 1.18", "-12.4408, -28.9392, 14.1469, 0.59", "-12.5027, -29.6643, 14.6853, 0.59", "-12.7273, -30.3857, 15.3471, 0.44", "-13.0236, -30.7583, 15.8556, 0.74", "-13.3467, -30.9384, 16.2467, 0.88", "-14.0908, -31.145, 16.9852, 0.44", "-14.5178, -31.1834, 17.3215, 0.44", "-15.0563, -31.2, 17.679, 0.44", "-15.1068, -31.2026, 17.7048, 0.44", "-15.7627, -31.2984, 17.9792, 0.88", "-15.8332, -31.3164, 18.0069, 0.88", "-16.6273, -31.5741, 18.2672, 1.18", "-17.0113, -31.7218, 18.3806, 1.11", "-17.6108, -31.9673, 18.5357, 0.59", "-18.1788, -32.2113, 18.6607, 0.44", "-18.2298, -32.234, 18.6693, 0.44", "-19.0021, -32.6439, 18.7945, 0.66", "-19.5166, -33.0055, 18.8737, 0.37", "-19.8227, -33.316, 18.922, 1.03", "-19.981, -33.5853, 18.947, 1.03", "-20.0177, -33.6996, 18.9522, 1.03", "-20.2541, -34.7437, 18.9857, 0.37", "-20.3084, -35.3534, 18.9977, 0.44", "-20.3084, -35.8326, 19.0056, 0.74", "-20.2839, -36.226, 19.012, 0.88", "-20.2188, -36.9464, 19.0317, 0.88" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-5.14948, -14.4414, 0.999524, 3.09", "-5.16061, -14.4882, 0.999014, 3.09", "-5.47798, -15.8338, 1.01594, 2.8", "-5.90003, -17.6337, 1.04551, 2.43", "-6.24008, -19.0839, 1.06934, 2.43", "-6.25546, -19.1495, 1.07042, 2.43", "-6.74226, -21.2255, 1.10453, 2.43", "-7.00478, -22.3521, 1.13294, 2.87", "-7.22115, -23.2732, 1.17597, 3.02" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "13.1806, 38.5826, -1.24848, 0.532211", "18.1555, 52.7336, -1.24848, 0.532211", "23.1303, 66.8846, -1.24848, 0.532211" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "9.92608, 67.2218, -22.9809, 0.29", "10.5793, 68.3309, -23.2472, 0.29", "10.8723, 68.7427, -23.3854, 0.29", "11.1815, 69.1685, -23.5474, 0.37", "11.211, 69.209, -23.5638, 0.37", "11.4276, 69.5277, -23.6926, 0.37", "11.4477, 69.5587, -23.7053, 0.37", "11.7119, 70.0414, -23.9407, 0.22", "11.8448, 70.32, -24.0993, 0.44", "11.8554, 70.3591, -24.1241, 0.44", "11.9196, 70.688, -24.3316, 0.66", "11.9266, 70.7213, -24.3508, 0.66", "12.0366, 71.1193, -24.5868, 0.96", "12.0504, 71.1631, -24.6259, 0.96", "12.2354, 71.7252, -25.1821, 0.22", "12.2473, 71.7622, -25.2196, 0.22", "12.4225, 72.2866, -25.7475, 1.92", "12.6102, 72.7701, -26.2375, 2.36", "13.283, 74.2945, -27.789, 0.44", "13.3896, 74.5216, -28.0184, 0.44", "13.4693, 74.6816, -28.1775, 0.44", "13.6416, 75.0304, -28.504, 0.22", "13.8601, 75.4782, -28.8868, 0.22", "14.1219, 75.9802, -29.2564, 0.74", "14.1462, 76.0204, -29.283, 0.74", "14.2167, 76.1363, -29.3708, 0.74", "14.5748, 76.7323, -29.8794, 0.22", "14.8568, 77.2516, -30.3439, 1.33", "15.0741, 77.701, -30.7407, 1.77", "15.4652, 78.5656, -31.4927, 0.22", "15.6316, 78.9323, -31.8026, 0.22", "15.8573, 79.4226, -32.2011, 0.22", "16.1198, 79.9761, -32.6346, 1.92", "16.2231, 80.1963, -32.7933, 2.28", "16.8779, 81.5313, -33.6455, 0.22", "17.1389, 82.0288, -33.9296, 0.22", "17.3291, 82.356, -34.1057, 0.88", "17.3809, 82.4328, -34.1429, 0.88", "17.4411, 82.5071, -34.1769, 0.88", "18.0745, 83.1871, -34.4958, 0.22", "18.5248, 83.6163, -34.7046, 0.22", "18.5811, 83.673, -34.7341, 0.22", "19.0547, 84.1656, -35.0009, 1.33", "19.2476, 84.3751, -35.1132, 2.06", "19.5455, 84.7161, -35.3062, 2.06", "20.2458, 85.573, -35.7983, 0.15", "20.4312, 85.8052, -35.9351, 0.74", "20.4577, 85.8381, -35.954, 0.74", "20.5893, 86.0089, -36.0507, 0.74", "21.0119, 86.5652, -36.3409, 0.22", "21.237, 86.8596, -36.4747, 0.59", "21.2639, 86.8943, -36.4892, 0.59", "21.7295, 87.4801, -36.7851, 0.15", "22.0995, 87.9689, -37.042, 1.55", "22.1924, 88.097, -37.1107, 1.92", "22.2181, 88.1328, -37.1288, 1.92", "22.3423, 88.3204, -37.2259, 1.92", "22.998, 89.3393, -37.743, 0.22", "23.1751, 89.5814, -37.8742, 0.52", "23.2021, 89.6142, -37.8925, 0.52", "23.613, 90.0295, -38.1297, 0.22", "23.9719, 90.3586, -38.3352, 1.55", "24.237, 90.5354, -38.4779, 1.55", "25.1992, 91.0593, -38.9647, 0.15", "25.2329, 91.0763, -38.9825, 0.15", "25.898, 91.3914, -39.3383, 0.15", "26.883, 91.8198, -39.8698, 2.21", "28.3495, 92.4105, -40.6349, 0.22", "28.5135, 92.4768, -40.7197, 0.37", "29.1893, 92.7674, -41.0468, 0.22", "29.4313, 92.8805, -41.1564, 0.59", "29.5946, 92.9642, -41.2236, 0.59", "30.1476, 93.2807, -41.4295, 0.22", "30.3597, 93.4305, -41.5191, 0.66", "30.942, 93.8366, -41.792, 0.15", "31.3634, 94.1365, -42.0026, 1.77", "31.4669, 94.2119, -42.0607, 1.77", "32.4376, 94.9013, -42.6431, 0.22", "32.8064, 95.1332, -42.9257, 0.74", "33.203, 95.3526, -43.2824, 0.15", "33.4326, 95.4684, -43.5276, 0.74", "33.8072, 95.6642, -43.9629, 0.15", "34.1453, 95.8517, -44.3737, 2.14", "35.2162, 96.5322, -45.7761, 0.37", "35.6497, 96.8728, -46.3784, 1.55", "36.447, 97.6064, -47.548, 0.15", "36.7858, 97.9767, -48.0735, 0.15", "36.9457, 98.1825, -48.3365, 1.4", "37.4521, 98.9393, -49.2679, 0.22", "37.7023, 99.3288, -49.7507, 1.33", "37.7467, 99.3855, -49.8319, 1.62", "38.4134, 99.9897, -50.8876, 0.15", "38.8645, 100.289, -51.5412, 1.18", "39.6428, 100.682, -52.5799, 0.88", "40.3837, 100.952, -53.4581, 0.44", "41.0793, 101.162, -54.202, 1.77", "41.8259, 101.359, -54.8835, 0.22", "41.87, 101.369, -54.9146, 0.22", "42.1555, 101.434, -55.0574, 0.66", "42.8028, 101.613, -55.2437, 0.15", "43.2632, 101.8, -55.3124, 1.11", "43.5478, 101.963, -55.3439, 1.11", "43.5916, 101.992, -55.348, 1.11", "44.0847, 102.331, -55.3982, 0.22", "44.3119, 102.483, -55.4252, 0.59", "44.8908, 102.865, -55.5005, 0.22", "45.3948, 103.191, -55.5813, 1.4", "45.4391, 103.219, -55.5883, 1.4", "45.5129, 103.265, -55.5997, 1.55", "46.4542, 103.819, -55.7365, 0.22", "46.4946, 103.841, -55.7433, 0.22", "46.6491, 103.923, -55.7703, 0.22", "46.9742, 104.088, -55.8426, 0.81", "47.0146, 104.108, -55.8531, 0.81", "47.2126, 104.22, -55.917, 0.81", "48.158, 104.775, -56.2575, 0.22", "48.4814, 104.963, -56.3773, 0.22", "49.1917, 105.365, -56.6449, 1.55", "49.2293, 105.388, -56.6607, 1.55", "50.1553, 105.961, -57.0715, 0.22", "50.5075, 106.183, -57.2363, 0.22", "51.1225, 106.575, -57.5301, 1.62", "51.2394, 106.649, -57.5839, 1.99", "52.4508, 107.431, -58.1157, 0.22", "52.4929, 107.458, -58.1339, 0.22", "52.9491, 107.746, -58.3267, 0.74", "53.2262, 107.925, -58.4458, 0.74", "54.6027, 108.811, -59.025, 0.15", "55.1137, 109.133, -59.229, 1.55", "55.1535, 109.156, -59.2424, 1.55", "55.3797, 109.291, -59.3188, 1.55" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "9.92608, 67.2218, -22.9809, 0.29", "9.7832, 69.2916, -23.0011, 0.29", "9.75422, 69.7897, -23.0114, 0.44", "9.69401, 70.8019, -23.022, 0.22", "9.61864, 72.1392, -23.0307, 1.55", "9.59766, 72.5717, -23.0305, 2.21", "9.57062, 73.2021, -23.0255, 1.84", "9.565, 73.9956, -23.0221, 0.96", "9.56538, 74.5073, -23.0055, 0.44", "9.56563, 74.5846, -22.9995, 0.44", "9.58847, 75.5795, -22.9213, 0.29", "9.5985, 75.7194, -22.9125, 0.29", "9.67936, 76.4285, -22.8802, 0.29", "9.77463, 77.1264, -22.8564, 0.81", "9.82298, 77.4738, -22.861, 1.11", "9.90216, 78.1798, -22.896, 0.88", "10.0638, 79.6229, -23.0111, 0.22", "10.14, 80.3291, -23.0907, 0.81", "10.1977, 80.8898, -23.1727, 0.81", "10.3568, 82.574, -23.4479, 0.22", "10.4583, 83.8136, -23.6621, 1.84", "10.4993, 84.4632, -23.7777, 2.21", "10.5232, 85.0319, -23.8786, 2.21", "10.6438, 87.2047, -24.2377, 0.22", "10.7015, 87.9584, -24.3516, 0.81", "10.7376, 88.3131, -24.3958, 0.88", "10.7777, 88.6716, -24.4312, 0.66", "10.8848, 89.7384, -24.5113, 0.22", "11.0372, 91.2269, -24.5851, 1.84", "11.0956, 91.6797, -24.603, 2.21", "11.1646, 92.1308, -24.6208, 2.21", "11.5032, 94.0787, -24.6961, 0.22", "11.6341, 94.7707, -24.7255, 0.88", "11.6756, 94.9814, -24.7341, 0.88", "11.9581, 96.4083, -24.7957, 0.22", "12.2036, 97.6699, -24.887, 0.22", "12.3397, 98.3318, -24.9517, 1.33", "12.4588, 98.8515, -25.0172, 1.62", "12.5035, 99.0522, -25.0456, 1.62", "12.5223, 99.1665, -25.0647, 1.62", "12.7268, 101.046, -25.3973, 0.22", "12.8413, 102.433, -25.6511, 0.22", "12.9016, 103.389, -25.8213, 1.4", "12.9329, 103.891, -25.9068, 1.69", "13.061, 106.017, -26.2593, 0.22", "13.1023, 106.734, -26.3556, 0.96", "13.1058, 106.802, -26.3608, 0.96", "13.116, 107.096, -26.3726, 0.81", "13.1622, 108.456, -26.3602, 0.22", "13.1718, 108.617, -26.3521, 0.22", "13.2557, 109.553, -26.2798, 0.22", "13.351, 110.664, -26.2059, 1.69", "13.3815, 111.028, -26.1853, 2.43", "13.4427, 111.798, -26.1466, 2.36", "13.6556, 114.272, -26.0455, 0.22", "13.7555, 115.217, -26.0433, 0.22", "13.7735, 115.363, -26.049, 0.22", "13.945, 116.561, -26.1225, 0.22", "14.0871, 117.465, -26.1954, 1.11", "14.1862, 118.007, -26.2524, 1.4", "14.5099, 119.543, -26.4555, 0.22", "14.5231, 119.602, -26.4636, 0.22", "14.6265, 120.006, -26.5146, 0.22", "14.8539, 120.847, -26.5974, 1.55", "14.9701, 121.281, -26.6229, 1.77", "14.9881, 121.346, -26.6247, 1.77", "15.0756, 121.641, -26.6246, 1.77", "15.4585, 122.909, -26.6292, 0.22", "15.7097, 123.786, -26.6274, 0.66", "15.8344, 124.261, -26.6217, 0.66", "16.198, 125.832, -26.5964, 0.22", "16.2275, 125.976, -26.5926, 0.22", "16.5101, 127.501, -26.5333, 0.22", "16.6728, 128.546, -26.4599, 1.11", "16.7569, 129.174, -26.3908, 1.99", "16.8091, 129.714, -26.3078, 1.55", "16.8758, 131.047, -26.0306, 0.22", "16.8813, 131.225, -25.9889, 0.22", "16.8822, 132.318, -25.6871, 0.22", "16.8985, 132.942, -25.5028, 0.88", "16.9067, 133.137, -25.4461, 1.18", "16.9144, 133.201, -25.424, 1.18", "17.0309, 133.795, -25.2195, 0.66", "17.1044, 134.126, -25.1108, 0.37", "17.2809, 134.997, -24.8348, 0.22", "17.3885, 135.643, -24.6266, 0.59", "17.53, 136.81, -24.3315, 0.52", "17.5907, 137.465, -24.1885, 0.66", "17.6313, 137.965, -24.0936, 0.22", "17.6781, 138.728, -23.9715, 1.47", "17.6924, 139.096, -23.9279, 2.14", "17.7707, 141.332, -23.7373, 0.22", "17.7727, 141.393, -23.7347, 0.22", "17.833, 142.088, -23.7054, 1.11", "17.8543, 142.233, -23.703, 1.47", "17.8735, 142.335, -23.7027, 1.47", "17.989, 142.964, -23.7082, 0.81", "18.0743, 143.487, -23.7244, 0.29", "18.3138, 145.039, -23.8037, 0.22", "18.4136, 145.758, -23.8521, 0.96", "18.4329, 145.894, -23.8622, 0.96", "18.4548, 146.039, -23.8717, 0.96", "18.6483, 147.158, -23.9368, 0.22", "18.6615, 147.224, -23.94, 0.22", "18.8191, 147.901, -23.9645, 0.81", "18.9011, 148.244, -23.974, 0.81", "19.2836, 149.844, -23.9955, 0.15", "19.5229, 150.932, -24.0085, 1.18", "19.5863, 151.238, -24.0106, 1.47", "19.5971, 151.295, -24.0151, 1.47", "19.645, 151.572, -24.0593, 1.47", "19.8728, 153.09, -24.3883, 0.22", "19.9901, 153.943, -24.6272, 1.11", "20.0361, 154.305, -24.7417, 1.47", "20.2886, 156.294, -25.4853, 0.15", "20.3912, 157.069, -25.8079, 0.81", "20.4, 157.13, -25.8363, 0.81", "20.4546, 157.483, -26.0176, 0.81", "20.4639, 157.535, -26.043, 0.81", "20.6576, 158.759, -26.5691, 0.22", "20.7168, 159.168, -26.7043, 0.37", "20.8, 159.799, -26.8837, 0.22", "20.8933, 160.582, -27.08, 1.18", "20.9412, 161.05, -27.1831, 1.47", "21.1082, 162.828, -27.5301, 0.22", "21.1782, 163.613, -27.6549, 1.03", "21.2014, 163.884, -27.6973, 1.03", "21.3566, 165.623, -27.9902, 0.22", "21.4174, 166.25, -28.0962, 0.22", "21.4244, 166.316, -28.1075, 0.22", "21.5412, 167.101, -28.2114, 0.81", "21.6243, 167.583, -28.2653, 0.81", "21.8854, 169.011, -28.3816, 0.22", "22.0817, 169.984, -28.3943, 1.11", "22.1249, 170.193, -28.3881, 1.11", "22.4885, 171.937, -28.248, 0.22", "22.6479, 172.706, -28.1536, 0.59", "22.9, 173.946, -27.9516, 0.22", "23.1039, 174.998, -27.7305, 1.18", "23.181, 175.404, -27.6408, 1.62", "23.4622, 176.943, -27.2703, 0.22", "23.5401, 177.421, -27.1448, 0.22", "23.6225, 177.953, -26.9945, 0.59", "23.6636, 178.223, -26.9165, 0.59", "23.6739, 178.299, -26.8962, 0.59", "23.7864, 179.146, -26.6543, 0.22", "23.8552, 179.608, -26.5058, 0.52", "23.8808, 179.745, -26.4592, 0.52", "23.8953, 179.808, -26.4373, 0.52", "24.1994, 180.923, -26.1287, 0.22", "24.4497, 181.778, -25.9405, 1.11", "24.5885, 182.18, -25.8883, 1.47", "24.6392, 182.307, -25.8757, 1.47", "24.8266, 182.752, -25.8437, 1.47", "25.4421, 184.129, -25.7838, 0.22", "25.4668, 184.182, -25.784, 0.22", "25.9406, 185.206, -25.8005, 0.22", "26.3217, 186.086, -25.819, 1.11", "26.4916, 186.49, -25.8168, 1.55", "26.6548, 186.883, -25.8083, 1.55", "27.2409, 188.241, -25.7586, 0.22", "27.4647, 188.752, -25.7357, 0.74", "27.5517, 188.95, -25.7219, 0.74", "28.3184, 190.659, -25.5886, 0.22", "28.543, 191.148, -25.5436, 0.74", "29.2339, 192.601, -25.3317, 0.22", "29.3104, 192.753, -25.302, 0.22", "29.7428, 193.591, -25.129, 0.74", "29.7934, 193.688, -25.1066, 0.74", "30.0593, 194.207, -24.9761, 1.03", "30.9469, 195.98, -24.5319, 0.15", "30.9759, 196.042, -24.5172, 0.15", "31.4682, 197.142, -24.3028, 0.15", "31.701, 197.681, -24.2161, 1.03", "31.8201, 197.976, -24.1833, 1.03", "32.1335, 198.871, -24.1299, 0.15", "32.3459, 199.61, -24.139, 1.11", "32.4374, 199.973, -24.1456, 1.4", "32.4491, 200.03, -24.1472, 1.4", "32.673, 201.4, -24.2074, 0.22", "32.7592, 202.114, -24.2307, 0.59", "32.7639, 202.175, -24.2319, 0.59", "32.7736, 202.388, -24.2306, 0.59", "32.7974, 203.253, -24.2192, 0.22", "32.8059, 203.882, -24.2078, 1.18", "32.7936, 204.517, -24.1899, 1.84", "32.7785, 204.879, -24.1815, 1.47", "32.6337, 206.705, -24.1247, 0.22", "32.5521, 207.398, -24.0991, 0.22", "32.5421, 207.455, -24.0963, 0.22", "32.3805, 208.125, -24.0695, 0.81", "32.2458, 208.622, -24.0565, 1.62", "32.0664, 209.222, -24.0453, 2.28", "31.9978, 209.448, -24.0433, 2.5", "31.8157, 210.119, -24.0358, 2.14", "31.39, 211.96, -24.0279, 0.22", "31.276, 212.576, -24.0337, 0.59", "31.2671, 212.655, -24.0353, 0.59", "31.2283, 213.418, -24.0526, 0.22", "31.2341, 213.987, -24.0557, 0.81", "31.24, 214.077, -24.0546, 0.81", "31.2763, 214.432, -24.0356, 0.81", "31.3682, 215.525, -23.9572, 0.22", "31.4181, 216.157, -23.9081, 0.44", "31.5233, 217.684, -23.7734, 0.15", "31.5646, 218.248, -23.7199, 0.15", "31.595, 218.711, -23.6726, 0.59", "31.6119, 219.001, -23.6393, 0.59" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-6.70405, 32.864, -6.00321, 1.55", "-5.60297, 35.3477, -7.38778, 1.55", "-5.55314, 35.4682, -7.44499, 1.55", "-4.9511, 37.07, -8.03262, 1.47", "-4.92532, 37.146, -8.05322, 1.47", "-4.58387, 38.201, -8.28979, 1.25", "-4.0753, 39.9319, -8.57454, 1.25", "-4.03214, 40.133, -8.57641, 1.25", "-3.77524, 41.3793, -8.52668, 0.81", "-3.52038, 42.7786, -8.40169, 1.18", "-3.49863, 42.9133, -8.38771, 1.18", "-3.27944, 44.5378, -8.2023, 1.84", "-3.15534, 45.7581, -8.05992, 2.14", "-3.05913, 46.9844, -7.9322, 2.14", "-3.00109, 48.3898, -7.83061, 2.14", "-3.0021, 48.4602, -7.82768, 2.14", "-3.05003, 49.2773, -7.82738, 1.77", "-3.2067, 50.7902, -7.88929, 1.77", "-3.38341, 51.8184, -7.97313, 1.47", "-3.71021, 53.1066, -8.12124, 1.25", "-4.13416, 54.4175, -8.33853, 1.62", "-4.4908, 55.3601, -8.53451, 1.84", "-4.52428, 55.4367, -8.55412, 1.84", "-5.07169, 56.539, -8.92133, 1.99", "-5.69143, 57.7725, -9.36116, 1.69", "-6.22931, 58.9449, -9.75125, 1.47", "-6.50758, 59.799, -10.0255, 1.33", "-6.52162, 59.8655, -10.0451, 1.33", "-6.59507, 61.0591, -10.352, 1.11", "-6.43212, 62.3079, -10.6249, 0.88", "-6.10714, 63.3427, -10.7903, 0.96", "-5.47631, 64.9058, -10.9343, 0.81", "-5.42876, 65.0242, -10.9405, 0.81", "-5.16527, 65.7607, -10.967, 0.66", "-5.10263, 65.9635, -10.971, 0.66", "-4.96297, 67.133, -11.0485, 0.66", "-5.04793, 68.0704, -11.1351, 0.96", "-5.33423, 69.0672, -11.2433, 1.69", "-5.50078, 69.5165, -11.3053, 1.99", "-5.70881, 69.9729, -11.393, 1.99", "-6.21424, 70.9924, -11.6243, 1.84", "-6.25327, 71.0637, -11.6434, 1.84", "-6.92762, 72.2995, -12.0112, 2.06", "-7.15367, 72.7438, -12.1431, 2.21", "-7.51812, 73.5331, -12.3564, 2.14", "-8.02252, 74.7119, -12.6453, 1.18", "-8.57158, 76.1011, -12.9442, 1.03", "-8.96661, 77.1489, -13.1367, 1.03", "-9.31608, 78.1233, -13.2851, 1.33", "-9.70382, 79.2631, -13.4231, 2.14", "-9.96291, 80.0958, -13.4846, 2.65", "-10.212, 81.0053, -13.53, 2.65", "-10.4635, 82.1034, -13.5676, 2.65", "-10.494, 82.2571, -13.5697, 2.65", "-10.6274, 83.0224, -13.572, 2.36", "-10.7308, 83.9128, -13.561, 2.06", "-10.8253, 85.0574, -13.5365, 1.4", "-10.8928, 86.2946, -13.4955, 0.81", "-10.9376, 88.3005, -13.3902, 0.66", "-10.9259, 89.9788, -13.259, 0.66", "-10.8599, 91.7921, -13.0707, 1.11", "-10.8543, 91.8769, -13.0605, 1.11", "-10.7441, 92.9896, -12.8971, 1.55", "-10.5751, 94.2786, -12.6828, 1.84", "-10.3468, 95.7445, -12.4264, 2.28", "-10.2396, 96.4254, -12.3057, 2.58", "-10.1069, 97.3021, -12.1752, 2.58", "-10.0191, 97.9403, -12.1027, 2.58", "-9.91002, 98.9771, -12.0504, 2.36", "-9.8485, 99.8734, -12.0671, 1.92", "-9.84561, 99.9701, -12.0734, 1.92", "-9.83337, 101.396, -12.1799, 0.88", "-9.85587, 102.782, -12.2812, 0.66", "-9.88911, 104.22, -12.401, 0.66", "-9.90457, 105.152, -12.492, 0.81", "-9.89882, 106.176, -12.5927, 0.74", "-9.87519, 107.212, -12.6912, 0.59", "-9.85196, 108.249, -12.7769, 1.25", "-9.79637, 109.241, -12.8588, 1.84", "-9.66949, 110.636, -12.9478, 2.5", "-9.5668, 111.476, -13.0004, 2.65", "-9.54253, 111.615, -13.0138, 2.65" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-6.70405, 32.864, -6.00321, 0.52", "-6.51198, 33.7929, -5.88264, 0.52", "-6.50571, 33.8385, -5.87606, 0.52", "-6.50255, 34.2848, -5.81328, 0.52", "-6.60961, 35.1134, -5.70999, 0.52", "-6.61887, 35.1582, -5.70496, 0.52", "-6.67931, 35.3603, -5.68608, 0.66", "-6.71779, 35.4192, -5.67518, 0.66", "-6.98059, 35.7393, -5.62665, 0.52", "-7.21083, 35.9693, -5.59655, 0.66", "-7.2509, 36.0062, -5.59053, 0.66", "-7.4992, 36.2372, -5.53744, 0.59", "-7.88307, 36.598, -5.43722, 0.29", "-8.20587, 36.9136, -5.3295, 0.29", "-8.26435, 36.9723, -5.30511, 0.29", "-8.64765, 37.3728, -5.11899, 0.59", "-8.90521, 37.6448, -4.99899, 0.81", "-8.93783, 37.678, -4.9859, 0.81", "-9.16645, 37.8916, -4.92216, 0.81", "-9.1978, 37.9158, -4.91664, 0.81", "-9.5112, 38.1235, -4.88529, 0.81", "-10.0567, 38.4806, -4.85019, 0.37", "-10.4346, 38.7494, -4.79632, 0.37", "-10.7409, 38.9843, -4.72734, 0.59", "-10.9984, 39.2006, -4.64383, 0.81", "-11.4163, 39.5754, -4.46475, 0.29", "-11.8235, 39.9615, -4.25414, 0.52", "-12.268, 40.4152, -3.97707, 1.33", "-12.4652, 40.6287, -3.83906, 1.55", "-13.0408, 41.2777, -3.40374, 0.29", "-13.4952, 41.7927, -3.05752, 1.55", "-13.604, 41.9096, -2.9883, 1.84", "-13.6617, 41.9636, -2.96558, 1.84", "-13.8257, 42.1074, -2.94688, 1.84", "-13.8552, 42.1342, -2.94996, 1.84", "-14.0744, 42.3403, -3.02565, 1.62", "-14.5091, 42.7524, -3.23673, 0.37", "-14.8638, 43.1077, -3.4416, 0.29", "-15.1249, 43.4036, -3.62673, 0.59", "-15.2878, 43.6047, -3.76721, 0.59", "-15.4003, 43.7503, -3.87356, 0.59", "-15.5461, 43.953, -4.02702, 0.52", "-15.813, 44.3887, -4.32583, 0.29", "-15.9867, 44.7189, -4.5444, 0.74", "-16.1937, 45.1117, -4.78486, 0.66", "-16.3111, 45.3256, -4.90524, 0.88", "-16.5248, 45.6985, -5.09588, 0.66", "-17.1258, 46.6737, -5.54153, 2.14", "-17.3658, 47.0271, -5.68555, 2.14", "-17.8779, 47.7311, -5.94642, 0.22", "-18.1583, 48.1, -6.0665, 0.22", "-18.4611, 48.4874, -6.17858, 0.22", "-18.769, 48.8503, -6.2515, 0.88", "-18.936, 49.0277, -6.26882, 1.03", "-19.1487, 49.2387, -6.27023, 0.74", "-19.6692, 49.7481, -6.24156, 0.22", "-19.9868, 50.0513, -6.20711, 0.22", "-20.4113, 50.4611, -6.16094, 0.22", "-20.468, 50.5168, -6.15503, 0.22", "-20.8695, 50.9303, -6.11527, 0.22", "-21.4616, 51.5373, -6.07097, 1.69", "-21.659, 51.7622, -6.06446, 2.21", "-21.9768, 52.15, -6.07008, 2.21", "-21.9999, 52.1824, -6.07042, 2.21", "-22.4581, 52.9136, -6.05547, 0.22", "-22.7243, 53.3997, -6.03118, 0.22", "-23.1507, 54.2171, -5.94075, 0.22", "-23.1826, 54.2789, -5.93182, 0.22", "-23.4921, 54.8576, -5.82258, 1.11", "-23.7188, 55.2835, -5.746, 1.11", "-23.9215, 55.6639, -5.66703, 0.59", "-24.3094, 56.3809, -5.50575, 1.69", "-24.4149, 56.5653, -5.46356, 1.77", "-25.1007, 57.7498, -5.21913, 0.22", "-25.6657, 58.7002, -5.01802, 0.22", "-25.8809, 59.0604, -4.93182, 1.03", "-26.0432, 59.3324, -4.8619, 1.03", "-26.1888, 59.5751, -4.79718, 0.81", "-26.6204, 60.2131, -4.58435, 0.22", "-27.1542, 60.9058, -4.30911, 1.11", "-27.2621, 61.0302, -4.257, 1.62", "-27.4173, 61.1986, -4.17479, 1.62", "-27.443, 61.2249, -4.15947, 1.62", "-28.4018, 62.1625, -3.52997, 0.22", "-28.76, 62.5016, -3.28429, 0.81", "-28.9205, 62.6516, -3.17574, 0.81", "-29.6931, 63.375, -2.63885, 0.22", "-29.7229, 63.4035, -2.6169, 0.22", "-30.2153, 63.8911, -2.22571, 1.18", "-30.431, 64.1333, -1.99738, 1.55", "-33.8161, 69.8017, -1.87458, 1.55", "-37.3082, 75.3839, -1.33913, 1.55", "-41.6838, 80.3391, -0.81235, 1.55", "-46.0686, 85.135, 0.535016, 1.55", "-50.9914, 88.9373, 2.94134, 1.55", "-55.7022, 93.1036, 5.12701, 1.55", "-59.1363, 97.9448, 8.089, 1.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "3.53376, 52.959, 4.05328, 0.88", "3.02216, 53.3816, 5.79295, 0.88", "2.99022, 53.3976, 5.89951, 0.88", "2.58794, 53.4752, 7.11643, 0.88", "2.571, 53.4762, 7.16548, 0.88", "2.03468, 53.5254, 9.8903, 0.59", "2.02495, 53.5275, 9.95002, 0.59", "1.91322, 53.554, 10.8299, 1.18", "1.78136, 53.6105, 12.0305, 1.18", "1.77752, 53.614, 12.0821, 1.18", "1.63916, 54.2672, 16.4074, 0.22", "1.65453, 54.4043, 16.9037, 0.29", "1.70888, 54.7348, 17.8494, 1.11", "1.71396, 54.7604, 17.9064, 1.11", "1.79556, 55.0771, 18.5199, 1.11", "1.94882, 55.7409, 19.6353, 0.22", "2.03134, 56.288, 20.154, 0.59", "2.0405, 56.3239, 20.1893, 0.59", "2.11815, 56.545, 20.3948, 1.11", "0.573815, 58.5748, 28.647, 1.11", "-3.02749, 60.718, 36.1979, 1.11", "-4.81776, 63.7724, 44.0591, 1.11", "-7.45134, 67.0239, 51.5931, 1.11", "-9.95041, 70.7024, 58.9645, 1.11", "-12.1605, 74.8274, 66.1778, 1.11", "-14.8082, 79.2404, 73.0568, 1.11", "-17.0265, 82.9199, 80.517, 1.11", "-18.26, 86.5617, 88.2205, 1.11", "-19.7417, 90.0943, 95.9338, 1.11", "-20.6377, 94.6495, 103.158, 1.11", "-21.7466, 99.5792, 110.088, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "3.53376, 52.959, 4.05328, 0.52", "3.8956, 54.1831, 4.7278, 0.52", "4.10253, 55.2458, 5.26487, 0.52", "4.10514, 55.2982, 5.28788, 0.44", "4.06239, 56.1879, 5.61488, 0.44", "4.05546, 56.2614, 5.63634, 0.44", "3.98301, 56.9563, 5.79718, 0.66", "3.96905, 57.0212, 5.80919, 0.66", "3.81322, 57.6865, 5.94502, 0.66", "3.70193, 58.2293, 6.09309, 0.44", "3.57782, 59.0228, 6.40529, 0.44", "3.49778, 59.7295, 6.74165, 0.96", "3.47148, 60.7369, 7.27301, 0.81", "3.47806, 60.8877, 7.3563, 0.81", "3.63908, 61.9226, 7.94767, 0.66", "3.90274, 62.875, 8.54712, 0.44", "3.95116, 62.9914, 8.62282, 0.44", "4.3453, 63.7132, 9.08013, 0.29", "4.60313, 64.0778, 9.30444, 0.29", "5.0429, 64.6424, 9.6448, 1.11", "5.68665, 65.3748, 10.0844, 1.47", "6.05055, 65.7922, 10.3476, 1.47", "6.08307, 65.8313, 10.3754, 1.47", "6.80142, 66.7192, 11.094, 0.88", "7.31895, 67.3848, 11.6676, 0.52", "7.34715, 67.423, 11.7008, 0.52", "7.7553, 67.9858, 12.1618, 0.74", "7.78426, 68.0245, 12.1937, 0.74", "8.08299, 68.398, 12.4661, 0.74", "8.11827, 68.4374, 12.4897, 0.74", "8.43486, 68.7647, 12.6459, 0.74", "9.1625, 69.5625, 12.9318, 0.37", "9.53881, 70.0195, 13.0483, 0.37", "9.99445, 70.6668, 13.172, 0.52", "10.3188, 71.2342, 13.2715, 0.37", "10.7462, 72.1742, 13.4225, 0.74", "10.9626, 72.8868, 13.5229, 1.11", "11.0784, 73.5716, 13.6025, 0.96", "11.1081, 74.4326, 13.7104, 0.44", "11.0257, 75.4427, 13.8501, 0.44", "10.9537, 75.9303, 13.9269, 0.29", "10.8256, 76.6644, 14.0499, 0.29", "10.8159, 76.7302, 14.0605, 0.29", "10.7515, 77.4298, 14.1647, 0.37", "10.7328, 78.2976, 14.2699, 0.52", "10.7859, 79.0987, 14.3319, 1.11", "10.8647, 79.6521, 14.3729, 1.69", "10.9332, 80.0525, 14.3991, 1.77", "10.993, 80.5199, 14.4268, 1.69", "11.0362, 80.9909, 14.4516, 1.47", "11.0369, 81.3072, 14.465, 1.47", "11.0272, 81.3758, 14.4667, 1.47", "10.7296, 82.581, 14.5025, 0.29", "10.5587, 83.1228, 14.5194, 0.66", "10.5376, 83.1867, 14.524, 0.66", "10.4454, 83.4885, 14.5574, 0.37", "10.29, 84.1306, 14.6574, 0.29", "10.1582, 84.9009, 14.7998, 0.29", "10.1531, 84.9667, 14.8135, 0.29", "10.1572, 85.7925, 14.9765, 1.03", "10.1965, 86.4876, 15.1028, 1.69", "10.2814, 87.2277, 15.2162, 2.14", "10.3256, 87.5652, 15.2604, 2.28", "10.3682, 88.1055, 15.3023, 1.77", "10.3856, 88.7317, 15.3171, 1.18", "10.363, 89.3853, 15.2905, 0.52", "10.3086, 90.0159, 15.2467, 0.37", "10.2463, 90.4529, 15.1853, 0.37", "10.1037, 91.3641, 15.0333, 0.74", "10.0572, 91.6971, 14.969, 1.25", "9.9854, 92.2434, 14.849, 1.4", "9.9066, 92.9954, 14.6733, 0.81", "9.80113, 94.5111, 14.3202, 0.37", "9.78503, 95.3401, 14.1282, 0.37", "9.80839, 96.6804, 13.8327, 0.29", "9.85346, 97.7022, 13.6124, 1.84", "9.886, 98.0841, 13.5336, 2.28", "9.96462, 98.6595, 13.424, 2.14", "10.1959, 99.8932, 13.2484, 0.52", "10.3426, 100.588, 13.1645, 0.74", "10.4479, 101.071, 13.1266, 0.74", "10.5897, 101.748, 13.0974, 0.22", "10.6529, 102.172, 13.0865, 0.22", "10.7006, 103.027, 13.0591, 0.74", "10.6849, 103.247, 13.0463, 0.74", "10.5843, 103.97, 12.9817, 0.22", "10.4871, 104.51, 12.9226, 0.74", "10.397, 104.959, 12.8657, 0.96", "10.2112, 106.007, 12.721, 0.37", "10.045, 107.282, 12.5279, 1.25", "10.019, 107.728, 12.4626, 1.55", "10.0228, 108.08, 12.4235, 1.77", "10.0501, 108.669, 12.3897, 1.77", "10.1016, 109.451, 12.3826, 0.88", "10.1421, 109.965, 12.4046, 0.52", "10.1994, 110.77, 12.4748, 0.44", "10.252, 111.8, 12.5435, 0.29", "10.2772, 113.062, 12.6091, 1.25", "10.2727, 113.614, 12.6323, 2.21", "10.2601, 113.991, 12.6428, 2.5", "10.2239, 114.776, 12.651, 2.28", "10.1161, 116.101, 12.59, 0.66", "10.0509, 116.815, 12.5204, 0.52", "9.98107, 117.586, 12.4246, 0.66", "9.93326, 118.141, 12.3501, 0.96", "9.87522, 118.846, 12.2447, 0.96", "9.74483, 120.544, 11.964, 0.22", "9.71084, 121.249, 11.8559, 1.18", "9.71108, 121.64, 11.7885, 0.88", "9.73882, 122.167, 11.6888, 0.74", "9.81887, 122.845, 11.5574, 0.29", "9.83289, 122.91, 11.5456, 0.29", "10.0486, 123.473, 11.468, 0.81", "10.0701, 123.536, 11.4562, 0.81", "10.1604, 123.931, 11.3804, 1.03", "10.1905, 124.131, 11.3418, 1.03", "10.2006, 124.403, 11.2931, 1.03", "10.0764, 125.632, 11.0306, 0.29", "9.88196, 126.53, 10.8141, 0.29", "9.73592, 127.093, 10.6746, 0.59", "9.69657, 127.228, 10.6411, 0.59", "9.5577, 127.743, 10.5175, 0.37", "9.37015, 128.646, 10.3221, 0.29", "9.24885, 129.631, 10.1506, 1.11", "9.24113, 130.034, 10.0933, 1.69", "9.26264, 130.472, 10.0398, 1.84", "9.32252, 131.169, 9.9703, 1.62", "9.45325, 132.156, 9.89945, 0.74", "9.61353, 133.091, 9.87031, 0.52", "9.62618, 133.16, 9.86891, 0.52", "9.79303, 134.182, 9.85005, 0.37", "9.80263, 134.259, 9.84793, 0.37", "9.83581, 134.901, 9.82585, 1.25", "9.81783, 135.352, 9.77332, 0.96", "9.81248, 135.418, 9.76201, 0.96", "9.75434, 136.029, 9.64661, 0.74", "9.68869, 136.657, 9.50049, 0.59", "9.6298, 137.176, 9.37608, 0.74", "9.4439, 138.547, 9.0461, 0.37", "9.31817, 139.39, 8.84549, 0.74", "9.20722, 140.116, 8.67705, 0.52", "9.03715, 141.049, 8.45232, 0.29", "8.8718, 141.776, 8.2648, 0.81", "8.73276, 142.259, 8.12724, 1.18", "8.71181, 142.313, 8.11097, 1.18", "8.59931, 142.578, 8.0218, 1.18", "8.29358, 143.393, 7.7631, 1.18", "8.07773, 144.091, 7.56917, 0.44", "7.89544, 144.862, 7.3713, 0.29", "7.86939, 145.015, 7.33704, 0.29", "7.76129, 146.081, 7.14077, 0.29", "7.72613, 147.55, 6.94187, 1.62", "7.74301, 148.055, 6.9002, 2.65", "7.76781, 148.56, 6.87742, 2.87", "7.80109, 149.122, 6.86398, 2.36", "7.84265, 149.904, 6.85286, 1.69", "7.89311, 151.137, 6.83377, 0.52", "7.93504, 152.104, 6.81871, 0.52", "7.94869, 152.589, 6.80675, 0.81", "7.95925, 153.284, 6.78052, 0.44", "7.96915, 154.274, 6.7296, 0.44", "7.96825, 155.009, 6.68208, 0.37", "7.96924, 155.075, 6.67674, 0.37", "8.02197, 155.922, 6.59285, 0.37", "8.03549, 156.044, 6.57972, 0.37", "8.15686, 156.925, 6.48075, 1.62", "8.24883, 157.497, 6.42146, 2.36", "8.32596, 157.937, 6.38181, 2.36", "8.5891, 159.359, 6.26374, 0.29", "8.7249, 160.043, 6.21051, 0.29", "8.86861, 160.745, 6.16561, 0.37", "9.06383, 161.648, 6.11753, 0.37", "9.13793, 162.008, 6.08779, 0.59", "9.203, 162.381, 6.03941, 0.59", "9.21056, 162.436, 6.02882, 0.59", "9.32875, 163.831, 5.69856, 0.29", "9.42758, 165.547, 5.22267, 0.29", "9.45352, 166.373, 4.95512, 0.96", "9.45804, 167.109, 4.6901, 1.18", "9.43772, 167.678, 4.47319, 0.66", "9.39299, 168.239, 4.2531, 0.44", "9.38267, 168.301, 4.22672, 0.44", "9.2356, 168.979, 3.96653, 0.22", "9.20497, 169.127, 3.92652, 0.22", "9.02184, 170.22, 3.73033, 1.47", "8.95544, 170.698, 3.67136, 2.28", "8.90852, 171.125, 3.6336, 2.58", "8.7963, 172.341, 3.56391, 0.29", "8.74276, 173.008, 3.55011, 0.22", "8.7015, 173.691, 3.55118, 0.22", "8.67417, 174.263, 3.55974, 0.22", "8.62009, 175.21, 3.58076, 1.33", "8.60196, 175.465, 3.5893, 1.62", "8.56656, 175.805, 3.59164, 1.62", "8.44745, 176.569, 3.55666, 0.37", "8.29868, 177.274, 3.49854, 0.22", "8.21437, 177.633, 3.46699, 0.22", "8.12241, 177.993, 3.43445, 0.52", "7.93256, 178.783, 3.36421, 0.29", "7.64769, 180.146, 3.24775, 0.29", "7.51803, 180.898, 3.18848, 1.03", "7.46857, 181.381, 3.15689, 1.33", "7.4621, 181.593, 3.14541, 1.33", "7.47789, 182.036, 3.12915, 1.18", "7.53904, 182.673, 3.12375, 0.96", "7.61161, 183.154, 3.11899, 0.37", "7.75988, 183.999, 3.11088, 0.22", "7.896, 184.759, 3.10468, 0.22", "8.02899, 185.551, 3.09993, 1.11", "8.09525, 185.991, 3.08582, 1.92", "8.14373, 186.355, 3.05646, 2.5", "8.15089, 186.422, 3.04808, 2.5", "8.17905, 186.833, 2.97272, 2.5", "8.19377, 187.4, 2.84423, 2.36", "8.19268, 188.741, 2.49498, 0.29", "8.17653, 189.45, 2.29918, 0.29", "8.17118, 189.56, 2.26948, 0.29", "8.12093, 190.296, 2.0619, 1.33", "8.08755, 190.725, 1.94242, 1.55", "8.08244, 190.783, 1.92721, 1.55", "8.047, 191.201, 1.83635, 1.25", "8.04217, 191.88, 1.71912, 0.66", "8.08488, 193.151, 1.54649, 0.29", "8.13779, 193.881, 1.46852, 0.88", "8.17475, 194.257, 1.43462, 1.11", "8.2327, 194.906, 1.38795, 0.96", "8.30684, 196.203, 1.36675, 0.29", "8.33625, 197.598, 1.40718, 0.29", "8.31934, 198.502, 1.46773, 1.33", "8.28861, 199.214, 1.51614, 1.92", "8.23523, 199.998, 1.57715, 2.21", "8.03052, 202.16, 1.76473, 0.37", "7.87609, 203.397, 1.88251, 0.37", "7.71862, 204.574, 1.99679, 0.37", "7.59782, 205.436, 2.07616, 0.22", "7.47018, 206.384, 2.15489, 1.33", "7.42737, 206.73, 2.17817, 2.06", "7.37599, 207.074, 2.19204, 2.21", "7.22572, 207.895, 2.22922, 1.69", "6.9444, 209.196, 2.29254, 0.22", "6.78096, 209.875, 2.32554, 0.81", "6.68635, 210.281, 2.33784, 0.81", "6.48949, 211.325, 2.34966, 0.22", "6.39454, 212.017, 2.34123, 0.81", "6.38255, 212.174, 2.33603, 0.81", "6.37653, 212.67, 2.30864, 0.81", "6.39391, 213.094, 2.28246, 0.74", "6.48532, 214.146, 2.21624, 0.22", "6.57621, 214.932, 2.15652, 0.81", "6.61366, 215.303, 2.1274, 1.03", "6.65795, 215.863, 2.08422, 0.44", "6.71279, 216.908, 2.00749, 0.29", "6.73892, 217.789, 1.94186, 0.29", "6.73873, 218.88, 1.86815, 1.55", "6.74124, 219.219, 1.84347, 1.92", "6.74254, 219.297, 1.83739, 1.92", "6.747, 219.643, 1.81096, 1.92", "6.74822, 221.759, 1.6484, 0.22", "6.72543, 222.745, 1.57838, 0.66", "6.7049, 223.134, 1.5556, 1.03", "6.65147, 223.718, 1.52148, 1.03", "6.56122, 224.372, 1.48658, 0.81", "6.4286, 225.059, 1.4543, 0.37", "6.35419, 225.355, 1.44494, 0.37", "6.21966, 225.888, 1.42735, 0.37", "6.035, 226.641, 1.4017, 0.29", "5.84192, 227.523, 1.36999, 0.29", "5.83088, 227.589, 1.36689, 0.29", "5.67817, 228.774, 1.31215, 0.22", "5.67114, 228.851, 1.3079, 0.22", "5.63091, 229.54, 1.26466, 0.22", "5.63029, 229.619, 1.25672, 0.22", "5.66516, 230.462, 1.14511, 1.47", "5.6911, 230.879, 1.07778, 1.84", "5.69498, 230.935, 1.06756, 1.84", "5.72502, 231.344, 0.993184, 1.84", "5.8252, 232.587, 0.7659, 0.22", "5.90985, 233.776, 0.559382, 0.22", "5.94834, 234.33, 0.479199, 0.88", "5.9655, 234.744, 0.431402, 1.18", "5.96778, 235.17, 0.398334, 0.96", "5.96426, 235.239, 0.396378, 0.96", "5.86555, 235.853, 0.428564, 0.37", "5.75389, 236.363, 0.471604, 0.37", "5.65116, 236.91, 0.523737, 0.37", "5.61029, 237.196, 0.546427, 0.29", "5.55276, 237.812, 0.58379, 0.22", "5.53085, 238.195, 0.600373, 0.52", "5.52064, 238.987, 0.617042, 0.22", "5.53861, 239.604, 0.61319, 0.22", "5.58523, 240.165, 0.58239, 1.11", "5.63102, 240.686, 0.515231, 1.47", "5.63496, 240.761, 0.501348, 1.47", "5.63967, 241.119, 0.42023, 1.33", "5.63353, 241.218, 0.39414, 1.33", "5.52495, 242.094, 0.163359, 0.74", "5.39371, 243.105, -0.110181, 0.29", "5.32412, 243.676, -0.257462, 0.37", "5.31915, 243.735, -0.27133, 0.37", "5.29397, 244.218, -0.370735, 0.37", "5.28013, 244.921, -0.496354, 0.22", "5.29986, 245.755, -0.62289, 1.11", "5.33445, 246.257, -0.698404, 1.4", "5.37886, 246.727, -0.776177, 1.18", "5.44262, 247.362, -0.890585, 0.44", "5.55704, 248.36, -1.10304, 0.22", "5.66137, 249.024, -1.25244, 0.74", "5.7315, 249.431, -1.33657, 1.33", "5.74174, 249.486, -1.3479, 1.33", "5.87086, 250.184, -1.47638, 1.62", "5.94218, 250.564, -1.53651, 1.62", "6.24695, 252.123, -1.73762, 0.29", "6.43656, 253.158, -1.84702, 0.29", "6.44662, 253.225, -1.85344, 0.29", "6.5651, 254.369, -1.94396, 0.29", "6.58714, 254.93, -1.9722, 1.03", "6.58524, 255.008, -1.97449, 1.03", "6.52272, 255.643, -1.98997, 1.18", "6.37214, 256.776, -2.01303, 0.29", "6.24906, 257.678, -2.0271, 0.29", "6.12703, 258.509, -2.03634, 1.18", "6.07993, 258.869, -2.03861, 1.47", "6.0157, 259.408, -2.03918, 1.25", "5.97619, 259.85, -2.03669, 1.33", "5.92052, 261.037, -2.01848, 0.22", "5.92313, 261.182, -2.01801, 0.22", "6.04017, 262.255, -2.00738, 0.22", "6.05284, 262.331, -2.00574, 0.22", "6.20401, 263.07, -1.98155, 0.74", "6.2828, 263.424, -1.96638, 1.18", "6.35749, 263.849, -1.94372, 1.18", "6.50862, 265.11, -1.87471, 0.22", "6.51444, 265.177, -1.87084, 0.22", "6.5596, 265.864, -1.83448, 0.66", "6.57968, 266.222, -1.8376, 0.66", "6.66226, 267.474, -1.91027, 0.22", "6.71021, 268.168, -1.97448, 1.25", "6.75491, 268.778, -2.04972, 1.55", "6.81975, 269.455, -2.14071, 1.69", "6.98332, 270.824, -2.34409, 0.29", "7.15705, 272.166, -2.54972, 0.22", "7.2374, 272.743, -2.64132, 0.66", "7.30023, 273.16, -2.70308, 0.81", "7.30938, 273.226, -2.71158, 0.81", "7.48839, 274.651, -2.84907, 0.22", "7.58908, 275.488, -2.89045, 1.03", "7.6109, 275.701, -2.904, 1.33", "7.73149, 276.987, -2.9891, 0.22", "7.78116, 277.548, -3.02532, 0.81", "7.81777, 278.031, -3.05397, 1.03", "7.84247, 278.428, -3.07483, 0.74", "7.90832, 279.931, -3.15207, 0.22", "7.91731, 280.647, -3.185, 0.44", "7.88583, 281.514, -3.21838, 0.22", "7.8501, 282.284, -3.24373, 1.11", "7.82525, 282.7, -3.25408, 1.33", "7.78543, 283.339, -3.26679, 0.37", "7.7379, 284.171, -3.27423, 0.15", "7.71632, 284.797, -3.28761, 0.74", "7.72031, 284.866, -3.29083, 0.74", "7.75203, 285.146, -3.30787, 0.74", "7.91802, 286.238, -3.38438, 0.22", "8.02557, 286.849, -3.42994, 1.18", "8.10826, 287.286, -3.4656, 1.62", "8.46725, 289.248, -3.63293, 0.22", "8.57327, 289.869, -3.68609, 0.29", "8.58363, 289.937, -3.69179, 0.29", "8.6912, 290.767, -3.75616, 0.29", "8.78289, 291.571, -3.82057, 0.59", "8.82003, 292.124, -3.87367, 1.11", "8.82296, 292.218, -3.88328, 1.11", "8.84963, 292.769, -3.93979, 1.55", "8.87865, 293.37, -4.00017, 1.55", "8.88116, 293.427, -4.00562, 1.55", "8.94409, 295.303, -4.16473, 0.22", "8.99383, 296.661, -4.26754, 0.22", "9.06954, 297.603, -4.33408, 1.4", "9.09389, 297.819, -4.34799, 1.77", "9.17489, 298.444, -4.38299, 1.4", "9.30247, 299.198, -4.41747, 0.74", "9.51872, 300.184, -4.45016, 0.29", "9.97148, 301.95, -4.51646, 0.22", "10.1681, 302.651, -4.54465, 0.66", "10.2702, 302.988, -4.5597, 0.66", "10.5608, 303.84, -4.6005, 0.22", "10.584, 303.905, -4.60185, 0.22", "10.7688, 304.467, -4.59107, 0.52", "10.7886, 304.541, -4.58577, 0.52", "10.8777, 304.883, -4.55495, 0.52", "11.0184, 305.36, -4.47734, 0.22", "11.314, 306.24, -4.28338, 1.03", "11.5014, 306.699, -4.1607, 1.62", "11.6746, 307.102, -4.04394, 1.47", "11.9248, 307.68, -3.85937, 1.33", "12.5185, 309.07, -3.3555, 0.22", "12.9062, 309.97, -3.00596, 1.18", "13.4133, 311.095, -2.55524, 0.22", "13.6302, 311.568, -2.35644, 0.22", "13.9265, 312.208, -2.08006, 0.81", "14.5649, 313.572, -1.49271, 0.22", "14.5897, 313.63, -1.46854, 0.22", "14.7586, 314.066, -1.28494, 0.81", "14.7799, 314.125, -1.26047, 0.81", "14.8934, 314.385, -1.15272, 1.11", "15.1064, 314.788, -1.03408, 0.88" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-20.2188, -36.9464, 19.0317, 0.29", "-21.0222, -37.0077, 19.7699, 0.29", "-21.8919, -37.0987, 20.7819, 0.29", "-22.3254, -37.1898, 21.25, 0.59", "-23.0459, -37.4371, 21.9291, 0.59", "-23.1215, -37.4692, 21.9869, 0.59", "-24.3984, -38.0637, 22.8428, 0.59", "-24.4407, -38.0874, 22.8756, 0.59", "-24.9962, -38.4857, 23.4162, 0.37", "-25.4434, -38.8655, 23.8646, 0.29", "-25.8456, -39.2272, 24.2457, 0.29", "-25.8754, -39.2554, 24.2741, 0.29", "-26.6127, -40.0325, 24.9948, 0.74", "-26.7827, -40.2434, 25.2168, 1.03", "-27.1411, -40.8214, 25.8678, 0.29", "-27.1783, -40.8904, 25.9422, 0.29", "-27.4014, -41.3361, 26.3722, 0.37", "-27.5785, -41.6666, 26.6446, 0.52", "-27.7396, -41.943, 26.8106, 0.52", "-28.1468, -42.3967, 27.0645, 0.29", "-28.6998, -42.7463, 27.2796, 0.29", "-29.0376, -42.8785, 27.3916, 0.59", "-29.2805, -42.9379, 27.4639, 0.88", "-29.5267, -42.9876, 27.5324, 1.03", "-30.6674, -43.2193, 27.9034, 0.29", "-31.3536, -43.3593, 28.1662, 0.44", "-31.7453, -43.4741, 28.3484, 0.74", "-31.8162, -43.5065, 28.3849, 0.74", "-32.2266, -43.7288, 28.6123, 0.66", "-32.8963, -44.1786, 29.0319, 0.66", "-32.9326, -44.2139, 29.0606, 0.66", "-33.2128, -44.5262, 29.2856, 0.29", "-33.7744, -45.2181, 29.7717, 0.22", "-38.7276, -49.2388, 35.1499, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-20.2188, -36.9464, 19.0317, 0.74", "-20.5219, -36.369, 20.5814, 0.74", "-20.9877, -35.6058, 22.3876, 0.66", "-21.0173, -35.5574, 22.5023, 0.66", "-21.1553, -35.3314, 23.0371, 0.66", "-21.1716, -35.3046, 23.1006, 0.66", "-21.277, -35.132, 23.5092, 0.52", "-21.3935, -34.8923, 23.7844, 0.52", "-24.4111, -31.5905, 32.4351, 0.52", "-26.6247, -27.498, 40.9702, 0.52", "-28.2533, -25.1717, 50.3024, 0.52", "-28.0189, -22.0074, 59.5103, 0.52" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-7.22115, -23.2732, 1.17597, 0.96", "-7.81921, -24.6989, 1.18919, 0.96", "-8.34712, -26.1195, 1.21002, 0.96", "-8.39493, -26.2813, 1.21406, 0.96", "-8.58815, -27.1155, 1.21506, 0.96", "-8.87579, -28.549, 1.2014, 1.11", "-9.16013, -30.2679, 1.12609, 1.11", "-9.16712, -30.3504, 1.12208, 1.11", "-9.2397, -32.0653, 1.02346, 1.03", "-9.27051, -33.304, 0.938005, 1.99", "-9.2697, -33.3865, 0.930244, 1.99", "-9.21336, -34.5279, 0.760195, 2.87" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-7.22115, -23.2732, 1.17597, 1.92", "-6.97973, -24.8032, 1.58545, 1.92", "-6.75039, -26.1807, 1.95028, 1.92", "-6.53471, -27.434, 2.2779, 1.92", "-6.33918, -28.5963, 2.57338, 2.14", "-6.14529, -29.6869, 2.84923, 1.62", "-5.93096, -30.7803, 3.12592, 1.99", "-5.75742, -31.5158, 3.3029, 2.73", "-5.53229, -32.332, 3.51251, 2.36", "-5.25613, -33.2327, 3.78649, 1.99", "-4.86423, -34.4, 4.19465, 1.92", "-4.60813, -35.091, 4.46875, 2.28", "-4.34956, -35.7792, 4.78038, 2.5", "-4.11513, -36.4327, 5.1116, 2.58", "-3.78311, -37.485, 5.7204, 1.69", "-3.77261, -37.5241, 5.74478, 1.69", "-3.6035, -38.4554, 6.31914, 1.47", "-3.48116, -39.7687, 7.08582, 1.25", "-3.4722, -40.5099, 7.48182, 1.62", "-3.51851, -41.3005, 7.85192, 1.62", "-3.61995, -42.1574, 8.18475, 1.25", "-3.79961, -43.1446, 8.50937, 1.25", "-4.07036, -44.1123, 8.74274, 1.77", "-4.27025, -44.6577, 8.81136, 1.92", "-4.52215, -45.2792, 8.83924, 1.92", "-4.7875, -45.8846, 8.83078, 2.06", "-5.1375, -46.614, 8.79939, 1.92", "-5.59212, -47.5351, 8.74246, 1.77", "-6.07382, -48.5246, 8.66994, 1.55", "-6.64684, -49.7289, 8.58742, 1.4", "-7.09717, -50.6885, 8.55064, 1.4", "-7.4631, -51.5153, 8.54788, 1.84", "-7.71832, -52.1589, 8.59145, 1.77", "-8.00235, -53.0275, 8.7211, 1.25", "-8.01659, -53.0874, 8.73513, 1.25", "-8.19559, -54.2006, 9.0812, 0.88", "-8.2274, -54.737, 9.27943, 1.62", "-8.19983, -55.7019, 9.66175, 1.92", "-8.12626, -56.5465, 9.99292, 1.92", "-8.03885, -57.3459, 10.2824, 1.77", "-8.03316, -57.3985, 10.2988, 1.77", "-7.90888, -58.5067, 10.5859, 1.62", "-7.81892, -59.4066, 10.7607, 1.33", "-7.73804, -60.2574, 10.8771, 1.18", "-7.67065, -61.0717, 10.9689, 1.18", "-7.60356, -61.997, 11.0542, 1.55", "-7.54958, -63.1401, 11.1193, 1.62", "-7.54104, -64.1391, 11.1385, 2.14", "-7.55952, -64.8976, 11.1368, 2.36", "-7.59171, -65.6168, 11.1275, 2.58", "-7.62035, -66.1509, 11.1234, 3.02", "-7.70108, -67.4253, 11.1488, 2.21", "-7.76588, -68.5462, 11.2098, 1.77", "-7.81544, -69.5558, 11.302, 1.77", "-7.85095, -70.6707, 11.4554, 1.84", "-7.86483, -71.9667, 11.7349, 1.84", "-7.84847, -73.2655, 12.1169, 1.18", "-7.78378, -74.5984, 12.6276, 0.96", "-7.78085, -74.6493, 12.6535, 0.96", "-7.73807, -75.502, 13.2405, 1.33", "-7.69942, -76.3372, 13.9488, 1.84", "-7.68948, -76.9771, 14.5492, 1.84", "-7.69434, -77.6045, 15.1294, 1.77", "-7.72543, -78.7721, 16.1075, 1.69", "-7.75201, -79.9126, 16.886, 0.74", "-7.76921, -80.5893, 17.2311, 0.74", "-7.78591, -81.4513, 17.558, 1.18", "-7.79305, -82.2802, 17.7738, 1.47", "-7.78599, -83.1102, 17.8526, 1.62", "-7.76701, -83.7435, 17.7972, 1.92", "-7.7607, -84.2525, 17.7115, 1.92", "-7.7614, -84.299, 17.7039, 1.92", "-7.78606, -84.9103, 17.6217, 1.92", "-7.85628, -85.79, 17.5466, 1.33", "-7.96221, -86.6567, 17.4837, 1.47", "-8.08159, -87.5352, 17.4296, 1.92", "-8.16229, -88.1811, 17.4001, 1.92", "-8.25959, -89.0474, 17.3805, 1.99", "-8.34556, -90.1219, 17.3937, 1.99", "-8.39257, -91.3574, 17.4493, 1.99", "-8.39117, -91.6497, 17.4748, 2.36", "-8.3656, -92.3461, 17.5445, 1.62", "-8.31952, -93.0815, 17.6285, 1.25", "-8.24151, -93.9939, 17.7432, 1.11", "-8.18238, -94.7656, 17.8393, 0.81", "-8.13102, -95.7702, 17.9685, 0.66", "-8.13466, -96.6409, 18.0663, 1.55", "-8.13742, -96.6975, 18.072, 1.55", "-8.18877, -97.159, 18.1474, 2.21", "-8.29352, -97.8019, 18.2842, 1.92", "-8.44473, -98.6442, 18.4994, 1.62", "-8.59224, -99.4211, 18.7277, 1.4", "-8.76093, -100.272, 19.0571, 1.4", "-9.03603, -101.601, 19.6468, 1.33", "-9.15931, -102.251, 19.9687, 0.96", "-9.30704, -103.227, 20.4955, 0.74", "-9.31382, -103.285, 20.531, 0.74", "-9.38998, -104.6, 21.4118, 0.66", "-9.38698, -104.643, 21.4465, 0.66", "-9.21253, -105.493, 22.1951, 1.69", "-9.09599, -105.964, 22.6278, 2.21", "-8.91499, -106.703, 23.2863, 3.02", "-8.81117, -107.191, 23.6798, 3.02", "-8.53539, -108.779, 24.779, 0.52", "-8.48052, -109.385, 25.1127, 0.52", "-8.47621, -110.156, 25.4277, 2.36", "-8.51597, -110.898, 25.629, 3.09", "-8.55236, -111.261, 25.6804, 3.24", "-8.65585, -112.005, 25.7285, 3.02", "-8.93517, -113.664, 25.7118, 1.11", "-9.06772, -114.531, 25.7107, 0.96", "-9.14506, -115.169, 25.7187, 1.25", "-9.22175, -116.04, 25.7671, 1.18", "-9.25786, -116.693, 25.8363, 0.52", "-9.25849, -116.75, 25.8463, 0.52", "-9.21135, -117.344, 26.0304, 1.4", "-9.20244, -117.387, 26.047, 1.4", "-8.95475, -118.106, 26.3569, 2.14", "-8.75048, -118.605, 26.5725, 2.14", "-8.60277, -118.97, 26.7145, 2.36", "-8.347, -119.659, 26.9554, 1.33", "-8.06296, -120.5, 27.2006, 0.81", "-7.74548, -121.573, 27.4404, 0.81", "-7.48829, -122.624, 27.6052, 0.81", "-7.26612, -123.743, 27.7593, 1.62", "-7.16587, -124.344, 27.8362, 1.92", "-7.04617, -125.268, 27.9831, 1.25", "-6.95546, -126.15, 28.1499, 0.96", "-6.85359, -127.339, 28.4113, 0.96", "-6.74939, -128.362, 28.6863, 0.88", "-6.62949, -129.399, 29.0269, 1.62", "-6.46264, -130.58, 29.4742, 1.84", "-6.38321, -131.21, 29.7757, 1.92", "-6.37773, -131.265, 29.8065, 1.92", "-6.31381, -132.082, 30.2999, 1.62", "-6.26157, -133.094, 30.9135, 0.59", "-6.23519, -133.885, 31.3816, 0.59", "-6.18129, -135.081, 32.0298, 0.52", "-6.15368, -135.871, 32.4733, 1.69", "-6.14208, -136.382, 32.7644, 2.5", "-6.1484, -136.831, 33.0279, 2.5", "-6.15495, -137.37, 33.3451, 2.5", "-6.14494, -138.188, 33.7844, 1.77" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-9.54253, 111.615, -13.0138, 0.59", "-10.3841, 112.549, -13.6991, 0.59", "-11.0066, 113.41, -14.3158, 0.44", "-10.8472, 113.618, -14.9823, 0.74", "-10.5867, 113.959, -16.0213, 0.74", "-10.5529, 114.012, -16.1802, 0.74", "-10.4174, 114.293, -16.9898, 0.88", "-10.4046, 114.317, -17.0618, 0.88", "-9.45851, 116.259, -22.8279, 1.62", "-9.25542, 116.803, -24.472, 1.4", "-9.1288, 117.342, -26.1926, 0.37", "-9.10595, 117.629, -27.1325, 0.74", "-9.1785, 118.239, -29.1084, 0.29", "-9.27225, 118.496, -29.8275, 1.4", "-9.46443, 118.769, -30.4287, 1.84", "-10.0912, 119.69, -32.6649, 0.44", "-10.1846, 119.855, -33.0446, 0.29", "-10.3309, 120.118, -33.6792, 0.29", "-10.4798, 120.372, -34.2734, 0.59", "-10.973, 121.304, -36.3882, 0.44", "-11.1546, 121.657, -37.0715, 0.22", "-11.3165, 121.963, -37.5505, 0.74", "-11.5663, 122.517, -38.4086, 0.15", "-11.6053, 122.605, -38.5452, 0.15", "-11.7039, 122.824, -38.853, 0.15", "-12.1187, 123.678, -39.8655, 1.47", "-12.3404, 124.119, -40.3685, 1.62", "-13.1525, 125.733, -42.3141, 0.22", "-13.176, 125.781, -42.3728, 0.22", "-13.469, 126.344, -43.0988, 0.22", "-13.8585, 127.045, -44.05, 1.25", "-14.0268, 127.385, -44.5425, 1.4", "-14.5202, 128.462, -46.0944, 0.22", "-14.5483, 128.537, -46.1989, 0.22", "-14.8575, 129.583, -47.6678, 1.47", "-14.9385, 129.913, -48.1123, 1.99", "-15.3112, 131.767, -50.4173, 0.37", "-15.3977, 132.263, -50.9767, 0.29", "-15.5395, 133.117, -51.846, 1.18", "-15.6996, 134.1, -52.7736, 0.52", "-15.8328, 135.039, -53.5521, 1.55", "-15.8808, 135.376, -53.7998, 1.84", "-16.2089, 137.379, -54.982, 0.22", "-16.2165, 137.445, -55.0186, 0.22", "-16.2599, 138.038, -55.2971, 0.22", "-16.232, 138.752, -55.5677, 1.4", "-16.2227, 138.834, -55.5953, 1.4", "-16.1609, 139.297, -55.7267, 1.4", "-15.8427, 141.047, -56.1698, 0.15", "-15.6982, 141.786, -56.3803, 0.74", "-15.3329, 143.502, -56.9124, 0.15", "-15.1944, 144.105, -57.1077, 0.74", "-15.1158, 144.405, -57.2029, 0.88", "-14.6584, 145.91, -57.6425, 0.15", "-14.6356, 145.968, -57.6609, 0.15", "-14.4262, 146.412, -57.8276, 0.37", "-14.3429, 146.517, -57.9076, 0.37", "-13.7694, 147.01, -58.4862, 0.22", "-13.2745, 147.382, -58.9901, 0.59", "-11.9185, 148.226, -60.3864, 1.69", "-11.7685, 148.31, -60.5465, 1.69", "-9.37612, 149.418, -63.2437, 0.22", "-8.91549, 149.583, -63.7874, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-9.54253, 111.615, -13.0138, 2.65", "-9.68643, 112.49, -12.3905, 2.65", "-9.88099, 113.496, -11.8212, 2.06", "-10.2648, 115.294, -10.965, 1.92", "-10.2778, 115.351, -10.9407, 1.92", "-10.5408, 116.39, -10.5509, 0.74", "-10.9397, 117.903, -10.0282, 0.52", "-11.3175, 119.099, -9.68572, 0.52", "-11.503, 119.673, -9.57627, 0.52", "-11.5703, 119.918, -9.56122, 0.52", "-11.7545, 120.691, -9.52114, 0.52", "-11.7771, 120.812, -9.5158, 0.52", "-11.8794, 121.708, -9.47809, 0.44", "-11.9421, 122.417, -9.41004, 0.44", "-12.0181, 123.771, -9.2518, 1.84", "-12.0776, 124.877, -9.08117, 2.73", "-12.1105, 125.464, -8.97328, 3.54", "-12.1654, 126.236, -8.81776, 3.9", "-12.2223, 126.851, -8.68266, 4.05", "-12.291, 127.429, -8.56344, 3.9", "-12.4556, 128.496, -8.36962, 3.61", "-12.6101, 129.241, -8.24758, 2.8", "-12.8096, 130.076, -8.12876, 1.69", "-13.0571, 131.057, -7.99571, 1.11", "-13.348, 132.159, -7.85997, 0.81", "-13.5125, 132.76, -7.79926, 0.66", "-13.8526, 134.035, -7.71916, 0.52", "-14.1733, 135.148, -7.65316, 0.44" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-38.7276, -49.2388, 35.1499, 0.37", "-44.7762, -53.1314, 39.6226, 0.37", "-49.3182, -58.3012, 44.493, 0.37", "-54.6198, -62.2615, 49.7712, 0.37", "-58.7172, -65.8182, 56.2723, 0.37", "-64.2077, -69.7424, 61.3846, 0.37", "-69.7613, -73.2117, 66.7661, 0.37", "-74.5489, -78.3775, 71.4028, 0.37", "-80.9268, -82.7257, 74.8727, 0.37", "-88.6285, -85.8938, 76.5354, 0.37", "-96.3231, -89.3592, 77.4538, 0.37", "-104.402, -91.3061, 79.266, 0.37", "-112.56, -93.0414, 80.9436, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-38.7276, -49.2388, 35.1499, 0.29", "-42.3532, -51.5865, 38.0202, 0.37", "-45.4596, -54.1658, 41.2648, 0.37", "-48.6717, -57.3066, 43.8131, 0.37", "-51.9531, -60.7776, 45.7514, 0.37", "-55.2803, -64.3508, 47.3949, 0.37", "-58.26, -67.8382, 49.744, 0.37", "-60.8814, -71.7732, 51.7516, 0.37", "-63.2984, -76.1218, 52.9616, 0.37", "-66.6582, -79.9722, 53.5386, 0.37" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-28.0189, -22.0074, 59.5103, 0.37", "-30.8632, -18.2865, 68.2714, 0.37", "-34.5054, -14.6555, 76.7712, 0.37", "-39.1633, -10.0694, 84.2194, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-28.0189, -22.0074, 59.5103, 0.29", "-28.0206, -19.9134, 67.8465, 0.37", "-27.6128, -17.4161, 76.053, 0.37", "-25.8773, -16.4178, 84.4255, 0.37", "-23.7696, -16.4101, 92.7798, 0.37", "-22.307, -17.2938, 101.227, 0.37", "-21.7474, -17.6233, 109.82, 0.37", "-21.7787, -17.8117, 118.436, 0.37", "-21.6323, -17.8234, 127.051, 0.37", "-22.0048, -16.6201, 135.566, 0.37", "-22.5778, -15.3579, 144.061, 0.37", "-22.5719, -14.1453, 152.582, 0.37", "-21.8497, -14.0526, 161.167, 0.37", "-21.3113, -13.3985, 169.738, 0.37" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.21336, -34.5279, 0.760195, 0.59", "-9.46429, -34.9118, 0.460714, 0.59", "-9.92898, -35.4075, -0.0103786, 0.44", "-10.4553, -35.7934, -0.554944, 0.29", "-10.7524, -35.9552, -0.835626, 0.22", "-11.1268, -36.1419, -1.16956, 0.29", "-11.5827, -36.3638, -1.55781, 0.29", "-12.1757, -36.6078, -2.01025, 0.29", "-12.8548, -36.8761, -2.51901, 0.29", "-13.3767, -37.1072, -2.91257, 0.29", "-14.0457, -37.4717, -3.43701, 1.25", "-14.2431, -37.6134, -3.59852, 1.77", "-14.5368, -37.8919, -3.85058, 1.77", "-15.3413, -38.8119, -4.55121, 1.11", "-15.7731, -39.4014, -4.94603, 0.52", "-16.0528, -39.8603, -5.25556, 0.37", "-16.3806, -40.5038, -5.70906, 0.37", "-16.5935, -40.9893, -6.05743, 0.37", "-16.6273, -41.0722, -6.11796, 0.37", "-16.905, -41.7582, -6.61426, 1.25", "-17.0896, -42.1729, -6.96062, 1.18", "-17.4594, -42.8171, -7.57484, 0.29", "-17.6616, -43.0535, -7.83173, 0.22", "-17.9693, -43.3377, -8.13515, 0.22", "-18.227, -43.5547, -8.3372, 0.44", "-18.5087, -43.7643, -8.50539, 0.44", "-18.8129, -43.9786, -8.64199, 0.29", "-19.1308, -44.1914, -8.77533, 0.29", "-19.5825, -44.5142, -9.03755, 0.37", "-19.9261, -44.7789, -9.27399, 0.37", "-20.3117, -45.0639, -9.57176, 0.29", "-20.9991, -45.5339, -10.1612, 1.18", "-21.5046, -45.8641, -10.6062, 1.99", "-22.0009, -46.1651, -11.0462, 2.28", "-22.3103, -46.3438, -11.3134, 1.99", "-23.0933, -46.8226, -11.9712, 0.59", "-23.6119, -47.1993, -12.389, 0.37", "-23.9905, -47.5663, -12.6946, 0.37", "-24.3985, -48.0111, -13.0164, 1.11", "-24.6835, -48.3309, -13.228, 1.69", "-24.9875, -48.6898, -13.4571, 1.84", "-25.3945, -49.18, -13.7468, 1.4", "-26.0965, -49.9534, -14.2065, 0.44", "-26.4735, -50.3279, -14.4509, 0.44", "-26.952, -50.7631, -14.7447, 0.37", "-27.3783, -51.1123, -15.0006, 1.18", "-27.7509, -51.4061, -15.2183, 1.62", "-28.1398, -51.7353, -15.4353, 1.03", "-28.1774, -51.7746, -15.458, 1.03", "-28.3602, -52.0288, -15.5936, 0.88", "-28.6448, -52.5025, -15.8574, 0.44", "-28.9332, -53.0099, -16.1518, 0.29", "-29.184, -53.4779, -16.43, 0.29", "-29.6326, -54.3336, -16.9469, 1.92", "-29.938, -54.922, -17.2982, 2.73", "-30.2441, -55.5241, -17.6619, 2.65", "-30.8458, -56.6565, -18.361, 0.66", "-30.8748, -56.7072, -18.3939, 0.66", "-31.329, -57.4516, -18.8905, 0.29", "-31.5354, -57.7731, -19.0957, 0.29", "-31.7909, -58.1642, -19.3517, 0.29", "-32.0764, -58.6345, -19.6879, 0.29", "-32.331, -59.0708, -20.0318, 1.11", "-32.3583, -59.1191, -20.0696, 1.11", "-32.5842, -59.5219, -20.3782, 1.25", "-32.8769, -60.0386, -20.7627, 0.96", "-33.3875, -61.0099, -21.3669, 0.37", "-33.409, -61.0574, -21.3937, 0.37", "-33.6456, -61.5913, -21.6729, 0.22", "-33.8083, -61.9533, -21.8474, 0.22", "-33.8567, -62.0553, -21.8994, 0.66", "-34.2053, -62.7511, -22.2377, 0.52", "-34.7854, -63.8727, -22.7715, 1.77", "-35.2031, -64.6696, -23.1532, 2.58", "-35.5609, -65.3348, -23.4778, 2.58", "-36.2589, -66.6044, -24.0937, 0.44", "-36.6355, -67.2585, -24.4015, 0.29", "-36.6695, -67.3128, -24.4256, 0.29", "-36.9397, -67.7178, -24.573, 0.29", "-37.3565, -68.3455, -24.7719, 1.47", "-37.5838, -68.6963, -24.8627, 1.84", "-37.8636, -69.1804, -24.94, 1.47", "-38.5348, -70.4571, -25.1189, 0.29", "-38.7679, -70.9432, -25.176, 1.11", "-38.9247, -71.2908, -25.2097, 1.25", "-39.1445, -71.8117, -25.2457, 1.03", "-39.446, -72.5495, -25.2867, 0.22", "-39.6454, -73.0259, -25.3055, 0.22", "-39.773, -73.3195, -25.3094, 0.59", "-39.9714, -73.7244, -25.3213, 0.74", "-40.1065, -73.9662, -25.3416, 0.37", "-40.3805, -74.4126, -25.3963, 0.22", "-40.7847, -75.0162, -25.4875, 1.55", "-41.1595, -75.5755, -25.5769, 2.21", "-41.3727, -75.8926, -25.6277, 1.84", "-42.0457, -76.8868, -25.7846, 0.22", "-42.3932, -77.3891, -25.8633, 0.22", "-42.7972, -77.9378, -25.9519, 1.11", "-43.0378, -78.246, -26.0016, 1.62", "-43.341, -78.6085, -26.0574, 1.84", "-43.805, -79.1441, -26.132, 1.11", "-44.0693, -79.4434, -26.1687, 0.66", "-44.7629, -80.2311, -26.2714, 0.29", "-45.1371, -80.6608, -26.3294, 0.59", "-46.0168, -81.7267, -26.4508, 0.29", "-46.054, -81.7741, -26.4553, 0.29", "-46.6502, -82.5659, -26.5175, 1.18", "-46.8781, -82.8796, -26.5371, 1.55", "-47.0906, -83.1963, -26.5484, 1.55", "-47.6462, -84.0959, -26.6111, 0.52", "-48.1056, -84.9222, -26.7075, 0.37", "-48.1322, -84.9754, -26.7162, 0.37", "-48.436, -85.66, -26.8471, 0.37", "-48.6765, -86.2411, -26.9707, 0.29", "-49.1126, -87.363, -27.2343, 1.99", "-49.2997, -87.8784, -27.367, 2.28", "-49.723, -89.1183, -27.6701, 0.22", "-49.982, -89.8392, -27.8325, 0.22", "-50.1056, -90.1675, -27.8849, 0.74", "-50.1276, -90.2231, -27.8899, 0.74", "-50.3288, -90.7219, -27.8936, 0.74", "-50.5977, -91.3997, -27.8737, 0.22", "-50.9134, -92.1661, -27.8458, 0.22", "-51.4369, -93.3935, -27.8064, 2.14", "-51.5553, -93.6715, -27.7985, 2.36", "-52.0015, -94.6791, -27.7756, 0.29", "-52.2096, -95.1197, -27.7632, 0.22", "-52.4995, -95.6786, -27.7494, 0.22", "-52.8608, -96.3314, -27.7332, 1.4", "-53.062, -96.6831, -27.7274, 1.77", "-53.3463, -97.189, -27.7069, 1.33", "-53.8221, -98.1226, -27.6365, 0.37", "-54.1312, -98.7941, -27.5809, 0.22", "-54.3135, -99.2547, -27.5402, 0.22", "-54.5241, -99.8547, -27.4952, 0.81", "-54.6383, -100.207, -27.4725, 0.81", "-54.8792, -100.959, -27.455, 0.22", "-55.037, -101.393, -27.4784, 0.22", "-55.2418, -101.865, -27.5263, 1.25", "-55.4225, -102.209, -27.5759, 1.77", "-55.6384, -102.58, -27.6384, 1.77", "-56.1132, -103.388, -27.7833, 0.44", "-56.5518, -104.12, -27.9182, 0.29", "-56.9202, -104.751, -28.0394, 1.4", "-57.1376, -105.123, -28.1114, 1.77", "-57.3171, -105.443, -28.1722, 1.77", "-57.8048, -106.348, -28.3352, 0.37", "-58.1516, -107.038, -28.4431, 0.29", "-58.5129, -107.763, -28.568, 0.22", "-58.8323, -108.357, -28.6927, 0.22", "-59.234, -109.042, -28.8552, 1.11", "-59.3885, -109.287, -28.9183, 1.4", "-59.7056, -109.781, -29.0487, 0.59", "-60.0581, -110.353, -29.1969, 0.22", "-60.4025, -110.938, -29.341, 0.22", "-60.7531, -111.522, -29.4926, 1.11", "-60.9136, -111.772, -29.5598, 1.55", "-61.1517, -112.129, -29.6577, 1.33", "-61.559, -112.721, -29.8185, 0.59", "-61.8767, -113.203, -29.9273, 0.22", "-62.0766, -113.506, -29.9815, 0.66", "-62.183, -113.656, -30.0034, 0.66", "-62.2943, -113.804, -30.0197, 0.66", "-62.636, -114.249, -30.0626, 0.22", "-63.0281, -114.729, -30.067, 0.22", "-63.5286, -115.32, -30.0369, 1.33", "-63.7518, -115.576, -30.0157, 1.62", "-63.9924, -115.846, -29.989, 1.33", "-64.7597, -116.687, -29.8965, 0.29", "-65.2485, -117.192, -29.8468, 0.29", "-65.6591, -117.565, -29.8313, 0.29", "-66.0525, -117.885, -29.8437, 0.88", "-66.3263, -118.094, -29.8592, 0.88", "-66.645, -118.322, -29.8858, 0.66", "-67.2046, -118.715, -29.952, 0.15", "-67.6797, -119.102, -30.0558, 0.15", "-68.1198, -119.488, -30.1687, 0.15", "-68.3387, -119.679, -30.2342, 0.59", "-68.3866, -119.715, -30.2436, 0.59", "-68.6412, -119.903, -30.2741, 0.59", "-69.0681, -120.232, -30.2975, 0.22", "-69.122, -120.281, -30.2984, 0.22", "-69.7212, -120.829, -30.3061, 0.22", "-70.6242, -121.684, -30.3145, 1.77", "-70.9429, -121.993, -30.3165, 2.14", "-71.3495, -122.391, -30.3266, 1.47", "-72.0953, -123.19, -30.3741, 0.37", "-72.6942, -123.904, -30.44, 0.22", "-72.9975, -124.341, -30.4944, 0.81", "-73.1534, -124.602, -30.5432, 0.96", "-73.3948, -125.025, -30.6388, 0.96", "-73.7941, -125.793, -30.8351, 0.22", "-73.8188, -125.844, -30.8496, 0.22", "-74.0525, -126.386, -31.0081, 0.22", "-74.3039, -126.999, -31.1786, 0.22", "-74.4531, -127.424, -31.302, 0.96", "-74.5815, -127.799, -31.4089, 1.33", "-74.7566, -128.269, -31.5469, 1.11", "-75.0379, -128.958, -31.8002, 0.22", "-75.1822, -129.272, -31.9332, 0.59", "-75.5967, -130.126, -32.2889, 0.22", "-75.9146, -130.75, -32.5404, 1.18", "-76.1318, -131.152, -32.7134, 1.4", "-76.6749, -132.081, -33.12, 0.22", "-77.0029, -132.582, -33.3361, 0.22", "-77.3848, -133.134, -33.5581, 1.99", "-77.6882, -133.543, -33.7073, 2.5", "-78.0074, -133.975, -33.858, 2.43", "-78.8467, -135.1, -34.2019, 0.22", "-79.166, -135.528, -34.3041, 0.29", "-79.6117, -136.126, -34.44, 0.22", "-79.8661, -136.477, -34.5112, 0.74", "-79.9884, -136.653, -34.5298, 0.74", "-80.414, -137.321, -34.5314, 0.15", "-80.6956, -137.871, -34.5012, 0.15", "-80.7683, -138.043, -34.4944, 0.81", "-80.9841, -138.609, -34.4976, 1.33", "-81.1862, -139.179, -34.5186, 1.33", "-81.2049, -139.233, -34.5221, 1.33", "-81.4776, -140.08, -34.6521, 0.22", "-81.7549, -141.015, -34.8457, 0.22", "-81.9529, -141.754, -35.0283, 1.62", "-82.0818, -142.236, -35.1646, 1.92", "-82.1891, -142.643, -35.2892, 1.92", "-82.4654, -143.734, -35.6095, 0.22", "-82.6187, -144.358, -35.7848, 0.22", "-82.7735, -145.112, -36.0033, 0.22", "-82.8966, -145.766, -36.198, 1.25", "-82.9697, -146.081, -36.2973, 1.62", "-83.0904, -146.475, -36.4167, 1.62", "-83.1344, -146.588, -36.4501, 1.62", "-83.6956, -147.828, -36.8797, 0.22", "-83.7432, -147.937, -36.9236, 0.22", "-83.9957, -148.59, -37.2005, 0.22", "-84.2584, -149.317, -37.5141, 0.22", "-84.4639, -149.864, -37.7504, 1.03", "-84.568, -150.133, -37.8658, 1.03", "-84.901, -150.969, -38.2142, 0.22", "-85.0472, -151.351, -38.3728, 0.59", "-85.2423, -151.934, -38.6026, 0.22", "-85.3856, -152.362, -38.754, 0.22", "-85.5697, -152.928, -38.9132, 1.25", "-85.6751, -153.255, -38.993, 1.62", "-85.708, -153.355, -39.0141, 1.62", "-86.042, -154.382, -39.2429, 0.15", "-86.2444, -155.067, -39.3916, 1.25", "-86.317, -155.347, -39.45, 1.25", "-86.5582, -156.241, -39.6513, 0.22", "-86.5766, -156.295, -39.6663, 0.22", "-86.7703, -156.75, -39.8159, 0.74", "-86.7936, -156.793, -39.834, 0.74", "-86.9177, -156.997, -39.9144, 0.74", "-87.4086, -157.778, -40.176, 0.15", "-87.8033, -158.41, -40.3435, 1.11", "-87.8715, -158.524, -40.3726, 1.11", "-87.905, -158.582, -40.3864, 1.11", "-88.7784, -160.027, -40.746, 0.22", "-89.0499, -160.464, -40.8597, 1.03", "-89.27, -160.81, -40.9503, 1.11", "-89.9491, -161.835, -41.2454, 0.22", "-90.0591, -161.995, -41.2963, 0.59", "-90.5917, -162.716, -41.5334, 0.22", "-90.8617, -163.051, -41.651, 1.33", "-91.0965, -163.324, -41.7374, 1.55", "-91.4757, -163.724, -41.8458, 0.88", "-92.2635, -164.533, -42.0178, 0.22", "-92.6167, -164.898, -42.0873, 0.66", "-92.7795, -165.069, -42.1396, 0.66", "-93.3877, -165.699, -42.3879, 0.22", "-93.9593, -166.297, -42.6695, 1.62", "-94.3782, -166.743, -42.9201, 2.06", "-94.7358, -167.116, -43.1654, 2.06", "-95.971, -168.432, -44.0665, 0.22", "-95.971, -168.432, -44.0665, 0.59", "-96.0527, -168.512, -44.1237, 0.59", "-96.5808, -168.984, -44.4545, 0.22", "-97.1208, -169.403, -44.7373, 0.22", "-97.7268, -169.821, -44.9773, 1.77", "-98.0807, -170.039, -45.0616, 2.06", "-99.4673, -170.862, -45.3035, 0.15", "-99.749, -171.017, -45.3385, 0.74", "-100.075, -171.17, -45.3453, 0.74", "-100.795, -171.473, -45.2916, 0.22", "-101.423, -171.709, -45.1987, 0.22", "-102.122, -171.951, -45.0504, 1.18", "-102.467, -172.065, -44.9446, 1.55", "-103.571, -172.419, -44.5721, 0.29", "-104.389, -172.673, -44.2802, 0.22", "-104.749, -172.767, -44.1626, 0.74", "-105.041, -172.827, -44.0834, 1.03", "-105.982, -172.965, -43.896, 0.15", "-106.272, -172.996, -43.8713, 0.37", "-106.333, -173.0, -43.8745, 0.37", "-107.294, -173.01, -44.0064, 0.22", "-107.961, -173.004, -44.1316, 1.18", "-108.431, -173.003, -44.2421, 1.55", "-109.563, -173.012, -44.5609, 0.22", "-110.104, -173.023, -44.6962, 0.22", "-110.776, -173.048, -44.841, 0.96", "-111.014, -173.059, -44.8767, 1.33", "-112.198, -173.101, -44.9984, 0.22", "-112.693, -173.121, -45.0198, 0.22", "-113.601, -173.157, -45.0145, 0.96", "-113.841, -173.166, -45.0009, 1.25", "-115.414, -173.235, -44.8644, 0.22", "-116.042, -173.269, -44.8062, 0.22", "-117.243, -173.343, -44.6825, 1.84", "-117.49, -173.366, -44.6587, 2.36", "-119.105, -173.585, -44.5358, 0.22", "-119.535, -173.655, -44.5015, 0.66", "-120.185, -173.797, -44.4655, 0.22", "-120.234, -173.809, -44.4641, 0.22", "-120.887, -173.975, -44.4992, 0.96", "-121.191, -174.053, -44.534, 0.96", "-121.247, -174.069, -44.5461, 0.96", "-122.093, -174.3, -44.7324, 0.22", "-122.149, -174.315, -44.7449, 0.22", "-123.025, -174.545, -44.944, 0.22", "-123.088, -174.562, -44.9588, 0.22", "-123.988, -174.837, -45.143, 0.22", "-124.051, -174.858, -45.1548, 0.22", "-124.453, -174.992, -45.2203, 1.11", "-124.863, -175.131, -45.2861, 1.4", "-125.03, -175.188, -45.312, 1.69", "-126.631, -175.733, -45.5564, 0.22", "-127.038, -175.866, -45.6167, 0.66", "-127.229, -175.93, -45.6443, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-9.21336, -34.5279, 0.760195, 2.58", "-8.79836, -35.4869, 0.57797, 2.58", "-8.4682, -36.578, 0.317753, 1.11", "-8.23234, -37.5084, 0.102988, 0.66", "-8.06136, -38.2324, -0.0656521, 0.59", "-7.78572, -39.3932, -0.350408, 1.25", "-7.66275, -39.8806, -0.47369, 1.62", "-7.3068, -41.407, -0.856546, 1.11", "-7.07599, -42.315, -1.0983, 1.33", "-6.83169, -43.135, -1.34173, 1.92", "-6.52134, -44.0037, -1.61616, 1.99", "-6.14686, -44.8989, -1.9288, 1.33", "-5.73123, -45.8556, -2.28565, 0.96", "-5.25731, -46.904, -2.69051, 0.96", "-5.24155, -46.9418, -2.70719, 0.96", "-5.01839, -47.5945, -3.03438, 0.74", "-4.79719, -48.5732, -3.66366, 0.52", "-4.73365, -49.2447, -4.19688, 0.52", "-4.73407, -49.2829, -4.23191, 0.52", "-4.76804, -49.8162, -4.75247, 0.88", "-4.81578, -50.4961, -5.40293, 1.18", "-4.90623, -51.6022, -6.43329, 0.59", "-4.96829, -52.2624, -6.99363, 0.59", "-4.97093, -52.2973, -7.02094, 0.59", "-5.00347, -52.8875, -7.42171, 0.59", "-5.04082, -53.8822, -7.95407, 1.55", "-5.06716, -54.6137, -8.22078, 2.14", "-5.09542, -55.0349, -8.32831, 2.36", "-5.10068, -55.0779, -8.33871, 2.36", "-5.19617, -55.5366, -8.46844, 2.36", "-5.36795, -56.0554, -8.66362, 2.06", "-5.70302, -56.7999, -9.00113, 1.77", "-6.08436, -57.5623, -9.38086, 0.74", "-6.27959, -57.9288, -9.58129, 0.52", "-6.63264, -58.5437, -9.94697, 0.44", "-7.09629, -59.2489, -10.435, 0.44", "-7.58353, -59.8981, -10.9642, 2.06" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.14494, -138.188, 33.7844, 0.88", "-6.10698, -139.439, 33.7741, 0.88", "-5.987, -140.635, 33.7263, 0.88", "-5.86538, -141.466, 33.6996, 1.18", "-5.77113, -142.006, 33.6743, 1.18", "-5.50439, -143.466, 33.6059, 0.52", "-5.38346, -144.128, 33.5749, 0.52", "-5.09792, -145.427, 33.5038, 1.99", "-4.77332, -146.674, 33.4132, 3.09", "-4.54245, -147.459, 33.3462, 3.61", "-4.26512, -148.383, 33.2658, 3.61" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-6.14494, -138.188, 33.7844, 0.74", "-5.32536, -139.168, 33.7788, 0.74", "-4.4349, -140.393, 33.7945, 0.66", "-3.99109, -141.004, 33.8023, 1.11", "-3.70577, -141.396, 33.8074, 1.25", "-2.40075, -143.192, 33.8303, 0.29", "-1.84609, -143.956, 33.8401, 0.29", "-1.17023, -144.982, 33.8027, 0.29", "4.43185, -153.092, 34.607, 0.29", "10.3182, -160.657, 37.0893, 0.29", "16.9351, -167.716, 39.2962, 0.29", "22.3695, -175.382, 42.3932, 0.29", "27.3542, -183.4, 45.3084, 0.29" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-8.91549, 149.583, -63.7874, 0.22", "-9.44227, 148.938, -65.4319, 0.22", "-9.64362, 148.732, -66.1278, 1.18", "-9.71631, 148.666, -66.3555, 1.18", "-10.7285, 147.841, -69.3422, 0.22", "-10.95, 147.67, -69.9827, 0.22", "-11.6745, 147.111, -72.0775, 0.74", "-12.6251, 146.544, -74.7646, 0.22", "-12.9308, 146.387, -75.6287, 1.03", "-13.0525, 146.327, -75.9688, 1.25", "-13.1552, 146.287, -76.2209, 1.25" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-8.91549, 149.583, -63.7874, 0.52", "-8.18, 150.914, -64.784, 0.52", "-7.76488, 151.728, -65.3815, 0.22", "-7.24585, 152.969, -66.2165, 0.88", "-7.17401, 153.178, -66.3461, 1.03", "-6.64242, 155.0, -67.4268, 0.15", "-6.52515, 155.448, -67.6853, 0.52", "-6.50421, 155.617, -67.7751, 0.52", "-6.44062, 156.829, -68.3513, 0.15", "-6.44121, 157.372, -68.5746, 0.81", "-6.46168, 158.086, -68.8543, 1.11", "-6.46779, 158.145, -68.874, 1.11", "-6.59854, 159.501, -69.3399, 0.22", "-6.64423, 160.102, -69.5608, 0.96", "-6.65814, 160.486, -69.7234, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-14.1733, 135.148, -7.65316, 0.96", "-14.0846, 136.216, -8.87637, 0.96", "-14.0004, 137.294, -10.0992, 1.03", "-13.968, 137.547, -10.3775, 1.03", "-13.8403, 138.432, -11.3252, 0.29", "-13.7398, 139.117, -11.9778, 1.25", "-13.6719, 139.587, -12.3818, 1.47", "-13.6509, 139.747, -12.4908, 1.47", "-13.5281, 141.195, -13.2929, 0.29", "-13.5154, 141.327, -13.3613, 0.29", "-13.407, 142.43, -13.8633, 0.29", "-13.3476, 142.847, -14.0567, 0.59", "-13.1966, 143.779, -14.4843, 0.44", "-12.9972, 144.96, -15.0194, 2.28", "-12.8795, 145.667, -15.3338, 2.65", "-12.8189, 146.006, -15.4902, 2.65", "-12.4061, 148.225, -16.5718, 0.37", "-12.2822, 148.926, -16.8901, 0.29", "-12.2671, 149.014, -16.9252, 0.29", "-12.1953, 149.512, -17.0846, 0.44", "-12.1706, 149.804, -17.1543, 0.44", "-12.1436, 150.666, -17.3067, 0.15", "-12.1883, 151.405, -17.3623, 0.74", "-12.1913, 151.476, -17.3696, 0.74", "-12.1985, 151.916, -17.4515, 0.74", "-12.2017, 152.284, -17.5355, 0.52", "-12.2284, 153.142, -17.7596, 0.29", "-12.2823, 154.204, -18.0561, 1.18", "-12.3161, 154.704, -18.2034, 1.69", "-12.4137, 156.485, -18.8053, 0.29", "-12.4533, 157.177, -19.0549, 0.29", "-12.5465, 158.485, -19.5492, 1.77", "-12.5793, 158.831, -19.6926, 2.73", "-12.6127, 159.102, -19.8156, 2.73", "-12.9348, 161.347, -20.8868, 0.29", "-13.0468, 162.001, -21.2102, 0.29", "-13.0925, 162.238, -21.3401, 0.59", "-13.2652, 163.027, -21.8145, 0.22", "-13.4041, 163.567, -22.1632, 0.74", "-13.4733, 163.754, -22.2963, 1.03", "-13.5058, 163.802, -22.3396, 1.03", "-13.7104, 164.095, -22.6313, 0.81", "-13.768, 164.184, -22.7131, 0.81", "-14.3268, 165.087, -23.4344, 0.22", "-14.5904, 165.537, -23.7617, 0.59", "-15.032, 166.29, -24.2859, 0.22", "-15.1031, 166.409, -24.3643, 0.22", "-15.417, 166.925, -24.6727, 0.22", "-15.7987, 167.552, -25.0056, 0.22", "-16.3408, 168.467, -25.4407, 1.62", "-16.7225, 169.13, -25.7356, 2.14", "-17.0547, 169.706, -25.9814, 2.14", "-17.9131, 171.149, -26.6148, 0.29", "-18.1889, 171.6, -26.8174, 0.44", "-18.4968, 172.115, -27.0452, 0.22", "-18.9712, 172.939, -27.3949, 0.22", "-19.3993, 173.735, -27.7176, 1.25", "-19.5723, 174.078, -27.8544, 1.62", "-19.6575, 174.276, -27.9318, 1.84", "-20.1941, 175.787, -28.5151, 0.29", "-20.5543, 177.007, -28.9669, 0.29", "-20.7314, 177.858, -29.2756, 0.74", "-20.7804, 178.203, -29.4106, 0.74", "-20.8986, 179.408, -29.9058, 0.22", "-20.9621, 180.48, -30.3549, 1.62", "-20.963, 180.537, -30.3779, 1.62", "-20.9627, 181.316, -30.6818, 1.99", "-20.9546, 183.191, -31.3737, 0.22", "-20.9549, 183.249, -31.3942, 0.22", "-20.9934, 184.116, -31.6767, 0.22", "-21.054, 185.06, -31.9563, 0.96", "-21.0841, 185.42, -32.0598, 1.25", "-21.259, 187.059, -32.4542, 0.22", "-21.2659, 187.119, -32.4656, 0.22", "-21.3704, 187.939, -32.6277, 0.74", "-21.4021, 188.16, -32.6717, 0.88", "-21.4957, 188.741, -32.7929, 0.29", "-21.6992, 189.865, -33.0095, 0.22", "-21.8458, 190.588, -33.1225, 0.22", "-22.0332, 191.608, -33.2132, 1.33", "-22.095, 191.984, -33.2214, 1.92", "-22.1051, 192.044, -33.2202, 1.92", "-22.1812, 192.494, -33.1972, 1.77", "-22.2642, 192.96, -33.1705, 1.69", "-22.5522, 194.554, -33.0673, 0.22", "-22.8328, 195.862, -32.9759, 0.22", "-23.1263, 197.087, -32.8982, 1.47", "-23.2661, 197.612, -32.8701, 1.99", "-23.3714, 197.96, -32.8586, 1.92", "-23.5406, 198.449, -32.8563, 1.47", "-24.2091, 200.145, -32.914, 0.22", "-24.5062, 200.825, -32.9485, 0.44", "-24.6421, 201.144, -32.9691, 0.44", "-25.0155, 202.045, -33.036, 0.22", "-25.4208, 203.094, -33.1207, 1.18", "-25.5996, 203.597, -33.1627, 2.14", "-25.7879, 204.182, -33.221, 1.62", "-26.3593, 206.048, -33.4071, 0.22", "-26.3792, 206.117, -33.4137, 0.22", "-26.7845, 207.619, -33.5279, 0.22", "-27.1189, 208.907, -33.6046, 0.22", "-27.3398, 209.748, -33.628, 1.03", "-27.4179, 210.036, -33.6281, 1.62", "-27.5029, 210.324, -33.6194, 1.11", "-27.8951, 211.696, -33.4884, 0.22", "-27.9111, 211.754, -33.4789, 0.22", "-28.1967, 212.851, -33.2359, 1.47", "-28.2874, 213.208, -33.1455, 2.06", "-28.307, 213.285, -33.126, 2.06", "-28.7245, 214.951, -32.7601, 0.22", "-28.9551, 215.88, -32.587, 0.52", "-29.2738, 217.117, -32.4037, 0.22", "-29.4917, 217.941, -32.3105, 1.33", "-29.6047, 218.368, -32.2814, 1.33", "-29.9932, 219.826, -32.2516, 0.22", "-30.141, 220.387, -32.2763, 0.22", "-30.3263, 221.156, -32.3284, 0.66", "-30.3925, 221.458, -32.356, 0.66", "-30.6639, 222.891, -32.4823, 0.22", "-30.6729, 222.964, -32.4871, 0.22", "-30.7414, 223.945, -32.5274, 0.22", "-30.7625, 224.877, -32.5666, 0.96", "-30.756, 225.394, -32.5866, 1.62", "-30.744, 225.932, -32.608, 1.4", "-30.7369, 227.644, -32.7148, 0.22", "-30.7438, 228.089, -32.7567, 0.22", "-30.7837, 229.152, -32.8864, 1.11", "-30.7935, 229.305, -32.9076, 1.33", "-30.8263, 229.744, -32.9834, 1.18", "-30.9983, 231.68, -33.3437, 0.22", "-31.0914, 232.581, -33.531, 1.03", "-31.145, 233.084, -33.6388, 1.18", "-31.1766, 233.446, -33.7292, 1.03", "-31.259, 234.693, -34.0737, 0.15", "-31.3045, 235.741, -34.3809, 0.15", "-31.3356, 236.724, -34.6715, 1.33", "-31.3575, 237.27, -34.831, 1.55", "-31.4333, 239.198, -35.4116, 0.15", "-31.4372, 239.269, -35.4325, 0.15", "-31.5114, 240.148, -35.6723, 0.15", "-31.6101, 241.153, -35.9397, 1.11", "-31.6479, 241.497, -36.0169, 1.55", "-31.8249, 242.983, -36.2872, 0.15", "-31.9467, 243.775, -36.3874, 0.74", "-32.1437, 244.946, -36.5254, 0.15", "-32.1573, 245.015, -36.5333, 0.15", "-32.2995, 245.676, -36.6034, 0.15", "-32.4849, 246.468, -36.6654, 0.96", "-32.5746, 246.828, -36.6825, 0.96", "-32.9564, 248.431, -36.765, 0.15", "-33.1086, 249.113, -36.7966, 0.44", "-33.1251, 249.192, -36.8024, 0.44", "-33.3129, 250.226, -36.9016, 0.15", "-33.472, 251.224, -37.0109, 1.03", "-33.5323, 251.661, -37.0599, 1.33", "-33.5992, 252.349, -37.1392, 0.59", "-33.6797, 253.506, -37.2757, 0.15", "-33.735, 254.377, -37.383, 0.88", "-33.7633, 254.88, -37.4456, 1.03", "-33.7935, 255.405, -37.5067, 0.66", "-33.8049, 256.614, -37.687, 0.15", "-33.7799, 257.891, -37.9029, 0.15", "-33.7674, 258.709, -38.0144, 0.96", "-33.7689, 259.178, -38.0727, 1.25", "-33.7749, 259.489, -38.1077, 1.25", "-33.8658, 261.425, -38.3054, 0.15", "-33.9154, 261.938, -38.347, 0.44", "-34.0695, 263.05, -38.4158, 0.15", "-34.1601, 263.567, -38.4289, 0.74", "-34.2648, 264.084, -38.4249, 0.74", "-34.4709, 265.053, -38.3728, 0.15", "-34.665, 265.854, -38.2983, 0.88", "-34.7708, 266.358, -38.2609, 0.96", "-34.9912, 267.62, -38.1941, 0.15", "-35.1108, 268.287, -38.1527, 0.29", "-35.3387, 269.508, -38.0695, 0.15", "-35.4659, 270.173, -38.0174, 0.96", "-35.5695, 270.751, -37.9689, 1.18", "-35.9299, 272.718, -37.785, 0.22", "-36.0932, 273.604, -37.695, 0.22", "-36.135, 273.825, -37.6701, 0.22", "-36.1641, 273.979, -37.6506, 0.22", "-36.3115, 275.017, -37.5429, 0.15", "-36.409, 275.894, -37.4818, 1.11", "-36.4482, 276.379, -37.4619, 1.77", "-36.4706, 276.76, -37.4531, 1.77", "-36.4753, 276.843, -37.4529, 1.77", "-36.6105, 279.081, -37.4476, 0.22", "-36.6714, 279.814, -37.4521, 0.15", "-36.6768, 279.875, -37.4522, 0.15", "-36.755, 280.577, -37.4431, 0.52", "-36.7997, 280.88, -37.439, 0.59", "-37.1169, 282.547, -37.4152, 0.15", "-37.3081, 283.417, -37.383, 1.03", "-37.4063, 283.877, -37.3678, 1.77", "-37.5005, 284.32, -37.3569, 1.55", "-37.9344, 286.223, -37.3489, 0.15", "-38.0412, 286.678, -37.3597, 0.29", "-38.2261, 287.456, -37.4024, 0.15", "-38.4345, 288.322, -37.4605, 0.15", "-38.4714, 288.472, -37.4712, 0.15", "-38.8435, 290.006, -37.5967, 0.15", "-39.1113, 291.108, -37.6932, 1.11", "-39.1285, 291.177, -37.6998, 1.11", "-39.2886, 291.792, -37.7646, 1.4", "-39.4468, 292.488, -37.8351, 0.59", "-39.6743, 293.607, -37.9381, 0.22", "-39.8272, 294.491, -38.0034, 0.22", "-39.9827, 295.436, -38.0623, 1.03", "-40.0659, 296.018, -38.0952, 1.55", "-40.3897, 298.596, -38.2046, 0.15", "-40.3989, 298.67, -38.2072, 0.15", "-40.4858, 299.292, -38.2138, 0.44", "-40.541, 299.67, -38.2084, 0.44", "-40.7823, 301.22, -38.1662, 0.15", "-40.9301, 302.113, -38.1378, 1.03", "-41.0348, 302.709, -38.1129, 1.62", "-41.3359, 304.625, -38.1268, 0.15", "-41.7051, 307.103, -38.2309, 0.15", "-41.8485, 308.111, -38.2999, 0.15", "-41.9427, 308.801, -38.3652, 1.11", "-42.0303, 309.552, -38.4554, 1.4", "-42.2585, 312.05, -38.7952, 0.15", "-42.3115, 312.783, -38.9109, 0.15", "-42.3736, 313.67, -39.0506, 0.74", "-42.3972, 314.064, -39.0922, 0.74", "-42.401, 314.135, -39.096, 0.74", "-42.5017, 316.12, -39.109, 0.15", "-42.5684, 317.303, -39.0423, 1.55", "-42.5944, 318.038, -38.9938, 1.92", "-42.6557, 320.205, -38.8387, 0.15", "-42.6748, 320.918, -38.7848, 0.88", "-42.6777, 321.071, -38.7724, 0.88", "-42.68, 321.588, -38.7274, 0.88", "-42.6696, 323.155, -38.5896, 0.15", "-42.6767, 323.752, -38.5329, 0.15", "-42.6963, 324.386, -38.4629, 0.74", "-42.7552, 325.851, -38.2899, 0.15", "-42.76, 325.921, -38.2809, 0.15", "-42.7941, 326.277, -38.2306, 0.37", "-42.9074, 327.096, -38.1075, 0.22", "-42.996, 327.621, -38.02, 0.88", "-43.0083, 327.681, -38.0097, 0.88", "-43.3307, 329.277, -37.8042, 0.15", "-43.4573, 329.957, -37.7371, 0.15", "-43.4705, 330.037, -37.7312, 0.15", "-43.638, 331.173, -37.6824, 1.25", "-43.6731, 331.459, -37.6812, 1.25", "-43.8968, 333.365, -37.7427, 0.15", "-43.9048, 333.439, -37.7478, 0.15", "-43.9727, 334.139, -37.8218, 1.18", "-43.9956, 334.355, -37.8487, 1.18", "-44.1375, 335.933, -38.1152, 0.15", "-44.2511, 337.096, -38.3824, 0.15", "-44.285, 337.383, -38.4621, 0.44", "-44.5292, 339.365, -39.0577, 0.15", "-44.7105, 340.786, -39.5237, 1.77", "-44.8164, 341.63, -39.8237, 1.55", "-44.9861, 342.973, -40.3409, 0.22", "-45.0531, 343.535, -40.5835, 0.37", "-45.1721, 344.429, -40.9956, 0.15", "-45.1817, 344.482, -41.023, 0.15", "-45.2952, 345.093, -41.3497, 0.74", "-45.3677, 345.425, -41.5146, 0.74", "-45.5347, 346.2, -41.8674, 0.15", "-45.6486, 346.671, -42.0869, 0.66", "-45.7444, 347.02, -42.2477, 1.25", "-46.1904, 348.534, -42.9638, 0.15", "-46.2131, 348.607, -42.9985, 0.15", "-46.5005, 349.525, -43.4191, 0.15", "-46.7685, 350.388, -43.7816, 0.96", "-46.8885, 350.784, -43.9473, 1.55", "-47.4941, 352.848, -44.7699, 0.15", "-47.5099, 352.904, -44.7895, 0.15", "-47.7847, 353.936, -45.129, 1.18", "-47.939, 354.564, -45.32, 0.52", "-48.1905, 355.672, -45.6138, 0.15", "-48.3326, 356.315, -45.7595, 0.52", "-48.7705, 358.184, -46.0984, 0.15", "-48.9443, 358.814, -46.2088, 0.15", "-49.2447, 359.734, -46.3704, 0.66", "-49.4572, 360.288, -46.4645, 0.96", "-49.6401, 360.69, -46.5269, 0.96", "-50.4538, 362.112, -46.7401, 0.15", "-51.084, 363.016, -46.8797, 0.52", "-51.373, 363.4, -46.9391, 0.52", "-51.8556, 364.001, -47.0318, 0.15", "-52.4437, 364.704, -47.1411, 1.11", "-53.9306, 366.417, -47.397, 0.15", "-54.4715, 367.015, -47.4735, 1.18", "-54.8723, 367.464, -47.534, 0.59" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-14.1733, 135.148, -7.65316, 0.59", "-14.2028, 136.195, -7.47167, 0.59", "-14.2469, 137.134, -7.34826, 1.18", "-14.2974, 138.044, -7.26879, 1.84", "-14.3348, 138.582, -7.23417, 2.06", "-14.3819, 139.101, -7.21037, 2.06", "-14.4564, 139.762, -7.18936, 1.84", "-14.5655, 140.485, -7.18817, 1.55", "-14.7976, 141.777, -7.21922, 0.37", "-14.9659, 142.602, -7.25289, 0.37", "-15.1791, 143.611, -7.31782, 0.96", "-15.3996, 144.616, -7.39717, 1.47", "-15.515, 145.114, -7.44035, 1.69", "-15.6909, 145.85, -7.49866, 1.55", "-15.8524, 146.519, -7.55133, 1.33", "-16.0354, 147.388, -7.59386, 0.66", "-16.2108, 148.49, -7.6207, 0.37", "-16.3575, 149.751, -7.61649, 0.29", "-16.4474, 150.83, -7.58589, 0.29", "-16.4514, 150.914, -7.58076, 0.29", "-16.4859, 152.757, -7.39586, 0.29", "-16.4889, 153.638, -7.27445, 0.81", "-16.4815, 154.288, -7.17707, 0.96", "-16.482, 154.369, -7.16526, 0.96", "-16.5037, 154.884, -7.10063, 0.96", "-16.6125, 156.18, -6.96499, 0.29", "-16.713, 156.943, -6.90739, 0.29", "-16.8808, 157.976, -6.83727, 1.47", "-17.04, 158.974, -6.80021, 2.06", "-17.0913, 159.341, -6.7885, 2.5", "-17.1675, 159.931, -6.7742, 2.43", "-17.2421, 160.566, -6.75834, 2.14", "-17.3202, 161.294, -6.73975, 1.77", "-17.424, 162.282, -6.71325, 0.66", "-17.5898, 163.779, -6.67165, 0.44", "-17.7376, 164.968, -6.63792, 0.37", "-17.8943, 166.077, -6.61089, 0.37", "-18.0841, 167.184, -6.59593, 1.33", "-18.2833, 168.172, -6.59598, 1.77", "-18.5022, 169.098, -6.6047, 2.28", "-18.652, 169.671, -6.63049, 2.65", "-18.7826, 170.163, -6.6588, 2.8", "-18.9663, 170.847, -6.70247, 2.5", "-19.1144, 171.422, -6.73123, 1.99", "-19.2327, 171.909, -6.75117, 1.77", "-19.4087, 172.703, -6.76813, 0.81", "-19.6174, 173.785, -6.75113, 0.44", "-19.8042, 174.885, -6.70683, 0.37", "-19.9425, 175.855, -6.63321, 0.74", "-20.0081, 176.346, -6.58589, 0.74", "-20.109, 177.066, -6.5112, 0.74", "-20.3265, 178.512, -6.37607, 0.52", "-20.3372, 178.581, -6.37071, 0.44", "-20.5161, 179.673, -6.30205, 0.44", "-20.6753, 180.587, -6.25826, 0.44", "-20.9676, 182.182, -6.20062, 0.44", "-21.3519, 184.115, -6.16468, 1.55", "-21.547, 185.043, -6.15982, 2.43", "-21.6892, 185.718, -6.15409, 2.65", "-21.8069, 186.301, -6.15554, 2.87", "-21.9736, 187.151, -6.16209, 2.36", "-22.1384, 188.062, -6.18585, 1.47", "-22.2495, 188.672, -6.201, 0.96", "-22.4757, 189.875, -6.24145, 0.37", "-22.6837, 190.947, -6.28036, 0.37", "-22.9456, 192.27, -6.32571, 0.29", "-23.1365, 193.295, -6.35699, 1.69", "-23.2992, 194.316, -6.40765, 2.28", "-23.3678, 194.772, -6.44436, 2.73", "-23.4332, 195.202, -6.49221, 2.8", "-23.5525, 195.981, -6.59026, 1.99", "-23.7077, 197.079, -6.75322, 0.88", "-23.9109, 198.365, -6.98421, 0.29", "-24.0603, 199.232, -7.18045, 0.37", "-24.1784, 199.845, -7.32806, 0.44", "-24.2564, 200.173, -7.4079, 0.59", "-24.3026, 200.333, -7.44197, 0.59", "-24.4739, 200.849, -7.51957, 0.44", "-24.7448, 201.673, -7.57407, 0.37", "-24.7681, 201.752, -7.57555, 0.37", "-25.0822, 202.996, -7.55691, 0.52", "-25.326, 204.087, -7.5103, 0.81", "-25.4222, 204.607, -7.47675, 0.81", "-25.5025, 205.144, -7.43223, 0.66", "-25.5099, 205.213, -7.42714, 0.66", "-25.5678, 205.859, -7.40613, 0.44", "-25.6474, 207.072, -7.40236, 0.37", "-25.7101, 208.211, -7.41059, 0.37", "-25.7114, 208.281, -7.41323, 0.37", "-25.6864, 209.419, -7.49604, 1.62", "-25.6397, 210.392, -7.59539, 2.65", "-25.6016, 210.956, -7.66566, 2.65", "-25.4956, 212.138, -7.83553, 1.92", "-25.3586, 213.573, -8.05154, 0.74", "-25.2591, 214.864, -8.24459, 0.37", "-25.2286, 215.998, -8.39215, 0.37", "-25.231, 216.067, -8.39994, 0.37", "-25.3143, 216.779, -8.47581, 0.37", "-25.352, 216.953, -8.49102, 0.37", "-25.6818, 217.932, -8.53215, 0.37", "-26.1577, 219.098, -8.54901, 1.03", "-26.5569, 220.038, -8.55232, 1.77", "-26.7832, 220.589, -8.5511, 2.06", "-27.0061, 221.141, -8.54563, 1.92", "-27.3142, 221.956, -8.53475, 1.33", "-27.5112, 222.533, -8.52631, 0.59", "-27.8009, 223.513, -8.52413, 0.37", "-27.9557, 224.114, -8.50434, 0.59", "-28.0411, 224.531, -8.47387, 0.66", "-28.083, 224.787, -8.44831, 0.66", "-28.1708, 225.383, -8.38628, 0.37", "-28.2602, 225.981, -8.32816, 0.37", "-28.4508, 227.098, -8.2409, 0.37", "-28.6539, 228.186, -8.17198, 0.37", "-28.8539, 229.197, -8.11804, 0.59", "-29.1608, 230.703, -8.04602, 0.52", "-29.3517, 231.62, -8.006, 1.33", "-29.528, 232.489, -7.98073, 2.14", "-29.6914, 233.348, -7.98355, 2.36", "-29.8087, 234.11, -7.99599, 2.58", "-29.8718, 234.752, -7.99685, 2.36", "-29.9277, 235.718, -7.98096, 1.62", "-29.961, 236.669, -7.95871, 0.81", "-29.99, 237.868, -7.92051, 0.52", "-30.0307, 239.147, -7.86799, 0.52", "-30.0685, 240.06, -7.82402, 0.44", "-30.171, 241.763, -7.73491, 0.44", "-30.3147, 243.446, -7.63718, 1.11", "-30.4323, 244.381, -7.57582, 1.84", "-30.5871, 245.294, -7.52066, 2.36", "-30.6581, 245.618, -7.51102, 2.5", "-30.8579, 246.365, -7.51553, 2.21", "-31.0798, 247.091, -7.53614, 1.55", "-31.3004, 247.748, -7.56443, 0.96", "-31.5131, 248.373, -7.59659, 0.66", "-31.8245, 249.356, -7.63403, 0.37", "-32.0783, 250.238, -7.64095, 0.66", "-32.2591, 250.914, -7.62854, 0.88", "-32.5203, 252.003, -7.57627, 0.37", "-32.6639, 252.677, -7.52562, 0.37", "-32.8744, 253.771, -7.41539, 0.37", "-33.0929, 255.121, -7.24224, 1.11", "-33.1018, 255.19, -7.23173, 1.11", "-33.1801, 256.132, -7.07251, 1.99", "-33.2108, 256.833, -6.94692, 2.21", "-33.2197, 257.338, -6.85662, 2.36", "-33.2318, 258.513, -6.65567, 1.33", "-33.2364, 259.328, -6.52133, 0.52", "-33.2598, 260.548, -6.33963, 0.29", "-33.2792, 261.056, -6.27174, 0.59", "-33.3033, 261.482, -6.21957, 0.59", "-33.3653, 262.329, -6.12093, 0.44", "-33.4361, 263.103, -6.03416, 0.37", "-33.5246, 263.955, -5.93397, 0.37", "-33.6246, 264.911, -5.82245, 1.18", "-33.6809, 265.615, -5.73929, 1.77", "-33.7242, 266.38, -5.64471, 2.06", "-33.7511, 267.067, -5.55799, 1.92", "-33.7698, 267.74, -5.47424, 1.55", "-33.8166, 268.788, -5.36392, 0.37", "-33.8893, 269.933, -5.26645, 0.37", "-33.8967, 270.017, -5.26319, 0.37", "-33.9945, 270.874, -5.26187, 0.37", "-34.0059, 270.958, -5.2636, 0.37", "-34.2447, 272.566, -5.30377, 0.37", "-34.2591, 272.65, -5.30622, 0.37", "-34.5158, 274.145, -5.37204, 1.18", "-34.673, 275.07, -5.41505, 1.62", "-34.7535, 275.576, -5.43314, 1.84", "-34.8765, 276.442, -5.44149, 1.55", "-34.9655, 277.292, -5.43023, 1.11", "-35.0426, 278.133, -5.40717, 0.52", "-35.144, 279.409, -5.34913, 0.44", "-35.2093, 280.4, -5.30006, 0.37", "-35.2842, 281.656, -5.2306, 0.37", "-35.3599, 283.334, -5.12874, 1.33", "-35.3805, 283.843, -5.09455, 1.84", "-35.3888, 284.023, -5.08094, 1.84", "-35.4114, 284.534, -5.04114, 1.84", "-35.4898, 285.671, -4.96124, 1.25", "-35.5421, 286.352, -4.92235, 0.74", "-35.6467, 287.461, -4.86726, 0.37", "-35.7208, 288.266, -4.83063, 0.44", "-35.7959, 289.153, -4.80043, 0.44", "-35.9015, 290.428, -4.76989, 0.44", "-35.9904, 291.487, -4.7554, 1.03", "-36.0791, 292.434, -4.74965, 1.18", "-36.1437, 293.244, -4.75601, 0.74", "-36.1921, 293.845, -4.76862, 0.74", "-36.2734, 294.779, -4.79522, 0.59", "-36.2817, 294.863, -4.79752, 0.59", "-36.3655, 295.546, -4.80679, 0.59", "-36.5157, 296.908, -4.83371, 1.47", "-36.6045, 297.758, -4.84346, 2.21", "-36.6739, 298.443, -4.84303, 2.5", "-36.7234, 299.036, -4.83219, 2.65", "-36.8017, 300.163, -4.78034, 1.55", "-36.8619, 301.309, -4.68936, 0.74", "-36.9034, 302.643, -4.55282, 0.52", "-36.9035, 302.737, -4.54288, 0.52", "-36.8764, 303.827, -4.4178, 0.52", "-36.8015, 305.28, -4.24198, 1.33", "-36.731, 306.303, -4.11158, 1.4", "-36.6459, 307.384, -3.96736, 1.18", "-36.5779, 308.221, -3.8764, 0.52", "-36.5661, 308.388, -3.86416, 0.52", "-36.5077, 309.37, -3.82387, 0.52", "-36.4724, 310.181, -3.80826, 0.52", "-36.4436, 311.653, -3.79111, 0.74", "-36.46, 312.94, -3.76939, 0.96", "-36.5008, 314.284, -3.74931, 1.99", "-36.5202, 314.727, -3.74205, 2.58", "-36.5513, 315.346, -3.7211, 2.36", "-36.5857, 316.045, -3.68355, 2.14", "-36.6315, 317.067, -3.59506, 1.03", "-36.6602, 318.16, -3.46404, 0.52", "-36.6759, 319.413, -3.29751, 0.52", "-36.7009, 320.729, -3.11458, 0.52", "-36.7204, 321.434, -3.01404, 0.88", "-36.7443, 322.109, -2.91425, 0.52", "-36.798, 323.208, -2.748, 0.52", "-36.8628, 324.086, -2.61525, 0.52", "-37.0027, 325.5, -2.42474, 1.4", "-37.0957, 326.282, -2.33091, 1.77", "-37.1664, 326.802, -2.27179, 1.92", "-37.2396, 327.303, -2.21541, 1.62", "-37.3722, 328.161, -2.11806, 1.11", "-37.526, 329.181, -2.00213, 0.74", "-37.7353, 330.669, -1.84565, 0.59", "-37.9931, 332.45, -1.66363, 0.59", "-38.1988, 333.846, -1.5236, 0.44", "-38.2853, 334.441, -1.46257, 0.66", "-38.2973, 334.524, -1.45381, 0.66", "-38.4902, 335.878, -1.30839, 1.33", "-38.6483, 336.977, -1.19016, 2.21", "-38.7772, 337.823, -1.08556, 2.73", "-38.9122, 338.617, -0.991925, 2.87", "-38.9751, 338.986, -0.95269, 3.09", "-39.1108, 339.764, -0.886784, 2.36", "-39.2795, 340.692, -0.828659, 1.25", "-39.4054, 341.357, -0.804531, 0.66", "-39.6657, 342.718, -0.807485, 0.37", "-39.8727, 343.758, -0.845742, 0.66", "-40.0228, 344.526, -0.886926, 0.52", "-40.1002, 344.951, -0.913007, 0.66", "-40.2386, 345.796, -0.963305, 0.74", "-40.3643, 346.768, -1.02433, 0.81", "-40.4578, 347.798, -1.08512, 1.25", "-40.4946, 348.453, -1.11453, 1.69", "-40.5052, 348.94, -1.12934, 1.69", "-40.5027, 349.896, -1.14431, 1.4", "-40.4796, 350.945, -1.14854, 1.11", "-40.4553, 351.795, -1.12992, 0.74", "-40.4256, 353.058, -1.09185, 0.59", "-40.4248, 353.152, -1.08917, 0.59", "-40.4411, 354.108, -1.05945, 0.59", "-40.4447, 354.19, -1.05543, 0.59", "-40.5896, 355.805, -0.940432, 0.59", "-40.725, 356.818, -0.865722, 1.11", "-40.7381, 356.898, -0.862078, 1.11", "-40.8746, 357.645, -0.839816, 1.77", "-41.0117, 358.344, -0.832213, 2.06", "-41.1289, 358.927, -0.836351, 2.06", "-41.291, 359.68, -0.857129, 1.77", "-41.4012, 360.196, -0.869908, 1.4", "-41.5238, 360.791, -0.880741, 0.81", "-41.7983, 362.137, -0.909133, 0.59", "-42.068, 363.498, -0.932858, 0.59", "-42.218, 364.339, -0.945328, 0.96", "-42.3213, 364.926, -0.957348, 0.96", "-42.3537, 365.107, -0.9611, 0.96", "-42.4335, 365.566, -0.972258, 0.81", "-42.5694, 366.368, -0.988332, 0.81", "-42.7798, 367.668, -1.00412, 0.37", "-42.9771, 368.943, -1.01199, 0.37", "-43.1685, 370.13, -0.992418, 0.37", "-43.3079, 370.956, -0.962628, 1.25", "-43.4564, 371.803, -0.900075, 1.77", "-43.5882, 372.499, -0.824633, 2.28", "-43.7156, 373.158, -0.720915, 2.58", "-43.8697, 373.991, -0.563513, 2.36", "-44.0103, 374.723, -0.417231, 1.92", "-44.1847, 375.626, -0.235344, 0.96", "-44.3422, 376.47, -0.0720366, 0.37", "-44.562, 377.673, 0.136758, 0.37", "-44.7061, 378.527, 0.254637, 0.74", "-44.784, 379.032, 0.303864, 0.74", "-44.8948, 379.769, 0.355895, 0.74", "-44.9929, 380.537, 0.373288, 0.37", "-45.0742, 381.388, 0.354179, 0.29", "-45.1162, 382.048, 0.311266, 0.29", "-45.1191, 382.13, 0.303575, 0.29", "-45.1261, 383.765, 0.110619, 0.29", "-45.0978, 384.618, -1.09941E-4, 0.74", "-45.0258, 385.921, -0.161453, 1.84", "-44.9975, 386.403, -0.213135, 2.28", "-44.9951, 386.473, -0.218952, 2.28", "-44.9835, 387.242, -0.270738, 2.06", "-44.9947, 388.295, -0.319506, 1.25", "-45.0708, 389.51, -0.335418, 0.15", "-45.1399, 390.198, -0.323239, 0.15", "-45.2733, 391.233, -0.28917, 0.74", "-45.3373, 391.648, -0.270556, 1.03", "-45.4302, 392.164, -0.242573, 1.03", "-45.5438, 392.737, -0.212198, 0.74", "-45.6757, 393.55, -0.194568, 0.22", "-45.8105, 394.564, -0.188893, 0.22", "-46.0036, 396.279, -0.18838, 0.88", "-46.0757, 396.965, -0.18745, 1.47", "-46.1318, 397.557, -0.188546, 1.69", "-46.2425, 398.839, -0.189414, 1.03", "-46.3519, 400.145, -0.19099, 0.37", "-46.4816, 401.889, -0.172401, 0.37", "-46.5743, 403.437, -0.143333, 0.29", "-46.6729, 405.023, -0.0979852, 1.4", "-46.7182, 405.642, -0.0741062, 1.84", "-46.7813, 406.327, -0.0375685, 1.69", "-46.8627, 407.267, 0.00697126, 0.81", "-46.9974, 408.846, 0.0785337, 0.29", "-47.1207, 410.285, 0.148697, 0.29", "-47.1917, 411.041, 0.194967, 0.96", "-47.262, 411.737, 0.241159, 1.33", "-47.3318, 412.387, 0.293581, 1.33", "-47.3925, 412.962, 0.343651, 1.03", "-47.3997, 413.035, 0.351451, 1.03", "-47.5007, 414.356, 0.504, 0.29", "-47.5791, 415.557, 0.647284, 0.29", "-47.6605, 417.069, 0.801309, 0.88", "-47.7219, 418.172, 0.894247, 1.69", "-47.7606, 418.802, 0.939615, 2.36", "-47.7879, 419.15, 0.958907, 2.58", "-47.8683, 420.037, 0.993414, 2.06", "-48.0505, 421.816, 1.05913, 0.37", "-48.1885, 422.994, 1.10035, 0.37", "-48.3623, 424.277, 1.15046, 0.37", "-48.505, 425.288, 1.19493, 0.37", "-48.5169, 425.372, 1.19967, 0.37", "-48.7877, 427.319, 1.35342, 0.37", "-48.7969, 427.403, 1.36121, 0.37", "-48.8747, 428.509, 1.46834, 0.37", "-48.9122, 429.383, 1.55279, 0.96", "-48.9398, 430.381, 1.64713, 1.25", "-48.9602, 431.397, 1.74037, 0.88", "-48.9742, 433.047, 1.88853, 0.29", "-48.9744, 433.172, 1.9007, 0.29", "-48.95, 434.207, 1.99219, 0.88", "-48.9237, 435.159, 2.07214, 1.62", "-48.9108, 435.729, 2.12103, 1.99", "-48.9013, 436.306, 2.17929, 1.99", "-48.8943, 436.831, 2.2504, 1.69", "-48.8475, 437.97, 2.40156, 0.59", "-48.7588, 439.4, 2.59955, 0.29", "-48.6959, 440.271, 2.70511, 0.81", "-48.6413, 441.033, 2.78988, 0.81", "-48.5714, 442.099, 2.90087, 0.29", "-48.5125, 443.237, 3.01343, 0.29", "-48.4155, 444.968, 3.14167, 0.29", "-48.3058, 446.687, 3.20879, 1.25", "-48.2655, 447.34, 3.2235, 1.69", "-48.2355, 447.861, 3.23112, 1.92", "-48.19, 448.786, 3.24285, 1.47", "-48.1162, 450.405, 3.29375, 0.29", "-48.055, 451.371, 3.33883, 0.29", "-47.958, 452.657, 3.43911, 0.88", "-47.9058, 453.274, 3.50118, 1.18", "-47.8487, 453.886, 3.58008, 0.96", "-47.772, 454.741, 3.72122, 0.44", "-47.7134, 455.837, 3.94788, 0.29", "-47.7052, 455.955, 3.96815, 0.29", "-47.654, 456.954, 4.08453, 0.29", "-47.6521, 457.039, 4.0912, 0.29", "-47.6451, 457.647, 4.12133, 0.81", "-47.6468, 458.159, 4.13963, 0.81", "-47.646, 459.079, 4.18263, 0.66", "-47.6318, 460.371, 4.26161, 0.29", "-47.6069, 461.429, 4.35456, 0.29", "-47.5686, 462.47, 4.45571, 1.11", "-47.5365, 463.391, 4.55189, 1.69", "-47.5234, 464.036, 4.61402, 1.92", "-47.5248, 464.602, 4.66648, 1.92", "-47.5516, 466.029, 4.76775, 0.74", "-47.5988, 467.155, 4.82598, 0.37", "-47.6862, 468.425, 4.87347, 0.37", "-47.8101, 469.909, 4.90158, 0.29", "-47.8899, 470.78, 4.90404, 0.29", "-47.9563, 471.55, 4.90068, 0.88", "-47.9965, 472.05, 4.90019, 0.88", "-48.0394, 472.682, 4.91983, 0.52", "-48.0699, 473.416, 4.95923, 0.29", "-48.0935, 474.19, 5.01508, 0.29", "-48.1361, 475.204, 5.08139, 0.29", "-48.1956, 476.159, 5.13806, 1.55", "-48.2782, 477.285, 5.21534, 2.58", "-48.3245, 477.82, 5.26091, 2.65", "-48.4012, 478.667, 5.35611, 2.21", "-48.4869, 479.771, 5.49788, 1.11", "-48.5502, 480.78, 5.63668, 0.52", "-48.6088, 482.005, 5.80992, 0.52", "-48.6423, 483.255, 6.00154, 0.74", "-48.6515, 484.438, 6.19701, 0.88", "-48.6268, 485.583, 6.41101, 1.33", "-48.6219, 485.651, 6.42506, 1.33", "-48.5464, 486.312, 6.57132, 1.62", "-48.4792, 486.775, 6.67973, 1.62", "-48.4633, 486.864, 6.70353, 1.62", "-48.4245, 487.086, 6.76719, 1.62", "-48.2016, 488.394, 7.17277, 0.52", "-48.0399, 489.397, 7.48134, 0.29", "-47.8937, 490.301, 7.75875, 0.29", "-47.7965, 491.211, 8.05517, 0.96", "-47.7766, 491.808, 8.2616, 1.4", "-47.7811, 491.886, 8.28825, 1.4", "-47.8568, 492.38, 8.44968, 1.4", "-47.8779, 492.474, 8.47969, 1.4", "-48.1998, 493.668, 8.84612, 1.03", "-48.5129, 494.756, 9.16512, 0.44", "-48.8959, 496.123, 9.55212, 0.29", "-49.18, 497.081, 9.83447, 0.29", "-49.53, 498.267, 10.1803, 1.33", "-49.7126, 498.895, 10.3569, 1.84", "-49.8919, 499.54, 10.5242, 1.84", "-50.0948, 500.265, 10.7078, 1.25", "-50.4785, 501.633, 11.0323, 0.37", "-50.889, 503.153, 11.3346, 0.29", "-50.91, 503.23, 11.3473, 0.29", "-51.159, 504.132, 11.4771, 0.44", "-51.4799, 505.289, 11.6194, 0.52", "-51.7961, 506.427, 11.7272, 0.44", "-52.1728, 507.919, 11.8144, 0.44", "-52.5762, 509.537, 11.8914, 1.11", "-52.7985, 510.46, 11.9315, 1.69", "-52.9378, 511.063, 11.9547, 1.84", "-53.0764, 511.713, 11.9798, 1.84", "-53.3247, 512.976, 12.0252, 0.66", "-53.5652, 514.321, 12.0663, 0.37", "-53.5917, 514.486, 12.0702, 0.37", "-53.8501, 516.103, 12.1195, 0.37", "-54.0455, 517.392, 12.1828, 0.96", "-54.0673, 517.56, 12.1952, 0.96", "-54.1595, 518.417, 12.2833, 1.55", "-54.2052, 519.191, 12.3849, 1.84", "-54.2073, 519.272, 12.3971, 1.84", "-54.2084, 519.984, 12.5125, 1.69", "-54.2034, 521.009, 12.6799, 0.74", "-54.2305, 522.095, 12.8784, 0.29", "-54.3004, 523.301, 13.1107, 0.29", "-54.3088, 523.384, 13.1262, 0.29", "-54.4718, 524.553, 13.3392, 0.29", "-54.487, 524.632, 13.3531, 0.29", "-54.762, 525.794, 13.5619, 0.81", "-54.9553, 526.518, 13.6872, 1.47", "-55.1142, 527.096, 13.7774, 1.77", "-55.1469, 527.224, 13.793, 1.77", "-55.2942, 527.882, 13.8593, 1.55", "-55.3274, 528.045, 13.8721, 1.55", "-55.4685, 528.824, 13.9123, 0.96", "-55.6079, 529.685, 13.9717, 0.59", "-55.8664, 531.275, 14.1227, 0.29", "-56.0379, 532.324, 14.2404, 0.29", "-56.0514, 532.407, 14.2509, 0.29", "-56.2565, 533.674, 14.4285, 0.59", "-56.3896, 534.508, 14.5597, 0.81", "-56.5461, 535.579, 14.7508, 1.25", "-56.6146, 536.104, 14.8546, 1.62", "-56.6685, 536.519, 14.9307, 1.69", "-56.6894, 536.699, 14.9622, 1.69", "-56.7557, 537.308, 15.0597, 1.25", "-56.8737, 538.295, 15.209, 0.66", "-56.9953, 539.315, 15.3585, 0.66", "-57.1442, 540.504, 15.5381, 0.66", "-57.3323, 541.942, 15.7571, 0.37", "-57.4777, 542.958, 15.9059, 0.37", "-57.6554, 544.179, 16.0873, 1.62", "-57.7505, 544.854, 16.1924, 2.06", "-57.8098, 545.311, 16.2674, 2.06", "-57.9356, 546.327, 16.4354, 1.47", "-58.052, 547.329, 16.6003, 0.81", "-58.1571, 548.46, 16.7891, 0.37", "-58.2474, 549.818, 17.013, 0.88", "-58.2514, 549.899, 17.0275, 0.88", "-58.2716, 550.481, 17.136, 0.88", "-58.273, 550.553, 17.1501, 0.88", "-58.2881, 551.268, 17.2787, 1.11", "-58.2928, 551.472, 17.3108, 1.11", "-58.3247, 551.881, 17.3868, 1.11", "-58.333, 551.963, 17.404, 1.11", "-58.4111, 552.63, 17.5554, 0.81", "-58.5445, 553.635, 17.7932, 0.66", "-58.6769, 554.571, 18.0237, 0.44", "-58.8586, 555.854, 18.3485, 0.29", "-58.8756, 555.979, 18.3812, 0.29", "-58.9542, 556.643, 18.5661, 0.29", "-58.9658, 556.764, 18.6011, 0.29", "-59.0519, 557.732, 18.8461, 0.81", "-59.0611, 557.837, 18.8676, 0.81", "-59.1257, 558.478, 18.9945, 0.81", "-59.1567, 558.723, 19.045, 0.81", "-59.3303, 560.002, 19.321, 0.59", "-59.561, 561.572, 19.6604, 0.88", "-59.5866, 561.734, 19.6937, 0.88", "-59.8608, 563.132, 20.0117, 1.62", "-59.9961, 563.732, 20.1539, 1.77", "-60.2162, 564.65, 20.3793, 1.4", "-60.4436, 565.551, 20.6083, 0.88", "-60.8453, 567.098, 20.9973, 0.52", "-61.1912, 568.425, 21.2962, 0.74", "-61.4107, 569.25, 21.4443, 1.33", "-61.6663, 570.116, 21.5765, 1.84", "-61.8093, 570.59, 21.6389, 1.99", "-62.0018, 571.258, 21.7179, 1.99", "-62.2344, 572.14, 21.81, 1.18", "-62.5127, 573.319, 21.9114, 0.52", "-62.9142, 575.082, 22.0806, 0.44", "-63.2069, 576.407, 22.2142, 1.03", "-63.4147, 577.431, 22.3287, 1.25", "-63.5303, 578.14, 22.4255, 1.55", "-63.541, 578.223, 22.4384, 1.55", "-63.6209, 579.019, 22.5693, 1.55", "-63.7097, 580.036, 22.7258, 1.25", "-63.8231, 581.151, 22.8829, 0.74", "-64.0486, 583.224, 23.1618, 0.29", "-64.0579, 583.304, 23.1721, 0.29", "-64.2847, 585.177, 23.4027, 0.29", "-64.4886, 586.704, 23.5737, 0.29", "-64.704, 588.143, 23.7135, 1.47", "-64.8524, 589.032, 23.7858, 2.06", "-64.9634, 589.615, 23.8208, 2.36", "-65.1635, 590.643, 23.8787, 2.06", "-65.5087, 592.388, 23.9716, 0.81", "-65.862, 593.982, 24.0707, 0.81", "-66.1074, 595.001, 24.1437, 0.52", "-66.4208, 596.229, 24.2457, 0.81", "-66.7307, 597.408, 24.3632, 1.03", "-66.7519, 597.487, 24.3731, 1.03", "-67.0258, 598.551, 24.5475, 1.03", "-67.0755, 598.747, 24.591, 1.03", "-67.3361, 599.833, 24.8638, 0.88", "-67.3626, 599.958, 24.8983, 0.88", "-67.5781, 601.112, 25.2165, 0.74", "-67.7737, 602.403, 25.5673, 0.37", "-67.9673, 604.068, 26.0011, 1.18", "-68.0942, 605.187, 26.2799, 1.92", "-68.1706, 605.858, 26.436, 1.92", "-68.2586, 606.635, 26.6041, 1.62", "-68.3963, 607.862, 26.8423, 0.96", "-68.5271, 609.062, 27.048, 0.74", "-68.6672, 610.51, 27.2473, 0.74", "-68.8087, 611.79, 27.3982, 0.74", "-68.8281, 611.954, 27.4157, 0.74", "-68.9871, 613.211, 27.5344, 0.74", "-69.0118, 613.407, 27.5501, 0.74", "-69.1745, 614.803, 27.6563, 0.74", "-69.3411, 616.345, 27.7722, 0.96", "-69.3763, 616.695, 27.7992, 0.96", "-69.5218, 618.144, 27.9162, 0.96", "-69.618, 619.039, 27.9893, 1.47", "-69.6487, 619.298, 28.0105, 1.47", "-69.81, 620.518, 28.1138, 1.69", "-69.8265, 620.633, 28.1233, 1.69", "-69.9288, 621.409, 28.1778, 1.69", "-70.0781, 622.774, 28.2873, 1.11", "-70.1289, 623.389, 28.335, 1.03", "-70.1678, 623.978, 28.3782, 1.03", "-70.2442, 625.339, 28.4727, 0.59", "-70.3416, 627.276, 28.6071, 0.44", "-70.4279, 629.355, 28.7509, 0.44", "-70.4653, 630.622, 28.8518, 1.11", "-70.4751, 631.808, 28.9558, 1.69", "-70.4624, 632.666, 29.0504, 1.99", "-70.4344, 633.561, 29.1658, 1.62", "-70.4315, 633.645, 29.1786, 1.62", "-70.3827, 634.963, 29.3959, 0.88", "-70.3178, 636.723, 29.6888, 0.74", "-70.2197, 638.927, 30.0465, 0.74", "-70.216, 639.009, 30.0596, 0.74", "-70.1512, 640.38, 30.2728, 0.74", "-70.1075, 642.105, 30.5798, 0.88", "-70.1164, 643.904, 30.9284, 0.66", "-70.12, 643.998, 30.9485, 0.66", "-70.2119, 645.559, 31.2931, 0.66", "-70.3011, 646.785, 31.5773, 0.66", "-70.4771, 648.466, 31.9723, 1.25", "-70.5888, 649.214, 32.1444, 1.99", "-70.6871, 649.707, 32.2489, 1.99", "-70.8749, 650.549, 32.393, 1.55", "-70.9189, 650.718, 32.4134, 1.55", "-71.2091, 651.784, 32.4862, 1.33", "-71.4795, 652.953, 32.5003, 1.18", "-71.6831, 653.97, 32.5257, 0.96", "-71.8429, 654.827, 32.5942, 0.96", "-71.8706, 655.001, 32.618, 0.96", "-72.0067, 655.995, 32.7943, 0.66", "-72.1311, 657.172, 33.0586, 0.52", "-72.2232, 658.23, 33.3292, 0.52", "-72.3397, 659.761, 33.7548, 0.81", "-72.4182, 661.04, 34.1355, 1.33", "-72.4275, 661.21, 34.1897, 1.33", "-72.455, 662.181, 34.4982, 1.77", "-72.4609, 662.785, 34.6833, 2.28", "-72.4574, 662.866, 34.7016, 2.28", "-72.3913, 663.664, 34.7893, 2.28", "-72.3472, 664.187, 34.8233, 2.28", "-72.2631, 665.278, 34.8715, 1.92", "-72.257, 665.36, 34.8736, 1.92", "-72.1411, 667.118, 34.9055, 0.81", "-72.1175, 668.867, 35.0072, 0.81", "-72.1227, 669.048, 35.0226, 0.81", "-72.1998, 670.091, 35.1457, 0.66", "-72.2121, 670.185, 35.1612, 0.66", "-72.4222, 671.395, 35.3883, 0.66", "-72.7971, 672.967, 35.7522, 0.66", "-72.8411, 673.121, 35.7899, 0.66", "-73.1463, 674.007, 36.013, 1.18", "-73.2015, 674.148, 36.0465, 1.18", "-73.505, 674.944, 36.2092, 1.4", "-73.5904, 675.178, 36.2475, 1.4", "-73.7868, 675.762, 36.3213, 1.4", "-74.1621, 676.917, 36.471, 1.11", "-74.7241, 678.771, 36.7166, 0.88", "-75.1223, 680.188, 36.8904, 1.03", "-75.4808, 681.593, 37.0489, 1.33", "-75.518, 681.753, 37.0644, 1.33", "-75.6376, 682.278, 37.1114, 1.33", "-75.973, 683.825, 37.2197, 0.88", "-76.1632, 684.656, 37.2848, 0.88", "-76.48, 686.001, 37.4092, 0.74", "-76.7063, 686.988, 37.5219, 0.74", "-76.9439, 688.069, 37.6623, 1.33", "-76.9632, 688.16, 37.6754, 1.33", "-77.1254, 689.11, 37.7959, 1.92", "-77.2259, 689.857, 37.8679, 2.21", "-77.2837, 690.426, 37.8801, 2.21", "-77.3631, 691.313, 37.8364, 1.77", "-77.4521, 692.425, 37.7331, 1.18", "-77.5574, 693.596, 37.6006, 0.81", "-77.7278, 695.365, 37.3643, 0.74", "-77.925, 697.298, 37.1096, 0.66", "-78.0979, 698.946, 36.9266, 0.66", "-78.1067, 699.03, 36.9191, 0.66", "-78.2258, 700.238, 36.8711, 0.66", "-78.2372, 700.373, 36.8775, 0.66", "-78.3285, 702.13, 37.0747, 0.66", "-78.377, 703.696, 37.3549, 0.66", "-78.3784, 703.813, 37.3802, 0.66", "-78.3915, 705.274, 37.7042, 0.66", "-78.3915, 707.462, 38.2155, 0.66", "-78.3906, 707.585, 38.245, 0.66", "-78.3814, 708.22, 38.4019, 1.25", "-78.3799, 708.311, 38.4246, 1.25", "-78.3678, 709.692, 38.7581, 1.25", "-78.3686, 709.815, 38.7861, 1.25", "-78.3902, 711.008, 39.0746, 1.25", "-78.4233, 712.026, 39.332, 0.96", "-78.4808, 713.036, 39.6039, 0.96", "-78.4864, 713.107, 39.6232, 0.96", "-78.5891, 714.128, 39.9009, 1.11", "-78.7931, 715.875, 40.371, 0.52", "-78.9373, 717.026, 40.6777, 1.18", "-79.0775, 718.255, 41.0093, 1.92", "-79.1516, 719.081, 41.2196, 2.43", "-79.2013, 719.83, 41.4008, 2.43", "-79.2429, 720.736, 41.6078, 2.43", "-79.2804, 722.262, 41.9254, 1.25", "-79.2686, 723.732, 42.2131, 0.59", "-79.1945, 725.317, 42.457, 0.74", "-79.1194, 726.323, 42.5829, 1.03", "-79.0976, 726.569, 42.6021, 1.03", "-79.035, 727.234, 42.6168, 1.03", "-78.9518, 728.169, 42.5885, 0.59", "-78.8576, 729.572, 42.4854, 0.59", "-78.8526, 729.711, 42.4745, 0.59", "-78.7937, 731.009, 42.411, 0.59", "-78.7748, 731.37, 42.4238, 1.03", "-78.7262, 732.284, 42.521, 0.66", "-78.6985, 732.871, 42.6242, 0.66", "-78.6808, 733.9, 42.8933, 0.66", "-78.6895, 735.302, 43.2996, 0.59", "-78.7319, 736.952, 43.8063, 1.03", "-78.7569, 737.568, 43.9986, 1.84", "-78.7916, 738.16, 44.1812, 1.84", "-78.9132, 739.719, 44.6391, 1.18", "-79.0384, 740.963, 44.9816, 0.66", "-79.2025, 742.144, 45.2582, 0.66", "-79.2349, 742.351, 45.2957, 0.66", "-79.5054, 743.999, 45.5415, 0.66", "-79.7213, 745.292, 45.6919, 1.18", "-79.8687, 746.18, 45.7622, 1.18", "-80.117, 747.602, 45.8621, 0.66", "-80.3315, 748.769, 45.932, 0.66", "-80.5476, 749.873, 45.9831, 1.25", "-80.7429, 750.777, 46.0107, 1.99", "-80.8976, 751.449, 46.0265, 2.21", "-81.2482, 752.913, 46.0488, 2.06" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 31
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-7.58353, -59.8981, -10.9642, 0.44", "-8.21768, -60.4169, -10.9251, 0.44", "-8.27436, -60.4646, -10.9206, 0.44", "-9.10945, -61.1988, -10.8414, 1.03", "-9.91327, -61.8891, -10.7679, 1.18", "-10.4794, -62.3662, -10.7197, 0.59", "-10.5353, -62.4131, -10.7152, 0.59", "-11.0729, -62.8928, -10.6749, 0.22", "-11.6104, -63.3605, -10.6294, 0.22", "-12.1606, -63.8182, -10.5796, 0.59", "-12.529, -64.1293, -10.542, 0.59", "-12.6118, -64.2076, -10.528, 0.59", "-13.1811, -64.7923, -10.4092, 0.22", "-13.6214, -65.2915, -10.3031, 1.18", "-14.0393, -65.8681, -10.1847, 1.25", "-14.0787, -65.9324, -10.1718, 1.25", "-14.7409, -67.1567, -9.87291, 0.22", "-14.9259, -67.5349, -9.77554, 0.37", "-15.0303, -67.7945, -9.69689, 0.37", "-15.5256, -69.2372, -9.19978, 0.22", "-15.6767, -69.733, -9.0169, 0.22", "-15.9979, -70.8452, -8.58922, 1.47", "-16.2209, -71.7367, -8.27431, 2.21", "-16.4275, -72.6421, -7.96772, 2.21", "-16.4431, -72.7087, -7.94406, 2.21", "-16.6768, -73.9775, -7.48895, 0.74", "-16.6862, -74.0454, -7.46623, 0.74", "-16.8279, -75.4291, -7.06754, 0.22", "-16.8543, -75.7251, -6.98614, 0.59", "-16.9979, -77.1652, -6.62686, 0.22", "-17.0808, -78.0876, -6.39984, 0.22", "-17.1397, -78.9101, -6.18737, 0.22", "-17.1942, -79.6079, -6.00636, 0.52", "-17.2211, -79.9259, -5.92949, 0.52", "-17.3269, -81.2541, -5.65426, 0.22", "-17.3775, -82.1058, -5.51018, 0.22", "-17.4475, -83.3239, -5.31505, 1.55", "-17.4574, -84.0205, -5.19788, 1.69", "-17.3809, -85.9226, -4.81734, 0.22", "-17.2832, -86.885, -4.59484, 0.22", "-17.1649, -87.5364, -4.42437, 0.52", "-16.984, -88.2031, -4.25439, 0.52", "-16.6232, -89.2211, -4.01849, 0.22", "-16.2942, -90.0196, -3.84597, 1.4", "-15.9845, -90.6845, -3.71523, 1.69", "-15.7382, -91.2199, -3.61729, 1.77", "-14.9603, -92.9907, -3.31126, 0.15", "-14.4465, -94.2066, -3.1253, 0.22", "-14.1193, -95.0211, -3.02843, 0.74", "-13.8613, -95.734, -2.95709, 0.74", "-13.5722, -96.6308, -2.8614, 0.22", "-13.5029, -96.8844, -2.82731, 0.59", "-13.4042, -97.3213, -2.7476, 0.59", "-13.385, -97.4031, -2.73438, 0.59", "-13.0827, -98.6804, -2.53804, 0.22", "-12.9104, -99.4535, -2.45196, 0.74", "-12.6961, -100.318, -2.38106, 0.96", "-12.5394, -100.911, -2.33599, 0.66", "-12.0035, -102.815, -2.2193, 0.29", "-11.6868, -103.867, -2.16307, 0.22", "-11.3224, -104.996, -2.10782, 0.22", "-10.8765, -106.397, -2.05063, 1.55", "-10.7422, -106.817, -2.03872, 1.92", "-10.4071, -107.869, -2.02189, 0.96", "-10.2196, -108.474, -2.03084, 0.44" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.58353, -59.8981, -10.9642, 2.43", "-7.6537, -60.9743, -11.4665, 2.43", "-7.73771, -61.9728, -11.8655, 0.96", "-7.82389, -62.7278, -12.1244, 0.52", "-7.91178, -63.4212, -12.3397, 0.52", "-8.02427, -64.2877, -12.5908, 0.52", "-8.13249, -65.1335, -12.8228, 0.52", "-8.24024, -65.9016, -12.9736, 0.52", "-8.36023, -66.7012, -13.0925, 0.52", "-8.47621, -67.4971, -13.193, 2.58", "-8.59792, -68.4538, -13.3294, 3.68", "-8.62856, -68.6938, -13.37, 3.68", "-8.71375, -69.2727, -13.4813, 3.24" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-4.26512, -148.383, 33.2658, 0.59", "-4.18982, -150.309, 33.0869, 0.59", "-4.1861, -151.235, 32.9864, 0.37", "-4.24837, -152.16, 32.8564, 0.37", "-4.34708, -152.788, 32.7309, 0.74", "-4.49889, -153.486, 32.5627, 0.74", "-4.65371, -154.054, 32.4059, 0.96", "-4.68061, -154.114, 32.387, 0.96", "-5.01497, -154.763, 32.1427, 1.25", "-5.4207, -155.453, 31.919, 0.81", "-5.45278, -155.513, 31.9082, 0.81", "-5.8543, -156.333, 31.8398, 0.59", "-6.2612, -157.322, 31.8187, 0.59", "-6.28052, -157.377, 31.8191, 0.59", "-6.61596, -158.499, 31.8551, 0.44", "-6.9616, -159.732, 31.8974, 0.44", "-6.98006, -159.797, 31.8995, 0.44", "-7.31006, -160.932, 31.9248, 2.14", "-7.50402, -161.57, 31.9106, 3.09", "-7.6657, -162.156, 31.8805, 3.61", "-7.79865, -162.841, 31.7887, 3.61", "-8.89934, -172.348, 30.1499, 3.61", "-9.67956, -181.47, 26.8258, 3.61", "-9.99061, -190.062, 22.1849, 3.61" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-4.26512, -148.383, 33.2658, 0.59", "-3.56367, -149.335, 34.1201, 0.59", "-2.94833, -150.2, 34.9716, 0.37", "-2.69488, -150.747, 35.7967, 0.37", "-2.63288, -151.297, 37.0243, 0.37", "-2.64071, -151.327, 37.1128, 0.37", "-2.81639, -151.719, 38.374, 0.74", "-2.84558, -151.737, 38.4502, 0.74", "-3.98718, -152.251, 40.7667, 0.74", "-4.01491, -152.264, 40.8191, 0.74", "-4.38785, -152.5, 41.5564, 0.74", "-4.65184, -152.772, 42.1611, 0.29", "-4.91029, -153.315, 43.0141, 0.29", "-5.01467, -153.804, 43.6581, 0.29", "-4.96646, -154.311, 44.1803, 0.29", "-4.90633, -154.763, 44.6436, 0.81", "-4.89616, -154.812, 44.6935, 0.81", "-4.75306, -155.191, 45.1245, 1.25", "-4.57101, -155.438, 45.4712, 1.25", "-4.29382, -155.711, 45.9633, 0.59", "-3.48021, -160.574, 54.7321, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-81.2482, 752.913, 46.0488, 0.44", "-81.3249, 754.776, 43.7612, 0.44", "-81.3542, 755.572, 42.8825, 0.44", "-81.3729, 756.103, 42.3347, 0.74", "-81.373, 756.138, 42.3019, 0.74", "-81.356, 756.724, 41.8446, 0.74", "-81.3544, 756.764, 41.8178, 0.74", "-81.3399, 757.441, 41.6134, 0.44", "-81.3289, 757.494, 41.5991, 0.44", "-81.1497, 758.142, 41.4183, 0.88", "-80.9871, 758.807, 41.2241, 0.96", "-80.909, 759.186, 41.1082, 1.25", "-80.8996, 759.229, 41.0926, 1.25", "-80.7439, 760.135, 40.7284, 0.66", "-80.6639, 760.842, 40.4039, 0.37", "-80.6448, 761.325, 40.1557, 0.74", "-80.6386, 761.79, 39.8991, 0.74", "-80.6498, 762.318, 39.5978, 0.74", "-80.6985, 763.11, 39.1444, 0.29", "-80.8151, 764.003, 38.6331, 0.29", "-80.9072, 764.608, 38.2824, 0.29", "-81.0336, 765.489, 37.7742, 1.47", "-81.0857, 765.822, 37.5932, 1.69", "-81.096, 765.871, 37.5675, 1.69", "-81.1929, 766.361, 37.2829, 1.47", "-81.2033, 766.408, 37.2544, 1.47", "-81.4125, 767.73, 36.3991, 0.22", "-81.4697, 768.208, 36.0847, 0.22", "-81.5288, 769.013, 35.5663, 0.22", "-81.5502, 770.04, 34.9645, 1.03", "-81.533, 770.456, 34.7217, 1.4", "-81.4346, 771.762, 33.9608, 0.22", "-81.3983, 772.129, 33.7446, 0.59", "-81.3481, 772.545, 33.5003, 0.74", "-81.1814, 773.892, 32.7519, 0.29", "-81.1214, 774.851, 32.2291, 0.29", "-81.121, 774.9, 32.1988, 0.29", "-81.1664, 775.418, 31.8448, 0.44", "-81.1671, 775.469, 31.8056, 0.44", "-81.1575, 775.88, 31.4745, 0.44", "-81.133, 776.505, 30.9725, 0.22", "-81.0825, 777.464, 30.261, 1.92", "-81.0602, 777.658, 30.1129, 2.5", "-80.7011, 779.641, 28.6419, 0.15", "-80.6402, 779.925, 28.4358, 0.15", "-80.4482, 780.676, 27.9006, 1.4", "-80.4033, 780.848, 27.7809, 1.69", "-79.9926, 782.48, 26.6546, 0.15", "-79.8766, 783.027, 26.2843, 0.15", "-79.8621, 783.17, 26.1958, 0.15", "-79.8583, 783.294, 26.1251, 0.15", "-79.8924, 783.89, 25.8385, 0.96", "-79.9368, 784.295, 25.6649, 1.47", "-79.9933, 784.581, 25.5623, 1.62", "-80.1267, 785.222, 25.3233, 0.88", "-80.3678, 786.5, 24.8605, 0.22", "-80.4293, 786.989, 24.6845, 0.22", "-80.4591, 787.501, 24.4992, 0.74", "-80.4603, 787.555, 24.481, 0.74", "-80.4729, 788.004, 24.3533, 0.74", "-80.4861, 788.234, 24.3006, 0.74", "-80.5913, 789.432, 24.09, 0.29", "-80.5979, 789.489, 24.0808, 0.29", "-80.7543, 790.555, 23.9237, 0.29", "-80.9309, 791.63, 23.7714, 0.29", "-81.0889, 792.468, 23.6639, 0.29", "-81.2266, 793.087, 23.5969, 1.47", "-81.3124, 793.432, 23.5631, 2.06", "-81.3256, 793.486, 23.5573, 2.06", "-81.4632, 794.1, 23.474, 1.18", "-81.7919, 795.724, 23.1889, 0.22", "-82.008, 796.897, 22.966, 0.22", "-82.1377, 797.836, 22.7609, 1.47", "-82.1726, 798.178, 22.6792, 1.18", "-82.2575, 799.567, 22.3282, 0.22", "-82.2765, 800.501, 22.0766, 1.11", "-82.2626, 800.999, 21.9372, 1.33", "-82.1473, 802.837, 21.4255, 0.22", "-82.1432, 802.891, 21.4116, 0.22", "-82.0377, 804.18, 21.1027, 0.22", "-82.0333, 804.234, 21.0915, 0.22", "-81.9304, 805.615, 20.8442, 0.22", "-81.9278, 805.669, 20.8344, 0.22", "-81.9419, 806.421, 20.7312, 1.55", "-81.9522, 806.539, 20.7138, 2.14", "-82.0208, 806.943, 20.6507, 2.36", "-82.031, 806.989, 20.643, 2.36", "-82.2826, 807.787, 20.4573, 1.11", "-82.6693, 808.838, 20.1667, 0.22", "-83.0321, 809.727, 19.8944, 0.22", "-83.2982, 810.344, 19.6948, 1.4", "-83.4444, 810.66, 19.586, 1.4", "-84.1587, 812.148, 19.0325, 0.22", "-84.4335, 812.687, 18.8126, 0.88", "-84.5866, 812.982, 18.6836, 0.59", "-84.6138, 813.036, 18.6605, 0.59", "-84.6799, 813.172, 18.6071, 0.59", "-85.148, 814.199, 18.2811, 0.22", "-85.4268, 814.837, 18.1248, 0.22", "-85.6963, 815.494, 17.9881, 1.03", "-85.8239, 815.812, 17.9283, 1.4", "-85.9912, 816.214, 17.8812, 1.4", "-86.4314, 817.277, 17.8304, 0.22", "-86.4535, 817.33, 17.8312, 0.22", "-86.9316, 818.512, 17.8848, 0.22", "-86.9715, 818.617, 17.8916, 0.22", "-87.4518, 819.971, 17.9987, 0.22", "-87.7194, 820.742, 18.0734, 1.33", "-87.8084, 821.0, 18.1027, 1.62", "-87.975, 821.492, 18.1608, 0.81", "-88.4053, 822.802, 18.3282, 0.22", "-88.6592, 823.65, 18.4182, 1.25" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-81.2482, 752.913, 46.0488, 0.59", "-81.478, 753.802, 46.1389, 0.59", "-81.7687, 754.731, 46.2794, 0.59", "-82.0536, 755.602, 46.4365, 0.81", "-82.2755, 756.286, 46.5646, 1.25", "-82.2962, 756.35, 46.5766, 1.25", "-82.4246, 756.749, 46.6473, 1.11", "-82.704, 757.576, 46.7928, 0.88", "-82.8956, 758.174, 46.8895, 0.44", "-83.1529, 759.053, 47.0141, 0.37", "-83.218, 759.289, 47.0445, 0.37", "-83.3869, 759.933, 47.1133, 0.37", "-83.6246, 760.909, 47.1866, 1.47", "-83.7667, 761.5, 47.2044, 1.84", "-83.826, 761.733, 47.2091, 1.84", "-83.9412, 762.204, 47.2222, 1.84", "-84.1253, 762.989, 47.2504, 1.25", "-84.4188, 764.3, 47.3087, 0.66", "-84.6784, 765.488, 47.3655, 0.66", "-84.6957, 765.572, 47.3702, 0.66", "-84.8641, 766.43, 47.4234, 0.66", "-84.8867, 766.557, 47.4322, 0.66", "-85.0192, 767.342, 47.4889, 0.66", "-85.0295, 767.41, 47.4943, 0.66", "-85.1329, 768.127, 47.5551, 0.66", "-85.1679, 768.343, 47.5698, 0.66", "-85.2833, 769.024, 47.611, 0.66", "-85.3712, 769.563, 47.6469, 0.66", "-85.3799, 769.622, 47.6518, 0.66", "-85.4919, 770.484, 47.7372, 0.66", "-85.4975, 770.536, 47.7434, 0.66", "-85.5752, 771.379, 47.8524, 1.18", "-85.5818, 771.438, 47.8662, 1.18", "-85.6777, 772.176, 48.1035, 1.33", "-85.6876, 772.242, 48.1292, 1.33", "-85.7239, 772.445, 48.2245, 1.33", "-85.7413, 772.534, 48.2675, 1.33", "-85.9868, 773.652, 48.848, 0.81", "-85.996, 773.699, 48.8698, 0.81", "-86.0526, 774.152, 49.0682, 0.81", "-86.0582, 774.206, 49.0901, 0.81", "-86.104, 774.845, 49.3307, 0.96", "-86.1075, 774.941, 49.3646, 0.96", "-86.0977, 775.97, 49.6884, 0.37", "-86.0851, 776.839, 49.9528, 0.37", "-86.0968, 777.523, 50.1669, 1.33", "-86.1247, 778.143, 50.3821, 2.06", "-86.1551, 778.418, 50.4942, 2.36", "-86.2202, 778.849, 50.687, 2.36", "-86.3626, 779.526, 51.0205, 1.62", "-86.6171, 780.565, 51.5428, 0.52", "-86.9178, 781.729, 52.153, 0.37", "-87.2184, 782.752, 52.7135, 1.55", "-87.3821, 783.26, 53.0059, 2.21", "-87.5695, 783.784, 53.3342, 2.5" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.71375, -69.2727, -13.4813, 0.44", "-8.51736, -70.1079, -13.0152, 0.44", "-8.32019, -70.9156, -12.5256, 0.22", "-8.30878, -70.9553, -12.4977, 0.22", "-8.14292, -71.5259, -11.9977, 0.22", "-7.88407, -72.3259, -11.2804, 1.47", "-7.80096, -72.5646, -11.0741, 1.99", "-7.77232, -72.6445, -10.9999, 1.99", "-7.53262, -73.2229, -10.4606, 1.77", "-7.1287, -74.1357, -9.63662, 0.52", "-6.80843, -74.824, -9.03173, 0.29", "-6.55312, -75.3525, -8.60589, 0.29", "-6.53634, -75.3885, -8.57798, 0.29", "-6.28265, -75.943, -8.16993, 1.03", "-6.03744, -76.5294, -7.79249, 1.03", "-5.69761, -77.4101, -7.3071, 0.22", "-5.68658, -77.4451, -7.2887, 0.22", "-5.58564, -77.7995, -7.11709, 0.44", "-5.57603, -77.8353, -7.09944, 0.44", "-5.44779, -78.3071, -6.85117, 0.44", "-5.35713, -78.6622, -6.68287, 0.29", "-5.20603, -79.2633, -6.40469, 1.55", "-5.16455, -79.4219, -6.32687, 2.21", "-4.94642, -80.1509, -5.93605, 2.21", "-4.73119, -80.7943, -5.57303, 0.44", "-4.45209, -81.4831, -5.14716, 0.29", "-4.3239, -81.7614, -4.96406, 0.52", "-4.3027, -81.8037, -4.93545, 0.52", "-4.13573, -82.0825, -4.76049, 0.22", "-4.10373, -82.1162, -4.74152, 0.22", "-3.8661, -82.2825, -4.62704, 0.22", "-3.63219, -82.4303, -4.49817, 0.74", "-3.59053, -82.4602, -4.47314, 0.74", "-3.29316, -82.7104, -4.28223, 0.74", "-2.77542, -83.221, -3.9327, 0.29", "-2.46592, -83.5848, -3.6866, 0.29", "-2.1544, -84.0343, -3.40181, 1.33", "-1.97885, -84.3156, -3.23393, 1.92", "-1.88829, -84.4673, -3.14792, 1.99", "-1.6984, -84.805, -2.96537, 1.55", "-1.33916, -85.4402, -2.65748, 0.66", "-1.09436, -85.8529, -2.48612, 0.29", "-0.682984, -86.5211, -2.28096, 0.22", "-0.423092, -86.9599, -2.17923, 1.03", "-0.224487, -87.3111, -2.11992, 1.55", "0.0963721, -87.9047, -2.05819, 0.88", "0.365751, -88.4379, -2.0416, 0.29", "0.637415, -89.0291, -2.04223, 0.29", "0.919423, -89.7335, -2.06437, 0.22", "1.04125, -90.0593, -2.07582, 0.52", "1.05774, -90.1047, -2.07529, 0.52", "1.20474, -90.5297, -2.02906, 0.52", "1.36745, -90.9802, -1.93467, 0.44", "1.41266, -91.1103, -1.89249, 0.66", "1.52237, -91.4499, -1.76588, 0.37", "1.65785, -91.9486, -1.57037, 0.29", "1.77961, -92.5501, -1.34073, 0.29", "1.78329, -92.588, -1.32581, 0.29", "1.80204, -93.1774, -1.10432, 1.25", "1.79955, -93.4572, -1.00847, 1.84", "1.78537, -93.7157, -0.932892, 1.84", "1.74246, -94.3127, -0.802284, 0.81", "1.69, -95.0113, -0.676846, 0.29", "1.65725, -95.5116, -0.60346, 0.22", "1.65317, -95.5798, -0.59596, 0.22", "1.61428, -96.1624, -0.565764, 0.22", "1.54565, -96.9607, -0.582892, 1.33", "1.50485, -97.3388, -0.616493, 1.99", "1.47013, -97.5855, -0.654315, 2.28", "1.40039, -97.958, -0.712918, 2.28", "1.19853, -98.9139, -0.8605, 0.66", "1.06231, -99.4821, -0.952917, 0.22", "1.04968, -99.5295, -0.960207, 0.22", "0.956413, -99.9027, -1.0018, 0.22", "0.86348, -100.287, -1.028, 0.74", "0.801684, -100.551, -1.02915, 1.03", "0.753416, -100.746, -1.01343, 1.11", "0.661653, -101.136, -0.972998, 0.44", "0.513709, -101.778, -0.921501, 0.22", "0.503086, -101.825, -0.919007, 0.22", "0.418329, -102.178, -0.912715, 0.44", "0.314958, -102.701, -0.896509, 0.29", "0.30517, -102.748, -0.895201, 0.29", "0.120361, -103.305, -0.879864, 0.29", "-0.0255337, -103.653, -0.867265, 0.22", "-0.0452051, -103.698, -0.86478, 0.22", "-0.305237, -104.312, -0.790762, 0.22", "-0.447304, -104.678, -0.698894, 0.22", "-0.779391, -105.708, -0.35748, 2.14", "-0.78933, -105.745, -0.34343, 2.14", "-0.871062, -106.15, -0.180674, 1.99", "-0.95268, -106.746, 0.0699722, 1.69", "-1.02691, -107.634, 0.463114, 0.59", "-1.01287, -108.461, 0.842036, 0.22", "-0.96399, -108.873, 1.02101, 0.37", "-0.892109, -109.311, 1.17239, 0.37", "-0.786101, -109.821, 1.2971, 0.74", "-0.774103, -109.867, 1.3029, 0.74", "-0.673212, -110.219, 1.30531, 1.11", "-0.470879, -110.918, 1.26631, 0.59", "-0.243661, -111.702, 1.20572, 0.29", "-0.0849948, -112.233, 1.1616, 0.29", "-0.0609398, -112.307, 1.15538, 0.29", "0.113179, -112.812, 1.1259, 0.29", "0.162659, -112.944, 1.12574, 0.29", "0.381349, -113.463, 1.17705, 0.29", "0.570675, -113.89, 1.25369, 1.18", "0.687263, -114.139, 1.30035, 1.47", "0.707488, -114.182, 1.30883, 1.47", "1.02004, -114.882, 1.4471, 0.44", "1.22502, -115.458, 1.55104, 0.37", "1.32106, -115.893, 1.61664, 0.81", "1.363, -116.187, 1.65219, 0.81", "1.40423, -116.644, 1.69965, 0.59", "1.421, -116.962, 1.72595, 0.29", "1.43343, -117.668, 1.77281, 0.22", "1.44849, -118.427, 1.8028, 0.22", "1.46778, -118.871, 1.81454, 0.44", "1.47933, -119.023, 1.8179, 0.44", "1.51858, -119.319, 1.82654, 0.44", "1.62757, -119.879, 1.85044, 0.29", "1.76669, -120.469, 1.8847, 1.4", "1.87536, -120.905, 1.91342, 1.69", "1.96278, -121.29, 1.94083, 1.92", "2.08026, -121.829, 1.97248, 0.74", "2.18509, -122.486, 1.99276, 0.22", "2.25364, -123.133, 1.99843, 0.22", "2.27938, -123.597, 1.99968, 0.88", "2.28073, -123.95, 1.9922, 0.88", "2.25544, -124.522, 1.97006, 0.22", "2.19038, -125.235, 1.93276, 0.22", "2.18407, -125.289, 1.9299, 0.22", "2.10839, -125.794, 1.90394, 0.22", "1.98837, -126.462, 1.89607, 1.03", "1.92671, -126.755, 1.90109, 1.33", "1.88153, -126.952, 1.91126, 1.33", "1.69054, -127.828, 1.95112, 0.22", "1.55331, -128.467, 1.94218, 0.22", "1.46549, -128.86, 1.90858, 0.88", "1.40426, -129.134, 1.86959, 1.11", "1.35563, -129.352, 1.82911, 0.88", "1.18118, -130.204, 1.64128, 0.22", "1.03298, -130.897, 1.46321, 0.22", "0.950588, -131.287, 1.35575, 1.55", "0.877364, -131.63, 1.26348, 1.77", "0.795464, -132.008, 1.17309, 1.25", "0.637912, -132.76, 1.02677, 0.22", "0.489249, -133.52, 0.935692, 0.22", "0.483023, -133.56, 0.932961, 0.22", "0.428105, -134.235, 0.905038, 0.22", "0.427331, -134.291, 0.901438, 0.22", "0.463662, -134.908, 0.857909, 0.96", "0.493305, -135.3, 0.826595, 1.47", "0.536928, -135.725, 0.778055, 0.88", "0.570185, -136.114, 0.719744, 0.66", "0.643924, -137.006, 0.555834, 0.29", "0.666427, -137.356, 0.486191, 0.59", "0.6973, -137.948, 0.354864, 0.59", "0.729791, -138.56, 0.21725, 0.29", "0.734804, -138.622, 0.204925, 0.29", "0.824831, -139.386, 0.0772821, 0.29", "0.833025, -139.432, 0.0715641, 0.29", "0.91784, -139.815, 0.0285817, 0.74", "1.01405, -140.253, -0.0168543, 0.88", "1.13529, -140.951, -0.0891974, 0.22", "1.20643, -141.517, -0.151119, 0.22", "1.23913, -142.148, -0.238057, 1.99", "1.24022, -142.604, -0.314977, 2.43", "1.18429, -143.612, -0.509987, 0.22", "1.1231, -144.155, -0.629093, 0.44", "1.02167, -144.822, -0.790886, 0.37", "0.896884, -145.516, -0.964534, 0.22", "0.80116, -145.975, -1.07451, 1.03", "0.75149, -146.245, -1.14509, 1.25", "0.70079, -146.631, -1.25279, 0.96", "0.633841, -147.508, -1.49768, 0.15", "0.622563, -147.966, -1.62001, 0.74", "0.629658, -148.305, -1.70102, 0.96", "0.677119, -149.354, -1.93311, 0.22", "0.684315, -149.454, -1.95368, 0.22", "0.747162, -149.892, -2.03868, 0.22", "0.857051, -150.476, -2.13437, 0.22", "0.865998, -150.518, -2.14017, 0.22", "1.04207, -151.26, -2.23405, 2.5", "1.11449, -151.549, -2.26351, 2.73", "1.50711, -152.944, -2.41401, 0.22", "1.64919, -153.364, -2.46199, 0.52", "1.80405, -153.756, -2.5048, 0.52", "2.14377, -154.561, -2.57679, 0.22", "2.16493, -154.605, -2.58049, 0.22", "2.34723, -154.953, -2.60994, 0.22", "2.67013, -155.536, -2.63838, 1.18", "2.80205, -155.768, -2.64723, 1.69", "3.06952, -156.249, -2.65344, 1.33", "3.42292, -156.911, -2.62489, 0.22", "3.56148, -157.201, -2.60813, 0.22", "3.73433, -157.643, -2.58449, 1.47", "3.84153, -157.973, -2.56458, 1.69", "3.93728, -158.314, -2.55048, 1.69", "4.18165, -159.305, -2.51354, 0.29", "4.28211, -159.782, -2.49338, 0.29", "4.39225, -160.303, -2.47875, 1.03", "4.4095, -160.407, -2.47718, 1.33", "4.5157, -161.306, -2.46322, 0.22", "4.5376, -161.652, -2.45838, 0.22", "4.53409, -161.899, -2.45189, 1.03", "4.52184, -162.202, -2.42982, 1.03", "4.4456, -163.163, -2.32631, 0.22", "4.36969, -163.72, -2.25868, 1.33", "4.3255, -163.935, -2.2296, 1.47", "4.22979, -164.362, -2.19376, 1.55", "4.00474, -165.31, -2.14821, 0.22", "3.9241, -165.622, -2.14742, 0.22", "3.78377, -166.144, -2.16886, 0.96", "3.67726, -166.529, -2.19508, 1.25", "3.42014, -167.503, -2.29677, 0.22", "3.40692, -167.555, -2.30378, 0.22", "3.18344, -168.534, -2.42937, 0.22", "3.13653, -168.755, -2.45378, 0.74", "3.09722, -168.948, -2.47344, 0.74", "2.90224, -169.921, -2.55601, 0.22", "2.73315, -170.76, -2.59907, 0.22", "2.53246, -171.857, -2.65319, 0.22", "2.47847, -172.214, -2.67027, 0.81" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-8.71375, -69.2727, -13.4813, 0.66", "-9.2508, -71.2842, -13.136, 0.66", "-9.4607, -72.0205, -12.9724, 0.52", "-9.71295, -72.7878, -12.7758, 0.88", "-9.87254, -73.2732, -12.6321, 1.03", "-10.083, -73.9336, -12.4157, 0.96", "-10.3989, -74.9555, -12.0603, 0.37", "-10.6805, -75.9548, -11.6254, 0.29", "-10.7987, -76.4673, -11.403, 0.29", "-10.949, -77.5554, -10.92, 0.29", "-10.968, -77.9057, -10.7709, 0.74", "-10.9672, -78.0028, -10.7351, 0.74", "-10.9491, -78.3857, -10.6285, 0.74", "-10.8904, -79.1196, -10.4647, 0.59", "-10.7963, -80.3398, -10.2348, 0.29", "-10.7327, -81.5986, -10.0422, 0.29", "-10.6946, -82.7881, -9.88433, 0.29", "-10.6663, -84.1331, -9.72085, 0.29", "-10.6444, -85.2117, -9.63994, 1.33", "-10.6428, -85.3034, -9.63773, 1.33", "-10.6234, -86.2391, -9.66774, 1.99", "-10.5831, -86.8165, -9.70508, 2.21", "-10.5366, -87.3143, -9.74892, 2.21", "-10.3536, -88.9736, -9.92425, 0.29", "-10.1842, -90.343, -10.0728, 0.29", "-10.0753, -91.1384, -10.1552, 0.29", "-9.98571, -91.6934, -10.2112, 0.96", "-9.88211, -92.3553, -10.2646, 1.47", "-9.81963, -92.76, -10.2866, 1.84", "-9.67611, -93.5719, -10.2923, 0.88", "-9.65836, -93.6475, -10.2965, 0.88", "-9.45089, -94.4383, -10.3866, 0.29", "-9.24595, -95.2112, -10.5068, 0.29", "-9.22191, -95.2962, -10.5227, 0.29", "-8.90961, -96.3737, -10.7475, 0.52", "-8.55281, -97.5864, -11.0185, 0.52", "-8.25338, -98.6137, -11.2405, 0.22", "-8.0136, -99.4682, -11.4172, 1.47", "-7.82472, -100.185, -11.5505, 2.06", "-7.74245, -100.569, -11.6084, 2.36", "-7.62376, -101.394, -11.6913, 1.69", "-7.52734, -102.69, -11.7512, 0.74", "-7.505, -103.867, -11.7631, 0.44", "-7.54289, -105.109, -11.7669, 0.44", "-7.5991, -105.859, -11.7662, 0.44", "-7.73588, -107.312, -11.7679, 0.29", "-7.80073, -108.052, -11.7776, 0.59", "-7.85881, -108.825, -11.7978, 0.59", "-7.8905, -109.637, -11.832, 0.29", "-7.88939, -109.726, -11.8387, 0.29", "-7.84315, -110.874, -11.9573, 0.29", "-7.75193, -112.162, -12.1348, 0.29", "-7.74429, -112.317, -12.1574, 0.29", "-7.76853, -112.892, -12.2336, 0.29", "-7.78457, -112.967, -12.2439, 0.29", "-8.04906, -113.693, -12.4261, 0.29", "-8.07808, -113.762, -12.4488, 0.29", "-8.41147, -114.539, -12.7505, 0.29", "-8.88361, -115.713, -13.2375, 2.28", "-9.4816, -117.191, -13.8614, 2.65", "-10.3061, -119.28, -14.746, 0.29", "-10.7185, -120.348, -15.1853, 0.29", "-11.0188, -121.088, -15.4775, 0.59", "-11.1716, -121.447, -15.6183, 0.22", "-11.5584, -122.238, -15.9196, 0.22", "-11.904, -122.792, -16.1415, 0.22", "-12.5721, -123.7, -16.5121, 1.03", "-13.2086, -124.49, -16.8602, 1.92", "-13.7488, -125.17, -17.1736, 2.06", "-14.2691, -125.876, -17.535, 1.92", "-15.6711, -128.092, -18.7459, 0.29", "-16.0777, -128.848, -19.1626, 0.52", "-16.1028, -128.904, -19.1926, 0.52", "-16.3104, -129.491, -19.4687, 0.52", "-16.5894, -130.505, -19.8445, 0.37", "-16.7377, -131.376, -20.065, 0.29", "-16.8109, -132.355, -20.2135, 0.29", "-16.8711, -133.134, -20.3109, 0.88", "-16.9047, -133.648, -20.3718, 0.88", "-16.9416, -134.963, -20.5239, 0.22", "-16.9165, -136.047, -20.6407, 1.55", "-16.86, -136.711, -20.7229, 1.84", "-16.7698, -137.302, -20.8026, 1.62", "-16.4933, -138.722, -21.0419, 0.22", "-16.2766, -139.702, -21.2243, 0.22", "-16.1317, -140.321, -21.3395, 0.22", "-16.0122, -140.96, -21.4412, 0.74", "-15.9348, -141.529, -21.5119, 0.74", "-15.8263, -142.789, -21.6299, 0.29", "-15.8135, -143.526, -21.6615, 0.29", "-15.8514, -144.721, -21.6487, 0.29", "-15.9073, -145.875, -21.5921, 1.77", "-15.9443, -146.561, -21.5381, 2.21", "-15.9832, -147.211, -21.4675, 2.21", "-16.0591, -148.343, -21.3038, 0.74", "-16.1581, -149.404, -21.1651, 0.22", "-16.3105, -150.703, -21.0196, 0.22", "-16.3978, -151.384, -20.9616, 0.88", "-16.4768, -152.026, -20.9231, 1.03", "-16.4959, -152.195, -20.9182, 1.03", "-16.6233, -153.414, -20.9344, 0.22", "-16.7132, -154.22, -20.9674, 0.22", "-16.732, -154.376, -20.9728, 0.22", "-16.8372, -155.276, -21.0041, 0.22", "-16.9135, -155.874, -21.0123, 0.22", "-17.0577, -156.867, -21.0128, 1.33", "-17.1506, -157.437, -21.0011, 1.77", "-17.2978, -158.304, -20.9606, 1.77", "-17.4078, -158.993, -20.9184, 0.88", "-17.6261, -160.372, -20.8183, 0.29", "-17.6765, -160.889, -20.7846, 0.74", "-17.7275, -161.448, -20.7628, 0.74", "-17.8325, -162.766, -20.7479, 0.22", "-17.8727, -163.347, -20.7523, 0.22", "-17.8802, -163.45, -20.755, 0.22", "-17.9689, -164.504, -20.8131, 0.96", "-18.134, -166.037, -20.903, 1.18", "-18.1967, -166.475, -20.933, 1.47", "-18.2156, -166.576, -20.9408, 1.47", "-18.3225, -167.105, -20.9669, 1.47", "-18.5894, -168.576, -21.0062, 0.22", "-18.6667, -169.06, -21.0174, 0.22", "-18.7207, -169.716, -21.031, 0.74", "-18.7571, -170.033, -21.0385, 0.96", "-18.7815, -170.201, -21.0422, 0.96", "-18.8516, -170.602, -21.0542, 0.96", "-19.0597, -171.721, -21.1078, 0.22", "-19.1765, -172.4, -21.1459, 0.29", "-19.3085, -173.21, -21.2582, 0.29", "-19.417, -173.768, -21.3961, 0.29", "-19.6274, -174.765, -21.7058, 1.25", "-19.7612, -175.371, -21.9241, 1.69", "-19.8672, -175.836, -22.1207, 1.69", "-20.1911, -177.201, -22.7895, 1.03", "-20.5568, -178.611, -23.5026, 0.22", "-20.7137, -179.18, -23.7803, 0.22", "-21.1231, -180.597, -24.437, 1.99", "-21.3926, -181.493, -24.8168, 2.5", "-21.9325, -183.376, -25.4995, 0.29", "-22.1717, -184.238, -25.7438, 0.22", "-22.4039, -185.151, -25.94, 0.52", "-22.5039, -185.547, -26.0053, 0.59", "-22.8118, -186.865, -26.1311, 0.22", "-23.0219, -187.955, -26.1604, 0.22", "-23.1267, -188.617, -26.1396, 0.22", "-23.324, -189.962, -26.0856, 1.33", "-23.4342, -190.594, -26.0564, 1.69", "-23.5624, -191.228, -26.0195, 1.47", "-23.7847, -192.098, -25.9672, 0.52", "-23.9892, -192.778, -25.9347, 0.29", "-24.5822, -194.492, -25.8589, 0.29", "-25.0411, -195.619, -25.8201, 1.11", "-25.3174, -196.259, -25.8112, 1.47", "-26.0812, -197.914, -25.8052, 0.22", "-26.3748, -198.552, -25.8137, 1.77", "-26.7743, -199.429, -25.8407, 2.14", "-27.0123, -199.967, -25.868, 1.69", "-27.5282, -201.305, -25.9468, 0.22", "-27.5525, -201.382, -25.9524, 0.22", "-27.7231, -202.065, -26.0105, 0.22", "-27.8886, -202.786, -26.1008, 0.52", "-27.9338, -203.005, -26.1356, 0.52", "-28.1387, -204.091, -26.3245, 0.22", "-28.2596, -204.758, -26.4541, 0.22", "-28.406, -205.711, -26.6619, 1.99", "-28.5213, -206.586, -26.8772, 2.5", "-28.6164, -207.79, -27.2625, 0.81", "-28.6677, -208.579, -27.5394, 0.22", "-28.6719, -208.642, -27.5615, 0.22", "-28.7081, -209.069, -27.704, 0.52", "-28.7148, -209.132, -27.7235, 0.52", "-28.9637, -210.4, -28.0598, 0.22", "-29.2736, -211.583, -28.3249, 0.22", "-29.5786, -212.579, -28.5192, 0.22", "-29.8966, -213.461, -28.6623, 1.33", "-30.0536, -213.84, -28.7107, 1.33", "-30.7193, -215.296, -28.8565, 0.22", "-31.257, -216.218, -28.8817, 0.22", "-31.2982, -216.276, -28.8816, 0.22", "-32.3983, -217.605, -28.8192, 2.28", "-32.7422, -217.961, -28.7817, 2.73", "-33.0869, -218.281, -28.7362, 2.73", "-34.8024, -219.646, -28.4714, 0.22", "-35.1533, -219.876, -28.4267, 0.74", "-35.5185, -220.092, -28.3857, 0.96", "-36.7461, -220.691, -28.2991, 0.22", "-37.3242, -220.937, -28.2861, 1.03", "-37.7051, -221.096, -28.3508, 1.03", "-39.2631, -221.75, -28.9377, 0.22", "-39.3294, -221.779, -28.9733, 0.22", "-40.2473, -222.188, -29.5364, 1.4", "-40.4975, -222.302, -29.7068, 1.4", "-42.9443, -223.465, -31.4213, 0.59", "-43.5048, -223.749, -31.8191, 1.03", "-45.1976, -224.696, -32.9665, 0.22", "-46.0137, -225.173, -33.4488, 0.22", "-46.0667, -225.206, -33.4761, 0.22", "-46.7107, -225.618, -33.7501, 1.11", "-47.1787, -225.914, -33.885, 1.25", "-48.8253, -226.995, -34.2927, 0.22", "-49.3595, -227.361, -34.404, 0.66", "-50.8332, -228.383, -34.7387, 0.22", "-50.9001, -228.43, -34.7529, 0.22", "-51.3509, -228.739, -34.8425, 0.96", "-51.7726, -229.011, -34.9084, 1.4", "-52.42, -229.414, -34.9722, 0.96", "-53.5702, -230.136, -35.0252, 0.22", "-54.2007, -230.549, -35.0168, 1.62", "-54.7115, -230.897, -35.0045, 1.99", "-56.3104, -232.055, -34.9243, 0.22", "-56.7648, -232.416, -34.8957, 0.37", "-56.9941, -232.615, -34.8708, 0.37", "-57.58, -233.149, -34.7931, 0.22", "-58.0566, -233.613, -34.7399, 0.22", "-58.743, -234.305, -34.6736, 0.52", "-59.5366, -235.123, -34.6148, 0.22", "-59.9852, -235.564, -34.5963, 0.96", "-60.4412, -235.982, -34.6169, 0.96", "-61.5851, -237.033, -34.7432, 0.22", "-62.4718, -237.828, -34.9616, 1.18", "-62.8855, -238.19, -35.1465, 1.55", "-62.9329, -238.231, -35.1731, 1.55", "-64.2964, -239.416, -36.0508, 0.29", "-64.9554, -239.98, -36.5047, 0.29", "-66.2877, -241.067, -37.4456, 1.55", "-68.3347, -242.671, -38.8912, 0.29", "-68.3988, -242.72, -38.9347, 0.29", "-68.9664, -243.152, -39.3049, 1.18", "-69.966, -243.901, -39.9318, 0.22", "-70.7767, -244.505, -40.4162, 1.25", "-72.0209, -245.506, -41.1179, 0.22", "-72.2135, -245.666, -41.2157, 0.74", "-73.0399, -246.387, -41.6363, 0.22", "-73.0856, -246.431, -41.6603, 0.22", "-73.7521, -247.165, -42.0228, 1.11", "-74.2107, -247.725, -42.2705, 1.47", "-75.1806, -249.015, -42.752, 0.22", "-75.4356, -249.362, -42.8724, 0.59", "-76.0149, -250.169, -43.1195, 1.18", "-76.0611, -250.234, -43.1389, 1.18", "-76.6134, -251.042, -43.3592, 1.18", "-77.6102, -252.513, -43.7253, 0.22", "-78.1125, -253.316, -43.9109, 1.25", "-78.3134, -253.633, -43.9807, 1.25", "-79.0648, -254.72, -44.2209, 0.29", "-79.5048, -255.318, -44.3594, 0.96", "-80.5786, -256.839, -44.6279, 0.29", "-81.3067, -257.88, -44.7438, 0.44", "-82.0919, -258.988, -44.7991, 0.22", "-82.8408, -260.006, -44.7863, 1.18", "-83.3519, -260.65, -44.6932, 1.77", "-84.5939, -262.084, -44.278, 0.29", "-85.0851, -262.602, -44.0165, 0.29", "-85.4468, -262.931, -43.7586, 0.29", "-85.7809, -263.184, -43.488, 0.88", "-86.8272, -263.89, -42.6145, 0.22", "-87.5326, -264.276, -42.092, 1.03", "-87.9263, -264.451, -41.8416, 1.03", "-88.7243, -264.764, -41.3322, 0.22", "-90.8548, -265.464, -40.0117, 0.22", "-90.9224, -265.482, -39.9716, 0.22", "-92.3169, -265.688, -39.2072, 0.81", "-92.5908, -265.705, -39.0709, 1.03", "-93.3974, -265.673, -38.652, 0.22", "-94.3864, -265.538, -38.1343, 0.22", "-94.4538, -265.523, -38.0932, 0.22", "-95.6139, -265.262, -37.3852, 1.33", "-96.1312, -265.166, -37.0872, 1.55", "-97.9174, -264.956, -36.1789, 0.22", "-98.4356, -264.926, -35.9441, 0.59", "-99.2619, -264.924, -35.6411, 0.59", "-100.161, -264.961, -35.3804, 0.44", "-101.611, -265.094, -35.0776, 0.22", "-102.535, -265.187, -34.9303, 1.03", "-102.872, -265.233, -34.8908, 1.03", "-104.291, -265.411, -34.6962, 0.22", "-104.9, -265.46, -34.5957, 0.22", "-104.966, -265.461, -34.5788, 0.22", "-106.214, -265.374, -34.2223, 0.22", "-107.345, -265.234, -33.8803, 0.22", "-107.41, -265.224, -33.8605, 0.22", "-108.619, -265.005, -33.5613, 1.11", "-109.093, -264.928, -33.5072, 1.55", "-110.429, -264.74, -33.4714, 0.22", "-111.444, -264.65, -33.5499, 0.22", "-111.964, -264.612, -33.6193, 0.66", "-113.479, -264.552, -33.8691, 0.22", "-114.825, -264.534, -34.1197, 1.25", "-115.34, -264.541, -34.2435, 1.47", "-116.988, -264.671, -34.6463, 0.22", "-117.065, -264.683, -34.6639, 0.22", "-117.662, -264.818, -34.7854, 1.03", "-118.556, -265.094, -34.9219, 1.33", "-120.823, -265.875, -35.2312, 0.22", "-122.525, -266.506, -35.469, 0.22", "-123.809, -267.028, -35.6307, 0.22", "-124.278, -267.233, -35.6876, 1.03", "-124.862, -267.527, -35.7501, 1.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-88.6592, 823.65, 18.4182, 0.88", "-89.2891, 824.95, 18.3091, 0.88", "-90.2325, 826.955, 18.1197, 0.15", "-90.7237, 828.273, 17.9572, 0.15", "-90.7715, 828.409, 17.9366, 0.15", "-91.0206, 829.121, 17.8293, 1.03", "-91.1329, 829.442, 17.7808, 1.4", "-91.2184, 829.746, 17.7205, 1.4", "-91.9479, 832.435, 17.1617, 0.22", "-92.4555, 834.443, 16.7663, 0.22" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-88.6592, 823.65, 18.4182, 0.22", "-88.52, 825.289, 19.4095, 0.22", "-88.4809, 826.034, 19.8877, 0.81", "-88.4728, 826.267, 20.0422, 1.03", "-88.4688, 826.665, 20.3011, 0.81", "-88.4734, 828.429, 21.4368, 0.22", "-88.4743, 828.708, 21.603, 0.44", "-88.5118, 829.328, 21.9381, 0.15", "-88.5144, 829.373, 21.9598, 0.15", "-88.5704, 830.06, 22.2515, 1.03", "-88.579, 830.145, 22.2824, 1.03", "-88.6741, 831.362, 22.6473, 0.15", "-88.6964, 831.656, 22.7322, 0.29", "-88.7916, 833.02, 23.1151, 0.15", "-88.8234, 833.496, 23.2553, 0.66", "-88.829, 833.56, 23.2767, 0.66", "-88.964, 834.691, 23.6938, 0.15", "-89.0835, 835.475, 24.0213, 0.66", "-89.1873, 836.153, 24.3144, 0.22", "-89.1957, 836.215, 24.3434, 0.22", "-89.2899, 836.891, 24.679, 0.74", "-89.3196, 837.056, 24.7634, 0.74", "-89.3702, 837.196, 24.8417, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-87.5695, 783.784, 53.3342, 0.37", "-88.3586, 784.248, 52.8653, 0.37", "-88.6991, 784.453, 52.66, 0.37", "-88.7357, 784.475, 52.6426, 0.37", "-89.0528, 784.66, 52.513, 0.37", "-89.4718, 784.908, 52.3698, 0.88", "-89.7113, 785.05, 52.2988, 0.88", "-89.7511, 785.075, 52.2932, 0.88", "-90.3535, 785.454, 52.2741, 0.88", "-90.3816, 785.473, 52.2757, 0.88", "-90.6181, 785.653, 52.313, 1.03", "-90.6628, 785.688, 52.319, 1.03", "-90.8782, 785.848, 52.3308, 1.03", "-90.9408, 785.893, 52.3306, 1.03", "-91.3007, 786.144, 52.3048, 0.74", "-91.7712, 786.458, 52.2613, 0.29", "-92.2458, 786.759, 52.2198, 0.29", "-92.7383, 787.076, 52.1895, 0.29", "-92.7997, 787.117, 52.1893, 0.29", "-93.1138, 787.337, 52.2104, 0.22", "-93.1551, 787.369, 52.2185, 0.22", "-93.4592, 787.624, 52.3354, 0.52", "-93.7316, 787.939, 52.5666, 1.18", "-93.9107, 788.201, 52.7814, 1.18", "-93.927, 788.228, 52.8048, 1.18", "-93.9922, 788.373, 52.9427, 1.18", "-94.0006, 788.396, 52.9662, 1.18", "-94.0505, 788.76, 53.3943, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-87.5695, 783.784, 53.3342, 0.52", "-87.3371, 784.535, 53.7932, 0.52", "-87.1468, 785.204, 54.2131, 0.37", "-87.1373, 785.239, 54.2351, 0.37", "-87.0203, 785.706, 54.531, 0.37", "-86.94, 786.041, 54.7441, 0.74", "-86.827, 786.559, 55.0694, 0.44", "-86.7329, 787.255, 55.4788, 0.37", "-86.7294, 787.286, 55.4973, 0.37", "-86.7048, 787.515, 55.6347, 0.37", "-86.7014, 787.552, 55.6572, 0.37", "-86.6582, 788.168, 56.0065, 0.88", "-86.6306, 788.621, 56.2077, 1.11" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-92.4555, 834.443, 16.7663, 0.22", "-92.357, 833.639, 15.2078, 0.22", "-92.3163, 833.424, 14.7775, 1.25", "-92.1396, 832.637, 13.1774, 0.22", "-92.0772, 832.364, 12.6065, 0.96", "-91.9153, 831.6, 10.9786, 0.22", "-91.9071, 831.569, 10.9099, 0.22", "-91.7199, 831.03, 9.72033, 0.22", "-91.7096, 831.008, 9.67098, 0.22", "-91.5737, 830.775, 9.17003, 0.74", "-91.505, 830.669, 8.94012, 0.88", "-91.146, 829.972, 7.47548, 0.22", "-91.1371, 829.948, 7.42656, 0.22", "-90.94, 829.413, 6.40378, 0.22", "-90.8068, 829.067, 5.76498, 0.22", "-90.795, 829.04, 5.71831, 0.22", "-90.5586, 828.503, 4.82911, 1.11", "-90.5958, 828.083, 4.20126, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-92.4555, 834.443, 16.7663, 0.96", "-92.7192, 835.262, 16.573, 0.96", "-92.7487, 835.349, 16.5547, 0.96", "-92.9036, 835.8, 16.4669, 1.18", "-93.2104, 836.694, 16.3004, 0.88", "-94.5351, 840.594, 15.5987, 0.15", "-94.5656, 840.685, 15.5829, 0.15", "-95.285, 842.884, 15.2008, 0.15", "-95.7249, 844.355, 14.9208, 0.96", "-95.8982, 845.001, 14.7916, 1.33", "-95.9215, 845.103, 14.771, 1.33", "-95.9673, 845.391, 14.7171, 1.33", "-95.9886, 845.559, 14.6837, 1.33", "-96.2203, 848.062, 14.1879, 0.15", "-96.2758, 848.647, 14.0844, 0.44", "-96.3341, 849.22, 13.9886, 0.44", "-96.592, 851.264, 13.6711, 0.22", "-96.6237, 851.462, 13.6422, 0.22", "-96.9661, 852.96, 13.4361, 0.81", "-97.3562, 854.281, 13.269, 0.22", "-97.4104, 854.443, 13.2455, 0.22", "-97.7938, 855.449, 13.0809, 1.18", "-98.009, 855.954, 12.9939, 1.33", "-99.2309, 858.492, 12.4093, 0.22", "-99.3198, 858.651, 12.3631, 0.22", "-99.698, 859.272, 12.1628, 0.22", "-100.24, 860.076, 11.8727, 1.03", "-100.684, 860.679, 11.6262, 1.33", "-101.973, 862.334, 10.8637, 0.15", "-102.681, 863.121, 10.4211, 0.15", "-102.74, 863.185, 10.3835, 0.15", "-103.685, 864.162, 9.76283, 0.15", "-103.747, 864.221, 9.7215, 0.15", "-104.649, 865.008, 9.11698, 1.03", "-105.21, 865.463, 8.77441, 1.4" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-94.0505, 788.76, 53.3943, 0.52", "-93.8581, 790.565, 52.6802, 0.52", "-93.8351, 790.953, 52.5521, 0.52", "-93.8305, 791.018, 52.5325, 0.52", "-93.7559, 791.932, 52.2719, 0.37", "-93.7489, 791.998, 52.2545, 0.37", "-93.6, 792.947, 52.0271, 0.37", "-93.4603, 793.748, 51.9182, 1.03", "-93.3213, 794.416, 51.839, 0.88", "-93.3042, 794.491, 51.8305, 0.88", "-93.1246, 795.249, 51.7508, 0.59", "-92.7247, 796.98, 51.481, 0.22", "-92.4875, 798.105, 51.2764, 0.22", "-92.4736, 798.168, 51.2621, 0.22", "-92.2841, 799.085, 51.0255, 0.88", "-92.1692, 799.675, 50.8729, 1.11", "-91.8399, 801.54, 50.4163, 0.29", "-91.7345, 802.147, 50.2814, 0.22", "-91.4872, 803.17, 50.0582, 0.22", "-91.4687, 803.234, 50.0459, 0.22", "-91.0398, 804.642, 49.849, 0.22", "-90.7518, 805.577, 49.7624, 1.33", "-90.6122, 806.016, 49.7461, 1.33", "-89.9938, 807.927, 49.6581, 0.22", "-89.9734, 807.992, 49.6549, 0.22", "-89.6032, 809.17, 49.5706, 0.22", "-89.3402, 809.987, 49.4755, 0.81", "-88.8128, 811.694, 49.2696, 0.22", "-88.5753, 812.506, 49.1931, 0.81", "-88.5564, 812.572, 49.1916, 0.81", "-88.4621, 812.869, 49.1852, 0.81", "-87.9991, 814.107, 49.166, 0.22", "-87.644, 814.991, 49.1792, 1.4", "-87.4287, 815.542, 49.2209, 1.77", "-87.0911, 816.335, 49.3151, 1.18" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-94.0505, 788.76, 53.3943, 0.52", "-94.8071, 789.584, 53.5564, 0.52", "-94.8797, 789.672, 53.5681, 0.52", "-95.1956, 790.087, 53.6027, 0.81", "-95.2377, 790.146, 53.6054, 0.81", "-95.4223, 790.423, 53.6146, 0.59", "-96.2041, 791.64, 53.6699, 0.29", "-96.271, 791.755, 53.672, 0.29", "-96.6087, 792.317, 53.7126, 1.03", "-96.952, 792.871, 53.7933, 0.96", "-97.326, 793.448, 53.915, 0.59", "-97.7098, 794.013, 54.0917, 0.59", "-97.7737, 794.099, 54.132, 0.59", "-98.184, 794.667, 54.4543, 0.59", "-98.4932, 795.179, 54.8167, 0.29", "-98.5125, 795.217, 54.8477, 0.29", "-98.6639, 795.576, 55.1391, 0.29", "-98.693, 795.657, 55.2002, 0.29", "-98.8924, 796.209, 55.5601, 0.59", "-99.2364, 797.16, 56.058, 0.22", "-99.2581, 797.212, 56.0815, 0.22", "-99.5805, 797.791, 56.2707, 0.22", "-99.6986, 797.964, 56.3072, 0.22", "-100.089, 798.357, 56.3083, 0.22", "-100.54, 798.543, 56.1422, 0.66", "-100.654, 798.561, 56.0763, 0.66", "-101.274, 798.603, 55.6591, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-86.6306, 788.621, 56.2077, 0.29", "-86.3969, 789.783, 56.8236, 0.29", "-86.371, 789.928, 56.8903, 0.29", "-86.2251, 790.785, 57.2459, 0.88", "-86.1049, 791.532, 57.5354, 1.25", "-86.0111, 792.141, 57.7618, 1.25", "-85.8636, 793.06, 58.0952, 0.44", "-85.7036, 794.099, 58.4326, 0.29", "-85.591, 794.797, 58.648, 0.88", "-85.5123, 795.266, 58.7764, 1.25", "-85.4989, 795.338, 58.7933, 1.25", "-85.3864, 795.916, 58.923, 0.96", "-85.3541, 796.077, 58.9606, 0.96", "-85.2145, 796.729, 59.1147, 0.74", "-84.9366, 798.014, 59.4162, 0.29", "-84.7322, 798.944, 59.6342, 0.52", "-84.6856, 799.166, 59.6851, 0.52" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-86.6306, 788.621, 56.2077, 0.22", "-87.6479, 789.419, 55.9156, 0.22", "-87.7053, 789.462, 55.8962, 0.22", "-88.3518, 789.941, 55.6609, 0.22", "-88.4032, 789.979, 55.6422, 0.22", "-89.3704, 790.696, 55.2902, 0.22", "-89.4278, 790.739, 55.2692, 0.22", "-90.2572, 791.466, 54.9204, 0.22", "-90.6174, 791.765, 54.7657, 0.22" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-101.274, 798.603, 55.6591, 0.22", "-101.184, 799.61, 55.76, 0.22", "-101.231, 799.721, 55.8261, 0.22", "-101.582, 800.18, 56.1634, 0.22", "-101.864, 800.406, 56.3729, 0.37", "-102.438, 800.781, 56.7729, 0.37", "-102.497, 800.808, 56.8179, 0.37", "-103.797, 801.27, 57.9003, 1.18", "-104.251, 801.375, 58.256, 1.18", "-105.02, 801.48, 58.8338, 0.96", "-105.202, 801.491, 58.9564, 0.96", "-106.976, 801.51, 60.0361, 0.52", "-107.064, 801.51, 60.086, 0.52", "-107.618, 801.512, 60.3819, 0.52", "-107.75, 801.512, 60.4568, 0.52", "-108.516, 801.507, 60.8677, 0.74", "-109.101, 801.511, 61.1369, 0.88", "-109.161, 801.512, 61.1509, 0.88", "-110.101, 801.572, 61.3909, 1.11" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-101.274, 798.603, 55.6591, 0.22", "-101.886, 798.019, 55.2142, 0.22", "-101.944, 797.964, 55.1719, 0.22", "-102.678, 797.263, 54.638, 0.22", "-102.724, 797.219, 54.6042, 0.22", "-103.189, 796.775, 54.2661, 0.66", "-103.415, 796.559, 54.102, 0.66" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-84.6856, 799.166, 59.6851, 0.15", "-83.6486, 799.133, 60.1992, 0.15", "-82.9885, 798.966, 60.4542, 0.44", "-82.9296, 798.946, 60.4728, 0.44", "-82.2986, 798.705, 60.6192, 0.15", "-81.8091, 798.52, 60.7213, 0.96", "-81.2756, 798.324, 60.8349, 0.96", "-80.2328, 797.897, 61.0173, 0.22", "-80.0728, 797.833, 61.0429, 0.22", "-79.2198, 797.52, 61.1783, 0.52", "-78.6233, 797.316, 61.2733, 0.52", "-77.8985, 797.117, 61.4005, 0.59", "-77.7051, 797.084, 61.4316, 0.59", "-76.8279, 797.032, 61.5868, 0.15", "-76.7637, 797.03, 61.5984, 0.15", "-76.3854, 797.029, 61.6012, 0.15", "-76.229, 797.03, 61.5827, 0.15", "-75.2623, 797.063, 61.4021, 0.88", "-74.821, 797.085, 61.3065, 1.18", "-74.2655, 797.139, 61.1574, 1.18", "-72.4342, 797.369, 60.6285, 0.22", "-72.3632, 797.378, 60.6084, 0.22", "-71.998, 797.412, 60.5151, 0.37", "-71.9241, 797.418, 60.4983, 0.37", "-70.8465, 797.54, 60.2531, 0.22", "-70.7914, 797.544, 60.2434, 0.22", "-70.0739, 797.623, 60.2042, 0.22", "-69.6926, 797.656, 60.1821, 0.74", "-69.284, 797.679, 60.1578, 1.03", "-69.1986, 797.682, 60.1541, 1.03", "-67.5891, 797.697, 60.1519, 0.37", "-66.6862, 797.727, 60.1257, 1.62" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-84.6856, 799.166, 59.6851, 0.29", "-84.4669, 800.628, 59.9408, 0.29", "-84.2932, 801.533, 60.1125, 0.29", "-84.2759, 801.609, 60.128, 0.29", "-84.045, 802.633, 60.3358, 0.15", "-83.8033, 803.703, 60.5533, 1.18", "-83.6667, 804.309, 60.6763, 1.77", "-83.4204, 805.152, 60.8601, 1.18", "-83.2281, 805.723, 60.991, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-110.101, 801.572, 61.3909, 0.59", "-110.372, 802.366, 61.6609, 0.59", "-110.394, 802.435, 61.6792, 0.59", "-110.539, 802.938, 61.7863, 0.59", "-110.557, 803.019, 61.8019, 0.59", "-110.591, 803.356, 61.8589, 0.59", "-110.623, 803.544, 61.9817, 0.59", "-110.711, 803.695, 62.2903, 0.29", "-110.847, 803.876, 62.7014, 0.22", "-111.067, 804.111, 63.2398, 0.22", "-111.313, 804.334, 63.7353, 0.74", "-112.585, 805.36, 66.0343, 0.74", "-114.065, 806.458, 68.453, 0.88", "-114.655, 806.856, 69.3331, 0.22", "-115.24, 807.238, 70.1456, 0.22", "-115.686, 807.541, 70.6935, 0.22", "-115.74, 807.582, 70.7487, 0.22", "-116.031, 807.898, 70.8979, 0.22", "-116.078, 807.968, 70.9083, 0.22", "-116.482, 808.647, 71.09, 0.22", "-116.993, 809.589, 71.3987, 0.81", "-117.026, 809.642, 71.414, 0.81", "-117.454, 810.233, 71.5291, 0.96", "-117.523, 810.322, 71.5402, 0.96", "-117.861, 810.761, 71.5687, 0.96", "-118.361, 811.427, 71.5754, 0.44", "-118.727, 811.981, 71.5701, 0.44", "-119.259, 812.869, 71.5705, 0.22", "-119.747, 813.766, 71.5909, 0.37", "-120.203, 814.651, 71.6372, 0.37", "-120.581, 815.413, 71.7171, 0.37", "-121.029, 816.309, 71.8831, 0.22", "-121.062, 816.374, 71.9004, 0.22", "-121.35, 816.784, 72.0999, 0.22", "-121.438, 816.859, 72.1759, 0.22", "-122.238, 817.275, 72.9832, 0.15", "-122.679, 817.493, 73.4867, 0.44", "-122.718, 817.514, 73.5328, 0.44", "-123.746, 818.228, 74.7199, 0.88", "-124.433, 818.833, 75.4957, 0.88", "-124.604, 819.032, 75.7045, 0.88", "-125.248, 820.033, 76.5834, 0.37", "-125.53, 820.664, 77.023, 0.22", "-125.773, 821.385, 77.4508, 0.22", "-125.842, 821.798, 77.6621, 0.59", "-125.954, 822.922, 78.2402, 0.44", "-125.955, 823.004, 78.2936, 0.44", "-125.858, 823.724, 79.0025, 0.29", "-125.827, 823.785, 79.0866, 0.29", "-125.229, 824.198, 79.9042, 0.29", "-125.19, 824.216, 79.9518, 0.29", "-124.603, 824.53, 80.7216, 0.81", "-124.546, 824.576, 80.8108, 0.81", "-124.27, 824.967, 81.3931, 0.81", "-123.962, 825.764, 82.325, 0.29", "-123.75, 826.789, 83.3405, 0.29", "-123.559, 828.242, 84.5608, 0.52", "-123.505, 829.155, 85.2117, 1.33", "-123.493, 830.325, 85.9897, 0.22", "-123.531, 830.946, 86.3578, 0.74", "-123.55, 831.099, 86.4338, 0.74", "-123.624, 832.002, 86.7491, 0.37", "-123.614, 832.534, 86.8896, 1.03" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-110.101, 801.572, 61.3909, 0.22", "-110.985, 802.006, 61.0066, 0.22", "-111.551, 802.279, 60.7545, 0.15", "-112.279, 802.627, 60.4043, 0.15", "-113.154, 803.045, 59.9831, 0.52", "-113.537, 803.227, 59.799, 0.52", "-114.072, 803.482, 59.5418, 0.52", "-114.229, 803.554, 59.4681, 0.52", "-115.133, 803.944, 59.0512, 0.22" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-83.2281, 805.723, 60.991, 0.22", "-82.1021, 804.751, 61.203, 0.22", "-81.7711, 804.424, 61.2615, 0.29", "-81.1604, 803.74, 61.3552, 0.22", "-80.6616, 803.18, 61.4317, 0.44", "-80.18, 802.64, 61.5056, 0.22", "-80.1452, 802.602, 61.5109, 0.22", "-80.0061, 802.328, 61.5484, 0.44", "-79.894, 802.036, 61.5646, 0.44" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-83.2281, 805.723, 60.991, 0.29", "-83.2427, 806.289, 61.168, 0.29", "-83.2875, 807.575, 61.7061, 0.29", "-83.3345, 808.882, 62.3278, 0.29", "-83.3364, 809.001, 62.3891, 0.29", "-83.3056, 810.182, 63.0629, 0.29", "-83.2923, 810.403, 63.1983, 0.81", "-83.1814, 811.477, 63.9116, 0.66", "-83.1729, 811.527, 63.9465, 0.66", "-83.0498, 812.124, 64.3882, 0.52", "-82.7036, 813.683, 65.4977, 0.29", "-82.5083, 814.685, 66.2316, 0.29", "-82.419, 815.234, 66.6073, 1.33", "-82.3206, 815.92, 67.0398, 1.55", "-82.3124, 815.994, 67.0848, 1.55", "-82.27, 816.843, 67.6252, 1.25", "-82.2423, 818.606, 68.7433, 0.37", "-82.255, 819.65, 69.4131, 0.29", "-82.2576, 819.721, 69.4598, 0.29", "-82.324, 820.84, 70.22, 0.29", "-82.4529, 822.829, 71.5882, 1.84" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-123.614, 832.534, 86.8896, 0.44", "-123.246, 831.58, 86.7798, 0.44", "-122.919, 830.73, 86.6821, 0.37", "-122.692, 830.14, 86.6143, 0.22", "-122.673, 830.089, 86.6084, 0.22", "-122.305, 829.135, 86.4986, 0.22", "-122.286, 829.084, 86.4928, 0.22", "-120.384, 821.589, 86.8337, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-123.614, 832.534, 86.8896, 0.74", "-123.834, 833.054, 86.8521, 0.74", "-124.055, 833.78, 86.8402, 0.22", "-124.072, 833.839, 86.8382, 0.22", "-124.252, 834.453, 86.839, 0.22", "-124.309, 834.643, 86.8428, 0.22", "-124.489, 835.252, 86.8709, 0.22", "-124.73, 836.056, 86.9343, 1.4", "-125.036, 837.125, 87.0894, 0.29", "-125.238, 837.818, 87.2407, 0.29", "-125.262, 837.898, 87.2637, 0.29", "-125.512, 838.658, 87.5197, 0.29", "-125.532, 838.711, 87.5412, 0.29", "-125.897, 839.559, 87.9738, 0.81", "-126.118, 840.054, 88.2826, 1.11", "-126.139, 840.102, 88.3129, 1.11", "-126.412, 840.72, 88.6758, 1.11", "-126.45, 840.804, 88.7225, 1.11", "-126.65, 841.215, 88.9057, 1.11", "-126.674, 841.258, 88.9231, 1.11", "-126.974, 841.801, 89.1274, 0.22", "-127.296, 842.37, 89.3422, 0.29", "-127.326, 842.42, 89.3611, 0.29", "-127.644, 842.955, 89.5443, 0.22", "-128.211, 843.864, 89.8225, 0.81", "-131.931, 851.462, 91.4058, 0.81" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-82.4529, 822.829, 71.5882, 1.84", "-81.8165, 823.381, 71.8922, 1.84" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-82.4529, 822.829, 71.5882, 0.22", "-82.4812, 824.478, 71.4943, 0.22", "-82.5049, 825.363, 71.474, 0.22", "-82.5068, 825.414, 71.4737, 0.22", "-82.5577, 826.458, 71.4842, 0.59", "-82.615, 827.525, 71.5072, 0.22", "-82.6603, 828.328, 71.5361, 0.66", "-82.6665, 828.388, 71.5497, 0.66", "-82.6847, 828.569, 71.6061, 0.66", "-82.7639, 829.277, 71.8688, 0.15", "-82.7714, 829.331, 71.8933, 0.15", "-82.8502, 829.804, 72.1378, 1.18", "-83.0256, 830.899, 72.8022, 0.29", "-83.0792, 831.237, 73.0219, 0.52", "-83.0869, 831.286, 73.0573, 0.52", "-83.1199, 831.482, 73.2281, 0.52" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-81.8165, 823.381, 71.8922, 0.15", "-82.0678, 825.18, 72.8117, 0.15", "-82.1816, 826.074, 73.237, 0.15", "-82.2594, 826.684, 73.5275, 0.29", "-82.2868, 826.9, 73.6303, 0.29", "-82.3563, 827.445, 73.8898, 0.15", "-82.4107, 827.873, 74.0934, 0.29", "-82.4155, 827.987, 74.1162, 0.29" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-81.8165, 823.381, 71.8922, 0.29", "-81.2835, 821.656, 72.8944, 0.29", "-81.1326, 821.075, 73.2308, 0.29", "-80.9023, 820.089, 73.7812, 0.22", "-80.814, 819.756, 73.9746, 0.52", "-80.4528, 818.426, 74.7518, 0.22", "-80.4383, 818.366, 74.7867, 0.22", "-80.3546, 817.902, 75.0315, 0.88", "-80.3114, 817.607, 75.2163, 1.03", "-80.2076, 816.033, 76.2772, 0.22", "-80.2083, 815.949, 76.3287, 0.22", "-80.2879, 814.42, 77.2479, 0.22", "-80.2934, 814.36, 77.2851, 0.22", "-80.3857, 812.99, 78.1583, 0.22", "-80.4452, 812.102, 78.7424, 0.22", "-80.5379, 811.061, 79.509, 0.22", "-80.5741, 809.792, 80.5641, 0.29", "-80.5638, 809.705, 80.6473, 0.29", "-80.1338, 808.406, 81.9798, 0.15", "-80.1088, 808.361, 82.03, 0.15", "-79.2207, 807.294, 83.3313, 0.96", "-78.9264, 807.015, 83.6974, 0.96", "-77.8435, 806.066, 84.9009, 0.22", "-76.9442, 805.307, 85.8594, 0.22", "-76.8989, 805.272, 85.9047, 0.22", "-75.9784, 804.591, 86.7384, 0.22", "-74.4531, 803.573, 87.8835, 0.22", "-73.7972, 803.112, 88.3924, 0.74" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-82.4155, 827.987, 74.1162, 0.37", "-82.6543, 829.168, 74.5615, 0.37", "-82.6649, 829.236, 74.5842, 0.37", "-82.7224, 829.648, 74.7016, 0.22", "-82.821, 830.566, 74.9105, 0.22", "-82.8713, 831.054, 75.0001, 0.66", "-82.8796, 831.135, 75.0149, 0.66", "-82.9209, 831.993, 75.1245, 0.52", "-82.9593, 832.733, 75.2103, 0.52", "-83.0134, 833.621, 75.2907, 1.33", "-83.0636, 834.364, 75.3344, 1.47" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-82.4155, 827.987, 74.1162, 0.29", "-82.1392, 827.965, 75.2304, 0.29", "-82.1234, 827.97, 75.2901, 0.29", "-81.6589, 828.164, 77.023, 0.66", "-81.3631, 828.314, 78.1436, 0.15", "-81.2062, 828.397, 78.723, 0.88", "-81.0133, 828.48, 79.3337, 0.88", "-80.7098, 828.616, 80.2573, 0.22", "-80.6867, 828.625, 80.314, 0.22", "-80.3108, 828.75, 80.9869, 0.81", "-80.1449, 828.84, 81.2692, 0.81", "-79.6003, 829.187, 82.1851, 0.22", "-79.4454, 829.279, 82.431, 0.96", "-79.4069, 829.302, 82.4881, 0.96", "-79.0704, 829.517, 82.9457, 0.52", "-78.5292, 829.858, 83.7378, 0.22", "-78.4792, 829.89, 83.8231, 0.22", "-78.3426, 829.975, 84.1022, 0.22", "-78.3014, 829.994, 84.1881, 0.22", "-77.912, 830.135, 85.0067, 0.66", "-77.3517, 830.292, 86.1867, 0.15", "-77.3249, 830.297, 86.2422, 0.15", "-76.9283, 830.354, 86.978, 0.15", "-76.646, 830.387, 87.5162, 0.74", "-76.5649, 830.397, 87.6716, 0.74", "-76.3279, 830.438, 88.1276, 0.74", "-76.2921, 830.443, 88.19, 0.74", "-75.7396, 830.511, 89.1528, 0.22", "-74.9614, 830.554, 90.5248, 0.66", "-74.773, 830.554, 90.8667, 0.66", "-74.7335, 830.552, 90.9398, 0.66", "-74.4239, 830.517, 91.5365, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-83.0636, 834.364, 75.3344, 0.44", "-83.7586, 835.726, 76.0052, 0.44", "-84.1872, 836.676, 76.568, 0.29", "-84.5764, 837.611, 77.1622, 0.29", "-85.1262, 839.086, 78.1251, 0.81", "-85.2977, 839.611, 78.4708, 1.18", "-85.3722, 839.862, 78.636, 1.18", "-85.6162, 841.278, 79.6244, 0.15", "-85.6263, 841.43, 79.742, 0.15", "-85.5987, 841.886, 80.1111, 0.66", "-85.5264, 842.309, 80.3982, 0.96", "-85.5204, 842.383, 80.4446, 0.96", "-85.5403, 842.627, 80.597, 0.96", "-85.708, 843.444, 81.1979, 0.29", "-85.7437, 843.586, 81.3153, 0.29", "-85.9093, 844.185, 81.8543, 0.29", "-86.2135, 845.243, 82.8408, 0.37", "-86.4618, 846.083, 83.6295, 0.52", "-86.8555, 847.355, 84.8436, 0.96", "-86.8755, 847.427, 84.9107, 0.96", "-87.0279, 848.144, 85.5649, 1.18", "-87.0541, 848.373, 85.7568, 1.18", "-87.0418, 848.783, 86.0054, 1.18", "-87.0311, 848.902, 86.0587, 1.18", "-86.9469, 850.006, 86.4371, 1.33", "-86.9395, 850.1, 86.4675, 1.33", "-86.8814, 850.808, 86.679, 1.25", "-86.7144, 852.755, 87.2446, 0.22", "-86.6299, 853.939, 87.5645, 0.22", "-86.6061, 854.563, 87.7173, 0.59", "-86.6026, 854.699, 87.7491, 0.59", "-86.5955, 855.059, 87.8314, 0.59", "-86.5942, 856.125, 88.0558, 0.22", "-86.6528, 856.94, 88.1716, 0.96", "-86.7795, 857.922, 88.2821, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-83.0636, 834.364, 75.3344, 0.15", "-82.4475, 837.267, 75.7675, 0.15", "-82.433, 837.383, 75.7812, 0.15", "-82.3655, 837.973, 75.8607, 0.15", "-82.358, 838.066, 75.8724, 0.15", "-82.3223, 838.697, 75.9316, 0.59", "-82.3073, 839.106, 75.9654, 0.59", "-82.3363, 841.645, 76.1327, 0.22", "-82.3659, 842.651, 76.1846, 1.25", "-82.3965, 843.362, 76.2305, 0.88", "-82.5043, 845.203, 76.3662, 0.15", "-82.5679, 845.979, 76.4264, 0.15", "-82.6631, 846.83, 76.4889, 0.74", "-82.7488, 847.405, 76.5311, 1.11", "-82.9671, 848.702, 76.6084, 0.15", "-83.083, 849.38, 76.6537, 0.96", "-83.2428, 850.2, 76.7072, 1.18", "-83.7087, 852.517, 76.8138, 0.15", "-83.7306, 852.62, 76.8168, 0.15", "-83.9626, 853.697, 76.8189, 0.15", "-83.9797, 853.775, 76.8163, 0.15", "-84.1168, 854.437, 76.8099, 0.52", "-84.1502, 854.595, 76.8119, 0.52", "-84.2191, 854.933, 76.8179, 0.52", "-84.231, 855.0, 76.8197, 0.52", "-84.4087, 856.123, 76.8653, 0.22", "-84.5331, 856.939, 76.8983, 1.11", "-84.6602, 857.698, 76.9501, 0.81", "-85.0159, 859.692, 77.1197, 0.15", "-85.4148, 861.803, 77.33, 0.15", "-85.5573, 862.509, 77.4244, 1.03", "-85.7364, 863.291, 77.5628, 0.81", "-86.1685, 864.964, 77.9475, 0.22", "-86.1872, 865.027, 77.9658, 0.22", "-86.5623, 866.063, 78.3607, 0.52", "-86.9649, 867.028, 78.7902, 0.22", "-87.3351, 867.889, 79.1837, 0.74", "-87.5456, 868.377, 79.409, 0.74", "-87.5752, 868.445, 79.4398, 0.74", "-88.1543, 869.87, 80.0617, 0.22", "-88.177, 869.93, 80.0871, 0.22", "-88.5247, 871.073, 80.5116, 0.66", "-88.6211, 871.472, 80.6509, 0.66", "-88.633, 871.536, 80.6726, 0.66", "-88.7112, 872.269, 80.9198, 0.22", "-88.7567, 873.457, 81.4173, 1.4", "-88.7588, 874.845, 82.0605, 0.15", "-88.7535, 875.002, 82.1385, 0.15", "-88.7188, 875.8, 82.5599, 0.15", "-88.6605, 877.015, 83.2167, 0.15", "-88.5446, 879.145, 84.4042, 0.15", "-88.475, 880.259, 85.077, 1.33", "-88.4642, 880.704, 85.3805, 1.47", "-88.4107, 882.4, 86.4846, 0.22", "-88.4048, 882.596, 86.6058, 0.44", "-88.4016, 882.657, 86.6373, 0.44", "-88.2263, 883.721, 86.9082, 0.22", "-88.1304, 885.059, 87.3633, 0.88", "-88.2221, 887.095, 88.1799, 0.59", "-88.2657, 887.466, 88.3725, 0.37", "-88.4176, 888.441, 88.9732, 0.15", "-88.6719, 889.822, 89.9166, 1.62", "-89.2682, 892.915, 92.2407, 0.88", "-89.4032, 893.543, 92.7739, 1.25", "-89.6958, 894.644, 93.8472, 0.15", "-89.7938, 895.015, 94.2283, 0.66", "-89.8076, 895.08, 94.2962, 0.66", "-89.9259, 896.236, 95.3922, 0.22", "-89.8832, 896.879, 95.8143, 0.88", "-89.8666, 897.143, 95.974, 0.88", "-89.864, 897.236, 96.0247, 0.88", "-89.8572, 899.035, 96.9708, 0.22", "-89.8596, 899.682, 97.2986, 0.66", "-89.8951, 901.349, 98.0872, 0.15", "-89.9191, 902.181, 98.4644, 0.15", "-89.922, 902.247, 98.4927, 0.15", "-89.9617, 902.799, 98.7039, 0.44", "-90.0465, 903.525, 98.9222, 0.22", "-90.1468, 904.166, 99.0578, 0.52", "-90.172, 904.257, 99.0579, 0.52", "-90.2967, 904.586, 99.0337, 0.52", "-90.4657, 904.971, 98.9884, 0.37", "-90.5137, 905.051, 98.9694, 0.37", "-90.8131, 905.384, 98.8176, 0.22", "-91.3497, 905.879, 98.5243, 0.44" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-86.7795, 857.922, 88.2821, 0.22", "-86.8568, 858.952, 88.8014, 0.22", "-86.9008, 859.474, 89.0743, 0.52", "-87.0182, 860.782, 89.7732, 0.29", "-87.0754, 861.39, 90.1044, 0.88", "-87.1066, 861.851, 90.3452, 1.18", "-87.1244, 862.181, 90.5072, 1.18", "-87.1278, 862.352, 90.5824, 1.18", "-87.1278, 862.352, 90.5824, 1.18", "-87.1266, 862.396, 90.5964, 1.18", "-87.0991, 863.266, 90.852, 0.22", "-87.0528, 863.794, 91.0482, 0.44", "-86.9676, 864.556, 91.3779, 0.59", "-86.9054, 864.917, 91.5566, 1.11", "-86.825, 865.282, 91.7548, 1.11", "-86.8146, 865.321, 91.7781, 1.11", "-86.3839, 866.52, 92.6239, 0.22", "-86.3633, 866.56, 92.6551, 0.22", "-86.0467, 867.085, 93.0664, 0.22", "-85.876, 867.371, 93.2974, 0.74", "-85.8526, 867.412, 93.3297, 0.74", "-85.6724, 867.756, 93.5954, 0.52", "-85.4201, 868.358, 94.0157, 0.22", "-85.2799, 868.86, 94.3846, 0.74", "-85.1514, 869.74, 95.0642, 1.25", "-85.1487, 869.798, 95.1085, 1.25", "-85.1577, 870.004, 95.2624, 1.11", "-85.2133, 870.444, 95.6273, 0.52", "-85.3018, 871.089, 96.22, 0.15", "-85.3053, 871.128, 96.261, 0.15", "-85.2547, 871.428, 96.6782, 0.15", "-85.2342, 871.471, 96.7592, 0.15", "-84.9587, 871.888, 97.7997, 0.44", "-84.8395, 872.028, 98.2205, 0.66", "-84.8224, 872.042, 98.2708, 0.66", "-84.3931, 872.361, 99.5017, 0.22", "-84.3746, 872.372, 99.5531, 0.22", "-83.9292, 872.657, 100.845, 1.33", "-83.8825, 872.695, 101.012, 1.62" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-86.7795, 857.922, 88.2821, 0.15", "-86.028, 858.822, 88.9598, 0.15", "-85.7686, 859.124, 89.209, 0.15", "-85.7089, 859.191, 89.2682, 0.15", "-85.4241, 859.497, 89.5543, 0.44", "-85.3614, 859.562, 89.6185, 0.44", "-84.9501, 859.976, 90.0394, 0.22", "-84.7446, 860.18, 90.2629, 0.44", "-84.4585, 860.421, 90.5594, 0.15", "-84.4277, 860.445, 90.5904, 0.15", "-84.1169, 860.663, 90.8948, 0.66", "-84.0846, 860.684, 90.9254, 0.66", "-83.6485, 860.943, 91.3255, 0.22", "-83.288, 861.159, 91.6441, 0.88", "-83.2488, 861.182, 91.6781, 0.88", "-83.143, 861.242, 91.7689, 1.11", "-83.0718, 861.279, 91.8277, 1.11" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-83.8825, 872.695, 101.012, 0.29", "-84.2817, 874.07, 102.496, 0.29", "-84.2887, 874.128, 102.554, 0.29", "-84.3057, 874.955, 103.363, 0.29", "-84.2947, 875.05, 103.454, 0.29", "-84.1896, 875.705, 104.045, 0.74", "-84.1796, 875.758, 104.092, 0.74", "-84.0771, 876.415, 104.671, 0.74", "-84.0698, 876.53, 104.789, 0.74", "-84.0434, 877.258, 105.594, 0.15", "-84.0269, 877.595, 105.975, 0.15", "-84.0266, 877.641, 106.026, 0.15", "-84.0468, 879.174, 107.72, 0.15", "-84.0796, 879.686, 108.255, 1.11", "-84.1265, 880.196, 108.739, 1.25", "-84.2469, 881.399, 109.815, 0.22", "-84.2994, 882.118, 110.427, 0.22", "-84.3025, 882.172, 110.467, 0.22", "-84.294, 882.987, 110.922, 0.29", "-84.2924, 883.811, 111.326, 0.74", "-84.2941, 884.391, 111.61, 1.11", "-84.291, 884.464, 111.647, 1.11", "-84.1757, 885.262, 112.08, 0.66", "-83.9795, 886.249, 112.632, 0.22", "-83.7993, 886.837, 112.987, 0.15", "-83.5184, 887.544, 113.436, 1.11", "-83.234, 888.2, 113.842, 1.69", "-83.208, 888.252, 113.878, 1.69" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-83.8825, 872.695, 101.012, 0.29", "-84.9584, 873.513, 101.203, 0.29", "-85.2464, 873.728, 101.246, 0.29", "-86.0564, 874.311, 101.371, 0.15", "-86.2299, 874.433, 101.399, 0.15", "-86.7885, 874.838, 101.493, 0.29", "-87.6505, 875.475, 101.641, 0.15", "-87.7559, 875.558, 101.655, 0.15", "-88.6174, 876.321, 101.756, 0.15", "-88.6945, 876.406, 101.762, 0.15", "-89.1634, 876.999, 101.789, 0.15", "-89.2753, 877.176, 101.79, 0.15", "-89.929, 878.377, 101.752, 0.15", "-89.975, 878.472, 101.747, 0.15", "-90.4207, 879.632, 101.63, 0.15", "-90.4464, 879.705, 101.621, 0.15", "-90.6286, 880.319, 101.522, 0.37" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-83.208, 888.252, 113.878, 0.52", "-83.984, 889.376, 115.105, 0.52", "-84.7857, 890.459, 116.158, 0.29", "-85.0639, 890.855, 116.459, 0.96", "-85.404, 891.345, 116.793, 1.11", "-85.4636, 891.427, 116.847, 1.11", "-85.9813, 892.12, 117.307, 0.81", "-86.5468, 892.877, 117.726, 1.11", "-87.2684, 893.961, 118.271, 0.37", "-87.2961, 894.005, 118.295, 0.37", "-87.8268, 895.024, 118.865, 0.29", "-87.8494, 895.077, 118.899, 0.29", "-88.0434, 895.741, 119.496, 0.81", "-88.1044, 896.078, 119.89, 1.03", "-88.1098, 896.118, 119.945, 1.03", "-88.1457, 896.476, 120.435, 0.96", "-88.2015, 897.38, 121.674, 0.66", "-88.2508, 898.282, 122.872, 0.52", "-88.3053, 899.025, 123.807, 0.44", "-88.3458, 899.423, 124.268, 0.44", "-88.3937, 899.764, 124.703, 0.37", "-88.406, 899.856, 124.832, 0.37", "-88.4438, 900.462, 125.756, 0.37", "-88.4817, 901.063, 126.648, 0.22", "-88.5166, 901.842, 127.881, 1.4", "-88.5816, 902.889, 129.714, 0.29", "-88.6092, 903.184, 130.303, 0.96", "-88.6372, 903.389, 130.789, 0.96", "-89.1408, 908.886, 138.721, 0.96" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-83.208, 888.252, 113.878, 0.22", "-84.2058, 889.748, 113.857, 0.22", "-85.0904, 891.075, 113.839, 0.22", "-85.1805, 891.21, 113.838, 0.22", "-85.9559, 892.373, 113.822, 0.22", "-91.2659, 901.41, 115.385, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_75", "dend_70", "dend_21", "dend_0", "dend_74", "dend_71", "dend_25", "dend_22", "dend_14", "dend_1", "dend_73", "dend_72", "dend_27", "dend_26", "dend_24", "dend_23", "dend_18", "dend_15", "dend_7", "dend_2", "dend_67", "dend_28", "dend_20", "dend_19", "dend_17", "dend_16", "dend_13", "dend_8", "dend_4", "dend_3", "dend_69", "dend_68", "dend_66", "dend_29", "dend_12", "dend_9", "dend_6", "dend_5", "dend_61", "dend_30", "dend_11", "dend_10", "dend_63", "dend_62", "dend_52", "dend_31", "dend_65", "dend_64", "dend_60", "dend_53", "dend_33", "dend_32", "dend_55", "dend_54", "dend_51", "dend_34", "dend_57", "dend_56", "dend_50", "dend_35", "dend_59", "dend_58", "dend_37", "dend_36", "dend_39", "dend_38", "dend_41", "dend_40", "dend_43", "dend_42", "dend_45", "dend_44", "dend_47", "dend_46", "dend_49", "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bAC217_L5_DBC_7f0bb8efe9_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_75, id: dend_75, parent: soma_0
create dend_75
public dend_75
// Section: dend_70, id: dend_70, parent: soma_0
create dend_70
public dend_70
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_74, id: dend_74, parent: dend_70
create dend_74
public dend_74
// Section: dend_71, id: dend_71, parent: dend_70
create dend_71
public dend_71
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_14
create dend_18
public dend_18
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_1
create dend_7
public dend_7
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_67, id: dend_67, parent: dend_27
create dend_67
public dend_67
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_7
create dend_13
public dend_13
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_66, id: dend_66, parent: dend_28
create dend_66
public dend_66
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_12, id: dend_12, parent: dend_8
create dend_12
public dend_12
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_61, id: dend_61, parent: dend_29
create dend_61
public dend_61
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_52, id: dend_52, parent: dend_30
create dend_52
public dend_52
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_52
create dend_60
public dend_60
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_33
create dend_51
public dend_51
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_50, id: dend_50, parent: dend_34
create dend_50
public dend_50
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_78
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_75(0), soma_0(0.4999985130312626)
    connect dend_70(0), soma_0(0.4999985130312626)
    connect dend_21(0), soma_0(0.4999985130312626)
    connect dend_0(0), soma_0(0.4999985130312626)
    connect axon_0(0), soma_0(1.0)
    connect dend_74(0), dend_70(1.0)
    connect dend_71(0), dend_70(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_67(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_13(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_66(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_12(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_61(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_52(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_51(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_50(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -4.28115, -11.0873, 1.6054, 2.71903 ) }
    soma_0 { pt3dadd( -3.90555, -10.0189, 1.46271, 4.54351 ) }
    soma_0 { pt3dadd( -3.52995, -8.95054, 1.32001, 6.06676 ) }
    soma_0 { pt3dadd( -3.15435, -7.88215, 1.17732, 7.70089 ) }
    soma_0 { pt3dadd( -2.77875, -6.81375, 1.03462, 9.50221 ) }
    soma_0 { pt3dadd( -2.40315, -5.74536, 0.891931, 11.4189 ) }
    soma_0 { pt3dadd( -2.02755, -4.67696, 0.749237, 12.8756 ) }
    soma_0 { pt3dadd( -1.65195, -3.60857, 0.606544, 14.0093 ) }
    soma_0 { pt3dadd( -1.27635, -2.54017, 0.46385, 14.551 ) }
    soma_0 { pt3dadd( -0.900746, -1.47178, 0.321156, 14.6039 ) }
    soma_0 { pt3dadd( -0.525145, -0.403386, 0.178462, 14.3615 ) }
    soma_0 { pt3dadd( -0.149545, 0.665008, 0.0357687, 13.9828 ) }
    soma_0 { pt3dadd( 0.226055, 1.7334, -0.106925, 13.3923 ) }
    soma_0 { pt3dadd( 0.601655, 2.8018, -0.249619, 12.9274 ) }
    soma_0 { pt3dadd( 0.977256, 3.87019, -0.392313, 12.1033 ) }
    soma_0 { pt3dadd( 1.35286, 4.93859, -0.535006, 10.4725 ) }
    soma_0 { pt3dadd( 1.72846, 6.00698, -0.6777, 8.96565 ) }
    soma_0 { pt3dadd( 2.10406, 7.07537, -0.820394, 7.72714 ) }
    soma_0 { pt3dadd( 2.47966, 8.14377, -0.963088, 6.28127 ) }
    soma_0 { pt3dadd( 2.85526, 9.21216, -1.10578, 4.62664 ) }
    soma_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 2.72659 ) }
    // Section: dend_75, id: dend_75, parent: soma_0 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -6.8285, -4.03579, -7.44048, 0.74 ) }
    dend_75 { pt3dadd( -7.33358, -5.1251, -7.60388, 0.74 ) }
    dend_75 { pt3dadd( -7.37874, -5.18553, -7.61316, 0.74 ) }
    dend_75 { pt3dadd( -8.3237, -6.01746, -7.73811, 0.66 ) }
    dend_75 { pt3dadd( -9.27997, -6.60471, -7.81972, 0.44 ) }
    dend_75 { pt3dadd( -10.4166, -7.12518, -7.88152, 0.44 ) }
    dend_75 { pt3dadd( -11.5125, -7.42444, -8.03569, 0.44 ) }
    dend_75 { pt3dadd( -12.2305, -7.54562, -8.17414, 1.03 ) }
    dend_75 { pt3dadd( -13.1327, -7.67607, -8.43393, 1.33 ) }
    dend_75 { pt3dadd( -13.9443, -7.75302, -8.73149, 1.47 ) }
    dend_75 { pt3dadd( -14.7535, -7.84416, -9.12917, 0.66 ) }
    dend_75 { pt3dadd( -16.2968, -8.33325, -10.393, 0.37 ) }
    dend_75 { pt3dadd( -16.6313, -8.60009, -10.9213, 0.37 ) }
    dend_75 { pt3dadd( -17.0784, -9.23012, -12.0178, 1.11 ) }
    dend_75 { pt3dadd( -17.0981, -9.27499, -12.0899, 1.11 ) }
    dend_75 { pt3dadd( -17.208, -9.67991, -12.6823, 0.88 ) }
    dend_75 { pt3dadd( -17.3495, -10.5916, -13.8882, 0.59 ) }
    dend_75 { pt3dadd( -17.4827, -11.8154, -15.3082, 1.03 ) }
    dend_75 { pt3dadd( -17.5061, -12.0259, -15.5663, 1.25 ) }
    dend_75 { pt3dadd( -17.5178, -12.0991, -15.6535, 1.25 ) }
    dend_75 { pt3dadd( -17.5838, -12.4214, -16.0373, 1.25 ) }
    dend_75 { pt3dadd( -17.6119, -12.5087, -16.1454, 1.25 ) }
    dend_75 { pt3dadd( -18.0302, -13.3788, -17.1722, 0.52 ) }
    dend_75 { pt3dadd( -18.5147, -14.0427, -17.936, 0.22 ) }
    dend_75 { pt3dadd( -18.8419, -14.2857, -18.2906, 0.22 ) }
    dend_75 { pt3dadd( -19.0778, -14.3898, -18.48, 0.22 ) }
    dend_75 { pt3dadd( -19.6611, -14.5572, -18.8528, 0.88 ) }
    dend_75 { pt3dadd( -20.0595, -14.6656, -19.059, 1.25 ) }
    dend_75 { pt3dadd( -20.6743, -14.8495, -19.3326, 1.25 ) }
    dend_75 { pt3dadd( -21.95, -15.3505, -19.9997, 0.29 ) }
    dend_75 { pt3dadd( -22.3077, -15.554, -20.2425, 0.29 ) }
    dend_75 { pt3dadd( -22.8265, -15.9826, -20.6797, 0.29 ) }
    dend_75 { pt3dadd( -23.383, -16.6012, -21.2289, 0.29 ) }
    dend_75 { pt3dadd( -23.9211, -17.3153, -21.8305, 0.29 ) }
    dend_75 { pt3dadd( -24.4212, -18.0857, -22.4365, 0.52 ) }
    dend_75 { pt3dadd( -24.6122, -18.4282, -22.6818, 0.52 ) }
    dend_75 { pt3dadd( -24.7829, -18.6986, -22.8789, 0.29 ) }
    dend_75 { pt3dadd( -25.0537, -19.0616, -23.2493, 0.29 ) }
    dend_75 { pt3dadd( -25.3994, -19.4478, -23.7594, 1.25 ) }
    dend_75 { pt3dadd( -25.6509, -19.6911, -24.1146, 1.47 ) }
    dend_75 { pt3dadd( -25.6903, -19.7279, -24.1721, 1.47 ) }
    dend_75 { pt3dadd( -25.8802, -19.9132, -24.4796, 1.47 ) }
    dend_75 { pt3dadd( -26.9777, -21.0653, -26.5272, 0.22 ) }
    dend_75 { pt3dadd( -27.1483, -21.2735, -26.8968, 0.81 ) }
    dend_75 { pt3dadd( -27.3556, -21.5404, -27.3547, 0.81 ) }
    dend_75 { pt3dadd( -27.3841, -21.574, -27.4164, 0.81 ) }
    dend_75 { pt3dadd( -27.6792, -21.868, -27.9804, 0.96 ) }
    dend_75 { pt3dadd( -28.3529, -22.4566, -29.2135, 0.29 ) }
    dend_75 { pt3dadd( -28.3972, -22.4883, -29.2846, 0.29 ) }
    dend_75 { pt3dadd( -28.656, -22.7143, -29.7518, 0.29 ) }
    dend_75 { pt3dadd( -29.3662, -23.5868, -31.2182, 1.92 ) }
    dend_75 { pt3dadd( -29.725, -24.1566, -32.0413, 2.58 ) }
    dend_75 { pt3dadd( -30.0627, -24.8133, -32.8928, 2.58 ) }
    dend_75 { pt3dadd( -30.0866, -24.8613, -32.947, 2.58 ) }
    dend_75 { pt3dadd( -30.7535, -26.1983, -34.3003, 0.66 ) }
    dend_75 { pt3dadd( -31.2786, -27.1136, -35.1449, 0.22 ) }
    dend_75 { pt3dadd( -31.3899, -27.2758, -35.2687, 0.81 ) }
    dend_75 { pt3dadd( -32.0594, -28.0954, -35.8814, 0.22 ) }
    dend_75 { pt3dadd( -32.8709, -28.9853, -36.5223, 2.58 ) }
    dend_75 { pt3dadd( -33.2601, -29.3692, -36.8125, 3.32 ) }
    dend_75 { pt3dadd( -34.7509, -30.6962, -37.8595, 0.44 ) }
    dend_75 { pt3dadd( -35.5294, -31.3895, -38.419, 1.33 ) }
    dend_75 { pt3dadd( -36.126, -31.9793, -38.867, 1.47 ) }
    dend_75 { pt3dadd( -36.7615, -32.7675, -39.4403, 0.22 ) }
    dend_75 { pt3dadd( -36.826, -32.8667, -39.5148, 0.22 ) }
    dend_75 { pt3dadd( -37.2105, -33.5094, -39.9929, 0.22 ) }
    dend_75 { pt3dadd( -37.5802, -34.2262, -40.4838, 1.69 ) }
    dend_75 { pt3dadd( -37.7228, -34.483, -40.6602, 2.06 ) }
    dend_75 { pt3dadd( -38.7813, -36.0347, -41.9069, 0.22 ) }
    dend_75 { pt3dadd( -38.82, -36.0817, -41.9515, 0.22 ) }
    dend_75 { pt3dadd( -39.3015, -36.655, -42.5546, 0.22 ) }
    dend_75 { pt3dadd( -39.5455, -36.9418, -42.8813, 0.88 ) }
    dend_75 { pt3dadd( -39.7802, -37.2636, -43.2949, 1.11 ) }
    dend_75 { pt3dadd( -40.746, -38.7297, -45.2047, 0.22 ) }
    dend_75 { pt3dadd( -40.7736, -38.7786, -45.2712, 0.22 ) }
    dend_75 { pt3dadd( -41.0971, -39.4279, -46.1772, 1.84 ) }
    dend_75 { pt3dadd( -41.2346, -39.7596, -46.6384, 1.99 ) }
    dend_75 { pt3dadd( -41.8143, -41.3299, -48.7268, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_75 { pt3dadd( -41.9857, -41.7944, -49.2866, 0.29 ) }
    dend_75 { pt3dadd( -42.5759, -43.1023, -50.6888, 0.29 ) }
    dend_75 { pt3dadd( -42.6455, -43.234, -50.8292, 0.29 ) }
    dend_75 { pt3dadd( -43.1132, -43.9544, -51.5906, 1.11 ) }
    dend_75 { pt3dadd( -43.3721, -44.2934, -51.977, 1.47 ) }
    dend_75 { pt3dadd( -44.055, -45.0701, -52.889, 0.29 ) }
    dend_75 { pt3dadd( -44.9796, -46.013, -54.0643, 2.43 ) }
    dend_75 { pt3dadd( -45.7344, -46.6813, -54.9247, 2.43 ) }
    dend_75 { pt3dadd( -46.9082, -47.602, -56.2141, 0.52 ) }
    dend_75 { pt3dadd( -47.792, -48.2102, -57.1614, 0.66 ) }
    dend_75 { pt3dadd( -48.5085, -48.6561, -57.9184, 0.22 ) }
    dend_75 { pt3dadd( -48.8797, -48.8617, -58.2877, 0.59 ) }
    dend_75 { pt3dadd( -49.2306, -49.0479, -58.6004, 0.59 ) }
    dend_75 { pt3dadd( -50.0604, -49.5233, -59.2622, 0.22 ) }
    dend_75 { pt3dadd( -50.6408, -49.9383, -59.718, 1.18 ) }
    dend_75 { pt3dadd( -50.8963, -50.1714, -59.9119, 1.33 ) }
    dend_75 { pt3dadd( -51.9092, -51.2897, -60.7909, 0.37 ) }
    dend_75 { pt3dadd( -52.5, -52.0423, -61.3557, 0.22 ) }
    dend_75 { pt3dadd( -52.9753, -52.7129, -61.8278, 0.22 ) }
    dend_75 { pt3dadd( -53.5161, -53.5609, -62.3731, 1.55 ) }
    dend_75 { pt3dadd( -53.8626, -54.1544, -62.7299, 2.06 ) }
    dend_75 { pt3dadd( -54.7459, -55.8185, -63.6802, 0.22 ) }
    dend_75 { pt3dadd( -54.9233, -56.1758, -63.8661, 0.52 ) }
    dend_75 { pt3dadd( -55.1094, -56.5005, -64.0354, 0.52 ) }
    dend_75 { pt3dadd( -55.6981, -57.4124, -64.5071, 0.22 ) }
    dend_75 { pt3dadd( -56.0325, -57.9067, -64.7539, 0.22 ) }
    dend_75 { pt3dadd( -56.4009, -58.4434, -65.0468, 1.11 ) }
    dend_75 { pt3dadd( -56.717, -58.8911, -65.2901, 1.33 ) }
    dend_75 { pt3dadd( -57.6678, -60.1636, -66.0553, 0.22 ) }
    dend_75 { pt3dadd( -58.0067, -60.5858, -66.3271, 1.03 ) }
    dend_75 { pt3dadd( -58.1985, -60.7999, -66.4766, 1.03 ) }
    dend_75 { pt3dadd( -59.2348, -61.9054, -67.2592, 0.22 ) }
    dend_75 { pt3dadd( -59.6124, -62.312, -67.5355, 0.22 ) }
    dend_75 { pt3dadd( -59.9372, -62.6667, -67.7662, 1.18 ) }
    dend_75 { pt3dadd( -60.2406, -62.986, -67.9689, 1.4 ) }
    dend_75 { pt3dadd( -61.4452, -64.2041, -68.8378, 0.22 ) }
    dend_75 { pt3dadd( -61.8413, -64.592, -69.1174, 1.11 ) }
    dend_75 { pt3dadd( -62.1382, -64.8761, -69.3192, 1.33 ) }
    dend_75 { pt3dadd( -62.3938, -65.1338, -69.5123, 1.18 ) }
    dend_75 { pt3dadd( -63.3805, -66.1911, -70.2971, 0.15 ) }
    dend_75 { pt3dadd( -64.2193, -67.1316, -70.9814, 0.15 ) }
    dend_75 { pt3dadd( -64.5416, -67.5033, -71.24, 0.81 ) }
    dend_75 { pt3dadd( -64.7386, -67.7365, -71.4279, 0.81 ) }
    dend_75 { pt3dadd( -65.5505, -68.7235, -72.2555, 0.22 ) }
    dend_75 { pt3dadd( -66.2147, -69.5611, -72.9536, 0.22 ) }
    dend_75 { pt3dadd( -66.8188, -70.3502, -73.6024, 1.47 ) }
    dend_75 { pt3dadd( -67.0815, -70.6801, -73.8933, 1.84 ) }
    dend_75 { pt3dadd( -68.5058, -72.4065, -75.671, 0.15 ) }
    dend_75 { pt3dadd( -68.8551, -72.7994, -76.1263, 0.15 ) }
    dend_75 { pt3dadd( -69.0696, -73.024, -76.4272, 0.74 ) }
    dend_75 { pt3dadd( -69.1721, -73.124, -76.575, 0.74 ) }
    dend_75 { pt3dadd( -69.9905, -73.8529, -77.7362, 0.29 ) }
    dend_75 { pt3dadd( -70.7236, -74.4589, -78.7318, 1.25 ) }
    dend_75 { pt3dadd( -71.0088, -74.6809, -79.0839, 1.33 ) }
    dend_75 { pt3dadd( -71.9297, -75.418, -80.4214, 0.15 ) }
    dend_75 { pt3dadd( -72.212, -75.651, -80.8668, 0.74 ) }
    dend_75 { pt3dadd( -72.8063, -76.1543, -81.8334, 0.22 ) }
    dend_75 { pt3dadd( -72.8377, -76.1816, -81.8835, 0.22 ) }
    dend_75 { pt3dadd( -73.0869, -76.3959, -82.2659, 0.88 ) }
    dend_75 { pt3dadd( -74.4982, -77.609, -84.4104, 0.22 ) }
    dend_75 { pt3dadd( -74.5444, -77.6487, -84.4759, 0.22 ) }
    dend_75 { pt3dadd( -74.6802, -77.7591, -84.6371, 0.22 ) }
    dend_75 { pt3dadd( -75.2842, -78.2229, -85.2033, 1.47 ) }
    dend_75 { pt3dadd( -75.5653, -78.4265, -85.4112, 1.84 ) }
    dend_75 { pt3dadd( -75.8131, -78.6033, -85.5498, 1.84 ) }
    dend_75 { pt3dadd( -76.1024, -78.8092, -85.6548, 1.84 ) }
    dend_75 { pt3dadd( -77.3666, -79.7906, -86.4302, 0.15 ) }
    dend_75 { pt3dadd( -77.4471, -79.8513, -86.4899, 0.15 ) }
    dend_75 { pt3dadd( -78.1021, -80.294, -87.0219, 0.15 ) }
    dend_75 { pt3dadd( -78.6636, -80.673, -87.4974, 0.96 ) }
    dend_75 { pt3dadd( -79.0067, -80.9189, -87.7996, 0.96 ) }
    dend_75 { pt3dadd( -80.7963, -82.2907, -89.4484, 0.22 ) }
    dend_75 { pt3dadd( -81.2564, -82.689, -89.9048, 0.22 ) }
    dend_75 { pt3dadd( -81.8271, -83.214, -90.4698, 0.22 ) }
    dend_75 { pt3dadd( -82.47, -83.8333, -91.0818, 1.11 ) }
    dend_75 { pt3dadd( -82.8963, -84.2683, -91.4734, 1.69 ) }
    dend_75 { pt3dadd( -83.0343, -84.4272, -91.5938, 1.69 ) }
    dend_75 { pt3dadd( -84.2163, -86.0217, -92.588, 0.22 ) }
    dend_75 { pt3dadd( -84.6297, -86.6506, -92.9698, 0.37 ) }
    dend_75 { pt3dadd( -85.0174, -87.2635, -93.344, 0.22 ) }
    dend_75 { pt3dadd( -85.5519, -88.0719, -93.8389, 1.47 ) }
    dend_75 { pt3dadd( -85.9342, -88.6096, -94.2079, 1.69 ) }
    dend_75 { pt3dadd( -86.9153, -89.9374, -95.1463, 0.22 ) }
    dend_75 { pt3dadd( -87.7429, -91.0895, -95.9464, 0.22 ) }
    dend_75 { pt3dadd( -88.1571, -91.6677, -96.3687, 1.4 ) }
    dend_75 { pt3dadd( -88.5517, -92.2167, -96.7834, 1.84 ) }
    dend_75 { pt3dadd( -89.8385, -93.9375, -98.1306, 0.15 ) }
    dend_75 { pt3dadd( -90.2931, -94.5135, -98.6085, 0.15 ) }
    dend_75 { pt3dadd( -90.7266, -95.0316, -99.0622, 1.18 ) }
    dend_75 { pt3dadd( -90.9632, -95.3127, -99.3181, 1.18 ) }
    dend_75 { pt3dadd( -90.9969, -95.354, -99.3549, 1.18 ) }
    dend_75 { pt3dadd( -92.0506, -96.746, -100.516, 0.22 ) }
    dend_75 { pt3dadd( -92.5373, -97.4694, -101.026, 1.25 ) }
    dend_75 { pt3dadd( -93.2308, -98.5107, -101.781, 0.15 ) }
    dend_75 { pt3dadd( -93.5145, -98.891, -102.079, 0.88 ) }
    dend_75 { pt3dadd( -93.6625, -99.0784, -102.225, 1.03 ) }
    dend_75 { pt3dadd( -94.1247, -99.6423, -102.654, 0.15 ) }
    dend_75 { pt3dadd( -94.6536, -100.262, -103.096, 0.15 ) }
    dend_75 { pt3dadd( -95.0831, -100.715, -103.459, 0.74 ) }
    dend_75 { pt3dadd( -95.9022, -101.501, -104.135, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_75 { pt3dadd( -96.6073, -102.181, -104.717, 0.22 ) }
    dend_75 { pt3dadd( -97.2393, -102.794, -105.237, 1.99 ) }
    dend_75 { pt3dadd( -97.5244, -103.08, -105.472, 2.28 ) }
    dend_75 { pt3dadd( -99.0997, -104.778, -106.758, 0.22 ) }
    dend_75 { pt3dadd( -99.3144, -105.045, -106.94, 0.52 ) }
    dend_75 { pt3dadd( -100.017, -105.991, -107.512, 0.15 ) }
    dend_75 { pt3dadd( -100.059, -106.046, -107.545, 0.15 ) }
    dend_75 { pt3dadd( -100.386, -106.457, -107.774, 0.81 ) }
    dend_75 { pt3dadd( -100.423, -106.505, -107.796, 0.81 ) }
    dend_75 { pt3dadd( -101.478, -107.835, -108.237, 0.22 ) }
    dend_75 { pt3dadd( -102.253, -108.818, -108.62, 0.22 ) }
    dend_75 { pt3dadd( -102.306, -108.881, -108.647, 0.22 ) }
    dend_75 { pt3dadd( -103.048, -109.82, -109.04, 0.22 ) }
    dend_75 { pt3dadd( -103.567, -110.483, -109.353, 0.81 ) }
    dend_75 { pt3dadd( -103.615, -110.548, -109.384, 0.81 ) }
    dend_75 { pt3dadd( -104.4, -111.719, -109.983, 0.22 ) }
    dend_75 { pt3dadd( -104.856, -112.408, -110.355, 1.47 ) }
    dend_75 { pt3dadd( -105.022, -112.653, -110.485, 1.77 ) }
    dend_75 { pt3dadd( -106.286, -114.474, -111.454, 0.22 ) }
    dend_75 { pt3dadd( -106.661, -114.978, -111.725, 0.52 ) }
    dend_75 { pt3dadd( -107.52, -116.062, -112.291, 0.22 ) }
    dend_75 { pt3dadd( -108.578, -117.308, -112.913, 0.22 ) }
    dend_75 { pt3dadd( -109.123, -117.927, -113.231, 1.18 ) }
    dend_75 { pt3dadd( -109.289, -118.114, -113.325, 1.4 ) }
    dend_75 { pt3dadd( -110.575, -119.592, -114.149, 0.15 ) }
    dend_75 { pt3dadd( -110.866, -119.936, -114.359, 0.66 ) }
    dend_75 { pt3dadd( -112.299, -121.692, -115.487, 0.15 ) }
    dend_75 { pt3dadd( -112.986, -122.563, -116.107, 1.69 ) }
    dend_75 { pt3dadd( -113.197, -122.835, -116.309, 1.84 ) }
    dend_75 { pt3dadd( -114.73, -124.887, -117.852, 0.22 ) }
    dend_75 { pt3dadd( -115.014, -125.292, -118.169, 0.66 ) }
    dend_75 { pt3dadd( -115.052, -125.353, -118.221, 0.66 ) }
    dend_75 { pt3dadd( -115.435, -125.984, -118.82, 0.15 ) }
    dend_75 { pt3dadd( -115.603, -126.241, -119.071, 0.59 ) }
    dend_75 { pt3dadd( -115.657, -126.319, -119.149, 0.59 ) }
    dend_75 { pt3dadd( -116.31, -127.229, -120.027, 0.22 ) }
    dend_75 { pt3dadd( -116.906, -128.034, -120.852, 1.33 ) }
    dend_75 { pt3dadd( -117.529, -128.894, -121.747, 0.15 ) }
    dend_75 { pt3dadd( -117.81, -129.31, -122.189, 0.88 ) }
    // Section: dend_70, id: dend_70, parent: soma_0 (entry count 39/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 4.2915, 5.40221, -8.94048, 1.18 ) }
    dend_70 { pt3dadd( 4.32579, 6.31484, -8.64175, 1.18 ) }
    dend_70 { pt3dadd( 4.37034, 7.5928, -8.25048, 1.47 ) }
    dend_70 { pt3dadd( 4.39687, 8.5873, -8.05487, 1.92 ) }
    dend_70 { pt3dadd( 4.41152, 9.93295, -7.93868, 0.81 ) }
    dend_70 { pt3dadd( 4.40705, 11.0505, -7.94048, 0.81 ) }
    dend_70 { pt3dadd( 4.39637, 11.7646, -7.99529, 0.74 ) }
    dend_70 { pt3dadd( 4.39072, 11.8813, -8.03011, 0.74 ) }
    dend_70 { pt3dadd( 4.26757, 13.2149, -8.72229, 0.74 ) }
    dend_70 { pt3dadd( 4.18757, 13.9486, -9.26835, 1.11 ) }
    dend_70 { pt3dadd( 4.14364, 14.3883, -9.69791, 1.11 ) }
    dend_70 { pt3dadd( 4.09875, 15.0279, -10.3983, 1.11 ) }
    dend_70 { pt3dadd( 4.08205, 16.2066, -11.6475, 1.25 ) }
    dend_70 { pt3dadd( 4.08329, 16.2498, -11.6914, 1.25 ) }
    dend_70 { pt3dadd( 4.18771, 17.3078, -12.7113, 1.03 ) }
    dend_70 { pt3dadd( 4.3731, 18.4806, -13.7794, 0.52 ) }
    dend_70 { pt3dadd( 4.63571, 19.6845, -14.7881, 0.52 ) }
    dend_70 { pt3dadd( 4.86459, 20.4932, -15.3898, 0.81 ) }
    dend_70 { pt3dadd( 4.88253, 20.5442, -15.4187, 0.81 ) }
    dend_70 { pt3dadd( 5.12645, 21.1568, -15.7041, 1.18 ) }
    dend_70 { pt3dadd( 5.25758, 21.408, -15.7664, 1.18 ) }
    dend_70 { pt3dadd( 5.46145, 21.7247, -15.768, 1.18 ) }
    dend_70 { pt3dadd( 5.50322, 21.7835, -15.7625, 1.18 ) }
    dend_70 { pt3dadd( 5.65329, 22.0071, -15.7471, 1.4 ) }
    dend_70 { pt3dadd( 5.73358, 22.1545, -15.736, 1.4 ) }
    dend_70 { pt3dadd( 5.9685, 22.7043, -15.6915, 1.4 ) }
    dend_70 { pt3dadd( 6.15572, 23.2775, -15.6385, 0.88 ) }
    dend_70 { pt3dadd( 6.3374, 24.1795, -15.5471, 0.52 ) }
    dend_70 { pt3dadd( 6.37535, 25.0129, -15.5398, 0.37 ) }
    dend_70 { pt3dadd( 6.30043, 25.8951, -15.6427, 0.37 ) }
    dend_70 { pt3dadd( 6.2277, 26.2881, -15.7279, 0.29 ) }
    dend_70 { pt3dadd( 6.03066, 26.9863, -15.9507, 0.29 ) }
    dend_70 { pt3dadd( 5.8939, 27.3949, -16.1466, 0.29 ) }
    dend_70 { pt3dadd( 5.47297, 28.6997, -17.1286, 1.33 ) }
    dend_70 { pt3dadd( 5.24428, 29.4273, -17.769, 1.92 ) }
    dend_70 { pt3dadd( 5.20038, 29.6082, -17.946, 2.21 ) }
    dend_70 { pt3dadd( 5.18042, 29.747, -18.0867, 2.21 ) }
    dend_70 { pt3dadd( 5.1554, 30.5069, -18.8737, 2.5 ) }
    dend_70 { pt3dadd( 5.19681, 31.5004, -19.9723, 2.14 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 78/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.6115, 9.73122, -2.50048, 3.68 ) }
    dend_21 { pt3dadd( 1.12651, 11.2251, -2.74062, 2.8 ) }
    dend_21 { pt3dadd( 1.09369, 11.3238, -2.76136, 2.8 ) }
    dend_21 { pt3dadd( 0.892088, 11.9247, -2.89621, 2.8 ) }
    dend_21 { pt3dadd( 0.801293, 12.183, -2.95673, 2.8 ) }
    dend_21 { pt3dadd( 0.592284, 12.7645, -3.09743, 2.8 ) }
    dend_21 { pt3dadd( 0.277182, 13.5952, -3.31775, 3.02 ) }
    dend_21 { pt3dadd( -0.16401, 14.6649, -3.64925, 3.02 ) }
    dend_21 { pt3dadd( -0.181033, 14.7037, -3.66315, 3.02 ) }
    dend_21 { pt3dadd( -0.553698, 15.4976, -3.97168, 3.02 ) }
    dend_21 { pt3dadd( -0.571808, 15.5355, -3.98665, 3.02 ) }
    dend_21 { pt3dadd( -0.99255, 16.4005, -4.33933, 2.87 ) }
    dend_21 { pt3dadd( -1.3835, 17.2407, -4.64171, 2.87 ) }
    dend_21 { pt3dadd( -1.4012, 17.2802, -4.65215, 2.87 ) }
    dend_21 { pt3dadd( -1.76797, 18.1383, -4.82698, 2.73 ) }
    dend_21 { pt3dadd( -2.15057, 19.0587, -4.96543, 2.58 ) }
    dend_21 { pt3dadd( -2.17044, 19.1063, -4.9713, 2.58 ) }
    dend_21 { pt3dadd( -2.71758, 20.4065, -5.08864, 2.36 ) }
    dend_21 { pt3dadd( -3.26626, 21.6759, -5.1797, 2.06 ) }
    dend_21 { pt3dadd( -3.76809, 22.7806, -5.25424, 2.06 ) }
    dend_21 { pt3dadd( -4.09482, 23.4867, -5.30068, 2.65 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( -4.67781, 24.7117, -5.37368, 2.73 ) }
    dend_21 { pt3dadd( -5.15529, 25.6911, -5.4347, 2.95 ) }
    dend_21 { pt3dadd( -5.59969, 26.5522, -5.49977, 3.17 ) }
    dend_21 { pt3dadd( -6.00628, 27.3034, -5.56736, 2.95 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 4/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -3.5085, -10.4416, 0.999524, 4.05 ) }
    dend_0 { pt3dadd( -4.34739, -12.4863, 0.999524, 3.68 ) }
    dend_0 { pt3dadd( -5.14948, -14.4414, 0.999524, 3.5 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 8/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 3.23086, 10.2806, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 8.20573, 24.4316, -1.24848, 0.532211 ) }
    axon_0 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532211 ) }
    // Section: dend_74, id: dend_74, parent: dend_70 (entry count 11/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 5.19681, 31.5004, -19.9723, 1.25 ) }
    dend_74 { pt3dadd( 4.91503, 32.1959, -20.5075, 1.25 ) }
    dend_74 { pt3dadd( 4.68235, 32.8754, -21.028, 1.77 ) }
    dend_74 { pt3dadd( 4.63179, 33.0398, -21.1552, 1.84 ) }
    dend_74 { pt3dadd( 4.44011, 33.9161, -21.986, 0.22 ) }
    dend_74 { pt3dadd( 4.37274, 34.517, -22.6828, 1.33 ) }
    dend_74 { pt3dadd( 4.37208, 34.5472, -22.7267, 1.33 ) }
    dend_74 { pt3dadd( 4.39119, 34.6871, -22.9804, 1.77 ) }
    dend_74 { pt3dadd( 4.40256, 34.7254, -23.0588, 1.77 ) }
    dend_74 { pt3dadd( 4.64922, 35.3064, -24.3925, 1.18 ) }
    dend_74 { pt3dadd( 4.86211, 35.6726, -25.3488, 1.4 ) }
    dend_74 { pt3dadd( 5.14468, 36.1347, -26.7906, 0.29 ) }
    dend_74 { pt3dadd( 5.15205, 36.1474, -26.8322, 0.29 ) }
    dend_74 { pt3dadd( 5.36034, 36.5223, -28.0767, 1.55 ) }
    dend_74 { pt3dadd( 5.38343, 36.5733, -28.2328, 1.84 ) }
    dend_74 { pt3dadd( 5.39001, 36.5921, -28.2802, 1.84 ) }
    dend_74 { pt3dadd( 5.67425, 37.6363, -30.4275, 0.52 ) }
    dend_74 { pt3dadd( 5.68199, 37.6654, -30.4715, 0.52 ) }
    dend_74 { pt3dadd( 5.72902, 37.8533, -30.7028, 0.74 ) }
    dend_74 { pt3dadd( 6.05229, 39.2365, -32.1409, 1.47 ) }
    dend_74 { pt3dadd( 6.21462, 39.9125, -32.7211, 0.29 ) }
    dend_74 { pt3dadd( 6.38078, 40.5772, -33.1756, 1.69 ) }
    dend_74 { pt3dadd( 6.73526, 42.1186, -34.0272, 0.15 ) }
    dend_74 { pt3dadd( 6.82622, 42.5897, -34.2799, 0.66 ) }
    dend_74 { pt3dadd( 6.83322, 42.6341, -34.3031, 0.66 ) }
    dend_74 { pt3dadd( 6.93853, 43.4946, -34.7624, 0.15 ) }
    dend_74 { pt3dadd( 6.98843, 44.1106, -35.1294, 1.69 ) }
    dend_74 { pt3dadd( 7.06508, 45.9294, -36.2583, 0.22 ) }
    dend_74 { pt3dadd( 7.06448, 46.3823, -36.5624, 0.59 ) }
    dend_74 { pt3dadd( 7.04856, 47.3592, -37.2617, 1.92 ) }
    dend_74 { pt3dadd( 7.00561, 48.8831, -38.3985, 0.15 ) }
    dend_74 { pt3dadd( 7.0021, 48.964, -38.4617, 0.15 ) }
    dend_74 { pt3dadd( 6.99269, 49.3299, -38.762, 0.37 ) }
    dend_74 { pt3dadd( 6.986, 49.8922, -39.2527, 0.22 ) }
    dend_74 { pt3dadd( 6.98042, 50.4881, -39.8499, 1.11 ) }
    dend_74 { pt3dadd( 6.97908, 50.5241, -39.8889, 1.11 ) }
    dend_74 { pt3dadd( 6.96397, 50.7718, -40.1662, 1.25 ) }
    dend_74 { pt3dadd( 6.88842, 51.7837, -41.3385, 0.22 ) }
    dend_74 { pt3dadd( 6.82826, 52.4715, -42.142, 0.96 ) }
    dend_74 { pt3dadd( 6.74926, 53.2358, -42.9837, 0.15 ) }
    dend_74 { pt3dadd( 6.68689, 53.877, -43.6448, 1.18 ) }
    dend_74 { pt3dadd( 6.67409, 54.002, -43.7629, 1.47 ) }
    dend_74 { pt3dadd( 6.58436, 54.9184, -44.5118, 0.22 ) }
    dend_74 { pt3dadd( 6.55711, 55.1866, -44.6782, 0.44 ) }
    dend_74 { pt3dadd( 6.50936, 55.7133, -44.9228, 0.15 ) }
    dend_74 { pt3dadd( 6.43002, 56.4339, -45.1795, 1.11 ) }
    dend_74 { pt3dadd( 6.39203, 56.7435, -45.2718, 1.47 ) }
    dend_74 { pt3dadd( 6.26058, 58.0504, -45.5916, 0.22 ) }
    dend_74 { pt3dadd( 6.21704, 58.5676, -45.6907, 0.74 ) }
    dend_74 { pt3dadd( 6.15821, 59.3579, -45.8363, 0.15 ) }
    dend_74 { pt3dadd( 6.12273, 59.97, -45.9455, 1.11 ) }
    dend_74 { pt3dadd( 6.10928, 60.2316, -45.9879, 1.55 ) }
    dend_74 { pt3dadd( 6.01231, 62.5551, -46.3422, 0.15 ) }
    dend_74 { pt3dadd( 5.99623, 63.0897, -46.4126, 0.66 ) }
    dend_74 { pt3dadd( 5.99334, 63.3496, -46.4488, 0.66 ) }
    dend_74 { pt3dadd( 6.00561, 64.8657, -46.6668, 0.15 ) }
    dend_74 { pt3dadd( 6.01571, 65.3449, -46.7319, 0.37 ) }
    dend_74 { pt3dadd( 6.01681, 65.4086, -46.7407, 0.37 ) }
    dend_74 { pt3dadd( 6.01179, 65.6773, -46.7742, 0.37 ) }
    // Section: dend_71, id: dend_71, parent: dend_70 (entry count 70/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 5.19681, 31.5004, -19.9723, 0.37 ) }
    dend_71 { pt3dadd( 5.93015, 33.245, -20.1735, 0.37 ) }
    dend_71 { pt3dadd( 6.47516, 34.8176, -20.3458, 0.37 ) }
    dend_71 { pt3dadd( 6.86636, 36.2165, -20.4888, 0.37 ) }
    dend_71 { pt3dadd( 6.88538, 36.3126, -20.4977, 0.37 ) }
    dend_71 { pt3dadd( 6.9567, 36.9988, -20.5525, 0.37 ) }
    dend_71 { pt3dadd( 6.96, 37.0835, -20.5621, 0.37 ) }
    dend_71 { pt3dadd( 6.78555, 38.1013, -20.7342, 0.66 ) }
    dend_71 { pt3dadd( 6.65856, 38.4648, -20.8063, 0.81 ) }
    dend_71 { pt3dadd( 6.45279, 39.0695, -20.9358, 0.81 ) }
    dend_71 { pt3dadd( 6.28429, 39.7203, -21.0696, 0.37 ) }
    dend_71 { pt3dadd( 6.11272, 40.7449, -21.2517, 0.29 ) }
    dend_71 { pt3dadd( 6.10543, 40.8298, -21.2652, 0.29 ) }
    dend_71 { pt3dadd( 6.08515, 41.8692, -21.415, 0.29 ) }
    dend_71 { pt3dadd( 6.12788, 43.543, -21.6192, 1.84 ) }
    dend_71 { pt3dadd( 6.17012, 44.18, -21.6799, 2.36 ) }
    dend_71 { pt3dadd( 6.31294, 45.6198, -21.7781, 1.55 ) }
    dend_71 { pt3dadd( 6.50126, 47.2732, -21.839, 1.92 ) }
    dend_71 { pt3dadd( 6.59163, 47.9153, -21.8595, 2.5 ) }
    dend_71 { pt3dadd( 6.77642, 48.934, -21.9003, 1.99 ) }
    dend_71 { pt3dadd( 7.09519, 50.3956, -21.9619, 0.22 ) }
    dend_71 { pt3dadd( 7.29802, 51.3396, -22.0154, 0.22 ) }
    dend_71 { pt3dadd( 7.4321, 52.0022, -22.0557, 0.88 ) }
    dend_71 { pt3dadd( 7.52813, 52.5639, -22.0952, 0.59 ) }
    dend_71 { pt3dadd( 7.67175, 53.5978, -22.176, 0.29 ) }
    dend_71 { pt3dadd( 7.79839, 54.7535, -22.2713, 0.29 ) }
    dend_71 { pt3dadd( 7.92225, 56.1034, -22.383, 0.29 ) }
    dend_71 { pt3dadd( 8.02275, 57.2896, -22.4858, 0.29 ) }
    dend_71 { pt3dadd( 8.13256, 58.5614, -22.5908, 1.18 ) }
    dend_71 { pt3dadd( 8.20933, 59.3213, -22.6396, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_71 { pt3dadd( 8.30915, 60.0812, -22.6773, 1.4 ) }
    dend_71 { pt3dadd( 8.45771, 60.9044, -22.7189, 0.88 ) }
    dend_71 { pt3dadd( 8.76577, 62.3413, -22.7939, 0.29 ) }
    dend_71 { pt3dadd( 9.05143, 63.5885, -22.8536, 0.29 ) }
    dend_71 { pt3dadd( 9.54372, 65.6206, -22.9273, 2.14 ) }
    dend_71 { pt3dadd( 9.7422, 66.4446, -22.9565, 3.09 ) }
    dend_71 { pt3dadd( 9.92608, 67.2218, -22.9809, 3.46 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 7/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -6.00628, 27.3034, -5.56736, 1.62 ) }
    dend_25 { pt3dadd( -6.39489, 29.1673, -5.92714, 1.62 ) }
    dend_25 { pt3dadd( -6.40327, 29.235, -5.93342, 1.62 ) }
    dend_25 { pt3dadd( -6.52128, 30.1893, -6.02193, 1.62 ) }
    dend_25 { pt3dadd( -6.5466, 30.3941, -6.04092, 1.62 ) }
    dend_25 { pt3dadd( -6.66108, 31.3198, -6.12678, 1.62 ) }
    dend_25 { pt3dadd( -6.66857, 31.3804, -6.1324, 1.62 ) }
    dend_25 { pt3dadd( -6.70405, 32.864, -6.00321, 1.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 15/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -6.00628, 27.3034, -5.56736, 0.66 ) }
    dend_22 { pt3dadd( -4.12701, 30.5962, -4.14013, 0.66 ) }
    dend_22 { pt3dadd( -3.42417, 31.6831, -3.94529, 0.59 ) }
    dend_22 { pt3dadd( -2.74366, 32.6782, -3.87059, 1.03 ) }
    dend_22 { pt3dadd( -2.6149, 32.8701, -3.86903, 1.03 ) }
    dend_22 { pt3dadd( -2.32966, 33.3315, -3.88427, 1.18 ) }
    dend_22 { pt3dadd( -1.34004, 35.1785, -4.02302, 0.81 ) }
    dend_22 { pt3dadd( -0.711363, 36.4397, -4.34832, 0.66 ) }
    dend_22 { pt3dadd( -0.667538, 36.5447, -4.37782, 0.66 ) }
    dend_22 { pt3dadd( -0.281272, 37.7477, -4.62807, 0.66 ) }
    dend_22 { pt3dadd( 0.0552382, 39.1311, -4.81081, 0.88 ) }
    dend_22 { pt3dadd( 0.350559, 41.0171, -4.92175, 1.4 ) }
    dend_22 { pt3dadd( 0.387697, 41.4978, -4.91337, 1.77 ) }
    dend_22 { pt3dadd( 0.418733, 42.5512, -4.84416, 2.14 ) }
    dend_22 { pt3dadd( 0.440379, 44.5854, -4.49875, 1.77 ) }
    dend_22 { pt3dadd( 0.491255, 45.9035, -4.03765, 1.25 ) }
    dend_22 { pt3dadd( 0.569953, 46.9586, -3.49675, 1.03 ) }
    dend_22 { pt3dadd( 0.706114, 47.8233, -2.87862, 0.81 ) }
    dend_22 { pt3dadd( 0.95699, 48.9079, -1.93982, 0.81 ) }
    dend_22 { pt3dadd( 1.52181, 50.5124, -0.226762, 0.59 ) }
    dend_22 { pt3dadd( 2.31856, 52.001, 1.70688, 0.59 ) }
    dend_22 { pt3dadd( 2.35996, 52.0599, 1.80186, 0.59 ) }
    dend_22 { pt3dadd( 2.99895, 52.7408, 3.17328, 1.77 ) }
    dend_22 { pt3dadd( 3.03705, 52.7696, 3.24843, 1.77 ) }
    dend_22 { pt3dadd( 3.46931, 52.9533, 3.9717, 1.92 ) }
    dend_22 { pt3dadd( 3.53376, 52.959, 4.05328, 1.92 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.14948, -14.4414, 0.999524, 0.37 ) }
    dend_14 { pt3dadd( -6.50031, -15.0499, 0.828156, 0.37 ) }
    dend_14 { pt3dadd( -7.2878, -15.5967, 0.874869, 0.37 ) }
    dend_14 { pt3dadd( -8.20382, -16.6086, 1.23612, 0.37 ) }
    dend_14 { pt3dadd( -8.47669, -17.2136, 1.60576, 0.66 ) }
    dend_14 { pt3dadd( -8.58436, -17.6022, 1.89494, 0.96 ) }
    dend_14 { pt3dadd( -8.59594, -17.65, 1.94203, 0.96 ) }
    dend_14 { pt3dadd( -8.66399, -19.0312, 3.63782, 0.59 ) }
    dend_14 { pt3dadd( -8.66278, -19.0624, 3.68475, 0.59 ) }
    dend_14 { pt3dadd( -8.66256, -19.4293, 4.4034, 1.25 ) }
    dend_14 { pt3dadd( -8.6886, -19.52, 4.61939, 1.25 ) }
    dend_14 { pt3dadd( -9.02433, -20.0101, 5.85414, 0.59 ) }
    dend_14 { pt3dadd( -9.22457, -20.216, 6.31157, 0.96 ) }
    dend_14 { pt3dadd( -9.26379, -20.2461, 6.36926, 0.96 ) }
    dend_14 { pt3dadd( -9.59205, -20.6288, 6.94942, 0.96 ) }
    dend_14 { pt3dadd( -9.82497, -21.0643, 7.4582, 0.59 ) }
    dend_14 { pt3dadd( -9.94408, -21.5864, 7.93404, 0.29 ) }
    dend_14 { pt3dadd( -9.94365, -22.2263, 8.41251, 0.29 ) }
    dend_14 { pt3dadd( -9.9112, -22.8047, 8.86284, 1.11 ) }
    dend_14 { pt3dadd( -9.84305, -23.9283, 9.77873, 0.22 ) }
    dend_14 { pt3dadd( -9.8293, -24.2051, 10.0131, 1.25 ) }
    dend_14 { pt3dadd( -9.85852, -24.6436, 10.4238, 1.55 ) }
    dend_14 { pt3dadd( -9.88407, -24.7252, 10.5105, 1.55 ) }
    dend_14 { pt3dadd( -10.4767, -25.4358, 11.41, 0.59 ) }
    dend_14 { pt3dadd( -10.719, -25.635, 11.6613, 0.74 ) }
    dend_14 { pt3dadd( -11.1465, -25.9193, 12.0124, 0.74 ) }
    dend_14 { pt3dadd( -11.7501, -26.3169, 12.49, 0.59 ) }
    dend_14 { pt3dadd( -11.8377, -26.389, 12.5622, 0.59 ) }
    dend_14 { pt3dadd( -12.3441, -27.1012, 13.0646, 0.59 ) }
    dend_14 { pt3dadd( -12.4409, -27.5753, 13.3086, 1.11 ) }
    dend_14 { pt3dadd( -12.4514, -27.9512, 13.514, 1.18 ) }
    dend_14 { pt3dadd( -12.4485, -28.0341, 13.5615, 1.18 ) }
    dend_14 { pt3dadd( -12.4408, -28.9392, 14.1469, 0.59 ) }
    dend_14 { pt3dadd( -12.5027, -29.6643, 14.6853, 0.59 ) }
    dend_14 { pt3dadd( -12.7273, -30.3857, 15.3471, 0.44 ) }
    dend_14 { pt3dadd( -13.0236, -30.7583, 15.8556, 0.74 ) }
    dend_14 { pt3dadd( -13.3467, -30.9384, 16.2467, 0.88 ) }
    dend_14 { pt3dadd( -14.0908, -31.145, 16.9852, 0.44 ) }
    dend_14 { pt3dadd( -14.5178, -31.1834, 17.3215, 0.44 ) }
    dend_14 { pt3dadd( -15.0563, -31.2, 17.679, 0.44 ) }
    dend_14 { pt3dadd( -15.1068, -31.2026, 17.7048, 0.44 ) }
    dend_14 { pt3dadd( -15.7627, -31.2984, 17.9792, 0.88 ) }
    dend_14 { pt3dadd( -15.8332, -31.3164, 18.0069, 0.88 ) }
    dend_14 { pt3dadd( -16.6273, -31.5741, 18.2672, 1.18 ) }
    dend_14 { pt3dadd( -17.0113, -31.7218, 18.3806, 1.11 ) }
    dend_14 { pt3dadd( -17.6108, -31.9673, 18.5357, 0.59 ) }
    dend_14 { pt3dadd( -18.1788, -32.2113, 18.6607, 0.44 ) }
    dend_14 { pt3dadd( -18.2298, -32.234, 18.6693, 0.44 ) }
    dend_14 { pt3dadd( -19.0021, -32.6439, 18.7945, 0.66 ) }
    dend_14 { pt3dadd( -19.5166, -33.0055, 18.8737, 0.37 ) }
    dend_14 { pt3dadd( -19.8227, -33.316, 18.922, 1.03 ) }
    dend_14 { pt3dadd( -19.981, -33.5853, 18.947, 1.03 ) }
    dend_14 { pt3dadd( -20.0177, -33.6996, 18.9522, 1.03 ) }
    dend_14 { pt3dadd( -20.2541, -34.7437, 18.9857, 0.37 ) }
    dend_14 { pt3dadd( -20.3084, -35.3534, 18.9977, 0.44 ) }
    dend_14 { pt3dadd( -20.3084, -35.8326, 19.0056, 0.74 ) }
    dend_14 { pt3dadd( -20.2839, -36.226, 19.012, 0.88 ) }
    dend_14 { pt3dadd( -20.2188, -36.9464, 19.0317, 0.88 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 99/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -5.14948, -14.4414, 0.999524, 3.09 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_1 { pt3dadd( -5.16061, -14.4882, 0.999014, 3.09 ) }
    dend_1 { pt3dadd( -5.47798, -15.8338, 1.01594, 2.8 ) }
    dend_1 { pt3dadd( -5.90003, -17.6337, 1.04551, 2.43 ) }
    dend_1 { pt3dadd( -6.24008, -19.0839, 1.06934, 2.43 ) }
    dend_1 { pt3dadd( -6.25546, -19.1495, 1.07042, 2.43 ) }
    dend_1 { pt3dadd( -6.74226, -21.2255, 1.10453, 2.43 ) }
    dend_1 { pt3dadd( -7.00478, -22.3521, 1.13294, 2.87 ) }
    dend_1 { pt3dadd( -7.22115, -23.2732, 1.17597, 3.02 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 8/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 13.1806, 38.5826, -1.24848, 0.532211 ) }
    axon_1 { pt3dadd( 18.1555, 52.7336, -1.24848, 0.532211 ) }
    axon_1 { pt3dadd( 23.1303, 66.8846, -1.24848, 0.532211 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 11/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 9.92608, 67.2218, -22.9809, 0.29 ) }
    dend_73 { pt3dadd( 10.5793, 68.3309, -23.2472, 0.29 ) }
    dend_73 { pt3dadd( 10.8723, 68.7427, -23.3854, 0.29 ) }
    dend_73 { pt3dadd( 11.1815, 69.1685, -23.5474, 0.37 ) }
    dend_73 { pt3dadd( 11.211, 69.209, -23.5638, 0.37 ) }
    dend_73 { pt3dadd( 11.4276, 69.5277, -23.6926, 0.37 ) }
    dend_73 { pt3dadd( 11.4477, 69.5587, -23.7053, 0.37 ) }
    dend_73 { pt3dadd( 11.7119, 70.0414, -23.9407, 0.22 ) }
    dend_73 { pt3dadd( 11.8448, 70.32, -24.0993, 0.44 ) }
    dend_73 { pt3dadd( 11.8554, 70.3591, -24.1241, 0.44 ) }
    dend_73 { pt3dadd( 11.9196, 70.688, -24.3316, 0.66 ) }
    dend_73 { pt3dadd( 11.9266, 70.7213, -24.3508, 0.66 ) }
    dend_73 { pt3dadd( 12.0366, 71.1193, -24.5868, 0.96 ) }
    dend_73 { pt3dadd( 12.0504, 71.1631, -24.6259, 0.96 ) }
    dend_73 { pt3dadd( 12.2354, 71.7252, -25.1821, 0.22 ) }
    dend_73 { pt3dadd( 12.2473, 71.7622, -25.2196, 0.22 ) }
    dend_73 { pt3dadd( 12.4225, 72.2866, -25.7475, 1.92 ) }
    dend_73 { pt3dadd( 12.6102, 72.7701, -26.2375, 2.36 ) }
    dend_73 { pt3dadd( 13.283, 74.2945, -27.789, 0.44 ) }
    dend_73 { pt3dadd( 13.3896, 74.5216, -28.0184, 0.44 ) }
    dend_73 { pt3dadd( 13.4693, 74.6816, -28.1775, 0.44 ) }
    dend_73 { pt3dadd( 13.6416, 75.0304, -28.504, 0.22 ) }
    dend_73 { pt3dadd( 13.8601, 75.4782, -28.8868, 0.22 ) }
    dend_73 { pt3dadd( 14.1219, 75.9802, -29.2564, 0.74 ) }
    dend_73 { pt3dadd( 14.1462, 76.0204, -29.283, 0.74 ) }
    dend_73 { pt3dadd( 14.2167, 76.1363, -29.3708, 0.74 ) }
    dend_73 { pt3dadd( 14.5748, 76.7323, -29.8794, 0.22 ) }
    dend_73 { pt3dadd( 14.8568, 77.2516, -30.3439, 1.33 ) }
    dend_73 { pt3dadd( 15.0741, 77.701, -30.7407, 1.77 ) }
    dend_73 { pt3dadd( 15.4652, 78.5656, -31.4927, 0.22 ) }
    dend_73 { pt3dadd( 15.6316, 78.9323, -31.8026, 0.22 ) }
    dend_73 { pt3dadd( 15.8573, 79.4226, -32.2011, 0.22 ) }
    dend_73 { pt3dadd( 16.1198, 79.9761, -32.6346, 1.92 ) }
    dend_73 { pt3dadd( 16.2231, 80.1963, -32.7933, 2.28 ) }
    dend_73 { pt3dadd( 16.8779, 81.5313, -33.6455, 0.22 ) }
    dend_73 { pt3dadd( 17.1389, 82.0288, -33.9296, 0.22 ) }
    dend_73 { pt3dadd( 17.3291, 82.356, -34.1057, 0.88 ) }
    dend_73 { pt3dadd( 17.3809, 82.4328, -34.1429, 0.88 ) }
    dend_73 { pt3dadd( 17.4411, 82.5071, -34.1769, 0.88 ) }
    dend_73 { pt3dadd( 18.0745, 83.1871, -34.4958, 0.22 ) }
    dend_73 { pt3dadd( 18.5248, 83.6163, -34.7046, 0.22 ) }
    dend_73 { pt3dadd( 18.5811, 83.673, -34.7341, 0.22 ) }
    dend_73 { pt3dadd( 19.0547, 84.1656, -35.0009, 1.33 ) }
    dend_73 { pt3dadd( 19.2476, 84.3751, -35.1132, 2.06 ) }
    dend_73 { pt3dadd( 19.5455, 84.7161, -35.3062, 2.06 ) }
    dend_73 { pt3dadd( 20.2458, 85.573, -35.7983, 0.15 ) }
    dend_73 { pt3dadd( 20.4312, 85.8052, -35.9351, 0.74 ) }
    dend_73 { pt3dadd( 20.4577, 85.8381, -35.954, 0.74 ) }
    dend_73 { pt3dadd( 20.5893, 86.0089, -36.0507, 0.74 ) }
    dend_73 { pt3dadd( 21.0119, 86.5652, -36.3409, 0.22 ) }
    dend_73 { pt3dadd( 21.237, 86.8596, -36.4747, 0.59 ) }
    dend_73 { pt3dadd( 21.2639, 86.8943, -36.4892, 0.59 ) }
    dend_73 { pt3dadd( 21.7295, 87.4801, -36.7851, 0.15 ) }
    dend_73 { pt3dadd( 22.0995, 87.9689, -37.042, 1.55 ) }
    dend_73 { pt3dadd( 22.1924, 88.097, -37.1107, 1.92 ) }
    dend_73 { pt3dadd( 22.2181, 88.1328, -37.1288, 1.92 ) }
    dend_73 { pt3dadd( 22.3423, 88.3204, -37.2259, 1.92 ) }
    dend_73 { pt3dadd( 22.998, 89.3393, -37.743, 0.22 ) }
    dend_73 { pt3dadd( 23.1751, 89.5814, -37.8742, 0.52 ) }
    dend_73 { pt3dadd( 23.2021, 89.6142, -37.8925, 0.52 ) }
    dend_73 { pt3dadd( 23.613, 90.0295, -38.1297, 0.22 ) }
    dend_73 { pt3dadd( 23.9719, 90.3586, -38.3352, 1.55 ) }
    dend_73 { pt3dadd( 24.237, 90.5354, -38.4779, 1.55 ) }
    dend_73 { pt3dadd( 25.1992, 91.0593, -38.9647, 0.15 ) }
    dend_73 { pt3dadd( 25.2329, 91.0763, -38.9825, 0.15 ) }
    dend_73 { pt3dadd( 25.898, 91.3914, -39.3383, 0.15 ) }
    dend_73 { pt3dadd( 26.883, 91.8198, -39.8698, 2.21 ) }
    dend_73 { pt3dadd( 28.3495, 92.4105, -40.6349, 0.22 ) }
    dend_73 { pt3dadd( 28.5135, 92.4768, -40.7197, 0.37 ) }
    dend_73 { pt3dadd( 29.1893, 92.7674, -41.0468, 0.22 ) }
    dend_73 { pt3dadd( 29.4313, 92.8805, -41.1564, 0.59 ) }
    dend_73 { pt3dadd( 29.5946, 92.9642, -41.2236, 0.59 ) }
    dend_73 { pt3dadd( 30.1476, 93.2807, -41.4295, 0.22 ) }
    dend_73 { pt3dadd( 30.3597, 93.4305, -41.5191, 0.66 ) }
    dend_73 { pt3dadd( 30.942, 93.8366, -41.792, 0.15 ) }
    dend_73 { pt3dadd( 31.3634, 94.1365, -42.0026, 1.77 ) }
    dend_73 { pt3dadd( 31.4669, 94.2119, -42.0607, 1.77 ) }
    dend_73 { pt3dadd( 32.4376, 94.9013, -42.6431, 0.22 ) }
    dend_73 { pt3dadd( 32.8064, 95.1332, -42.9257, 0.74 ) }
    dend_73 { pt3dadd( 33.203, 95.3526, -43.2824, 0.15 ) }
    dend_73 { pt3dadd( 33.4326, 95.4684, -43.5276, 0.74 ) }
    dend_73 { pt3dadd( 33.8072, 95.6642, -43.9629, 0.15 ) }
    dend_73 { pt3dadd( 34.1453, 95.8517, -44.3737, 2.14 ) }
    dend_73 { pt3dadd( 35.2162, 96.5322, -45.7761, 0.37 ) }
    dend_73 { pt3dadd( 35.6497, 96.8728, -46.3784, 1.55 ) }
    dend_73 { pt3dadd( 36.447, 97.6064, -47.548, 0.15 ) }
    dend_73 { pt3dadd( 36.7858, 97.9767, -48.0735, 0.15 ) }
    dend_73 { pt3dadd( 36.9457, 98.1825, -48.3365, 1.4 ) }
    dend_73 { pt3dadd( 37.4521, 98.9393, -49.2679, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_73 { pt3dadd( 37.7023, 99.3288, -49.7507, 1.33 ) }
    dend_73 { pt3dadd( 37.7467, 99.3855, -49.8319, 1.62 ) }
    dend_73 { pt3dadd( 38.4134, 99.9897, -50.8876, 0.15 ) }
    dend_73 { pt3dadd( 38.8645, 100.289, -51.5412, 1.18 ) }
    dend_73 { pt3dadd( 39.6428, 100.682, -52.5799, 0.88 ) }
    dend_73 { pt3dadd( 40.3837, 100.952, -53.4581, 0.44 ) }
    dend_73 { pt3dadd( 41.0793, 101.162, -54.202, 1.77 ) }
    dend_73 { pt3dadd( 41.8259, 101.359, -54.8835, 0.22 ) }
    dend_73 { pt3dadd( 41.87, 101.369, -54.9146, 0.22 ) }
    dend_73 { pt3dadd( 42.1555, 101.434, -55.0574, 0.66 ) }
    dend_73 { pt3dadd( 42.8028, 101.613, -55.2437, 0.15 ) }
    dend_73 { pt3dadd( 43.2632, 101.8, -55.3124, 1.11 ) }
    dend_73 { pt3dadd( 43.5478, 101.963, -55.3439, 1.11 ) }
    dend_73 { pt3dadd( 43.5916, 101.992, -55.348, 1.11 ) }
    dend_73 { pt3dadd( 44.0847, 102.331, -55.3982, 0.22 ) }
    dend_73 { pt3dadd( 44.3119, 102.483, -55.4252, 0.59 ) }
    dend_73 { pt3dadd( 44.8908, 102.865, -55.5005, 0.22 ) }
    dend_73 { pt3dadd( 45.3948, 103.191, -55.5813, 1.4 ) }
    dend_73 { pt3dadd( 45.4391, 103.219, -55.5883, 1.4 ) }
    dend_73 { pt3dadd( 45.5129, 103.265, -55.5997, 1.55 ) }
    dend_73 { pt3dadd( 46.4542, 103.819, -55.7365, 0.22 ) }
    dend_73 { pt3dadd( 46.4946, 103.841, -55.7433, 0.22 ) }
    dend_73 { pt3dadd( 46.6491, 103.923, -55.7703, 0.22 ) }
    dend_73 { pt3dadd( 46.9742, 104.088, -55.8426, 0.81 ) }
    dend_73 { pt3dadd( 47.0146, 104.108, -55.8531, 0.81 ) }
    dend_73 { pt3dadd( 47.2126, 104.22, -55.917, 0.81 ) }
    dend_73 { pt3dadd( 48.158, 104.775, -56.2575, 0.22 ) }
    dend_73 { pt3dadd( 48.4814, 104.963, -56.3773, 0.22 ) }
    dend_73 { pt3dadd( 49.1917, 105.365, -56.6449, 1.55 ) }
    dend_73 { pt3dadd( 49.2293, 105.388, -56.6607, 1.55 ) }
    dend_73 { pt3dadd( 50.1553, 105.961, -57.0715, 0.22 ) }
    dend_73 { pt3dadd( 50.5075, 106.183, -57.2363, 0.22 ) }
    dend_73 { pt3dadd( 51.1225, 106.575, -57.5301, 1.62 ) }
    dend_73 { pt3dadd( 51.2394, 106.649, -57.5839, 1.99 ) }
    dend_73 { pt3dadd( 52.4508, 107.431, -58.1157, 0.22 ) }
    dend_73 { pt3dadd( 52.4929, 107.458, -58.1339, 0.22 ) }
    dend_73 { pt3dadd( 52.9491, 107.746, -58.3267, 0.74 ) }
    dend_73 { pt3dadd( 53.2262, 107.925, -58.4458, 0.74 ) }
    dend_73 { pt3dadd( 54.6027, 108.811, -59.025, 0.15 ) }
    dend_73 { pt3dadd( 55.1137, 109.133, -59.229, 1.55 ) }
    dend_73 { pt3dadd( 55.1535, 109.156, -59.2424, 1.55 ) }
    dend_73 { pt3dadd( 55.3797, 109.291, -59.3188, 1.55 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 42/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 9.92608, 67.2218, -22.9809, 0.29 ) }
    dend_72 { pt3dadd( 9.7832, 69.2916, -23.0011, 0.29 ) }
    dend_72 { pt3dadd( 9.75422, 69.7897, -23.0114, 0.44 ) }
    dend_72 { pt3dadd( 9.69401, 70.8019, -23.022, 0.22 ) }
    dend_72 { pt3dadd( 9.61864, 72.1392, -23.0307, 1.55 ) }
    dend_72 { pt3dadd( 9.59766, 72.5717, -23.0305, 2.21 ) }
    dend_72 { pt3dadd( 9.57062, 73.2021, -23.0255, 1.84 ) }
    dend_72 { pt3dadd( 9.565, 73.9956, -23.0221, 0.96 ) }
    dend_72 { pt3dadd( 9.56538, 74.5073, -23.0055, 0.44 ) }
    dend_72 { pt3dadd( 9.56563, 74.5846, -22.9995, 0.44 ) }
    dend_72 { pt3dadd( 9.58847, 75.5795, -22.9213, 0.29 ) }
    dend_72 { pt3dadd( 9.5985, 75.7194, -22.9125, 0.29 ) }
    dend_72 { pt3dadd( 9.67936, 76.4285, -22.8802, 0.29 ) }
    dend_72 { pt3dadd( 9.77463, 77.1264, -22.8564, 0.81 ) }
    dend_72 { pt3dadd( 9.82298, 77.4738, -22.861, 1.11 ) }
    dend_72 { pt3dadd( 9.90216, 78.1798, -22.896, 0.88 ) }
    dend_72 { pt3dadd( 10.0638, 79.6229, -23.0111, 0.22 ) }
    dend_72 { pt3dadd( 10.14, 80.3291, -23.0907, 0.81 ) }
    dend_72 { pt3dadd( 10.1977, 80.8898, -23.1727, 0.81 ) }
    dend_72 { pt3dadd( 10.3568, 82.574, -23.4479, 0.22 ) }
    dend_72 { pt3dadd( 10.4583, 83.8136, -23.6621, 1.84 ) }
    dend_72 { pt3dadd( 10.4993, 84.4632, -23.7777, 2.21 ) }
    dend_72 { pt3dadd( 10.5232, 85.0319, -23.8786, 2.21 ) }
    dend_72 { pt3dadd( 10.6438, 87.2047, -24.2377, 0.22 ) }
    dend_72 { pt3dadd( 10.7015, 87.9584, -24.3516, 0.81 ) }
    dend_72 { pt3dadd( 10.7376, 88.3131, -24.3958, 0.88 ) }
    dend_72 { pt3dadd( 10.7777, 88.6716, -24.4312, 0.66 ) }
    dend_72 { pt3dadd( 10.8848, 89.7384, -24.5113, 0.22 ) }
    dend_72 { pt3dadd( 11.0372, 91.2269, -24.5851, 1.84 ) }
    dend_72 { pt3dadd( 11.0956, 91.6797, -24.603, 2.21 ) }
    dend_72 { pt3dadd( 11.1646, 92.1308, -24.6208, 2.21 ) }
    dend_72 { pt3dadd( 11.5032, 94.0787, -24.6961, 0.22 ) }
    dend_72 { pt3dadd( 11.6341, 94.7707, -24.7255, 0.88 ) }
    dend_72 { pt3dadd( 11.6756, 94.9814, -24.7341, 0.88 ) }
    dend_72 { pt3dadd( 11.9581, 96.4083, -24.7957, 0.22 ) }
    dend_72 { pt3dadd( 12.2036, 97.6699, -24.887, 0.22 ) }
    dend_72 { pt3dadd( 12.3397, 98.3318, -24.9517, 1.33 ) }
    dend_72 { pt3dadd( 12.4588, 98.8515, -25.0172, 1.62 ) }
    dend_72 { pt3dadd( 12.5035, 99.0522, -25.0456, 1.62 ) }
    dend_72 { pt3dadd( 12.5223, 99.1665, -25.0647, 1.62 ) }
    dend_72 { pt3dadd( 12.7268, 101.046, -25.3973, 0.22 ) }
    dend_72 { pt3dadd( 12.8413, 102.433, -25.6511, 0.22 ) }
    dend_72 { pt3dadd( 12.9016, 103.389, -25.8213, 1.4 ) }
    dend_72 { pt3dadd( 12.9329, 103.891, -25.9068, 1.69 ) }
    dend_72 { pt3dadd( 13.061, 106.017, -26.2593, 0.22 ) }
    dend_72 { pt3dadd( 13.1023, 106.734, -26.3556, 0.96 ) }
    dend_72 { pt3dadd( 13.1058, 106.802, -26.3608, 0.96 ) }
    dend_72 { pt3dadd( 13.116, 107.096, -26.3726, 0.81 ) }
    dend_72 { pt3dadd( 13.1622, 108.456, -26.3602, 0.22 ) }
    dend_72 { pt3dadd( 13.1718, 108.617, -26.3521, 0.22 ) }
    dend_72 { pt3dadd( 13.2557, 109.553, -26.2798, 0.22 ) }
    dend_72 { pt3dadd( 13.351, 110.664, -26.2059, 1.69 ) }
    dend_72 { pt3dadd( 13.3815, 111.028, -26.1853, 2.43 ) }
    dend_72 { pt3dadd( 13.4427, 111.798, -26.1466, 2.36 ) }
    dend_72 { pt3dadd( 13.6556, 114.272, -26.0455, 0.22 ) }
    dend_72 { pt3dadd( 13.7555, 115.217, -26.0433, 0.22 ) }
    dend_72 { pt3dadd( 13.7735, 115.363, -26.049, 0.22 ) }
    dend_72 { pt3dadd( 13.945, 116.561, -26.1225, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_72 { pt3dadd( 14.0871, 117.465, -26.1954, 1.11 ) }
    dend_72 { pt3dadd( 14.1862, 118.007, -26.2524, 1.4 ) }
    dend_72 { pt3dadd( 14.5099, 119.543, -26.4555, 0.22 ) }
    dend_72 { pt3dadd( 14.5231, 119.602, -26.4636, 0.22 ) }
    dend_72 { pt3dadd( 14.6265, 120.006, -26.5146, 0.22 ) }
    dend_72 { pt3dadd( 14.8539, 120.847, -26.5974, 1.55 ) }
    dend_72 { pt3dadd( 14.9701, 121.281, -26.6229, 1.77 ) }
    dend_72 { pt3dadd( 14.9881, 121.346, -26.6247, 1.77 ) }
    dend_72 { pt3dadd( 15.0756, 121.641, -26.6246, 1.77 ) }
    dend_72 { pt3dadd( 15.4585, 122.909, -26.6292, 0.22 ) }
    dend_72 { pt3dadd( 15.7097, 123.786, -26.6274, 0.66 ) }
    dend_72 { pt3dadd( 15.8344, 124.261, -26.6217, 0.66 ) }
    dend_72 { pt3dadd( 16.198, 125.832, -26.5964, 0.22 ) }
    dend_72 { pt3dadd( 16.2275, 125.976, -26.5926, 0.22 ) }
    dend_72 { pt3dadd( 16.5101, 127.501, -26.5333, 0.22 ) }
    dend_72 { pt3dadd( 16.6728, 128.546, -26.4599, 1.11 ) }
    dend_72 { pt3dadd( 16.7569, 129.174, -26.3908, 1.99 ) }
    dend_72 { pt3dadd( 16.8091, 129.714, -26.3078, 1.55 ) }
    dend_72 { pt3dadd( 16.8758, 131.047, -26.0306, 0.22 ) }
    dend_72 { pt3dadd( 16.8813, 131.225, -25.9889, 0.22 ) }
    dend_72 { pt3dadd( 16.8822, 132.318, -25.6871, 0.22 ) }
    dend_72 { pt3dadd( 16.8985, 132.942, -25.5028, 0.88 ) }
    dend_72 { pt3dadd( 16.9067, 133.137, -25.4461, 1.18 ) }
    dend_72 { pt3dadd( 16.9144, 133.201, -25.424, 1.18 ) }
    dend_72 { pt3dadd( 17.0309, 133.795, -25.2195, 0.66 ) }
    dend_72 { pt3dadd( 17.1044, 134.126, -25.1108, 0.37 ) }
    dend_72 { pt3dadd( 17.2809, 134.997, -24.8348, 0.22 ) }
    dend_72 { pt3dadd( 17.3885, 135.643, -24.6266, 0.59 ) }
    dend_72 { pt3dadd( 17.53, 136.81, -24.3315, 0.52 ) }
    dend_72 { pt3dadd( 17.5907, 137.465, -24.1885, 0.66 ) }
    dend_72 { pt3dadd( 17.6313, 137.965, -24.0936, 0.22 ) }
    dend_72 { pt3dadd( 17.6781, 138.728, -23.9715, 1.47 ) }
    dend_72 { pt3dadd( 17.6924, 139.096, -23.9279, 2.14 ) }
    dend_72 { pt3dadd( 17.7707, 141.332, -23.7373, 0.22 ) }
    dend_72 { pt3dadd( 17.7727, 141.393, -23.7347, 0.22 ) }
    dend_72 { pt3dadd( 17.833, 142.088, -23.7054, 1.11 ) }
    dend_72 { pt3dadd( 17.8543, 142.233, -23.703, 1.47 ) }
    dend_72 { pt3dadd( 17.8735, 142.335, -23.7027, 1.47 ) }
    dend_72 { pt3dadd( 17.989, 142.964, -23.7082, 0.81 ) }
    dend_72 { pt3dadd( 18.0743, 143.487, -23.7244, 0.29 ) }
    dend_72 { pt3dadd( 18.3138, 145.039, -23.8037, 0.22 ) }
    dend_72 { pt3dadd( 18.4136, 145.758, -23.8521, 0.96 ) }
    dend_72 { pt3dadd( 18.4329, 145.894, -23.8622, 0.96 ) }
    dend_72 { pt3dadd( 18.4548, 146.039, -23.8717, 0.96 ) }
    dend_72 { pt3dadd( 18.6483, 147.158, -23.9368, 0.22 ) }
    dend_72 { pt3dadd( 18.6615, 147.224, -23.94, 0.22 ) }
    dend_72 { pt3dadd( 18.8191, 147.901, -23.9645, 0.81 ) }
    dend_72 { pt3dadd( 18.9011, 148.244, -23.974, 0.81 ) }
    dend_72 { pt3dadd( 19.2836, 149.844, -23.9955, 0.15 ) }
    dend_72 { pt3dadd( 19.5229, 150.932, -24.0085, 1.18 ) }
    dend_72 { pt3dadd( 19.5863, 151.238, -24.0106, 1.47 ) }
    dend_72 { pt3dadd( 19.5971, 151.295, -24.0151, 1.47 ) }
    dend_72 { pt3dadd( 19.645, 151.572, -24.0593, 1.47 ) }
    dend_72 { pt3dadd( 19.8728, 153.09, -24.3883, 0.22 ) }
    dend_72 { pt3dadd( 19.9901, 153.943, -24.6272, 1.11 ) }
    dend_72 { pt3dadd( 20.0361, 154.305, -24.7417, 1.47 ) }
    dend_72 { pt3dadd( 20.2886, 156.294, -25.4853, 0.15 ) }
    dend_72 { pt3dadd( 20.3912, 157.069, -25.8079, 0.81 ) }
    dend_72 { pt3dadd( 20.4, 157.13, -25.8363, 0.81 ) }
    dend_72 { pt3dadd( 20.4546, 157.483, -26.0176, 0.81 ) }
    dend_72 { pt3dadd( 20.4639, 157.535, -26.043, 0.81 ) }
    dend_72 { pt3dadd( 20.6576, 158.759, -26.5691, 0.22 ) }
    dend_72 { pt3dadd( 20.7168, 159.168, -26.7043, 0.37 ) }
    dend_72 { pt3dadd( 20.8, 159.799, -26.8837, 0.22 ) }
    dend_72 { pt3dadd( 20.8933, 160.582, -27.08, 1.18 ) }
    dend_72 { pt3dadd( 20.9412, 161.05, -27.1831, 1.47 ) }
    dend_72 { pt3dadd( 21.1082, 162.828, -27.5301, 0.22 ) }
    dend_72 { pt3dadd( 21.1782, 163.613, -27.6549, 1.03 ) }
    dend_72 { pt3dadd( 21.2014, 163.884, -27.6973, 1.03 ) }
    dend_72 { pt3dadd( 21.3566, 165.623, -27.9902, 0.22 ) }
    dend_72 { pt3dadd( 21.4174, 166.25, -28.0962, 0.22 ) }
    dend_72 { pt3dadd( 21.4244, 166.316, -28.1075, 0.22 ) }
    dend_72 { pt3dadd( 21.5412, 167.101, -28.2114, 0.81 ) }
    dend_72 { pt3dadd( 21.6243, 167.583, -28.2653, 0.81 ) }
    dend_72 { pt3dadd( 21.8854, 169.011, -28.3816, 0.22 ) }
    dend_72 { pt3dadd( 22.0817, 169.984, -28.3943, 1.11 ) }
    dend_72 { pt3dadd( 22.1249, 170.193, -28.3881, 1.11 ) }
    dend_72 { pt3dadd( 22.4885, 171.937, -28.248, 0.22 ) }
    dend_72 { pt3dadd( 22.6479, 172.706, -28.1536, 0.59 ) }
    dend_72 { pt3dadd( 22.9, 173.946, -27.9516, 0.22 ) }
    dend_72 { pt3dadd( 23.1039, 174.998, -27.7305, 1.18 ) }
    dend_72 { pt3dadd( 23.181, 175.404, -27.6408, 1.62 ) }
    dend_72 { pt3dadd( 23.4622, 176.943, -27.2703, 0.22 ) }
    dend_72 { pt3dadd( 23.5401, 177.421, -27.1448, 0.22 ) }
    dend_72 { pt3dadd( 23.6225, 177.953, -26.9945, 0.59 ) }
    dend_72 { pt3dadd( 23.6636, 178.223, -26.9165, 0.59 ) }
    dend_72 { pt3dadd( 23.6739, 178.299, -26.8962, 0.59 ) }
    dend_72 { pt3dadd( 23.7864, 179.146, -26.6543, 0.22 ) }
    dend_72 { pt3dadd( 23.8552, 179.608, -26.5058, 0.52 ) }
    dend_72 { pt3dadd( 23.8808, 179.745, -26.4592, 0.52 ) }
    dend_72 { pt3dadd( 23.8953, 179.808, -26.4373, 0.52 ) }
    dend_72 { pt3dadd( 24.1994, 180.923, -26.1287, 0.22 ) }
    dend_72 { pt3dadd( 24.4497, 181.778, -25.9405, 1.11 ) }
    dend_72 { pt3dadd( 24.5885, 182.18, -25.8883, 1.47 ) }
    dend_72 { pt3dadd( 24.6392, 182.307, -25.8757, 1.47 ) }
    dend_72 { pt3dadd( 24.8266, 182.752, -25.8437, 1.47 ) }
    dend_72 { pt3dadd( 25.4421, 184.129, -25.7838, 0.22 ) }
    dend_72 { pt3dadd( 25.4668, 184.182, -25.784, 0.22 ) }
    dend_72 { pt3dadd( 25.9406, 185.206, -25.8005, 0.22 ) }
    dend_72 { pt3dadd( 26.3217, 186.086, -25.819, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_72 { pt3dadd( 26.4916, 186.49, -25.8168, 1.55 ) }
    dend_72 { pt3dadd( 26.6548, 186.883, -25.8083, 1.55 ) }
    dend_72 { pt3dadd( 27.2409, 188.241, -25.7586, 0.22 ) }
    dend_72 { pt3dadd( 27.4647, 188.752, -25.7357, 0.74 ) }
    dend_72 { pt3dadd( 27.5517, 188.95, -25.7219, 0.74 ) }
    dend_72 { pt3dadd( 28.3184, 190.659, -25.5886, 0.22 ) }
    dend_72 { pt3dadd( 28.543, 191.148, -25.5436, 0.74 ) }
    dend_72 { pt3dadd( 29.2339, 192.601, -25.3317, 0.22 ) }
    dend_72 { pt3dadd( 29.3104, 192.753, -25.302, 0.22 ) }
    dend_72 { pt3dadd( 29.7428, 193.591, -25.129, 0.74 ) }
    dend_72 { pt3dadd( 29.7934, 193.688, -25.1066, 0.74 ) }
    dend_72 { pt3dadd( 30.0593, 194.207, -24.9761, 1.03 ) }
    dend_72 { pt3dadd( 30.9469, 195.98, -24.5319, 0.15 ) }
    dend_72 { pt3dadd( 30.9759, 196.042, -24.5172, 0.15 ) }
    dend_72 { pt3dadd( 31.4682, 197.142, -24.3028, 0.15 ) }
    dend_72 { pt3dadd( 31.701, 197.681, -24.2161, 1.03 ) }
    dend_72 { pt3dadd( 31.8201, 197.976, -24.1833, 1.03 ) }
    dend_72 { pt3dadd( 32.1335, 198.871, -24.1299, 0.15 ) }
    dend_72 { pt3dadd( 32.3459, 199.61, -24.139, 1.11 ) }
    dend_72 { pt3dadd( 32.4374, 199.973, -24.1456, 1.4 ) }
    dend_72 { pt3dadd( 32.4491, 200.03, -24.1472, 1.4 ) }
    dend_72 { pt3dadd( 32.673, 201.4, -24.2074, 0.22 ) }
    dend_72 { pt3dadd( 32.7592, 202.114, -24.2307, 0.59 ) }
    dend_72 { pt3dadd( 32.7639, 202.175, -24.2319, 0.59 ) }
    dend_72 { pt3dadd( 32.7736, 202.388, -24.2306, 0.59 ) }
    dend_72 { pt3dadd( 32.7974, 203.253, -24.2192, 0.22 ) }
    dend_72 { pt3dadd( 32.8059, 203.882, -24.2078, 1.18 ) }
    dend_72 { pt3dadd( 32.7936, 204.517, -24.1899, 1.84 ) }
    dend_72 { pt3dadd( 32.7785, 204.879, -24.1815, 1.47 ) }
    dend_72 { pt3dadd( 32.6337, 206.705, -24.1247, 0.22 ) }
    dend_72 { pt3dadd( 32.5521, 207.398, -24.0991, 0.22 ) }
    dend_72 { pt3dadd( 32.5421, 207.455, -24.0963, 0.22 ) }
    dend_72 { pt3dadd( 32.3805, 208.125, -24.0695, 0.81 ) }
    dend_72 { pt3dadd( 32.2458, 208.622, -24.0565, 1.62 ) }
    dend_72 { pt3dadd( 32.0664, 209.222, -24.0453, 2.28 ) }
    dend_72 { pt3dadd( 31.9978, 209.448, -24.0433, 2.5 ) }
    dend_72 { pt3dadd( 31.8157, 210.119, -24.0358, 2.14 ) }
    dend_72 { pt3dadd( 31.39, 211.96, -24.0279, 0.22 ) }
    dend_72 { pt3dadd( 31.276, 212.576, -24.0337, 0.59 ) }
    dend_72 { pt3dadd( 31.2671, 212.655, -24.0353, 0.59 ) }
    dend_72 { pt3dadd( 31.2283, 213.418, -24.0526, 0.22 ) }
    dend_72 { pt3dadd( 31.2341, 213.987, -24.0557, 0.81 ) }
    dend_72 { pt3dadd( 31.24, 214.077, -24.0546, 0.81 ) }
    dend_72 { pt3dadd( 31.2763, 214.432, -24.0356, 0.81 ) }
    dend_72 { pt3dadd( 31.3682, 215.525, -23.9572, 0.22 ) }
    dend_72 { pt3dadd( 31.4181, 216.157, -23.9081, 0.44 ) }
    dend_72 { pt3dadd( 31.5233, 217.684, -23.7734, 0.15 ) }
    dend_72 { pt3dadd( 31.5646, 218.248, -23.7199, 0.15 ) }
    dend_72 { pt3dadd( 31.595, 218.711, -23.6726, 0.59 ) }
    dend_72 { pt3dadd( 31.6119, 219.001, -23.6393, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 50/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -6.70405, 32.864, -6.00321, 1.55 ) }
    dend_27 { pt3dadd( -5.60297, 35.3477, -7.38778, 1.55 ) }
    dend_27 { pt3dadd( -5.55314, 35.4682, -7.44499, 1.55 ) }
    dend_27 { pt3dadd( -4.9511, 37.07, -8.03262, 1.47 ) }
    dend_27 { pt3dadd( -4.92532, 37.146, -8.05322, 1.47 ) }
    dend_27 { pt3dadd( -4.58387, 38.201, -8.28979, 1.25 ) }
    dend_27 { pt3dadd( -4.0753, 39.9319, -8.57454, 1.25 ) }
    dend_27 { pt3dadd( -4.03214, 40.133, -8.57641, 1.25 ) }
    dend_27 { pt3dadd( -3.77524, 41.3793, -8.52668, 0.81 ) }
    dend_27 { pt3dadd( -3.52038, 42.7786, -8.40169, 1.18 ) }
    dend_27 { pt3dadd( -3.49863, 42.9133, -8.38771, 1.18 ) }
    dend_27 { pt3dadd( -3.27944, 44.5378, -8.2023, 1.84 ) }
    dend_27 { pt3dadd( -3.15534, 45.7581, -8.05992, 2.14 ) }
    dend_27 { pt3dadd( -3.05913, 46.9844, -7.9322, 2.14 ) }
    dend_27 { pt3dadd( -3.00109, 48.3898, -7.83061, 2.14 ) }
    dend_27 { pt3dadd( -3.0021, 48.4602, -7.82768, 2.14 ) }
    dend_27 { pt3dadd( -3.05003, 49.2773, -7.82738, 1.77 ) }
    dend_27 { pt3dadd( -3.2067, 50.7902, -7.88929, 1.77 ) }
    dend_27 { pt3dadd( -3.38341, 51.8184, -7.97313, 1.47 ) }
    dend_27 { pt3dadd( -3.71021, 53.1066, -8.12124, 1.25 ) }
    dend_27 { pt3dadd( -4.13416, 54.4175, -8.33853, 1.62 ) }
    dend_27 { pt3dadd( -4.4908, 55.3601, -8.53451, 1.84 ) }
    dend_27 { pt3dadd( -4.52428, 55.4367, -8.55412, 1.84 ) }
    dend_27 { pt3dadd( -5.07169, 56.539, -8.92133, 1.99 ) }
    dend_27 { pt3dadd( -5.69143, 57.7725, -9.36116, 1.69 ) }
    dend_27 { pt3dadd( -6.22931, 58.9449, -9.75125, 1.47 ) }
    dend_27 { pt3dadd( -6.50758, 59.799, -10.0255, 1.33 ) }
    dend_27 { pt3dadd( -6.52162, 59.8655, -10.0451, 1.33 ) }
    dend_27 { pt3dadd( -6.59507, 61.0591, -10.352, 1.11 ) }
    dend_27 { pt3dadd( -6.43212, 62.3079, -10.6249, 0.88 ) }
    dend_27 { pt3dadd( -6.10714, 63.3427, -10.7903, 0.96 ) }
    dend_27 { pt3dadd( -5.47631, 64.9058, -10.9343, 0.81 ) }
    dend_27 { pt3dadd( -5.42876, 65.0242, -10.9405, 0.81 ) }
    dend_27 { pt3dadd( -5.16527, 65.7607, -10.967, 0.66 ) }
    dend_27 { pt3dadd( -5.10263, 65.9635, -10.971, 0.66 ) }
    dend_27 { pt3dadd( -4.96297, 67.133, -11.0485, 0.66 ) }
    dend_27 { pt3dadd( -5.04793, 68.0704, -11.1351, 0.96 ) }
    dend_27 { pt3dadd( -5.33423, 69.0672, -11.2433, 1.69 ) }
    dend_27 { pt3dadd( -5.50078, 69.5165, -11.3053, 1.99 ) }
    dend_27 { pt3dadd( -5.70881, 69.9729, -11.393, 1.99 ) }
    dend_27 { pt3dadd( -6.21424, 70.9924, -11.6243, 1.84 ) }
    dend_27 { pt3dadd( -6.25327, 71.0637, -11.6434, 1.84 ) }
    dend_27 { pt3dadd( -6.92762, 72.2995, -12.0112, 2.06 ) }
    dend_27 { pt3dadd( -7.15367, 72.7438, -12.1431, 2.21 ) }
    dend_27 { pt3dadd( -7.51812, 73.5331, -12.3564, 2.14 ) }
    dend_27 { pt3dadd( -8.02252, 74.7119, -12.6453, 1.18 ) }
    dend_27 { pt3dadd( -8.57158, 76.1011, -12.9442, 1.03 ) }
    dend_27 { pt3dadd( -8.96661, 77.1489, -13.1367, 1.03 ) }
    dend_27 { pt3dadd( -9.31608, 78.1233, -13.2851, 1.33 ) }
    dend_27 { pt3dadd( -9.70382, 79.2631, -13.4231, 2.14 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -9.96291, 80.0958, -13.4846, 2.65 ) }
    dend_27 { pt3dadd( -10.212, 81.0053, -13.53, 2.65 ) }
    dend_27 { pt3dadd( -10.4635, 82.1034, -13.5676, 2.65 ) }
    dend_27 { pt3dadd( -10.494, 82.2571, -13.5697, 2.65 ) }
    dend_27 { pt3dadd( -10.6274, 83.0224, -13.572, 2.36 ) }
    dend_27 { pt3dadd( -10.7308, 83.9128, -13.561, 2.06 ) }
    dend_27 { pt3dadd( -10.8253, 85.0574, -13.5365, 1.4 ) }
    dend_27 { pt3dadd( -10.8928, 86.2946, -13.4955, 0.81 ) }
    dend_27 { pt3dadd( -10.9376, 88.3005, -13.3902, 0.66 ) }
    dend_27 { pt3dadd( -10.9259, 89.9788, -13.259, 0.66 ) }
    dend_27 { pt3dadd( -10.8599, 91.7921, -13.0707, 1.11 ) }
    dend_27 { pt3dadd( -10.8543, 91.8769, -13.0605, 1.11 ) }
    dend_27 { pt3dadd( -10.7441, 92.9896, -12.8971, 1.55 ) }
    dend_27 { pt3dadd( -10.5751, 94.2786, -12.6828, 1.84 ) }
    dend_27 { pt3dadd( -10.3468, 95.7445, -12.4264, 2.28 ) }
    dend_27 { pt3dadd( -10.2396, 96.4254, -12.3057, 2.58 ) }
    dend_27 { pt3dadd( -10.1069, 97.3021, -12.1752, 2.58 ) }
    dend_27 { pt3dadd( -10.0191, 97.9403, -12.1027, 2.58 ) }
    dend_27 { pt3dadd( -9.91002, 98.9771, -12.0504, 2.36 ) }
    dend_27 { pt3dadd( -9.8485, 99.8734, -12.0671, 1.92 ) }
    dend_27 { pt3dadd( -9.84561, 99.9701, -12.0734, 1.92 ) }
    dend_27 { pt3dadd( -9.83337, 101.396, -12.1799, 0.88 ) }
    dend_27 { pt3dadd( -9.85587, 102.782, -12.2812, 0.66 ) }
    dend_27 { pt3dadd( -9.88911, 104.22, -12.401, 0.66 ) }
    dend_27 { pt3dadd( -9.90457, 105.152, -12.492, 0.81 ) }
    dend_27 { pt3dadd( -9.89882, 106.176, -12.5927, 0.74 ) }
    dend_27 { pt3dadd( -9.87519, 107.212, -12.6912, 0.59 ) }
    dend_27 { pt3dadd( -9.85196, 108.249, -12.7769, 1.25 ) }
    dend_27 { pt3dadd( -9.79637, 109.241, -12.8588, 1.84 ) }
    dend_27 { pt3dadd( -9.66949, 110.636, -12.9478, 2.5 ) }
    dend_27 { pt3dadd( -9.5668, 111.476, -13.0004, 2.65 ) }
    dend_27 { pt3dadd( -9.54253, 111.615, -13.0138, 2.65 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 32/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -6.70405, 32.864, -6.00321, 0.52 ) }
    dend_26 { pt3dadd( -6.51198, 33.7929, -5.88264, 0.52 ) }
    dend_26 { pt3dadd( -6.50571, 33.8385, -5.87606, 0.52 ) }
    dend_26 { pt3dadd( -6.50255, 34.2848, -5.81328, 0.52 ) }
    dend_26 { pt3dadd( -6.60961, 35.1134, -5.70999, 0.52 ) }
    dend_26 { pt3dadd( -6.61887, 35.1582, -5.70496, 0.52 ) }
    dend_26 { pt3dadd( -6.67931, 35.3603, -5.68608, 0.66 ) }
    dend_26 { pt3dadd( -6.71779, 35.4192, -5.67518, 0.66 ) }
    dend_26 { pt3dadd( -6.98059, 35.7393, -5.62665, 0.52 ) }
    dend_26 { pt3dadd( -7.21083, 35.9693, -5.59655, 0.66 ) }
    dend_26 { pt3dadd( -7.2509, 36.0062, -5.59053, 0.66 ) }
    dend_26 { pt3dadd( -7.4992, 36.2372, -5.53744, 0.59 ) }
    dend_26 { pt3dadd( -7.88307, 36.598, -5.43722, 0.29 ) }
    dend_26 { pt3dadd( -8.20587, 36.9136, -5.3295, 0.29 ) }
    dend_26 { pt3dadd( -8.26435, 36.9723, -5.30511, 0.29 ) }
    dend_26 { pt3dadd( -8.64765, 37.3728, -5.11899, 0.59 ) }
    dend_26 { pt3dadd( -8.90521, 37.6448, -4.99899, 0.81 ) }
    dend_26 { pt3dadd( -8.93783, 37.678, -4.9859, 0.81 ) }
    dend_26 { pt3dadd( -9.16645, 37.8916, -4.92216, 0.81 ) }
    dend_26 { pt3dadd( -9.1978, 37.9158, -4.91664, 0.81 ) }
    dend_26 { pt3dadd( -9.5112, 38.1235, -4.88529, 0.81 ) }
    dend_26 { pt3dadd( -10.0567, 38.4806, -4.85019, 0.37 ) }
    dend_26 { pt3dadd( -10.4346, 38.7494, -4.79632, 0.37 ) }
    dend_26 { pt3dadd( -10.7409, 38.9843, -4.72734, 0.59 ) }
    dend_26 { pt3dadd( -10.9984, 39.2006, -4.64383, 0.81 ) }
    dend_26 { pt3dadd( -11.4163, 39.5754, -4.46475, 0.29 ) }
    dend_26 { pt3dadd( -11.8235, 39.9615, -4.25414, 0.52 ) }
    dend_26 { pt3dadd( -12.268, 40.4152, -3.97707, 1.33 ) }
    dend_26 { pt3dadd( -12.4652, 40.6287, -3.83906, 1.55 ) }
    dend_26 { pt3dadd( -13.0408, 41.2777, -3.40374, 0.29 ) }
    dend_26 { pt3dadd( -13.4952, 41.7927, -3.05752, 1.55 ) }
    dend_26 { pt3dadd( -13.604, 41.9096, -2.9883, 1.84 ) }
    dend_26 { pt3dadd( -13.6617, 41.9636, -2.96558, 1.84 ) }
    dend_26 { pt3dadd( -13.8257, 42.1074, -2.94688, 1.84 ) }
    dend_26 { pt3dadd( -13.8552, 42.1342, -2.94996, 1.84 ) }
    dend_26 { pt3dadd( -14.0744, 42.3403, -3.02565, 1.62 ) }
    dend_26 { pt3dadd( -14.5091, 42.7524, -3.23673, 0.37 ) }
    dend_26 { pt3dadd( -14.8638, 43.1077, -3.4416, 0.29 ) }
    dend_26 { pt3dadd( -15.1249, 43.4036, -3.62673, 0.59 ) }
    dend_26 { pt3dadd( -15.2878, 43.6047, -3.76721, 0.59 ) }
    dend_26 { pt3dadd( -15.4003, 43.7503, -3.87356, 0.59 ) }
    dend_26 { pt3dadd( -15.5461, 43.953, -4.02702, 0.52 ) }
    dend_26 { pt3dadd( -15.813, 44.3887, -4.32583, 0.29 ) }
    dend_26 { pt3dadd( -15.9867, 44.7189, -4.5444, 0.74 ) }
    dend_26 { pt3dadd( -16.1937, 45.1117, -4.78486, 0.66 ) }
    dend_26 { pt3dadd( -16.3111, 45.3256, -4.90524, 0.88 ) }
    dend_26 { pt3dadd( -16.5248, 45.6985, -5.09588, 0.66 ) }
    dend_26 { pt3dadd( -17.1258, 46.6737, -5.54153, 2.14 ) }
    dend_26 { pt3dadd( -17.3658, 47.0271, -5.68555, 2.14 ) }
    dend_26 { pt3dadd( -17.8779, 47.7311, -5.94642, 0.22 ) }
    dend_26 { pt3dadd( -18.1583, 48.1, -6.0665, 0.22 ) }
    dend_26 { pt3dadd( -18.4611, 48.4874, -6.17858, 0.22 ) }
    dend_26 { pt3dadd( -18.769, 48.8503, -6.2515, 0.88 ) }
    dend_26 { pt3dadd( -18.936, 49.0277, -6.26882, 1.03 ) }
    dend_26 { pt3dadd( -19.1487, 49.2387, -6.27023, 0.74 ) }
    dend_26 { pt3dadd( -19.6692, 49.7481, -6.24156, 0.22 ) }
    dend_26 { pt3dadd( -19.9868, 50.0513, -6.20711, 0.22 ) }
    dend_26 { pt3dadd( -20.4113, 50.4611, -6.16094, 0.22 ) }
    dend_26 { pt3dadd( -20.468, 50.5168, -6.15503, 0.22 ) }
    dend_26 { pt3dadd( -20.8695, 50.9303, -6.11527, 0.22 ) }
    dend_26 { pt3dadd( -21.4616, 51.5373, -6.07097, 1.69 ) }
    dend_26 { pt3dadd( -21.659, 51.7622, -6.06446, 2.21 ) }
    dend_26 { pt3dadd( -21.9768, 52.15, -6.07008, 2.21 ) }
    dend_26 { pt3dadd( -21.9999, 52.1824, -6.07042, 2.21 ) }
    dend_26 { pt3dadd( -22.4581, 52.9136, -6.05547, 0.22 ) }
    dend_26 { pt3dadd( -22.7243, 53.3997, -6.03118, 0.22 ) }
    dend_26 { pt3dadd( -23.1507, 54.2171, -5.94075, 0.22 ) }
    dend_26 { pt3dadd( -23.1826, 54.2789, -5.93182, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_26 { pt3dadd( -23.4921, 54.8576, -5.82258, 1.11 ) }
    dend_26 { pt3dadd( -23.7188, 55.2835, -5.746, 1.11 ) }
    dend_26 { pt3dadd( -23.9215, 55.6639, -5.66703, 0.59 ) }
    dend_26 { pt3dadd( -24.3094, 56.3809, -5.50575, 1.69 ) }
    dend_26 { pt3dadd( -24.4149, 56.5653, -5.46356, 1.77 ) }
    dend_26 { pt3dadd( -25.1007, 57.7498, -5.21913, 0.22 ) }
    dend_26 { pt3dadd( -25.6657, 58.7002, -5.01802, 0.22 ) }
    dend_26 { pt3dadd( -25.8809, 59.0604, -4.93182, 1.03 ) }
    dend_26 { pt3dadd( -26.0432, 59.3324, -4.8619, 1.03 ) }
    dend_26 { pt3dadd( -26.1888, 59.5751, -4.79718, 0.81 ) }
    dend_26 { pt3dadd( -26.6204, 60.2131, -4.58435, 0.22 ) }
    dend_26 { pt3dadd( -27.1542, 60.9058, -4.30911, 1.11 ) }
    dend_26 { pt3dadd( -27.2621, 61.0302, -4.257, 1.62 ) }
    dend_26 { pt3dadd( -27.4173, 61.1986, -4.17479, 1.62 ) }
    dend_26 { pt3dadd( -27.443, 61.2249, -4.15947, 1.62 ) }
    dend_26 { pt3dadd( -28.4018, 62.1625, -3.52997, 0.22 ) }
    dend_26 { pt3dadd( -28.76, 62.5016, -3.28429, 0.81 ) }
    dend_26 { pt3dadd( -28.9205, 62.6516, -3.17574, 0.81 ) }
    dend_26 { pt3dadd( -29.6931, 63.375, -2.63885, 0.22 ) }
    dend_26 { pt3dadd( -29.7229, 63.4035, -2.6169, 0.22 ) }
    dend_26 { pt3dadd( -30.2153, 63.8911, -2.22571, 1.18 ) }
    dend_26 { pt3dadd( -30.431, 64.1333, -1.99738, 1.55 ) }
    dend_26 { pt3dadd( -33.8161, 69.8017, -1.87458, 1.55 ) }
    dend_26 { pt3dadd( -37.3082, 75.3839, -1.33913, 1.55 ) }
    dend_26 { pt3dadd( -41.6838, 80.3391, -0.81235, 1.55 ) }
    dend_26 { pt3dadd( -46.0686, 85.135, 0.535016, 1.55 ) }
    dend_26 { pt3dadd( -50.9914, 88.9373, 2.94134, 1.55 ) }
    dend_26 { pt3dadd( -55.7022, 93.1036, 5.12701, 1.55 ) }
    dend_26 { pt3dadd( -59.1363, 97.9448, 8.089, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 3.53376, 52.959, 4.05328, 0.88 ) }
    dend_24 { pt3dadd( 3.02216, 53.3816, 5.79295, 0.88 ) }
    dend_24 { pt3dadd( 2.99022, 53.3976, 5.89951, 0.88 ) }
    dend_24 { pt3dadd( 2.58794, 53.4752, 7.11643, 0.88 ) }
    dend_24 { pt3dadd( 2.571, 53.4762, 7.16548, 0.88 ) }
    dend_24 { pt3dadd( 2.03468, 53.5254, 9.8903, 0.59 ) }
    dend_24 { pt3dadd( 2.02495, 53.5275, 9.95002, 0.59 ) }
    dend_24 { pt3dadd( 1.91322, 53.554, 10.8299, 1.18 ) }
    dend_24 { pt3dadd( 1.78136, 53.6105, 12.0305, 1.18 ) }
    dend_24 { pt3dadd( 1.77752, 53.614, 12.0821, 1.18 ) }
    dend_24 { pt3dadd( 1.63916, 54.2672, 16.4074, 0.22 ) }
    dend_24 { pt3dadd( 1.65453, 54.4043, 16.9037, 0.29 ) }
    dend_24 { pt3dadd( 1.70888, 54.7348, 17.8494, 1.11 ) }
    dend_24 { pt3dadd( 1.71396, 54.7604, 17.9064, 1.11 ) }
    dend_24 { pt3dadd( 1.79556, 55.0771, 18.5199, 1.11 ) }
    dend_24 { pt3dadd( 1.94882, 55.7409, 19.6353, 0.22 ) }
    dend_24 { pt3dadd( 2.03134, 56.288, 20.154, 0.59 ) }
    dend_24 { pt3dadd( 2.0405, 56.3239, 20.1893, 0.59 ) }
    dend_24 { pt3dadd( 2.11815, 56.545, 20.3948, 1.11 ) }
    dend_24 { pt3dadd( 0.573815, 58.5748, 28.647, 1.11 ) }
    dend_24 { pt3dadd( -3.02749, 60.718, 36.1979, 1.11 ) }
    dend_24 { pt3dadd( -4.81776, 63.7724, 44.0591, 1.11 ) }
    dend_24 { pt3dadd( -7.45134, 67.0239, 51.5931, 1.11 ) }
    dend_24 { pt3dadd( -9.95041, 70.7024, 58.9645, 1.11 ) }
    dend_24 { pt3dadd( -12.1605, 74.8274, 66.1778, 1.11 ) }
    dend_24 { pt3dadd( -14.8082, 79.2404, 73.0568, 1.11 ) }
    dend_24 { pt3dadd( -17.0265, 82.9199, 80.517, 1.11 ) }
    dend_24 { pt3dadd( -18.26, 86.5617, 88.2205, 1.11 ) }
    dend_24 { pt3dadd( -19.7417, 90.0943, 95.9338, 1.11 ) }
    dend_24 { pt3dadd( -20.6377, 94.6495, 103.158, 1.11 ) }
    dend_24 { pt3dadd( -21.7466, 99.5792, 110.088, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 60/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 3.53376, 52.959, 4.05328, 0.52 ) }
    dend_23 { pt3dadd( 3.8956, 54.1831, 4.7278, 0.52 ) }
    dend_23 { pt3dadd( 4.10253, 55.2458, 5.26487, 0.52 ) }
    dend_23 { pt3dadd( 4.10514, 55.2982, 5.28788, 0.44 ) }
    dend_23 { pt3dadd( 4.06239, 56.1879, 5.61488, 0.44 ) }
    dend_23 { pt3dadd( 4.05546, 56.2614, 5.63634, 0.44 ) }
    dend_23 { pt3dadd( 3.98301, 56.9563, 5.79718, 0.66 ) }
    dend_23 { pt3dadd( 3.96905, 57.0212, 5.80919, 0.66 ) }
    dend_23 { pt3dadd( 3.81322, 57.6865, 5.94502, 0.66 ) }
    dend_23 { pt3dadd( 3.70193, 58.2293, 6.09309, 0.44 ) }
    dend_23 { pt3dadd( 3.57782, 59.0228, 6.40529, 0.44 ) }
    dend_23 { pt3dadd( 3.49778, 59.7295, 6.74165, 0.96 ) }
    dend_23 { pt3dadd( 3.47148, 60.7369, 7.27301, 0.81 ) }
    dend_23 { pt3dadd( 3.47806, 60.8877, 7.3563, 0.81 ) }
    dend_23 { pt3dadd( 3.63908, 61.9226, 7.94767, 0.66 ) }
    dend_23 { pt3dadd( 3.90274, 62.875, 8.54712, 0.44 ) }
    dend_23 { pt3dadd( 3.95116, 62.9914, 8.62282, 0.44 ) }
    dend_23 { pt3dadd( 4.3453, 63.7132, 9.08013, 0.29 ) }
    dend_23 { pt3dadd( 4.60313, 64.0778, 9.30444, 0.29 ) }
    dend_23 { pt3dadd( 5.0429, 64.6424, 9.6448, 1.11 ) }
    dend_23 { pt3dadd( 5.68665, 65.3748, 10.0844, 1.47 ) }
    dend_23 { pt3dadd( 6.05055, 65.7922, 10.3476, 1.47 ) }
    dend_23 { pt3dadd( 6.08307, 65.8313, 10.3754, 1.47 ) }
    dend_23 { pt3dadd( 6.80142, 66.7192, 11.094, 0.88 ) }
    dend_23 { pt3dadd( 7.31895, 67.3848, 11.6676, 0.52 ) }
    dend_23 { pt3dadd( 7.34715, 67.423, 11.7008, 0.52 ) }
    dend_23 { pt3dadd( 7.7553, 67.9858, 12.1618, 0.74 ) }
    dend_23 { pt3dadd( 7.78426, 68.0245, 12.1937, 0.74 ) }
    dend_23 { pt3dadd( 8.08299, 68.398, 12.4661, 0.74 ) }
    dend_23 { pt3dadd( 8.11827, 68.4374, 12.4897, 0.74 ) }
    dend_23 { pt3dadd( 8.43486, 68.7647, 12.6459, 0.74 ) }
    dend_23 { pt3dadd( 9.1625, 69.5625, 12.9318, 0.37 ) }
    dend_23 { pt3dadd( 9.53881, 70.0195, 13.0483, 0.37 ) }
    dend_23 { pt3dadd( 9.99445, 70.6668, 13.172, 0.52 ) }
    dend_23 { pt3dadd( 10.3188, 71.2342, 13.2715, 0.37 ) }
    dend_23 { pt3dadd( 10.7462, 72.1742, 13.4225, 0.74 ) }
    dend_23 { pt3dadd( 10.9626, 72.8868, 13.5229, 1.11 ) }
    dend_23 { pt3dadd( 11.0784, 73.5716, 13.6025, 0.96 ) }
    dend_23 { pt3dadd( 11.1081, 74.4326, 13.7104, 0.44 ) }
    dend_23 { pt3dadd( 11.0257, 75.4427, 13.8501, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_23 { pt3dadd( 10.9537, 75.9303, 13.9269, 0.29 ) }
    dend_23 { pt3dadd( 10.8256, 76.6644, 14.0499, 0.29 ) }
    dend_23 { pt3dadd( 10.8159, 76.7302, 14.0605, 0.29 ) }
    dend_23 { pt3dadd( 10.7515, 77.4298, 14.1647, 0.37 ) }
    dend_23 { pt3dadd( 10.7328, 78.2976, 14.2699, 0.52 ) }
    dend_23 { pt3dadd( 10.7859, 79.0987, 14.3319, 1.11 ) }
    dend_23 { pt3dadd( 10.8647, 79.6521, 14.3729, 1.69 ) }
    dend_23 { pt3dadd( 10.9332, 80.0525, 14.3991, 1.77 ) }
    dend_23 { pt3dadd( 10.993, 80.5199, 14.4268, 1.69 ) }
    dend_23 { pt3dadd( 11.0362, 80.9909, 14.4516, 1.47 ) }
    dend_23 { pt3dadd( 11.0369, 81.3072, 14.465, 1.47 ) }
    dend_23 { pt3dadd( 11.0272, 81.3758, 14.4667, 1.47 ) }
    dend_23 { pt3dadd( 10.7296, 82.581, 14.5025, 0.29 ) }
    dend_23 { pt3dadd( 10.5587, 83.1228, 14.5194, 0.66 ) }
    dend_23 { pt3dadd( 10.5376, 83.1867, 14.524, 0.66 ) }
    dend_23 { pt3dadd( 10.4454, 83.4885, 14.5574, 0.37 ) }
    dend_23 { pt3dadd( 10.29, 84.1306, 14.6574, 0.29 ) }
    dend_23 { pt3dadd( 10.1582, 84.9009, 14.7998, 0.29 ) }
    dend_23 { pt3dadd( 10.1531, 84.9667, 14.8135, 0.29 ) }
    dend_23 { pt3dadd( 10.1572, 85.7925, 14.9765, 1.03 ) }
    dend_23 { pt3dadd( 10.1965, 86.4876, 15.1028, 1.69 ) }
    dend_23 { pt3dadd( 10.2814, 87.2277, 15.2162, 2.14 ) }
    dend_23 { pt3dadd( 10.3256, 87.5652, 15.2604, 2.28 ) }
    dend_23 { pt3dadd( 10.3682, 88.1055, 15.3023, 1.77 ) }
    dend_23 { pt3dadd( 10.3856, 88.7317, 15.3171, 1.18 ) }
    dend_23 { pt3dadd( 10.363, 89.3853, 15.2905, 0.52 ) }
    dend_23 { pt3dadd( 10.3086, 90.0159, 15.2467, 0.37 ) }
    dend_23 { pt3dadd( 10.2463, 90.4529, 15.1853, 0.37 ) }
    dend_23 { pt3dadd( 10.1037, 91.3641, 15.0333, 0.74 ) }
    dend_23 { pt3dadd( 10.0572, 91.6971, 14.969, 1.25 ) }
    dend_23 { pt3dadd( 9.9854, 92.2434, 14.849, 1.4 ) }
    dend_23 { pt3dadd( 9.9066, 92.9954, 14.6733, 0.81 ) }
    dend_23 { pt3dadd( 9.80113, 94.5111, 14.3202, 0.37 ) }
    dend_23 { pt3dadd( 9.78503, 95.3401, 14.1282, 0.37 ) }
    dend_23 { pt3dadd( 9.80839, 96.6804, 13.8327, 0.29 ) }
    dend_23 { pt3dadd( 9.85346, 97.7022, 13.6124, 1.84 ) }
    dend_23 { pt3dadd( 9.886, 98.0841, 13.5336, 2.28 ) }
    dend_23 { pt3dadd( 9.96462, 98.6595, 13.424, 2.14 ) }
    dend_23 { pt3dadd( 10.1959, 99.8932, 13.2484, 0.52 ) }
    dend_23 { pt3dadd( 10.3426, 100.588, 13.1645, 0.74 ) }
    dend_23 { pt3dadd( 10.4479, 101.071, 13.1266, 0.74 ) }
    dend_23 { pt3dadd( 10.5897, 101.748, 13.0974, 0.22 ) }
    dend_23 { pt3dadd( 10.6529, 102.172, 13.0865, 0.22 ) }
    dend_23 { pt3dadd( 10.7006, 103.027, 13.0591, 0.74 ) }
    dend_23 { pt3dadd( 10.6849, 103.247, 13.0463, 0.74 ) }
    dend_23 { pt3dadd( 10.5843, 103.97, 12.9817, 0.22 ) }
    dend_23 { pt3dadd( 10.4871, 104.51, 12.9226, 0.74 ) }
    dend_23 { pt3dadd( 10.397, 104.959, 12.8657, 0.96 ) }
    dend_23 { pt3dadd( 10.2112, 106.007, 12.721, 0.37 ) }
    dend_23 { pt3dadd( 10.045, 107.282, 12.5279, 1.25 ) }
    dend_23 { pt3dadd( 10.019, 107.728, 12.4626, 1.55 ) }
    dend_23 { pt3dadd( 10.0228, 108.08, 12.4235, 1.77 ) }
    dend_23 { pt3dadd( 10.0501, 108.669, 12.3897, 1.77 ) }
    dend_23 { pt3dadd( 10.1016, 109.451, 12.3826, 0.88 ) }
    dend_23 { pt3dadd( 10.1421, 109.965, 12.4046, 0.52 ) }
    dend_23 { pt3dadd( 10.1994, 110.77, 12.4748, 0.44 ) }
    dend_23 { pt3dadd( 10.252, 111.8, 12.5435, 0.29 ) }
    dend_23 { pt3dadd( 10.2772, 113.062, 12.6091, 1.25 ) }
    dend_23 { pt3dadd( 10.2727, 113.614, 12.6323, 2.21 ) }
    dend_23 { pt3dadd( 10.2601, 113.991, 12.6428, 2.5 ) }
    dend_23 { pt3dadd( 10.2239, 114.776, 12.651, 2.28 ) }
    dend_23 { pt3dadd( 10.1161, 116.101, 12.59, 0.66 ) }
    dend_23 { pt3dadd( 10.0509, 116.815, 12.5204, 0.52 ) }
    dend_23 { pt3dadd( 9.98107, 117.586, 12.4246, 0.66 ) }
    dend_23 { pt3dadd( 9.93326, 118.141, 12.3501, 0.96 ) }
    dend_23 { pt3dadd( 9.87522, 118.846, 12.2447, 0.96 ) }
    dend_23 { pt3dadd( 9.74483, 120.544, 11.964, 0.22 ) }
    dend_23 { pt3dadd( 9.71084, 121.249, 11.8559, 1.18 ) }
    dend_23 { pt3dadd( 9.71108, 121.64, 11.7885, 0.88 ) }
    dend_23 { pt3dadd( 9.73882, 122.167, 11.6888, 0.74 ) }
    dend_23 { pt3dadd( 9.81887, 122.845, 11.5574, 0.29 ) }
    dend_23 { pt3dadd( 9.83289, 122.91, 11.5456, 0.29 ) }
    dend_23 { pt3dadd( 10.0486, 123.473, 11.468, 0.81 ) }
    dend_23 { pt3dadd( 10.0701, 123.536, 11.4562, 0.81 ) }
    dend_23 { pt3dadd( 10.1604, 123.931, 11.3804, 1.03 ) }
    dend_23 { pt3dadd( 10.1905, 124.131, 11.3418, 1.03 ) }
    dend_23 { pt3dadd( 10.2006, 124.403, 11.2931, 1.03 ) }
    dend_23 { pt3dadd( 10.0764, 125.632, 11.0306, 0.29 ) }
    dend_23 { pt3dadd( 9.88196, 126.53, 10.8141, 0.29 ) }
    dend_23 { pt3dadd( 9.73592, 127.093, 10.6746, 0.59 ) }
    dend_23 { pt3dadd( 9.69657, 127.228, 10.6411, 0.59 ) }
    dend_23 { pt3dadd( 9.5577, 127.743, 10.5175, 0.37 ) }
    dend_23 { pt3dadd( 9.37015, 128.646, 10.3221, 0.29 ) }
    dend_23 { pt3dadd( 9.24885, 129.631, 10.1506, 1.11 ) }
    dend_23 { pt3dadd( 9.24113, 130.034, 10.0933, 1.69 ) }
    dend_23 { pt3dadd( 9.26264, 130.472, 10.0398, 1.84 ) }
    dend_23 { pt3dadd( 9.32252, 131.169, 9.9703, 1.62 ) }
    dend_23 { pt3dadd( 9.45325, 132.156, 9.89945, 0.74 ) }
    dend_23 { pt3dadd( 9.61353, 133.091, 9.87031, 0.52 ) }
    dend_23 { pt3dadd( 9.62618, 133.16, 9.86891, 0.52 ) }
    dend_23 { pt3dadd( 9.79303, 134.182, 9.85005, 0.37 ) }
    dend_23 { pt3dadd( 9.80263, 134.259, 9.84793, 0.37 ) }
    dend_23 { pt3dadd( 9.83581, 134.901, 9.82585, 1.25 ) }
    dend_23 { pt3dadd( 9.81783, 135.352, 9.77332, 0.96 ) }
    dend_23 { pt3dadd( 9.81248, 135.418, 9.76201, 0.96 ) }
    dend_23 { pt3dadd( 9.75434, 136.029, 9.64661, 0.74 ) }
    dend_23 { pt3dadd( 9.68869, 136.657, 9.50049, 0.59 ) }
    dend_23 { pt3dadd( 9.6298, 137.176, 9.37608, 0.74 ) }
    dend_23 { pt3dadd( 9.4439, 138.547, 9.0461, 0.37 ) }
    dend_23 { pt3dadd( 9.31817, 139.39, 8.84549, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_23 { pt3dadd( 9.20722, 140.116, 8.67705, 0.52 ) }
    dend_23 { pt3dadd( 9.03715, 141.049, 8.45232, 0.29 ) }
    dend_23 { pt3dadd( 8.8718, 141.776, 8.2648, 0.81 ) }
    dend_23 { pt3dadd( 8.73276, 142.259, 8.12724, 1.18 ) }
    dend_23 { pt3dadd( 8.71181, 142.313, 8.11097, 1.18 ) }
    dend_23 { pt3dadd( 8.59931, 142.578, 8.0218, 1.18 ) }
    dend_23 { pt3dadd( 8.29358, 143.393, 7.7631, 1.18 ) }
    dend_23 { pt3dadd( 8.07773, 144.091, 7.56917, 0.44 ) }
    dend_23 { pt3dadd( 7.89544, 144.862, 7.3713, 0.29 ) }
    dend_23 { pt3dadd( 7.86939, 145.015, 7.33704, 0.29 ) }
    dend_23 { pt3dadd( 7.76129, 146.081, 7.14077, 0.29 ) }
    dend_23 { pt3dadd( 7.72613, 147.55, 6.94187, 1.62 ) }
    dend_23 { pt3dadd( 7.74301, 148.055, 6.9002, 2.65 ) }
    dend_23 { pt3dadd( 7.76781, 148.56, 6.87742, 2.87 ) }
    dend_23 { pt3dadd( 7.80109, 149.122, 6.86398, 2.36 ) }
    dend_23 { pt3dadd( 7.84265, 149.904, 6.85286, 1.69 ) }
    dend_23 { pt3dadd( 7.89311, 151.137, 6.83377, 0.52 ) }
    dend_23 { pt3dadd( 7.93504, 152.104, 6.81871, 0.52 ) }
    dend_23 { pt3dadd( 7.94869, 152.589, 6.80675, 0.81 ) }
    dend_23 { pt3dadd( 7.95925, 153.284, 6.78052, 0.44 ) }
    dend_23 { pt3dadd( 7.96915, 154.274, 6.7296, 0.44 ) }
    dend_23 { pt3dadd( 7.96825, 155.009, 6.68208, 0.37 ) }
    dend_23 { pt3dadd( 7.96924, 155.075, 6.67674, 0.37 ) }
    dend_23 { pt3dadd( 8.02197, 155.922, 6.59285, 0.37 ) }
    dend_23 { pt3dadd( 8.03549, 156.044, 6.57972, 0.37 ) }
    dend_23 { pt3dadd( 8.15686, 156.925, 6.48075, 1.62 ) }
    dend_23 { pt3dadd( 8.24883, 157.497, 6.42146, 2.36 ) }
    dend_23 { pt3dadd( 8.32596, 157.937, 6.38181, 2.36 ) }
    dend_23 { pt3dadd( 8.5891, 159.359, 6.26374, 0.29 ) }
    dend_23 { pt3dadd( 8.7249, 160.043, 6.21051, 0.29 ) }
    dend_23 { pt3dadd( 8.86861, 160.745, 6.16561, 0.37 ) }
    dend_23 { pt3dadd( 9.06383, 161.648, 6.11753, 0.37 ) }
    dend_23 { pt3dadd( 9.13793, 162.008, 6.08779, 0.59 ) }
    dend_23 { pt3dadd( 9.203, 162.381, 6.03941, 0.59 ) }
    dend_23 { pt3dadd( 9.21056, 162.436, 6.02882, 0.59 ) }
    dend_23 { pt3dadd( 9.32875, 163.831, 5.69856, 0.29 ) }
    dend_23 { pt3dadd( 9.42758, 165.547, 5.22267, 0.29 ) }
    dend_23 { pt3dadd( 9.45352, 166.373, 4.95512, 0.96 ) }
    dend_23 { pt3dadd( 9.45804, 167.109, 4.6901, 1.18 ) }
    dend_23 { pt3dadd( 9.43772, 167.678, 4.47319, 0.66 ) }
    dend_23 { pt3dadd( 9.39299, 168.239, 4.2531, 0.44 ) }
    dend_23 { pt3dadd( 9.38267, 168.301, 4.22672, 0.44 ) }
    dend_23 { pt3dadd( 9.2356, 168.979, 3.96653, 0.22 ) }
    dend_23 { pt3dadd( 9.20497, 169.127, 3.92652, 0.22 ) }
    dend_23 { pt3dadd( 9.02184, 170.22, 3.73033, 1.47 ) }
    dend_23 { pt3dadd( 8.95544, 170.698, 3.67136, 2.28 ) }
    dend_23 { pt3dadd( 8.90852, 171.125, 3.6336, 2.58 ) }
    dend_23 { pt3dadd( 8.7963, 172.341, 3.56391, 0.29 ) }
    dend_23 { pt3dadd( 8.74276, 173.008, 3.55011, 0.22 ) }
    dend_23 { pt3dadd( 8.7015, 173.691, 3.55118, 0.22 ) }
    dend_23 { pt3dadd( 8.67417, 174.263, 3.55974, 0.22 ) }
    dend_23 { pt3dadd( 8.62009, 175.21, 3.58076, 1.33 ) }
    dend_23 { pt3dadd( 8.60196, 175.465, 3.5893, 1.62 ) }
    dend_23 { pt3dadd( 8.56656, 175.805, 3.59164, 1.62 ) }
    dend_23 { pt3dadd( 8.44745, 176.569, 3.55666, 0.37 ) }
    dend_23 { pt3dadd( 8.29868, 177.274, 3.49854, 0.22 ) }
    dend_23 { pt3dadd( 8.21437, 177.633, 3.46699, 0.22 ) }
    dend_23 { pt3dadd( 8.12241, 177.993, 3.43445, 0.52 ) }
    dend_23 { pt3dadd( 7.93256, 178.783, 3.36421, 0.29 ) }
    dend_23 { pt3dadd( 7.64769, 180.146, 3.24775, 0.29 ) }
    dend_23 { pt3dadd( 7.51803, 180.898, 3.18848, 1.03 ) }
    dend_23 { pt3dadd( 7.46857, 181.381, 3.15689, 1.33 ) }
    dend_23 { pt3dadd( 7.4621, 181.593, 3.14541, 1.33 ) }
    dend_23 { pt3dadd( 7.47789, 182.036, 3.12915, 1.18 ) }
    dend_23 { pt3dadd( 7.53904, 182.673, 3.12375, 0.96 ) }
    dend_23 { pt3dadd( 7.61161, 183.154, 3.11899, 0.37 ) }
    dend_23 { pt3dadd( 7.75988, 183.999, 3.11088, 0.22 ) }
    dend_23 { pt3dadd( 7.896, 184.759, 3.10468, 0.22 ) }
    dend_23 { pt3dadd( 8.02899, 185.551, 3.09993, 1.11 ) }
    dend_23 { pt3dadd( 8.09525, 185.991, 3.08582, 1.92 ) }
    dend_23 { pt3dadd( 8.14373, 186.355, 3.05646, 2.5 ) }
    dend_23 { pt3dadd( 8.15089, 186.422, 3.04808, 2.5 ) }
    dend_23 { pt3dadd( 8.17905, 186.833, 2.97272, 2.5 ) }
    dend_23 { pt3dadd( 8.19377, 187.4, 2.84423, 2.36 ) }
    dend_23 { pt3dadd( 8.19268, 188.741, 2.49498, 0.29 ) }
    dend_23 { pt3dadd( 8.17653, 189.45, 2.29918, 0.29 ) }
    dend_23 { pt3dadd( 8.17118, 189.56, 2.26948, 0.29 ) }
    dend_23 { pt3dadd( 8.12093, 190.296, 2.0619, 1.33 ) }
    dend_23 { pt3dadd( 8.08755, 190.725, 1.94242, 1.55 ) }
    dend_23 { pt3dadd( 8.08244, 190.783, 1.92721, 1.55 ) }
    dend_23 { pt3dadd( 8.047, 191.201, 1.83635, 1.25 ) }
    dend_23 { pt3dadd( 8.04217, 191.88, 1.71912, 0.66 ) }
    dend_23 { pt3dadd( 8.08488, 193.151, 1.54649, 0.29 ) }
    dend_23 { pt3dadd( 8.13779, 193.881, 1.46852, 0.88 ) }
    dend_23 { pt3dadd( 8.17475, 194.257, 1.43462, 1.11 ) }
    dend_23 { pt3dadd( 8.2327, 194.906, 1.38795, 0.96 ) }
    dend_23 { pt3dadd( 8.30684, 196.203, 1.36675, 0.29 ) }
    dend_23 { pt3dadd( 8.33625, 197.598, 1.40718, 0.29 ) }
    dend_23 { pt3dadd( 8.31934, 198.502, 1.46773, 1.33 ) }
    dend_23 { pt3dadd( 8.28861, 199.214, 1.51614, 1.92 ) }
    dend_23 { pt3dadd( 8.23523, 199.998, 1.57715, 2.21 ) }
    dend_23 { pt3dadd( 8.03052, 202.16, 1.76473, 0.37 ) }
    dend_23 { pt3dadd( 7.87609, 203.397, 1.88251, 0.37 ) }
    dend_23 { pt3dadd( 7.71862, 204.574, 1.99679, 0.37 ) }
    dend_23 { pt3dadd( 7.59782, 205.436, 2.07616, 0.22 ) }
    dend_23 { pt3dadd( 7.47018, 206.384, 2.15489, 1.33 ) }
    dend_23 { pt3dadd( 7.42737, 206.73, 2.17817, 2.06 ) }
    dend_23 { pt3dadd( 7.37599, 207.074, 2.19204, 2.21 ) }
    dend_23 { pt3dadd( 7.22572, 207.895, 2.22922, 1.69 ) }
    dend_23 { pt3dadd( 6.9444, 209.196, 2.29254, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_23 { pt3dadd( 6.78096, 209.875, 2.32554, 0.81 ) }
    dend_23 { pt3dadd( 6.68635, 210.281, 2.33784, 0.81 ) }
    dend_23 { pt3dadd( 6.48949, 211.325, 2.34966, 0.22 ) }
    dend_23 { pt3dadd( 6.39454, 212.017, 2.34123, 0.81 ) }
    dend_23 { pt3dadd( 6.38255, 212.174, 2.33603, 0.81 ) }
    dend_23 { pt3dadd( 6.37653, 212.67, 2.30864, 0.81 ) }
    dend_23 { pt3dadd( 6.39391, 213.094, 2.28246, 0.74 ) }
    dend_23 { pt3dadd( 6.48532, 214.146, 2.21624, 0.22 ) }
    dend_23 { pt3dadd( 6.57621, 214.932, 2.15652, 0.81 ) }
    dend_23 { pt3dadd( 6.61366, 215.303, 2.1274, 1.03 ) }
    dend_23 { pt3dadd( 6.65795, 215.863, 2.08422, 0.44 ) }
    dend_23 { pt3dadd( 6.71279, 216.908, 2.00749, 0.29 ) }
    dend_23 { pt3dadd( 6.73892, 217.789, 1.94186, 0.29 ) }
    dend_23 { pt3dadd( 6.73873, 218.88, 1.86815, 1.55 ) }
    dend_23 { pt3dadd( 6.74124, 219.219, 1.84347, 1.92 ) }
    dend_23 { pt3dadd( 6.74254, 219.297, 1.83739, 1.92 ) }
    dend_23 { pt3dadd( 6.747, 219.643, 1.81096, 1.92 ) }
    dend_23 { pt3dadd( 6.74822, 221.759, 1.6484, 0.22 ) }
    dend_23 { pt3dadd( 6.72543, 222.745, 1.57838, 0.66 ) }
    dend_23 { pt3dadd( 6.7049, 223.134, 1.5556, 1.03 ) }
    dend_23 { pt3dadd( 6.65147, 223.718, 1.52148, 1.03 ) }
    dend_23 { pt3dadd( 6.56122, 224.372, 1.48658, 0.81 ) }
    dend_23 { pt3dadd( 6.4286, 225.059, 1.4543, 0.37 ) }
    dend_23 { pt3dadd( 6.35419, 225.355, 1.44494, 0.37 ) }
    dend_23 { pt3dadd( 6.21966, 225.888, 1.42735, 0.37 ) }
    dend_23 { pt3dadd( 6.035, 226.641, 1.4017, 0.29 ) }
    dend_23 { pt3dadd( 5.84192, 227.523, 1.36999, 0.29 ) }
    dend_23 { pt3dadd( 5.83088, 227.589, 1.36689, 0.29 ) }
    dend_23 { pt3dadd( 5.67817, 228.774, 1.31215, 0.22 ) }
    dend_23 { pt3dadd( 5.67114, 228.851, 1.3079, 0.22 ) }
    dend_23 { pt3dadd( 5.63091, 229.54, 1.26466, 0.22 ) }
    dend_23 { pt3dadd( 5.63029, 229.619, 1.25672, 0.22 ) }
    dend_23 { pt3dadd( 5.66516, 230.462, 1.14511, 1.47 ) }
    dend_23 { pt3dadd( 5.6911, 230.879, 1.07778, 1.84 ) }
    dend_23 { pt3dadd( 5.69498, 230.935, 1.06756, 1.84 ) }
    dend_23 { pt3dadd( 5.72502, 231.344, 0.993184, 1.84 ) }
    dend_23 { pt3dadd( 5.8252, 232.587, 0.7659, 0.22 ) }
    dend_23 { pt3dadd( 5.90985, 233.776, 0.559382, 0.22 ) }
    dend_23 { pt3dadd( 5.94834, 234.33, 0.479199, 0.88 ) }
    dend_23 { pt3dadd( 5.9655, 234.744, 0.431402, 1.18 ) }
    dend_23 { pt3dadd( 5.96778, 235.17, 0.398334, 0.96 ) }
    dend_23 { pt3dadd( 5.96426, 235.239, 0.396378, 0.96 ) }
    dend_23 { pt3dadd( 5.86555, 235.853, 0.428564, 0.37 ) }
    dend_23 { pt3dadd( 5.75389, 236.363, 0.471604, 0.37 ) }
    dend_23 { pt3dadd( 5.65116, 236.91, 0.523737, 0.37 ) }
    dend_23 { pt3dadd( 5.61029, 237.196, 0.546427, 0.29 ) }
    dend_23 { pt3dadd( 5.55276, 237.812, 0.58379, 0.22 ) }
    dend_23 { pt3dadd( 5.53085, 238.195, 0.600373, 0.52 ) }
    dend_23 { pt3dadd( 5.52064, 238.987, 0.617042, 0.22 ) }
    dend_23 { pt3dadd( 5.53861, 239.604, 0.61319, 0.22 ) }
    dend_23 { pt3dadd( 5.58523, 240.165, 0.58239, 1.11 ) }
    dend_23 { pt3dadd( 5.63102, 240.686, 0.515231, 1.47 ) }
    dend_23 { pt3dadd( 5.63496, 240.761, 0.501348, 1.47 ) }
    dend_23 { pt3dadd( 5.63967, 241.119, 0.42023, 1.33 ) }
    dend_23 { pt3dadd( 5.63353, 241.218, 0.39414, 1.33 ) }
    dend_23 { pt3dadd( 5.52495, 242.094, 0.163359, 0.74 ) }
    dend_23 { pt3dadd( 5.39371, 243.105, -0.110181, 0.29 ) }
    dend_23 { pt3dadd( 5.32412, 243.676, -0.257462, 0.37 ) }
    dend_23 { pt3dadd( 5.31915, 243.735, -0.27133, 0.37 ) }
    dend_23 { pt3dadd( 5.29397, 244.218, -0.370735, 0.37 ) }
    dend_23 { pt3dadd( 5.28013, 244.921, -0.496354, 0.22 ) }
    dend_23 { pt3dadd( 5.29986, 245.755, -0.62289, 1.11 ) }
    dend_23 { pt3dadd( 5.33445, 246.257, -0.698404, 1.4 ) }
    dend_23 { pt3dadd( 5.37886, 246.727, -0.776177, 1.18 ) }
    dend_23 { pt3dadd( 5.44262, 247.362, -0.890585, 0.44 ) }
    dend_23 { pt3dadd( 5.55704, 248.36, -1.10304, 0.22 ) }
    dend_23 { pt3dadd( 5.66137, 249.024, -1.25244, 0.74 ) }
    dend_23 { pt3dadd( 5.7315, 249.431, -1.33657, 1.33 ) }
    dend_23 { pt3dadd( 5.74174, 249.486, -1.3479, 1.33 ) }
    dend_23 { pt3dadd( 5.87086, 250.184, -1.47638, 1.62 ) }
    dend_23 { pt3dadd( 5.94218, 250.564, -1.53651, 1.62 ) }
    dend_23 { pt3dadd( 6.24695, 252.123, -1.73762, 0.29 ) }
    dend_23 { pt3dadd( 6.43656, 253.158, -1.84702, 0.29 ) }
    dend_23 { pt3dadd( 6.44662, 253.225, -1.85344, 0.29 ) }
    dend_23 { pt3dadd( 6.5651, 254.369, -1.94396, 0.29 ) }
    dend_23 { pt3dadd( 6.58714, 254.93, -1.9722, 1.03 ) }
    dend_23 { pt3dadd( 6.58524, 255.008, -1.97449, 1.03 ) }
    dend_23 { pt3dadd( 6.52272, 255.643, -1.98997, 1.18 ) }
    dend_23 { pt3dadd( 6.37214, 256.776, -2.01303, 0.29 ) }
    dend_23 { pt3dadd( 6.24906, 257.678, -2.0271, 0.29 ) }
    dend_23 { pt3dadd( 6.12703, 258.509, -2.03634, 1.18 ) }
    dend_23 { pt3dadd( 6.07993, 258.869, -2.03861, 1.47 ) }
    dend_23 { pt3dadd( 6.0157, 259.408, -2.03918, 1.25 ) }
    dend_23 { pt3dadd( 5.97619, 259.85, -2.03669, 1.33 ) }
    dend_23 { pt3dadd( 5.92052, 261.037, -2.01848, 0.22 ) }
    dend_23 { pt3dadd( 5.92313, 261.182, -2.01801, 0.22 ) }
    dend_23 { pt3dadd( 6.04017, 262.255, -2.00738, 0.22 ) }
    dend_23 { pt3dadd( 6.05284, 262.331, -2.00574, 0.22 ) }
    dend_23 { pt3dadd( 6.20401, 263.07, -1.98155, 0.74 ) }
    dend_23 { pt3dadd( 6.2828, 263.424, -1.96638, 1.18 ) }
    dend_23 { pt3dadd( 6.35749, 263.849, -1.94372, 1.18 ) }
    dend_23 { pt3dadd( 6.50862, 265.11, -1.87471, 0.22 ) }
    dend_23 { pt3dadd( 6.51444, 265.177, -1.87084, 0.22 ) }
    dend_23 { pt3dadd( 6.5596, 265.864, -1.83448, 0.66 ) }
    dend_23 { pt3dadd( 6.57968, 266.222, -1.8376, 0.66 ) }
    dend_23 { pt3dadd( 6.66226, 267.474, -1.91027, 0.22 ) }
    dend_23 { pt3dadd( 6.71021, 268.168, -1.97448, 1.25 ) }
    dend_23 { pt3dadd( 6.75491, 268.778, -2.04972, 1.55 ) }
    dend_23 { pt3dadd( 6.81975, 269.455, -2.14071, 1.69 ) }
    dend_23 { pt3dadd( 6.98332, 270.824, -2.34409, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_23 { pt3dadd( 7.15705, 272.166, -2.54972, 0.22 ) }
    dend_23 { pt3dadd( 7.2374, 272.743, -2.64132, 0.66 ) }
    dend_23 { pt3dadd( 7.30023, 273.16, -2.70308, 0.81 ) }
    dend_23 { pt3dadd( 7.30938, 273.226, -2.71158, 0.81 ) }
    dend_23 { pt3dadd( 7.48839, 274.651, -2.84907, 0.22 ) }
    dend_23 { pt3dadd( 7.58908, 275.488, -2.89045, 1.03 ) }
    dend_23 { pt3dadd( 7.6109, 275.701, -2.904, 1.33 ) }
    dend_23 { pt3dadd( 7.73149, 276.987, -2.9891, 0.22 ) }
    dend_23 { pt3dadd( 7.78116, 277.548, -3.02532, 0.81 ) }
    dend_23 { pt3dadd( 7.81777, 278.031, -3.05397, 1.03 ) }
    dend_23 { pt3dadd( 7.84247, 278.428, -3.07483, 0.74 ) }
    dend_23 { pt3dadd( 7.90832, 279.931, -3.15207, 0.22 ) }
    dend_23 { pt3dadd( 7.91731, 280.647, -3.185, 0.44 ) }
    dend_23 { pt3dadd( 7.88583, 281.514, -3.21838, 0.22 ) }
    dend_23 { pt3dadd( 7.8501, 282.284, -3.24373, 1.11 ) }
    dend_23 { pt3dadd( 7.82525, 282.7, -3.25408, 1.33 ) }
    dend_23 { pt3dadd( 7.78543, 283.339, -3.26679, 0.37 ) }
    dend_23 { pt3dadd( 7.7379, 284.171, -3.27423, 0.15 ) }
    dend_23 { pt3dadd( 7.71632, 284.797, -3.28761, 0.74 ) }
    dend_23 { pt3dadd( 7.72031, 284.866, -3.29083, 0.74 ) }
    dend_23 { pt3dadd( 7.75203, 285.146, -3.30787, 0.74 ) }
    dend_23 { pt3dadd( 7.91802, 286.238, -3.38438, 0.22 ) }
    dend_23 { pt3dadd( 8.02557, 286.849, -3.42994, 1.18 ) }
    dend_23 { pt3dadd( 8.10826, 287.286, -3.4656, 1.62 ) }
    dend_23 { pt3dadd( 8.46725, 289.248, -3.63293, 0.22 ) }
    dend_23 { pt3dadd( 8.57327, 289.869, -3.68609, 0.29 ) }
    dend_23 { pt3dadd( 8.58363, 289.937, -3.69179, 0.29 ) }
    dend_23 { pt3dadd( 8.6912, 290.767, -3.75616, 0.29 ) }
    dend_23 { pt3dadd( 8.78289, 291.571, -3.82057, 0.59 ) }
    dend_23 { pt3dadd( 8.82003, 292.124, -3.87367, 1.11 ) }
    dend_23 { pt3dadd( 8.82296, 292.218, -3.88328, 1.11 ) }
    dend_23 { pt3dadd( 8.84963, 292.769, -3.93979, 1.55 ) }
    dend_23 { pt3dadd( 8.87865, 293.37, -4.00017, 1.55 ) }
    dend_23 { pt3dadd( 8.88116, 293.427, -4.00562, 1.55 ) }
    dend_23 { pt3dadd( 8.94409, 295.303, -4.16473, 0.22 ) }
    dend_23 { pt3dadd( 8.99383, 296.661, -4.26754, 0.22 ) }
    dend_23 { pt3dadd( 9.06954, 297.603, -4.33408, 1.4 ) }
    dend_23 { pt3dadd( 9.09389, 297.819, -4.34799, 1.77 ) }
    dend_23 { pt3dadd( 9.17489, 298.444, -4.38299, 1.4 ) }
    dend_23 { pt3dadd( 9.30247, 299.198, -4.41747, 0.74 ) }
    dend_23 { pt3dadd( 9.51872, 300.184, -4.45016, 0.29 ) }
    dend_23 { pt3dadd( 9.97148, 301.95, -4.51646, 0.22 ) }
    dend_23 { pt3dadd( 10.1681, 302.651, -4.54465, 0.66 ) }
    dend_23 { pt3dadd( 10.2702, 302.988, -4.5597, 0.66 ) }
    dend_23 { pt3dadd( 10.5608, 303.84, -4.6005, 0.22 ) }
    dend_23 { pt3dadd( 10.584, 303.905, -4.60185, 0.22 ) }
    dend_23 { pt3dadd( 10.7688, 304.467, -4.59107, 0.52 ) }
    dend_23 { pt3dadd( 10.7886, 304.541, -4.58577, 0.52 ) }
    dend_23 { pt3dadd( 10.8777, 304.883, -4.55495, 0.52 ) }
    dend_23 { pt3dadd( 11.0184, 305.36, -4.47734, 0.22 ) }
    dend_23 { pt3dadd( 11.314, 306.24, -4.28338, 1.03 ) }
    dend_23 { pt3dadd( 11.5014, 306.699, -4.1607, 1.62 ) }
    dend_23 { pt3dadd( 11.6746, 307.102, -4.04394, 1.47 ) }
    dend_23 { pt3dadd( 11.9248, 307.68, -3.85937, 1.33 ) }
    dend_23 { pt3dadd( 12.5185, 309.07, -3.3555, 0.22 ) }
    dend_23 { pt3dadd( 12.9062, 309.97, -3.00596, 1.18 ) }
    dend_23 { pt3dadd( 13.4133, 311.095, -2.55524, 0.22 ) }
    dend_23 { pt3dadd( 13.6302, 311.568, -2.35644, 0.22 ) }
    dend_23 { pt3dadd( 13.9265, 312.208, -2.08006, 0.81 ) }
    dend_23 { pt3dadd( 14.5649, 313.572, -1.49271, 0.22 ) }
    dend_23 { pt3dadd( 14.5897, 313.63, -1.46854, 0.22 ) }
    dend_23 { pt3dadd( 14.7586, 314.066, -1.28494, 0.81 ) }
    dend_23 { pt3dadd( 14.7799, 314.125, -1.26047, 0.81 ) }
    dend_23 { pt3dadd( 14.8934, 314.385, -1.15272, 1.11 ) }
    dend_23 { pt3dadd( 15.1064, 314.788, -1.03408, 0.88 ) }
    // Section: dend_18, id: dend_18, parent: dend_14 (entry count 65/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -20.2188, -36.9464, 19.0317, 0.29 ) }
    dend_18 { pt3dadd( -21.0222, -37.0077, 19.7699, 0.29 ) }
    dend_18 { pt3dadd( -21.8919, -37.0987, 20.7819, 0.29 ) }
    dend_18 { pt3dadd( -22.3254, -37.1898, 21.25, 0.59 ) }
    dend_18 { pt3dadd( -23.0459, -37.4371, 21.9291, 0.59 ) }
    dend_18 { pt3dadd( -23.1215, -37.4692, 21.9869, 0.59 ) }
    dend_18 { pt3dadd( -24.3984, -38.0637, 22.8428, 0.59 ) }
    dend_18 { pt3dadd( -24.4407, -38.0874, 22.8756, 0.59 ) }
    dend_18 { pt3dadd( -24.9962, -38.4857, 23.4162, 0.37 ) }
    dend_18 { pt3dadd( -25.4434, -38.8655, 23.8646, 0.29 ) }
    dend_18 { pt3dadd( -25.8456, -39.2272, 24.2457, 0.29 ) }
    dend_18 { pt3dadd( -25.8754, -39.2554, 24.2741, 0.29 ) }
    dend_18 { pt3dadd( -26.6127, -40.0325, 24.9948, 0.74 ) }
    dend_18 { pt3dadd( -26.7827, -40.2434, 25.2168, 1.03 ) }
    dend_18 { pt3dadd( -27.1411, -40.8214, 25.8678, 0.29 ) }
    dend_18 { pt3dadd( -27.1783, -40.8904, 25.9422, 0.29 ) }
    dend_18 { pt3dadd( -27.4014, -41.3361, 26.3722, 0.37 ) }
    dend_18 { pt3dadd( -27.5785, -41.6666, 26.6446, 0.52 ) }
    dend_18 { pt3dadd( -27.7396, -41.943, 26.8106, 0.52 ) }
    dend_18 { pt3dadd( -28.1468, -42.3967, 27.0645, 0.29 ) }
    dend_18 { pt3dadd( -28.6998, -42.7463, 27.2796, 0.29 ) }
    dend_18 { pt3dadd( -29.0376, -42.8785, 27.3916, 0.59 ) }
    dend_18 { pt3dadd( -29.2805, -42.9379, 27.4639, 0.88 ) }
    dend_18 { pt3dadd( -29.5267, -42.9876, 27.5324, 1.03 ) }
    dend_18 { pt3dadd( -30.6674, -43.2193, 27.9034, 0.29 ) }
    dend_18 { pt3dadd( -31.3536, -43.3593, 28.1662, 0.44 ) }
    dend_18 { pt3dadd( -31.7453, -43.4741, 28.3484, 0.74 ) }
    dend_18 { pt3dadd( -31.8162, -43.5065, 28.3849, 0.74 ) }
    dend_18 { pt3dadd( -32.2266, -43.7288, 28.6123, 0.66 ) }
    dend_18 { pt3dadd( -32.8963, -44.1786, 29.0319, 0.66 ) }
    dend_18 { pt3dadd( -32.9326, -44.2139, 29.0606, 0.66 ) }
    dend_18 { pt3dadd( -33.2128, -44.5262, 29.2856, 0.29 ) }
    dend_18 { pt3dadd( -33.7744, -45.2181, 29.7717, 0.22 ) }
    dend_18 { pt3dadd( -38.7276, -49.2388, 35.1499, 0.22 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 99/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -20.2188, -36.9464, 19.0317, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -20.5219, -36.369, 20.5814, 0.74 ) }
    dend_15 { pt3dadd( -20.9877, -35.6058, 22.3876, 0.66 ) }
    dend_15 { pt3dadd( -21.0173, -35.5574, 22.5023, 0.66 ) }
    dend_15 { pt3dadd( -21.1553, -35.3314, 23.0371, 0.66 ) }
    dend_15 { pt3dadd( -21.1716, -35.3046, 23.1006, 0.66 ) }
    dend_15 { pt3dadd( -21.277, -35.132, 23.5092, 0.52 ) }
    dend_15 { pt3dadd( -21.3935, -34.8923, 23.7844, 0.52 ) }
    dend_15 { pt3dadd( -24.4111, -31.5905, 32.4351, 0.52 ) }
    dend_15 { pt3dadd( -26.6247, -27.498, 40.9702, 0.52 ) }
    dend_15 { pt3dadd( -28.2533, -25.1717, 50.3024, 0.52 ) }
    dend_15 { pt3dadd( -28.0189, -22.0074, 59.5103, 0.52 ) }
    // Section: dend_7, id: dend_7, parent: dend_1 (entry count 11/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -7.22115, -23.2732, 1.17597, 0.96 ) }
    dend_7 { pt3dadd( -7.81921, -24.6989, 1.18919, 0.96 ) }
    dend_7 { pt3dadd( -8.34712, -26.1195, 1.21002, 0.96 ) }
    dend_7 { pt3dadd( -8.39493, -26.2813, 1.21406, 0.96 ) }
    dend_7 { pt3dadd( -8.58815, -27.1155, 1.21506, 0.96 ) }
    dend_7 { pt3dadd( -8.87579, -28.549, 1.2014, 1.11 ) }
    dend_7 { pt3dadd( -9.16013, -30.2679, 1.12609, 1.11 ) }
    dend_7 { pt3dadd( -9.16712, -30.3504, 1.12208, 1.11 ) }
    dend_7 { pt3dadd( -9.2397, -32.0653, 1.02346, 1.03 ) }
    dend_7 { pt3dadd( -9.27051, -33.304, 0.938005, 1.99 ) }
    dend_7 { pt3dadd( -9.2697, -33.3865, 0.930244, 1.99 ) }
    dend_7 { pt3dadd( -9.21336, -34.5279, 0.760195, 2.87 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 23/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -7.22115, -23.2732, 1.17597, 1.92 ) }
    dend_2 { pt3dadd( -6.97973, -24.8032, 1.58545, 1.92 ) }
    dend_2 { pt3dadd( -6.75039, -26.1807, 1.95028, 1.92 ) }
    dend_2 { pt3dadd( -6.53471, -27.434, 2.2779, 1.92 ) }
    dend_2 { pt3dadd( -6.33918, -28.5963, 2.57338, 2.14 ) }
    dend_2 { pt3dadd( -6.14529, -29.6869, 2.84923, 1.62 ) }
    dend_2 { pt3dadd( -5.93096, -30.7803, 3.12592, 1.99 ) }
    dend_2 { pt3dadd( -5.75742, -31.5158, 3.3029, 2.73 ) }
    dend_2 { pt3dadd( -5.53229, -32.332, 3.51251, 2.36 ) }
    dend_2 { pt3dadd( -5.25613, -33.2327, 3.78649, 1.99 ) }
    dend_2 { pt3dadd( -4.86423, -34.4, 4.19465, 1.92 ) }
    dend_2 { pt3dadd( -4.60813, -35.091, 4.46875, 2.28 ) }
    dend_2 { pt3dadd( -4.34956, -35.7792, 4.78038, 2.5 ) }
    dend_2 { pt3dadd( -4.11513, -36.4327, 5.1116, 2.58 ) }
    dend_2 { pt3dadd( -3.78311, -37.485, 5.7204, 1.69 ) }
    dend_2 { pt3dadd( -3.77261, -37.5241, 5.74478, 1.69 ) }
    dend_2 { pt3dadd( -3.6035, -38.4554, 6.31914, 1.47 ) }
    dend_2 { pt3dadd( -3.48116, -39.7687, 7.08582, 1.25 ) }
    dend_2 { pt3dadd( -3.4722, -40.5099, 7.48182, 1.62 ) }
    dend_2 { pt3dadd( -3.51851, -41.3005, 7.85192, 1.62 ) }
    dend_2 { pt3dadd( -3.61995, -42.1574, 8.18475, 1.25 ) }
    dend_2 { pt3dadd( -3.79961, -43.1446, 8.50937, 1.25 ) }
    dend_2 { pt3dadd( -4.07036, -44.1123, 8.74274, 1.77 ) }
    dend_2 { pt3dadd( -4.27025, -44.6577, 8.81136, 1.92 ) }
    dend_2 { pt3dadd( -4.52215, -45.2792, 8.83924, 1.92 ) }
    dend_2 { pt3dadd( -4.7875, -45.8846, 8.83078, 2.06 ) }
    dend_2 { pt3dadd( -5.1375, -46.614, 8.79939, 1.92 ) }
    dend_2 { pt3dadd( -5.59212, -47.5351, 8.74246, 1.77 ) }
    dend_2 { pt3dadd( -6.07382, -48.5246, 8.66994, 1.55 ) }
    dend_2 { pt3dadd( -6.64684, -49.7289, 8.58742, 1.4 ) }
    dend_2 { pt3dadd( -7.09717, -50.6885, 8.55064, 1.4 ) }
    dend_2 { pt3dadd( -7.4631, -51.5153, 8.54788, 1.84 ) }
    dend_2 { pt3dadd( -7.71832, -52.1589, 8.59145, 1.77 ) }
    dend_2 { pt3dadd( -8.00235, -53.0275, 8.7211, 1.25 ) }
    dend_2 { pt3dadd( -8.01659, -53.0874, 8.73513, 1.25 ) }
    dend_2 { pt3dadd( -8.19559, -54.2006, 9.0812, 0.88 ) }
    dend_2 { pt3dadd( -8.2274, -54.737, 9.27943, 1.62 ) }
    dend_2 { pt3dadd( -8.19983, -55.7019, 9.66175, 1.92 ) }
    dend_2 { pt3dadd( -8.12626, -56.5465, 9.99292, 1.92 ) }
    dend_2 { pt3dadd( -8.03885, -57.3459, 10.2824, 1.77 ) }
    dend_2 { pt3dadd( -8.03316, -57.3985, 10.2988, 1.77 ) }
    dend_2 { pt3dadd( -7.90888, -58.5067, 10.5859, 1.62 ) }
    dend_2 { pt3dadd( -7.81892, -59.4066, 10.7607, 1.33 ) }
    dend_2 { pt3dadd( -7.73804, -60.2574, 10.8771, 1.18 ) }
    dend_2 { pt3dadd( -7.67065, -61.0717, 10.9689, 1.18 ) }
    dend_2 { pt3dadd( -7.60356, -61.997, 11.0542, 1.55 ) }
    dend_2 { pt3dadd( -7.54958, -63.1401, 11.1193, 1.62 ) }
    dend_2 { pt3dadd( -7.54104, -64.1391, 11.1385, 2.14 ) }
    dend_2 { pt3dadd( -7.55952, -64.8976, 11.1368, 2.36 ) }
    dend_2 { pt3dadd( -7.59171, -65.6168, 11.1275, 2.58 ) }
    dend_2 { pt3dadd( -7.62035, -66.1509, 11.1234, 3.02 ) }
    dend_2 { pt3dadd( -7.70108, -67.4253, 11.1488, 2.21 ) }
    dend_2 { pt3dadd( -7.76588, -68.5462, 11.2098, 1.77 ) }
    dend_2 { pt3dadd( -7.81544, -69.5558, 11.302, 1.77 ) }
    dend_2 { pt3dadd( -7.85095, -70.6707, 11.4554, 1.84 ) }
    dend_2 { pt3dadd( -7.86483, -71.9667, 11.7349, 1.84 ) }
    dend_2 { pt3dadd( -7.84847, -73.2655, 12.1169, 1.18 ) }
    dend_2 { pt3dadd( -7.78378, -74.5984, 12.6276, 0.96 ) }
    dend_2 { pt3dadd( -7.78085, -74.6493, 12.6535, 0.96 ) }
    dend_2 { pt3dadd( -7.73807, -75.502, 13.2405, 1.33 ) }
    dend_2 { pt3dadd( -7.69942, -76.3372, 13.9488, 1.84 ) }
    dend_2 { pt3dadd( -7.68948, -76.9771, 14.5492, 1.84 ) }
    dend_2 { pt3dadd( -7.69434, -77.6045, 15.1294, 1.77 ) }
    dend_2 { pt3dadd( -7.72543, -78.7721, 16.1075, 1.69 ) }
    dend_2 { pt3dadd( -7.75201, -79.9126, 16.886, 0.74 ) }
    dend_2 { pt3dadd( -7.76921, -80.5893, 17.2311, 0.74 ) }
    dend_2 { pt3dadd( -7.78591, -81.4513, 17.558, 1.18 ) }
    dend_2 { pt3dadd( -7.79305, -82.2802, 17.7738, 1.47 ) }
    dend_2 { pt3dadd( -7.78599, -83.1102, 17.8526, 1.62 ) }
    dend_2 { pt3dadd( -7.76701, -83.7435, 17.7972, 1.92 ) }
    dend_2 { pt3dadd( -7.7607, -84.2525, 17.7115, 1.92 ) }
    dend_2 { pt3dadd( -7.7614, -84.299, 17.7039, 1.92 ) }
    dend_2 { pt3dadd( -7.78606, -84.9103, 17.6217, 1.92 ) }
    dend_2 { pt3dadd( -7.85628, -85.79, 17.5466, 1.33 ) }
    dend_2 { pt3dadd( -7.96221, -86.6567, 17.4837, 1.47 ) }
    dend_2 { pt3dadd( -8.08159, -87.5352, 17.4296, 1.92 ) }
    dend_2 { pt3dadd( -8.16229, -88.1811, 17.4001, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_2 { pt3dadd( -8.25959, -89.0474, 17.3805, 1.99 ) }
    dend_2 { pt3dadd( -8.34556, -90.1219, 17.3937, 1.99 ) }
    dend_2 { pt3dadd( -8.39257, -91.3574, 17.4493, 1.99 ) }
    dend_2 { pt3dadd( -8.39117, -91.6497, 17.4748, 2.36 ) }
    dend_2 { pt3dadd( -8.3656, -92.3461, 17.5445, 1.62 ) }
    dend_2 { pt3dadd( -8.31952, -93.0815, 17.6285, 1.25 ) }
    dend_2 { pt3dadd( -8.24151, -93.9939, 17.7432, 1.11 ) }
    dend_2 { pt3dadd( -8.18238, -94.7656, 17.8393, 0.81 ) }
    dend_2 { pt3dadd( -8.13102, -95.7702, 17.9685, 0.66 ) }
    dend_2 { pt3dadd( -8.13466, -96.6409, 18.0663, 1.55 ) }
    dend_2 { pt3dadd( -8.13742, -96.6975, 18.072, 1.55 ) }
    dend_2 { pt3dadd( -8.18877, -97.159, 18.1474, 2.21 ) }
    dend_2 { pt3dadd( -8.29352, -97.8019, 18.2842, 1.92 ) }
    dend_2 { pt3dadd( -8.44473, -98.6442, 18.4994, 1.62 ) }
    dend_2 { pt3dadd( -8.59224, -99.4211, 18.7277, 1.4 ) }
    dend_2 { pt3dadd( -8.76093, -100.272, 19.0571, 1.4 ) }
    dend_2 { pt3dadd( -9.03603, -101.601, 19.6468, 1.33 ) }
    dend_2 { pt3dadd( -9.15931, -102.251, 19.9687, 0.96 ) }
    dend_2 { pt3dadd( -9.30704, -103.227, 20.4955, 0.74 ) }
    dend_2 { pt3dadd( -9.31382, -103.285, 20.531, 0.74 ) }
    dend_2 { pt3dadd( -9.38998, -104.6, 21.4118, 0.66 ) }
    dend_2 { pt3dadd( -9.38698, -104.643, 21.4465, 0.66 ) }
    dend_2 { pt3dadd( -9.21253, -105.493, 22.1951, 1.69 ) }
    dend_2 { pt3dadd( -9.09599, -105.964, 22.6278, 2.21 ) }
    dend_2 { pt3dadd( -8.91499, -106.703, 23.2863, 3.02 ) }
    dend_2 { pt3dadd( -8.81117, -107.191, 23.6798, 3.02 ) }
    dend_2 { pt3dadd( -8.53539, -108.779, 24.779, 0.52 ) }
    dend_2 { pt3dadd( -8.48052, -109.385, 25.1127, 0.52 ) }
    dend_2 { pt3dadd( -8.47621, -110.156, 25.4277, 2.36 ) }
    dend_2 { pt3dadd( -8.51597, -110.898, 25.629, 3.09 ) }
    dend_2 { pt3dadd( -8.55236, -111.261, 25.6804, 3.24 ) }
    dend_2 { pt3dadd( -8.65585, -112.005, 25.7285, 3.02 ) }
    dend_2 { pt3dadd( -8.93517, -113.664, 25.7118, 1.11 ) }
    dend_2 { pt3dadd( -9.06772, -114.531, 25.7107, 0.96 ) }
    dend_2 { pt3dadd( -9.14506, -115.169, 25.7187, 1.25 ) }
    dend_2 { pt3dadd( -9.22175, -116.04, 25.7671, 1.18 ) }
    dend_2 { pt3dadd( -9.25786, -116.693, 25.8363, 0.52 ) }
    dend_2 { pt3dadd( -9.25849, -116.75, 25.8463, 0.52 ) }
    dend_2 { pt3dadd( -9.21135, -117.344, 26.0304, 1.4 ) }
    dend_2 { pt3dadd( -9.20244, -117.387, 26.047, 1.4 ) }
    dend_2 { pt3dadd( -8.95475, -118.106, 26.3569, 2.14 ) }
    dend_2 { pt3dadd( -8.75048, -118.605, 26.5725, 2.14 ) }
    dend_2 { pt3dadd( -8.60277, -118.97, 26.7145, 2.36 ) }
    dend_2 { pt3dadd( -8.347, -119.659, 26.9554, 1.33 ) }
    dend_2 { pt3dadd( -8.06296, -120.5, 27.2006, 0.81 ) }
    dend_2 { pt3dadd( -7.74548, -121.573, 27.4404, 0.81 ) }
    dend_2 { pt3dadd( -7.48829, -122.624, 27.6052, 0.81 ) }
    dend_2 { pt3dadd( -7.26612, -123.743, 27.7593, 1.62 ) }
    dend_2 { pt3dadd( -7.16587, -124.344, 27.8362, 1.92 ) }
    dend_2 { pt3dadd( -7.04617, -125.268, 27.9831, 1.25 ) }
    dend_2 { pt3dadd( -6.95546, -126.15, 28.1499, 0.96 ) }
    dend_2 { pt3dadd( -6.85359, -127.339, 28.4113, 0.96 ) }
    dend_2 { pt3dadd( -6.74939, -128.362, 28.6863, 0.88 ) }
    dend_2 { pt3dadd( -6.62949, -129.399, 29.0269, 1.62 ) }
    dend_2 { pt3dadd( -6.46264, -130.58, 29.4742, 1.84 ) }
    dend_2 { pt3dadd( -6.38321, -131.21, 29.7757, 1.92 ) }
    dend_2 { pt3dadd( -6.37773, -131.265, 29.8065, 1.92 ) }
    dend_2 { pt3dadd( -6.31381, -132.082, 30.2999, 1.62 ) }
    dend_2 { pt3dadd( -6.26157, -133.094, 30.9135, 0.59 ) }
    dend_2 { pt3dadd( -6.23519, -133.885, 31.3816, 0.59 ) }
    dend_2 { pt3dadd( -6.18129, -135.081, 32.0298, 0.52 ) }
    dend_2 { pt3dadd( -6.15368, -135.871, 32.4733, 1.69 ) }
    dend_2 { pt3dadd( -6.14208, -136.382, 32.7644, 2.5 ) }
    dend_2 { pt3dadd( -6.1484, -136.831, 33.0279, 2.5 ) }
    dend_2 { pt3dadd( -6.15495, -137.37, 33.3451, 2.5 ) }
    dend_2 { pt3dadd( -6.14494, -138.188, 33.7844, 1.77 ) }
    // Section: dend_67, id: dend_67, parent: dend_27 (entry count 66/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -9.54253, 111.615, -13.0138, 0.59 ) }
    dend_67 { pt3dadd( -10.3841, 112.549, -13.6991, 0.59 ) }
    dend_67 { pt3dadd( -11.0066, 113.41, -14.3158, 0.44 ) }
    dend_67 { pt3dadd( -10.8472, 113.618, -14.9823, 0.74 ) }
    dend_67 { pt3dadd( -10.5867, 113.959, -16.0213, 0.74 ) }
    dend_67 { pt3dadd( -10.5529, 114.012, -16.1802, 0.74 ) }
    dend_67 { pt3dadd( -10.4174, 114.293, -16.9898, 0.88 ) }
    dend_67 { pt3dadd( -10.4046, 114.317, -17.0618, 0.88 ) }
    dend_67 { pt3dadd( -9.45851, 116.259, -22.8279, 1.62 ) }
    dend_67 { pt3dadd( -9.25542, 116.803, -24.472, 1.4 ) }
    dend_67 { pt3dadd( -9.1288, 117.342, -26.1926, 0.37 ) }
    dend_67 { pt3dadd( -9.10595, 117.629, -27.1325, 0.74 ) }
    dend_67 { pt3dadd( -9.1785, 118.239, -29.1084, 0.29 ) }
    dend_67 { pt3dadd( -9.27225, 118.496, -29.8275, 1.4 ) }
    dend_67 { pt3dadd( -9.46443, 118.769, -30.4287, 1.84 ) }
    dend_67 { pt3dadd( -10.0912, 119.69, -32.6649, 0.44 ) }
    dend_67 { pt3dadd( -10.1846, 119.855, -33.0446, 0.29 ) }
    dend_67 { pt3dadd( -10.3309, 120.118, -33.6792, 0.29 ) }
    dend_67 { pt3dadd( -10.4798, 120.372, -34.2734, 0.59 ) }
    dend_67 { pt3dadd( -10.973, 121.304, -36.3882, 0.44 ) }
    dend_67 { pt3dadd( -11.1546, 121.657, -37.0715, 0.22 ) }
    dend_67 { pt3dadd( -11.3165, 121.963, -37.5505, 0.74 ) }
    dend_67 { pt3dadd( -11.5663, 122.517, -38.4086, 0.15 ) }
    dend_67 { pt3dadd( -11.6053, 122.605, -38.5452, 0.15 ) }
    dend_67 { pt3dadd( -11.7039, 122.824, -38.853, 0.15 ) }
    dend_67 { pt3dadd( -12.1187, 123.678, -39.8655, 1.47 ) }
    dend_67 { pt3dadd( -12.3404, 124.119, -40.3685, 1.62 ) }
    dend_67 { pt3dadd( -13.1525, 125.733, -42.3141, 0.22 ) }
    dend_67 { pt3dadd( -13.176, 125.781, -42.3728, 0.22 ) }
    dend_67 { pt3dadd( -13.469, 126.344, -43.0988, 0.22 ) }
    dend_67 { pt3dadd( -13.8585, 127.045, -44.05, 1.25 ) }
    dend_67 { pt3dadd( -14.0268, 127.385, -44.5425, 1.4 ) }
    dend_67 { pt3dadd( -14.5202, 128.462, -46.0944, 0.22 ) }
    dend_67 { pt3dadd( -14.5483, 128.537, -46.1989, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_67 { pt3dadd( -14.8575, 129.583, -47.6678, 1.47 ) }
    dend_67 { pt3dadd( -14.9385, 129.913, -48.1123, 1.99 ) }
    dend_67 { pt3dadd( -15.3112, 131.767, -50.4173, 0.37 ) }
    dend_67 { pt3dadd( -15.3977, 132.263, -50.9767, 0.29 ) }
    dend_67 { pt3dadd( -15.5395, 133.117, -51.846, 1.18 ) }
    dend_67 { pt3dadd( -15.6996, 134.1, -52.7736, 0.52 ) }
    dend_67 { pt3dadd( -15.8328, 135.039, -53.5521, 1.55 ) }
    dend_67 { pt3dadd( -15.8808, 135.376, -53.7998, 1.84 ) }
    dend_67 { pt3dadd( -16.2089, 137.379, -54.982, 0.22 ) }
    dend_67 { pt3dadd( -16.2165, 137.445, -55.0186, 0.22 ) }
    dend_67 { pt3dadd( -16.2599, 138.038, -55.2971, 0.22 ) }
    dend_67 { pt3dadd( -16.232, 138.752, -55.5677, 1.4 ) }
    dend_67 { pt3dadd( -16.2227, 138.834, -55.5953, 1.4 ) }
    dend_67 { pt3dadd( -16.1609, 139.297, -55.7267, 1.4 ) }
    dend_67 { pt3dadd( -15.8427, 141.047, -56.1698, 0.15 ) }
    dend_67 { pt3dadd( -15.6982, 141.786, -56.3803, 0.74 ) }
    dend_67 { pt3dadd( -15.3329, 143.502, -56.9124, 0.15 ) }
    dend_67 { pt3dadd( -15.1944, 144.105, -57.1077, 0.74 ) }
    dend_67 { pt3dadd( -15.1158, 144.405, -57.2029, 0.88 ) }
    dend_67 { pt3dadd( -14.6584, 145.91, -57.6425, 0.15 ) }
    dend_67 { pt3dadd( -14.6356, 145.968, -57.6609, 0.15 ) }
    dend_67 { pt3dadd( -14.4262, 146.412, -57.8276, 0.37 ) }
    dend_67 { pt3dadd( -14.3429, 146.517, -57.9076, 0.37 ) }
    dend_67 { pt3dadd( -13.7694, 147.01, -58.4862, 0.22 ) }
    dend_67 { pt3dadd( -13.2745, 147.382, -58.9901, 0.59 ) }
    dend_67 { pt3dadd( -11.9185, 148.226, -60.3864, 1.69 ) }
    dend_67 { pt3dadd( -11.7685, 148.31, -60.5465, 1.69 ) }
    dend_67 { pt3dadd( -9.37612, 149.418, -63.2437, 0.22 ) }
    dend_67 { pt3dadd( -8.91549, 149.583, -63.7874, 0.96 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -9.54253, 111.615, -13.0138, 2.65 ) }
    dend_28 { pt3dadd( -9.68643, 112.49, -12.3905, 2.65 ) }
    dend_28 { pt3dadd( -9.88099, 113.496, -11.8212, 2.06 ) }
    dend_28 { pt3dadd( -10.2648, 115.294, -10.965, 1.92 ) }
    dend_28 { pt3dadd( -10.2778, 115.351, -10.9407, 1.92 ) }
    dend_28 { pt3dadd( -10.5408, 116.39, -10.5509, 0.74 ) }
    dend_28 { pt3dadd( -10.9397, 117.903, -10.0282, 0.52 ) }
    dend_28 { pt3dadd( -11.3175, 119.099, -9.68572, 0.52 ) }
    dend_28 { pt3dadd( -11.503, 119.673, -9.57627, 0.52 ) }
    dend_28 { pt3dadd( -11.5703, 119.918, -9.56122, 0.52 ) }
    dend_28 { pt3dadd( -11.7545, 120.691, -9.52114, 0.52 ) }
    dend_28 { pt3dadd( -11.7771, 120.812, -9.5158, 0.52 ) }
    dend_28 { pt3dadd( -11.8794, 121.708, -9.47809, 0.44 ) }
    dend_28 { pt3dadd( -11.9421, 122.417, -9.41004, 0.44 ) }
    dend_28 { pt3dadd( -12.0181, 123.771, -9.2518, 1.84 ) }
    dend_28 { pt3dadd( -12.0776, 124.877, -9.08117, 2.73 ) }
    dend_28 { pt3dadd( -12.1105, 125.464, -8.97328, 3.54 ) }
    dend_28 { pt3dadd( -12.1654, 126.236, -8.81776, 3.9 ) }
    dend_28 { pt3dadd( -12.2223, 126.851, -8.68266, 4.05 ) }
    dend_28 { pt3dadd( -12.291, 127.429, -8.56344, 3.9 ) }
    dend_28 { pt3dadd( -12.4556, 128.496, -8.36962, 3.61 ) }
    dend_28 { pt3dadd( -12.6101, 129.241, -8.24758, 2.8 ) }
    dend_28 { pt3dadd( -12.8096, 130.076, -8.12876, 1.69 ) }
    dend_28 { pt3dadd( -13.0571, 131.057, -7.99571, 1.11 ) }
    dend_28 { pt3dadd( -13.348, 132.159, -7.85997, 0.81 ) }
    dend_28 { pt3dadd( -13.5125, 132.76, -7.79926, 0.66 ) }
    dend_28 { pt3dadd( -13.8526, 134.035, -7.71916, 0.52 ) }
    dend_28 { pt3dadd( -14.1733, 135.148, -7.65316, 0.44 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 57/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -38.7276, -49.2388, 35.1499, 0.37 ) }
    dend_20 { pt3dadd( -44.7762, -53.1314, 39.6226, 0.37 ) }
    dend_20 { pt3dadd( -49.3182, -58.3012, 44.493, 0.37 ) }
    dend_20 { pt3dadd( -54.6198, -62.2615, 49.7712, 0.37 ) }
    dend_20 { pt3dadd( -58.7172, -65.8182, 56.2723, 0.37 ) }
    dend_20 { pt3dadd( -64.2077, -69.7424, 61.3846, 0.37 ) }
    dend_20 { pt3dadd( -69.7613, -73.2117, 66.7661, 0.37 ) }
    dend_20 { pt3dadd( -74.5489, -78.3775, 71.4028, 0.37 ) }
    dend_20 { pt3dadd( -80.9268, -82.7257, 74.8727, 0.37 ) }
    dend_20 { pt3dadd( -88.6285, -85.8938, 76.5354, 0.37 ) }
    dend_20 { pt3dadd( -96.3231, -89.3592, 77.4538, 0.37 ) }
    dend_20 { pt3dadd( -104.402, -91.3061, 79.266, 0.37 ) }
    dend_20 { pt3dadd( -112.56, -93.0414, 80.9436, 0.37 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 70/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -38.7276, -49.2388, 35.1499, 0.29 ) }
    dend_19 { pt3dadd( -42.3532, -51.5865, 38.0202, 0.37 ) }
    dend_19 { pt3dadd( -45.4596, -54.1658, 41.2648, 0.37 ) }
    dend_19 { pt3dadd( -48.6717, -57.3066, 43.8131, 0.37 ) }
    dend_19 { pt3dadd( -51.9531, -60.7776, 45.7514, 0.37 ) }
    dend_19 { pt3dadd( -55.2803, -64.3508, 47.3949, 0.37 ) }
    dend_19 { pt3dadd( -58.26, -67.8382, 49.744, 0.37 ) }
    dend_19 { pt3dadd( -60.8814, -71.7732, 51.7516, 0.37 ) }
    dend_19 { pt3dadd( -63.2984, -76.1218, 52.9616, 0.37 ) }
    dend_19 { pt3dadd( -66.6582, -79.9722, 53.5386, 0.37 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 80/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -28.0189, -22.0074, 59.5103, 0.37 ) }
    dend_17 { pt3dadd( -30.8632, -18.2865, 68.2714, 0.37 ) }
    dend_17 { pt3dadd( -34.5054, -14.6555, 76.7712, 0.37 ) }
    dend_17 { pt3dadd( -39.1633, -10.0694, 84.2194, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 84/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -28.0189, -22.0074, 59.5103, 0.29 ) }
    dend_16 { pt3dadd( -28.0206, -19.9134, 67.8465, 0.37 ) }
    dend_16 { pt3dadd( -27.6128, -17.4161, 76.053, 0.37 ) }
    dend_16 { pt3dadd( -25.8773, -16.4178, 84.4255, 0.37 ) }
    dend_16 { pt3dadd( -23.7696, -16.4101, 92.7798, 0.37 ) }
    dend_16 { pt3dadd( -22.307, -17.2938, 101.227, 0.37 ) }
    dend_16 { pt3dadd( -21.7474, -17.6233, 109.82, 0.37 ) }
    dend_16 { pt3dadd( -21.7787, -17.8117, 118.436, 0.37 ) }
    dend_16 { pt3dadd( -21.6323, -17.8234, 127.051, 0.37 ) }
    dend_16 { pt3dadd( -22.0048, -16.6201, 135.566, 0.37 ) }
    dend_16 { pt3dadd( -22.5778, -15.3579, 144.061, 0.37 ) }
    dend_16 { pt3dadd( -22.5719, -14.1453, 152.582, 0.37 ) }
    dend_16 { pt3dadd( -21.8497, -14.0526, 161.167, 0.37 ) }
    dend_16 { pt3dadd( -21.3113, -13.3985, 169.738, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_7 (entry count 98/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.21336, -34.5279, 0.760195, 0.59 ) }
    dend_13 { pt3dadd( -9.46429, -34.9118, 0.460714, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_13 { pt3dadd( -9.92898, -35.4075, -0.0103786, 0.44 ) }
    dend_13 { pt3dadd( -10.4553, -35.7934, -0.554944, 0.29 ) }
    dend_13 { pt3dadd( -10.7524, -35.9552, -0.835626, 0.22 ) }
    dend_13 { pt3dadd( -11.1268, -36.1419, -1.16956, 0.29 ) }
    dend_13 { pt3dadd( -11.5827, -36.3638, -1.55781, 0.29 ) }
    dend_13 { pt3dadd( -12.1757, -36.6078, -2.01025, 0.29 ) }
    dend_13 { pt3dadd( -12.8548, -36.8761, -2.51901, 0.29 ) }
    dend_13 { pt3dadd( -13.3767, -37.1072, -2.91257, 0.29 ) }
    dend_13 { pt3dadd( -14.0457, -37.4717, -3.43701, 1.25 ) }
    dend_13 { pt3dadd( -14.2431, -37.6134, -3.59852, 1.77 ) }
    dend_13 { pt3dadd( -14.5368, -37.8919, -3.85058, 1.77 ) }
    dend_13 { pt3dadd( -15.3413, -38.8119, -4.55121, 1.11 ) }
    dend_13 { pt3dadd( -15.7731, -39.4014, -4.94603, 0.52 ) }
    dend_13 { pt3dadd( -16.0528, -39.8603, -5.25556, 0.37 ) }
    dend_13 { pt3dadd( -16.3806, -40.5038, -5.70906, 0.37 ) }
    dend_13 { pt3dadd( -16.5935, -40.9893, -6.05743, 0.37 ) }
    dend_13 { pt3dadd( -16.6273, -41.0722, -6.11796, 0.37 ) }
    dend_13 { pt3dadd( -16.905, -41.7582, -6.61426, 1.25 ) }
    dend_13 { pt3dadd( -17.0896, -42.1729, -6.96062, 1.18 ) }
    dend_13 { pt3dadd( -17.4594, -42.8171, -7.57484, 0.29 ) }
    dend_13 { pt3dadd( -17.6616, -43.0535, -7.83173, 0.22 ) }
    dend_13 { pt3dadd( -17.9693, -43.3377, -8.13515, 0.22 ) }
    dend_13 { pt3dadd( -18.227, -43.5547, -8.3372, 0.44 ) }
    dend_13 { pt3dadd( -18.5087, -43.7643, -8.50539, 0.44 ) }
    dend_13 { pt3dadd( -18.8129, -43.9786, -8.64199, 0.29 ) }
    dend_13 { pt3dadd( -19.1308, -44.1914, -8.77533, 0.29 ) }
    dend_13 { pt3dadd( -19.5825, -44.5142, -9.03755, 0.37 ) }
    dend_13 { pt3dadd( -19.9261, -44.7789, -9.27399, 0.37 ) }
    dend_13 { pt3dadd( -20.3117, -45.0639, -9.57176, 0.29 ) }
    dend_13 { pt3dadd( -20.9991, -45.5339, -10.1612, 1.18 ) }
    dend_13 { pt3dadd( -21.5046, -45.8641, -10.6062, 1.99 ) }
    dend_13 { pt3dadd( -22.0009, -46.1651, -11.0462, 2.28 ) }
    dend_13 { pt3dadd( -22.3103, -46.3438, -11.3134, 1.99 ) }
    dend_13 { pt3dadd( -23.0933, -46.8226, -11.9712, 0.59 ) }
    dend_13 { pt3dadd( -23.6119, -47.1993, -12.389, 0.37 ) }
    dend_13 { pt3dadd( -23.9905, -47.5663, -12.6946, 0.37 ) }
    dend_13 { pt3dadd( -24.3985, -48.0111, -13.0164, 1.11 ) }
    dend_13 { pt3dadd( -24.6835, -48.3309, -13.228, 1.69 ) }
    dend_13 { pt3dadd( -24.9875, -48.6898, -13.4571, 1.84 ) }
    dend_13 { pt3dadd( -25.3945, -49.18, -13.7468, 1.4 ) }
    dend_13 { pt3dadd( -26.0965, -49.9534, -14.2065, 0.44 ) }
    dend_13 { pt3dadd( -26.4735, -50.3279, -14.4509, 0.44 ) }
    dend_13 { pt3dadd( -26.952, -50.7631, -14.7447, 0.37 ) }
    dend_13 { pt3dadd( -27.3783, -51.1123, -15.0006, 1.18 ) }
    dend_13 { pt3dadd( -27.7509, -51.4061, -15.2183, 1.62 ) }
    dend_13 { pt3dadd( -28.1398, -51.7353, -15.4353, 1.03 ) }
    dend_13 { pt3dadd( -28.1774, -51.7746, -15.458, 1.03 ) }
    dend_13 { pt3dadd( -28.3602, -52.0288, -15.5936, 0.88 ) }
    dend_13 { pt3dadd( -28.6448, -52.5025, -15.8574, 0.44 ) }
    dend_13 { pt3dadd( -28.9332, -53.0099, -16.1518, 0.29 ) }
    dend_13 { pt3dadd( -29.184, -53.4779, -16.43, 0.29 ) }
    dend_13 { pt3dadd( -29.6326, -54.3336, -16.9469, 1.92 ) }
    dend_13 { pt3dadd( -29.938, -54.922, -17.2982, 2.73 ) }
    dend_13 { pt3dadd( -30.2441, -55.5241, -17.6619, 2.65 ) }
    dend_13 { pt3dadd( -30.8458, -56.6565, -18.361, 0.66 ) }
    dend_13 { pt3dadd( -30.8748, -56.7072, -18.3939, 0.66 ) }
    dend_13 { pt3dadd( -31.329, -57.4516, -18.8905, 0.29 ) }
    dend_13 { pt3dadd( -31.5354, -57.7731, -19.0957, 0.29 ) }
    dend_13 { pt3dadd( -31.7909, -58.1642, -19.3517, 0.29 ) }
    dend_13 { pt3dadd( -32.0764, -58.6345, -19.6879, 0.29 ) }
    dend_13 { pt3dadd( -32.331, -59.0708, -20.0318, 1.11 ) }
    dend_13 { pt3dadd( -32.3583, -59.1191, -20.0696, 1.11 ) }
    dend_13 { pt3dadd( -32.5842, -59.5219, -20.3782, 1.25 ) }
    dend_13 { pt3dadd( -32.8769, -60.0386, -20.7627, 0.96 ) }
    dend_13 { pt3dadd( -33.3875, -61.0099, -21.3669, 0.37 ) }
    dend_13 { pt3dadd( -33.409, -61.0574, -21.3937, 0.37 ) }
    dend_13 { pt3dadd( -33.6456, -61.5913, -21.6729, 0.22 ) }
    dend_13 { pt3dadd( -33.8083, -61.9533, -21.8474, 0.22 ) }
    dend_13 { pt3dadd( -33.8567, -62.0553, -21.8994, 0.66 ) }
    dend_13 { pt3dadd( -34.2053, -62.7511, -22.2377, 0.52 ) }
    dend_13 { pt3dadd( -34.7854, -63.8727, -22.7715, 1.77 ) }
    dend_13 { pt3dadd( -35.2031, -64.6696, -23.1532, 2.58 ) }
    dend_13 { pt3dadd( -35.5609, -65.3348, -23.4778, 2.58 ) }
    dend_13 { pt3dadd( -36.2589, -66.6044, -24.0937, 0.44 ) }
    dend_13 { pt3dadd( -36.6355, -67.2585, -24.4015, 0.29 ) }
    dend_13 { pt3dadd( -36.6695, -67.3128, -24.4256, 0.29 ) }
    dend_13 { pt3dadd( -36.9397, -67.7178, -24.573, 0.29 ) }
    dend_13 { pt3dadd( -37.3565, -68.3455, -24.7719, 1.47 ) }
    dend_13 { pt3dadd( -37.5838, -68.6963, -24.8627, 1.84 ) }
    dend_13 { pt3dadd( -37.8636, -69.1804, -24.94, 1.47 ) }
    dend_13 { pt3dadd( -38.5348, -70.4571, -25.1189, 0.29 ) }
    dend_13 { pt3dadd( -38.7679, -70.9432, -25.176, 1.11 ) }
    dend_13 { pt3dadd( -38.9247, -71.2908, -25.2097, 1.25 ) }
    dend_13 { pt3dadd( -39.1445, -71.8117, -25.2457, 1.03 ) }
    dend_13 { pt3dadd( -39.446, -72.5495, -25.2867, 0.22 ) }
    dend_13 { pt3dadd( -39.6454, -73.0259, -25.3055, 0.22 ) }
    dend_13 { pt3dadd( -39.773, -73.3195, -25.3094, 0.59 ) }
    dend_13 { pt3dadd( -39.9714, -73.7244, -25.3213, 0.74 ) }
    dend_13 { pt3dadd( -40.1065, -73.9662, -25.3416, 0.37 ) }
    dend_13 { pt3dadd( -40.3805, -74.4126, -25.3963, 0.22 ) }
    dend_13 { pt3dadd( -40.7847, -75.0162, -25.4875, 1.55 ) }
    dend_13 { pt3dadd( -41.1595, -75.5755, -25.5769, 2.21 ) }
    dend_13 { pt3dadd( -41.3727, -75.8926, -25.6277, 1.84 ) }
    dend_13 { pt3dadd( -42.0457, -76.8868, -25.7846, 0.22 ) }
    dend_13 { pt3dadd( -42.3932, -77.3891, -25.8633, 0.22 ) }
    dend_13 { pt3dadd( -42.7972, -77.9378, -25.9519, 1.11 ) }
    dend_13 { pt3dadd( -43.0378, -78.246, -26.0016, 1.62 ) }
    dend_13 { pt3dadd( -43.341, -78.6085, -26.0574, 1.84 ) }
    dend_13 { pt3dadd( -43.805, -79.1441, -26.132, 1.11 ) }
    dend_13 { pt3dadd( -44.0693, -79.4434, -26.1687, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_13 { pt3dadd( -44.7629, -80.2311, -26.2714, 0.29 ) }
    dend_13 { pt3dadd( -45.1371, -80.6608, -26.3294, 0.59 ) }
    dend_13 { pt3dadd( -46.0168, -81.7267, -26.4508, 0.29 ) }
    dend_13 { pt3dadd( -46.054, -81.7741, -26.4553, 0.29 ) }
    dend_13 { pt3dadd( -46.6502, -82.5659, -26.5175, 1.18 ) }
    dend_13 { pt3dadd( -46.8781, -82.8796, -26.5371, 1.55 ) }
    dend_13 { pt3dadd( -47.0906, -83.1963, -26.5484, 1.55 ) }
    dend_13 { pt3dadd( -47.6462, -84.0959, -26.6111, 0.52 ) }
    dend_13 { pt3dadd( -48.1056, -84.9222, -26.7075, 0.37 ) }
    dend_13 { pt3dadd( -48.1322, -84.9754, -26.7162, 0.37 ) }
    dend_13 { pt3dadd( -48.436, -85.66, -26.8471, 0.37 ) }
    dend_13 { pt3dadd( -48.6765, -86.2411, -26.9707, 0.29 ) }
    dend_13 { pt3dadd( -49.1126, -87.363, -27.2343, 1.99 ) }
    dend_13 { pt3dadd( -49.2997, -87.8784, -27.367, 2.28 ) }
    dend_13 { pt3dadd( -49.723, -89.1183, -27.6701, 0.22 ) }
    dend_13 { pt3dadd( -49.982, -89.8392, -27.8325, 0.22 ) }
    dend_13 { pt3dadd( -50.1056, -90.1675, -27.8849, 0.74 ) }
    dend_13 { pt3dadd( -50.1276, -90.2231, -27.8899, 0.74 ) }
    dend_13 { pt3dadd( -50.3288, -90.7219, -27.8936, 0.74 ) }
    dend_13 { pt3dadd( -50.5977, -91.3997, -27.8737, 0.22 ) }
    dend_13 { pt3dadd( -50.9134, -92.1661, -27.8458, 0.22 ) }
    dend_13 { pt3dadd( -51.4369, -93.3935, -27.8064, 2.14 ) }
    dend_13 { pt3dadd( -51.5553, -93.6715, -27.7985, 2.36 ) }
    dend_13 { pt3dadd( -52.0015, -94.6791, -27.7756, 0.29 ) }
    dend_13 { pt3dadd( -52.2096, -95.1197, -27.7632, 0.22 ) }
    dend_13 { pt3dadd( -52.4995, -95.6786, -27.7494, 0.22 ) }
    dend_13 { pt3dadd( -52.8608, -96.3314, -27.7332, 1.4 ) }
    dend_13 { pt3dadd( -53.062, -96.6831, -27.7274, 1.77 ) }
    dend_13 { pt3dadd( -53.3463, -97.189, -27.7069, 1.33 ) }
    dend_13 { pt3dadd( -53.8221, -98.1226, -27.6365, 0.37 ) }
    dend_13 { pt3dadd( -54.1312, -98.7941, -27.5809, 0.22 ) }
    dend_13 { pt3dadd( -54.3135, -99.2547, -27.5402, 0.22 ) }
    dend_13 { pt3dadd( -54.5241, -99.8547, -27.4952, 0.81 ) }
    dend_13 { pt3dadd( -54.6383, -100.207, -27.4725, 0.81 ) }
    dend_13 { pt3dadd( -54.8792, -100.959, -27.455, 0.22 ) }
    dend_13 { pt3dadd( -55.037, -101.393, -27.4784, 0.22 ) }
    dend_13 { pt3dadd( -55.2418, -101.865, -27.5263, 1.25 ) }
    dend_13 { pt3dadd( -55.4225, -102.209, -27.5759, 1.77 ) }
    dend_13 { pt3dadd( -55.6384, -102.58, -27.6384, 1.77 ) }
    dend_13 { pt3dadd( -56.1132, -103.388, -27.7833, 0.44 ) }
    dend_13 { pt3dadd( -56.5518, -104.12, -27.9182, 0.29 ) }
    dend_13 { pt3dadd( -56.9202, -104.751, -28.0394, 1.4 ) }
    dend_13 { pt3dadd( -57.1376, -105.123, -28.1114, 1.77 ) }
    dend_13 { pt3dadd( -57.3171, -105.443, -28.1722, 1.77 ) }
    dend_13 { pt3dadd( -57.8048, -106.348, -28.3352, 0.37 ) }
    dend_13 { pt3dadd( -58.1516, -107.038, -28.4431, 0.29 ) }
    dend_13 { pt3dadd( -58.5129, -107.763, -28.568, 0.22 ) }
    dend_13 { pt3dadd( -58.8323, -108.357, -28.6927, 0.22 ) }
    dend_13 { pt3dadd( -59.234, -109.042, -28.8552, 1.11 ) }
    dend_13 { pt3dadd( -59.3885, -109.287, -28.9183, 1.4 ) }
    dend_13 { pt3dadd( -59.7056, -109.781, -29.0487, 0.59 ) }
    dend_13 { pt3dadd( -60.0581, -110.353, -29.1969, 0.22 ) }
    dend_13 { pt3dadd( -60.4025, -110.938, -29.341, 0.22 ) }
    dend_13 { pt3dadd( -60.7531, -111.522, -29.4926, 1.11 ) }
    dend_13 { pt3dadd( -60.9136, -111.772, -29.5598, 1.55 ) }
    dend_13 { pt3dadd( -61.1517, -112.129, -29.6577, 1.33 ) }
    dend_13 { pt3dadd( -61.559, -112.721, -29.8185, 0.59 ) }
    dend_13 { pt3dadd( -61.8767, -113.203, -29.9273, 0.22 ) }
    dend_13 { pt3dadd( -62.0766, -113.506, -29.9815, 0.66 ) }
    dend_13 { pt3dadd( -62.183, -113.656, -30.0034, 0.66 ) }
    dend_13 { pt3dadd( -62.2943, -113.804, -30.0197, 0.66 ) }
    dend_13 { pt3dadd( -62.636, -114.249, -30.0626, 0.22 ) }
    dend_13 { pt3dadd( -63.0281, -114.729, -30.067, 0.22 ) }
    dend_13 { pt3dadd( -63.5286, -115.32, -30.0369, 1.33 ) }
    dend_13 { pt3dadd( -63.7518, -115.576, -30.0157, 1.62 ) }
    dend_13 { pt3dadd( -63.9924, -115.846, -29.989, 1.33 ) }
    dend_13 { pt3dadd( -64.7597, -116.687, -29.8965, 0.29 ) }
    dend_13 { pt3dadd( -65.2485, -117.192, -29.8468, 0.29 ) }
    dend_13 { pt3dadd( -65.6591, -117.565, -29.8313, 0.29 ) }
    dend_13 { pt3dadd( -66.0525, -117.885, -29.8437, 0.88 ) }
    dend_13 { pt3dadd( -66.3263, -118.094, -29.8592, 0.88 ) }
    dend_13 { pt3dadd( -66.645, -118.322, -29.8858, 0.66 ) }
    dend_13 { pt3dadd( -67.2046, -118.715, -29.952, 0.15 ) }
    dend_13 { pt3dadd( -67.6797, -119.102, -30.0558, 0.15 ) }
    dend_13 { pt3dadd( -68.1198, -119.488, -30.1687, 0.15 ) }
    dend_13 { pt3dadd( -68.3387, -119.679, -30.2342, 0.59 ) }
    dend_13 { pt3dadd( -68.3866, -119.715, -30.2436, 0.59 ) }
    dend_13 { pt3dadd( -68.6412, -119.903, -30.2741, 0.59 ) }
    dend_13 { pt3dadd( -69.0681, -120.232, -30.2975, 0.22 ) }
    dend_13 { pt3dadd( -69.122, -120.281, -30.2984, 0.22 ) }
    dend_13 { pt3dadd( -69.7212, -120.829, -30.3061, 0.22 ) }
    dend_13 { pt3dadd( -70.6242, -121.684, -30.3145, 1.77 ) }
    dend_13 { pt3dadd( -70.9429, -121.993, -30.3165, 2.14 ) }
    dend_13 { pt3dadd( -71.3495, -122.391, -30.3266, 1.47 ) }
    dend_13 { pt3dadd( -72.0953, -123.19, -30.3741, 0.37 ) }
    dend_13 { pt3dadd( -72.6942, -123.904, -30.44, 0.22 ) }
    dend_13 { pt3dadd( -72.9975, -124.341, -30.4944, 0.81 ) }
    dend_13 { pt3dadd( -73.1534, -124.602, -30.5432, 0.96 ) }
    dend_13 { pt3dadd( -73.3948, -125.025, -30.6388, 0.96 ) }
    dend_13 { pt3dadd( -73.7941, -125.793, -30.8351, 0.22 ) }
    dend_13 { pt3dadd( -73.8188, -125.844, -30.8496, 0.22 ) }
    dend_13 { pt3dadd( -74.0525, -126.386, -31.0081, 0.22 ) }
    dend_13 { pt3dadd( -74.3039, -126.999, -31.1786, 0.22 ) }
    dend_13 { pt3dadd( -74.4531, -127.424, -31.302, 0.96 ) }
    dend_13 { pt3dadd( -74.5815, -127.799, -31.4089, 1.33 ) }
    dend_13 { pt3dadd( -74.7566, -128.269, -31.5469, 1.11 ) }
    dend_13 { pt3dadd( -75.0379, -128.958, -31.8002, 0.22 ) }
    dend_13 { pt3dadd( -75.1822, -129.272, -31.9332, 0.59 ) }
    dend_13 { pt3dadd( -75.5967, -130.126, -32.2889, 0.22 ) }
    dend_13 { pt3dadd( -75.9146, -130.75, -32.5404, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_13 { pt3dadd( -76.1318, -131.152, -32.7134, 1.4 ) }
    dend_13 { pt3dadd( -76.6749, -132.081, -33.12, 0.22 ) }
    dend_13 { pt3dadd( -77.0029, -132.582, -33.3361, 0.22 ) }
    dend_13 { pt3dadd( -77.3848, -133.134, -33.5581, 1.99 ) }
    dend_13 { pt3dadd( -77.6882, -133.543, -33.7073, 2.5 ) }
    dend_13 { pt3dadd( -78.0074, -133.975, -33.858, 2.43 ) }
    dend_13 { pt3dadd( -78.8467, -135.1, -34.2019, 0.22 ) }
    dend_13 { pt3dadd( -79.166, -135.528, -34.3041, 0.29 ) }
    dend_13 { pt3dadd( -79.6117, -136.126, -34.44, 0.22 ) }
    dend_13 { pt3dadd( -79.8661, -136.477, -34.5112, 0.74 ) }
    dend_13 { pt3dadd( -79.9884, -136.653, -34.5298, 0.74 ) }
    dend_13 { pt3dadd( -80.414, -137.321, -34.5314, 0.15 ) }
    dend_13 { pt3dadd( -80.6956, -137.871, -34.5012, 0.15 ) }
    dend_13 { pt3dadd( -80.7683, -138.043, -34.4944, 0.81 ) }
    dend_13 { pt3dadd( -80.9841, -138.609, -34.4976, 1.33 ) }
    dend_13 { pt3dadd( -81.1862, -139.179, -34.5186, 1.33 ) }
    dend_13 { pt3dadd( -81.2049, -139.233, -34.5221, 1.33 ) }
    dend_13 { pt3dadd( -81.4776, -140.08, -34.6521, 0.22 ) }
    dend_13 { pt3dadd( -81.7549, -141.015, -34.8457, 0.22 ) }
    dend_13 { pt3dadd( -81.9529, -141.754, -35.0283, 1.62 ) }
    dend_13 { pt3dadd( -82.0818, -142.236, -35.1646, 1.92 ) }
    dend_13 { pt3dadd( -82.1891, -142.643, -35.2892, 1.92 ) }
    dend_13 { pt3dadd( -82.4654, -143.734, -35.6095, 0.22 ) }
    dend_13 { pt3dadd( -82.6187, -144.358, -35.7848, 0.22 ) }
    dend_13 { pt3dadd( -82.7735, -145.112, -36.0033, 0.22 ) }
    dend_13 { pt3dadd( -82.8966, -145.766, -36.198, 1.25 ) }
    dend_13 { pt3dadd( -82.9697, -146.081, -36.2973, 1.62 ) }
    dend_13 { pt3dadd( -83.0904, -146.475, -36.4167, 1.62 ) }
    dend_13 { pt3dadd( -83.1344, -146.588, -36.4501, 1.62 ) }
    dend_13 { pt3dadd( -83.6956, -147.828, -36.8797, 0.22 ) }
    dend_13 { pt3dadd( -83.7432, -147.937, -36.9236, 0.22 ) }
    dend_13 { pt3dadd( -83.9957, -148.59, -37.2005, 0.22 ) }
    dend_13 { pt3dadd( -84.2584, -149.317, -37.5141, 0.22 ) }
    dend_13 { pt3dadd( -84.4639, -149.864, -37.7504, 1.03 ) }
    dend_13 { pt3dadd( -84.568, -150.133, -37.8658, 1.03 ) }
    dend_13 { pt3dadd( -84.901, -150.969, -38.2142, 0.22 ) }
    dend_13 { pt3dadd( -85.0472, -151.351, -38.3728, 0.59 ) }
    dend_13 { pt3dadd( -85.2423, -151.934, -38.6026, 0.22 ) }
    dend_13 { pt3dadd( -85.3856, -152.362, -38.754, 0.22 ) }
    dend_13 { pt3dadd( -85.5697, -152.928, -38.9132, 1.25 ) }
    dend_13 { pt3dadd( -85.6751, -153.255, -38.993, 1.62 ) }
    dend_13 { pt3dadd( -85.708, -153.355, -39.0141, 1.62 ) }
    dend_13 { pt3dadd( -86.042, -154.382, -39.2429, 0.15 ) }
    dend_13 { pt3dadd( -86.2444, -155.067, -39.3916, 1.25 ) }
    dend_13 { pt3dadd( -86.317, -155.347, -39.45, 1.25 ) }
    dend_13 { pt3dadd( -86.5582, -156.241, -39.6513, 0.22 ) }
    dend_13 { pt3dadd( -86.5766, -156.295, -39.6663, 0.22 ) }
    dend_13 { pt3dadd( -86.7703, -156.75, -39.8159, 0.74 ) }
    dend_13 { pt3dadd( -86.7936, -156.793, -39.834, 0.74 ) }
    dend_13 { pt3dadd( -86.9177, -156.997, -39.9144, 0.74 ) }
    dend_13 { pt3dadd( -87.4086, -157.778, -40.176, 0.15 ) }
    dend_13 { pt3dadd( -87.8033, -158.41, -40.3435, 1.11 ) }
    dend_13 { pt3dadd( -87.8715, -158.524, -40.3726, 1.11 ) }
    dend_13 { pt3dadd( -87.905, -158.582, -40.3864, 1.11 ) }
    dend_13 { pt3dadd( -88.7784, -160.027, -40.746, 0.22 ) }
    dend_13 { pt3dadd( -89.0499, -160.464, -40.8597, 1.03 ) }
    dend_13 { pt3dadd( -89.27, -160.81, -40.9503, 1.11 ) }
    dend_13 { pt3dadd( -89.9491, -161.835, -41.2454, 0.22 ) }
    dend_13 { pt3dadd( -90.0591, -161.995, -41.2963, 0.59 ) }
    dend_13 { pt3dadd( -90.5917, -162.716, -41.5334, 0.22 ) }
    dend_13 { pt3dadd( -90.8617, -163.051, -41.651, 1.33 ) }
    dend_13 { pt3dadd( -91.0965, -163.324, -41.7374, 1.55 ) }
    dend_13 { pt3dadd( -91.4757, -163.724, -41.8458, 0.88 ) }
    dend_13 { pt3dadd( -92.2635, -164.533, -42.0178, 0.22 ) }
    dend_13 { pt3dadd( -92.6167, -164.898, -42.0873, 0.66 ) }
    dend_13 { pt3dadd( -92.7795, -165.069, -42.1396, 0.66 ) }
    dend_13 { pt3dadd( -93.3877, -165.699, -42.3879, 0.22 ) }
    dend_13 { pt3dadd( -93.9593, -166.297, -42.6695, 1.62 ) }
    dend_13 { pt3dadd( -94.3782, -166.743, -42.9201, 2.06 ) }
    dend_13 { pt3dadd( -94.7358, -167.116, -43.1654, 2.06 ) }
    dend_13 { pt3dadd( -95.971, -168.432, -44.0665, 0.22 ) }
    dend_13 { pt3dadd( -95.971, -168.432, -44.0665, 0.59 ) }
    dend_13 { pt3dadd( -96.0527, -168.512, -44.1237, 0.59 ) }
    dend_13 { pt3dadd( -96.5808, -168.984, -44.4545, 0.22 ) }
    dend_13 { pt3dadd( -97.1208, -169.403, -44.7373, 0.22 ) }
    dend_13 { pt3dadd( -97.7268, -169.821, -44.9773, 1.77 ) }
    dend_13 { pt3dadd( -98.0807, -170.039, -45.0616, 2.06 ) }
    dend_13 { pt3dadd( -99.4673, -170.862, -45.3035, 0.15 ) }
    dend_13 { pt3dadd( -99.749, -171.017, -45.3385, 0.74 ) }
    dend_13 { pt3dadd( -100.075, -171.17, -45.3453, 0.74 ) }
    dend_13 { pt3dadd( -100.795, -171.473, -45.2916, 0.22 ) }
    dend_13 { pt3dadd( -101.423, -171.709, -45.1987, 0.22 ) }
    dend_13 { pt3dadd( -102.122, -171.951, -45.0504, 1.18 ) }
    dend_13 { pt3dadd( -102.467, -172.065, -44.9446, 1.55 ) }
    dend_13 { pt3dadd( -103.571, -172.419, -44.5721, 0.29 ) }
    dend_13 { pt3dadd( -104.389, -172.673, -44.2802, 0.22 ) }
    dend_13 { pt3dadd( -104.749, -172.767, -44.1626, 0.74 ) }
    dend_13 { pt3dadd( -105.041, -172.827, -44.0834, 1.03 ) }
    dend_13 { pt3dadd( -105.982, -172.965, -43.896, 0.15 ) }
    dend_13 { pt3dadd( -106.272, -172.996, -43.8713, 0.37 ) }
    dend_13 { pt3dadd( -106.333, -173.0, -43.8745, 0.37 ) }
    dend_13 { pt3dadd( -107.294, -173.01, -44.0064, 0.22 ) }
    dend_13 { pt3dadd( -107.961, -173.004, -44.1316, 1.18 ) }
    dend_13 { pt3dadd( -108.431, -173.003, -44.2421, 1.55 ) }
    dend_13 { pt3dadd( -109.563, -173.012, -44.5609, 0.22 ) }
    dend_13 { pt3dadd( -110.104, -173.023, -44.6962, 0.22 ) }
    dend_13 { pt3dadd( -110.776, -173.048, -44.841, 0.96 ) }
    dend_13 { pt3dadd( -111.014, -173.059, -44.8767, 1.33 ) }
    dend_13 { pt3dadd( -112.198, -173.101, -44.9984, 0.22 ) }
    dend_13 { pt3dadd( -112.693, -173.121, -45.0198, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_13 { pt3dadd( -113.601, -173.157, -45.0145, 0.96 ) }
    dend_13 { pt3dadd( -113.841, -173.166, -45.0009, 1.25 ) }
    dend_13 { pt3dadd( -115.414, -173.235, -44.8644, 0.22 ) }
    dend_13 { pt3dadd( -116.042, -173.269, -44.8062, 0.22 ) }
    dend_13 { pt3dadd( -117.243, -173.343, -44.6825, 1.84 ) }
    dend_13 { pt3dadd( -117.49, -173.366, -44.6587, 2.36 ) }
    dend_13 { pt3dadd( -119.105, -173.585, -44.5358, 0.22 ) }
    dend_13 { pt3dadd( -119.535, -173.655, -44.5015, 0.66 ) }
    dend_13 { pt3dadd( -120.185, -173.797, -44.4655, 0.22 ) }
    dend_13 { pt3dadd( -120.234, -173.809, -44.4641, 0.22 ) }
    dend_13 { pt3dadd( -120.887, -173.975, -44.4992, 0.96 ) }
    dend_13 { pt3dadd( -121.191, -174.053, -44.534, 0.96 ) }
    dend_13 { pt3dadd( -121.247, -174.069, -44.5461, 0.96 ) }
    dend_13 { pt3dadd( -122.093, -174.3, -44.7324, 0.22 ) }
    dend_13 { pt3dadd( -122.149, -174.315, -44.7449, 0.22 ) }
    dend_13 { pt3dadd( -123.025, -174.545, -44.944, 0.22 ) }
    dend_13 { pt3dadd( -123.088, -174.562, -44.9588, 0.22 ) }
    dend_13 { pt3dadd( -123.988, -174.837, -45.143, 0.22 ) }
    dend_13 { pt3dadd( -124.051, -174.858, -45.1548, 0.22 ) }
    dend_13 { pt3dadd( -124.453, -174.992, -45.2203, 1.11 ) }
    dend_13 { pt3dadd( -124.863, -175.131, -45.2861, 1.4 ) }
    dend_13 { pt3dadd( -125.03, -175.188, -45.312, 1.69 ) }
    dend_13 { pt3dadd( -126.631, -175.733, -45.5564, 0.22 ) }
    dend_13 { pt3dadd( -127.038, -175.866, -45.6167, 0.66 ) }
    dend_13 { pt3dadd( -127.229, -175.93, -45.6443, 0.88 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -9.21336, -34.5279, 0.760195, 2.58 ) }
    dend_8 { pt3dadd( -8.79836, -35.4869, 0.57797, 2.58 ) }
    dend_8 { pt3dadd( -8.4682, -36.578, 0.317753, 1.11 ) }
    dend_8 { pt3dadd( -8.23234, -37.5084, 0.102988, 0.66 ) }
    dend_8 { pt3dadd( -8.06136, -38.2324, -0.0656521, 0.59 ) }
    dend_8 { pt3dadd( -7.78572, -39.3932, -0.350408, 1.25 ) }
    dend_8 { pt3dadd( -7.66275, -39.8806, -0.47369, 1.62 ) }
    dend_8 { pt3dadd( -7.3068, -41.407, -0.856546, 1.11 ) }
    dend_8 { pt3dadd( -7.07599, -42.315, -1.0983, 1.33 ) }
    dend_8 { pt3dadd( -6.83169, -43.135, -1.34173, 1.92 ) }
    dend_8 { pt3dadd( -6.52134, -44.0037, -1.61616, 1.99 ) }
    dend_8 { pt3dadd( -6.14686, -44.8989, -1.9288, 1.33 ) }
    dend_8 { pt3dadd( -5.73123, -45.8556, -2.28565, 0.96 ) }
    dend_8 { pt3dadd( -5.25731, -46.904, -2.69051, 0.96 ) }
    dend_8 { pt3dadd( -5.24155, -46.9418, -2.70719, 0.96 ) }
    dend_8 { pt3dadd( -5.01839, -47.5945, -3.03438, 0.74 ) }
    dend_8 { pt3dadd( -4.79719, -48.5732, -3.66366, 0.52 ) }
    dend_8 { pt3dadd( -4.73365, -49.2447, -4.19688, 0.52 ) }
    dend_8 { pt3dadd( -4.73407, -49.2829, -4.23191, 0.52 ) }
    dend_8 { pt3dadd( -4.76804, -49.8162, -4.75247, 0.88 ) }
    dend_8 { pt3dadd( -4.81578, -50.4961, -5.40293, 1.18 ) }
    dend_8 { pt3dadd( -4.90623, -51.6022, -6.43329, 0.59 ) }
    dend_8 { pt3dadd( -4.96829, -52.2624, -6.99363, 0.59 ) }
    dend_8 { pt3dadd( -4.97093, -52.2973, -7.02094, 0.59 ) }
    dend_8 { pt3dadd( -5.00347, -52.8875, -7.42171, 0.59 ) }
    dend_8 { pt3dadd( -5.04082, -53.8822, -7.95407, 1.55 ) }
    dend_8 { pt3dadd( -5.06716, -54.6137, -8.22078, 2.14 ) }
    dend_8 { pt3dadd( -5.09542, -55.0349, -8.32831, 2.36 ) }
    dend_8 { pt3dadd( -5.10068, -55.0779, -8.33871, 2.36 ) }
    dend_8 { pt3dadd( -5.19617, -55.5366, -8.46844, 2.36 ) }
    dend_8 { pt3dadd( -5.36795, -56.0554, -8.66362, 2.06 ) }
    dend_8 { pt3dadd( -5.70302, -56.7999, -9.00113, 1.77 ) }
    dend_8 { pt3dadd( -6.08436, -57.5623, -9.38086, 0.74 ) }
    dend_8 { pt3dadd( -6.27959, -57.9288, -9.58129, 0.52 ) }
    dend_8 { pt3dadd( -6.63264, -58.5437, -9.94697, 0.44 ) }
    dend_8 { pt3dadd( -7.09629, -59.2489, -10.435, 0.44 ) }
    dend_8 { pt3dadd( -7.58353, -59.8981, -10.9642, 2.06 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 62/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.14494, -138.188, 33.7844, 0.88 ) }
    dend_4 { pt3dadd( -6.10698, -139.439, 33.7741, 0.88 ) }
    dend_4 { pt3dadd( -5.987, -140.635, 33.7263, 0.88 ) }
    dend_4 { pt3dadd( -5.86538, -141.466, 33.6996, 1.18 ) }
    dend_4 { pt3dadd( -5.77113, -142.006, 33.6743, 1.18 ) }
    dend_4 { pt3dadd( -5.50439, -143.466, 33.6059, 0.52 ) }
    dend_4 { pt3dadd( -5.38346, -144.128, 33.5749, 0.52 ) }
    dend_4 { pt3dadd( -5.09792, -145.427, 33.5038, 1.99 ) }
    dend_4 { pt3dadd( -4.77332, -146.674, 33.4132, 3.09 ) }
    dend_4 { pt3dadd( -4.54245, -147.459, 33.3462, 3.61 ) }
    dend_4 { pt3dadd( -4.26512, -148.383, 33.2658, 3.61 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 73/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -6.14494, -138.188, 33.7844, 0.74 ) }
    dend_3 { pt3dadd( -5.32536, -139.168, 33.7788, 0.74 ) }
    dend_3 { pt3dadd( -4.4349, -140.393, 33.7945, 0.66 ) }
    dend_3 { pt3dadd( -3.99109, -141.004, 33.8023, 1.11 ) }
    dend_3 { pt3dadd( -3.70577, -141.396, 33.8074, 1.25 ) }
    dend_3 { pt3dadd( -2.40075, -143.192, 33.8303, 0.29 ) }
    dend_3 { pt3dadd( -1.84609, -143.956, 33.8401, 0.29 ) }
    dend_3 { pt3dadd( -1.17023, -144.982, 33.8027, 0.29 ) }
    dend_3 { pt3dadd( 4.43185, -153.092, 34.607, 0.29 ) }
    dend_3 { pt3dadd( 10.3182, -160.657, 37.0893, 0.29 ) }
    dend_3 { pt3dadd( 16.9351, -167.716, 39.2962, 0.29 ) }
    dend_3 { pt3dadd( 22.3695, -175.382, 42.3932, 0.29 ) }
    dend_3 { pt3dadd( 27.3542, -183.4, 45.3084, 0.29 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 86/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -8.91549, 149.583, -63.7874, 0.22 ) }
    dend_69 { pt3dadd( -9.44227, 148.938, -65.4319, 0.22 ) }
    dend_69 { pt3dadd( -9.64362, 148.732, -66.1278, 1.18 ) }
    dend_69 { pt3dadd( -9.71631, 148.666, -66.3555, 1.18 ) }
    dend_69 { pt3dadd( -10.7285, 147.841, -69.3422, 0.22 ) }
    dend_69 { pt3dadd( -10.95, 147.67, -69.9827, 0.22 ) }
    dend_69 { pt3dadd( -11.6745, 147.111, -72.0775, 0.74 ) }
    dend_69 { pt3dadd( -12.6251, 146.544, -74.7646, 0.22 ) }
    dend_69 { pt3dadd( -12.9308, 146.387, -75.6287, 1.03 ) }
    dend_69 { pt3dadd( -13.0525, 146.327, -75.9688, 1.25 ) }
    dend_69 { pt3dadd( -13.1552, 146.287, -76.2209, 1.25 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 97/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -8.91549, 149.583, -63.7874, 0.52 ) }
    dend_68 { pt3dadd( -8.18, 150.914, -64.784, 0.52 ) }
    dend_68 { pt3dadd( -7.76488, 151.728, -65.3815, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_68 { pt3dadd( -7.24585, 152.969, -66.2165, 0.88 ) }
    dend_68 { pt3dadd( -7.17401, 153.178, -66.3461, 1.03 ) }
    dend_68 { pt3dadd( -6.64242, 155.0, -67.4268, 0.15 ) }
    dend_68 { pt3dadd( -6.52515, 155.448, -67.6853, 0.52 ) }
    dend_68 { pt3dadd( -6.50421, 155.617, -67.7751, 0.52 ) }
    dend_68 { pt3dadd( -6.44062, 156.829, -68.3513, 0.15 ) }
    dend_68 { pt3dadd( -6.44121, 157.372, -68.5746, 0.81 ) }
    dend_68 { pt3dadd( -6.46168, 158.086, -68.8543, 1.11 ) }
    dend_68 { pt3dadd( -6.46779, 158.145, -68.874, 1.11 ) }
    dend_68 { pt3dadd( -6.59854, 159.501, -69.3399, 0.22 ) }
    dend_68 { pt3dadd( -6.64423, 160.102, -69.5608, 0.96 ) }
    dend_68 { pt3dadd( -6.65814, 160.486, -69.7234, 1.11 ) }
    // Section: dend_66, id: dend_66, parent: dend_28 (entry count 12/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -14.1733, 135.148, -7.65316, 0.96 ) }
    dend_66 { pt3dadd( -14.0846, 136.216, -8.87637, 0.96 ) }
    dend_66 { pt3dadd( -14.0004, 137.294, -10.0992, 1.03 ) }
    dend_66 { pt3dadd( -13.968, 137.547, -10.3775, 1.03 ) }
    dend_66 { pt3dadd( -13.8403, 138.432, -11.3252, 0.29 ) }
    dend_66 { pt3dadd( -13.7398, 139.117, -11.9778, 1.25 ) }
    dend_66 { pt3dadd( -13.6719, 139.587, -12.3818, 1.47 ) }
    dend_66 { pt3dadd( -13.6509, 139.747, -12.4908, 1.47 ) }
    dend_66 { pt3dadd( -13.5281, 141.195, -13.2929, 0.29 ) }
    dend_66 { pt3dadd( -13.5154, 141.327, -13.3613, 0.29 ) }
    dend_66 { pt3dadd( -13.407, 142.43, -13.8633, 0.29 ) }
    dend_66 { pt3dadd( -13.3476, 142.847, -14.0567, 0.59 ) }
    dend_66 { pt3dadd( -13.1966, 143.779, -14.4843, 0.44 ) }
    dend_66 { pt3dadd( -12.9972, 144.96, -15.0194, 2.28 ) }
    dend_66 { pt3dadd( -12.8795, 145.667, -15.3338, 2.65 ) }
    dend_66 { pt3dadd( -12.8189, 146.006, -15.4902, 2.65 ) }
    dend_66 { pt3dadd( -12.4061, 148.225, -16.5718, 0.37 ) }
    dend_66 { pt3dadd( -12.2822, 148.926, -16.8901, 0.29 ) }
    dend_66 { pt3dadd( -12.2671, 149.014, -16.9252, 0.29 ) }
    dend_66 { pt3dadd( -12.1953, 149.512, -17.0846, 0.44 ) }
    dend_66 { pt3dadd( -12.1706, 149.804, -17.1543, 0.44 ) }
    dend_66 { pt3dadd( -12.1436, 150.666, -17.3067, 0.15 ) }
    dend_66 { pt3dadd( -12.1883, 151.405, -17.3623, 0.74 ) }
    dend_66 { pt3dadd( -12.1913, 151.476, -17.3696, 0.74 ) }
    dend_66 { pt3dadd( -12.1985, 151.916, -17.4515, 0.74 ) }
    dend_66 { pt3dadd( -12.2017, 152.284, -17.5355, 0.52 ) }
    dend_66 { pt3dadd( -12.2284, 153.142, -17.7596, 0.29 ) }
    dend_66 { pt3dadd( -12.2823, 154.204, -18.0561, 1.18 ) }
    dend_66 { pt3dadd( -12.3161, 154.704, -18.2034, 1.69 ) }
    dend_66 { pt3dadd( -12.4137, 156.485, -18.8053, 0.29 ) }
    dend_66 { pt3dadd( -12.4533, 157.177, -19.0549, 0.29 ) }
    dend_66 { pt3dadd( -12.5465, 158.485, -19.5492, 1.77 ) }
    dend_66 { pt3dadd( -12.5793, 158.831, -19.6926, 2.73 ) }
    dend_66 { pt3dadd( -12.6127, 159.102, -19.8156, 2.73 ) }
    dend_66 { pt3dadd( -12.9348, 161.347, -20.8868, 0.29 ) }
    dend_66 { pt3dadd( -13.0468, 162.001, -21.2102, 0.29 ) }
    dend_66 { pt3dadd( -13.0925, 162.238, -21.3401, 0.59 ) }
    dend_66 { pt3dadd( -13.2652, 163.027, -21.8145, 0.22 ) }
    dend_66 { pt3dadd( -13.4041, 163.567, -22.1632, 0.74 ) }
    dend_66 { pt3dadd( -13.4733, 163.754, -22.2963, 1.03 ) }
    dend_66 { pt3dadd( -13.5058, 163.802, -22.3396, 1.03 ) }
    dend_66 { pt3dadd( -13.7104, 164.095, -22.6313, 0.81 ) }
    dend_66 { pt3dadd( -13.768, 164.184, -22.7131, 0.81 ) }
    dend_66 { pt3dadd( -14.3268, 165.087, -23.4344, 0.22 ) }
    dend_66 { pt3dadd( -14.5904, 165.537, -23.7617, 0.59 ) }
    dend_66 { pt3dadd( -15.032, 166.29, -24.2859, 0.22 ) }
    dend_66 { pt3dadd( -15.1031, 166.409, -24.3643, 0.22 ) }
    dend_66 { pt3dadd( -15.417, 166.925, -24.6727, 0.22 ) }
    dend_66 { pt3dadd( -15.7987, 167.552, -25.0056, 0.22 ) }
    dend_66 { pt3dadd( -16.3408, 168.467, -25.4407, 1.62 ) }
    dend_66 { pt3dadd( -16.7225, 169.13, -25.7356, 2.14 ) }
    dend_66 { pt3dadd( -17.0547, 169.706, -25.9814, 2.14 ) }
    dend_66 { pt3dadd( -17.9131, 171.149, -26.6148, 0.29 ) }
    dend_66 { pt3dadd( -18.1889, 171.6, -26.8174, 0.44 ) }
    dend_66 { pt3dadd( -18.4968, 172.115, -27.0452, 0.22 ) }
    dend_66 { pt3dadd( -18.9712, 172.939, -27.3949, 0.22 ) }
    dend_66 { pt3dadd( -19.3993, 173.735, -27.7176, 1.25 ) }
    dend_66 { pt3dadd( -19.5723, 174.078, -27.8544, 1.62 ) }
    dend_66 { pt3dadd( -19.6575, 174.276, -27.9318, 1.84 ) }
    dend_66 { pt3dadd( -20.1941, 175.787, -28.5151, 0.29 ) }
    dend_66 { pt3dadd( -20.5543, 177.007, -28.9669, 0.29 ) }
    dend_66 { pt3dadd( -20.7314, 177.858, -29.2756, 0.74 ) }
    dend_66 { pt3dadd( -20.7804, 178.203, -29.4106, 0.74 ) }
    dend_66 { pt3dadd( -20.8986, 179.408, -29.9058, 0.22 ) }
    dend_66 { pt3dadd( -20.9621, 180.48, -30.3549, 1.62 ) }
    dend_66 { pt3dadd( -20.963, 180.537, -30.3779, 1.62 ) }
    dend_66 { pt3dadd( -20.9627, 181.316, -30.6818, 1.99 ) }
    dend_66 { pt3dadd( -20.9546, 183.191, -31.3737, 0.22 ) }
    dend_66 { pt3dadd( -20.9549, 183.249, -31.3942, 0.22 ) }
    dend_66 { pt3dadd( -20.9934, 184.116, -31.6767, 0.22 ) }
    dend_66 { pt3dadd( -21.054, 185.06, -31.9563, 0.96 ) }
    dend_66 { pt3dadd( -21.0841, 185.42, -32.0598, 1.25 ) }
    dend_66 { pt3dadd( -21.259, 187.059, -32.4542, 0.22 ) }
    dend_66 { pt3dadd( -21.2659, 187.119, -32.4656, 0.22 ) }
    dend_66 { pt3dadd( -21.3704, 187.939, -32.6277, 0.74 ) }
    dend_66 { pt3dadd( -21.4021, 188.16, -32.6717, 0.88 ) }
    dend_66 { pt3dadd( -21.4957, 188.741, -32.7929, 0.29 ) }
    dend_66 { pt3dadd( -21.6992, 189.865, -33.0095, 0.22 ) }
    dend_66 { pt3dadd( -21.8458, 190.588, -33.1225, 0.22 ) }
    dend_66 { pt3dadd( -22.0332, 191.608, -33.2132, 1.33 ) }
    dend_66 { pt3dadd( -22.095, 191.984, -33.2214, 1.92 ) }
    dend_66 { pt3dadd( -22.1051, 192.044, -33.2202, 1.92 ) }
    dend_66 { pt3dadd( -22.1812, 192.494, -33.1972, 1.77 ) }
    dend_66 { pt3dadd( -22.2642, 192.96, -33.1705, 1.69 ) }
    dend_66 { pt3dadd( -22.5522, 194.554, -33.0673, 0.22 ) }
    dend_66 { pt3dadd( -22.8328, 195.862, -32.9759, 0.22 ) }
    dend_66 { pt3dadd( -23.1263, 197.087, -32.8982, 1.47 ) }
    dend_66 { pt3dadd( -23.2661, 197.612, -32.8701, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_66 { pt3dadd( -23.3714, 197.96, -32.8586, 1.92 ) }
    dend_66 { pt3dadd( -23.5406, 198.449, -32.8563, 1.47 ) }
    dend_66 { pt3dadd( -24.2091, 200.145, -32.914, 0.22 ) }
    dend_66 { pt3dadd( -24.5062, 200.825, -32.9485, 0.44 ) }
    dend_66 { pt3dadd( -24.6421, 201.144, -32.9691, 0.44 ) }
    dend_66 { pt3dadd( -25.0155, 202.045, -33.036, 0.22 ) }
    dend_66 { pt3dadd( -25.4208, 203.094, -33.1207, 1.18 ) }
    dend_66 { pt3dadd( -25.5996, 203.597, -33.1627, 2.14 ) }
    dend_66 { pt3dadd( -25.7879, 204.182, -33.221, 1.62 ) }
    dend_66 { pt3dadd( -26.3593, 206.048, -33.4071, 0.22 ) }
    dend_66 { pt3dadd( -26.3792, 206.117, -33.4137, 0.22 ) }
    dend_66 { pt3dadd( -26.7845, 207.619, -33.5279, 0.22 ) }
    dend_66 { pt3dadd( -27.1189, 208.907, -33.6046, 0.22 ) }
    dend_66 { pt3dadd( -27.3398, 209.748, -33.628, 1.03 ) }
    dend_66 { pt3dadd( -27.4179, 210.036, -33.6281, 1.62 ) }
    dend_66 { pt3dadd( -27.5029, 210.324, -33.6194, 1.11 ) }
    dend_66 { pt3dadd( -27.8951, 211.696, -33.4884, 0.22 ) }
    dend_66 { pt3dadd( -27.9111, 211.754, -33.4789, 0.22 ) }
    dend_66 { pt3dadd( -28.1967, 212.851, -33.2359, 1.47 ) }
    dend_66 { pt3dadd( -28.2874, 213.208, -33.1455, 2.06 ) }
    dend_66 { pt3dadd( -28.307, 213.285, -33.126, 2.06 ) }
    dend_66 { pt3dadd( -28.7245, 214.951, -32.7601, 0.22 ) }
    dend_66 { pt3dadd( -28.9551, 215.88, -32.587, 0.52 ) }
    dend_66 { pt3dadd( -29.2738, 217.117, -32.4037, 0.22 ) }
    dend_66 { pt3dadd( -29.4917, 217.941, -32.3105, 1.33 ) }
    dend_66 { pt3dadd( -29.6047, 218.368, -32.2814, 1.33 ) }
    dend_66 { pt3dadd( -29.9932, 219.826, -32.2516, 0.22 ) }
    dend_66 { pt3dadd( -30.141, 220.387, -32.2763, 0.22 ) }
    dend_66 { pt3dadd( -30.3263, 221.156, -32.3284, 0.66 ) }
    dend_66 { pt3dadd( -30.3925, 221.458, -32.356, 0.66 ) }
    dend_66 { pt3dadd( -30.6639, 222.891, -32.4823, 0.22 ) }
    dend_66 { pt3dadd( -30.6729, 222.964, -32.4871, 0.22 ) }
    dend_66 { pt3dadd( -30.7414, 223.945, -32.5274, 0.22 ) }
    dend_66 { pt3dadd( -30.7625, 224.877, -32.5666, 0.96 ) }
    dend_66 { pt3dadd( -30.756, 225.394, -32.5866, 1.62 ) }
    dend_66 { pt3dadd( -30.744, 225.932, -32.608, 1.4 ) }
    dend_66 { pt3dadd( -30.7369, 227.644, -32.7148, 0.22 ) }
    dend_66 { pt3dadd( -30.7438, 228.089, -32.7567, 0.22 ) }
    dend_66 { pt3dadd( -30.7837, 229.152, -32.8864, 1.11 ) }
    dend_66 { pt3dadd( -30.7935, 229.305, -32.9076, 1.33 ) }
    dend_66 { pt3dadd( -30.8263, 229.744, -32.9834, 1.18 ) }
    dend_66 { pt3dadd( -30.9983, 231.68, -33.3437, 0.22 ) }
    dend_66 { pt3dadd( -31.0914, 232.581, -33.531, 1.03 ) }
    dend_66 { pt3dadd( -31.145, 233.084, -33.6388, 1.18 ) }
    dend_66 { pt3dadd( -31.1766, 233.446, -33.7292, 1.03 ) }
    dend_66 { pt3dadd( -31.259, 234.693, -34.0737, 0.15 ) }
    dend_66 { pt3dadd( -31.3045, 235.741, -34.3809, 0.15 ) }
    dend_66 { pt3dadd( -31.3356, 236.724, -34.6715, 1.33 ) }
    dend_66 { pt3dadd( -31.3575, 237.27, -34.831, 1.55 ) }
    dend_66 { pt3dadd( -31.4333, 239.198, -35.4116, 0.15 ) }
    dend_66 { pt3dadd( -31.4372, 239.269, -35.4325, 0.15 ) }
    dend_66 { pt3dadd( -31.5114, 240.148, -35.6723, 0.15 ) }
    dend_66 { pt3dadd( -31.6101, 241.153, -35.9397, 1.11 ) }
    dend_66 { pt3dadd( -31.6479, 241.497, -36.0169, 1.55 ) }
    dend_66 { pt3dadd( -31.8249, 242.983, -36.2872, 0.15 ) }
    dend_66 { pt3dadd( -31.9467, 243.775, -36.3874, 0.74 ) }
    dend_66 { pt3dadd( -32.1437, 244.946, -36.5254, 0.15 ) }
    dend_66 { pt3dadd( -32.1573, 245.015, -36.5333, 0.15 ) }
    dend_66 { pt3dadd( -32.2995, 245.676, -36.6034, 0.15 ) }
    dend_66 { pt3dadd( -32.4849, 246.468, -36.6654, 0.96 ) }
    dend_66 { pt3dadd( -32.5746, 246.828, -36.6825, 0.96 ) }
    dend_66 { pt3dadd( -32.9564, 248.431, -36.765, 0.15 ) }
    dend_66 { pt3dadd( -33.1086, 249.113, -36.7966, 0.44 ) }
    dend_66 { pt3dadd( -33.1251, 249.192, -36.8024, 0.44 ) }
    dend_66 { pt3dadd( -33.3129, 250.226, -36.9016, 0.15 ) }
    dend_66 { pt3dadd( -33.472, 251.224, -37.0109, 1.03 ) }
    dend_66 { pt3dadd( -33.5323, 251.661, -37.0599, 1.33 ) }
    dend_66 { pt3dadd( -33.5992, 252.349, -37.1392, 0.59 ) }
    dend_66 { pt3dadd( -33.6797, 253.506, -37.2757, 0.15 ) }
    dend_66 { pt3dadd( -33.735, 254.377, -37.383, 0.88 ) }
    dend_66 { pt3dadd( -33.7633, 254.88, -37.4456, 1.03 ) }
    dend_66 { pt3dadd( -33.7935, 255.405, -37.5067, 0.66 ) }
    dend_66 { pt3dadd( -33.8049, 256.614, -37.687, 0.15 ) }
    dend_66 { pt3dadd( -33.7799, 257.891, -37.9029, 0.15 ) }
    dend_66 { pt3dadd( -33.7674, 258.709, -38.0144, 0.96 ) }
    dend_66 { pt3dadd( -33.7689, 259.178, -38.0727, 1.25 ) }
    dend_66 { pt3dadd( -33.7749, 259.489, -38.1077, 1.25 ) }
    dend_66 { pt3dadd( -33.8658, 261.425, -38.3054, 0.15 ) }
    dend_66 { pt3dadd( -33.9154, 261.938, -38.347, 0.44 ) }
    dend_66 { pt3dadd( -34.0695, 263.05, -38.4158, 0.15 ) }
    dend_66 { pt3dadd( -34.1601, 263.567, -38.4289, 0.74 ) }
    dend_66 { pt3dadd( -34.2648, 264.084, -38.4249, 0.74 ) }
    dend_66 { pt3dadd( -34.4709, 265.053, -38.3728, 0.15 ) }
    dend_66 { pt3dadd( -34.665, 265.854, -38.2983, 0.88 ) }
    dend_66 { pt3dadd( -34.7708, 266.358, -38.2609, 0.96 ) }
    dend_66 { pt3dadd( -34.9912, 267.62, -38.1941, 0.15 ) }
    dend_66 { pt3dadd( -35.1108, 268.287, -38.1527, 0.29 ) }
    dend_66 { pt3dadd( -35.3387, 269.508, -38.0695, 0.15 ) }
    dend_66 { pt3dadd( -35.4659, 270.173, -38.0174, 0.96 ) }
    dend_66 { pt3dadd( -35.5695, 270.751, -37.9689, 1.18 ) }
    dend_66 { pt3dadd( -35.9299, 272.718, -37.785, 0.22 ) }
    dend_66 { pt3dadd( -36.0932, 273.604, -37.695, 0.22 ) }
    dend_66 { pt3dadd( -36.135, 273.825, -37.6701, 0.22 ) }
    dend_66 { pt3dadd( -36.1641, 273.979, -37.6506, 0.22 ) }
    dend_66 { pt3dadd( -36.3115, 275.017, -37.5429, 0.15 ) }
    dend_66 { pt3dadd( -36.409, 275.894, -37.4818, 1.11 ) }
    dend_66 { pt3dadd( -36.4482, 276.379, -37.4619, 1.77 ) }
    dend_66 { pt3dadd( -36.4706, 276.76, -37.4531, 1.77 ) }
    dend_66 { pt3dadd( -36.4753, 276.843, -37.4529, 1.77 ) }
    dend_66 { pt3dadd( -36.6105, 279.081, -37.4476, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_66 { pt3dadd( -36.6714, 279.814, -37.4521, 0.15 ) }
    dend_66 { pt3dadd( -36.6768, 279.875, -37.4522, 0.15 ) }
    dend_66 { pt3dadd( -36.755, 280.577, -37.4431, 0.52 ) }
    dend_66 { pt3dadd( -36.7997, 280.88, -37.439, 0.59 ) }
    dend_66 { pt3dadd( -37.1169, 282.547, -37.4152, 0.15 ) }
    dend_66 { pt3dadd( -37.3081, 283.417, -37.383, 1.03 ) }
    dend_66 { pt3dadd( -37.4063, 283.877, -37.3678, 1.77 ) }
    dend_66 { pt3dadd( -37.5005, 284.32, -37.3569, 1.55 ) }
    dend_66 { pt3dadd( -37.9344, 286.223, -37.3489, 0.15 ) }
    dend_66 { pt3dadd( -38.0412, 286.678, -37.3597, 0.29 ) }
    dend_66 { pt3dadd( -38.2261, 287.456, -37.4024, 0.15 ) }
    dend_66 { pt3dadd( -38.4345, 288.322, -37.4605, 0.15 ) }
    dend_66 { pt3dadd( -38.4714, 288.472, -37.4712, 0.15 ) }
    dend_66 { pt3dadd( -38.8435, 290.006, -37.5967, 0.15 ) }
    dend_66 { pt3dadd( -39.1113, 291.108, -37.6932, 1.11 ) }
    dend_66 { pt3dadd( -39.1285, 291.177, -37.6998, 1.11 ) }
    dend_66 { pt3dadd( -39.2886, 291.792, -37.7646, 1.4 ) }
    dend_66 { pt3dadd( -39.4468, 292.488, -37.8351, 0.59 ) }
    dend_66 { pt3dadd( -39.6743, 293.607, -37.9381, 0.22 ) }
    dend_66 { pt3dadd( -39.8272, 294.491, -38.0034, 0.22 ) }
    dend_66 { pt3dadd( -39.9827, 295.436, -38.0623, 1.03 ) }
    dend_66 { pt3dadd( -40.0659, 296.018, -38.0952, 1.55 ) }
    dend_66 { pt3dadd( -40.3897, 298.596, -38.2046, 0.15 ) }
    dend_66 { pt3dadd( -40.3989, 298.67, -38.2072, 0.15 ) }
    dend_66 { pt3dadd( -40.4858, 299.292, -38.2138, 0.44 ) }
    dend_66 { pt3dadd( -40.541, 299.67, -38.2084, 0.44 ) }
    dend_66 { pt3dadd( -40.7823, 301.22, -38.1662, 0.15 ) }
    dend_66 { pt3dadd( -40.9301, 302.113, -38.1378, 1.03 ) }
    dend_66 { pt3dadd( -41.0348, 302.709, -38.1129, 1.62 ) }
    dend_66 { pt3dadd( -41.3359, 304.625, -38.1268, 0.15 ) }
    dend_66 { pt3dadd( -41.7051, 307.103, -38.2309, 0.15 ) }
    dend_66 { pt3dadd( -41.8485, 308.111, -38.2999, 0.15 ) }
    dend_66 { pt3dadd( -41.9427, 308.801, -38.3652, 1.11 ) }
    dend_66 { pt3dadd( -42.0303, 309.552, -38.4554, 1.4 ) }
    dend_66 { pt3dadd( -42.2585, 312.05, -38.7952, 0.15 ) }
    dend_66 { pt3dadd( -42.3115, 312.783, -38.9109, 0.15 ) }
    dend_66 { pt3dadd( -42.3736, 313.67, -39.0506, 0.74 ) }
    dend_66 { pt3dadd( -42.3972, 314.064, -39.0922, 0.74 ) }
    dend_66 { pt3dadd( -42.401, 314.135, -39.096, 0.74 ) }
    dend_66 { pt3dadd( -42.5017, 316.12, -39.109, 0.15 ) }
    dend_66 { pt3dadd( -42.5684, 317.303, -39.0423, 1.55 ) }
    dend_66 { pt3dadd( -42.5944, 318.038, -38.9938, 1.92 ) }
    dend_66 { pt3dadd( -42.6557, 320.205, -38.8387, 0.15 ) }
    dend_66 { pt3dadd( -42.6748, 320.918, -38.7848, 0.88 ) }
    dend_66 { pt3dadd( -42.6777, 321.071, -38.7724, 0.88 ) }
    dend_66 { pt3dadd( -42.68, 321.588, -38.7274, 0.88 ) }
    dend_66 { pt3dadd( -42.6696, 323.155, -38.5896, 0.15 ) }
    dend_66 { pt3dadd( -42.6767, 323.752, -38.5329, 0.15 ) }
    dend_66 { pt3dadd( -42.6963, 324.386, -38.4629, 0.74 ) }
    dend_66 { pt3dadd( -42.7552, 325.851, -38.2899, 0.15 ) }
    dend_66 { pt3dadd( -42.76, 325.921, -38.2809, 0.15 ) }
    dend_66 { pt3dadd( -42.7941, 326.277, -38.2306, 0.37 ) }
    dend_66 { pt3dadd( -42.9074, 327.096, -38.1075, 0.22 ) }
    dend_66 { pt3dadd( -42.996, 327.621, -38.02, 0.88 ) }
    dend_66 { pt3dadd( -43.0083, 327.681, -38.0097, 0.88 ) }
    dend_66 { pt3dadd( -43.3307, 329.277, -37.8042, 0.15 ) }
    dend_66 { pt3dadd( -43.4573, 329.957, -37.7371, 0.15 ) }
    dend_66 { pt3dadd( -43.4705, 330.037, -37.7312, 0.15 ) }
    dend_66 { pt3dadd( -43.638, 331.173, -37.6824, 1.25 ) }
    dend_66 { pt3dadd( -43.6731, 331.459, -37.6812, 1.25 ) }
    dend_66 { pt3dadd( -43.8968, 333.365, -37.7427, 0.15 ) }
    dend_66 { pt3dadd( -43.9048, 333.439, -37.7478, 0.15 ) }
    dend_66 { pt3dadd( -43.9727, 334.139, -37.8218, 1.18 ) }
    dend_66 { pt3dadd( -43.9956, 334.355, -37.8487, 1.18 ) }
    dend_66 { pt3dadd( -44.1375, 335.933, -38.1152, 0.15 ) }
    dend_66 { pt3dadd( -44.2511, 337.096, -38.3824, 0.15 ) }
    dend_66 { pt3dadd( -44.285, 337.383, -38.4621, 0.44 ) }
    dend_66 { pt3dadd( -44.5292, 339.365, -39.0577, 0.15 ) }
    dend_66 { pt3dadd( -44.7105, 340.786, -39.5237, 1.77 ) }
    dend_66 { pt3dadd( -44.8164, 341.63, -39.8237, 1.55 ) }
    dend_66 { pt3dadd( -44.9861, 342.973, -40.3409, 0.22 ) }
    dend_66 { pt3dadd( -45.0531, 343.535, -40.5835, 0.37 ) }
    dend_66 { pt3dadd( -45.1721, 344.429, -40.9956, 0.15 ) }
    dend_66 { pt3dadd( -45.1817, 344.482, -41.023, 0.15 ) }
    dend_66 { pt3dadd( -45.2952, 345.093, -41.3497, 0.74 ) }
    dend_66 { pt3dadd( -45.3677, 345.425, -41.5146, 0.74 ) }
    dend_66 { pt3dadd( -45.5347, 346.2, -41.8674, 0.15 ) }
    dend_66 { pt3dadd( -45.6486, 346.671, -42.0869, 0.66 ) }
    dend_66 { pt3dadd( -45.7444, 347.02, -42.2477, 1.25 ) }
    dend_66 { pt3dadd( -46.1904, 348.534, -42.9638, 0.15 ) }
    dend_66 { pt3dadd( -46.2131, 348.607, -42.9985, 0.15 ) }
    dend_66 { pt3dadd( -46.5005, 349.525, -43.4191, 0.15 ) }
    dend_66 { pt3dadd( -46.7685, 350.388, -43.7816, 0.96 ) }
    dend_66 { pt3dadd( -46.8885, 350.784, -43.9473, 1.55 ) }
    dend_66 { pt3dadd( -47.4941, 352.848, -44.7699, 0.15 ) }
    dend_66 { pt3dadd( -47.5099, 352.904, -44.7895, 0.15 ) }
    dend_66 { pt3dadd( -47.7847, 353.936, -45.129, 1.18 ) }
    dend_66 { pt3dadd( -47.939, 354.564, -45.32, 0.52 ) }
    dend_66 { pt3dadd( -48.1905, 355.672, -45.6138, 0.15 ) }
    dend_66 { pt3dadd( -48.3326, 356.315, -45.7595, 0.52 ) }
    dend_66 { pt3dadd( -48.7705, 358.184, -46.0984, 0.15 ) }
    dend_66 { pt3dadd( -48.9443, 358.814, -46.2088, 0.15 ) }
    dend_66 { pt3dadd( -49.2447, 359.734, -46.3704, 0.66 ) }
    dend_66 { pt3dadd( -49.4572, 360.288, -46.4645, 0.96 ) }
    dend_66 { pt3dadd( -49.6401, 360.69, -46.5269, 0.96 ) }
    dend_66 { pt3dadd( -50.4538, 362.112, -46.7401, 0.15 ) }
    dend_66 { pt3dadd( -51.084, 363.016, -46.8797, 0.52 ) }
    dend_66 { pt3dadd( -51.373, 363.4, -46.9391, 0.52 ) }
    dend_66 { pt3dadd( -51.8556, 364.001, -47.0318, 0.15 ) }
    dend_66 { pt3dadd( -52.4437, 364.704, -47.1411, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_66 { pt3dadd( -53.9306, 366.417, -47.397, 0.15 ) }
    dend_66 { pt3dadd( -54.4715, 367.015, -47.4735, 1.18 ) }
    dend_66 { pt3dadd( -54.8723, 367.464, -47.534, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -14.1733, 135.148, -7.65316, 0.59 ) }
    dend_29 { pt3dadd( -14.2028, 136.195, -7.47167, 0.59 ) }
    dend_29 { pt3dadd( -14.2469, 137.134, -7.34826, 1.18 ) }
    dend_29 { pt3dadd( -14.2974, 138.044, -7.26879, 1.84 ) }
    dend_29 { pt3dadd( -14.3348, 138.582, -7.23417, 2.06 ) }
    dend_29 { pt3dadd( -14.3819, 139.101, -7.21037, 2.06 ) }
    dend_29 { pt3dadd( -14.4564, 139.762, -7.18936, 1.84 ) }
    dend_29 { pt3dadd( -14.5655, 140.485, -7.18817, 1.55 ) }
    dend_29 { pt3dadd( -14.7976, 141.777, -7.21922, 0.37 ) }
    dend_29 { pt3dadd( -14.9659, 142.602, -7.25289, 0.37 ) }
    dend_29 { pt3dadd( -15.1791, 143.611, -7.31782, 0.96 ) }
    dend_29 { pt3dadd( -15.3996, 144.616, -7.39717, 1.47 ) }
    dend_29 { pt3dadd( -15.515, 145.114, -7.44035, 1.69 ) }
    dend_29 { pt3dadd( -15.6909, 145.85, -7.49866, 1.55 ) }
    dend_29 { pt3dadd( -15.8524, 146.519, -7.55133, 1.33 ) }
    dend_29 { pt3dadd( -16.0354, 147.388, -7.59386, 0.66 ) }
    dend_29 { pt3dadd( -16.2108, 148.49, -7.6207, 0.37 ) }
    dend_29 { pt3dadd( -16.3575, 149.751, -7.61649, 0.29 ) }
    dend_29 { pt3dadd( -16.4474, 150.83, -7.58589, 0.29 ) }
    dend_29 { pt3dadd( -16.4514, 150.914, -7.58076, 0.29 ) }
    dend_29 { pt3dadd( -16.4859, 152.757, -7.39586, 0.29 ) }
    dend_29 { pt3dadd( -16.4889, 153.638, -7.27445, 0.81 ) }
    dend_29 { pt3dadd( -16.4815, 154.288, -7.17707, 0.96 ) }
    dend_29 { pt3dadd( -16.482, 154.369, -7.16526, 0.96 ) }
    dend_29 { pt3dadd( -16.5037, 154.884, -7.10063, 0.96 ) }
    dend_29 { pt3dadd( -16.6125, 156.18, -6.96499, 0.29 ) }
    dend_29 { pt3dadd( -16.713, 156.943, -6.90739, 0.29 ) }
    dend_29 { pt3dadd( -16.8808, 157.976, -6.83727, 1.47 ) }
    dend_29 { pt3dadd( -17.04, 158.974, -6.80021, 2.06 ) }
    dend_29 { pt3dadd( -17.0913, 159.341, -6.7885, 2.5 ) }
    dend_29 { pt3dadd( -17.1675, 159.931, -6.7742, 2.43 ) }
    dend_29 { pt3dadd( -17.2421, 160.566, -6.75834, 2.14 ) }
    dend_29 { pt3dadd( -17.3202, 161.294, -6.73975, 1.77 ) }
    dend_29 { pt3dadd( -17.424, 162.282, -6.71325, 0.66 ) }
    dend_29 { pt3dadd( -17.5898, 163.779, -6.67165, 0.44 ) }
    dend_29 { pt3dadd( -17.7376, 164.968, -6.63792, 0.37 ) }
    dend_29 { pt3dadd( -17.8943, 166.077, -6.61089, 0.37 ) }
    dend_29 { pt3dadd( -18.0841, 167.184, -6.59593, 1.33 ) }
    dend_29 { pt3dadd( -18.2833, 168.172, -6.59598, 1.77 ) }
    dend_29 { pt3dadd( -18.5022, 169.098, -6.6047, 2.28 ) }
    dend_29 { pt3dadd( -18.652, 169.671, -6.63049, 2.65 ) }
    dend_29 { pt3dadd( -18.7826, 170.163, -6.6588, 2.8 ) }
    dend_29 { pt3dadd( -18.9663, 170.847, -6.70247, 2.5 ) }
    dend_29 { pt3dadd( -19.1144, 171.422, -6.73123, 1.99 ) }
    dend_29 { pt3dadd( -19.2327, 171.909, -6.75117, 1.77 ) }
    dend_29 { pt3dadd( -19.4087, 172.703, -6.76813, 0.81 ) }
    dend_29 { pt3dadd( -19.6174, 173.785, -6.75113, 0.44 ) }
    dend_29 { pt3dadd( -19.8042, 174.885, -6.70683, 0.37 ) }
    dend_29 { pt3dadd( -19.9425, 175.855, -6.63321, 0.74 ) }
    dend_29 { pt3dadd( -20.0081, 176.346, -6.58589, 0.74 ) }
    dend_29 { pt3dadd( -20.109, 177.066, -6.5112, 0.74 ) }
    dend_29 { pt3dadd( -20.3265, 178.512, -6.37607, 0.52 ) }
    dend_29 { pt3dadd( -20.3372, 178.581, -6.37071, 0.44 ) }
    dend_29 { pt3dadd( -20.5161, 179.673, -6.30205, 0.44 ) }
    dend_29 { pt3dadd( -20.6753, 180.587, -6.25826, 0.44 ) }
    dend_29 { pt3dadd( -20.9676, 182.182, -6.20062, 0.44 ) }
    dend_29 { pt3dadd( -21.3519, 184.115, -6.16468, 1.55 ) }
    dend_29 { pt3dadd( -21.547, 185.043, -6.15982, 2.43 ) }
    dend_29 { pt3dadd( -21.6892, 185.718, -6.15409, 2.65 ) }
    dend_29 { pt3dadd( -21.8069, 186.301, -6.15554, 2.87 ) }
    dend_29 { pt3dadd( -21.9736, 187.151, -6.16209, 2.36 ) }
    dend_29 { pt3dadd( -22.1384, 188.062, -6.18585, 1.47 ) }
    dend_29 { pt3dadd( -22.2495, 188.672, -6.201, 0.96 ) }
    dend_29 { pt3dadd( -22.4757, 189.875, -6.24145, 0.37 ) }
    dend_29 { pt3dadd( -22.6837, 190.947, -6.28036, 0.37 ) }
    dend_29 { pt3dadd( -22.9456, 192.27, -6.32571, 0.29 ) }
    dend_29 { pt3dadd( -23.1365, 193.295, -6.35699, 1.69 ) }
    dend_29 { pt3dadd( -23.2992, 194.316, -6.40765, 2.28 ) }
    dend_29 { pt3dadd( -23.3678, 194.772, -6.44436, 2.73 ) }
    dend_29 { pt3dadd( -23.4332, 195.202, -6.49221, 2.8 ) }
    dend_29 { pt3dadd( -23.5525, 195.981, -6.59026, 1.99 ) }
    dend_29 { pt3dadd( -23.7077, 197.079, -6.75322, 0.88 ) }
    dend_29 { pt3dadd( -23.9109, 198.365, -6.98421, 0.29 ) }
    dend_29 { pt3dadd( -24.0603, 199.232, -7.18045, 0.37 ) }
    dend_29 { pt3dadd( -24.1784, 199.845, -7.32806, 0.44 ) }
    dend_29 { pt3dadd( -24.2564, 200.173, -7.4079, 0.59 ) }
    dend_29 { pt3dadd( -24.3026, 200.333, -7.44197, 0.59 ) }
    dend_29 { pt3dadd( -24.4739, 200.849, -7.51957, 0.44 ) }
    dend_29 { pt3dadd( -24.7448, 201.673, -7.57407, 0.37 ) }
    dend_29 { pt3dadd( -24.7681, 201.752, -7.57555, 0.37 ) }
    dend_29 { pt3dadd( -25.0822, 202.996, -7.55691, 0.52 ) }
    dend_29 { pt3dadd( -25.326, 204.087, -7.5103, 0.81 ) }
    dend_29 { pt3dadd( -25.4222, 204.607, -7.47675, 0.81 ) }
    dend_29 { pt3dadd( -25.5025, 205.144, -7.43223, 0.66 ) }
    dend_29 { pt3dadd( -25.5099, 205.213, -7.42714, 0.66 ) }
    dend_29 { pt3dadd( -25.5678, 205.859, -7.40613, 0.44 ) }
    dend_29 { pt3dadd( -25.6474, 207.072, -7.40236, 0.37 ) }
    dend_29 { pt3dadd( -25.7101, 208.211, -7.41059, 0.37 ) }
    dend_29 { pt3dadd( -25.7114, 208.281, -7.41323, 0.37 ) }
    dend_29 { pt3dadd( -25.6864, 209.419, -7.49604, 1.62 ) }
    dend_29 { pt3dadd( -25.6397, 210.392, -7.59539, 2.65 ) }
    dend_29 { pt3dadd( -25.6016, 210.956, -7.66566, 2.65 ) }
    dend_29 { pt3dadd( -25.4956, 212.138, -7.83553, 1.92 ) }
    dend_29 { pt3dadd( -25.3586, 213.573, -8.05154, 0.74 ) }
    dend_29 { pt3dadd( -25.2591, 214.864, -8.24459, 0.37 ) }
    dend_29 { pt3dadd( -25.2286, 215.998, -8.39215, 0.37 ) }
    dend_29 { pt3dadd( -25.231, 216.067, -8.39994, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_29 { pt3dadd( -25.3143, 216.779, -8.47581, 0.37 ) }
    dend_29 { pt3dadd( -25.352, 216.953, -8.49102, 0.37 ) }
    dend_29 { pt3dadd( -25.6818, 217.932, -8.53215, 0.37 ) }
    dend_29 { pt3dadd( -26.1577, 219.098, -8.54901, 1.03 ) }
    dend_29 { pt3dadd( -26.5569, 220.038, -8.55232, 1.77 ) }
    dend_29 { pt3dadd( -26.7832, 220.589, -8.5511, 2.06 ) }
    dend_29 { pt3dadd( -27.0061, 221.141, -8.54563, 1.92 ) }
    dend_29 { pt3dadd( -27.3142, 221.956, -8.53475, 1.33 ) }
    dend_29 { pt3dadd( -27.5112, 222.533, -8.52631, 0.59 ) }
    dend_29 { pt3dadd( -27.8009, 223.513, -8.52413, 0.37 ) }
    dend_29 { pt3dadd( -27.9557, 224.114, -8.50434, 0.59 ) }
    dend_29 { pt3dadd( -28.0411, 224.531, -8.47387, 0.66 ) }
    dend_29 { pt3dadd( -28.083, 224.787, -8.44831, 0.66 ) }
    dend_29 { pt3dadd( -28.1708, 225.383, -8.38628, 0.37 ) }
    dend_29 { pt3dadd( -28.2602, 225.981, -8.32816, 0.37 ) }
    dend_29 { pt3dadd( -28.4508, 227.098, -8.2409, 0.37 ) }
    dend_29 { pt3dadd( -28.6539, 228.186, -8.17198, 0.37 ) }
    dend_29 { pt3dadd( -28.8539, 229.197, -8.11804, 0.59 ) }
    dend_29 { pt3dadd( -29.1608, 230.703, -8.04602, 0.52 ) }
    dend_29 { pt3dadd( -29.3517, 231.62, -8.006, 1.33 ) }
    dend_29 { pt3dadd( -29.528, 232.489, -7.98073, 2.14 ) }
    dend_29 { pt3dadd( -29.6914, 233.348, -7.98355, 2.36 ) }
    dend_29 { pt3dadd( -29.8087, 234.11, -7.99599, 2.58 ) }
    dend_29 { pt3dadd( -29.8718, 234.752, -7.99685, 2.36 ) }
    dend_29 { pt3dadd( -29.9277, 235.718, -7.98096, 1.62 ) }
    dend_29 { pt3dadd( -29.961, 236.669, -7.95871, 0.81 ) }
    dend_29 { pt3dadd( -29.99, 237.868, -7.92051, 0.52 ) }
    dend_29 { pt3dadd( -30.0307, 239.147, -7.86799, 0.52 ) }
    dend_29 { pt3dadd( -30.0685, 240.06, -7.82402, 0.44 ) }
    dend_29 { pt3dadd( -30.171, 241.763, -7.73491, 0.44 ) }
    dend_29 { pt3dadd( -30.3147, 243.446, -7.63718, 1.11 ) }
    dend_29 { pt3dadd( -30.4323, 244.381, -7.57582, 1.84 ) }
    dend_29 { pt3dadd( -30.5871, 245.294, -7.52066, 2.36 ) }
    dend_29 { pt3dadd( -30.6581, 245.618, -7.51102, 2.5 ) }
    dend_29 { pt3dadd( -30.8579, 246.365, -7.51553, 2.21 ) }
    dend_29 { pt3dadd( -31.0798, 247.091, -7.53614, 1.55 ) }
    dend_29 { pt3dadd( -31.3004, 247.748, -7.56443, 0.96 ) }
    dend_29 { pt3dadd( -31.5131, 248.373, -7.59659, 0.66 ) }
    dend_29 { pt3dadd( -31.8245, 249.356, -7.63403, 0.37 ) }
    dend_29 { pt3dadd( -32.0783, 250.238, -7.64095, 0.66 ) }
    dend_29 { pt3dadd( -32.2591, 250.914, -7.62854, 0.88 ) }
    dend_29 { pt3dadd( -32.5203, 252.003, -7.57627, 0.37 ) }
    dend_29 { pt3dadd( -32.6639, 252.677, -7.52562, 0.37 ) }
    dend_29 { pt3dadd( -32.8744, 253.771, -7.41539, 0.37 ) }
    dend_29 { pt3dadd( -33.0929, 255.121, -7.24224, 1.11 ) }
    dend_29 { pt3dadd( -33.1018, 255.19, -7.23173, 1.11 ) }
    dend_29 { pt3dadd( -33.1801, 256.132, -7.07251, 1.99 ) }
    dend_29 { pt3dadd( -33.2108, 256.833, -6.94692, 2.21 ) }
    dend_29 { pt3dadd( -33.2197, 257.338, -6.85662, 2.36 ) }
    dend_29 { pt3dadd( -33.2318, 258.513, -6.65567, 1.33 ) }
    dend_29 { pt3dadd( -33.2364, 259.328, -6.52133, 0.52 ) }
    dend_29 { pt3dadd( -33.2598, 260.548, -6.33963, 0.29 ) }
    dend_29 { pt3dadd( -33.2792, 261.056, -6.27174, 0.59 ) }
    dend_29 { pt3dadd( -33.3033, 261.482, -6.21957, 0.59 ) }
    dend_29 { pt3dadd( -33.3653, 262.329, -6.12093, 0.44 ) }
    dend_29 { pt3dadd( -33.4361, 263.103, -6.03416, 0.37 ) }
    dend_29 { pt3dadd( -33.5246, 263.955, -5.93397, 0.37 ) }
    dend_29 { pt3dadd( -33.6246, 264.911, -5.82245, 1.18 ) }
    dend_29 { pt3dadd( -33.6809, 265.615, -5.73929, 1.77 ) }
    dend_29 { pt3dadd( -33.7242, 266.38, -5.64471, 2.06 ) }
    dend_29 { pt3dadd( -33.7511, 267.067, -5.55799, 1.92 ) }
    dend_29 { pt3dadd( -33.7698, 267.74, -5.47424, 1.55 ) }
    dend_29 { pt3dadd( -33.8166, 268.788, -5.36392, 0.37 ) }
    dend_29 { pt3dadd( -33.8893, 269.933, -5.26645, 0.37 ) }
    dend_29 { pt3dadd( -33.8967, 270.017, -5.26319, 0.37 ) }
    dend_29 { pt3dadd( -33.9945, 270.874, -5.26187, 0.37 ) }
    dend_29 { pt3dadd( -34.0059, 270.958, -5.2636, 0.37 ) }
    dend_29 { pt3dadd( -34.2447, 272.566, -5.30377, 0.37 ) }
    dend_29 { pt3dadd( -34.2591, 272.65, -5.30622, 0.37 ) }
    dend_29 { pt3dadd( -34.5158, 274.145, -5.37204, 1.18 ) }
    dend_29 { pt3dadd( -34.673, 275.07, -5.41505, 1.62 ) }
    dend_29 { pt3dadd( -34.7535, 275.576, -5.43314, 1.84 ) }
    dend_29 { pt3dadd( -34.8765, 276.442, -5.44149, 1.55 ) }
    dend_29 { pt3dadd( -34.9655, 277.292, -5.43023, 1.11 ) }
    dend_29 { pt3dadd( -35.0426, 278.133, -5.40717, 0.52 ) }
    dend_29 { pt3dadd( -35.144, 279.409, -5.34913, 0.44 ) }
    dend_29 { pt3dadd( -35.2093, 280.4, -5.30006, 0.37 ) }
    dend_29 { pt3dadd( -35.2842, 281.656, -5.2306, 0.37 ) }
    dend_29 { pt3dadd( -35.3599, 283.334, -5.12874, 1.33 ) }
    dend_29 { pt3dadd( -35.3805, 283.843, -5.09455, 1.84 ) }
    dend_29 { pt3dadd( -35.3888, 284.023, -5.08094, 1.84 ) }
    dend_29 { pt3dadd( -35.4114, 284.534, -5.04114, 1.84 ) }
    dend_29 { pt3dadd( -35.4898, 285.671, -4.96124, 1.25 ) }
    dend_29 { pt3dadd( -35.5421, 286.352, -4.92235, 0.74 ) }
    dend_29 { pt3dadd( -35.6467, 287.461, -4.86726, 0.37 ) }
    dend_29 { pt3dadd( -35.7208, 288.266, -4.83063, 0.44 ) }
    dend_29 { pt3dadd( -35.7959, 289.153, -4.80043, 0.44 ) }
    dend_29 { pt3dadd( -35.9015, 290.428, -4.76989, 0.44 ) }
    dend_29 { pt3dadd( -35.9904, 291.487, -4.7554, 1.03 ) }
    dend_29 { pt3dadd( -36.0791, 292.434, -4.74965, 1.18 ) }
    dend_29 { pt3dadd( -36.1437, 293.244, -4.75601, 0.74 ) }
    dend_29 { pt3dadd( -36.1921, 293.845, -4.76862, 0.74 ) }
    dend_29 { pt3dadd( -36.2734, 294.779, -4.79522, 0.59 ) }
    dend_29 { pt3dadd( -36.2817, 294.863, -4.79752, 0.59 ) }
    dend_29 { pt3dadd( -36.3655, 295.546, -4.80679, 0.59 ) }
    dend_29 { pt3dadd( -36.5157, 296.908, -4.83371, 1.47 ) }
    dend_29 { pt3dadd( -36.6045, 297.758, -4.84346, 2.21 ) }
    dend_29 { pt3dadd( -36.6739, 298.443, -4.84303, 2.5 ) }
    dend_29 { pt3dadd( -36.7234, 299.036, -4.83219, 2.65 ) }
    dend_29 { pt3dadd( -36.8017, 300.163, -4.78034, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_29 { pt3dadd( -36.8619, 301.309, -4.68936, 0.74 ) }
    dend_29 { pt3dadd( -36.9034, 302.643, -4.55282, 0.52 ) }
    dend_29 { pt3dadd( -36.9035, 302.737, -4.54288, 0.52 ) }
    dend_29 { pt3dadd( -36.8764, 303.827, -4.4178, 0.52 ) }
    dend_29 { pt3dadd( -36.8015, 305.28, -4.24198, 1.33 ) }
    dend_29 { pt3dadd( -36.731, 306.303, -4.11158, 1.4 ) }
    dend_29 { pt3dadd( -36.6459, 307.384, -3.96736, 1.18 ) }
    dend_29 { pt3dadd( -36.5779, 308.221, -3.8764, 0.52 ) }
    dend_29 { pt3dadd( -36.5661, 308.388, -3.86416, 0.52 ) }
    dend_29 { pt3dadd( -36.5077, 309.37, -3.82387, 0.52 ) }
    dend_29 { pt3dadd( -36.4724, 310.181, -3.80826, 0.52 ) }
    dend_29 { pt3dadd( -36.4436, 311.653, -3.79111, 0.74 ) }
    dend_29 { pt3dadd( -36.46, 312.94, -3.76939, 0.96 ) }
    dend_29 { pt3dadd( -36.5008, 314.284, -3.74931, 1.99 ) }
    dend_29 { pt3dadd( -36.5202, 314.727, -3.74205, 2.58 ) }
    dend_29 { pt3dadd( -36.5513, 315.346, -3.7211, 2.36 ) }
    dend_29 { pt3dadd( -36.5857, 316.045, -3.68355, 2.14 ) }
    dend_29 { pt3dadd( -36.6315, 317.067, -3.59506, 1.03 ) }
    dend_29 { pt3dadd( -36.6602, 318.16, -3.46404, 0.52 ) }
    dend_29 { pt3dadd( -36.6759, 319.413, -3.29751, 0.52 ) }
    dend_29 { pt3dadd( -36.7009, 320.729, -3.11458, 0.52 ) }
    dend_29 { pt3dadd( -36.7204, 321.434, -3.01404, 0.88 ) }
    dend_29 { pt3dadd( -36.7443, 322.109, -2.91425, 0.52 ) }
    dend_29 { pt3dadd( -36.798, 323.208, -2.748, 0.52 ) }
    dend_29 { pt3dadd( -36.8628, 324.086, -2.61525, 0.52 ) }
    dend_29 { pt3dadd( -37.0027, 325.5, -2.42474, 1.4 ) }
    dend_29 { pt3dadd( -37.0957, 326.282, -2.33091, 1.77 ) }
    dend_29 { pt3dadd( -37.1664, 326.802, -2.27179, 1.92 ) }
    dend_29 { pt3dadd( -37.2396, 327.303, -2.21541, 1.62 ) }
    dend_29 { pt3dadd( -37.3722, 328.161, -2.11806, 1.11 ) }
    dend_29 { pt3dadd( -37.526, 329.181, -2.00213, 0.74 ) }
    dend_29 { pt3dadd( -37.7353, 330.669, -1.84565, 0.59 ) }
    dend_29 { pt3dadd( -37.9931, 332.45, -1.66363, 0.59 ) }
    dend_29 { pt3dadd( -38.1988, 333.846, -1.5236, 0.44 ) }
    dend_29 { pt3dadd( -38.2853, 334.441, -1.46257, 0.66 ) }
    dend_29 { pt3dadd( -38.2973, 334.524, -1.45381, 0.66 ) }
    dend_29 { pt3dadd( -38.4902, 335.878, -1.30839, 1.33 ) }
    dend_29 { pt3dadd( -38.6483, 336.977, -1.19016, 2.21 ) }
    dend_29 { pt3dadd( -38.7772, 337.823, -1.08556, 2.73 ) }
    dend_29 { pt3dadd( -38.9122, 338.617, -0.991925, 2.87 ) }
    dend_29 { pt3dadd( -38.9751, 338.986, -0.95269, 3.09 ) }
    dend_29 { pt3dadd( -39.1108, 339.764, -0.886784, 2.36 ) }
    dend_29 { pt3dadd( -39.2795, 340.692, -0.828659, 1.25 ) }
    dend_29 { pt3dadd( -39.4054, 341.357, -0.804531, 0.66 ) }
    dend_29 { pt3dadd( -39.6657, 342.718, -0.807485, 0.37 ) }
    dend_29 { pt3dadd( -39.8727, 343.758, -0.845742, 0.66 ) }
    dend_29 { pt3dadd( -40.0228, 344.526, -0.886926, 0.52 ) }
    dend_29 { pt3dadd( -40.1002, 344.951, -0.913007, 0.66 ) }
    dend_29 { pt3dadd( -40.2386, 345.796, -0.963305, 0.74 ) }
    dend_29 { pt3dadd( -40.3643, 346.768, -1.02433, 0.81 ) }
    dend_29 { pt3dadd( -40.4578, 347.798, -1.08512, 1.25 ) }
    dend_29 { pt3dadd( -40.4946, 348.453, -1.11453, 1.69 ) }
    dend_29 { pt3dadd( -40.5052, 348.94, -1.12934, 1.69 ) }
    dend_29 { pt3dadd( -40.5027, 349.896, -1.14431, 1.4 ) }
    dend_29 { pt3dadd( -40.4796, 350.945, -1.14854, 1.11 ) }
    dend_29 { pt3dadd( -40.4553, 351.795, -1.12992, 0.74 ) }
    dend_29 { pt3dadd( -40.4256, 353.058, -1.09185, 0.59 ) }
    dend_29 { pt3dadd( -40.4248, 353.152, -1.08917, 0.59 ) }
    dend_29 { pt3dadd( -40.4411, 354.108, -1.05945, 0.59 ) }
    dend_29 { pt3dadd( -40.4447, 354.19, -1.05543, 0.59 ) }
    dend_29 { pt3dadd( -40.5896, 355.805, -0.940432, 0.59 ) }
    dend_29 { pt3dadd( -40.725, 356.818, -0.865722, 1.11 ) }
    dend_29 { pt3dadd( -40.7381, 356.898, -0.862078, 1.11 ) }
    dend_29 { pt3dadd( -40.8746, 357.645, -0.839816, 1.77 ) }
    dend_29 { pt3dadd( -41.0117, 358.344, -0.832213, 2.06 ) }
    dend_29 { pt3dadd( -41.1289, 358.927, -0.836351, 2.06 ) }
    dend_29 { pt3dadd( -41.291, 359.68, -0.857129, 1.77 ) }
    dend_29 { pt3dadd( -41.4012, 360.196, -0.869908, 1.4 ) }
    dend_29 { pt3dadd( -41.5238, 360.791, -0.880741, 0.81 ) }
    dend_29 { pt3dadd( -41.7983, 362.137, -0.909133, 0.59 ) }
    dend_29 { pt3dadd( -42.068, 363.498, -0.932858, 0.59 ) }
    dend_29 { pt3dadd( -42.218, 364.339, -0.945328, 0.96 ) }
    dend_29 { pt3dadd( -42.3213, 364.926, -0.957348, 0.96 ) }
    dend_29 { pt3dadd( -42.3537, 365.107, -0.9611, 0.96 ) }
    dend_29 { pt3dadd( -42.4335, 365.566, -0.972258, 0.81 ) }
    dend_29 { pt3dadd( -42.5694, 366.368, -0.988332, 0.81 ) }
    dend_29 { pt3dadd( -42.7798, 367.668, -1.00412, 0.37 ) }
    dend_29 { pt3dadd( -42.9771, 368.943, -1.01199, 0.37 ) }
    dend_29 { pt3dadd( -43.1685, 370.13, -0.992418, 0.37 ) }
    dend_29 { pt3dadd( -43.3079, 370.956, -0.962628, 1.25 ) }
    dend_29 { pt3dadd( -43.4564, 371.803, -0.900075, 1.77 ) }
    dend_29 { pt3dadd( -43.5882, 372.499, -0.824633, 2.28 ) }
    dend_29 { pt3dadd( -43.7156, 373.158, -0.720915, 2.58 ) }
    dend_29 { pt3dadd( -43.8697, 373.991, -0.563513, 2.36 ) }
    dend_29 { pt3dadd( -44.0103, 374.723, -0.417231, 1.92 ) }
    dend_29 { pt3dadd( -44.1847, 375.626, -0.235344, 0.96 ) }
    dend_29 { pt3dadd( -44.3422, 376.47, -0.0720366, 0.37 ) }
    dend_29 { pt3dadd( -44.562, 377.673, 0.136758, 0.37 ) }
    dend_29 { pt3dadd( -44.7061, 378.527, 0.254637, 0.74 ) }
    dend_29 { pt3dadd( -44.784, 379.032, 0.303864, 0.74 ) }
    dend_29 { pt3dadd( -44.8948, 379.769, 0.355895, 0.74 ) }
    dend_29 { pt3dadd( -44.9929, 380.537, 0.373288, 0.37 ) }
    dend_29 { pt3dadd( -45.0742, 381.388, 0.354179, 0.29 ) }
    dend_29 { pt3dadd( -45.1162, 382.048, 0.311266, 0.29 ) }
    dend_29 { pt3dadd( -45.1191, 382.13, 0.303575, 0.29 ) }
    dend_29 { pt3dadd( -45.1261, 383.765, 0.110619, 0.29 ) }
    dend_29 { pt3dadd( -45.0978, 384.618, -1.09941E-4, 0.74 ) }
    dend_29 { pt3dadd( -45.0258, 385.921, -0.161453, 1.84 ) }
    dend_29 { pt3dadd( -44.9975, 386.403, -0.213135, 2.28 ) }
    dend_29 { pt3dadd( -44.9951, 386.473, -0.218952, 2.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_29 { pt3dadd( -44.9835, 387.242, -0.270738, 2.06 ) }
    dend_29 { pt3dadd( -44.9947, 388.295, -0.319506, 1.25 ) }
    dend_29 { pt3dadd( -45.0708, 389.51, -0.335418, 0.15 ) }
    dend_29 { pt3dadd( -45.1399, 390.198, -0.323239, 0.15 ) }
    dend_29 { pt3dadd( -45.2733, 391.233, -0.28917, 0.74 ) }
    dend_29 { pt3dadd( -45.3373, 391.648, -0.270556, 1.03 ) }
    dend_29 { pt3dadd( -45.4302, 392.164, -0.242573, 1.03 ) }
    dend_29 { pt3dadd( -45.5438, 392.737, -0.212198, 0.74 ) }
    dend_29 { pt3dadd( -45.6757, 393.55, -0.194568, 0.22 ) }
    dend_29 { pt3dadd( -45.8105, 394.564, -0.188893, 0.22 ) }
    dend_29 { pt3dadd( -46.0036, 396.279, -0.18838, 0.88 ) }
    dend_29 { pt3dadd( -46.0757, 396.965, -0.18745, 1.47 ) }
    dend_29 { pt3dadd( -46.1318, 397.557, -0.188546, 1.69 ) }
    dend_29 { pt3dadd( -46.2425, 398.839, -0.189414, 1.03 ) }
    dend_29 { pt3dadd( -46.3519, 400.145, -0.19099, 0.37 ) }
    dend_29 { pt3dadd( -46.4816, 401.889, -0.172401, 0.37 ) }
    dend_29 { pt3dadd( -46.5743, 403.437, -0.143333, 0.29 ) }
    dend_29 { pt3dadd( -46.6729, 405.023, -0.0979852, 1.4 ) }
    dend_29 { pt3dadd( -46.7182, 405.642, -0.0741062, 1.84 ) }
    dend_29 { pt3dadd( -46.7813, 406.327, -0.0375685, 1.69 ) }
    dend_29 { pt3dadd( -46.8627, 407.267, 0.00697126, 0.81 ) }
    dend_29 { pt3dadd( -46.9974, 408.846, 0.0785337, 0.29 ) }
    dend_29 { pt3dadd( -47.1207, 410.285, 0.148697, 0.29 ) }
    dend_29 { pt3dadd( -47.1917, 411.041, 0.194967, 0.96 ) }
    dend_29 { pt3dadd( -47.262, 411.737, 0.241159, 1.33 ) }
    dend_29 { pt3dadd( -47.3318, 412.387, 0.293581, 1.33 ) }
    dend_29 { pt3dadd( -47.3925, 412.962, 0.343651, 1.03 ) }
    dend_29 { pt3dadd( -47.3997, 413.035, 0.351451, 1.03 ) }
    dend_29 { pt3dadd( -47.5007, 414.356, 0.504, 0.29 ) }
    dend_29 { pt3dadd( -47.5791, 415.557, 0.647284, 0.29 ) }
    dend_29 { pt3dadd( -47.6605, 417.069, 0.801309, 0.88 ) }
    dend_29 { pt3dadd( -47.7219, 418.172, 0.894247, 1.69 ) }
    dend_29 { pt3dadd( -47.7606, 418.802, 0.939615, 2.36 ) }
    dend_29 { pt3dadd( -47.7879, 419.15, 0.958907, 2.58 ) }
    dend_29 { pt3dadd( -47.8683, 420.037, 0.993414, 2.06 ) }
    dend_29 { pt3dadd( -48.0505, 421.816, 1.05913, 0.37 ) }
    dend_29 { pt3dadd( -48.1885, 422.994, 1.10035, 0.37 ) }
    dend_29 { pt3dadd( -48.3623, 424.277, 1.15046, 0.37 ) }
    dend_29 { pt3dadd( -48.505, 425.288, 1.19493, 0.37 ) }
    dend_29 { pt3dadd( -48.5169, 425.372, 1.19967, 0.37 ) }
    dend_29 { pt3dadd( -48.7877, 427.319, 1.35342, 0.37 ) }
    dend_29 { pt3dadd( -48.7969, 427.403, 1.36121, 0.37 ) }
    dend_29 { pt3dadd( -48.8747, 428.509, 1.46834, 0.37 ) }
    dend_29 { pt3dadd( -48.9122, 429.383, 1.55279, 0.96 ) }
    dend_29 { pt3dadd( -48.9398, 430.381, 1.64713, 1.25 ) }
    dend_29 { pt3dadd( -48.9602, 431.397, 1.74037, 0.88 ) }
    dend_29 { pt3dadd( -48.9742, 433.047, 1.88853, 0.29 ) }
    dend_29 { pt3dadd( -48.9744, 433.172, 1.9007, 0.29 ) }
    dend_29 { pt3dadd( -48.95, 434.207, 1.99219, 0.88 ) }
    dend_29 { pt3dadd( -48.9237, 435.159, 2.07214, 1.62 ) }
    dend_29 { pt3dadd( -48.9108, 435.729, 2.12103, 1.99 ) }
    dend_29 { pt3dadd( -48.9013, 436.306, 2.17929, 1.99 ) }
    dend_29 { pt3dadd( -48.8943, 436.831, 2.2504, 1.69 ) }
    dend_29 { pt3dadd( -48.8475, 437.97, 2.40156, 0.59 ) }
    dend_29 { pt3dadd( -48.7588, 439.4, 2.59955, 0.29 ) }
    dend_29 { pt3dadd( -48.6959, 440.271, 2.70511, 0.81 ) }
    dend_29 { pt3dadd( -48.6413, 441.033, 2.78988, 0.81 ) }
    dend_29 { pt3dadd( -48.5714, 442.099, 2.90087, 0.29 ) }
    dend_29 { pt3dadd( -48.5125, 443.237, 3.01343, 0.29 ) }
    dend_29 { pt3dadd( -48.4155, 444.968, 3.14167, 0.29 ) }
    dend_29 { pt3dadd( -48.3058, 446.687, 3.20879, 1.25 ) }
    dend_29 { pt3dadd( -48.2655, 447.34, 3.2235, 1.69 ) }
    dend_29 { pt3dadd( -48.2355, 447.861, 3.23112, 1.92 ) }
    dend_29 { pt3dadd( -48.19, 448.786, 3.24285, 1.47 ) }
    dend_29 { pt3dadd( -48.1162, 450.405, 3.29375, 0.29 ) }
    dend_29 { pt3dadd( -48.055, 451.371, 3.33883, 0.29 ) }
    dend_29 { pt3dadd( -47.958, 452.657, 3.43911, 0.88 ) }
    dend_29 { pt3dadd( -47.9058, 453.274, 3.50118, 1.18 ) }
    dend_29 { pt3dadd( -47.8487, 453.886, 3.58008, 0.96 ) }
    dend_29 { pt3dadd( -47.772, 454.741, 3.72122, 0.44 ) }
    dend_29 { pt3dadd( -47.7134, 455.837, 3.94788, 0.29 ) }
    dend_29 { pt3dadd( -47.7052, 455.955, 3.96815, 0.29 ) }
    dend_29 { pt3dadd( -47.654, 456.954, 4.08453, 0.29 ) }
    dend_29 { pt3dadd( -47.6521, 457.039, 4.0912, 0.29 ) }
    dend_29 { pt3dadd( -47.6451, 457.647, 4.12133, 0.81 ) }
    dend_29 { pt3dadd( -47.6468, 458.159, 4.13963, 0.81 ) }
    dend_29 { pt3dadd( -47.646, 459.079, 4.18263, 0.66 ) }
    dend_29 { pt3dadd( -47.6318, 460.371, 4.26161, 0.29 ) }
    dend_29 { pt3dadd( -47.6069, 461.429, 4.35456, 0.29 ) }
    dend_29 { pt3dadd( -47.5686, 462.47, 4.45571, 1.11 ) }
    dend_29 { pt3dadd( -47.5365, 463.391, 4.55189, 1.69 ) }
    dend_29 { pt3dadd( -47.5234, 464.036, 4.61402, 1.92 ) }
    dend_29 { pt3dadd( -47.5248, 464.602, 4.66648, 1.92 ) }
    dend_29 { pt3dadd( -47.5516, 466.029, 4.76775, 0.74 ) }
    dend_29 { pt3dadd( -47.5988, 467.155, 4.82598, 0.37 ) }
    dend_29 { pt3dadd( -47.6862, 468.425, 4.87347, 0.37 ) }
    dend_29 { pt3dadd( -47.8101, 469.909, 4.90158, 0.29 ) }
    dend_29 { pt3dadd( -47.8899, 470.78, 4.90404, 0.29 ) }
    dend_29 { pt3dadd( -47.9563, 471.55, 4.90068, 0.88 ) }
    dend_29 { pt3dadd( -47.9965, 472.05, 4.90019, 0.88 ) }
    dend_29 { pt3dadd( -48.0394, 472.682, 4.91983, 0.52 ) }
    dend_29 { pt3dadd( -48.0699, 473.416, 4.95923, 0.29 ) }
    dend_29 { pt3dadd( -48.0935, 474.19, 5.01508, 0.29 ) }
    dend_29 { pt3dadd( -48.1361, 475.204, 5.08139, 0.29 ) }
    dend_29 { pt3dadd( -48.1956, 476.159, 5.13806, 1.55 ) }
    dend_29 { pt3dadd( -48.2782, 477.285, 5.21534, 2.58 ) }
    dend_29 { pt3dadd( -48.3245, 477.82, 5.26091, 2.65 ) }
    dend_29 { pt3dadd( -48.4012, 478.667, 5.35611, 2.21 ) }
    dend_29 { pt3dadd( -48.4869, 479.771, 5.49788, 1.11 ) }
    dend_29 { pt3dadd( -48.5502, 480.78, 5.63668, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_29 { pt3dadd( -48.6088, 482.005, 5.80992, 0.52 ) }
    dend_29 { pt3dadd( -48.6423, 483.255, 6.00154, 0.74 ) }
    dend_29 { pt3dadd( -48.6515, 484.438, 6.19701, 0.88 ) }
    dend_29 { pt3dadd( -48.6268, 485.583, 6.41101, 1.33 ) }
    dend_29 { pt3dadd( -48.6219, 485.651, 6.42506, 1.33 ) }
    dend_29 { pt3dadd( -48.5464, 486.312, 6.57132, 1.62 ) }
    dend_29 { pt3dadd( -48.4792, 486.775, 6.67973, 1.62 ) }
    dend_29 { pt3dadd( -48.4633, 486.864, 6.70353, 1.62 ) }
    dend_29 { pt3dadd( -48.4245, 487.086, 6.76719, 1.62 ) }
    dend_29 { pt3dadd( -48.2016, 488.394, 7.17277, 0.52 ) }
    dend_29 { pt3dadd( -48.0399, 489.397, 7.48134, 0.29 ) }
    dend_29 { pt3dadd( -47.8937, 490.301, 7.75875, 0.29 ) }
    dend_29 { pt3dadd( -47.7965, 491.211, 8.05517, 0.96 ) }
    dend_29 { pt3dadd( -47.7766, 491.808, 8.2616, 1.4 ) }
    dend_29 { pt3dadd( -47.7811, 491.886, 8.28825, 1.4 ) }
    dend_29 { pt3dadd( -47.8568, 492.38, 8.44968, 1.4 ) }
    dend_29 { pt3dadd( -47.8779, 492.474, 8.47969, 1.4 ) }
    dend_29 { pt3dadd( -48.1998, 493.668, 8.84612, 1.03 ) }
    dend_29 { pt3dadd( -48.5129, 494.756, 9.16512, 0.44 ) }
    dend_29 { pt3dadd( -48.8959, 496.123, 9.55212, 0.29 ) }
    dend_29 { pt3dadd( -49.18, 497.081, 9.83447, 0.29 ) }
    dend_29 { pt3dadd( -49.53, 498.267, 10.1803, 1.33 ) }
    dend_29 { pt3dadd( -49.7126, 498.895, 10.3569, 1.84 ) }
    dend_29 { pt3dadd( -49.8919, 499.54, 10.5242, 1.84 ) }
    dend_29 { pt3dadd( -50.0948, 500.265, 10.7078, 1.25 ) }
    dend_29 { pt3dadd( -50.4785, 501.633, 11.0323, 0.37 ) }
    dend_29 { pt3dadd( -50.889, 503.153, 11.3346, 0.29 ) }
    dend_29 { pt3dadd( -50.91, 503.23, 11.3473, 0.29 ) }
    dend_29 { pt3dadd( -51.159, 504.132, 11.4771, 0.44 ) }
    dend_29 { pt3dadd( -51.4799, 505.289, 11.6194, 0.52 ) }
    dend_29 { pt3dadd( -51.7961, 506.427, 11.7272, 0.44 ) }
    dend_29 { pt3dadd( -52.1728, 507.919, 11.8144, 0.44 ) }
    dend_29 { pt3dadd( -52.5762, 509.537, 11.8914, 1.11 ) }
    dend_29 { pt3dadd( -52.7985, 510.46, 11.9315, 1.69 ) }
    dend_29 { pt3dadd( -52.9378, 511.063, 11.9547, 1.84 ) }
    dend_29 { pt3dadd( -53.0764, 511.713, 11.9798, 1.84 ) }
    dend_29 { pt3dadd( -53.3247, 512.976, 12.0252, 0.66 ) }
    dend_29 { pt3dadd( -53.5652, 514.321, 12.0663, 0.37 ) }
    dend_29 { pt3dadd( -53.5917, 514.486, 12.0702, 0.37 ) }
    dend_29 { pt3dadd( -53.8501, 516.103, 12.1195, 0.37 ) }
    dend_29 { pt3dadd( -54.0455, 517.392, 12.1828, 0.96 ) }
    dend_29 { pt3dadd( -54.0673, 517.56, 12.1952, 0.96 ) }
    dend_29 { pt3dadd( -54.1595, 518.417, 12.2833, 1.55 ) }
    dend_29 { pt3dadd( -54.2052, 519.191, 12.3849, 1.84 ) }
    dend_29 { pt3dadd( -54.2073, 519.272, 12.3971, 1.84 ) }
    dend_29 { pt3dadd( -54.2084, 519.984, 12.5125, 1.69 ) }
    dend_29 { pt3dadd( -54.2034, 521.009, 12.6799, 0.74 ) }
    dend_29 { pt3dadd( -54.2305, 522.095, 12.8784, 0.29 ) }
    dend_29 { pt3dadd( -54.3004, 523.301, 13.1107, 0.29 ) }
    dend_29 { pt3dadd( -54.3088, 523.384, 13.1262, 0.29 ) }
    dend_29 { pt3dadd( -54.4718, 524.553, 13.3392, 0.29 ) }
    dend_29 { pt3dadd( -54.487, 524.632, 13.3531, 0.29 ) }
    dend_29 { pt3dadd( -54.762, 525.794, 13.5619, 0.81 ) }
    dend_29 { pt3dadd( -54.9553, 526.518, 13.6872, 1.47 ) }
    dend_29 { pt3dadd( -55.1142, 527.096, 13.7774, 1.77 ) }
    dend_29 { pt3dadd( -55.1469, 527.224, 13.793, 1.77 ) }
    dend_29 { pt3dadd( -55.2942, 527.882, 13.8593, 1.55 ) }
    dend_29 { pt3dadd( -55.3274, 528.045, 13.8721, 1.55 ) }
    dend_29 { pt3dadd( -55.4685, 528.824, 13.9123, 0.96 ) }
    dend_29 { pt3dadd( -55.6079, 529.685, 13.9717, 0.59 ) }
    dend_29 { pt3dadd( -55.8664, 531.275, 14.1227, 0.29 ) }
    dend_29 { pt3dadd( -56.0379, 532.324, 14.2404, 0.29 ) }
    dend_29 { pt3dadd( -56.0514, 532.407, 14.2509, 0.29 ) }
    dend_29 { pt3dadd( -56.2565, 533.674, 14.4285, 0.59 ) }
    dend_29 { pt3dadd( -56.3896, 534.508, 14.5597, 0.81 ) }
    dend_29 { pt3dadd( -56.5461, 535.579, 14.7508, 1.25 ) }
    dend_29 { pt3dadd( -56.6146, 536.104, 14.8546, 1.62 ) }
    dend_29 { pt3dadd( -56.6685, 536.519, 14.9307, 1.69 ) }
    dend_29 { pt3dadd( -56.6894, 536.699, 14.9622, 1.69 ) }
    dend_29 { pt3dadd( -56.7557, 537.308, 15.0597, 1.25 ) }
    dend_29 { pt3dadd( -56.8737, 538.295, 15.209, 0.66 ) }
    dend_29 { pt3dadd( -56.9953, 539.315, 15.3585, 0.66 ) }
    dend_29 { pt3dadd( -57.1442, 540.504, 15.5381, 0.66 ) }
    dend_29 { pt3dadd( -57.3323, 541.942, 15.7571, 0.37 ) }
    dend_29 { pt3dadd( -57.4777, 542.958, 15.9059, 0.37 ) }
    dend_29 { pt3dadd( -57.6554, 544.179, 16.0873, 1.62 ) }
    dend_29 { pt3dadd( -57.7505, 544.854, 16.1924, 2.06 ) }
    dend_29 { pt3dadd( -57.8098, 545.311, 16.2674, 2.06 ) }
    dend_29 { pt3dadd( -57.9356, 546.327, 16.4354, 1.47 ) }
    dend_29 { pt3dadd( -58.052, 547.329, 16.6003, 0.81 ) }
    dend_29 { pt3dadd( -58.1571, 548.46, 16.7891, 0.37 ) }
    dend_29 { pt3dadd( -58.2474, 549.818, 17.013, 0.88 ) }
    dend_29 { pt3dadd( -58.2514, 549.899, 17.0275, 0.88 ) }
    dend_29 { pt3dadd( -58.2716, 550.481, 17.136, 0.88 ) }
    dend_29 { pt3dadd( -58.273, 550.553, 17.1501, 0.88 ) }
    dend_29 { pt3dadd( -58.2881, 551.268, 17.2787, 1.11 ) }
    dend_29 { pt3dadd( -58.2928, 551.472, 17.3108, 1.11 ) }
    dend_29 { pt3dadd( -58.3247, 551.881, 17.3868, 1.11 ) }
    dend_29 { pt3dadd( -58.333, 551.963, 17.404, 1.11 ) }
    dend_29 { pt3dadd( -58.4111, 552.63, 17.5554, 0.81 ) }
    dend_29 { pt3dadd( -58.5445, 553.635, 17.7932, 0.66 ) }
    dend_29 { pt3dadd( -58.6769, 554.571, 18.0237, 0.44 ) }
    dend_29 { pt3dadd( -58.8586, 555.854, 18.3485, 0.29 ) }
    dend_29 { pt3dadd( -58.8756, 555.979, 18.3812, 0.29 ) }
    dend_29 { pt3dadd( -58.9542, 556.643, 18.5661, 0.29 ) }
    dend_29 { pt3dadd( -58.9658, 556.764, 18.6011, 0.29 ) }
    dend_29 { pt3dadd( -59.0519, 557.732, 18.8461, 0.81 ) }
    dend_29 { pt3dadd( -59.0611, 557.837, 18.8676, 0.81 ) }
    dend_29 { pt3dadd( -59.1257, 558.478, 18.9945, 0.81 ) }
    dend_29 { pt3dadd( -59.1567, 558.723, 19.045, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_29 { pt3dadd( -59.3303, 560.002, 19.321, 0.59 ) }
    dend_29 { pt3dadd( -59.561, 561.572, 19.6604, 0.88 ) }
    dend_29 { pt3dadd( -59.5866, 561.734, 19.6937, 0.88 ) }
    dend_29 { pt3dadd( -59.8608, 563.132, 20.0117, 1.62 ) }
    dend_29 { pt3dadd( -59.9961, 563.732, 20.1539, 1.77 ) }
    dend_29 { pt3dadd( -60.2162, 564.65, 20.3793, 1.4 ) }
    dend_29 { pt3dadd( -60.4436, 565.551, 20.6083, 0.88 ) }
    dend_29 { pt3dadd( -60.8453, 567.098, 20.9973, 0.52 ) }
    dend_29 { pt3dadd( -61.1912, 568.425, 21.2962, 0.74 ) }
    dend_29 { pt3dadd( -61.4107, 569.25, 21.4443, 1.33 ) }
    dend_29 { pt3dadd( -61.6663, 570.116, 21.5765, 1.84 ) }
    dend_29 { pt3dadd( -61.8093, 570.59, 21.6389, 1.99 ) }
    dend_29 { pt3dadd( -62.0018, 571.258, 21.7179, 1.99 ) }
    dend_29 { pt3dadd( -62.2344, 572.14, 21.81, 1.18 ) }
    dend_29 { pt3dadd( -62.5127, 573.319, 21.9114, 0.52 ) }
    dend_29 { pt3dadd( -62.9142, 575.082, 22.0806, 0.44 ) }
    dend_29 { pt3dadd( -63.2069, 576.407, 22.2142, 1.03 ) }
    dend_29 { pt3dadd( -63.4147, 577.431, 22.3287, 1.25 ) }
    dend_29 { pt3dadd( -63.5303, 578.14, 22.4255, 1.55 ) }
    dend_29 { pt3dadd( -63.541, 578.223, 22.4384, 1.55 ) }
    dend_29 { pt3dadd( -63.6209, 579.019, 22.5693, 1.55 ) }
    dend_29 { pt3dadd( -63.7097, 580.036, 22.7258, 1.25 ) }
    dend_29 { pt3dadd( -63.8231, 581.151, 22.8829, 0.74 ) }
    dend_29 { pt3dadd( -64.0486, 583.224, 23.1618, 0.29 ) }
    dend_29 { pt3dadd( -64.0579, 583.304, 23.1721, 0.29 ) }
    dend_29 { pt3dadd( -64.2847, 585.177, 23.4027, 0.29 ) }
    dend_29 { pt3dadd( -64.4886, 586.704, 23.5737, 0.29 ) }
    dend_29 { pt3dadd( -64.704, 588.143, 23.7135, 1.47 ) }
    dend_29 { pt3dadd( -64.8524, 589.032, 23.7858, 2.06 ) }
    dend_29 { pt3dadd( -64.9634, 589.615, 23.8208, 2.36 ) }
    dend_29 { pt3dadd( -65.1635, 590.643, 23.8787, 2.06 ) }
    dend_29 { pt3dadd( -65.5087, 592.388, 23.9716, 0.81 ) }
    dend_29 { pt3dadd( -65.862, 593.982, 24.0707, 0.81 ) }
    dend_29 { pt3dadd( -66.1074, 595.001, 24.1437, 0.52 ) }
    dend_29 { pt3dadd( -66.4208, 596.229, 24.2457, 0.81 ) }
    dend_29 { pt3dadd( -66.7307, 597.408, 24.3632, 1.03 ) }
    dend_29 { pt3dadd( -66.7519, 597.487, 24.3731, 1.03 ) }
    dend_29 { pt3dadd( -67.0258, 598.551, 24.5475, 1.03 ) }
    dend_29 { pt3dadd( -67.0755, 598.747, 24.591, 1.03 ) }
    dend_29 { pt3dadd( -67.3361, 599.833, 24.8638, 0.88 ) }
    dend_29 { pt3dadd( -67.3626, 599.958, 24.8983, 0.88 ) }
    dend_29 { pt3dadd( -67.5781, 601.112, 25.2165, 0.74 ) }
    dend_29 { pt3dadd( -67.7737, 602.403, 25.5673, 0.37 ) }
    dend_29 { pt3dadd( -67.9673, 604.068, 26.0011, 1.18 ) }
    dend_29 { pt3dadd( -68.0942, 605.187, 26.2799, 1.92 ) }
    dend_29 { pt3dadd( -68.1706, 605.858, 26.436, 1.92 ) }
    dend_29 { pt3dadd( -68.2586, 606.635, 26.6041, 1.62 ) }
    dend_29 { pt3dadd( -68.3963, 607.862, 26.8423, 0.96 ) }
    dend_29 { pt3dadd( -68.5271, 609.062, 27.048, 0.74 ) }
    dend_29 { pt3dadd( -68.6672, 610.51, 27.2473, 0.74 ) }
    dend_29 { pt3dadd( -68.8087, 611.79, 27.3982, 0.74 ) }
    dend_29 { pt3dadd( -68.8281, 611.954, 27.4157, 0.74 ) }
    dend_29 { pt3dadd( -68.9871, 613.211, 27.5344, 0.74 ) }
    dend_29 { pt3dadd( -69.0118, 613.407, 27.5501, 0.74 ) }
    dend_29 { pt3dadd( -69.1745, 614.803, 27.6563, 0.74 ) }
    dend_29 { pt3dadd( -69.3411, 616.345, 27.7722, 0.96 ) }
    dend_29 { pt3dadd( -69.3763, 616.695, 27.7992, 0.96 ) }
    dend_29 { pt3dadd( -69.5218, 618.144, 27.9162, 0.96 ) }
    dend_29 { pt3dadd( -69.618, 619.039, 27.9893, 1.47 ) }
    dend_29 { pt3dadd( -69.6487, 619.298, 28.0105, 1.47 ) }
    dend_29 { pt3dadd( -69.81, 620.518, 28.1138, 1.69 ) }
    dend_29 { pt3dadd( -69.8265, 620.633, 28.1233, 1.69 ) }
    dend_29 { pt3dadd( -69.9288, 621.409, 28.1778, 1.69 ) }
    dend_29 { pt3dadd( -70.0781, 622.774, 28.2873, 1.11 ) }
    dend_29 { pt3dadd( -70.1289, 623.389, 28.335, 1.03 ) }
    dend_29 { pt3dadd( -70.1678, 623.978, 28.3782, 1.03 ) }
    dend_29 { pt3dadd( -70.2442, 625.339, 28.4727, 0.59 ) }
    dend_29 { pt3dadd( -70.3416, 627.276, 28.6071, 0.44 ) }
    dend_29 { pt3dadd( -70.4279, 629.355, 28.7509, 0.44 ) }
    dend_29 { pt3dadd( -70.4653, 630.622, 28.8518, 1.11 ) }
    dend_29 { pt3dadd( -70.4751, 631.808, 28.9558, 1.69 ) }
    dend_29 { pt3dadd( -70.4624, 632.666, 29.0504, 1.99 ) }
    dend_29 { pt3dadd( -70.4344, 633.561, 29.1658, 1.62 ) }
    dend_29 { pt3dadd( -70.4315, 633.645, 29.1786, 1.62 ) }
    dend_29 { pt3dadd( -70.3827, 634.963, 29.3959, 0.88 ) }
    dend_29 { pt3dadd( -70.3178, 636.723, 29.6888, 0.74 ) }
    dend_29 { pt3dadd( -70.2197, 638.927, 30.0465, 0.74 ) }
    dend_29 { pt3dadd( -70.216, 639.009, 30.0596, 0.74 ) }
    dend_29 { pt3dadd( -70.1512, 640.38, 30.2728, 0.74 ) }
    dend_29 { pt3dadd( -70.1075, 642.105, 30.5798, 0.88 ) }
    dend_29 { pt3dadd( -70.1164, 643.904, 30.9284, 0.66 ) }
    dend_29 { pt3dadd( -70.12, 643.998, 30.9485, 0.66 ) }
    dend_29 { pt3dadd( -70.2119, 645.559, 31.2931, 0.66 ) }
    dend_29 { pt3dadd( -70.3011, 646.785, 31.5773, 0.66 ) }
    dend_29 { pt3dadd( -70.4771, 648.466, 31.9723, 1.25 ) }
    dend_29 { pt3dadd( -70.5888, 649.214, 32.1444, 1.99 ) }
    dend_29 { pt3dadd( -70.6871, 649.707, 32.2489, 1.99 ) }
    dend_29 { pt3dadd( -70.8749, 650.549, 32.393, 1.55 ) }
    dend_29 { pt3dadd( -70.9189, 650.718, 32.4134, 1.55 ) }
    dend_29 { pt3dadd( -71.2091, 651.784, 32.4862, 1.33 ) }
    dend_29 { pt3dadd( -71.4795, 652.953, 32.5003, 1.18 ) }
    dend_29 { pt3dadd( -71.6831, 653.97, 32.5257, 0.96 ) }
    dend_29 { pt3dadd( -71.8429, 654.827, 32.5942, 0.96 ) }
    dend_29 { pt3dadd( -71.8706, 655.001, 32.618, 0.96 ) }
    dend_29 { pt3dadd( -72.0067, 655.995, 32.7943, 0.66 ) }
    dend_29 { pt3dadd( -72.1311, 657.172, 33.0586, 0.52 ) }
    dend_29 { pt3dadd( -72.2232, 658.23, 33.3292, 0.52 ) }
    dend_29 { pt3dadd( -72.3397, 659.761, 33.7548, 0.81 ) }
    dend_29 { pt3dadd( -72.4182, 661.04, 34.1355, 1.33 ) }
    dend_29 { pt3dadd( -72.4275, 661.21, 34.1897, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_29 { pt3dadd( -72.455, 662.181, 34.4982, 1.77 ) }
    dend_29 { pt3dadd( -72.4609, 662.785, 34.6833, 2.28 ) }
    dend_29 { pt3dadd( -72.4574, 662.866, 34.7016, 2.28 ) }
    dend_29 { pt3dadd( -72.3913, 663.664, 34.7893, 2.28 ) }
    dend_29 { pt3dadd( -72.3472, 664.187, 34.8233, 2.28 ) }
    dend_29 { pt3dadd( -72.2631, 665.278, 34.8715, 1.92 ) }
    dend_29 { pt3dadd( -72.257, 665.36, 34.8736, 1.92 ) }
    dend_29 { pt3dadd( -72.1411, 667.118, 34.9055, 0.81 ) }
    dend_29 { pt3dadd( -72.1175, 668.867, 35.0072, 0.81 ) }
    dend_29 { pt3dadd( -72.1227, 669.048, 35.0226, 0.81 ) }
    dend_29 { pt3dadd( -72.1998, 670.091, 35.1457, 0.66 ) }
    dend_29 { pt3dadd( -72.2121, 670.185, 35.1612, 0.66 ) }
    dend_29 { pt3dadd( -72.4222, 671.395, 35.3883, 0.66 ) }
    dend_29 { pt3dadd( -72.7971, 672.967, 35.7522, 0.66 ) }
    dend_29 { pt3dadd( -72.8411, 673.121, 35.7899, 0.66 ) }
    dend_29 { pt3dadd( -73.1463, 674.007, 36.013, 1.18 ) }
    dend_29 { pt3dadd( -73.2015, 674.148, 36.0465, 1.18 ) }
    dend_29 { pt3dadd( -73.505, 674.944, 36.2092, 1.4 ) }
    dend_29 { pt3dadd( -73.5904, 675.178, 36.2475, 1.4 ) }
    dend_29 { pt3dadd( -73.7868, 675.762, 36.3213, 1.4 ) }
    dend_29 { pt3dadd( -74.1621, 676.917, 36.471, 1.11 ) }
    dend_29 { pt3dadd( -74.7241, 678.771, 36.7166, 0.88 ) }
    dend_29 { pt3dadd( -75.1223, 680.188, 36.8904, 1.03 ) }
    dend_29 { pt3dadd( -75.4808, 681.593, 37.0489, 1.33 ) }
    dend_29 { pt3dadd( -75.518, 681.753, 37.0644, 1.33 ) }
    dend_29 { pt3dadd( -75.6376, 682.278, 37.1114, 1.33 ) }
    dend_29 { pt3dadd( -75.973, 683.825, 37.2197, 0.88 ) }
    dend_29 { pt3dadd( -76.1632, 684.656, 37.2848, 0.88 ) }
    dend_29 { pt3dadd( -76.48, 686.001, 37.4092, 0.74 ) }
    dend_29 { pt3dadd( -76.7063, 686.988, 37.5219, 0.74 ) }
    dend_29 { pt3dadd( -76.9439, 688.069, 37.6623, 1.33 ) }
    dend_29 { pt3dadd( -76.9632, 688.16, 37.6754, 1.33 ) }
    dend_29 { pt3dadd( -77.1254, 689.11, 37.7959, 1.92 ) }
    dend_29 { pt3dadd( -77.2259, 689.857, 37.8679, 2.21 ) }
    dend_29 { pt3dadd( -77.2837, 690.426, 37.8801, 2.21 ) }
    dend_29 { pt3dadd( -77.3631, 691.313, 37.8364, 1.77 ) }
    dend_29 { pt3dadd( -77.4521, 692.425, 37.7331, 1.18 ) }
    dend_29 { pt3dadd( -77.5574, 693.596, 37.6006, 0.81 ) }
    dend_29 { pt3dadd( -77.7278, 695.365, 37.3643, 0.74 ) }
    dend_29 { pt3dadd( -77.925, 697.298, 37.1096, 0.66 ) }
    dend_29 { pt3dadd( -78.0979, 698.946, 36.9266, 0.66 ) }
    dend_29 { pt3dadd( -78.1067, 699.03, 36.9191, 0.66 ) }
    dend_29 { pt3dadd( -78.2258, 700.238, 36.8711, 0.66 ) }
    dend_29 { pt3dadd( -78.2372, 700.373, 36.8775, 0.66 ) }
    dend_29 { pt3dadd( -78.3285, 702.13, 37.0747, 0.66 ) }
    dend_29 { pt3dadd( -78.377, 703.696, 37.3549, 0.66 ) }
    dend_29 { pt3dadd( -78.3784, 703.813, 37.3802, 0.66 ) }
    dend_29 { pt3dadd( -78.3915, 705.274, 37.7042, 0.66 ) }
    dend_29 { pt3dadd( -78.3915, 707.462, 38.2155, 0.66 ) }
    dend_29 { pt3dadd( -78.3906, 707.585, 38.245, 0.66 ) }
    dend_29 { pt3dadd( -78.3814, 708.22, 38.4019, 1.25 ) }
    dend_29 { pt3dadd( -78.3799, 708.311, 38.4246, 1.25 ) }
    dend_29 { pt3dadd( -78.3678, 709.692, 38.7581, 1.25 ) }
    dend_29 { pt3dadd( -78.3686, 709.815, 38.7861, 1.25 ) }
    dend_29 { pt3dadd( -78.3902, 711.008, 39.0746, 1.25 ) }
    dend_29 { pt3dadd( -78.4233, 712.026, 39.332, 0.96 ) }
    dend_29 { pt3dadd( -78.4808, 713.036, 39.6039, 0.96 ) }
    dend_29 { pt3dadd( -78.4864, 713.107, 39.6232, 0.96 ) }
    dend_29 { pt3dadd( -78.5891, 714.128, 39.9009, 1.11 ) }
    dend_29 { pt3dadd( -78.7931, 715.875, 40.371, 0.52 ) }
    dend_29 { pt3dadd( -78.9373, 717.026, 40.6777, 1.18 ) }
    dend_29 { pt3dadd( -79.0775, 718.255, 41.0093, 1.92 ) }
    dend_29 { pt3dadd( -79.1516, 719.081, 41.2196, 2.43 ) }
    dend_29 { pt3dadd( -79.2013, 719.83, 41.4008, 2.43 ) }
    dend_29 { pt3dadd( -79.2429, 720.736, 41.6078, 2.43 ) }
    dend_29 { pt3dadd( -79.2804, 722.262, 41.9254, 1.25 ) }
    dend_29 { pt3dadd( -79.2686, 723.732, 42.2131, 0.59 ) }
    dend_29 { pt3dadd( -79.1945, 725.317, 42.457, 0.74 ) }
    dend_29 { pt3dadd( -79.1194, 726.323, 42.5829, 1.03 ) }
    dend_29 { pt3dadd( -79.0976, 726.569, 42.6021, 1.03 ) }
    dend_29 { pt3dadd( -79.035, 727.234, 42.6168, 1.03 ) }
    dend_29 { pt3dadd( -78.9518, 728.169, 42.5885, 0.59 ) }
    dend_29 { pt3dadd( -78.8576, 729.572, 42.4854, 0.59 ) }
    dend_29 { pt3dadd( -78.8526, 729.711, 42.4745, 0.59 ) }
    dend_29 { pt3dadd( -78.7937, 731.009, 42.411, 0.59 ) }
    dend_29 { pt3dadd( -78.7748, 731.37, 42.4238, 1.03 ) }
    dend_29 { pt3dadd( -78.7262, 732.284, 42.521, 0.66 ) }
    dend_29 { pt3dadd( -78.6985, 732.871, 42.6242, 0.66 ) }
    dend_29 { pt3dadd( -78.6808, 733.9, 42.8933, 0.66 ) }
    dend_29 { pt3dadd( -78.6895, 735.302, 43.2996, 0.59 ) }
    dend_29 { pt3dadd( -78.7319, 736.952, 43.8063, 1.03 ) }
    dend_29 { pt3dadd( -78.7569, 737.568, 43.9986, 1.84 ) }
    dend_29 { pt3dadd( -78.7916, 738.16, 44.1812, 1.84 ) }
    dend_29 { pt3dadd( -78.9132, 739.719, 44.6391, 1.18 ) }
    dend_29 { pt3dadd( -79.0384, 740.963, 44.9816, 0.66 ) }
    dend_29 { pt3dadd( -79.2025, 742.144, 45.2582, 0.66 ) }
    dend_29 { pt3dadd( -79.2349, 742.351, 45.2957, 0.66 ) }
    dend_29 { pt3dadd( -79.5054, 743.999, 45.5415, 0.66 ) }
    dend_29 { pt3dadd( -79.7213, 745.292, 45.6919, 1.18 ) }
    dend_29 { pt3dadd( -79.8687, 746.18, 45.7622, 1.18 ) }
    dend_29 { pt3dadd( -80.117, 747.602, 45.8621, 0.66 ) }
    dend_29 { pt3dadd( -80.3315, 748.769, 45.932, 0.66 ) }
    dend_29 { pt3dadd( -80.5476, 749.873, 45.9831, 1.25 ) }
    dend_29 { pt3dadd( -80.7429, 750.777, 46.0107, 1.99 ) }
    dend_29 { pt3dadd( -80.8976, 751.449, 46.0265, 2.21 ) }
    dend_29 { pt3dadd( -81.2482, 752.913, 46.0488, 2.06 ) }
    // Section: dend_12, id: dend_12, parent: dend_8 (entry count 96/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -7.58353, -59.8981, -10.9642, 0.44 ) }
    dend_12 { pt3dadd( -8.21768, -60.4169, -10.9251, 0.44 ) }
    dend_12 { pt3dadd( -8.27436, -60.4646, -10.9206, 0.44 ) }
    dend_12 { pt3dadd( -9.10945, -61.1988, -10.8414, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_12 { pt3dadd( -9.91327, -61.8891, -10.7679, 1.18 ) }
    dend_12 { pt3dadd( -10.4794, -62.3662, -10.7197, 0.59 ) }
    dend_12 { pt3dadd( -10.5353, -62.4131, -10.7152, 0.59 ) }
    dend_12 { pt3dadd( -11.0729, -62.8928, -10.6749, 0.22 ) }
    dend_12 { pt3dadd( -11.6104, -63.3605, -10.6294, 0.22 ) }
    dend_12 { pt3dadd( -12.1606, -63.8182, -10.5796, 0.59 ) }
    dend_12 { pt3dadd( -12.529, -64.1293, -10.542, 0.59 ) }
    dend_12 { pt3dadd( -12.6118, -64.2076, -10.528, 0.59 ) }
    dend_12 { pt3dadd( -13.1811, -64.7923, -10.4092, 0.22 ) }
    dend_12 { pt3dadd( -13.6214, -65.2915, -10.3031, 1.18 ) }
    dend_12 { pt3dadd( -14.0393, -65.8681, -10.1847, 1.25 ) }
    dend_12 { pt3dadd( -14.0787, -65.9324, -10.1718, 1.25 ) }
    dend_12 { pt3dadd( -14.7409, -67.1567, -9.87291, 0.22 ) }
    dend_12 { pt3dadd( -14.9259, -67.5349, -9.77554, 0.37 ) }
    dend_12 { pt3dadd( -15.0303, -67.7945, -9.69689, 0.37 ) }
    dend_12 { pt3dadd( -15.5256, -69.2372, -9.19978, 0.22 ) }
    dend_12 { pt3dadd( -15.6767, -69.733, -9.0169, 0.22 ) }
    dend_12 { pt3dadd( -15.9979, -70.8452, -8.58922, 1.47 ) }
    dend_12 { pt3dadd( -16.2209, -71.7367, -8.27431, 2.21 ) }
    dend_12 { pt3dadd( -16.4275, -72.6421, -7.96772, 2.21 ) }
    dend_12 { pt3dadd( -16.4431, -72.7087, -7.94406, 2.21 ) }
    dend_12 { pt3dadd( -16.6768, -73.9775, -7.48895, 0.74 ) }
    dend_12 { pt3dadd( -16.6862, -74.0454, -7.46623, 0.74 ) }
    dend_12 { pt3dadd( -16.8279, -75.4291, -7.06754, 0.22 ) }
    dend_12 { pt3dadd( -16.8543, -75.7251, -6.98614, 0.59 ) }
    dend_12 { pt3dadd( -16.9979, -77.1652, -6.62686, 0.22 ) }
    dend_12 { pt3dadd( -17.0808, -78.0876, -6.39984, 0.22 ) }
    dend_12 { pt3dadd( -17.1397, -78.9101, -6.18737, 0.22 ) }
    dend_12 { pt3dadd( -17.1942, -79.6079, -6.00636, 0.52 ) }
    dend_12 { pt3dadd( -17.2211, -79.9259, -5.92949, 0.52 ) }
    dend_12 { pt3dadd( -17.3269, -81.2541, -5.65426, 0.22 ) }
    dend_12 { pt3dadd( -17.3775, -82.1058, -5.51018, 0.22 ) }
    dend_12 { pt3dadd( -17.4475, -83.3239, -5.31505, 1.55 ) }
    dend_12 { pt3dadd( -17.4574, -84.0205, -5.19788, 1.69 ) }
    dend_12 { pt3dadd( -17.3809, -85.9226, -4.81734, 0.22 ) }
    dend_12 { pt3dadd( -17.2832, -86.885, -4.59484, 0.22 ) }
    dend_12 { pt3dadd( -17.1649, -87.5364, -4.42437, 0.52 ) }
    dend_12 { pt3dadd( -16.984, -88.2031, -4.25439, 0.52 ) }
    dend_12 { pt3dadd( -16.6232, -89.2211, -4.01849, 0.22 ) }
    dend_12 { pt3dadd( -16.2942, -90.0196, -3.84597, 1.4 ) }
    dend_12 { pt3dadd( -15.9845, -90.6845, -3.71523, 1.69 ) }
    dend_12 { pt3dadd( -15.7382, -91.2199, -3.61729, 1.77 ) }
    dend_12 { pt3dadd( -14.9603, -92.9907, -3.31126, 0.15 ) }
    dend_12 { pt3dadd( -14.4465, -94.2066, -3.1253, 0.22 ) }
    dend_12 { pt3dadd( -14.1193, -95.0211, -3.02843, 0.74 ) }
    dend_12 { pt3dadd( -13.8613, -95.734, -2.95709, 0.74 ) }
    dend_12 { pt3dadd( -13.5722, -96.6308, -2.8614, 0.22 ) }
    dend_12 { pt3dadd( -13.5029, -96.8844, -2.82731, 0.59 ) }
    dend_12 { pt3dadd( -13.4042, -97.3213, -2.7476, 0.59 ) }
    dend_12 { pt3dadd( -13.385, -97.4031, -2.73438, 0.59 ) }
    dend_12 { pt3dadd( -13.0827, -98.6804, -2.53804, 0.22 ) }
    dend_12 { pt3dadd( -12.9104, -99.4535, -2.45196, 0.74 ) }
    dend_12 { pt3dadd( -12.6961, -100.318, -2.38106, 0.96 ) }
    dend_12 { pt3dadd( -12.5394, -100.911, -2.33599, 0.66 ) }
    dend_12 { pt3dadd( -12.0035, -102.815, -2.2193, 0.29 ) }
    dend_12 { pt3dadd( -11.6868, -103.867, -2.16307, 0.22 ) }
    dend_12 { pt3dadd( -11.3224, -104.996, -2.10782, 0.22 ) }
    dend_12 { pt3dadd( -10.8765, -106.397, -2.05063, 1.55 ) }
    dend_12 { pt3dadd( -10.7422, -106.817, -2.03872, 1.92 ) }
    dend_12 { pt3dadd( -10.4071, -107.869, -2.02189, 0.96 ) }
    dend_12 { pt3dadd( -10.2196, -108.474, -2.03084, 0.44 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 61/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.58353, -59.8981, -10.9642, 2.43 ) }
    dend_9 { pt3dadd( -7.6537, -60.9743, -11.4665, 2.43 ) }
    dend_9 { pt3dadd( -7.73771, -61.9728, -11.8655, 0.96 ) }
    dend_9 { pt3dadd( -7.82389, -62.7278, -12.1244, 0.52 ) }
    dend_9 { pt3dadd( -7.91178, -63.4212, -12.3397, 0.52 ) }
    dend_9 { pt3dadd( -8.02427, -64.2877, -12.5908, 0.52 ) }
    dend_9 { pt3dadd( -8.13249, -65.1335, -12.8228, 0.52 ) }
    dend_9 { pt3dadd( -8.24024, -65.9016, -12.9736, 0.52 ) }
    dend_9 { pt3dadd( -8.36023, -66.7012, -13.0925, 0.52 ) }
    dend_9 { pt3dadd( -8.47621, -67.4971, -13.193, 2.58 ) }
    dend_9 { pt3dadd( -8.59792, -68.4538, -13.3294, 3.68 ) }
    dend_9 { pt3dadd( -8.62856, -68.6938, -13.37, 3.68 ) }
    dend_9 { pt3dadd( -8.71375, -69.2727, -13.4813, 3.24 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 74/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -4.26512, -148.383, 33.2658, 0.59 ) }
    dend_6 { pt3dadd( -4.18982, -150.309, 33.0869, 0.59 ) }
    dend_6 { pt3dadd( -4.1861, -151.235, 32.9864, 0.37 ) }
    dend_6 { pt3dadd( -4.24837, -152.16, 32.8564, 0.37 ) }
    dend_6 { pt3dadd( -4.34708, -152.788, 32.7309, 0.74 ) }
    dend_6 { pt3dadd( -4.49889, -153.486, 32.5627, 0.74 ) }
    dend_6 { pt3dadd( -4.65371, -154.054, 32.4059, 0.96 ) }
    dend_6 { pt3dadd( -4.68061, -154.114, 32.387, 0.96 ) }
    dend_6 { pt3dadd( -5.01497, -154.763, 32.1427, 1.25 ) }
    dend_6 { pt3dadd( -5.4207, -155.453, 31.919, 0.81 ) }
    dend_6 { pt3dadd( -5.45278, -155.513, 31.9082, 0.81 ) }
    dend_6 { pt3dadd( -5.8543, -156.333, 31.8398, 0.59 ) }
    dend_6 { pt3dadd( -6.2612, -157.322, 31.8187, 0.59 ) }
    dend_6 { pt3dadd( -6.28052, -157.377, 31.8191, 0.59 ) }
    dend_6 { pt3dadd( -6.61596, -158.499, 31.8551, 0.44 ) }
    dend_6 { pt3dadd( -6.9616, -159.732, 31.8974, 0.44 ) }
    dend_6 { pt3dadd( -6.98006, -159.797, 31.8995, 0.44 ) }
    dend_6 { pt3dadd( -7.31006, -160.932, 31.9248, 2.14 ) }
    dend_6 { pt3dadd( -7.50402, -161.57, 31.9106, 3.09 ) }
    dend_6 { pt3dadd( -7.6657, -162.156, 31.8805, 3.61 ) }
    dend_6 { pt3dadd( -7.79865, -162.841, 31.7887, 3.61 ) }
    dend_6 { pt3dadd( -8.89934, -172.348, 30.1499, 3.61 ) }
    dend_6 { pt3dadd( -9.67956, -181.47, 26.8258, 3.61 ) }
    dend_6 { pt3dadd( -9.99061, -190.062, 22.1849, 3.61 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 98/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -4.26512, -148.383, 33.2658, 0.59 ) }
    dend_5 { pt3dadd( -3.56367, -149.335, 34.1201, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_5 { pt3dadd( -2.94833, -150.2, 34.9716, 0.37 ) }
    dend_5 { pt3dadd( -2.69488, -150.747, 35.7967, 0.37 ) }
    dend_5 { pt3dadd( -2.63288, -151.297, 37.0243, 0.37 ) }
    dend_5 { pt3dadd( -2.64071, -151.327, 37.1128, 0.37 ) }
    dend_5 { pt3dadd( -2.81639, -151.719, 38.374, 0.74 ) }
    dend_5 { pt3dadd( -2.84558, -151.737, 38.4502, 0.74 ) }
    dend_5 { pt3dadd( -3.98718, -152.251, 40.7667, 0.74 ) }
    dend_5 { pt3dadd( -4.01491, -152.264, 40.8191, 0.74 ) }
    dend_5 { pt3dadd( -4.38785, -152.5, 41.5564, 0.74 ) }
    dend_5 { pt3dadd( -4.65184, -152.772, 42.1611, 0.29 ) }
    dend_5 { pt3dadd( -4.91029, -153.315, 43.0141, 0.29 ) }
    dend_5 { pt3dadd( -5.01467, -153.804, 43.6581, 0.29 ) }
    dend_5 { pt3dadd( -4.96646, -154.311, 44.1803, 0.29 ) }
    dend_5 { pt3dadd( -4.90633, -154.763, 44.6436, 0.81 ) }
    dend_5 { pt3dadd( -4.89616, -154.812, 44.6935, 0.81 ) }
    dend_5 { pt3dadd( -4.75306, -155.191, 45.1245, 1.25 ) }
    dend_5 { pt3dadd( -4.57101, -155.438, 45.4712, 1.25 ) }
    dend_5 { pt3dadd( -4.29382, -155.711, 45.9633, 0.59 ) }
    dend_5 { pt3dadd( -3.48021, -160.574, 54.7321, 0.59 ) }
    // Section: dend_61, id: dend_61, parent: dend_29 (entry count 19/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -81.2482, 752.913, 46.0488, 0.44 ) }
    dend_61 { pt3dadd( -81.3249, 754.776, 43.7612, 0.44 ) }
    dend_61 { pt3dadd( -81.3542, 755.572, 42.8825, 0.44 ) }
    dend_61 { pt3dadd( -81.3729, 756.103, 42.3347, 0.74 ) }
    dend_61 { pt3dadd( -81.373, 756.138, 42.3019, 0.74 ) }
    dend_61 { pt3dadd( -81.356, 756.724, 41.8446, 0.74 ) }
    dend_61 { pt3dadd( -81.3544, 756.764, 41.8178, 0.74 ) }
    dend_61 { pt3dadd( -81.3399, 757.441, 41.6134, 0.44 ) }
    dend_61 { pt3dadd( -81.3289, 757.494, 41.5991, 0.44 ) }
    dend_61 { pt3dadd( -81.1497, 758.142, 41.4183, 0.88 ) }
    dend_61 { pt3dadd( -80.9871, 758.807, 41.2241, 0.96 ) }
    dend_61 { pt3dadd( -80.909, 759.186, 41.1082, 1.25 ) }
    dend_61 { pt3dadd( -80.8996, 759.229, 41.0926, 1.25 ) }
    dend_61 { pt3dadd( -80.7439, 760.135, 40.7284, 0.66 ) }
    dend_61 { pt3dadd( -80.6639, 760.842, 40.4039, 0.37 ) }
    dend_61 { pt3dadd( -80.6448, 761.325, 40.1557, 0.74 ) }
    dend_61 { pt3dadd( -80.6386, 761.79, 39.8991, 0.74 ) }
    dend_61 { pt3dadd( -80.6498, 762.318, 39.5978, 0.74 ) }
    dend_61 { pt3dadd( -80.6985, 763.11, 39.1444, 0.29 ) }
    dend_61 { pt3dadd( -80.8151, 764.003, 38.6331, 0.29 ) }
    dend_61 { pt3dadd( -80.9072, 764.608, 38.2824, 0.29 ) }
    dend_61 { pt3dadd( -81.0336, 765.489, 37.7742, 1.47 ) }
    dend_61 { pt3dadd( -81.0857, 765.822, 37.5932, 1.69 ) }
    dend_61 { pt3dadd( -81.096, 765.871, 37.5675, 1.69 ) }
    dend_61 { pt3dadd( -81.1929, 766.361, 37.2829, 1.47 ) }
    dend_61 { pt3dadd( -81.2033, 766.408, 37.2544, 1.47 ) }
    dend_61 { pt3dadd( -81.4125, 767.73, 36.3991, 0.22 ) }
    dend_61 { pt3dadd( -81.4697, 768.208, 36.0847, 0.22 ) }
    dend_61 { pt3dadd( -81.5288, 769.013, 35.5663, 0.22 ) }
    dend_61 { pt3dadd( -81.5502, 770.04, 34.9645, 1.03 ) }
    dend_61 { pt3dadd( -81.533, 770.456, 34.7217, 1.4 ) }
    dend_61 { pt3dadd( -81.4346, 771.762, 33.9608, 0.22 ) }
    dend_61 { pt3dadd( -81.3983, 772.129, 33.7446, 0.59 ) }
    dend_61 { pt3dadd( -81.3481, 772.545, 33.5003, 0.74 ) }
    dend_61 { pt3dadd( -81.1814, 773.892, 32.7519, 0.29 ) }
    dend_61 { pt3dadd( -81.1214, 774.851, 32.2291, 0.29 ) }
    dend_61 { pt3dadd( -81.121, 774.9, 32.1988, 0.29 ) }
    dend_61 { pt3dadd( -81.1664, 775.418, 31.8448, 0.44 ) }
    dend_61 { pt3dadd( -81.1671, 775.469, 31.8056, 0.44 ) }
    dend_61 { pt3dadd( -81.1575, 775.88, 31.4745, 0.44 ) }
    dend_61 { pt3dadd( -81.133, 776.505, 30.9725, 0.22 ) }
    dend_61 { pt3dadd( -81.0825, 777.464, 30.261, 1.92 ) }
    dend_61 { pt3dadd( -81.0602, 777.658, 30.1129, 2.5 ) }
    dend_61 { pt3dadd( -80.7011, 779.641, 28.6419, 0.15 ) }
    dend_61 { pt3dadd( -80.6402, 779.925, 28.4358, 0.15 ) }
    dend_61 { pt3dadd( -80.4482, 780.676, 27.9006, 1.4 ) }
    dend_61 { pt3dadd( -80.4033, 780.848, 27.7809, 1.69 ) }
    dend_61 { pt3dadd( -79.9926, 782.48, 26.6546, 0.15 ) }
    dend_61 { pt3dadd( -79.8766, 783.027, 26.2843, 0.15 ) }
    dend_61 { pt3dadd( -79.8621, 783.17, 26.1958, 0.15 ) }
    dend_61 { pt3dadd( -79.8583, 783.294, 26.1251, 0.15 ) }
    dend_61 { pt3dadd( -79.8924, 783.89, 25.8385, 0.96 ) }
    dend_61 { pt3dadd( -79.9368, 784.295, 25.6649, 1.47 ) }
    dend_61 { pt3dadd( -79.9933, 784.581, 25.5623, 1.62 ) }
    dend_61 { pt3dadd( -80.1267, 785.222, 25.3233, 0.88 ) }
    dend_61 { pt3dadd( -80.3678, 786.5, 24.8605, 0.22 ) }
    dend_61 { pt3dadd( -80.4293, 786.989, 24.6845, 0.22 ) }
    dend_61 { pt3dadd( -80.4591, 787.501, 24.4992, 0.74 ) }
    dend_61 { pt3dadd( -80.4603, 787.555, 24.481, 0.74 ) }
    dend_61 { pt3dadd( -80.4729, 788.004, 24.3533, 0.74 ) }
    dend_61 { pt3dadd( -80.4861, 788.234, 24.3006, 0.74 ) }
    dend_61 { pt3dadd( -80.5913, 789.432, 24.09, 0.29 ) }
    dend_61 { pt3dadd( -80.5979, 789.489, 24.0808, 0.29 ) }
    dend_61 { pt3dadd( -80.7543, 790.555, 23.9237, 0.29 ) }
    dend_61 { pt3dadd( -80.9309, 791.63, 23.7714, 0.29 ) }
    dend_61 { pt3dadd( -81.0889, 792.468, 23.6639, 0.29 ) }
    dend_61 { pt3dadd( -81.2266, 793.087, 23.5969, 1.47 ) }
    dend_61 { pt3dadd( -81.3124, 793.432, 23.5631, 2.06 ) }
    dend_61 { pt3dadd( -81.3256, 793.486, 23.5573, 2.06 ) }
    dend_61 { pt3dadd( -81.4632, 794.1, 23.474, 1.18 ) }
    dend_61 { pt3dadd( -81.7919, 795.724, 23.1889, 0.22 ) }
    dend_61 { pt3dadd( -82.008, 796.897, 22.966, 0.22 ) }
    dend_61 { pt3dadd( -82.1377, 797.836, 22.7609, 1.47 ) }
    dend_61 { pt3dadd( -82.1726, 798.178, 22.6792, 1.18 ) }
    dend_61 { pt3dadd( -82.2575, 799.567, 22.3282, 0.22 ) }
    dend_61 { pt3dadd( -82.2765, 800.501, 22.0766, 1.11 ) }
    dend_61 { pt3dadd( -82.2626, 800.999, 21.9372, 1.33 ) }
    dend_61 { pt3dadd( -82.1473, 802.837, 21.4255, 0.22 ) }
    dend_61 { pt3dadd( -82.1432, 802.891, 21.4116, 0.22 ) }
    dend_61 { pt3dadd( -82.0377, 804.18, 21.1027, 0.22 ) }
    dend_61 { pt3dadd( -82.0333, 804.234, 21.0915, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_61 { pt3dadd( -81.9304, 805.615, 20.8442, 0.22 ) }
    dend_61 { pt3dadd( -81.9278, 805.669, 20.8344, 0.22 ) }
    dend_61 { pt3dadd( -81.9419, 806.421, 20.7312, 1.55 ) }
    dend_61 { pt3dadd( -81.9522, 806.539, 20.7138, 2.14 ) }
    dend_61 { pt3dadd( -82.0208, 806.943, 20.6507, 2.36 ) }
    dend_61 { pt3dadd( -82.031, 806.989, 20.643, 2.36 ) }
    dend_61 { pt3dadd( -82.2826, 807.787, 20.4573, 1.11 ) }
    dend_61 { pt3dadd( -82.6693, 808.838, 20.1667, 0.22 ) }
    dend_61 { pt3dadd( -83.0321, 809.727, 19.8944, 0.22 ) }
    dend_61 { pt3dadd( -83.2982, 810.344, 19.6948, 1.4 ) }
    dend_61 { pt3dadd( -83.4444, 810.66, 19.586, 1.4 ) }
    dend_61 { pt3dadd( -84.1587, 812.148, 19.0325, 0.22 ) }
    dend_61 { pt3dadd( -84.4335, 812.687, 18.8126, 0.88 ) }
    dend_61 { pt3dadd( -84.5866, 812.982, 18.6836, 0.59 ) }
    dend_61 { pt3dadd( -84.6138, 813.036, 18.6605, 0.59 ) }
    dend_61 { pt3dadd( -84.6799, 813.172, 18.6071, 0.59 ) }
    dend_61 { pt3dadd( -85.148, 814.199, 18.2811, 0.22 ) }
    dend_61 { pt3dadd( -85.4268, 814.837, 18.1248, 0.22 ) }
    dend_61 { pt3dadd( -85.6963, 815.494, 17.9881, 1.03 ) }
    dend_61 { pt3dadd( -85.8239, 815.812, 17.9283, 1.4 ) }
    dend_61 { pt3dadd( -85.9912, 816.214, 17.8812, 1.4 ) }
    dend_61 { pt3dadd( -86.4314, 817.277, 17.8304, 0.22 ) }
    dend_61 { pt3dadd( -86.4535, 817.33, 17.8312, 0.22 ) }
    dend_61 { pt3dadd( -86.9316, 818.512, 17.8848, 0.22 ) }
    dend_61 { pt3dadd( -86.9715, 818.617, 17.8916, 0.22 ) }
    dend_61 { pt3dadd( -87.4518, 819.971, 17.9987, 0.22 ) }
    dend_61 { pt3dadd( -87.7194, 820.742, 18.0734, 1.33 ) }
    dend_61 { pt3dadd( -87.8084, 821.0, 18.1027, 1.62 ) }
    dend_61 { pt3dadd( -87.975, 821.492, 18.1608, 0.81 ) }
    dend_61 { pt3dadd( -88.4053, 822.802, 18.3282, 0.22 ) }
    dend_61 { pt3dadd( -88.6592, 823.65, 18.4182, 1.25 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 31/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -81.2482, 752.913, 46.0488, 0.59 ) }
    dend_30 { pt3dadd( -81.478, 753.802, 46.1389, 0.59 ) }
    dend_30 { pt3dadd( -81.7687, 754.731, 46.2794, 0.59 ) }
    dend_30 { pt3dadd( -82.0536, 755.602, 46.4365, 0.81 ) }
    dend_30 { pt3dadd( -82.2755, 756.286, 46.5646, 1.25 ) }
    dend_30 { pt3dadd( -82.2962, 756.35, 46.5766, 1.25 ) }
    dend_30 { pt3dadd( -82.4246, 756.749, 46.6473, 1.11 ) }
    dend_30 { pt3dadd( -82.704, 757.576, 46.7928, 0.88 ) }
    dend_30 { pt3dadd( -82.8956, 758.174, 46.8895, 0.44 ) }
    dend_30 { pt3dadd( -83.1529, 759.053, 47.0141, 0.37 ) }
    dend_30 { pt3dadd( -83.218, 759.289, 47.0445, 0.37 ) }
    dend_30 { pt3dadd( -83.3869, 759.933, 47.1133, 0.37 ) }
    dend_30 { pt3dadd( -83.6246, 760.909, 47.1866, 1.47 ) }
    dend_30 { pt3dadd( -83.7667, 761.5, 47.2044, 1.84 ) }
    dend_30 { pt3dadd( -83.826, 761.733, 47.2091, 1.84 ) }
    dend_30 { pt3dadd( -83.9412, 762.204, 47.2222, 1.84 ) }
    dend_30 { pt3dadd( -84.1253, 762.989, 47.2504, 1.25 ) }
    dend_30 { pt3dadd( -84.4188, 764.3, 47.3087, 0.66 ) }
    dend_30 { pt3dadd( -84.6784, 765.488, 47.3655, 0.66 ) }
    dend_30 { pt3dadd( -84.6957, 765.572, 47.3702, 0.66 ) }
    dend_30 { pt3dadd( -84.8641, 766.43, 47.4234, 0.66 ) }
    dend_30 { pt3dadd( -84.8867, 766.557, 47.4322, 0.66 ) }
    dend_30 { pt3dadd( -85.0192, 767.342, 47.4889, 0.66 ) }
    dend_30 { pt3dadd( -85.0295, 767.41, 47.4943, 0.66 ) }
    dend_30 { pt3dadd( -85.1329, 768.127, 47.5551, 0.66 ) }
    dend_30 { pt3dadd( -85.1679, 768.343, 47.5698, 0.66 ) }
    dend_30 { pt3dadd( -85.2833, 769.024, 47.611, 0.66 ) }
    dend_30 { pt3dadd( -85.3712, 769.563, 47.6469, 0.66 ) }
    dend_30 { pt3dadd( -85.3799, 769.622, 47.6518, 0.66 ) }
    dend_30 { pt3dadd( -85.4919, 770.484, 47.7372, 0.66 ) }
    dend_30 { pt3dadd( -85.4975, 770.536, 47.7434, 0.66 ) }
    dend_30 { pt3dadd( -85.5752, 771.379, 47.8524, 1.18 ) }
    dend_30 { pt3dadd( -85.5818, 771.438, 47.8662, 1.18 ) }
    dend_30 { pt3dadd( -85.6777, 772.176, 48.1035, 1.33 ) }
    dend_30 { pt3dadd( -85.6876, 772.242, 48.1292, 1.33 ) }
    dend_30 { pt3dadd( -85.7239, 772.445, 48.2245, 1.33 ) }
    dend_30 { pt3dadd( -85.7413, 772.534, 48.2675, 1.33 ) }
    dend_30 { pt3dadd( -85.9868, 773.652, 48.848, 0.81 ) }
    dend_30 { pt3dadd( -85.996, 773.699, 48.8698, 0.81 ) }
    dend_30 { pt3dadd( -86.0526, 774.152, 49.0682, 0.81 ) }
    dend_30 { pt3dadd( -86.0582, 774.206, 49.0901, 0.81 ) }
    dend_30 { pt3dadd( -86.104, 774.845, 49.3307, 0.96 ) }
    dend_30 { pt3dadd( -86.1075, 774.941, 49.3646, 0.96 ) }
    dend_30 { pt3dadd( -86.0977, 775.97, 49.6884, 0.37 ) }
    dend_30 { pt3dadd( -86.0851, 776.839, 49.9528, 0.37 ) }
    dend_30 { pt3dadd( -86.0968, 777.523, 50.1669, 1.33 ) }
    dend_30 { pt3dadd( -86.1247, 778.143, 50.3821, 2.06 ) }
    dend_30 { pt3dadd( -86.1551, 778.418, 50.4942, 2.36 ) }
    dend_30 { pt3dadd( -86.2202, 778.849, 50.687, 2.36 ) }
    dend_30 { pt3dadd( -86.3626, 779.526, 51.0205, 1.62 ) }
    dend_30 { pt3dadd( -86.6171, 780.565, 51.5428, 0.52 ) }
    dend_30 { pt3dadd( -86.9178, 781.729, 52.153, 0.37 ) }
    dend_30 { pt3dadd( -87.2184, 782.752, 52.7135, 1.55 ) }
    dend_30 { pt3dadd( -87.3821, 783.26, 53.0059, 2.21 ) }
    dend_30 { pt3dadd( -87.5695, 783.784, 53.3342, 2.5 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 86/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.71375, -69.2727, -13.4813, 0.44 ) }
    dend_11 { pt3dadd( -8.51736, -70.1079, -13.0152, 0.44 ) }
    dend_11 { pt3dadd( -8.32019, -70.9156, -12.5256, 0.22 ) }
    dend_11 { pt3dadd( -8.30878, -70.9553, -12.4977, 0.22 ) }
    dend_11 { pt3dadd( -8.14292, -71.5259, -11.9977, 0.22 ) }
    dend_11 { pt3dadd( -7.88407, -72.3259, -11.2804, 1.47 ) }
    dend_11 { pt3dadd( -7.80096, -72.5646, -11.0741, 1.99 ) }
    dend_11 { pt3dadd( -7.77232, -72.6445, -10.9999, 1.99 ) }
    dend_11 { pt3dadd( -7.53262, -73.2229, -10.4606, 1.77 ) }
    dend_11 { pt3dadd( -7.1287, -74.1357, -9.63662, 0.52 ) }
    dend_11 { pt3dadd( -6.80843, -74.824, -9.03173, 0.29 ) }
    dend_11 { pt3dadd( -6.55312, -75.3525, -8.60589, 0.29 ) }
    dend_11 { pt3dadd( -6.53634, -75.3885, -8.57798, 0.29 ) }
    dend_11 { pt3dadd( -6.28265, -75.943, -8.16993, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( -6.03744, -76.5294, -7.79249, 1.03 ) }
    dend_11 { pt3dadd( -5.69761, -77.4101, -7.3071, 0.22 ) }
    dend_11 { pt3dadd( -5.68658, -77.4451, -7.2887, 0.22 ) }
    dend_11 { pt3dadd( -5.58564, -77.7995, -7.11709, 0.44 ) }
    dend_11 { pt3dadd( -5.57603, -77.8353, -7.09944, 0.44 ) }
    dend_11 { pt3dadd( -5.44779, -78.3071, -6.85117, 0.44 ) }
    dend_11 { pt3dadd( -5.35713, -78.6622, -6.68287, 0.29 ) }
    dend_11 { pt3dadd( -5.20603, -79.2633, -6.40469, 1.55 ) }
    dend_11 { pt3dadd( -5.16455, -79.4219, -6.32687, 2.21 ) }
    dend_11 { pt3dadd( -4.94642, -80.1509, -5.93605, 2.21 ) }
    dend_11 { pt3dadd( -4.73119, -80.7943, -5.57303, 0.44 ) }
    dend_11 { pt3dadd( -4.45209, -81.4831, -5.14716, 0.29 ) }
    dend_11 { pt3dadd( -4.3239, -81.7614, -4.96406, 0.52 ) }
    dend_11 { pt3dadd( -4.3027, -81.8037, -4.93545, 0.52 ) }
    dend_11 { pt3dadd( -4.13573, -82.0825, -4.76049, 0.22 ) }
    dend_11 { pt3dadd( -4.10373, -82.1162, -4.74152, 0.22 ) }
    dend_11 { pt3dadd( -3.8661, -82.2825, -4.62704, 0.22 ) }
    dend_11 { pt3dadd( -3.63219, -82.4303, -4.49817, 0.74 ) }
    dend_11 { pt3dadd( -3.59053, -82.4602, -4.47314, 0.74 ) }
    dend_11 { pt3dadd( -3.29316, -82.7104, -4.28223, 0.74 ) }
    dend_11 { pt3dadd( -2.77542, -83.221, -3.9327, 0.29 ) }
    dend_11 { pt3dadd( -2.46592, -83.5848, -3.6866, 0.29 ) }
    dend_11 { pt3dadd( -2.1544, -84.0343, -3.40181, 1.33 ) }
    dend_11 { pt3dadd( -1.97885, -84.3156, -3.23393, 1.92 ) }
    dend_11 { pt3dadd( -1.88829, -84.4673, -3.14792, 1.99 ) }
    dend_11 { pt3dadd( -1.6984, -84.805, -2.96537, 1.55 ) }
    dend_11 { pt3dadd( -1.33916, -85.4402, -2.65748, 0.66 ) }
    dend_11 { pt3dadd( -1.09436, -85.8529, -2.48612, 0.29 ) }
    dend_11 { pt3dadd( -0.682984, -86.5211, -2.28096, 0.22 ) }
    dend_11 { pt3dadd( -0.423092, -86.9599, -2.17923, 1.03 ) }
    dend_11 { pt3dadd( -0.224487, -87.3111, -2.11992, 1.55 ) }
    dend_11 { pt3dadd( 0.0963721, -87.9047, -2.05819, 0.88 ) }
    dend_11 { pt3dadd( 0.365751, -88.4379, -2.0416, 0.29 ) }
    dend_11 { pt3dadd( 0.637415, -89.0291, -2.04223, 0.29 ) }
    dend_11 { pt3dadd( 0.919423, -89.7335, -2.06437, 0.22 ) }
    dend_11 { pt3dadd( 1.04125, -90.0593, -2.07582, 0.52 ) }
    dend_11 { pt3dadd( 1.05774, -90.1047, -2.07529, 0.52 ) }
    dend_11 { pt3dadd( 1.20474, -90.5297, -2.02906, 0.52 ) }
    dend_11 { pt3dadd( 1.36745, -90.9802, -1.93467, 0.44 ) }
    dend_11 { pt3dadd( 1.41266, -91.1103, -1.89249, 0.66 ) }
    dend_11 { pt3dadd( 1.52237, -91.4499, -1.76588, 0.37 ) }
    dend_11 { pt3dadd( 1.65785, -91.9486, -1.57037, 0.29 ) }
    dend_11 { pt3dadd( 1.77961, -92.5501, -1.34073, 0.29 ) }
    dend_11 { pt3dadd( 1.78329, -92.588, -1.32581, 0.29 ) }
    dend_11 { pt3dadd( 1.80204, -93.1774, -1.10432, 1.25 ) }
    dend_11 { pt3dadd( 1.79955, -93.4572, -1.00847, 1.84 ) }
    dend_11 { pt3dadd( 1.78537, -93.7157, -0.932892, 1.84 ) }
    dend_11 { pt3dadd( 1.74246, -94.3127, -0.802284, 0.81 ) }
    dend_11 { pt3dadd( 1.69, -95.0113, -0.676846, 0.29 ) }
    dend_11 { pt3dadd( 1.65725, -95.5116, -0.60346, 0.22 ) }
    dend_11 { pt3dadd( 1.65317, -95.5798, -0.59596, 0.22 ) }
    dend_11 { pt3dadd( 1.61428, -96.1624, -0.565764, 0.22 ) }
    dend_11 { pt3dadd( 1.54565, -96.9607, -0.582892, 1.33 ) }
    dend_11 { pt3dadd( 1.50485, -97.3388, -0.616493, 1.99 ) }
    dend_11 { pt3dadd( 1.47013, -97.5855, -0.654315, 2.28 ) }
    dend_11 { pt3dadd( 1.40039, -97.958, -0.712918, 2.28 ) }
    dend_11 { pt3dadd( 1.19853, -98.9139, -0.8605, 0.66 ) }
    dend_11 { pt3dadd( 1.06231, -99.4821, -0.952917, 0.22 ) }
    dend_11 { pt3dadd( 1.04968, -99.5295, -0.960207, 0.22 ) }
    dend_11 { pt3dadd( 0.956413, -99.9027, -1.0018, 0.22 ) }
    dend_11 { pt3dadd( 0.86348, -100.287, -1.028, 0.74 ) }
    dend_11 { pt3dadd( 0.801684, -100.551, -1.02915, 1.03 ) }
    dend_11 { pt3dadd( 0.753416, -100.746, -1.01343, 1.11 ) }
    dend_11 { pt3dadd( 0.661653, -101.136, -0.972998, 0.44 ) }
    dend_11 { pt3dadd( 0.513709, -101.778, -0.921501, 0.22 ) }
    dend_11 { pt3dadd( 0.503086, -101.825, -0.919007, 0.22 ) }
    dend_11 { pt3dadd( 0.418329, -102.178, -0.912715, 0.44 ) }
    dend_11 { pt3dadd( 0.314958, -102.701, -0.896509, 0.29 ) }
    dend_11 { pt3dadd( 0.30517, -102.748, -0.895201, 0.29 ) }
    dend_11 { pt3dadd( 0.120361, -103.305, -0.879864, 0.29 ) }
    dend_11 { pt3dadd( -0.0255337, -103.653, -0.867265, 0.22 ) }
    dend_11 { pt3dadd( -0.0452051, -103.698, -0.86478, 0.22 ) }
    dend_11 { pt3dadd( -0.305237, -104.312, -0.790762, 0.22 ) }
    dend_11 { pt3dadd( -0.447304, -104.678, -0.698894, 0.22 ) }
    dend_11 { pt3dadd( -0.779391, -105.708, -0.35748, 2.14 ) }
    dend_11 { pt3dadd( -0.78933, -105.745, -0.34343, 2.14 ) }
    dend_11 { pt3dadd( -0.871062, -106.15, -0.180674, 1.99 ) }
    dend_11 { pt3dadd( -0.95268, -106.746, 0.0699722, 1.69 ) }
    dend_11 { pt3dadd( -1.02691, -107.634, 0.463114, 0.59 ) }
    dend_11 { pt3dadd( -1.01287, -108.461, 0.842036, 0.22 ) }
    dend_11 { pt3dadd( -0.96399, -108.873, 1.02101, 0.37 ) }
    dend_11 { pt3dadd( -0.892109, -109.311, 1.17239, 0.37 ) }
    dend_11 { pt3dadd( -0.786101, -109.821, 1.2971, 0.74 ) }
    dend_11 { pt3dadd( -0.774103, -109.867, 1.3029, 0.74 ) }
    dend_11 { pt3dadd( -0.673212, -110.219, 1.30531, 1.11 ) }
    dend_11 { pt3dadd( -0.470879, -110.918, 1.26631, 0.59 ) }
    dend_11 { pt3dadd( -0.243661, -111.702, 1.20572, 0.29 ) }
    dend_11 { pt3dadd( -0.0849948, -112.233, 1.1616, 0.29 ) }
    dend_11 { pt3dadd( -0.0609398, -112.307, 1.15538, 0.29 ) }
    dend_11 { pt3dadd( 0.113179, -112.812, 1.1259, 0.29 ) }
    dend_11 { pt3dadd( 0.162659, -112.944, 1.12574, 0.29 ) }
    dend_11 { pt3dadd( 0.381349, -113.463, 1.17705, 0.29 ) }
    dend_11 { pt3dadd( 0.570675, -113.89, 1.25369, 1.18 ) }
    dend_11 { pt3dadd( 0.687263, -114.139, 1.30035, 1.47 ) }
    dend_11 { pt3dadd( 0.707488, -114.182, 1.30883, 1.47 ) }
    dend_11 { pt3dadd( 1.02004, -114.882, 1.4471, 0.44 ) }
    dend_11 { pt3dadd( 1.22502, -115.458, 1.55104, 0.37 ) }
    dend_11 { pt3dadd( 1.32106, -115.893, 1.61664, 0.81 ) }
    dend_11 { pt3dadd( 1.363, -116.187, 1.65219, 0.81 ) }
    dend_11 { pt3dadd( 1.40423, -116.644, 1.69965, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_11 { pt3dadd( 1.421, -116.962, 1.72595, 0.29 ) }
    dend_11 { pt3dadd( 1.43343, -117.668, 1.77281, 0.22 ) }
    dend_11 { pt3dadd( 1.44849, -118.427, 1.8028, 0.22 ) }
    dend_11 { pt3dadd( 1.46778, -118.871, 1.81454, 0.44 ) }
    dend_11 { pt3dadd( 1.47933, -119.023, 1.8179, 0.44 ) }
    dend_11 { pt3dadd( 1.51858, -119.319, 1.82654, 0.44 ) }
    dend_11 { pt3dadd( 1.62757, -119.879, 1.85044, 0.29 ) }
    dend_11 { pt3dadd( 1.76669, -120.469, 1.8847, 1.4 ) }
    dend_11 { pt3dadd( 1.87536, -120.905, 1.91342, 1.69 ) }
    dend_11 { pt3dadd( 1.96278, -121.29, 1.94083, 1.92 ) }
    dend_11 { pt3dadd( 2.08026, -121.829, 1.97248, 0.74 ) }
    dend_11 { pt3dadd( 2.18509, -122.486, 1.99276, 0.22 ) }
    dend_11 { pt3dadd( 2.25364, -123.133, 1.99843, 0.22 ) }
    dend_11 { pt3dadd( 2.27938, -123.597, 1.99968, 0.88 ) }
    dend_11 { pt3dadd( 2.28073, -123.95, 1.9922, 0.88 ) }
    dend_11 { pt3dadd( 2.25544, -124.522, 1.97006, 0.22 ) }
    dend_11 { pt3dadd( 2.19038, -125.235, 1.93276, 0.22 ) }
    dend_11 { pt3dadd( 2.18407, -125.289, 1.9299, 0.22 ) }
    dend_11 { pt3dadd( 2.10839, -125.794, 1.90394, 0.22 ) }
    dend_11 { pt3dadd( 1.98837, -126.462, 1.89607, 1.03 ) }
    dend_11 { pt3dadd( 1.92671, -126.755, 1.90109, 1.33 ) }
    dend_11 { pt3dadd( 1.88153, -126.952, 1.91126, 1.33 ) }
    dend_11 { pt3dadd( 1.69054, -127.828, 1.95112, 0.22 ) }
    dend_11 { pt3dadd( 1.55331, -128.467, 1.94218, 0.22 ) }
    dend_11 { pt3dadd( 1.46549, -128.86, 1.90858, 0.88 ) }
    dend_11 { pt3dadd( 1.40426, -129.134, 1.86959, 1.11 ) }
    dend_11 { pt3dadd( 1.35563, -129.352, 1.82911, 0.88 ) }
    dend_11 { pt3dadd( 1.18118, -130.204, 1.64128, 0.22 ) }
    dend_11 { pt3dadd( 1.03298, -130.897, 1.46321, 0.22 ) }
    dend_11 { pt3dadd( 0.950588, -131.287, 1.35575, 1.55 ) }
    dend_11 { pt3dadd( 0.877364, -131.63, 1.26348, 1.77 ) }
    dend_11 { pt3dadd( 0.795464, -132.008, 1.17309, 1.25 ) }
    dend_11 { pt3dadd( 0.637912, -132.76, 1.02677, 0.22 ) }
    dend_11 { pt3dadd( 0.489249, -133.52, 0.935692, 0.22 ) }
    dend_11 { pt3dadd( 0.483023, -133.56, 0.932961, 0.22 ) }
    dend_11 { pt3dadd( 0.428105, -134.235, 0.905038, 0.22 ) }
    dend_11 { pt3dadd( 0.427331, -134.291, 0.901438, 0.22 ) }
    dend_11 { pt3dadd( 0.463662, -134.908, 0.857909, 0.96 ) }
    dend_11 { pt3dadd( 0.493305, -135.3, 0.826595, 1.47 ) }
    dend_11 { pt3dadd( 0.536928, -135.725, 0.778055, 0.88 ) }
    dend_11 { pt3dadd( 0.570185, -136.114, 0.719744, 0.66 ) }
    dend_11 { pt3dadd( 0.643924, -137.006, 0.555834, 0.29 ) }
    dend_11 { pt3dadd( 0.666427, -137.356, 0.486191, 0.59 ) }
    dend_11 { pt3dadd( 0.6973, -137.948, 0.354864, 0.59 ) }
    dend_11 { pt3dadd( 0.729791, -138.56, 0.21725, 0.29 ) }
    dend_11 { pt3dadd( 0.734804, -138.622, 0.204925, 0.29 ) }
    dend_11 { pt3dadd( 0.824831, -139.386, 0.0772821, 0.29 ) }
    dend_11 { pt3dadd( 0.833025, -139.432, 0.0715641, 0.29 ) }
    dend_11 { pt3dadd( 0.91784, -139.815, 0.0285817, 0.74 ) }
    dend_11 { pt3dadd( 1.01405, -140.253, -0.0168543, 0.88 ) }
    dend_11 { pt3dadd( 1.13529, -140.951, -0.0891974, 0.22 ) }
    dend_11 { pt3dadd( 1.20643, -141.517, -0.151119, 0.22 ) }
    dend_11 { pt3dadd( 1.23913, -142.148, -0.238057, 1.99 ) }
    dend_11 { pt3dadd( 1.24022, -142.604, -0.314977, 2.43 ) }
    dend_11 { pt3dadd( 1.18429, -143.612, -0.509987, 0.22 ) }
    dend_11 { pt3dadd( 1.1231, -144.155, -0.629093, 0.44 ) }
    dend_11 { pt3dadd( 1.02167, -144.822, -0.790886, 0.37 ) }
    dend_11 { pt3dadd( 0.896884, -145.516, -0.964534, 0.22 ) }
    dend_11 { pt3dadd( 0.80116, -145.975, -1.07451, 1.03 ) }
    dend_11 { pt3dadd( 0.75149, -146.245, -1.14509, 1.25 ) }
    dend_11 { pt3dadd( 0.70079, -146.631, -1.25279, 0.96 ) }
    dend_11 { pt3dadd( 0.633841, -147.508, -1.49768, 0.15 ) }
    dend_11 { pt3dadd( 0.622563, -147.966, -1.62001, 0.74 ) }
    dend_11 { pt3dadd( 0.629658, -148.305, -1.70102, 0.96 ) }
    dend_11 { pt3dadd( 0.677119, -149.354, -1.93311, 0.22 ) }
    dend_11 { pt3dadd( 0.684315, -149.454, -1.95368, 0.22 ) }
    dend_11 { pt3dadd( 0.747162, -149.892, -2.03868, 0.22 ) }
    dend_11 { pt3dadd( 0.857051, -150.476, -2.13437, 0.22 ) }
    dend_11 { pt3dadd( 0.865998, -150.518, -2.14017, 0.22 ) }
    dend_11 { pt3dadd( 1.04207, -151.26, -2.23405, 2.5 ) }
    dend_11 { pt3dadd( 1.11449, -151.549, -2.26351, 2.73 ) }
    dend_11 { pt3dadd( 1.50711, -152.944, -2.41401, 0.22 ) }
    dend_11 { pt3dadd( 1.64919, -153.364, -2.46199, 0.52 ) }
    dend_11 { pt3dadd( 1.80405, -153.756, -2.5048, 0.52 ) }
    dend_11 { pt3dadd( 2.14377, -154.561, -2.57679, 0.22 ) }
    dend_11 { pt3dadd( 2.16493, -154.605, -2.58049, 0.22 ) }
    dend_11 { pt3dadd( 2.34723, -154.953, -2.60994, 0.22 ) }
    dend_11 { pt3dadd( 2.67013, -155.536, -2.63838, 1.18 ) }
    dend_11 { pt3dadd( 2.80205, -155.768, -2.64723, 1.69 ) }
    dend_11 { pt3dadd( 3.06952, -156.249, -2.65344, 1.33 ) }
    dend_11 { pt3dadd( 3.42292, -156.911, -2.62489, 0.22 ) }
    dend_11 { pt3dadd( 3.56148, -157.201, -2.60813, 0.22 ) }
    dend_11 { pt3dadd( 3.73433, -157.643, -2.58449, 1.47 ) }
    dend_11 { pt3dadd( 3.84153, -157.973, -2.56458, 1.69 ) }
    dend_11 { pt3dadd( 3.93728, -158.314, -2.55048, 1.69 ) }
    dend_11 { pt3dadd( 4.18165, -159.305, -2.51354, 0.29 ) }
    dend_11 { pt3dadd( 4.28211, -159.782, -2.49338, 0.29 ) }
    dend_11 { pt3dadd( 4.39225, -160.303, -2.47875, 1.03 ) }
    dend_11 { pt3dadd( 4.4095, -160.407, -2.47718, 1.33 ) }
    dend_11 { pt3dadd( 4.5157, -161.306, -2.46322, 0.22 ) }
    dend_11 { pt3dadd( 4.5376, -161.652, -2.45838, 0.22 ) }
    dend_11 { pt3dadd( 4.53409, -161.899, -2.45189, 1.03 ) }
    dend_11 { pt3dadd( 4.52184, -162.202, -2.42982, 1.03 ) }
    dend_11 { pt3dadd( 4.4456, -163.163, -2.32631, 0.22 ) }
    dend_11 { pt3dadd( 4.36969, -163.72, -2.25868, 1.33 ) }
    dend_11 { pt3dadd( 4.3255, -163.935, -2.2296, 1.47 ) }
    dend_11 { pt3dadd( 4.22979, -164.362, -2.19376, 1.55 ) }
    dend_11 { pt3dadd( 4.00474, -165.31, -2.14821, 0.22 ) }
    dend_11 { pt3dadd( 3.9241, -165.622, -2.14742, 0.22 ) }
    dend_11 { pt3dadd( 3.78377, -166.144, -2.16886, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_11 { pt3dadd( 3.67726, -166.529, -2.19508, 1.25 ) }
    dend_11 { pt3dadd( 3.42014, -167.503, -2.29677, 0.22 ) }
    dend_11 { pt3dadd( 3.40692, -167.555, -2.30378, 0.22 ) }
    dend_11 { pt3dadd( 3.18344, -168.534, -2.42937, 0.22 ) }
    dend_11 { pt3dadd( 3.13653, -168.755, -2.45378, 0.74 ) }
    dend_11 { pt3dadd( 3.09722, -168.948, -2.47344, 0.74 ) }
    dend_11 { pt3dadd( 2.90224, -169.921, -2.55601, 0.22 ) }
    dend_11 { pt3dadd( 2.73315, -170.76, -2.59907, 0.22 ) }
    dend_11 { pt3dadd( 2.53246, -171.857, -2.65319, 0.22 ) }
    dend_11 { pt3dadd( 2.47847, -172.214, -2.67027, 0.81 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 10/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -8.71375, -69.2727, -13.4813, 0.66 ) }
    dend_10 { pt3dadd( -9.2508, -71.2842, -13.136, 0.66 ) }
    dend_10 { pt3dadd( -9.4607, -72.0205, -12.9724, 0.52 ) }
    dend_10 { pt3dadd( -9.71295, -72.7878, -12.7758, 0.88 ) }
    dend_10 { pt3dadd( -9.87254, -73.2732, -12.6321, 1.03 ) }
    dend_10 { pt3dadd( -10.083, -73.9336, -12.4157, 0.96 ) }
    dend_10 { pt3dadd( -10.3989, -74.9555, -12.0603, 0.37 ) }
    dend_10 { pt3dadd( -10.6805, -75.9548, -11.6254, 0.29 ) }
    dend_10 { pt3dadd( -10.7987, -76.4673, -11.403, 0.29 ) }
    dend_10 { pt3dadd( -10.949, -77.5554, -10.92, 0.29 ) }
    dend_10 { pt3dadd( -10.968, -77.9057, -10.7709, 0.74 ) }
    dend_10 { pt3dadd( -10.9672, -78.0028, -10.7351, 0.74 ) }
    dend_10 { pt3dadd( -10.9491, -78.3857, -10.6285, 0.74 ) }
    dend_10 { pt3dadd( -10.8904, -79.1196, -10.4647, 0.59 ) }
    dend_10 { pt3dadd( -10.7963, -80.3398, -10.2348, 0.29 ) }
    dend_10 { pt3dadd( -10.7327, -81.5986, -10.0422, 0.29 ) }
    dend_10 { pt3dadd( -10.6946, -82.7881, -9.88433, 0.29 ) }
    dend_10 { pt3dadd( -10.6663, -84.1331, -9.72085, 0.29 ) }
    dend_10 { pt3dadd( -10.6444, -85.2117, -9.63994, 1.33 ) }
    dend_10 { pt3dadd( -10.6428, -85.3034, -9.63773, 1.33 ) }
    dend_10 { pt3dadd( -10.6234, -86.2391, -9.66774, 1.99 ) }
    dend_10 { pt3dadd( -10.5831, -86.8165, -9.70508, 2.21 ) }
    dend_10 { pt3dadd( -10.5366, -87.3143, -9.74892, 2.21 ) }
    dend_10 { pt3dadd( -10.3536, -88.9736, -9.92425, 0.29 ) }
    dend_10 { pt3dadd( -10.1842, -90.343, -10.0728, 0.29 ) }
    dend_10 { pt3dadd( -10.0753, -91.1384, -10.1552, 0.29 ) }
    dend_10 { pt3dadd( -9.98571, -91.6934, -10.2112, 0.96 ) }
    dend_10 { pt3dadd( -9.88211, -92.3553, -10.2646, 1.47 ) }
    dend_10 { pt3dadd( -9.81963, -92.76, -10.2866, 1.84 ) }
    dend_10 { pt3dadd( -9.67611, -93.5719, -10.2923, 0.88 ) }
    dend_10 { pt3dadd( -9.65836, -93.6475, -10.2965, 0.88 ) }
    dend_10 { pt3dadd( -9.45089, -94.4383, -10.3866, 0.29 ) }
    dend_10 { pt3dadd( -9.24595, -95.2112, -10.5068, 0.29 ) }
    dend_10 { pt3dadd( -9.22191, -95.2962, -10.5227, 0.29 ) }
    dend_10 { pt3dadd( -8.90961, -96.3737, -10.7475, 0.52 ) }
    dend_10 { pt3dadd( -8.55281, -97.5864, -11.0185, 0.52 ) }
    dend_10 { pt3dadd( -8.25338, -98.6137, -11.2405, 0.22 ) }
    dend_10 { pt3dadd( -8.0136, -99.4682, -11.4172, 1.47 ) }
    dend_10 { pt3dadd( -7.82472, -100.185, -11.5505, 2.06 ) }
    dend_10 { pt3dadd( -7.74245, -100.569, -11.6084, 2.36 ) }
    dend_10 { pt3dadd( -7.62376, -101.394, -11.6913, 1.69 ) }
    dend_10 { pt3dadd( -7.52734, -102.69, -11.7512, 0.74 ) }
    dend_10 { pt3dadd( -7.505, -103.867, -11.7631, 0.44 ) }
    dend_10 { pt3dadd( -7.54289, -105.109, -11.7669, 0.44 ) }
    dend_10 { pt3dadd( -7.5991, -105.859, -11.7662, 0.44 ) }
    dend_10 { pt3dadd( -7.73588, -107.312, -11.7679, 0.29 ) }
    dend_10 { pt3dadd( -7.80073, -108.052, -11.7776, 0.59 ) }
    dend_10 { pt3dadd( -7.85881, -108.825, -11.7978, 0.59 ) }
    dend_10 { pt3dadd( -7.8905, -109.637, -11.832, 0.29 ) }
    dend_10 { pt3dadd( -7.88939, -109.726, -11.8387, 0.29 ) }
    dend_10 { pt3dadd( -7.84315, -110.874, -11.9573, 0.29 ) }
    dend_10 { pt3dadd( -7.75193, -112.162, -12.1348, 0.29 ) }
    dend_10 { pt3dadd( -7.74429, -112.317, -12.1574, 0.29 ) }
    dend_10 { pt3dadd( -7.76853, -112.892, -12.2336, 0.29 ) }
    dend_10 { pt3dadd( -7.78457, -112.967, -12.2439, 0.29 ) }
    dend_10 { pt3dadd( -8.04906, -113.693, -12.4261, 0.29 ) }
    dend_10 { pt3dadd( -8.07808, -113.762, -12.4488, 0.29 ) }
    dend_10 { pt3dadd( -8.41147, -114.539, -12.7505, 0.29 ) }
    dend_10 { pt3dadd( -8.88361, -115.713, -13.2375, 2.28 ) }
    dend_10 { pt3dadd( -9.4816, -117.191, -13.8614, 2.65 ) }
    dend_10 { pt3dadd( -10.3061, -119.28, -14.746, 0.29 ) }
    dend_10 { pt3dadd( -10.7185, -120.348, -15.1853, 0.29 ) }
    dend_10 { pt3dadd( -11.0188, -121.088, -15.4775, 0.59 ) }
    dend_10 { pt3dadd( -11.1716, -121.447, -15.6183, 0.22 ) }
    dend_10 { pt3dadd( -11.5584, -122.238, -15.9196, 0.22 ) }
    dend_10 { pt3dadd( -11.904, -122.792, -16.1415, 0.22 ) }
    dend_10 { pt3dadd( -12.5721, -123.7, -16.5121, 1.03 ) }
    dend_10 { pt3dadd( -13.2086, -124.49, -16.8602, 1.92 ) }
    dend_10 { pt3dadd( -13.7488, -125.17, -17.1736, 2.06 ) }
    dend_10 { pt3dadd( -14.2691, -125.876, -17.535, 1.92 ) }
    dend_10 { pt3dadd( -15.6711, -128.092, -18.7459, 0.29 ) }
    dend_10 { pt3dadd( -16.0777, -128.848, -19.1626, 0.52 ) }
    dend_10 { pt3dadd( -16.1028, -128.904, -19.1926, 0.52 ) }
    dend_10 { pt3dadd( -16.3104, -129.491, -19.4687, 0.52 ) }
    dend_10 { pt3dadd( -16.5894, -130.505, -19.8445, 0.37 ) }
    dend_10 { pt3dadd( -16.7377, -131.376, -20.065, 0.29 ) }
    dend_10 { pt3dadd( -16.8109, -132.355, -20.2135, 0.29 ) }
    dend_10 { pt3dadd( -16.8711, -133.134, -20.3109, 0.88 ) }
    dend_10 { pt3dadd( -16.9047, -133.648, -20.3718, 0.88 ) }
    dend_10 { pt3dadd( -16.9416, -134.963, -20.5239, 0.22 ) }
    dend_10 { pt3dadd( -16.9165, -136.047, -20.6407, 1.55 ) }
    dend_10 { pt3dadd( -16.86, -136.711, -20.7229, 1.84 ) }
    dend_10 { pt3dadd( -16.7698, -137.302, -20.8026, 1.62 ) }
    dend_10 { pt3dadd( -16.4933, -138.722, -21.0419, 0.22 ) }
    dend_10 { pt3dadd( -16.2766, -139.702, -21.2243, 0.22 ) }
    dend_10 { pt3dadd( -16.1317, -140.321, -21.3395, 0.22 ) }
    dend_10 { pt3dadd( -16.0122, -140.96, -21.4412, 0.74 ) }
    dend_10 { pt3dadd( -15.9348, -141.529, -21.5119, 0.74 ) }
    dend_10 { pt3dadd( -15.8263, -142.789, -21.6299, 0.29 ) }
    dend_10 { pt3dadd( -15.8135, -143.526, -21.6615, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_10 { pt3dadd( -15.8514, -144.721, -21.6487, 0.29 ) }
    dend_10 { pt3dadd( -15.9073, -145.875, -21.5921, 1.77 ) }
    dend_10 { pt3dadd( -15.9443, -146.561, -21.5381, 2.21 ) }
    dend_10 { pt3dadd( -15.9832, -147.211, -21.4675, 2.21 ) }
    dend_10 { pt3dadd( -16.0591, -148.343, -21.3038, 0.74 ) }
    dend_10 { pt3dadd( -16.1581, -149.404, -21.1651, 0.22 ) }
    dend_10 { pt3dadd( -16.3105, -150.703, -21.0196, 0.22 ) }
    dend_10 { pt3dadd( -16.3978, -151.384, -20.9616, 0.88 ) }
    dend_10 { pt3dadd( -16.4768, -152.026, -20.9231, 1.03 ) }
    dend_10 { pt3dadd( -16.4959, -152.195, -20.9182, 1.03 ) }
    dend_10 { pt3dadd( -16.6233, -153.414, -20.9344, 0.22 ) }
    dend_10 { pt3dadd( -16.7132, -154.22, -20.9674, 0.22 ) }
    dend_10 { pt3dadd( -16.732, -154.376, -20.9728, 0.22 ) }
    dend_10 { pt3dadd( -16.8372, -155.276, -21.0041, 0.22 ) }
    dend_10 { pt3dadd( -16.9135, -155.874, -21.0123, 0.22 ) }
    dend_10 { pt3dadd( -17.0577, -156.867, -21.0128, 1.33 ) }
    dend_10 { pt3dadd( -17.1506, -157.437, -21.0011, 1.77 ) }
    dend_10 { pt3dadd( -17.2978, -158.304, -20.9606, 1.77 ) }
    dend_10 { pt3dadd( -17.4078, -158.993, -20.9184, 0.88 ) }
    dend_10 { pt3dadd( -17.6261, -160.372, -20.8183, 0.29 ) }
    dend_10 { pt3dadd( -17.6765, -160.889, -20.7846, 0.74 ) }
    dend_10 { pt3dadd( -17.7275, -161.448, -20.7628, 0.74 ) }
    dend_10 { pt3dadd( -17.8325, -162.766, -20.7479, 0.22 ) }
    dend_10 { pt3dadd( -17.8727, -163.347, -20.7523, 0.22 ) }
    dend_10 { pt3dadd( -17.8802, -163.45, -20.755, 0.22 ) }
    dend_10 { pt3dadd( -17.9689, -164.504, -20.8131, 0.96 ) }
    dend_10 { pt3dadd( -18.134, -166.037, -20.903, 1.18 ) }
    dend_10 { pt3dadd( -18.1967, -166.475, -20.933, 1.47 ) }
    dend_10 { pt3dadd( -18.2156, -166.576, -20.9408, 1.47 ) }
    dend_10 { pt3dadd( -18.3225, -167.105, -20.9669, 1.47 ) }
    dend_10 { pt3dadd( -18.5894, -168.576, -21.0062, 0.22 ) }
    dend_10 { pt3dadd( -18.6667, -169.06, -21.0174, 0.22 ) }
    dend_10 { pt3dadd( -18.7207, -169.716, -21.031, 0.74 ) }
    dend_10 { pt3dadd( -18.7571, -170.033, -21.0385, 0.96 ) }
    dend_10 { pt3dadd( -18.7815, -170.201, -21.0422, 0.96 ) }
    dend_10 { pt3dadd( -18.8516, -170.602, -21.0542, 0.96 ) }
    dend_10 { pt3dadd( -19.0597, -171.721, -21.1078, 0.22 ) }
    dend_10 { pt3dadd( -19.1765, -172.4, -21.1459, 0.29 ) }
    dend_10 { pt3dadd( -19.3085, -173.21, -21.2582, 0.29 ) }
    dend_10 { pt3dadd( -19.417, -173.768, -21.3961, 0.29 ) }
    dend_10 { pt3dadd( -19.6274, -174.765, -21.7058, 1.25 ) }
    dend_10 { pt3dadd( -19.7612, -175.371, -21.9241, 1.69 ) }
    dend_10 { pt3dadd( -19.8672, -175.836, -22.1207, 1.69 ) }
    dend_10 { pt3dadd( -20.1911, -177.201, -22.7895, 1.03 ) }
    dend_10 { pt3dadd( -20.5568, -178.611, -23.5026, 0.22 ) }
    dend_10 { pt3dadd( -20.7137, -179.18, -23.7803, 0.22 ) }
    dend_10 { pt3dadd( -21.1231, -180.597, -24.437, 1.99 ) }
    dend_10 { pt3dadd( -21.3926, -181.493, -24.8168, 2.5 ) }
    dend_10 { pt3dadd( -21.9325, -183.376, -25.4995, 0.29 ) }
    dend_10 { pt3dadd( -22.1717, -184.238, -25.7438, 0.22 ) }
    dend_10 { pt3dadd( -22.4039, -185.151, -25.94, 0.52 ) }
    dend_10 { pt3dadd( -22.5039, -185.547, -26.0053, 0.59 ) }
    dend_10 { pt3dadd( -22.8118, -186.865, -26.1311, 0.22 ) }
    dend_10 { pt3dadd( -23.0219, -187.955, -26.1604, 0.22 ) }
    dend_10 { pt3dadd( -23.1267, -188.617, -26.1396, 0.22 ) }
    dend_10 { pt3dadd( -23.324, -189.962, -26.0856, 1.33 ) }
    dend_10 { pt3dadd( -23.4342, -190.594, -26.0564, 1.69 ) }
    dend_10 { pt3dadd( -23.5624, -191.228, -26.0195, 1.47 ) }
    dend_10 { pt3dadd( -23.7847, -192.098, -25.9672, 0.52 ) }
    dend_10 { pt3dadd( -23.9892, -192.778, -25.9347, 0.29 ) }
    dend_10 { pt3dadd( -24.5822, -194.492, -25.8589, 0.29 ) }
    dend_10 { pt3dadd( -25.0411, -195.619, -25.8201, 1.11 ) }
    dend_10 { pt3dadd( -25.3174, -196.259, -25.8112, 1.47 ) }
    dend_10 { pt3dadd( -26.0812, -197.914, -25.8052, 0.22 ) }
    dend_10 { pt3dadd( -26.3748, -198.552, -25.8137, 1.77 ) }
    dend_10 { pt3dadd( -26.7743, -199.429, -25.8407, 2.14 ) }
    dend_10 { pt3dadd( -27.0123, -199.967, -25.868, 1.69 ) }
    dend_10 { pt3dadd( -27.5282, -201.305, -25.9468, 0.22 ) }
    dend_10 { pt3dadd( -27.5525, -201.382, -25.9524, 0.22 ) }
    dend_10 { pt3dadd( -27.7231, -202.065, -26.0105, 0.22 ) }
    dend_10 { pt3dadd( -27.8886, -202.786, -26.1008, 0.52 ) }
    dend_10 { pt3dadd( -27.9338, -203.005, -26.1356, 0.52 ) }
    dend_10 { pt3dadd( -28.1387, -204.091, -26.3245, 0.22 ) }
    dend_10 { pt3dadd( -28.2596, -204.758, -26.4541, 0.22 ) }
    dend_10 { pt3dadd( -28.406, -205.711, -26.6619, 1.99 ) }
    dend_10 { pt3dadd( -28.5213, -206.586, -26.8772, 2.5 ) }
    dend_10 { pt3dadd( -28.6164, -207.79, -27.2625, 0.81 ) }
    dend_10 { pt3dadd( -28.6677, -208.579, -27.5394, 0.22 ) }
    dend_10 { pt3dadd( -28.6719, -208.642, -27.5615, 0.22 ) }
    dend_10 { pt3dadd( -28.7081, -209.069, -27.704, 0.52 ) }
    dend_10 { pt3dadd( -28.7148, -209.132, -27.7235, 0.52 ) }
    dend_10 { pt3dadd( -28.9637, -210.4, -28.0598, 0.22 ) }
    dend_10 { pt3dadd( -29.2736, -211.583, -28.3249, 0.22 ) }
    dend_10 { pt3dadd( -29.5786, -212.579, -28.5192, 0.22 ) }
    dend_10 { pt3dadd( -29.8966, -213.461, -28.6623, 1.33 ) }
    dend_10 { pt3dadd( -30.0536, -213.84, -28.7107, 1.33 ) }
    dend_10 { pt3dadd( -30.7193, -215.296, -28.8565, 0.22 ) }
    dend_10 { pt3dadd( -31.257, -216.218, -28.8817, 0.22 ) }
    dend_10 { pt3dadd( -31.2982, -216.276, -28.8816, 0.22 ) }
    dend_10 { pt3dadd( -32.3983, -217.605, -28.8192, 2.28 ) }
    dend_10 { pt3dadd( -32.7422, -217.961, -28.7817, 2.73 ) }
    dend_10 { pt3dadd( -33.0869, -218.281, -28.7362, 2.73 ) }
    dend_10 { pt3dadd( -34.8024, -219.646, -28.4714, 0.22 ) }
    dend_10 { pt3dadd( -35.1533, -219.876, -28.4267, 0.74 ) }
    dend_10 { pt3dadd( -35.5185, -220.092, -28.3857, 0.96 ) }
    dend_10 { pt3dadd( -36.7461, -220.691, -28.2991, 0.22 ) }
    dend_10 { pt3dadd( -37.3242, -220.937, -28.2861, 1.03 ) }
    dend_10 { pt3dadd( -37.7051, -221.096, -28.3508, 1.03 ) }
    dend_10 { pt3dadd( -39.2631, -221.75, -28.9377, 0.22 ) }
    dend_10 { pt3dadd( -39.3294, -221.779, -28.9733, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_10 { pt3dadd( -40.2473, -222.188, -29.5364, 1.4 ) }
    dend_10 { pt3dadd( -40.4975, -222.302, -29.7068, 1.4 ) }
    dend_10 { pt3dadd( -42.9443, -223.465, -31.4213, 0.59 ) }
    dend_10 { pt3dadd( -43.5048, -223.749, -31.8191, 1.03 ) }
    dend_10 { pt3dadd( -45.1976, -224.696, -32.9665, 0.22 ) }
    dend_10 { pt3dadd( -46.0137, -225.173, -33.4488, 0.22 ) }
    dend_10 { pt3dadd( -46.0667, -225.206, -33.4761, 0.22 ) }
    dend_10 { pt3dadd( -46.7107, -225.618, -33.7501, 1.11 ) }
    dend_10 { pt3dadd( -47.1787, -225.914, -33.885, 1.25 ) }
    dend_10 { pt3dadd( -48.8253, -226.995, -34.2927, 0.22 ) }
    dend_10 { pt3dadd( -49.3595, -227.361, -34.404, 0.66 ) }
    dend_10 { pt3dadd( -50.8332, -228.383, -34.7387, 0.22 ) }
    dend_10 { pt3dadd( -50.9001, -228.43, -34.7529, 0.22 ) }
    dend_10 { pt3dadd( -51.3509, -228.739, -34.8425, 0.96 ) }
    dend_10 { pt3dadd( -51.7726, -229.011, -34.9084, 1.4 ) }
    dend_10 { pt3dadd( -52.42, -229.414, -34.9722, 0.96 ) }
    dend_10 { pt3dadd( -53.5702, -230.136, -35.0252, 0.22 ) }
    dend_10 { pt3dadd( -54.2007, -230.549, -35.0168, 1.62 ) }
    dend_10 { pt3dadd( -54.7115, -230.897, -35.0045, 1.99 ) }
    dend_10 { pt3dadd( -56.3104, -232.055, -34.9243, 0.22 ) }
    dend_10 { pt3dadd( -56.7648, -232.416, -34.8957, 0.37 ) }
    dend_10 { pt3dadd( -56.9941, -232.615, -34.8708, 0.37 ) }
    dend_10 { pt3dadd( -57.58, -233.149, -34.7931, 0.22 ) }
    dend_10 { pt3dadd( -58.0566, -233.613, -34.7399, 0.22 ) }
    dend_10 { pt3dadd( -58.743, -234.305, -34.6736, 0.52 ) }
    dend_10 { pt3dadd( -59.5366, -235.123, -34.6148, 0.22 ) }
    dend_10 { pt3dadd( -59.9852, -235.564, -34.5963, 0.96 ) }
    dend_10 { pt3dadd( -60.4412, -235.982, -34.6169, 0.96 ) }
    dend_10 { pt3dadd( -61.5851, -237.033, -34.7432, 0.22 ) }
    dend_10 { pt3dadd( -62.4718, -237.828, -34.9616, 1.18 ) }
    dend_10 { pt3dadd( -62.8855, -238.19, -35.1465, 1.55 ) }
    dend_10 { pt3dadd( -62.9329, -238.231, -35.1731, 1.55 ) }
    dend_10 { pt3dadd( -64.2964, -239.416, -36.0508, 0.29 ) }
    dend_10 { pt3dadd( -64.9554, -239.98, -36.5047, 0.29 ) }
    dend_10 { pt3dadd( -66.2877, -241.067, -37.4456, 1.55 ) }
    dend_10 { pt3dadd( -68.3347, -242.671, -38.8912, 0.29 ) }
    dend_10 { pt3dadd( -68.3988, -242.72, -38.9347, 0.29 ) }
    dend_10 { pt3dadd( -68.9664, -243.152, -39.3049, 1.18 ) }
    dend_10 { pt3dadd( -69.966, -243.901, -39.9318, 0.22 ) }
    dend_10 { pt3dadd( -70.7767, -244.505, -40.4162, 1.25 ) }
    dend_10 { pt3dadd( -72.0209, -245.506, -41.1179, 0.22 ) }
    dend_10 { pt3dadd( -72.2135, -245.666, -41.2157, 0.74 ) }
    dend_10 { pt3dadd( -73.0399, -246.387, -41.6363, 0.22 ) }
    dend_10 { pt3dadd( -73.0856, -246.431, -41.6603, 0.22 ) }
    dend_10 { pt3dadd( -73.7521, -247.165, -42.0228, 1.11 ) }
    dend_10 { pt3dadd( -74.2107, -247.725, -42.2705, 1.47 ) }
    dend_10 { pt3dadd( -75.1806, -249.015, -42.752, 0.22 ) }
    dend_10 { pt3dadd( -75.4356, -249.362, -42.8724, 0.59 ) }
    dend_10 { pt3dadd( -76.0149, -250.169, -43.1195, 1.18 ) }
    dend_10 { pt3dadd( -76.0611, -250.234, -43.1389, 1.18 ) }
    dend_10 { pt3dadd( -76.6134, -251.042, -43.3592, 1.18 ) }
    dend_10 { pt3dadd( -77.6102, -252.513, -43.7253, 0.22 ) }
    dend_10 { pt3dadd( -78.1125, -253.316, -43.9109, 1.25 ) }
    dend_10 { pt3dadd( -78.3134, -253.633, -43.9807, 1.25 ) }
    dend_10 { pt3dadd( -79.0648, -254.72, -44.2209, 0.29 ) }
    dend_10 { pt3dadd( -79.5048, -255.318, -44.3594, 0.96 ) }
    dend_10 { pt3dadd( -80.5786, -256.839, -44.6279, 0.29 ) }
    dend_10 { pt3dadd( -81.3067, -257.88, -44.7438, 0.44 ) }
    dend_10 { pt3dadd( -82.0919, -258.988, -44.7991, 0.22 ) }
    dend_10 { pt3dadd( -82.8408, -260.006, -44.7863, 1.18 ) }
    dend_10 { pt3dadd( -83.3519, -260.65, -44.6932, 1.77 ) }
    dend_10 { pt3dadd( -84.5939, -262.084, -44.278, 0.29 ) }
    dend_10 { pt3dadd( -85.0851, -262.602, -44.0165, 0.29 ) }
    dend_10 { pt3dadd( -85.4468, -262.931, -43.7586, 0.29 ) }
    dend_10 { pt3dadd( -85.7809, -263.184, -43.488, 0.88 ) }
    dend_10 { pt3dadd( -86.8272, -263.89, -42.6145, 0.22 ) }
    dend_10 { pt3dadd( -87.5326, -264.276, -42.092, 1.03 ) }
    dend_10 { pt3dadd( -87.9263, -264.451, -41.8416, 1.03 ) }
    dend_10 { pt3dadd( -88.7243, -264.764, -41.3322, 0.22 ) }
    dend_10 { pt3dadd( -90.8548, -265.464, -40.0117, 0.22 ) }
    dend_10 { pt3dadd( -90.9224, -265.482, -39.9716, 0.22 ) }
    dend_10 { pt3dadd( -92.3169, -265.688, -39.2072, 0.81 ) }
    dend_10 { pt3dadd( -92.5908, -265.705, -39.0709, 1.03 ) }
    dend_10 { pt3dadd( -93.3974, -265.673, -38.652, 0.22 ) }
    dend_10 { pt3dadd( -94.3864, -265.538, -38.1343, 0.22 ) }
    dend_10 { pt3dadd( -94.4538, -265.523, -38.0932, 0.22 ) }
    dend_10 { pt3dadd( -95.6139, -265.262, -37.3852, 1.33 ) }
    dend_10 { pt3dadd( -96.1312, -265.166, -37.0872, 1.55 ) }
    dend_10 { pt3dadd( -97.9174, -264.956, -36.1789, 0.22 ) }
    dend_10 { pt3dadd( -98.4356, -264.926, -35.9441, 0.59 ) }
    dend_10 { pt3dadd( -99.2619, -264.924, -35.6411, 0.59 ) }
    dend_10 { pt3dadd( -100.161, -264.961, -35.3804, 0.44 ) }
    dend_10 { pt3dadd( -101.611, -265.094, -35.0776, 0.22 ) }
    dend_10 { pt3dadd( -102.535, -265.187, -34.9303, 1.03 ) }
    dend_10 { pt3dadd( -102.872, -265.233, -34.8908, 1.03 ) }
    dend_10 { pt3dadd( -104.291, -265.411, -34.6962, 0.22 ) }
    dend_10 { pt3dadd( -104.9, -265.46, -34.5957, 0.22 ) }
    dend_10 { pt3dadd( -104.966, -265.461, -34.5788, 0.22 ) }
    dend_10 { pt3dadd( -106.214, -265.374, -34.2223, 0.22 ) }
    dend_10 { pt3dadd( -107.345, -265.234, -33.8803, 0.22 ) }
    dend_10 { pt3dadd( -107.41, -265.224, -33.8605, 0.22 ) }
    dend_10 { pt3dadd( -108.619, -265.005, -33.5613, 1.11 ) }
    dend_10 { pt3dadd( -109.093, -264.928, -33.5072, 1.55 ) }
    dend_10 { pt3dadd( -110.429, -264.74, -33.4714, 0.22 ) }
    dend_10 { pt3dadd( -111.444, -264.65, -33.5499, 0.22 ) }
    dend_10 { pt3dadd( -111.964, -264.612, -33.6193, 0.66 ) }
    dend_10 { pt3dadd( -113.479, -264.552, -33.8691, 0.22 ) }
    dend_10 { pt3dadd( -114.825, -264.534, -34.1197, 1.25 ) }
    dend_10 { pt3dadd( -115.34, -264.541, -34.2435, 1.47 ) }
    dend_10 { pt3dadd( -116.988, -264.671, -34.6463, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_10 { pt3dadd( -117.065, -264.683, -34.6639, 0.22 ) }
    dend_10 { pt3dadd( -117.662, -264.818, -34.7854, 1.03 ) }
    dend_10 { pt3dadd( -118.556, -265.094, -34.9219, 1.33 ) }
    dend_10 { pt3dadd( -120.823, -265.875, -35.2312, 0.22 ) }
    dend_10 { pt3dadd( -122.525, -266.506, -35.469, 0.22 ) }
    dend_10 { pt3dadd( -123.809, -267.028, -35.6307, 0.22 ) }
    dend_10 { pt3dadd( -124.278, -267.233, -35.6876, 1.03 ) }
    dend_10 { pt3dadd( -124.862, -267.527, -35.7501, 1.25 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 8/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -88.6592, 823.65, 18.4182, 0.88 ) }
    dend_63 { pt3dadd( -89.2891, 824.95, 18.3091, 0.88 ) }
    dend_63 { pt3dadd( -90.2325, 826.955, 18.1197, 0.15 ) }
    dend_63 { pt3dadd( -90.7237, 828.273, 17.9572, 0.15 ) }
    dend_63 { pt3dadd( -90.7715, 828.409, 17.9366, 0.15 ) }
    dend_63 { pt3dadd( -91.0206, 829.121, 17.8293, 1.03 ) }
    dend_63 { pt3dadd( -91.1329, 829.442, 17.7808, 1.4 ) }
    dend_63 { pt3dadd( -91.2184, 829.746, 17.7205, 1.4 ) }
    dend_63 { pt3dadd( -91.9479, 832.435, 17.1617, 0.22 ) }
    dend_63 { pt3dadd( -92.4555, 834.443, 16.7663, 0.22 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 18/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -88.6592, 823.65, 18.4182, 0.22 ) }
    dend_62 { pt3dadd( -88.52, 825.289, 19.4095, 0.22 ) }
    dend_62 { pt3dadd( -88.4809, 826.034, 19.8877, 0.81 ) }
    dend_62 { pt3dadd( -88.4728, 826.267, 20.0422, 1.03 ) }
    dend_62 { pt3dadd( -88.4688, 826.665, 20.3011, 0.81 ) }
    dend_62 { pt3dadd( -88.4734, 828.429, 21.4368, 0.22 ) }
    dend_62 { pt3dadd( -88.4743, 828.708, 21.603, 0.44 ) }
    dend_62 { pt3dadd( -88.5118, 829.328, 21.9381, 0.15 ) }
    dend_62 { pt3dadd( -88.5144, 829.373, 21.9598, 0.15 ) }
    dend_62 { pt3dadd( -88.5704, 830.06, 22.2515, 1.03 ) }
    dend_62 { pt3dadd( -88.579, 830.145, 22.2824, 1.03 ) }
    dend_62 { pt3dadd( -88.6741, 831.362, 22.6473, 0.15 ) }
    dend_62 { pt3dadd( -88.6964, 831.656, 22.7322, 0.29 ) }
    dend_62 { pt3dadd( -88.7916, 833.02, 23.1151, 0.15 ) }
    dend_62 { pt3dadd( -88.8234, 833.496, 23.2553, 0.66 ) }
    dend_62 { pt3dadd( -88.829, 833.56, 23.2767, 0.66 ) }
    dend_62 { pt3dadd( -88.964, 834.691, 23.6938, 0.15 ) }
    dend_62 { pt3dadd( -89.0835, 835.475, 24.0213, 0.66 ) }
    dend_62 { pt3dadd( -89.1873, 836.153, 24.3144, 0.22 ) }
    dend_62 { pt3dadd( -89.1957, 836.215, 24.3434, 0.22 ) }
    dend_62 { pt3dadd( -89.2899, 836.891, 24.679, 0.74 ) }
    dend_62 { pt3dadd( -89.3196, 837.056, 24.7634, 0.74 ) }
    dend_62 { pt3dadd( -89.3702, 837.196, 24.8417, 0.74 ) }
    // Section: dend_52, id: dend_52, parent: dend_30 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -87.5695, 783.784, 53.3342, 0.37 ) }
    dend_52 { pt3dadd( -88.3586, 784.248, 52.8653, 0.37 ) }
    dend_52 { pt3dadd( -88.6991, 784.453, 52.66, 0.37 ) }
    dend_52 { pt3dadd( -88.7357, 784.475, 52.6426, 0.37 ) }
    dend_52 { pt3dadd( -89.0528, 784.66, 52.513, 0.37 ) }
    dend_52 { pt3dadd( -89.4718, 784.908, 52.3698, 0.88 ) }
    dend_52 { pt3dadd( -89.7113, 785.05, 52.2988, 0.88 ) }
    dend_52 { pt3dadd( -89.7511, 785.075, 52.2932, 0.88 ) }
    dend_52 { pt3dadd( -90.3535, 785.454, 52.2741, 0.88 ) }
    dend_52 { pt3dadd( -90.3816, 785.473, 52.2757, 0.88 ) }
    dend_52 { pt3dadd( -90.6181, 785.653, 52.313, 1.03 ) }
    dend_52 { pt3dadd( -90.6628, 785.688, 52.319, 1.03 ) }
    dend_52 { pt3dadd( -90.8782, 785.848, 52.3308, 1.03 ) }
    dend_52 { pt3dadd( -90.9408, 785.893, 52.3306, 1.03 ) }
    dend_52 { pt3dadd( -91.3007, 786.144, 52.3048, 0.74 ) }
    dend_52 { pt3dadd( -91.7712, 786.458, 52.2613, 0.29 ) }
    dend_52 { pt3dadd( -92.2458, 786.759, 52.2198, 0.29 ) }
    dend_52 { pt3dadd( -92.7383, 787.076, 52.1895, 0.29 ) }
    dend_52 { pt3dadd( -92.7997, 787.117, 52.1893, 0.29 ) }
    dend_52 { pt3dadd( -93.1138, 787.337, 52.2104, 0.22 ) }
    dend_52 { pt3dadd( -93.1551, 787.369, 52.2185, 0.22 ) }
    dend_52 { pt3dadd( -93.4592, 787.624, 52.3354, 0.52 ) }
    dend_52 { pt3dadd( -93.7316, 787.939, 52.5666, 1.18 ) }
    dend_52 { pt3dadd( -93.9107, 788.201, 52.7814, 1.18 ) }
    dend_52 { pt3dadd( -93.927, 788.228, 52.8048, 1.18 ) }
    dend_52 { pt3dadd( -93.9922, 788.373, 52.9427, 1.18 ) }
    dend_52 { pt3dadd( -94.0006, 788.396, 52.9662, 1.18 ) }
    dend_52 { pt3dadd( -94.0505, 788.76, 53.3943, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 69/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -87.5695, 783.784, 53.3342, 0.52 ) }
    dend_31 { pt3dadd( -87.3371, 784.535, 53.7932, 0.52 ) }
    dend_31 { pt3dadd( -87.1468, 785.204, 54.2131, 0.37 ) }
    dend_31 { pt3dadd( -87.1373, 785.239, 54.2351, 0.37 ) }
    dend_31 { pt3dadd( -87.0203, 785.706, 54.531, 0.37 ) }
    dend_31 { pt3dadd( -86.94, 786.041, 54.7441, 0.74 ) }
    dend_31 { pt3dadd( -86.827, 786.559, 55.0694, 0.44 ) }
    dend_31 { pt3dadd( -86.7329, 787.255, 55.4788, 0.37 ) }
    dend_31 { pt3dadd( -86.7294, 787.286, 55.4973, 0.37 ) }
    dend_31 { pt3dadd( -86.7048, 787.515, 55.6347, 0.37 ) }
    dend_31 { pt3dadd( -86.7014, 787.552, 55.6572, 0.37 ) }
    dend_31 { pt3dadd( -86.6582, 788.168, 56.0065, 0.88 ) }
    dend_31 { pt3dadd( -86.6306, 788.621, 56.2077, 1.11 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 82/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -92.4555, 834.443, 16.7663, 0.22 ) }
    dend_65 { pt3dadd( -92.357, 833.639, 15.2078, 0.22 ) }
    dend_65 { pt3dadd( -92.3163, 833.424, 14.7775, 1.25 ) }
    dend_65 { pt3dadd( -92.1396, 832.637, 13.1774, 0.22 ) }
    dend_65 { pt3dadd( -92.0772, 832.364, 12.6065, 0.96 ) }
    dend_65 { pt3dadd( -91.9153, 831.6, 10.9786, 0.22 ) }
    dend_65 { pt3dadd( -91.9071, 831.569, 10.9099, 0.22 ) }
    dend_65 { pt3dadd( -91.7199, 831.03, 9.72033, 0.22 ) }
    dend_65 { pt3dadd( -91.7096, 831.008, 9.67098, 0.22 ) }
    dend_65 { pt3dadd( -91.5737, 830.775, 9.17003, 0.74 ) }
    dend_65 { pt3dadd( -91.505, 830.669, 8.94012, 0.88 ) }
    dend_65 { pt3dadd( -91.146, 829.972, 7.47548, 0.22 ) }
    dend_65 { pt3dadd( -91.1371, 829.948, 7.42656, 0.22 ) }
    dend_65 { pt3dadd( -90.94, 829.413, 6.40378, 0.22 ) }
    dend_65 { pt3dadd( -90.8068, 829.067, 5.76498, 0.22 ) }
    dend_65 { pt3dadd( -90.795, 829.04, 5.71831, 0.22 ) }
    dend_65 { pt3dadd( -90.5586, 828.503, 4.82911, 1.11 ) }
    dend_65 { pt3dadd( -90.5958, 828.083, 4.20126, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 0/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -92.4555, 834.443, 16.7663, 0.96 ) }
    dend_64 { pt3dadd( -92.7192, 835.262, 16.573, 0.96 ) }
    dend_64 { pt3dadd( -92.7487, 835.349, 16.5547, 0.96 ) }
    dend_64 { pt3dadd( -92.9036, 835.8, 16.4669, 1.18 ) }
    dend_64 { pt3dadd( -93.2104, 836.694, 16.3004, 0.88 ) }
    dend_64 { pt3dadd( -94.5351, 840.594, 15.5987, 0.15 ) }
    dend_64 { pt3dadd( -94.5656, 840.685, 15.5829, 0.15 ) }
    dend_64 { pt3dadd( -95.285, 842.884, 15.2008, 0.15 ) }
    dend_64 { pt3dadd( -95.7249, 844.355, 14.9208, 0.96 ) }
    dend_64 { pt3dadd( -95.8982, 845.001, 14.7916, 1.33 ) }
    dend_64 { pt3dadd( -95.9215, 845.103, 14.771, 1.33 ) }
    dend_64 { pt3dadd( -95.9673, 845.391, 14.7171, 1.33 ) }
    dend_64 { pt3dadd( -95.9886, 845.559, 14.6837, 1.33 ) }
    dend_64 { pt3dadd( -96.2203, 848.062, 14.1879, 0.15 ) }
    dend_64 { pt3dadd( -96.2758, 848.647, 14.0844, 0.44 ) }
    dend_64 { pt3dadd( -96.3341, 849.22, 13.9886, 0.44 ) }
    dend_64 { pt3dadd( -96.592, 851.264, 13.6711, 0.22 ) }
    dend_64 { pt3dadd( -96.6237, 851.462, 13.6422, 0.22 ) }
    dend_64 { pt3dadd( -96.9661, 852.96, 13.4361, 0.81 ) }
    dend_64 { pt3dadd( -97.3562, 854.281, 13.269, 0.22 ) }
    dend_64 { pt3dadd( -97.4104, 854.443, 13.2455, 0.22 ) }
    dend_64 { pt3dadd( -97.7938, 855.449, 13.0809, 1.18 ) }
    dend_64 { pt3dadd( -98.009, 855.954, 12.9939, 1.33 ) }
    dend_64 { pt3dadd( -99.2309, 858.492, 12.4093, 0.22 ) }
    dend_64 { pt3dadd( -99.3198, 858.651, 12.3631, 0.22 ) }
    dend_64 { pt3dadd( -99.698, 859.272, 12.1628, 0.22 ) }
    dend_64 { pt3dadd( -100.24, 860.076, 11.8727, 1.03 ) }
    dend_64 { pt3dadd( -100.684, 860.679, 11.6262, 1.33 ) }
    dend_64 { pt3dadd( -101.973, 862.334, 10.8637, 0.15 ) }
    dend_64 { pt3dadd( -102.681, 863.121, 10.4211, 0.15 ) }
    dend_64 { pt3dadd( -102.74, 863.185, 10.3835, 0.15 ) }
    dend_64 { pt3dadd( -103.685, 864.162, 9.76283, 0.15 ) }
    dend_64 { pt3dadd( -103.747, 864.221, 9.7215, 0.15 ) }
    dend_64 { pt3dadd( -104.649, 865.008, 9.11698, 1.03 ) }
    dend_64 { pt3dadd( -105.21, 865.463, 8.77441, 1.4 ) }
    // Section: dend_60, id: dend_60, parent: dend_52 (entry count 35/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -94.0505, 788.76, 53.3943, 0.52 ) }
    dend_60 { pt3dadd( -93.8581, 790.565, 52.6802, 0.52 ) }
    dend_60 { pt3dadd( -93.8351, 790.953, 52.5521, 0.52 ) }
    dend_60 { pt3dadd( -93.8305, 791.018, 52.5325, 0.52 ) }
    dend_60 { pt3dadd( -93.7559, 791.932, 52.2719, 0.37 ) }
    dend_60 { pt3dadd( -93.7489, 791.998, 52.2545, 0.37 ) }
    dend_60 { pt3dadd( -93.6, 792.947, 52.0271, 0.37 ) }
    dend_60 { pt3dadd( -93.4603, 793.748, 51.9182, 1.03 ) }
    dend_60 { pt3dadd( -93.3213, 794.416, 51.839, 0.88 ) }
    dend_60 { pt3dadd( -93.3042, 794.491, 51.8305, 0.88 ) }
    dend_60 { pt3dadd( -93.1246, 795.249, 51.7508, 0.59 ) }
    dend_60 { pt3dadd( -92.7247, 796.98, 51.481, 0.22 ) }
    dend_60 { pt3dadd( -92.4875, 798.105, 51.2764, 0.22 ) }
    dend_60 { pt3dadd( -92.4736, 798.168, 51.2621, 0.22 ) }
    dend_60 { pt3dadd( -92.2841, 799.085, 51.0255, 0.88 ) }
    dend_60 { pt3dadd( -92.1692, 799.675, 50.8729, 1.11 ) }
    dend_60 { pt3dadd( -91.8399, 801.54, 50.4163, 0.29 ) }
    dend_60 { pt3dadd( -91.7345, 802.147, 50.2814, 0.22 ) }
    dend_60 { pt3dadd( -91.4872, 803.17, 50.0582, 0.22 ) }
    dend_60 { pt3dadd( -91.4687, 803.234, 50.0459, 0.22 ) }
    dend_60 { pt3dadd( -91.0398, 804.642, 49.849, 0.22 ) }
    dend_60 { pt3dadd( -90.7518, 805.577, 49.7624, 1.33 ) }
    dend_60 { pt3dadd( -90.6122, 806.016, 49.7461, 1.33 ) }
    dend_60 { pt3dadd( -89.9938, 807.927, 49.6581, 0.22 ) }
    dend_60 { pt3dadd( -89.9734, 807.992, 49.6549, 0.22 ) }
    dend_60 { pt3dadd( -89.6032, 809.17, 49.5706, 0.22 ) }
    dend_60 { pt3dadd( -89.3402, 809.987, 49.4755, 0.81 ) }
    dend_60 { pt3dadd( -88.8128, 811.694, 49.2696, 0.22 ) }
    dend_60 { pt3dadd( -88.5753, 812.506, 49.1931, 0.81 ) }
    dend_60 { pt3dadd( -88.5564, 812.572, 49.1916, 0.81 ) }
    dend_60 { pt3dadd( -88.4621, 812.869, 49.1852, 0.81 ) }
    dend_60 { pt3dadd( -87.9991, 814.107, 49.166, 0.22 ) }
    dend_60 { pt3dadd( -87.644, 814.991, 49.1792, 1.4 ) }
    dend_60 { pt3dadd( -87.4287, 815.542, 49.2209, 1.77 ) }
    dend_60 { pt3dadd( -87.0911, 816.335, 49.3151, 1.18 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 70/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -94.0505, 788.76, 53.3943, 0.52 ) }
    dend_53 { pt3dadd( -94.8071, 789.584, 53.5564, 0.52 ) }
    dend_53 { pt3dadd( -94.8797, 789.672, 53.5681, 0.52 ) }
    dend_53 { pt3dadd( -95.1956, 790.087, 53.6027, 0.81 ) }
    dend_53 { pt3dadd( -95.2377, 790.146, 53.6054, 0.81 ) }
    dend_53 { pt3dadd( -95.4223, 790.423, 53.6146, 0.59 ) }
    dend_53 { pt3dadd( -96.2041, 791.64, 53.6699, 0.29 ) }
    dend_53 { pt3dadd( -96.271, 791.755, 53.672, 0.29 ) }
    dend_53 { pt3dadd( -96.6087, 792.317, 53.7126, 1.03 ) }
    dend_53 { pt3dadd( -96.952, 792.871, 53.7933, 0.96 ) }
    dend_53 { pt3dadd( -97.326, 793.448, 53.915, 0.59 ) }
    dend_53 { pt3dadd( -97.7098, 794.013, 54.0917, 0.59 ) }
    dend_53 { pt3dadd( -97.7737, 794.099, 54.132, 0.59 ) }
    dend_53 { pt3dadd( -98.184, 794.667, 54.4543, 0.59 ) }
    dend_53 { pt3dadd( -98.4932, 795.179, 54.8167, 0.29 ) }
    dend_53 { pt3dadd( -98.5125, 795.217, 54.8477, 0.29 ) }
    dend_53 { pt3dadd( -98.6639, 795.576, 55.1391, 0.29 ) }
    dend_53 { pt3dadd( -98.693, 795.657, 55.2002, 0.29 ) }
    dend_53 { pt3dadd( -98.8924, 796.209, 55.5601, 0.59 ) }
    dend_53 { pt3dadd( -99.2364, 797.16, 56.058, 0.22 ) }
    dend_53 { pt3dadd( -99.2581, 797.212, 56.0815, 0.22 ) }
    dend_53 { pt3dadd( -99.5805, 797.791, 56.2707, 0.22 ) }
    dend_53 { pt3dadd( -99.6986, 797.964, 56.3072, 0.22 ) }
    dend_53 { pt3dadd( -100.089, 798.357, 56.3083, 0.22 ) }
    dend_53 { pt3dadd( -100.54, 798.543, 56.1422, 0.66 ) }
    dend_53 { pt3dadd( -100.654, 798.561, 56.0763, 0.66 ) }
    dend_53 { pt3dadd( -101.274, 798.603, 55.6591, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 97/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -86.6306, 788.621, 56.2077, 0.29 ) }
    dend_33 { pt3dadd( -86.3969, 789.783, 56.8236, 0.29 ) }
    dend_33 { pt3dadd( -86.371, 789.928, 56.8903, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_33 { pt3dadd( -86.2251, 790.785, 57.2459, 0.88 ) }
    dend_33 { pt3dadd( -86.1049, 791.532, 57.5354, 1.25 ) }
    dend_33 { pt3dadd( -86.0111, 792.141, 57.7618, 1.25 ) }
    dend_33 { pt3dadd( -85.8636, 793.06, 58.0952, 0.44 ) }
    dend_33 { pt3dadd( -85.7036, 794.099, 58.4326, 0.29 ) }
    dend_33 { pt3dadd( -85.591, 794.797, 58.648, 0.88 ) }
    dend_33 { pt3dadd( -85.5123, 795.266, 58.7764, 1.25 ) }
    dend_33 { pt3dadd( -85.4989, 795.338, 58.7933, 1.25 ) }
    dend_33 { pt3dadd( -85.3864, 795.916, 58.923, 0.96 ) }
    dend_33 { pt3dadd( -85.3541, 796.077, 58.9606, 0.96 ) }
    dend_33 { pt3dadd( -85.2145, 796.729, 59.1147, 0.74 ) }
    dend_33 { pt3dadd( -84.9366, 798.014, 59.4162, 0.29 ) }
    dend_33 { pt3dadd( -84.7322, 798.944, 59.6342, 0.52 ) }
    dend_33 { pt3dadd( -84.6856, 799.166, 59.6851, 0.52 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -86.6306, 788.621, 56.2077, 0.22 ) }
    dend_32 { pt3dadd( -87.6479, 789.419, 55.9156, 0.22 ) }
    dend_32 { pt3dadd( -87.7053, 789.462, 55.8962, 0.22 ) }
    dend_32 { pt3dadd( -88.3518, 789.941, 55.6609, 0.22 ) }
    dend_32 { pt3dadd( -88.4032, 789.979, 55.6422, 0.22 ) }
    dend_32 { pt3dadd( -89.3704, 790.696, 55.2902, 0.22 ) }
    dend_32 { pt3dadd( -89.4278, 790.739, 55.2692, 0.22 ) }
    dend_32 { pt3dadd( -90.2572, 791.466, 54.9204, 0.22 ) }
    dend_32 { pt3dadd( -90.6174, 791.765, 54.7657, 0.22 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -101.274, 798.603, 55.6591, 0.22 ) }
    dend_55 { pt3dadd( -101.184, 799.61, 55.76, 0.22 ) }
    dend_55 { pt3dadd( -101.231, 799.721, 55.8261, 0.22 ) }
    dend_55 { pt3dadd( -101.582, 800.18, 56.1634, 0.22 ) }
    dend_55 { pt3dadd( -101.864, 800.406, 56.3729, 0.37 ) }
    dend_55 { pt3dadd( -102.438, 800.781, 56.7729, 0.37 ) }
    dend_55 { pt3dadd( -102.497, 800.808, 56.8179, 0.37 ) }
    dend_55 { pt3dadd( -103.797, 801.27, 57.9003, 1.18 ) }
    dend_55 { pt3dadd( -104.251, 801.375, 58.256, 1.18 ) }
    dend_55 { pt3dadd( -105.02, 801.48, 58.8338, 0.96 ) }
    dend_55 { pt3dadd( -105.202, 801.491, 58.9564, 0.96 ) }
    dend_55 { pt3dadd( -106.976, 801.51, 60.0361, 0.52 ) }
    dend_55 { pt3dadd( -107.064, 801.51, 60.086, 0.52 ) }
    dend_55 { pt3dadd( -107.618, 801.512, 60.3819, 0.52 ) }
    dend_55 { pt3dadd( -107.75, 801.512, 60.4568, 0.52 ) }
    dend_55 { pt3dadd( -108.516, 801.507, 60.8677, 0.74 ) }
    dend_55 { pt3dadd( -109.101, 801.511, 61.1369, 0.88 ) }
    dend_55 { pt3dadd( -109.161, 801.512, 61.1509, 0.88 ) }
    dend_55 { pt3dadd( -110.101, 801.572, 61.3909, 1.11 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 42/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -101.274, 798.603, 55.6591, 0.22 ) }
    dend_54 { pt3dadd( -101.886, 798.019, 55.2142, 0.22 ) }
    dend_54 { pt3dadd( -101.944, 797.964, 55.1719, 0.22 ) }
    dend_54 { pt3dadd( -102.678, 797.263, 54.638, 0.22 ) }
    dend_54 { pt3dadd( -102.724, 797.219, 54.6042, 0.22 ) }
    dend_54 { pt3dadd( -103.189, 796.775, 54.2661, 0.66 ) }
    dend_54 { pt3dadd( -103.415, 796.559, 54.102, 0.66 ) }
    // Section: dend_51, id: dend_51, parent: dend_33 (entry count 49/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -84.6856, 799.166, 59.6851, 0.15 ) }
    dend_51 { pt3dadd( -83.6486, 799.133, 60.1992, 0.15 ) }
    dend_51 { pt3dadd( -82.9885, 798.966, 60.4542, 0.44 ) }
    dend_51 { pt3dadd( -82.9296, 798.946, 60.4728, 0.44 ) }
    dend_51 { pt3dadd( -82.2986, 798.705, 60.6192, 0.15 ) }
    dend_51 { pt3dadd( -81.8091, 798.52, 60.7213, 0.96 ) }
    dend_51 { pt3dadd( -81.2756, 798.324, 60.8349, 0.96 ) }
    dend_51 { pt3dadd( -80.2328, 797.897, 61.0173, 0.22 ) }
    dend_51 { pt3dadd( -80.0728, 797.833, 61.0429, 0.22 ) }
    dend_51 { pt3dadd( -79.2198, 797.52, 61.1783, 0.52 ) }
    dend_51 { pt3dadd( -78.6233, 797.316, 61.2733, 0.52 ) }
    dend_51 { pt3dadd( -77.8985, 797.117, 61.4005, 0.59 ) }
    dend_51 { pt3dadd( -77.7051, 797.084, 61.4316, 0.59 ) }
    dend_51 { pt3dadd( -76.8279, 797.032, 61.5868, 0.15 ) }
    dend_51 { pt3dadd( -76.7637, 797.03, 61.5984, 0.15 ) }
    dend_51 { pt3dadd( -76.3854, 797.029, 61.6012, 0.15 ) }
    dend_51 { pt3dadd( -76.229, 797.03, 61.5827, 0.15 ) }
    dend_51 { pt3dadd( -75.2623, 797.063, 61.4021, 0.88 ) }
    dend_51 { pt3dadd( -74.821, 797.085, 61.3065, 1.18 ) }
    dend_51 { pt3dadd( -74.2655, 797.139, 61.1574, 1.18 ) }
    dend_51 { pt3dadd( -72.4342, 797.369, 60.6285, 0.22 ) }
    dend_51 { pt3dadd( -72.3632, 797.378, 60.6084, 0.22 ) }
    dend_51 { pt3dadd( -71.998, 797.412, 60.5151, 0.37 ) }
    dend_51 { pt3dadd( -71.9241, 797.418, 60.4983, 0.37 ) }
    dend_51 { pt3dadd( -70.8465, 797.54, 60.2531, 0.22 ) }
    dend_51 { pt3dadd( -70.7914, 797.544, 60.2434, 0.22 ) }
    dend_51 { pt3dadd( -70.0739, 797.623, 60.2042, 0.22 ) }
    dend_51 { pt3dadd( -69.6926, 797.656, 60.1821, 0.74 ) }
    dend_51 { pt3dadd( -69.284, 797.679, 60.1578, 1.03 ) }
    dend_51 { pt3dadd( -69.1986, 797.682, 60.1541, 1.03 ) }
    dend_51 { pt3dadd( -67.5891, 797.697, 60.1519, 0.37 ) }
    dend_51 { pt3dadd( -66.6862, 797.727, 60.1257, 1.62 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 81/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -84.6856, 799.166, 59.6851, 0.29 ) }
    dend_34 { pt3dadd( -84.4669, 800.628, 59.9408, 0.29 ) }
    dend_34 { pt3dadd( -84.2932, 801.533, 60.1125, 0.29 ) }
    dend_34 { pt3dadd( -84.2759, 801.609, 60.128, 0.29 ) }
    dend_34 { pt3dadd( -84.045, 802.633, 60.3358, 0.15 ) }
    dend_34 { pt3dadd( -83.8033, 803.703, 60.5533, 1.18 ) }
    dend_34 { pt3dadd( -83.6667, 804.309, 60.6763, 1.77 ) }
    dend_34 { pt3dadd( -83.4204, 805.152, 60.8601, 1.18 ) }
    dend_34 { pt3dadd( -83.2281, 805.723, 60.991, 1.18 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 90/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -110.101, 801.572, 61.3909, 0.59 ) }
    dend_57 { pt3dadd( -110.372, 802.366, 61.6609, 0.59 ) }
    dend_57 { pt3dadd( -110.394, 802.435, 61.6792, 0.59 ) }
    dend_57 { pt3dadd( -110.539, 802.938, 61.7863, 0.59 ) }
    dend_57 { pt3dadd( -110.557, 803.019, 61.8019, 0.59 ) }
    dend_57 { pt3dadd( -110.591, 803.356, 61.8589, 0.59 ) }
    dend_57 { pt3dadd( -110.623, 803.544, 61.9817, 0.59 ) }
    dend_57 { pt3dadd( -110.711, 803.695, 62.2903, 0.29 ) }
    dend_57 { pt3dadd( -110.847, 803.876, 62.7014, 0.22 ) }
    dend_57 { pt3dadd( -111.067, 804.111, 63.2398, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_57 { pt3dadd( -111.313, 804.334, 63.7353, 0.74 ) }
    dend_57 { pt3dadd( -112.585, 805.36, 66.0343, 0.74 ) }
    dend_57 { pt3dadd( -114.065, 806.458, 68.453, 0.88 ) }
    dend_57 { pt3dadd( -114.655, 806.856, 69.3331, 0.22 ) }
    dend_57 { pt3dadd( -115.24, 807.238, 70.1456, 0.22 ) }
    dend_57 { pt3dadd( -115.686, 807.541, 70.6935, 0.22 ) }
    dend_57 { pt3dadd( -115.74, 807.582, 70.7487, 0.22 ) }
    dend_57 { pt3dadd( -116.031, 807.898, 70.8979, 0.22 ) }
    dend_57 { pt3dadd( -116.078, 807.968, 70.9083, 0.22 ) }
    dend_57 { pt3dadd( -116.482, 808.647, 71.09, 0.22 ) }
    dend_57 { pt3dadd( -116.993, 809.589, 71.3987, 0.81 ) }
    dend_57 { pt3dadd( -117.026, 809.642, 71.414, 0.81 ) }
    dend_57 { pt3dadd( -117.454, 810.233, 71.5291, 0.96 ) }
    dend_57 { pt3dadd( -117.523, 810.322, 71.5402, 0.96 ) }
    dend_57 { pt3dadd( -117.861, 810.761, 71.5687, 0.96 ) }
    dend_57 { pt3dadd( -118.361, 811.427, 71.5754, 0.44 ) }
    dend_57 { pt3dadd( -118.727, 811.981, 71.5701, 0.44 ) }
    dend_57 { pt3dadd( -119.259, 812.869, 71.5705, 0.22 ) }
    dend_57 { pt3dadd( -119.747, 813.766, 71.5909, 0.37 ) }
    dend_57 { pt3dadd( -120.203, 814.651, 71.6372, 0.37 ) }
    dend_57 { pt3dadd( -120.581, 815.413, 71.7171, 0.37 ) }
    dend_57 { pt3dadd( -121.029, 816.309, 71.8831, 0.22 ) }
    dend_57 { pt3dadd( -121.062, 816.374, 71.9004, 0.22 ) }
    dend_57 { pt3dadd( -121.35, 816.784, 72.0999, 0.22 ) }
    dend_57 { pt3dadd( -121.438, 816.859, 72.1759, 0.22 ) }
    dend_57 { pt3dadd( -122.238, 817.275, 72.9832, 0.15 ) }
    dend_57 { pt3dadd( -122.679, 817.493, 73.4867, 0.44 ) }
    dend_57 { pt3dadd( -122.718, 817.514, 73.5328, 0.44 ) }
    dend_57 { pt3dadd( -123.746, 818.228, 74.7199, 0.88 ) }
    dend_57 { pt3dadd( -124.433, 818.833, 75.4957, 0.88 ) }
    dend_57 { pt3dadd( -124.604, 819.032, 75.7045, 0.88 ) }
    dend_57 { pt3dadd( -125.248, 820.033, 76.5834, 0.37 ) }
    dend_57 { pt3dadd( -125.53, 820.664, 77.023, 0.22 ) }
    dend_57 { pt3dadd( -125.773, 821.385, 77.4508, 0.22 ) }
    dend_57 { pt3dadd( -125.842, 821.798, 77.6621, 0.59 ) }
    dend_57 { pt3dadd( -125.954, 822.922, 78.2402, 0.44 ) }
    dend_57 { pt3dadd( -125.955, 823.004, 78.2936, 0.44 ) }
    dend_57 { pt3dadd( -125.858, 823.724, 79.0025, 0.29 ) }
    dend_57 { pt3dadd( -125.827, 823.785, 79.0866, 0.29 ) }
    dend_57 { pt3dadd( -125.229, 824.198, 79.9042, 0.29 ) }
    dend_57 { pt3dadd( -125.19, 824.216, 79.9518, 0.29 ) }
    dend_57 { pt3dadd( -124.603, 824.53, 80.7216, 0.81 ) }
    dend_57 { pt3dadd( -124.546, 824.576, 80.8108, 0.81 ) }
    dend_57 { pt3dadd( -124.27, 824.967, 81.3931, 0.81 ) }
    dend_57 { pt3dadd( -123.962, 825.764, 82.325, 0.29 ) }
    dend_57 { pt3dadd( -123.75, 826.789, 83.3405, 0.29 ) }
    dend_57 { pt3dadd( -123.559, 828.242, 84.5608, 0.52 ) }
    dend_57 { pt3dadd( -123.505, 829.155, 85.2117, 1.33 ) }
    dend_57 { pt3dadd( -123.493, 830.325, 85.9897, 0.22 ) }
    dend_57 { pt3dadd( -123.531, 830.946, 86.3578, 0.74 ) }
    dend_57 { pt3dadd( -123.55, 831.099, 86.4338, 0.74 ) }
    dend_57 { pt3dadd( -123.624, 832.002, 86.7491, 0.37 ) }
    dend_57 { pt3dadd( -123.614, 832.534, 86.8896, 1.03 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 53/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -110.101, 801.572, 61.3909, 0.22 ) }
    dend_56 { pt3dadd( -110.985, 802.006, 61.0066, 0.22 ) }
    dend_56 { pt3dadd( -111.551, 802.279, 60.7545, 0.15 ) }
    dend_56 { pt3dadd( -112.279, 802.627, 60.4043, 0.15 ) }
    dend_56 { pt3dadd( -113.154, 803.045, 59.9831, 0.52 ) }
    dend_56 { pt3dadd( -113.537, 803.227, 59.799, 0.52 ) }
    dend_56 { pt3dadd( -114.072, 803.482, 59.5418, 0.52 ) }
    dend_56 { pt3dadd( -114.229, 803.554, 59.4681, 0.52 ) }
    dend_56 { pt3dadd( -115.133, 803.944, 59.0512, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_34 (entry count 62/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -83.2281, 805.723, 60.991, 0.22 ) }
    dend_50 { pt3dadd( -82.1021, 804.751, 61.203, 0.22 ) }
    dend_50 { pt3dadd( -81.7711, 804.424, 61.2615, 0.29 ) }
    dend_50 { pt3dadd( -81.1604, 803.74, 61.3552, 0.22 ) }
    dend_50 { pt3dadd( -80.6616, 803.18, 61.4317, 0.44 ) }
    dend_50 { pt3dadd( -80.18, 802.64, 61.5056, 0.22 ) }
    dend_50 { pt3dadd( -80.1452, 802.602, 61.5109, 0.22 ) }
    dend_50 { pt3dadd( -80.0061, 802.328, 61.5484, 0.44 ) }
    dend_50 { pt3dadd( -79.894, 802.036, 61.5646, 0.44 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -83.2281, 805.723, 60.991, 0.29 ) }
    dend_35 { pt3dadd( -83.2427, 806.289, 61.168, 0.29 ) }
    dend_35 { pt3dadd( -83.2875, 807.575, 61.7061, 0.29 ) }
    dend_35 { pt3dadd( -83.3345, 808.882, 62.3278, 0.29 ) }
    dend_35 { pt3dadd( -83.3364, 809.001, 62.3891, 0.29 ) }
    dend_35 { pt3dadd( -83.3056, 810.182, 63.0629, 0.29 ) }
    dend_35 { pt3dadd( -83.2923, 810.403, 63.1983, 0.81 ) }
    dend_35 { pt3dadd( -83.1814, 811.477, 63.9116, 0.66 ) }
    dend_35 { pt3dadd( -83.1729, 811.527, 63.9465, 0.66 ) }
    dend_35 { pt3dadd( -83.0498, 812.124, 64.3882, 0.52 ) }
    dend_35 { pt3dadd( -82.7036, 813.683, 65.4977, 0.29 ) }
    dend_35 { pt3dadd( -82.5083, 814.685, 66.2316, 0.29 ) }
    dend_35 { pt3dadd( -82.419, 815.234, 66.6073, 1.33 ) }
    dend_35 { pt3dadd( -82.3206, 815.92, 67.0398, 1.55 ) }
    dend_35 { pt3dadd( -82.3124, 815.994, 67.0848, 1.55 ) }
    dend_35 { pt3dadd( -82.27, 816.843, 67.6252, 1.25 ) }
    dend_35 { pt3dadd( -82.2423, 818.606, 68.7433, 0.37 ) }
    dend_35 { pt3dadd( -82.255, 819.65, 69.4131, 0.29 ) }
    dend_35 { pt3dadd( -82.2576, 819.721, 69.4598, 0.29 ) }
    dend_35 { pt3dadd( -82.324, 820.84, 70.22, 0.29 ) }
    dend_35 { pt3dadd( -82.4529, 822.829, 71.5882, 1.84 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 92/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -123.614, 832.534, 86.8896, 0.44 ) }
    dend_59 { pt3dadd( -123.246, 831.58, 86.7798, 0.44 ) }
    dend_59 { pt3dadd( -122.919, 830.73, 86.6821, 0.37 ) }
    dend_59 { pt3dadd( -122.692, 830.14, 86.6143, 0.22 ) }
    dend_59 { pt3dadd( -122.673, 830.089, 86.6084, 0.22 ) }
    dend_59 { pt3dadd( -122.305, 829.135, 86.4986, 0.22 ) }
    dend_59 { pt3dadd( -122.286, 829.084, 86.4928, 0.22 ) }
    dend_59 { pt3dadd( -120.384, 821.589, 86.8337, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 0/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -123.614, 832.534, 86.8896, 0.74 ) }
    dend_58 { pt3dadd( -123.834, 833.054, 86.8521, 0.74 ) }
    dend_58 { pt3dadd( -124.055, 833.78, 86.8402, 0.22 ) }
    dend_58 { pt3dadd( -124.072, 833.839, 86.8382, 0.22 ) }
    dend_58 { pt3dadd( -124.252, 834.453, 86.839, 0.22 ) }
    dend_58 { pt3dadd( -124.309, 834.643, 86.8428, 0.22 ) }
    dend_58 { pt3dadd( -124.489, 835.252, 86.8709, 0.22 ) }
    dend_58 { pt3dadd( -124.73, 836.056, 86.9343, 1.4 ) }
    dend_58 { pt3dadd( -125.036, 837.125, 87.0894, 0.29 ) }
    dend_58 { pt3dadd( -125.238, 837.818, 87.2407, 0.29 ) }
    dend_58 { pt3dadd( -125.262, 837.898, 87.2637, 0.29 ) }
    dend_58 { pt3dadd( -125.512, 838.658, 87.5197, 0.29 ) }
    dend_58 { pt3dadd( -125.532, 838.711, 87.5412, 0.29 ) }
    dend_58 { pt3dadd( -125.897, 839.559, 87.9738, 0.81 ) }
    dend_58 { pt3dadd( -126.118, 840.054, 88.2826, 1.11 ) }
    dend_58 { pt3dadd( -126.139, 840.102, 88.3129, 1.11 ) }
    dend_58 { pt3dadd( -126.412, 840.72, 88.6758, 1.11 ) }
    dend_58 { pt3dadd( -126.45, 840.804, 88.7225, 1.11 ) }
    dend_58 { pt3dadd( -126.65, 841.215, 88.9057, 1.11 ) }
    dend_58 { pt3dadd( -126.674, 841.258, 88.9231, 1.11 ) }
    dend_58 { pt3dadd( -126.974, 841.801, 89.1274, 0.22 ) }
    dend_58 { pt3dadd( -127.296, 842.37, 89.3422, 0.29 ) }
    dend_58 { pt3dadd( -127.326, 842.42, 89.3611, 0.29 ) }
    dend_58 { pt3dadd( -127.644, 842.955, 89.5443, 0.22 ) }
    dend_58 { pt3dadd( -128.211, 843.864, 89.8225, 0.81 ) }
    dend_58 { pt3dadd( -131.931, 851.462, 91.4058, 0.81 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 26/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -82.4529, 822.829, 71.5882, 1.84 ) }
    dend_37 { pt3dadd( -81.8165, 823.381, 71.8922, 1.84 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 28/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -82.4529, 822.829, 71.5882, 0.22 ) }
    dend_36 { pt3dadd( -82.4812, 824.478, 71.4943, 0.22 ) }
    dend_36 { pt3dadd( -82.5049, 825.363, 71.474, 0.22 ) }
    dend_36 { pt3dadd( -82.5068, 825.414, 71.4737, 0.22 ) }
    dend_36 { pt3dadd( -82.5577, 826.458, 71.4842, 0.59 ) }
    dend_36 { pt3dadd( -82.615, 827.525, 71.5072, 0.22 ) }
    dend_36 { pt3dadd( -82.6603, 828.328, 71.5361, 0.66 ) }
    dend_36 { pt3dadd( -82.6665, 828.388, 71.5497, 0.66 ) }
    dend_36 { pt3dadd( -82.6847, 828.569, 71.6061, 0.66 ) }
    dend_36 { pt3dadd( -82.7639, 829.277, 71.8688, 0.15 ) }
    dend_36 { pt3dadd( -82.7714, 829.331, 71.8933, 0.15 ) }
    dend_36 { pt3dadd( -82.8502, 829.804, 72.1378, 1.18 ) }
    dend_36 { pt3dadd( -83.0256, 830.899, 72.8022, 0.29 ) }
    dend_36 { pt3dadd( -83.0792, 831.237, 73.0219, 0.52 ) }
    dend_36 { pt3dadd( -83.0869, 831.286, 73.0573, 0.52 ) }
    dend_36 { pt3dadd( -83.1199, 831.482, 73.2281, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -81.8165, 823.381, 71.8922, 0.15 ) }
    dend_39 { pt3dadd( -82.0678, 825.18, 72.8117, 0.15 ) }
    dend_39 { pt3dadd( -82.1816, 826.074, 73.237, 0.15 ) }
    dend_39 { pt3dadd( -82.2594, 826.684, 73.5275, 0.29 ) }
    dend_39 { pt3dadd( -82.2868, 826.9, 73.6303, 0.29 ) }
    dend_39 { pt3dadd( -82.3563, 827.445, 73.8898, 0.15 ) }
    dend_39 { pt3dadd( -82.4107, 827.873, 74.0934, 0.29 ) }
    dend_39 { pt3dadd( -82.4155, 827.987, 74.1162, 0.29 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 52/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -81.8165, 823.381, 71.8922, 0.29 ) }
    dend_38 { pt3dadd( -81.2835, 821.656, 72.8944, 0.29 ) }
    dend_38 { pt3dadd( -81.1326, 821.075, 73.2308, 0.29 ) }
    dend_38 { pt3dadd( -80.9023, 820.089, 73.7812, 0.22 ) }
    dend_38 { pt3dadd( -80.814, 819.756, 73.9746, 0.52 ) }
    dend_38 { pt3dadd( -80.4528, 818.426, 74.7518, 0.22 ) }
    dend_38 { pt3dadd( -80.4383, 818.366, 74.7867, 0.22 ) }
    dend_38 { pt3dadd( -80.3546, 817.902, 75.0315, 0.88 ) }
    dend_38 { pt3dadd( -80.3114, 817.607, 75.2163, 1.03 ) }
    dend_38 { pt3dadd( -80.2076, 816.033, 76.2772, 0.22 ) }
    dend_38 { pt3dadd( -80.2083, 815.949, 76.3287, 0.22 ) }
    dend_38 { pt3dadd( -80.2879, 814.42, 77.2479, 0.22 ) }
    dend_38 { pt3dadd( -80.2934, 814.36, 77.2851, 0.22 ) }
    dend_38 { pt3dadd( -80.3857, 812.99, 78.1583, 0.22 ) }
    dend_38 { pt3dadd( -80.4452, 812.102, 78.7424, 0.22 ) }
    dend_38 { pt3dadd( -80.5379, 811.061, 79.509, 0.22 ) }
    dend_38 { pt3dadd( -80.5741, 809.792, 80.5641, 0.29 ) }
    dend_38 { pt3dadd( -80.5638, 809.705, 80.6473, 0.29 ) }
    dend_38 { pt3dadd( -80.1338, 808.406, 81.9798, 0.15 ) }
    dend_38 { pt3dadd( -80.1088, 808.361, 82.03, 0.15 ) }
    dend_38 { pt3dadd( -79.2207, 807.294, 83.3313, 0.96 ) }
    dend_38 { pt3dadd( -78.9264, 807.015, 83.6974, 0.96 ) }
    dend_38 { pt3dadd( -77.8435, 806.066, 84.9009, 0.22 ) }
    dend_38 { pt3dadd( -76.9442, 805.307, 85.8594, 0.22 ) }
    dend_38 { pt3dadd( -76.8989, 805.272, 85.9047, 0.22 ) }
    dend_38 { pt3dadd( -75.9784, 804.591, 86.7384, 0.22 ) }
    dend_38 { pt3dadd( -74.4531, 803.573, 87.8835, 0.22 ) }
    dend_38 { pt3dadd( -73.7972, 803.112, 88.3924, 0.74 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 80/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -82.4155, 827.987, 74.1162, 0.37 ) }
    dend_41 { pt3dadd( -82.6543, 829.168, 74.5615, 0.37 ) }
    dend_41 { pt3dadd( -82.6649, 829.236, 74.5842, 0.37 ) }
    dend_41 { pt3dadd( -82.7224, 829.648, 74.7016, 0.22 ) }
    dend_41 { pt3dadd( -82.821, 830.566, 74.9105, 0.22 ) }
    dend_41 { pt3dadd( -82.8713, 831.054, 75.0001, 0.66 ) }
    dend_41 { pt3dadd( -82.8796, 831.135, 75.0149, 0.66 ) }
    dend_41 { pt3dadd( -82.9209, 831.993, 75.1245, 0.52 ) }
    dend_41 { pt3dadd( -82.9593, 832.733, 75.2103, 0.52 ) }
    dend_41 { pt3dadd( -83.0134, 833.621, 75.2907, 1.33 ) }
    dend_41 { pt3dadd( -83.0636, 834.364, 75.3344, 1.47 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 91/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -82.4155, 827.987, 74.1162, 0.29 ) }
    dend_40 { pt3dadd( -82.1392, 827.965, 75.2304, 0.29 ) }
    dend_40 { pt3dadd( -82.1234, 827.97, 75.2901, 0.29 ) }
    dend_40 { pt3dadd( -81.6589, 828.164, 77.023, 0.66 ) }
    dend_40 { pt3dadd( -81.3631, 828.314, 78.1436, 0.15 ) }
    dend_40 { pt3dadd( -81.2062, 828.397, 78.723, 0.88 ) }
    dend_40 { pt3dadd( -81.0133, 828.48, 79.3337, 0.88 ) }
    dend_40 { pt3dadd( -80.7098, 828.616, 80.2573, 0.22 ) }
    dend_40 { pt3dadd( -80.6867, 828.625, 80.314, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_40 { pt3dadd( -80.3108, 828.75, 80.9869, 0.81 ) }
    dend_40 { pt3dadd( -80.1449, 828.84, 81.2692, 0.81 ) }
    dend_40 { pt3dadd( -79.6003, 829.187, 82.1851, 0.22 ) }
    dend_40 { pt3dadd( -79.4454, 829.279, 82.431, 0.96 ) }
    dend_40 { pt3dadd( -79.4069, 829.302, 82.4881, 0.96 ) }
    dend_40 { pt3dadd( -79.0704, 829.517, 82.9457, 0.52 ) }
    dend_40 { pt3dadd( -78.5292, 829.858, 83.7378, 0.22 ) }
    dend_40 { pt3dadd( -78.4792, 829.89, 83.8231, 0.22 ) }
    dend_40 { pt3dadd( -78.3426, 829.975, 84.1022, 0.22 ) }
    dend_40 { pt3dadd( -78.3014, 829.994, 84.1881, 0.22 ) }
    dend_40 { pt3dadd( -77.912, 830.135, 85.0067, 0.66 ) }
    dend_40 { pt3dadd( -77.3517, 830.292, 86.1867, 0.15 ) }
    dend_40 { pt3dadd( -77.3249, 830.297, 86.2422, 0.15 ) }
    dend_40 { pt3dadd( -76.9283, 830.354, 86.978, 0.15 ) }
    dend_40 { pt3dadd( -76.646, 830.387, 87.5162, 0.74 ) }
    dend_40 { pt3dadd( -76.5649, 830.397, 87.6716, 0.74 ) }
    dend_40 { pt3dadd( -76.3279, 830.438, 88.1276, 0.74 ) }
    dend_40 { pt3dadd( -76.2921, 830.443, 88.19, 0.74 ) }
    dend_40 { pt3dadd( -75.7396, 830.511, 89.1528, 0.22 ) }
    dend_40 { pt3dadd( -74.9614, 830.554, 90.5248, 0.66 ) }
    dend_40 { pt3dadd( -74.773, 830.554, 90.8667, 0.66 ) }
    dend_40 { pt3dadd( -74.7335, 830.552, 90.9398, 0.66 ) }
    dend_40 { pt3dadd( -74.4239, 830.517, 91.5365, 0.22 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 23/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -83.0636, 834.364, 75.3344, 0.44 ) }
    dend_43 { pt3dadd( -83.7586, 835.726, 76.0052, 0.44 ) }
    dend_43 { pt3dadd( -84.1872, 836.676, 76.568, 0.29 ) }
    dend_43 { pt3dadd( -84.5764, 837.611, 77.1622, 0.29 ) }
    dend_43 { pt3dadd( -85.1262, 839.086, 78.1251, 0.81 ) }
    dend_43 { pt3dadd( -85.2977, 839.611, 78.4708, 1.18 ) }
    dend_43 { pt3dadd( -85.3722, 839.862, 78.636, 1.18 ) }
    dend_43 { pt3dadd( -85.6162, 841.278, 79.6244, 0.15 ) }
    dend_43 { pt3dadd( -85.6263, 841.43, 79.742, 0.15 ) }
    dend_43 { pt3dadd( -85.5987, 841.886, 80.1111, 0.66 ) }
    dend_43 { pt3dadd( -85.5264, 842.309, 80.3982, 0.96 ) }
    dend_43 { pt3dadd( -85.5204, 842.383, 80.4446, 0.96 ) }
    dend_43 { pt3dadd( -85.5403, 842.627, 80.597, 0.96 ) }
    dend_43 { pt3dadd( -85.708, 843.444, 81.1979, 0.29 ) }
    dend_43 { pt3dadd( -85.7437, 843.586, 81.3153, 0.29 ) }
    dend_43 { pt3dadd( -85.9093, 844.185, 81.8543, 0.29 ) }
    dend_43 { pt3dadd( -86.2135, 845.243, 82.8408, 0.37 ) }
    dend_43 { pt3dadd( -86.4618, 846.083, 83.6295, 0.52 ) }
    dend_43 { pt3dadd( -86.8555, 847.355, 84.8436, 0.96 ) }
    dend_43 { pt3dadd( -86.8755, 847.427, 84.9107, 0.96 ) }
    dend_43 { pt3dadd( -87.0279, 848.144, 85.5649, 1.18 ) }
    dend_43 { pt3dadd( -87.0541, 848.373, 85.7568, 1.18 ) }
    dend_43 { pt3dadd( -87.0418, 848.783, 86.0054, 1.18 ) }
    dend_43 { pt3dadd( -87.0311, 848.902, 86.0587, 1.18 ) }
    dend_43 { pt3dadd( -86.9469, 850.006, 86.4371, 1.33 ) }
    dend_43 { pt3dadd( -86.9395, 850.1, 86.4675, 1.33 ) }
    dend_43 { pt3dadd( -86.8814, 850.808, 86.679, 1.25 ) }
    dend_43 { pt3dadd( -86.7144, 852.755, 87.2446, 0.22 ) }
    dend_43 { pt3dadd( -86.6299, 853.939, 87.5645, 0.22 ) }
    dend_43 { pt3dadd( -86.6061, 854.563, 87.7173, 0.59 ) }
    dend_43 { pt3dadd( -86.6026, 854.699, 87.7491, 0.59 ) }
    dend_43 { pt3dadd( -86.5955, 855.059, 87.8314, 0.59 ) }
    dend_43 { pt3dadd( -86.5942, 856.125, 88.0558, 0.22 ) }
    dend_43 { pt3dadd( -86.6528, 856.94, 88.1716, 0.96 ) }
    dend_43 { pt3dadd( -86.7795, 857.922, 88.2821, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 58/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -83.0636, 834.364, 75.3344, 0.15 ) }
    dend_42 { pt3dadd( -82.4475, 837.267, 75.7675, 0.15 ) }
    dend_42 { pt3dadd( -82.433, 837.383, 75.7812, 0.15 ) }
    dend_42 { pt3dadd( -82.3655, 837.973, 75.8607, 0.15 ) }
    dend_42 { pt3dadd( -82.358, 838.066, 75.8724, 0.15 ) }
    dend_42 { pt3dadd( -82.3223, 838.697, 75.9316, 0.59 ) }
    dend_42 { pt3dadd( -82.3073, 839.106, 75.9654, 0.59 ) }
    dend_42 { pt3dadd( -82.3363, 841.645, 76.1327, 0.22 ) }
    dend_42 { pt3dadd( -82.3659, 842.651, 76.1846, 1.25 ) }
    dend_42 { pt3dadd( -82.3965, 843.362, 76.2305, 0.88 ) }
    dend_42 { pt3dadd( -82.5043, 845.203, 76.3662, 0.15 ) }
    dend_42 { pt3dadd( -82.5679, 845.979, 76.4264, 0.15 ) }
    dend_42 { pt3dadd( -82.6631, 846.83, 76.4889, 0.74 ) }
    dend_42 { pt3dadd( -82.7488, 847.405, 76.5311, 1.11 ) }
    dend_42 { pt3dadd( -82.9671, 848.702, 76.6084, 0.15 ) }
    dend_42 { pt3dadd( -83.083, 849.38, 76.6537, 0.96 ) }
    dend_42 { pt3dadd( -83.2428, 850.2, 76.7072, 1.18 ) }
    dend_42 { pt3dadd( -83.7087, 852.517, 76.8138, 0.15 ) }
    dend_42 { pt3dadd( -83.7306, 852.62, 76.8168, 0.15 ) }
    dend_42 { pt3dadd( -83.9626, 853.697, 76.8189, 0.15 ) }
    dend_42 { pt3dadd( -83.9797, 853.775, 76.8163, 0.15 ) }
    dend_42 { pt3dadd( -84.1168, 854.437, 76.8099, 0.52 ) }
    dend_42 { pt3dadd( -84.1502, 854.595, 76.8119, 0.52 ) }
    dend_42 { pt3dadd( -84.2191, 854.933, 76.8179, 0.52 ) }
    dend_42 { pt3dadd( -84.231, 855.0, 76.8197, 0.52 ) }
    dend_42 { pt3dadd( -84.4087, 856.123, 76.8653, 0.22 ) }
    dend_42 { pt3dadd( -84.5331, 856.939, 76.8983, 1.11 ) }
    dend_42 { pt3dadd( -84.6602, 857.698, 76.9501, 0.81 ) }
    dend_42 { pt3dadd( -85.0159, 859.692, 77.1197, 0.15 ) }
    dend_42 { pt3dadd( -85.4148, 861.803, 77.33, 0.15 ) }
    dend_42 { pt3dadd( -85.5573, 862.509, 77.4244, 1.03 ) }
    dend_42 { pt3dadd( -85.7364, 863.291, 77.5628, 0.81 ) }
    dend_42 { pt3dadd( -86.1685, 864.964, 77.9475, 0.22 ) }
    dend_42 { pt3dadd( -86.1872, 865.027, 77.9658, 0.22 ) }
    dend_42 { pt3dadd( -86.5623, 866.063, 78.3607, 0.52 ) }
    dend_42 { pt3dadd( -86.9649, 867.028, 78.7902, 0.22 ) }
    dend_42 { pt3dadd( -87.3351, 867.889, 79.1837, 0.74 ) }
    dend_42 { pt3dadd( -87.5456, 868.377, 79.409, 0.74 ) }
    dend_42 { pt3dadd( -87.5752, 868.445, 79.4398, 0.74 ) }
    dend_42 { pt3dadd( -88.1543, 869.87, 80.0617, 0.22 ) }
    dend_42 { pt3dadd( -88.177, 869.93, 80.0871, 0.22 ) }
    dend_42 { pt3dadd( -88.5247, 871.073, 80.5116, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_42 { pt3dadd( -88.6211, 871.472, 80.6509, 0.66 ) }
    dend_42 { pt3dadd( -88.633, 871.536, 80.6726, 0.66 ) }
    dend_42 { pt3dadd( -88.7112, 872.269, 80.9198, 0.22 ) }
    dend_42 { pt3dadd( -88.7567, 873.457, 81.4173, 1.4 ) }
    dend_42 { pt3dadd( -88.7588, 874.845, 82.0605, 0.15 ) }
    dend_42 { pt3dadd( -88.7535, 875.002, 82.1385, 0.15 ) }
    dend_42 { pt3dadd( -88.7188, 875.8, 82.5599, 0.15 ) }
    dend_42 { pt3dadd( -88.6605, 877.015, 83.2167, 0.15 ) }
    dend_42 { pt3dadd( -88.5446, 879.145, 84.4042, 0.15 ) }
    dend_42 { pt3dadd( -88.475, 880.259, 85.077, 1.33 ) }
    dend_42 { pt3dadd( -88.4642, 880.704, 85.3805, 1.47 ) }
    dend_42 { pt3dadd( -88.4107, 882.4, 86.4846, 0.22 ) }
    dend_42 { pt3dadd( -88.4048, 882.596, 86.6058, 0.44 ) }
    dend_42 { pt3dadd( -88.4016, 882.657, 86.6373, 0.44 ) }
    dend_42 { pt3dadd( -88.2263, 883.721, 86.9082, 0.22 ) }
    dend_42 { pt3dadd( -88.1304, 885.059, 87.3633, 0.88 ) }
    dend_42 { pt3dadd( -88.2221, 887.095, 88.1799, 0.59 ) }
    dend_42 { pt3dadd( -88.2657, 887.466, 88.3725, 0.37 ) }
    dend_42 { pt3dadd( -88.4176, 888.441, 88.9732, 0.15 ) }
    dend_42 { pt3dadd( -88.6719, 889.822, 89.9166, 1.62 ) }
    dend_42 { pt3dadd( -89.2682, 892.915, 92.2407, 0.88 ) }
    dend_42 { pt3dadd( -89.4032, 893.543, 92.7739, 1.25 ) }
    dend_42 { pt3dadd( -89.6958, 894.644, 93.8472, 0.15 ) }
    dend_42 { pt3dadd( -89.7938, 895.015, 94.2283, 0.66 ) }
    dend_42 { pt3dadd( -89.8076, 895.08, 94.2962, 0.66 ) }
    dend_42 { pt3dadd( -89.9259, 896.236, 95.3922, 0.22 ) }
    dend_42 { pt3dadd( -89.8832, 896.879, 95.8143, 0.88 ) }
    dend_42 { pt3dadd( -89.8666, 897.143, 95.974, 0.88 ) }
    dend_42 { pt3dadd( -89.864, 897.236, 96.0247, 0.88 ) }
    dend_42 { pt3dadd( -89.8572, 899.035, 96.9708, 0.22 ) }
    dend_42 { pt3dadd( -89.8596, 899.682, 97.2986, 0.66 ) }
    dend_42 { pt3dadd( -89.8951, 901.349, 98.0872, 0.15 ) }
    dend_42 { pt3dadd( -89.9191, 902.181, 98.4644, 0.15 ) }
    dend_42 { pt3dadd( -89.922, 902.247, 98.4927, 0.15 ) }
    dend_42 { pt3dadd( -89.9617, 902.799, 98.7039, 0.44 ) }
    dend_42 { pt3dadd( -90.0465, 903.525, 98.9222, 0.22 ) }
    dend_42 { pt3dadd( -90.1468, 904.166, 99.0578, 0.52 ) }
    dend_42 { pt3dadd( -90.172, 904.257, 99.0579, 0.52 ) }
    dend_42 { pt3dadd( -90.2967, 904.586, 99.0337, 0.52 ) }
    dend_42 { pt3dadd( -90.4657, 904.971, 98.9884, 0.37 ) }
    dend_42 { pt3dadd( -90.5137, 905.051, 98.9694, 0.37 ) }
    dend_42 { pt3dadd( -90.8131, 905.384, 98.8176, 0.22 ) }
    dend_42 { pt3dadd( -91.3497, 905.879, 98.5243, 0.44 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 43/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -86.7795, 857.922, 88.2821, 0.22 ) }
    dend_45 { pt3dadd( -86.8568, 858.952, 88.8014, 0.22 ) }
    dend_45 { pt3dadd( -86.9008, 859.474, 89.0743, 0.52 ) }
    dend_45 { pt3dadd( -87.0182, 860.782, 89.7732, 0.29 ) }
    dend_45 { pt3dadd( -87.0754, 861.39, 90.1044, 0.88 ) }
    dend_45 { pt3dadd( -87.1066, 861.851, 90.3452, 1.18 ) }
    dend_45 { pt3dadd( -87.1244, 862.181, 90.5072, 1.18 ) }
    dend_45 { pt3dadd( -87.1278, 862.352, 90.5824, 1.18 ) }
    dend_45 { pt3dadd( -87.1278, 862.352, 90.5824, 1.18 ) }
    dend_45 { pt3dadd( -87.1266, 862.396, 90.5964, 1.18 ) }
    dend_45 { pt3dadd( -87.0991, 863.266, 90.852, 0.22 ) }
    dend_45 { pt3dadd( -87.0528, 863.794, 91.0482, 0.44 ) }
    dend_45 { pt3dadd( -86.9676, 864.556, 91.3779, 0.59 ) }
    dend_45 { pt3dadd( -86.9054, 864.917, 91.5566, 1.11 ) }
    dend_45 { pt3dadd( -86.825, 865.282, 91.7548, 1.11 ) }
    dend_45 { pt3dadd( -86.8146, 865.321, 91.7781, 1.11 ) }
    dend_45 { pt3dadd( -86.3839, 866.52, 92.6239, 0.22 ) }
    dend_45 { pt3dadd( -86.3633, 866.56, 92.6551, 0.22 ) }
    dend_45 { pt3dadd( -86.0467, 867.085, 93.0664, 0.22 ) }
    dend_45 { pt3dadd( -85.876, 867.371, 93.2974, 0.74 ) }
    dend_45 { pt3dadd( -85.8526, 867.412, 93.3297, 0.74 ) }
    dend_45 { pt3dadd( -85.6724, 867.756, 93.5954, 0.52 ) }
    dend_45 { pt3dadd( -85.4201, 868.358, 94.0157, 0.22 ) }
    dend_45 { pt3dadd( -85.2799, 868.86, 94.3846, 0.74 ) }
    dend_45 { pt3dadd( -85.1514, 869.74, 95.0642, 1.25 ) }
    dend_45 { pt3dadd( -85.1487, 869.798, 95.1085, 1.25 ) }
    dend_45 { pt3dadd( -85.1577, 870.004, 95.2624, 1.11 ) }
    dend_45 { pt3dadd( -85.2133, 870.444, 95.6273, 0.52 ) }
    dend_45 { pt3dadd( -85.3018, 871.089, 96.22, 0.15 ) }
    dend_45 { pt3dadd( -85.3053, 871.128, 96.261, 0.15 ) }
    dend_45 { pt3dadd( -85.2547, 871.428, 96.6782, 0.15 ) }
    dend_45 { pt3dadd( -85.2342, 871.471, 96.7592, 0.15 ) }
    dend_45 { pt3dadd( -84.9587, 871.888, 97.7997, 0.44 ) }
    dend_45 { pt3dadd( -84.8395, 872.028, 98.2205, 0.66 ) }
    dend_45 { pt3dadd( -84.8224, 872.042, 98.2708, 0.66 ) }
    dend_45 { pt3dadd( -84.3931, 872.361, 99.5017, 0.22 ) }
    dend_45 { pt3dadd( -84.3746, 872.372, 99.5531, 0.22 ) }
    dend_45 { pt3dadd( -83.9292, 872.657, 100.845, 1.33 ) }
    dend_45 { pt3dadd( -83.8825, 872.695, 101.012, 1.62 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 82/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -86.7795, 857.922, 88.2821, 0.15 ) }
    dend_44 { pt3dadd( -86.028, 858.822, 88.9598, 0.15 ) }
    dend_44 { pt3dadd( -85.7686, 859.124, 89.209, 0.15 ) }
    dend_44 { pt3dadd( -85.7089, 859.191, 89.2682, 0.15 ) }
    dend_44 { pt3dadd( -85.4241, 859.497, 89.5543, 0.44 ) }
    dend_44 { pt3dadd( -85.3614, 859.562, 89.6185, 0.44 ) }
    dend_44 { pt3dadd( -84.9501, 859.976, 90.0394, 0.22 ) }
    dend_44 { pt3dadd( -84.7446, 860.18, 90.2629, 0.44 ) }
    dend_44 { pt3dadd( -84.4585, 860.421, 90.5594, 0.15 ) }
    dend_44 { pt3dadd( -84.4277, 860.445, 90.5904, 0.15 ) }
    dend_44 { pt3dadd( -84.1169, 860.663, 90.8948, 0.66 ) }
    dend_44 { pt3dadd( -84.0846, 860.684, 90.9254, 0.66 ) }
    dend_44 { pt3dadd( -83.6485, 860.943, 91.3255, 0.22 ) }
    dend_44 { pt3dadd( -83.288, 861.159, 91.6441, 0.88 ) }
    dend_44 { pt3dadd( -83.2488, 861.182, 91.6781, 0.88 ) }
    dend_44 { pt3dadd( -83.143, 861.242, 91.7689, 1.11 ) }
    dend_44 { pt3dadd( -83.0718, 861.279, 91.8277, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 99/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -83.8825, 872.695, 101.012, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_47 { pt3dadd( -84.2817, 874.07, 102.496, 0.29 ) }
    dend_47 { pt3dadd( -84.2887, 874.128, 102.554, 0.29 ) }
    dend_47 { pt3dadd( -84.3057, 874.955, 103.363, 0.29 ) }
    dend_47 { pt3dadd( -84.2947, 875.05, 103.454, 0.29 ) }
    dend_47 { pt3dadd( -84.1896, 875.705, 104.045, 0.74 ) }
    dend_47 { pt3dadd( -84.1796, 875.758, 104.092, 0.74 ) }
    dend_47 { pt3dadd( -84.0771, 876.415, 104.671, 0.74 ) }
    dend_47 { pt3dadd( -84.0698, 876.53, 104.789, 0.74 ) }
    dend_47 { pt3dadd( -84.0434, 877.258, 105.594, 0.15 ) }
    dend_47 { pt3dadd( -84.0269, 877.595, 105.975, 0.15 ) }
    dend_47 { pt3dadd( -84.0266, 877.641, 106.026, 0.15 ) }
    dend_47 { pt3dadd( -84.0468, 879.174, 107.72, 0.15 ) }
    dend_47 { pt3dadd( -84.0796, 879.686, 108.255, 1.11 ) }
    dend_47 { pt3dadd( -84.1265, 880.196, 108.739, 1.25 ) }
    dend_47 { pt3dadd( -84.2469, 881.399, 109.815, 0.22 ) }
    dend_47 { pt3dadd( -84.2994, 882.118, 110.427, 0.22 ) }
    dend_47 { pt3dadd( -84.3025, 882.172, 110.467, 0.22 ) }
    dend_47 { pt3dadd( -84.294, 882.987, 110.922, 0.29 ) }
    dend_47 { pt3dadd( -84.2924, 883.811, 111.326, 0.74 ) }
    dend_47 { pt3dadd( -84.2941, 884.391, 111.61, 1.11 ) }
    dend_47 { pt3dadd( -84.291, 884.464, 111.647, 1.11 ) }
    dend_47 { pt3dadd( -84.1757, 885.262, 112.08, 0.66 ) }
    dend_47 { pt3dadd( -83.9795, 886.249, 112.632, 0.22 ) }
    dend_47 { pt3dadd( -83.7993, 886.837, 112.987, 0.15 ) }
    dend_47 { pt3dadd( -83.5184, 887.544, 113.436, 1.11 ) }
    dend_47 { pt3dadd( -83.234, 888.2, 113.842, 1.69 ) }
    dend_47 { pt3dadd( -83.208, 888.252, 113.878, 1.69 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 27/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -83.8825, 872.695, 101.012, 0.29 ) }
    dend_46 { pt3dadd( -84.9584, 873.513, 101.203, 0.29 ) }
    dend_46 { pt3dadd( -85.2464, 873.728, 101.246, 0.29 ) }
    dend_46 { pt3dadd( -86.0564, 874.311, 101.371, 0.15 ) }
    dend_46 { pt3dadd( -86.2299, 874.433, 101.399, 0.15 ) }
    dend_46 { pt3dadd( -86.7885, 874.838, 101.493, 0.29 ) }
    dend_46 { pt3dadd( -87.6505, 875.475, 101.641, 0.15 ) }
    dend_46 { pt3dadd( -87.7559, 875.558, 101.655, 0.15 ) }
    dend_46 { pt3dadd( -88.6174, 876.321, 101.756, 0.15 ) }
    dend_46 { pt3dadd( -88.6945, 876.406, 101.762, 0.15 ) }
    dend_46 { pt3dadd( -89.1634, 876.999, 101.789, 0.15 ) }
    dend_46 { pt3dadd( -89.2753, 877.176, 101.79, 0.15 ) }
    dend_46 { pt3dadd( -89.929, 878.377, 101.752, 0.15 ) }
    dend_46 { pt3dadd( -89.975, 878.472, 101.747, 0.15 ) }
    dend_46 { pt3dadd( -90.4207, 879.632, 101.63, 0.15 ) }
    dend_46 { pt3dadd( -90.4464, 879.705, 101.621, 0.15 ) }
    dend_46 { pt3dadd( -90.6286, 880.319, 101.522, 0.37 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 44/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -83.208, 888.252, 113.878, 0.52 ) }
    dend_49 { pt3dadd( -83.984, 889.376, 115.105, 0.52 ) }
    dend_49 { pt3dadd( -84.7857, 890.459, 116.158, 0.29 ) }
    dend_49 { pt3dadd( -85.0639, 890.855, 116.459, 0.96 ) }
    dend_49 { pt3dadd( -85.404, 891.345, 116.793, 1.11 ) }
    dend_49 { pt3dadd( -85.4636, 891.427, 116.847, 1.11 ) }
    dend_49 { pt3dadd( -85.9813, 892.12, 117.307, 0.81 ) }
    dend_49 { pt3dadd( -86.5468, 892.877, 117.726, 1.11 ) }
    dend_49 { pt3dadd( -87.2684, 893.961, 118.271, 0.37 ) }
    dend_49 { pt3dadd( -87.2961, 894.005, 118.295, 0.37 ) }
    dend_49 { pt3dadd( -87.8268, 895.024, 118.865, 0.29 ) }
    dend_49 { pt3dadd( -87.8494, 895.077, 118.899, 0.29 ) }
    dend_49 { pt3dadd( -88.0434, 895.741, 119.496, 0.81 ) }
    dend_49 { pt3dadd( -88.1044, 896.078, 119.89, 1.03 ) }
    dend_49 { pt3dadd( -88.1098, 896.118, 119.945, 1.03 ) }
    dend_49 { pt3dadd( -88.1457, 896.476, 120.435, 0.96 ) }
    dend_49 { pt3dadd( -88.2015, 897.38, 121.674, 0.66 ) }
    dend_49 { pt3dadd( -88.2508, 898.282, 122.872, 0.52 ) }
    dend_49 { pt3dadd( -88.3053, 899.025, 123.807, 0.44 ) }
    dend_49 { pt3dadd( -88.3458, 899.423, 124.268, 0.44 ) }
    dend_49 { pt3dadd( -88.3937, 899.764, 124.703, 0.37 ) }
    dend_49 { pt3dadd( -88.406, 899.856, 124.832, 0.37 ) }
    dend_49 { pt3dadd( -88.4438, 900.462, 125.756, 0.37 ) }
    dend_49 { pt3dadd( -88.4817, 901.063, 126.648, 0.22 ) }
    dend_49 { pt3dadd( -88.5166, 901.842, 127.881, 1.4 ) }
    dend_49 { pt3dadd( -88.5816, 902.889, 129.714, 0.29 ) }
    dend_49 { pt3dadd( -88.6092, 903.184, 130.303, 0.96 ) }
    dend_49 { pt3dadd( -88.6372, 903.389, 130.789, 0.96 ) }
    dend_49 { pt3dadd( -89.1408, 908.886, 138.721, 0.96 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 73/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -83.208, 888.252, 113.878, 0.22 ) }
    dend_48 { pt3dadd( -84.2058, 889.748, 113.857, 0.22 ) }
    dend_48 { pt3dadd( -85.0904, 891.075, 113.839, 0.22 ) }
    dend_48 { pt3dadd( -85.1805, 891.21, 113.838, 0.22 ) }
    dend_48 { pt3dadd( -85.9559, 892.373, 113.822, 0.22 ) }
    dend_48 { pt3dadd( -91.2659, 901.41, 115.385, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_2 = new SectionList()
    dend_75 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_75, dend_70, dend_21, dend_0, dend_74, dend_71, dend_25, dend_22, dend_14, dend_1, dend_73, dend_72, dend_27, dend_26, dend_24, dend_23, dend_18, dend_15, dend_7, dend_2, dend_67, dend_28, dend_20, dend_19, dend_17, dend_16, dend_13, dend_8, dend_4, dend_3, dend_69, dend_68, dend_66, dend_29, dend_12, dend_9, dend_6, dend_5, dend_61, dend_30, dend_11, dend_10, dend_63, dend_62, dend_52, dend_31, dend_65, dend_64, dend_60, dend_53, dend_33, dend_32, dend_55, dend_54, dend_51, dend_34, dend_57, dend_56, dend_50, dend_35, dend_59, dend_58, dend_37, dend_36, dend_39, dend_38, dend_41, dend_40, dend_43, dend_42, dend_45, dend_44, dend_47, dend_46, dend_49, dend_48]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_75 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_74 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_73 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_72 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_27 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_24 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_23 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_15 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_2 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_67 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_19 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_16 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_13 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_66 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_12 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_6 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_11 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_10 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_57 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_42 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_1 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_21 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_7 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_25 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_70 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_14 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_9 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_71 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_18 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_17 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_28 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_4 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_5 OneSecGrp_SectionRef_41.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_68 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_69 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_31 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_52 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_32 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_33 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_53 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_34 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_50 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_55 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_51 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_60 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_56 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_35 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_37 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_39 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_36 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_41 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_63 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_62 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_40 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_65 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_38 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_43 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_44 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_64 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_59 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_58 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_45 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_46 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_47 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_48 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_49 OneSecGrp_SectionRef_78.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, axon_0, axon_0, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_75 nseg = 11
    dend_74 nseg = 3
    dend_73 nseg = 3
    dend_72 nseg = 7
    dend_27 nseg = 5
    dend_26 nseg = 5
    dend_24 nseg = 7
    dend_23 nseg = 13
    dend_15 nseg = 3
    dend_2 nseg = 7
    dend_67 nseg = 3
    dend_20 nseg = 5
    dend_19 nseg = 3
    dend_16 nseg = 5
    dend_13 nseg = 11
    dend_3 nseg = 3
    dend_66 nseg = 13
    dend_29 nseg = 31
    dend_12 nseg = 3
    dend_6 nseg = 3
    dend_61 nseg = 3
    dend_11 nseg = 5
    dend_10 nseg = 13
    dend_57 nseg = 3
    dend_42 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bAC217_L5_DBC_7f0bb8efe9_0_0


