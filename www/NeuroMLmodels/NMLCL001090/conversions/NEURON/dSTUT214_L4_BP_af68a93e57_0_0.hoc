// Cell: dSTUT214_L4_BP_af68a93e57_0_0
/*
{
  "id" : "dSTUT214_L4_BP_af68a93e57_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.08452, 6.27464, 0.312461, 1.46623", "-2.79927, 5.64032, 0.287115, 2.64844", "-2.51401, 5.00599, 0.26177, 4.10361", "-2.22875, 4.37167, 0.236425, 4.91598", "-1.94349, 3.73735, 0.21108, 5.72835", "-1.65823, 3.10303, 0.185734, 6.53421", "-1.37297, 2.46871, 0.160389, 7.31212", "-1.08771, 1.83438, 0.135044, 8.08989", "-0.802456, 1.20006, 0.109699, 8.85679", "-0.517198, 0.56574, 0.0843534, 8.93483", "-0.23194, -0.0685822, 0.0590082, 8.92633", "0.0533189, -0.702904, 0.033663, 8.91784", "0.338577, -1.33723, 0.00831775, 8.90934", "0.623836, -1.97155, -0.0170275, 8.90084", "0.909094, -2.60587, -0.0423727, 8.82493", "1.19435, -3.24019, -0.067718, 7.82232", "1.47961, -3.87451, -0.0930632, 6.5965", "1.76487, -4.50884, -0.118408, 5.37067", "2.05013, -5.14316, -0.143754, 4.14485", "2.33539, -5.77748, -0.169099, 2.91903", "2.62064, -6.4118, -0.194444, 1.76337" ]
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.61629, -5.71525, -1.26548, 1.33", "2.3815, -8.95765, -1.87903, 1.33", "3.65021, -14.3335, -2.89629, 0.66", "4.63248, -18.4956, -3.68387, 0.66", "5.67917, -22.9307, -4.52312, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001318721313
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.62064, -6.4118, -0.194444, 0.33", "8.77276, -20.0921, -0.194444, 0.33", "14.9249, -33.7725, -0.194444, 0.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.67917, -22.9307, -4.52312, 0.66", "5.9978, -33.1551, -2.05853, 0.66", "6.45546, -48.3418, 1.62168, 0.66", "7.00455, -66.8811, 6.26094, 0.66", "7.48983, -81.1893, 9.86117, 0.66", "7.78242, -89.4914, 11.9436, 0.66", "7.86942, -92.2467, 12.629, 0.66", "7.9999, -95.9842, 13.5864, 0.66", "8.06072, -99.4804, 14.5058, 0.66", "8.13076, -103.513, 15.4919, 0.66", "8.18426, -105.691, 15.7501, 0.66", "8.22475, -108.407, 15.8214, 0.66", "8.33091, -112.501, 15.4533, 0.66", "8.44263, -117.881, 14.7079, 0.66", "8.53808, -120.225, 14.364, 0.66", "9.07608, -131.226, 12.6488, 0.66", "9.26743, -133.823, 12.2026, 0.66", "10.0124, -141.84, 10.6266, 0.66", "10.3654, -145.225, 9.93348, 0.66", "11.1221, -151.443, 8.74486, 0.66", "11.5566, -155.007, 8.30145, 0.66", "11.9778, -158.477, 8.2249, 0.66", "12.3835, -161.827, 8.27172, 0.66", "12.6488, -165.057, 8.32169, 0.66", "12.8796, -168.477, 8.23786, 0.66", "13.049, -173.76, 8.0255, 0.66", "13.1814, -176.973, 8.04935, 0.66", "13.2853, -180.87, 8.13312, 0.66", "13.409, -186.146, 8.22025, 0.66", "13.4596, -189.512, 8.11685, 0.66", "13.562, -194.04, 7.77693, 0.66", "13.7961, -198.305, 7.42186, 0.66" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.67917, -22.9307, -4.52312, 0.66", "7.14531, -24.2841, -4.23243, 0.66", "10.5159, -27.3955, -3.56415, 0.33", "18.2312, -34.5177, -2.03443, 0.33", "18.5223, -34.7864, -1.97671, 0.66", "21.6358, -37.6605, -1.3594, 0.33" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "14.9249, -33.7725, -0.194444, 0.33", "21.077, -47.4528, -0.194444, 0.33", "27.2291, -61.1331, -0.194444, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "13.7961, -198.305, 7.42186, 0.66", "16.8099, -201.404, 7.3857, 0.66", "18.5728, -203.161, 7.63786, 0.66", "21.5875, -205.853, 8.79786, 0.66", "23.5446, -207.455, 9.71268, 0.66", "27.342, -210.393, 11.6996, 0.66", "30.2586, -212.53, 13.2128, 0.66", "33.1331, -214.473, 14.8781, 0.66", "39.345, -218.22, 18.3961, 0.66", "42.8935, -220.174, 20.3611, 0.66", "47.0541, -222.432, 22.7168, 0.33", "48.716, -223.32, 23.5895, 0.33", "49.2985, -223.601, 23.8573, 0.66", "52.775, -225.085, 25.2195, 0.33", "53.4838, -225.369, 25.3135, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "13.7961, -198.305, 7.42186, 0.66", "14.406, -202.149, 8.62057, 0.66", "15.188, -207.116, 10.1958, 0.66", "16.8914, -217.051, 13.1889, 0.66", "17.5872, -221.38, 14.447, 0.66", "18.522, -226.65, 16.0131, 0.66", "19.4092, -232.005, 17.4518, 0.66", "19.8931, -235.016, 18.1636, 0.66", "20.402, -239.185, 18.9875, 0.66", "21.2812, -247.205, 20.274, 0.66", "21.7576, -251.765, 20.7942, 0.66", "22.2604, -257.114, 21.322, 0.66", "22.538, -261.645, 21.4939, 0.66", "22.6203, -264.101, 21.5666, 0.66", "22.7396, -272.356, 21.7013, 0.66", "22.7686, -276.63, 21.6415, 0.66", "22.6997, -282.554, 21.5186, 0.66", "22.7835, -287.297, 21.5981, 0.66", "22.8187, -289.402, 21.6097, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "22.8187, -289.402, 21.6097, 0.66", "23.1506, -291.623, 21.7767, 0.66", "23.5443, -295.229, 22.4343, 0.66", "23.9184, -299.075, 23.2628, 0.66", "24.0991, -301.6, 23.8297, 0.66", "24.3199, -305.09, 24.5372, 0.66", "24.5969, -311.265, 25.6027, 0.66", "24.6674, -315.491, 26.2648, 0.66", "24.6674, -318.391, 26.7549, 0.66", "24.6874, -321.424, 27.1871, 0.66", "24.7367, -324.827, 27.6324, 0.66", "24.7952, -327.154, 27.9097, 0.66", "24.9527, -330.35, 28.1956, 0.66", "25.1611, -333.289, 28.4356, 0.66", "25.6773, -340.198, 29.16, 0.66", "25.9364, -342.944, 29.4907, 0.66", "26.5111, -349.838, 30.2745, 0.66", "26.707, -352.618, 30.4949, 0.66", "26.8465, -355.298, 30.6121, 0.66", "26.9416, -357.71, 30.6199, 0.66", "27.0384, -361.66, 30.5876, 0.66", "27.0694, -365.04, 30.5275, 0.66", "27.0694, -371.54, 30.1871, 0.66", "27.1442, -374.822, 30.0168, 0.66", "27.2201, -377.376, 29.897, 0.66", "27.3592, -380.813, 29.7564, 0.66", "27.9009, -393.743, 29.1972, 0.66", "28.1596, -398.493, 28.9051, 0.66", "28.8803, -410.963, 27.9623, 0.66", "29.1651, -415.676, 27.5447, 0.66", "29.4706, -420.312, 27.1669, 0.66", "29.7135, -423.536, 26.9235, 0.66", "30.0966, -427.949, 26.5625, 0.66", "30.4277, -432.859, 26.1857, 0.66", "30.7261, -438.212, 25.5811, 0.66", "30.8731, -441.203, 25.2506, 0.66", "30.9836, -443.289, 25.0821, 0.66", "31.4225, -451.374, 24.8839, 0.66", "31.5575, -453.895, 24.8295, 0.66", "31.7163, -458.033, 24.5608, 0.66", "31.8793, -462.17, 24.2256, 0.66", "32.0641, -465.375, 23.9918, 0.66", "32.6158, -473.219, 23.7335, 0.66", "33.3816, -482.225, 23.6627, 0.66", "33.9427, -488.356, 23.5815, 0.66", "34.2125, -491.438, 23.4824, 0.66", "35.2097, -502.713, 22.8999, 0.66", "35.7283, -509.949, 22.2559, 0.66", "35.8777, -512.063, 22.0241, 0.66", "36.1297, -515.49, 21.5673, 0.66", "36.4876, -520.514, 20.7443, 0.66", "36.5892, -522.685, 20.3112, 0.66", "36.7465, -528.497, 18.9108, 0.66", "37.119, -540.62, 15.7899, 0.66", "37.3687, -546.874, 14.3787, 0.66", "37.4983, -549.209, 13.9333, 0.33", "37.6136, -550.768, 13.6928, 1.33", "38.0193, -554.467, 13.3397, 0.66", "38.7223, -558.927, 13.18, 0.66", "39.3075, -562.093, 13.1631, 0.66", "39.9566, -565.298, 13.2449, 0.66", "40.5527, -567.919, 13.2941, 0.66", "43.0711, -578.688, 13.7807, 0.66", "43.4193, -580.208, 13.8897, 0.33", "43.8734, -582.379, 14.0437, 1.33", "44.31, -584.534, 14.1483, 0.66", "44.6293, -586.227, 14.2253, 0.33", "45.4588, -590.903, 14.467, 0.66", "45.7133, -593.322, 14.8479, 0.66", "45.9836, -596.518, 15.5128, 0.33" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "22.8187, -289.402, 21.6097, 0.66", "20.6167, -295.336, 22.0452, 0.66", "18.7911, -300.375, 22.3384, 0.66", "17.5929, -304.157, 22.7804, 0.33", "16.0, -309.477, 23.593, 0.33", "15.749, -310.346, 23.7696, 0.66", "15.0028, -313.164, 24.401, 0.33", "14.5321, -315.219, 24.9704, 0.66", "13.5426, -320.092, 26.1481, 0.33", "13.406, -320.863, 26.3537, 0.66", "12.47, -326.08, 27.7313, 0.33", "12.1306, -328.783, 28.5128, 0.33", "11.9085, -331.723, 29.4067, 0.66", "11.7507, -335.242, 30.5518, 0.33", "11.7192, -337.144, 31.1225, 0.33", "11.7827, -338.211, 31.482, 0.66", "12.5705, -342.69, 33.5595, 0.33", "12.7123, -343.342, 33.9492, 0.66", "13.1765, -344.982, 35.0796, 0.33", "13.4034, -345.825, 35.6819, 0.33", "13.5918, -346.719, 36.2332, 0.66", "14.0549, -350.074, 37.9771, 0.33", "14.0984, -352.131, 38.7429, 0.33", "14.1129, -352.909, 38.9773, 0.66", "14.1492, -354.422, 39.2931, 0.33", "14.147, -355.224, 39.4083, 0.66", "14.1226, -356.245, 39.4964, 0.33", "14.0715, -357.303, 39.5138, 0.66", "13.9782, -358.854, 39.5735, 0.33", "13.9359, -359.419, 39.6096, 0.66", "13.5355, -364.097, 40.0347, 0.33", "13.5038, -364.396, 40.0648, 0.66", "13.3551, -365.471, 40.1885, 0.33", "13.2628, -366.031, 40.2592, 0.66", "13.0961, -367.555, 40.5898, 0.33", "13.0528, -368.252, 40.7823, 0.66", "13.0377, -369.498, 41.1734, 0.33", "13.0444, -370.381, 41.4587, 0.66", "13.0893, -371.392, 41.8044, 0.33", "13.4168, -376.094, 43.5463, 0.33", "13.5585, -377.466, 44.1156, 0.66" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "45.9836, -596.518, 15.5128, 0.66", "46.6623, -599.992, 14.7593, 0.66", "47.0274, -601.8, 14.8007, 1.33", "47.3183, -603.356, 14.9721, 0.66", "47.6422, -605.314, 15.133, 0.66", "48.3282, -609.535, 15.6836, 0.33", "49.2004, -614.643, 16.4819, 0.66", "50.3132, -621.246, 17.9342, 0.66", "50.9183, -624.535, 18.7836, 0.66", "51.6737, -628.197, 19.6433, 0.33", "52.6787, -632.878, 20.5528, 0.33", "52.9466, -634.2, 20.7129, 0.66", "53.2227, -635.291, 20.6393, 0.33", "53.4585, -636.232, 20.4242, 0.66", "54.8777, -641.713, 18.9119, 0.33", "55.4984, -644.001, 18.2786, 0.66", "56.0628, -646.168, 17.5968, 0.33", "57.5241, -652.336, 15.9342, 0.33", "58.3898, -655.952, 15.1135, 0.66", "59.9569, -662.506, 13.8906, 0.33", "60.6637, -665.602, 13.4784, 0.66", "61.3653, -668.659, 13.1478, 1.33", "62.9519, -675.645, 12.681, 0.33", "63.679, -679.109, 12.6726, 0.33", "63.9569, -680.473, 12.704, 0.66", "64.5823, -683.914, 12.9103, 0.33", "65.3547, -688.534, 13.2656, 0.33", "65.6459, -690.222, 13.4501, 1.33", "66.4557, -695.071, 13.9767, 0.33", "66.6615, -696.753, 14.1755, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "45.9836, -596.518, 15.5128, 0.66", "44.8559, -598.439, 13.3889, 0.66" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "66.6615, -696.753, 14.1755, 0.66", "64.2195, -696.402, 14.676, 0.66" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "66.6615, -696.753, 14.1755, 0.66", "66.946, -698.322, 13.9853, 0.66", "68.2129, -705.306, 13.1388, 0.33", "68.6158, -707.527, 12.8695, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "68.6158, -707.527, 12.8695, 0.33", "75.0219, -717.81, 19.0132, 0.33", "75.6315, -718.81, 19.534, 1.33", "77.3579, -721.61, 20.8213, 0.33", "77.7179, -722.192, 21.0113, 0.66", "79.4627, -724.968, 21.6241, 0.33", "79.9923, -725.81, 21.8101, 0.66", "80.4065, -726.58, 21.6123, 0.33", "80.9842, -727.541, 21.3105, 0.66", "83.1237, -730.536, 20.0353, 0.33", "83.9735, -731.619, 19.4829, 1.33" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "68.6158, -707.527, 12.8695, 0.33", "68.1014, -719.299, 16.1747, 0.33", "67.8208, -725.718, 17.9773, 0.33", "67.7767, -726.727, 18.2606, 0.66", "67.4871, -733.353, 20.1211, 0.33", "67.4485, -734.236, 20.3691, 0.66" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_0", "dend_2", "dend_1", "dend_12", "dend_3", "dend_5", "dend_4", "dend_7", "dend_6", "dend_11", "dend_8", "dend_10", "dend_9" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_11", "dend_8", "dend_8", "dend_8", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_BP_af68a93e57_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_12, id: dend_12, parent: dend_2
create dend_12
public dend_12
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_0(0), soma_0(0.4500001318721313)
    connect axon_0(0), soma_0(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_12(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.08452, 6.27464, 0.312461, 1.46623 ) }
    soma_0 { pt3dadd( -2.79927, 5.64032, 0.287115, 2.64844 ) }
    soma_0 { pt3dadd( -2.51401, 5.00599, 0.26177, 4.10361 ) }
    soma_0 { pt3dadd( -2.22875, 4.37167, 0.236425, 4.91598 ) }
    soma_0 { pt3dadd( -1.94349, 3.73735, 0.21108, 5.72835 ) }
    soma_0 { pt3dadd( -1.65823, 3.10303, 0.185734, 6.53421 ) }
    soma_0 { pt3dadd( -1.37297, 2.46871, 0.160389, 7.31212 ) }
    soma_0 { pt3dadd( -1.08771, 1.83438, 0.135044, 8.08989 ) }
    soma_0 { pt3dadd( -0.802456, 1.20006, 0.109699, 8.85679 ) }
    soma_0 { pt3dadd( -0.517198, 0.56574, 0.0843534, 8.93483 ) }
    soma_0 { pt3dadd( -0.23194, -0.0685822, 0.0590082, 8.92633 ) }
    soma_0 { pt3dadd( 0.0533189, -0.702904, 0.033663, 8.91784 ) }
    soma_0 { pt3dadd( 0.338577, -1.33723, 0.00831775, 8.90934 ) }
    soma_0 { pt3dadd( 0.623836, -1.97155, -0.0170275, 8.90084 ) }
    soma_0 { pt3dadd( 0.909094, -2.60587, -0.0423727, 8.82493 ) }
    soma_0 { pt3dadd( 1.19435, -3.24019, -0.067718, 7.82232 ) }
    soma_0 { pt3dadd( 1.47961, -3.87451, -0.0930632, 6.5965 ) }
    soma_0 { pt3dadd( 1.76487, -4.50884, -0.118408, 5.37067 ) }
    soma_0 { pt3dadd( 2.05013, -5.14316, -0.143754, 4.14485 ) }
    soma_0 { pt3dadd( 2.33539, -5.77748, -0.169099, 2.91903 ) }
    soma_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 1.76337 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 21/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.61629, -5.71525, -1.26548, 1.33 ) }
    dend_0 { pt3dadd( 2.3815, -8.95765, -1.87903, 1.33 ) }
    dend_0 { pt3dadd( 3.65021, -14.3335, -2.89629, 0.66 ) }
    dend_0 { pt3dadd( 4.63248, -18.4956, -3.68387, 0.66 ) }
    dend_0 { pt3dadd( 5.67917, -22.9307, -4.52312, 1.33 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 26/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.62064, -6.4118, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 8.77276, -20.0921, -0.194444, 0.33 ) }
    axon_0 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 29/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.67917, -22.9307, -4.52312, 0.66 ) }
    dend_2 { pt3dadd( 5.9978, -33.1551, -2.05853, 0.66 ) }
    dend_2 { pt3dadd( 6.45546, -48.3418, 1.62168, 0.66 ) }
    dend_2 { pt3dadd( 7.00455, -66.8811, 6.26094, 0.66 ) }
    dend_2 { pt3dadd( 7.48983, -81.1893, 9.86117, 0.66 ) }
    dend_2 { pt3dadd( 7.78242, -89.4914, 11.9436, 0.66 ) }
    dend_2 { pt3dadd( 7.86942, -92.2467, 12.629, 0.66 ) }
    dend_2 { pt3dadd( 7.9999, -95.9842, 13.5864, 0.66 ) }
    dend_2 { pt3dadd( 8.06072, -99.4804, 14.5058, 0.66 ) }
    dend_2 { pt3dadd( 8.13076, -103.513, 15.4919, 0.66 ) }
    dend_2 { pt3dadd( 8.18426, -105.691, 15.7501, 0.66 ) }
    dend_2 { pt3dadd( 8.22475, -108.407, 15.8214, 0.66 ) }
    dend_2 { pt3dadd( 8.33091, -112.501, 15.4533, 0.66 ) }
    dend_2 { pt3dadd( 8.44263, -117.881, 14.7079, 0.66 ) }
    dend_2 { pt3dadd( 8.53808, -120.225, 14.364, 0.66 ) }
    dend_2 { pt3dadd( 9.07608, -131.226, 12.6488, 0.66 ) }
    dend_2 { pt3dadd( 9.26743, -133.823, 12.2026, 0.66 ) }
    dend_2 { pt3dadd( 10.0124, -141.84, 10.6266, 0.66 ) }
    dend_2 { pt3dadd( 10.3654, -145.225, 9.93348, 0.66 ) }
    dend_2 { pt3dadd( 11.1221, -151.443, 8.74486, 0.66 ) }
    dend_2 { pt3dadd( 11.5566, -155.007, 8.30145, 0.66 ) }
    dend_2 { pt3dadd( 11.9778, -158.477, 8.2249, 0.66 ) }
    dend_2 { pt3dadd( 12.3835, -161.827, 8.27172, 0.66 ) }
    dend_2 { pt3dadd( 12.6488, -165.057, 8.32169, 0.66 ) }
    dend_2 { pt3dadd( 12.8796, -168.477, 8.23786, 0.66 ) }
    dend_2 { pt3dadd( 13.049, -173.76, 8.0255, 0.66 ) }
    dend_2 { pt3dadd( 13.1814, -176.973, 8.04935, 0.66 ) }
    dend_2 { pt3dadd( 13.2853, -180.87, 8.13312, 0.66 ) }
    dend_2 { pt3dadd( 13.409, -186.146, 8.22025, 0.66 ) }
    dend_2 { pt3dadd( 13.4596, -189.512, 8.11685, 0.66 ) }
    dend_2 { pt3dadd( 13.562, -194.04, 7.77693, 0.66 ) }
    dend_2 { pt3dadd( 13.7961, -198.305, 7.42186, 0.66 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 61/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.67917, -22.9307, -4.52312, 0.66 ) }
    dend_1 { pt3dadd( 7.14531, -24.2841, -4.23243, 0.66 ) }
    dend_1 { pt3dadd( 10.5159, -27.3955, -3.56415, 0.33 ) }
    dend_1 { pt3dadd( 18.2312, -34.5177, -2.03443, 0.33 ) }
    dend_1 { pt3dadd( 18.5223, -34.7864, -1.97671, 0.66 ) }
    dend_1 { pt3dadd( 21.6358, -37.6605, -1.3594, 0.33 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 67/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 14.9249, -33.7725, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 21.077, -47.4528, -0.194444, 0.33 ) }
    axon_1 { pt3dadd( 27.2291, -61.1331, -0.194444, 0.33 ) }
    // Section: dend_12, id: dend_12, parent: dend_2 (entry count 70/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 13.7961, -198.305, 7.42186, 0.66 ) }
    dend_12 { pt3dadd( 16.8099, -201.404, 7.3857, 0.66 ) }
    dend_12 { pt3dadd( 18.5728, -203.161, 7.63786, 0.66 ) }
    dend_12 { pt3dadd( 21.5875, -205.853, 8.79786, 0.66 ) }
    dend_12 { pt3dadd( 23.5446, -207.455, 9.71268, 0.66 ) }
    dend_12 { pt3dadd( 27.342, -210.393, 11.6996, 0.66 ) }
    dend_12 { pt3dadd( 30.2586, -212.53, 13.2128, 0.66 ) }
    dend_12 { pt3dadd( 33.1331, -214.473, 14.8781, 0.66 ) }
    dend_12 { pt3dadd( 39.345, -218.22, 18.3961, 0.66 ) }
    dend_12 { pt3dadd( 42.8935, -220.174, 20.3611, 0.66 ) }
    dend_12 { pt3dadd( 47.0541, -222.432, 22.7168, 0.33 ) }
    dend_12 { pt3dadd( 48.716, -223.32, 23.5895, 0.33 ) }
    dend_12 { pt3dadd( 49.2985, -223.601, 23.8573, 0.66 ) }
    dend_12 { pt3dadd( 52.775, -225.085, 25.2195, 0.33 ) }
    dend_12 { pt3dadd( 53.4838, -225.369, 25.3135, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 85/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 13.7961, -198.305, 7.42186, 0.66 ) }
    dend_3 { pt3dadd( 14.406, -202.149, 8.62057, 0.66 ) }
    dend_3 { pt3dadd( 15.188, -207.116, 10.1958, 0.66 ) }
    dend_3 { pt3dadd( 16.8914, -217.051, 13.1889, 0.66 ) }
    dend_3 { pt3dadd( 17.5872, -221.38, 14.447, 0.66 ) }
    dend_3 { pt3dadd( 18.522, -226.65, 16.0131, 0.66 ) }
    dend_3 { pt3dadd( 19.4092, -232.005, 17.4518, 0.66 ) }
    dend_3 { pt3dadd( 19.8931, -235.016, 18.1636, 0.66 ) }
    dend_3 { pt3dadd( 20.402, -239.185, 18.9875, 0.66 ) }
    dend_3 { pt3dadd( 21.2812, -247.205, 20.274, 0.66 ) }
    dend_3 { pt3dadd( 21.7576, -251.765, 20.7942, 0.66 ) }
    dend_3 { pt3dadd( 22.2604, -257.114, 21.322, 0.66 ) }
    dend_3 { pt3dadd( 22.538, -261.645, 21.4939, 0.66 ) }
    dend_3 { pt3dadd( 22.6203, -264.101, 21.5666, 0.66 ) }
    dend_3 { pt3dadd( 22.7396, -272.356, 21.7013, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_3 { pt3dadd( 22.7686, -276.63, 21.6415, 0.66 ) }
    dend_3 { pt3dadd( 22.6997, -282.554, 21.5186, 0.66 ) }
    dend_3 { pt3dadd( 22.7835, -287.297, 21.5981, 0.66 ) }
    dend_3 { pt3dadd( 22.8187, -289.402, 21.6097, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 4/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 22.8187, -289.402, 21.6097, 0.66 ) }
    dend_5 { pt3dadd( 23.1506, -291.623, 21.7767, 0.66 ) }
    dend_5 { pt3dadd( 23.5443, -295.229, 22.4343, 0.66 ) }
    dend_5 { pt3dadd( 23.9184, -299.075, 23.2628, 0.66 ) }
    dend_5 { pt3dadd( 24.0991, -301.6, 23.8297, 0.66 ) }
    dend_5 { pt3dadd( 24.3199, -305.09, 24.5372, 0.66 ) }
    dend_5 { pt3dadd( 24.5969, -311.265, 25.6027, 0.66 ) }
    dend_5 { pt3dadd( 24.6674, -315.491, 26.2648, 0.66 ) }
    dend_5 { pt3dadd( 24.6674, -318.391, 26.7549, 0.66 ) }
    dend_5 { pt3dadd( 24.6874, -321.424, 27.1871, 0.66 ) }
    dend_5 { pt3dadd( 24.7367, -324.827, 27.6324, 0.66 ) }
    dend_5 { pt3dadd( 24.7952, -327.154, 27.9097, 0.66 ) }
    dend_5 { pt3dadd( 24.9527, -330.35, 28.1956, 0.66 ) }
    dend_5 { pt3dadd( 25.1611, -333.289, 28.4356, 0.66 ) }
    dend_5 { pt3dadd( 25.6773, -340.198, 29.16, 0.66 ) }
    dend_5 { pt3dadd( 25.9364, -342.944, 29.4907, 0.66 ) }
    dend_5 { pt3dadd( 26.5111, -349.838, 30.2745, 0.66 ) }
    dend_5 { pt3dadd( 26.707, -352.618, 30.4949, 0.66 ) }
    dend_5 { pt3dadd( 26.8465, -355.298, 30.6121, 0.66 ) }
    dend_5 { pt3dadd( 26.9416, -357.71, 30.6199, 0.66 ) }
    dend_5 { pt3dadd( 27.0384, -361.66, 30.5876, 0.66 ) }
    dend_5 { pt3dadd( 27.0694, -365.04, 30.5275, 0.66 ) }
    dend_5 { pt3dadd( 27.0694, -371.54, 30.1871, 0.66 ) }
    dend_5 { pt3dadd( 27.1442, -374.822, 30.0168, 0.66 ) }
    dend_5 { pt3dadd( 27.2201, -377.376, 29.897, 0.66 ) }
    dend_5 { pt3dadd( 27.3592, -380.813, 29.7564, 0.66 ) }
    dend_5 { pt3dadd( 27.9009, -393.743, 29.1972, 0.66 ) }
    dend_5 { pt3dadd( 28.1596, -398.493, 28.9051, 0.66 ) }
    dend_5 { pt3dadd( 28.8803, -410.963, 27.9623, 0.66 ) }
    dend_5 { pt3dadd( 29.1651, -415.676, 27.5447, 0.66 ) }
    dend_5 { pt3dadd( 29.4706, -420.312, 27.1669, 0.66 ) }
    dend_5 { pt3dadd( 29.7135, -423.536, 26.9235, 0.66 ) }
    dend_5 { pt3dadd( 30.0966, -427.949, 26.5625, 0.66 ) }
    dend_5 { pt3dadd( 30.4277, -432.859, 26.1857, 0.66 ) }
    dend_5 { pt3dadd( 30.7261, -438.212, 25.5811, 0.66 ) }
    dend_5 { pt3dadd( 30.8731, -441.203, 25.2506, 0.66 ) }
    dend_5 { pt3dadd( 30.9836, -443.289, 25.0821, 0.66 ) }
    dend_5 { pt3dadd( 31.4225, -451.374, 24.8839, 0.66 ) }
    dend_5 { pt3dadd( 31.5575, -453.895, 24.8295, 0.66 ) }
    dend_5 { pt3dadd( 31.7163, -458.033, 24.5608, 0.66 ) }
    dend_5 { pt3dadd( 31.8793, -462.17, 24.2256, 0.66 ) }
    dend_5 { pt3dadd( 32.0641, -465.375, 23.9918, 0.66 ) }
    dend_5 { pt3dadd( 32.6158, -473.219, 23.7335, 0.66 ) }
    dend_5 { pt3dadd( 33.3816, -482.225, 23.6627, 0.66 ) }
    dend_5 { pt3dadd( 33.9427, -488.356, 23.5815, 0.66 ) }
    dend_5 { pt3dadd( 34.2125, -491.438, 23.4824, 0.66 ) }
    dend_5 { pt3dadd( 35.2097, -502.713, 22.8999, 0.66 ) }
    dend_5 { pt3dadd( 35.7283, -509.949, 22.2559, 0.66 ) }
    dend_5 { pt3dadd( 35.8777, -512.063, 22.0241, 0.66 ) }
    dend_5 { pt3dadd( 36.1297, -515.49, 21.5673, 0.66 ) }
    dend_5 { pt3dadd( 36.4876, -520.514, 20.7443, 0.66 ) }
    dend_5 { pt3dadd( 36.5892, -522.685, 20.3112, 0.66 ) }
    dend_5 { pt3dadd( 36.7465, -528.497, 18.9108, 0.66 ) }
    dend_5 { pt3dadd( 37.119, -540.62, 15.7899, 0.66 ) }
    dend_5 { pt3dadd( 37.3687, -546.874, 14.3787, 0.66 ) }
    dend_5 { pt3dadd( 37.4983, -549.209, 13.9333, 0.33 ) }
    dend_5 { pt3dadd( 37.6136, -550.768, 13.6928, 1.33 ) }
    dend_5 { pt3dadd( 38.0193, -554.467, 13.3397, 0.66 ) }
    dend_5 { pt3dadd( 38.7223, -558.927, 13.18, 0.66 ) }
    dend_5 { pt3dadd( 39.3075, -562.093, 13.1631, 0.66 ) }
    dend_5 { pt3dadd( 39.9566, -565.298, 13.2449, 0.66 ) }
    dend_5 { pt3dadd( 40.5527, -567.919, 13.2941, 0.66 ) }
    dend_5 { pt3dadd( 43.0711, -578.688, 13.7807, 0.66 ) }
    dend_5 { pt3dadd( 43.4193, -580.208, 13.8897, 0.33 ) }
    dend_5 { pt3dadd( 43.8734, -582.379, 14.0437, 1.33 ) }
    dend_5 { pt3dadd( 44.31, -584.534, 14.1483, 0.66 ) }
    dend_5 { pt3dadd( 44.6293, -586.227, 14.2253, 0.33 ) }
    dend_5 { pt3dadd( 45.4588, -590.903, 14.467, 0.66 ) }
    dend_5 { pt3dadd( 45.7133, -593.322, 14.8479, 0.66 ) }
    dend_5 { pt3dadd( 45.9836, -596.518, 15.5128, 0.33 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 74/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 22.8187, -289.402, 21.6097, 0.66 ) }
    dend_4 { pt3dadd( 20.6167, -295.336, 22.0452, 0.66 ) }
    dend_4 { pt3dadd( 18.7911, -300.375, 22.3384, 0.66 ) }
    dend_4 { pt3dadd( 17.5929, -304.157, 22.7804, 0.33 ) }
    dend_4 { pt3dadd( 16.0, -309.477, 23.593, 0.33 ) }
    dend_4 { pt3dadd( 15.749, -310.346, 23.7696, 0.66 ) }
    dend_4 { pt3dadd( 15.0028, -313.164, 24.401, 0.33 ) }
    dend_4 { pt3dadd( 14.5321, -315.219, 24.9704, 0.66 ) }
    dend_4 { pt3dadd( 13.5426, -320.092, 26.1481, 0.33 ) }
    dend_4 { pt3dadd( 13.406, -320.863, 26.3537, 0.66 ) }
    dend_4 { pt3dadd( 12.47, -326.08, 27.7313, 0.33 ) }
    dend_4 { pt3dadd( 12.1306, -328.783, 28.5128, 0.33 ) }
    dend_4 { pt3dadd( 11.9085, -331.723, 29.4067, 0.66 ) }
    dend_4 { pt3dadd( 11.7507, -335.242, 30.5518, 0.33 ) }
    dend_4 { pt3dadd( 11.7192, -337.144, 31.1225, 0.33 ) }
    dend_4 { pt3dadd( 11.7827, -338.211, 31.482, 0.66 ) }
    dend_4 { pt3dadd( 12.5705, -342.69, 33.5595, 0.33 ) }
    dend_4 { pt3dadd( 12.7123, -343.342, 33.9492, 0.66 ) }
    dend_4 { pt3dadd( 13.1765, -344.982, 35.0796, 0.33 ) }
    dend_4 { pt3dadd( 13.4034, -345.825, 35.6819, 0.33 ) }
    dend_4 { pt3dadd( 13.5918, -346.719, 36.2332, 0.66 ) }
    dend_4 { pt3dadd( 14.0549, -350.074, 37.9771, 0.33 ) }
    dend_4 { pt3dadd( 14.0984, -352.131, 38.7429, 0.33 ) }
    dend_4 { pt3dadd( 14.1129, -352.909, 38.9773, 0.66 ) }
    dend_4 { pt3dadd( 14.1492, -354.422, 39.2931, 0.33 ) }
    dend_4 { pt3dadd( 14.147, -355.224, 39.4083, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_4 { pt3dadd( 14.1226, -356.245, 39.4964, 0.33 ) }
    dend_4 { pt3dadd( 14.0715, -357.303, 39.5138, 0.66 ) }
    dend_4 { pt3dadd( 13.9782, -358.854, 39.5735, 0.33 ) }
    dend_4 { pt3dadd( 13.9359, -359.419, 39.6096, 0.66 ) }
    dend_4 { pt3dadd( 13.5355, -364.097, 40.0347, 0.33 ) }
    dend_4 { pt3dadd( 13.5038, -364.396, 40.0648, 0.66 ) }
    dend_4 { pt3dadd( 13.3551, -365.471, 40.1885, 0.33 ) }
    dend_4 { pt3dadd( 13.2628, -366.031, 40.2592, 0.66 ) }
    dend_4 { pt3dadd( 13.0961, -367.555, 40.5898, 0.33 ) }
    dend_4 { pt3dadd( 13.0528, -368.252, 40.7823, 0.66 ) }
    dend_4 { pt3dadd( 13.0377, -369.498, 41.1734, 0.33 ) }
    dend_4 { pt3dadd( 13.0444, -370.381, 41.4587, 0.66 ) }
    dend_4 { pt3dadd( 13.0893, -371.392, 41.8044, 0.33 ) }
    dend_4 { pt3dadd( 13.4168, -376.094, 43.5463, 0.33 ) }
    dend_4 { pt3dadd( 13.5585, -377.466, 44.1156, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 15/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 45.9836, -596.518, 15.5128, 0.66 ) }
    dend_7 { pt3dadd( 46.6623, -599.992, 14.7593, 0.66 ) }
    dend_7 { pt3dadd( 47.0274, -601.8, 14.8007, 1.33 ) }
    dend_7 { pt3dadd( 47.3183, -603.356, 14.9721, 0.66 ) }
    dend_7 { pt3dadd( 47.6422, -605.314, 15.133, 0.66 ) }
    dend_7 { pt3dadd( 48.3282, -609.535, 15.6836, 0.33 ) }
    dend_7 { pt3dadd( 49.2004, -614.643, 16.4819, 0.66 ) }
    dend_7 { pt3dadd( 50.3132, -621.246, 17.9342, 0.66 ) }
    dend_7 { pt3dadd( 50.9183, -624.535, 18.7836, 0.66 ) }
    dend_7 { pt3dadd( 51.6737, -628.197, 19.6433, 0.33 ) }
    dend_7 { pt3dadd( 52.6787, -632.878, 20.5528, 0.33 ) }
    dend_7 { pt3dadd( 52.9466, -634.2, 20.7129, 0.66 ) }
    dend_7 { pt3dadd( 53.2227, -635.291, 20.6393, 0.33 ) }
    dend_7 { pt3dadd( 53.4585, -636.232, 20.4242, 0.66 ) }
    dend_7 { pt3dadd( 54.8777, -641.713, 18.9119, 0.33 ) }
    dend_7 { pt3dadd( 55.4984, -644.001, 18.2786, 0.66 ) }
    dend_7 { pt3dadd( 56.0628, -646.168, 17.5968, 0.33 ) }
    dend_7 { pt3dadd( 57.5241, -652.336, 15.9342, 0.33 ) }
    dend_7 { pt3dadd( 58.3898, -655.952, 15.1135, 0.66 ) }
    dend_7 { pt3dadd( 59.9569, -662.506, 13.8906, 0.33 ) }
    dend_7 { pt3dadd( 60.6637, -665.602, 13.4784, 0.66 ) }
    dend_7 { pt3dadd( 61.3653, -668.659, 13.1478, 1.33 ) }
    dend_7 { pt3dadd( 62.9519, -675.645, 12.681, 0.33 ) }
    dend_7 { pt3dadd( 63.679, -679.109, 12.6726, 0.33 ) }
    dend_7 { pt3dadd( 63.9569, -680.473, 12.704, 0.66 ) }
    dend_7 { pt3dadd( 64.5823, -683.914, 12.9103, 0.33 ) }
    dend_7 { pt3dadd( 65.3547, -688.534, 13.2656, 0.33 ) }
    dend_7 { pt3dadd( 65.6459, -690.222, 13.4501, 1.33 ) }
    dend_7 { pt3dadd( 66.4557, -695.071, 13.9767, 0.33 ) }
    dend_7 { pt3dadd( 66.6615, -696.753, 14.1755, 0.66 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 45/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 45.9836, -596.518, 15.5128, 0.66 ) }
    dend_6 { pt3dadd( 44.8559, -598.439, 13.3889, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 66.6615, -696.753, 14.1755, 0.66 ) }
    dend_11 { pt3dadd( 64.2195, -696.402, 14.676, 0.66 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 49/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 66.6615, -696.753, 14.1755, 0.66 ) }
    dend_8 { pt3dadd( 66.946, -698.322, 13.9853, 0.66 ) }
    dend_8 { pt3dadd( 68.2129, -705.306, 13.1388, 0.33 ) }
    dend_8 { pt3dadd( 68.6158, -707.527, 12.8695, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 53/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 68.6158, -707.527, 12.8695, 0.33 ) }
    dend_10 { pt3dadd( 75.0219, -717.81, 19.0132, 0.33 ) }
    dend_10 { pt3dadd( 75.6315, -718.81, 19.534, 1.33 ) }
    dend_10 { pt3dadd( 77.3579, -721.61, 20.8213, 0.33 ) }
    dend_10 { pt3dadd( 77.7179, -722.192, 21.0113, 0.66 ) }
    dend_10 { pt3dadd( 79.4627, -724.968, 21.6241, 0.33 ) }
    dend_10 { pt3dadd( 79.9923, -725.81, 21.8101, 0.66 ) }
    dend_10 { pt3dadd( 80.4065, -726.58, 21.6123, 0.33 ) }
    dend_10 { pt3dadd( 80.9842, -727.541, 21.3105, 0.66 ) }
    dend_10 { pt3dadd( 83.1237, -730.536, 20.0353, 0.33 ) }
    dend_10 { pt3dadd( 83.9735, -731.619, 19.4829, 1.33 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 68.6158, -707.527, 12.8695, 0.33 ) }
    dend_9 { pt3dadd( 68.1014, -719.299, 16.1747, 0.33 ) }
    dend_9 { pt3dadd( 67.8208, -725.718, 17.9773, 0.33 ) }
    dend_9 { pt3dadd( 67.7767, -726.727, 18.2606, 0.66 ) }
    dend_9 { pt3dadd( 67.4871, -733.353, 20.1211, 0.33 ) }
    dend_9 { pt3dadd( 67.4485, -734.236, 20.3691, 0.66 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_2 = new SectionList()
    dend_0 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_0, dend_2, dend_1, dend_12, dend_3, dend_5, dend_4, dend_7, dend_6, dend_11, dend_8, dend_10, dend_9]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_2 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_12 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_3 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_5 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_7 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_6 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_8 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_9 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_11, dend_8, dend_8, dend_8, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_8 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_2 nseg = 9
    dend_12 nseg = 3
    dend_3 nseg = 5
    dend_5 nseg = 15
    dend_4 nseg = 5
    dend_7 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_BP_af68a93e57_0_0


