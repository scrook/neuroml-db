// Cell: bNAC219_L4_DBC_0d7219bf46_0_0
/*
{
  "id" : "bNAC219_L4_DBC_0d7219bf46_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 10.3756, 1.7, 1.62", "0.851454, 10.3756, 1.7, 1.62", "0.79361, 11.6225, 1.66247, 0.96", "0.744034, 12.6912, 1.63031, 1.25", "0.674868, 14.1821, 1.58543, 1.55", "0.610135, 15.5775, 1.54343, 1.84", "0.544895, 16.9839, 1.5011, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.6529, -9.03, 1.18", "-1.82757, -9.75871, -9.10221, 1.18", "-0.812827, -10.1339, -9.29666, 1.18", "0.892851, -10.9695, -9.67295, 1.03", "1.76733, -11.4707, -9.88492, 0.96", "2.52298, -11.8123, -10.0387, 0.81", "1.66905, -12.033, -10.0536, 0.74", "1.0443, -12.4631, -10.1807, 0.74", "0.216453, -13.0279, -10.4005, 0.96", "-0.795242, -13.6633, -10.7037, 1.18", "-2.25704, -14.4889, -11.1871, 0.88", "-3.48509, -15.1172, -11.6492, 0.96", "-4.76686, -15.718, -12.149, 1.25", "-5.6595, -16.1191, -12.5244, 1.99", "-6.53458, -16.5154, -12.9373, 2.95", "-7.38458, -16.9388, -13.4243, 3.54", "-8.10207, -17.3513, -13.9501, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.9489, 1.23, 0.81", "-1.72967, -12.9649, 1.18994, 0.81", "-1.43587, -14.2089, 1.14108, 0.96", "-1.09106, -15.4512, 1.09456, 1.18", "-0.719255, -16.6542, 1.05219, 1.18", "-0.275943, -17.9874, 1.04752, 0.81", "0.00813203, -18.8021, 1.07353, 1.03", "0.440737, -19.9436, 1.18771, 1.47", "0.7423, -20.7611, 1.33491, 2.06", "0.97833, -21.4983, 1.52414, 2.14", "1.2938, -22.869, 1.97084, 1.33", "1.47875, -24.6243, 2.63026, 0.96", "1.41615, -26.1872, 3.25569, 0.96", "1.1771, -27.304, 3.71433, 1.18", "0.887487, -28.1293, 4.05852, 1.99", "0.424434, -29.1483, 4.47672, 2.88", "-0.188037, -30.3054, 4.92244, 3.02", "-1.04639, -31.8606, 5.47228, 1.77", "-2.21921, -34.1525, 6.17574, 0.81", "-2.79814, -35.4883, 6.53826, 0.81", "-3.11121, -36.4384, 6.76123, 0.81", "-3.36002, -37.5927, 7.00463, 0.81", "-3.50739, -38.851, 7.26516, 0.81", "-3.54031, -39.9077, 7.47696, 1.03", "-3.52166, -40.9514, 7.67371, 1.25", "-3.43237, -42.8967, 8.02341, 0.81", "-3.35476, -44.4473, 8.31542, 1.03", "-3.31572, -45.6852, 8.57301, 1.62", "-3.33173, -46.7064, 8.81464, 2.73", "-3.43441, -48.1463, 9.19459, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.49085, 5.69, 0.59", "7.37216, 6.97278, 5.5102, 0.44", "8.21085, 7.49637, 5.58768, 0.44", "8.91218, 7.95686, 5.84235, 0.44", "9.66337, 8.44786, 6.26059, 0.37", "10.2242, 8.79658, 6.63737, 1.03", "11.1053, 9.31661, 7.31296, 1.33", "12.0359, 9.84322, 8.24028, 1.47", "12.6742, 10.1732, 9.00913, 1.25", "13.3691, 10.4443, 9.95794, 0.29", "13.8164, 10.526, 10.6153, 0.22", "14.1611, 10.5159, 11.0952, 0.22", "14.3812, 10.4374, 11.3468, 0.22", "14.6437, 10.3128, 11.6154, 0.22", "15.053, 10.1283, 12.0145, 1.03", "15.9218, 9.80352, 12.8873, 2.21", "16.4031, 9.72242, 13.3782, 3.02", "17.9245, 9.87582, 14.9649, 0.29", "18.6244, 10.158, 15.736, 0.29", "19.0182, 10.4296, 16.1831, 0.44", "19.4013, 10.8006, 16.6374, 0.66", "19.9916, 11.5394, 17.3619, 1.11", "20.5329, 12.308, 18.0557, 0.52", "20.9636, 12.9796, 18.5664, 0.22", "21.2394, 13.2781, 18.8488, 0.22", "21.5101, 13.3735, 19.1023, 0.22", "21.774, 13.2688, 19.3283, 0.22", "22.3785, 12.8696, 19.8189, 0.66", "22.9897, 12.4299, 20.2884, 1.7", "23.5959, 11.9958, 20.7713, 2.21", "24.1682, 11.6321, 21.2718, 1.7", "24.9565, 11.2879, 22.0744, 0.29", "25.6814, 11.1822, 22.9867, 0.22", "25.9763, 11.266, 23.4646, 0.22", "26.2706, 11.567, 24.2134, 0.22", "26.4328, 12.0092, 25.0336, 0.96", "26.5091, 12.803, 26.3205, 0.74", "26.4678, 13.3687, 27.2164, 0.74", "26.4082, 13.6817, 27.7494, 0.74", "26.3461, 14.1029, 28.6255, 0.74", "26.372, 14.3428, 29.2049, 0.74", "26.4332, 14.402, 29.4079, 0.74", "26.875, 14.5263, 30.0657, 0.74", "27.3392, 14.6215, 30.5901, 1.18", "28.1558, 14.7688, 31.4331, 0.44", "28.9, 14.9061, 32.1224, 1.25", "29.9326, 15.1231, 33.0201, 2.73", "31.0359, 15.395, 33.9624, 3.54", "31.6539, 15.5715, 34.4706, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 7.1161, 5.52, 0.88", "-5.03187, 7.60741, 5.70355, 0.74", "-5.65248, 8.31359, 6.05746, 0.22", "-6.06947, 8.74296, 6.31563, 0.22", "-6.62505, 9.26567, 6.65107, 0.44", "-7.09023, 9.65972, 6.91615, 0.44", "-7.70399, 10.1012, 7.24574, 0.22", "-8.3632, 10.4566, 7.58904, 0.22", "-8.70462, 10.5966, 7.75391, 0.22", "-9.18573, 10.7551, 7.9651, 0.96", "-9.94385, 10.9544, 8.29468, 1.47", "-11.3191, 11.2598, 8.946, 0.15", "-11.9322, 11.3943, 9.22515, 0.15", "-12.3606, 11.5136, 9.39106, 0.15", "-12.9958, 11.7085, 9.61595, 0.88", "-14.1187, 12.078, 10.0013, 0.37", "-15.3185, 12.502, 10.4082, 1.55", "-16.2773, 12.8731, 10.7327, 2.95", "-18.7225, 13.873, 11.5496, 0.07", "-19.1787, 14.0587, 11.6977, 0.88", "-20.1212, 14.4443, 11.9748, 0.07", "-20.9936, 14.8089, 12.167, 0.22", "-21.5924, 15.0611, 12.2739, 0.22", "-22.923, 15.5977, 12.4894, 0.15", "-23.3369, 15.7471, 12.5482, 0.96", "-23.9283, 15.9513, 12.6009, 1.84", "-26.0289, 16.6315, 12.6572, 0.15", "-26.4952, 16.7607, 12.6497, 0.66", "-27.2355, 16.9369, 12.6213, 1.18", "-29.0394, 17.3041, 12.5239, 0.15", "-29.7114, 17.4152, 12.4724, 1.33", "-30.6115, 17.5292, 12.3901, 2.51", "-33.1556, 17.7486, 12.1188, 0.15", "-33.5654, 17.7749, 12.0567, 0.52", "-34.3104, 17.8058, 11.9063, 0.81", "-35.4697, 17.8352, 11.6085, 0.15", "-36.0558, 17.8464, 11.449, 0.15", "-36.5004, 17.8583, 11.3149, 0.66", "-37.851, 17.9202, 10.8627, 1.84", "-39.18, 18.0249, 10.4413, 0.22", "-39.8583, 18.098, 10.2489, 0.37", "-40.1526, 18.1377, 10.1755, 0.88", "-41.263, 18.3006, 9.95897, 0.15", "-41.875, 18.4034, 9.87041, 0.15", "-42.5499, 18.5317, 9.81813, 0.74", "-44.5671, 18.934, 9.80724, 0.07", "-44.9487, 19.0158, 9.82342, 0.52", "-46.259, 19.3285, 9.93752, 0.15", "-46.8807, 19.4911, 10.0216, 0.96", "-47.6606, 19.7079, 10.1542, 1.92", "-49.3387, 20.2573, 10.4904, 0.15", "-50.0338, 20.5276, 10.6441, 0.22", "-50.8544, 20.8789, 10.811, 0.07", "-51.3893, 21.1481, 10.9068, 1.03", "-51.9397, 21.4497, 10.9967, 1.77", "-53.589, 22.4225, 11.2269, 0.07", "-54.2568, 22.8491, 11.308, 0.07", "-54.7175, 23.1395, 11.3732, 0.74", "-55.9708, 23.9346, 11.5627, 0.07", "-56.3581, 24.1769, 11.6223, 0.52", "-57.4246, 24.7578, 11.7977, 0.07", "-58.0909, 25.0426, 11.9135, 0.22", "-58.8333, 25.2715, 12.0328, 0.15", "-59.1447, 25.3245, 12.0731, 0.96", "-59.9094, 25.3567, 12.1446, 1.92", "-61.4757, 25.3145, 12.2433, 0.07", "-62.2408, 25.2464, 12.2561, 0.29", "-63.0738, 25.1818, 12.2305, 0.07", "-63.8775, 25.1701, 12.1746, 0.07", "-64.19, 25.1858, 12.1507, 0.07", "-64.4847, 25.216, 12.1229, 0.44", "-65.1016, 25.3181, 12.0487, 0.74", "-66.6195, 25.5917, 11.8565, 0.07", "-67.8244, 25.8109, 11.7097, 0.15", "-68.6616, 25.9583, 11.6084, 0.96", "-69.7, 26.0935, 11.4882, 0.07", "-70.5401, 26.1631, 11.3914, 0.59", "-71.3526, 26.1779, 11.2998, 0.15", "-71.7404, 26.1565, 11.2552, 0.74", "-72.3288, 26.094, 11.1842, 1.18", "-74.1621, 25.863, 10.8929, 0.15", "-74.7663, 25.7903, 10.7823, 0.81", "-75.6762, 25.6865, 10.5896, 0.15", "-76.2086, 25.6292, 10.4645, 0.22", "-77.5788, 25.4856, 10.1158, 0.07", "-78.4266, 25.3975, 9.8855, 1.03", "-79.018, 25.3471, 9.71379, 1.84", "-80.9799, 25.2475, 9.15602, 0.07", "-81.3713, 25.2483, 9.0487, 0.22", "-83.2081, 25.3506, 8.59087, 0.07", "-83.4453, 25.3723, 8.53871, 0.66", "-83.9769, 25.4294, 8.45256, 1.25", "-84.8739, 25.5446, 8.32593, 0.15", "-85.5967, 25.6716, 8.24316, 0.74", "-86.7876, 25.8693, 8.14978, 0.07", "-87.5913, 25.995, 8.11412, 0.07", "-88.419, 26.1093, 8.08791, 0.07", "-88.5839, 26.1333, 8.08949, 0.07", "-89.2603, 26.2513, 8.12372, 0.74", "-90.5637, 26.5022, 8.27295, 0.07", "-90.9272, 26.5906, 8.33818, 1.11", "-91.6984, 26.7966, 8.51645, 1.62", "-93.1076, 27.0956, 8.88754, 0.07", "-93.8458, 27.2195, 9.09468, 0.81", "-95.0226, 27.3646, 9.43606, 0.15", "-95.9846, 27.4304, 9.73332, 0.15", "-96.996, 27.4421, 10.0531, 1.11", "-99.2825, 27.3331, 10.7722, 0.15", "-99.8097, 27.2813, 10.9295, 1.03", "-100.774, 27.1614, 11.2052, 1.84", "-102.423, 26.9199, 11.6282, 0.22", "-102.72, 26.8687, 11.7034, 0.22", "-103.325, 26.7624, 11.8588, 0.07", "-103.769, 26.6873, 11.9807, 0.59", "-104.699, 26.5212, 12.258, 0.07", "-105.308, 26.4, 12.4446, 0.29", "-105.923, 26.2505, 12.6284, 0.07", "-106.631, 26.0451, 12.8389, 0.37", "-107.64, 25.712, 13.1351, 0.07", "-108.372, 25.4343, 13.346, 0.66", "-109.187, 25.0312, 13.5404, 0.07", "-109.929, 24.59, 13.6876, 0.96", "-111.203, 23.6709, 13.8707, 0.07", "-111.892, 23.037, 13.9119, 0.07", "-112.346, 22.4981, 13.8865, 1.03", "-113.559, 20.5373, 13.6678, 0.15", "-113.874, 19.8901, 13.5619, 0.15", "-114.206, 19.0445, 13.3921, 1.11", "-114.651, 17.6297, 13.0758, 0.15", "-114.987, 16.417, 12.7886, 1.84", "-115.613, 14.0472, 12.2148, 0.15", "-115.747, 13.5252, 12.0905, 0.59", "-115.977, 12.7147, 11.9219, 1.03", "-116.561, 10.9422, 11.6422, 0.15", "-116.788, 10.3593, 11.6087, 0.52", "-117.273, 9.25428, 11.6368, 0.15", "-117.574, 8.59802, 11.7155, 0.66", "-118.02, 7.57566, 11.9264, 0.15", "-118.479, 6.39819, 12.2554, 1.62", "-119.021, 4.67652, 12.8414, 0.07", "-119.172, 4.03187, 13.0634, 0.29", "-119.354, 2.84554, 13.4355, 0.07", "-119.402, 2.1991, 13.5961, 0.96", "-119.421, 1.17337, 13.714, 2.21", "-119.41, 0.284831, 13.7162, 1.33", "-119.411, -0.952986, 13.5918, 0.07", "-119.451, -2.04954, 13.4123, 0.07", "-119.516, -2.87651, 13.2305, 1.03", "-119.703, -4.83829, 12.7488, 0.07", "-119.782, -5.46619, 12.5804, 0.88", "-120.011, -6.9802, 12.1546, 0.07", "-120.096, -7.5304, 11.9957, 0.66", "-120.155, -7.90671, 11.8931, 1.25", "-120.351, -9.08099, 11.5966, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.615567", "5.74396, 24.801, 0.0, 0.615567", "9.42458, 39.3425, 0.0, 0.615567" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.544895, 16.9839, 1.5011, 0.37", "1.20631, 17.6245, 1.7507, 0.37", "1.41577, 17.8035, 1.83476, 0.37", "1.81311, 18.1481, 2.02791, 0.37", "2.3007, 18.6582, 2.33024, 0.22", "2.43138, 18.8513, 2.46159, 0.22", "2.48576, 19.0784, 2.66425, 0.22", "2.44387, 19.2131, 2.83911, 0.22", "2.33539, 19.4275, 3.11657, 0.22", "2.14138, 19.7849, 3.58929, 0.22", "2.02245, 20.0149, 3.89818, 0.22", "1.85058, 20.44, 4.43698, 0.66", "1.72355, 20.9442, 5.03802, 1.03", "1.63428, 21.5822, 5.80383, 0.22", "1.62037, 22.0237, 6.36725, 0.22", "1.65556, 22.3339, 6.80245, 0.88", "1.73466, 22.6521, 7.29379, 1.47", "1.93799, 23.1493, 8.16043, 0.15", "2.13927, 23.5465, 8.86096, 0.15", "2.35208, 23.9551, 9.5449, 0.15", "2.49906, 24.3526, 10.1503, 0.15", "2.58269, 24.7491, 10.742, 0.15", "2.57693, 25.2213, 11.4391, 0.15", "2.37204, 25.9478, 12.4288, 0.96", "2.18547, 26.358, 12.9472, 2.06", "1.76935, 27.0162, 13.7078, 0.22", "1.58242, 27.2857, 13.9917, 0.22", "1.39054, 27.5292, 14.254, 0.22", "1.09492, 27.8604, 14.6721, 0.22", "0.782586, 28.1874, 15.2204, 0.22", "0.591519, 28.3923, 15.5954, 1.33", "0.362919, 28.7999, 16.2507, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.544895, 16.9839, 1.5011, 1.25", "0.10225, 18.0285, 1.43944, 1.25", "-0.424658, 19.3795, 1.44728, 0.81", "-0.800471, 20.534, 1.55174, 0.81", "-1.08209, 21.6484, 1.72647, 1.11", "-1.25821, 22.6851, 1.94473, 1.4", "-1.31714, 23.5717, 2.17129, 0.59", "-1.21541, 24.4176, 2.51277, 0.59", "-0.876013, 25.414, 3.04483, 0.52", "-0.561058, 26.0118, 3.40696, 0.59", "-0.186595, 26.614, 3.79669, 0.59", "0.307825, 27.4059, 4.32508, 0.44", "0.565926, 27.8953, 4.64731, 0.44", "0.634298, 28.1739, 4.80117, 0.44", "0.595136, 28.6729, 5.05085, 0.52", "0.393991, 29.4276, 5.46176, 0.66", "0.167383, 30.0491, 5.8245, 0.29", "-0.0139373, 30.5061, 6.11893, 0.29", "-0.207546, 31.094, 6.49946, 0.37", "-0.4101, 31.8565, 6.97919, 0.88", "-0.59776, 32.6449, 7.46643, 1.62", "-0.744436, 33.3734, 7.90333, 2.43", "-0.876564, 34.1992, 8.38552, 2.43", "-1.04199, 35.5774, 9.16268, 0.22", "-1.09234, 36.2273, 9.51881, 0.52", "-1.12376, 36.8836, 9.84507, 0.22", "-1.13131, 37.2319, 9.98915, 0.22", "-1.1306, 37.6789, 10.1416, 0.22", "-1.12479, 38.2229, 10.2718, 0.22", "-1.12442, 38.5863, 10.3364, 0.22", "-1.12919, 38.8248, 10.3692, 0.22", "-1.1875, 39.6756, 10.4331, 0.37", "-1.27306, 40.3992, 10.4478, 0.37", "-1.38158, 41.09, 10.4282, 0.52", "-1.49808, 41.7888, 10.387, 0.96", "-1.6237, 42.6253, 10.3044, 0.96", "-1.77234, 43.9034, 10.1056, 0.44", "-1.80659, 44.736, 9.92395, 0.44", "-1.81757, 45.6001, 9.69936, 1.47", "-1.81917, 46.5016, 9.43762, 2.8", "-1.82054, 47.3341, 9.16952, 3.61", "-1.8254, 48.1976, 8.85756, 3.02", "-1.8365, 50.2184, 8.04003, 0.22", "-1.84928, 50.8356, 7.77001, 0.29", "-1.85854, 51.1713, 7.61999, 0.29", "-1.88995, 51.8263, 7.31353, 0.22", "-1.94711, 52.612, 6.94268, 0.52", "-2.01281, 53.2661, 6.6298, 1.33", "-2.12016, 54.0857, 6.17985, 2.43", "-2.14399, 54.8446, 5.75345, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.10207, -17.3513, -13.9501, 0.44", "-11.3192, -19.0519, -16.314, 0.44", "-11.4926, -19.7767, -16.8678, 0.44", "-11.6017, -20.5527, -17.4677, 0.44", "-11.7771, -21.376, -18.1422, 0.44", "-12.0738, -22.3113, -18.9849, 0.59", "-12.5864, -23.5639, -20.2699, 0.74", "-12.8935, -24.4343, -21.2586, 1.11", "-13.311, -25.3833, -22.5314, 1.47", "-13.8065, -26.2161, -23.9071, 1.47", "-14.6268, -27.1636, -25.9395, 0.59", "-15.3175, -27.6249, -27.4881, 0.52", "-15.8417, -27.7361, -28.5763, 0.52", "-16.4573, -27.6734, -29.7103, 0.44", "-17.18, -27.4565, -30.7597, 0.44", "-17.5829, -27.3094, -31.2388, 0.44", "-18.6445, -26.9631, -32.2391, 0.96", "-19.6774, -26.6784, -33.0966, 0.96", "-20.9219, -26.4165, -34.034, 1.4", "-22.5488, -26.1741, -35.1749, 2.36", "-23.8966, -26.0479, -36.0694, 3.32", "-25.4761, -25.934, -37.1413, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.10207, -17.3513, -13.9501, 0.29", "-8.01647, -18.2017, -14.1869, 0.29", "-7.97066, -18.4939, -14.2717, 0.29", "-7.90841, -18.877, -14.3915, 0.29", "-7.86082, -19.1963, -14.5076, 0.81", "-7.81391, -19.5393, -14.6483, 1.11", "-7.75701, -20.0327, -14.8846, 0.22", "-7.6939, -20.3954, -15.1021, 0.22", "-7.67558, -20.6019, -15.2579, 0.22", "-7.67442, -20.8815, -15.5073, 0.22", "-7.67375, -21.0355, -15.6114, 0.37", "-7.66455, -21.3322, -15.7804, 0.37", "-7.64963, -21.5741, -15.8924, 0.81", "-7.6202, -21.9245, -16.0197, 1.7", "-7.58017, -22.4148, -16.1839, 2.29", "-7.49189, -23.4825, -16.5073, 0.29", "-7.46029, -23.8454, -16.601, 0.96", "-7.43625, -24.0887, -16.6524, 0.96", "-7.36645, -24.6543, -16.7528, 0.15", "-7.30757, -25.0153, -16.7935, 0.15", "-7.26137, -25.2584, -16.8104, 0.59", "-7.14654, -25.7269, -16.8185, 0.29", "-7.06248, -26.0263, -16.8063, 1.4", "-6.92611, -26.4746, -16.7723, 2.73", "-6.5884, -27.5124, -16.6535, 0.15", "-6.53543, -27.671, -16.6323, 0.74", "-6.43701, -27.9591, -16.6, 0.74", "-6.27383, -28.4026, -16.5604, 0.15", "-6.12183, -28.8032, -16.5301, 0.15", "-5.99357, -29.1521, -16.5101, 0.15", "-5.88143, -29.4639, -16.5088, 1.25", "-5.72908, -29.9314, -16.5352, 0.22", "-5.64929, -30.2504, -16.5789, 0.22", "-5.62834, -30.4138, -16.6123, 0.22", "-5.63327, -30.6464, -16.6621, 0.22", "-5.68237, -31.0662, -16.7466, 0.44", "-5.7518, -31.4591, -16.8184, 1.62", "-5.83353, -31.8794, -16.8889, 3.02", "-5.92684, -32.388, -16.9677, 3.02", "-6.1095, -33.5292, -17.1406, 0.29", "-6.16555, -33.9494, -17.1986, 0.81", "-6.20464, -34.3159, -17.2403, 1.03", "-6.23378, -34.6981, -17.2795, 0.37", "-6.25018, -34.9945, -17.3003, 1.18", "-6.26241, -35.5942, -17.3276, 0.22", "-6.25194, -35.8242, -17.3296, 0.74", "-6.23203, -36.0137, -17.3214, 0.74", "-6.19893, -36.2167, -17.299, 0.15", "-6.10199, -36.7649, -17.2009, 0.44", "-6.06857, -36.9021, -17.1683, 0.44", "-5.94239, -37.324, -17.0547, 0.22", "-5.86609, -37.5727, -16.995, 1.11", "-5.81291, -37.7828, -16.9531, 1.62", "-5.7395, -38.1326, -16.8949, 1.62", "-5.62152, -38.9333, -16.8108, 0.22", "-5.6038, -39.3347, -16.7788, 0.96", "-5.64777, -39.7442, -16.7589, 1.18", "-5.82129, -40.4587, -16.7546, 0.15", "-5.89493, -40.6967, -16.759, 0.22", "-6.12441, -41.2394, -16.7935, 0.07", "-6.27865, -41.4721, -16.8294, 0.22", "-6.67209, -41.9199, -16.9278, 0.07", "-6.84413, -42.0646, -16.9735, 0.15", "-6.97427, -46.4872, -17.7405, 0.15", "-7.75266, -50.8496, -18.4726, 0.15", "-7.61334, -55.3146, -18.9402, 0.15", "-7.06586, -59.7099, -19.6484, 0.15", "-6.42878, -63.9906, -20.8016, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.43441, -48.1463, 9.19459, 1.99", "-3.85442, -49.8202, 9.15762, 1.99", "-4.34849, -52.1396, 9.11867, 0.59", "-4.58552, -53.4634, 9.10157, 0.59", "-4.80973, -55.0511, 9.10287, 0.59", "-4.88564, -55.829, 9.11163, 1.11", "-4.95961, -57.2446, 9.15794, 2.58", "-4.92154, -57.9399, 9.19679, 2.88", "-4.84101, -58.5409, 9.24909, 2.65", "-4.71926, -59.4618, 9.364, 1.55", "-4.56354, -60.7567, 9.57307, 0.74", "-4.4617, -61.9914, 9.78705, 0.44", "-4.43147, -63.0722, 9.98117, 0.29", "-4.45813, -63.909, 10.1388, 0.29", "-4.54914, -64.9762, 10.3576, 0.29", "-4.57771, -65.3141, 10.4299, 0.29", "-4.63785, -65.9379, 10.5675, 0.44", "-4.70981, -66.5553, 10.6941, 1.11", "-4.79258, -67.2531, 10.8462, 2.36", "-4.93181, -68.7047, 11.1609, 2.73", "-5.09634, -71.4099, 11.7486, 0.44", "-5.12109, -71.9427, 11.8754, 0.44", "-5.16448, -72.9707, 12.1393, 0.59", "-5.19745, -73.9596, 12.4103, 0.29", "-5.21378, -74.5783, 12.584, 0.29", "-5.1937, -75.155, 12.7398, 0.29", "-5.12777, -75.7531, 12.9277, 0.29", "-5.03176, -76.215, 13.0947, 0.88", "-4.83901, -76.8617, 13.3546, 1.84", "-4.61584, -77.478, 13.6147, 2.14", "-3.94552, -79.2378, 14.4059, 0.44", "-3.65389, -80.0258, 14.7695, 0.66", "-3.30938, -80.9599, 15.2353, 0.29", "-3.18189, -81.2951, 15.4289, 0.29", "-3.05841, -81.6423, 15.67, 0.29", "-3.00287, -81.8639, 15.8607, 0.29", "-3.03947, -82.0994, 16.0721, 0.29", "-3.20031, -82.6148, 16.314, 0.29", "-3.31975, -83.0078, 16.4245, 0.29", "-3.443, -83.4756, 16.5277, 0.29", "-3.62494, -84.2231, 16.6675, 1.18", "-3.78959, -84.9892, 16.8234, 2.43", "-3.94821, -85.8778, 17.0233, 2.88", "-4.13872, -87.2523, 17.367, 1.55", "-4.29822, -88.9991, 17.8799, 0.52", "-4.35395, -90.1045, 18.2645, 0.29", "-4.37878, -90.9868, 18.6166, 0.29", "-4.37992, -91.7051, 18.9341, 0.66", "-4.36682, -92.2879, 19.2077, 0.96", "-4.32659, -93.0547, 19.5378, 0.22", "-4.28139, -93.7793, 19.7593, 0.22", "-4.24173, -94.5577, 19.8791, 0.29", "-4.20305, -95.27, 19.9129, 0.59", "-4.15273, -96.4045, 19.9066, 1.33", "-4.10468, -97.6818, 19.8615, 2.21", "-4.06294, -98.6999, 19.8087, 3.24", "-3.9569, -100.489, 19.7069, 1.77", "-3.84987, -101.984, 19.6357, 0.44", "-3.77362, -103.04, 19.5971, 0.37", "-3.6996, -104.236, 19.5702, 0.37", "-3.65931, -105.013, 19.5679, 0.88", "-3.64933, -105.368, 19.569, 1.77", "-3.66444, -106.504, 19.5663, 3.1", "-3.80406, -108.264, 19.5498, 1.33", "-3.99073, -109.469, 19.5295, 0.74", "-4.32869, -110.877, 19.4946, 0.22", "-4.50857, -111.451, 19.4766, 0.22", "-4.66114, -111.865, 19.4626, 0.52", "-5.09744, -112.848, 19.4273, 0.81", "-5.64331, -113.911, 19.425, 0.29", "-5.80954, -114.233, 19.433, 0.37", "-6.16376, -114.994, 19.4664, 0.37", "-6.50953, -115.908, 19.5856, 0.44", "-6.83159, -116.959, 19.8054, 0.81", "-7.12036, -118.209, 20.1521, 0.81", "-7.29073, -119.186, 20.4691, 0.81", "-7.50072, -120.436, 20.9093, 0.37", "-7.76239, -121.942, 21.5083, 0.37", "-7.88831, -122.703, 21.8553, 1.18", "-7.97647, -123.439, 22.2429, 2.8", "-8.00947, -124.064, 22.6127, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-3.43441, -48.1463, 9.19459, 0.66", "-1.6172, -49.7004, 10.2548, 0.66", "-0.446011, -50.8539, 10.9413, 0.44", "0.357622, -51.7775, 11.4129, 0.88", "0.891417, -52.4956, 11.7281, 0.44", "1.31682, -53.1654, 11.9701, 0.22", "1.71525, -53.9193, 12.1978, 0.22", "1.93336, -54.7191, 12.3128, 0.22", "2.05776, -55.4637, 12.3894, 0.22", "2.10754, -56.1356, 12.4666, 0.59", "2.13388, -57.1179, 12.6304, 1.7", "2.12767, -58.4113, 12.8971, 1.47", "2.09853, -60.6477, 13.4373, 0.44", "2.1128, -61.8455, 13.7565, 0.29", "2.12531, -62.6074, 13.9674, 0.22", "2.15347, -63.4654, 14.1934, 0.22", "2.18562, -64.0718, 14.3543, 0.96", "2.28543, -65.2424, 14.6366, 2.51", "2.45092, -66.5465, 14.945, 3.39", "2.66126, -67.7798, 15.21, 3.1", "3.03638, -69.4303, 15.5806, 1.03", "3.44984, -71.0101, 15.9516, 0.29", "3.77965, -72.1344, 16.2538, 0.22", "4.01037, -72.8623, 16.4746, 0.22", "4.14177, -73.2772, 16.6162, 0.22", "4.34184, -73.882, 16.8371, 0.29", "4.55664, -74.5553, 17.07, 0.22", "4.77223, -75.3715, 17.2348, 0.29", "4.87322, -75.8005, 17.2851, 0.81", "5.15834, -77.0693, 17.3482, 1.55", "5.38681, -78.1082, 17.3574, 2.29", "5.59521, -79.0239, 17.3415, 2.06", "6.08517, -80.9473, 17.3141, 0.22", "6.28119, -81.5871, 17.3308, 0.22", "6.45205, -82.0499, 17.3751, 0.22", "6.54181, -82.2547, 17.4137, 0.22", "6.84921, -82.8846, 17.5977, 0.81", "7.32441, -83.8179, 17.9324, 1.84", "7.77994, -84.7674, 18.331, 2.8", "8.22691, -85.8753, 18.8347, 1.77", "8.55436, -86.901, 19.2996, 0.81", "8.90589, -88.2257, 19.9004, 0.22", "9.08698, -88.9918, 20.2383, 0.29", "9.23348, -89.7496, 20.5671, 0.29", "9.39105, -91.0941, 21.1472, 0.59", "9.43814, -92.3283, 21.7008, 1.47", "9.41275, -92.9554, 22.0046, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "31.6539, 15.5715, 34.4706, 0.22", "32.4525, 15.8675, 35.5743, 0.22", "32.9912, 16.0672, 36.3188, 0.22", "33.7449, 16.3465, 37.3605, 1.47", "34.0389, 16.4555, 37.7669, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "31.6539, 15.5715, 34.4706, 0.29", "32.6672, 14.7709, 35.5317, 0.29", "33.2559, 14.2128, 36.1654, 0.15", "33.4982, 13.9811, 36.4075, 0.22", "33.9891, 13.5157, 36.8654, 0.22", "34.5692, 12.9454, 37.4103, 0.22", "35.0257, 12.5044, 37.8129, 0.22", "35.6504, 11.8724, 38.3352, 0.22", "36.2724, 11.2366, 38.8265, 0.22", "36.9312, 10.6039, 39.2985, 0.22", "37.7699, 9.88712, 39.8003, 0.15", "38.5566, 9.28585, 40.1836, 0.15", "38.9524, 9.01259, 40.3491, 0.15", "39.4346, 8.67628, 40.534, 0.66", "39.9193, 8.3269, 40.7049, 1.25", "40.7197, 7.75573, 40.9501, 0.15", "41.1275, 7.47147, 41.0625, 0.15", "41.8027, 7.00489, 41.2336, 0.88", "42.7371, 6.36947, 41.4515, 0.15", "43.129, 6.11075, 41.5338, 0.44", "43.6409, 5.77593, 41.6485, 1.18", "44.6878, 5.09605, 41.908, 0.07", "45.4626, 4.62081, 42.1088, 0.07", "46.0677, 4.2543, 42.2909, 1.47", "46.4182, 4.05475, 42.4115, 1.47", "47.5521, 3.39812, 42.8453, 0.15", "48.0351, 3.10031, 43.0678, 1.11", "48.4227, 2.84004, 43.2792, 1.47", "49.5901, 1.98868, 44.0114, 0.07", "50.1943, 1.48581, 44.4373, 0.15", "50.6153, 1.09153, 44.7658, 0.22", "51.1785, 0.504022, 45.2733, 0.07", "51.5002, 0.153865, 45.5938, 1.18", "51.8742, -0.247322, 45.9822, 1.77", "52.7346, -1.15095, 46.8802, 0.07", "53.2437, -1.58863, 47.3321, 0.15", "54.2113, -2.21417, 48.0595, 0.74", "55.0068, -2.56998, 48.5499, 0.15", "55.5308, -2.70566, 48.8171, 0.81", "56.0871, -2.76466, 49.053, 2.14", "58.1558, -2.69017, 49.7561, 0.15", "58.8923, -2.58194, 49.9773, 0.15", "59.4878, -2.43862, 50.1454, 0.37", "60.578, -2.08999, 50.4946, 0.07", "61.0101, -1.91781, 50.6725, 0.88", "61.3955, -1.7216, 50.8693, 1.25", "62.3737, -1.04285, 51.5605, 0.07", "62.8409, -0.645433, 51.9788, 1.11", "63.2274, -0.246013, 52.4256, 1.55", "63.7158, 0.301251, 53.1479, 0.07", "63.937, 0.549774, 53.5297, 0.74", "64.3271, 1.00604, 54.315, 0.15", "64.6278, 1.38083, 55.0068, 0.81", "64.9476, 1.77435, 55.7794, 1.25", "65.4615, 2.3659, 57.0516, 0.22", "65.6801, 2.59265, 57.6119, 0.22", "65.7983, 2.68468, 57.9037, 0.22", "66.0776, 2.81886, 58.5285, 0.15", "66.3559, 2.89421, 59.1173, 0.81", "66.9924, 2.92479, 60.318, 0.22", "67.5215, 2.89262, 61.217, 0.22", "67.9956, 2.79997, 61.9328, 1.62", "68.5327, 2.63861, 62.6793, 0.15", "68.9344, 2.49058, 63.1914, 0.96", "69.9624, 2.09485, 64.3114, 0.07", "70.6466, 1.84165, 64.9692, 0.59", "71.5741, 1.54773, 65.8129, 0.07", "72.2486, 1.37175, 66.4223, 0.07", "72.6775, 1.27628, 66.8073, 1.25", "74.0193, 1.06506, 67.9601, 0.07", "74.7286, 1.00796, 68.5173, 0.81", "75.873, 1.00401, 69.3659, 0.07", "76.2316, 1.04272, 69.6254, 0.07", "76.6777, 1.13441, 69.9454, 1.03", "77.621, 1.3811, 70.6293, 0.07", "78.501, 1.70145, 71.2673, 0.07", "79.4587, 2.10095, 71.9184, 0.07", "80.0615, 2.40041, 72.2949, 0.66", "80.4821, 2.62394, 72.5637, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181552", "13.1052, 53.8839, 0.0, 0.181552", "16.7858, 68.4253, 0.0, 0.181552" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "0.362919, 28.7999, 16.2507, 0.22", "-1.19071, 29.5595, 18.2864, 0.22", "-1.76552, 29.9878, 19.0662, 0.22", "-2.17062, 30.4871, 19.7918, 0.15", "-2.46493, 31.0002, 20.5039, 0.15", "-2.66137, 31.395, 20.9987, 0.15", "-2.93978, 32.2084, 21.9066, 0.66", "-3.13235, 32.9542, 22.674, 0.22", "-3.45056, 34.1047, 23.8907, 0.22", "-3.69983, 34.9993, 24.8579, 1.62", "-3.98523, 36.0829, 26.081, 3.1", "-4.76181, 38.7933, 29.3384, 0.29", "-5.09957, 39.8152, 30.6638, 0.22", "-5.27583, 40.2637, 31.2576, 0.22", "-5.32661, 40.3851, 31.412, 0.22", "-5.54568, 40.9084, 32.0843, 0.22", "-5.77743, 41.4452, 32.8471, 0.22", "-6.18822, 42.0746, 33.8855, 0.22", "-6.58987, 42.8096, 34.9755, 0.88", "-6.81089, 43.2388, 35.548, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "0.362919, 28.7999, 16.2507, 0.22", "2.47479, 29.1634, 16.695, 0.22", "3.45303, 29.3318, 16.9008, 0.37", "4.30289, 29.4781, 17.0796, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.14399, 54.8446, 5.75345, 0.15", "-2.98119, 56.9944, 5.65759, 0.15", "-3.42232, 58.1306, 5.6626, 0.81", "-3.76465, 59.0021, 5.63009, 1.18", "-4.4815, 60.8076, 5.52846, 0.22", "-4.84772, 61.7887, 5.46601, 0.81", "-5.06457, 62.42, 5.44213, 0.81", "-5.44966, 63.803, 5.50502, 0.07", "-5.78113, 65.2838, 5.60698, 0.07", "-5.91686, 66.0657, 5.66068, 0.96", "-6.08758, 67.286, 5.7261, 1.92", "-6.33315, 68.9296, 5.83429, 0.22", "-6.44768, 69.8081, 5.9246, 0.22", "-6.537, 70.6035, 6.03536, 0.22", "-6.61624, 71.3515, 6.17859, 0.81", "-6.72497, 72.2484, 6.35412, 1.11", "-7.03522, 74.204, 6.71356, 0.15", "-7.29127, 75.6494, 6.92693, 0.15", "-7.40375, 76.2657, 7.00537, 0.74", "-7.59295, 77.5386, 7.1542, 1.92", "-7.65647, 78.1333, 7.21415, 2.88", "-7.74572, 79.4336, 7.35672, 1.84", "-7.8057, 81.4685, 7.60442, 0.22", "-7.82672, 82.7923, 7.77128, 0.59", "-7.8183, 83.6903, 7.88179, 0.59", "-7.7785, 84.8456, 8.00117, 0.22", "-7.70164, 86.1318, 8.09901, 0.22", "-7.63213, 87.0778, 8.12679, 0.22", "-7.62427, 88.061, 8.07748, 0.15", "-7.72781, 89.2986, 7.89995, 0.15", "-7.88676, 90.2798, 7.66433, 0.88", "-8.14611, 91.5337, 7.25813, 1.77", "-8.3625, 92.4667, 6.91041, 1.77", "-8.89398, 94.2999, 6.20089, 0.15", "-9.19348, 95.1927, 5.86182, 0.37", "-9.47959, 96.0071, 5.58322, 0.96", "-9.82164, 96.9949, 5.32778, 1.77", "-10.3439, 98.6059, 5.05002, 0.29", "-10.8051, 100.268, 4.88401, 0.15", "-10.8948, 100.708, 4.86747, 0.52", "-11.0911, 101.675, 4.85911, 1.18", "-11.4362, 103.277, 4.8887, 0.15", "-11.6476, 104.253, 4.92451, 0.15", "-11.8034, 105.127, 4.98242, 1.03", "-11.9757, 106.808, 5.16621, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.14399, 54.8446, 5.75345, 0.22", "-1.74626, 55.9103, 6.15624, 0.22", "-1.37179, 56.932, 6.56476, 0.22", "-1.08108, 57.7168, 6.87337, 0.96", "-0.852159, 58.2909, 7.08955, 1.18", "-0.408731, 59.3094, 7.4411, 0.15", "-0.107248, 59.9218, 7.6406, 0.15", "0.127439, 60.3437, 7.75242, 0.15", "0.388589, 60.8233, 7.83919, 0.15", "0.641122, 61.3742, 7.88975, 0.15", "0.89185, 62.0264, 7.89698, 1.33", "1.16849, 62.8721, 7.83623, 2.73", "1.36593, 63.6562, 7.75567, 3.1", "1.71337, 65.9092, 7.49347, 0.22", "1.79655, 66.9242, 7.3725, 0.15", "1.81367, 67.6238, 7.29111, 0.52", "1.80851, 68.2711, 7.21601, 0.74", "1.76981, 69.6, 7.05902, 0.22", "1.75198, 70.3773, 6.9793, 1.18", "1.75509, 71.0809, 6.92921, 2.58", "1.82659, 72.8242, 6.88154, 0.22", "1.86975, 73.5506, 6.88152, 0.22", "1.91594, 74.3137, 6.89435, 0.81", "1.98718, 75.5566, 6.93172, 2.51", "2.07912, 77.6931, 7.02534, 0.22", "2.08584, 78.6049, 7.07956, 0.29", "2.03744, 79.6127, 7.15705, 0.15", "1.94668, 80.6344, 7.2426, 0.15", "1.83677, 81.4373, 7.3148, 1.03", "1.69582, 82.1261, 7.38094, 1.99", "1.46258, 82.8812, 7.45989, 1.99", "0.810767, 84.558, 7.63978, 0.15", "0.491343, 85.2448, 7.71489, 0.15", "0.179964, 85.8358, 7.76998, 0.15", "-0.080573, 86.2727, 7.80504, 0.44", "-0.851541, 87.387, 7.89287, 0.15", "-1.50986, 88.208, 7.95945, 1.47", "-2.11512, 88.8401, 8.02252, 2.51", "-3.14371, 89.8096, 8.14194, 0.37", "-3.72458, 90.3173, 8.20705, 0.22", "-4.25376, 90.7321, 8.26237, 0.07", "-4.75977, 91.0745, 8.32714, 0.29", "-5.71065, 91.6319, 8.48359, 0.07", "-6.51596, 92.0767, 8.6375, 0.44", "-7.63396, 92.6561, 8.86626, 0.07", "-8.55793, 93.1268, 9.04163, 0.15", "-9.18705, 93.4327, 9.11616, 0.74", "-10.0256, 93.8201, 9.20277, 1.84", "-11.3586, 94.3813, 9.31593, 0.15", "-12.0869, 94.6683, 9.36669, 0.59", "-12.6693, 94.8869, 9.39909, 0.29", "-13.9746, 95.3945, 9.40061, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-25.4761, -25.934, -37.1413, 1.47", "-26.7167, -26.149, -37.6629, 1.47", "-27.9612, -26.4809, -38.3828, 0.52", "-28.5384, -26.7066, -38.7907, 0.52", "-29.0928, -26.9234, -39.1825, 1.11", "-29.7063, -27.1634, -39.6161, 2.21", "-30.2707, -27.3841, -40.015, 1.11", "-31.1831, -27.9116, -40.853, 0.44", "-31.6897, -28.3544, -41.4412, 1.47", "-38.8201, -30.579, -44.4728, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-25.4761, -25.934, -37.1413, 0.22", "-25.7244, -28.4491, -37.7945, 0.22", "-25.8211, -29.2784, -38.0274, 0.22", "-25.9447, -30.2783, -38.2998, 0.96", "-26.105, -31.7289, -38.7218, 0.22", "-26.1862, -32.7268, -39.041, 0.22", "-26.25, -33.5113, -39.2918, 0.81", "-26.3157, -34.3225, -39.5774, 1.92", "-26.3894, -35.2973, -39.9164, 0.81", "-26.4464, -36.5392, -40.4, 0.15", "-26.447, -37.4825, -40.8194, 0.66", "-26.2612, -47.713, -45.6834, 0.66", "-27.7405, -58.4937, -48.9901, 0.66", "-29.2542, -68.9071, -53.2535, 0.66", "-32.4288, -79.335, -56.4999, 0.66", "-36.5111, -89.3274, -60.0464, 0.66", "-39.0093, -100.313, -61.7801, 0.66", "-40.8098, -111.579, -61.4447, 0.66", "-43.6411, -122.478, -59.5806, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-8.00947, -124.064, 22.6127, 0.37", "-6.2683, -126.393, 23.8334, 0.37", "-5.40585, -127.939, 24.5859, 0.22", "-5.02854, -128.857, 25.0177, 0.22", "-4.67712, -129.994, 25.5425, 0.22", "-4.41954, -131.039, 25.999, 0.29", "-4.18488, -132.363, 26.508, 0.29", "-4.20385, -133.5, 26.8526, 0.22", "-4.30306, -134.6, 27.1496, 0.81", "-4.4196, -135.653, 27.4288, 1.77", "-4.5322, -136.727, 27.7031, 2.43", "-4.66336, -138.866, 28.1959, 0.96", "-4.7503, -141.865, 28.8644, 0.22", "-4.80055, -143.039, 29.1156, 1.18", "-4.90737, -144.368, 29.3865, 1.7", "-4.97461, -144.934, 29.4987, 1.7", "-5.27803, -146.771, 29.8978, 0.74", "-5.62963, -148.551, 30.3043, 0.29", "-5.98644, -150.239, 30.6697, 0.29", "-6.22864, -151.512, 30.965, 0.29", "-6.45463, -152.554, 31.2069, 0.66", "-6.73253, -153.737, 31.5005, 1.47", "-6.99409, -154.791, 31.7915, 2.73", "-7.16611, -155.765, 32.0739, 2.88", "-7.21964, -158.261, 32.8887, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-8.00947, -124.064, 22.6127, 0.22", "-9.62948, -124.839, 22.7565, 0.22", "-10.4809, -125.262, 22.8004, 0.22", "-10.8617, -125.487, 22.8071, 0.22", "-11.1499, -125.68, 22.8068, 0.22", "-11.599, -125.999, 22.815, 0.29", "-11.9408, -126.243, 22.8233, 0.96", "-12.6568, -126.773, 22.7912, 1.84", "-13.6729, -127.54, 22.6863, 0.22", "-14.2766, -127.984, 22.6115, 0.22", "-14.9472, -128.422, 22.5188, 0.96", "-15.7694, -128.857, 22.4088, 0.22", "-16.5846, -129.129, 22.2933, 0.22", "-16.9055, -129.178, 22.2457, 0.22", "-17.5938, -129.199, 22.1511, 0.22", "-18.4276, -129.211, 22.0477, 0.29", "-19.0083, -129.242, 21.9841, 1.25", "-20.0422, -129.359, 21.9113, 2.88", "-20.4771, -129.426, 21.8942, 2.73", "-22.233, -129.818, 21.8224, 0.29", "-22.918, -130.037, 21.7929, 0.66", "-23.8291, -130.384, 21.7482, 0.29", "-24.3654, -130.599, 21.7061, 0.22", "-25.0747, -130.873, 21.6405, 0.22", "-25.8064, -131.12, 21.5516, 0.22", "-26.9402, -131.43, 21.376, 0.22", "-27.4439, -131.515, 21.2749, 0.37", "-28.3099, -131.617, 21.0801, 0.37", "-29.105, -131.679, 20.8811, 0.66", "-29.6303, -131.7, 20.739, 1.62", "-30.243, -131.65, 20.5553, 2.51", "-31.2999, -131.425, 20.2007, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "9.41275, -92.9554, 22.0046, 3.24", "9.67068, -94.2844, 22.0814, 3.24", "9.92112, -95.4281, 22.1506, 3.24", "10.4801, -97.7586, 22.2984, 0.22", "10.8624, -99.2433, 22.3957, 0.29", "11.0768, -100.034, 22.4486, 0.22", "11.3502, -100.994, 22.5142, 0.22", "11.5424, -101.591, 22.5473, 0.22", "11.6972, -102.04, 22.5758, 0.22", "11.9496, -102.76, 22.6236, 0.74", "12.1053, -103.258, 22.6512, 0.74", "12.2827, -104.119, 22.6949, 0.22", "12.3713, -104.884, 22.7395, 0.22", "12.4891, -105.947, 22.7962, 0.22", "12.5865, -106.642, 22.8021, 0.22", "12.7564, -107.608, 22.7831, 0.22", "12.9884, -108.603, 22.7505, 1.33", "13.3528, -109.884, 22.6868, 3.02", "13.9335, -111.515, 22.5915, 0.88", "14.5527, -113.067, 22.522, 0.22", "14.8798, -113.852, 22.4988, 0.22", "15.3283, -114.914, 22.4858, 0.22", "15.5875, -115.563, 22.4957, 1.18", "16.0455, -116.859, 22.5918, 2.06", "16.5642, -118.694, 22.8812, 0.22", "16.7234, -119.57, 23.0853, 0.52", "16.8073, -120.327, 23.2876, 0.52", "16.9146, -121.764, 23.7181, 0.22", "16.9513, -122.395, 23.9264, 0.22", "17.0102, -123.809, 24.4293, 1.99", "17.1465, -126.217, 25.3113, 0.29", "17.1862, -126.999, 25.5928, 0.22", "17.2525, -128.319, 26.0528, 0.22", "17.2983, -128.988, 26.2688, 1.03", "17.3608, -129.775, 26.503, 2.14", "17.4326, -130.518, 26.7121, 2.06", "17.6254, -132.361, 27.2124, 0.22", "17.6884, -133.181, 27.4171, 0.66", "17.7798, -134.893, 27.8102, 0.22", "17.8326, -135.997, 28.0415, 0.22", "17.879, -136.72, 28.1668, 0.66", "17.9676, -137.803, 28.3259, 0.22", "18.0689, -138.776, 28.4475, 1.55", "18.1541, -139.579, 28.5345, 2.8", "18.2475, -140.387, 28.6047, 2.58", "18.6534, -143.096, 28.7664, 0.22", "18.7583, -143.939, 28.8125, 0.22", "18.8371, -144.667, 28.8387, 0.59", "18.9018, -145.321, 28.8655, 0.29", "18.974, -146.168, 28.901, 1.03", "19.0551, -147.183, 28.9324, 2.06", "19.174, -149.233, 28.9477, 0.15", "19.2106, -149.748, 28.9399, 0.15", "19.3208, -150.885, 28.9006, 0.29", "19.406, -151.656, 28.8695, 0.15", "19.5113, -152.535, 28.8291, 0.15", "19.6123, -153.279, 28.8102, 0.96", "19.7384, -154.053, 28.7946, 2.06", "19.8848, -155.117, 28.8066, 2.14", "20.1491, -157.638, 28.8903, 0.22", "20.192, -158.456, 28.9557, 0.22", "20.2096, -159.59, 29.0961, 0.22", "20.2061, -159.926, 29.1518, 0.59", "20.172, -160.761, 29.3156, 1.4", "20.126, -161.637, 29.5067, 0.66", "20.0361, -163.436, 29.9406, 0.22", "19.97, -164.316, 30.1229, 0.22", "19.9128, -164.98, 30.2353, 0.22", "19.8604, -165.702, 30.3488, 1.03", "19.8205, -166.786, 30.5014, 2.21", "19.817, -169.087, 30.8199, 0.15", "19.8772, -170.465, 30.9905, 0.15", "19.91, -171.029, 31.059, 0.81", "19.9617, -171.833, 31.1526, 1.33", "20.0375, -173.037, 31.2917, 0.22", "20.1124, -174.247, 31.4235, 0.22", "20.1656, -174.997, 31.4988, 0.88", "20.2115, -175.659, 31.5769, 0.66", "20.3018, -177.152, 31.7904, 0.15", "20.3708, -178.251, 31.9696, 0.15", "20.4049, -178.663, 32.0457, 0.74", "20.4992, -179.49, 32.2071, 1.18", "20.7379, -181.153, 32.5636, 0.22", "20.9201, -182.11, 32.8028, 0.22", "21.078, -182.705, 32.9609, 0.22", "21.2675, -183.304, 33.1308, 0.22", "21.5222, -184.05, 33.3395, 0.22", "21.7969, -184.877, 33.5551, 1.33", "22.0909, -185.836, 33.7818, 2.21", "22.5608, -187.549, 34.139, 0.15", "22.769, -188.25, 34.2986, 0.29", "22.8811, -188.589, 34.3822, 0.29", "23.2751, -189.659, 34.6749, 0.15", "23.3891, -189.974, 34.761, 0.15", "23.6201, -190.674, 34.9339, 0.66", "23.9918, -191.916, 35.2545, 0.15", "24.1299, -192.407, 35.3701, 0.15", "24.2368, -192.764, 35.4675, 0.15", "24.4987, -193.59, 35.7328, 0.15", "24.6551, -194.115, 35.9074, 0.37", "24.8595, -194.876, 36.1499, 1.03", "25.065, -195.692, 36.4046, 0.22", "25.3753, -196.836, 36.7682, 0.22", "25.6662, -197.812, 37.0785, 1.4", "25.941, -198.662, 37.3401, 2.14", "26.2334, -199.583, 37.6128, 1.4", "26.7417, -201.337, 38.0808, 0.22", "26.8827, -201.888, 38.21, 0.81", "27.0321, -202.589, 38.3474, 1.55", "27.282, -203.951, 38.5889, 0.29", "27.4682, -205.151, 38.794, 0.22", "27.5747, -205.969, 38.9209, 0.22", "27.6501, -206.803, 39.0161, 0.29", "27.7064, -207.755, 39.1213, 0.15", "27.7387, -208.483, 39.1978, 0.96", "27.7596, -208.986, 39.2445, 1.47", "27.8077, -209.736, 39.2976, 1.47", "27.9449, -211.05, 39.3935, 0.22", "28.1328, -212.335, 39.502, 0.22", "28.2708, -213.054, 39.5625, 0.88", "28.496, -214.012, 39.6499, 0.88", "28.8968, -215.504, 39.8057, 0.15", "29.2205, -216.512, 39.9302, 0.15", "29.4875, -217.236, 40.0282, 0.81", "29.931, -218.392, 40.2254, 0.15", "30.2107, -219.139, 40.3816, 0.81", "30.5321, -220.038, 40.5953, 0.52", "30.7874, -220.849, 40.7997, 1.62", "30.996, -221.696, 41.0122, 1.62", "31.3253, -223.43, 41.4029, 0.22", "31.4717, -224.4, 41.5966, 0.22", "31.5459, -224.979, 41.686, 0.74", "31.6181, -225.629, 41.7627, 0.29", "31.7013, -226.571, 41.8557, 1.47", "31.7645, -227.224, 41.9137, 1.47", "31.9154, -228.763, 42.0082, 0.15", "32.0092, -229.511, 42.0953, 0.52", "32.1701, -230.554, 42.2582, 0.15", "32.3104, -231.339, 42.4035, 0.15", "32.3916, -231.775, 42.4912, 0.66", "32.542, -232.572, 42.6621, 1.47", "32.8834, -234.343, 43.0528, 0.22", "33.0821, -235.309, 43.2515, 0.15", "33.2241, -235.94, 43.3551, 0.15", "33.4063, -236.743, 43.4727, 0.74", "33.6638, -237.954, 43.6267, 0.15", "33.8348, -238.755, 43.7174, 0.15", "34.0799, -240.053, 43.8335, 0.22", "34.2274, -240.913, 43.9198, 1.18", "34.3884, -241.92, 44.0323, 1.7", "34.7238, -244.018, 44.3008, 0.22", "34.8558, -244.833, 44.4133, 0.22", "34.989, -245.597, 44.5294, 0.15", "35.186, -246.692, 44.7176, 0.15", "35.2771, -247.321, 44.8357, 0.44", "35.484, -249.063, 45.1621, 0.15", "35.526, -249.62, 45.2774, 0.88", "35.5557, -250.41, 45.4418, 1.7", "35.5714, -251.291, 45.6201, 1.4", "35.5694, -253.34, 45.9962, 0.15", "35.5665, -253.754, 46.0659, 0.22", "35.5439, -255.206, 46.2869, 0.07", "35.5414, -255.945, 46.3881, 1.33", "35.546, -256.595, 46.468, 1.33", "35.5988, -257.783, 46.6097, 0.07", "35.6963, -258.651, 46.7005, 0.15", "35.7862, -259.229, 46.7569, 0.15", "35.902, -259.81, 46.8084, 0.22", "36.1332, -260.914, 46.9059, 0.07", "36.2138, -261.319, 46.9398, 0.66", "36.3324, -261.972, 46.9865, 0.29", "36.5985, -263.509, 47.0764, 0.15", "36.6738, -263.906, 47.1027, 0.22", "36.8268, -264.717, 47.165, 0.07", "36.9593, -265.443, 47.2332, 0.74", "37.1401, -266.582, 47.3629, 0.15", "37.2149, -267.14, 47.4352, 0.59", "37.3749, -268.652, 47.6314, 0.15", "37.4331, -269.292, 47.7281, 0.29", "37.4965, -270.095, 47.8444, 0.15", "37.5368, -270.743, 47.933, 0.88", "37.561, -271.307, 48.0026, 1.92", "37.6291, -273.757, 48.2686, 0.22", "37.657, -275.015, 48.3831, 1.7", "37.7295, -277.78, 48.6032, 0.15", "37.7545, -278.952, 48.6777, 0.15", "37.763, -279.683, 48.717, 0.81", "37.7708, -281.333, 48.7845, 0.22", "37.7787, -282.27, 48.8085, 1.25", "37.7887, -282.779, 48.8166, 1.84", "37.8557, -285.087, 48.8856, 0.15", "37.8847, -285.683, 48.9082, 0.29", "37.9649, -286.743, 48.986, 0.07", "38.022, -287.398, 49.0503, 0.15", "38.1652, -288.953, 49.2377, 0.15", "38.2089, -289.37, 49.2963, 0.52", "38.2805, -289.963, 49.3913, 1.4", "38.4172, -291.674, 49.6888, 0.07", "38.4668, -292.896, 49.9093, 0.15", "38.4571, -293.462, 50.0196, 0.74", "38.4265, -294.033, 50.1352, 1.92", "38.3631, -294.906, 50.3362, 1.92", "38.174, -297.182, 50.9216, 0.15", "38.1034, -297.98, 51.1703, 0.59", "38.0217, -299.287, 51.6754, 0.07", "38.0096, -299.59, 51.8108, 0.15", "38.0002, -300.599, 52.3072, 0.15", "38.0179, -301.301, 52.672, 0.37", "38.0898, -302.174, 53.1246, 0.96", "38.2163, -302.968, 53.4996, 1.47", "38.5251, -304.338, 54.1104, 0.15", "38.723, -305.111, 54.4301, 0.15", "38.8882, -305.704, 54.6457, 1.11", "39.0653, -306.316, 54.8405, 1.7", "39.5914, -308.156, 55.3114, 0.15", "39.7746, -308.808, 55.4549, 0.81", "39.9998, -309.577, 55.6033, 1.03", "40.5965, -311.41, 55.9612, 0.15", "40.8425, -312.097, 56.1057, 0.22", "41.1718, -313.008, 56.2887, 0.07", "41.3797, -313.618, 56.3971, 0.88", "41.615, -314.34, 56.5236, 1.62", "42.1785, -316.038, 56.8527, 0.15", "42.4854, -316.869, 57.0268, 1.33", "43.0941, -318.437, 57.3792, 0.07", "43.2676, -318.916, 57.4921, 0.22", "43.7467, -320.45, 57.8647, 0.07", "43.909, -321.05, 58.0257, 0.96", "44.2748, -322.653, 58.4763, 0.15", "44.4384, -323.374, 58.6962, 1.11", "44.9658, -325.571, 59.4184, 0.15", "45.2132, -326.531, 59.7229, 1.11", "45.4449, -327.4, 59.9782, 1.47", "45.9686, -329.471, 60.531, 0.15", "46.159, -330.207, 60.7041, 0.88", "46.4138, -331.099, 60.8734, 1.33", "47.0218, -333.091, 61.1093, 0.15", "47.3346, -334.145, 61.1508, 0.96", "47.8735, -336.156, 61.0696, 0.15", "48.0407, -336.978, 60.9781, 0.15", "48.1578, -337.861, 60.8567, 0.74", "48.2055, -339.211, 60.6379, 0.44", "48.1541, -340.136, 60.4685, 1.11", "48.0655, -340.839, 60.3359, 1.7", "47.6248, -343.363, 59.8844, 0.15", "47.3473, -344.664, 59.6779, 1.33", "47.0453, -345.907, 59.5157, 0.15", "46.9172, -346.397, 59.4712, 0.74", "46.755, -346.994, 59.4468, 1.4", "46.5417, -347.779, 59.4422, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "9.41275, -92.9554, 22.0046, 1.03", "9.72444, -94.2311, 28.1897, 1.03", "9.82728, -94.4359, 29.4794, 1.03", "9.95882, -94.5858, 30.665, 1.03", "10.1088, -94.7331, 31.8083, 1.03", "10.2553, -94.8462, 32.6534, 1.03", "10.5019, -95.0125, 33.7875, 1.03", "10.8712, -95.1041, 34.4327, 0.88", "11.1882, -95.211, 35.0078, 0.88", "11.5322, -95.4753, 35.8445, 0.44", "11.766, -95.9805, 36.73, 0.59", "11.881, -96.4111, 37.3699, 0.22", "12.1371, -97.2518, 38.9056, 0.22", "12.3478, -97.7964, 40.1614, 0.44", "12.4874, -98.023, 40.9231, 1.4", "12.7875, -98.2537, 42.3104, 2.14", "13.3562, -98.3443, 44.2971, 0.59", "14.485, -98.1688, 47.2019, 0.59", "14.9926, -98.0184, 48.1087, 0.44", "16.0342, -97.6345, 49.5538, 0.81", "16.9697, -97.226, 50.6683, 1.99", "18.482, -96.5064, 52.1455, 0.22", "19.2488, -96.1581, 52.7529, 1.03", "20.4135, -95.6892, 53.5166, 0.22", "21.7356, -95.2274, 54.3516, 0.96", "22.6038, -94.9512, 54.8868, 1.92", "24.5625, -94.37, 56.3027, 0.22", "25.3396, -94.1193, 56.9711, 0.22", "25.7809, -93.9659, 57.3861, 0.22", "26.5382, -93.6854, 58.1328, 1.11", "27.5032, -93.3108, 59.0833, 2.58", "29.3741, -92.5074, 60.9393, 1.11", "30.2572, -92.0829, 61.8336, 0.44", "31.0452, -91.72, 62.6499, 0.44", "31.5189, -91.5262, 63.1727, 0.22", "31.9365, -91.399, 63.6412, 0.22", "32.3479, -91.3243, 64.106, 0.22", "33.0281, -91.2869, 64.9203, 1.4", "34.1412, -91.3854, 66.5671, 0.37", "34.8621, -91.5709, 68.0868, 0.29", "35.2961, -91.8326, 69.3654, 0.29", "35.3614, -91.9099, 69.6255, 0.29", "35.4874, -92.319, 70.5533, 0.29", "35.5254, -92.8187, 71.4334, 0.29", "35.5254, -93.7204, 72.7438, 0.59", "35.4906, -94.4509, 73.6518, 1.84", "35.4296, -95.142, 74.4429, 2.06", "35.2657, -96.7424, 76.1466, 0.52", "35.1424, -97.7101, 77.0598, 0.22", "34.9959, -98.6068, 77.8248, 0.22", "34.8537, -99.1962, 78.2757, 0.22", "34.6819, -99.5828, 78.5821, 0.52", "34.3281, -100.063, 79.0069, 0.81", "33.218, -100.975, 80.0336, 0.22", "32.3837, -101.431, 80.7412, 1.47", "31.8127, -101.649, 81.2218, 1.92", "30.5287, -101.985, 82.3382, 0.44", "29.9178, -102.071, 82.8826, 0.22", "29.2115, -102.042, 83.5263, 0.81", "28.084, -101.808, 84.5849, 0.22", "27.5065, -101.653, 85.1367, 0.22", "27.2116, -101.577, 85.4335, 0.22", "26.6631, -101.482, 86.0077, 0.59", "25.5299, -101.391, 87.2486, 0.37", "24.8247, -101.391, 88.0675, 0.37", "24.2758, -101.401, 88.8148, 0.37", "23.9058, -101.42, 89.4597, 0.37", "23.5505, -101.532, 90.3454, 0.37", "23.3888, -101.73, 91.0402, 0.37", "23.2972, -101.976, 91.6606, 0.37", "23.1768, -102.246, 92.4707, 0.37", "22.8431, -102.354, 93.299, 0.37", "22.1942, -102.431, 93.996, 0.37", "21.3528, -102.482, 94.5623, 0.37", "20.5141, -102.461, 94.962, 0.37", "20.0616, -102.419, 95.1143, 0.37", "18.2291, -102.06, 95.6039, 0.29", "16.3909, -101.417, 96.0164, 0.22", "15.8123, -101.163, 96.1328, 0.22", "14.6427, -100.6, 96.3993, 0.15", "13.821, -100.213, 96.6324, 0.59", "13.0447, -99.856, 96.8777, 0.29", "12.3441, -99.5714, 97.1395, 0.88", "11.1968, -99.1829, 97.6494, 0.96", "9.55088, -98.7954, 98.3673, 0.22", "8.56836, -98.6587, 98.7824, 1.33", "7.91807, -98.6141, 99.0449, 1.4", "6.35271, -98.6272, 99.6189, 0.15", "5.93439, -98.6714, 99.7817, 0.15", "5.37431, -98.7685, 100.018, 0.15", "4.96182, -98.8792, 100.195, 0.15", "4.68854, -98.955, 100.32, 0.81", "4.26441, -99.022, 100.529, 0.81", "2.82451, -99.0857, 101.289, 0.22", "2.01601, -99.0261, 101.705, 0.22", "1.23726, -98.9122, 102.091, 1.11", "0.483428, -98.7437, 102.444, 1.62", "-1.18742, -98.2276, 103.153, 0.22", "-2.15426, -97.8208, 103.508, 1.11", "-3.4289, -97.154, 103.87, 0.22", "-4.30968, -96.6693, 104.069, 0.22", "-4.74133, -96.4192, 104.147, 1.03", "-5.57035, -95.9238, 104.254, 1.03", "-6.6858, -95.2358, 104.33, 0.22", "-7.78671, -94.5072, 104.36, 0.52", "-8.98928, -93.6392, 104.376, 0.15", "-9.42256, -93.2865, 104.376, 0.15", "-9.73924, -92.997, 104.395, 0.52", "-10.1844, -92.5461, 104.441, 1.18", "-11.4663, -91.1089, 104.621, 0.22", "-12.0477, -90.3028, 104.683, 1.03", "-12.3687, -89.7577, 104.695, 1.99", "-13.4839, -87.5329, 104.656, 0.29", "-13.7417, -86.9038, 104.603, 0.96", "-14.0533, -85.9334, 104.456, 1.7", "-14.4639, -83.906, 104.004, 0.22", "-14.5713, -82.9339, 103.712, 0.22", "-14.5845, -82.1262, 103.402, 0.96", "-14.4395, -80.7327, 102.755, 0.07", "-14.2914, -79.8883, 102.334, 0.74", "-13.9944, -78.77, 101.738, 0.22", "-13.5867, -77.663, 101.16, 0.22", "-13.0254, -76.6995, 100.714, 0.66", "-12.0615, -75.5003, 100.237, 0.07", "-11.3619, -74.8345, 100.029, 0.22", "-10.3725, -74.0552, 99.8742, 0.07", "-9.36216, -73.3573, 99.788, 1.11", "-6.61306, -71.681, 99.7903, 0.07", "-5.97668, -71.3363, 99.84, 0.07", "-5.51954, -71.1185, 99.9098, 0.29", "-4.29616, -70.566, 100.183, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "34.0389, 16.4555, 37.7669, 0.22", "34.342, 16.9609, 38.5834, 0.22", "34.6585, 17.3463, 39.3131, 0.22", "34.9481, 17.6257, 39.9063, 0.52", "35.3692, 17.986, 40.6881, 1.7", "35.7724, 18.25, 41.3117, 2.06", "36.6503, 18.714, 42.5614, 0.52", "37.3155, 19.0155, 43.4593, 0.66", "37.9225, 19.2708, 44.2312, 2.14", "38.2818, 19.4233, 44.6773, 2.65", "39.544, 19.9959, 46.2261, 0.29", "40.1066, 20.2485, 46.9627, 0.22", "40.7245, 20.5125, 47.8083, 0.22", "41.204, 20.691, 48.4965, 1.25", "41.9136, 20.9206, 49.5563, 0.15", "42.5808, 21.1231, 50.5678, 0.81", "43.3891, 21.3891, 51.7044, 1.4", "43.9666, 21.5741, 52.3995, 2.21", "45.4447, 21.9904, 53.9032, 0.22", "46.1588, 22.1697, 54.5188, 0.88", "46.8201, 22.3261, 54.9986, 1.18", "48.1964, 22.692, 55.8115, 0.22", "48.8182, 22.8953, 56.1001, 0.59", "49.39, 23.1105, 56.3111, 1.11", "50.3172, 23.4755, 56.5805, 0.15", "50.687, 23.6193, 56.6968, 0.15", "51.0257, 23.7664, 56.8418, 0.15", "51.334, 23.9162, 57.0295, 0.37", "51.7643, 24.1712, 57.3821, 0.66", "52.7416, 24.8124, 58.3195, 0.15", "53.4255, 25.2734, 59.0677, 1.62", "54.1245, 25.7175, 59.8818, 0.29", "54.8644, 26.1483, 60.7926, 1.18", "55.8921, 26.6622, 62.1077, 0.22", "56.5898, 26.9464, 63.0146, 0.52", "57.4642, 27.2152, 64.1263, 1.25", "58.158, 27.3672, 65.0027, 2.14", "59.3443, 27.4854, 66.4745, 0.59", "60.1036, 27.4891, 67.4042, 0.59", "60.8546, 27.434, 68.2862, 0.22", "61.7256, 27.3581, 69.3069, 1.55", "62.1574, 27.334, 69.8154, 1.55", "63.2878, 27.3823, 71.2136, 0.22", "63.6267, 27.4402, 71.665, 0.22", "64.0861, 27.6014, 72.2556, 0.22", "64.523, 27.8172, 72.8422, 0.96", "64.9853, 28.1375, 73.4906, 1.25", "65.7786, 28.8651, 74.6093, 0.22", "66.3726, 29.5989, 75.4398, 0.22", "67.0239, 30.4259, 76.339, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "34.0389, 16.4555, 37.7669, 0.22", "34.578, 15.6038, 37.8918, 0.22", "34.8287, 15.2403, 37.9185, 0.37", "35.2398, 14.7012, 37.9495, 0.66", "35.7122, 14.0954, 38.0286, 0.66", "36.1407, 13.5491, 38.1444, 0.15", "36.5033, 13.0817, 38.2763, 1.47", "36.9771, 12.4557, 38.4442, 3.24", "37.2839, 12.0661, 38.5672, 3.24", "38.2642, 10.9054, 39.0184, 0.29", "38.6522, 10.4532, 39.2314, 0.44", "39.1569, 9.85042, 39.5448, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-6.81089, 43.2388, 35.548, 0.22", "-8.37476, 44.585, 36.1074, 0.22", "-9.11639, 45.2283, 36.3664, 1.55", "-10.1759, 46.0847, 36.6224, 3.1", "-12.1589, 47.6027, 36.9486, 0.15", "-12.8683, 48.1169, 37.0186, 0.66", "-14.0581, 48.9311, 37.0821, 0.15", "-15.0038, 49.4833, 37.0455, 1.18", "-16.8004, 50.379, 36.8627, 0.07", "-17.8238, 50.8093, 36.7124, 0.07", "-18.6723, 51.1248, 36.5595, 0.07", "-19.6091, 51.4323, 36.4046, 0.96", "-21.4318, 51.9712, 36.1487, 0.15", "-22.8438, 52.3935, 36.0108, 0.15", "-23.6797, 52.6569, 36.0041, 1.03", "-24.5414, 52.9245, 36.0439, 1.99", "-26.185, 53.4181, 36.2818, 0.15", "-26.8855, 53.6119, 36.4358, 0.15", "-27.3797, 53.7297, 36.5794, 0.15", "-28.1691, 53.8907, 36.8534, 0.88", "-29.144, 54.0318, 37.1917, 1.62", "-31.2023, 54.2319, 37.9241, 0.15", "-32.001, 54.2734, 38.2106, 0.15", "-32.9014, 54.29, 38.5189, 0.44", "-33.9171, 54.2558, 38.8371, 0.15", "-35.31, 54.1508, 39.3048, 0.22", "-36.627, 53.9914, 39.7825, 0.15", "-36.9373, 53.9333, 39.9067, 0.74", "-38.0413, 53.686, 40.3992, 1.25", "-39.787, 53.244, 41.2478, 0.22", "-41.2999, 52.8026, 42.0497, 1.11", "-41.9776, 52.5668, 42.4327, 1.84", "-43.4132, 51.8625, 43.3248, 0.15", "-43.881, 51.5604, 43.6515, 0.15", "-44.3572, 51.2091, 44.0116, 0.15", "-44.6846, 50.9362, 44.274, 0.81", "-45.5708, 50.0875, 44.9357, 2.14", "-46.9558, 48.4678, 46.1061, 0.22", "-47.5374, 47.5579, 46.6726, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-6.81089, 43.2388, 35.548, 0.22", "-7.08731, 44.7165, 37.1688, 0.22", "-7.32898, 45.7892, 38.2782, 0.22", "-7.73504, 47.3382, 39.8464, 0.37", "-7.92071, 47.9467, 40.4867, 0.37", "-8.16557, 48.6817, 41.281, 0.96", "-8.40287, 49.3882, 42.0354, 0.15", "-8.51828, 49.7356, 42.3847, 0.15", "-8.6006, 49.9329, 42.5898, 0.22", "-8.95403, 50.5753, 43.2653, 0.15", "-9.24379, 51.0714, 43.8403, 1.03", "-9.58952, 51.7421, 44.6552, 1.99", "-9.98409, 52.832, 45.9452, 0.22", "-10.1519, 53.5969, 46.7175, 0.15", "-10.1877, 53.9341, 47.017, 0.15", "-10.1999, 54.64, 47.5685, 1.18", "-10.1618, 55.7418, 48.3645, 0.15", "-10.1168, 56.4038, 48.8295, 0.52", "-10.0483, 57.3131, 49.427, 0.22", "-10.0073, 58.2005, 50.0146, 1.33", "-10.0175, 59.182, 50.7235, 2.88", "-10.1847, 60.905, 52.1191, 0.22", "-10.3365, 61.5235, 52.6893, 0.22", "-10.5724, 62.1842, 53.3686, 0.74", "-10.8735, 62.9019, 54.1917, 0.15", "-11.127, 63.4717, 54.8805, 0.15", "-11.3418, 63.934, 55.5068, 0.15", "-11.5405, 64.4111, 56.3295, 0.74", "-11.6351, 64.8234, 57.1747, 0.74", "-11.6056, 65.0437, 57.8781, 0.74", "-11.5046, 65.1709, 58.6132, 0.74", "-11.4679, 65.1933, 58.8998, 0.74", "-11.3427, 65.2262, 60.0819, 0.74", "-11.2918, 65.225, 60.4896, 0.74", "-11.1473, 65.2168, 61.5946, 0.74", "-11.0183, 65.2519, 62.297, 0.74", "-10.6709, 65.4427, 63.5833, 0.96", "-10.3311, 65.6834, 64.488, 0.96", "-10.0387, 65.9334, 65.1019, 0.96", "-9.58758, 66.3286, 65.9324, 0.96", "-8.99451, 66.8846, 66.9326, 0.66", "-8.37057, 67.4881, 67.938, 0.88", "-7.75699, 68.1596, 69.0306, 1.55", "-7.18032, 68.9488, 70.3214, 0.37", "-6.98622, 69.3332, 70.9238, 0.37", "-6.73885, 70.069, 71.9534, 1.4", "-6.64747, 70.488, 72.4893, 1.62", "-6.47899, 71.5631, 73.7028, 0.44", "-6.37585, 72.3161, 74.4547, 0.44", "-6.23348, 73.1325, 75.157, 1.18", "-5.96711, 74.2965, 76.0293, 0.22", "-5.78019, 74.9023, 76.4234, 0.22", "-5.50351, 75.6287, 76.8395, 1.25", "-5.18319, 76.3951, 77.248, 1.92", "-4.52796, 78.015, 78.1952, 0.15", "-4.29521, 78.6438, 78.6237, 0.88", "-4.06085, 79.4181, 79.2231, 1.92", "-3.70375, 80.9287, 80.5539, 0.22", "-3.55043, 81.7174, 81.3628, 0.74", "-3.36883, 82.7632, 82.5629, 1.7", "-3.22158, 83.5154, 83.5159, 0.07", "-3.1128, 83.8996, 84.0158, 0.96", "-2.76015, 84.883, 85.3423, 0.07", "-2.46941, 85.5025, 86.1904, 0.07", "-2.18127, 85.9752, 86.8152, 0.07", "-1.62951, 86.6882, 87.8101, 0.37", "-1.07636, 87.2863, 88.8219, 0.59", "-0.777282, 87.5793, 89.4188, 0.59", "-0.560411, 87.7816, 89.9439, 0.59", "-0.470613, 87.8965, 90.2736, 0.59", "-0.286617, 88.3748, 91.5072, 0.15", "-0.233968, 88.791, 92.3343, 0.07", "-0.188429, 89.1389, 92.8478, 0.07", "-0.147543, 89.4742, 93.2623, 0.07", "-0.119128, 90.049, 93.905, 0.88", "-0.115079, 90.9709, 94.9423, 0.22", "-0.125197, 91.7287, 95.9045, 0.22", "-0.157863, 92.3844, 96.8938, 1.62", "-0.239337, 92.947, 97.9974, 2.21", "-0.409771, 93.6705, 99.9483, 0.37", "-0.507842, 94.0006, 101.306, 0.37", "-0.597514, 94.2274, 103.344, 1.33", "-0.582149, 94.2125, 104.003, 1.77", "-0.415619, 94.0061, 105.415, 0.29", "-0.160559, 93.6713, 106.625, 0.29", "0.0637392, 93.2972, 107.615, 0.59", "0.265168, 92.8852, 108.632, 1.18", "0.522969, 92.23, 110.284, 0.37", "0.726511, 91.5565, 112.019, 1.03", "0.793775, 91.0205, 113.401, 1.4", "0.664741, 89.9486, 116.131, 0.07", "0.476168, 89.4659, 117.372, 0.59", "0.11547, 89.0468, 118.563, 0.15", "-0.233937, 88.8206, 119.276, 0.15", "-0.873296, 88.5273, 120.258, 0.15", "-1.21136, 88.4134, 120.699, 1.03", "-1.58847, 88.3042, 121.101, 1.4", "-2.99684, 87.916, 122.493, 0.15", "-3.51017, 87.784, 123.005, 0.15", "-4.38602, 87.5552, 123.982, 0.15", "-4.80684, 87.4294, 124.521, 1.11", "-5.18467, 87.3042, 125.069, 1.62", "-6.03833, 87.0046, 126.471, 0.29", "-6.53687, 86.8354, 127.383, 0.07", "-7.02283, 86.7341, 128.237, 0.07", "-7.33028, 86.6977, 128.764, 0.88", "-8.03606, 86.6567, 130.028, 0.07", "-8.36627, 86.6689, 130.667, 0.22", "-8.90738, 86.7768, 131.805, 0.07", "-9.31161, 86.9121, 132.587, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "4.30289, 29.4781, 17.0796, 0.52", "7.16608, 28.303, 15.2683, 0.52", "7.8457, 27.9531, 14.883, 2.21", "9.03559, 27.2246, 14.2472, 2.88", "10.9999, 25.834, 13.225, 0.96", "12.3821, 24.7164, 12.4606, 0.15", "13.1324, 24.0362, 11.9811, 0.59", "13.8382, 23.2052, 11.5781, 0.15", "14.2883, 22.5895, 11.3027, 0.22", "14.6066, 22.0229, 11.0601, 0.22", "15.1055, 20.8213, 10.484, 0.22", "15.6372, 19.1364, 9.64818, 1.11", "15.8528, 18.2164, 9.17562, 2.29", "15.9528, 17.6404, 8.86468, 2.58", "16.187, 15.8119, 7.86144, 0.15", "16.2548, 14.7235, 7.30371, 0.15", "16.2111, 13.7394, 6.87141, 0.29", "16.1157, 13.0264, 6.59543, 1.03", "15.9826, 12.2937, 6.3177, 1.99", "15.8768, 11.7623, 6.13494, 2.29", "15.4937, 10.0048, 5.67567, 0.44", "15.2492, 8.74693, 5.42002, 0.29", "15.1299, 8.06355, 5.3156, 0.44", "15.0264, 7.40425, 5.23649, 0.52", "14.8507, 6.20957, 5.15329, 0.22", "14.7571, 5.40521, 5.13549, 0.22", "14.6722, 4.53131, 5.16737, 1.33", "14.6024, 3.67469, 5.22895, 2.29", "14.5339, 2.96878, 5.29632, 2.29", "14.339, 1.00476, 5.52506, 0.15", "14.242, 0.175037, 5.62999, 0.15", "14.1605, -0.493041, 5.70885, 0.15", "14.0742, -1.13213, 5.78474, 0.66", "13.9346, -2.13528, 5.88004, 1.33", "13.8258, -2.91479, 5.89188, 1.03", "13.5769, -4.56525, 5.74018, 0.22", "13.4544, -5.35597, 5.60399, 0.22", "13.3342, -6.12503, 5.41142, 0.66", "13.1688, -7.23369, 5.08436, 0.22", "12.9274, -8.65034, 4.59861, 0.29", "12.76, -9.54813, 4.29138, 0.59", "12.6366, -10.232, 4.03338, 1.33", "12.4472, -11.2093, 3.64299, 2.14", "12.1112, -12.8847, 2.95331, 0.22", "11.8627, -14.0295, 2.51389, 0.22", "11.6308, -15.0005, 2.25832, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "4.30289, 29.4781, 17.0796, 0.52", "4.52604, 30.0815, 18.2221, 0.52", "4.79879, 30.4147, 19.2347, 0.52", "5.2158, 30.6395, 20.5077, 0.52", "5.45793, 30.6685, 21.1717, 0.52", "6.07361, 30.6612, 22.7063, 0.81", "6.56341, 30.6604, 23.8257, 1.18", "7.30836, 30.5525, 25.2081, 0.96", "7.88047, 30.428, 26.1642, 1.25", "8.5269, 30.2409, 27.1701, 0.37", "8.93845, 30.1437, 27.7404, 0.37", "9.45388, 30.0311, 28.4124, 0.15", "10.1103, 29.9387, 29.1955, 0.15", "10.8819, 29.978, 30.0194, 1.18", "11.3467, 30.0756, 30.5082, 2.43", "12.1671, 30.2978, 31.3177, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-11.9757, 106.808, 5.16621, 0.59", "-12.3334, 108.3, 5.03611, 0.59", "-12.7257, 109.611, 4.90496, 0.29", "-13.1505, 110.843, 4.78004, 0.96", "-13.5004, 111.78, 4.69637, 0.07", "-13.9236, 112.786, 4.62455, 0.07", "-14.1734, 113.356, 4.59019, 0.22", "-14.5433, 114.045, 4.57231, 0.88", "-14.7588, 114.454, 4.57661, 1.47", "-15.3131, 115.616, 4.54, 0.07", "-15.6095, 116.39, 4.45698, 0.07", "-15.7224, 116.799, 4.40794, 0.22", "-15.7985, 117.11, 4.37528, 0.22", "-15.9859, 117.968, 4.30323, 0.07", "-16.1129, 118.747, 4.23419, 0.07", "-16.1761, 119.257, 4.16989, 0.66", "-16.247, 119.831, 4.07146, 0.66", "-16.3817, 120.759, 3.88453, 0.15", "-16.4884, 121.48, 3.72486, 1.03", "-16.5983, 122.238, 3.5464, 1.77", "-16.7618, 123.656, 3.21124, 0.15", "-16.8612, 124.611, 2.99626, 0.22", "-16.9047, 125.001, 2.90485, 0.66", "-16.9688, 125.456, 2.81636, 0.37", "-17.1236, 126.242, 2.72609, 1.11", "-17.2915, 126.86, 2.71358, 1.11", "-17.7732, 128.306, 2.83409, 0.22", "-18.118, 129.154, 2.9593, 1.03", "-18.5838, 130.131, 3.13353, 1.62", "-19.0693, 131.031, 3.32481, 1.99", "-19.5671, 131.865, 3.46074, 0.52", "-20.2778, 132.964, 3.5578, 0.22", "-21.0142, 134.051, 3.54003, 0.22", "-21.3902, 134.595, 3.4609, 0.88", "-21.9555, 135.396, 3.17417, 1.55", "-23.1353, 136.968, 2.3641, 0.15", "-23.6129, 137.611, 1.9834, 0.22", "-24.0171, 138.186, 1.63006, 0.07", "-24.6366, 139.137, 1.05018, 1.33", "-25.5204, 140.575, 0.296067, 0.07", "-25.7997, 141.041, 0.0586945, 0.37", "-26.3251, 141.997, -0.243614, 0.07", "-26.8712, 143.089, -0.411353, 0.22", "-27.3249, 144.117, -0.338047, 1.55", "-27.5855, 144.974, 0.00867724, 1.55", "-30.1618, 154.011, -2.35718, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-11.9757, 106.808, 5.16621, 0.22", "-13.1963, 108.42, 5.0402, 0.22", "-13.7543, 109.199, 4.96822, 0.07", "-14.3619, 110.103, 4.86948, 1.11", "-15.2493, 111.585, 4.69802, 0.07", "-15.6183, 112.29, 4.61543, 0.07", "-15.7953, 112.666, 4.57259, 0.52", "-16.0382, 113.403, 4.48192, 1.47", "-16.2866, 114.345, 4.37189, 0.07", "-16.4678, 115.185, 4.27592, 0.15", "-16.5933, 116.006, 4.2019, 0.88", "-16.687, 116.804, 4.15291, 1.4", "-16.8045, 118.059, 4.08052, 0.07", "-16.8529, 118.657, 4.05399, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-43.6411, -122.478, -59.5806, 0.15", "-45.344, -132.786, -62.1866, 0.15", "-47.0121, -143.35, -63.5714, 0.15", "-47.7822, -153.621, -66.6813, 0.15", "-46.3201, -163.906, -69.4367, 0.15", "-43.7318, -173.769, -72.7497, 0.15", "-40.9619, -183.697, -75.7121, 0.15", "-37.3938, -193.164, -79.1983, 0.15", "-33.9755, -203.093, -81.3692, 0.15", "-29.2847, -212.314, -84.0521, 0.15", "-24.185, -221.363, -86.5354, 0.15", "-19.6547, -231.066, -86.879, 0.15", "-15.6207, -241.004, -87.022, 0.15", "-11.573, -250.868, -88.1398, 0.15", "-8.30549, -260.828, -90.4126, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-43.6411, -122.478, -59.5806, 1.03", "-45.3569, -130.603, -61.336, 0.15", "-48.516, -138.406, -62.4725, 0.15", "-52.4618, -145.801, -63.7964, 0.15", "-57.9569, -152.178, -64.6731, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-7.21964, -158.261, 32.8887, 0.22", "-6.82877, -159.269, 33.2982, 0.22", "-6.6294, -159.909, 33.5487, 0.22", "-6.52647, -160.39, 33.7126, 0.88", "-6.421, -161.099, 33.9271, 1.25", "-6.29976, -162.192, 34.2448, 0.15", "-6.2328, -163.022, 34.4676, 0.15", "-6.22846, -163.699, 34.6308, 0.66", "-6.26332, -164.711, 34.8396, 0.15", "-6.28878, -165.172, 34.9259, 0.44", "-6.30545, -165.508, 34.9803, 0.44", "-6.31301, -166.441, 35.1249, 0.15", "-6.2931, -167.115, 35.2271, 0.15", "-6.25494, -167.63, 35.3104, 1.18", "-6.188, -168.141, 35.4015, 2.14", "-6.07155, -168.901, 35.5344, 1.03", "-5.95534, -169.636, 35.6505, 0.15", "-5.85094, -170.212, 35.7418, 0.15", "-5.76827, -170.67, 35.8064, 0.37", "-5.66522, -171.241, 35.8706, 0.22", "-5.61307, -171.549, 35.8875, 0.66", "-5.54374, -171.962, 35.8913, 0.81", "-5.37868, -172.839, 35.8709, 0.22", "-5.2949, -173.264, 35.8571, 1.03", "-5.15593, -174.03, 35.8152, 1.84", "-4.97123, -175.143, 35.739, 0.22", "-4.91484, -175.506, 35.7166, 0.22", "-4.85359, -175.93, 35.6987, 0.22", "-4.79768, -176.345, 35.6931, 0.22", "-4.69607, -176.951, 35.7181, 0.96", "-4.43768, -178.209, 35.843, 0.15", "-4.32772, -178.65, 35.9122, 0.15", "-4.20798, -179.117, 35.9996, 0.96", "-4.07362, -179.655, 36.1117, 1.92", "-3.76448, -180.856, 36.391, 0.22", "-3.65066, -181.278, 36.5012, 0.22", "-3.54044, -181.65, 36.6023, 0.15", "-3.33772, -182.318, 36.7816, 0.15", "-3.22564, -182.714, 36.8839, 0.81", "-3.13515, -183.118, 36.9921, 1.62", "-3.00731, -183.927, 37.2189, 0.15", "-2.91957, -184.559, 37.3969, 0.15", "-2.86288, -184.909, 37.4996, 0.15", "-2.76242, -185.457, 37.6658, 0.88", "-2.62368, -186.279, 37.9047, 0.15", "-2.55703, -186.7, 38.0199, 0.96", "-2.4491, -187.469, 38.2135, 2.21", "-2.25946, -188.912, 38.5538, 0.15", "-2.17363, -189.516, 38.6871, 0.96", "-1.97666, -190.736, 38.9714, 0.22", "-1.86728, -191.319, 39.1129, 0.88", "-1.80767, -191.631, 39.1939, 0.88", "-1.61554, -192.622, 39.4766, 0.07", "-1.5713, -192.83, 39.5436, 0.29", "-1.4691, -193.275, 39.7058, 0.29", "-1.36432, -193.708, 39.8764, 0.15", "-1.29793, -194.056, 40.0144, 0.15", "-1.20851, -194.63, 40.2295, 0.15", "-1.1563, -195.032, 40.362, 0.74", "-1.09708, -195.603, 40.54, 1.77", "-1.0729, -195.964, 40.6496, 1.33", "-1.03969, -196.861, 40.9297, 0.07", "-1.03757, -197.159, 41.0225, 0.37", "-1.05597, -198.083, 41.3195, 0.07", "-1.06651, -198.576, 41.4803, 0.59", "-1.06575, -199.374, 41.745, 0.15", "-1.0553, -199.785, 41.8791, 0.22", "-1.02764, -200.414, 42.0785, 1.33", "-0.987652, -201.335, 42.3639, 0.07", "-0.978399, -201.692, 42.4665, 0.88", "-0.925835, -202.724, 42.7559, 0.15", "-0.888493, -203.197, 42.8876, 0.15", "-0.848935, -203.606, 43.0043, 0.15", "-0.799985, -204.056, 43.1422, 0.74", "-0.740258, -204.701, 43.3411, 2.14", "-0.668928, -205.868, 43.6977, 0.15", "-0.668933, -206.235, 43.7943, 0.44", "-0.714875, -207.177, 44.0067, 0.07", "-0.756517, -207.564, 44.0794, 0.15", "-0.832899, -208.008, 44.1474, 0.07", "-0.962336, -208.547, 44.2124, 1.11", "-1.34577, -209.807, 44.3141, 0.15", "-1.5224, -210.342, 44.3498, 1.03", "-1.85611, -211.306, 44.3942, 0.15", "-1.98801, -211.74, 44.4096, 0.44", "-2.16624, -212.526, 44.4435, 0.15", "-2.25744, -213.143, 44.4799, 1.62", "-2.27332, -213.462, 44.5044, 1.77", "-2.25203, -213.942, 44.5427, 1.03", "-2.1027, -215.153, 44.6392, 0.15", "-1.90272, -216.301, 44.7345, 0.15", "-1.82034, -216.679, 44.7712, 0.88", "-1.69948, -217.185, 44.841, 1.18", "-1.35571, -218.495, 45.0651, 0.07", "-1.28176, -218.758, 45.1169, 0.15", "-1.04779, -219.58, 45.3023, 0.07", "-0.793983, -220.475, 45.52, 0.15", "-0.5903, -221.246, 45.7088, 1.33", "-0.278769, -222.507, 46.0186, 0.15", "-0.164726, -223.029, 46.1492, 0.22", "-0.014425, -223.877, 46.3307, 0.07", "0.0208842, -224.141, 46.3763, 0.22", "0.138666, -225.397, 46.5309, 0.07", "0.155246, -225.644, 46.5537, 0.81", "0.189408, -226.54, 46.6174, 1.92", "0.239532, -227.634, 46.6517, 0.15", "0.277238, -228.208, 46.641, 0.88", "0.389378, -229.463, 46.5735, 0.15", "0.426827, -229.798, 46.5421, 0.44", "0.555931, -230.839, 46.424, 0.07", "0.685251, -231.697, 46.3222, 0.07", "0.765062, -232.26, 46.275, 0.15", "0.820065, -232.696, 46.2553, 0.74", "0.859018, -233.092, 46.2582, 0.74", "0.94147, -233.975, 46.3786, 0.07", "1.01159, -234.576, 46.5568, 0.07", "1.07202, -235.16, 46.8069, 0.07", "1.11958, -235.642, 47.043, 1.25", "1.15639, -236.027, 47.2389, 1.99", "1.28172, -237.348, 47.8849, 0.15", "1.34568, -238.07, 48.218, 0.96", "1.42259, -239.112, 48.6507, 0.07", "1.47618, -239.934, 48.9514, 0.07", "1.50532, -240.538, 49.1351, 0.81", "1.57055, -242.157, 49.52, 0.15", "1.57876, -242.567, 49.5872, 0.29", "1.59028, -243.374, 49.6761, 0.07", "1.60947, -244.051, 49.7195, 1.47", "1.66188, -245.569, 49.7694, 0.07", "1.67578, -246.23, 49.7927, 0.07", "1.67518, -246.719, 49.7961, 1.11", "1.66171, -247.986, 49.7628, 0.07", "1.65231, -248.524, 49.7281, 0.74", "1.64059, -249.013, 49.6741, 1.92", "1.58994, -250.358, 49.473, 0.15", "1.54243, -251.39, 49.2992, 0.22", "1.48475, -252.581, 49.0976, 0.22", "1.45523, -253.104, 49.0004, 0.81", "1.41395, -253.779, 48.8764, 1.84", "1.32318, -255.23, 48.6715, 0.07", "1.29761, -255.658, 48.6274, 0.29", "1.21424, -256.731, 48.656, 0.07", "1.14844, -257.414, 48.7179, 0.07", "1.06615, -258.189, 48.8284, 1.55", "0.9356, -259.374, 49.0793, 0.07", "0.890255, -259.795, 49.1967, 0.07", "0.786921, -260.893, 49.5541, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-7.21964, -158.261, 32.8887, 0.22", "-7.76564, -159.106, 33.264, 0.22", "-8.17755, -159.916, 33.5873, 0.44", "-8.33898, -160.302, 33.7322, 0.15", "-8.46156, -160.623, 33.8541, 0.15", "-8.52249, -160.772, 33.9108, 0.37", "-8.72233, -161.206, 34.0707, 0.44", "-8.90938, -161.574, 34.1947, 0.15", "-8.99886, -161.724, 34.2569, 0.22", "-9.15999, -161.968, 34.3997, 0.22", "-9.38405, -162.283, 34.6224, 0.22", "-9.58883, -162.57, 34.8481, 0.81", "-9.93913, -163.091, 35.2761, 0.22", "-10.3007, -163.69, 35.7695, 0.96", "-10.6201, -164.284, 36.2411, 2.21", "-11.1634, -165.462, 37.1232, 0.22", "-11.365, -165.976, 37.5006, 0.22", "-11.4841, -166.334, 37.7534, 0.22", "-11.5627, -166.609, 37.9316, 0.22", "-11.6898, -167.043, 38.1706, 0.22", "-11.8119, -167.38, 38.3379, 0.22", "-11.9625, -167.712, 38.4948, 0.88", "-12.1931, -168.116, 38.7001, 1.4", "-12.5787, -168.649, 39.0181, 2.14", "-13.3022, -169.506, 39.6047, 0.52", "-13.8537, -170.087, 40.0497, 0.22", "-14.1691, -170.397, 40.298, 0.22", "-14.6081, -170.793, 40.6258, 1.11", "-15.3295, -171.359, 41.1476, 1.99", "-15.7156, -171.612, 41.4175, 1.99", "-15.8527, -171.681, 41.5162, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-31.2999, -131.425, 20.2007, 0.22", "-32.129, -132.16, 20.2876, 0.22", "-32.5712, -132.573, 20.3369, 0.22", "-32.9577, -132.929, 20.377, 1.33", "-33.6693, -133.582, 20.4455, 0.15", "-33.9243, -133.823, 20.469, 0.15", "-34.1089, -134.005, 20.4858, 0.37", "-34.399, -134.334, 20.5302, 0.37", "-34.8183, -134.87, 20.5909, 0.22", "-35.0073, -135.119, 20.6097, 0.15", "-35.1483, -135.311, 20.6164, 0.15", "-35.248, -135.455, 20.6265, 0.15", "-35.4757, -135.804, 20.6565, 0.15", "-35.701, -136.179, 20.6914, 0.74", "-36.0656, -136.799, 20.7489, 0.15", "-36.3216, -137.171, 20.7558, 0.15", "-36.718, -137.675, 20.735, 0.15", "-36.8741, -137.855, 20.7119, 0.15", "-37.2292, -138.235, 20.6303, 1.33", "-37.5643, -138.565, 20.5643, 2.14", "-38.47, -139.363, 20.429, 0.15", "-38.9249, -139.713, 20.3857, 1.25", "-39.6058, -140.187, 20.3422, 0.07", "-39.8676, -140.366, 20.3395, 0.22", "-40.6884, -140.916, 20.3663, 0.22", "-41.0993, -141.179, 20.4013, 1.25", "-41.3615, -141.341, 20.4404, 1.25", "-42.2047, -141.933, 20.5324, 0.07", "-42.7686, -142.392, 20.5645, 0.07", "-43.1508, -142.771, 20.5341, 0.07", "-43.4831, -143.175, 20.4203, 0.07", "-43.6538, -143.412, 20.3367, 1.18", "-44.2365, -144.308, 19.973, 0.07", "-44.355, -144.51, 19.8852, 0.88", "-44.6573, -145.073, 19.6368, 1.92", "-45.166, -146.062, 19.2062, 0.15", "-45.3225, -146.378, 19.0696, 0.22", "-45.5849, -146.872, 18.861, 0.07", "-45.7292, -147.139, 18.7537, 0.07", "-45.9365, -147.569, 18.5985, 0.29", "-46.3052, -148.461, 18.3398, 0.07", "-46.5927, -149.259, 18.1747, 0.22", "-46.7866, -149.815, 18.0844, 1.55", "-47.1352, -150.826, 17.9991, 0.22", "-47.3547, -151.449, 17.9894, 0.07", "-47.544, -152.007, 18.0105, 0.07", "-47.6613, -152.386, 18.0677, 0.07", "-47.7757, -152.731, 18.1676, 0.15", "-47.9569, -153.245, 18.3927, 0.07", "-48.0856, -153.47, 18.5655, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-31.2999, -131.425, 20.2007, 0.29", "-32.6995, -131.099, 19.8595, 0.29", "-33.3874, -130.917, 19.6203, 0.22", "-33.8198, -130.798, 19.4361, 0.74", "-34.3368, -130.65, 19.1948, 0.96", "-34.9476, -130.481, 18.9001, 0.29", "-35.579, -130.308, 18.5865, 0.15", "-36.2595, -130.116, 18.2177, 0.15", "-36.8401, -129.973, 17.9288, 1.03", "-37.5741, -129.811, 17.5938, 0.29", "-38.5854, -129.604, 17.1728, 0.22", "-39.1455, -129.501, 16.9632, 1.11", "-40.0468, -129.356, 16.6727, 2.14", "-41.7479, -129.104, 16.1973, 0.22", "-42.18, -129.044, 16.0874, 0.81", "-43.0462, -128.935, 15.8728, 1.7", "-44.2199, -128.78, 15.5941, 0.22", "-44.7138, -128.716, 15.4675, 0.88", "-45.4592, -128.624, 15.2546, 1.55", "-46.012, -128.552, 15.0785, 0.59", "-47.0515, -128.423, 14.728, 0.15", "-47.8123, -128.348, 14.441, 0.88", "-48.5717, -128.279, 14.1171, 0.15", "-49.1748, -128.211, 13.8294, 0.22", "-49.7052, -128.142, 13.5527, 0.81", "-50.4923, -128.04, 13.1226, 1.99", "-51.5941, -127.935, 12.472, 0.22", "-52.1311, -127.895, 12.144, 0.22", "-52.675, -127.848, 11.8027, 0.52", "-53.2378, -127.792, 11.4364, 1.18", "-54.1247, -127.688, 10.8503, 1.99", "-55.2614, -127.533, 10.0614, 0.15", "-55.6826, -127.469, 9.76645, 0.29", "-56.3665, -127.391, 9.27851, 0.07", "-56.8289, -127.359, 8.91625, 0.22", "-57.1726, -127.342, 8.59655, 0.22", "-57.4634, -127.348, 8.23355, 0.22", "-57.5693, -127.368, 8.06895, 0.22", "-57.8079, -127.501, 7.58715, 0.22", "-58.029, -127.773, 7.02887, 0.22", "-58.1751, -128.014, 6.61327, 0.22", "-58.5266, -128.602, 5.71262, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "67.0239, 30.4259, 76.339, 0.22", "68.5639, 30.5773, 77.6758, 0.22", "68.9156, 30.5858, 77.9674, 0.22", "69.7384, 30.6415, 78.6271, 0.59", "70.4956, 30.7466, 79.2028, 0.44", "70.9119, 30.8186, 79.4921, 0.44", "71.449, 30.9199, 79.8009, 0.15", "71.9933, 31.0671, 80.0285, 0.15", "72.7147, 31.2384, 80.2301, 0.15", "73.3056, 31.3623, 80.3147, 0.96", "74.104, 31.5295, 80.3755, 1.55", "75.2069, 31.8154, 80.4688, 0.22", "75.9997, 32.0278, 80.529, 0.37", "76.6246, 32.1718, 80.556, 0.22", "77.1502, 32.2691, 80.5724, 0.22", "77.7462, 32.3767, 80.5963, 0.37", "78.873, 32.581, 80.6849, 0.22", "79.4982, 32.7026, 80.7769, 0.22", "80.3094, 32.888, 80.9513, 0.22", "80.8288, 33.0184, 81.0879, 0.96", "81.7144, 33.2447, 81.3607, 1.99", "83.1767, 33.5828, 81.8467, 0.22", "84.1087, 33.7468, 82.1719, 0.15", "85.0211, 33.8879, 82.5348, 0.15", "85.3257, 33.9273, 82.6673, 0.15", "85.7594, 33.9618, 82.8515, 0.15", "86.1781, 33.9838, 82.9958, 0.15", "86.9616, 34.0226, 83.1823, 0.15", "87.4641, 34.0127, 83.2532, 0.81", "88.0723, 33.9581, 83.3123, 1.47", "88.5233, 33.908, 83.3531, 1.47", "89.8756, 33.7562, 83.4477, 0.15", "90.2142, 33.7246, 83.4839, 0.22", "91.1175, 33.6157, 83.5923, 0.37", "92.0357, 33.467, 83.7066, 1.03", "92.9394, 33.2915, 83.9024, 1.77", "93.4243, 33.1905, 84.0627, 1.77", "94.8704, 32.877, 84.696, 0.22", "95.4014, 32.7946, 84.9764, 0.22", "96.2107, 32.7448, 85.4582, 1.11", "97.8227, 32.742, 86.5156, 0.22", "98.486, 32.742, 86.9948, 0.22", "99.1252, 32.7333, 87.4848, 0.66", "100.02, 32.7211, 88.1637, 0.88", "100.627, 32.7318, 88.6233, 1.7", "101.897, 32.8041, 89.6089, 0.44", "102.831, 32.896, 90.3152, 0.74", "103.514, 32.9998, 90.8491, 1.25", "104.612, 33.2669, 91.7883, 0.22", "104.985, 33.3907, 92.1327, 0.22", "105.602, 33.6753, 92.758, 0.37", "106.008, 33.9265, 93.1686, 0.37", "106.655, 34.3845, 93.7756, 1.47", "107.447, 34.9454, 94.4723, 0.29", "107.831, 35.211, 94.7838, 0.29", "108.047, 35.3497, 94.9517, 0.29", "108.751, 35.7671, 95.5339, 0.15", "109.195, 36.0247, 95.9742, 0.22", "109.535, 36.2217, 96.3809, 0.74", "109.909, 36.4589, 96.9551, 1.25", "110.491, 36.892, 98.0957, 0.22", "110.918, 37.2481, 99.074, 0.96", "111.29, 37.5633, 99.9957, 0.96", "111.611, 37.7804, 100.736, 0.29", "112.041, 37.9846, 101.651, 0.29", "112.433, 38.0915, 102.44, 0.29", "112.829, 38.1349, 103.189, 0.29", "113.189, 38.126, 103.975, 0.29", "113.441, 38.0604, 104.721, 0.29", "113.604, 37.9429, 105.462, 0.29", "113.681, 37.8532, 105.935, 0.29", "113.765, 37.7422, 106.57, 0.29", "113.895, 37.5565, 107.802, 0.59", "113.987, 37.4393, 108.742, 0.59", "114.136, 37.3126, 109.911, 0.59", "114.29, 37.2233, 110.726, 0.59", "114.577, 37.1001, 111.718, 0.59", "114.856, 37.0006, 112.388, 0.59", "115.0, 36.9649, 112.637, 0.59", "115.486, 36.8777, 113.269, 0.59", "115.743, 36.8314, 113.507, 0.59", "116.407, 36.7049, 113.959, 0.22", "116.939, 36.613, 114.212, 0.22", "117.662, 36.5336, 114.59, 0.22", "118.167, 36.5201, 114.918, 0.22", "118.935, 36.5875, 115.473, 0.22", "119.466, 36.6924, 115.935, 0.22", "120.012, 36.8476, 116.522, 1.11", "120.985, 37.1934, 117.758, 0.22", "121.511, 37.3947, 118.509, 0.22", "122.123, 37.6528, 119.472, 0.22", "122.603, 37.8191, 120.197, 0.22", "123.031, 37.8422, 120.758, 0.22", "123.271, 37.7692, 120.993, 0.22", "123.801, 37.5098, 121.365, 0.59", "124.648, 37.0538, 121.857, 0.59", "125.638, 36.5345, 122.409, 0.15", "126.594, 36.0459, 122.923, 0.66", "127.602, 35.5556, 123.489, 0.15", "128.404, 35.1887, 123.981, 0.66", "129.053, 34.9345, 124.409, 1.03", "130.274, 34.5367, 125.203, 0.22", "131.283, 34.2683, 125.829, 0.15", "132.277, 34.0711, 126.426, 0.66", "132.879, 34.0046, 126.814, 1.25", "134.137, 33.9595, 127.659, 0.22", "135.049, 33.9719, 128.278, 0.15", "135.835, 34.0399, 128.783, 0.37", "136.297, 34.1182, 129.068, 0.59", "137.464, 34.3542, 129.75, 0.15", "138.179, 34.4818, 130.17, 0.88", "139.416, 34.6725, 130.926, 0.22", "139.902, 34.7578, 131.241, 0.96", "140.303, 34.8343, 131.513, 0.66", "141.144, 35.0071, 132.067, 0.15", "141.97, 35.2076, 132.653, 0.81", "142.509, 35.3838, 133.116, 1.25", "143.201, 35.6993, 133.793, 0.15", "144.039, 36.1234, 134.67, 0.15", "144.288, 36.259, 134.948, 0.29", "144.882, 36.6356, 135.671, 0.15", "145.164, 36.8303, 136.039, 0.96", "145.705, 37.1528, 136.746, 0.29", "146.464, 37.4911, 137.651, 0.74", "147.224, 37.7817, 138.472, 0.15", "147.745, 37.9651, 139.008, 0.37", "148.056, 38.0797, 139.302, 0.37", "148.595, 38.2952, 139.827, 0.22", "149.194, 38.564, 140.406, 0.22", "149.693, 38.7741, 140.811, 0.37", "150.282, 39.0166, 141.23, 0.37", "150.941, 39.3036, 141.646, 1.33", "152.187, 39.9304, 142.384, 0.22", "152.98, 40.4183, 142.861, 1.03", "153.931, 41.0887, 143.427, 0.15", "154.245, 41.3475, 143.618, 0.15", "155.004, 42.1287, 144.115, 0.15", "155.496, 42.7787, 144.517, 1.03", "155.844, 43.4339, 144.899, 0.15", "156.053, 43.9441, 145.205, 0.15", "156.321, 44.7004, 145.731, 0.15", "156.631, 45.4396, 146.362, 0.88", "156.955, 46.1235, 147.056, 0.29", "157.211, 46.6046, 147.599, 0.81", "157.342, 46.8287, 147.86, 0.81", "157.803, 47.789, 148.936, 0.22", "158.061, 48.5114, 149.704, 0.07", "158.159, 49.1022, 150.283, 0.15", "158.154, 49.4136, 150.567, 0.66", "158.053, 50.0469, 151.119, 1.55", "157.674, 51.635, 152.429, 0.15", "157.416, 52.395, 152.983, 0.15", "157.112, 53.0799, 153.474, 0.66", "156.857, 53.5678, 153.844, 0.15", "156.688, 53.8482, 154.067, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "67.0239, 30.4259, 76.339, 0.29", "66.2441, 31.3306, 77.818, 0.29", "65.63, 32.0449, 78.8302, 0.29", "64.9835, 32.8401, 79.837, 0.81", "64.6142, 33.2719, 80.376, 1.4", "63.688, 34.2523, 81.6439, 0.07", "63.1874, 34.7437, 82.2878, 1.03", "62.1857, 35.6105, 83.3896, 0.15", "61.3364, 36.3699, 84.2792, 1.55", "60.5486, 37.1302, 85.1273, 0.22", "60.0353, 37.6823, 85.7235, 0.22", "59.5065, 38.3323, 86.3932, 0.81", "58.9768, 39.0666, 87.1088, 0.07", "58.567, 39.7956, 87.7516, 0.59", "58.3029, 40.5284, 88.2789, 0.07", "58.2194, 40.9918, 88.5646, 0.52", "58.1343, 42.562, 89.4808, 0.07", "58.1679, 43.0846, 89.7803, 0.96", "58.254, 43.5729, 90.0699, 0.96", "58.6033, 44.8688, 90.8895, 0.22", "58.9727, 45.7664, 91.4798, 0.22", "59.4063, 46.5195, 92.0231, 0.96", "59.9569, 47.3, 92.6283, 1.77", "60.7438, 48.3513, 93.5181, 0.22", "61.242, 48.9803, 94.0792, 0.15", "61.6744, 49.5092, 94.5314, 0.15", "61.8942, 49.7965, 94.7685, 0.15", "62.5698, 50.8019, 95.5653, 0.88", "63.156, 51.9786, 96.4763, 0.22", "63.3943, 52.6445, 96.9887, 0.81", "63.7228, 53.7801, 97.8707, 0.15", "63.9355, 54.5984, 98.5043, 0.66", "64.1537, 55.5032, 99.1979, 1.84", "64.5886, 57.1881, 100.484, 0.15", "64.8262, 58.1484, 101.194, 0.15", "65.0185, 58.9299, 101.758, 0.15", "65.1996, 59.5625, 102.212, 0.66", "65.6275, 60.7618, 102.994, 0.15", "66.1215, 61.8683, 103.657, 0.15", "66.4079, 62.4224, 103.954, 0.66", "66.6594, 62.9624, 104.214, 0.22", "66.9899, 63.8344, 104.62, 0.22", "67.1537, 64.3555, 104.852, 0.81", "67.2483, 64.777, 105.025, 0.81", "67.3611, 65.9659, 105.512, 0.07", "67.3564, 66.6859, 105.822, 0.66", "67.1604, 68.2026, 106.523, 0.15", "66.925, 69.219, 107.011, 1.4", "66.4875, 70.6293, 107.737, 0.15", "66.1231, 71.5674, 108.251, 0.15", "65.7385, 72.3528, 108.709, 1.18", "64.9631, 73.5526, 109.505, 0.22", "64.2539, 74.3903, 110.123, 0.15", "63.8015, 74.8667, 110.497, 0.15", "63.3455, 75.3272, 110.865, 0.74", "62.7936, 75.8974, 111.296, 1.25", "61.6743, 77.1017, 112.179, 0.22", "61.0859, 77.7679, 112.663, 1.11", "60.0817, 78.9612, 113.569, 0.22", "59.5385, 79.6568, 114.097, 1.47", "59.0213, 80.3594, 114.621, 0.96", "58.3397, 81.3583, 115.357, 0.22", "57.763, 82.2717, 116.02, 0.74", "57.0679, 83.4021, 116.875, 0.15", "56.7677, 83.8809, 117.265, 0.15", "56.4505, 84.4037, 117.709, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "39.1569, 9.85042, 39.5448, 0.15", "41.6566, 8.33835, 41.7405, 0.15", "42.4695, 7.99273, 42.2273, 0.22", "43.1166, 7.76771, 42.5586, 0.88", "44.2766, 7.41583, 43.0927, 0.15", "45.0337, 7.20958, 43.4187, 1.18", "45.8726, 6.98832, 43.7731, 2.58", "47.8201, 6.63525, 44.3691, 0.29", "48.7154, 6.48575, 44.633, 0.96", "49.3851, 6.37397, 44.8415, 1.18", "51.2841, 6.05594, 45.5349, 0.07", "51.9858, 5.94394, 45.8561, 0.07", "52.3249, 5.88369, 46.0388, 0.07", "52.9479, 5.73166, 46.4443, 0.74", "53.4591, 5.56414, 46.8202, 1.03", "54.6365, 5.07926, 47.7848, 0.15", "55.6175, 4.55723, 48.6573, 1.18", "55.9992, 4.30526, 49.0123, 1.4", "56.7885, 3.67527, 49.7877, 0.15", "57.3433, 3.12203, 50.3463, 0.15", "57.6384, 2.78132, 50.6451, 0.88", "57.9854, 2.33556, 51.0097, 0.29", "58.5936, 1.50413, 51.6899, 0.15", "59.0024, 0.921224, 52.2185, 0.81", "59.4289, 0.279373, 52.855, 1.62", "60.1773, -1.01518, 54.1819, 0.15", "60.5344, -1.71617, 54.9173, 0.15", "60.8205, -2.35362, 55.5788, 0.22", "61.1174, -3.16289, 56.3938, 0.22", "61.2811, -3.70027, 56.909, 0.22", "61.4372, -4.21284, 57.4127, 1.18", "61.643, -4.84962, 58.0119, 1.62", "62.1613, -5.96599, 59.0187, 0.22", "62.5361, -6.48864, 59.5365, 0.22", "62.8084, -6.75198, 59.8426, 0.44", "63.5532, -7.28084, 60.5949, 0.15", "64.1172, -7.58142, 61.117, 1.33", "65.2678, -8.09676, 62.1118, 0.15", "66.4734, -8.57097, 63.072, 0.22", "67.1227, -8.84221, 63.5332, 0.22", "67.4605, -8.99345, 63.7535, 0.22", "68.0533, -9.29813, 64.0904, 0.74", "68.6836, -9.63933, 64.3861, 1.25", "69.2129, -9.91991, 64.5601, 1.25", "70.9125, -10.8841, 64.9419, 0.22", "71.6596, -11.3233, 65.112, 0.22", "72.2871, -11.7039, 65.2668, 1.03", "73.0759, -12.1856, 65.4641, 1.84", "75.0756, -13.3938, 65.9457, 0.22", "75.9443, -13.9368, 66.1376, 1.11", "77.186, -14.7825, 66.4031, 0.22", "77.9868, -15.363, 66.5948, 0.15", "78.5608, -15.7838, 66.7549, 0.15", "79.4037, -16.417, 67.0282, 1.03", "80.5994, -17.3711, 67.4778, 0.22", "81.1717, -17.8194, 67.7531, 0.96", "82.1859, -18.6113, 68.3132, 0.15", "82.8676, -19.1578, 68.7662, 0.15", "83.3663, -19.5929, 69.1785, 0.96", "84.0347, -20.1924, 69.8545, 1.92", "85.6486, -21.5482, 71.741, 0.22", "86.1663, -21.9431, 72.381, 0.44", "86.9681, -22.561, 73.4392, 1.18", "87.9154, -23.3351, 74.8198, 0.22", "88.8282, -24.1318, 76.3477, 0.52", "89.5331, -24.7993, 77.7874, 0.81", "89.9113, -25.2117, 78.8247, 0.81", "90.405, -25.7911, 80.6499, 0.52", "90.5479, -26.0298, 81.7037, 0.52", "90.4858, -26.1204, 82.784, 0.52", "90.1804, -26.0348, 83.7869, 0.52", "89.7753, -25.8288, 84.5569, 1.25", "89.3493, -25.5245, 85.2104, 1.25", "88.8228, -25.0092, 86.0024, 0.37", "88.1653, -24.1829, 87.1405, 0.66", "87.7986, -23.583, 87.9091, 0.37", "87.5434, -22.9394, 88.7428, 0.66", "87.4204, -22.2438, 89.7932, 0.15", "87.4518, -21.8337, 90.5403, 0.15", "87.5414, -21.6219, 91.0162, 0.15", "87.7517, -21.316, 91.8189, 1.62", "88.1828, -20.7736, 93.3838, 0.22", "88.6546, -20.2139, 95.1849, 0.88", "89.0207, -19.8185, 96.7323, 1.4", "89.3155, -19.5106, 98.157, 1.4", "89.6521, -19.1264, 100.15, 0.66", "89.8765, -18.8369, 101.953, 0.29", "89.9526, -18.7413, 102.869, 0.29", "90.0018, -18.6983, 103.787, 0.29", "90.0014, -18.7242, 104.393, 0.29", "89.9247, -18.9744, 105.795, 0.29", "89.827, -19.3057, 106.74, 0.29", "89.6994, -19.7686, 107.797, 0.29", "89.5699, -20.0692, 108.584, 0.29", "89.4143, -20.2208, 109.172, 0.29", "89.2726, -20.2733, 109.564, 0.29", "88.8274, -20.1962, 110.351, 0.88", "88.3011, -19.9516, 111.093, 1.25", "87.7899, -19.6387, 111.779, 0.59", "87.0935, -19.1797, 112.647, 1.25", "86.6167, -18.8453, 113.234, 1.4", "85.1437, -17.8064, 114.987, 0.15", "84.5676, -17.4098, 115.623, 0.74", "83.4949, -16.6888, 116.728, 0.22", "82.7439, -16.1947, 117.488, 1.03", "82.2183, -15.8517, 118.033, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "39.1569, 9.85042, 39.5448, 0.15", "38.719, 8.09216, 39.5592, 0.15", "38.544, 7.378, 39.5435, 0.07", "38.3308, 6.52872, 39.5057, 1.03", "38.0246, 5.36162, 39.4253, 0.07", "37.71, 4.21782, 39.3311, 0.07", "37.5225, 3.58111, 39.2724, 0.66", "37.1147, 2.3461, 39.0317, 0.07", "36.9041, 1.71647, 38.8727, 0.07", "36.5983, 0.810904, 38.6074, 0.07", "36.5045, 0.548615, 38.508, 0.29", "36.3266, 0.0548049, 38.28, 0.81", "35.8362, -1.28892, 37.5723, 0.07", "35.5041, -2.20276, 37.0346, 0.07", "35.2757, -2.82556, 36.6271, 0.15", "34.8241, -4.07707, 35.7466, 0.07", "34.5615, -4.85982, 35.1716, 0.07", "34.4231, -5.31807, 34.8246, 0.22", "34.325, -5.67006, 34.5507, 0.22", "34.0222, -6.70729, 33.7277, 0.15", "33.852, -7.3169, 33.251, 0.15", "33.6758, -8.05692, 32.6925, 0.07", "33.5887, -8.46037, 32.385, 0.15", "33.3825, -9.42755, 31.6696, 0.07", "33.2475, -9.9773, 31.2708, 0.59", "32.9457, -10.8769, 30.6199, 0.07", "32.7391, -11.3113, 30.2704, 0.07", "32.5556, -11.5962, 30.0152, 0.22", "32.1322, -12.1507, 29.4949, 0.22", "31.5948, -12.8135, 28.8943, 0.07", "30.9458, -13.6019, 28.2196, 0.07", "30.623, -13.9677, 27.9259, 0.07", "30.2049, -14.3999, 27.6174, 0.07", "29.5058, -15.0679, 27.2348, 0.29", "28.4183, -16.0399, 26.8579, 0.07", "27.9258, -16.4588, 26.7993, 0.29", "27.4887, -16.8345, 26.819, 0.29", "26.664, -17.5652, 26.9224, 0.07", "25.8639, -18.2533, 27.0778, 0.07", "25.5184, -18.5237, 27.1587, 0.22", "24.9822, -18.8933, 27.2831, 0.37", "24.255, -19.3825, 27.4034, 0.29", "23.3429, -19.9643, 27.396, 0.07", "23.011, -20.1582, 27.3353, 0.37", "22.5056, -20.4104, 27.2065, 0.59", "21.4872, -20.8021, 26.9284, 0.07", "20.9549, -20.9541, 26.7766, 0.15", "19.6005, -21.2342, 26.3898, 0.07", "18.6992, -21.3801, 26.1268, 0.07", "17.9221, -21.5295, 25.8849, 0.15", "16.9194, -21.7975, 25.554, 0.07", "16.4202, -21.9946, 25.3817, 0.07", "16.147, -22.1375, 25.291, 0.29", "15.8339, -22.3515, 25.1998, 0.29", "15.0012, -23.0368, 24.9506, 0.07", "14.2509, -23.7347, 24.7278, 0.07", "13.5938, -24.3838, 24.5371, 0.07", "13.3441, -24.6208, 24.4587, 0.07", "13.2122, -24.7375, 24.4114, 0.15", "12.9908, -24.9048, 24.3203, 0.15", "12.5271, -25.1458, 24.1083, 0.15", "11.8471, -25.3465, 23.7778, 0.15", "11.1064, -25.4614, 23.3773, 0.15", "10.6625, -25.5119, 23.1319, 0.15", "10.1822, -25.5614, 22.8651, 0.15", "9.70375, -25.6051, 22.5943, 0.15", "9.33847, -25.6341, 22.3812, 0.15", "8.91123, -25.6513, 22.1479, 0.15", "8.06445, -25.6358, 21.7135, 0.07", "7.50607, -25.6267, 21.446, 0.07", "6.74339, -25.6734, 21.1042, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-47.5374, 47.5579, 46.6726, 0.07", "-48.0127, 47.0595, 47.7454, 0.07", "-48.2566, 46.7198, 48.4549, 0.88", "-48.5088, 46.2474, 49.4132, 0.22", "-48.6866, 45.9265, 50.0694, 0.88", "-48.9319, 45.4978, 50.94, 1.84", "-49.3904, 44.6607, 52.5859, 0.22", "-49.5521, 44.2515, 53.2704, 0.22", "-49.6787, 43.871, 53.7975, 0.22", "-49.9022, 43.1656, 54.6437, 0.15", "-50.0652, 42.6379, 55.2123, 0.15", "-50.2151, 42.2099, 55.6119, 0.29", "-50.5759, 41.2943, 56.3354, 1.25", "-51.1647, 39.8983, 57.3506, 0.07", "-51.3675, 39.4205, 57.6782, 0.88", "-51.4717, 39.1545, 57.8555, 1.18", "-51.8931, 38.1294, 58.5458, 0.07", "-52.108, 37.6349, 58.8971, 0.74", "-52.4755, 36.7706, 59.6113, 0.07", "-52.6004, 36.4001, 59.9725, 0.29", "-52.6978, 35.8693, 60.5679, 0.07", "-52.6875, 35.4289, 61.1545, 1.03", "-52.612, 35.1411, 61.6244, 1.47", "-52.3305, 34.5266, 62.7845, 0.22", "-52.0601, 34.1088, 63.6799, 0.22", "-51.7828, 33.7309, 64.5915, 0.22", "-51.6003, 33.4601, 65.3148, 0.22", "-51.5177, 33.2968, 65.7442, 0.22", "-51.4872, 33.026, 66.2963, 0.22", "-51.524, 32.7841, 66.6929, 0.22", "-51.6694, 32.3786, 67.2775, 0.22", "-51.9292, 31.7451, 68.0369, 1.03", "-52.1749, 31.1021, 68.7125, 1.47", "-52.5971, 29.8283, 69.9334, 0.07", "-52.7102, 29.4893, 70.2488, 1.25", "-52.8851, 29.001, 70.7028, 1.4", "-53.267, 28.0263, 71.5904, 0.29", "-53.542, 27.4204, 72.1416, 0.15", "-53.8085, 26.9445, 72.5832, 0.81", "-54.4369, 25.9746, 73.4872, 0.15", "-54.8395, 25.455, 73.9612, 0.15", "-55.1526, 25.0961, 74.2923, 0.37", "-55.7319, 24.5441, 74.7576, 0.15", "-56.0577, 24.2602, 74.9628, 0.88", "-56.3923, 23.9814, 75.1365, 1.55", "-57.7394, 22.9036, 75.7562, 0.22", "-58.0885, 22.6366, 75.9206, 0.22", "-58.9259, 22.0412, 76.3461, 0.81", "-60.0141, 21.3229, 76.9545, 0.07", "-60.428, 21.0746, 77.2258, 0.74", "-61.049, 20.7386, 77.7207, 0.22", "-61.6977, 20.4103, 78.3745, 0.37", "-62.116, 20.2043, 78.8792, 0.22", "-62.7294, 19.8863, 79.8002, 1.03", "-63.3091, 19.5177, 80.8928, 0.07", "-63.6906, 19.1989, 81.8007, 0.88", "-63.9771, 18.891, 82.6039, 1.25", "-64.4836, 18.2322, 84.0391, 0.15", "-64.7313, 17.8669, 84.7064, 0.74", "-65.226, 17.0885, 85.8845, 0.22", "-65.7367, 16.283, 86.8883, 1.11", "-66.0793, 15.7789, 87.4354, 2.06", "-67.0027, 14.5383, 88.66, 0.15", "-67.3702, 14.0848, 89.081, 0.29", "-68.2219, 13.1457, 89.9526, 0.07", "-68.6507, 12.7463, 90.358, 0.22", "-69.465, 12.0907, 91.1478, 0.07", "-69.903, 11.794, 91.6374, 1.4", "-70.8765, 11.2454, 92.8911, 0.07", "-71.3475, 11.0096, 93.5359, 0.81", "-72.1125, 10.6877, 94.6927, 0.07", "-72.5702, 10.5265, 95.4501, 0.96", "-73.4128, 10.3061, 96.8968, 0.07", "-73.7315, 10.2449, 97.4348, 0.07", "-74.1473, 10.183, 98.116, 1.25", "-75.1161, 10.0439, 99.6008, 0.22", "-75.7983, 9.93022, 100.558, 0.88", "-76.2675, 9.87022, 101.131, 1.18", "-77.688, 9.72672, 102.645, 0.15", "-78.1422, 9.68132, 103.076, 0.81", "-78.8813, 9.60082, 103.689, 0.15", "-79.611, 9.51231, 104.191, 1.18", "-80.8034, 9.40929, 104.912, 0.07", "-81.3255, 9.39333, 105.199, 0.07", "-82.0807, 9.46824, 105.526, 0.07", "-82.4814, 9.53961, 105.673, 0.88", "-83.0804, 9.67142, 105.875, 1.33", "-84.7322, 10.129, 106.373, 0.07", "-85.5123, 10.3826, 106.575, 1.33", "-87.4248, 11.1279, 107.022, 0.07", "-87.7494, 11.2744, 107.087, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-47.5374, 47.5579, 46.6726, 0.15", "-47.0956, 46.0233, 46.4995, 0.15", "-46.9143, 45.3847, 46.3802, 0.29", "-46.6323, 44.4282, 46.1777, 0.15", "-46.5167, 44.0588, 46.0868, 0.52", "-46.2758, 43.3167, 45.8947, 1.33", "-45.8256, 41.882, 45.5435, 0.07", "-45.608, 41.1095, 45.3311, 0.07", "-45.4229, 40.4485, 45.1797, 0.37", "-45.0577, 39.3414, 45.0573, 0.07", "-44.932, 39.0073, 45.0627, 0.15", "-44.3273, 37.4885, 45.2761, 0.15", "-44.1711, 37.1312, 45.3717, 0.74", "-43.8261, 36.3354, 45.6493, 1.25", "-43.0233, 34.3858, 46.4744, 0.15", "-42.5727, 33.2343, 47.0325, 0.15", "-42.3761, 32.7155, 47.2931, 0.15", "-42.149, 32.0673, 47.6132, 0.15", "-41.8979, 31.2276, 47.984, 1.25", "-41.5774, 29.7422, 48.5296, 0.07", "-41.4983, 29.1204, 48.7122, 0.96", "-41.455, 28.5667, 48.8407, 1.25", "-41.3342, 26.6984, 49.2092, 0.15", "-41.2897, 25.9206, 49.3287, 0.96", "-41.1923, 24.4287, 49.4923, 0.07", "-41.1407, 23.7109, 49.5379, 0.29", "-40.9922, 21.5937, 49.5978, 0.07", "-40.9594, 21.1235, 49.5991, 0.29", "-40.8493, 19.6508, 49.5602, 0.07", "-40.7796, 18.9743, 49.5287, 1.03", "-40.6871, 18.3176, 49.4925, 1.47", "-40.2619, 15.9718, 49.3694, 0.07", "-40.136, 15.4313, 49.3464, 0.59", "-39.9417, 14.6782, 49.3282, 0.07", "-39.7506, 13.9693, 49.3443, 0.07", "-39.4872, 13.0159, 49.4021, 0.07", "-39.2684, 12.1686, 49.4951, 1.18", "-38.733, 9.97792, 49.8275, 0.07", "-38.61, 9.34518, 49.936, 0.74", "-38.3612, 7.65813, 50.2474, 0.07", "-38.3158, 7.17629, 50.3391, 0.44", "-38.2321, 5.53491, 50.6843, 0.07", "-38.2253, 4.69622, 50.8815, 1.47", "-38.2827, 2.97498, 51.3203, 0.07", "-38.3175, 2.44197, 51.4533, 0.37", "-38.4225, 1.37514, 51.7041, 0.07", "-38.5835, -0.0450111, 52.0676, 0.07", "-38.6966, -0.959948, 52.3138, 0.07", "-38.744, -1.43533, 52.452, 0.37", "-38.8243, -2.60499, 52.8131, 0.15", "-38.8566, -3.32767, 53.0611, 0.81", "-38.8766, -4.57111, 53.5259, 0.15", "-38.8596, -5.58472, 53.9371, 1.55", "-38.7917, -7.23168, 54.6739, 0.07", "-38.7569, -7.71883, 54.9234, 0.66", "-38.5843, -9.02622, 55.6811, 0.07", "-38.4783, -9.48248, 55.9584, 0.29", "-38.2546, -10.1518, 56.378, 0.07", "-38.1009, -10.5629, 56.6587, 0.74", "-37.6691, -11.6066, 57.4154, 0.15", "-37.241, -12.503, 58.0601, 1.18", "-36.1957, -14.2507, 59.2711, 0.15", "-35.8127, -14.8332, 59.6626, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-9.31161, 86.9121, 132.587, 0.07", "-10.1856, 84.7992, 132.96, 0.07", "-10.4453, 83.9401, 133.067, 0.07", "-10.7099, 83.0648, 133.176, 0.22", "-11.2094, 81.4126, 133.382, 0.07", "-11.4126, 80.7405, 133.466, 0.52", "-11.7549, 79.6081, 133.607, 0.07", "-11.8009, 79.0465, 133.652, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-9.31161, 86.9121, 132.587, 0.29", "-8.75859, 87.1638, 134.665, 0.29", "-8.35577, 87.201, 136.188, 0.29", "-7.97812, 87.1305, 137.921, 0.59", "-7.55547, 87.0079, 140.244, 0.74", "-7.3924, 86.966, 141.368, 1.03", "-7.25217, 86.9888, 142.695, 1.03", "-7.14078, 87.0882, 144.396, 0.15", "-7.13704, 87.2965, 145.698, 0.44", "-7.20882, 87.6559, 147.323, 0.81", "-7.33978, 87.9919, 148.361, 1.03", "-7.64557, 88.7806, 150.235, 0.15", "-7.96091, 89.6648, 151.874, 0.74", "-8.25899, 90.8085, 153.502, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "11.6308, -15.0005, 2.25832, 0.22", "11.5905, -16.2827, 0.420716, 0.22", "11.5938, -16.8857, -0.286063, 0.37", "11.6175, -17.2635, -0.681899, 0.59", "11.6612, -17.9619, -1.4137, 0.22", "11.7088, -18.7227, -2.21103, 1.47", "11.7574, -19.4984, -3.0238, 0.29", "11.834, -20.2955, -3.60246, 0.15", "11.9307, -21.0621, -4.07899, 1.03", "11.5367, -26.6782, -10.4688, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "11.6308, -15.0005, 2.25832, 0.22", "11.7708, -15.7766, 2.61183, 0.22", "11.8573, -16.517, 2.88567, 1.4", "11.8796, -17.734, 3.2283, 2.65", "11.6909, -20.798, 3.92219, 0.22", "11.6193, -21.4095, 4.0311, 0.22", "11.4681, -22.349, 4.16169, 0.96", "11.1866, -23.4805, 4.24297, 2.06", "10.5938, -25.2674, 4.24418, 0.22", "10.1664, -26.2517, 4.12965, 0.15", "9.79135, -26.9922, 3.9405, 0.29", "9.38046, -27.7453, 3.7284, 0.15", "8.97103, -28.5449, 3.48647, 1.18", "8.7485, -29.0251, 3.33387, 1.7", "7.87783, -31.1422, 2.65014, 0.22", "7.56609, -32.0106, 2.38061, 0.81", "7.38795, -32.5862, 2.21918, 1.4", "6.86741, -34.5825, 1.72401, 0.15", "6.77456, -35.1156, 1.62239, 0.15", "6.68952, -36.2114, 1.47409, 0.15", "6.68555, -36.9373, 1.41582, 0.37", "6.67144, -37.6587, 1.36904, 1.33", "6.61375, -38.4992, 1.31487, 1.84", "6.11945, -41.1317, 1.141, 0.22", "5.7125, -42.5165, 1.02346, 0.07", "5.52542, -43.0984, 0.971819, 0.96", "5.05628, -44.3207, 0.857461, 0.22", "4.61134, -45.2353, 0.753371, 1.33", "3.58433, -46.7376, 0.531661, 0.22", "2.75142, -47.4111, 0.375735, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "12.1671, 30.2978, 31.3177, 0.44", "11.1806, 30.0481, 32.2551, 0.44", "10.3584, 29.9844, 32.9, 0.44", "9.52824, 30.0133, 33.543, 0.44", "9.16697, 30.0428, 33.8357, 0.44", "8.58548, 30.0958, 34.3062, 0.96", "8.21709, 30.1283, 34.5972, 1.18", "7.19326, 30.2051, 35.2804, 0.15", "6.69458, 30.2731, 35.6398, 0.15", "6.24876, 30.3384, 36.0164, 0.15", "5.59349, 30.3907, 36.6208, 0.15", "5.22913, 30.3639, 36.9601, 1.33", "4.47051, 30.2078, 37.6408, 1.92", "3.12285, 29.776, 38.7922, 0.22", "2.23451, 29.4134, 39.4879, 0.59", "1.77181, 29.1603, 39.8562, 1.03", "0.709029, 28.4059, 40.761, 0.15", "0.143851, 27.8969, 41.2879, 0.15", "-0.109165, 27.6035, 41.539, 0.88", "-0.581517, 26.8942, 42.0115, 1.92", "-1.51166, 25.2342, 42.9858, 0.22", "-1.74372, 24.7865, 43.2591, 0.22", "-2.01043, 24.197, 43.5791, 0.22", "-2.16531, 23.8618, 43.7563, 0.22", "-2.58608, 23.0687, 44.1793, 0.22", "-2.95581, 22.4826, 44.4999, 1.11", "-3.61047, 21.6508, 44.9596, 2.58", "-4.86398, 20.2482, 45.7745, 0.52", "-5.83722, 19.1879, 46.4301, 0.15", "-6.23975, 18.7478, 46.7262, 0.15", "-6.79454, 18.1544, 47.1775, 0.29", "-7.31247, 17.6192, 47.6255, 0.96", "-8.13196, 16.7666, 48.3622, 0.22", "-8.67, 16.2424, 48.8832, 0.22", "-9.15456, 15.7258, 49.3466, 0.44", "-9.64734, 15.1287, 49.8605, 1.62", "-10.092, 14.5412, 50.3762, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "12.1671, 30.2978, 31.3177, 1.47", "13.4223, 30.4772, 31.9589, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-15.8527, -171.681, 41.5162, 0.22", "-15.9114, -170.709, 42.0996, 0.22", "-15.9652, -169.6, 42.7227, 0.22", "-15.9728, -168.718, 43.1802, 0.22", "-15.9465, -167.721, 43.6549, 0.66", "-15.9075, -166.972, 44.0123, 0.81", "-15.7663, -165.56, 44.6671, 0.15", "-15.6228, -164.71, 45.0125, 1.18", "-15.4462, -163.874, 45.3215, 1.4", "-14.9834, -162.047, 45.9584, 0.15", "-14.7852, -161.416, 46.1709, 0.15", "-14.3, -160.178, 46.6009, 1.7", "-13.7554, -159.07, 46.9718, 0.22", "-13.2845, -158.224, 47.2425, 0.88", "-12.8852, -157.555, 47.4486, 0.22", "-12.4447, -156.855, 47.6432, 0.07", "-11.9403, -155.99, 47.86, 0.07", "-11.2954, -154.786, 48.1574, 0.66", "-10.6854, -153.521, 48.4583, 0.07", "-10.4786, -153.032, 48.5749, 0.37", "-10.2417, -152.382, 48.7245, 0.66", "-9.62032, -150.324, 49.2062, 0.07", "-9.39098, -149.429, 49.426, 1.03", "-9.05669, -147.763, 49.858, 0.15", "-8.94657, -147.025, 50.0619, 0.88", "-8.8779, -146.393, 50.2417, 1.18", "-8.7787, -144.351, 50.8432, 0.15", "-8.81551, -143.681, 51.0399, 0.15", "-8.94123, -142.944, 51.2406, 0.22", "-9.12622, -142.402, 51.3658, 0.07", "-9.42674, -141.762, 51.4678, 0.29", "-9.76688, -141.172, 51.5239, 0.07", "-10.082, -140.694, 51.5282, 0.59", "-10.6212, -139.922, 51.5004, 0.15", "-11.3351, -138.929, 51.4371, 1.62", "-12.0566, -137.924, 51.363, 0.15", "-12.5682, -137.217, 51.3187, 0.29", "-13.3914, -136.066, 51.2549, 0.07", "-14.0032, -135.128, 51.2508, 0.07", "-14.3221, -134.589, 51.2733, 0.66", "-14.8688, -133.623, 51.339, 0.15", "-15.2792, -132.889, 51.4074, 1.03", "-15.77, -132.039, 51.5196, 1.62", "-17.1633, -129.684, 51.9894, 0.07", "-17.7786, -128.634, 52.2432, 0.59", "-18.2226, -127.885, 52.4453, 0.15", "-18.7884, -126.924, 52.7222, 0.88", "-19.5657, -125.51, 53.157, 0.15", "-20.2842, -124.225, 53.5893, 0.15", "-20.8652, -123.216, 53.9652, 1.33", "-21.5808, -121.932, 54.473, 0.15", "-22.1159, -120.864, 54.9151, 0.15", "-22.4936, -119.93, 55.291, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-15.8527, -171.681, 41.5162, 0.15", "-16.3264, -172.972, 41.6772, 0.15", "-16.7501, -173.717, 41.8776, 0.15", "-17.1373, -174.225, 42.0928, 0.15", "-17.5006, -174.625, 42.2858, 0.74", "-18.1053, -175.253, 42.5959, 0.15", "-18.5646, -175.748, 42.8374, 1.4", "-19.3566, -176.53, 43.3313, 0.15", "-20.118, -177.269, 43.8358, 0.66", "-20.6944, -177.903, 44.3431, 0.07", "-20.936, -178.21, 44.6553, 0.07", "-21.2113, -178.603, 45.0697, 0.29", "-21.6186, -179.276, 45.8233, 0.07", "-21.8667, -179.825, 46.4713, 1.25", "-22.2144, -180.866, 47.8121, 0.29", "-22.5118, -181.961, 49.4187, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-58.5266, -128.602, 5.71262, 0.59", "-59.4942, -128.377, 5.41424, 0.59", "-59.7923, -128.293, 5.30154, 0.07", "-60.2009, -128.168, 5.10413, 0.07", "-60.4828, -128.076, 4.94867, 0.37", "-60.9548, -127.907, 4.65864, 0.07", "-61.3154, -127.761, 4.40368, 0.15", "-61.8038, -127.555, 3.97188, 1.62", "-62.3416, -127.241, 3.29429, 0.22", "-62.5227, -127.092, 2.94737, 0.22", "-62.6518, -126.962, 2.62905, 0.59", "-62.7785, -126.773, 2.14283, 0.59", "-62.8408, -126.585, 1.60934, 0.59", "-62.7744, -126.383, 0.896346, 1.18", "-62.6542, -126.292, 0.520918, 1.18", "-65.6762, -124.369, -3.74405, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-58.5266, -128.602, 5.71262, 0.22", "-59.6421, -129.19, 5.62616, 0.22", "-60.2633, -129.501, 5.57132, 0.15", "-61.1929, -129.883, 5.45179, 0.15", "-62.0202, -130.179, 5.31568, 1.25", "-62.9706, -130.486, 5.16427, 0.15", "-63.7799, -130.727, 5.05374, 0.15", "-64.8995, -131.008, 4.91602, 1.62", "-66.1294, -131.307, 4.80726, 0.22", "-66.8819, -131.506, 4.74557, 0.22", "-67.7677, -131.75, 4.66945, 1.33", "-68.6355, -131.988, 4.60888, 1.11", "-70.0873, -132.378, 4.55009, 0.15", "-70.5914, -132.528, 4.55168, 0.15", "-71.6988, -132.925, 4.62892, 0.15", "-72.317, -133.178, 4.72191, 0.15", "-72.9176, -133.465, 4.89437, 0.66", "-73.6891, -133.866, 5.35399, 0.07", "-74.0942, -134.079, 5.8036, 0.88", "-74.5794, -134.279, 6.57788, 0.15", "-75.0321, -134.385, 7.46884, 0.59", "-75.5405, -134.397, 8.68766, 1.4", "-76.1786, -134.214, 10.3589, 0.22", "-76.6067, -133.94, 11.5914, 1.25", "-77.0925, -133.456, 13.1163, 0.44", "-77.3445, -133.105, 13.9354, 0.52", "-77.611, -132.596, 14.8998, 1.11", "-77.8631, -131.923, 16.0222, 0.37", "-78.0856, -131.104, 17.3584, 0.07", "-78.1877, -130.663, 18.1287, 0.07", "-78.2287, -130.363, 18.7062, 0.22", "-78.2334, -129.975, 19.5509, 0.96", "-78.1911, -129.631, 20.3733, 2.06", "-77.9264, -128.931, 22.2456, 0.22", "-77.6438, -128.51, 23.5763, 0.74", "-77.4117, -128.306, 24.494, 0.74", "-77.1223, -128.194, 25.4699, 0.74", "-76.9731, -128.197, 25.8839, 0.74", "-76.548, -128.311, 26.8297, 0.74", "-75.9871, -128.5, 27.7531, 0.74", "-75.6341, -128.611, 28.2896, 0.74", "-75.4317, -128.631, 28.6038, 0.74", "-74.9442, -128.494, 29.3486, 0.74", "-74.4733, -128.197, 29.9497, 0.74", "-73.655, -127.53, 30.864, 0.29", "-73.2165, -127.119, 31.3195, 0.29", "-72.6043, -126.518, 31.8993, 0.07", "-72.2182, -126.143, 32.2279, 0.44", "-71.2419, -125.194, 32.9746, 0.07", "-70.6811, -124.68, 33.3582, 0.07", "-70.1208, -124.19, 33.7222, 0.07", "-69.7839, -123.915, 33.933, 0.29", "-69.1607, -123.412, 34.3032, 0.07", "-68.6377, -123.003, 34.6419, 0.37", "-68.0357, -122.577, 35.0354, 0.22", "-67.7807, -122.435, 35.2106, 0.81", "-67.2874, -122.238, 35.6096, 0.37", "-66.5502, -122.071, 36.3557, 0.88", "-65.7123, -121.947, 37.2997, 0.88", "-65.3897, -121.928, 37.7054, 0.88", "-64.8037, -121.944, 38.5316, 0.88", "-64.3036, -122.012, 39.2688, 0.88", "-63.5871, -122.239, 40.3625, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "2.75142, -47.4111, 0.375735, 0.29", "2.48299, -48.4422, 0.691085, 0.29", "2.36182, -48.9633, 0.848002, 0.15", "2.25714, -49.47, 0.995103, 1.03", "2.07028, -50.4234, 1.26086, 0.15", "1.94425, -51.0665, 1.44012, 1.4", "1.65724, -52.5308, 1.8483, 0.07", "1.61186, -52.7519, 1.91069, 0.81", "1.47286, -53.5132, 2.10624, 0.07", "1.39491, -54.0643, 2.24291, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "2.75142, -47.4111, 0.375735, 1.92", "1.96092, -48.1369, 0.867016, 1.92", "1.13943, -48.8569, 1.3613, 2.06", "-0.782063, -50.373, 2.45029, 0.22", "-1.41934, -50.8479, 2.81441, 0.66", "-2.34084, -51.4245, 3.28395, 0.22", "-3.02303, -51.7869, 3.58198, 0.96", "-3.44001, -51.9871, 3.75741, 1.47", "-5.16063, -52.6842, 4.41422, 0.52", "-6.1681, -52.9605, 4.73773, 0.66", "-8.23598, -53.4723, 5.312, 0.15", "-9.39059, -53.7697, 5.60333, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-10.092, 14.5412, 50.3762, 0.07", "-11.4863, 14.5705, 50.9796, 0.07", "-12.1336, 14.5842, 51.2597, 0.96", "-13.0021, 14.6024, 51.6356, 0.07", "-13.4607, 14.6121, 51.834, 0.29", "-14.2226, 14.6281, 52.1638, 0.07", "-15.0493, 14.6455, 52.5215, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-10.092, 14.5412, 50.3762, 0.44", "-10.1836, 13.253, 51.3099, 0.44", "-10.1396, 12.1877, 52.1654, 0.96", "-10.0545, 11.4342, 52.8243, 0.66", "-9.95797, 10.6481, 53.5216, 0.15", "-9.95613, 10.2124, 53.8772, 0.15", "-9.98572, 9.55454, 54.3819, 0.29", "-10.0441, 8.60901, 55.0632, 0.29", "-10.1167, 8.00723, 55.4415, 0.74", "-10.2023, 7.19523, 55.8852, 1.62", "-10.353, 5.14647, 56.8631, 0.22", "-10.4198, 4.34087, 57.2074, 1.18", "-10.4742, 3.89535, 57.3796, 1.55", "-10.6313, 2.69757, 57.7973, 0.29", "-10.7415, 1.6251, 58.169, 0.22", "-10.777, 0.431376, 58.6166, 0.22", "-10.7025, -0.393502, 58.9729, 0.22", "-10.635, -1.13914, 59.3469, 0.52", "-10.5922, -1.42704, 59.524, 0.52", "-10.4714, -1.98691, 59.9524, 0.52", "-10.3837, -2.38054, 60.2617, 0.52", "-10.2684, -2.86106, 60.5902, 0.52", "-10.0608, -3.6721, 61.0961, 0.15", "-9.91667, -4.19594, 61.3978, 0.15", "-9.80688, -4.59831, 61.6119, 0.44", "-9.62185, -5.26862, 61.9482, 1.11", "-9.27038, -6.5218, 62.4831, 0.15", "-9.13682, -7.02112, 62.6658, 0.15", "-8.86947, -8.08418, 63.0309, 0.22", "-8.65129, -8.92845, 63.3032, 1.25", "-8.40353, -9.72038, 63.5668, 1.99", "-7.71611, -11.455, 64.1686, 0.15", "-7.37765, -12.1472, 64.386, 1.03", "-6.97935, -12.8234, 64.5906, 1.03", "-6.05163, -13.9501, 64.9122, 0.15", "-5.29491, -14.6311, 65.0949, 0.15", "-4.56905, -15.1282, 65.206, 0.15", "-3.68572, -15.5788, 65.2759, 0.81", "-2.78457, -16.0207, 65.2932, 1.33", "-1.03937, -16.9536, 65.214, 0.15", "-0.508324, -17.3322, 65.1609, 1.25", "0.368045, -18.1912, 65.0311, 0.29", "1.15141, -19.2559, 64.868, 0.22", "1.61815, -20.1278, 64.7271, 0.15", "2.00213, -21.1892, 64.5142, 1.77", "2.50237, -23.3807, 63.9793, 0.07", "2.61093, -24.0419, 63.7998, 0.81", "2.73074, -25.2292, 63.4644, 0.07", "2.78571, -26.2342, 63.1773, 0.96", "2.82449, -27.1688, 62.8888, 2.06", "2.94753, -29.3404, 62.1844, 0.07", "3.03805, -30.3774, 61.8411, 0.22", "3.14651, -31.5856, 61.495, 0.15", "3.23466, -32.5867, 61.2582, 1.47", "3.30355, -33.6964, 61.0315, 0.66", "3.32551, -34.8207, 60.8236, 0.66", "3.3118, -35.5368, 60.7136, 1.77", "3.25994, -37.0667, 60.4901, 0.07", "3.22907, -37.4978, 60.4354, 0.22", "3.12124, -38.4458, 60.3349, 0.22", "2.98714, -39.2491, 60.2715, 1.55", "2.62295, -40.8515, 60.1494, 0.15", "2.4287, -41.5595, 60.0763, 0.59", "2.1759, -42.4302, 59.9465, 0.15", "1.96899, -43.1495, 59.8217, 0.15", "1.78376, -43.8028, 59.6972, 0.74", "1.55395, -44.5954, 59.5188, 1.25", "1.07086, -46.0311, 59.1887, 0.07", "0.79575, -46.8186, 59.0114, 0.15", "0.558325, -47.5032, 58.8887, 0.74", "0.335865, -48.1181, 58.8179, 1.4", "-0.0506271, -49.1568, 58.7691, 0.15", "-0.437931, -50.1319, 58.8376, 0.07", "-0.646829, -50.5902, 58.9356, 0.29", "-1.28365, -51.7291, 59.2891, 0.07", "-1.62452, -52.292, 59.4968, 0.88", "-1.86119, -52.6495, 59.6474, 1.33", "-2.60845, -53.679, 60.1449, 0.22", "-3.10328, -54.3515, 60.4787, 0.22", "-3.5824, -54.9648, 60.8025, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "13.4223, 30.4772, 31.9589, 0.15", "13.9537, 31.7086, 32.5194, 0.15", "14.1338, 32.1422, 32.7612, 0.22", "14.4104, 32.8406, 33.2287, 0.15", "14.5629, 33.2627, 33.5318, 0.96", "14.7538, 33.8416, 33.957, 0.29", "14.9047, 34.2883, 34.2824, 0.29", "15.0658, 34.7937, 34.6979, 0.29", "15.2354, 35.2883, 35.0732, 0.29", "15.4122, 35.7618, 35.4001, 1.25", "15.4899, 35.946, 35.5189, 1.25", "15.985, 36.9766, 36.1577, 0.15", "16.4128, 37.7341, 36.5831, 1.33", "17.0783, 38.7682, 37.1128, 0.07", "17.4816, 39.3026, 37.3721, 0.59", "18.0723, 39.9998, 37.7068, 0.15", "18.6117, 40.6073, 37.9965, 1.11", "19.0542, 41.1586, 38.2478, 2.14", "19.273, 41.4768, 38.3851, 1.84", "19.8176, 42.6585, 38.899, 0.15", "19.9799, 43.3755, 39.1975, 1.4", "20.0039, 43.9756, 39.4487, 0.96", "19.9006, 45.5364, 40.1627, 0.15", "19.8106, 46.1684, 40.4846, 0.96", "19.5585, 47.4252, 41.2337, 0.15", "19.4523, 47.8335, 41.5195, 1.18", "19.2762, 48.588, 42.1384, 0.15", "19.182, 49.3017, 42.838, 0.59", "19.1865, 49.5292, 43.1069, 0.88", "19.2992, 50.2849, 44.0886, 0.22", "19.4418, 50.7777, 44.7659, 0.88", "19.585, 51.1972, 45.3527, 1.77", "19.8904, 51.9987, 46.4242, 0.29", "20.0707, 52.3984, 46.9165, 0.81", "20.4441, 53.1321, 47.7616, 0.22", "20.7461, 53.6706, 48.335, 0.37", "20.9188, 53.9587, 48.6229, 0.37", "21.3645, 54.6621, 49.2846, 1.55", "21.9865, 55.5954, 50.0823, 0.07", "22.483, 56.3371, 50.6571, 0.22", "22.8189, 56.8416, 51.0138, 0.22", "23.1141, 57.2939, 51.3184, 0.22", "23.4526, 57.8421, 51.6689, 0.07", "23.7324, 58.3429, 51.9697, 1.11", "23.8816, 58.6349, 52.1249, 1.4", "24.4011, 59.6403, 52.5963, 0.07", "24.7231, 60.2633, 52.8767, 0.74", "24.9114, 60.6587, 53.057, 0.74", "25.2075, 61.324, 53.3666, 0.22", "25.5479, 62.1136, 53.7324, 0.22", "25.7722, 62.6381, 53.969, 0.96", "25.9208, 62.9963, 54.1262, 0.96", "26.4471, 64.3641, 54.7183, 0.15", "26.7223, 65.1235, 55.0519, 0.15", "26.831, 65.4647, 55.2006, 0.22", "27.0641, 66.4207, 55.6005, 0.07", "27.1639, 66.9165, 55.8106, 0.07", "27.2887, 67.725, 56.1487, 0.96", "27.3634, 68.3882, 56.4201, 0.22", "27.4144, 69.1308, 56.7176, 1.25", "27.4837, 70.7558, 57.372, 0.15", "27.5015, 71.5541, 57.6893, 1.33", "27.5203, 72.8335, 58.1948, 0.15", "27.5224, 73.2324, 58.358, 0.22", "27.5125, 74.1079, 58.7223, 0.15", "27.4937, 74.706, 58.9726, 0.81", "27.4877, 74.8157, 59.0171, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "13.4223, 30.4772, 31.9589, 0.29", "14.5598, 31.2556, 33.0644, 0.29", "15.5991, 32.0921, 34.1548, 0.52", "16.1577, 32.6059, 34.7751, 1.25", "17.151, 33.5956, 35.9006, 0.15", "17.604, 34.0584, 36.4111, 0.15", "17.9422, 34.4151, 36.8033, 0.15", "18.4428, 35.0592, 37.4293, 0.15", "18.8089, 35.5463, 37.8556, 0.81", "19.3163, 36.1768, 38.4092, 1.33", "20.1859, 37.1932, 39.3286, 0.22", "20.6795, 37.6817, 39.8079, 0.22", "21.2638, 38.1552, 40.293, 1.11", "21.7599, 38.498, 40.6618, 1.7", "22.6868, 39.1195, 41.3339, 0.22", "23.1676, 39.4276, 41.6768, 0.88", "24.0983, 39.9653, 42.2844, 0.15", "24.6303, 40.2252, 42.5895, 0.29", "25.1115, 40.4148, 42.8464, 0.29", "25.7406, 40.648, 43.1932, 0.15", "26.4517, 40.9285, 43.6286, 0.15", "27.013, 41.1805, 44.0079, 0.96", "27.693, 41.5008, 44.4967, 0.66", "28.652, 41.7992, 45.1504, 0.15", "29.3096, 41.9657, 45.5965, 0.15", "30.2033, 42.1711, 46.2324, 0.81", "31.5262, 42.4961, 47.2383, 2.14", "32.1933, 42.6757, 47.7793, 2.14", "34.1268, 43.3048, 49.4001, 0.15", "34.8146, 43.5441, 49.9636, 0.15", "35.8366, 43.8753, 50.7587, 0.29", "36.5597, 44.0886, 51.296, 1.33", "37.1768, 44.2775, 51.7555, 1.62", "38.3644, 44.719, 52.6613, 0.15", "38.7455, 44.9211, 52.9962, 0.15", "39.3385, 45.2308, 53.5366, 0.15", "39.6785, 45.4066, 53.8644, 0.15", "40.12, 45.601, 54.3075, 0.29", "40.7836, 45.833, 55.036, 0.66", "41.6746, 46.1146, 56.1548, 0.15", "42.1373, 46.302, 56.8178, 0.15", "42.4734, 46.4876, 57.3601, 0.15", "42.8395, 46.7831, 58.0406, 0.66", "43.4668, 47.4715, 59.4124, 0.22", "43.8343, 47.9795, 60.2919, 0.22", "44.1541, 48.4596, 61.057, 1.33", "44.5387, 49.0668, 61.9683, 1.92", "45.3535, 50.3805, 63.8719, 0.37", "45.7936, 51.1197, 64.9193, 0.22", "46.266, 51.9355, 66.0551, 0.22", "46.5008, 52.3234, 66.6513, 0.22", "46.674, 52.6222, 67.2225, 0.22", "46.7968, 52.8321, 67.8216, 0.22", "46.9039, 52.9575, 68.3949, 0.22", "47.0308, 53.1105, 69.0834, 0.52", "47.3094, 53.5608, 70.6979, 1.18", "47.6032, 54.0658, 72.251, 1.4", "48.1396, 54.9646, 74.7316, 0.81", "48.5477, 55.5194, 76.1835, 0.81", "49.1239, 56.1215, 77.7624, 1.7", "50.4054, 57.1671, 80.5253, 0.29", "51.1482, 57.683, 81.8481, 0.29", "51.5949, 57.972, 82.5409, 1.03", "52.5801, 58.613, 83.9822, 0.22", "53.3809, 59.1302, 85.1383, 1.11", "54.3885, 59.6708, 86.5167, 0.29", "55.0759, 59.9491, 87.433, 0.29", "55.4361, 60.074, 87.9557, 0.52", "55.9949, 60.1897, 88.8703, 0.52", "56.1852, 60.22, 89.227, 0.52", "56.4842, 60.2269, 89.7748, 0.52", "57.0933, 60.1292, 90.6195, 0.52", "57.6633, 60.0603, 91.1143, 0.52", "58.7973, 60.027, 91.8907, 0.22", "59.8281, 60.1124, 92.5035, 0.15", "60.2235, 60.2215, 92.7689, 0.15", "60.8978, 60.5405, 93.2596, 0.81", "62.0318, 61.2708, 94.1488, 0.29", "62.8471, 61.9216, 94.8466, 0.81", "63.4755, 62.5616, 95.4363, 1.7", "64.9085, 64.282, 96.9219, 0.22", "65.5906, 65.2706, 97.6884, 0.44", "65.8544, 65.8358, 98.0533, 0.15", "66.1052, 66.6326, 98.4703, 0.88", "66.4569, 68.2862, 99.1642, 0.22", "66.6001, 69.0918, 99.448, 0.88", "66.7096, 69.7473, 99.6388, 1.47", "67.1505, 72.2885, 100.383, 0.22", "67.2669, 72.8517, 100.546, 0.22", "67.4963, 73.6116, 100.776, 0.37", "68.2036, 75.2174, 101.341, 0.22", "68.5616, 75.8652, 101.614, 0.22", "68.9639, 76.4646, 101.94, 0.96", "69.3689, 76.9304, 102.253, 1.55", "70.7021, 78.2769, 103.256, 0.15", "71.6826, 79.135, 103.949, 1.25", "72.5877, 79.8845, 104.588, 1.25", "73.6492, 80.6948, 105.312, 0.74", "74.912, 81.5371, 106.143, 0.15", "75.7631, 82.0413, 106.689, 0.29", "76.3431, 82.3328, 107.025, 0.29", "77.3333, 82.7682, 107.451, 0.29", "78.326, 83.1874, 107.771, 0.81", "79.733, 83.8537, 108.153, 0.15", "80.5024, 84.2815, 108.372, 1.11", "80.8929, 84.5289, 108.488, 1.77", "82.945, 85.8903, 109.081, 0.22", "83.6753, 86.3629, 109.253, 0.22", "84.5781, 86.9895, 109.434, 0.22", "85.3728, 87.5559, 109.538, 0.22", "85.7909, 87.8732, 109.586, 0.44", "86.612, 88.54, 109.679, 0.44", "87.6662, 89.4278, 109.797, 1.55", "88.808, 90.3054, 109.898, 0.66", "90.3218, 91.2665, 109.995, 0.15", "90.9326, 91.5984, 110.042, 0.15", "91.7033, 91.9693, 110.131, 0.37", "92.9217, 92.4984, 110.31, 0.15", "93.7412, 92.8269, 110.469, 0.81", "95.2782, 93.3783, 110.817, 0.22", "96.073, 93.6501, 110.998, 0.22", "96.9123, 93.9271, 111.168, 1.25", "97.3136, 94.0702, 111.242, 1.25", "98.7621, 94.6371, 111.448, 0.07", "99.6956, 95.0416, 111.541, 0.96", "101.531, 95.8968, 111.639, 0.22", "102.433, 96.3025, 111.656, 1.03", "103.338, 96.6948, 111.647, 1.77", "105.155, 97.5142, 111.606, 0.15", "106.156, 97.9738, 111.563, 0.22", "107.337, 98.5318, 111.51, 0.15", "108.201, 98.9666, 111.487, 1.03", "109.296, 99.5298, 111.475, 0.22", "110.561, 100.191, 111.486, 0.22", "111.882, 100.94, 111.529, 0.15", "112.781, 101.469, 111.562, 0.15", "113.727, 102.035, 111.608, 0.81", "114.045, 102.222, 111.624, 1.77", "115.372, 102.967, 111.628, 0.07", "116.373, 103.513, 111.561, 0.59", "118.471, 104.707, 111.262, 0.22", "118.919, 104.963, 111.177, 0.59", "119.77, 105.433, 110.981, 0.66", "121.468, 106.365, 110.541, 0.07", "122.145, 106.728, 110.323, 0.07", "122.556, 106.931, 110.154, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-15.0493, 14.6455, 52.5215, 0.15", "-16.2414, 14.9736, 53.3193, 0.15", "-17.1919, 15.2978, 53.6836, 0.15", "-18.2988, 15.7298, 53.8848, 0.07", "-18.8545, 15.9586, 53.8821, 0.07", "-20.1243, 16.4707, 53.7065, 0.07", "-21.1125, 16.8496, 53.4687, 0.07", "-21.5679, 17.03, 53.2289, 0.07", "-21.9835, 17.2132, 52.8956, 0.29", "-22.5415, 17.4825, 52.2984, 0.29", "-22.8563, 17.6358, 51.9106, 0.29", "-23.1419, 17.774, 51.5371, 0.29", "-23.4978, 17.9412, 51.0439, 0.29", "-24.1731, 18.2044, 50.1307, 0.22", "-24.6588, 18.3401, 49.5031, 0.22", "-25.4819, 18.5137, 48.5007, 0.88", "-26.1996, 18.6293, 47.6485, 0.22", "-26.532, 18.666, 47.272, 0.22", "-27.0747, 18.7008, 46.6846, 0.15", "-27.7158, 18.7278, 46.0501, 0.15", "-28.3646, 18.7538, 45.4067, 0.15", "-28.9326, 18.7889, 44.8252, 0.15", "-29.4083, 18.8448, 44.3211, 0.74", "-29.8214, 18.9128, 43.8868, 0.74", "-30.4355, 19.037, 43.2027, 0.15", "-31.159, 19.1818, 42.3273, 0.22", "-31.4629, 19.2299, 41.9237, 0.22", "-31.9265, 19.2909, 41.2088, 0.22", "-32.1087, 19.3091, 40.8812, 0.22", "-32.4192, 19.3202, 40.2606, 0.22", "-32.6808, 19.2782, 39.6043, 0.22", "-32.8213, 19.209, 39.124, 0.22", "-32.9608, 19.0911, 38.5107, 0.22", "-33.0633, 18.9851, 37.9584, 0.22", "-33.252, 18.8212, 37.1309, 0.22", "-33.551, 18.5564, 36.0139, 0.44", "-33.7546, 18.3549, 35.3376, 0.44", "-33.8294, 18.2689, 35.0967, 0.44", "-34.0253, 17.9734, 34.3745, 0.44", "-34.1605, 17.6444, 33.5815, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-15.0493, 14.6455, 52.5215, 1.03", "-15.3448, 14.8563, 52.8895, 1.03", "-16.0207, 15.4721, 53.9066, 0.07", "-16.242, 15.7103, 54.2877, 0.07", "-16.4019, 15.9435, 54.5977, 0.22", "-16.6443, 16.3773, 55.115, 0.07", "-16.8196, 16.7193, 55.4998, 0.37", "-17.0852, 17.3365, 56.1591, 0.15", "-17.2806, 17.899, 56.7271, 1.33", "-17.7143, 19.2125, 58.0417, 0.07", "-17.9659, 20.005, 58.8347, 0.07", "-18.0986, 20.4315, 59.2569, 0.66", "-18.2419, 20.902, 59.7014, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-3.5824, -54.9648, 60.8025, 0.07", "-4.3988, -55.6432, 61.1107, 0.07", "-4.91248, -56.07, 61.3046, 0.37", "-5.49164, -56.5513, 61.5233, 0.22", "-6.09038, -57.0488, 61.7493, 0.88", "-6.4881, -57.3793, 61.8994, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-3.5824, -54.9648, 60.8025, 0.07", "-3.82178, -53.7267, 60.8102, 0.07", "-3.91825, -53.2278, 60.8132, 0.44", "-4.03122, -52.6436, 60.8168, 0.15", "-4.1557, -51.9997, 60.8208, 0.74", "-4.3218, -51.1407, 60.8261, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L4_DBC_0d7219bf46_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 10.3756, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.79361, 11.6225, 1.66247, 0.96 ) }
    dend_32 { pt3dadd( 0.744034, 12.6912, 1.63031, 1.25 ) }
    dend_32 { pt3dadd( 0.674868, 14.1821, 1.58543, 1.55 ) }
    dend_32 { pt3dadd( 0.610135, 15.5775, 1.54343, 1.84 ) }
    dend_32 { pt3dadd( 0.544895, 16.9839, 1.5011, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.6529, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.82757, -9.75871, -9.10221, 1.18 ) }
    dend_25 { pt3dadd( -0.812827, -10.1339, -9.29666, 1.18 ) }
    dend_25 { pt3dadd( 0.892851, -10.9695, -9.67295, 1.03 ) }
    dend_25 { pt3dadd( 1.76733, -11.4707, -9.88492, 0.96 ) }
    dend_25 { pt3dadd( 2.52298, -11.8123, -10.0387, 0.81 ) }
    dend_25 { pt3dadd( 1.66905, -12.033, -10.0536, 0.74 ) }
    dend_25 { pt3dadd( 1.0443, -12.4631, -10.1807, 0.74 ) }
    dend_25 { pt3dadd( 0.216453, -13.0279, -10.4005, 0.96 ) }
    dend_25 { pt3dadd( -0.795242, -13.6633, -10.7037, 1.18 ) }
    dend_25 { pt3dadd( -2.25704, -14.4889, -11.1871, 0.88 ) }
    dend_25 { pt3dadd( -3.48509, -15.1172, -11.6492, 0.96 ) }
    dend_25 { pt3dadd( -4.76686, -15.718, -12.149, 1.25 ) }
    dend_25 { pt3dadd( -5.6595, -16.1191, -12.5244, 1.99 ) }
    dend_25 { pt3dadd( -6.53458, -16.5154, -12.9373, 2.95 ) }
    dend_25 { pt3dadd( -7.38458, -16.9388, -13.4243, 3.54 ) }
    dend_25 { pt3dadd( -8.10207, -17.3513, -13.9501, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.9489, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.72967, -12.9649, 1.18994, 0.81 ) }
    dend_10 { pt3dadd( -1.43587, -14.2089, 1.14108, 0.96 ) }
    dend_10 { pt3dadd( -1.09106, -15.4512, 1.09456, 1.18 ) }
    dend_10 { pt3dadd( -0.719255, -16.6542, 1.05219, 1.18 ) }
    dend_10 { pt3dadd( -0.275943, -17.9874, 1.04752, 0.81 ) }
    dend_10 { pt3dadd( 0.00813203, -18.8021, 1.07353, 1.03 ) }
    dend_10 { pt3dadd( 0.440737, -19.9436, 1.18771, 1.47 ) }
    dend_10 { pt3dadd( 0.7423, -20.7611, 1.33491, 2.06 ) }
    dend_10 { pt3dadd( 0.97833, -21.4983, 1.52414, 2.14 ) }
    dend_10 { pt3dadd( 1.2938, -22.869, 1.97084, 1.33 ) }
    dend_10 { pt3dadd( 1.47875, -24.6243, 2.63026, 0.96 ) }
    dend_10 { pt3dadd( 1.41615, -26.1872, 3.25569, 0.96 ) }
    dend_10 { pt3dadd( 1.1771, -27.304, 3.71433, 1.18 ) }
    dend_10 { pt3dadd( 0.887487, -28.1293, 4.05852, 1.99 ) }
    dend_10 { pt3dadd( 0.424434, -29.1483, 4.47672, 2.88 ) }
    dend_10 { pt3dadd( -0.188037, -30.3054, 4.92244, 3.02 ) }
    dend_10 { pt3dadd( -1.04639, -31.8606, 5.47228, 1.77 ) }
    dend_10 { pt3dadd( -2.21921, -34.1525, 6.17574, 0.81 ) }
    dend_10 { pt3dadd( -2.79814, -35.4883, 6.53826, 0.81 ) }
    dend_10 { pt3dadd( -3.11121, -36.4384, 6.76123, 0.81 ) }
    dend_10 { pt3dadd( -3.36002, -37.5927, 7.00463, 0.81 ) }
    dend_10 { pt3dadd( -3.50739, -38.851, 7.26516, 0.81 ) }
    dend_10 { pt3dadd( -3.54031, -39.9077, 7.47696, 1.03 ) }
    dend_10 { pt3dadd( -3.52166, -40.9514, 7.67371, 1.25 ) }
    dend_10 { pt3dadd( -3.43237, -42.8967, 8.02341, 0.81 ) }
    dend_10 { pt3dadd( -3.35476, -44.4473, 8.31542, 1.03 ) }
    dend_10 { pt3dadd( -3.31572, -45.6852, 8.57301, 1.62 ) }
    dend_10 { pt3dadd( -3.33173, -46.7064, 8.81464, 2.73 ) }
    dend_10 { pt3dadd( -3.43441, -48.1463, 9.19459, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.49085, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.37216, 6.97278, 5.5102, 0.44 ) }
    dend_1 { pt3dadd( 8.21085, 7.49637, 5.58768, 0.44 ) }
    dend_1 { pt3dadd( 8.91218, 7.95686, 5.84235, 0.44 ) }
    dend_1 { pt3dadd( 9.66337, 8.44786, 6.26059, 0.37 ) }
    dend_1 { pt3dadd( 10.2242, 8.79658, 6.63737, 1.03 ) }
    dend_1 { pt3dadd( 11.1053, 9.31661, 7.31296, 1.33 ) }
    dend_1 { pt3dadd( 12.0359, 9.84322, 8.24028, 1.47 ) }
    dend_1 { pt3dadd( 12.6742, 10.1732, 9.00913, 1.25 ) }
    dend_1 { pt3dadd( 13.3691, 10.4443, 9.95794, 0.29 ) }
    dend_1 { pt3dadd( 13.8164, 10.526, 10.6153, 0.22 ) }
    dend_1 { pt3dadd( 14.1611, 10.5159, 11.0952, 0.22 ) }
    dend_1 { pt3dadd( 14.3812, 10.4374, 11.3468, 0.22 ) }
    dend_1 { pt3dadd( 14.6437, 10.3128, 11.6154, 0.22 ) }
    dend_1 { pt3dadd( 15.053, 10.1283, 12.0145, 1.03 ) }
    dend_1 { pt3dadd( 15.9218, 9.80352, 12.8873, 2.21 ) }
    dend_1 { pt3dadd( 16.4031, 9.72242, 13.3782, 3.02 ) }
    dend_1 { pt3dadd( 17.9245, 9.87582, 14.9649, 0.29 ) }
    dend_1 { pt3dadd( 18.6244, 10.158, 15.736, 0.29 ) }
    dend_1 { pt3dadd( 19.0182, 10.4296, 16.1831, 0.44 ) }
    dend_1 { pt3dadd( 19.4013, 10.8006, 16.6374, 0.66 ) }
    dend_1 { pt3dadd( 19.9916, 11.5394, 17.3619, 1.11 ) }
    dend_1 { pt3dadd( 20.5329, 12.308, 18.0557, 0.52 ) }
    dend_1 { pt3dadd( 20.9636, 12.9796, 18.5664, 0.22 ) }
    dend_1 { pt3dadd( 21.2394, 13.2781, 18.8488, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 21.5101, 13.3735, 19.1023, 0.22 ) }
    dend_1 { pt3dadd( 21.774, 13.2688, 19.3283, 0.22 ) }
    dend_1 { pt3dadd( 22.3785, 12.8696, 19.8189, 0.66 ) }
    dend_1 { pt3dadd( 22.9897, 12.4299, 20.2884, 1.7 ) }
    dend_1 { pt3dadd( 23.5959, 11.9958, 20.7713, 2.21 ) }
    dend_1 { pt3dadd( 24.1682, 11.6321, 21.2718, 1.7 ) }
    dend_1 { pt3dadd( 24.9565, 11.2879, 22.0744, 0.29 ) }
    dend_1 { pt3dadd( 25.6814, 11.1822, 22.9867, 0.22 ) }
    dend_1 { pt3dadd( 25.9763, 11.266, 23.4646, 0.22 ) }
    dend_1 { pt3dadd( 26.2706, 11.567, 24.2134, 0.22 ) }
    dend_1 { pt3dadd( 26.4328, 12.0092, 25.0336, 0.96 ) }
    dend_1 { pt3dadd( 26.5091, 12.803, 26.3205, 0.74 ) }
    dend_1 { pt3dadd( 26.4678, 13.3687, 27.2164, 0.74 ) }
    dend_1 { pt3dadd( 26.4082, 13.6817, 27.7494, 0.74 ) }
    dend_1 { pt3dadd( 26.3461, 14.1029, 28.6255, 0.74 ) }
    dend_1 { pt3dadd( 26.372, 14.3428, 29.2049, 0.74 ) }
    dend_1 { pt3dadd( 26.4332, 14.402, 29.4079, 0.74 ) }
    dend_1 { pt3dadd( 26.875, 14.5263, 30.0657, 0.74 ) }
    dend_1 { pt3dadd( 27.3392, 14.6215, 30.5901, 1.18 ) }
    dend_1 { pt3dadd( 28.1558, 14.7688, 31.4331, 0.44 ) }
    dend_1 { pt3dadd( 28.9, 14.9061, 32.1224, 1.25 ) }
    dend_1 { pt3dadd( 29.9326, 15.1231, 33.0201, 2.73 ) }
    dend_1 { pt3dadd( 31.0359, 15.395, 33.9624, 3.54 ) }
    dend_1 { pt3dadd( 31.6539, 15.5715, 34.4706, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 7.1161, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.03187, 7.60741, 5.70355, 0.74 ) }
    dend_0 { pt3dadd( -5.65248, 8.31359, 6.05746, 0.22 ) }
    dend_0 { pt3dadd( -6.06947, 8.74296, 6.31563, 0.22 ) }
    dend_0 { pt3dadd( -6.62505, 9.26567, 6.65107, 0.44 ) }
    dend_0 { pt3dadd( -7.09023, 9.65972, 6.91615, 0.44 ) }
    dend_0 { pt3dadd( -7.70399, 10.1012, 7.24574, 0.22 ) }
    dend_0 { pt3dadd( -8.3632, 10.4566, 7.58904, 0.22 ) }
    dend_0 { pt3dadd( -8.70462, 10.5966, 7.75391, 0.22 ) }
    dend_0 { pt3dadd( -9.18573, 10.7551, 7.9651, 0.96 ) }
    dend_0 { pt3dadd( -9.94385, 10.9544, 8.29468, 1.47 ) }
    dend_0 { pt3dadd( -11.3191, 11.2598, 8.946, 0.15 ) }
    dend_0 { pt3dadd( -11.9322, 11.3943, 9.22515, 0.15 ) }
    dend_0 { pt3dadd( -12.3606, 11.5136, 9.39106, 0.15 ) }
    dend_0 { pt3dadd( -12.9958, 11.7085, 9.61595, 0.88 ) }
    dend_0 { pt3dadd( -14.1187, 12.078, 10.0013, 0.37 ) }
    dend_0 { pt3dadd( -15.3185, 12.502, 10.4082, 1.55 ) }
    dend_0 { pt3dadd( -16.2773, 12.8731, 10.7327, 2.95 ) }
    dend_0 { pt3dadd( -18.7225, 13.873, 11.5496, 0.07 ) }
    dend_0 { pt3dadd( -19.1787, 14.0587, 11.6977, 0.88 ) }
    dend_0 { pt3dadd( -20.1212, 14.4443, 11.9748, 0.07 ) }
    dend_0 { pt3dadd( -20.9936, 14.8089, 12.167, 0.22 ) }
    dend_0 { pt3dadd( -21.5924, 15.0611, 12.2739, 0.22 ) }
    dend_0 { pt3dadd( -22.923, 15.5977, 12.4894, 0.15 ) }
    dend_0 { pt3dadd( -23.3369, 15.7471, 12.5482, 0.96 ) }
    dend_0 { pt3dadd( -23.9283, 15.9513, 12.6009, 1.84 ) }
    dend_0 { pt3dadd( -26.0289, 16.6315, 12.6572, 0.15 ) }
    dend_0 { pt3dadd( -26.4952, 16.7607, 12.6497, 0.66 ) }
    dend_0 { pt3dadd( -27.2355, 16.9369, 12.6213, 1.18 ) }
    dend_0 { pt3dadd( -29.0394, 17.3041, 12.5239, 0.15 ) }
    dend_0 { pt3dadd( -29.7114, 17.4152, 12.4724, 1.33 ) }
    dend_0 { pt3dadd( -30.6115, 17.5292, 12.3901, 2.51 ) }
    dend_0 { pt3dadd( -33.1556, 17.7486, 12.1188, 0.15 ) }
    dend_0 { pt3dadd( -33.5654, 17.7749, 12.0567, 0.52 ) }
    dend_0 { pt3dadd( -34.3104, 17.8058, 11.9063, 0.81 ) }
    dend_0 { pt3dadd( -35.4697, 17.8352, 11.6085, 0.15 ) }
    dend_0 { pt3dadd( -36.0558, 17.8464, 11.449, 0.15 ) }
    dend_0 { pt3dadd( -36.5004, 17.8583, 11.3149, 0.66 ) }
    dend_0 { pt3dadd( -37.851, 17.9202, 10.8627, 1.84 ) }
    dend_0 { pt3dadd( -39.18, 18.0249, 10.4413, 0.22 ) }
    dend_0 { pt3dadd( -39.8583, 18.098, 10.2489, 0.37 ) }
    dend_0 { pt3dadd( -40.1526, 18.1377, 10.1755, 0.88 ) }
    dend_0 { pt3dadd( -41.263, 18.3006, 9.95897, 0.15 ) }
    dend_0 { pt3dadd( -41.875, 18.4034, 9.87041, 0.15 ) }
    dend_0 { pt3dadd( -42.5499, 18.5317, 9.81813, 0.74 ) }
    dend_0 { pt3dadd( -44.5671, 18.934, 9.80724, 0.07 ) }
    dend_0 { pt3dadd( -44.9487, 19.0158, 9.82342, 0.52 ) }
    dend_0 { pt3dadd( -46.259, 19.3285, 9.93752, 0.15 ) }
    dend_0 { pt3dadd( -46.8807, 19.4911, 10.0216, 0.96 ) }
    dend_0 { pt3dadd( -47.6606, 19.7079, 10.1542, 1.92 ) }
    dend_0 { pt3dadd( -49.3387, 20.2573, 10.4904, 0.15 ) }
    dend_0 { pt3dadd( -50.0338, 20.5276, 10.6441, 0.22 ) }
    dend_0 { pt3dadd( -50.8544, 20.8789, 10.811, 0.07 ) }
    dend_0 { pt3dadd( -51.3893, 21.1481, 10.9068, 1.03 ) }
    dend_0 { pt3dadd( -51.9397, 21.4497, 10.9967, 1.77 ) }
    dend_0 { pt3dadd( -53.589, 22.4225, 11.2269, 0.07 ) }
    dend_0 { pt3dadd( -54.2568, 22.8491, 11.308, 0.07 ) }
    dend_0 { pt3dadd( -54.7175, 23.1395, 11.3732, 0.74 ) }
    dend_0 { pt3dadd( -55.9708, 23.9346, 11.5627, 0.07 ) }
    dend_0 { pt3dadd( -56.3581, 24.1769, 11.6223, 0.52 ) }
    dend_0 { pt3dadd( -57.4246, 24.7578, 11.7977, 0.07 ) }
    dend_0 { pt3dadd( -58.0909, 25.0426, 11.9135, 0.22 ) }
    dend_0 { pt3dadd( -58.8333, 25.2715, 12.0328, 0.15 ) }
    dend_0 { pt3dadd( -59.1447, 25.3245, 12.0731, 0.96 ) }
    dend_0 { pt3dadd( -59.9094, 25.3567, 12.1446, 1.92 ) }
    dend_0 { pt3dadd( -61.4757, 25.3145, 12.2433, 0.07 ) }
    dend_0 { pt3dadd( -62.2408, 25.2464, 12.2561, 0.29 ) }
    dend_0 { pt3dadd( -63.0738, 25.1818, 12.2305, 0.07 ) }
    dend_0 { pt3dadd( -63.8775, 25.1701, 12.1746, 0.07 ) }
    dend_0 { pt3dadd( -64.19, 25.1858, 12.1507, 0.07 ) }
    dend_0 { pt3dadd( -64.4847, 25.216, 12.1229, 0.44 ) }
    dend_0 { pt3dadd( -65.1016, 25.3181, 12.0487, 0.74 ) }
    dend_0 { pt3dadd( -66.6195, 25.5917, 11.8565, 0.07 ) }
    dend_0 { pt3dadd( -67.8244, 25.8109, 11.7097, 0.15 ) }
    dend_0 { pt3dadd( -68.6616, 25.9583, 11.6084, 0.96 ) }
    dend_0 { pt3dadd( -69.7, 26.0935, 11.4882, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -70.5401, 26.1631, 11.3914, 0.59 ) }
    dend_0 { pt3dadd( -71.3526, 26.1779, 11.2998, 0.15 ) }
    dend_0 { pt3dadd( -71.7404, 26.1565, 11.2552, 0.74 ) }
    dend_0 { pt3dadd( -72.3288, 26.094, 11.1842, 1.18 ) }
    dend_0 { pt3dadd( -74.1621, 25.863, 10.8929, 0.15 ) }
    dend_0 { pt3dadd( -74.7663, 25.7903, 10.7823, 0.81 ) }
    dend_0 { pt3dadd( -75.6762, 25.6865, 10.5896, 0.15 ) }
    dend_0 { pt3dadd( -76.2086, 25.6292, 10.4645, 0.22 ) }
    dend_0 { pt3dadd( -77.5788, 25.4856, 10.1158, 0.07 ) }
    dend_0 { pt3dadd( -78.4266, 25.3975, 9.8855, 1.03 ) }
    dend_0 { pt3dadd( -79.018, 25.3471, 9.71379, 1.84 ) }
    dend_0 { pt3dadd( -80.9799, 25.2475, 9.15602, 0.07 ) }
    dend_0 { pt3dadd( -81.3713, 25.2483, 9.0487, 0.22 ) }
    dend_0 { pt3dadd( -83.2081, 25.3506, 8.59087, 0.07 ) }
    dend_0 { pt3dadd( -83.4453, 25.3723, 8.53871, 0.66 ) }
    dend_0 { pt3dadd( -83.9769, 25.4294, 8.45256, 1.25 ) }
    dend_0 { pt3dadd( -84.8739, 25.5446, 8.32593, 0.15 ) }
    dend_0 { pt3dadd( -85.5967, 25.6716, 8.24316, 0.74 ) }
    dend_0 { pt3dadd( -86.7876, 25.8693, 8.14978, 0.07 ) }
    dend_0 { pt3dadd( -87.5913, 25.995, 8.11412, 0.07 ) }
    dend_0 { pt3dadd( -88.419, 26.1093, 8.08791, 0.07 ) }
    dend_0 { pt3dadd( -88.5839, 26.1333, 8.08949, 0.07 ) }
    dend_0 { pt3dadd( -89.2603, 26.2513, 8.12372, 0.74 ) }
    dend_0 { pt3dadd( -90.5637, 26.5022, 8.27295, 0.07 ) }
    dend_0 { pt3dadd( -90.9272, 26.5906, 8.33818, 1.11 ) }
    dend_0 { pt3dadd( -91.6984, 26.7966, 8.51645, 1.62 ) }
    dend_0 { pt3dadd( -93.1076, 27.0956, 8.88754, 0.07 ) }
    dend_0 { pt3dadd( -93.8458, 27.2195, 9.09468, 0.81 ) }
    dend_0 { pt3dadd( -95.0226, 27.3646, 9.43606, 0.15 ) }
    dend_0 { pt3dadd( -95.9846, 27.4304, 9.73332, 0.15 ) }
    dend_0 { pt3dadd( -96.996, 27.4421, 10.0531, 1.11 ) }
    dend_0 { pt3dadd( -99.2825, 27.3331, 10.7722, 0.15 ) }
    dend_0 { pt3dadd( -99.8097, 27.2813, 10.9295, 1.03 ) }
    dend_0 { pt3dadd( -100.774, 27.1614, 11.2052, 1.84 ) }
    dend_0 { pt3dadd( -102.423, 26.9199, 11.6282, 0.22 ) }
    dend_0 { pt3dadd( -102.72, 26.8687, 11.7034, 0.22 ) }
    dend_0 { pt3dadd( -103.325, 26.7624, 11.8588, 0.07 ) }
    dend_0 { pt3dadd( -103.769, 26.6873, 11.9807, 0.59 ) }
    dend_0 { pt3dadd( -104.699, 26.5212, 12.258, 0.07 ) }
    dend_0 { pt3dadd( -105.308, 26.4, 12.4446, 0.29 ) }
    dend_0 { pt3dadd( -105.923, 26.2505, 12.6284, 0.07 ) }
    dend_0 { pt3dadd( -106.631, 26.0451, 12.8389, 0.37 ) }
    dend_0 { pt3dadd( -107.64, 25.712, 13.1351, 0.07 ) }
    dend_0 { pt3dadd( -108.372, 25.4343, 13.346, 0.66 ) }
    dend_0 { pt3dadd( -109.187, 25.0312, 13.5404, 0.07 ) }
    dend_0 { pt3dadd( -109.929, 24.59, 13.6876, 0.96 ) }
    dend_0 { pt3dadd( -111.203, 23.6709, 13.8707, 0.07 ) }
    dend_0 { pt3dadd( -111.892, 23.037, 13.9119, 0.07 ) }
    dend_0 { pt3dadd( -112.346, 22.4981, 13.8865, 1.03 ) }
    dend_0 { pt3dadd( -113.559, 20.5373, 13.6678, 0.15 ) }
    dend_0 { pt3dadd( -113.874, 19.8901, 13.5619, 0.15 ) }
    dend_0 { pt3dadd( -114.206, 19.0445, 13.3921, 1.11 ) }
    dend_0 { pt3dadd( -114.651, 17.6297, 13.0758, 0.15 ) }
    dend_0 { pt3dadd( -114.987, 16.417, 12.7886, 1.84 ) }
    dend_0 { pt3dadd( -115.613, 14.0472, 12.2148, 0.15 ) }
    dend_0 { pt3dadd( -115.747, 13.5252, 12.0905, 0.59 ) }
    dend_0 { pt3dadd( -115.977, 12.7147, 11.9219, 1.03 ) }
    dend_0 { pt3dadd( -116.561, 10.9422, 11.6422, 0.15 ) }
    dend_0 { pt3dadd( -116.788, 10.3593, 11.6087, 0.52 ) }
    dend_0 { pt3dadd( -117.273, 9.25428, 11.6368, 0.15 ) }
    dend_0 { pt3dadd( -117.574, 8.59802, 11.7155, 0.66 ) }
    dend_0 { pt3dadd( -118.02, 7.57566, 11.9264, 0.15 ) }
    dend_0 { pt3dadd( -118.479, 6.39819, 12.2554, 1.62 ) }
    dend_0 { pt3dadd( -119.021, 4.67652, 12.8414, 0.07 ) }
    dend_0 { pt3dadd( -119.172, 4.03187, 13.0634, 0.29 ) }
    dend_0 { pt3dadd( -119.354, 2.84554, 13.4355, 0.07 ) }
    dend_0 { pt3dadd( -119.402, 2.1991, 13.5961, 0.96 ) }
    dend_0 { pt3dadd( -119.421, 1.17337, 13.714, 2.21 ) }
    dend_0 { pt3dadd( -119.41, 0.284831, 13.7162, 1.33 ) }
    dend_0 { pt3dadd( -119.411, -0.952986, 13.5918, 0.07 ) }
    dend_0 { pt3dadd( -119.451, -2.04954, 13.4123, 0.07 ) }
    dend_0 { pt3dadd( -119.516, -2.87651, 13.2305, 1.03 ) }
    dend_0 { pt3dadd( -119.703, -4.83829, 12.7488, 0.07 ) }
    dend_0 { pt3dadd( -119.782, -5.46619, 12.5804, 0.88 ) }
    dend_0 { pt3dadd( -120.011, -6.9802, 12.1546, 0.07 ) }
    dend_0 { pt3dadd( -120.096, -7.5304, 11.9957, 0.66 ) }
    dend_0 { pt3dadd( -120.155, -7.90671, 11.8931, 1.25 ) }
    dend_0 { pt3dadd( -120.351, -9.08099, 11.5966, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.615567 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.615567 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.615567 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.544895, 16.9839, 1.5011, 0.37 ) }
    dend_38 { pt3dadd( 1.20631, 17.6245, 1.7507, 0.37 ) }
    dend_38 { pt3dadd( 1.41577, 17.8035, 1.83476, 0.37 ) }
    dend_38 { pt3dadd( 1.81311, 18.1481, 2.02791, 0.37 ) }
    dend_38 { pt3dadd( 2.3007, 18.6582, 2.33024, 0.22 ) }
    dend_38 { pt3dadd( 2.43138, 18.8513, 2.46159, 0.22 ) }
    dend_38 { pt3dadd( 2.48576, 19.0784, 2.66425, 0.22 ) }
    dend_38 { pt3dadd( 2.44387, 19.2131, 2.83911, 0.22 ) }
    dend_38 { pt3dadd( 2.33539, 19.4275, 3.11657, 0.22 ) }
    dend_38 { pt3dadd( 2.14138, 19.7849, 3.58929, 0.22 ) }
    dend_38 { pt3dadd( 2.02245, 20.0149, 3.89818, 0.22 ) }
    dend_38 { pt3dadd( 1.85058, 20.44, 4.43698, 0.66 ) }
    dend_38 { pt3dadd( 1.72355, 20.9442, 5.03802, 1.03 ) }
    dend_38 { pt3dadd( 1.63428, 21.5822, 5.80383, 0.22 ) }
    dend_38 { pt3dadd( 1.62037, 22.0237, 6.36725, 0.22 ) }
    dend_38 { pt3dadd( 1.65556, 22.3339, 6.80245, 0.88 ) }
    dend_38 { pt3dadd( 1.73466, 22.6521, 7.29379, 1.47 ) }
    dend_38 { pt3dadd( 1.93799, 23.1493, 8.16043, 0.15 ) }
    dend_38 { pt3dadd( 2.13927, 23.5465, 8.86096, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( 2.35208, 23.9551, 9.5449, 0.15 ) }
    dend_38 { pt3dadd( 2.49906, 24.3526, 10.1503, 0.15 ) }
    dend_38 { pt3dadd( 2.58269, 24.7491, 10.742, 0.15 ) }
    dend_38 { pt3dadd( 2.57693, 25.2213, 11.4391, 0.15 ) }
    dend_38 { pt3dadd( 2.37204, 25.9478, 12.4288, 0.96 ) }
    dend_38 { pt3dadd( 2.18547, 26.358, 12.9472, 2.06 ) }
    dend_38 { pt3dadd( 1.76935, 27.0162, 13.7078, 0.22 ) }
    dend_38 { pt3dadd( 1.58242, 27.2857, 13.9917, 0.22 ) }
    dend_38 { pt3dadd( 1.39054, 27.5292, 14.254, 0.22 ) }
    dend_38 { pt3dadd( 1.09492, 27.8604, 14.6721, 0.22 ) }
    dend_38 { pt3dadd( 0.782586, 28.1874, 15.2204, 0.22 ) }
    dend_38 { pt3dadd( 0.591519, 28.3923, 15.5954, 1.33 ) }
    dend_38 { pt3dadd( 0.362919, 28.7999, 16.2507, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.544895, 16.9839, 1.5011, 1.25 ) }
    dend_33 { pt3dadd( 0.10225, 18.0285, 1.43944, 1.25 ) }
    dend_33 { pt3dadd( -0.424658, 19.3795, 1.44728, 0.81 ) }
    dend_33 { pt3dadd( -0.800471, 20.534, 1.55174, 0.81 ) }
    dend_33 { pt3dadd( -1.08209, 21.6484, 1.72647, 1.11 ) }
    dend_33 { pt3dadd( -1.25821, 22.6851, 1.94473, 1.4 ) }
    dend_33 { pt3dadd( -1.31714, 23.5717, 2.17129, 0.59 ) }
    dend_33 { pt3dadd( -1.21541, 24.4176, 2.51277, 0.59 ) }
    dend_33 { pt3dadd( -0.876013, 25.414, 3.04483, 0.52 ) }
    dend_33 { pt3dadd( -0.561058, 26.0118, 3.40696, 0.59 ) }
    dend_33 { pt3dadd( -0.186595, 26.614, 3.79669, 0.59 ) }
    dend_33 { pt3dadd( 0.307825, 27.4059, 4.32508, 0.44 ) }
    dend_33 { pt3dadd( 0.565926, 27.8953, 4.64731, 0.44 ) }
    dend_33 { pt3dadd( 0.634298, 28.1739, 4.80117, 0.44 ) }
    dend_33 { pt3dadd( 0.595136, 28.6729, 5.05085, 0.52 ) }
    dend_33 { pt3dadd( 0.393991, 29.4276, 5.46176, 0.66 ) }
    dend_33 { pt3dadd( 0.167383, 30.0491, 5.8245, 0.29 ) }
    dend_33 { pt3dadd( -0.0139373, 30.5061, 6.11893, 0.29 ) }
    dend_33 { pt3dadd( -0.207546, 31.094, 6.49946, 0.37 ) }
    dend_33 { pt3dadd( -0.4101, 31.8565, 6.97919, 0.88 ) }
    dend_33 { pt3dadd( -0.59776, 32.6449, 7.46643, 1.62 ) }
    dend_33 { pt3dadd( -0.744436, 33.3734, 7.90333, 2.43 ) }
    dend_33 { pt3dadd( -0.876564, 34.1992, 8.38552, 2.43 ) }
    dend_33 { pt3dadd( -1.04199, 35.5774, 9.16268, 0.22 ) }
    dend_33 { pt3dadd( -1.09234, 36.2273, 9.51881, 0.52 ) }
    dend_33 { pt3dadd( -1.12376, 36.8836, 9.84507, 0.22 ) }
    dend_33 { pt3dadd( -1.13131, 37.2319, 9.98915, 0.22 ) }
    dend_33 { pt3dadd( -1.1306, 37.6789, 10.1416, 0.22 ) }
    dend_33 { pt3dadd( -1.12479, 38.2229, 10.2718, 0.22 ) }
    dend_33 { pt3dadd( -1.12442, 38.5863, 10.3364, 0.22 ) }
    dend_33 { pt3dadd( -1.12919, 38.8248, 10.3692, 0.22 ) }
    dend_33 { pt3dadd( -1.1875, 39.6756, 10.4331, 0.37 ) }
    dend_33 { pt3dadd( -1.27306, 40.3992, 10.4478, 0.37 ) }
    dend_33 { pt3dadd( -1.38158, 41.09, 10.4282, 0.52 ) }
    dend_33 { pt3dadd( -1.49808, 41.7888, 10.387, 0.96 ) }
    dend_33 { pt3dadd( -1.6237, 42.6253, 10.3044, 0.96 ) }
    dend_33 { pt3dadd( -1.77234, 43.9034, 10.1056, 0.44 ) }
    dend_33 { pt3dadd( -1.80659, 44.736, 9.92395, 0.44 ) }
    dend_33 { pt3dadd( -1.81757, 45.6001, 9.69936, 1.47 ) }
    dend_33 { pt3dadd( -1.81917, 46.5016, 9.43762, 2.8 ) }
    dend_33 { pt3dadd( -1.82054, 47.3341, 9.16952, 3.61 ) }
    dend_33 { pt3dadd( -1.8254, 48.1976, 8.85756, 3.02 ) }
    dend_33 { pt3dadd( -1.8365, 50.2184, 8.04003, 0.22 ) }
    dend_33 { pt3dadd( -1.84928, 50.8356, 7.77001, 0.29 ) }
    dend_33 { pt3dadd( -1.85854, 51.1713, 7.61999, 0.29 ) }
    dend_33 { pt3dadd( -1.88995, 51.8263, 7.31353, 0.22 ) }
    dend_33 { pt3dadd( -1.94711, 52.612, 6.94268, 0.52 ) }
    dend_33 { pt3dadd( -2.01281, 53.2661, 6.6298, 1.33 ) }
    dend_33 { pt3dadd( -2.12016, 54.0857, 6.17985, 2.43 ) }
    dend_33 { pt3dadd( -2.14399, 54.8446, 5.75345, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.10207, -17.3513, -13.9501, 0.44 ) }
    dend_27 { pt3dadd( -11.3192, -19.0519, -16.314, 0.44 ) }
    dend_27 { pt3dadd( -11.4926, -19.7767, -16.8678, 0.44 ) }
    dend_27 { pt3dadd( -11.6017, -20.5527, -17.4677, 0.44 ) }
    dend_27 { pt3dadd( -11.7771, -21.376, -18.1422, 0.44 ) }
    dend_27 { pt3dadd( -12.0738, -22.3113, -18.9849, 0.59 ) }
    dend_27 { pt3dadd( -12.5864, -23.5639, -20.2699, 0.74 ) }
    dend_27 { pt3dadd( -12.8935, -24.4343, -21.2586, 1.11 ) }
    dend_27 { pt3dadd( -13.311, -25.3833, -22.5314, 1.47 ) }
    dend_27 { pt3dadd( -13.8065, -26.2161, -23.9071, 1.47 ) }
    dend_27 { pt3dadd( -14.6268, -27.1636, -25.9395, 0.59 ) }
    dend_27 { pt3dadd( -15.3175, -27.6249, -27.4881, 0.52 ) }
    dend_27 { pt3dadd( -15.8417, -27.7361, -28.5763, 0.52 ) }
    dend_27 { pt3dadd( -16.4573, -27.6734, -29.7103, 0.44 ) }
    dend_27 { pt3dadd( -17.18, -27.4565, -30.7597, 0.44 ) }
    dend_27 { pt3dadd( -17.5829, -27.3094, -31.2388, 0.44 ) }
    dend_27 { pt3dadd( -18.6445, -26.9631, -32.2391, 0.96 ) }
    dend_27 { pt3dadd( -19.6774, -26.6784, -33.0966, 0.96 ) }
    dend_27 { pt3dadd( -20.9219, -26.4165, -34.034, 1.4 ) }
    dend_27 { pt3dadd( -22.5488, -26.1741, -35.1749, 2.36 ) }
    dend_27 { pt3dadd( -23.8966, -26.0479, -36.0694, 3.32 ) }
    dend_27 { pt3dadd( -25.4761, -25.934, -37.1413, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.10207, -17.3513, -13.9501, 0.29 ) }
    dend_26 { pt3dadd( -8.01647, -18.2017, -14.1869, 0.29 ) }
    dend_26 { pt3dadd( -7.97066, -18.4939, -14.2717, 0.29 ) }
    dend_26 { pt3dadd( -7.90841, -18.877, -14.3915, 0.29 ) }
    dend_26 { pt3dadd( -7.86082, -19.1963, -14.5076, 0.81 ) }
    dend_26 { pt3dadd( -7.81391, -19.5393, -14.6483, 1.11 ) }
    dend_26 { pt3dadd( -7.75701, -20.0327, -14.8846, 0.22 ) }
    dend_26 { pt3dadd( -7.6939, -20.3954, -15.1021, 0.22 ) }
    dend_26 { pt3dadd( -7.67558, -20.6019, -15.2579, 0.22 ) }
    dend_26 { pt3dadd( -7.67442, -20.8815, -15.5073, 0.22 ) }
    dend_26 { pt3dadd( -7.67375, -21.0355, -15.6114, 0.37 ) }
    dend_26 { pt3dadd( -7.66455, -21.3322, -15.7804, 0.37 ) }
    dend_26 { pt3dadd( -7.64963, -21.5741, -15.8924, 0.81 ) }
    dend_26 { pt3dadd( -7.6202, -21.9245, -16.0197, 1.7 ) }
    dend_26 { pt3dadd( -7.58017, -22.4148, -16.1839, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -7.49189, -23.4825, -16.5073, 0.29 ) }
    dend_26 { pt3dadd( -7.46029, -23.8454, -16.601, 0.96 ) }
    dend_26 { pt3dadd( -7.43625, -24.0887, -16.6524, 0.96 ) }
    dend_26 { pt3dadd( -7.36645, -24.6543, -16.7528, 0.15 ) }
    dend_26 { pt3dadd( -7.30757, -25.0153, -16.7935, 0.15 ) }
    dend_26 { pt3dadd( -7.26137, -25.2584, -16.8104, 0.59 ) }
    dend_26 { pt3dadd( -7.14654, -25.7269, -16.8185, 0.29 ) }
    dend_26 { pt3dadd( -7.06248, -26.0263, -16.8063, 1.4 ) }
    dend_26 { pt3dadd( -6.92611, -26.4746, -16.7723, 2.73 ) }
    dend_26 { pt3dadd( -6.5884, -27.5124, -16.6535, 0.15 ) }
    dend_26 { pt3dadd( -6.53543, -27.671, -16.6323, 0.74 ) }
    dend_26 { pt3dadd( -6.43701, -27.9591, -16.6, 0.74 ) }
    dend_26 { pt3dadd( -6.27383, -28.4026, -16.5604, 0.15 ) }
    dend_26 { pt3dadd( -6.12183, -28.8032, -16.5301, 0.15 ) }
    dend_26 { pt3dadd( -5.99357, -29.1521, -16.5101, 0.15 ) }
    dend_26 { pt3dadd( -5.88143, -29.4639, -16.5088, 1.25 ) }
    dend_26 { pt3dadd( -5.72908, -29.9314, -16.5352, 0.22 ) }
    dend_26 { pt3dadd( -5.64929, -30.2504, -16.5789, 0.22 ) }
    dend_26 { pt3dadd( -5.62834, -30.4138, -16.6123, 0.22 ) }
    dend_26 { pt3dadd( -5.63327, -30.6464, -16.6621, 0.22 ) }
    dend_26 { pt3dadd( -5.68237, -31.0662, -16.7466, 0.44 ) }
    dend_26 { pt3dadd( -5.7518, -31.4591, -16.8184, 1.62 ) }
    dend_26 { pt3dadd( -5.83353, -31.8794, -16.8889, 3.02 ) }
    dend_26 { pt3dadd( -5.92684, -32.388, -16.9677, 3.02 ) }
    dend_26 { pt3dadd( -6.1095, -33.5292, -17.1406, 0.29 ) }
    dend_26 { pt3dadd( -6.16555, -33.9494, -17.1986, 0.81 ) }
    dend_26 { pt3dadd( -6.20464, -34.3159, -17.2403, 1.03 ) }
    dend_26 { pt3dadd( -6.23378, -34.6981, -17.2795, 0.37 ) }
    dend_26 { pt3dadd( -6.25018, -34.9945, -17.3003, 1.18 ) }
    dend_26 { pt3dadd( -6.26241, -35.5942, -17.3276, 0.22 ) }
    dend_26 { pt3dadd( -6.25194, -35.8242, -17.3296, 0.74 ) }
    dend_26 { pt3dadd( -6.23203, -36.0137, -17.3214, 0.74 ) }
    dend_26 { pt3dadd( -6.19893, -36.2167, -17.299, 0.15 ) }
    dend_26 { pt3dadd( -6.10199, -36.7649, -17.2009, 0.44 ) }
    dend_26 { pt3dadd( -6.06857, -36.9021, -17.1683, 0.44 ) }
    dend_26 { pt3dadd( -5.94239, -37.324, -17.0547, 0.22 ) }
    dend_26 { pt3dadd( -5.86609, -37.5727, -16.995, 1.11 ) }
    dend_26 { pt3dadd( -5.81291, -37.7828, -16.9531, 1.62 ) }
    dend_26 { pt3dadd( -5.7395, -38.1326, -16.8949, 1.62 ) }
    dend_26 { pt3dadd( -5.62152, -38.9333, -16.8108, 0.22 ) }
    dend_26 { pt3dadd( -5.6038, -39.3347, -16.7788, 0.96 ) }
    dend_26 { pt3dadd( -5.64777, -39.7442, -16.7589, 1.18 ) }
    dend_26 { pt3dadd( -5.82129, -40.4587, -16.7546, 0.15 ) }
    dend_26 { pt3dadd( -5.89493, -40.6967, -16.759, 0.22 ) }
    dend_26 { pt3dadd( -6.12441, -41.2394, -16.7935, 0.07 ) }
    dend_26 { pt3dadd( -6.27865, -41.4721, -16.8294, 0.22 ) }
    dend_26 { pt3dadd( -6.67209, -41.9199, -16.9278, 0.07 ) }
    dend_26 { pt3dadd( -6.84413, -42.0646, -16.9735, 0.15 ) }
    dend_26 { pt3dadd( -6.97427, -46.4872, -17.7405, 0.15 ) }
    dend_26 { pt3dadd( -7.75266, -50.8496, -18.4726, 0.15 ) }
    dend_26 { pt3dadd( -7.61334, -55.3146, -18.9402, 0.15 ) }
    dend_26 { pt3dadd( -7.06586, -59.7099, -19.6484, 0.15 ) }
    dend_26 { pt3dadd( -6.42878, -63.9906, -20.8016, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.43441, -48.1463, 9.19459, 1.99 ) }
    dend_14 { pt3dadd( -3.85442, -49.8202, 9.15762, 1.99 ) }
    dend_14 { pt3dadd( -4.34849, -52.1396, 9.11867, 0.59 ) }
    dend_14 { pt3dadd( -4.58552, -53.4634, 9.10157, 0.59 ) }
    dend_14 { pt3dadd( -4.80973, -55.0511, 9.10287, 0.59 ) }
    dend_14 { pt3dadd( -4.88564, -55.829, 9.11163, 1.11 ) }
    dend_14 { pt3dadd( -4.95961, -57.2446, 9.15794, 2.58 ) }
    dend_14 { pt3dadd( -4.92154, -57.9399, 9.19679, 2.88 ) }
    dend_14 { pt3dadd( -4.84101, -58.5409, 9.24909, 2.65 ) }
    dend_14 { pt3dadd( -4.71926, -59.4618, 9.364, 1.55 ) }
    dend_14 { pt3dadd( -4.56354, -60.7567, 9.57307, 0.74 ) }
    dend_14 { pt3dadd( -4.4617, -61.9914, 9.78705, 0.44 ) }
    dend_14 { pt3dadd( -4.43147, -63.0722, 9.98117, 0.29 ) }
    dend_14 { pt3dadd( -4.45813, -63.909, 10.1388, 0.29 ) }
    dend_14 { pt3dadd( -4.54914, -64.9762, 10.3576, 0.29 ) }
    dend_14 { pt3dadd( -4.57771, -65.3141, 10.4299, 0.29 ) }
    dend_14 { pt3dadd( -4.63785, -65.9379, 10.5675, 0.44 ) }
    dend_14 { pt3dadd( -4.70981, -66.5553, 10.6941, 1.11 ) }
    dend_14 { pt3dadd( -4.79258, -67.2531, 10.8462, 2.36 ) }
    dend_14 { pt3dadd( -4.93181, -68.7047, 11.1609, 2.73 ) }
    dend_14 { pt3dadd( -5.09634, -71.4099, 11.7486, 0.44 ) }
    dend_14 { pt3dadd( -5.12109, -71.9427, 11.8754, 0.44 ) }
    dend_14 { pt3dadd( -5.16448, -72.9707, 12.1393, 0.59 ) }
    dend_14 { pt3dadd( -5.19745, -73.9596, 12.4103, 0.29 ) }
    dend_14 { pt3dadd( -5.21378, -74.5783, 12.584, 0.29 ) }
    dend_14 { pt3dadd( -5.1937, -75.155, 12.7398, 0.29 ) }
    dend_14 { pt3dadd( -5.12777, -75.7531, 12.9277, 0.29 ) }
    dend_14 { pt3dadd( -5.03176, -76.215, 13.0947, 0.88 ) }
    dend_14 { pt3dadd( -4.83901, -76.8617, 13.3546, 1.84 ) }
    dend_14 { pt3dadd( -4.61584, -77.478, 13.6147, 2.14 ) }
    dend_14 { pt3dadd( -3.94552, -79.2378, 14.4059, 0.44 ) }
    dend_14 { pt3dadd( -3.65389, -80.0258, 14.7695, 0.66 ) }
    dend_14 { pt3dadd( -3.30938, -80.9599, 15.2353, 0.29 ) }
    dend_14 { pt3dadd( -3.18189, -81.2951, 15.4289, 0.29 ) }
    dend_14 { pt3dadd( -3.05841, -81.6423, 15.67, 0.29 ) }
    dend_14 { pt3dadd( -3.00287, -81.8639, 15.8607, 0.29 ) }
    dend_14 { pt3dadd( -3.03947, -82.0994, 16.0721, 0.29 ) }
    dend_14 { pt3dadd( -3.20031, -82.6148, 16.314, 0.29 ) }
    dend_14 { pt3dadd( -3.31975, -83.0078, 16.4245, 0.29 ) }
    dend_14 { pt3dadd( -3.443, -83.4756, 16.5277, 0.29 ) }
    dend_14 { pt3dadd( -3.62494, -84.2231, 16.6675, 1.18 ) }
    dend_14 { pt3dadd( -3.78959, -84.9892, 16.8234, 2.43 ) }
    dend_14 { pt3dadd( -3.94821, -85.8778, 17.0233, 2.88 ) }
    dend_14 { pt3dadd( -4.13872, -87.2523, 17.367, 1.55 ) }
    dend_14 { pt3dadd( -4.29822, -88.9991, 17.8799, 0.52 ) }
    dend_14 { pt3dadd( -4.35395, -90.1045, 18.2645, 0.29 ) }
    dend_14 { pt3dadd( -4.37878, -90.9868, 18.6166, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -4.37992, -91.7051, 18.9341, 0.66 ) }
    dend_14 { pt3dadd( -4.36682, -92.2879, 19.2077, 0.96 ) }
    dend_14 { pt3dadd( -4.32659, -93.0547, 19.5378, 0.22 ) }
    dend_14 { pt3dadd( -4.28139, -93.7793, 19.7593, 0.22 ) }
    dend_14 { pt3dadd( -4.24173, -94.5577, 19.8791, 0.29 ) }
    dend_14 { pt3dadd( -4.20305, -95.27, 19.9129, 0.59 ) }
    dend_14 { pt3dadd( -4.15273, -96.4045, 19.9066, 1.33 ) }
    dend_14 { pt3dadd( -4.10468, -97.6818, 19.8615, 2.21 ) }
    dend_14 { pt3dadd( -4.06294, -98.6999, 19.8087, 3.24 ) }
    dend_14 { pt3dadd( -3.9569, -100.489, 19.7069, 1.77 ) }
    dend_14 { pt3dadd( -3.84987, -101.984, 19.6357, 0.44 ) }
    dend_14 { pt3dadd( -3.77362, -103.04, 19.5971, 0.37 ) }
    dend_14 { pt3dadd( -3.6996, -104.236, 19.5702, 0.37 ) }
    dend_14 { pt3dadd( -3.65931, -105.013, 19.5679, 0.88 ) }
    dend_14 { pt3dadd( -3.64933, -105.368, 19.569, 1.77 ) }
    dend_14 { pt3dadd( -3.66444, -106.504, 19.5663, 3.1 ) }
    dend_14 { pt3dadd( -3.80406, -108.264, 19.5498, 1.33 ) }
    dend_14 { pt3dadd( -3.99073, -109.469, 19.5295, 0.74 ) }
    dend_14 { pt3dadd( -4.32869, -110.877, 19.4946, 0.22 ) }
    dend_14 { pt3dadd( -4.50857, -111.451, 19.4766, 0.22 ) }
    dend_14 { pt3dadd( -4.66114, -111.865, 19.4626, 0.52 ) }
    dend_14 { pt3dadd( -5.09744, -112.848, 19.4273, 0.81 ) }
    dend_14 { pt3dadd( -5.64331, -113.911, 19.425, 0.29 ) }
    dend_14 { pt3dadd( -5.80954, -114.233, 19.433, 0.37 ) }
    dend_14 { pt3dadd( -6.16376, -114.994, 19.4664, 0.37 ) }
    dend_14 { pt3dadd( -6.50953, -115.908, 19.5856, 0.44 ) }
    dend_14 { pt3dadd( -6.83159, -116.959, 19.8054, 0.81 ) }
    dend_14 { pt3dadd( -7.12036, -118.209, 20.1521, 0.81 ) }
    dend_14 { pt3dadd( -7.29073, -119.186, 20.4691, 0.81 ) }
    dend_14 { pt3dadd( -7.50072, -120.436, 20.9093, 0.37 ) }
    dend_14 { pt3dadd( -7.76239, -121.942, 21.5083, 0.37 ) }
    dend_14 { pt3dadd( -7.88831, -122.703, 21.8553, 1.18 ) }
    dend_14 { pt3dadd( -7.97647, -123.439, 22.2429, 2.8 ) }
    dend_14 { pt3dadd( -8.00947, -124.064, 22.6127, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -3.43441, -48.1463, 9.19459, 0.66 ) }
    dend_11 { pt3dadd( -1.6172, -49.7004, 10.2548, 0.66 ) }
    dend_11 { pt3dadd( -0.446011, -50.8539, 10.9413, 0.44 ) }
    dend_11 { pt3dadd( 0.357622, -51.7775, 11.4129, 0.88 ) }
    dend_11 { pt3dadd( 0.891417, -52.4956, 11.7281, 0.44 ) }
    dend_11 { pt3dadd( 1.31682, -53.1654, 11.9701, 0.22 ) }
    dend_11 { pt3dadd( 1.71525, -53.9193, 12.1978, 0.22 ) }
    dend_11 { pt3dadd( 1.93336, -54.7191, 12.3128, 0.22 ) }
    dend_11 { pt3dadd( 2.05776, -55.4637, 12.3894, 0.22 ) }
    dend_11 { pt3dadd( 2.10754, -56.1356, 12.4666, 0.59 ) }
    dend_11 { pt3dadd( 2.13388, -57.1179, 12.6304, 1.7 ) }
    dend_11 { pt3dadd( 2.12767, -58.4113, 12.8971, 1.47 ) }
    dend_11 { pt3dadd( 2.09853, -60.6477, 13.4373, 0.44 ) }
    dend_11 { pt3dadd( 2.1128, -61.8455, 13.7565, 0.29 ) }
    dend_11 { pt3dadd( 2.12531, -62.6074, 13.9674, 0.22 ) }
    dend_11 { pt3dadd( 2.15347, -63.4654, 14.1934, 0.22 ) }
    dend_11 { pt3dadd( 2.18562, -64.0718, 14.3543, 0.96 ) }
    dend_11 { pt3dadd( 2.28543, -65.2424, 14.6366, 2.51 ) }
    dend_11 { pt3dadd( 2.45092, -66.5465, 14.945, 3.39 ) }
    dend_11 { pt3dadd( 2.66126, -67.7798, 15.21, 3.1 ) }
    dend_11 { pt3dadd( 3.03638, -69.4303, 15.5806, 1.03 ) }
    dend_11 { pt3dadd( 3.44984, -71.0101, 15.9516, 0.29 ) }
    dend_11 { pt3dadd( 3.77965, -72.1344, 16.2538, 0.22 ) }
    dend_11 { pt3dadd( 4.01037, -72.8623, 16.4746, 0.22 ) }
    dend_11 { pt3dadd( 4.14177, -73.2772, 16.6162, 0.22 ) }
    dend_11 { pt3dadd( 4.34184, -73.882, 16.8371, 0.29 ) }
    dend_11 { pt3dadd( 4.55664, -74.5553, 17.07, 0.22 ) }
    dend_11 { pt3dadd( 4.77223, -75.3715, 17.2348, 0.29 ) }
    dend_11 { pt3dadd( 4.87322, -75.8005, 17.2851, 0.81 ) }
    dend_11 { pt3dadd( 5.15834, -77.0693, 17.3482, 1.55 ) }
    dend_11 { pt3dadd( 5.38681, -78.1082, 17.3574, 2.29 ) }
    dend_11 { pt3dadd( 5.59521, -79.0239, 17.3415, 2.06 ) }
    dend_11 { pt3dadd( 6.08517, -80.9473, 17.3141, 0.22 ) }
    dend_11 { pt3dadd( 6.28119, -81.5871, 17.3308, 0.22 ) }
    dend_11 { pt3dadd( 6.45205, -82.0499, 17.3751, 0.22 ) }
    dend_11 { pt3dadd( 6.54181, -82.2547, 17.4137, 0.22 ) }
    dend_11 { pt3dadd( 6.84921, -82.8846, 17.5977, 0.81 ) }
    dend_11 { pt3dadd( 7.32441, -83.8179, 17.9324, 1.84 ) }
    dend_11 { pt3dadd( 7.77994, -84.7674, 18.331, 2.8 ) }
    dend_11 { pt3dadd( 8.22691, -85.8753, 18.8347, 1.77 ) }
    dend_11 { pt3dadd( 8.55436, -86.901, 19.2996, 0.81 ) }
    dend_11 { pt3dadd( 8.90589, -88.2257, 19.9004, 0.22 ) }
    dend_11 { pt3dadd( 9.08698, -88.9918, 20.2383, 0.29 ) }
    dend_11 { pt3dadd( 9.23348, -89.7496, 20.5671, 0.29 ) }
    dend_11 { pt3dadd( 9.39105, -91.0941, 21.1472, 0.59 ) }
    dend_11 { pt3dadd( 9.43814, -92.3283, 21.7008, 1.47 ) }
    dend_11 { pt3dadd( 9.41275, -92.9554, 22.0046, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 31.6539, 15.5715, 34.4706, 0.22 ) }
    dend_3 { pt3dadd( 32.4525, 15.8675, 35.5743, 0.22 ) }
    dend_3 { pt3dadd( 32.9912, 16.0672, 36.3188, 0.22 ) }
    dend_3 { pt3dadd( 33.7449, 16.3465, 37.3605, 1.47 ) }
    dend_3 { pt3dadd( 34.0389, 16.4555, 37.7669, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 31.6539, 15.5715, 34.4706, 0.29 ) }
    dend_2 { pt3dadd( 32.6672, 14.7709, 35.5317, 0.29 ) }
    dend_2 { pt3dadd( 33.2559, 14.2128, 36.1654, 0.15 ) }
    dend_2 { pt3dadd( 33.4982, 13.9811, 36.4075, 0.22 ) }
    dend_2 { pt3dadd( 33.9891, 13.5157, 36.8654, 0.22 ) }
    dend_2 { pt3dadd( 34.5692, 12.9454, 37.4103, 0.22 ) }
    dend_2 { pt3dadd( 35.0257, 12.5044, 37.8129, 0.22 ) }
    dend_2 { pt3dadd( 35.6504, 11.8724, 38.3352, 0.22 ) }
    dend_2 { pt3dadd( 36.2724, 11.2366, 38.8265, 0.22 ) }
    dend_2 { pt3dadd( 36.9312, 10.6039, 39.2985, 0.22 ) }
    dend_2 { pt3dadd( 37.7699, 9.88712, 39.8003, 0.15 ) }
    dend_2 { pt3dadd( 38.5566, 9.28585, 40.1836, 0.15 ) }
    dend_2 { pt3dadd( 38.9524, 9.01259, 40.3491, 0.15 ) }
    dend_2 { pt3dadd( 39.4346, 8.67628, 40.534, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 39.9193, 8.3269, 40.7049, 1.25 ) }
    dend_2 { pt3dadd( 40.7197, 7.75573, 40.9501, 0.15 ) }
    dend_2 { pt3dadd( 41.1275, 7.47147, 41.0625, 0.15 ) }
    dend_2 { pt3dadd( 41.8027, 7.00489, 41.2336, 0.88 ) }
    dend_2 { pt3dadd( 42.7371, 6.36947, 41.4515, 0.15 ) }
    dend_2 { pt3dadd( 43.129, 6.11075, 41.5338, 0.44 ) }
    dend_2 { pt3dadd( 43.6409, 5.77593, 41.6485, 1.18 ) }
    dend_2 { pt3dadd( 44.6878, 5.09605, 41.908, 0.07 ) }
    dend_2 { pt3dadd( 45.4626, 4.62081, 42.1088, 0.07 ) }
    dend_2 { pt3dadd( 46.0677, 4.2543, 42.2909, 1.47 ) }
    dend_2 { pt3dadd( 46.4182, 4.05475, 42.4115, 1.47 ) }
    dend_2 { pt3dadd( 47.5521, 3.39812, 42.8453, 0.15 ) }
    dend_2 { pt3dadd( 48.0351, 3.10031, 43.0678, 1.11 ) }
    dend_2 { pt3dadd( 48.4227, 2.84004, 43.2792, 1.47 ) }
    dend_2 { pt3dadd( 49.5901, 1.98868, 44.0114, 0.07 ) }
    dend_2 { pt3dadd( 50.1943, 1.48581, 44.4373, 0.15 ) }
    dend_2 { pt3dadd( 50.6153, 1.09153, 44.7658, 0.22 ) }
    dend_2 { pt3dadd( 51.1785, 0.504022, 45.2733, 0.07 ) }
    dend_2 { pt3dadd( 51.5002, 0.153865, 45.5938, 1.18 ) }
    dend_2 { pt3dadd( 51.8742, -0.247322, 45.9822, 1.77 ) }
    dend_2 { pt3dadd( 52.7346, -1.15095, 46.8802, 0.07 ) }
    dend_2 { pt3dadd( 53.2437, -1.58863, 47.3321, 0.15 ) }
    dend_2 { pt3dadd( 54.2113, -2.21417, 48.0595, 0.74 ) }
    dend_2 { pt3dadd( 55.0068, -2.56998, 48.5499, 0.15 ) }
    dend_2 { pt3dadd( 55.5308, -2.70566, 48.8171, 0.81 ) }
    dend_2 { pt3dadd( 56.0871, -2.76466, 49.053, 2.14 ) }
    dend_2 { pt3dadd( 58.1558, -2.69017, 49.7561, 0.15 ) }
    dend_2 { pt3dadd( 58.8923, -2.58194, 49.9773, 0.15 ) }
    dend_2 { pt3dadd( 59.4878, -2.43862, 50.1454, 0.37 ) }
    dend_2 { pt3dadd( 60.578, -2.08999, 50.4946, 0.07 ) }
    dend_2 { pt3dadd( 61.0101, -1.91781, 50.6725, 0.88 ) }
    dend_2 { pt3dadd( 61.3955, -1.7216, 50.8693, 1.25 ) }
    dend_2 { pt3dadd( 62.3737, -1.04285, 51.5605, 0.07 ) }
    dend_2 { pt3dadd( 62.8409, -0.645433, 51.9788, 1.11 ) }
    dend_2 { pt3dadd( 63.2274, -0.246013, 52.4256, 1.55 ) }
    dend_2 { pt3dadd( 63.7158, 0.301251, 53.1479, 0.07 ) }
    dend_2 { pt3dadd( 63.937, 0.549774, 53.5297, 0.74 ) }
    dend_2 { pt3dadd( 64.3271, 1.00604, 54.315, 0.15 ) }
    dend_2 { pt3dadd( 64.6278, 1.38083, 55.0068, 0.81 ) }
    dend_2 { pt3dadd( 64.9476, 1.77435, 55.7794, 1.25 ) }
    dend_2 { pt3dadd( 65.4615, 2.3659, 57.0516, 0.22 ) }
    dend_2 { pt3dadd( 65.6801, 2.59265, 57.6119, 0.22 ) }
    dend_2 { pt3dadd( 65.7983, 2.68468, 57.9037, 0.22 ) }
    dend_2 { pt3dadd( 66.0776, 2.81886, 58.5285, 0.15 ) }
    dend_2 { pt3dadd( 66.3559, 2.89421, 59.1173, 0.81 ) }
    dend_2 { pt3dadd( 66.9924, 2.92479, 60.318, 0.22 ) }
    dend_2 { pt3dadd( 67.5215, 2.89262, 61.217, 0.22 ) }
    dend_2 { pt3dadd( 67.9956, 2.79997, 61.9328, 1.62 ) }
    dend_2 { pt3dadd( 68.5327, 2.63861, 62.6793, 0.15 ) }
    dend_2 { pt3dadd( 68.9344, 2.49058, 63.1914, 0.96 ) }
    dend_2 { pt3dadd( 69.9624, 2.09485, 64.3114, 0.07 ) }
    dend_2 { pt3dadd( 70.6466, 1.84165, 64.9692, 0.59 ) }
    dend_2 { pt3dadd( 71.5741, 1.54773, 65.8129, 0.07 ) }
    dend_2 { pt3dadd( 72.2486, 1.37175, 66.4223, 0.07 ) }
    dend_2 { pt3dadd( 72.6775, 1.27628, 66.8073, 1.25 ) }
    dend_2 { pt3dadd( 74.0193, 1.06506, 67.9601, 0.07 ) }
    dend_2 { pt3dadd( 74.7286, 1.00796, 68.5173, 0.81 ) }
    dend_2 { pt3dadd( 75.873, 1.00401, 69.3659, 0.07 ) }
    dend_2 { pt3dadd( 76.2316, 1.04272, 69.6254, 0.07 ) }
    dend_2 { pt3dadd( 76.6777, 1.13441, 69.9454, 1.03 ) }
    dend_2 { pt3dadd( 77.621, 1.3811, 70.6293, 0.07 ) }
    dend_2 { pt3dadd( 78.501, 1.70145, 71.2673, 0.07 ) }
    dend_2 { pt3dadd( 79.4587, 2.10095, 71.9184, 0.07 ) }
    dend_2 { pt3dadd( 80.0615, 2.40041, 72.2949, 0.66 ) }
    dend_2 { pt3dadd( 80.4821, 2.62394, 72.5637, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181552 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181552 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181552 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 0.362919, 28.7999, 16.2507, 0.22 ) }
    dend_56 { pt3dadd( -1.19071, 29.5595, 18.2864, 0.22 ) }
    dend_56 { pt3dadd( -1.76552, 29.9878, 19.0662, 0.22 ) }
    dend_56 { pt3dadd( -2.17062, 30.4871, 19.7918, 0.15 ) }
    dend_56 { pt3dadd( -2.46493, 31.0002, 20.5039, 0.15 ) }
    dend_56 { pt3dadd( -2.66137, 31.395, 20.9987, 0.15 ) }
    dend_56 { pt3dadd( -2.93978, 32.2084, 21.9066, 0.66 ) }
    dend_56 { pt3dadd( -3.13235, 32.9542, 22.674, 0.22 ) }
    dend_56 { pt3dadd( -3.45056, 34.1047, 23.8907, 0.22 ) }
    dend_56 { pt3dadd( -3.69983, 34.9993, 24.8579, 1.62 ) }
    dend_56 { pt3dadd( -3.98523, 36.0829, 26.081, 3.1 ) }
    dend_56 { pt3dadd( -4.76181, 38.7933, 29.3384, 0.29 ) }
    dend_56 { pt3dadd( -5.09957, 39.8152, 30.6638, 0.22 ) }
    dend_56 { pt3dadd( -5.27583, 40.2637, 31.2576, 0.22 ) }
    dend_56 { pt3dadd( -5.32661, 40.3851, 31.412, 0.22 ) }
    dend_56 { pt3dadd( -5.54568, 40.9084, 32.0843, 0.22 ) }
    dend_56 { pt3dadd( -5.77743, 41.4452, 32.8471, 0.22 ) }
    dend_56 { pt3dadd( -6.18822, 42.0746, 33.8855, 0.22 ) }
    dend_56 { pt3dadd( -6.58987, 42.8096, 34.9755, 0.88 ) }
    dend_56 { pt3dadd( -6.81089, 43.2388, 35.548, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 0.362919, 28.7999, 16.2507, 0.22 ) }
    dend_39 { pt3dadd( 2.47479, 29.1634, 16.695, 0.22 ) }
    dend_39 { pt3dadd( 3.45303, 29.3318, 16.9008, 0.37 ) }
    dend_39 { pt3dadd( 4.30289, 29.4781, 17.0796, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.14399, 54.8446, 5.75345, 0.15 ) }
    dend_35 { pt3dadd( -2.98119, 56.9944, 5.65759, 0.15 ) }
    dend_35 { pt3dadd( -3.42232, 58.1306, 5.6626, 0.81 ) }
    dend_35 { pt3dadd( -3.76465, 59.0021, 5.63009, 1.18 ) }
    dend_35 { pt3dadd( -4.4815, 60.8076, 5.52846, 0.22 ) }
    dend_35 { pt3dadd( -4.84772, 61.7887, 5.46601, 0.81 ) }
    dend_35 { pt3dadd( -5.06457, 62.42, 5.44213, 0.81 ) }
    dend_35 { pt3dadd( -5.44966, 63.803, 5.50502, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -5.78113, 65.2838, 5.60698, 0.07 ) }
    dend_35 { pt3dadd( -5.91686, 66.0657, 5.66068, 0.96 ) }
    dend_35 { pt3dadd( -6.08758, 67.286, 5.7261, 1.92 ) }
    dend_35 { pt3dadd( -6.33315, 68.9296, 5.83429, 0.22 ) }
    dend_35 { pt3dadd( -6.44768, 69.8081, 5.9246, 0.22 ) }
    dend_35 { pt3dadd( -6.537, 70.6035, 6.03536, 0.22 ) }
    dend_35 { pt3dadd( -6.61624, 71.3515, 6.17859, 0.81 ) }
    dend_35 { pt3dadd( -6.72497, 72.2484, 6.35412, 1.11 ) }
    dend_35 { pt3dadd( -7.03522, 74.204, 6.71356, 0.15 ) }
    dend_35 { pt3dadd( -7.29127, 75.6494, 6.92693, 0.15 ) }
    dend_35 { pt3dadd( -7.40375, 76.2657, 7.00537, 0.74 ) }
    dend_35 { pt3dadd( -7.59295, 77.5386, 7.1542, 1.92 ) }
    dend_35 { pt3dadd( -7.65647, 78.1333, 7.21415, 2.88 ) }
    dend_35 { pt3dadd( -7.74572, 79.4336, 7.35672, 1.84 ) }
    dend_35 { pt3dadd( -7.8057, 81.4685, 7.60442, 0.22 ) }
    dend_35 { pt3dadd( -7.82672, 82.7923, 7.77128, 0.59 ) }
    dend_35 { pt3dadd( -7.8183, 83.6903, 7.88179, 0.59 ) }
    dend_35 { pt3dadd( -7.7785, 84.8456, 8.00117, 0.22 ) }
    dend_35 { pt3dadd( -7.70164, 86.1318, 8.09901, 0.22 ) }
    dend_35 { pt3dadd( -7.63213, 87.0778, 8.12679, 0.22 ) }
    dend_35 { pt3dadd( -7.62427, 88.061, 8.07748, 0.15 ) }
    dend_35 { pt3dadd( -7.72781, 89.2986, 7.89995, 0.15 ) }
    dend_35 { pt3dadd( -7.88676, 90.2798, 7.66433, 0.88 ) }
    dend_35 { pt3dadd( -8.14611, 91.5337, 7.25813, 1.77 ) }
    dend_35 { pt3dadd( -8.3625, 92.4667, 6.91041, 1.77 ) }
    dend_35 { pt3dadd( -8.89398, 94.2999, 6.20089, 0.15 ) }
    dend_35 { pt3dadd( -9.19348, 95.1927, 5.86182, 0.37 ) }
    dend_35 { pt3dadd( -9.47959, 96.0071, 5.58322, 0.96 ) }
    dend_35 { pt3dadd( -9.82164, 96.9949, 5.32778, 1.77 ) }
    dend_35 { pt3dadd( -10.3439, 98.6059, 5.05002, 0.29 ) }
    dend_35 { pt3dadd( -10.8051, 100.268, 4.88401, 0.15 ) }
    dend_35 { pt3dadd( -10.8948, 100.708, 4.86747, 0.52 ) }
    dend_35 { pt3dadd( -11.0911, 101.675, 4.85911, 1.18 ) }
    dend_35 { pt3dadd( -11.4362, 103.277, 4.8887, 0.15 ) }
    dend_35 { pt3dadd( -11.6476, 104.253, 4.92451, 0.15 ) }
    dend_35 { pt3dadd( -11.8034, 105.127, 4.98242, 1.03 ) }
    dend_35 { pt3dadd( -11.9757, 106.808, 5.16621, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.14399, 54.8446, 5.75345, 0.22 ) }
    dend_34 { pt3dadd( -1.74626, 55.9103, 6.15624, 0.22 ) }
    dend_34 { pt3dadd( -1.37179, 56.932, 6.56476, 0.22 ) }
    dend_34 { pt3dadd( -1.08108, 57.7168, 6.87337, 0.96 ) }
    dend_34 { pt3dadd( -0.852159, 58.2909, 7.08955, 1.18 ) }
    dend_34 { pt3dadd( -0.408731, 59.3094, 7.4411, 0.15 ) }
    dend_34 { pt3dadd( -0.107248, 59.9218, 7.6406, 0.15 ) }
    dend_34 { pt3dadd( 0.127439, 60.3437, 7.75242, 0.15 ) }
    dend_34 { pt3dadd( 0.388589, 60.8233, 7.83919, 0.15 ) }
    dend_34 { pt3dadd( 0.641122, 61.3742, 7.88975, 0.15 ) }
    dend_34 { pt3dadd( 0.89185, 62.0264, 7.89698, 1.33 ) }
    dend_34 { pt3dadd( 1.16849, 62.8721, 7.83623, 2.73 ) }
    dend_34 { pt3dadd( 1.36593, 63.6562, 7.75567, 3.1 ) }
    dend_34 { pt3dadd( 1.71337, 65.9092, 7.49347, 0.22 ) }
    dend_34 { pt3dadd( 1.79655, 66.9242, 7.3725, 0.15 ) }
    dend_34 { pt3dadd( 1.81367, 67.6238, 7.29111, 0.52 ) }
    dend_34 { pt3dadd( 1.80851, 68.2711, 7.21601, 0.74 ) }
    dend_34 { pt3dadd( 1.76981, 69.6, 7.05902, 0.22 ) }
    dend_34 { pt3dadd( 1.75198, 70.3773, 6.9793, 1.18 ) }
    dend_34 { pt3dadd( 1.75509, 71.0809, 6.92921, 2.58 ) }
    dend_34 { pt3dadd( 1.82659, 72.8242, 6.88154, 0.22 ) }
    dend_34 { pt3dadd( 1.86975, 73.5506, 6.88152, 0.22 ) }
    dend_34 { pt3dadd( 1.91594, 74.3137, 6.89435, 0.81 ) }
    dend_34 { pt3dadd( 1.98718, 75.5566, 6.93172, 2.51 ) }
    dend_34 { pt3dadd( 2.07912, 77.6931, 7.02534, 0.22 ) }
    dend_34 { pt3dadd( 2.08584, 78.6049, 7.07956, 0.29 ) }
    dend_34 { pt3dadd( 2.03744, 79.6127, 7.15705, 0.15 ) }
    dend_34 { pt3dadd( 1.94668, 80.6344, 7.2426, 0.15 ) }
    dend_34 { pt3dadd( 1.83677, 81.4373, 7.3148, 1.03 ) }
    dend_34 { pt3dadd( 1.69582, 82.1261, 7.38094, 1.99 ) }
    dend_34 { pt3dadd( 1.46258, 82.8812, 7.45989, 1.99 ) }
    dend_34 { pt3dadd( 0.810767, 84.558, 7.63978, 0.15 ) }
    dend_34 { pt3dadd( 0.491343, 85.2448, 7.71489, 0.15 ) }
    dend_34 { pt3dadd( 0.179964, 85.8358, 7.76998, 0.15 ) }
    dend_34 { pt3dadd( -0.080573, 86.2727, 7.80504, 0.44 ) }
    dend_34 { pt3dadd( -0.851541, 87.387, 7.89287, 0.15 ) }
    dend_34 { pt3dadd( -1.50986, 88.208, 7.95945, 1.47 ) }
    dend_34 { pt3dadd( -2.11512, 88.8401, 8.02252, 2.51 ) }
    dend_34 { pt3dadd( -3.14371, 89.8096, 8.14194, 0.37 ) }
    dend_34 { pt3dadd( -3.72458, 90.3173, 8.20705, 0.22 ) }
    dend_34 { pt3dadd( -4.25376, 90.7321, 8.26237, 0.07 ) }
    dend_34 { pt3dadd( -4.75977, 91.0745, 8.32714, 0.29 ) }
    dend_34 { pt3dadd( -5.71065, 91.6319, 8.48359, 0.07 ) }
    dend_34 { pt3dadd( -6.51596, 92.0767, 8.6375, 0.44 ) }
    dend_34 { pt3dadd( -7.63396, 92.6561, 8.86626, 0.07 ) }
    dend_34 { pt3dadd( -8.55793, 93.1268, 9.04163, 0.15 ) }
    dend_34 { pt3dadd( -9.18705, 93.4327, 9.11616, 0.74 ) }
    dend_34 { pt3dadd( -10.0256, 93.8201, 9.20277, 1.84 ) }
    dend_34 { pt3dadd( -11.3586, 94.3813, 9.31593, 0.15 ) }
    dend_34 { pt3dadd( -12.0869, 94.6683, 9.36669, 0.59 ) }
    dend_34 { pt3dadd( -12.6693, 94.8869, 9.39909, 0.29 ) }
    dend_34 { pt3dadd( -13.9746, 95.3945, 9.40061, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -25.4761, -25.934, -37.1413, 1.47 ) }
    dend_31 { pt3dadd( -26.7167, -26.149, -37.6629, 1.47 ) }
    dend_31 { pt3dadd( -27.9612, -26.4809, -38.3828, 0.52 ) }
    dend_31 { pt3dadd( -28.5384, -26.7066, -38.7907, 0.52 ) }
    dend_31 { pt3dadd( -29.0928, -26.9234, -39.1825, 1.11 ) }
    dend_31 { pt3dadd( -29.7063, -27.1634, -39.6161, 2.21 ) }
    dend_31 { pt3dadd( -30.2707, -27.3841, -40.015, 1.11 ) }
    dend_31 { pt3dadd( -31.1831, -27.9116, -40.853, 0.44 ) }
    dend_31 { pt3dadd( -31.6897, -28.3544, -41.4412, 1.47 ) }
    dend_31 { pt3dadd( -38.8201, -30.579, -44.4728, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -25.4761, -25.934, -37.1413, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -25.7244, -28.4491, -37.7945, 0.22 ) }
    dend_28 { pt3dadd( -25.8211, -29.2784, -38.0274, 0.22 ) }
    dend_28 { pt3dadd( -25.9447, -30.2783, -38.2998, 0.96 ) }
    dend_28 { pt3dadd( -26.105, -31.7289, -38.7218, 0.22 ) }
    dend_28 { pt3dadd( -26.1862, -32.7268, -39.041, 0.22 ) }
    dend_28 { pt3dadd( -26.25, -33.5113, -39.2918, 0.81 ) }
    dend_28 { pt3dadd( -26.3157, -34.3225, -39.5774, 1.92 ) }
    dend_28 { pt3dadd( -26.3894, -35.2973, -39.9164, 0.81 ) }
    dend_28 { pt3dadd( -26.4464, -36.5392, -40.4, 0.15 ) }
    dend_28 { pt3dadd( -26.447, -37.4825, -40.8194, 0.66 ) }
    dend_28 { pt3dadd( -26.2612, -47.713, -45.6834, 0.66 ) }
    dend_28 { pt3dadd( -27.7405, -58.4937, -48.9901, 0.66 ) }
    dend_28 { pt3dadd( -29.2542, -68.9071, -53.2535, 0.66 ) }
    dend_28 { pt3dadd( -32.4288, -79.335, -56.4999, 0.66 ) }
    dend_28 { pt3dadd( -36.5111, -89.3274, -60.0464, 0.66 ) }
    dend_28 { pt3dadd( -39.0093, -100.313, -61.7801, 0.66 ) }
    dend_28 { pt3dadd( -40.8098, -111.579, -61.4447, 0.66 ) }
    dend_28 { pt3dadd( -43.6411, -122.478, -59.5806, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -8.00947, -124.064, 22.6127, 0.37 ) }
    dend_20 { pt3dadd( -6.2683, -126.393, 23.8334, 0.37 ) }
    dend_20 { pt3dadd( -5.40585, -127.939, 24.5859, 0.22 ) }
    dend_20 { pt3dadd( -5.02854, -128.857, 25.0177, 0.22 ) }
    dend_20 { pt3dadd( -4.67712, -129.994, 25.5425, 0.22 ) }
    dend_20 { pt3dadd( -4.41954, -131.039, 25.999, 0.29 ) }
    dend_20 { pt3dadd( -4.18488, -132.363, 26.508, 0.29 ) }
    dend_20 { pt3dadd( -4.20385, -133.5, 26.8526, 0.22 ) }
    dend_20 { pt3dadd( -4.30306, -134.6, 27.1496, 0.81 ) }
    dend_20 { pt3dadd( -4.4196, -135.653, 27.4288, 1.77 ) }
    dend_20 { pt3dadd( -4.5322, -136.727, 27.7031, 2.43 ) }
    dend_20 { pt3dadd( -4.66336, -138.866, 28.1959, 0.96 ) }
    dend_20 { pt3dadd( -4.7503, -141.865, 28.8644, 0.22 ) }
    dend_20 { pt3dadd( -4.80055, -143.039, 29.1156, 1.18 ) }
    dend_20 { pt3dadd( -4.90737, -144.368, 29.3865, 1.7 ) }
    dend_20 { pt3dadd( -4.97461, -144.934, 29.4987, 1.7 ) }
    dend_20 { pt3dadd( -5.27803, -146.771, 29.8978, 0.74 ) }
    dend_20 { pt3dadd( -5.62963, -148.551, 30.3043, 0.29 ) }
    dend_20 { pt3dadd( -5.98644, -150.239, 30.6697, 0.29 ) }
    dend_20 { pt3dadd( -6.22864, -151.512, 30.965, 0.29 ) }
    dend_20 { pt3dadd( -6.45463, -152.554, 31.2069, 0.66 ) }
    dend_20 { pt3dadd( -6.73253, -153.737, 31.5005, 1.47 ) }
    dend_20 { pt3dadd( -6.99409, -154.791, 31.7915, 2.73 ) }
    dend_20 { pt3dadd( -7.16611, -155.765, 32.0739, 2.88 ) }
    dend_20 { pt3dadd( -7.21964, -158.261, 32.8887, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -8.00947, -124.064, 22.6127, 0.22 ) }
    dend_15 { pt3dadd( -9.62948, -124.839, 22.7565, 0.22 ) }
    dend_15 { pt3dadd( -10.4809, -125.262, 22.8004, 0.22 ) }
    dend_15 { pt3dadd( -10.8617, -125.487, 22.8071, 0.22 ) }
    dend_15 { pt3dadd( -11.1499, -125.68, 22.8068, 0.22 ) }
    dend_15 { pt3dadd( -11.599, -125.999, 22.815, 0.29 ) }
    dend_15 { pt3dadd( -11.9408, -126.243, 22.8233, 0.96 ) }
    dend_15 { pt3dadd( -12.6568, -126.773, 22.7912, 1.84 ) }
    dend_15 { pt3dadd( -13.6729, -127.54, 22.6863, 0.22 ) }
    dend_15 { pt3dadd( -14.2766, -127.984, 22.6115, 0.22 ) }
    dend_15 { pt3dadd( -14.9472, -128.422, 22.5188, 0.96 ) }
    dend_15 { pt3dadd( -15.7694, -128.857, 22.4088, 0.22 ) }
    dend_15 { pt3dadd( -16.5846, -129.129, 22.2933, 0.22 ) }
    dend_15 { pt3dadd( -16.9055, -129.178, 22.2457, 0.22 ) }
    dend_15 { pt3dadd( -17.5938, -129.199, 22.1511, 0.22 ) }
    dend_15 { pt3dadd( -18.4276, -129.211, 22.0477, 0.29 ) }
    dend_15 { pt3dadd( -19.0083, -129.242, 21.9841, 1.25 ) }
    dend_15 { pt3dadd( -20.0422, -129.359, 21.9113, 2.88 ) }
    dend_15 { pt3dadd( -20.4771, -129.426, 21.8942, 2.73 ) }
    dend_15 { pt3dadd( -22.233, -129.818, 21.8224, 0.29 ) }
    dend_15 { pt3dadd( -22.918, -130.037, 21.7929, 0.66 ) }
    dend_15 { pt3dadd( -23.8291, -130.384, 21.7482, 0.29 ) }
    dend_15 { pt3dadd( -24.3654, -130.599, 21.7061, 0.22 ) }
    dend_15 { pt3dadd( -25.0747, -130.873, 21.6405, 0.22 ) }
    dend_15 { pt3dadd( -25.8064, -131.12, 21.5516, 0.22 ) }
    dend_15 { pt3dadd( -26.9402, -131.43, 21.376, 0.22 ) }
    dend_15 { pt3dadd( -27.4439, -131.515, 21.2749, 0.37 ) }
    dend_15 { pt3dadd( -28.3099, -131.617, 21.0801, 0.37 ) }
    dend_15 { pt3dadd( -29.105, -131.679, 20.8811, 0.66 ) }
    dend_15 { pt3dadd( -29.6303, -131.7, 20.739, 1.62 ) }
    dend_15 { pt3dadd( -30.243, -131.65, 20.5553, 2.51 ) }
    dend_15 { pt3dadd( -31.2999, -131.425, 20.2007, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 9.41275, -92.9554, 22.0046, 3.24 ) }
    dend_13 { pt3dadd( 9.67068, -94.2844, 22.0814, 3.24 ) }
    dend_13 { pt3dadd( 9.92112, -95.4281, 22.1506, 3.24 ) }
    dend_13 { pt3dadd( 10.4801, -97.7586, 22.2984, 0.22 ) }
    dend_13 { pt3dadd( 10.8624, -99.2433, 22.3957, 0.29 ) }
    dend_13 { pt3dadd( 11.0768, -100.034, 22.4486, 0.22 ) }
    dend_13 { pt3dadd( 11.3502, -100.994, 22.5142, 0.22 ) }
    dend_13 { pt3dadd( 11.5424, -101.591, 22.5473, 0.22 ) }
    dend_13 { pt3dadd( 11.6972, -102.04, 22.5758, 0.22 ) }
    dend_13 { pt3dadd( 11.9496, -102.76, 22.6236, 0.74 ) }
    dend_13 { pt3dadd( 12.1053, -103.258, 22.6512, 0.74 ) }
    dend_13 { pt3dadd( 12.2827, -104.119, 22.6949, 0.22 ) }
    dend_13 { pt3dadd( 12.3713, -104.884, 22.7395, 0.22 ) }
    dend_13 { pt3dadd( 12.4891, -105.947, 22.7962, 0.22 ) }
    dend_13 { pt3dadd( 12.5865, -106.642, 22.8021, 0.22 ) }
    dend_13 { pt3dadd( 12.7564, -107.608, 22.7831, 0.22 ) }
    dend_13 { pt3dadd( 12.9884, -108.603, 22.7505, 1.33 ) }
    dend_13 { pt3dadd( 13.3528, -109.884, 22.6868, 3.02 ) }
    dend_13 { pt3dadd( 13.9335, -111.515, 22.5915, 0.88 ) }
    dend_13 { pt3dadd( 14.5527, -113.067, 22.522, 0.22 ) }
    dend_13 { pt3dadd( 14.8798, -113.852, 22.4988, 0.22 ) }
    dend_13 { pt3dadd( 15.3283, -114.914, 22.4858, 0.22 ) }
    dend_13 { pt3dadd( 15.5875, -115.563, 22.4957, 1.18 ) }
    dend_13 { pt3dadd( 16.0455, -116.859, 22.5918, 2.06 ) }
    dend_13 { pt3dadd( 16.5642, -118.694, 22.8812, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 16.7234, -119.57, 23.0853, 0.52 ) }
    dend_13 { pt3dadd( 16.8073, -120.327, 23.2876, 0.52 ) }
    dend_13 { pt3dadd( 16.9146, -121.764, 23.7181, 0.22 ) }
    dend_13 { pt3dadd( 16.9513, -122.395, 23.9264, 0.22 ) }
    dend_13 { pt3dadd( 17.0102, -123.809, 24.4293, 1.99 ) }
    dend_13 { pt3dadd( 17.1465, -126.217, 25.3113, 0.29 ) }
    dend_13 { pt3dadd( 17.1862, -126.999, 25.5928, 0.22 ) }
    dend_13 { pt3dadd( 17.2525, -128.319, 26.0528, 0.22 ) }
    dend_13 { pt3dadd( 17.2983, -128.988, 26.2688, 1.03 ) }
    dend_13 { pt3dadd( 17.3608, -129.775, 26.503, 2.14 ) }
    dend_13 { pt3dadd( 17.4326, -130.518, 26.7121, 2.06 ) }
    dend_13 { pt3dadd( 17.6254, -132.361, 27.2124, 0.22 ) }
    dend_13 { pt3dadd( 17.6884, -133.181, 27.4171, 0.66 ) }
    dend_13 { pt3dadd( 17.7798, -134.893, 27.8102, 0.22 ) }
    dend_13 { pt3dadd( 17.8326, -135.997, 28.0415, 0.22 ) }
    dend_13 { pt3dadd( 17.879, -136.72, 28.1668, 0.66 ) }
    dend_13 { pt3dadd( 17.9676, -137.803, 28.3259, 0.22 ) }
    dend_13 { pt3dadd( 18.0689, -138.776, 28.4475, 1.55 ) }
    dend_13 { pt3dadd( 18.1541, -139.579, 28.5345, 2.8 ) }
    dend_13 { pt3dadd( 18.2475, -140.387, 28.6047, 2.58 ) }
    dend_13 { pt3dadd( 18.6534, -143.096, 28.7664, 0.22 ) }
    dend_13 { pt3dadd( 18.7583, -143.939, 28.8125, 0.22 ) }
    dend_13 { pt3dadd( 18.8371, -144.667, 28.8387, 0.59 ) }
    dend_13 { pt3dadd( 18.9018, -145.321, 28.8655, 0.29 ) }
    dend_13 { pt3dadd( 18.974, -146.168, 28.901, 1.03 ) }
    dend_13 { pt3dadd( 19.0551, -147.183, 28.9324, 2.06 ) }
    dend_13 { pt3dadd( 19.174, -149.233, 28.9477, 0.15 ) }
    dend_13 { pt3dadd( 19.2106, -149.748, 28.9399, 0.15 ) }
    dend_13 { pt3dadd( 19.3208, -150.885, 28.9006, 0.29 ) }
    dend_13 { pt3dadd( 19.406, -151.656, 28.8695, 0.15 ) }
    dend_13 { pt3dadd( 19.5113, -152.535, 28.8291, 0.15 ) }
    dend_13 { pt3dadd( 19.6123, -153.279, 28.8102, 0.96 ) }
    dend_13 { pt3dadd( 19.7384, -154.053, 28.7946, 2.06 ) }
    dend_13 { pt3dadd( 19.8848, -155.117, 28.8066, 2.14 ) }
    dend_13 { pt3dadd( 20.1491, -157.638, 28.8903, 0.22 ) }
    dend_13 { pt3dadd( 20.192, -158.456, 28.9557, 0.22 ) }
    dend_13 { pt3dadd( 20.2096, -159.59, 29.0961, 0.22 ) }
    dend_13 { pt3dadd( 20.2061, -159.926, 29.1518, 0.59 ) }
    dend_13 { pt3dadd( 20.172, -160.761, 29.3156, 1.4 ) }
    dend_13 { pt3dadd( 20.126, -161.637, 29.5067, 0.66 ) }
    dend_13 { pt3dadd( 20.0361, -163.436, 29.9406, 0.22 ) }
    dend_13 { pt3dadd( 19.97, -164.316, 30.1229, 0.22 ) }
    dend_13 { pt3dadd( 19.9128, -164.98, 30.2353, 0.22 ) }
    dend_13 { pt3dadd( 19.8604, -165.702, 30.3488, 1.03 ) }
    dend_13 { pt3dadd( 19.8205, -166.786, 30.5014, 2.21 ) }
    dend_13 { pt3dadd( 19.817, -169.087, 30.8199, 0.15 ) }
    dend_13 { pt3dadd( 19.8772, -170.465, 30.9905, 0.15 ) }
    dend_13 { pt3dadd( 19.91, -171.029, 31.059, 0.81 ) }
    dend_13 { pt3dadd( 19.9617, -171.833, 31.1526, 1.33 ) }
    dend_13 { pt3dadd( 20.0375, -173.037, 31.2917, 0.22 ) }
    dend_13 { pt3dadd( 20.1124, -174.247, 31.4235, 0.22 ) }
    dend_13 { pt3dadd( 20.1656, -174.997, 31.4988, 0.88 ) }
    dend_13 { pt3dadd( 20.2115, -175.659, 31.5769, 0.66 ) }
    dend_13 { pt3dadd( 20.3018, -177.152, 31.7904, 0.15 ) }
    dend_13 { pt3dadd( 20.3708, -178.251, 31.9696, 0.15 ) }
    dend_13 { pt3dadd( 20.4049, -178.663, 32.0457, 0.74 ) }
    dend_13 { pt3dadd( 20.4992, -179.49, 32.2071, 1.18 ) }
    dend_13 { pt3dadd( 20.7379, -181.153, 32.5636, 0.22 ) }
    dend_13 { pt3dadd( 20.9201, -182.11, 32.8028, 0.22 ) }
    dend_13 { pt3dadd( 21.078, -182.705, 32.9609, 0.22 ) }
    dend_13 { pt3dadd( 21.2675, -183.304, 33.1308, 0.22 ) }
    dend_13 { pt3dadd( 21.5222, -184.05, 33.3395, 0.22 ) }
    dend_13 { pt3dadd( 21.7969, -184.877, 33.5551, 1.33 ) }
    dend_13 { pt3dadd( 22.0909, -185.836, 33.7818, 2.21 ) }
    dend_13 { pt3dadd( 22.5608, -187.549, 34.139, 0.15 ) }
    dend_13 { pt3dadd( 22.769, -188.25, 34.2986, 0.29 ) }
    dend_13 { pt3dadd( 22.8811, -188.589, 34.3822, 0.29 ) }
    dend_13 { pt3dadd( 23.2751, -189.659, 34.6749, 0.15 ) }
    dend_13 { pt3dadd( 23.3891, -189.974, 34.761, 0.15 ) }
    dend_13 { pt3dadd( 23.6201, -190.674, 34.9339, 0.66 ) }
    dend_13 { pt3dadd( 23.9918, -191.916, 35.2545, 0.15 ) }
    dend_13 { pt3dadd( 24.1299, -192.407, 35.3701, 0.15 ) }
    dend_13 { pt3dadd( 24.2368, -192.764, 35.4675, 0.15 ) }
    dend_13 { pt3dadd( 24.4987, -193.59, 35.7328, 0.15 ) }
    dend_13 { pt3dadd( 24.6551, -194.115, 35.9074, 0.37 ) }
    dend_13 { pt3dadd( 24.8595, -194.876, 36.1499, 1.03 ) }
    dend_13 { pt3dadd( 25.065, -195.692, 36.4046, 0.22 ) }
    dend_13 { pt3dadd( 25.3753, -196.836, 36.7682, 0.22 ) }
    dend_13 { pt3dadd( 25.6662, -197.812, 37.0785, 1.4 ) }
    dend_13 { pt3dadd( 25.941, -198.662, 37.3401, 2.14 ) }
    dend_13 { pt3dadd( 26.2334, -199.583, 37.6128, 1.4 ) }
    dend_13 { pt3dadd( 26.7417, -201.337, 38.0808, 0.22 ) }
    dend_13 { pt3dadd( 26.8827, -201.888, 38.21, 0.81 ) }
    dend_13 { pt3dadd( 27.0321, -202.589, 38.3474, 1.55 ) }
    dend_13 { pt3dadd( 27.282, -203.951, 38.5889, 0.29 ) }
    dend_13 { pt3dadd( 27.4682, -205.151, 38.794, 0.22 ) }
    dend_13 { pt3dadd( 27.5747, -205.969, 38.9209, 0.22 ) }
    dend_13 { pt3dadd( 27.6501, -206.803, 39.0161, 0.29 ) }
    dend_13 { pt3dadd( 27.7064, -207.755, 39.1213, 0.15 ) }
    dend_13 { pt3dadd( 27.7387, -208.483, 39.1978, 0.96 ) }
    dend_13 { pt3dadd( 27.7596, -208.986, 39.2445, 1.47 ) }
    dend_13 { pt3dadd( 27.8077, -209.736, 39.2976, 1.47 ) }
    dend_13 { pt3dadd( 27.9449, -211.05, 39.3935, 0.22 ) }
    dend_13 { pt3dadd( 28.1328, -212.335, 39.502, 0.22 ) }
    dend_13 { pt3dadd( 28.2708, -213.054, 39.5625, 0.88 ) }
    dend_13 { pt3dadd( 28.496, -214.012, 39.6499, 0.88 ) }
    dend_13 { pt3dadd( 28.8968, -215.504, 39.8057, 0.15 ) }
    dend_13 { pt3dadd( 29.2205, -216.512, 39.9302, 0.15 ) }
    dend_13 { pt3dadd( 29.4875, -217.236, 40.0282, 0.81 ) }
    dend_13 { pt3dadd( 29.931, -218.392, 40.2254, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 30.2107, -219.139, 40.3816, 0.81 ) }
    dend_13 { pt3dadd( 30.5321, -220.038, 40.5953, 0.52 ) }
    dend_13 { pt3dadd( 30.7874, -220.849, 40.7997, 1.62 ) }
    dend_13 { pt3dadd( 30.996, -221.696, 41.0122, 1.62 ) }
    dend_13 { pt3dadd( 31.3253, -223.43, 41.4029, 0.22 ) }
    dend_13 { pt3dadd( 31.4717, -224.4, 41.5966, 0.22 ) }
    dend_13 { pt3dadd( 31.5459, -224.979, 41.686, 0.74 ) }
    dend_13 { pt3dadd( 31.6181, -225.629, 41.7627, 0.29 ) }
    dend_13 { pt3dadd( 31.7013, -226.571, 41.8557, 1.47 ) }
    dend_13 { pt3dadd( 31.7645, -227.224, 41.9137, 1.47 ) }
    dend_13 { pt3dadd( 31.9154, -228.763, 42.0082, 0.15 ) }
    dend_13 { pt3dadd( 32.0092, -229.511, 42.0953, 0.52 ) }
    dend_13 { pt3dadd( 32.1701, -230.554, 42.2582, 0.15 ) }
    dend_13 { pt3dadd( 32.3104, -231.339, 42.4035, 0.15 ) }
    dend_13 { pt3dadd( 32.3916, -231.775, 42.4912, 0.66 ) }
    dend_13 { pt3dadd( 32.542, -232.572, 42.6621, 1.47 ) }
    dend_13 { pt3dadd( 32.8834, -234.343, 43.0528, 0.22 ) }
    dend_13 { pt3dadd( 33.0821, -235.309, 43.2515, 0.15 ) }
    dend_13 { pt3dadd( 33.2241, -235.94, 43.3551, 0.15 ) }
    dend_13 { pt3dadd( 33.4063, -236.743, 43.4727, 0.74 ) }
    dend_13 { pt3dadd( 33.6638, -237.954, 43.6267, 0.15 ) }
    dend_13 { pt3dadd( 33.8348, -238.755, 43.7174, 0.15 ) }
    dend_13 { pt3dadd( 34.0799, -240.053, 43.8335, 0.22 ) }
    dend_13 { pt3dadd( 34.2274, -240.913, 43.9198, 1.18 ) }
    dend_13 { pt3dadd( 34.3884, -241.92, 44.0323, 1.7 ) }
    dend_13 { pt3dadd( 34.7238, -244.018, 44.3008, 0.22 ) }
    dend_13 { pt3dadd( 34.8558, -244.833, 44.4133, 0.22 ) }
    dend_13 { pt3dadd( 34.989, -245.597, 44.5294, 0.15 ) }
    dend_13 { pt3dadd( 35.186, -246.692, 44.7176, 0.15 ) }
    dend_13 { pt3dadd( 35.2771, -247.321, 44.8357, 0.44 ) }
    dend_13 { pt3dadd( 35.484, -249.063, 45.1621, 0.15 ) }
    dend_13 { pt3dadd( 35.526, -249.62, 45.2774, 0.88 ) }
    dend_13 { pt3dadd( 35.5557, -250.41, 45.4418, 1.7 ) }
    dend_13 { pt3dadd( 35.5714, -251.291, 45.6201, 1.4 ) }
    dend_13 { pt3dadd( 35.5694, -253.34, 45.9962, 0.15 ) }
    dend_13 { pt3dadd( 35.5665, -253.754, 46.0659, 0.22 ) }
    dend_13 { pt3dadd( 35.5439, -255.206, 46.2869, 0.07 ) }
    dend_13 { pt3dadd( 35.5414, -255.945, 46.3881, 1.33 ) }
    dend_13 { pt3dadd( 35.546, -256.595, 46.468, 1.33 ) }
    dend_13 { pt3dadd( 35.5988, -257.783, 46.6097, 0.07 ) }
    dend_13 { pt3dadd( 35.6963, -258.651, 46.7005, 0.15 ) }
    dend_13 { pt3dadd( 35.7862, -259.229, 46.7569, 0.15 ) }
    dend_13 { pt3dadd( 35.902, -259.81, 46.8084, 0.22 ) }
    dend_13 { pt3dadd( 36.1332, -260.914, 46.9059, 0.07 ) }
    dend_13 { pt3dadd( 36.2138, -261.319, 46.9398, 0.66 ) }
    dend_13 { pt3dadd( 36.3324, -261.972, 46.9865, 0.29 ) }
    dend_13 { pt3dadd( 36.5985, -263.509, 47.0764, 0.15 ) }
    dend_13 { pt3dadd( 36.6738, -263.906, 47.1027, 0.22 ) }
    dend_13 { pt3dadd( 36.8268, -264.717, 47.165, 0.07 ) }
    dend_13 { pt3dadd( 36.9593, -265.443, 47.2332, 0.74 ) }
    dend_13 { pt3dadd( 37.1401, -266.582, 47.3629, 0.15 ) }
    dend_13 { pt3dadd( 37.2149, -267.14, 47.4352, 0.59 ) }
    dend_13 { pt3dadd( 37.3749, -268.652, 47.6314, 0.15 ) }
    dend_13 { pt3dadd( 37.4331, -269.292, 47.7281, 0.29 ) }
    dend_13 { pt3dadd( 37.4965, -270.095, 47.8444, 0.15 ) }
    dend_13 { pt3dadd( 37.5368, -270.743, 47.933, 0.88 ) }
    dend_13 { pt3dadd( 37.561, -271.307, 48.0026, 1.92 ) }
    dend_13 { pt3dadd( 37.6291, -273.757, 48.2686, 0.22 ) }
    dend_13 { pt3dadd( 37.657, -275.015, 48.3831, 1.7 ) }
    dend_13 { pt3dadd( 37.7295, -277.78, 48.6032, 0.15 ) }
    dend_13 { pt3dadd( 37.7545, -278.952, 48.6777, 0.15 ) }
    dend_13 { pt3dadd( 37.763, -279.683, 48.717, 0.81 ) }
    dend_13 { pt3dadd( 37.7708, -281.333, 48.7845, 0.22 ) }
    dend_13 { pt3dadd( 37.7787, -282.27, 48.8085, 1.25 ) }
    dend_13 { pt3dadd( 37.7887, -282.779, 48.8166, 1.84 ) }
    dend_13 { pt3dadd( 37.8557, -285.087, 48.8856, 0.15 ) }
    dend_13 { pt3dadd( 37.8847, -285.683, 48.9082, 0.29 ) }
    dend_13 { pt3dadd( 37.9649, -286.743, 48.986, 0.07 ) }
    dend_13 { pt3dadd( 38.022, -287.398, 49.0503, 0.15 ) }
    dend_13 { pt3dadd( 38.1652, -288.953, 49.2377, 0.15 ) }
    dend_13 { pt3dadd( 38.2089, -289.37, 49.2963, 0.52 ) }
    dend_13 { pt3dadd( 38.2805, -289.963, 49.3913, 1.4 ) }
    dend_13 { pt3dadd( 38.4172, -291.674, 49.6888, 0.07 ) }
    dend_13 { pt3dadd( 38.4668, -292.896, 49.9093, 0.15 ) }
    dend_13 { pt3dadd( 38.4571, -293.462, 50.0196, 0.74 ) }
    dend_13 { pt3dadd( 38.4265, -294.033, 50.1352, 1.92 ) }
    dend_13 { pt3dadd( 38.3631, -294.906, 50.3362, 1.92 ) }
    dend_13 { pt3dadd( 38.174, -297.182, 50.9216, 0.15 ) }
    dend_13 { pt3dadd( 38.1034, -297.98, 51.1703, 0.59 ) }
    dend_13 { pt3dadd( 38.0217, -299.287, 51.6754, 0.07 ) }
    dend_13 { pt3dadd( 38.0096, -299.59, 51.8108, 0.15 ) }
    dend_13 { pt3dadd( 38.0002, -300.599, 52.3072, 0.15 ) }
    dend_13 { pt3dadd( 38.0179, -301.301, 52.672, 0.37 ) }
    dend_13 { pt3dadd( 38.0898, -302.174, 53.1246, 0.96 ) }
    dend_13 { pt3dadd( 38.2163, -302.968, 53.4996, 1.47 ) }
    dend_13 { pt3dadd( 38.5251, -304.338, 54.1104, 0.15 ) }
    dend_13 { pt3dadd( 38.723, -305.111, 54.4301, 0.15 ) }
    dend_13 { pt3dadd( 38.8882, -305.704, 54.6457, 1.11 ) }
    dend_13 { pt3dadd( 39.0653, -306.316, 54.8405, 1.7 ) }
    dend_13 { pt3dadd( 39.5914, -308.156, 55.3114, 0.15 ) }
    dend_13 { pt3dadd( 39.7746, -308.808, 55.4549, 0.81 ) }
    dend_13 { pt3dadd( 39.9998, -309.577, 55.6033, 1.03 ) }
    dend_13 { pt3dadd( 40.5965, -311.41, 55.9612, 0.15 ) }
    dend_13 { pt3dadd( 40.8425, -312.097, 56.1057, 0.22 ) }
    dend_13 { pt3dadd( 41.1718, -313.008, 56.2887, 0.07 ) }
    dend_13 { pt3dadd( 41.3797, -313.618, 56.3971, 0.88 ) }
    dend_13 { pt3dadd( 41.615, -314.34, 56.5236, 1.62 ) }
    dend_13 { pt3dadd( 42.1785, -316.038, 56.8527, 0.15 ) }
    dend_13 { pt3dadd( 42.4854, -316.869, 57.0268, 1.33 ) }
    dend_13 { pt3dadd( 43.0941, -318.437, 57.3792, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 43.2676, -318.916, 57.4921, 0.22 ) }
    dend_13 { pt3dadd( 43.7467, -320.45, 57.8647, 0.07 ) }
    dend_13 { pt3dadd( 43.909, -321.05, 58.0257, 0.96 ) }
    dend_13 { pt3dadd( 44.2748, -322.653, 58.4763, 0.15 ) }
    dend_13 { pt3dadd( 44.4384, -323.374, 58.6962, 1.11 ) }
    dend_13 { pt3dadd( 44.9658, -325.571, 59.4184, 0.15 ) }
    dend_13 { pt3dadd( 45.2132, -326.531, 59.7229, 1.11 ) }
    dend_13 { pt3dadd( 45.4449, -327.4, 59.9782, 1.47 ) }
    dend_13 { pt3dadd( 45.9686, -329.471, 60.531, 0.15 ) }
    dend_13 { pt3dadd( 46.159, -330.207, 60.7041, 0.88 ) }
    dend_13 { pt3dadd( 46.4138, -331.099, 60.8734, 1.33 ) }
    dend_13 { pt3dadd( 47.0218, -333.091, 61.1093, 0.15 ) }
    dend_13 { pt3dadd( 47.3346, -334.145, 61.1508, 0.96 ) }
    dend_13 { pt3dadd( 47.8735, -336.156, 61.0696, 0.15 ) }
    dend_13 { pt3dadd( 48.0407, -336.978, 60.9781, 0.15 ) }
    dend_13 { pt3dadd( 48.1578, -337.861, 60.8567, 0.74 ) }
    dend_13 { pt3dadd( 48.2055, -339.211, 60.6379, 0.44 ) }
    dend_13 { pt3dadd( 48.1541, -340.136, 60.4685, 1.11 ) }
    dend_13 { pt3dadd( 48.0655, -340.839, 60.3359, 1.7 ) }
    dend_13 { pt3dadd( 47.6248, -343.363, 59.8844, 0.15 ) }
    dend_13 { pt3dadd( 47.3473, -344.664, 59.6779, 1.33 ) }
    dend_13 { pt3dadd( 47.0453, -345.907, 59.5157, 0.15 ) }
    dend_13 { pt3dadd( 46.9172, -346.397, 59.4712, 0.74 ) }
    dend_13 { pt3dadd( 46.755, -346.994, 59.4468, 1.4 ) }
    dend_13 { pt3dadd( 46.5417, -347.779, 59.4422, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 9.41275, -92.9554, 22.0046, 1.03 ) }
    dend_12 { pt3dadd( 9.72444, -94.2311, 28.1897, 1.03 ) }
    dend_12 { pt3dadd( 9.82728, -94.4359, 29.4794, 1.03 ) }
    dend_12 { pt3dadd( 9.95882, -94.5858, 30.665, 1.03 ) }
    dend_12 { pt3dadd( 10.1088, -94.7331, 31.8083, 1.03 ) }
    dend_12 { pt3dadd( 10.2553, -94.8462, 32.6534, 1.03 ) }
    dend_12 { pt3dadd( 10.5019, -95.0125, 33.7875, 1.03 ) }
    dend_12 { pt3dadd( 10.8712, -95.1041, 34.4327, 0.88 ) }
    dend_12 { pt3dadd( 11.1882, -95.211, 35.0078, 0.88 ) }
    dend_12 { pt3dadd( 11.5322, -95.4753, 35.8445, 0.44 ) }
    dend_12 { pt3dadd( 11.766, -95.9805, 36.73, 0.59 ) }
    dend_12 { pt3dadd( 11.881, -96.4111, 37.3699, 0.22 ) }
    dend_12 { pt3dadd( 12.1371, -97.2518, 38.9056, 0.22 ) }
    dend_12 { pt3dadd( 12.3478, -97.7964, 40.1614, 0.44 ) }
    dend_12 { pt3dadd( 12.4874, -98.023, 40.9231, 1.4 ) }
    dend_12 { pt3dadd( 12.7875, -98.2537, 42.3104, 2.14 ) }
    dend_12 { pt3dadd( 13.3562, -98.3443, 44.2971, 0.59 ) }
    dend_12 { pt3dadd( 14.485, -98.1688, 47.2019, 0.59 ) }
    dend_12 { pt3dadd( 14.9926, -98.0184, 48.1087, 0.44 ) }
    dend_12 { pt3dadd( 16.0342, -97.6345, 49.5538, 0.81 ) }
    dend_12 { pt3dadd( 16.9697, -97.226, 50.6683, 1.99 ) }
    dend_12 { pt3dadd( 18.482, -96.5064, 52.1455, 0.22 ) }
    dend_12 { pt3dadd( 19.2488, -96.1581, 52.7529, 1.03 ) }
    dend_12 { pt3dadd( 20.4135, -95.6892, 53.5166, 0.22 ) }
    dend_12 { pt3dadd( 21.7356, -95.2274, 54.3516, 0.96 ) }
    dend_12 { pt3dadd( 22.6038, -94.9512, 54.8868, 1.92 ) }
    dend_12 { pt3dadd( 24.5625, -94.37, 56.3027, 0.22 ) }
    dend_12 { pt3dadd( 25.3396, -94.1193, 56.9711, 0.22 ) }
    dend_12 { pt3dadd( 25.7809, -93.9659, 57.3861, 0.22 ) }
    dend_12 { pt3dadd( 26.5382, -93.6854, 58.1328, 1.11 ) }
    dend_12 { pt3dadd( 27.5032, -93.3108, 59.0833, 2.58 ) }
    dend_12 { pt3dadd( 29.3741, -92.5074, 60.9393, 1.11 ) }
    dend_12 { pt3dadd( 30.2572, -92.0829, 61.8336, 0.44 ) }
    dend_12 { pt3dadd( 31.0452, -91.72, 62.6499, 0.44 ) }
    dend_12 { pt3dadd( 31.5189, -91.5262, 63.1727, 0.22 ) }
    dend_12 { pt3dadd( 31.9365, -91.399, 63.6412, 0.22 ) }
    dend_12 { pt3dadd( 32.3479, -91.3243, 64.106, 0.22 ) }
    dend_12 { pt3dadd( 33.0281, -91.2869, 64.9203, 1.4 ) }
    dend_12 { pt3dadd( 34.1412, -91.3854, 66.5671, 0.37 ) }
    dend_12 { pt3dadd( 34.8621, -91.5709, 68.0868, 0.29 ) }
    dend_12 { pt3dadd( 35.2961, -91.8326, 69.3654, 0.29 ) }
    dend_12 { pt3dadd( 35.3614, -91.9099, 69.6255, 0.29 ) }
    dend_12 { pt3dadd( 35.4874, -92.319, 70.5533, 0.29 ) }
    dend_12 { pt3dadd( 35.5254, -92.8187, 71.4334, 0.29 ) }
    dend_12 { pt3dadd( 35.5254, -93.7204, 72.7438, 0.59 ) }
    dend_12 { pt3dadd( 35.4906, -94.4509, 73.6518, 1.84 ) }
    dend_12 { pt3dadd( 35.4296, -95.142, 74.4429, 2.06 ) }
    dend_12 { pt3dadd( 35.2657, -96.7424, 76.1466, 0.52 ) }
    dend_12 { pt3dadd( 35.1424, -97.7101, 77.0598, 0.22 ) }
    dend_12 { pt3dadd( 34.9959, -98.6068, 77.8248, 0.22 ) }
    dend_12 { pt3dadd( 34.8537, -99.1962, 78.2757, 0.22 ) }
    dend_12 { pt3dadd( 34.6819, -99.5828, 78.5821, 0.52 ) }
    dend_12 { pt3dadd( 34.3281, -100.063, 79.0069, 0.81 ) }
    dend_12 { pt3dadd( 33.218, -100.975, 80.0336, 0.22 ) }
    dend_12 { pt3dadd( 32.3837, -101.431, 80.7412, 1.47 ) }
    dend_12 { pt3dadd( 31.8127, -101.649, 81.2218, 1.92 ) }
    dend_12 { pt3dadd( 30.5287, -101.985, 82.3382, 0.44 ) }
    dend_12 { pt3dadd( 29.9178, -102.071, 82.8826, 0.22 ) }
    dend_12 { pt3dadd( 29.2115, -102.042, 83.5263, 0.81 ) }
    dend_12 { pt3dadd( 28.084, -101.808, 84.5849, 0.22 ) }
    dend_12 { pt3dadd( 27.5065, -101.653, 85.1367, 0.22 ) }
    dend_12 { pt3dadd( 27.2116, -101.577, 85.4335, 0.22 ) }
    dend_12 { pt3dadd( 26.6631, -101.482, 86.0077, 0.59 ) }
    dend_12 { pt3dadd( 25.5299, -101.391, 87.2486, 0.37 ) }
    dend_12 { pt3dadd( 24.8247, -101.391, 88.0675, 0.37 ) }
    dend_12 { pt3dadd( 24.2758, -101.401, 88.8148, 0.37 ) }
    dend_12 { pt3dadd( 23.9058, -101.42, 89.4597, 0.37 ) }
    dend_12 { pt3dadd( 23.5505, -101.532, 90.3454, 0.37 ) }
    dend_12 { pt3dadd( 23.3888, -101.73, 91.0402, 0.37 ) }
    dend_12 { pt3dadd( 23.2972, -101.976, 91.6606, 0.37 ) }
    dend_12 { pt3dadd( 23.1768, -102.246, 92.4707, 0.37 ) }
    dend_12 { pt3dadd( 22.8431, -102.354, 93.299, 0.37 ) }
    dend_12 { pt3dadd( 22.1942, -102.431, 93.996, 0.37 ) }
    dend_12 { pt3dadd( 21.3528, -102.482, 94.5623, 0.37 ) }
    dend_12 { pt3dadd( 20.5141, -102.461, 94.962, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 20.0616, -102.419, 95.1143, 0.37 ) }
    dend_12 { pt3dadd( 18.2291, -102.06, 95.6039, 0.29 ) }
    dend_12 { pt3dadd( 16.3909, -101.417, 96.0164, 0.22 ) }
    dend_12 { pt3dadd( 15.8123, -101.163, 96.1328, 0.22 ) }
    dend_12 { pt3dadd( 14.6427, -100.6, 96.3993, 0.15 ) }
    dend_12 { pt3dadd( 13.821, -100.213, 96.6324, 0.59 ) }
    dend_12 { pt3dadd( 13.0447, -99.856, 96.8777, 0.29 ) }
    dend_12 { pt3dadd( 12.3441, -99.5714, 97.1395, 0.88 ) }
    dend_12 { pt3dadd( 11.1968, -99.1829, 97.6494, 0.96 ) }
    dend_12 { pt3dadd( 9.55088, -98.7954, 98.3673, 0.22 ) }
    dend_12 { pt3dadd( 8.56836, -98.6587, 98.7824, 1.33 ) }
    dend_12 { pt3dadd( 7.91807, -98.6141, 99.0449, 1.4 ) }
    dend_12 { pt3dadd( 6.35271, -98.6272, 99.6189, 0.15 ) }
    dend_12 { pt3dadd( 5.93439, -98.6714, 99.7817, 0.15 ) }
    dend_12 { pt3dadd( 5.37431, -98.7685, 100.018, 0.15 ) }
    dend_12 { pt3dadd( 4.96182, -98.8792, 100.195, 0.15 ) }
    dend_12 { pt3dadd( 4.68854, -98.955, 100.32, 0.81 ) }
    dend_12 { pt3dadd( 4.26441, -99.022, 100.529, 0.81 ) }
    dend_12 { pt3dadd( 2.82451, -99.0857, 101.289, 0.22 ) }
    dend_12 { pt3dadd( 2.01601, -99.0261, 101.705, 0.22 ) }
    dend_12 { pt3dadd( 1.23726, -98.9122, 102.091, 1.11 ) }
    dend_12 { pt3dadd( 0.483428, -98.7437, 102.444, 1.62 ) }
    dend_12 { pt3dadd( -1.18742, -98.2276, 103.153, 0.22 ) }
    dend_12 { pt3dadd( -2.15426, -97.8208, 103.508, 1.11 ) }
    dend_12 { pt3dadd( -3.4289, -97.154, 103.87, 0.22 ) }
    dend_12 { pt3dadd( -4.30968, -96.6693, 104.069, 0.22 ) }
    dend_12 { pt3dadd( -4.74133, -96.4192, 104.147, 1.03 ) }
    dend_12 { pt3dadd( -5.57035, -95.9238, 104.254, 1.03 ) }
    dend_12 { pt3dadd( -6.6858, -95.2358, 104.33, 0.22 ) }
    dend_12 { pt3dadd( -7.78671, -94.5072, 104.36, 0.52 ) }
    dend_12 { pt3dadd( -8.98928, -93.6392, 104.376, 0.15 ) }
    dend_12 { pt3dadd( -9.42256, -93.2865, 104.376, 0.15 ) }
    dend_12 { pt3dadd( -9.73924, -92.997, 104.395, 0.52 ) }
    dend_12 { pt3dadd( -10.1844, -92.5461, 104.441, 1.18 ) }
    dend_12 { pt3dadd( -11.4663, -91.1089, 104.621, 0.22 ) }
    dend_12 { pt3dadd( -12.0477, -90.3028, 104.683, 1.03 ) }
    dend_12 { pt3dadd( -12.3687, -89.7577, 104.695, 1.99 ) }
    dend_12 { pt3dadd( -13.4839, -87.5329, 104.656, 0.29 ) }
    dend_12 { pt3dadd( -13.7417, -86.9038, 104.603, 0.96 ) }
    dend_12 { pt3dadd( -14.0533, -85.9334, 104.456, 1.7 ) }
    dend_12 { pt3dadd( -14.4639, -83.906, 104.004, 0.22 ) }
    dend_12 { pt3dadd( -14.5713, -82.9339, 103.712, 0.22 ) }
    dend_12 { pt3dadd( -14.5845, -82.1262, 103.402, 0.96 ) }
    dend_12 { pt3dadd( -14.4395, -80.7327, 102.755, 0.07 ) }
    dend_12 { pt3dadd( -14.2914, -79.8883, 102.334, 0.74 ) }
    dend_12 { pt3dadd( -13.9944, -78.77, 101.738, 0.22 ) }
    dend_12 { pt3dadd( -13.5867, -77.663, 101.16, 0.22 ) }
    dend_12 { pt3dadd( -13.0254, -76.6995, 100.714, 0.66 ) }
    dend_12 { pt3dadd( -12.0615, -75.5003, 100.237, 0.07 ) }
    dend_12 { pt3dadd( -11.3619, -74.8345, 100.029, 0.22 ) }
    dend_12 { pt3dadd( -10.3725, -74.0552, 99.8742, 0.07 ) }
    dend_12 { pt3dadd( -9.36216, -73.3573, 99.788, 1.11 ) }
    dend_12 { pt3dadd( -6.61306, -71.681, 99.7903, 0.07 ) }
    dend_12 { pt3dadd( -5.97668, -71.3363, 99.84, 0.07 ) }
    dend_12 { pt3dadd( -5.51954, -71.1185, 99.9098, 0.29 ) }
    dend_12 { pt3dadd( -4.29616, -70.566, 100.183, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 34.0389, 16.4555, 37.7669, 0.22 ) }
    dend_7 { pt3dadd( 34.342, 16.9609, 38.5834, 0.22 ) }
    dend_7 { pt3dadd( 34.6585, 17.3463, 39.3131, 0.22 ) }
    dend_7 { pt3dadd( 34.9481, 17.6257, 39.9063, 0.52 ) }
    dend_7 { pt3dadd( 35.3692, 17.986, 40.6881, 1.7 ) }
    dend_7 { pt3dadd( 35.7724, 18.25, 41.3117, 2.06 ) }
    dend_7 { pt3dadd( 36.6503, 18.714, 42.5614, 0.52 ) }
    dend_7 { pt3dadd( 37.3155, 19.0155, 43.4593, 0.66 ) }
    dend_7 { pt3dadd( 37.9225, 19.2708, 44.2312, 2.14 ) }
    dend_7 { pt3dadd( 38.2818, 19.4233, 44.6773, 2.65 ) }
    dend_7 { pt3dadd( 39.544, 19.9959, 46.2261, 0.29 ) }
    dend_7 { pt3dadd( 40.1066, 20.2485, 46.9627, 0.22 ) }
    dend_7 { pt3dadd( 40.7245, 20.5125, 47.8083, 0.22 ) }
    dend_7 { pt3dadd( 41.204, 20.691, 48.4965, 1.25 ) }
    dend_7 { pt3dadd( 41.9136, 20.9206, 49.5563, 0.15 ) }
    dend_7 { pt3dadd( 42.5808, 21.1231, 50.5678, 0.81 ) }
    dend_7 { pt3dadd( 43.3891, 21.3891, 51.7044, 1.4 ) }
    dend_7 { pt3dadd( 43.9666, 21.5741, 52.3995, 2.21 ) }
    dend_7 { pt3dadd( 45.4447, 21.9904, 53.9032, 0.22 ) }
    dend_7 { pt3dadd( 46.1588, 22.1697, 54.5188, 0.88 ) }
    dend_7 { pt3dadd( 46.8201, 22.3261, 54.9986, 1.18 ) }
    dend_7 { pt3dadd( 48.1964, 22.692, 55.8115, 0.22 ) }
    dend_7 { pt3dadd( 48.8182, 22.8953, 56.1001, 0.59 ) }
    dend_7 { pt3dadd( 49.39, 23.1105, 56.3111, 1.11 ) }
    dend_7 { pt3dadd( 50.3172, 23.4755, 56.5805, 0.15 ) }
    dend_7 { pt3dadd( 50.687, 23.6193, 56.6968, 0.15 ) }
    dend_7 { pt3dadd( 51.0257, 23.7664, 56.8418, 0.15 ) }
    dend_7 { pt3dadd( 51.334, 23.9162, 57.0295, 0.37 ) }
    dend_7 { pt3dadd( 51.7643, 24.1712, 57.3821, 0.66 ) }
    dend_7 { pt3dadd( 52.7416, 24.8124, 58.3195, 0.15 ) }
    dend_7 { pt3dadd( 53.4255, 25.2734, 59.0677, 1.62 ) }
    dend_7 { pt3dadd( 54.1245, 25.7175, 59.8818, 0.29 ) }
    dend_7 { pt3dadd( 54.8644, 26.1483, 60.7926, 1.18 ) }
    dend_7 { pt3dadd( 55.8921, 26.6622, 62.1077, 0.22 ) }
    dend_7 { pt3dadd( 56.5898, 26.9464, 63.0146, 0.52 ) }
    dend_7 { pt3dadd( 57.4642, 27.2152, 64.1263, 1.25 ) }
    dend_7 { pt3dadd( 58.158, 27.3672, 65.0027, 2.14 ) }
    dend_7 { pt3dadd( 59.3443, 27.4854, 66.4745, 0.59 ) }
    dend_7 { pt3dadd( 60.1036, 27.4891, 67.4042, 0.59 ) }
    dend_7 { pt3dadd( 60.8546, 27.434, 68.2862, 0.22 ) }
    dend_7 { pt3dadd( 61.7256, 27.3581, 69.3069, 1.55 ) }
    dend_7 { pt3dadd( 62.1574, 27.334, 69.8154, 1.55 ) }
    dend_7 { pt3dadd( 63.2878, 27.3823, 71.2136, 0.22 ) }
    dend_7 { pt3dadd( 63.6267, 27.4402, 71.665, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 64.0861, 27.6014, 72.2556, 0.22 ) }
    dend_7 { pt3dadd( 64.523, 27.8172, 72.8422, 0.96 ) }
    dend_7 { pt3dadd( 64.9853, 28.1375, 73.4906, 1.25 ) }
    dend_7 { pt3dadd( 65.7786, 28.8651, 74.6093, 0.22 ) }
    dend_7 { pt3dadd( 66.3726, 29.5989, 75.4398, 0.22 ) }
    dend_7 { pt3dadd( 67.0239, 30.4259, 76.339, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 34.0389, 16.4555, 37.7669, 0.22 ) }
    dend_4 { pt3dadd( 34.578, 15.6038, 37.8918, 0.22 ) }
    dend_4 { pt3dadd( 34.8287, 15.2403, 37.9185, 0.37 ) }
    dend_4 { pt3dadd( 35.2398, 14.7012, 37.9495, 0.66 ) }
    dend_4 { pt3dadd( 35.7122, 14.0954, 38.0286, 0.66 ) }
    dend_4 { pt3dadd( 36.1407, 13.5491, 38.1444, 0.15 ) }
    dend_4 { pt3dadd( 36.5033, 13.0817, 38.2763, 1.47 ) }
    dend_4 { pt3dadd( 36.9771, 12.4557, 38.4442, 3.24 ) }
    dend_4 { pt3dadd( 37.2839, 12.0661, 38.5672, 3.24 ) }
    dend_4 { pt3dadd( 38.2642, 10.9054, 39.0184, 0.29 ) }
    dend_4 { pt3dadd( 38.6522, 10.4532, 39.2314, 0.44 ) }
    dend_4 { pt3dadd( 39.1569, 9.85042, 39.5448, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -6.81089, 43.2388, 35.548, 0.22 ) }
    dend_60 { pt3dadd( -8.37476, 44.585, 36.1074, 0.22 ) }
    dend_60 { pt3dadd( -9.11639, 45.2283, 36.3664, 1.55 ) }
    dend_60 { pt3dadd( -10.1759, 46.0847, 36.6224, 3.1 ) }
    dend_60 { pt3dadd( -12.1589, 47.6027, 36.9486, 0.15 ) }
    dend_60 { pt3dadd( -12.8683, 48.1169, 37.0186, 0.66 ) }
    dend_60 { pt3dadd( -14.0581, 48.9311, 37.0821, 0.15 ) }
    dend_60 { pt3dadd( -15.0038, 49.4833, 37.0455, 1.18 ) }
    dend_60 { pt3dadd( -16.8004, 50.379, 36.8627, 0.07 ) }
    dend_60 { pt3dadd( -17.8238, 50.8093, 36.7124, 0.07 ) }
    dend_60 { pt3dadd( -18.6723, 51.1248, 36.5595, 0.07 ) }
    dend_60 { pt3dadd( -19.6091, 51.4323, 36.4046, 0.96 ) }
    dend_60 { pt3dadd( -21.4318, 51.9712, 36.1487, 0.15 ) }
    dend_60 { pt3dadd( -22.8438, 52.3935, 36.0108, 0.15 ) }
    dend_60 { pt3dadd( -23.6797, 52.6569, 36.0041, 1.03 ) }
    dend_60 { pt3dadd( -24.5414, 52.9245, 36.0439, 1.99 ) }
    dend_60 { pt3dadd( -26.185, 53.4181, 36.2818, 0.15 ) }
    dend_60 { pt3dadd( -26.8855, 53.6119, 36.4358, 0.15 ) }
    dend_60 { pt3dadd( -27.3797, 53.7297, 36.5794, 0.15 ) }
    dend_60 { pt3dadd( -28.1691, 53.8907, 36.8534, 0.88 ) }
    dend_60 { pt3dadd( -29.144, 54.0318, 37.1917, 1.62 ) }
    dend_60 { pt3dadd( -31.2023, 54.2319, 37.9241, 0.15 ) }
    dend_60 { pt3dadd( -32.001, 54.2734, 38.2106, 0.15 ) }
    dend_60 { pt3dadd( -32.9014, 54.29, 38.5189, 0.44 ) }
    dend_60 { pt3dadd( -33.9171, 54.2558, 38.8371, 0.15 ) }
    dend_60 { pt3dadd( -35.31, 54.1508, 39.3048, 0.22 ) }
    dend_60 { pt3dadd( -36.627, 53.9914, 39.7825, 0.15 ) }
    dend_60 { pt3dadd( -36.9373, 53.9333, 39.9067, 0.74 ) }
    dend_60 { pt3dadd( -38.0413, 53.686, 40.3992, 1.25 ) }
    dend_60 { pt3dadd( -39.787, 53.244, 41.2478, 0.22 ) }
    dend_60 { pt3dadd( -41.2999, 52.8026, 42.0497, 1.11 ) }
    dend_60 { pt3dadd( -41.9776, 52.5668, 42.4327, 1.84 ) }
    dend_60 { pt3dadd( -43.4132, 51.8625, 43.3248, 0.15 ) }
    dend_60 { pt3dadd( -43.881, 51.5604, 43.6515, 0.15 ) }
    dend_60 { pt3dadd( -44.3572, 51.2091, 44.0116, 0.15 ) }
    dend_60 { pt3dadd( -44.6846, 50.9362, 44.274, 0.81 ) }
    dend_60 { pt3dadd( -45.5708, 50.0875, 44.9357, 2.14 ) }
    dend_60 { pt3dadd( -46.9558, 48.4678, 46.1061, 0.22 ) }
    dend_60 { pt3dadd( -47.5374, 47.5579, 46.6726, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -6.81089, 43.2388, 35.548, 0.22 ) }
    dend_57 { pt3dadd( -7.08731, 44.7165, 37.1688, 0.22 ) }
    dend_57 { pt3dadd( -7.32898, 45.7892, 38.2782, 0.22 ) }
    dend_57 { pt3dadd( -7.73504, 47.3382, 39.8464, 0.37 ) }
    dend_57 { pt3dadd( -7.92071, 47.9467, 40.4867, 0.37 ) }
    dend_57 { pt3dadd( -8.16557, 48.6817, 41.281, 0.96 ) }
    dend_57 { pt3dadd( -8.40287, 49.3882, 42.0354, 0.15 ) }
    dend_57 { pt3dadd( -8.51828, 49.7356, 42.3847, 0.15 ) }
    dend_57 { pt3dadd( -8.6006, 49.9329, 42.5898, 0.22 ) }
    dend_57 { pt3dadd( -8.95403, 50.5753, 43.2653, 0.15 ) }
    dend_57 { pt3dadd( -9.24379, 51.0714, 43.8403, 1.03 ) }
    dend_57 { pt3dadd( -9.58952, 51.7421, 44.6552, 1.99 ) }
    dend_57 { pt3dadd( -9.98409, 52.832, 45.9452, 0.22 ) }
    dend_57 { pt3dadd( -10.1519, 53.5969, 46.7175, 0.15 ) }
    dend_57 { pt3dadd( -10.1877, 53.9341, 47.017, 0.15 ) }
    dend_57 { pt3dadd( -10.1999, 54.64, 47.5685, 1.18 ) }
    dend_57 { pt3dadd( -10.1618, 55.7418, 48.3645, 0.15 ) }
    dend_57 { pt3dadd( -10.1168, 56.4038, 48.8295, 0.52 ) }
    dend_57 { pt3dadd( -10.0483, 57.3131, 49.427, 0.22 ) }
    dend_57 { pt3dadd( -10.0073, 58.2005, 50.0146, 1.33 ) }
    dend_57 { pt3dadd( -10.0175, 59.182, 50.7235, 2.88 ) }
    dend_57 { pt3dadd( -10.1847, 60.905, 52.1191, 0.22 ) }
    dend_57 { pt3dadd( -10.3365, 61.5235, 52.6893, 0.22 ) }
    dend_57 { pt3dadd( -10.5724, 62.1842, 53.3686, 0.74 ) }
    dend_57 { pt3dadd( -10.8735, 62.9019, 54.1917, 0.15 ) }
    dend_57 { pt3dadd( -11.127, 63.4717, 54.8805, 0.15 ) }
    dend_57 { pt3dadd( -11.3418, 63.934, 55.5068, 0.15 ) }
    dend_57 { pt3dadd( -11.5405, 64.4111, 56.3295, 0.74 ) }
    dend_57 { pt3dadd( -11.6351, 64.8234, 57.1747, 0.74 ) }
    dend_57 { pt3dadd( -11.6056, 65.0437, 57.8781, 0.74 ) }
    dend_57 { pt3dadd( -11.5046, 65.1709, 58.6132, 0.74 ) }
    dend_57 { pt3dadd( -11.4679, 65.1933, 58.8998, 0.74 ) }
    dend_57 { pt3dadd( -11.3427, 65.2262, 60.0819, 0.74 ) }
    dend_57 { pt3dadd( -11.2918, 65.225, 60.4896, 0.74 ) }
    dend_57 { pt3dadd( -11.1473, 65.2168, 61.5946, 0.74 ) }
    dend_57 { pt3dadd( -11.0183, 65.2519, 62.297, 0.74 ) }
    dend_57 { pt3dadd( -10.6709, 65.4427, 63.5833, 0.96 ) }
    dend_57 { pt3dadd( -10.3311, 65.6834, 64.488, 0.96 ) }
    dend_57 { pt3dadd( -10.0387, 65.9334, 65.1019, 0.96 ) }
    dend_57 { pt3dadd( -9.58758, 66.3286, 65.9324, 0.96 ) }
    dend_57 { pt3dadd( -8.99451, 66.8846, 66.9326, 0.66 ) }
    dend_57 { pt3dadd( -8.37057, 67.4881, 67.938, 0.88 ) }
    dend_57 { pt3dadd( -7.75699, 68.1596, 69.0306, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -7.18032, 68.9488, 70.3214, 0.37 ) }
    dend_57 { pt3dadd( -6.98622, 69.3332, 70.9238, 0.37 ) }
    dend_57 { pt3dadd( -6.73885, 70.069, 71.9534, 1.4 ) }
    dend_57 { pt3dadd( -6.64747, 70.488, 72.4893, 1.62 ) }
    dend_57 { pt3dadd( -6.47899, 71.5631, 73.7028, 0.44 ) }
    dend_57 { pt3dadd( -6.37585, 72.3161, 74.4547, 0.44 ) }
    dend_57 { pt3dadd( -6.23348, 73.1325, 75.157, 1.18 ) }
    dend_57 { pt3dadd( -5.96711, 74.2965, 76.0293, 0.22 ) }
    dend_57 { pt3dadd( -5.78019, 74.9023, 76.4234, 0.22 ) }
    dend_57 { pt3dadd( -5.50351, 75.6287, 76.8395, 1.25 ) }
    dend_57 { pt3dadd( -5.18319, 76.3951, 77.248, 1.92 ) }
    dend_57 { pt3dadd( -4.52796, 78.015, 78.1952, 0.15 ) }
    dend_57 { pt3dadd( -4.29521, 78.6438, 78.6237, 0.88 ) }
    dend_57 { pt3dadd( -4.06085, 79.4181, 79.2231, 1.92 ) }
    dend_57 { pt3dadd( -3.70375, 80.9287, 80.5539, 0.22 ) }
    dend_57 { pt3dadd( -3.55043, 81.7174, 81.3628, 0.74 ) }
    dend_57 { pt3dadd( -3.36883, 82.7632, 82.5629, 1.7 ) }
    dend_57 { pt3dadd( -3.22158, 83.5154, 83.5159, 0.07 ) }
    dend_57 { pt3dadd( -3.1128, 83.8996, 84.0158, 0.96 ) }
    dend_57 { pt3dadd( -2.76015, 84.883, 85.3423, 0.07 ) }
    dend_57 { pt3dadd( -2.46941, 85.5025, 86.1904, 0.07 ) }
    dend_57 { pt3dadd( -2.18127, 85.9752, 86.8152, 0.07 ) }
    dend_57 { pt3dadd( -1.62951, 86.6882, 87.8101, 0.37 ) }
    dend_57 { pt3dadd( -1.07636, 87.2863, 88.8219, 0.59 ) }
    dend_57 { pt3dadd( -0.777282, 87.5793, 89.4188, 0.59 ) }
    dend_57 { pt3dadd( -0.560411, 87.7816, 89.9439, 0.59 ) }
    dend_57 { pt3dadd( -0.470613, 87.8965, 90.2736, 0.59 ) }
    dend_57 { pt3dadd( -0.286617, 88.3748, 91.5072, 0.15 ) }
    dend_57 { pt3dadd( -0.233968, 88.791, 92.3343, 0.07 ) }
    dend_57 { pt3dadd( -0.188429, 89.1389, 92.8478, 0.07 ) }
    dend_57 { pt3dadd( -0.147543, 89.4742, 93.2623, 0.07 ) }
    dend_57 { pt3dadd( -0.119128, 90.049, 93.905, 0.88 ) }
    dend_57 { pt3dadd( -0.115079, 90.9709, 94.9423, 0.22 ) }
    dend_57 { pt3dadd( -0.125197, 91.7287, 95.9045, 0.22 ) }
    dend_57 { pt3dadd( -0.157863, 92.3844, 96.8938, 1.62 ) }
    dend_57 { pt3dadd( -0.239337, 92.947, 97.9974, 2.21 ) }
    dend_57 { pt3dadd( -0.409771, 93.6705, 99.9483, 0.37 ) }
    dend_57 { pt3dadd( -0.507842, 94.0006, 101.306, 0.37 ) }
    dend_57 { pt3dadd( -0.597514, 94.2274, 103.344, 1.33 ) }
    dend_57 { pt3dadd( -0.582149, 94.2125, 104.003, 1.77 ) }
    dend_57 { pt3dadd( -0.415619, 94.0061, 105.415, 0.29 ) }
    dend_57 { pt3dadd( -0.160559, 93.6713, 106.625, 0.29 ) }
    dend_57 { pt3dadd( 0.0637392, 93.2972, 107.615, 0.59 ) }
    dend_57 { pt3dadd( 0.265168, 92.8852, 108.632, 1.18 ) }
    dend_57 { pt3dadd( 0.522969, 92.23, 110.284, 0.37 ) }
    dend_57 { pt3dadd( 0.726511, 91.5565, 112.019, 1.03 ) }
    dend_57 { pt3dadd( 0.793775, 91.0205, 113.401, 1.4 ) }
    dend_57 { pt3dadd( 0.664741, 89.9486, 116.131, 0.07 ) }
    dend_57 { pt3dadd( 0.476168, 89.4659, 117.372, 0.59 ) }
    dend_57 { pt3dadd( 0.11547, 89.0468, 118.563, 0.15 ) }
    dend_57 { pt3dadd( -0.233937, 88.8206, 119.276, 0.15 ) }
    dend_57 { pt3dadd( -0.873296, 88.5273, 120.258, 0.15 ) }
    dend_57 { pt3dadd( -1.21136, 88.4134, 120.699, 1.03 ) }
    dend_57 { pt3dadd( -1.58847, 88.3042, 121.101, 1.4 ) }
    dend_57 { pt3dadd( -2.99684, 87.916, 122.493, 0.15 ) }
    dend_57 { pt3dadd( -3.51017, 87.784, 123.005, 0.15 ) }
    dend_57 { pt3dadd( -4.38602, 87.5552, 123.982, 0.15 ) }
    dend_57 { pt3dadd( -4.80684, 87.4294, 124.521, 1.11 ) }
    dend_57 { pt3dadd( -5.18467, 87.3042, 125.069, 1.62 ) }
    dend_57 { pt3dadd( -6.03833, 87.0046, 126.471, 0.29 ) }
    dend_57 { pt3dadd( -6.53687, 86.8354, 127.383, 0.07 ) }
    dend_57 { pt3dadd( -7.02283, 86.7341, 128.237, 0.07 ) }
    dend_57 { pt3dadd( -7.33028, 86.6977, 128.764, 0.88 ) }
    dend_57 { pt3dadd( -8.03606, 86.6567, 130.028, 0.07 ) }
    dend_57 { pt3dadd( -8.36627, 86.6689, 130.667, 0.22 ) }
    dend_57 { pt3dadd( -8.90738, 86.7768, 131.805, 0.07 ) }
    dend_57 { pt3dadd( -9.31161, 86.9121, 132.587, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 4.30289, 29.4781, 17.0796, 0.52 ) }
    dend_51 { pt3dadd( 7.16608, 28.303, 15.2683, 0.52 ) }
    dend_51 { pt3dadd( 7.8457, 27.9531, 14.883, 2.21 ) }
    dend_51 { pt3dadd( 9.03559, 27.2246, 14.2472, 2.88 ) }
    dend_51 { pt3dadd( 10.9999, 25.834, 13.225, 0.96 ) }
    dend_51 { pt3dadd( 12.3821, 24.7164, 12.4606, 0.15 ) }
    dend_51 { pt3dadd( 13.1324, 24.0362, 11.9811, 0.59 ) }
    dend_51 { pt3dadd( 13.8382, 23.2052, 11.5781, 0.15 ) }
    dend_51 { pt3dadd( 14.2883, 22.5895, 11.3027, 0.22 ) }
    dend_51 { pt3dadd( 14.6066, 22.0229, 11.0601, 0.22 ) }
    dend_51 { pt3dadd( 15.1055, 20.8213, 10.484, 0.22 ) }
    dend_51 { pt3dadd( 15.6372, 19.1364, 9.64818, 1.11 ) }
    dend_51 { pt3dadd( 15.8528, 18.2164, 9.17562, 2.29 ) }
    dend_51 { pt3dadd( 15.9528, 17.6404, 8.86468, 2.58 ) }
    dend_51 { pt3dadd( 16.187, 15.8119, 7.86144, 0.15 ) }
    dend_51 { pt3dadd( 16.2548, 14.7235, 7.30371, 0.15 ) }
    dend_51 { pt3dadd( 16.2111, 13.7394, 6.87141, 0.29 ) }
    dend_51 { pt3dadd( 16.1157, 13.0264, 6.59543, 1.03 ) }
    dend_51 { pt3dadd( 15.9826, 12.2937, 6.3177, 1.99 ) }
    dend_51 { pt3dadd( 15.8768, 11.7623, 6.13494, 2.29 ) }
    dend_51 { pt3dadd( 15.4937, 10.0048, 5.67567, 0.44 ) }
    dend_51 { pt3dadd( 15.2492, 8.74693, 5.42002, 0.29 ) }
    dend_51 { pt3dadd( 15.1299, 8.06355, 5.3156, 0.44 ) }
    dend_51 { pt3dadd( 15.0264, 7.40425, 5.23649, 0.52 ) }
    dend_51 { pt3dadd( 14.8507, 6.20957, 5.15329, 0.22 ) }
    dend_51 { pt3dadd( 14.7571, 5.40521, 5.13549, 0.22 ) }
    dend_51 { pt3dadd( 14.6722, 4.53131, 5.16737, 1.33 ) }
    dend_51 { pt3dadd( 14.6024, 3.67469, 5.22895, 2.29 ) }
    dend_51 { pt3dadd( 14.5339, 2.96878, 5.29632, 2.29 ) }
    dend_51 { pt3dadd( 14.339, 1.00476, 5.52506, 0.15 ) }
    dend_51 { pt3dadd( 14.242, 0.175037, 5.62999, 0.15 ) }
    dend_51 { pt3dadd( 14.1605, -0.493041, 5.70885, 0.15 ) }
    dend_51 { pt3dadd( 14.0742, -1.13213, 5.78474, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 13.9346, -2.13528, 5.88004, 1.33 ) }
    dend_51 { pt3dadd( 13.8258, -2.91479, 5.89188, 1.03 ) }
    dend_51 { pt3dadd( 13.5769, -4.56525, 5.74018, 0.22 ) }
    dend_51 { pt3dadd( 13.4544, -5.35597, 5.60399, 0.22 ) }
    dend_51 { pt3dadd( 13.3342, -6.12503, 5.41142, 0.66 ) }
    dend_51 { pt3dadd( 13.1688, -7.23369, 5.08436, 0.22 ) }
    dend_51 { pt3dadd( 12.9274, -8.65034, 4.59861, 0.29 ) }
    dend_51 { pt3dadd( 12.76, -9.54813, 4.29138, 0.59 ) }
    dend_51 { pt3dadd( 12.6366, -10.232, 4.03338, 1.33 ) }
    dend_51 { pt3dadd( 12.4472, -11.2093, 3.64299, 2.14 ) }
    dend_51 { pt3dadd( 12.1112, -12.8847, 2.95331, 0.22 ) }
    dend_51 { pt3dadd( 11.8627, -14.0295, 2.51389, 0.22 ) }
    dend_51 { pt3dadd( 11.6308, -15.0005, 2.25832, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 4.30289, 29.4781, 17.0796, 0.52 ) }
    dend_40 { pt3dadd( 4.52604, 30.0815, 18.2221, 0.52 ) }
    dend_40 { pt3dadd( 4.79879, 30.4147, 19.2347, 0.52 ) }
    dend_40 { pt3dadd( 5.2158, 30.6395, 20.5077, 0.52 ) }
    dend_40 { pt3dadd( 5.45793, 30.6685, 21.1717, 0.52 ) }
    dend_40 { pt3dadd( 6.07361, 30.6612, 22.7063, 0.81 ) }
    dend_40 { pt3dadd( 6.56341, 30.6604, 23.8257, 1.18 ) }
    dend_40 { pt3dadd( 7.30836, 30.5525, 25.2081, 0.96 ) }
    dend_40 { pt3dadd( 7.88047, 30.428, 26.1642, 1.25 ) }
    dend_40 { pt3dadd( 8.5269, 30.2409, 27.1701, 0.37 ) }
    dend_40 { pt3dadd( 8.93845, 30.1437, 27.7404, 0.37 ) }
    dend_40 { pt3dadd( 9.45388, 30.0311, 28.4124, 0.15 ) }
    dend_40 { pt3dadd( 10.1103, 29.9387, 29.1955, 0.15 ) }
    dend_40 { pt3dadd( 10.8819, 29.978, 30.0194, 1.18 ) }
    dend_40 { pt3dadd( 11.3467, 30.0756, 30.5082, 2.43 ) }
    dend_40 { pt3dadd( 12.1671, 30.2978, 31.3177, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -11.9757, 106.808, 5.16621, 0.59 ) }
    dend_37 { pt3dadd( -12.3334, 108.3, 5.03611, 0.59 ) }
    dend_37 { pt3dadd( -12.7257, 109.611, 4.90496, 0.29 ) }
    dend_37 { pt3dadd( -13.1505, 110.843, 4.78004, 0.96 ) }
    dend_37 { pt3dadd( -13.5004, 111.78, 4.69637, 0.07 ) }
    dend_37 { pt3dadd( -13.9236, 112.786, 4.62455, 0.07 ) }
    dend_37 { pt3dadd( -14.1734, 113.356, 4.59019, 0.22 ) }
    dend_37 { pt3dadd( -14.5433, 114.045, 4.57231, 0.88 ) }
    dend_37 { pt3dadd( -14.7588, 114.454, 4.57661, 1.47 ) }
    dend_37 { pt3dadd( -15.3131, 115.616, 4.54, 0.07 ) }
    dend_37 { pt3dadd( -15.6095, 116.39, 4.45698, 0.07 ) }
    dend_37 { pt3dadd( -15.7224, 116.799, 4.40794, 0.22 ) }
    dend_37 { pt3dadd( -15.7985, 117.11, 4.37528, 0.22 ) }
    dend_37 { pt3dadd( -15.9859, 117.968, 4.30323, 0.07 ) }
    dend_37 { pt3dadd( -16.1129, 118.747, 4.23419, 0.07 ) }
    dend_37 { pt3dadd( -16.1761, 119.257, 4.16989, 0.66 ) }
    dend_37 { pt3dadd( -16.247, 119.831, 4.07146, 0.66 ) }
    dend_37 { pt3dadd( -16.3817, 120.759, 3.88453, 0.15 ) }
    dend_37 { pt3dadd( -16.4884, 121.48, 3.72486, 1.03 ) }
    dend_37 { pt3dadd( -16.5983, 122.238, 3.5464, 1.77 ) }
    dend_37 { pt3dadd( -16.7618, 123.656, 3.21124, 0.15 ) }
    dend_37 { pt3dadd( -16.8612, 124.611, 2.99626, 0.22 ) }
    dend_37 { pt3dadd( -16.9047, 125.001, 2.90485, 0.66 ) }
    dend_37 { pt3dadd( -16.9688, 125.456, 2.81636, 0.37 ) }
    dend_37 { pt3dadd( -17.1236, 126.242, 2.72609, 1.11 ) }
    dend_37 { pt3dadd( -17.2915, 126.86, 2.71358, 1.11 ) }
    dend_37 { pt3dadd( -17.7732, 128.306, 2.83409, 0.22 ) }
    dend_37 { pt3dadd( -18.118, 129.154, 2.9593, 1.03 ) }
    dend_37 { pt3dadd( -18.5838, 130.131, 3.13353, 1.62 ) }
    dend_37 { pt3dadd( -19.0693, 131.031, 3.32481, 1.99 ) }
    dend_37 { pt3dadd( -19.5671, 131.865, 3.46074, 0.52 ) }
    dend_37 { pt3dadd( -20.2778, 132.964, 3.5578, 0.22 ) }
    dend_37 { pt3dadd( -21.0142, 134.051, 3.54003, 0.22 ) }
    dend_37 { pt3dadd( -21.3902, 134.595, 3.4609, 0.88 ) }
    dend_37 { pt3dadd( -21.9555, 135.396, 3.17417, 1.55 ) }
    dend_37 { pt3dadd( -23.1353, 136.968, 2.3641, 0.15 ) }
    dend_37 { pt3dadd( -23.6129, 137.611, 1.9834, 0.22 ) }
    dend_37 { pt3dadd( -24.0171, 138.186, 1.63006, 0.07 ) }
    dend_37 { pt3dadd( -24.6366, 139.137, 1.05018, 1.33 ) }
    dend_37 { pt3dadd( -25.5204, 140.575, 0.296067, 0.07 ) }
    dend_37 { pt3dadd( -25.7997, 141.041, 0.0586945, 0.37 ) }
    dend_37 { pt3dadd( -26.3251, 141.997, -0.243614, 0.07 ) }
    dend_37 { pt3dadd( -26.8712, 143.089, -0.411353, 0.22 ) }
    dend_37 { pt3dadd( -27.3249, 144.117, -0.338047, 1.55 ) }
    dend_37 { pt3dadd( -27.5855, 144.974, 0.00867724, 1.55 ) }
    dend_37 { pt3dadd( -30.1618, 154.011, -2.35718, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -11.9757, 106.808, 5.16621, 0.22 ) }
    dend_36 { pt3dadd( -13.1963, 108.42, 5.0402, 0.22 ) }
    dend_36 { pt3dadd( -13.7543, 109.199, 4.96822, 0.07 ) }
    dend_36 { pt3dadd( -14.3619, 110.103, 4.86948, 1.11 ) }
    dend_36 { pt3dadd( -15.2493, 111.585, 4.69802, 0.07 ) }
    dend_36 { pt3dadd( -15.6183, 112.29, 4.61543, 0.07 ) }
    dend_36 { pt3dadd( -15.7953, 112.666, 4.57259, 0.52 ) }
    dend_36 { pt3dadd( -16.0382, 113.403, 4.48192, 1.47 ) }
    dend_36 { pt3dadd( -16.2866, 114.345, 4.37189, 0.07 ) }
    dend_36 { pt3dadd( -16.4678, 115.185, 4.27592, 0.15 ) }
    dend_36 { pt3dadd( -16.5933, 116.006, 4.2019, 0.88 ) }
    dend_36 { pt3dadd( -16.687, 116.804, 4.15291, 1.4 ) }
    dend_36 { pt3dadd( -16.8045, 118.059, 4.08052, 0.07 ) }
    dend_36 { pt3dadd( -16.8529, 118.657, 4.05399, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -43.6411, -122.478, -59.5806, 0.15 ) }
    dend_30 { pt3dadd( -45.344, -132.786, -62.1866, 0.15 ) }
    dend_30 { pt3dadd( -47.0121, -143.35, -63.5714, 0.15 ) }
    dend_30 { pt3dadd( -47.7822, -153.621, -66.6813, 0.15 ) }
    dend_30 { pt3dadd( -46.3201, -163.906, -69.4367, 0.15 ) }
    dend_30 { pt3dadd( -43.7318, -173.769, -72.7497, 0.15 ) }
    dend_30 { pt3dadd( -40.9619, -183.697, -75.7121, 0.15 ) }
    dend_30 { pt3dadd( -37.3938, -193.164, -79.1983, 0.15 ) }
    dend_30 { pt3dadd( -33.9755, -203.093, -81.3692, 0.15 ) }
    dend_30 { pt3dadd( -29.2847, -212.314, -84.0521, 0.15 ) }
    dend_30 { pt3dadd( -24.185, -221.363, -86.5354, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( -19.6547, -231.066, -86.879, 0.15 ) }
    dend_30 { pt3dadd( -15.6207, -241.004, -87.022, 0.15 ) }
    dend_30 { pt3dadd( -11.573, -250.868, -88.1398, 0.15 ) }
    dend_30 { pt3dadd( -8.30549, -260.828, -90.4126, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -43.6411, -122.478, -59.5806, 1.03 ) }
    dend_29 { pt3dadd( -45.3569, -130.603, -61.336, 0.15 ) }
    dend_29 { pt3dadd( -48.516, -138.406, -62.4725, 0.15 ) }
    dend_29 { pt3dadd( -52.4618, -145.801, -63.7964, 0.15 ) }
    dend_29 { pt3dadd( -57.9569, -152.178, -64.6731, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -7.21964, -158.261, 32.8887, 0.22 ) }
    dend_24 { pt3dadd( -6.82877, -159.269, 33.2982, 0.22 ) }
    dend_24 { pt3dadd( -6.6294, -159.909, 33.5487, 0.22 ) }
    dend_24 { pt3dadd( -6.52647, -160.39, 33.7126, 0.88 ) }
    dend_24 { pt3dadd( -6.421, -161.099, 33.9271, 1.25 ) }
    dend_24 { pt3dadd( -6.29976, -162.192, 34.2448, 0.15 ) }
    dend_24 { pt3dadd( -6.2328, -163.022, 34.4676, 0.15 ) }
    dend_24 { pt3dadd( -6.22846, -163.699, 34.6308, 0.66 ) }
    dend_24 { pt3dadd( -6.26332, -164.711, 34.8396, 0.15 ) }
    dend_24 { pt3dadd( -6.28878, -165.172, 34.9259, 0.44 ) }
    dend_24 { pt3dadd( -6.30545, -165.508, 34.9803, 0.44 ) }
    dend_24 { pt3dadd( -6.31301, -166.441, 35.1249, 0.15 ) }
    dend_24 { pt3dadd( -6.2931, -167.115, 35.2271, 0.15 ) }
    dend_24 { pt3dadd( -6.25494, -167.63, 35.3104, 1.18 ) }
    dend_24 { pt3dadd( -6.188, -168.141, 35.4015, 2.14 ) }
    dend_24 { pt3dadd( -6.07155, -168.901, 35.5344, 1.03 ) }
    dend_24 { pt3dadd( -5.95534, -169.636, 35.6505, 0.15 ) }
    dend_24 { pt3dadd( -5.85094, -170.212, 35.7418, 0.15 ) }
    dend_24 { pt3dadd( -5.76827, -170.67, 35.8064, 0.37 ) }
    dend_24 { pt3dadd( -5.66522, -171.241, 35.8706, 0.22 ) }
    dend_24 { pt3dadd( -5.61307, -171.549, 35.8875, 0.66 ) }
    dend_24 { pt3dadd( -5.54374, -171.962, 35.8913, 0.81 ) }
    dend_24 { pt3dadd( -5.37868, -172.839, 35.8709, 0.22 ) }
    dend_24 { pt3dadd( -5.2949, -173.264, 35.8571, 1.03 ) }
    dend_24 { pt3dadd( -5.15593, -174.03, 35.8152, 1.84 ) }
    dend_24 { pt3dadd( -4.97123, -175.143, 35.739, 0.22 ) }
    dend_24 { pt3dadd( -4.91484, -175.506, 35.7166, 0.22 ) }
    dend_24 { pt3dadd( -4.85359, -175.93, 35.6987, 0.22 ) }
    dend_24 { pt3dadd( -4.79768, -176.345, 35.6931, 0.22 ) }
    dend_24 { pt3dadd( -4.69607, -176.951, 35.7181, 0.96 ) }
    dend_24 { pt3dadd( -4.43768, -178.209, 35.843, 0.15 ) }
    dend_24 { pt3dadd( -4.32772, -178.65, 35.9122, 0.15 ) }
    dend_24 { pt3dadd( -4.20798, -179.117, 35.9996, 0.96 ) }
    dend_24 { pt3dadd( -4.07362, -179.655, 36.1117, 1.92 ) }
    dend_24 { pt3dadd( -3.76448, -180.856, 36.391, 0.22 ) }
    dend_24 { pt3dadd( -3.65066, -181.278, 36.5012, 0.22 ) }
    dend_24 { pt3dadd( -3.54044, -181.65, 36.6023, 0.15 ) }
    dend_24 { pt3dadd( -3.33772, -182.318, 36.7816, 0.15 ) }
    dend_24 { pt3dadd( -3.22564, -182.714, 36.8839, 0.81 ) }
    dend_24 { pt3dadd( -3.13515, -183.118, 36.9921, 1.62 ) }
    dend_24 { pt3dadd( -3.00731, -183.927, 37.2189, 0.15 ) }
    dend_24 { pt3dadd( -2.91957, -184.559, 37.3969, 0.15 ) }
    dend_24 { pt3dadd( -2.86288, -184.909, 37.4996, 0.15 ) }
    dend_24 { pt3dadd( -2.76242, -185.457, 37.6658, 0.88 ) }
    dend_24 { pt3dadd( -2.62368, -186.279, 37.9047, 0.15 ) }
    dend_24 { pt3dadd( -2.55703, -186.7, 38.0199, 0.96 ) }
    dend_24 { pt3dadd( -2.4491, -187.469, 38.2135, 2.21 ) }
    dend_24 { pt3dadd( -2.25946, -188.912, 38.5538, 0.15 ) }
    dend_24 { pt3dadd( -2.17363, -189.516, 38.6871, 0.96 ) }
    dend_24 { pt3dadd( -1.97666, -190.736, 38.9714, 0.22 ) }
    dend_24 { pt3dadd( -1.86728, -191.319, 39.1129, 0.88 ) }
    dend_24 { pt3dadd( -1.80767, -191.631, 39.1939, 0.88 ) }
    dend_24 { pt3dadd( -1.61554, -192.622, 39.4766, 0.07 ) }
    dend_24 { pt3dadd( -1.5713, -192.83, 39.5436, 0.29 ) }
    dend_24 { pt3dadd( -1.4691, -193.275, 39.7058, 0.29 ) }
    dend_24 { pt3dadd( -1.36432, -193.708, 39.8764, 0.15 ) }
    dend_24 { pt3dadd( -1.29793, -194.056, 40.0144, 0.15 ) }
    dend_24 { pt3dadd( -1.20851, -194.63, 40.2295, 0.15 ) }
    dend_24 { pt3dadd( -1.1563, -195.032, 40.362, 0.74 ) }
    dend_24 { pt3dadd( -1.09708, -195.603, 40.54, 1.77 ) }
    dend_24 { pt3dadd( -1.0729, -195.964, 40.6496, 1.33 ) }
    dend_24 { pt3dadd( -1.03969, -196.861, 40.9297, 0.07 ) }
    dend_24 { pt3dadd( -1.03757, -197.159, 41.0225, 0.37 ) }
    dend_24 { pt3dadd( -1.05597, -198.083, 41.3195, 0.07 ) }
    dend_24 { pt3dadd( -1.06651, -198.576, 41.4803, 0.59 ) }
    dend_24 { pt3dadd( -1.06575, -199.374, 41.745, 0.15 ) }
    dend_24 { pt3dadd( -1.0553, -199.785, 41.8791, 0.22 ) }
    dend_24 { pt3dadd( -1.02764, -200.414, 42.0785, 1.33 ) }
    dend_24 { pt3dadd( -0.987652, -201.335, 42.3639, 0.07 ) }
    dend_24 { pt3dadd( -0.978399, -201.692, 42.4665, 0.88 ) }
    dend_24 { pt3dadd( -0.925835, -202.724, 42.7559, 0.15 ) }
    dend_24 { pt3dadd( -0.888493, -203.197, 42.8876, 0.15 ) }
    dend_24 { pt3dadd( -0.848935, -203.606, 43.0043, 0.15 ) }
    dend_24 { pt3dadd( -0.799985, -204.056, 43.1422, 0.74 ) }
    dend_24 { pt3dadd( -0.740258, -204.701, 43.3411, 2.14 ) }
    dend_24 { pt3dadd( -0.668928, -205.868, 43.6977, 0.15 ) }
    dend_24 { pt3dadd( -0.668933, -206.235, 43.7943, 0.44 ) }
    dend_24 { pt3dadd( -0.714875, -207.177, 44.0067, 0.07 ) }
    dend_24 { pt3dadd( -0.756517, -207.564, 44.0794, 0.15 ) }
    dend_24 { pt3dadd( -0.832899, -208.008, 44.1474, 0.07 ) }
    dend_24 { pt3dadd( -0.962336, -208.547, 44.2124, 1.11 ) }
    dend_24 { pt3dadd( -1.34577, -209.807, 44.3141, 0.15 ) }
    dend_24 { pt3dadd( -1.5224, -210.342, 44.3498, 1.03 ) }
    dend_24 { pt3dadd( -1.85611, -211.306, 44.3942, 0.15 ) }
    dend_24 { pt3dadd( -1.98801, -211.74, 44.4096, 0.44 ) }
    dend_24 { pt3dadd( -2.16624, -212.526, 44.4435, 0.15 ) }
    dend_24 { pt3dadd( -2.25744, -213.143, 44.4799, 1.62 ) }
    dend_24 { pt3dadd( -2.27332, -213.462, 44.5044, 1.77 ) }
    dend_24 { pt3dadd( -2.25203, -213.942, 44.5427, 1.03 ) }
    dend_24 { pt3dadd( -2.1027, -215.153, 44.6392, 0.15 ) }
    dend_24 { pt3dadd( -1.90272, -216.301, 44.7345, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( -1.82034, -216.679, 44.7712, 0.88 ) }
    dend_24 { pt3dadd( -1.69948, -217.185, 44.841, 1.18 ) }
    dend_24 { pt3dadd( -1.35571, -218.495, 45.0651, 0.07 ) }
    dend_24 { pt3dadd( -1.28176, -218.758, 45.1169, 0.15 ) }
    dend_24 { pt3dadd( -1.04779, -219.58, 45.3023, 0.07 ) }
    dend_24 { pt3dadd( -0.793983, -220.475, 45.52, 0.15 ) }
    dend_24 { pt3dadd( -0.5903, -221.246, 45.7088, 1.33 ) }
    dend_24 { pt3dadd( -0.278769, -222.507, 46.0186, 0.15 ) }
    dend_24 { pt3dadd( -0.164726, -223.029, 46.1492, 0.22 ) }
    dend_24 { pt3dadd( -0.014425, -223.877, 46.3307, 0.07 ) }
    dend_24 { pt3dadd( 0.0208842, -224.141, 46.3763, 0.22 ) }
    dend_24 { pt3dadd( 0.138666, -225.397, 46.5309, 0.07 ) }
    dend_24 { pt3dadd( 0.155246, -225.644, 46.5537, 0.81 ) }
    dend_24 { pt3dadd( 0.189408, -226.54, 46.6174, 1.92 ) }
    dend_24 { pt3dadd( 0.239532, -227.634, 46.6517, 0.15 ) }
    dend_24 { pt3dadd( 0.277238, -228.208, 46.641, 0.88 ) }
    dend_24 { pt3dadd( 0.389378, -229.463, 46.5735, 0.15 ) }
    dend_24 { pt3dadd( 0.426827, -229.798, 46.5421, 0.44 ) }
    dend_24 { pt3dadd( 0.555931, -230.839, 46.424, 0.07 ) }
    dend_24 { pt3dadd( 0.685251, -231.697, 46.3222, 0.07 ) }
    dend_24 { pt3dadd( 0.765062, -232.26, 46.275, 0.15 ) }
    dend_24 { pt3dadd( 0.820065, -232.696, 46.2553, 0.74 ) }
    dend_24 { pt3dadd( 0.859018, -233.092, 46.2582, 0.74 ) }
    dend_24 { pt3dadd( 0.94147, -233.975, 46.3786, 0.07 ) }
    dend_24 { pt3dadd( 1.01159, -234.576, 46.5568, 0.07 ) }
    dend_24 { pt3dadd( 1.07202, -235.16, 46.8069, 0.07 ) }
    dend_24 { pt3dadd( 1.11958, -235.642, 47.043, 1.25 ) }
    dend_24 { pt3dadd( 1.15639, -236.027, 47.2389, 1.99 ) }
    dend_24 { pt3dadd( 1.28172, -237.348, 47.8849, 0.15 ) }
    dend_24 { pt3dadd( 1.34568, -238.07, 48.218, 0.96 ) }
    dend_24 { pt3dadd( 1.42259, -239.112, 48.6507, 0.07 ) }
    dend_24 { pt3dadd( 1.47618, -239.934, 48.9514, 0.07 ) }
    dend_24 { pt3dadd( 1.50532, -240.538, 49.1351, 0.81 ) }
    dend_24 { pt3dadd( 1.57055, -242.157, 49.52, 0.15 ) }
    dend_24 { pt3dadd( 1.57876, -242.567, 49.5872, 0.29 ) }
    dend_24 { pt3dadd( 1.59028, -243.374, 49.6761, 0.07 ) }
    dend_24 { pt3dadd( 1.60947, -244.051, 49.7195, 1.47 ) }
    dend_24 { pt3dadd( 1.66188, -245.569, 49.7694, 0.07 ) }
    dend_24 { pt3dadd( 1.67578, -246.23, 49.7927, 0.07 ) }
    dend_24 { pt3dadd( 1.67518, -246.719, 49.7961, 1.11 ) }
    dend_24 { pt3dadd( 1.66171, -247.986, 49.7628, 0.07 ) }
    dend_24 { pt3dadd( 1.65231, -248.524, 49.7281, 0.74 ) }
    dend_24 { pt3dadd( 1.64059, -249.013, 49.6741, 1.92 ) }
    dend_24 { pt3dadd( 1.58994, -250.358, 49.473, 0.15 ) }
    dend_24 { pt3dadd( 1.54243, -251.39, 49.2992, 0.22 ) }
    dend_24 { pt3dadd( 1.48475, -252.581, 49.0976, 0.22 ) }
    dend_24 { pt3dadd( 1.45523, -253.104, 49.0004, 0.81 ) }
    dend_24 { pt3dadd( 1.41395, -253.779, 48.8764, 1.84 ) }
    dend_24 { pt3dadd( 1.32318, -255.23, 48.6715, 0.07 ) }
    dend_24 { pt3dadd( 1.29761, -255.658, 48.6274, 0.29 ) }
    dend_24 { pt3dadd( 1.21424, -256.731, 48.656, 0.07 ) }
    dend_24 { pt3dadd( 1.14844, -257.414, 48.7179, 0.07 ) }
    dend_24 { pt3dadd( 1.06615, -258.189, 48.8284, 1.55 ) }
    dend_24 { pt3dadd( 0.9356, -259.374, 49.0793, 0.07 ) }
    dend_24 { pt3dadd( 0.890255, -259.795, 49.1967, 0.07 ) }
    dend_24 { pt3dadd( 0.786921, -260.893, 49.5541, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -7.21964, -158.261, 32.8887, 0.22 ) }
    dend_21 { pt3dadd( -7.76564, -159.106, 33.264, 0.22 ) }
    dend_21 { pt3dadd( -8.17755, -159.916, 33.5873, 0.44 ) }
    dend_21 { pt3dadd( -8.33898, -160.302, 33.7322, 0.15 ) }
    dend_21 { pt3dadd( -8.46156, -160.623, 33.8541, 0.15 ) }
    dend_21 { pt3dadd( -8.52249, -160.772, 33.9108, 0.37 ) }
    dend_21 { pt3dadd( -8.72233, -161.206, 34.0707, 0.44 ) }
    dend_21 { pt3dadd( -8.90938, -161.574, 34.1947, 0.15 ) }
    dend_21 { pt3dadd( -8.99886, -161.724, 34.2569, 0.22 ) }
    dend_21 { pt3dadd( -9.15999, -161.968, 34.3997, 0.22 ) }
    dend_21 { pt3dadd( -9.38405, -162.283, 34.6224, 0.22 ) }
    dend_21 { pt3dadd( -9.58883, -162.57, 34.8481, 0.81 ) }
    dend_21 { pt3dadd( -9.93913, -163.091, 35.2761, 0.22 ) }
    dend_21 { pt3dadd( -10.3007, -163.69, 35.7695, 0.96 ) }
    dend_21 { pt3dadd( -10.6201, -164.284, 36.2411, 2.21 ) }
    dend_21 { pt3dadd( -11.1634, -165.462, 37.1232, 0.22 ) }
    dend_21 { pt3dadd( -11.365, -165.976, 37.5006, 0.22 ) }
    dend_21 { pt3dadd( -11.4841, -166.334, 37.7534, 0.22 ) }
    dend_21 { pt3dadd( -11.5627, -166.609, 37.9316, 0.22 ) }
    dend_21 { pt3dadd( -11.6898, -167.043, 38.1706, 0.22 ) }
    dend_21 { pt3dadd( -11.8119, -167.38, 38.3379, 0.22 ) }
    dend_21 { pt3dadd( -11.9625, -167.712, 38.4948, 0.88 ) }
    dend_21 { pt3dadd( -12.1931, -168.116, 38.7001, 1.4 ) }
    dend_21 { pt3dadd( -12.5787, -168.649, 39.0181, 2.14 ) }
    dend_21 { pt3dadd( -13.3022, -169.506, 39.6047, 0.52 ) }
    dend_21 { pt3dadd( -13.8537, -170.087, 40.0497, 0.22 ) }
    dend_21 { pt3dadd( -14.1691, -170.397, 40.298, 0.22 ) }
    dend_21 { pt3dadd( -14.6081, -170.793, 40.6258, 1.11 ) }
    dend_21 { pt3dadd( -15.3295, -171.359, 41.1476, 1.99 ) }
    dend_21 { pt3dadd( -15.7156, -171.612, 41.4175, 1.99 ) }
    dend_21 { pt3dadd( -15.8527, -171.681, 41.5162, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -31.2999, -131.425, 20.2007, 0.22 ) }
    dend_19 { pt3dadd( -32.129, -132.16, 20.2876, 0.22 ) }
    dend_19 { pt3dadd( -32.5712, -132.573, 20.3369, 0.22 ) }
    dend_19 { pt3dadd( -32.9577, -132.929, 20.377, 1.33 ) }
    dend_19 { pt3dadd( -33.6693, -133.582, 20.4455, 0.15 ) }
    dend_19 { pt3dadd( -33.9243, -133.823, 20.469, 0.15 ) }
    dend_19 { pt3dadd( -34.1089, -134.005, 20.4858, 0.37 ) }
    dend_19 { pt3dadd( -34.399, -134.334, 20.5302, 0.37 ) }
    dend_19 { pt3dadd( -34.8183, -134.87, 20.5909, 0.22 ) }
    dend_19 { pt3dadd( -35.0073, -135.119, 20.6097, 0.15 ) }
    dend_19 { pt3dadd( -35.1483, -135.311, 20.6164, 0.15 ) }
    dend_19 { pt3dadd( -35.248, -135.455, 20.6265, 0.15 ) }
    dend_19 { pt3dadd( -35.4757, -135.804, 20.6565, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -35.701, -136.179, 20.6914, 0.74 ) }
    dend_19 { pt3dadd( -36.0656, -136.799, 20.7489, 0.15 ) }
    dend_19 { pt3dadd( -36.3216, -137.171, 20.7558, 0.15 ) }
    dend_19 { pt3dadd( -36.718, -137.675, 20.735, 0.15 ) }
    dend_19 { pt3dadd( -36.8741, -137.855, 20.7119, 0.15 ) }
    dend_19 { pt3dadd( -37.2292, -138.235, 20.6303, 1.33 ) }
    dend_19 { pt3dadd( -37.5643, -138.565, 20.5643, 2.14 ) }
    dend_19 { pt3dadd( -38.47, -139.363, 20.429, 0.15 ) }
    dend_19 { pt3dadd( -38.9249, -139.713, 20.3857, 1.25 ) }
    dend_19 { pt3dadd( -39.6058, -140.187, 20.3422, 0.07 ) }
    dend_19 { pt3dadd( -39.8676, -140.366, 20.3395, 0.22 ) }
    dend_19 { pt3dadd( -40.6884, -140.916, 20.3663, 0.22 ) }
    dend_19 { pt3dadd( -41.0993, -141.179, 20.4013, 1.25 ) }
    dend_19 { pt3dadd( -41.3615, -141.341, 20.4404, 1.25 ) }
    dend_19 { pt3dadd( -42.2047, -141.933, 20.5324, 0.07 ) }
    dend_19 { pt3dadd( -42.7686, -142.392, 20.5645, 0.07 ) }
    dend_19 { pt3dadd( -43.1508, -142.771, 20.5341, 0.07 ) }
    dend_19 { pt3dadd( -43.4831, -143.175, 20.4203, 0.07 ) }
    dend_19 { pt3dadd( -43.6538, -143.412, 20.3367, 1.18 ) }
    dend_19 { pt3dadd( -44.2365, -144.308, 19.973, 0.07 ) }
    dend_19 { pt3dadd( -44.355, -144.51, 19.8852, 0.88 ) }
    dend_19 { pt3dadd( -44.6573, -145.073, 19.6368, 1.92 ) }
    dend_19 { pt3dadd( -45.166, -146.062, 19.2062, 0.15 ) }
    dend_19 { pt3dadd( -45.3225, -146.378, 19.0696, 0.22 ) }
    dend_19 { pt3dadd( -45.5849, -146.872, 18.861, 0.07 ) }
    dend_19 { pt3dadd( -45.7292, -147.139, 18.7537, 0.07 ) }
    dend_19 { pt3dadd( -45.9365, -147.569, 18.5985, 0.29 ) }
    dend_19 { pt3dadd( -46.3052, -148.461, 18.3398, 0.07 ) }
    dend_19 { pt3dadd( -46.5927, -149.259, 18.1747, 0.22 ) }
    dend_19 { pt3dadd( -46.7866, -149.815, 18.0844, 1.55 ) }
    dend_19 { pt3dadd( -47.1352, -150.826, 17.9991, 0.22 ) }
    dend_19 { pt3dadd( -47.3547, -151.449, 17.9894, 0.07 ) }
    dend_19 { pt3dadd( -47.544, -152.007, 18.0105, 0.07 ) }
    dend_19 { pt3dadd( -47.6613, -152.386, 18.0677, 0.07 ) }
    dend_19 { pt3dadd( -47.7757, -152.731, 18.1676, 0.15 ) }
    dend_19 { pt3dadd( -47.9569, -153.245, 18.3927, 0.07 ) }
    dend_19 { pt3dadd( -48.0856, -153.47, 18.5655, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -31.2999, -131.425, 20.2007, 0.29 ) }
    dend_16 { pt3dadd( -32.6995, -131.099, 19.8595, 0.29 ) }
    dend_16 { pt3dadd( -33.3874, -130.917, 19.6203, 0.22 ) }
    dend_16 { pt3dadd( -33.8198, -130.798, 19.4361, 0.74 ) }
    dend_16 { pt3dadd( -34.3368, -130.65, 19.1948, 0.96 ) }
    dend_16 { pt3dadd( -34.9476, -130.481, 18.9001, 0.29 ) }
    dend_16 { pt3dadd( -35.579, -130.308, 18.5865, 0.15 ) }
    dend_16 { pt3dadd( -36.2595, -130.116, 18.2177, 0.15 ) }
    dend_16 { pt3dadd( -36.8401, -129.973, 17.9288, 1.03 ) }
    dend_16 { pt3dadd( -37.5741, -129.811, 17.5938, 0.29 ) }
    dend_16 { pt3dadd( -38.5854, -129.604, 17.1728, 0.22 ) }
    dend_16 { pt3dadd( -39.1455, -129.501, 16.9632, 1.11 ) }
    dend_16 { pt3dadd( -40.0468, -129.356, 16.6727, 2.14 ) }
    dend_16 { pt3dadd( -41.7479, -129.104, 16.1973, 0.22 ) }
    dend_16 { pt3dadd( -42.18, -129.044, 16.0874, 0.81 ) }
    dend_16 { pt3dadd( -43.0462, -128.935, 15.8728, 1.7 ) }
    dend_16 { pt3dadd( -44.2199, -128.78, 15.5941, 0.22 ) }
    dend_16 { pt3dadd( -44.7138, -128.716, 15.4675, 0.88 ) }
    dend_16 { pt3dadd( -45.4592, -128.624, 15.2546, 1.55 ) }
    dend_16 { pt3dadd( -46.012, -128.552, 15.0785, 0.59 ) }
    dend_16 { pt3dadd( -47.0515, -128.423, 14.728, 0.15 ) }
    dend_16 { pt3dadd( -47.8123, -128.348, 14.441, 0.88 ) }
    dend_16 { pt3dadd( -48.5717, -128.279, 14.1171, 0.15 ) }
    dend_16 { pt3dadd( -49.1748, -128.211, 13.8294, 0.22 ) }
    dend_16 { pt3dadd( -49.7052, -128.142, 13.5527, 0.81 ) }
    dend_16 { pt3dadd( -50.4923, -128.04, 13.1226, 1.99 ) }
    dend_16 { pt3dadd( -51.5941, -127.935, 12.472, 0.22 ) }
    dend_16 { pt3dadd( -52.1311, -127.895, 12.144, 0.22 ) }
    dend_16 { pt3dadd( -52.675, -127.848, 11.8027, 0.52 ) }
    dend_16 { pt3dadd( -53.2378, -127.792, 11.4364, 1.18 ) }
    dend_16 { pt3dadd( -54.1247, -127.688, 10.8503, 1.99 ) }
    dend_16 { pt3dadd( -55.2614, -127.533, 10.0614, 0.15 ) }
    dend_16 { pt3dadd( -55.6826, -127.469, 9.76645, 0.29 ) }
    dend_16 { pt3dadd( -56.3665, -127.391, 9.27851, 0.07 ) }
    dend_16 { pt3dadd( -56.8289, -127.359, 8.91625, 0.22 ) }
    dend_16 { pt3dadd( -57.1726, -127.342, 8.59655, 0.22 ) }
    dend_16 { pt3dadd( -57.4634, -127.348, 8.23355, 0.22 ) }
    dend_16 { pt3dadd( -57.5693, -127.368, 8.06895, 0.22 ) }
    dend_16 { pt3dadd( -57.8079, -127.501, 7.58715, 0.22 ) }
    dend_16 { pt3dadd( -58.029, -127.773, 7.02887, 0.22 ) }
    dend_16 { pt3dadd( -58.1751, -128.014, 6.61327, 0.22 ) }
    dend_16 { pt3dadd( -58.5266, -128.602, 5.71262, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 67.0239, 30.4259, 76.339, 0.22 ) }
    dend_9 { pt3dadd( 68.5639, 30.5773, 77.6758, 0.22 ) }
    dend_9 { pt3dadd( 68.9156, 30.5858, 77.9674, 0.22 ) }
    dend_9 { pt3dadd( 69.7384, 30.6415, 78.6271, 0.59 ) }
    dend_9 { pt3dadd( 70.4956, 30.7466, 79.2028, 0.44 ) }
    dend_9 { pt3dadd( 70.9119, 30.8186, 79.4921, 0.44 ) }
    dend_9 { pt3dadd( 71.449, 30.9199, 79.8009, 0.15 ) }
    dend_9 { pt3dadd( 71.9933, 31.0671, 80.0285, 0.15 ) }
    dend_9 { pt3dadd( 72.7147, 31.2384, 80.2301, 0.15 ) }
    dend_9 { pt3dadd( 73.3056, 31.3623, 80.3147, 0.96 ) }
    dend_9 { pt3dadd( 74.104, 31.5295, 80.3755, 1.55 ) }
    dend_9 { pt3dadd( 75.2069, 31.8154, 80.4688, 0.22 ) }
    dend_9 { pt3dadd( 75.9997, 32.0278, 80.529, 0.37 ) }
    dend_9 { pt3dadd( 76.6246, 32.1718, 80.556, 0.22 ) }
    dend_9 { pt3dadd( 77.1502, 32.2691, 80.5724, 0.22 ) }
    dend_9 { pt3dadd( 77.7462, 32.3767, 80.5963, 0.37 ) }
    dend_9 { pt3dadd( 78.873, 32.581, 80.6849, 0.22 ) }
    dend_9 { pt3dadd( 79.4982, 32.7026, 80.7769, 0.22 ) }
    dend_9 { pt3dadd( 80.3094, 32.888, 80.9513, 0.22 ) }
    dend_9 { pt3dadd( 80.8288, 33.0184, 81.0879, 0.96 ) }
    dend_9 { pt3dadd( 81.7144, 33.2447, 81.3607, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 83.1767, 33.5828, 81.8467, 0.22 ) }
    dend_9 { pt3dadd( 84.1087, 33.7468, 82.1719, 0.15 ) }
    dend_9 { pt3dadd( 85.0211, 33.8879, 82.5348, 0.15 ) }
    dend_9 { pt3dadd( 85.3257, 33.9273, 82.6673, 0.15 ) }
    dend_9 { pt3dadd( 85.7594, 33.9618, 82.8515, 0.15 ) }
    dend_9 { pt3dadd( 86.1781, 33.9838, 82.9958, 0.15 ) }
    dend_9 { pt3dadd( 86.9616, 34.0226, 83.1823, 0.15 ) }
    dend_9 { pt3dadd( 87.4641, 34.0127, 83.2532, 0.81 ) }
    dend_9 { pt3dadd( 88.0723, 33.9581, 83.3123, 1.47 ) }
    dend_9 { pt3dadd( 88.5233, 33.908, 83.3531, 1.47 ) }
    dend_9 { pt3dadd( 89.8756, 33.7562, 83.4477, 0.15 ) }
    dend_9 { pt3dadd( 90.2142, 33.7246, 83.4839, 0.22 ) }
    dend_9 { pt3dadd( 91.1175, 33.6157, 83.5923, 0.37 ) }
    dend_9 { pt3dadd( 92.0357, 33.467, 83.7066, 1.03 ) }
    dend_9 { pt3dadd( 92.9394, 33.2915, 83.9024, 1.77 ) }
    dend_9 { pt3dadd( 93.4243, 33.1905, 84.0627, 1.77 ) }
    dend_9 { pt3dadd( 94.8704, 32.877, 84.696, 0.22 ) }
    dend_9 { pt3dadd( 95.4014, 32.7946, 84.9764, 0.22 ) }
    dend_9 { pt3dadd( 96.2107, 32.7448, 85.4582, 1.11 ) }
    dend_9 { pt3dadd( 97.8227, 32.742, 86.5156, 0.22 ) }
    dend_9 { pt3dadd( 98.486, 32.742, 86.9948, 0.22 ) }
    dend_9 { pt3dadd( 99.1252, 32.7333, 87.4848, 0.66 ) }
    dend_9 { pt3dadd( 100.02, 32.7211, 88.1637, 0.88 ) }
    dend_9 { pt3dadd( 100.627, 32.7318, 88.6233, 1.7 ) }
    dend_9 { pt3dadd( 101.897, 32.8041, 89.6089, 0.44 ) }
    dend_9 { pt3dadd( 102.831, 32.896, 90.3152, 0.74 ) }
    dend_9 { pt3dadd( 103.514, 32.9998, 90.8491, 1.25 ) }
    dend_9 { pt3dadd( 104.612, 33.2669, 91.7883, 0.22 ) }
    dend_9 { pt3dadd( 104.985, 33.3907, 92.1327, 0.22 ) }
    dend_9 { pt3dadd( 105.602, 33.6753, 92.758, 0.37 ) }
    dend_9 { pt3dadd( 106.008, 33.9265, 93.1686, 0.37 ) }
    dend_9 { pt3dadd( 106.655, 34.3845, 93.7756, 1.47 ) }
    dend_9 { pt3dadd( 107.447, 34.9454, 94.4723, 0.29 ) }
    dend_9 { pt3dadd( 107.831, 35.211, 94.7838, 0.29 ) }
    dend_9 { pt3dadd( 108.047, 35.3497, 94.9517, 0.29 ) }
    dend_9 { pt3dadd( 108.751, 35.7671, 95.5339, 0.15 ) }
    dend_9 { pt3dadd( 109.195, 36.0247, 95.9742, 0.22 ) }
    dend_9 { pt3dadd( 109.535, 36.2217, 96.3809, 0.74 ) }
    dend_9 { pt3dadd( 109.909, 36.4589, 96.9551, 1.25 ) }
    dend_9 { pt3dadd( 110.491, 36.892, 98.0957, 0.22 ) }
    dend_9 { pt3dadd( 110.918, 37.2481, 99.074, 0.96 ) }
    dend_9 { pt3dadd( 111.29, 37.5633, 99.9957, 0.96 ) }
    dend_9 { pt3dadd( 111.611, 37.7804, 100.736, 0.29 ) }
    dend_9 { pt3dadd( 112.041, 37.9846, 101.651, 0.29 ) }
    dend_9 { pt3dadd( 112.433, 38.0915, 102.44, 0.29 ) }
    dend_9 { pt3dadd( 112.829, 38.1349, 103.189, 0.29 ) }
    dend_9 { pt3dadd( 113.189, 38.126, 103.975, 0.29 ) }
    dend_9 { pt3dadd( 113.441, 38.0604, 104.721, 0.29 ) }
    dend_9 { pt3dadd( 113.604, 37.9429, 105.462, 0.29 ) }
    dend_9 { pt3dadd( 113.681, 37.8532, 105.935, 0.29 ) }
    dend_9 { pt3dadd( 113.765, 37.7422, 106.57, 0.29 ) }
    dend_9 { pt3dadd( 113.895, 37.5565, 107.802, 0.59 ) }
    dend_9 { pt3dadd( 113.987, 37.4393, 108.742, 0.59 ) }
    dend_9 { pt3dadd( 114.136, 37.3126, 109.911, 0.59 ) }
    dend_9 { pt3dadd( 114.29, 37.2233, 110.726, 0.59 ) }
    dend_9 { pt3dadd( 114.577, 37.1001, 111.718, 0.59 ) }
    dend_9 { pt3dadd( 114.856, 37.0006, 112.388, 0.59 ) }
    dend_9 { pt3dadd( 115.0, 36.9649, 112.637, 0.59 ) }
    dend_9 { pt3dadd( 115.486, 36.8777, 113.269, 0.59 ) }
    dend_9 { pt3dadd( 115.743, 36.8314, 113.507, 0.59 ) }
    dend_9 { pt3dadd( 116.407, 36.7049, 113.959, 0.22 ) }
    dend_9 { pt3dadd( 116.939, 36.613, 114.212, 0.22 ) }
    dend_9 { pt3dadd( 117.662, 36.5336, 114.59, 0.22 ) }
    dend_9 { pt3dadd( 118.167, 36.5201, 114.918, 0.22 ) }
    dend_9 { pt3dadd( 118.935, 36.5875, 115.473, 0.22 ) }
    dend_9 { pt3dadd( 119.466, 36.6924, 115.935, 0.22 ) }
    dend_9 { pt3dadd( 120.012, 36.8476, 116.522, 1.11 ) }
    dend_9 { pt3dadd( 120.985, 37.1934, 117.758, 0.22 ) }
    dend_9 { pt3dadd( 121.511, 37.3947, 118.509, 0.22 ) }
    dend_9 { pt3dadd( 122.123, 37.6528, 119.472, 0.22 ) }
    dend_9 { pt3dadd( 122.603, 37.8191, 120.197, 0.22 ) }
    dend_9 { pt3dadd( 123.031, 37.8422, 120.758, 0.22 ) }
    dend_9 { pt3dadd( 123.271, 37.7692, 120.993, 0.22 ) }
    dend_9 { pt3dadd( 123.801, 37.5098, 121.365, 0.59 ) }
    dend_9 { pt3dadd( 124.648, 37.0538, 121.857, 0.59 ) }
    dend_9 { pt3dadd( 125.638, 36.5345, 122.409, 0.15 ) }
    dend_9 { pt3dadd( 126.594, 36.0459, 122.923, 0.66 ) }
    dend_9 { pt3dadd( 127.602, 35.5556, 123.489, 0.15 ) }
    dend_9 { pt3dadd( 128.404, 35.1887, 123.981, 0.66 ) }
    dend_9 { pt3dadd( 129.053, 34.9345, 124.409, 1.03 ) }
    dend_9 { pt3dadd( 130.274, 34.5367, 125.203, 0.22 ) }
    dend_9 { pt3dadd( 131.283, 34.2683, 125.829, 0.15 ) }
    dend_9 { pt3dadd( 132.277, 34.0711, 126.426, 0.66 ) }
    dend_9 { pt3dadd( 132.879, 34.0046, 126.814, 1.25 ) }
    dend_9 { pt3dadd( 134.137, 33.9595, 127.659, 0.22 ) }
    dend_9 { pt3dadd( 135.049, 33.9719, 128.278, 0.15 ) }
    dend_9 { pt3dadd( 135.835, 34.0399, 128.783, 0.37 ) }
    dend_9 { pt3dadd( 136.297, 34.1182, 129.068, 0.59 ) }
    dend_9 { pt3dadd( 137.464, 34.3542, 129.75, 0.15 ) }
    dend_9 { pt3dadd( 138.179, 34.4818, 130.17, 0.88 ) }
    dend_9 { pt3dadd( 139.416, 34.6725, 130.926, 0.22 ) }
    dend_9 { pt3dadd( 139.902, 34.7578, 131.241, 0.96 ) }
    dend_9 { pt3dadd( 140.303, 34.8343, 131.513, 0.66 ) }
    dend_9 { pt3dadd( 141.144, 35.0071, 132.067, 0.15 ) }
    dend_9 { pt3dadd( 141.97, 35.2076, 132.653, 0.81 ) }
    dend_9 { pt3dadd( 142.509, 35.3838, 133.116, 1.25 ) }
    dend_9 { pt3dadd( 143.201, 35.6993, 133.793, 0.15 ) }
    dend_9 { pt3dadd( 144.039, 36.1234, 134.67, 0.15 ) }
    dend_9 { pt3dadd( 144.288, 36.259, 134.948, 0.29 ) }
    dend_9 { pt3dadd( 144.882, 36.6356, 135.671, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 145.164, 36.8303, 136.039, 0.96 ) }
    dend_9 { pt3dadd( 145.705, 37.1528, 136.746, 0.29 ) }
    dend_9 { pt3dadd( 146.464, 37.4911, 137.651, 0.74 ) }
    dend_9 { pt3dadd( 147.224, 37.7817, 138.472, 0.15 ) }
    dend_9 { pt3dadd( 147.745, 37.9651, 139.008, 0.37 ) }
    dend_9 { pt3dadd( 148.056, 38.0797, 139.302, 0.37 ) }
    dend_9 { pt3dadd( 148.595, 38.2952, 139.827, 0.22 ) }
    dend_9 { pt3dadd( 149.194, 38.564, 140.406, 0.22 ) }
    dend_9 { pt3dadd( 149.693, 38.7741, 140.811, 0.37 ) }
    dend_9 { pt3dadd( 150.282, 39.0166, 141.23, 0.37 ) }
    dend_9 { pt3dadd( 150.941, 39.3036, 141.646, 1.33 ) }
    dend_9 { pt3dadd( 152.187, 39.9304, 142.384, 0.22 ) }
    dend_9 { pt3dadd( 152.98, 40.4183, 142.861, 1.03 ) }
    dend_9 { pt3dadd( 153.931, 41.0887, 143.427, 0.15 ) }
    dend_9 { pt3dadd( 154.245, 41.3475, 143.618, 0.15 ) }
    dend_9 { pt3dadd( 155.004, 42.1287, 144.115, 0.15 ) }
    dend_9 { pt3dadd( 155.496, 42.7787, 144.517, 1.03 ) }
    dend_9 { pt3dadd( 155.844, 43.4339, 144.899, 0.15 ) }
    dend_9 { pt3dadd( 156.053, 43.9441, 145.205, 0.15 ) }
    dend_9 { pt3dadd( 156.321, 44.7004, 145.731, 0.15 ) }
    dend_9 { pt3dadd( 156.631, 45.4396, 146.362, 0.88 ) }
    dend_9 { pt3dadd( 156.955, 46.1235, 147.056, 0.29 ) }
    dend_9 { pt3dadd( 157.211, 46.6046, 147.599, 0.81 ) }
    dend_9 { pt3dadd( 157.342, 46.8287, 147.86, 0.81 ) }
    dend_9 { pt3dadd( 157.803, 47.789, 148.936, 0.22 ) }
    dend_9 { pt3dadd( 158.061, 48.5114, 149.704, 0.07 ) }
    dend_9 { pt3dadd( 158.159, 49.1022, 150.283, 0.15 ) }
    dend_9 { pt3dadd( 158.154, 49.4136, 150.567, 0.66 ) }
    dend_9 { pt3dadd( 158.053, 50.0469, 151.119, 1.55 ) }
    dend_9 { pt3dadd( 157.674, 51.635, 152.429, 0.15 ) }
    dend_9 { pt3dadd( 157.416, 52.395, 152.983, 0.15 ) }
    dend_9 { pt3dadd( 157.112, 53.0799, 153.474, 0.66 ) }
    dend_9 { pt3dadd( 156.857, 53.5678, 153.844, 0.15 ) }
    dend_9 { pt3dadd( 156.688, 53.8482, 154.067, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 67.0239, 30.4259, 76.339, 0.29 ) }
    dend_8 { pt3dadd( 66.2441, 31.3306, 77.818, 0.29 ) }
    dend_8 { pt3dadd( 65.63, 32.0449, 78.8302, 0.29 ) }
    dend_8 { pt3dadd( 64.9835, 32.8401, 79.837, 0.81 ) }
    dend_8 { pt3dadd( 64.6142, 33.2719, 80.376, 1.4 ) }
    dend_8 { pt3dadd( 63.688, 34.2523, 81.6439, 0.07 ) }
    dend_8 { pt3dadd( 63.1874, 34.7437, 82.2878, 1.03 ) }
    dend_8 { pt3dadd( 62.1857, 35.6105, 83.3896, 0.15 ) }
    dend_8 { pt3dadd( 61.3364, 36.3699, 84.2792, 1.55 ) }
    dend_8 { pt3dadd( 60.5486, 37.1302, 85.1273, 0.22 ) }
    dend_8 { pt3dadd( 60.0353, 37.6823, 85.7235, 0.22 ) }
    dend_8 { pt3dadd( 59.5065, 38.3323, 86.3932, 0.81 ) }
    dend_8 { pt3dadd( 58.9768, 39.0666, 87.1088, 0.07 ) }
    dend_8 { pt3dadd( 58.567, 39.7956, 87.7516, 0.59 ) }
    dend_8 { pt3dadd( 58.3029, 40.5284, 88.2789, 0.07 ) }
    dend_8 { pt3dadd( 58.2194, 40.9918, 88.5646, 0.52 ) }
    dend_8 { pt3dadd( 58.1343, 42.562, 89.4808, 0.07 ) }
    dend_8 { pt3dadd( 58.1679, 43.0846, 89.7803, 0.96 ) }
    dend_8 { pt3dadd( 58.254, 43.5729, 90.0699, 0.96 ) }
    dend_8 { pt3dadd( 58.6033, 44.8688, 90.8895, 0.22 ) }
    dend_8 { pt3dadd( 58.9727, 45.7664, 91.4798, 0.22 ) }
    dend_8 { pt3dadd( 59.4063, 46.5195, 92.0231, 0.96 ) }
    dend_8 { pt3dadd( 59.9569, 47.3, 92.6283, 1.77 ) }
    dend_8 { pt3dadd( 60.7438, 48.3513, 93.5181, 0.22 ) }
    dend_8 { pt3dadd( 61.242, 48.9803, 94.0792, 0.15 ) }
    dend_8 { pt3dadd( 61.6744, 49.5092, 94.5314, 0.15 ) }
    dend_8 { pt3dadd( 61.8942, 49.7965, 94.7685, 0.15 ) }
    dend_8 { pt3dadd( 62.5698, 50.8019, 95.5653, 0.88 ) }
    dend_8 { pt3dadd( 63.156, 51.9786, 96.4763, 0.22 ) }
    dend_8 { pt3dadd( 63.3943, 52.6445, 96.9887, 0.81 ) }
    dend_8 { pt3dadd( 63.7228, 53.7801, 97.8707, 0.15 ) }
    dend_8 { pt3dadd( 63.9355, 54.5984, 98.5043, 0.66 ) }
    dend_8 { pt3dadd( 64.1537, 55.5032, 99.1979, 1.84 ) }
    dend_8 { pt3dadd( 64.5886, 57.1881, 100.484, 0.15 ) }
    dend_8 { pt3dadd( 64.8262, 58.1484, 101.194, 0.15 ) }
    dend_8 { pt3dadd( 65.0185, 58.9299, 101.758, 0.15 ) }
    dend_8 { pt3dadd( 65.1996, 59.5625, 102.212, 0.66 ) }
    dend_8 { pt3dadd( 65.6275, 60.7618, 102.994, 0.15 ) }
    dend_8 { pt3dadd( 66.1215, 61.8683, 103.657, 0.15 ) }
    dend_8 { pt3dadd( 66.4079, 62.4224, 103.954, 0.66 ) }
    dend_8 { pt3dadd( 66.6594, 62.9624, 104.214, 0.22 ) }
    dend_8 { pt3dadd( 66.9899, 63.8344, 104.62, 0.22 ) }
    dend_8 { pt3dadd( 67.1537, 64.3555, 104.852, 0.81 ) }
    dend_8 { pt3dadd( 67.2483, 64.777, 105.025, 0.81 ) }
    dend_8 { pt3dadd( 67.3611, 65.9659, 105.512, 0.07 ) }
    dend_8 { pt3dadd( 67.3564, 66.6859, 105.822, 0.66 ) }
    dend_8 { pt3dadd( 67.1604, 68.2026, 106.523, 0.15 ) }
    dend_8 { pt3dadd( 66.925, 69.219, 107.011, 1.4 ) }
    dend_8 { pt3dadd( 66.4875, 70.6293, 107.737, 0.15 ) }
    dend_8 { pt3dadd( 66.1231, 71.5674, 108.251, 0.15 ) }
    dend_8 { pt3dadd( 65.7385, 72.3528, 108.709, 1.18 ) }
    dend_8 { pt3dadd( 64.9631, 73.5526, 109.505, 0.22 ) }
    dend_8 { pt3dadd( 64.2539, 74.3903, 110.123, 0.15 ) }
    dend_8 { pt3dadd( 63.8015, 74.8667, 110.497, 0.15 ) }
    dend_8 { pt3dadd( 63.3455, 75.3272, 110.865, 0.74 ) }
    dend_8 { pt3dadd( 62.7936, 75.8974, 111.296, 1.25 ) }
    dend_8 { pt3dadd( 61.6743, 77.1017, 112.179, 0.22 ) }
    dend_8 { pt3dadd( 61.0859, 77.7679, 112.663, 1.11 ) }
    dend_8 { pt3dadd( 60.0817, 78.9612, 113.569, 0.22 ) }
    dend_8 { pt3dadd( 59.5385, 79.6568, 114.097, 1.47 ) }
    dend_8 { pt3dadd( 59.0213, 80.3594, 114.621, 0.96 ) }
    dend_8 { pt3dadd( 58.3397, 81.3583, 115.357, 0.22 ) }
    dend_8 { pt3dadd( 57.763, 82.2717, 116.02, 0.74 ) }
    dend_8 { pt3dadd( 57.0679, 83.4021, 116.875, 0.15 ) }
    dend_8 { pt3dadd( 56.7677, 83.8809, 117.265, 0.15 ) }
    dend_8 { pt3dadd( 56.4505, 84.4037, 117.709, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 39.1569, 9.85042, 39.5448, 0.15 ) }
    dend_6 { pt3dadd( 41.6566, 8.33835, 41.7405, 0.15 ) }
    dend_6 { pt3dadd( 42.4695, 7.99273, 42.2273, 0.22 ) }
    dend_6 { pt3dadd( 43.1166, 7.76771, 42.5586, 0.88 ) }
    dend_6 { pt3dadd( 44.2766, 7.41583, 43.0927, 0.15 ) }
    dend_6 { pt3dadd( 45.0337, 7.20958, 43.4187, 1.18 ) }
    dend_6 { pt3dadd( 45.8726, 6.98832, 43.7731, 2.58 ) }
    dend_6 { pt3dadd( 47.8201, 6.63525, 44.3691, 0.29 ) }
    dend_6 { pt3dadd( 48.7154, 6.48575, 44.633, 0.96 ) }
    dend_6 { pt3dadd( 49.3851, 6.37397, 44.8415, 1.18 ) }
    dend_6 { pt3dadd( 51.2841, 6.05594, 45.5349, 0.07 ) }
    dend_6 { pt3dadd( 51.9858, 5.94394, 45.8561, 0.07 ) }
    dend_6 { pt3dadd( 52.3249, 5.88369, 46.0388, 0.07 ) }
    dend_6 { pt3dadd( 52.9479, 5.73166, 46.4443, 0.74 ) }
    dend_6 { pt3dadd( 53.4591, 5.56414, 46.8202, 1.03 ) }
    dend_6 { pt3dadd( 54.6365, 5.07926, 47.7848, 0.15 ) }
    dend_6 { pt3dadd( 55.6175, 4.55723, 48.6573, 1.18 ) }
    dend_6 { pt3dadd( 55.9992, 4.30526, 49.0123, 1.4 ) }
    dend_6 { pt3dadd( 56.7885, 3.67527, 49.7877, 0.15 ) }
    dend_6 { pt3dadd( 57.3433, 3.12203, 50.3463, 0.15 ) }
    dend_6 { pt3dadd( 57.6384, 2.78132, 50.6451, 0.88 ) }
    dend_6 { pt3dadd( 57.9854, 2.33556, 51.0097, 0.29 ) }
    dend_6 { pt3dadd( 58.5936, 1.50413, 51.6899, 0.15 ) }
    dend_6 { pt3dadd( 59.0024, 0.921224, 52.2185, 0.81 ) }
    dend_6 { pt3dadd( 59.4289, 0.279373, 52.855, 1.62 ) }
    dend_6 { pt3dadd( 60.1773, -1.01518, 54.1819, 0.15 ) }
    dend_6 { pt3dadd( 60.5344, -1.71617, 54.9173, 0.15 ) }
    dend_6 { pt3dadd( 60.8205, -2.35362, 55.5788, 0.22 ) }
    dend_6 { pt3dadd( 61.1174, -3.16289, 56.3938, 0.22 ) }
    dend_6 { pt3dadd( 61.2811, -3.70027, 56.909, 0.22 ) }
    dend_6 { pt3dadd( 61.4372, -4.21284, 57.4127, 1.18 ) }
    dend_6 { pt3dadd( 61.643, -4.84962, 58.0119, 1.62 ) }
    dend_6 { pt3dadd( 62.1613, -5.96599, 59.0187, 0.22 ) }
    dend_6 { pt3dadd( 62.5361, -6.48864, 59.5365, 0.22 ) }
    dend_6 { pt3dadd( 62.8084, -6.75198, 59.8426, 0.44 ) }
    dend_6 { pt3dadd( 63.5532, -7.28084, 60.5949, 0.15 ) }
    dend_6 { pt3dadd( 64.1172, -7.58142, 61.117, 1.33 ) }
    dend_6 { pt3dadd( 65.2678, -8.09676, 62.1118, 0.15 ) }
    dend_6 { pt3dadd( 66.4734, -8.57097, 63.072, 0.22 ) }
    dend_6 { pt3dadd( 67.1227, -8.84221, 63.5332, 0.22 ) }
    dend_6 { pt3dadd( 67.4605, -8.99345, 63.7535, 0.22 ) }
    dend_6 { pt3dadd( 68.0533, -9.29813, 64.0904, 0.74 ) }
    dend_6 { pt3dadd( 68.6836, -9.63933, 64.3861, 1.25 ) }
    dend_6 { pt3dadd( 69.2129, -9.91991, 64.5601, 1.25 ) }
    dend_6 { pt3dadd( 70.9125, -10.8841, 64.9419, 0.22 ) }
    dend_6 { pt3dadd( 71.6596, -11.3233, 65.112, 0.22 ) }
    dend_6 { pt3dadd( 72.2871, -11.7039, 65.2668, 1.03 ) }
    dend_6 { pt3dadd( 73.0759, -12.1856, 65.4641, 1.84 ) }
    dend_6 { pt3dadd( 75.0756, -13.3938, 65.9457, 0.22 ) }
    dend_6 { pt3dadd( 75.9443, -13.9368, 66.1376, 1.11 ) }
    dend_6 { pt3dadd( 77.186, -14.7825, 66.4031, 0.22 ) }
    dend_6 { pt3dadd( 77.9868, -15.363, 66.5948, 0.15 ) }
    dend_6 { pt3dadd( 78.5608, -15.7838, 66.7549, 0.15 ) }
    dend_6 { pt3dadd( 79.4037, -16.417, 67.0282, 1.03 ) }
    dend_6 { pt3dadd( 80.5994, -17.3711, 67.4778, 0.22 ) }
    dend_6 { pt3dadd( 81.1717, -17.8194, 67.7531, 0.96 ) }
    dend_6 { pt3dadd( 82.1859, -18.6113, 68.3132, 0.15 ) }
    dend_6 { pt3dadd( 82.8676, -19.1578, 68.7662, 0.15 ) }
    dend_6 { pt3dadd( 83.3663, -19.5929, 69.1785, 0.96 ) }
    dend_6 { pt3dadd( 84.0347, -20.1924, 69.8545, 1.92 ) }
    dend_6 { pt3dadd( 85.6486, -21.5482, 71.741, 0.22 ) }
    dend_6 { pt3dadd( 86.1663, -21.9431, 72.381, 0.44 ) }
    dend_6 { pt3dadd( 86.9681, -22.561, 73.4392, 1.18 ) }
    dend_6 { pt3dadd( 87.9154, -23.3351, 74.8198, 0.22 ) }
    dend_6 { pt3dadd( 88.8282, -24.1318, 76.3477, 0.52 ) }
    dend_6 { pt3dadd( 89.5331, -24.7993, 77.7874, 0.81 ) }
    dend_6 { pt3dadd( 89.9113, -25.2117, 78.8247, 0.81 ) }
    dend_6 { pt3dadd( 90.405, -25.7911, 80.6499, 0.52 ) }
    dend_6 { pt3dadd( 90.5479, -26.0298, 81.7037, 0.52 ) }
    dend_6 { pt3dadd( 90.4858, -26.1204, 82.784, 0.52 ) }
    dend_6 { pt3dadd( 90.1804, -26.0348, 83.7869, 0.52 ) }
    dend_6 { pt3dadd( 89.7753, -25.8288, 84.5569, 1.25 ) }
    dend_6 { pt3dadd( 89.3493, -25.5245, 85.2104, 1.25 ) }
    dend_6 { pt3dadd( 88.8228, -25.0092, 86.0024, 0.37 ) }
    dend_6 { pt3dadd( 88.1653, -24.1829, 87.1405, 0.66 ) }
    dend_6 { pt3dadd( 87.7986, -23.583, 87.9091, 0.37 ) }
    dend_6 { pt3dadd( 87.5434, -22.9394, 88.7428, 0.66 ) }
    dend_6 { pt3dadd( 87.4204, -22.2438, 89.7932, 0.15 ) }
    dend_6 { pt3dadd( 87.4518, -21.8337, 90.5403, 0.15 ) }
    dend_6 { pt3dadd( 87.5414, -21.6219, 91.0162, 0.15 ) }
    dend_6 { pt3dadd( 87.7517, -21.316, 91.8189, 1.62 ) }
    dend_6 { pt3dadd( 88.1828, -20.7736, 93.3838, 0.22 ) }
    dend_6 { pt3dadd( 88.6546, -20.2139, 95.1849, 0.88 ) }
    dend_6 { pt3dadd( 89.0207, -19.8185, 96.7323, 1.4 ) }
    dend_6 { pt3dadd( 89.3155, -19.5106, 98.157, 1.4 ) }
    dend_6 { pt3dadd( 89.6521, -19.1264, 100.15, 0.66 ) }
    dend_6 { pt3dadd( 89.8765, -18.8369, 101.953, 0.29 ) }
    dend_6 { pt3dadd( 89.9526, -18.7413, 102.869, 0.29 ) }
    dend_6 { pt3dadd( 90.0018, -18.6983, 103.787, 0.29 ) }
    dend_6 { pt3dadd( 90.0014, -18.7242, 104.393, 0.29 ) }
    dend_6 { pt3dadd( 89.9247, -18.9744, 105.795, 0.29 ) }
    dend_6 { pt3dadd( 89.827, -19.3057, 106.74, 0.29 ) }
    dend_6 { pt3dadd( 89.6994, -19.7686, 107.797, 0.29 ) }
    dend_6 { pt3dadd( 89.5699, -20.0692, 108.584, 0.29 ) }
    dend_6 { pt3dadd( 89.4143, -20.2208, 109.172, 0.29 ) }
    dend_6 { pt3dadd( 89.2726, -20.2733, 109.564, 0.29 ) }
    dend_6 { pt3dadd( 88.8274, -20.1962, 110.351, 0.88 ) }
    dend_6 { pt3dadd( 88.3011, -19.9516, 111.093, 1.25 ) }
    dend_6 { pt3dadd( 87.7899, -19.6387, 111.779, 0.59 ) }
    dend_6 { pt3dadd( 87.0935, -19.1797, 112.647, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 86.6167, -18.8453, 113.234, 1.4 ) }
    dend_6 { pt3dadd( 85.1437, -17.8064, 114.987, 0.15 ) }
    dend_6 { pt3dadd( 84.5676, -17.4098, 115.623, 0.74 ) }
    dend_6 { pt3dadd( 83.4949, -16.6888, 116.728, 0.22 ) }
    dend_6 { pt3dadd( 82.7439, -16.1947, 117.488, 1.03 ) }
    dend_6 { pt3dadd( 82.2183, -15.8517, 118.033, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 39.1569, 9.85042, 39.5448, 0.15 ) }
    dend_5 { pt3dadd( 38.719, 8.09216, 39.5592, 0.15 ) }
    dend_5 { pt3dadd( 38.544, 7.378, 39.5435, 0.07 ) }
    dend_5 { pt3dadd( 38.3308, 6.52872, 39.5057, 1.03 ) }
    dend_5 { pt3dadd( 38.0246, 5.36162, 39.4253, 0.07 ) }
    dend_5 { pt3dadd( 37.71, 4.21782, 39.3311, 0.07 ) }
    dend_5 { pt3dadd( 37.5225, 3.58111, 39.2724, 0.66 ) }
    dend_5 { pt3dadd( 37.1147, 2.3461, 39.0317, 0.07 ) }
    dend_5 { pt3dadd( 36.9041, 1.71647, 38.8727, 0.07 ) }
    dend_5 { pt3dadd( 36.5983, 0.810904, 38.6074, 0.07 ) }
    dend_5 { pt3dadd( 36.5045, 0.548615, 38.508, 0.29 ) }
    dend_5 { pt3dadd( 36.3266, 0.0548049, 38.28, 0.81 ) }
    dend_5 { pt3dadd( 35.8362, -1.28892, 37.5723, 0.07 ) }
    dend_5 { pt3dadd( 35.5041, -2.20276, 37.0346, 0.07 ) }
    dend_5 { pt3dadd( 35.2757, -2.82556, 36.6271, 0.15 ) }
    dend_5 { pt3dadd( 34.8241, -4.07707, 35.7466, 0.07 ) }
    dend_5 { pt3dadd( 34.5615, -4.85982, 35.1716, 0.07 ) }
    dend_5 { pt3dadd( 34.4231, -5.31807, 34.8246, 0.22 ) }
    dend_5 { pt3dadd( 34.325, -5.67006, 34.5507, 0.22 ) }
    dend_5 { pt3dadd( 34.0222, -6.70729, 33.7277, 0.15 ) }
    dend_5 { pt3dadd( 33.852, -7.3169, 33.251, 0.15 ) }
    dend_5 { pt3dadd( 33.6758, -8.05692, 32.6925, 0.07 ) }
    dend_5 { pt3dadd( 33.5887, -8.46037, 32.385, 0.15 ) }
    dend_5 { pt3dadd( 33.3825, -9.42755, 31.6696, 0.07 ) }
    dend_5 { pt3dadd( 33.2475, -9.9773, 31.2708, 0.59 ) }
    dend_5 { pt3dadd( 32.9457, -10.8769, 30.6199, 0.07 ) }
    dend_5 { pt3dadd( 32.7391, -11.3113, 30.2704, 0.07 ) }
    dend_5 { pt3dadd( 32.5556, -11.5962, 30.0152, 0.22 ) }
    dend_5 { pt3dadd( 32.1322, -12.1507, 29.4949, 0.22 ) }
    dend_5 { pt3dadd( 31.5948, -12.8135, 28.8943, 0.07 ) }
    dend_5 { pt3dadd( 30.9458, -13.6019, 28.2196, 0.07 ) }
    dend_5 { pt3dadd( 30.623, -13.9677, 27.9259, 0.07 ) }
    dend_5 { pt3dadd( 30.2049, -14.3999, 27.6174, 0.07 ) }
    dend_5 { pt3dadd( 29.5058, -15.0679, 27.2348, 0.29 ) }
    dend_5 { pt3dadd( 28.4183, -16.0399, 26.8579, 0.07 ) }
    dend_5 { pt3dadd( 27.9258, -16.4588, 26.7993, 0.29 ) }
    dend_5 { pt3dadd( 27.4887, -16.8345, 26.819, 0.29 ) }
    dend_5 { pt3dadd( 26.664, -17.5652, 26.9224, 0.07 ) }
    dend_5 { pt3dadd( 25.8639, -18.2533, 27.0778, 0.07 ) }
    dend_5 { pt3dadd( 25.5184, -18.5237, 27.1587, 0.22 ) }
    dend_5 { pt3dadd( 24.9822, -18.8933, 27.2831, 0.37 ) }
    dend_5 { pt3dadd( 24.255, -19.3825, 27.4034, 0.29 ) }
    dend_5 { pt3dadd( 23.3429, -19.9643, 27.396, 0.07 ) }
    dend_5 { pt3dadd( 23.011, -20.1582, 27.3353, 0.37 ) }
    dend_5 { pt3dadd( 22.5056, -20.4104, 27.2065, 0.59 ) }
    dend_5 { pt3dadd( 21.4872, -20.8021, 26.9284, 0.07 ) }
    dend_5 { pt3dadd( 20.9549, -20.9541, 26.7766, 0.15 ) }
    dend_5 { pt3dadd( 19.6005, -21.2342, 26.3898, 0.07 ) }
    dend_5 { pt3dadd( 18.6992, -21.3801, 26.1268, 0.07 ) }
    dend_5 { pt3dadd( 17.9221, -21.5295, 25.8849, 0.15 ) }
    dend_5 { pt3dadd( 16.9194, -21.7975, 25.554, 0.07 ) }
    dend_5 { pt3dadd( 16.4202, -21.9946, 25.3817, 0.07 ) }
    dend_5 { pt3dadd( 16.147, -22.1375, 25.291, 0.29 ) }
    dend_5 { pt3dadd( 15.8339, -22.3515, 25.1998, 0.29 ) }
    dend_5 { pt3dadd( 15.0012, -23.0368, 24.9506, 0.07 ) }
    dend_5 { pt3dadd( 14.2509, -23.7347, 24.7278, 0.07 ) }
    dend_5 { pt3dadd( 13.5938, -24.3838, 24.5371, 0.07 ) }
    dend_5 { pt3dadd( 13.3441, -24.6208, 24.4587, 0.07 ) }
    dend_5 { pt3dadd( 13.2122, -24.7375, 24.4114, 0.15 ) }
    dend_5 { pt3dadd( 12.9908, -24.9048, 24.3203, 0.15 ) }
    dend_5 { pt3dadd( 12.5271, -25.1458, 24.1083, 0.15 ) }
    dend_5 { pt3dadd( 11.8471, -25.3465, 23.7778, 0.15 ) }
    dend_5 { pt3dadd( 11.1064, -25.4614, 23.3773, 0.15 ) }
    dend_5 { pt3dadd( 10.6625, -25.5119, 23.1319, 0.15 ) }
    dend_5 { pt3dadd( 10.1822, -25.5614, 22.8651, 0.15 ) }
    dend_5 { pt3dadd( 9.70375, -25.6051, 22.5943, 0.15 ) }
    dend_5 { pt3dadd( 9.33847, -25.6341, 22.3812, 0.15 ) }
    dend_5 { pt3dadd( 8.91123, -25.6513, 22.1479, 0.15 ) }
    dend_5 { pt3dadd( 8.06445, -25.6358, 21.7135, 0.07 ) }
    dend_5 { pt3dadd( 7.50607, -25.6267, 21.446, 0.07 ) }
    dend_5 { pt3dadd( 6.74339, -25.6734, 21.1042, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -47.5374, 47.5579, 46.6726, 0.07 ) }
    dend_62 { pt3dadd( -48.0127, 47.0595, 47.7454, 0.07 ) }
    dend_62 { pt3dadd( -48.2566, 46.7198, 48.4549, 0.88 ) }
    dend_62 { pt3dadd( -48.5088, 46.2474, 49.4132, 0.22 ) }
    dend_62 { pt3dadd( -48.6866, 45.9265, 50.0694, 0.88 ) }
    dend_62 { pt3dadd( -48.9319, 45.4978, 50.94, 1.84 ) }
    dend_62 { pt3dadd( -49.3904, 44.6607, 52.5859, 0.22 ) }
    dend_62 { pt3dadd( -49.5521, 44.2515, 53.2704, 0.22 ) }
    dend_62 { pt3dadd( -49.6787, 43.871, 53.7975, 0.22 ) }
    dend_62 { pt3dadd( -49.9022, 43.1656, 54.6437, 0.15 ) }
    dend_62 { pt3dadd( -50.0652, 42.6379, 55.2123, 0.15 ) }
    dend_62 { pt3dadd( -50.2151, 42.2099, 55.6119, 0.29 ) }
    dend_62 { pt3dadd( -50.5759, 41.2943, 56.3354, 1.25 ) }
    dend_62 { pt3dadd( -51.1647, 39.8983, 57.3506, 0.07 ) }
    dend_62 { pt3dadd( -51.3675, 39.4205, 57.6782, 0.88 ) }
    dend_62 { pt3dadd( -51.4717, 39.1545, 57.8555, 1.18 ) }
    dend_62 { pt3dadd( -51.8931, 38.1294, 58.5458, 0.07 ) }
    dend_62 { pt3dadd( -52.108, 37.6349, 58.8971, 0.74 ) }
    dend_62 { pt3dadd( -52.4755, 36.7706, 59.6113, 0.07 ) }
    dend_62 { pt3dadd( -52.6004, 36.4001, 59.9725, 0.29 ) }
    dend_62 { pt3dadd( -52.6978, 35.8693, 60.5679, 0.07 ) }
    dend_62 { pt3dadd( -52.6875, 35.4289, 61.1545, 1.03 ) }
    dend_62 { pt3dadd( -52.612, 35.1411, 61.6244, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -52.3305, 34.5266, 62.7845, 0.22 ) }
    dend_62 { pt3dadd( -52.0601, 34.1088, 63.6799, 0.22 ) }
    dend_62 { pt3dadd( -51.7828, 33.7309, 64.5915, 0.22 ) }
    dend_62 { pt3dadd( -51.6003, 33.4601, 65.3148, 0.22 ) }
    dend_62 { pt3dadd( -51.5177, 33.2968, 65.7442, 0.22 ) }
    dend_62 { pt3dadd( -51.4872, 33.026, 66.2963, 0.22 ) }
    dend_62 { pt3dadd( -51.524, 32.7841, 66.6929, 0.22 ) }
    dend_62 { pt3dadd( -51.6694, 32.3786, 67.2775, 0.22 ) }
    dend_62 { pt3dadd( -51.9292, 31.7451, 68.0369, 1.03 ) }
    dend_62 { pt3dadd( -52.1749, 31.1021, 68.7125, 1.47 ) }
    dend_62 { pt3dadd( -52.5971, 29.8283, 69.9334, 0.07 ) }
    dend_62 { pt3dadd( -52.7102, 29.4893, 70.2488, 1.25 ) }
    dend_62 { pt3dadd( -52.8851, 29.001, 70.7028, 1.4 ) }
    dend_62 { pt3dadd( -53.267, 28.0263, 71.5904, 0.29 ) }
    dend_62 { pt3dadd( -53.542, 27.4204, 72.1416, 0.15 ) }
    dend_62 { pt3dadd( -53.8085, 26.9445, 72.5832, 0.81 ) }
    dend_62 { pt3dadd( -54.4369, 25.9746, 73.4872, 0.15 ) }
    dend_62 { pt3dadd( -54.8395, 25.455, 73.9612, 0.15 ) }
    dend_62 { pt3dadd( -55.1526, 25.0961, 74.2923, 0.37 ) }
    dend_62 { pt3dadd( -55.7319, 24.5441, 74.7576, 0.15 ) }
    dend_62 { pt3dadd( -56.0577, 24.2602, 74.9628, 0.88 ) }
    dend_62 { pt3dadd( -56.3923, 23.9814, 75.1365, 1.55 ) }
    dend_62 { pt3dadd( -57.7394, 22.9036, 75.7562, 0.22 ) }
    dend_62 { pt3dadd( -58.0885, 22.6366, 75.9206, 0.22 ) }
    dend_62 { pt3dadd( -58.9259, 22.0412, 76.3461, 0.81 ) }
    dend_62 { pt3dadd( -60.0141, 21.3229, 76.9545, 0.07 ) }
    dend_62 { pt3dadd( -60.428, 21.0746, 77.2258, 0.74 ) }
    dend_62 { pt3dadd( -61.049, 20.7386, 77.7207, 0.22 ) }
    dend_62 { pt3dadd( -61.6977, 20.4103, 78.3745, 0.37 ) }
    dend_62 { pt3dadd( -62.116, 20.2043, 78.8792, 0.22 ) }
    dend_62 { pt3dadd( -62.7294, 19.8863, 79.8002, 1.03 ) }
    dend_62 { pt3dadd( -63.3091, 19.5177, 80.8928, 0.07 ) }
    dend_62 { pt3dadd( -63.6906, 19.1989, 81.8007, 0.88 ) }
    dend_62 { pt3dadd( -63.9771, 18.891, 82.6039, 1.25 ) }
    dend_62 { pt3dadd( -64.4836, 18.2322, 84.0391, 0.15 ) }
    dend_62 { pt3dadd( -64.7313, 17.8669, 84.7064, 0.74 ) }
    dend_62 { pt3dadd( -65.226, 17.0885, 85.8845, 0.22 ) }
    dend_62 { pt3dadd( -65.7367, 16.283, 86.8883, 1.11 ) }
    dend_62 { pt3dadd( -66.0793, 15.7789, 87.4354, 2.06 ) }
    dend_62 { pt3dadd( -67.0027, 14.5383, 88.66, 0.15 ) }
    dend_62 { pt3dadd( -67.3702, 14.0848, 89.081, 0.29 ) }
    dend_62 { pt3dadd( -68.2219, 13.1457, 89.9526, 0.07 ) }
    dend_62 { pt3dadd( -68.6507, 12.7463, 90.358, 0.22 ) }
    dend_62 { pt3dadd( -69.465, 12.0907, 91.1478, 0.07 ) }
    dend_62 { pt3dadd( -69.903, 11.794, 91.6374, 1.4 ) }
    dend_62 { pt3dadd( -70.8765, 11.2454, 92.8911, 0.07 ) }
    dend_62 { pt3dadd( -71.3475, 11.0096, 93.5359, 0.81 ) }
    dend_62 { pt3dadd( -72.1125, 10.6877, 94.6927, 0.07 ) }
    dend_62 { pt3dadd( -72.5702, 10.5265, 95.4501, 0.96 ) }
    dend_62 { pt3dadd( -73.4128, 10.3061, 96.8968, 0.07 ) }
    dend_62 { pt3dadd( -73.7315, 10.2449, 97.4348, 0.07 ) }
    dend_62 { pt3dadd( -74.1473, 10.183, 98.116, 1.25 ) }
    dend_62 { pt3dadd( -75.1161, 10.0439, 99.6008, 0.22 ) }
    dend_62 { pt3dadd( -75.7983, 9.93022, 100.558, 0.88 ) }
    dend_62 { pt3dadd( -76.2675, 9.87022, 101.131, 1.18 ) }
    dend_62 { pt3dadd( -77.688, 9.72672, 102.645, 0.15 ) }
    dend_62 { pt3dadd( -78.1422, 9.68132, 103.076, 0.81 ) }
    dend_62 { pt3dadd( -78.8813, 9.60082, 103.689, 0.15 ) }
    dend_62 { pt3dadd( -79.611, 9.51231, 104.191, 1.18 ) }
    dend_62 { pt3dadd( -80.8034, 9.40929, 104.912, 0.07 ) }
    dend_62 { pt3dadd( -81.3255, 9.39333, 105.199, 0.07 ) }
    dend_62 { pt3dadd( -82.0807, 9.46824, 105.526, 0.07 ) }
    dend_62 { pt3dadd( -82.4814, 9.53961, 105.673, 0.88 ) }
    dend_62 { pt3dadd( -83.0804, 9.67142, 105.875, 1.33 ) }
    dend_62 { pt3dadd( -84.7322, 10.129, 106.373, 0.07 ) }
    dend_62 { pt3dadd( -85.5123, 10.3826, 106.575, 1.33 ) }
    dend_62 { pt3dadd( -87.4248, 11.1279, 107.022, 0.07 ) }
    dend_62 { pt3dadd( -87.7494, 11.2744, 107.087, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -47.5374, 47.5579, 46.6726, 0.15 ) }
    dend_61 { pt3dadd( -47.0956, 46.0233, 46.4995, 0.15 ) }
    dend_61 { pt3dadd( -46.9143, 45.3847, 46.3802, 0.29 ) }
    dend_61 { pt3dadd( -46.6323, 44.4282, 46.1777, 0.15 ) }
    dend_61 { pt3dadd( -46.5167, 44.0588, 46.0868, 0.52 ) }
    dend_61 { pt3dadd( -46.2758, 43.3167, 45.8947, 1.33 ) }
    dend_61 { pt3dadd( -45.8256, 41.882, 45.5435, 0.07 ) }
    dend_61 { pt3dadd( -45.608, 41.1095, 45.3311, 0.07 ) }
    dend_61 { pt3dadd( -45.4229, 40.4485, 45.1797, 0.37 ) }
    dend_61 { pt3dadd( -45.0577, 39.3414, 45.0573, 0.07 ) }
    dend_61 { pt3dadd( -44.932, 39.0073, 45.0627, 0.15 ) }
    dend_61 { pt3dadd( -44.3273, 37.4885, 45.2761, 0.15 ) }
    dend_61 { pt3dadd( -44.1711, 37.1312, 45.3717, 0.74 ) }
    dend_61 { pt3dadd( -43.8261, 36.3354, 45.6493, 1.25 ) }
    dend_61 { pt3dadd( -43.0233, 34.3858, 46.4744, 0.15 ) }
    dend_61 { pt3dadd( -42.5727, 33.2343, 47.0325, 0.15 ) }
    dend_61 { pt3dadd( -42.3761, 32.7155, 47.2931, 0.15 ) }
    dend_61 { pt3dadd( -42.149, 32.0673, 47.6132, 0.15 ) }
    dend_61 { pt3dadd( -41.8979, 31.2276, 47.984, 1.25 ) }
    dend_61 { pt3dadd( -41.5774, 29.7422, 48.5296, 0.07 ) }
    dend_61 { pt3dadd( -41.4983, 29.1204, 48.7122, 0.96 ) }
    dend_61 { pt3dadd( -41.455, 28.5667, 48.8407, 1.25 ) }
    dend_61 { pt3dadd( -41.3342, 26.6984, 49.2092, 0.15 ) }
    dend_61 { pt3dadd( -41.2897, 25.9206, 49.3287, 0.96 ) }
    dend_61 { pt3dadd( -41.1923, 24.4287, 49.4923, 0.07 ) }
    dend_61 { pt3dadd( -41.1407, 23.7109, 49.5379, 0.29 ) }
    dend_61 { pt3dadd( -40.9922, 21.5937, 49.5978, 0.07 ) }
    dend_61 { pt3dadd( -40.9594, 21.1235, 49.5991, 0.29 ) }
    dend_61 { pt3dadd( -40.8493, 19.6508, 49.5602, 0.07 ) }
    dend_61 { pt3dadd( -40.7796, 18.9743, 49.5287, 1.03 ) }
    dend_61 { pt3dadd( -40.6871, 18.3176, 49.4925, 1.47 ) }
    dend_61 { pt3dadd( -40.2619, 15.9718, 49.3694, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -40.136, 15.4313, 49.3464, 0.59 ) }
    dend_61 { pt3dadd( -39.9417, 14.6782, 49.3282, 0.07 ) }
    dend_61 { pt3dadd( -39.7506, 13.9693, 49.3443, 0.07 ) }
    dend_61 { pt3dadd( -39.4872, 13.0159, 49.4021, 0.07 ) }
    dend_61 { pt3dadd( -39.2684, 12.1686, 49.4951, 1.18 ) }
    dend_61 { pt3dadd( -38.733, 9.97792, 49.8275, 0.07 ) }
    dend_61 { pt3dadd( -38.61, 9.34518, 49.936, 0.74 ) }
    dend_61 { pt3dadd( -38.3612, 7.65813, 50.2474, 0.07 ) }
    dend_61 { pt3dadd( -38.3158, 7.17629, 50.3391, 0.44 ) }
    dend_61 { pt3dadd( -38.2321, 5.53491, 50.6843, 0.07 ) }
    dend_61 { pt3dadd( -38.2253, 4.69622, 50.8815, 1.47 ) }
    dend_61 { pt3dadd( -38.2827, 2.97498, 51.3203, 0.07 ) }
    dend_61 { pt3dadd( -38.3175, 2.44197, 51.4533, 0.37 ) }
    dend_61 { pt3dadd( -38.4225, 1.37514, 51.7041, 0.07 ) }
    dend_61 { pt3dadd( -38.5835, -0.0450111, 52.0676, 0.07 ) }
    dend_61 { pt3dadd( -38.6966, -0.959948, 52.3138, 0.07 ) }
    dend_61 { pt3dadd( -38.744, -1.43533, 52.452, 0.37 ) }
    dend_61 { pt3dadd( -38.8243, -2.60499, 52.8131, 0.15 ) }
    dend_61 { pt3dadd( -38.8566, -3.32767, 53.0611, 0.81 ) }
    dend_61 { pt3dadd( -38.8766, -4.57111, 53.5259, 0.15 ) }
    dend_61 { pt3dadd( -38.8596, -5.58472, 53.9371, 1.55 ) }
    dend_61 { pt3dadd( -38.7917, -7.23168, 54.6739, 0.07 ) }
    dend_61 { pt3dadd( -38.7569, -7.71883, 54.9234, 0.66 ) }
    dend_61 { pt3dadd( -38.5843, -9.02622, 55.6811, 0.07 ) }
    dend_61 { pt3dadd( -38.4783, -9.48248, 55.9584, 0.29 ) }
    dend_61 { pt3dadd( -38.2546, -10.1518, 56.378, 0.07 ) }
    dend_61 { pt3dadd( -38.1009, -10.5629, 56.6587, 0.74 ) }
    dend_61 { pt3dadd( -37.6691, -11.6066, 57.4154, 0.15 ) }
    dend_61 { pt3dadd( -37.241, -12.503, 58.0601, 1.18 ) }
    dend_61 { pt3dadd( -36.1957, -14.2507, 59.2711, 0.15 ) }
    dend_61 { pt3dadd( -35.8127, -14.8332, 59.6626, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -9.31161, 86.9121, 132.587, 0.07 ) }
    dend_59 { pt3dadd( -10.1856, 84.7992, 132.96, 0.07 ) }
    dend_59 { pt3dadd( -10.4453, 83.9401, 133.067, 0.07 ) }
    dend_59 { pt3dadd( -10.7099, 83.0648, 133.176, 0.22 ) }
    dend_59 { pt3dadd( -11.2094, 81.4126, 133.382, 0.07 ) }
    dend_59 { pt3dadd( -11.4126, 80.7405, 133.466, 0.52 ) }
    dend_59 { pt3dadd( -11.7549, 79.6081, 133.607, 0.07 ) }
    dend_59 { pt3dadd( -11.8009, 79.0465, 133.652, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -9.31161, 86.9121, 132.587, 0.29 ) }
    dend_58 { pt3dadd( -8.75859, 87.1638, 134.665, 0.29 ) }
    dend_58 { pt3dadd( -8.35577, 87.201, 136.188, 0.29 ) }
    dend_58 { pt3dadd( -7.97812, 87.1305, 137.921, 0.59 ) }
    dend_58 { pt3dadd( -7.55547, 87.0079, 140.244, 0.74 ) }
    dend_58 { pt3dadd( -7.3924, 86.966, 141.368, 1.03 ) }
    dend_58 { pt3dadd( -7.25217, 86.9888, 142.695, 1.03 ) }
    dend_58 { pt3dadd( -7.14078, 87.0882, 144.396, 0.15 ) }
    dend_58 { pt3dadd( -7.13704, 87.2965, 145.698, 0.44 ) }
    dend_58 { pt3dadd( -7.20882, 87.6559, 147.323, 0.81 ) }
    dend_58 { pt3dadd( -7.33978, 87.9919, 148.361, 1.03 ) }
    dend_58 { pt3dadd( -7.64557, 88.7806, 150.235, 0.15 ) }
    dend_58 { pt3dadd( -7.96091, 89.6648, 151.874, 0.74 ) }
    dend_58 { pt3dadd( -8.25899, 90.8085, 153.502, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 11.6308, -15.0005, 2.25832, 0.22 ) }
    dend_55 { pt3dadd( 11.5905, -16.2827, 0.420716, 0.22 ) }
    dend_55 { pt3dadd( 11.5938, -16.8857, -0.286063, 0.37 ) }
    dend_55 { pt3dadd( 11.6175, -17.2635, -0.681899, 0.59 ) }
    dend_55 { pt3dadd( 11.6612, -17.9619, -1.4137, 0.22 ) }
    dend_55 { pt3dadd( 11.7088, -18.7227, -2.21103, 1.47 ) }
    dend_55 { pt3dadd( 11.7574, -19.4984, -3.0238, 0.29 ) }
    dend_55 { pt3dadd( 11.834, -20.2955, -3.60246, 0.15 ) }
    dend_55 { pt3dadd( 11.9307, -21.0621, -4.07899, 1.03 ) }
    dend_55 { pt3dadd( 11.5367, -26.6782, -10.4688, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 11.6308, -15.0005, 2.25832, 0.22 ) }
    dend_52 { pt3dadd( 11.7708, -15.7766, 2.61183, 0.22 ) }
    dend_52 { pt3dadd( 11.8573, -16.517, 2.88567, 1.4 ) }
    dend_52 { pt3dadd( 11.8796, -17.734, 3.2283, 2.65 ) }
    dend_52 { pt3dadd( 11.6909, -20.798, 3.92219, 0.22 ) }
    dend_52 { pt3dadd( 11.6193, -21.4095, 4.0311, 0.22 ) }
    dend_52 { pt3dadd( 11.4681, -22.349, 4.16169, 0.96 ) }
    dend_52 { pt3dadd( 11.1866, -23.4805, 4.24297, 2.06 ) }
    dend_52 { pt3dadd( 10.5938, -25.2674, 4.24418, 0.22 ) }
    dend_52 { pt3dadd( 10.1664, -26.2517, 4.12965, 0.15 ) }
    dend_52 { pt3dadd( 9.79135, -26.9922, 3.9405, 0.29 ) }
    dend_52 { pt3dadd( 9.38046, -27.7453, 3.7284, 0.15 ) }
    dend_52 { pt3dadd( 8.97103, -28.5449, 3.48647, 1.18 ) }
    dend_52 { pt3dadd( 8.7485, -29.0251, 3.33387, 1.7 ) }
    dend_52 { pt3dadd( 7.87783, -31.1422, 2.65014, 0.22 ) }
    dend_52 { pt3dadd( 7.56609, -32.0106, 2.38061, 0.81 ) }
    dend_52 { pt3dadd( 7.38795, -32.5862, 2.21918, 1.4 ) }
    dend_52 { pt3dadd( 6.86741, -34.5825, 1.72401, 0.15 ) }
    dend_52 { pt3dadd( 6.77456, -35.1156, 1.62239, 0.15 ) }
    dend_52 { pt3dadd( 6.68952, -36.2114, 1.47409, 0.15 ) }
    dend_52 { pt3dadd( 6.68555, -36.9373, 1.41582, 0.37 ) }
    dend_52 { pt3dadd( 6.67144, -37.6587, 1.36904, 1.33 ) }
    dend_52 { pt3dadd( 6.61375, -38.4992, 1.31487, 1.84 ) }
    dend_52 { pt3dadd( 6.11945, -41.1317, 1.141, 0.22 ) }
    dend_52 { pt3dadd( 5.7125, -42.5165, 1.02346, 0.07 ) }
    dend_52 { pt3dadd( 5.52542, -43.0984, 0.971819, 0.96 ) }
    dend_52 { pt3dadd( 5.05628, -44.3207, 0.857461, 0.22 ) }
    dend_52 { pt3dadd( 4.61134, -45.2353, 0.753371, 1.33 ) }
    dend_52 { pt3dadd( 3.58433, -46.7376, 0.531661, 0.22 ) }
    dend_52 { pt3dadd( 2.75142, -47.4111, 0.375735, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 12.1671, 30.2978, 31.3177, 0.44 ) }
    dend_44 { pt3dadd( 11.1806, 30.0481, 32.2551, 0.44 ) }
    dend_44 { pt3dadd( 10.3584, 29.9844, 32.9, 0.44 ) }
    dend_44 { pt3dadd( 9.52824, 30.0133, 33.543, 0.44 ) }
    dend_44 { pt3dadd( 9.16697, 30.0428, 33.8357, 0.44 ) }
    dend_44 { pt3dadd( 8.58548, 30.0958, 34.3062, 0.96 ) }
    dend_44 { pt3dadd( 8.21709, 30.1283, 34.5972, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 7.19326, 30.2051, 35.2804, 0.15 ) }
    dend_44 { pt3dadd( 6.69458, 30.2731, 35.6398, 0.15 ) }
    dend_44 { pt3dadd( 6.24876, 30.3384, 36.0164, 0.15 ) }
    dend_44 { pt3dadd( 5.59349, 30.3907, 36.6208, 0.15 ) }
    dend_44 { pt3dadd( 5.22913, 30.3639, 36.9601, 1.33 ) }
    dend_44 { pt3dadd( 4.47051, 30.2078, 37.6408, 1.92 ) }
    dend_44 { pt3dadd( 3.12285, 29.776, 38.7922, 0.22 ) }
    dend_44 { pt3dadd( 2.23451, 29.4134, 39.4879, 0.59 ) }
    dend_44 { pt3dadd( 1.77181, 29.1603, 39.8562, 1.03 ) }
    dend_44 { pt3dadd( 0.709029, 28.4059, 40.761, 0.15 ) }
    dend_44 { pt3dadd( 0.143851, 27.8969, 41.2879, 0.15 ) }
    dend_44 { pt3dadd( -0.109165, 27.6035, 41.539, 0.88 ) }
    dend_44 { pt3dadd( -0.581517, 26.8942, 42.0115, 1.92 ) }
    dend_44 { pt3dadd( -1.51166, 25.2342, 42.9858, 0.22 ) }
    dend_44 { pt3dadd( -1.74372, 24.7865, 43.2591, 0.22 ) }
    dend_44 { pt3dadd( -2.01043, 24.197, 43.5791, 0.22 ) }
    dend_44 { pt3dadd( -2.16531, 23.8618, 43.7563, 0.22 ) }
    dend_44 { pt3dadd( -2.58608, 23.0687, 44.1793, 0.22 ) }
    dend_44 { pt3dadd( -2.95581, 22.4826, 44.4999, 1.11 ) }
    dend_44 { pt3dadd( -3.61047, 21.6508, 44.9596, 2.58 ) }
    dend_44 { pt3dadd( -4.86398, 20.2482, 45.7745, 0.52 ) }
    dend_44 { pt3dadd( -5.83722, 19.1879, 46.4301, 0.15 ) }
    dend_44 { pt3dadd( -6.23975, 18.7478, 46.7262, 0.15 ) }
    dend_44 { pt3dadd( -6.79454, 18.1544, 47.1775, 0.29 ) }
    dend_44 { pt3dadd( -7.31247, 17.6192, 47.6255, 0.96 ) }
    dend_44 { pt3dadd( -8.13196, 16.7666, 48.3622, 0.22 ) }
    dend_44 { pt3dadd( -8.67, 16.2424, 48.8832, 0.22 ) }
    dend_44 { pt3dadd( -9.15456, 15.7258, 49.3466, 0.44 ) }
    dend_44 { pt3dadd( -9.64734, 15.1287, 49.8605, 1.62 ) }
    dend_44 { pt3dadd( -10.092, 14.5412, 50.3762, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 12.1671, 30.2978, 31.3177, 1.47 ) }
    dend_41 { pt3dadd( 13.4223, 30.4772, 31.9589, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -15.8527, -171.681, 41.5162, 0.22 ) }
    dend_23 { pt3dadd( -15.9114, -170.709, 42.0996, 0.22 ) }
    dend_23 { pt3dadd( -15.9652, -169.6, 42.7227, 0.22 ) }
    dend_23 { pt3dadd( -15.9728, -168.718, 43.1802, 0.22 ) }
    dend_23 { pt3dadd( -15.9465, -167.721, 43.6549, 0.66 ) }
    dend_23 { pt3dadd( -15.9075, -166.972, 44.0123, 0.81 ) }
    dend_23 { pt3dadd( -15.7663, -165.56, 44.6671, 0.15 ) }
    dend_23 { pt3dadd( -15.6228, -164.71, 45.0125, 1.18 ) }
    dend_23 { pt3dadd( -15.4462, -163.874, 45.3215, 1.4 ) }
    dend_23 { pt3dadd( -14.9834, -162.047, 45.9584, 0.15 ) }
    dend_23 { pt3dadd( -14.7852, -161.416, 46.1709, 0.15 ) }
    dend_23 { pt3dadd( -14.3, -160.178, 46.6009, 1.7 ) }
    dend_23 { pt3dadd( -13.7554, -159.07, 46.9718, 0.22 ) }
    dend_23 { pt3dadd( -13.2845, -158.224, 47.2425, 0.88 ) }
    dend_23 { pt3dadd( -12.8852, -157.555, 47.4486, 0.22 ) }
    dend_23 { pt3dadd( -12.4447, -156.855, 47.6432, 0.07 ) }
    dend_23 { pt3dadd( -11.9403, -155.99, 47.86, 0.07 ) }
    dend_23 { pt3dadd( -11.2954, -154.786, 48.1574, 0.66 ) }
    dend_23 { pt3dadd( -10.6854, -153.521, 48.4583, 0.07 ) }
    dend_23 { pt3dadd( -10.4786, -153.032, 48.5749, 0.37 ) }
    dend_23 { pt3dadd( -10.2417, -152.382, 48.7245, 0.66 ) }
    dend_23 { pt3dadd( -9.62032, -150.324, 49.2062, 0.07 ) }
    dend_23 { pt3dadd( -9.39098, -149.429, 49.426, 1.03 ) }
    dend_23 { pt3dadd( -9.05669, -147.763, 49.858, 0.15 ) }
    dend_23 { pt3dadd( -8.94657, -147.025, 50.0619, 0.88 ) }
    dend_23 { pt3dadd( -8.8779, -146.393, 50.2417, 1.18 ) }
    dend_23 { pt3dadd( -8.7787, -144.351, 50.8432, 0.15 ) }
    dend_23 { pt3dadd( -8.81551, -143.681, 51.0399, 0.15 ) }
    dend_23 { pt3dadd( -8.94123, -142.944, 51.2406, 0.22 ) }
    dend_23 { pt3dadd( -9.12622, -142.402, 51.3658, 0.07 ) }
    dend_23 { pt3dadd( -9.42674, -141.762, 51.4678, 0.29 ) }
    dend_23 { pt3dadd( -9.76688, -141.172, 51.5239, 0.07 ) }
    dend_23 { pt3dadd( -10.082, -140.694, 51.5282, 0.59 ) }
    dend_23 { pt3dadd( -10.6212, -139.922, 51.5004, 0.15 ) }
    dend_23 { pt3dadd( -11.3351, -138.929, 51.4371, 1.62 ) }
    dend_23 { pt3dadd( -12.0566, -137.924, 51.363, 0.15 ) }
    dend_23 { pt3dadd( -12.5682, -137.217, 51.3187, 0.29 ) }
    dend_23 { pt3dadd( -13.3914, -136.066, 51.2549, 0.07 ) }
    dend_23 { pt3dadd( -14.0032, -135.128, 51.2508, 0.07 ) }
    dend_23 { pt3dadd( -14.3221, -134.589, 51.2733, 0.66 ) }
    dend_23 { pt3dadd( -14.8688, -133.623, 51.339, 0.15 ) }
    dend_23 { pt3dadd( -15.2792, -132.889, 51.4074, 1.03 ) }
    dend_23 { pt3dadd( -15.77, -132.039, 51.5196, 1.62 ) }
    dend_23 { pt3dadd( -17.1633, -129.684, 51.9894, 0.07 ) }
    dend_23 { pt3dadd( -17.7786, -128.634, 52.2432, 0.59 ) }
    dend_23 { pt3dadd( -18.2226, -127.885, 52.4453, 0.15 ) }
    dend_23 { pt3dadd( -18.7884, -126.924, 52.7222, 0.88 ) }
    dend_23 { pt3dadd( -19.5657, -125.51, 53.157, 0.15 ) }
    dend_23 { pt3dadd( -20.2842, -124.225, 53.5893, 0.15 ) }
    dend_23 { pt3dadd( -20.8652, -123.216, 53.9652, 1.33 ) }
    dend_23 { pt3dadd( -21.5808, -121.932, 54.473, 0.15 ) }
    dend_23 { pt3dadd( -22.1159, -120.864, 54.9151, 0.15 ) }
    dend_23 { pt3dadd( -22.4936, -119.93, 55.291, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -15.8527, -171.681, 41.5162, 0.15 ) }
    dend_22 { pt3dadd( -16.3264, -172.972, 41.6772, 0.15 ) }
    dend_22 { pt3dadd( -16.7501, -173.717, 41.8776, 0.15 ) }
    dend_22 { pt3dadd( -17.1373, -174.225, 42.0928, 0.15 ) }
    dend_22 { pt3dadd( -17.5006, -174.625, 42.2858, 0.74 ) }
    dend_22 { pt3dadd( -18.1053, -175.253, 42.5959, 0.15 ) }
    dend_22 { pt3dadd( -18.5646, -175.748, 42.8374, 1.4 ) }
    dend_22 { pt3dadd( -19.3566, -176.53, 43.3313, 0.15 ) }
    dend_22 { pt3dadd( -20.118, -177.269, 43.8358, 0.66 ) }
    dend_22 { pt3dadd( -20.6944, -177.903, 44.3431, 0.07 ) }
    dend_22 { pt3dadd( -20.936, -178.21, 44.6553, 0.07 ) }
    dend_22 { pt3dadd( -21.2113, -178.603, 45.0697, 0.29 ) }
    dend_22 { pt3dadd( -21.6186, -179.276, 45.8233, 0.07 ) }
    dend_22 { pt3dadd( -21.8667, -179.825, 46.4713, 1.25 ) }
    dend_22 { pt3dadd( -22.2144, -180.866, 47.8121, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -22.5118, -181.961, 49.4187, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -58.5266, -128.602, 5.71262, 0.59 ) }
    dend_18 { pt3dadd( -59.4942, -128.377, 5.41424, 0.59 ) }
    dend_18 { pt3dadd( -59.7923, -128.293, 5.30154, 0.07 ) }
    dend_18 { pt3dadd( -60.2009, -128.168, 5.10413, 0.07 ) }
    dend_18 { pt3dadd( -60.4828, -128.076, 4.94867, 0.37 ) }
    dend_18 { pt3dadd( -60.9548, -127.907, 4.65864, 0.07 ) }
    dend_18 { pt3dadd( -61.3154, -127.761, 4.40368, 0.15 ) }
    dend_18 { pt3dadd( -61.8038, -127.555, 3.97188, 1.62 ) }
    dend_18 { pt3dadd( -62.3416, -127.241, 3.29429, 0.22 ) }
    dend_18 { pt3dadd( -62.5227, -127.092, 2.94737, 0.22 ) }
    dend_18 { pt3dadd( -62.6518, -126.962, 2.62905, 0.59 ) }
    dend_18 { pt3dadd( -62.7785, -126.773, 2.14283, 0.59 ) }
    dend_18 { pt3dadd( -62.8408, -126.585, 1.60934, 0.59 ) }
    dend_18 { pt3dadd( -62.7744, -126.383, 0.896346, 1.18 ) }
    dend_18 { pt3dadd( -62.6542, -126.292, 0.520918, 1.18 ) }
    dend_18 { pt3dadd( -65.6762, -124.369, -3.74405, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -58.5266, -128.602, 5.71262, 0.22 ) }
    dend_17 { pt3dadd( -59.6421, -129.19, 5.62616, 0.22 ) }
    dend_17 { pt3dadd( -60.2633, -129.501, 5.57132, 0.15 ) }
    dend_17 { pt3dadd( -61.1929, -129.883, 5.45179, 0.15 ) }
    dend_17 { pt3dadd( -62.0202, -130.179, 5.31568, 1.25 ) }
    dend_17 { pt3dadd( -62.9706, -130.486, 5.16427, 0.15 ) }
    dend_17 { pt3dadd( -63.7799, -130.727, 5.05374, 0.15 ) }
    dend_17 { pt3dadd( -64.8995, -131.008, 4.91602, 1.62 ) }
    dend_17 { pt3dadd( -66.1294, -131.307, 4.80726, 0.22 ) }
    dend_17 { pt3dadd( -66.8819, -131.506, 4.74557, 0.22 ) }
    dend_17 { pt3dadd( -67.7677, -131.75, 4.66945, 1.33 ) }
    dend_17 { pt3dadd( -68.6355, -131.988, 4.60888, 1.11 ) }
    dend_17 { pt3dadd( -70.0873, -132.378, 4.55009, 0.15 ) }
    dend_17 { pt3dadd( -70.5914, -132.528, 4.55168, 0.15 ) }
    dend_17 { pt3dadd( -71.6988, -132.925, 4.62892, 0.15 ) }
    dend_17 { pt3dadd( -72.317, -133.178, 4.72191, 0.15 ) }
    dend_17 { pt3dadd( -72.9176, -133.465, 4.89437, 0.66 ) }
    dend_17 { pt3dadd( -73.6891, -133.866, 5.35399, 0.07 ) }
    dend_17 { pt3dadd( -74.0942, -134.079, 5.8036, 0.88 ) }
    dend_17 { pt3dadd( -74.5794, -134.279, 6.57788, 0.15 ) }
    dend_17 { pt3dadd( -75.0321, -134.385, 7.46884, 0.59 ) }
    dend_17 { pt3dadd( -75.5405, -134.397, 8.68766, 1.4 ) }
    dend_17 { pt3dadd( -76.1786, -134.214, 10.3589, 0.22 ) }
    dend_17 { pt3dadd( -76.6067, -133.94, 11.5914, 1.25 ) }
    dend_17 { pt3dadd( -77.0925, -133.456, 13.1163, 0.44 ) }
    dend_17 { pt3dadd( -77.3445, -133.105, 13.9354, 0.52 ) }
    dend_17 { pt3dadd( -77.611, -132.596, 14.8998, 1.11 ) }
    dend_17 { pt3dadd( -77.8631, -131.923, 16.0222, 0.37 ) }
    dend_17 { pt3dadd( -78.0856, -131.104, 17.3584, 0.07 ) }
    dend_17 { pt3dadd( -78.1877, -130.663, 18.1287, 0.07 ) }
    dend_17 { pt3dadd( -78.2287, -130.363, 18.7062, 0.22 ) }
    dend_17 { pt3dadd( -78.2334, -129.975, 19.5509, 0.96 ) }
    dend_17 { pt3dadd( -78.1911, -129.631, 20.3733, 2.06 ) }
    dend_17 { pt3dadd( -77.9264, -128.931, 22.2456, 0.22 ) }
    dend_17 { pt3dadd( -77.6438, -128.51, 23.5763, 0.74 ) }
    dend_17 { pt3dadd( -77.4117, -128.306, 24.494, 0.74 ) }
    dend_17 { pt3dadd( -77.1223, -128.194, 25.4699, 0.74 ) }
    dend_17 { pt3dadd( -76.9731, -128.197, 25.8839, 0.74 ) }
    dend_17 { pt3dadd( -76.548, -128.311, 26.8297, 0.74 ) }
    dend_17 { pt3dadd( -75.9871, -128.5, 27.7531, 0.74 ) }
    dend_17 { pt3dadd( -75.6341, -128.611, 28.2896, 0.74 ) }
    dend_17 { pt3dadd( -75.4317, -128.631, 28.6038, 0.74 ) }
    dend_17 { pt3dadd( -74.9442, -128.494, 29.3486, 0.74 ) }
    dend_17 { pt3dadd( -74.4733, -128.197, 29.9497, 0.74 ) }
    dend_17 { pt3dadd( -73.655, -127.53, 30.864, 0.29 ) }
    dend_17 { pt3dadd( -73.2165, -127.119, 31.3195, 0.29 ) }
    dend_17 { pt3dadd( -72.6043, -126.518, 31.8993, 0.07 ) }
    dend_17 { pt3dadd( -72.2182, -126.143, 32.2279, 0.44 ) }
    dend_17 { pt3dadd( -71.2419, -125.194, 32.9746, 0.07 ) }
    dend_17 { pt3dadd( -70.6811, -124.68, 33.3582, 0.07 ) }
    dend_17 { pt3dadd( -70.1208, -124.19, 33.7222, 0.07 ) }
    dend_17 { pt3dadd( -69.7839, -123.915, 33.933, 0.29 ) }
    dend_17 { pt3dadd( -69.1607, -123.412, 34.3032, 0.07 ) }
    dend_17 { pt3dadd( -68.6377, -123.003, 34.6419, 0.37 ) }
    dend_17 { pt3dadd( -68.0357, -122.577, 35.0354, 0.22 ) }
    dend_17 { pt3dadd( -67.7807, -122.435, 35.2106, 0.81 ) }
    dend_17 { pt3dadd( -67.2874, -122.238, 35.6096, 0.37 ) }
    dend_17 { pt3dadd( -66.5502, -122.071, 36.3557, 0.88 ) }
    dend_17 { pt3dadd( -65.7123, -121.947, 37.2997, 0.88 ) }
    dend_17 { pt3dadd( -65.3897, -121.928, 37.7054, 0.88 ) }
    dend_17 { pt3dadd( -64.8037, -121.944, 38.5316, 0.88 ) }
    dend_17 { pt3dadd( -64.3036, -122.012, 39.2688, 0.88 ) }
    dend_17 { pt3dadd( -63.5871, -122.239, 40.3625, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 2.75142, -47.4111, 0.375735, 0.29 ) }
    dend_54 { pt3dadd( 2.48299, -48.4422, 0.691085, 0.29 ) }
    dend_54 { pt3dadd( 2.36182, -48.9633, 0.848002, 0.15 ) }
    dend_54 { pt3dadd( 2.25714, -49.47, 0.995103, 1.03 ) }
    dend_54 { pt3dadd( 2.07028, -50.4234, 1.26086, 0.15 ) }
    dend_54 { pt3dadd( 1.94425, -51.0665, 1.44012, 1.4 ) }
    dend_54 { pt3dadd( 1.65724, -52.5308, 1.8483, 0.07 ) }
    dend_54 { pt3dadd( 1.61186, -52.7519, 1.91069, 0.81 ) }
    dend_54 { pt3dadd( 1.47286, -53.5132, 2.10624, 0.07 ) }
    dend_54 { pt3dadd( 1.39491, -54.0643, 2.24291, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 2.75142, -47.4111, 0.375735, 1.92 ) }
    dend_53 { pt3dadd( 1.96092, -48.1369, 0.867016, 1.92 ) }
    dend_53 { pt3dadd( 1.13943, -48.8569, 1.3613, 2.06 ) }
    dend_53 { pt3dadd( -0.782063, -50.373, 2.45029, 0.22 ) }
    dend_53 { pt3dadd( -1.41934, -50.8479, 2.81441, 0.66 ) }
    dend_53 { pt3dadd( -2.34084, -51.4245, 3.28395, 0.22 ) }
    dend_53 { pt3dadd( -3.02303, -51.7869, 3.58198, 0.96 ) }
    dend_53 { pt3dadd( -3.44001, -51.9871, 3.75741, 1.47 ) }
    dend_53 { pt3dadd( -5.16063, -52.6842, 4.41422, 0.52 ) }
    dend_53 { pt3dadd( -6.1681, -52.9605, 4.73773, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( -8.23598, -53.4723, 5.312, 0.15 ) }
    dend_53 { pt3dadd( -9.39059, -53.7697, 5.60333, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -10.092, 14.5412, 50.3762, 0.07 ) }
    dend_48 { pt3dadd( -11.4863, 14.5705, 50.9796, 0.07 ) }
    dend_48 { pt3dadd( -12.1336, 14.5842, 51.2597, 0.96 ) }
    dend_48 { pt3dadd( -13.0021, 14.6024, 51.6356, 0.07 ) }
    dend_48 { pt3dadd( -13.4607, 14.6121, 51.834, 0.29 ) }
    dend_48 { pt3dadd( -14.2226, 14.6281, 52.1638, 0.07 ) }
    dend_48 { pt3dadd( -15.0493, 14.6455, 52.5215, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -10.092, 14.5412, 50.3762, 0.44 ) }
    dend_45 { pt3dadd( -10.1836, 13.253, 51.3099, 0.44 ) }
    dend_45 { pt3dadd( -10.1396, 12.1877, 52.1654, 0.96 ) }
    dend_45 { pt3dadd( -10.0545, 11.4342, 52.8243, 0.66 ) }
    dend_45 { pt3dadd( -9.95797, 10.6481, 53.5216, 0.15 ) }
    dend_45 { pt3dadd( -9.95613, 10.2124, 53.8772, 0.15 ) }
    dend_45 { pt3dadd( -9.98572, 9.55454, 54.3819, 0.29 ) }
    dend_45 { pt3dadd( -10.0441, 8.60901, 55.0632, 0.29 ) }
    dend_45 { pt3dadd( -10.1167, 8.00723, 55.4415, 0.74 ) }
    dend_45 { pt3dadd( -10.2023, 7.19523, 55.8852, 1.62 ) }
    dend_45 { pt3dadd( -10.353, 5.14647, 56.8631, 0.22 ) }
    dend_45 { pt3dadd( -10.4198, 4.34087, 57.2074, 1.18 ) }
    dend_45 { pt3dadd( -10.4742, 3.89535, 57.3796, 1.55 ) }
    dend_45 { pt3dadd( -10.6313, 2.69757, 57.7973, 0.29 ) }
    dend_45 { pt3dadd( -10.7415, 1.6251, 58.169, 0.22 ) }
    dend_45 { pt3dadd( -10.777, 0.431376, 58.6166, 0.22 ) }
    dend_45 { pt3dadd( -10.7025, -0.393502, 58.9729, 0.22 ) }
    dend_45 { pt3dadd( -10.635, -1.13914, 59.3469, 0.52 ) }
    dend_45 { pt3dadd( -10.5922, -1.42704, 59.524, 0.52 ) }
    dend_45 { pt3dadd( -10.4714, -1.98691, 59.9524, 0.52 ) }
    dend_45 { pt3dadd( -10.3837, -2.38054, 60.2617, 0.52 ) }
    dend_45 { pt3dadd( -10.2684, -2.86106, 60.5902, 0.52 ) }
    dend_45 { pt3dadd( -10.0608, -3.6721, 61.0961, 0.15 ) }
    dend_45 { pt3dadd( -9.91667, -4.19594, 61.3978, 0.15 ) }
    dend_45 { pt3dadd( -9.80688, -4.59831, 61.6119, 0.44 ) }
    dend_45 { pt3dadd( -9.62185, -5.26862, 61.9482, 1.11 ) }
    dend_45 { pt3dadd( -9.27038, -6.5218, 62.4831, 0.15 ) }
    dend_45 { pt3dadd( -9.13682, -7.02112, 62.6658, 0.15 ) }
    dend_45 { pt3dadd( -8.86947, -8.08418, 63.0309, 0.22 ) }
    dend_45 { pt3dadd( -8.65129, -8.92845, 63.3032, 1.25 ) }
    dend_45 { pt3dadd( -8.40353, -9.72038, 63.5668, 1.99 ) }
    dend_45 { pt3dadd( -7.71611, -11.455, 64.1686, 0.15 ) }
    dend_45 { pt3dadd( -7.37765, -12.1472, 64.386, 1.03 ) }
    dend_45 { pt3dadd( -6.97935, -12.8234, 64.5906, 1.03 ) }
    dend_45 { pt3dadd( -6.05163, -13.9501, 64.9122, 0.15 ) }
    dend_45 { pt3dadd( -5.29491, -14.6311, 65.0949, 0.15 ) }
    dend_45 { pt3dadd( -4.56905, -15.1282, 65.206, 0.15 ) }
    dend_45 { pt3dadd( -3.68572, -15.5788, 65.2759, 0.81 ) }
    dend_45 { pt3dadd( -2.78457, -16.0207, 65.2932, 1.33 ) }
    dend_45 { pt3dadd( -1.03937, -16.9536, 65.214, 0.15 ) }
    dend_45 { pt3dadd( -0.508324, -17.3322, 65.1609, 1.25 ) }
    dend_45 { pt3dadd( 0.368045, -18.1912, 65.0311, 0.29 ) }
    dend_45 { pt3dadd( 1.15141, -19.2559, 64.868, 0.22 ) }
    dend_45 { pt3dadd( 1.61815, -20.1278, 64.7271, 0.15 ) }
    dend_45 { pt3dadd( 2.00213, -21.1892, 64.5142, 1.77 ) }
    dend_45 { pt3dadd( 2.50237, -23.3807, 63.9793, 0.07 ) }
    dend_45 { pt3dadd( 2.61093, -24.0419, 63.7998, 0.81 ) }
    dend_45 { pt3dadd( 2.73074, -25.2292, 63.4644, 0.07 ) }
    dend_45 { pt3dadd( 2.78571, -26.2342, 63.1773, 0.96 ) }
    dend_45 { pt3dadd( 2.82449, -27.1688, 62.8888, 2.06 ) }
    dend_45 { pt3dadd( 2.94753, -29.3404, 62.1844, 0.07 ) }
    dend_45 { pt3dadd( 3.03805, -30.3774, 61.8411, 0.22 ) }
    dend_45 { pt3dadd( 3.14651, -31.5856, 61.495, 0.15 ) }
    dend_45 { pt3dadd( 3.23466, -32.5867, 61.2582, 1.47 ) }
    dend_45 { pt3dadd( 3.30355, -33.6964, 61.0315, 0.66 ) }
    dend_45 { pt3dadd( 3.32551, -34.8207, 60.8236, 0.66 ) }
    dend_45 { pt3dadd( 3.3118, -35.5368, 60.7136, 1.77 ) }
    dend_45 { pt3dadd( 3.25994, -37.0667, 60.4901, 0.07 ) }
    dend_45 { pt3dadd( 3.22907, -37.4978, 60.4354, 0.22 ) }
    dend_45 { pt3dadd( 3.12124, -38.4458, 60.3349, 0.22 ) }
    dend_45 { pt3dadd( 2.98714, -39.2491, 60.2715, 1.55 ) }
    dend_45 { pt3dadd( 2.62295, -40.8515, 60.1494, 0.15 ) }
    dend_45 { pt3dadd( 2.4287, -41.5595, 60.0763, 0.59 ) }
    dend_45 { pt3dadd( 2.1759, -42.4302, 59.9465, 0.15 ) }
    dend_45 { pt3dadd( 1.96899, -43.1495, 59.8217, 0.15 ) }
    dend_45 { pt3dadd( 1.78376, -43.8028, 59.6972, 0.74 ) }
    dend_45 { pt3dadd( 1.55395, -44.5954, 59.5188, 1.25 ) }
    dend_45 { pt3dadd( 1.07086, -46.0311, 59.1887, 0.07 ) }
    dend_45 { pt3dadd( 0.79575, -46.8186, 59.0114, 0.15 ) }
    dend_45 { pt3dadd( 0.558325, -47.5032, 58.8887, 0.74 ) }
    dend_45 { pt3dadd( 0.335865, -48.1181, 58.8179, 1.4 ) }
    dend_45 { pt3dadd( -0.0506271, -49.1568, 58.7691, 0.15 ) }
    dend_45 { pt3dadd( -0.437931, -50.1319, 58.8376, 0.07 ) }
    dend_45 { pt3dadd( -0.646829, -50.5902, 58.9356, 0.29 ) }
    dend_45 { pt3dadd( -1.28365, -51.7291, 59.2891, 0.07 ) }
    dend_45 { pt3dadd( -1.62452, -52.292, 59.4968, 0.88 ) }
    dend_45 { pt3dadd( -1.86119, -52.6495, 59.6474, 1.33 ) }
    dend_45 { pt3dadd( -2.60845, -53.679, 60.1449, 0.22 ) }
    dend_45 { pt3dadd( -3.10328, -54.3515, 60.4787, 0.22 ) }
    dend_45 { pt3dadd( -3.5824, -54.9648, 60.8025, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 13.4223, 30.4772, 31.9589, 0.15 ) }
    dend_43 { pt3dadd( 13.9537, 31.7086, 32.5194, 0.15 ) }
    dend_43 { pt3dadd( 14.1338, 32.1422, 32.7612, 0.22 ) }
    dend_43 { pt3dadd( 14.4104, 32.8406, 33.2287, 0.15 ) }
    dend_43 { pt3dadd( 14.5629, 33.2627, 33.5318, 0.96 ) }
    dend_43 { pt3dadd( 14.7538, 33.8416, 33.957, 0.29 ) }
    dend_43 { pt3dadd( 14.9047, 34.2883, 34.2824, 0.29 ) }
    dend_43 { pt3dadd( 15.0658, 34.7937, 34.6979, 0.29 ) }
    dend_43 { pt3dadd( 15.2354, 35.2883, 35.0732, 0.29 ) }
    dend_43 { pt3dadd( 15.4122, 35.7618, 35.4001, 1.25 ) }
    dend_43 { pt3dadd( 15.4899, 35.946, 35.5189, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 15.985, 36.9766, 36.1577, 0.15 ) }
    dend_43 { pt3dadd( 16.4128, 37.7341, 36.5831, 1.33 ) }
    dend_43 { pt3dadd( 17.0783, 38.7682, 37.1128, 0.07 ) }
    dend_43 { pt3dadd( 17.4816, 39.3026, 37.3721, 0.59 ) }
    dend_43 { pt3dadd( 18.0723, 39.9998, 37.7068, 0.15 ) }
    dend_43 { pt3dadd( 18.6117, 40.6073, 37.9965, 1.11 ) }
    dend_43 { pt3dadd( 19.0542, 41.1586, 38.2478, 2.14 ) }
    dend_43 { pt3dadd( 19.273, 41.4768, 38.3851, 1.84 ) }
    dend_43 { pt3dadd( 19.8176, 42.6585, 38.899, 0.15 ) }
    dend_43 { pt3dadd( 19.9799, 43.3755, 39.1975, 1.4 ) }
    dend_43 { pt3dadd( 20.0039, 43.9756, 39.4487, 0.96 ) }
    dend_43 { pt3dadd( 19.9006, 45.5364, 40.1627, 0.15 ) }
    dend_43 { pt3dadd( 19.8106, 46.1684, 40.4846, 0.96 ) }
    dend_43 { pt3dadd( 19.5585, 47.4252, 41.2337, 0.15 ) }
    dend_43 { pt3dadd( 19.4523, 47.8335, 41.5195, 1.18 ) }
    dend_43 { pt3dadd( 19.2762, 48.588, 42.1384, 0.15 ) }
    dend_43 { pt3dadd( 19.182, 49.3017, 42.838, 0.59 ) }
    dend_43 { pt3dadd( 19.1865, 49.5292, 43.1069, 0.88 ) }
    dend_43 { pt3dadd( 19.2992, 50.2849, 44.0886, 0.22 ) }
    dend_43 { pt3dadd( 19.4418, 50.7777, 44.7659, 0.88 ) }
    dend_43 { pt3dadd( 19.585, 51.1972, 45.3527, 1.77 ) }
    dend_43 { pt3dadd( 19.8904, 51.9987, 46.4242, 0.29 ) }
    dend_43 { pt3dadd( 20.0707, 52.3984, 46.9165, 0.81 ) }
    dend_43 { pt3dadd( 20.4441, 53.1321, 47.7616, 0.22 ) }
    dend_43 { pt3dadd( 20.7461, 53.6706, 48.335, 0.37 ) }
    dend_43 { pt3dadd( 20.9188, 53.9587, 48.6229, 0.37 ) }
    dend_43 { pt3dadd( 21.3645, 54.6621, 49.2846, 1.55 ) }
    dend_43 { pt3dadd( 21.9865, 55.5954, 50.0823, 0.07 ) }
    dend_43 { pt3dadd( 22.483, 56.3371, 50.6571, 0.22 ) }
    dend_43 { pt3dadd( 22.8189, 56.8416, 51.0138, 0.22 ) }
    dend_43 { pt3dadd( 23.1141, 57.2939, 51.3184, 0.22 ) }
    dend_43 { pt3dadd( 23.4526, 57.8421, 51.6689, 0.07 ) }
    dend_43 { pt3dadd( 23.7324, 58.3429, 51.9697, 1.11 ) }
    dend_43 { pt3dadd( 23.8816, 58.6349, 52.1249, 1.4 ) }
    dend_43 { pt3dadd( 24.4011, 59.6403, 52.5963, 0.07 ) }
    dend_43 { pt3dadd( 24.7231, 60.2633, 52.8767, 0.74 ) }
    dend_43 { pt3dadd( 24.9114, 60.6587, 53.057, 0.74 ) }
    dend_43 { pt3dadd( 25.2075, 61.324, 53.3666, 0.22 ) }
    dend_43 { pt3dadd( 25.5479, 62.1136, 53.7324, 0.22 ) }
    dend_43 { pt3dadd( 25.7722, 62.6381, 53.969, 0.96 ) }
    dend_43 { pt3dadd( 25.9208, 62.9963, 54.1262, 0.96 ) }
    dend_43 { pt3dadd( 26.4471, 64.3641, 54.7183, 0.15 ) }
    dend_43 { pt3dadd( 26.7223, 65.1235, 55.0519, 0.15 ) }
    dend_43 { pt3dadd( 26.831, 65.4647, 55.2006, 0.22 ) }
    dend_43 { pt3dadd( 27.0641, 66.4207, 55.6005, 0.07 ) }
    dend_43 { pt3dadd( 27.1639, 66.9165, 55.8106, 0.07 ) }
    dend_43 { pt3dadd( 27.2887, 67.725, 56.1487, 0.96 ) }
    dend_43 { pt3dadd( 27.3634, 68.3882, 56.4201, 0.22 ) }
    dend_43 { pt3dadd( 27.4144, 69.1308, 56.7176, 1.25 ) }
    dend_43 { pt3dadd( 27.4837, 70.7558, 57.372, 0.15 ) }
    dend_43 { pt3dadd( 27.5015, 71.5541, 57.6893, 1.33 ) }
    dend_43 { pt3dadd( 27.5203, 72.8335, 58.1948, 0.15 ) }
    dend_43 { pt3dadd( 27.5224, 73.2324, 58.358, 0.22 ) }
    dend_43 { pt3dadd( 27.5125, 74.1079, 58.7223, 0.15 ) }
    dend_43 { pt3dadd( 27.4937, 74.706, 58.9726, 0.81 ) }
    dend_43 { pt3dadd( 27.4877, 74.8157, 59.0171, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 13.4223, 30.4772, 31.9589, 0.29 ) }
    dend_42 { pt3dadd( 14.5598, 31.2556, 33.0644, 0.29 ) }
    dend_42 { pt3dadd( 15.5991, 32.0921, 34.1548, 0.52 ) }
    dend_42 { pt3dadd( 16.1577, 32.6059, 34.7751, 1.25 ) }
    dend_42 { pt3dadd( 17.151, 33.5956, 35.9006, 0.15 ) }
    dend_42 { pt3dadd( 17.604, 34.0584, 36.4111, 0.15 ) }
    dend_42 { pt3dadd( 17.9422, 34.4151, 36.8033, 0.15 ) }
    dend_42 { pt3dadd( 18.4428, 35.0592, 37.4293, 0.15 ) }
    dend_42 { pt3dadd( 18.8089, 35.5463, 37.8556, 0.81 ) }
    dend_42 { pt3dadd( 19.3163, 36.1768, 38.4092, 1.33 ) }
    dend_42 { pt3dadd( 20.1859, 37.1932, 39.3286, 0.22 ) }
    dend_42 { pt3dadd( 20.6795, 37.6817, 39.8079, 0.22 ) }
    dend_42 { pt3dadd( 21.2638, 38.1552, 40.293, 1.11 ) }
    dend_42 { pt3dadd( 21.7599, 38.498, 40.6618, 1.7 ) }
    dend_42 { pt3dadd( 22.6868, 39.1195, 41.3339, 0.22 ) }
    dend_42 { pt3dadd( 23.1676, 39.4276, 41.6768, 0.88 ) }
    dend_42 { pt3dadd( 24.0983, 39.9653, 42.2844, 0.15 ) }
    dend_42 { pt3dadd( 24.6303, 40.2252, 42.5895, 0.29 ) }
    dend_42 { pt3dadd( 25.1115, 40.4148, 42.8464, 0.29 ) }
    dend_42 { pt3dadd( 25.7406, 40.648, 43.1932, 0.15 ) }
    dend_42 { pt3dadd( 26.4517, 40.9285, 43.6286, 0.15 ) }
    dend_42 { pt3dadd( 27.013, 41.1805, 44.0079, 0.96 ) }
    dend_42 { pt3dadd( 27.693, 41.5008, 44.4967, 0.66 ) }
    dend_42 { pt3dadd( 28.652, 41.7992, 45.1504, 0.15 ) }
    dend_42 { pt3dadd( 29.3096, 41.9657, 45.5965, 0.15 ) }
    dend_42 { pt3dadd( 30.2033, 42.1711, 46.2324, 0.81 ) }
    dend_42 { pt3dadd( 31.5262, 42.4961, 47.2383, 2.14 ) }
    dend_42 { pt3dadd( 32.1933, 42.6757, 47.7793, 2.14 ) }
    dend_42 { pt3dadd( 34.1268, 43.3048, 49.4001, 0.15 ) }
    dend_42 { pt3dadd( 34.8146, 43.5441, 49.9636, 0.15 ) }
    dend_42 { pt3dadd( 35.8366, 43.8753, 50.7587, 0.29 ) }
    dend_42 { pt3dadd( 36.5597, 44.0886, 51.296, 1.33 ) }
    dend_42 { pt3dadd( 37.1768, 44.2775, 51.7555, 1.62 ) }
    dend_42 { pt3dadd( 38.3644, 44.719, 52.6613, 0.15 ) }
    dend_42 { pt3dadd( 38.7455, 44.9211, 52.9962, 0.15 ) }
    dend_42 { pt3dadd( 39.3385, 45.2308, 53.5366, 0.15 ) }
    dend_42 { pt3dadd( 39.6785, 45.4066, 53.8644, 0.15 ) }
    dend_42 { pt3dadd( 40.12, 45.601, 54.3075, 0.29 ) }
    dend_42 { pt3dadd( 40.7836, 45.833, 55.036, 0.66 ) }
    dend_42 { pt3dadd( 41.6746, 46.1146, 56.1548, 0.15 ) }
    dend_42 { pt3dadd( 42.1373, 46.302, 56.8178, 0.15 ) }
    dend_42 { pt3dadd( 42.4734, 46.4876, 57.3601, 0.15 ) }
    dend_42 { pt3dadd( 42.8395, 46.7831, 58.0406, 0.66 ) }
    dend_42 { pt3dadd( 43.4668, 47.4715, 59.4124, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 43.8343, 47.9795, 60.2919, 0.22 ) }
    dend_42 { pt3dadd( 44.1541, 48.4596, 61.057, 1.33 ) }
    dend_42 { pt3dadd( 44.5387, 49.0668, 61.9683, 1.92 ) }
    dend_42 { pt3dadd( 45.3535, 50.3805, 63.8719, 0.37 ) }
    dend_42 { pt3dadd( 45.7936, 51.1197, 64.9193, 0.22 ) }
    dend_42 { pt3dadd( 46.266, 51.9355, 66.0551, 0.22 ) }
    dend_42 { pt3dadd( 46.5008, 52.3234, 66.6513, 0.22 ) }
    dend_42 { pt3dadd( 46.674, 52.6222, 67.2225, 0.22 ) }
    dend_42 { pt3dadd( 46.7968, 52.8321, 67.8216, 0.22 ) }
    dend_42 { pt3dadd( 46.9039, 52.9575, 68.3949, 0.22 ) }
    dend_42 { pt3dadd( 47.0308, 53.1105, 69.0834, 0.52 ) }
    dend_42 { pt3dadd( 47.3094, 53.5608, 70.6979, 1.18 ) }
    dend_42 { pt3dadd( 47.6032, 54.0658, 72.251, 1.4 ) }
    dend_42 { pt3dadd( 48.1396, 54.9646, 74.7316, 0.81 ) }
    dend_42 { pt3dadd( 48.5477, 55.5194, 76.1835, 0.81 ) }
    dend_42 { pt3dadd( 49.1239, 56.1215, 77.7624, 1.7 ) }
    dend_42 { pt3dadd( 50.4054, 57.1671, 80.5253, 0.29 ) }
    dend_42 { pt3dadd( 51.1482, 57.683, 81.8481, 0.29 ) }
    dend_42 { pt3dadd( 51.5949, 57.972, 82.5409, 1.03 ) }
    dend_42 { pt3dadd( 52.5801, 58.613, 83.9822, 0.22 ) }
    dend_42 { pt3dadd( 53.3809, 59.1302, 85.1383, 1.11 ) }
    dend_42 { pt3dadd( 54.3885, 59.6708, 86.5167, 0.29 ) }
    dend_42 { pt3dadd( 55.0759, 59.9491, 87.433, 0.29 ) }
    dend_42 { pt3dadd( 55.4361, 60.074, 87.9557, 0.52 ) }
    dend_42 { pt3dadd( 55.9949, 60.1897, 88.8703, 0.52 ) }
    dend_42 { pt3dadd( 56.1852, 60.22, 89.227, 0.52 ) }
    dend_42 { pt3dadd( 56.4842, 60.2269, 89.7748, 0.52 ) }
    dend_42 { pt3dadd( 57.0933, 60.1292, 90.6195, 0.52 ) }
    dend_42 { pt3dadd( 57.6633, 60.0603, 91.1143, 0.52 ) }
    dend_42 { pt3dadd( 58.7973, 60.027, 91.8907, 0.22 ) }
    dend_42 { pt3dadd( 59.8281, 60.1124, 92.5035, 0.15 ) }
    dend_42 { pt3dadd( 60.2235, 60.2215, 92.7689, 0.15 ) }
    dend_42 { pt3dadd( 60.8978, 60.5405, 93.2596, 0.81 ) }
    dend_42 { pt3dadd( 62.0318, 61.2708, 94.1488, 0.29 ) }
    dend_42 { pt3dadd( 62.8471, 61.9216, 94.8466, 0.81 ) }
    dend_42 { pt3dadd( 63.4755, 62.5616, 95.4363, 1.7 ) }
    dend_42 { pt3dadd( 64.9085, 64.282, 96.9219, 0.22 ) }
    dend_42 { pt3dadd( 65.5906, 65.2706, 97.6884, 0.44 ) }
    dend_42 { pt3dadd( 65.8544, 65.8358, 98.0533, 0.15 ) }
    dend_42 { pt3dadd( 66.1052, 66.6326, 98.4703, 0.88 ) }
    dend_42 { pt3dadd( 66.4569, 68.2862, 99.1642, 0.22 ) }
    dend_42 { pt3dadd( 66.6001, 69.0918, 99.448, 0.88 ) }
    dend_42 { pt3dadd( 66.7096, 69.7473, 99.6388, 1.47 ) }
    dend_42 { pt3dadd( 67.1505, 72.2885, 100.383, 0.22 ) }
    dend_42 { pt3dadd( 67.2669, 72.8517, 100.546, 0.22 ) }
    dend_42 { pt3dadd( 67.4963, 73.6116, 100.776, 0.37 ) }
    dend_42 { pt3dadd( 68.2036, 75.2174, 101.341, 0.22 ) }
    dend_42 { pt3dadd( 68.5616, 75.8652, 101.614, 0.22 ) }
    dend_42 { pt3dadd( 68.9639, 76.4646, 101.94, 0.96 ) }
    dend_42 { pt3dadd( 69.3689, 76.9304, 102.253, 1.55 ) }
    dend_42 { pt3dadd( 70.7021, 78.2769, 103.256, 0.15 ) }
    dend_42 { pt3dadd( 71.6826, 79.135, 103.949, 1.25 ) }
    dend_42 { pt3dadd( 72.5877, 79.8845, 104.588, 1.25 ) }
    dend_42 { pt3dadd( 73.6492, 80.6948, 105.312, 0.74 ) }
    dend_42 { pt3dadd( 74.912, 81.5371, 106.143, 0.15 ) }
    dend_42 { pt3dadd( 75.7631, 82.0413, 106.689, 0.29 ) }
    dend_42 { pt3dadd( 76.3431, 82.3328, 107.025, 0.29 ) }
    dend_42 { pt3dadd( 77.3333, 82.7682, 107.451, 0.29 ) }
    dend_42 { pt3dadd( 78.326, 83.1874, 107.771, 0.81 ) }
    dend_42 { pt3dadd( 79.733, 83.8537, 108.153, 0.15 ) }
    dend_42 { pt3dadd( 80.5024, 84.2815, 108.372, 1.11 ) }
    dend_42 { pt3dadd( 80.8929, 84.5289, 108.488, 1.77 ) }
    dend_42 { pt3dadd( 82.945, 85.8903, 109.081, 0.22 ) }
    dend_42 { pt3dadd( 83.6753, 86.3629, 109.253, 0.22 ) }
    dend_42 { pt3dadd( 84.5781, 86.9895, 109.434, 0.22 ) }
    dend_42 { pt3dadd( 85.3728, 87.5559, 109.538, 0.22 ) }
    dend_42 { pt3dadd( 85.7909, 87.8732, 109.586, 0.44 ) }
    dend_42 { pt3dadd( 86.612, 88.54, 109.679, 0.44 ) }
    dend_42 { pt3dadd( 87.6662, 89.4278, 109.797, 1.55 ) }
    dend_42 { pt3dadd( 88.808, 90.3054, 109.898, 0.66 ) }
    dend_42 { pt3dadd( 90.3218, 91.2665, 109.995, 0.15 ) }
    dend_42 { pt3dadd( 90.9326, 91.5984, 110.042, 0.15 ) }
    dend_42 { pt3dadd( 91.7033, 91.9693, 110.131, 0.37 ) }
    dend_42 { pt3dadd( 92.9217, 92.4984, 110.31, 0.15 ) }
    dend_42 { pt3dadd( 93.7412, 92.8269, 110.469, 0.81 ) }
    dend_42 { pt3dadd( 95.2782, 93.3783, 110.817, 0.22 ) }
    dend_42 { pt3dadd( 96.073, 93.6501, 110.998, 0.22 ) }
    dend_42 { pt3dadd( 96.9123, 93.9271, 111.168, 1.25 ) }
    dend_42 { pt3dadd( 97.3136, 94.0702, 111.242, 1.25 ) }
    dend_42 { pt3dadd( 98.7621, 94.6371, 111.448, 0.07 ) }
    dend_42 { pt3dadd( 99.6956, 95.0416, 111.541, 0.96 ) }
    dend_42 { pt3dadd( 101.531, 95.8968, 111.639, 0.22 ) }
    dend_42 { pt3dadd( 102.433, 96.3025, 111.656, 1.03 ) }
    dend_42 { pt3dadd( 103.338, 96.6948, 111.647, 1.77 ) }
    dend_42 { pt3dadd( 105.155, 97.5142, 111.606, 0.15 ) }
    dend_42 { pt3dadd( 106.156, 97.9738, 111.563, 0.22 ) }
    dend_42 { pt3dadd( 107.337, 98.5318, 111.51, 0.15 ) }
    dend_42 { pt3dadd( 108.201, 98.9666, 111.487, 1.03 ) }
    dend_42 { pt3dadd( 109.296, 99.5298, 111.475, 0.22 ) }
    dend_42 { pt3dadd( 110.561, 100.191, 111.486, 0.22 ) }
    dend_42 { pt3dadd( 111.882, 100.94, 111.529, 0.15 ) }
    dend_42 { pt3dadd( 112.781, 101.469, 111.562, 0.15 ) }
    dend_42 { pt3dadd( 113.727, 102.035, 111.608, 0.81 ) }
    dend_42 { pt3dadd( 114.045, 102.222, 111.624, 1.77 ) }
    dend_42 { pt3dadd( 115.372, 102.967, 111.628, 0.07 ) }
    dend_42 { pt3dadd( 116.373, 103.513, 111.561, 0.59 ) }
    dend_42 { pt3dadd( 118.471, 104.707, 111.262, 0.22 ) }
    dend_42 { pt3dadd( 118.919, 104.963, 111.177, 0.59 ) }
    dend_42 { pt3dadd( 119.77, 105.433, 110.981, 0.66 ) }
    dend_42 { pt3dadd( 121.468, 106.365, 110.541, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 122.145, 106.728, 110.323, 0.07 ) }
    dend_42 { pt3dadd( 122.556, 106.931, 110.154, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -15.0493, 14.6455, 52.5215, 0.15 ) }
    dend_50 { pt3dadd( -16.2414, 14.9736, 53.3193, 0.15 ) }
    dend_50 { pt3dadd( -17.1919, 15.2978, 53.6836, 0.15 ) }
    dend_50 { pt3dadd( -18.2988, 15.7298, 53.8848, 0.07 ) }
    dend_50 { pt3dadd( -18.8545, 15.9586, 53.8821, 0.07 ) }
    dend_50 { pt3dadd( -20.1243, 16.4707, 53.7065, 0.07 ) }
    dend_50 { pt3dadd( -21.1125, 16.8496, 53.4687, 0.07 ) }
    dend_50 { pt3dadd( -21.5679, 17.03, 53.2289, 0.07 ) }
    dend_50 { pt3dadd( -21.9835, 17.2132, 52.8956, 0.29 ) }
    dend_50 { pt3dadd( -22.5415, 17.4825, 52.2984, 0.29 ) }
    dend_50 { pt3dadd( -22.8563, 17.6358, 51.9106, 0.29 ) }
    dend_50 { pt3dadd( -23.1419, 17.774, 51.5371, 0.29 ) }
    dend_50 { pt3dadd( -23.4978, 17.9412, 51.0439, 0.29 ) }
    dend_50 { pt3dadd( -24.1731, 18.2044, 50.1307, 0.22 ) }
    dend_50 { pt3dadd( -24.6588, 18.3401, 49.5031, 0.22 ) }
    dend_50 { pt3dadd( -25.4819, 18.5137, 48.5007, 0.88 ) }
    dend_50 { pt3dadd( -26.1996, 18.6293, 47.6485, 0.22 ) }
    dend_50 { pt3dadd( -26.532, 18.666, 47.272, 0.22 ) }
    dend_50 { pt3dadd( -27.0747, 18.7008, 46.6846, 0.15 ) }
    dend_50 { pt3dadd( -27.7158, 18.7278, 46.0501, 0.15 ) }
    dend_50 { pt3dadd( -28.3646, 18.7538, 45.4067, 0.15 ) }
    dend_50 { pt3dadd( -28.9326, 18.7889, 44.8252, 0.15 ) }
    dend_50 { pt3dadd( -29.4083, 18.8448, 44.3211, 0.74 ) }
    dend_50 { pt3dadd( -29.8214, 18.9128, 43.8868, 0.74 ) }
    dend_50 { pt3dadd( -30.4355, 19.037, 43.2027, 0.15 ) }
    dend_50 { pt3dadd( -31.159, 19.1818, 42.3273, 0.22 ) }
    dend_50 { pt3dadd( -31.4629, 19.2299, 41.9237, 0.22 ) }
    dend_50 { pt3dadd( -31.9265, 19.2909, 41.2088, 0.22 ) }
    dend_50 { pt3dadd( -32.1087, 19.3091, 40.8812, 0.22 ) }
    dend_50 { pt3dadd( -32.4192, 19.3202, 40.2606, 0.22 ) }
    dend_50 { pt3dadd( -32.6808, 19.2782, 39.6043, 0.22 ) }
    dend_50 { pt3dadd( -32.8213, 19.209, 39.124, 0.22 ) }
    dend_50 { pt3dadd( -32.9608, 19.0911, 38.5107, 0.22 ) }
    dend_50 { pt3dadd( -33.0633, 18.9851, 37.9584, 0.22 ) }
    dend_50 { pt3dadd( -33.252, 18.8212, 37.1309, 0.22 ) }
    dend_50 { pt3dadd( -33.551, 18.5564, 36.0139, 0.44 ) }
    dend_50 { pt3dadd( -33.7546, 18.3549, 35.3376, 0.44 ) }
    dend_50 { pt3dadd( -33.8294, 18.2689, 35.0967, 0.44 ) }
    dend_50 { pt3dadd( -34.0253, 17.9734, 34.3745, 0.44 ) }
    dend_50 { pt3dadd( -34.1605, 17.6444, 33.5815, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -15.0493, 14.6455, 52.5215, 1.03 ) }
    dend_49 { pt3dadd( -15.3448, 14.8563, 52.8895, 1.03 ) }
    dend_49 { pt3dadd( -16.0207, 15.4721, 53.9066, 0.07 ) }
    dend_49 { pt3dadd( -16.242, 15.7103, 54.2877, 0.07 ) }
    dend_49 { pt3dadd( -16.4019, 15.9435, 54.5977, 0.22 ) }
    dend_49 { pt3dadd( -16.6443, 16.3773, 55.115, 0.07 ) }
    dend_49 { pt3dadd( -16.8196, 16.7193, 55.4998, 0.37 ) }
    dend_49 { pt3dadd( -17.0852, 17.3365, 56.1591, 0.15 ) }
    dend_49 { pt3dadd( -17.2806, 17.899, 56.7271, 1.33 ) }
    dend_49 { pt3dadd( -17.7143, 19.2125, 58.0417, 0.07 ) }
    dend_49 { pt3dadd( -17.9659, 20.005, 58.8347, 0.07 ) }
    dend_49 { pt3dadd( -18.0986, 20.4315, 59.2569, 0.66 ) }
    dend_49 { pt3dadd( -18.2419, 20.902, 59.7014, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -3.5824, -54.9648, 60.8025, 0.07 ) }
    dend_47 { pt3dadd( -4.3988, -55.6432, 61.1107, 0.07 ) }
    dend_47 { pt3dadd( -4.91248, -56.07, 61.3046, 0.37 ) }
    dend_47 { pt3dadd( -5.49164, -56.5513, 61.5233, 0.22 ) }
    dend_47 { pt3dadd( -6.09038, -57.0488, 61.7493, 0.88 ) }
    dend_47 { pt3dadd( -6.4881, -57.3793, 61.8994, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -3.5824, -54.9648, 60.8025, 0.07 ) }
    dend_46 { pt3dadd( -3.82178, -53.7267, 60.8102, 0.07 ) }
    dend_46 { pt3dadd( -3.91825, -53.2278, 60.8132, 0.44 ) }
    dend_46 { pt3dadd( -4.03122, -52.6436, 60.8168, 0.15 ) }
    dend_46 { pt3dadd( -4.1557, -51.9997, 60.8208, 0.74 ) }
    dend_46 { pt3dadd( -4.3218, -51.1407, 60.8261, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_1 nseg = 3
    dend_0 nseg = 7
    dend_33 nseg = 3
    dend_26 nseg = 3
    dend_14 nseg = 3
    dend_11 nseg = 3
    dend_2 nseg = 3
    dend_35 nseg = 3
    dend_34 nseg = 3
    dend_28 nseg = 5
    dend_13 nseg = 13
    dend_12 nseg = 7
    dend_7 nseg = 3
    dend_60 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 7
    dend_24 nseg = 5
    dend_9 nseg = 7
    dend_8 nseg = 3
    dend_6 nseg = 7
    dend_5 nseg = 3
    dend_62 nseg = 5
    dend_61 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 5
    dend_43 nseg = 3
    dend_42 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L4_DBC_0d7219bf46_0_0


