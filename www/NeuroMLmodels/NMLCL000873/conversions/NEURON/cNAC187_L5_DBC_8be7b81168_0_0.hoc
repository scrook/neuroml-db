// Cell: cNAC187_L5_DBC_8be7b81168_0_0
/*
{
  "id" : "cNAC187_L5_DBC_8be7b81168_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.01289, -8.8572, 1.11", "2.5944, -1.99962, -8.98235, 1.11", "2.69028, -3.84326, -9.27216, 1.11", "2.75044, -4.88437, -9.47302, 1.03", "2.82801, -6.25649, -9.75121, 1.03", "2.89519, -7.93527, -10.2834, 1.03", "2.89645, -9.29488, -10.8368, 1.18", "2.85112, -10.6086, -11.4845, 1.18", "2.75699, -11.9382, -12.2809, 1.4", "2.64079, -12.7057, -12.9335, 1.55", "2.10163, -15.1965, -15.569, 1.25", "1.77569, -16.4644, -17.2895, 1.25", "1.63674, -17.0069, -18.1953, 1.47", "1.41159, -18.2255, -20.4484, 1.69", "1.17884, -20.6652, -25.1127, 1.69", "1.17908, -20.6977, -25.1742, 1.69", "1.41764, -22.8051, -28.9181, 1.33", "1.68129, -24.2284, -31.2242, 1.11", "1.95112, -25.5629, -33.0974, 1.25", "2.20705, -26.8652, -34.4677, 1.4", "2.31665, -27.7554, -35.0869, 1.4", "2.31748, -28.8858, -35.7404, 1.33", "2.07657, -30.4117, -36.3518, 1.18", "1.7115, -31.5657, -36.8103, 1.18", "1.10646, -32.9394, -37.4645, 1.33", "0.292154, -34.6877, -38.4239, 1.03", "-0.267282, -36.0001, -39.1809, 1.25", "-0.556924, -36.8231, -39.6617, 1.62", "-1.07815, -38.7219, -40.7537, 1.62", "-1.33462, -40.0844, -41.4788, 1.03", "-1.54621, -42.3469, -42.5118, 1.03", "-1.57025, -44.0638, -43.1509, 1.18", "-1.49672, -45.6718, -43.6569, 1.18", "-1.4481, -46.232, -43.8132, 1.55", "-1.35007, -47.1788, -44.0193, 1.55", "-1.23277, -48.474, -44.3079, 1.69", "-1.14851, -49.8136, -44.7071, 1.84", "-1.1029, -51.0338, -45.1961, 1.47", "-1.06098, -52.7026, -45.9529, 1.18", "-1.06054, -54.1381, -46.671, 1.18", "-1.09552, -55.7758, -47.565, 1.18", "-1.09934, -57.5967, -48.4777, 1.33", "-1.01513, -59.1097, -49.069, 1.03", "-0.891886, -60.2685, -49.4932, 1.03", "-0.712238, -61.4823, -49.8791, 1.03", "-0.472928, -63.0086, -50.3307, 1.33", "-0.0553332, -66.1346, -51.2488, 1.33", "0.21709, -68.8807, -52.1461, 1.33", "0.352494, -70.8366, -52.8808, 1.18", "0.422017, -71.9514, -53.3596, 1.4", "0.572679, -73.997, -54.4248, 1.4", "0.73571, -76.1368, -55.7512, 1.33", "0.886277, -78.025, -57.1791, 1.18", "0.894133, -78.0957, -57.237, 1.18", "1.08734, -79.35, -58.2575, 1.47", "1.46204, -81.1475, -59.7615, 1.84", "1.78113, -82.2418, -60.6516, 1.62", "2.26608, -83.5576, -61.6806, 1.55", "2.86165, -85.0927, -62.8738, 1.33", "3.3243, -86.4224, -63.9399, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -9.61039, 0.0228061, 3.68", "-0.493608, -9.67381, 0.0228061, 3.68", "-0.345998, -10.1898, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.1686, 0.142806, 2.43", "1.45989, 10.9263, 0.142806, 2.43", "2.17977, 12.3378, 0.142806, 2.14", "2.68167, 13.3536, 0.147807, 1.92", "2.86928, 13.7446, 0.150885, 1.92", "3.14451, 14.3031, 0.156116, 1.92", "3.32998, 14.6678, 0.159701, 1.92", "3.62325, 15.2143, 0.165856, 1.92", "3.86027, 15.6423, 0.170811, 1.99", "4.21655, 16.2846, 0.17737, 1.99", "4.74066, 17.2811, 0.185811, 1.99", "5.17108, 18.1101, 0.191564, 1.99", "5.62578, 19.027, 0.196217, 1.99", "6.12433, 20.1158, 0.177861, 2.21", "6.54511, 21.1634, 0.140539, 2.21", "6.81042, 21.9492, 0.0883735, 1.99", "6.90154, 22.2916, 0.0505902, 1.99", "7.0648, 23.0572, -0.0569264, 1.99", "7.22211, 24.0394, -0.211751, 2.06", "7.36664, 25.268, -0.439636, 1.92", "7.47504, 26.4556, -0.698281, 1.92", "7.58341, 27.7821, -1.04037, 1.99", "7.63188, 28.4781, -1.24869, 2.14", "7.70929, 29.6432, -1.61481, 2.14", "7.79919, 31.0789, -2.08211, 1.99", "7.841, 31.9536, -2.39682, 2.06", "7.85838, 32.9993, -2.79505, 2.43", "7.86007, 33.811, -3.13941, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.642029", "3.17833, 25.5615, -0.593792, 0.642029", "5.07001, 40.4418, -0.593792, 0.642029" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.3243, -86.4224, -63.9399, 0.52", "2.21252, -87.8288, -65.2051, 0.52", "1.48097, -88.9738, -66.2112, 0.52", "1.09315, -89.8555, -67.0071, 0.52", "0.74183, -91.1614, -68.2371, 0.52", "0.652054, -91.8033, -68.8746, 1.11", "0.605732, -92.5777, -69.624, 1.4", "0.711441, -93.1614, -70.1762, 1.69", "1.08024, -94.2438, -71.1793, 1.62", "1.4724, -95.119, -71.9913, 1.4", "2.05898, -96.2796, -73.0339, 0.88", "2.42875, -97.0118, -73.687, 0.66", "2.95388, -98.071, -74.5632, 0.66", "3.25915, -98.7113, -75.0861, 0.88", "3.61065, -99.4713, -75.6576, 1.11", "3.93575, -100.104, -76.1017, 1.18", "4.29261, -100.707, -76.5064, 1.18", "4.58698, -101.162, -76.8542, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.3243, -86.4224, -63.9399, 0.66", "3.05717, -87.4825, -63.4314, 0.66", "2.7564, -88.2481, -62.9758, 0.52", "2.72883, -88.3036, -62.9428, 0.52", "2.18777, -89.2626, -62.3619, 0.74", "1.65072, -90.1857, -61.8434, 0.88", "1.24418, -90.8801, -61.4392, 0.74", "0.673402, -91.8068, -60.8287, 0.37", "0.278486, -92.4896, -60.3443, 1.18", "-0.0994888, -93.2788, -59.7731, 1.4", "-0.448939, -94.176, -59.1138, 0.96", "-0.658451, -95.1209, -58.3047, 0.74", "-0.706508, -96.0614, -57.3691, 0.29", "-0.625417, -96.9318, -56.4477, 0.74", "-0.507471, -97.51, -55.8113, 0.96", "-0.496538, -97.5507, -55.7687, 0.96", "-0.0562021, -99.1644, -54.2523, 0.59", "0.0937432, -99.9042, -53.7243, 1.11", "0.162898, -100.516, -53.3855, 1.25", "0.147506, -101.144, -53.1378, 1.18", "-0.00970952, -102.266, -52.7714, 0.81", "-0.227692, -103.244, -52.5175, 0.59", "-0.558444, -104.294, -52.3382, 0.44", "-0.585943, -104.369, -52.3249, 0.44", "-0.939983, -105.159, -52.1429, 0.29", "-1.5722, -106.345, -51.8194, 0.29", "-1.98932, -107.072, -51.6018, 0.81", "-2.29979, -107.648, -51.4329, 1.33", "-2.60161, -108.297, -51.3031, 1.33", "-3.01202, -109.395, -51.2495, 0.96", "-3.21525, -110.168, -51.328, 0.81", "-3.35495, -111.001, -51.5228, 0.81", "-3.46009, -112.018, -51.8417, 0.74", "-3.52955, -113.374, -52.3377, 0.44", "-3.54743, -114.589, -52.8662, 0.66", "-3.54303, -115.372, -53.258, 0.74", "-3.55465, -116.082, -53.6181, 1.03", "-3.61282, -116.914, -54.0231, 1.25", "-3.73061, -117.791, -54.3948, 1.11", "-3.93256, -118.869, -54.7678, 0.59", "-4.11967, -119.748, -55.0306, 0.59", "-4.33139, -120.674, -55.3181, 0.66", "-4.48668, -121.345, -55.5225, 0.66", "-4.7016, -122.372, -55.8045, 0.52", "-4.87181, -123.322, -56.0619, 0.52", "-4.97725, -124.156, -56.267, 0.59", "-5.05529, -125.227, -56.5638, 1.25", "-5.06647, -125.638, -56.6916, 1.4", "-5.05819, -126.379, -56.937, 1.4", "-5.02932, -127.461, -57.248, 0.88", "-5.01154, -128.152, -57.4061, 0.52", "-5.02651, -129.356, -57.6171, 0.52", "-5.08395, -130.114, -57.62, 0.52", "-5.09494, -130.193, -57.6067, 0.52", "-5.29509, -131.369, -57.174, 0.52", "-5.3047, -131.431, -57.1434, 0.52", "-5.37329, -131.934, -56.8638, 0.96", "-5.49717, -133.281, -56.0678, 1.33", "-5.54581, -134.299, -55.5236, 0.66", "-5.57018, -135.29, -55.0745, 0.59", "-5.57711, -136.251, -54.7337, 0.74", "-5.57865, -136.328, -54.7108, 0.74", "-5.61018, -137.145, -54.5313, 0.74", "-5.67156, -137.8, -54.452, 1.03", "-5.77927, -138.337, -54.3942, 1.25", "-5.98388, -139.027, -54.3396, 1.18", "-6.2255, -139.664, -54.2924, 0.59", "-6.51285, -140.314, -54.2516, 0.29", "-6.78788, -140.857, -54.2259, 0.29", "-7.01125, -141.272, -54.2089, 0.81", "-7.20517, -141.631, -54.1971, 1.11", "-7.48269, -142.193, -54.1866, 1.11", "-7.75606, -142.906, -54.1808, 0.59", "-7.77099, -142.983, -54.1813, 0.59", "-7.76034, -143.66, -54.1941, 0.44", "-7.74427, -143.727, -54.1962, 0.44", "-7.44786, -144.392, -54.2232, 0.44", "-7.11438, -144.942, -54.2632, 0.81", "-6.72409, -145.503, -54.3147, 1.11", "-6.47744, -145.855, -54.3648, 1.11", "-6.1403, -146.351, -54.4639, 0.88", "-5.85993, -146.812, -54.571, 0.66", "-5.53191, -147.426, -54.7289, 0.66", "-5.24215, -148.064, -54.8954, 0.44", "-4.98074, -148.761, -55.0684, 0.29", "-4.75146, -149.559, -55.2464, 0.88", "-4.62823, -150.174, -55.3582, 0.88", "-4.57094, -150.674, -55.4259, 0.88", "-4.53869, -151.387, -55.4855, 0.74", "-4.54132, -152.106, -55.5188, 0.37", "-4.55996, -152.78, -55.5197, 0.29", "-4.59319, -153.766, -55.5022, 0.29", "-4.61679, -154.571, -55.4882, 0.81", "-4.62387, -155.313, -55.4769, 1.03", "-4.62065, -155.393, -55.4761, 1.03", "-4.54976, -156.027, -55.4737, 1.18", "-4.4388, -156.735, -55.4752, 1.33", "-4.32324, -157.35, -55.4797, 1.33", "-4.12924, -158.287, -55.4973, 0.59", "-3.93871, -159.213, -55.5215, 0.44", "-3.77758, -160.039, -55.5466, 0.44", "-3.63487, -160.796, -55.5699, 0.81", "-3.48346, -161.646, -55.5955, 1.11", "-3.36822, -162.431, -55.617, 1.11", "-3.33295, -162.926, -55.6281, 1.25", "-3.36183, -163.72, -55.6389, 1.11", "-3.48974, -164.711, -55.6667, 0.66", "-3.62576, -165.419, -55.6957, 0.37", "-3.81131, -166.101, -55.7293, 0.29", "-4.08799, -167.082, -55.782, 0.37", "-4.23277, -167.775, -55.864, 0.52", "-4.28945, -168.505, -55.9672, 0.88", "-4.25893, -168.997, -56.0429, 1.03", "-4.21731, -169.209, -56.0768, 1.03", "-3.93833, -170.297, -56.1665, 0.74", "-3.59807, -171.532, -56.1973, 0.59", "-3.34699, -172.506, -56.1883, 0.59", "-3.22219, -173.027, -56.1402, 1.4", "-3.08598, -173.618, -56.0593, 1.77", "-2.73906, -175.249, -55.7263, 0.81", "-2.5866, -176.084, -55.4956, 0.81", "-2.4005, -177.234, -55.0605, 0.81", "-2.19974, -178.354, -54.5931, 1.11", "-2.07887, -178.906, -54.3425, 1.11", "-1.84704, -179.774, -53.9307, 0.88", "-1.81746, -179.876, -53.8798, 0.88", "-1.61636, -180.739, -53.4275, 0.59", "-1.50147, -181.641, -52.9747, 0.59", "-1.44759, -182.355, -52.6565, 0.52", "-1.42449, -182.968, -52.3949, 0.52", "-1.394, -184.416, -51.8532, 0.74", "-1.39063, -185.084, -51.6236, 1.33", "-1.41673, -185.957, -51.3651, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.345998, -10.1898, 0.0228061, 2.73", "-0.0441435, -12.3212, -0.0286079, 2.73", "0.236711, -14.5008, -0.0774166, 2.14", "0.430264, -16.2176, -0.112115, 2.14", "0.626849, -18.183, -0.148454, 2.28", "0.793512, -20.0609, -0.204975, 2.14", "1.00208, -22.4961, -0.294512, 1.92", "1.12109, -24.2854, -0.39062, 2.06", "1.23691, -26.7731, -0.555084, 1.84", "1.26791, -29.0932, -0.760646, 1.84", "1.24553, -30.8426, -0.946935, 1.84", "1.14969, -33.0459, -1.23328, 1.92", "0.95739, -35.1615, -1.58825, 1.92", "0.687336, -36.9048, -1.94153, 1.92", "0.267068, -38.655, -2.32639, 1.84", "-0.310806, -40.5266, -2.75352, 1.84", "-0.73907, -41.6529, -3.01844, 1.77", "-1.75811, -43.9979, -3.59838, 1.69", "-2.92399, -46.4482, -4.20758, 1.69", "-3.94969, -48.4445, -4.72412, 1.84", "-3.98977, -48.5146, -4.74122, 1.84", "-4.59491, -49.4308, -4.9727, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.345998, -10.1898, 0.0228061, 0.96", "-0.71668, -11.6423, -0.751545, 0.96", "-1.11303, -13.1009, -1.36163, 1.25", "-1.63492, -14.822, -1.91857, 0.96", "-1.99691, -15.9426, -2.13713, 1.25", "-2.27936, -16.7346, -2.22828, 1.47", "-2.66319, -17.7576, -2.30315, 1.11", "-3.18775, -19.071, -2.26442, 0.96", "-3.75756, -20.3243, -2.09938, 1.11", "-4.5917, -21.9085, -1.79304, 1.11", "-5.20713, -22.9343, -1.59005, 1.11", "-5.25989, -23.0131, -1.57438, 1.11", "-5.99801, -23.9639, -1.38759, 0.96", "-6.03384, -24.0034, -1.38174, 0.96", "-6.78846, -24.6862, -1.33087, 1.03", "-7.36386, -25.1548, -1.3529, 1.25", "-7.41979, -25.2034, -1.35612, 1.25", "-8.20532, -25.9191, -1.41123, 0.88", "-8.95305, -26.6457, -1.47902, 0.88", "-9.9105, -27.6332, -1.60966, 1.11", "-10.6658, -28.4803, -1.74054, 1.11", "-11.3854, -29.3427, -1.88827, 1.25", "-11.4528, -29.4355, -1.9039, 1.25", "-12.0852, -30.4862, -2.09978, 0.96", "-12.6483, -31.5858, -2.29931, 0.96", "-13.0637, -32.5071, -2.4615, 1.03", "-13.0926, -32.573, -2.47213, 1.03", "-13.596, -33.7195, -2.6362, 1.03", "-13.9824, -34.6151, -2.73836, 1.03", "-14.3114, -35.4141, -2.78407, 1.25", "-14.6425, -36.2576, -2.78496, 1.62", "-15.1513, -37.5234, -2.73946, 1.25", "-15.5369, -38.4535, -2.67483, 1.18", "-15.8394, -39.1247, -2.5738, 1.18", "-16.2267, -39.9412, -2.38043, 1.33", "-16.7133, -40.874, -2.09914, 1.33", "-17.1687, -41.6872, -1.83586, 1.03", "-17.1966, -41.7333, -1.81999, 1.03", "-17.7342, -42.5865, -1.59258, 0.81", "-18.1579, -43.2439, -1.51134, 0.66", "-18.6091, -43.9149, -1.56325, 0.81", "-19.1937, -44.7537, -1.80963, 1.03", "-19.5097, -45.2141, -2.01591, 1.33", "-19.8906, -45.8358, -2.36516, 1.62", "-20.2802, -46.5718, -2.83108, 1.55", "-20.6572, -47.3992, -3.33942, 1.18", "-21.055, -48.3888, -3.88341, 0.96", "-21.0753, -48.4441, -3.90967, 0.96", "-21.5019, -49.7292, -4.43234, 0.88", "-21.8399, -50.8379, -4.78253, 0.88", "-22.0905, -51.8091, -5.00685, 1.18", "-22.3046, -52.7892, -5.18495, 1.4", "-22.5404, -53.8809, -5.3581, 1.4", "-22.7354, -54.6365, -5.48701, 1.18", "-23.0166, -55.5019, -5.63404, 0.96", "-23.3405, -56.2789, -5.79395, 1.11", "-23.8813, -57.2485, -6.08012, 0.88", "-24.3551, -57.9915, -6.33193, 0.74", "-24.924, -58.7267, -6.61133, 0.96", "-25.3712, -59.2036, -6.82958, 1.25", "-26.0556, -59.7883, -7.15766, 1.33", "-26.9608, -60.3859, -7.55378, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "7.86007, 33.811, -3.13941, 1.4", "7.49951, 35.0239, -3.72522, 1.4", "7.28733, 35.8764, -4.05415, 1.4", "6.97316, 37.1319, -4.33792, 1.25", "6.91981, 37.3319, -4.34727, 1.25", "6.75307, 37.9426, -4.31814, 1.03", "6.55047, 38.6801, -4.25206, 1.03", "6.37129, 39.3986, -4.10342, 1.18", "6.04597, 40.5372, -3.68954, 1.33", "5.71347, 41.5838, -3.16424, 1.33", "5.48067, 42.3206, -2.76501, 1.47", "5.32284, 42.8651, -2.46323, 1.47", "5.14297, 43.619, -2.06937, 1.47", "4.85351, 45.2482, -1.31715, 1.4", "4.74097, 46.2695, -0.922352, 1.4", "4.70627, 46.9422, -0.709006, 1.4", "4.70565, 47.8712, -0.455849, 1.62", "4.75185, 48.9464, -0.227947, 1.18", "4.83757, 49.819, -0.120143, 1.18", "4.84839, 49.8886, -0.11915, 1.18", "5.01476, 51.0401, -0.142448, 1.18", "5.12266, 51.9636, -0.165026, 1.47", "5.14945, 52.2531, -0.173434, 1.47", "5.23157, 53.2344, -0.202642, 1.4", "5.31811, 54.2737, -0.231494, 1.33", "5.41761, 55.52, -0.265057, 1.33", "5.49908, 56.6919, -0.295873, 1.62", "5.53915, 57.5443, -0.321712, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.86007, 33.811, -3.13941, 1.18", "8.59746, 33.9912, -2.81776, 1.18", "9.26268, 34.1294, -2.39714, 0.96", "9.62459, 34.1979, -2.15657, 1.25", "9.66542, 34.2078, -2.12545, 1.25", "10.2565, 34.3748, -1.67145, 1.25", "10.8065, 34.5631, -1.25527, 1.25", "11.8002, 34.9258, -0.506892, 1.18", "12.2615, 35.1201, -0.167377, 0.81", "12.8971, 35.4363, 0.306387, 0.96", "13.3886, 35.736, 0.645243, 0.96", "13.7822, 36.0565, 0.872672, 0.96", "13.8099, 36.0825, 0.882506, 0.96", "14.2807, 36.5332, 0.92755, 0.96", "14.3128, 36.5648, 0.927625, 0.96", "14.7448, 36.977, 0.887417, 1.18", "15.3058, 37.5087, 0.830945, 1.4", "15.772, 37.9303, 0.788001, 1.33", "15.8251, 37.977, 0.786612, 1.33", "16.3425, 38.4049, 0.814782, 1.18", "16.4302, 38.4693, 0.834655, 1.18", "16.8109, 38.7205, 0.982131, 1.18", "16.9098, 38.7796, 1.04405, 1.18", "17.3986, 39.0625, 1.43464, 0.96", "17.8625, 39.3351, 1.85082, 0.96", "18.489, 39.7405, 2.49602, 1.03", "18.535, 39.7753, 2.54454, 1.03", "19.2167, 40.3958, 3.26061, 1.03", "19.2596, 40.4373, 3.30668, 1.03", "19.5004, 40.7028, 3.57306, 1.03", "19.8166, 41.1182, 3.92965, 1.18", "20.2207, 41.7457, 4.29305, 1.4", "20.5547, 42.2872, 4.53089, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "4.58698, -101.162, -76.8542, 0.52", "3.82204, -101.901, -77.1488, 0.52", "2.89437, -102.871, -77.4586, 0.52", "2.54358, -103.29, -77.6057, 0.96", "1.81277, -104.316, -78.0418, 1.33", "1.43841, -104.947, -78.3358, 0.81", "1.02326, -105.844, -78.7814, 0.52", "1.01419, -105.893, -78.8072, 0.52", "1.12383, -106.941, -79.5465, 0.88", "1.3703, -107.666, -80.196, 1.25", "1.58098, -108.038, -80.6072, 1.47", "1.92111, -108.515, -81.2338, 1.47", "2.36269, -109.026, -81.9874, 0.88", "3.02853, -109.753, -83.1207, 0.88", "3.35827, -110.116, -83.7355, 0.37", "3.68161, -110.558, -84.4612, 0.66", "3.69997, -110.599, -84.5236, 0.66", "3.75916, -110.892, -84.92, 0.96", "3.77966, -111.74, -85.8396, 1.11", "3.65149, -113.023, -86.8582, 0.44", "3.54195, -113.734, -87.3122, 0.44", "3.35066, -114.806, -87.9408, 0.52", "3.24084, -115.399, -88.2861, 0.74", "3.10392, -116.063, -88.6287, 0.74", "2.90349, -116.908, -89.0338, 1.03", "2.59555, -118.307, -89.7556, 0.88", "2.3488, -119.64, -90.5378, 1.18", "2.16512, -120.901, -91.4276, 0.96", "2.02899, -121.912, -92.3787, 0.59", "1.86992, -123.024, -93.6339, 0.29", "1.74372, -123.84, -94.6777, 0.88", "1.69616, -124.081, -95.0069, 1.47", "1.48246, -125.091, -96.3936, 1.33", "1.13343, -126.608, -98.419, 0.52", "1.03417, -127.017, -98.9215, 0.29", "0.943126, -127.38, -99.2565, 0.96", "0.648057, -128.419, -99.988, 1.77", "0.528855, -128.857, -100.276, 1.77", "0.290096, -129.823, -100.814, 1.11", "0.110533, -130.607, -101.346, 0.37", "-0.0206538, -131.135, -101.918, 0.29", "-0.21845, -131.902, -102.975, 0.74", "-0.450295, -132.978, -104.724, 1.33", "-0.45686, -133.01, -104.783, 1.33", "-0.664638, -133.971, -106.834, 1.55", "-0.949631, -135.181, -109.603, 0.96", "-0.957369, -135.21, -109.669, 0.96", "-1.0554, -135.592, -110.43, 1.18", "-1.06165, -135.622, -110.479, 1.18", "-1.27149, -136.85, -112.089, 0.44", "-1.39507, -137.525, -112.637, 0.37", "-1.56772, -138.117, -113.133, 0.52", "-1.73668, -138.586, -113.615, 0.81", "-1.94132, -139.146, -114.225, 1.33", "-2.06508, -139.522, -114.658, 0.96", "-2.37093, -140.685, -116.084, 1.25", "-2.80764, -143.039, -119.217, 0.52", "-2.94407, -144.116, -120.779, 0.44", "-2.96735, -144.638, -121.597, 0.59", "-2.92478, -145.479, -123.012, 0.59", "-2.76689, -146.249, -124.381, 0.74", "-2.59437, -146.624, -125.065, 1.18", "-2.56922, -146.657, -125.118, 1.18", "-2.26802, -146.967, -125.625, 1.47", "-2.2354, -146.995, -125.676, 1.47", "-1.41287, -147.679, -126.712, 1.18", "-1.3747, -147.715, -126.757, 1.18", "-0.999386, -148.17, -127.183, 1.18", "-0.512762, -149.001, -127.835, 0.52", "-0.300289, -149.588, -128.212, 0.29", "-0.13944, -150.286, -128.63, 0.29", "-0.0667478, -150.777, -128.913, 0.88", "-0.0123326, -151.46, -129.325, 1.11", "0.0145078, -152.789, -130.132, 0.81", "-0.0117194, -153.644, -130.731, 0.37", "-0.133203, -154.564, -131.649, 0.29", "-0.23643, -154.996, -132.189, 0.96", "-0.253514, -155.038, -132.254, 0.96", "-0.470207, -155.418, -132.905, 1.18", "-1.08117, -156.263, -134.376, 1.11", "-2.37637, -157.793, -136.942, 0.44", "-2.84188, -158.281, -137.709, 0.74", "-3.67316, -159.138, -138.9, 0.59", "-4.15322, -159.643, -139.508, 0.81", "-4.82653, -160.367, -140.199, 0.44", "-5.20554, -160.87, -140.476, 0.59", "-5.23512, -160.931, -140.488, 0.59", "-5.49996, -161.785, -140.614, 0.52", "-5.62438, -162.447, -140.701, 1.03", "-5.7115, -163.215, -140.837, 1.4", "-5.78373, -164.375, -141.05, 1.33", "-5.83426, -165.182, -141.261, 1.11", "-5.8732, -165.971, -141.619, 0.59", "-5.8738, -166.028, -141.656, 0.59", "-5.85697, -166.532, -142.103, 0.44", "-5.80148, -167.313, -143.03, 0.44", "-5.72347, -168.158, -144.251, 0.74", "-5.60938, -169.345, -146.132, 0.74", "-5.57863, -169.628, -146.585, 1.25", "-5.50894, -170.509, -147.983, 1.55", "-5.46848, -171.468, -149.494, 1.77", "-5.50812, -172.662, -151.326, 0.74", "-5.58546, -173.321, -152.205, 0.52", "-5.68508, -173.789, -152.724, 0.52", "-5.98183, -174.812, -153.74, 0.96", "-6.1397, -175.258, -154.095, 1.18", "-6.64361, -176.388, -154.82, 0.52", "-6.95821, -176.959, -155.13, 0.52", "-7.18742, -177.313, -155.312, 0.66", "-7.22488, -177.364, -155.337, 0.66", "-7.54177, -177.751, -155.494, 0.44", "-8.3703, -178.67, -155.81, 0.29", "-8.41875, -178.717, -155.817, 0.29", "-8.80206, -179.04, -155.851, 0.52", "-9.18331, -179.352, -155.846, 0.81", "-9.61283, -179.741, -155.779, 0.96", "-10.0084, -180.131, -155.656, 1.11", "-10.5044, -180.701, -155.405, 0.29", "-10.5641, -180.777, -155.369, 0.29", "-11.0681, -181.452, -155.035, 0.29", "-11.5255, -182.057, -154.71, 0.88", "-11.6891, -182.271, -154.586, 1.03", "-12.0722, -182.729, -154.301, 1.18", "-12.6966, -183.354, -153.896, 0.29", "-13.4896, -184.02, -153.456, 0.29", "-13.843, -184.267, -153.306, 0.59", "-13.8988, -184.303, -153.29, 0.59", "-14.5708, -184.726, -153.165, 0.59", "-15.242, -185.185, -153.114, 1.11", "-15.8124, -185.632, -153.128, 1.4", "-16.4979, -186.247, -153.198, 0.96", "-17.1667, -186.951, -153.296, 0.59", "-17.9076, -187.86, -153.425, 0.37", "-18.4339, -188.635, -153.526, 0.37", "-18.7305, -189.135, -153.557, 0.74", "-18.7623, -189.196, -153.558, 0.74", "-19.0376, -189.84, -153.505, 0.74", "-19.2353, -190.358, -153.436, 1.03", "-19.4474, -190.965, -153.324, 1.33", "-19.7833, -191.805, -153.122, 1.47", "-20.1781, -192.693, -152.888, 0.37", "-20.6708, -193.76, -152.601, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "4.58698, -101.162, -76.8542, 0.52", "5.52087, -101.581, -76.0684, 0.52", "6.58488, -102.141, -75.2729, 0.44", "7.11731, -102.476, -74.9293, 0.88", "7.159, -102.507, -74.9057, 0.88", "7.50653, -102.797, -74.7292, 1.03", "7.87358, -103.139, -74.5617, 0.81", "8.2742, -103.628, -74.4685, 0.29", "8.66128, -104.192, -74.4361, 0.22", "8.93622, -104.629, -74.4206, 0.52", "9.07442, -104.867, -74.4093, 0.74", "9.39997, -105.496, -74.3719, 0.29", "9.65385, -106.056, -74.3267, 0.29", "9.87565, -106.619, -74.277, 0.74", "9.98899, -106.944, -74.2403, 1.03", "10.123, -107.348, -74.1907, 0.96", "10.2526, -107.778, -74.1356, 0.59", "10.4431, -108.386, -74.0383, 0.22", "10.5799, -108.755, -73.9696, 0.37", "10.6236, -108.846, -73.9529, 0.37", "10.8506, -109.204, -73.9074, 0.37", "10.8847, -109.246, -73.9059, 0.37", "11.4372, -109.84, -74.0158, 0.29", "11.8305, -110.232, -74.1565, 0.88", "12.0755, -110.48, -74.2652, 1.18", "12.542, -110.978, -74.5023, 0.29", "12.9694, -111.455, -74.7489, 0.29", "13.6097, -112.195, -75.0978, 0.52", "13.886, -112.534, -75.2417, 0.81", "14.3296, -113.088, -75.431, 0.22", "14.5338, -113.353, -75.4973, 0.59", "14.5762, -113.411, -75.5074, 0.59", "15.2119, -114.34, -75.6176, 0.44", "15.6484, -115.0, -75.6641, 0.66", "15.9352, -115.448, -75.7043, 0.59", "16.168, -115.826, -75.7603, 0.44", "16.5351, -116.448, -75.889, 0.96", "16.816, -116.918, -76.0567, 1.33", "17.1166, -117.383, -76.3339, 0.59", "17.1503, -117.426, -76.3676, 0.59", "17.4845, -117.774, -76.7293, 0.59", "17.5106, -117.8, -76.7625, 0.59", "18.0129, -118.369, -77.5519, 0.29", "18.216, -118.656, -77.9511, 0.44", "18.3808, -118.934, -78.2887, 0.44", "18.606, -119.362, -78.7497, 0.44", "18.8631, -119.932, -79.2676, 1.33", "19.1653, -120.625, -79.8304, 1.11", "19.4339, -121.278, -80.2903, 0.52", "19.6984, -121.87, -80.7096, 0.29", "19.7179, -121.912, -80.7385, 0.29", "19.9226, -122.269, -80.956, 0.29", "20.3192, -122.699, -81.2124, 0.29", "20.5972, -122.88, -81.3111, 0.96", "20.9608, -122.99, -81.4015, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-1.41673, -185.957, -51.3651, 0.29", "-2.36758, -186.574, -50.3021, 0.29", "-2.91488, -187.05, -49.574, 0.29", "-3.07948, -187.203, -49.3519, 0.74", "-3.12152, -187.243, -49.2962, 0.74", "-3.39906, -187.497, -48.9536, 0.74", "-4.0602, -188.001, -48.3187, 0.29", "-4.61744, -188.394, -47.9517, 0.29", "-4.90766, -188.558, -47.8152, 0.74", "-5.17425, -188.677, -47.7298, 1.11", "-5.63013, -188.87, -47.6095, 1.11", "-6.84167, -189.37, -47.3633, 0.29", "-7.23647, -189.55, -47.2891, 0.37", "-7.76916, -189.858, -47.1143, 0.37", "-8.3301, -190.275, -46.8316, 0.66", "-8.86185, -190.773, -46.4715, 0.52", "-9.158, -191.1, -46.2228, 0.96", "-9.66899, -191.728, -45.7256, 1.33", "-10.431, -192.617, -45.0271, 0.59", "-10.7698, -193.009, -44.6931, 0.37", "-11.0409, -193.314, -44.4198, 0.22", "-11.5272, -193.836, -43.9539, 0.22", "-11.9455, -194.286, -43.5687, 0.66", "-12.4819, -194.897, -43.1183, 0.66", "-13.2848, -195.924, -42.4909, 0.52", "-13.3939, -196.084, -42.4015, 0.29", "-13.6823, -196.559, -42.1819, 0.74", "-13.7965, -196.782, -42.0716, 0.74", "-14.2898, -197.842, -41.5463, 0.37", "-14.6883, -198.769, -41.1191, 0.44", "-14.8961, -199.228, -40.939, 0.59", "-15.2652, -200.018, -40.6317, 0.52", "-16.0873, -201.634, -39.9929, 0.37", "-16.4833, -202.323, -39.7117, 0.37", "-16.9767, -203.065, -39.4024, 0.29", "-17.6246, -203.933, -39.0298, 0.59", "-17.7584, -204.106, -38.9613, 0.88", "-18.2068, -204.632, -38.7762, 0.66", "-18.7769, -205.222, -38.6479, 0.15", "-19.4443, -205.801, -38.4834, 0.15", "-19.5002, -205.839, -38.4693, 0.15", "-20.1872, -206.231, -38.3454, 0.59", "-20.6576, -206.505, -38.3032, 0.88", "-20.7095, -206.538, -38.3029, 0.88", "-21.0954, -206.812, -38.3279, 0.88", "-21.679, -207.293, -38.4065, 0.88", "-22.5419, -208.165, -38.5824, 0.29", "-22.959, -208.662, -38.6891, 0.29", "-23.291, -209.145, -38.7897, 0.66", "-23.5434, -209.567, -38.8624, 0.81", "-23.8572, -210.213, -38.9527, 0.66", "-24.2079, -211.084, -39.0365, 0.29", "-24.3692, -211.541, -39.0587, 0.81", "-24.4898, -211.874, -39.0675, 0.81", "-24.8178, -212.653, -39.0557, 0.22", "-25.065, -213.172, -38.9859, 0.22", "-25.2199, -213.483, -38.907, 0.81", "-25.3626, -213.738, -38.8163, 0.96", "-25.8361, -214.5, -38.3856, 0.22", "-26.127, -214.895, -37.9494, 0.22", "-26.5093, -215.325, -37.1306, 0.74", "-26.6372, -215.453, -36.8161, 1.18", "-26.8553, -215.658, -36.2376, 0.74", "-27.3678, -216.092, -34.8471, 0.59", "-28.0717, -216.645, -32.947, 0.44", "-28.6445, -217.134, -31.4544, 0.37", "-28.6749, -217.162, -31.3849, 0.37", "-28.8437, -217.334, -31.0299, 0.66", "-28.982, -217.557, -30.692, 0.74", "-29.2911, -218.261, -29.8684, 0.29", "-29.4852, -218.828, -29.3004, 0.29", "-29.6771, -219.392, -28.6985, 0.29", "-29.7207, -219.537, -28.5349, 0.74", "-30.0446, -220.993, -26.7421, 0.66", "-30.1183, -221.646, -25.8471, 0.22", "-30.1097, -221.824, -25.5428, 0.22", "-30.0537, -222.162, -24.7406, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-1.41673, -185.957, -51.3651, 0.37", "-0.967234, -187.55, -52.6733, 0.37", "-0.725584, -188.429, -53.3174, 0.37", "-0.712464, -188.482, -53.3507, 0.37", "-0.591922, -189.052, -53.6682, 0.81", "-0.424315, -189.906, -54.1012, 0.88", "-0.358232, -190.263, -54.2676, 0.88", "-0.231758, -190.993, -54.5428, 0.52", "-0.115082, -191.827, -54.8431, 0.52", "-0.0508165, -192.597, -55.1516, 0.52", "-0.0547606, -193.026, -55.335, 0.96", "-0.0894136, -193.403, -55.4956, 0.96", "-0.250817, -194.423, -55.9616, 0.37", "-0.395808, -195.031, -56.2509, 0.29", "-0.596808, -195.63, -56.5592, 0.59", "-0.841783, -196.186, -56.8444, 0.96", "-1.0519, -196.589, -57.0409, 1.18", "-1.0827, -196.642, -57.0634, 1.18", "-1.27906, -196.964, -57.1958, 1.18", "-1.5902, -197.551, -57.4486, 1.03", "-1.89285, -198.244, -57.7304, 0.59", "-2.06129, -198.709, -57.8896, 0.52", "-2.19277, -199.096, -57.9935, 0.66", "-2.54351, -200.082, -58.1822, 0.29", "-2.80313, -200.766, -58.2457, 0.44", "-2.92684, -201.079, -58.2351, 0.52", "-3.35103, -202.076, -58.1116, 0.66", "-3.61898, -202.641, -58.0095, 0.37", "-3.94802, -203.269, -57.8707, 0.88", "-4.15916, -203.626, -57.7809, 1.18", "-4.59575, -204.326, -57.6262, 0.96", "-4.89213, -204.824, -57.5409, 0.66", "-5.08446, -205.195, -57.4847, 1.03", "-5.37055, -205.898, -57.3611, 0.52", "-5.62358, -206.783, -57.1854, 0.52", "-5.72391, -207.384, -57.0655, 1.11", "-5.74869, -207.979, -56.9446, 1.11", "-5.70567, -208.925, -56.762, 0.74", "-5.65329, -209.458, -56.6664, 0.44", "-5.54741, -210.268, -56.5319, 0.59", "-5.40739, -211.373, -56.3803, 0.59", "-5.32394, -212.43, -56.2767, 0.59", "-5.2968, -213.328, -56.2145, 0.52", "-5.31642, -213.903, -56.1964, 1.18", "-5.3487, -214.273, -56.1874, 1.33", "-5.50279, -215.269, -56.1747, 1.18", "-5.67608, -216.063, -56.1633, 0.88", "-5.84102, -216.698, -56.1536, 0.52", "-6.01496, -217.41, -56.143, 0.66", "-6.02701, -217.484, -56.1387, 0.66", "-6.05431, -218.099, -56.0817, 0.81", "-6.04808, -218.805, -56.0045, 0.44", "-6.0019, -219.57, -55.9079, 0.44", "-5.90667, -220.507, -55.7743, 0.44", "-5.71722, -221.695, -55.5771, 0.37", "-5.56526, -222.471, -55.4327, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-4.59491, -49.4308, -4.9727, 1.03", "-6.07781, -49.8653, -4.51717, 1.03", "-7.06342, -50.3147, -4.04993, 1.03", "-8.24876, -51.0305, -3.40654, 0.96", "-9.02758, -51.6248, -2.9701, 0.96", "-9.1288, -51.7104, -2.91264, 0.96", "-11.1124, -53.6176, -1.79942, 0.81", "-11.8186, -54.5034, -1.36373, 1.11", "-12.5039, -55.4683, -0.92764, 1.11", "-13.3814, -56.7556, -0.373075, 1.03", "-13.4256, -56.817, -0.347277, 1.03", "-14.3817, -58.0221, 0.194463, 1.03", "-15.0869, -58.855, 0.537389, 1.25", "-15.6797, -59.5421, 0.884538, 1.4", "-16.082, -59.9994, 1.15686, 1.4", "-16.8338, -60.9043, 1.77546, 1.25", "-17.5853, -61.9779, 2.49399, 1.11", "-17.968, -62.6575, 2.92392, 1.11", "-18.3517, -63.563, 3.43178, 1.03", "-18.3971, -63.6971, 3.49229, 1.03", "-18.7117, -64.6853, 3.79179, 0.81", "-19.0539, -65.7667, 3.97546, 0.96", "-19.4262, -66.9464, 4.07227, 0.96", "-19.8356, -68.2852, 4.13625, 0.81", "-20.0975, -69.2692, 4.12673, 0.74", "-20.4593, -70.7431, 4.04961, 0.81", "-20.6284, -71.5466, 3.9693, 1.11", "-20.8125, -72.7015, 3.82812, 1.11", "-20.9026, -73.5766, 3.70672, 1.11", "-21.0055, -75.275, 3.46256, 0.88", "-21.0239, -76.129, 3.37348, 1.11", "-21.0177, -77.1316, 3.28184, 1.11", "-21.0084, -77.9076, 3.1988, 1.33", "-21.0121, -78.7126, 3.11216, 0.96", "-21.0364, -79.6758, 3.01359, 1.11", "-21.0567, -80.8521, 2.90105, 1.11", "-21.0516, -81.833, 2.78439, 1.4", "-21.0499, -82.6936, 2.66084, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-4.59491, -49.4308, -4.9727, 1.47", "-4.56231, -51.0276, -5.02769, 1.47", "-4.54222, -52.0116, -5.06158, 1.47", "-4.49845, -54.1555, -5.13541, 1.47", "-4.46926, -55.5852, -5.18465, 1.62", "-4.43353, -57.3351, -5.24491, 1.92", "-4.39897, -59.0278, -5.30321, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-26.9608, -60.3859, -7.55378, 0.88", "-28.5033, -60.5029, -7.14039, 0.88", "-28.9705, -60.564, -7.05114, 1.11", "-29.5146, -60.6608, -7.00352, 0.88", "-30.1994, -60.795, -6.96797, 0.81", "-31.0033, -60.9941, -6.96219, 0.74", "-31.7666, -61.2367, -6.97504, 0.96", "-32.5189, -61.5538, -7.06183, 0.96", "-33.5317, -62.084, -7.19306, 0.81", "-33.5778, -62.1141, -7.19911, 0.81", "-34.3801, -62.739, -7.30331, 0.74", "-35.06, -63.3407, -7.38823, 0.74", "-35.2997, -63.5628, -7.4088, 1.03", "-35.7554, -63.9745, -7.43271, 1.11", "-36.5265, -64.6235, -7.43797, 1.11", "-36.5869, -64.6693, -7.43893, 1.11", "-37.5006, -65.2647, -7.45005, 0.88", "-38.585, -65.91, -7.47339, 0.88", "-39.0666, -66.1774, -7.48698, 1.25", "-39.6748, -66.4858, -7.50939, 1.25", "-40.5155, -66.8801, -7.54736, 1.4", "-41.1357, -67.1698, -7.5735, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-26.9608, -60.3859, -7.55378, 0.74", "-26.9234, -60.8213, -8.57163, 0.74", "-26.8958, -61.3956, -9.92787, 0.44", "-26.8934, -61.4367, -10.0195, 0.44", "-26.8441, -61.8644, -10.8784, 0.44", "-26.7244, -62.6418, -12.3492, 1.03", "-26.5048, -64.2321, -15.1661, 1.03", "-26.4581, -64.7529, -16.0701, 1.33", "-26.4345, -65.5017, -17.3007, 1.11", "-26.4688, -66.0355, -18.2045, 0.59", "-26.5936, -66.8388, -19.5813, 0.44", "-26.8659, -67.9099, -21.2862, 0.44", "-27.1082, -68.6207, -22.4007, 0.88", "-27.2702, -68.949, -22.9531, 1.25", "-28.0691, -70.2279, -25.1364, 1.25", "-28.0936, -70.2609, -25.1941, 1.25", "-28.2096, -70.4148, -25.4374, 1.25", "-28.2322, -70.4513, -25.4835, 1.25", "-28.6814, -71.7182, -26.515, 0.74", "-28.8596, -72.4883, -27.0063, 0.74", "-28.8698, -72.549, -27.0353, 0.74", "-28.9701, -73.0964, -27.3473, 0.74", "-29.1467, -73.8624, -27.9176, 0.81", "-29.3375, -74.5063, -28.4585, 0.81", "-29.8515, -75.7978, -29.701, 0.44", "-29.875, -75.8427, -29.7484, 0.44", "-30.3443, -76.6247, -30.6153, 0.74", "-31.0318, -77.6668, -31.8499, 0.88", "-31.3504, -78.1594, -32.4338, 1.03", "-31.8326, -78.956, -33.3226, 1.03", "-32.085, -79.4721, -33.8015, 1.18", "-32.1028, -79.5184, -33.8391, 1.18", "-32.3253, -80.6086, -34.5267, 0.52", "-32.2795, -81.406, -34.9129, 0.44", "-32.1476, -81.8239, -35.1253, 0.81", "-31.9805, -82.1687, -35.3037, 0.88", "-31.9186, -82.2896, -35.3748, 0.88", "-31.6511, -82.8605, -35.7148, 0.74", "-31.3724, -83.5645, -36.127, 0.44", "-31.1722, -84.2961, -36.5559, 0.59", "-31.0091, -85.3051, -37.0913, 0.52", "-30.9456, -86.1078, -37.4967, 0.88", "-30.9342, -86.6585, -37.7563, 1.18", "-30.9734, -87.452, -38.1302, 0.52", "-31.0427, -87.9757, -38.3636, 0.44", "-31.1865, -88.7492, -38.6654, 0.44", "-31.3417, -89.4347, -38.9036, 0.74", "-31.4414, -89.821, -39.0307, 0.74", "-31.7927, -91.057, -39.4544, 0.59", "-32.0708, -91.9615, -39.7537, 0.66", "-32.2327, -92.4736, -39.9375, 1.18", "-32.4729, -93.2582, -40.2212, 1.33", "-32.6699, -94.0311, -40.4792, 1.11", "-32.6812, -94.0947, -40.5021, 1.11", "-32.7413, -94.8182, -40.7568, 0.96", "-32.7523, -95.7638, -41.11, 0.66", "-32.7492, -96.4855, -41.4125, 0.37", "-32.7764, -97.1834, -41.7181, 0.29", "-32.9054, -98.4079, -42.2991, 1.03", "-32.9999, -99.0164, -42.598, 1.33", "-33.0877, -99.5049, -42.8425, 1.47", "-33.322, -100.76, -43.4193, 0.37", "-33.4589, -101.523, -43.7836, 0.37", "-33.6498, -102.584, -44.2576, 0.29", "-33.709, -102.982, -44.4105, 0.44", "-33.7816, -103.585, -44.6144, 0.59", "-33.8689, -104.539, -44.8918, 0.59", "-33.9361, -105.749, -45.2044, 0.74", "-33.9525, -106.643, -45.423, 0.59", "-33.9733, -107.448, -45.594, 0.44", "-34.0102, -108.531, -45.8299, 0.44", "-34.0134, -108.601, -45.8684, 0.44", "-34.0251, -109.294, -46.4553, 0.96", "-34.008, -109.693, -46.8788, 1.4", "-34.0032, -109.74, -46.9334, 1.4", "-33.9422, -110.183, -47.4577, 1.18", "-33.5671, -112.94, -50.6899, 0.59", "-33.4959, -113.521, -51.3451, 0.88", "-33.4433, -114.068, -51.9357, 1.03", "-33.4084, -114.673, -52.5582, 0.52", "-33.405, -115.376, -53.1871, 0.37", "-33.4479, -116.094, -53.6824, 0.37", "-33.4516, -116.149, -53.699, 0.37", "-33.4691, -116.399, -53.7704, 1.03", "-33.4959, -116.933, -53.9019, 1.03", "-33.484, -117.756, -54.1071, 0.44", "-33.3722, -118.633, -54.4118, 0.37", "-33.1605, -119.489, -54.7757, 0.88", "-33.0161, -119.992, -55.0464, 1.25", "-32.9073, -120.367, -55.274, 1.25", "-32.7125, -121.081, -55.766, 0.81", "-32.4146, -122.403, -56.7272, 0.29", "-32.3629, -122.752, -56.9723, 0.29", "-32.3152, -123.568, -57.5451, 0.37", "-32.3225, -124.318, -58.0786, 0.37", "-32.3655, -125.084, -58.5947, 0.66", "-32.4285, -125.725, -58.9693, 1.25", "-32.4793, -126.392, -59.2859, 1.4", "-32.507, -127.583, -59.8033, 0.81", "-32.449, -128.668, -60.23, 0.59", "-32.3771, -129.269, -60.4546, 0.29", "-32.2436, -130.045, -60.7202, 0.29", "-32.0869, -130.939, -61.1828, 0.29", "-32.0371, -131.246, -61.3968, 1.03", "-32.0283, -131.299, -61.4407, 1.03", "-31.9493, -131.781, -61.8774, 1.4", "-31.8577, -132.481, -62.5481, 1.4", "-31.6214, -134.585, -64.6063, 0.52", "-31.5602, -135.443, -65.4051, 0.74", "-31.5571, -135.533, -65.4816, 0.74", "-31.5473, -136.214, -66.0129, 0.52", "-31.5613, -136.907, -66.4899, 0.52", "-31.5968, -137.494, -66.7837, 0.74", "-31.6651, -138.316, -67.0685, 0.66", "-31.8015, -139.644, -67.7029, 0.59", "-31.8053, -139.693, -67.735, 0.59", "-31.8334, -140.265, -68.1761, 0.52", "-31.8381, -140.881, -68.6759, 1.18", "-31.8147, -141.923, -69.5266, 1.62", "-31.709, -143.485, -70.8472, 1.18", "-31.5948, -144.537, -71.7044, 0.52", "-31.4893, -145.335, -72.3182, 0.37", "-31.3702, -146.092, -72.8498, 0.74", "-31.3186, -146.449, -73.064, 1.11", "-31.2372, -147.536, -73.5097, 0.88", "-31.2826, -148.165, -73.6548, 0.81", "-31.492, -148.967, -73.7891, 0.44", "-31.762, -149.58, -73.881, 0.59", "-32.146, -150.223, -74.003, 0.59", "-32.6542, -150.955, -74.149, 0.37", "-33.311, -151.834, -74.3067, 0.29", "-33.7492, -152.415, -74.4294, 0.81", "-34.124, -152.944, -74.5675, 1.11", "-34.7637, -153.931, -74.847, 1.4", "-35.0461, -154.413, -74.9828, 1.33", "-35.4523, -155.205, -75.1817, 0.81", "-35.7989, -155.973, -75.324, 0.52", "-36.2219, -156.994, -75.4417, 0.44", "-36.51, -157.763, -75.4907, 0.37", "-36.7882, -158.657, -75.4533, 0.37", "-37.0027, -159.502, -75.3794, 0.66", "-37.1659, -160.395, -75.2623, 0.96", "-37.2356, -161.086, -75.1442, 1.03", "-37.251, -161.78, -75.0018, 1.25", "-37.1322, -163.054, -74.7622, 0.81", "-37.0389, -163.604, -74.6754, 0.52", "-36.8968, -164.364, -74.601, 0.52", "-36.8066, -164.928, -74.5779, 0.29", "-36.7384, -165.752, -74.5804, 0.29", "-36.764, -166.879, -74.6709, 0.29", "-36.9053, -167.594, -74.7849, 0.81", "-37.1657, -168.327, -74.9115, 1.11", "-37.4686, -168.92, -75.0215, 1.11", "-37.8464, -169.505, -75.1298, 0.74", "-38.3229, -170.099, -75.2422, 0.37", "-39.0335, -170.89, -75.4205, 0.29", "-39.2532, -171.163, -75.4846, 0.74", "-39.2961, -171.229, -75.4998, 0.74", "-39.5061, -171.68, -75.6464, 0.96", "-39.5439, -171.794, -75.6877, 0.96", "-39.8055, -172.822, -76.0493, 0.29", "-39.9813, -173.485, -76.2761, 0.29", "-40.124, -173.946, -76.4166, 0.81", "-40.4884, -174.917, -76.6689, 1.03", "-40.7576, -175.491, -76.7868, 0.81", "-41.1916, -176.225, -76.9087, 0.29", "-41.7523, -176.977, -76.9928, 0.29", "-42.0997, -177.359, -77.0248, 0.44", "-42.5399, -177.808, -77.0481, 0.44", "-43.1005, -178.317, -77.0378, 0.66", "-43.7545, -178.832, -77.0314, 0.96", "-44.1062, -179.067, -77.0353, 1.4", "-45.0854, -179.659, -77.0764, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.53915, 57.5443, -0.321712, 1.11", "5.29384, 58.5591, -0.417597, 1.11", "5.21663, 58.852, -0.454025, 0.96", "5.09963, 59.2301, -0.516582, 0.96", "4.95852, 59.6515, -0.595364, 0.96", "4.77692, 60.1427, -0.697821, 0.96", "4.48511, 60.8844, -0.862995, 0.96", "4.46676, 60.9214, -0.874877, 0.96", "4.1563, 61.4867, -1.06959, 1.11", "4.1245, 61.5398, -1.0888, 1.11", "3.8506, 61.9701, -1.24955, 1.11", "3.82397, 62.0088, -1.26452, 1.11", "3.52368, 62.4324, -1.42924, 1.33", "3.25096, 62.8251, -1.58047, 1.18", "2.97117, 63.2673, -1.74039, 0.96", "2.94855, 63.3099, -1.75414, 0.96", "2.78183, 63.6762, -1.86015, 0.88", "2.59753, 64.166, -1.98634, 0.88", "2.58676, 64.206, -1.99483, 0.88", "2.47259, 64.8429, -2.10672, 0.88", "2.40705, 65.4706, -2.19864, 1.11", "2.40407, 65.5308, -2.20596, 1.11", "2.40733, 66.0558, -2.25708, 1.11", "2.42644, 66.5028, -2.2913, 1.33", "2.44533, 66.7815, -2.3082, 1.33", "2.51569, 67.2821, -2.34355, 1.18", "2.61199, 67.7723, -2.38383, 1.18", "2.6285, 67.8292, -2.3914, 1.18", "2.80956, 68.3051, -2.4722, 1.11", "3.026, 68.7795, -2.56487, 1.11", "3.2756, 69.2515, -2.66464, 1.03", "3.51502, 69.6777, -2.76494, 0.88", "3.86985, 70.3326, -2.93991, 0.88", "3.90534, 70.4102, -2.96285, 0.88", "4.09322, 70.9604, -3.10173, 0.88", "4.10074, 71.0016, -3.10958, 0.88", "4.08557, 71.4534, -3.16284, 0.88", "3.96607, 72.0452, -3.20916, 0.88", "3.81892, 72.4694, -3.23254, 0.88", "3.54612, 73.1177, -3.29125, 0.96", "3.48064, 73.2404, -3.30952, 0.96", "3.27412, 73.5967, -3.37834, 1.47", "3.07208, 73.9311, -3.44641, 1.62", "2.78773, 74.3734, -3.53563, 1.11", "2.50859, 74.8111, -3.63206, 1.11", "2.16569, 75.3614, -3.7715, 1.11", "1.88822, 75.841, -3.87633, 0.96", "1.64629, 76.2969, -3.95862, 0.96", "1.36263, 76.8445, -4.05096, 0.96", "1.34233, 76.8897, -4.05767, 0.96", "1.22129, 77.2219, -4.11362, 0.96", "1.06655, 77.8184, -4.26227, 1.18", "1.0557, 77.8748, -4.28073, 1.18", "0.940934, 78.5882, -4.5558, 1.18", "0.838986, 79.3204, -4.86088, 1.03", "0.763278, 79.8432, -5.08065, 0.88", "0.660225, 80.5504, -5.38522, 1.03", "0.587146, 81.04, -5.59653, 1.03", "0.547439, 81.3177, -5.70519, 1.03", "0.540232, 81.3922, -5.72855, 1.03", "0.489149, 81.8616, -5.84015, 1.03", "0.477382, 81.9508, -5.85426, 1.03", "0.391202, 82.3777, -5.87877, 1.03", "0.220887, 83.1071, -5.90339, 1.18", "0.0523384, 83.7541, -5.90048, 1.18", "-0.0598974, 84.1505, -5.88834, 1.18", "-0.190917, 84.5802, -5.86407, 1.18", "-0.476211, 85.477, -5.80696, 1.18", "-0.686939, 86.1104, -5.74634, 1.18", "-0.903851, 86.7595, -5.67119, 1.18", "-0.917201, 86.8012, -5.6669, 1.18", "-1.02647, 87.1784, -5.64631, 1.18", "-1.20423, 87.8618, -5.65233, 1.47", "-1.30447, 88.3289, -5.68623, 1.47", "-1.40015, 88.7919, -5.73246, 1.33", "-1.52848, 89.486, -5.81771, 1.03", "-1.70476, 90.4419, -5.94442, 0.96", "-1.84717, 91.2253, -6.05636, 0.96", "-1.94376, 91.7808, -6.15413, 0.96", "-2.02132, 92.2473, -6.25303, 1.11", "-2.06318, 92.5208, -6.31313, 1.11", "-2.13262, 93.0788, -6.43988, 1.25", "-2.15424, 93.3307, -6.49635, 1.25", "-2.20646, 93.963, -6.65287, 1.03", "-2.21771, 94.0582, -6.67909, 1.03", "-2.25968, 94.348, -6.74933, 1.03", "-2.31069, 94.6376, -6.80922, 1.03", "-2.37728, 94.9873, -6.84381, 1.03", "-2.50209, 95.5643, -6.85145, 1.03", "-2.59869, 95.995, -6.8215, 1.03", "-2.7011, 96.3972, -6.75462, 1.03", "-2.72317, 96.4764, -6.73551, 1.03", "-2.9038, 97.0983, -6.55451, 1.03", "-2.91601, 97.1375, -6.54152, 1.03", "-3.14471, 97.8231, -6.32009, 1.03", "-3.38271, 98.5286, -6.12877, 1.03", "-3.40199, 98.5891, -6.11779, 1.03", "-3.51893, 99.0604, -6.05834, 1.03", "-3.5265, 99.1035, -6.05382, 1.03", "-3.5977, 99.8884, -5.96744, 1.03", "-3.59812, 99.9786, -5.95814, 1.03", "-3.5734, 100.518, -5.92066, 1.25", "-3.5344, 101.307, -5.87011, 1.25", "-3.49616, 101.971, -5.82787, 1.25", "-3.47723, 102.573, -5.80246, 0.88", "-3.47576, 103.165, -5.80644, 0.74", "-3.49834, 103.657, -5.84984, 1.18", "-3.57371, 104.427, -5.98131, 1.4", "-3.58876, 104.515, -6.00465, 1.4", "-3.72512, 105.121, -6.21504, 1.4", "-3.90987, 105.772, -6.46813, 1.18", "-4.09142, 106.364, -6.71173, 1.03", "-4.10319, 106.401, -6.72806, 1.03", "-4.27607, 106.947, -6.97548, 1.03", "-4.36441, 107.231, -7.10119, 0.88", "-4.60019, 108.029, -7.4295, 1.11", "-4.61313, 108.069, -7.44268, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.53915, 57.5443, -0.321712, 0.52", "5.53002, 58.3672, -1.27922, 0.52", "5.44487, 58.9636, -2.05124, 0.74", "5.30584, 59.377, -2.71763, 0.74", "5.24138, 59.5155, -2.96948, 0.74", "5.15508, 59.7263, -3.5103, 0.74", "5.07887, 60.004, -4.49799, 0.44", "5.05334, 60.116, -5.08422, 0.81", "5.03958, 60.295, -6.17065, 0.81", "5.04263, 60.3053, -6.23376, 0.81", "5.20866, 60.7565, -8.53028, 1.03", "5.38359, 61.1548, -10.1689, 0.81", "5.44872, 61.3051, -10.6539, 0.81", "5.57138, 61.6942, -11.6621, 0.88", "5.65632, 62.2029, -12.7638, 0.81", "5.64258, 62.5878, -13.5727, 0.81", "5.47746, 63.0886, -14.5931, 0.59", "5.34769, 63.293, -15.1408, 0.59", "5.11548, 63.4609, -16.0929, 0.88", "5.11184, 63.4607, -17.7015, 0.88", "5.27814, 63.3579, -19.153, 0.88", "5.41799, 63.2754, -19.9363, 1.25", "5.73546, 63.0893, -21.4307, 1.25", "6.16681, 62.856, -23.2557, 1.11", "7.76255, 62.1802, -29.2344, 1.03", "8.26897, 62.0229, -30.943, 0.66", "8.29249, 62.0201, -31.0107, 0.66", "8.80503, 62.041, -32.3242, 0.52", "9.05846, 62.0966, -32.9136, 0.52", "9.47531, 62.2836, -33.7827, 0.52", "9.51326, 62.3143, -33.837, 0.52", "10.6565, 63.1595, -35.0675, 1.25", "10.9132, 63.3483, -35.3502, 1.69", "10.9643, 63.3845, -35.4041, 1.69", "11.2278, 63.5789, -35.7102, 1.69", "12.2747, 64.4689, -37.2821, 0.88", "13.0271, 65.3918, -38.8884, 0.59", "13.1915, 65.7286, -39.4941, 0.81", "13.2086, 65.7653, -39.566, 0.81", "13.389, 66.094, -40.2574, 1.11", "13.7815, 66.7783, -41.7025, 1.11", "13.9919, 67.1645, -42.4728, 0.96", "14.479, 67.9085, -43.9287, 0.88", "15.1141, 68.8473, -45.6039, 0.81", "15.7501, 69.6918, -47.0235, 0.52", "16.0129, 69.9435, -47.4673, 0.52", "16.4197, 70.2659, -48.0016, 0.59", "16.5154, 70.3315, -48.0992, 0.59", "17.2177, 70.7885, -48.6667, 0.59", "18.4118, 71.5477, -49.5259, 0.81", "20.1485, 72.5526, -50.6854, 1.4", "20.7676, 72.8511, -51.0892, 1.62", "21.6798, 73.2045, -51.6436, 1.84", "21.7395, 73.224, -51.6777, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "20.5547, 42.2872, 4.53089, 1.18", "19.6567, 44.2602, 5.70974, 1.18", "19.3096, 45.4784, 6.27081, 0.96", "19.3028, 45.5732, 6.30235, 0.96", "19.4772, 46.8643, 6.64188, 0.74", "19.5019, 46.9566, 6.66145, 0.74", "19.7713, 47.658, 6.79216, 0.88", "20.3069, 48.6011, 6.9387, 0.88", "20.9086, 49.5566, 7.13578, 0.59", "21.4456, 50.4341, 7.46202, 0.52", "21.8486, 51.1026, 7.82355, 0.81", "22.3697, 52.0001, 8.35534, 0.52", "23.1491, 53.431, 9.3518, 0.88", "23.2495, 53.656, 9.53856, 0.88", "23.6671, 54.9162, 10.8031, 1.33", "23.7024, 55.115, 11.0405, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.5547, 42.2872, 4.53089, 1.11", "21.8469, 41.9025, 3.17818, 1.11", "22.2951, 41.7996, 2.80142, 1.03", "22.8168, 41.6866, 2.41681, 0.88", "23.7911, 41.4773, 1.82572, 0.59", "24.3445, 41.3426, 1.51467, 0.81", "24.841, 41.2108, 1.23899, 0.81", "25.2712, 41.1002, 1.03768, 1.03", "25.4537, 41.0688, 0.939911, 1.03", "26.0807, 40.9967, 0.521722, 1.03", "26.9897, 40.8608, -0.195294, 0.66", "27.6789, 40.7185, -0.832842, 0.81", "28.3151, 40.5331, -1.50235, 0.59", "28.8913, 40.3135, -2.18788, 0.96", "29.6713, 39.9423, -3.19968, 0.59", "30.1914, 39.6353, -3.94053, 0.59", "30.6819, 39.2946, -4.62853, 0.96", "31.1265, 38.9546, -5.18918, 0.81", "31.5743, 38.5965, -5.65421, 0.81", "31.8575, 38.3862, -5.87046, 0.96", "32.5132, 38.0191, -6.22766, 0.37", "33.1331, 37.8115, -6.49251, 0.37", "33.8868, 37.6833, -6.75054, 0.44", "34.3912, 37.6592, -6.90889, 0.81", "34.9814, 37.6696, -7.08763, 1.03", "35.8527, 37.6876, -7.36414, 0.52", "36.1644, 37.6731, -7.47862, 0.44", "36.2049, 37.6654, -7.49943, 0.44", "37.015, 37.3379, -7.98699, 0.44", "37.2936, 37.1779, -8.16452, 0.88", "37.7787, 36.8294, -8.45197, 1.03", "38.4225, 36.323, -8.74913, 1.03", "39.0065, 35.8721, -8.96741, 0.96", "39.6229, 35.4502, -9.12797, 0.52", "39.6602, 35.427, -9.1333, 0.52", "40.1226, 35.2047, -9.15202, 0.59", "40.7471, 35.0007, -9.09752, 0.59", "41.2019, 34.9001, -9.00319, 0.29", "41.8726, 34.7893, -8.82485, 0.29", "41.9155, 34.7826, -8.81347, 0.29", "42.4475, 34.6743, -8.67826, 0.66", "42.8767, 34.565, -8.5745, 0.81", "43.41, 34.3661, -8.44871, 0.88", "43.4865, 34.3251, -8.42553, 0.88", "43.9039, 34.0423, -8.28502, 1.03", "44.2395, 33.8019, -8.17546, 1.03", "44.2739, 33.7763, -8.16536, 1.03", "44.7132, 33.4428, -8.03827, 0.81", "45.4377, 32.9069, -7.8395, 0.37", "45.8338, 32.6356, -7.74289, 0.66", "46.1678, 32.4199, -7.67248, 0.66", "46.649, 32.1279, -7.61019, 0.52", "47.0482, 31.9056, -7.60016, 0.52", "47.6271, 31.5974, -7.64019, 0.96", "48.0572, 31.3567, -7.71291, 1.25", "48.5844, 31.0454, -7.81903, 1.03", "49.1516, 30.69, -7.94911, 0.81", "49.7577, 30.3168, -8.0994, 0.66", "50.0682, 30.1419, -8.17311, 0.74", "50.4303, 29.9538, -8.24881, 0.74", "50.9684, 29.6963, -8.32401, 0.37", "51.0031, 29.6815, -8.32545, 0.37", "51.4821, 29.4961, -8.29988, 0.29", "52.1734, 29.2679, -8.30328, 0.66", "52.675, 29.1156, -8.34144, 1.03", "53.2035, 28.9547, -8.40763, 0.74", "53.824, 28.7506, -8.51157, 0.74", "54.209, 28.6024, -8.58656, 0.96", "55.1278, 28.1784, -8.79099, 1.18", "55.4813, 28.0009, -8.87836, 0.96", "55.9363, 27.7634, -8.98969, 0.44", "55.98, 27.7402, -9.00014, 0.44", "56.5247, 27.4393, -9.13613, 0.66", "56.8832, 27.2406, -9.23462, 0.81", "57.0574, 27.1467, -9.29625, 0.81", "57.4712, 26.9416, -9.47824, 0.66", "57.6158, 26.876, -9.54453, 0.66", "58.1515, 26.6469, -9.76037, 0.66", "58.7665, 26.4036, -9.97875, 0.44", "59.7101, 26.0225, -10.2652, 0.37", "60.203, 25.8058, -10.3964, 0.88", "60.9052, 25.4725, -10.5241, 0.88", "61.4702, 25.2021, -10.5726, 1.03", "61.9179, 24.9903, -10.5613, 1.03", "62.3403, 24.8058, -10.5101, 0.74", "62.8594, 24.5999, -10.41, 0.52", "63.52, 24.3596, -10.2872, 0.52", "64.081, 24.1577, -10.1922, 0.29", "64.1296, 24.1398, -10.1879, 0.29", "64.5727, 23.9452, -10.1677, 0.29", "64.9547, 23.7377, -10.1814, 0.59", "65.0108, 23.7006, -10.188, 0.59", "65.4216, 23.3453, -10.3002, 0.88", "65.7992, 22.9274, -10.4347, 0.74", "66.1426, 22.4729, -10.6178, 0.44", "66.3943, 22.0764, -10.8011, 0.29", "66.5185, 21.8504, -10.9171, 0.59", "66.6756, 21.4985, -11.1111, 0.44", "66.777, 21.1954, -11.2944, 0.44", "66.8963, 20.6075, -11.646, 0.81", "66.899, 20.5704, -11.668, 0.81", "66.8897, 20.2103, -11.8495, 1.03", "66.859, 19.7711, -12.0414, 0.88", "66.8565, 19.7313, -12.056, 0.88", "66.8375, 19.1631, -12.2273, 0.59", "66.8434, 18.7563, -12.3173, 0.59", "66.8797, 18.2982, -12.4033, 0.88", "66.8965, 18.1716, -12.4235, 0.88", "67.0317, 17.5501, -12.4943, 0.37", "67.142, 17.1779, -12.5293, 0.74", "67.2744, 16.8216, -12.555, 0.96", "67.4679, 16.3293, -12.6111, 0.96", "67.4836, 16.2901, -12.6165, 0.96", "67.6581, 15.8706, -12.6999, 1.25", "67.9331, 15.3086, -12.8328, 0.44", "68.135, 14.9698, -12.9463, 0.37", "68.4773, 14.4809, -13.1435, 0.96", "68.8033, 14.0731, -13.3233, 0.96", "69.3224, 13.5073, -13.6032, 0.74", "69.7603, 13.0879, -13.8507, 0.74", "70.3292, 12.6031, -14.1636, 0.29", "70.6194, 12.3657, -14.3036, 0.52", "71.0642, 11.9936, -14.488, 0.88", "71.4396, 11.6642, -14.6273, 1.03", "72.0666, 11.0574, -14.8206, 0.29", "72.3209, 10.7751, -14.8588, 0.88", "72.7751, 10.2283, -14.7847, 0.81", "73.0306, 9.92349, -14.649, 0.96", "73.3116, 9.60577, -14.3979, 0.59", "73.3389, 9.57618, -14.3658, 0.59", "73.8905, 9.01472, -13.6282, 0.52", "74.2056, 8.6999, -13.223, 0.52", "74.5755, 8.32914, -12.806, 0.88", "74.6007, 8.30246, -12.7816, 0.88", "74.7366, 8.14147, -12.6609, 1.03", "75.0233, 7.75391, -12.4362, 1.03", "75.2835, 7.31271, -12.2536, 0.44", "75.5206, 6.80665, -12.0716, 0.44", "75.7238, 6.31728, -11.9102, 0.44", "75.9328, 5.81876, -11.7363, 0.52", "76.0914, 5.45658, -11.606, 0.44", "76.338, 4.92624, -11.4138, 0.44", "76.5155, 4.56685, -11.2914, 0.81", "76.7188, 4.18484, -11.1844, 0.81", "76.989, 3.72889, -11.0693, 0.37", "77.2744, 3.27866, -10.9806, 0.81", "77.4668, 2.99268, -10.9286, 0.88", "77.6148, 2.77868, -10.8961, 0.88", "77.8624, 2.40933, -10.8345, 0.66", "78.2301, 1.84303, -10.7357, 0.44", "78.5544, 1.36841, -10.6519, 0.29", "78.8313, 1.01355, -10.6102, 0.59", "79.11, 0.684933, -10.5919, 0.74", "79.1717, 0.614958, -10.5925, 0.74", "79.4647, 0.28303, -10.641, 0.59", "79.8878, -0.215401, -10.7986, 0.44", "80.3241, -0.764439, -11.0156, 0.44", "80.5214, -1.04409, -11.1371, 0.44", "80.7621, -1.43364, -11.3083, 0.74", "81.0529, -1.96601, -11.5401, 0.74", "81.3239, -2.53723, -11.7842, 0.29", "81.4279, -2.78086, -11.8874, 0.96", "81.5441, -3.05034, -11.9899, 0.96", "81.7308, -3.43172, -12.1316, 0.81", "81.7522, -3.46899, -12.1433, 0.81", "81.9438, -3.75929, -12.1987, 0.96", "82.2528, -4.17721, -12.2712, 0.52", "82.4819, -4.46713, -12.3246, 0.52", "82.5044, -4.4959, -12.3298, 0.52", "82.7938, -4.89763, -12.4211, 0.44", "83.1128, -5.37631, -12.5447, 0.59", "83.5581, -6.08764, -12.7346, 0.29", "83.7128, -6.34453, -12.8029, 0.96", "83.9591, -6.77178, -12.9201, 1.33", "84.3622, -7.49671, -13.1151, 0.29", "84.7185, -8.14787, -13.2823, 0.29", "84.9189, -8.51765, -13.3695, 0.88", "84.9391, -8.55669, -13.3755, 0.88", "85.1555, -9.00145, -13.4083, 0.88", "85.465, -9.69576, -13.394, 0.29", "85.6801, -10.226, -13.3259, 0.29", "85.7384, -10.3949, -13.2906, 0.66", "85.9167, -11.0036, -13.1442, 0.66", "86.037, -11.451, -13.0256, 0.66", "86.1411, -11.8596, -12.9082, 0.96", "86.2291, -12.2441, -12.8032, 0.74", "86.32, -12.6794, -12.6839, 0.52", "86.4327, -13.2262, -12.5227, 0.44", "86.4648, -13.3601, -12.4843, 0.44", "86.6212, -13.9194, -12.3429, 0.37", "86.8316, -14.5843, -12.1929, 0.37", "87.066, -15.2907, -12.0528, 0.74", "87.2974, -15.8683, -11.9867, 0.29", "87.587, -16.4206, -11.9566, 0.29", "87.949, -16.9849, -11.9845, 0.74", "88.1336, -17.2031, -12.0247, 1.03", "88.165, -17.232, -12.0347, 1.03", "88.863, -17.7727, -12.2956, 0.22", "89.4468, -18.1944, -12.5367, 0.22", "89.8019, -18.4453, -12.6807, 0.81", "90.1782, -18.7238, -12.8185, 0.81", "90.2113, -18.7503, -12.8306, 0.81", "90.7073, -19.211, -12.999, 0.29", "91.0339, -19.5973, -13.1413, 0.44", "91.0701, -19.6435, -13.1656, 0.44", "91.292, -19.9087, -13.3279, 0.44", "91.3197, -19.9417, -13.3556, 0.44", "91.6221, -20.3266, -13.7088, 0.52", "92.0683, -20.9539, -14.3668, 0.52", "92.3466, -21.3364, -14.8357, 0.66", "92.5392, -21.5721, -15.1794, 0.59", "92.9994, -22.0938, -16.051, 0.37", "93.2072, -22.3235, -16.4416, 0.29", "93.6323, -22.7866, -17.2447, 0.74", "94.1283, -23.3458, -18.1523, 0.81", "94.7423, -24.074, -19.2898, 0.29", "94.9562, -24.335, -19.7161, 0.66", "95.2278, -24.6563, -20.2415, 0.29", "95.5286, -25.0122, -20.8185, 0.59", "95.7121, -25.2392, -21.1712, 0.74", "96.1281, -25.8044, -22.0005, 1.33", "96.7915, -26.7392, -23.3414, 0.29", "96.9198, -26.9102, -23.5893, 0.59", "97.013, -27.0255, -23.7564, 0.59", "97.508, -27.5784, -24.4898, 0.52", "97.7597, -27.8296, -24.7868, 0.74", "97.9663, -28.0169, -24.9541, 0.74", "98.4113, -28.3829, -25.1886, 0.37", "99.0842, -28.9043, -25.5271, 0.37", "99.5806, -29.2691, -25.736, 0.37", "99.8424, -29.4557, -25.8218, 0.66", "100.095, -29.6333, -25.9074, 0.88", "100.299, -29.7786, -25.9823, 0.88", "101.155, -30.3988, -26.3079, 0.29", "101.868, -30.943, -26.5993, 0.22", "102.007, -31.0574, -26.66, 0.66", "102.5, -31.4908, -26.8881, 0.22", "102.684, -31.6702, -26.9898, 0.52", "103.0, -32.0226, -27.188, 0.29", "103.15, -32.2292, -27.2927, 0.74", "103.286, -32.4594, -27.4156, 0.74", "103.534, -32.9363, -27.6821, 0.22", "103.801, -33.5159, -28.0056, 0.37", "103.918, -33.7736, -28.1702, 0.37", "104.035, -34.0577, -28.3631, 0.59", "104.139, -34.3033, -28.5274, 0.59", "104.311, -34.7251, -28.8069, 0.22", "104.391, -34.9141, -28.9255, 0.52", "104.708, -35.5665, -29.3148, 0.29", "104.881, -35.8828, -29.5267, 1.11", "105.075, -36.2092, -29.7683, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-20.6708, -193.76, -152.601, 0.29", "-20.1455, -195.393, -153.06, 0.29", "-19.8533, -196.436, -153.304, 0.29", "-19.4957, -197.716, -153.395, 0.22", "-19.275, -198.525, -153.279, 0.74", "-19.0829, -199.133, -153.07, 0.88", "-19.0537, -199.214, -153.036, 0.88", "-18.8837, -199.707, -152.74, 0.88", "-18.4102, -201.045, -151.752, 0.29", "-17.9493, -202.131, -150.785, 0.29", "-17.4242, -203.171, -149.751, 0.88", "-17.0883, -203.782, -149.1, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-20.6708, -193.76, -152.601, 0.59", "-22.0533, -195.08, -154.366, 0.59", "-22.4098, -195.433, -154.819, 0.37", "-22.8538, -195.864, -155.332, 0.37", "-23.4324, -196.442, -155.976, 0.96", "-23.9666, -197.001, -156.571, 1.33", "-25.0302, -198.18, -157.789, 0.59", "-25.2579, -198.494, -158.08, 0.29", "-25.5909, -198.971, -158.549, 0.29", "-25.8038, -199.288, -158.913, 0.88", "-25.9354, -199.482, -159.164, 0.88", "-26.2003, -199.88, -159.715, 0.66", "-26.5072, -200.368, -160.433, 0.88", "-26.9454, -201.11, -161.554, 1.4", "-27.781, -202.536, -163.752, 0.59", "-28.2051, -203.188, -164.747, 0.59", "-28.3795, -203.443, -165.142, 0.52", "-28.4947, -203.612, -165.41, 1.03", "-28.6587, -203.853, -165.783, 0.88", "-29.271, -204.74, -167.087, 0.22", "-29.6923, -205.318, -167.84, 0.59", "-30.2509, -205.967, -168.685, 0.74", "-30.8309, -206.571, -169.494, 0.44", "-31.1827, -206.926, -169.954, 0.74", "-31.813, -207.597, -170.773, 1.11", "-32.1159, -207.961, -171.161, 0.96", "-33.1226, -209.291, -172.378, 0.74", "-33.1438, -209.319, -172.4, 0.74", "-33.5021, -209.814, -172.72, 0.74", "-33.9847, -210.552, -173.167, 0.74", "-34.4208, -211.33, -173.567, 0.37", "-34.6347, -211.759, -173.783, 1.03", "-34.8144, -212.211, -173.973, 1.18", "-35.3204, -213.473, -174.522, 0.29", "-35.494, -213.895, -174.708, 0.59", "-35.6245, -214.235, -174.839, 0.59", "-35.771, -214.746, -175.003, 0.44", "-35.8554, -215.152, -175.113, 0.29", "-35.8627, -215.197, -175.122, 0.29", "-35.9096, -215.555, -175.159, 0.59", "-35.9987, -215.939, -175.314, 0.59", "-36.0966, -216.284, -175.579, 0.44", "-36.2031, -216.622, -175.963, 0.29", "-36.3561, -217.004, -176.509, 0.88", "-36.5501, -217.415, -177.197, 1.11", "-37.0496, -218.337, -178.919, 0.74", "-37.3451, -218.859, -179.916, 0.59", "-37.6909, -219.451, -181.047, 0.29", "-38.0847, -220.104, -182.251, 0.74", "-38.6376, -221.006, -183.798, 1.03", "-39.2145, -221.95, -185.209, 0.52", "-39.433, -222.334, -185.639, 0.44", "-39.5807, -222.611, -185.867, 0.88", "-39.8374, -223.153, -186.145, 1.11", "-39.9656, -223.478, -186.206, 1.11", "-40.1746, -224.085, -186.164, 0.59", "-40.3702, -224.734, -186.048, 0.44", "-40.4807, -225.117, -185.997, 0.66", "-40.6534, -225.832, -185.939, 0.59", "-40.8201, -226.393, -186.058, 0.37", "-41.0053, -226.886, -186.268, 0.44", "-41.274, -227.488, -186.628, 0.66", "-41.5018, -227.949, -186.962, 0.81", "-41.7289, -228.382, -187.317, 0.88", "-42.9775, -230.549, -189.205, 0.52", "-43.1965, -230.879, -189.498, 0.29", "-43.3399, -231.066, -189.664, 0.59", "-43.5232, -231.276, -189.825, 0.59", "-43.9756, -231.75, -190.066, 0.37", "-44.4303, -232.188, -190.127, 0.37", "-44.8583, -232.603, -189.941, 0.37", "-44.8951, -232.637, -189.925, 0.37", "-45.4591, -233.138, -189.669, 0.22", "-45.6913, -233.32, -189.554, 0.37", "-45.9154, -233.464, -189.423, 0.37", "-46.4629, -233.767, -189.115, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "20.9608, -122.99, -81.4015, 0.29", "21.4974, -123.05, -81.9586, 0.29", "21.7419, -123.102, -82.208, 0.37", "21.7839, -123.114, -82.2465, 0.37", "22.304, -123.34, -82.7173, 0.22", "22.3492, -123.362, -82.7578, 0.22", "22.643, -123.508, -83.0138, 0.52", "22.6811, -123.533, -83.0456, 0.52", "23.0146, -123.752, -83.2808, 0.52", "23.6225, -124.126, -83.6565, 0.22", "23.6663, -124.152, -83.6806, 0.22", "23.8639, -124.267, -83.7889, 0.37", "24.2163, -124.471, -83.981, 0.22", "24.9354, -124.883, -84.3589, 0.96", "24.9815, -124.91, -84.3807, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "20.9608, -122.99, -81.4015, 0.37", "21.5428, -124.103, -82.8345, 0.37", "21.9067, -124.937, -83.7962, 0.66", "22.0749, -125.364, -84.243, 0.88", "22.2486, -125.844, -84.6983, 1.18", "22.7624, -127.393, -86.0252, 0.44", "22.9003, -127.818, -86.3576, 0.29", "23.083, -128.513, -86.7845, 0.88", "23.1884, -128.923, -86.9875, 1.11", "23.3411, -129.445, -87.203, 0.66", "23.5793, -130.12, -87.4018, 0.37", "23.8833, -130.717, -87.4772, 0.52", "23.9576, -130.827, -87.4888, 0.52", "24.505, -131.453, -87.5704, 0.59", "24.8926, -131.834, -87.6265, 0.66", "24.9871, -131.913, -87.6325, 0.66", "25.5462, -132.366, -87.6378, 0.37", "26.205, -132.881, -87.5068, 0.37", "26.7177, -133.269, -87.3535, 0.37", "27.2666, -133.673, -87.1635, 0.96", "28.1274, -134.268, -86.857, 1.25", "28.9116, -134.774, -86.6062, 0.96", "30.8857, -135.964, -85.9414, 0.52", "31.7141, -136.441, -85.6572, 0.59", "32.2174, -136.719, -85.4882, 0.74", "32.8535, -137.06, -85.2951, 0.74", "33.8571, -137.598, -85.0742, 0.29", "34.7427, -138.065, -84.9439, 0.66", "34.7994, -138.1, -84.9451, 0.66", "35.242, -138.443, -84.9598, 0.29", "35.6496, -138.836, -84.9817, 0.74", "36.0223, -139.288, -85.0211, 0.88", "36.0622, -139.341, -85.0269, 0.88", "36.521, -139.927, -85.13, 0.37", "37.0398, -140.54, -85.2389, 0.59", "37.3577, -140.89, -85.3024, 0.88", "37.9277, -141.476, -85.4149, 0.29", "38.3919, -141.919, -85.4851, 0.22", "38.6117, -142.12, -85.5121, 0.81", "38.9882, -142.444, -85.5489, 1.18", "39.0414, -142.487, -85.5538, 1.18", "39.6524, -142.965, -85.6008, 1.03", "40.4853, -143.645, -85.5701, 0.29", "41.202, -144.311, -85.4746, 0.22", "41.2664, -144.38, -85.4557, 0.22", "41.7202, -144.921, -85.2721, 0.29", "42.0978, -145.388, -85.1062, 1.18", "42.8985, -146.34, -84.7323, 0.74", "43.318, -146.825, -84.5409, 0.52", "43.894, -147.428, -84.2648, 0.29", "44.3963, -147.916, -83.9973, 0.52", "44.945, -148.398, -83.6804, 0.96", "45.7345, -149.016, -83.2733, 1.18", "46.5364, -149.573, -82.8766, 1.03", "47.6457, -150.312, -82.3123, 0.74", "48.8102, -151.115, -81.7028, 0.66", "49.483, -151.633, -81.3314, 1.03", "50.3485, -152.386, -80.8532, 0.88", "51.2632, -153.284, -80.4003, 0.74", "51.9031, -153.983, -80.1513, 0.74", "52.4456, -154.656, -80.0273, 0.74", "53.0456, -155.485, -79.9782, 0.52", "53.5085, -156.161, -79.9826, 0.52", "53.9834, -156.875, -80.018, 0.44", "54.4328, -157.555, -80.0992, 0.74", "54.7798, -158.047, -80.1706, 0.96", "55.1071, -158.488, -80.2402, 0.96", "55.7922, -159.387, -80.3905, 0.37", "56.3893, -160.131, -80.5312, 0.37", "56.4249, -160.173, -80.54, 0.37", "56.94, -160.699, -80.6809, 0.66", "57.336, -161.085, -80.7948, 0.88", "57.8615, -161.566, -80.9602, 0.59", "58.3767, -162.005, -81.1519, 0.22", "58.4313, -162.042, -81.1719, 0.22", "59.1174, -162.445, -81.4211, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-5.56526, -222.471, -55.4327, 0.52", "-4.20095, -222.302, -56.2432, 0.52", "-3.52537, -222.28, -56.6829, 0.52", "-2.83025, -222.318, -57.2585, 0.66", "-2.13861, -222.406, -57.9252, 0.59", "-1.30584, -222.564, -58.7764, 0.29", "-1.06634, -222.633, -59.0602, 0.59", "-0.81833, -222.747, -59.4674, 0.59", "-0.168669, -223.126, -60.6789, 0.29", "0.176997, -223.37, -61.3709, 0.88", "0.315657, -223.48, -61.681, 0.88", "0.935996, -223.941, -63.4403, 0.29", "1.28138, -224.154, -64.6355, 0.59", "1.39404, -224.2, -65.1924, 0.44", "1.40221, -224.201, -65.2514, 0.44", "1.5334, -224.154, -66.6019, 0.44", "1.69535, -223.941, -68.985, 0.29", "1.719, -223.868, -69.4768, 0.29", "1.86958, -223.472, -71.5832, 0.29", "1.87254, -223.46, -71.6497, 0.29", "1.87618, -223.449, -71.7098, 0.44", "1.88529, -223.426, -71.8276, 0.44", "1.95578, -223.26, -72.7213, 0.29", "2.01465, -223.115, -73.4716, 0.81", "2.4821, -221.938, -79.4045, 0.29", "2.57832, -221.682, -80.6787, 0.22", "2.67125, -221.427, -82.0308, 0.44", "2.80582, -220.993, -84.6776, 0.29", "2.82266, -220.917, -85.1986, 0.88", "2.83182, -220.885, -85.5677, 0.88", "2.83533, -220.882, -85.6271, 0.88", "2.95289, -220.818, -88.5971, 0.29", "2.99494, -220.75, -91.5347, 0.52", "2.99476, -220.748, -91.5935, 0.52", "2.95576, -220.633, -95.4544, 0.22", "2.94081, -220.596, -96.3535, 0.37", "2.90209, -220.505, -98.0874, 0.96", "2.82592, -220.319, -100.357, 0.22", "2.81123, -220.273, -100.732, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-5.56526, -222.471, -55.4327, 0.81", "-5.53342, -223.051, -55.5771, 0.81", "-5.48962, -223.594, -55.6959, 1.03", "-5.40456, -224.398, -55.8523, 0.96", "-5.30526, -225.116, -55.9753, 0.74", "-5.20763, -225.747, -56.0021, 0.29", "-5.14666, -226.139, -55.9848, 0.29", "-5.09801, -226.429, -55.9399, 0.52", "-5.06597, -226.69, -55.867, 0.52", "-5.0423, -227.027, -55.7366, 0.52", "-4.99324, -228.191, -55.2643, 0.29", "-4.97262, -228.713, -55.0681, 0.52", "-4.95342, -229.029, -54.9497, 0.81", "-4.8904, -229.631, -54.7113, 0.88", "-4.79217, -230.105, -54.5233, 1.18", "-4.61622, -230.712, -54.289, 1.4", "-4.27192, -231.583, -53.9831, 0.52", "-3.88516, -232.354, -53.704, 0.52", "-3.3596, -233.245, -53.3928, 0.52", "-2.77723, -234.139, -53.1004, 0.74", "-2.74196, -234.192, -53.0844, 0.74", "-2.34509, -234.832, -52.9395, 0.29", "-1.95074, -235.573, -52.8426, 0.29", "-1.57806, -236.403, -52.8214, 0.66", "-1.40849, -236.867, -52.8446, 0.88", "-1.23229, -237.504, -52.8946, 0.88", "-0.977389, -238.487, -53.0192, 0.29", "-0.870455, -238.9, -53.0901, 0.88", "-0.85402, -238.962, -53.1082, 0.88", "-0.724948, -239.385, -53.2665, 1.03", "-0.701805, -239.452, -53.2935, 1.03", "-0.34272, -240.449, -53.6779, 0.74", "-0.0394406, -241.167, -53.9178, 0.88", "0.402667, -242.129, -54.2065, 1.18", "0.623565, -242.601, -54.3256, 1.18", "0.884105, -243.148, -54.4338, 0.66", "1.23697, -243.877, -54.5306, 0.29", "1.5912, -244.598, -54.5633, 0.29", "1.8276, -245.089, -54.5566, 0.59", "2.1182, -245.703, -54.5052, 0.74", "2.39957, -246.32, -54.446, 0.74", "2.5471, -246.694, -54.3679, 0.74", "2.66465, -247.088, -54.2546, 0.88", "2.81968, -247.731, -54.0317, 0.81", "3.01228, -248.512, -53.7168, 0.81", "3.21129, -249.272, -53.3676, 0.59", "3.60392, -250.63, -52.6859, 0.37", "3.79889, -251.223, -52.3659, 0.52", "3.98934, -251.698, -52.0966, 0.44", "4.20279, -252.106, -51.8582, 0.52", "4.273, -252.214, -51.7986, 0.52", "4.57968, -252.598, -51.6541, 0.37", "4.66966, -252.706, -51.6403, 0.37", "4.99462, -253.177, -51.599, 0.81", "5.15946, -253.55, -51.6048, 0.96", "5.17502, -253.605, -51.6136, 0.96", "5.22999, -253.942, -51.6956, 0.81", "5.29272, -254.636, -51.9335, 0.52", "5.32149, -255.102, -52.1078, 0.52", "5.36775, -255.919, -52.4222, 0.29", "5.42206, -256.759, -52.7353, 0.74", "5.46455, -257.339, -52.9437, 0.88", "5.53899, -258.177, -53.1862, 0.52", "5.62482, -259.021, -53.3579, 0.52", "5.69094, -259.637, -53.4136, 0.74", "5.76295, -260.226, -53.3982, 0.44", "5.7803, -260.362, -53.3821, 0.44", "5.88866, -261.436, -53.2014, 0.44", "5.91044, -262.077, -53.0548, 0.22", "5.87002, -262.692, -52.9153, 0.22", "5.80048, -263.148, -52.854, 0.74", "5.78768, -263.211, -52.8519, 0.74", "5.668, -263.725, -52.8843, 0.96", "5.65156, -263.788, -52.896, 0.96", "5.52436, -264.389, -53.0127, 0.96", "5.4257, -265.421, -53.2394, 0.44", "5.40521, -265.962, -53.3057, 0.52", "5.40541, -266.026, -53.3093, 0.52", "5.41787, -266.562, -53.3298, 0.81", "5.45879, -267.303, -53.3631, 0.74", "5.54868, -268.362, -53.4038, 0.37", "5.64277, -269.709, -53.435, 0.37", "5.65948, -270.209, -53.4267, 1.18", "5.66633, -271.127, -53.3901, 0.96", "5.65042, -272.113, -53.3321, 0.52", "5.60239, -273.238, -53.2477, 0.52", "5.52897, -274.501, -53.1192, 0.74", "5.48134, -275.824, -52.9918, 0.81", "5.47952, -275.896, -52.9806, 0.81", "5.46483, -276.477, -52.8266, 1.03", "5.46222, -276.548, -52.8017, 1.03", "5.45519, -277.205, -52.545, 0.52", "5.4746, -277.833, -52.3075, 0.37", "5.51822, -278.44, -52.1167, 0.88", "5.56726, -279.094, -51.9208, 0.96", "5.61505, -279.601, -51.7704, 0.74", "5.69019, -280.198, -51.6071, 0.22", "5.79827, -280.799, -51.4416, 0.22", "5.95256, -281.3, -51.2983, 0.74", "6.116, -281.642, -51.1945, 1.03", "6.37542, -282.037, -51.0685, 1.03", "6.77161, -282.504, -50.8645, 0.59", "7.37883, -283.123, -50.5448, 0.37", "7.99971, -283.723, -50.2081, 0.22", "8.44766, -284.181, -49.9571, 0.81", "8.79175, -284.562, -49.7656, 0.81", "9.36538, -285.283, -49.454, 0.29", "9.63702, -285.657, -49.314, 0.59", "9.90068, -286.056, -49.202, 0.74", "10.2638, -286.692, -49.0655, 0.74", "10.573, -287.281, -48.9835, 0.52", "11.0917, -288.244, -48.9869, 0.22", "11.3601, -288.747, -49.0496, 0.22", "11.5483, -289.106, -49.1096, 0.74", "11.7858, -289.584, -49.21, 0.74", "12.3253, -290.733, -49.4912, 0.22", "12.827, -291.972, -49.8231, 0.81", "13.0013, -292.491, -49.9591, 0.81", "13.2554, -293.39, -50.163, 0.22", "13.433, -294.127, -50.2899, 0.22", "13.4993, -294.447, -50.3292, 0.81", "13.5803, -294.923, -50.3578, 1.03", "13.7488, -296.035, -50.3429, 0.29", "13.8131, -296.439, -50.3379, 0.29", "13.9549, -297.367, -50.329, 0.29", "14.0668, -298.164, -50.3067, 0.15", "14.106, -298.486, -50.2985, 0.52", "14.1408, -298.755, -50.2913, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-21.0499, -82.6936, 2.66084, 0.96", "-20.9584, -84.2285, 1.80882, 0.96", "-20.8897, -85.8528, 0.967624, 0.96", "-20.8456, -87.6734, 0.111777, 0.96", "-20.8291, -89.5615, -0.698719, 0.81", "-20.871, -91.4548, -1.51538, 0.66", "-20.9413, -93.0563, -2.18249, 0.66", "-20.9555, -93.2386, -2.24976, 0.66", "-21.071, -94.433, -2.67776, 0.88", "-21.134, -95.2225, -2.96007, 1.03", "-21.1332, -97.2399, -3.80685, 0.74", "-21.0069, -98.4553, -4.40027, 0.74", "-20.7387, -99.7445, -5.11651, 0.74", "-20.2764, -101.342, -6.06128, 0.96", "-19.9163, -102.284, -6.64756, 1.03", "-19.3806, -103.549, -7.39035, 1.03", "-18.7107, -105.148, -8.19193, 0.88", "-18.3374, -106.225, -8.63952, 0.88", "-18.2767, -106.57, -8.72914, 0.88", "-18.3109, -107.443, -8.70297, 0.59", "-18.8222, -109.155, -8.25095, 0.52", "-19.5108, -110.448, -7.65881, 0.74", "-20.1097, -111.292, -7.06558, 0.66", "-20.9525, -112.32, -6.20285, 0.52", "-22.268, -113.831, -4.76711, 0.52", "-22.9238, -114.563, -4.02057, 0.74", "-23.7701, -115.513, -3.05781, 1.03", "-24.8432, -116.795, -1.88311, 1.03", "-25.5928, -117.747, -1.12166, 1.03", "-26.6393, -119.191, -0.156827, 0.74", "-27.3279, -120.192, 0.344614, 0.66", "-28.022, -121.343, 0.851379, 0.52", "-28.5588, -122.425, 1.26811, 0.52", "-28.5951, -122.511, 1.2952, 0.52", "-28.9034, -123.431, 1.60297, 0.66", "-29.1375, -124.35, 1.91171, 0.81", "-29.4172, -125.627, 2.40328, 0.52", "-29.7929, -127.198, 2.95363, 0.52", "-29.9007, -127.514, 3.01879, 0.81", "-30.3991, -128.519, 3.07392, 0.81", "-30.9781, -129.322, 2.99692, 0.96", "-32.0072, -130.324, 2.71883, 1.03", "-33.5692, -131.399, 2.28214, 1.18", "-35.5365, -132.495, 1.76516, 0.81", "-36.5044, -132.964, 1.51482, 0.88", "-37.7142, -133.474, 1.23507, 1.18", "-38.9689, -133.984, 1.00021, 1.55", "-40.7187, -134.76, 0.831386, 0.66", "-41.4718, -135.18, 0.862966, 0.66", "-42.1019, -135.667, 0.986453, 0.52", "-43.1337, -136.724, 1.29578, 0.52", "-43.8771, -137.745, 1.60001, 0.37", "-44.5939, -139.141, 2.08313, 0.37", "-44.9817, -140.182, 2.44236, 0.74", "-45.3569, -141.405, 2.90274, 1.25", "-45.3792, -141.478, 2.93297, 1.25", "-45.7373, -142.533, 3.38957, 1.18", "-46.3534, -144.046, 4.07534, 1.03", "-46.8124, -144.954, 4.47923, 0.66", "-47.4171, -146.001, 4.9238, 0.37", "-48.267, -147.324, 5.42376, 0.37", "-48.889, -148.215, 5.72714, 0.44", "-48.9566, -148.3, 5.75313, 0.44", "-49.8629, -149.309, 6.00075, 0.37", "-50.5446, -150.05, 6.16509, 0.59", "-50.9679, -150.521, 6.25114, 0.59", "-51.6928, -151.396, 6.36592, 0.44", "-52.2846, -152.147, 6.44622, 0.66", "-52.9412, -153.006, 6.53466, 0.88", "-53.6626, -153.987, 6.62908, 0.88", "-54.6836, -155.368, 6.73871, 0.66", "-55.4833, -156.464, 6.79091, 0.96", "-56.0808, -157.253, 6.81656, 1.18", "-57.3688, -158.811, 6.90459, 0.88", "-57.9004, -159.364, 6.96211, 0.96", "-59.1679, -160.415, 7.1666, 0.59", "-59.2398, -160.456, 7.18329, 0.59", "-60.6395, -160.987, 7.64024, 0.59", "-61.8449, -161.284, 8.09844, 0.52", "-62.7056, -161.437, 8.46206, 0.52", "-63.5603, -161.609, 8.91279, 0.74", "-64.4298, -161.819, 9.44765, 0.96", "-65.2744, -162.066, 9.98313, 0.81", "-66.755, -162.61, 10.9336, 0.96", "-67.7203, -163.044, 11.5308, 0.96", "-69.1794, -163.778, 12.4339, 0.44", "-70.0694, -164.276, 12.9712, 0.44", "-71.0449, -164.863, 13.5188, 0.66", "-71.8902, -165.353, 13.9296, 0.59", "-72.9066, -165.934, 14.3744, 0.59", "-73.0038, -165.987, 14.4101, 0.59", "-73.8439, -166.43, 14.6315, 0.88", "-75.3708, -167.33, 14.9886, 0.96", "-76.5071, -168.089, 15.2219, 0.37", "-76.6672, -168.222, 15.262, 0.37", "-77.6493, -169.268, 15.5692, 0.37", "-78.3482, -170.216, 15.8408, 0.29", "-78.9322, -171.252, 16.1278, 0.29", "-79.3188, -172.076, 16.358, 0.52", "-80.1264, -173.831, 16.8688, 1.03", "-80.5562, -174.689, 17.1283, 1.25", "-80.9341, -175.358, 17.3309, 1.25", "-81.7434, -176.49, 17.708, 0.88", "-82.6232, -177.44, 18.0435, 0.74", "-83.6295, -178.31, 18.3274, 0.74", "-84.4829, -178.922, 18.4965, 0.96", "-85.6893, -179.71, 18.7122, 0.66", "-86.7359, -180.36, 18.8278, 0.74", "-87.3671, -180.758, 18.8721, 1.03", "-88.2621, -181.373, 18.9027, 1.4", "-88.3316, -181.428, 18.9031, 1.4", "-88.9836, -182.076, 18.8918, 1.4", "-90.1302, -183.624, 18.8626, 0.52", "-90.6886, -184.592, 18.8225, 0.81", "-91.0552, -185.291, 18.8037, 0.88", "-91.4072, -186.014, 18.8033, 0.52", "-91.9472, -187.085, 18.8211, 0.44", "-92.4143, -188.003, 18.8563, 0.44", "-92.8595, -188.766, 18.9456, 0.44", "-93.4154, -189.487, 19.0386, 0.66", "-93.5589, -189.623, 19.084, 0.66", "-94.1586, -190.038, 19.3401, 0.88", "-94.2763, -190.1, 19.399, 0.88", "-95.0258, -190.493, 19.8172, 0.96", "-95.4533, -190.751, 20.069, 0.66", "-96.5032, -191.463, 20.6867, 0.52", "-97.2232, -191.986, 21.0931, 0.44", "-97.7586, -192.413, 21.374, 0.74", "-98.4469, -193.004, 21.701, 0.81", "-99.3169, -193.876, 22.0619, 0.52", "-99.3918, -193.96, 22.0815, 0.52", "-99.8929, -194.56, 22.1341, 0.81", "-100.635, -195.539, 22.1558, 0.96", "-101.049, -196.14, 22.1382, 1.11", "-101.665, -197.039, 22.1072, 0.81", "-102.509, -198.193, 22.0337, 0.66", "-102.562, -198.256, 22.028, 0.66", "-103.422, -199.141, 21.9841, 0.52", "-104.298, -199.799, 22.0383, 0.37", "-104.996, -200.149, 22.2301, 0.29", "-106.104, -200.524, 22.7423, 0.66", "-106.728, -200.708, 23.114, 0.74", "-107.938, -201.158, 23.9719, 0.29", "-108.484, -201.41, 24.4022, 0.66", "-109.219, -201.857, 25.0099, 0.88", "-109.928, -202.389, 25.5883, 0.88", "-110.329, -202.732, 25.9068, 0.88", "-111.523, -203.793, 26.7489, 0.58", "-112.325, -204.51, 27.2111, 0.81", "-113.059, -205.164, 27.5861, 1.11", "-113.734, -205.765, 27.8807, 0.74", "-114.498, -206.435, 28.2134, 0.88", "-115.264, -207.037, 28.535, 0.81", "-116.031, -207.557, 28.835, 0.74", "-117.266, -208.321, 29.336, 0.44", "-118.413, -208.995, 29.81, 0.74", "-119.333, -209.498, 30.2046, 0.88", "-120.53, -210.048, 30.8552, 0.52", "-121.185, -210.322, 31.2998, 0.59", "-122.357, -210.795, 32.2287, 0.59", "-122.417, -210.822, 32.2823, 0.59", "-123.005, -211.162, 32.8339, 0.66", "-124.671, -212.506, 34.29, 0.59", "-125.43, -213.31, 34.9126, 0.59", "-125.937, -213.934, 35.2475, 0.81", "-126.705, -214.962, 35.6504, 0.52", "-127.555, -216.118, 35.954, 0.66", "-128.545, -217.499, 36.1355, 0.44", "-129.149, -218.384, 36.1401, 1.11", "-130.319, -220.084, 36.0885, 0.59", "-130.373, -220.163, 36.0878, 0.59", "-131.024, -221.086, 36.1113, 0.44", "-131.333, -221.488, 36.1469, 0.44", "-132.308, -222.634, 36.4254, 0.44", "-132.962, -223.28, 36.7042, 0.37", "-133.679, -223.85, 37.1148, 0.29", "-134.269, -224.271, 37.5478, 0.66", "-134.831, -224.611, 38.0324, 1.03", "-135.523, -224.964, 38.6564, 1.03", "-136.041, -225.184, 39.1244, 0.81", "-136.942, -225.587, 39.9081, 0.52", "-137.949, -226.165, 40.716, 0.66", "-138.513, -226.603, 41.142, 0.29", "-138.796, -226.873, 41.3377, 0.59", "-139.326, -227.391, 41.6425, 0.81", "-139.963, -227.969, 41.9598, 0.81", "-140.812, -228.601, 42.3096, 0.52", "-141.91, -229.276, 42.661, 0.74", "-141.986, -229.316, 42.6856, 0.74", "-143.134, -229.857, 43.0604, 0.44", "-143.951, -230.228, 43.3151, 0.74", "-144.846, -230.636, 43.584, 1.11", "-146.169, -231.275, 43.9687, 0.59", "-146.955, -231.729, 44.1885, 0.66", "-147.741, -232.296, 44.3974, 0.81", "-148.644, -233.144, 44.6223, 0.52", "-149.217, -233.775, 44.7581, 0.66", "-149.725, -234.367, 44.8778, 0.66", "-150.249, -234.931, 44.9654, 0.44", "-150.32, -234.999, 44.9741, 0.44", "-151.46, -235.832, 45.0921, 0.37", "-151.655, -235.924, 45.1135, 0.37", "-152.993, -236.204, 45.285, 0.37", "-154.241, -236.225, 45.3914, 0.29", "-154.993, -236.165, 45.4388, 0.37", "-155.784, -236.076, 45.5125, 0.44", "-156.879, -235.87, 45.6048, 0.37", "-158.374, -235.532, 45.734, 0.29", "-160.027, -235.039, 45.8927, 0.22", "-160.36, -234.926, 45.9437, 0.44", "-161.904, -234.372, 46.1093, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-21.0499, -82.6936, 2.66084, 0.74", "-21.4342, -83.0357, 2.83023, 0.74", "-21.9033, -83.4558, 3.03655, 0.44", "-22.3662, -83.8628, 3.23867, 0.59", "-22.9519, -84.3549, 3.46181, 0.37", "-23.4007, -84.7363, 3.63187, 0.59", "-23.5945, -84.8992, 3.70484, 0.88", "-23.639, -84.9349, 3.71962, 0.88", "-23.8315, -85.0831, 3.77365, 1.11", "-24.2711, -85.3618, 3.87877, 0.88", "-24.8168, -85.6195, 3.99608, 0.37", "-25.1586, -85.7417, 4.06084, 0.66", "-25.6963, -85.8952, 4.13655, 0.81", "-26.1957, -86.0316, 4.19687, 0.74", "-26.8921, -86.2104, 4.27249, 0.88", "-27.3829, -86.3319, 4.32618, 0.74", "-28.1413, -86.5283, 4.3749, 0.52", "-29.0434, -86.8082, 4.42372, 0.52", "-29.5804, -87.0175, 4.47856, 0.74", "-29.6267, -87.0413, 4.48918, 0.74", "-29.9841, -87.3424, 4.86845, 0.88", "-30.349, -87.7759, 5.63277, 1.03", "-30.5401, -88.0427, 6.17467, 1.18", "-30.79, -88.4152, 7.03123, 0.96", "-31.112, -88.9029, 8.26365, 1.18", "-32.0445, -90.252, 11.876, 0.66", "-32.1666, -90.4447, 12.4173, 0.66", "-32.2914, -90.6525, 12.9972, 0.81", "-32.4194, -90.8551, 13.5289, 0.81", "-32.4372, -90.8826, 13.5902, 0.81", "-32.6591, -91.2625, 14.2597, 0.88", "-33.0148, -91.9367, 15.3614, 0.88", "-33.1727, -92.3588, 16.123, 0.74", "-33.2284, -92.5533, 16.4901, 0.96", "-33.4441, -93.4199, 18.1087, 0.44", "-33.6185, -94.1839, 19.5223, 1.25", "-33.8349, -95.2561, 21.4621, 0.59", "-33.9902, -95.8904, 22.5769, 0.96", "-33.9988, -95.9216, 22.6287, 0.96", "-34.142, -96.3472, 23.2528, 0.59", "-34.3398, -96.7856, 23.7699, 0.52", "-34.7816, -97.6237, 24.5624, 0.81", "-35.3676, -98.7145, 25.388, 0.44", "-35.6729, -99.2767, 25.7759, 0.59", "-35.9303, -99.7934, 26.1447, 0.74", "-36.1717, -100.357, 26.5979, 0.44", "-36.4154, -101.015, 27.1615, 0.44", "-36.665, -101.766, 27.8051, 0.29", "-36.8403, -102.449, 28.3999, 0.44", "-36.9963, -103.319, 29.2326, 0.81", "-37.0946, -104.318, 30.2928, 1.03", "-37.0944, -104.352, 30.3329, 1.03", "-40.0007, -109.959, 35.7348, 1.03", "-43.3811, -115.426, 41.0153, 1.03", "-46.434, -121.78, 45.3021, 1.03", "-50.6324, -127.664, 49.3528, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-4.39897, -59.0278, -5.30321, 1.4", "-3.94044, -59.5039, -5.60245, 1.4", "-3.23764, -60.2391, -6.17385, 1.11", "-2.46774, -61.1719, -7.02362, 0.96", "-1.94438, -61.9364, -7.8032, 0.96", "-1.58912, -62.5975, -8.53309, 1.11", "-1.22249, -63.3734, -9.39918, 1.25", "-0.815165, -64.4043, -10.593, 1.18", "-0.420388, -65.6293, -11.973, 1.18", "-0.169372, -66.6636, -13.0418, 1.03", "0.0665735, -68.0531, -14.2905, 0.88", "0.149134, -68.7372, -14.7908, 0.96", "0.273459, -70.0131, -15.532, 1.11", "0.38156, -71.3764, -16.1258, 1.11", "0.447094, -72.3362, -16.4025, 0.96", "0.499382, -73.6215, -16.6376, 1.11", "0.467788, -75.4083, -16.8419, 1.18", "0.387668, -76.2911, -16.9292, 1.18", "0.23795, -77.2835, -17.0212, 1.18", "-0.114049, -79.1737, -17.202, 0.96", "-0.373438, -80.4355, -17.3348, 1.03", "-0.810368, -82.3736, -17.5809, 1.03", "-1.16346, -83.7717, -17.7895, 1.33", "-1.42742, -84.795, -17.9727, 1.55", "-1.63678, -85.6332, -18.1647, 1.33", "-1.95337, -86.9655, -18.5295, 1.03", "-2.17038, -88.0796, -18.8572, 1.33", "-2.32216, -89.0659, -19.1592, 1.33", "-2.57794, -90.9327, -19.7034, 1.25", "-2.88408, -92.946, -20.2956, 1.03", "-3.08498, -94.0887, -20.6302, 0.96", "-3.39129, -95.5294, -21.0421, 0.96", "-3.61796, -96.4177, -21.2808, 0.96", "-3.99171, -97.7301, -21.6426, 0.96", "-4.42579, -98.9581, -21.9639, 1.11", "-4.69964, -99.5553, -22.0964, 1.25", "-5.31602, -100.593, -22.3246, 1.4", "-5.81713, -101.214, -22.466, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-4.39897, -59.0278, -5.30321, 1.11", "-3.68242, -61.2832, -3.32783, 1.11", "-3.55467, -61.7973, -3.03606, 1.11", "-3.36782, -62.6265, -2.6559, 1.03", "-3.1018, -63.8916, -2.22551, 1.11", "-3.09059, -63.95, -2.21184, 1.11", "-2.91646, -65.003, -2.0254, 1.11", "-2.75555, -66.1881, -1.98752, 1.11", "-2.74726, -66.2502, -1.98592, 1.11", "-2.61692, -67.3152, -1.96653, 1.11", "-2.48194, -68.6362, -1.96715, 1.03", "-2.41374, -69.4888, -1.9724, 1.33", "-2.37584, -70.506, -1.96492, 1.18", "-2.43156, -71.7951, -1.90668, 0.88", "-2.43761, -71.8574, -1.90254, 0.88", "-2.67305, -73.2713, -1.73617, 0.88", "-2.93279, -74.3869, -1.55772, 0.88", "-3.22595, -75.3621, -1.36584, 1.11", "-3.64394, -76.6754, -1.02859, 0.88", "-3.65957, -76.7254, -1.01186, 0.88", "-3.90699, -77.6528, -0.668922, 0.88", "-3.94391, -77.8222, -0.596818, 0.88", "-4.02158, -78.6122, -0.276915, 0.96", "-3.99356, -80.208, 0.283644, 0.81", "-3.95359, -80.6846, 0.425791, 1.18", "-3.87558, -81.4763, 0.631204, 0.96", "-3.86286, -81.5966, 0.655822, 0.96", "-3.73646, -82.7295, 0.835639, 0.74", "-3.67845, -83.5166, 0.869771, 0.96", "-3.67702, -84.1844, 0.818097, 1.03", "-3.68428, -84.3051, 0.794313, 1.03", "-3.76453, -85.0894, 0.573481, 1.33", "-3.86971, -85.8826, 0.284833, 1.55", "-4.06149, -87.0834, -0.237336, 1.25", "-4.17582, -87.9763, -0.692174, 1.4", "-4.29674, -89.2253, -1.36338, 1.55", "-4.36865, -90.1177, -1.85176, 1.11", "-4.44189, -91.2451, -2.49226, 0.74", "-4.44539, -91.3069, -2.52485, 0.74", "-4.48879, -92.0936, -2.89886, 0.74", "-4.49338, -92.6588, -3.10251, 0.96", "-4.48935, -92.7381, -3.11977, 0.96", "-4.42956, -93.8169, -3.2751, 1.11", "-4.32207, -94.7182, -3.38642, 1.11", "-4.19989, -95.9241, -3.61754, 1.25", "-4.03767, -97.7518, -4.04186, 0.96", "-3.92451, -99.0304, -4.41482, 0.96", "-3.83911, -99.9518, -4.72234, 1.11", "-3.64966, -101.795, -5.40934, 1.11", "-3.47564, -103.539, -6.14501, 1.25", "-3.43229, -104.056, -6.37877, 1.55", "-3.42109, -105.104, -6.90707, 1.47", "-3.42084, -105.161, -6.93067, 1.47", "-3.42411, -105.83, -7.11755, 0.88", "-3.41979, -106.743, -7.14858, 0.59", "-3.3469, -107.686, -6.99629, 0.74", "-3.2851, -108.357, -6.83378, 1.03", "-3.15899, -109.675, -6.46442, 1.03", "-3.10681, -110.252, -6.29865, 1.25", "-2.98542, -111.574, -5.91062, 1.25", "-2.88856, -112.582, -5.61225, 0.74", "-2.83689, -113.413, -5.40492, 0.74", "-2.84618, -114.263, -5.305, 0.96", "-2.85141, -114.317, -5.30866, 0.96", "-2.97389, -115.27, -5.49619, 1.18", "-2.98358, -115.337, -5.51758, 1.18", "-3.12005, -116.532, -5.96404, 1.33", "-3.22142, -117.958, -6.50403, 1.03", "-3.27094, -119.127, -6.91451, 0.88", "-3.28547, -119.568, -7.05355, 1.33", "-3.31388, -120.47, -7.29567, 1.33", "-3.34919, -121.487, -7.50098, 1.55", "-3.3957, -122.498, -7.59384, 1.33", "-3.48797, -123.425, -7.57411, 1.11", "-3.66402, -124.421, -7.46919, 0.66", "-3.91091, -125.403, -7.30307, 0.66", "-4.21739, -126.349, -7.08326, 0.74", "-4.58859, -127.347, -6.80517, 0.59", "-4.83105, -128.016, -6.60809, 0.88", "-5.03089, -128.691, -6.43351, 0.96", "-5.13925, -129.345, -6.3212, 0.88", "-5.13442, -129.405, -6.31451, 0.88", "-4.90287, -130.26, -6.26916, 0.74", "-4.61227, -131.072, -6.25539, 1.25", "-4.28112, -131.954, -6.22986, 1.25", "-3.94548, -132.938, -6.17024, 1.03", "-3.50567, -134.601, -5.98647, 0.74", "-3.33376, -135.55, -5.83444, 0.59", "-3.29996, -136.113, -5.70782, 0.81", "-3.379, -136.91, -5.48135, 0.88", "-3.58877, -137.838, -5.194, 1.03", "-3.80729, -138.622, -4.98744, 1.11", "-3.86727, -138.798, -4.96385, 1.11", "-4.17332, -139.661, -4.95768, 0.96", "-4.51371, -140.635, -5.04524, 1.11", "-4.83205, -141.609, -5.22125, 0.96", "-5.26236, -143.024, -5.56626, 1.18", "-5.67603, -144.543, -5.90707, 1.03", "-6.07777, -146.102, -6.22971, 0.96", "-6.10127, -146.209, -6.25147, 0.96", "-6.27702, -147.341, -6.45656, 0.96", "-6.32191, -148.17, -6.54296, 1.4", "-6.21119, -149.79, -6.56804, 1.11", "-6.19634, -149.87, -6.56346, 1.11", "-5.96722, -150.813, -6.48751, 1.25", "-5.65796, -152.038, -6.4035, 1.11", "-5.30508, -153.382, -6.35062, 0.88", "-5.11267, -154.117, -6.35759, 1.18", "-4.80521, -155.277, -6.45741, 1.25", "-4.61265, -156.07, -6.52688, 1.4", "-4.59937, -156.138, -6.53296, 1.4", "-4.42575, -157.317, -6.62023, 1.03", "-4.41338, -157.502, -6.62955, 1.03", "-4.40836, -158.518, -6.6201, 0.74", "-4.44702, -159.398, -6.51205, 0.74", "-4.52776, -160.09, -6.35067, 0.96", "-4.71291, -161.123, -6.02539, 0.88", "-4.94574, -162.061, -5.64933, 0.88", "-5.18028, -162.864, -5.28887, 0.88", "-5.54546, -163.924, -4.75008, 1.11", "-5.80821, -164.663, -4.36795, 1.25", "-6.05291, -165.367, -4.02566, 1.4", "-6.13022, -165.579, -3.94141, 1.4", "-6.32054, -166.172, -3.77397, 1.4", "-6.38225, -166.349, -3.76229, 1.4", "-6.77441, -167.38, -3.92602, 1.25", "-7.06232, -168.155, -4.13896, 1.18", "-7.30822, -168.841, -4.41204, 0.96", "-7.65001, -169.81, -4.86533, 0.96", "-8.26408, -171.435, -5.77625, 0.81", "-8.81027, -172.791, -6.66087, 0.81", "-9.07995, -173.394, -7.0931, 1.03", "-9.74576, -174.824, -8.10542, 1.03", "-9.77774, -174.893, -8.15199, 1.03", "-10.3146, -176.098, -8.89228, 1.55", "-10.883, -177.546, -9.62097, 0.88", "-11.3944, -178.92, -10.222, 0.81", "-11.802, -179.991, -10.6566, 0.81", "-12.0988, -180.781, -10.9414, 0.96", "-12.3899, -181.608, -11.2148, 0.96", "-12.6461, -182.452, -11.4492, 0.74", "-13.0266, -183.836, -11.8026, 1.25", "-13.3392, -185.163, -12.1686, 0.81", "-13.3517, -185.221, -12.1845, 0.81", "-13.5158, -186.181, -12.3674, 0.81", "-13.6239, -186.937, -12.4401, 1.18", "-13.6342, -187.053, -12.4397, 1.18", "-13.6612, -187.875, -12.3635, 1.18", "-13.6404, -189.308, -12.1861, 0.81", "-13.6156, -190.713, -12.0186, 0.81", "-13.5982, -191.475, -11.9276, 1.11", "-13.5851, -192.751, -11.7941, 1.11", "-13.5814, -192.884, -11.779, 1.11", "-13.4801, -193.995, -11.5787, 0.96", "-13.3978, -194.538, -11.4628, 1.25", "-13.3881, -194.597, -11.4496, 1.25", "-13.1989, -195.619, -11.1884, 1.25", "-12.9155, -197.262, -10.7192, 1.03", "-12.5964, -199.234, -10.1303, 0.81", "-12.4879, -199.916, -9.93337, 1.11", "-12.3079, -201.094, -9.64152, 0.96", "-12.2835, -201.286, -9.60305, 0.96", "-12.1819, -202.286, -9.4531, 0.81", "-12.1799, -202.367, -9.44936, 0.81", "-12.2333, -203.752, -9.4857, 0.96", "-12.2635, -204.643, -9.51413, 1.18", "-12.2878, -205.598, -9.55194, 1.03", "-12.2903, -205.66, -9.55372, 1.03", "-12.3543, -206.76, -9.5679, 0.74", "-12.4839, -208.247, -9.57991, 0.74", "-12.5899, -209.059, -9.61222, 0.81", "-12.6015, -209.139, -9.61814, 0.81", "-12.7052, -209.919, -9.71271, 0.81", "-12.8304, -211.081, -9.90463, 0.81", "-12.933, -212.43, -10.23, 1.03", "-13.0013, -213.578, -10.5616, 1.03", "-13.0054, -213.637, -10.5783, 1.03", "-13.0822, -214.429, -10.78, 1.25", "-13.1682, -215.179, -10.9563, 0.96", "-13.306, -216.184, -11.1299, 0.81", "-13.4142, -216.831, -11.1954, 1.11", "-13.5727, -217.801, -11.2554, 1.33", "-13.7409, -218.745, -11.3144, 1.33", "-13.7539, -218.813, -11.3204, 1.33", "-13.9795, -220.099, -11.4642, 0.74", "-14.1706, -221.438, -11.691, 0.96", "-14.258, -222.546, -11.9665, 0.96", "-14.2567, -222.654, -11.9971, 0.96", "-14.1588, -223.771, -12.3299, 0.96", "-14.0022, -224.774, -12.5696, 0.81", "-13.7783, -225.856, -12.7498, 0.66", "-13.5424, -226.922, -12.8283, 0.66", "-13.335, -227.945, -12.8251, 1.33", "-13.1734, -228.806, -12.7415, 1.33", "-12.9129, -230.37, -12.4409, 1.11", "-12.7341, -231.493, -12.1788, 1.18", "-12.6399, -232.121, -12.0215, 1.4", "-12.5028, -233.09, -11.824, 1.11", "-12.329, -234.219, -11.7064, 0.59", "-12.1927, -234.945, -11.7101, 0.52", "-11.9744, -235.93, -11.8283, 0.88", "-11.7353, -236.895, -12.0318, 1.18", "-11.4942, -237.941, -12.3016, 1.03", "-11.2229, -239.259, -12.6983, 0.96", "-11.0351, -240.567, -13.1444, 0.81", "-10.9708, -241.34, -13.4082, 1.11", "-10.972, -242.244, -13.6977, 1.69", "-11.0513, -243.258, -14.01, 1.18", "-11.0603, -243.326, -14.0247, 1.18", "-11.2256, -244.399, -14.1447, 0.59", "-11.228, -244.459, -14.1396, 0.59", "-11.1272, -245.379, -13.9122, 1.03", "-11.1039, -245.483, -13.8761, 1.03", "-10.6744, -246.827, -13.3934, 1.25", "-10.4666, -247.402, -13.194, 1.25", "-9.94527, -248.769, -12.737, 0.96", "-9.68116, -249.547, -12.5055, 0.66", "-9.48238, -250.241, -12.3322, 0.66", "-9.35976, -250.842, -12.2222, 0.37", "-9.31566, -251.661, -12.1979, 0.52", "-9.39204, -252.613, -12.2434, 0.81", "-9.56547, -253.371, -12.316, 1.11", "-9.81222, -254.123, -12.4208, 1.4", "-10.1563, -255.054, -12.5768, 1.4", "-10.8197, -256.678, -12.8757, 0.81", "-11.2002, -257.592, -13.0818, 0.66", "-11.5327, -258.465, -13.3266, 0.52", "-11.8843, -259.647, -13.7254, 0.37", "-12.0313, -260.301, -13.9727, 0.88", "-12.0402, -260.358, -13.9932, 0.88", "-12.0967, -260.964, -14.1429, 1.25", "-12.1712, -261.672, -14.2743, 1.25", "-12.2828, -262.482, -14.3598, 0.88", "-12.5525, -263.863, -14.367, 0.66", "-12.8947, -265.16, -14.2947, 0.66", "-13.2976, -266.391, -14.1781, 0.88", "-13.65, -267.275, -14.0965, 0.88", "-13.9889, -268.006, -14.0556, 1.11", "-14.3037, -268.67, -14.0473, 1.18", "-14.5215, -269.188, -14.0444, 1.18", "-15.0885, -270.737, -14.095, 0.88", "-15.4807, -272.052, -14.1869, 1.25", "-15.8072, -273.496, -14.3181, 0.74", "-16.0051, -274.677, -14.4307, 0.59", "-16.1585, -276.03, -14.5518, 1.03", "-16.1988, -276.847, -14.594, 0.74", "-16.1654, -277.783, -14.5736, 0.59", "-16.1523, -277.973, -14.5496, 0.59", "-16.1041, -278.949, -14.339, 0.74", "-16.1116, -279.01, -14.3261, 0.74", "-16.3536, -279.904, -14.2192, 0.59", "-16.3761, -279.972, -14.2141, 0.59", "-16.7732, -281.147, -14.1939, 0.74", "-17.1534, -282.33, -14.2317, 0.59", "-17.5893, -283.86, -14.3854, 0.59", "-17.9573, -285.242, -14.5981, 0.59", "-18.1852, -286.216, -14.8172, 0.59", "-18.3587, -287.069, -15.0541, 0.81", "-18.3871, -287.25, -15.1172, 0.81", "-18.4467, -287.959, -15.415, 0.81", "-18.4439, -288.009, -15.433, 0.81", "-18.3733, -288.876, -15.6197, 0.81", "-18.369, -288.93, -15.6211, 0.81", "-18.3109, -289.86, -15.5511, 0.66", "-18.3068, -289.914, -15.5459, 0.66", "-18.2194, -290.991, -15.4249, 0.66", "-18.0637, -292.306, -15.3106, 0.44", "-17.8072, -294.053, -15.1846, 0.66", "-17.4795, -295.556, -15.1107, 0.96", "-17.1165, -296.824, -15.0759, 0.96", "-17.0847, -296.917, -15.076, 0.96", "-16.5675, -298.131, -15.1325, 0.81", "-16.512, -298.244, -15.1446, 0.81", "-15.892, -299.475, -15.3786, 0.74", "-15.8631, -299.53, -15.389, 0.74", "-15.6106, -300.113, -15.4722, 0.96", "-15.5741, -300.232, -15.4938, 0.96", "-15.3692, -301.246, -15.653, 0.96", "-15.2791, -301.969, -15.7741, 0.96", "-15.2797, -302.031, -15.7857, 0.96", "-15.295, -302.955, -15.9636, 0.52", "-15.3236, -303.973, -16.1724, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-41.1357, -67.1698, -7.5735, 0.74", "-41.6401, -67.1417, -6.91477, 0.74", "-41.6786, -67.1499, -6.84231, 0.74", "-42.1449, -67.3822, -5.72186, 0.52", "-42.3853, -67.5277, -5.13267, 0.44", "-42.8026, -67.774, -4.18404, 0.44", "-43.2271, -68.0082, -3.31058, 0.96", "-44.0308, -68.5071, -1.7583, 0.74", "-44.5485, -68.8294, -0.88147, 0.74", "-44.8231, -69.0081, -0.491673, 0.74", "-45.2436, -69.252, 0.016646, 0.59", "-45.6347, -69.4328, 0.419218, 0.52", "-46.2219, -69.6451, 0.931905, 0.52", "-46.6392, -69.7657, 1.23773, 0.88", "-47.34, -69.9338, 1.74093, 0.59", "-48.3761, -70.1443, 2.58297, 0.96", "-49.5023, -70.3481, 3.59725, 1.33", "-49.9217, -70.419, 4.00934, 1.33", "-50.5902, -70.5335, 4.69312, 0.44", "-50.9867, -70.5881, 5.09671, 0.44", "-51.8666, -70.6721, 5.92954, 0.44", "-51.913, -70.676, 5.96736, 0.44", "-52.6842, -70.7051, 6.50072, 0.81", "-53.1954, -70.7238, 6.92185, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-41.1357, -67.1698, -7.5735, 0.59", "-42.0743, -67.9452, -7.64703, 0.59", "-42.5611, -68.3881, -7.6589, 0.52", "-42.8519, -68.6522, -7.66866, 0.88", "-43.4191, -69.1121, -7.72034, 0.88", "-43.852, -69.4034, -7.82997, 0.88", "-44.262, -69.6354, -7.96851, 1.03", "-44.8704, -69.8779, -8.19666, 0.59", "-45.4294, -69.9926, -8.46828, 0.44", "-46.1964, -70.01, -8.88056, 0.74", "-47.5366, -69.8089, -9.66516, 0.44", "-47.8766, -69.7074, -9.85933, 0.44", "-48.259, -69.5609, -10.0647, 0.44", "-48.6905, -69.3743, -10.2683, 0.74", "-48.9722, -69.256, -10.3688, 0.96", "-49.0177, -69.2419, -10.3763, 0.96", "-49.4725, -69.1607, -10.3712, 0.88", "-50.4424, -69.0289, -10.3606, 0.44", "-50.7384, -68.9862, -10.3554, 0.44", "-50.7868, -68.9758, -10.36, 0.44", "-51.1436, -68.8699, -10.4113, 0.44", "-51.6788, -68.6668, -10.5111, 0.44", "-52.0307, -68.498, -10.5797, 0.81", "-52.3559, -68.3068, -10.654, 1.33", "-53.4314, -67.6378, -10.9284, 1.33", "-53.8764, -67.3681, -11.036, 1.25", "-54.3876, -67.0718, -11.1526, 0.96", "-54.9385, -66.7814, -11.2819, 0.88", "-55.5688, -66.4707, -11.414, 0.74", "-56.0531, -66.2466, -11.4935, 0.74", "-56.7148, -65.9532, -11.5766, 0.66", "-57.08, -65.7945, -11.6377, 0.52", "-57.6779, -65.5303, -11.7397, 0.29", "-58.0825, -65.3367, -11.8497, 0.37", "-58.1287, -65.3121, -11.8653, 0.37", "-58.8436, -64.835, -12.1848, 0.88", "-59.0821, -64.6365, -12.3427, 1.25", "-59.425, -64.3425, -12.6213, 1.18", "-60.0856, -63.8074, -13.1626, 0.66", "-60.1193, -63.7827, -13.1888, 0.66", "-60.5496, -63.4942, -13.4786, 0.74", "-61.4388, -62.9739, -13.9824, 0.88", "-62.0931, -62.6274, -14.3242, 0.52", "-62.5825, -62.418, -14.5262, 0.88", "-63.1066, -62.2683, -14.6639, 1.03", "-63.6681, -62.1557, -14.7759, 1.33", "-64.1681, -62.0969, -14.8342, 0.88", "-64.2176, -62.0921, -14.8373, 0.88", "-64.8608, -62.0255, -14.8977, 0.59", "-65.7011, -61.9292, -15.0436, 0.52", "-65.7972, -61.9158, -15.0661, 0.52", "-66.0959, -61.8556, -15.1466, 0.81", "-67.1021, -61.5462, -15.5095, 0.29", "-67.1443, -61.532, -15.528, 0.29", "-67.5287, -61.3925, -15.7661, 0.29", "-67.6839, -61.3373, -15.8767, 0.88", "-67.8693, -61.2889, -16.0289, 1.18", "-68.7596, -61.1267, -16.8107, 0.37", "-69.305, -61.0756, -17.2881, 0.74", "-70.0537, -61.069, -17.9527, 1.03", "-70.0902, -61.0716, -17.9844, 1.03", "-70.88, -61.1764, -18.6324, 0.44", "-71.0866, -61.2109, -18.7858, 1.18", "-71.4422, -61.2757, -18.997, 1.47", "-72.4071, -61.3852, -19.6523, 0.81", "-72.8183, -61.4162, -19.9406, 0.52", "-73.4044, -61.4481, -20.359, 0.37", "-73.7522, -61.4619, -20.6046, 0.37", "-74.1992, -61.4811, -20.925, 1.18", "-76.5076, -61.6005, -22.6275, 0.81", "-76.5865, -61.6054, -22.6854, 0.81", "-77.0272, -61.6435, -23.0118, 0.81", "-77.3319, -61.6741, -23.2198, 0.88", "-77.6484, -61.7183, -23.4281, 0.81", "-78.3507, -61.8632, -23.8238, 0.29", "-78.5023, -61.903, -23.873, 0.29", "-78.7723, -61.9856, -23.9926, 0.29", "-79.2762, -62.171, -24.2571, 1.18", "-80.3498, -62.679, -24.8579, 0.59", "-80.6807, -62.8823, -25.0387, 1.33", "-80.7207, -62.9125, -25.0592, 1.33", "-81.4735, -63.5485, -25.4161, 0.74", "-81.8437, -63.8958, -25.5822, 0.66", "-82.2747, -64.3158, -25.7868, 0.37", "-82.7056, -64.7402, -25.9674, 0.88", "-83.1575, -65.1767, -26.1658, 1.03", "-83.5386, -65.538, -26.3482, 0.88", "-83.5702, -65.569, -26.3645, 0.88", "-84.3606, -66.3956, -26.8633, 0.74", "-84.7653, -66.8015, -27.1947, 0.44", "-84.9948, -67.0152, -27.403, 1.47", "-85.4923, -67.4277, -27.8723, 1.03", "-85.7966, -67.6363, -28.146, 0.74", "-86.0732, -67.7798, -28.3535, 0.74", "-87.1402, -68.147, -29.0086, 0.52", "-87.6677, -68.2601, -29.32, 0.66", "-88.1635, -68.3484, -29.6243, 0.37", "-88.5486, -68.4187, -29.9153, 0.29", "-88.9121, -68.487, -30.2222, 0.29", "-89.3437, -68.5745, -30.6172, 0.74", "-89.9485, -68.7226, -31.2101, 0.96", "-90.7617, -68.9225, -32.0575, 0.96", "-91.9493, -69.178, -33.3457, 0.88", "-91.9773, -69.1824, -33.3753, 0.88", "-92.488, -69.2289, -33.8933, 0.88", "-92.7254, -69.2335, -34.1129, 1.03", "-93.1119, -69.228, -34.4231, 1.03", "-93.729, -69.234, -34.8426, 0.74", "-94.4154, -69.2981, -35.2717, 0.37", "-94.4553, -69.3061, -35.3002, 0.37", "-95.2208, -69.5245, -35.899, 0.37", "-95.909, -69.7676, -36.4909, 0.37", "-96.5389, -70.0235, -37.0493, 0.88", "-97.1384, -70.273, -37.5572, 1.18", "-98.0547, -70.6064, -38.3826, 0.59", "-98.091, -70.6158, -38.4151, 0.59", "-98.9156, -70.709, -39.1184, 0.44", "-99.1711, -70.6961, -39.3564, 0.37", "-99.632, -70.6141, -39.8161, 0.37", "-100.684, -70.3338, -40.8641, 1.03", "-101.216, -70.1627, -41.376, 1.03", "-101.665, -70.0268, -41.7849, 1.25", "-102.783, -69.7514, -42.8164, 1.18", "-102.818, -69.7477, -42.8501, 1.18", "-103.331, -69.7677, -43.3359, 0.59", "-103.638, -69.8227, -43.6019, 0.74", "-103.975, -69.9184, -43.8873, 0.74", "-105.094, -70.3095, -44.8447, 0.88", "-106.196, -70.6965, -45.9808, 0.52", "-106.496, -70.8042, -46.3272, 1.18", "-107.025, -70.9973, -47.0123, 1.55", "-107.295, -71.0956, -47.3816, 1.25", "-108.261, -71.4586, -48.7133, 0.74", "-110.079, -72.1789, -51.2172, 0.74", "-110.299, -72.268, -51.5303, 1.4", "-111.368, -72.6879, -53.1017, 0.74", "-111.425, -72.7085, -53.1862, 0.74", "-111.783, -72.8168, -53.6991, 0.59", "-111.814, -72.8245, -53.7373, 0.59", "-112.957, -73.0496, -54.7875, 0.59", "-113.021, -73.0609, -54.8381, 0.59", "-113.639, -73.1495, -55.2811, 0.66", "-114.004, -73.1961, -55.5451, 0.88", "-115.309, -73.3285, -56.4873, 0.44", "-115.478, -73.3484, -56.5956, 1.03", "-116.368, -73.4901, -57.0011, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-45.0854, -179.659, -77.0764, 0.29", "-45.7774, -180.031, -76.9255, 0.29", "-46.2027, -180.246, -76.8232, 0.29", "-46.842, -180.539, -76.7131, 0.22", "-47.1237, -180.68, -76.6707, 0.81", "-47.3985, -180.826, -76.6309, 0.81", "-47.6389, -180.955, -76.6135, 0.81", "-48.0578, -181.183, -76.6149, 0.52", "-48.8959, -181.655, -76.6756, 0.22", "-49.4579, -181.991, -76.7372, 0.22", "-49.7217, -182.158, -76.7747, 0.81", "-50.4732, -182.658, -76.8939, 0.96", "-50.6628, -182.786, -76.9392, 1.11", "-51.3235, -183.242, -77.1759, 0.22", "-51.6527, -183.472, -77.3073, 0.22", "-51.8394, -183.599, -77.3854, 0.74", "-52.0485, -183.747, -77.478, 0.96", "-52.8159, -184.306, -77.851, 0.59", "-53.5466, -184.834, -78.2367, 0.29", "-54.0814, -185.195, -78.5594, 0.22", "-54.2257, -185.286, -78.649, 0.37", "-54.9031, -185.69, -79.0658, 0.22", "-55.4661, -186.018, -79.4134, 0.81", "-55.7083, -186.16, -79.5583, 1.03", "-56.5875, -186.671, -80.1542, 0.37", "-56.9008, -186.85, -80.3824, 0.52", "-57.6374, -187.274, -80.9231, 0.29", "-57.9259, -187.442, -81.1229, 0.66", "-58.161, -187.586, -81.2789, 0.81", "-59.2066, -188.251, -82.033, 0.29", "-59.4671, -188.433, -82.2303, 0.44", "-59.5017, -188.458, -82.2601, 0.44", "-59.8194, -188.699, -82.5401, 0.59", "-60.2261, -189.034, -82.9515, 1.03", "-60.9129, -189.675, -83.7968, 1.03", "-61.4315, -190.231, -84.5686, 0.29", "-61.8756, -190.738, -85.3067, 0.88", "-62.0338, -190.921, -85.5746, 1.25", "-63.0812, -192.105, -87.3131, 0.29", "-63.7388, -192.844, -88.3894, 0.37", "-64.2191, -193.391, -89.1438, 0.81", "-64.6731, -193.893, -89.8273, 0.44", "-64.9652, -194.206, -90.2269, 0.37", "-65.394, -194.654, -90.7537, 0.37", "-65.9764, -195.25, -91.3082, 0.37", "-66.441, -195.715, -91.6625, 0.37", "-66.8112, -196.101, -91.9249, 1.11", "-67.0499, -196.355, -92.0885, 1.25", "-67.6432, -196.948, -92.4857, 0.81", "-68.1986, -197.474, -92.8149, 0.52", "-68.4633, -197.708, -92.9222, 0.52", "-68.5014, -197.74, -92.9378, 0.52", "-68.9772, -198.129, -93.121, 0.52", "-69.826, -198.785, -93.4552, 0.44", "-70.2259, -199.089, -93.6036, 0.44", "-70.9226, -199.604, -93.9168, 0.74", "-71.8233, -200.277, -94.3723, 0.74", "-71.8544, -200.301, -94.3891, 0.74", "-72.5979, -200.913, -94.8293, 0.37", "-72.8812, -201.147, -95.0037, 0.81", "-73.854, -201.87, -95.6094, 0.29", "-74.1952, -202.094, -95.8146, 0.29", "-74.516, -202.314, -95.9751, 0.88", "-74.6459, -202.407, -96.0407, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-45.0854, -179.659, -77.0764, 0.59", "-44.9144, -182.358, -78.6131, 0.59", "-44.8166, -183.486, -79.1982, 0.59", "-44.7784, -183.8, -79.3568, 0.81", "-44.6565, -184.523, -79.721, 0.81", "-44.4444, -185.56, -80.2503, 0.15", "-44.211, -186.503, -80.7417, 0.15", "-44.1801, -186.569, -80.7687, 0.15", "-43.9869, -186.954, -80.9432, 0.59", "-43.6964, -187.519, -81.2132, 0.88", "-43.624, -187.665, -81.2825, 0.88", "-43.4068, -188.187, -81.4996, 0.88", "-43.0067, -189.319, -81.8701, 0.52", "-42.739, -190.274, -82.1004, 0.44", "-42.6205, -190.825, -82.1935, 0.74", "-42.5016, -191.534, -82.2733, 0.44", "-42.3427, -192.532, -82.3038, 0.29", "-42.2559, -193.229, -82.2648, 0.88", "-42.1601, -193.875, -82.2084, 0.96", "-41.9591, -194.864, -82.1328, 0.81", "-41.6664, -195.983, -82.0983, 0.29", "-41.3046, -197.126, -82.1567, 0.44", "-40.9956, -197.916, -82.2555, 0.22", "-40.4308, -199.138, -82.5244, 0.22", "-40.0196, -199.848, -82.7644, 0.59", "-39.4441, -200.615, -83.0878, 0.81", "-38.8758, -201.258, -83.411, 0.81", "-38.4274, -201.742, -83.6749, 0.88", "-37.6162, -202.674, -84.1062, 0.37", "-36.9413, -203.68, -84.4014, 0.59", "-36.415, -204.722, -84.6022, 0.96", "-36.1168, -205.491, -84.6972, 0.59", "-35.8545, -206.45, -84.7626, 0.29", "-35.6859, -207.819, -84.8744, 0.29", "-35.6726, -209.34, -85.0093, 0.74", "-35.727, -210.231, -85.1156, 0.96", "-35.7358, -210.363, -85.1355, 0.96", "-35.762, -211.074, -85.25, 0.96", "-35.7743, -212.375, -85.4665, 0.44", "-35.7527, -213.268, -85.614, 0.29", "-35.7063, -214.489, -85.7014, 0.59", "-35.6751, -215.511, -85.6549, 1.03", "-35.6713, -215.83, -85.614, 1.11", "-35.6607, -216.46, -85.493, 0.96", "-35.6404, -217.22, -85.3109, 0.96", "-35.6245, -218.362, -85.0116, 0.37", "-35.628, -219.486, -84.7197, 0.22", "-35.631, -220.203, -84.5653, 0.44", "-35.6035, -221.414, -84.3414, 0.44", "-35.534, -222.253, -84.2378, 0.66", "-35.4019, -223.088, -84.2103, 0.88", "-35.2388, -223.957, -84.2488, 0.29", "-34.9796, -224.921, -84.2354, 0.29", "-34.944, -225.026, -84.2298, 0.29", "-34.6152, -225.943, -84.1396, 0.29", "-34.2028, -227.116, -84.0009, 0.29", "-33.7478, -228.448, -83.8315, 0.29", "-33.1731, -230.148, -83.4926, 0.59", "-33.0485, -230.586, -83.3705, 0.74", "-32.7805, -231.743, -83.0062, 0.29", "-32.6195, -232.657, -82.7038, 0.29", "-32.6033, -232.743, -82.6812, 0.29", "-32.3747, -233.779, -82.5841, 0.81", "-32.2443, -234.408, -82.635, 1.25", "-32.11, -235.088, -82.7563, 0.88", "-31.8615, -236.202, -83.0731, 0.52", "-31.4911, -237.541, -83.5174, 0.29", "-31.2902, -238.205, -83.76, 0.66", "-30.9877, -239.06, -84.1329, 0.74", "-30.3634, -240.435, -84.8136, 0.22", "-29.9436, -241.219, -85.2327, 0.22", "-29.4304, -241.986, -85.6422, 0.88", "-29.374, -242.061, -85.6758, 0.88", "-28.8148, -242.744, -85.9288, 0.81", "-28.1958, -243.474, -86.1791, 0.74", "-28.1414, -243.544, -86.1979, 0.74", "-27.5325, -244.614, -86.4128, 0.29", "-27.0732, -245.7, -86.597, 0.74", "-26.9532, -246.086, -86.638, 0.81", "-26.7632, -247.224, -86.7007, 0.22", "-26.7397, -247.808, -86.7085, 0.66", "-26.7624, -248.409, -86.7151, 0.74", "-26.7731, -248.487, -86.7161, 0.74", "-26.9509, -249.385, -86.7133, 0.74", "-27.2193, -250.44, -86.6782, 0.22", "-27.5572, -251.304, -86.6787, 0.22", "-27.5889, -251.372, -86.6827, 0.22", "-27.8197, -251.856, -86.7594, 0.66", "-27.8559, -251.946, -86.7855, 0.66", "-28.0136, -252.419, -86.9883, 0.66", "-28.3706, -253.721, -87.5751, 0.52", "-28.3967, -253.786, -87.6124, 0.52", "-28.7789, -254.662, -88.1027, 0.22", "-29.1037, -255.384, -88.477, 1.03", "-29.3071, -255.825, -88.7143, 1.11", "-29.6629, -256.636, -89.1381, 0.88", "-30.7202, -259.251, -90.3767, 0.22", "-30.9626, -259.881, -90.6653, 0.88", "-31.2304, -260.562, -90.9713, 0.59", "-31.5974, -261.573, -91.4192, 0.52", "-31.8571, -262.479, -91.8142, 0.81", "-32.0246, -263.126, -92.1754, 0.81", "-32.4187, -264.462, -93.1358, 0.29", "-32.4378, -264.517, -93.1841, 0.29", "-32.6288, -264.974, -93.6813, 0.96", "-32.843, -265.41, -94.2408, 1.25", "-33.8776, -267.316, -97.0427, 0.52", "-34.5762, -268.535, -99.012, 0.44", "-34.7539, -268.86, -99.5768, 0.66", "-35.2257, -269.805, -101.269, 0.52", "-35.6524, -270.799, -103.12, 0.29", "-35.7258, -271.034, -103.56, 0.59", "-35.7321, -271.134, -103.731, 0.59", "-35.6175, -272.087, -105.311, 0.22", "-35.6088, -272.142, -105.4, 0.22", "-35.4515, -272.534, -105.952, 0.59", "-35.3746, -272.652, -106.105, 0.59", "-35.272, -272.811, -106.316, 0.59", "-35.237, -272.862, -106.383, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-4.61313, 108.069, -7.44268, 0.29", "-5.49571, 108.69, -8.50183, 0.29", "-6.14253, 109.112, -9.16535, 0.29", "-7.06635, 109.691, -10.0331, 0.66", "-7.86014, 110.194, -10.8114, 0.29", "-8.25604, 110.448, -11.2052, 0.37", "-9.07479, 110.979, -12.0173, 0.37", "-9.94412, 111.563, -12.8177, 0.59", "-10.3792, 111.86, -13.2208, 0.81", "-11.1274, 112.37, -13.8922, 0.37", "-11.3719, 112.554, -14.0922, 0.88", "-11.7191, 112.853, -14.3912, 1.03", "-12.1507, 113.282, -14.7761, 0.81", "-12.4927, 113.661, -15.0738, 0.37", "-12.5354, 113.716, -15.1069, 0.37", "-12.9675, 114.392, -15.3942, 0.37", "-13.0107, 114.475, -15.4255, 0.37", "-13.3544, 115.16, -15.5683, 0.37", "-13.3839, 115.222, -15.5723, 0.37", "-13.8518, 116.159, -15.548, 0.22", "-14.1194, 116.679, -15.5137, 0.74", "-14.1504, 116.74, -15.5075, 0.74", "-14.8609, 118.176, -15.3673, 0.29", "-15.002, 118.467, -15.3292, 0.66", "-15.1994, 118.865, -15.2754, 0.66", "-15.5615, 119.568, -15.1818, 0.37", "-15.8034, 120.072, -15.1291, 0.29", "-16.0149, 120.581, -15.1105, 0.29", "-16.2612, 121.332, -15.1433, 0.96", "-16.2822, 121.394, -15.146, 0.96", "-16.4018, 121.805, -15.1592, 0.66", "-16.5677, 122.433, -15.176, 0.29", "-16.7339, 123.053, -15.2144, 0.29", "-16.7505, 123.116, -15.2229, 0.29", "-16.902, 123.741, -15.3502, 1.11", "-16.9987, 124.341, -15.4647, 1.47", "-17.0139, 124.505, -15.4935, 1.47", "-17.0589, 125.343, -15.636, 0.66", "-17.0824, 125.997, -15.7399, 0.37", "-17.1106, 126.82, -15.8667, 0.37", "-17.1082, 128.095, -16.1359, 0.29", "-17.0906, 129.437, -16.4821, 0.29", "-17.0874, 129.575, -16.5186, 0.29", "-17.0415, 130.436, -16.751, 0.96", "-17.0113, 130.9, -16.8827, 1.18", "-16.8988, 132.405, -17.4102, 0.37", "-16.8752, 132.894, -17.6559, 0.37", "-21.3389, 140.42, -21.5189, 0.37", "-23.6576, 148.626, -25.7042, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-4.61313, 108.069, -7.44268, 1.03", "-4.72808, 108.476, -7.39116, 1.03", "-5.01599, 109.447, -7.31523, 1.4", "-5.34271, 110.665, -7.26272, 1.4", "-5.36104, 110.741, -7.26074, 1.4", "-5.59203, 111.846, -7.24997, 1.25", "-5.8012, 113.016, -7.22197, 0.81", "-5.81382, 113.092, -7.21591, 0.81", "-5.94105, 113.965, -7.12473, 0.96", "-5.97418, 114.273, -7.09415, 0.96", "-6.06156, 115.142, -6.99345, 1.18", "-6.14627, 116.139, -6.8445, 0.96", "-6.25746, 117.543, -6.6979, 1.18", "-6.26771, 117.658, -6.69177, 1.18", "-6.3445, 118.591, -6.7094, 1.18", "-6.38704, 119.644, -6.83287, 0.96", "-6.3868, 119.738, -6.85345, 0.96", "-6.3202, 120.998, -7.21549, 1.47", "-6.31261, 121.071, -7.23978, 1.47", "-6.14954, 122.232, -7.57022, 1.18", "-5.91167, 123.433, -7.86218, 0.81", "-5.87771, 123.568, -7.88295, 0.81", "-5.70776, 124.418, -7.87329, 0.74", "-5.70052, 124.487, -7.85934, 0.74", "-5.72117, 125.077, -7.70461, 0.74", "-5.73744, 125.15, -7.68374, 0.74", "-5.95595, 125.76, -7.55085, 0.81", "-6.53968, 127.085, -7.37773, 1.18", "-6.80488, 127.612, -7.34421, 1.4", "-7.29646, 128.56, -7.32321, 0.96", "-7.77715, 129.472, -7.33393, 0.96", "-8.19214, 130.282, -7.37467, 0.96", "-8.67372, 131.289, -7.49102, 0.96", "-8.70548, 131.36, -7.49702, 0.96", "-8.94213, 131.892, -7.48974, 0.96", "-9.11155, 132.29, -7.45438, 1.18", "-9.1889, 132.481, -7.42379, 1.18", "-9.50336, 133.272, -7.28577, 1.18", "-10.1106, 134.868, -7.04049, 0.96", "-10.6129, 136.176, -6.84065, 0.66", "-10.8586, 136.803, -6.746, 0.66", "-11.1838, 137.637, -6.64646, 0.88", "-11.4985, 138.485, -6.56741, 0.88", "-11.7793, 139.288, -6.51596, 1.03", "-12.0458, 140.155, -6.51501, 1.03", "-12.0657, 140.221, -6.51381, 1.03", "-12.2861, 140.962, -6.51786, 1.11", "-12.5091, 141.744, -6.55388, 1.11", "-12.5412, 141.855, -6.56166, 1.11", "-12.8682, 142.997, -6.682, 0.96", "-13.1092, 143.794, -6.75119, 0.96", "-13.4322, 144.879, -6.81049, 1.4", "-13.6542, 145.642, -6.83219, 1.03", "-13.9035, 146.593, -6.84946, 1.25", "-14.147, 147.765, -6.84822, 0.88", "-14.2936, 148.865, -6.81625, 0.88", "-14.3648, 149.821, -6.75305, 0.88", "-14.364, 150.042, -6.73033, 0.88", "-14.3186, 150.839, -6.64779, 0.88", "-14.2429, 151.926, -6.57681, 0.81", "-14.1687, 152.927, -6.56274, 0.81", "-14.1667, 152.995, -6.56773, 0.81", "-14.2147, 153.657, -6.60621, 0.96", "-14.4106, 154.793, -6.67621, 0.96", "-14.7135, 156.009, -6.75627, 1.03", "-14.731, 156.067, -6.76013, 1.03", "-15.2237, 157.544, -6.86743, 1.03", "-15.6291, 158.768, -6.96043, 1.03", "-16.0078, 159.989, -7.04801, 1.03", "-16.1268, 160.449, -7.07263, 1.03", "-16.2326, 161.027, -7.09518, 1.03", "-16.3502, 161.957, -7.13343, 0.88", "-16.3984, 163.092, -7.18918, 0.88", "-16.3677, 164.066, -7.26884, 1.11", "-16.3249, 164.465, -7.30798, 1.11", "-16.1823, 165.529, -7.44939, 1.11", "-16.1579, 165.672, -7.47206, 1.11", "-16.0095, 166.41, -7.60731, 0.96", "-15.9985, 166.465, -7.61994, 0.96", "-15.8085, 167.632, -7.92298, 0.88", "-15.6991, 168.515, -8.16878, 0.66", "-15.6869, 168.65, -8.20574, 0.66", "-15.6173, 169.476, -8.40508, 0.66", "-15.611, 169.552, -8.41977, 0.66", "-15.5185, 170.434, -8.52154, 0.96", "-15.5011, 170.571, -8.52467, 0.96", "-15.3314, 171.45, -8.52075, 0.96", "-15.2951, 171.612, -8.51816, 0.96", "-15.1887, 172.08, -8.5084, 0.96", "-15.0189, 172.976, -8.44658, 0.96", "-14.9126, 173.627, -8.37831, 1.18", "-14.8197, 174.394, -8.29329, 0.74", "-14.7662, 175.303, -8.20599, 0.74", "-14.7745, 175.997, -8.16068, 1.18", "-14.9022, 177.071, -8.15067, 0.66", "-15.0877, 177.87, -8.196, 0.66", "-15.3877, 178.822, -8.30502, 0.66", "-15.7461, 179.751, -8.45662, 1.18", "-16.0236, 180.415, -8.61035, 1.18", "-16.5722, 181.705, -8.99109, 0.96", "-16.9473, 182.584, -9.26418, 0.96", "-17.2186, 183.226, -9.44019, 0.66", "-17.2395, 183.279, -9.45233, 0.66", "-17.6162, 184.33, -9.64353, 0.59", "-17.8351, 185.005, -9.73734, 1.03", "-18.2527, 186.255, -9.80046, 0.81", "-18.4949, 186.924, -9.79832, 1.03", "-18.5471, 187.055, -9.79567, 1.03", "-18.8962, 187.875, -9.78299, 1.03", "-19.0257, 188.15, -9.77986, 1.03", "-19.5577, 189.255, -9.8095, 0.96", "-19.9953, 190.248, -9.88581, 0.96", "-20.2811, 191.009, -9.9426, 0.96", "-20.5215, 191.78, -9.99854, 1.11", "-20.6494, 192.343, -10.0385, 1.33", "-20.6612, 192.42, -10.045, 1.33", "-20.7053, 193.454, -10.16, 0.88", "-20.684, 194.252, -10.22, 1.11", "-20.6704, 194.399, -10.219, 1.11", "-20.5641, 195.044, -10.1588, 1.11", "-20.5485, 195.109, -10.1477, 1.11", "-20.383, 195.777, -9.93742, 0.88", "-20.3671, 195.839, -9.91175, 0.81", "-20.1986, 196.522, -9.62399, 1.03", "-20.0883, 197.022, -9.41141, 1.03", "-19.9385, 197.85, -9.07957, 0.81", "-19.7759, 199.099, -8.63704, 0.74", "-19.7066, 200.005, -8.36753, 0.74", "-19.6881, 200.922, -8.12136, 0.88", "-19.6983, 201.434, -8.00317, 0.88", "-19.7596, 202.195, -7.84686, 0.88", "-19.817, 202.695, -7.76331, 0.88", "-19.8703, 203.381, -7.6787, 0.88", "-19.8943, 204.362, -7.54417, 0.88", "-19.8775, 204.867, -7.4471, 0.88", "-19.8662, 205.012, -7.41767, 0.88", "-19.7615, 205.901, -7.22107, 0.88", "-19.6367, 206.832, -7.02888, 0.88", "-19.4821, 207.85, -6.83735, 0.44", "-19.37, 208.78, -6.67561, 0.81", "-19.3334, 209.48, -6.56155, 1.25", "-19.3321, 210.359, -6.42661, 0.96", "-19.4077, 211.497, -6.27873, 1.33", "-19.4512, 211.847, -6.24262, 1.47", "-19.6863, 213.313, -6.1492, 1.11", "-19.8459, 214.192, -6.13843, 0.96", "-19.8589, 214.259, -6.13876, 0.96", "-19.9872, 215.033, -6.16424, 0.96", "-19.9944, 215.093, -6.16799, 0.96", "-20.0487, 216.078, -6.23924, 0.96", "-20.0437, 216.215, -6.25386, 0.96", "-19.9321, 217.494, -6.39015, 0.96", "-19.7246, 218.948, -6.59332, 0.96", "-19.4817, 220.251, -6.80414, 0.96", "-19.3285, 221.037, -6.91496, 0.96", "-19.1779, 221.739, -7.00318, 0.96", "-18.9642, 222.694, -7.10537, 1.11", "-18.6315, 224.119, -7.22867, 1.11", "-18.6198, 224.179, -7.2288, 1.11", "-18.4547, 225.472, -7.06786, 1.11", "-18.4515, 225.539, -7.0531, 1.11", "-18.4623, 226.385, -6.79191, 1.11", "-18.493, 227.083, -6.54179, 1.18", "-18.5891, 228.275, -6.07732, 0.88", "-18.6412, 229.11, -5.78355, 0.66", "-18.6447, 229.177, -5.76482, 0.66", "-18.7188, 229.809, -5.63834, 0.81", "-18.847, 230.615, -5.53987, 0.81", "-18.8579, 230.684, -5.5367, 0.81", "-18.9583, 231.432, -5.56593, 0.66", "-19.0432, 232.218, -5.62221, 1.18", "-19.162, 233.462, -5.72009, 1.03", "-19.2259, 234.249, -5.78833, 0.88", "-19.2728, 235.246, -5.89875, 0.74", "-19.2862, 236.381, -6.04442, 1.25", "-19.275, 236.984, -6.13751, 1.03", "-19.2663, 237.127, -6.15991, 1.03", "-19.1605, 238.118, -6.338, 1.03", "-19.1084, 238.923, -6.43411, 1.03", "-19.1048, 238.993, -6.43353, 1.03", "-19.0637, 240.038, -6.29234, 1.25", "-19.061, 240.104, -6.27387, 1.25", "-19.0046, 241.195, -5.8707, 1.4", "-18.9089, 242.883, -5.09986, 0.74", "-18.8553, 243.915, -4.59267, 0.59", "-18.8497, 244.005, -4.54791, 0.59", "-18.7372, 245.213, -3.93892, 0.59", "-18.6613, 245.891, -3.63873, 0.81", "-18.6532, 245.956, -3.61601, 0.81", "-18.5369, 246.732, -3.48809, 0.81", "-18.5135, 246.938, -3.47593, 0.81", "-18.4309, 247.792, -3.47306, 1.03", "-18.353, 248.642, -3.51701, 1.25", "-18.2958, 249.295, -3.50717, 1.25", "-18.2903, 249.353, -3.50331, 1.25", "-18.236, 250.196, -3.36618, 0.96", "-18.1838, 251.425, -3.0912, 0.74", "-18.1962, 251.981, -2.91644, 0.74", "-18.2745, 253.226, -2.45188, 0.88", "-18.3364, 253.846, -2.2099, 0.74", "-18.4954, 255.146, -1.70672, 0.74", "-18.5963, 255.797, -1.46231, 0.74", "-18.8373, 257.086, -1.02109, 0.96", "-18.9895, 257.849, -0.806179, 1.03", "-19.1473, 258.608, -0.663768, 1.03", "-19.2881, 259.36, -0.567888, 1.18", "-19.3855, 260.177, -0.533958, 0.59", "-19.4173, 260.66, -0.531538, 0.37", "-19.4127, 261.047, -0.55007, 0.81", "-19.39, 261.45, -0.574826, 0.81", "-19.3366, 262.203, -0.638054, 0.81", "-19.3084, 262.9, -0.725769, 0.81", "-19.3252, 263.479, -0.831542, 0.88", "-19.3892, 263.939, -0.946178, 0.81", "-19.5746, 264.678, -1.17633, 0.74", "-19.8229, 265.4, -1.43585, 0.74", "-20.1477, 266.134, -1.73426, 0.96", "-20.5125, 266.864, -2.04133, 0.44", "-20.8795, 267.557, -2.33003, 0.44", "-21.2314, 268.218, -2.58771, 0.96", "-21.2673, 268.285, -2.6114, 0.96", "-21.5033, 268.784, -2.76973, 0.96", "-21.7642, 269.424, -2.94995, 0.96", "-21.8324, 269.615, -2.98804, 0.96", "-22.0682, 270.204, -3.0902, 0.81", "-22.1574, 270.401, -3.10498, 0.81", "-22.5916, 271.268, -3.1267, 0.81", "-22.6227, 271.328, -3.12572, 0.81", "-23.0378, 272.127, -3.0876, 0.96", "-23.4863, 273.046, -3.02894, 0.81", "-24.0362, 274.246, -2.92632, 0.81", "-24.0615, 274.31, -2.92035, 0.81", "-24.3117, 275.141, -2.84106, 0.81", "-24.3244, 275.208, -2.83715, 0.81", "-24.3319, 276.0, -2.8908, 0.59", "-24.3244, 276.102, -2.90108, 0.59", "-24.2548, 276.656, -3.00984, 0.59", "-24.1434, 277.443, -3.1765, 0.59", "-23.9851, 278.364, -3.40088, 0.81", "-23.7224, 279.691, -3.75205, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "21.7395, 73.224, -51.6777, 0.52", "23.1153, 73.834, -52.7085, 0.52", "23.1495, 73.8529, -52.7351, 0.52", "23.8079, 74.3316, -53.258, 0.44", "23.8466, 74.3675, -53.2905, 0.44", "24.1962, 74.6821, -53.5855, 0.88", "24.5535, 74.9671, -53.8594, 1.11", "24.589, 74.9983, -53.885, 1.11", "25.0652, 75.3488, -54.1845, 1.03", "25.8141, 75.8076, -54.596, 0.37", "26.8039, 76.2606, -55.1134, 0.44", "27.3577, 76.4508, -55.3842, 0.44", "27.4465, 76.4787, -55.4274, 0.44", "27.9188, 76.6477, -55.7026, 0.44", "27.9723, 76.6745, -55.745, 0.44", "28.602, 77.1303, -56.3951, 0.96", "28.7683, 77.3203, -56.6169, 1.33", "29.0926, 77.7789, -57.096, 1.18", "29.5349, 78.4837, -57.7751, 0.81", "29.9589, 79.2622, -58.4361, 0.37", "29.9826, 79.3072, -58.4705, 0.37", "30.2051, 79.7671, -58.7599, 0.66", "30.3708, 80.0663, -58.9381, 0.88", "30.4285, 80.165, -58.9864, 0.88", "30.7062, 80.6171, -59.1879, 0.88", "31.0542, 81.1821, -59.4478, 0.74", "31.3338, 81.68, -59.6912, 0.59", "31.6902, 82.3853, -60.0501, 1.03", "31.9191, 82.9384, -60.3317, 0.29", "32.143, 83.5912, -60.6406, 0.81", "32.2336, 83.934, -60.7876, 0.88", "32.3085, 84.3415, -60.9327, 0.96", "32.3723, 84.7488, -61.0765, 0.66", "32.4688, 85.4781, -61.303, 0.22", "32.5711, 86.1554, -61.5023, 1.62", "32.6499, 86.6235, -61.6216, 1.99", "32.7227, 87.0415, -61.7171, 1.77", "32.8599, 87.9159, -61.891, 1.25", "32.9437, 88.5691, -61.9913, 0.81", "32.9962, 89.0729, -62.0439, 0.66", "33.0354, 89.613, -62.0821, 0.81", "33.0732, 90.2559, -62.0998, 0.29", "33.1023, 91.022, -62.0838, 0.29", "33.105, 91.4227, -62.0421, 0.44", "33.106, 91.4753, -62.0359, 0.44", "33.1232, 92.0787, -61.9733, 0.59", "33.145, 92.4837, -61.942, 1.11", "33.1786, 92.9313, -61.9242, 1.11", "33.2282, 93.5038, -61.9119, 0.88", "33.3015, 94.331, -61.9094, 0.52", "33.3848, 95.256, -61.9128, 0.52", "33.4666, 96.1069, -61.9206, 0.66", "33.5438, 96.8099, -61.9327, 0.29", "33.6358, 97.4847, -61.952, 0.81", "33.6456, 97.5382, -61.9545, 0.81", "33.7373, 97.8856, -61.9762, 1.03", "33.7826, 98.0046, -61.9866, 1.03", "33.9615, 98.403, -62.0371, 1.03", "34.1769, 98.8411, -62.1041, 0.96", "34.3539, 99.2303, -62.177, 0.66", "34.538, 99.7474, -62.2859, 0.52", "34.6141, 100.113, -62.3728, 0.44", "34.6847, 100.809, -62.5494, 0.44", "34.6797, 100.92, -62.5785, 0.44", "34.6048, 101.341, -62.684, 0.37", "34.451, 101.87, -62.8034, 0.37", "34.2104, 102.551, -62.9254, 1.03", "34.1939, 102.601, -62.9332, 1.03", "34.0751, 103.033, -62.991, 1.18", "33.9856, 103.465, -63.0404, 0.59", "33.9229, 103.966, -63.0862, 0.37", "33.9027, 104.513, -63.1263, 0.29", "33.9214, 105.243, -63.1449, 0.22", "33.9346, 105.59, -63.1455, 0.44", "33.9414, 105.706, -63.1439, 0.44", "33.9578, 106.191, -63.0851, 0.44", "33.9579, 106.242, -63.0713, 0.44", "33.9421, 106.962, -62.8108, 0.74", "33.9157, 107.531, -62.5769, 1.33", "33.8802, 108.236, -62.2684, 1.4", "33.8269, 109.335, -61.7806, 0.52", "33.7922, 110.047, -61.4726, 0.59", "33.7675, 110.576, -61.2635, 0.74", "33.7571, 110.938, -61.141, 0.74", "33.7562, 110.998, -61.1254, 0.74", "33.7538, 111.429, -61.0603, 0.44", "33.7602, 112.032, -61.0647, 0.52", "33.7745, 112.428, -61.0869, 0.66", "33.7911, 112.786, -61.0924, 0.44", "33.8175, 113.282, -61.0859, 0.22", "33.8481, 113.975, -61.0655, 0.66", "33.8572, 114.319, -61.0618, 0.88", "33.862, 114.803, -61.0644, 0.29", "33.8549, 115.387, -61.0748, 0.22", "33.8432, 115.778, -61.088, 0.37", "33.8285, 116.178, -61.1244, 0.52", "33.8095, 116.782, -61.2341, 0.29", "33.8053, 117.098, -61.3003, 0.59", "33.8092, 117.219, -61.3222, 0.59", "33.8492, 117.546, -61.3661, 0.59", "33.8592, 117.597, -61.3694, 0.59", "33.9698, 118.074, -61.3733, 0.59", "34.1376, 118.78, -61.3241, 0.44", "34.2678, 119.361, -61.2702, 0.59", "34.3677, 119.844, -61.2223, 1.03", "34.4534, 120.33, -61.1745, 1.03", "34.5177, 120.82, -61.1328, 0.81", "34.5602, 121.34, -61.0984, 0.59", "34.5748, 121.893, -61.0829, 0.37", "34.5615, 122.679, -61.0959, 0.37", "34.5392, 123.326, -61.1174, 0.37", "34.5175, 123.848, -61.1437, 0.44", "34.4952, 124.396, -61.1818, 0.44", "34.4884, 124.911, -61.2143, 0.29", "34.4939, 125.577, -61.2386, 0.29", "34.5231, 126.089, -61.24, 0.81", "34.5753, 126.58, -61.2077, 1.11", "34.6464, 127.074, -61.1489, 0.81", "34.7626, 127.797, -61.0365, 0.52", "34.7714, 127.849, -61.0271, 0.52", "34.8613, 128.495, -60.904, 0.52", "34.9213, 129.201, -60.7817, 0.29", "34.9405, 129.691, -60.7081, 0.59", "34.9241, 130.185, -60.661, 0.81", "34.912, 130.291, -60.6585, 0.81", "34.8569, 130.756, -60.6608, 0.81", "34.8178, 131.203, -60.6754, 0.66", "34.8151, 131.263, -60.6794, 0.66", "34.8028, 131.816, -60.7118, 0.44", "34.7929, 132.479, -60.7498, 0.37", "34.7892, 133.093, -60.7849, 0.37", "34.7862, 133.759, -60.8242, 0.52", "34.7771, 134.298, -60.8596, 0.37", "34.7554, 134.73, -60.894, 0.37", "34.725, 135.183, -60.9355, 0.81", "34.6857, 135.607, -60.9814, 0.88", "34.6364, 135.976, -61.0254, 0.59", "34.6039, 136.197, -61.0526, 0.44", "34.5364, 136.861, -61.126, 0.37", "34.5054, 137.647, -61.1997, 0.37", "34.5277, 138.033, -61.2403, 0.66", "34.5357, 138.092, -61.247, 0.66", "34.6758, 138.667, -61.3087, 0.74", "34.7605, 138.956, -61.3401, 0.88", "34.9993, 139.607, -61.4141, 0.59", "35.2705, 140.245, -61.4963, 0.29", "35.2966, 140.299, -61.5036, 0.29", "35.7373, 141.141, -61.6223, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "21.7395, 73.224, -51.6777, 0.59", "21.7144, 73.9914, -51.6036, 0.59", "21.6821, 74.5433, -51.5431, 0.29", "21.6494, 75.0034, -51.4962, 0.29", "21.6005, 75.6083, -51.4418, 0.29", "21.4672, 76.9949, -51.3351, 0.29", "21.3725, 77.891, -51.279, 0.74", "21.2942, 78.4741, -51.2639, 0.74", "21.2075, 79.0738, -51.2705, 0.52", "21.1564, 79.4357, -51.2896, 0.44", "21.0956, 79.8834, -51.3263, 0.29", "21.0343, 80.4098, -51.3906, 0.29", "20.9738, 81.1059, -51.4894, 0.66", "20.9401, 81.5601, -51.5399, 0.96", "20.9218, 81.9837, -51.5642, 0.66", "20.919, 82.1404, -51.5664, 0.66", "20.9196, 82.6161, -51.5567, 0.44", "20.9084, 83.1047, -51.5418, 0.29", "20.8844, 83.5865, -51.5266, 0.22", "20.7711, 84.3718, -51.48, 0.29", "20.7563, 84.435, -51.4767, 0.29", "20.5844, 85.0281, -51.4502, 0.37", "20.361, 85.6677, -51.4425, 0.66", "20.1861, 86.1088, -51.4498, 0.96", "19.7919, 87.112, -51.4814, 0.81", "19.5647, 87.7499, -51.5001, 0.59", "19.5455, 87.82, -51.5016, 0.59", "19.4012, 88.5789, -51.5136, 0.59", "19.3527, 89.058, -51.5199, 0.66", "19.337, 90.0793, -51.5276, 0.22", "19.3837, 90.5901, -51.5311, 0.22", "19.4743, 91.2269, -51.5089, 0.74", "19.559, 91.7667, -51.4822, 0.81", "19.5707, 91.8405, -51.478, 0.81", "19.6449, 92.4316, -51.4566, 0.88", "19.6869, 92.9072, -51.4435, 0.81", "19.7295, 93.4831, -51.4378, 0.29", "19.7499, 94.4674, -51.4688, 0.29", "19.7305, 95.8651, -51.5548, 0.74", "19.6969, 96.5385, -51.6182, 1.11", "19.643, 97.1271, -51.6975, 0.88", "19.5117, 98.0889, -51.8538, 0.22", "19.3424, 99.0889, -52.0376, 0.22", "19.3261, 99.1878, -52.0595, 0.22", "19.2972, 99.4371, -52.1321, 0.22", "19.2579, 100.005, -52.3161, 0.74", "19.238, 100.36, -52.4403, 1.11", "19.2192, 101.033, -52.716, 1.25", "19.2166, 101.8, -53.043, 0.74", "19.2251, 102.829, -53.5171, 0.22", "19.2292, 103.447, -53.8111, 0.37", "19.227, 104.269, -54.2074, 0.37", "19.2035, 105.442, -54.759, 0.52", "19.1859, 105.92, -54.9716, 0.88", "19.1216, 106.931, -55.3774, 1.03", "19.0775, 107.572, -55.607, 0.66", "19.03, 108.292, -55.8435, 0.29", "18.9776, 109.099, -56.0765, 0.22", "18.9176, 109.786, -56.2394, 0.22", "18.8574, 110.446, -56.3832, 0.44", "18.8182, 110.887, -56.4638, 0.59", "18.7836, 111.525, -56.5735, 0.37", "18.7704, 112.153, -56.6714, 0.29", "18.7841, 112.898, -56.7704, 0.44", "18.8486, 113.604, -56.86, 0.29", "19.0233, 114.386, -56.9785, 0.66", "19.1496, 114.862, -57.0722, 1.03", "19.2384, 115.162, -57.1411, 1.25", "19.4068, 115.754, -57.3021, 0.44", "19.6298, 116.653, -57.5892, 0.52", "19.8399, 117.699, -57.9739, 0.29", "20.0324, 118.938, -58.4602, 0.29", "20.0445, 119.028, -58.4937, 0.29", "20.1181, 119.592, -58.7009, 0.29", "20.2457, 120.381, -58.9473, 0.81", "20.2589, 120.453, -58.9622, 0.81", "20.3834, 120.924, -59.0271, 0.88", "20.6669, 121.619, -59.1435, 0.88", "20.9234, 122.222, -59.2694, 0.44", "21.2678, 123.023, -59.4641, 0.22", "21.6029, 123.794, -59.7318, 0.22", "22.0053, 124.754, -60.1432, 0.81", "22.2942, 125.518, -60.5282, 0.88", "22.4562, 126.048, -60.8186, 0.96", "22.5686, 126.498, -61.0699, 0.96", "22.7941, 127.602, -61.7306, 0.44", "22.8063, 127.664, -61.7654, 0.44", "22.9079, 128.281, -62.0361, 0.44", "23.0397, 129.152, -62.3568, 0.66", "23.0619, 129.298, -62.4067, 0.66", "23.137, 129.7, -62.5677, 0.88", "23.2731, 130.387, -62.8523, 0.52", "23.4276, 131.0, -63.1332, 0.37", "23.817, 132.378, -63.857, 1.11", "23.9056, 132.702, -64.0494, 1.25", "24.2017, 133.975, -64.8589, 0.22", "24.2115, 134.034, -64.901, 0.22", "24.2475, 134.453, -65.2618, 0.22", "24.2452, 134.952, -65.7377, 0.22", "24.1946, 135.273, -66.0383, 0.74", "24.129, 135.573, -66.3206, 1.03", "23.9967, 136.032, -66.726, 0.81", "23.7891, 136.829, -67.423, 0.52", "23.7417, 137.106, -67.6977, 0.37", "23.7141, 137.641, -68.2612, 0.29", "23.7397, 138.194, -68.8268, 0.59", "23.7889, 138.541, -69.1458, 0.96", "23.8636, 138.891, -69.4303, 1.11", "24.0928, 139.994, -70.1774, 0.37", "24.1052, 140.055, -70.2159, 0.37", "24.1961, 140.729, -70.5956, 0.29", "24.201, 141.43, -70.9067, 0.29", "24.1908, 141.497, -70.9326, 0.29", "23.9768, 142.182, -71.1672, 0.37", "23.8394, 142.528, -71.26, 0.59", "23.5493, 143.232, -71.4457, 0.74", "23.2972, 143.804, -71.5994, 0.52", "22.9218, 144.678, -71.8246, 0.22", "22.6913, 145.299, -71.9681, 0.22", "22.5447, 145.8, -72.0973, 0.22", "22.3774, 146.536, -72.3126, 0.74", "22.2731, 147.174, -72.5186, 0.88", "22.2036, 147.752, -72.7241, 0.74", "22.1378, 148.466, -72.988, 0.66", "22.019, 149.654, -73.4587, 0.29", "21.9189, 150.446, -73.7972, 0.29", "21.8674, 150.861, -73.9799, 0.44", "21.8503, 151.004, -74.0419, 0.44", "21.8028, 151.423, -74.205, 0.44", "21.7605, 151.83, -74.3328, 0.29", "21.7288, 152.249, -74.4126, 0.74", "21.7275, 152.854, -74.4852, 0.96", "21.7431, 153.166, -74.5106, 0.88", "21.8044, 153.921, -74.5561, 0.29", "21.8588, 154.439, -74.5788, 0.44", "21.9363, 155.104, -74.6012, 0.29", "22.021, 156.072, -74.6465, 0.37", "22.0549, 156.482, -74.6649, 0.59", "22.1168, 157.085, -74.6848, 0.74", "22.154, 157.463, -74.6981, 0.52", "22.1942, 157.933, -74.706, 0.37", "22.2535, 159.047, -74.6894, 0.52", "22.2832, 159.965, -74.6516, 0.44", "22.3179, 161.314, -74.5692, 0.88", "22.3351, 161.854, -74.5261, 1.25", "22.3486, 162.397, -74.4816, 1.03", "22.3654, 163.251, -74.4078, 0.29", "22.3685, 163.991, -74.3493, 0.44", "22.3311, 164.821, -74.3411, 0.37", "22.269, 165.611, -74.3891, 0.74", "22.2031, 166.428, -74.4914, 0.74", "22.1964, 166.499, -74.5059, 0.74", "22.1022, 167.291, -74.7168, 0.74", "21.9717, 168.157, -74.9705, 0.22", "21.9018, 168.606, -75.1026, 0.52", "21.8231, 169.109, -75.2453, 0.96", "21.7059, 169.897, -75.4525, 0.22", "21.6203, 170.545, -75.602, 0.66", "21.5564, 171.138, -75.7127, 1.03", "21.4622, 171.973, -75.797, 0.81", "21.3417, 172.881, -75.8553, 0.52", "21.2638, 173.395, -75.8887, 0.44", "21.0769, 174.457, -75.9701, 0.37", "20.8861, 175.389, -76.0586, 0.88", "20.6685, 176.406, -76.165, 1.25", "20.547, 177.003, -76.2292, 0.88", "20.4083, 177.811, -76.3156, 0.44", "20.2733, 178.69, -76.4238, 0.59", "20.2067, 179.212, -76.4973, 0.81", "20.1544, 179.792, -76.5896, 0.59", "20.1228, 180.525, -76.7147, 0.37", "20.099, 181.728, -76.866, 0.52", "20.078, 182.5, -76.9362, 0.37", "20.06, 182.856, -76.972, 0.74", "20.0017, 183.379, -77.0422, 0.88", "19.9497, 183.658, -77.1066, 0.88", "19.864, 184.15, -77.2992, 1.11", "19.8191, 184.647, -77.5365, 1.03", "19.8075, 185.118, -77.778, 0.37", "19.8222, 185.684, -78.0726, 0.37", "19.9117, 186.542, -78.5203, 0.66", "20.103, 187.866, -79.1788, 0.29", "20.2489, 188.748, -79.5905, 0.52", "20.2592, 188.807, -79.6161, 0.52", "20.3429, 189.304, -79.8074, 0.66", "20.4636, 190.181, -80.0866, 0.37", "20.5466, 191.181, -80.3367, 0.66", "20.562, 191.918, -80.4868, 0.59", "20.5438, 192.447, -80.5781, 0.74", "20.4933, 193.152, -80.6721, 0.37", "20.3561, 194.115, -80.6943, 0.59", "20.3274, 194.259, -80.6842, 0.59", "20.2055, 194.824, -80.621, 0.37", "19.9574, 195.946, -80.4687, 0.29", "19.7525, 196.91, -80.3494, 0.52", "19.4317, 198.452, -80.1727, 0.22", "19.2672, 199.407, -80.0759, 0.52", "19.1876, 199.91, -80.0484, 0.81", "19.0964, 200.49, -80.06, 0.52", "18.9579, 201.508, -80.1816, 0.74", "18.9477, 201.578, -80.198, 0.74", "18.7862, 202.475, -80.5308, 1.33", "18.617, 203.16, -80.8076, 0.88", "18.374, 203.924, -81.1327, 0.66", "18.0813, 204.648, -81.4489, 0.52", "17.7, 205.48, -81.8261, 0.52", "17.3713, 206.152, -82.1454, 0.52", "16.9697, 206.888, -82.5255, 0.29", "16.6989, 207.405, -82.7855, 0.52", "16.4367, 207.887, -83.0277, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "23.7024, 55.115, 11.0405, 0.59", "25.5431, 55.6043, 8.32356, 0.59", "26.5333, 55.8934, 7.05181, 0.74", "26.5763, 55.9066, 7.00154, 0.74", "27.0253, 56.061, 6.52544, 0.74", "27.7899, 56.3128, 5.82068, 0.96", "27.8405, 56.3263, 5.77822, 0.96", "28.4585, 56.4424, 5.48199, 0.96", "28.519, 56.4513, 5.45347, 0.96", "29.6773, 56.6328, 4.85436, 0.52", "30.4261, 56.759, 4.4313, 0.52", "31.4321, 56.9378, 3.84607, 0.81", "31.9822, 57.0453, 3.53342, 0.88", "32.9376, 57.2165, 2.96283, 0.52", "33.2258, 57.2718, 2.79957, 0.74", "33.3354, 57.2958, 2.7246, 0.74", "33.7222, 57.4105, 2.40138, 0.29", "34.1935, 57.5899, 1.96857, 0.59", "34.9832, 57.9368, 1.07178, 0.74", "35.4155, 58.143, 0.543734, 0.59", "36.4263, 58.6539, -0.789814, 1.03", "36.4881, 58.6879, -0.872618, 1.03", "36.6838, 58.8059, -1.14528, 0.74", "37.4702, 59.3621, -2.26475, 0.44", "37.767, 59.6085, -2.66394, 0.59", "38.3363, 60.0717, -3.35552, 0.66", "38.7151, 60.3575, -3.70049, 0.74", "38.7591, 60.3885, -3.73763, 0.74", "38.9278, 60.5018, -3.86545, 0.74", "38.9701, 60.5296, -3.8909, 0.74", "39.8616, 61.1779, -4.58018, 0.29", "40.087, 61.4037, -4.84469, 0.66", "40.1417, 61.4808, -4.94627, 0.66", "40.2662, 61.657, -5.22594, 0.88", "40.2856, 61.6892, -5.29064, 0.88", "40.5939, 62.3164, -6.63349, 0.29", "40.8046, 62.8547, -7.8414, 0.29", "41.0188, 63.4879, -9.32533, 1.11", "41.1946, 64.0777, -10.7528, 0.96", "41.4648, 65.205, -13.4622, 0.66", "41.5047, 65.4268, -13.9842, 0.66", "41.5114, 65.5025, -14.1524, 0.66", "41.5367, 65.917, -14.9903, 0.59", "41.5405, 65.9973, -15.1209, 0.59", "41.5687, 66.7735, -16.0064, 0.52", "41.5756, 66.8112, -16.0359, 0.52", "41.6922, 67.2269, -16.3478, 0.96", "41.8673, 67.7228, -16.6876, 1.11", "42.3069, 68.7596, -17.299, 0.29", "42.3316, 68.8037, -17.3274, 0.29", "42.5712, 69.0821, -17.5598, 0.52", "42.6051, 69.1139, -17.5929, 0.52", "42.7382, 69.2201, -17.7221, 0.74", "42.7764, 69.2522, -17.7643, 0.74", "43.3512, 69.8428, -18.4168, 0.74", "43.7945, 70.4315, -18.9741, 0.59", "43.8216, 70.476, -19.0122, 0.59", "44.0523, 70.8973, -19.324, 0.29", "44.3923, 71.6128, -19.7706, 0.29", "44.6372, 72.2146, -20.1061, 0.88", "44.7515, 72.5703, -20.2557, 1.11", "44.7664, 72.6205, -20.2744, 1.11", "44.9393, 73.1203, -20.4599, 0.88", "45.0286, 73.313, -20.5469, 0.52", "45.4748, 74.0318, -20.8979, 0.37", "45.9134, 74.6242, -21.2342, 0.22", "45.951, 74.6707, -21.2621, 0.22", "46.1888, 74.9747, -21.4368, 0.74", "46.6885, 75.6853, -21.8761, 0.88", "46.9357, 76.0351, -22.0891, 0.22", "47.1894, 76.348, -22.3045, 0.29", "47.2282, 76.3882, -22.3373, 0.29", "47.5427, 76.6746, -22.675, 0.29", "48.1787, 77.1554, -23.5106, 0.88", "48.4195, 77.3084, -23.8357, 1.18", "49.1649, 77.7218, -24.8679, 0.29", "49.5005, 77.8929, -25.3328, 0.88", "50.6438, 78.4775, -26.8868, 1.33", "51.5903, 78.9428, -28.1296, 0.52", "51.9146, 79.1074, -28.5405, 1.25", "51.9482, 79.1275, -28.5828, 1.25", "52.6932, 79.6878, -29.5164, 0.29", "53.0495, 80.0023, -29.9402, 0.29", "53.3711, 80.3362, -30.2293, 0.59", "53.5439, 80.5362, -30.374, 0.96", "53.8975, 80.9428, -30.6732, 0.96", "54.4875, 81.5498, -31.1477, 0.59", "54.5302, 81.5881, -31.1783, 0.59", "54.8698, 81.8737, -31.4116, 0.29", "55.351, 82.2896, -31.7218, 0.44", "55.6434, 82.5488, -31.896, 0.66", "56.0693, 82.9699, -32.1541, 0.29", "56.3445, 83.2517, -32.2988, 0.22", "56.7041, 83.6307, -32.4948, 0.66", "56.8966, 83.8324, -32.5986, 0.74", "57.0946, 84.0487, -32.7015, 0.59", "57.8026, 84.7669, -33.0522, 0.22", "58.1336, 85.0202, -33.212, 0.44", "58.1888, 85.0479, -33.2382, 0.44", "58.511, 85.1552, -33.3783, 0.59", "58.5621, 85.1693, -33.4012, 0.59", "59.0606, 85.285, -33.6201, 0.59", "59.8683, 85.4624, -33.9505, 0.22", "60.3028, 85.5924, -34.1347, 0.59", "60.5887, 85.6944, -34.2535, 0.66", "61.1228, 85.933, -34.519, 0.66", "61.1701, 85.9585, -34.5439, 0.66", "61.7814, 86.3582, -34.8989, 0.22", "62.209, 86.6758, -35.1462, 0.66", "62.3979, 86.8232, -35.259, 0.96", "63.3829, 87.6148, -35.8436, 0.22", "63.722, 87.8943, -36.0763, 0.22", "64.214, 88.3192, -36.539, 0.59", "64.4412, 88.5287, -36.8287, 0.96", "64.5481, 88.6257, -36.9843, 1.18", "64.5767, 88.6503, -37.0276, 1.18", "65.3563, 89.2111, -38.104, 0.44", "66.0301, 89.6024, -38.942, 0.37", "66.5599, 89.8619, -39.5361, 0.29", "66.8931, 90.0097, -39.8678, 0.44", "67.1421, 90.1221, -40.0997, 0.44", "67.8689, 90.452, -40.6649, 0.22", "68.4303, 90.6693, -40.9749, 0.81", "68.5375, 90.706, -41.024, 0.81", "68.8894, 90.803, -41.1765, 0.96", "70.2395, 91.1315, -41.7644, 0.37", "71.016, 91.3323, -42.1078, 0.37", "71.7517, 91.5554, -42.4945, 0.29", "71.7932, 91.567, -42.5195, 0.29", "72.3224, 91.7017, -42.855, 0.29", "72.7325, 91.7992, -43.1126, 0.74", "73.2607, 91.9172, -43.3771, 1.03", "74.2207, 92.1524, -43.8351, 0.88", "75.5301, 92.5066, -44.2801, 0.29", "75.9904, 92.617, -44.3738, 0.44", "76.6475, 92.7465, -44.4312, 0.29", "77.7066, 92.8883, -44.3999, 1.33", "78.0893, 92.9113, -44.3405, 1.69", "79.3482, 92.944, -43.9976, 0.29", "79.8889, 92.9511, -43.8079, 0.29", "80.2192, 92.944, -43.7003, 0.66", "80.2692, 92.941, -43.6871, 0.66", "80.6463, 92.9104, -43.6381, 0.66", "81.3082, 92.8355, -43.6093, 0.22", "81.7163, 92.7535, -43.6315, 0.44", "81.7818, 92.7384, -43.6326, 0.44", "82.2638, 92.6132, -43.6267, 0.44", "82.3114, 92.6011, -43.6326, 0.44", "82.9233, 92.4637, -43.7573, 0.29", "83.5878, 92.319, -43.9683, 0.29", "84.0756, 92.2161, -44.1615, 0.74", "84.3426, 92.1623, -44.2772, 0.96", "85.7343, 91.9106, -44.9647, 0.37", "86.0409, 91.868, -45.1342, 1.03", "86.7864, 91.8218, -45.6359, 1.03", "87.1143, 91.8251, -45.9024, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "23.7024, 55.115, 11.0405, 0.88", "24.0604, 56.341, 12.9472, 0.88", "24.3103, 56.9723, 13.7708, 0.66", "24.4537, 57.3595, 14.1907, 0.66", "24.467, 57.399, 14.2266, 0.66", "24.6179, 57.9001, 14.5946, 0.66", "24.6312, 57.9463, 14.6236, 0.66", "24.8076, 58.5836, 14.8652, 0.74", "25.0054, 59.6412, 15.2345, 0.44", "25.0663, 60.1251, 15.4122, 0.37", "25.1351, 60.8208, 15.6799, 0.37", "25.1612, 61.148, 15.808, 0.59", "25.225, 61.9262, 16.1075, 0.59", "25.2809, 62.4879, 16.3179, 0.59", "25.3334, 62.7384, 16.4026, 0.88", "25.349, 62.7926, 16.4265, 0.88", "25.498, 63.2857, 16.7296, 1.18", "25.5233, 63.3794, 16.8006, 1.18", "25.5857, 63.6619, 17.0384, 0.88", "25.7051, 64.2722, 17.5704, 0.44", "25.8596, 64.9767, 18.179, 0.74", "26.07, 65.8869, 18.9776, 1.33", "26.2682, 66.7113, 19.6924, 0.96", "26.479, 67.561, 20.4052, 0.52", "26.6097, 68.0927, 20.8223, 0.44", "26.7703, 68.8081, 21.3643, 0.37", "26.8933, 69.5485, 21.8957, 0.37", "26.9393, 70.0487, 22.252, 0.37", "26.9369, 70.1841, 22.3495, 0.37", "26.8711, 70.6421, 22.7041, 0.59", "26.579, 71.6691, 23.54, 0.88", "26.258, 72.4491, 24.1877, 0.88", "25.9598, 73.0593, 24.6748, 0.52", "25.7597, 73.4291, 24.9741, 0.52", "25.7423, 73.4637, 25.0001, 0.52", "25.6236, 73.7788, 25.1863, 0.52", "25.6231, 73.8314, 25.1969, 0.52", "25.7163, 74.1787, 25.2078, 0.74", "25.7458, 74.2538, 25.2061, 0.74", "25.9611, 74.7136, 25.2041, 0.37", "26.3014, 75.3948, 25.205, 0.44", "26.6222, 75.9515, 25.1792, 0.44", "26.9014, 76.4021, 25.1411, 0.74", "26.9614, 76.4915, 25.1307, 0.74", "27.3424, 77.0566, 25.0364, 0.74", "27.3725, 77.1006, 25.0272, 0.74", "27.8098, 77.7599, 24.8729, 0.66", "27.8384, 77.8063, 24.862, 0.66", "28.0796, 78.2166, 24.7836, 0.74", "28.4879, 78.9658, 24.6672, 0.29", "28.7073, 79.4314, 24.6368, 0.44", "28.933, 79.9846, 24.6439, 0.22", "29.0697, 80.4097, 24.6851, 0.66", "29.1579, 80.737, 24.7251, 0.66", "29.1688, 80.7979, 24.7342, 0.66", "29.279, 81.5722, 24.9017, 0.44", "29.2902, 81.6253, 24.9122, 0.44", "29.3715, 81.8881, 24.9578, 0.52", "29.4318, 82.0462, 24.974, 0.52", "29.5625, 82.3519, 24.9806, 0.52", "29.8509, 83.025, 24.9524, 0.29", "30.1, 83.6728, 24.8926, 0.29", "30.1122, 83.717, 24.8883, 0.29", "30.2074, 84.2137, 24.839, 0.44", "30.2233, 84.3871, 24.8204, 0.44", "30.2044, 84.932, 24.7867, 0.44", "30.1219, 85.4449, 24.7688, 0.59", "30.032, 85.9017, 24.8043, 0.74", "30.0234, 85.9615, 24.8138, 0.74", "30.0018, 86.4046, 24.9212, 0.74", "30.0274, 87.0656, 25.2234, 0.52", "30.0333, 87.1119, 25.2515, 0.52", "30.1291, 87.6395, 25.586, 0.44", "30.1765, 87.9371, 25.7859, 0.29", "30.2292, 88.4214, 26.0923, 0.29", "30.2526, 89.4712, 26.7928, 0.29", "30.245, 89.8625, 27.0409, 0.37", "30.2308, 90.4023, 27.368, 0.44", "30.1957, 91.1911, 27.8221, 0.96", "30.1842, 91.6789, 28.1008, 1.25", "30.2393, 92.8818, 28.8231, 0.52", "30.3155, 93.3747, 29.1073, 0.52", "30.4217, 93.7763, 29.3634, 0.66", "30.4409, 93.8246, 29.3981, 0.66", "30.6802, 94.2659, 29.7071, 0.44", "31.074, 94.8993, 30.1349, 0.29", "31.199, 95.1193, 30.2496, 0.52", "31.3695, 95.5031, 30.4429, 0.52", "31.5584, 96.0008, 30.6842, 0.44", "31.7103, 96.382, 30.8582, 0.29", "31.8336, 96.7024, 31.0272, 0.52", "32.1226, 97.3509, 31.3858, 0.88", "32.2769, 97.6591, 31.5702, 0.52", "32.642, 98.293, 31.9811, 0.44", "32.951, 98.7597, 32.2962, 0.59", "33.5218, 99.5182, 32.8872, 0.29", "33.9451, 100.025, 33.334, 0.29", "35.2444, 106.845, 36.5812, 0.29", "36.5192, 114.17, 38.1292, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-161.904, -234.372, 46.1093, 0.29", "-162.054, -235.387, 46.2879, 0.29", "-162.105, -235.733, 46.3487, 0.74", "-162.201, -236.38, 46.4625, 0.29", "-162.291, -236.988, 46.5694, 0.29", "-162.413, -237.815, 46.7149, 0.37", "-164.264, -246.166, 47.1522, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-161.904, -234.372, 46.1093, 0.37", "-162.343, -234.616, 47.296, 0.37", "-162.607, -234.74, 47.8944, 0.37", "-163.095, -234.942, 49.0001, 0.44", "-163.451, -235.082, 49.7585, 0.37", "-164.174, -235.386, 51.2254, 0.88", "-164.415, -235.515, 51.7625, 1.11", "-164.71, -235.688, 52.4137, 0.81", "-165.368, -236.195, 54.0209, 0.29", "-165.588, -236.367, 54.5239, 0.29", "-165.78, -236.521, 54.98, 0.74", "-166.46, -237.016, 56.443, 0.44", "-166.669, -237.161, 56.901, 0.44", "-167.152, -237.423, 57.8699, 0.29", "-167.642, -237.723, 58.9743, 0.29", "-167.899, -237.924, 59.8409, 0.59", "-168.055, -238.05, 60.4709, 0.66", "-168.278, -238.217, 61.414, 0.44", "-168.455, -238.374, 62.3445, 0.37", "-168.817, -238.78, 64.725, 0.66", "-169.124, -239.212, 67.092, 0.81", "-169.203, -239.3, 67.6095, 0.88", "-169.264, -239.376, 68.0763, 0.88", "-169.274, -239.389, 68.1559, 0.88", "-169.487, -239.586, 69.4945, 0.52", "-169.729, -239.617, 70.111, 0.52", "-170.707, -239.711, 71.8865, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-5.81713, -101.214, -22.466, 0.74", "-6.06792, -102.071, -22.7697, 0.74", "-6.21269, -102.759, -23.0564, 0.74", "-6.35422, -103.697, -23.4636, 0.88", "-6.41682, -104.27, -23.7184, 0.88", "-6.51945, -105.208, -24.1362, 0.81", "-6.65867, -106.481, -24.703, 0.88", "-6.67956, -107.252, -25.0778, 0.88", "-6.6649, -107.786, -25.3656, 1.33", "-6.61083, -108.346, -25.6765, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.81713, -101.214, -22.466, 0.59", "-5.80789, -102.07, -22.7125, 0.59", "-5.894, -103.186, -23.1938, 0.52", "-5.96866, -104.304, -23.74, 0.44", "-6.02698, -105.268, -24.2341, 0.44", "-6.05257, -106.574, -24.9011, 0.59", "-6.04892, -108.131, -25.7232, 0.74", "-6.03596, -109.295, -26.396, 0.59", "-6.00882, -110.135, -26.9126, 0.59", "-6.00295, -110.201, -26.9537, 0.59", "-5.79988, -111.494, -27.692, 0.59", "-5.43892, -112.878, -28.344, 0.74", "-5.16986, -113.665, -28.6667, 0.74", "-4.68386, -114.937, -29.1585, 0.66", "-4.20584, -116.105, -29.5984, 0.59", "-4.13166, -116.249, -29.6471, 0.59", "-3.38889, -117.309, -29.9598, 0.59", "-3.04758, -117.675, -30.0473, 0.81", "-2.98189, -117.739, -30.0612, 0.81", "-2.35248, -118.341, -30.1965, 0.81", "-1.24463, -119.489, -30.5402, 0.66", "-0.485965, -120.397, -30.8405, 0.66", "0.157018, -121.295, -31.0967, 0.66", "0.825009, -122.311, -31.308, 0.81", "1.31233, -123.123, -31.4382, 0.96", "1.96083, -124.339, -31.5909, 0.52", "2.41676, -125.298, -31.701, 0.52", "3.01415, -126.558, -31.7773, 0.81", "3.52557, -127.565, -31.8126, 0.81", "4.0104, -128.489, -31.8274, 0.81", "4.0509, -128.57, -31.827, 0.81", "4.62409, -129.817, -31.833, 0.81", "4.68369, -129.962, -31.8416, 0.81", "5.18499, -131.437, -31.9718, 0.81", "5.49863, -132.558, -32.0554, 0.81", "5.75924, -133.618, -32.0977, 0.66", "5.78055, -133.706, -32.0956, 0.66", "6.0407, -134.837, -32.0109, 0.37", "6.36962, -136.177, -31.8944, 0.66", "6.52861, -136.795, -31.8298, 0.96", "6.90278, -138.01, -31.6622, 0.74", "7.39801, -139.472, -31.4251, 0.96", "7.76479, -140.591, -31.2506, 0.81", "8.18369, -141.914, -31.0598, 0.74", "8.20008, -141.979, -31.0546, 0.74", "8.48004, -143.366, -31.0466, 0.74", "8.49383, -143.444, -31.0554, 0.74", "8.68672, -144.777, -31.5185, 0.44", "8.78215, -145.46, -31.845, 0.44", "8.9588, -146.838, -32.6377, 1.4", "9.07508, -147.709, -33.2498, 1.18", "9.2159, -148.767, -34.1631, 1.03", "9.5274, -150.473, -35.8303, 0.66", "9.69638, -151.101, -36.5023, 0.66", "9.74438, -151.241, -36.6567, 0.66", "10.2684, -152.496, -38.0299, 0.81", "10.6457, -153.417, -39.0847, 0.96", "11.1414, -154.607, -40.4941, 0.74", "11.5753, -155.498, -41.5476, 0.74", "11.9299, -156.172, -42.3452, 0.96", "12.2215, -156.687, -42.9114, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-15.3236, -303.973, -16.1724, 0.29", "-14.3141, -303.867, -17.0863, 0.29", "-13.7021, -303.802, -17.6402, 0.29", "-12.5071, -303.676, -18.722, 0.22", "-11.9219, -303.615, -19.2517, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-15.3236, -303.973, -16.1724, 0.59", "-15.5056, -304.805, -16.194, 0.59", "-15.5195, -304.859, -16.1939, 0.59", "-15.764, -305.718, -16.1622, 0.52", "-16.0165, -306.586, -16.1191, 0.66", "-16.2308, -307.407, -16.081, 0.66", "-16.4391, -308.256, -16.0434, 0.81", "-16.4828, -308.428, -16.03, 0.81", "-16.6406, -309.29, -15.9385, 0.81", "-16.6515, -309.404, -15.924, 0.81", "-16.5678, -310.401, -15.762, 0.81", "-16.5602, -310.462, -15.756, 0.81", "-16.5021, -311.354, -15.805, 0.59", "-16.4981, -312.242, -15.9386, 0.37", "-16.5426, -312.779, -16.1165, 0.74", "-16.818, -313.833, -16.7365, 0.81", "-17.209, -314.924, -17.5937, 0.52", "-17.7174, -316.219, -18.8086, 0.52", "-17.732, -316.252, -18.843, 0.52", "-18.2414, -317.177, -20.0419, 0.96", "-18.9144, -318.255, -21.7383, 1.69", "-19.1796, -318.65, -22.4895, 0.37", "-19.5081, -319.137, -23.602, 0.37", "-19.6362, -319.346, -24.1351, 0.66", "-20.158, -320.298, -26.6679, 1.25", "-20.4582, -320.92, -28.4481, 0.44", "-20.6025, -321.298, -29.5587, 0.81", "-20.847, -322.019, -31.6819, 0.37", "-20.9082, -322.301, -32.5045, 0.29", "-20.907, -322.694, -33.6204, 0.29", "-20.8458, -322.895, -34.0942, 0.96", "-20.743, -323.109, -34.5694, 0.96", "-20.4742, -323.609, -35.5405, 0.44", "-20.3826, -323.778, -35.9089, 0.81", "-20.2743, -323.981, -36.4447, 1.03", "-20.2615, -324.004, -36.5051, 1.03", "-19.9005, -324.662, -38.0918, 0.37", "-19.6512, -325.139, -39.1497, 1.4", "-19.328, -326.11, -41.1165, 0.37", "-19.2602, -326.422, -41.6857, 0.66", "-19.1669, -326.918, -42.4948, 0.29", "-19.0581, -327.365, -43.1306, 0.96", "-18.9912, -327.583, -43.3879, 0.96", "-18.3827, -329.344, -45.1282, 0.37", "-18.2856, -329.6, -45.3231, 0.59", "-18.017, -330.304, -45.8763, 0.29", "-17.7424, -331.005, -46.5129, 0.96", "-17.7262, -331.043, -46.5502, 0.96", "-17.5154, -331.366, -46.8034, 1.33", "-17.472, -331.403, -46.8075, 1.33", "-17.1703, -331.66, -46.8168, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-53.1954, -70.7238, 6.92185, 0.29", "-52.8016, -71.625, 7.13428, 0.29", "-52.521, -72.2672, 7.28565, 0.37", "-52.262, -72.86, 7.42538, 0.37", "-51.8911, -73.709, 7.62552, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-53.1954, -70.7238, 6.92185, 0.37", "-54.0894, -71.3981, 7.5038, 0.37", "-54.6721, -71.7942, 8.00404, 0.37", "-55.3258, -72.1663, 8.61808, 0.81", "-55.7293, -72.3785, 9.1374, 1.25", "-56.0153, -72.5208, 9.57, 1.25", "-57.2232, -73.1324, 11.4303, 0.44", "-57.3038, -73.1684, 11.5651, 0.44", "-57.5751, -73.2774, 12.0237, 0.74", "-58.6698, -73.7163, 13.7853, 0.52", "-59.2669, -73.9931, 14.6542, 0.59", "-59.7634, -74.2675, 15.1786, 0.44", "-60.2274, -74.5663, 15.4538, 0.29", "-60.7552, -74.9421, 15.6672, 0.29", "-61.4571, -75.5092, 15.8202, 1.11", "-61.9201, -75.9242, 15.8393, 1.33", "-63.0302, -77.1112, 15.7923, 0.74", "-63.5721, -77.8162, 15.7514, 0.74", "-63.8549, -78.2723, 15.7235, 1.11", "-64.156, -78.8461, 15.7166, 0.88", "-64.476, -79.5576, 15.7456, 0.66", "-64.808, -80.4058, 15.8173, 0.37", "-64.9736, -80.9798, 15.8901, 0.37", "-65.1946, -81.8726, 15.9934, 0.37", "-65.397, -82.863, 16.0891, 0.37", "-65.5269, -83.5994, 16.1474, 0.29", "-65.6119, -84.3053, 16.2079, 0.59", "-65.6652, -85.0258, 16.2963, 0.81", "-65.6655, -85.0845, 16.3025, 0.81", "-65.6056, -85.8842, 16.3949, 0.74", "-65.5379, -86.3905, 16.4452, 1.11", "-65.3573, -87.5069, 16.5688, 0.59", "-65.2755, -88.0174, 16.6361, 1.03", "-65.132, -89.0115, 16.8076, 0.52", "-65.0292, -89.8411, 16.9683, 0.74", "-64.9733, -90.4258, 17.0869, 0.66", "-64.8954, -91.4869, 17.3017, 0.44", "-64.8771, -92.425, 17.5033, 0.44", "-64.9408, -93.4012, 17.7456, 0.44", "-65.0105, -93.7922, 17.8593, 0.81", "-65.204, -94.491, 18.0699, 1.18", "-65.3027, -94.7531, 18.16, 1.33", "-65.7744, -95.8124, 18.575, 0.44", "-66.175, -96.64, 18.9068, 0.59", "-66.4706, -97.2495, 19.2341, 0.81", "-66.6191, -97.5333, 19.4264, 0.81", "-66.988, -98.1571, 19.9852, 0.37", "-67.4081, -98.7609, 20.6243, 0.74", "-67.5834, -98.9726, 20.8905, 0.96", "-68.5521, -100.065, 22.4314, 0.59", "-68.9767, -100.5, 23.1076, 0.81", "-69.8309, -101.293, 24.4632, 0.52", "-70.3612, -101.712, 25.2785, 0.52", "-70.8487, -102.033, 25.9608, 0.74", "-74.1426, -109.735, 31.5186, 0.74", "-78.1318, -117.664, 36.1832, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-116.368, -73.4901, -57.0011, 0.52", "-116.299, -74.5796, -57.7829, 0.52", "-116.19, -75.844, -58.6675, 0.88", "-116.103, -76.4389, -59.0678, 0.88", "-115.906, -77.4293, -59.7413, 0.37", "-115.806, -77.8622, -60.0254, 0.29", "-115.716, -78.2644, -60.2741, 0.88", "-115.696, -78.3474, -60.3215, 0.88", "-115.527, -79.0162, -60.6101, 0.88", "-115.326, -79.9091, -60.9334, 0.29", "-115.198, -80.535, -61.0944, 0.29", "-115.109, -81.1157, -61.2173, 0.22", "-115.041, -81.784, -61.3285, 0.22", "-115.03, -82.1087, -61.3676, 0.81", "-115.05, -82.7001, -61.4065, 1.25", "-115.104, -83.6746, -61.4249, 0.37", "-115.17, -84.5858, -61.4378, 0.22", "-115.215, -85.1428, -61.4443, 0.66", "-115.269, -85.6676, -61.4478, 0.81", "-115.403, -86.7213, -61.4493, 0.22", "-115.487, -87.2346, -61.4457, 0.88", "-115.545, -87.5185, -61.4414, 1.03", "-115.625, -87.9465, -61.44, 1.03", "-115.691, -88.3968, -61.4432, 0.74", "-115.696, -88.4702, -61.4453, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-116.368, -73.4901, -57.0011, 0.22", "-119.0, -73.4853, -58.1709, 0.22", "-120.02, -73.5448, -58.592, 0.22", "-121.079, -73.6605, -58.9756, 0.81", "-121.629, -73.7502, -59.144, 1.11", "-122.281, -73.8922, -59.305, 1.03", "-124.069, -74.3401, -59.6636, 0.22", "-124.376, -74.4562, -59.6896, 0.66", "-125.057, -74.7394, -59.7476, 0.96", "-125.821, -75.0453, -59.7575, 0.29", "-126.698, -75.3399, -59.7424, 0.29", "-127.028, -75.4324, -59.717, 0.96", "-127.696, -75.5757, -59.6506, 1.18", "-127.763, -75.5838, -59.648, 1.18", "-128.649, -75.635, -59.6421, 0.88", "-128.783, -75.6404, -59.6427, 0.88", "-129.338, -75.683, -59.6438, 0.66", "-130.683, -75.8754, -59.7191, 0.29", "-130.935, -75.9225, -59.7347, 0.29", "-131.977, -76.1554, -59.8116, 0.29", "-132.554, -76.2496, -59.9132, 0.59", "-133.031, -76.2983, -60.0144, 0.59", "-134.489, -76.3786, -60.3812, 0.29", "-134.892, -76.3864, -60.4815, 1.03", "-135.52, -76.3408, -60.6865, 1.33", "-137.548, -75.9545, -61.532, 0.29", "-137.922, -75.8544, -61.6909, 0.29", "-137.993, -75.8314, -61.7225, 0.29", "-138.63, -75.6341, -62.0463, 0.59", "-140.159, -75.2412, -62.8948, 0.81", "-141.231, -75.0524, -63.5859, 0.52", "-141.779, -75.0219, -63.9842, 1.11", "-142.796, -75.0394, -64.812, 1.4", "-144.306, -75.0961, -66.0969, 0.29", "-144.661, -75.1238, -66.4211, 0.88", "-146.098, -75.3953, -67.8056, 0.52", "-147.213, -75.7167, -68.9736, 0.81", "-147.624, -75.865, -69.4491, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-23.7224, 279.691, -3.75205, 0.37", "-23.2155, 279.672, -3.81964, 0.37", "-22.2393, 279.582, -3.94751, 0.66", "-22.1753, 279.572, -3.9543, 0.66", "-21.7092, 279.502, -4.00213, 0.29", "-21.6344, 279.491, -4.00934, 0.29", "-20.3659, 279.344, -4.18948, 0.29", "-20.3023, 279.339, -4.19928, 0.29", "-20.0024, 279.341, -4.23998, 0.66", "-19.6458, 279.353, -4.30001, 0.52", "-19.5804, 279.359, -4.31421, 0.52", "-18.3793, 279.56, -4.57588, 0.22", "-17.7967, 279.774, -4.69203, 0.22", "-17.48, 279.9, -4.76195, 0.29", "-8.52164, 281.988, -4.90685, 0.29", "-0.154718, 285.678, -4.77935, 0.29", "7.78188, 289.875, -6.35507, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-23.7224, 279.691, -3.75205, 0.29", "-23.4962, 280.995, -3.69502, 0.29", "-23.4368, 281.434, -3.6976, 0.29", "-23.4349, 281.493, -3.69809, 0.29", "-23.4553, 282.167, -3.70625, 0.29", "-23.4591, 282.217, -3.70724, 0.29", "-23.5955, 283.127, -3.70597, 0.29", "-23.6113, 283.174, -3.70804, 0.29", "-23.8066, 283.74, -3.68446, 0.52", "-23.8409, 283.854, -3.67346, 0.52", "-23.8933, 284.092, -3.64397, 0.52", "-23.9806, 284.671, -3.57131, 0.22", "-24.0203, 285.234, -3.51324, 0.22", "-24.0368, 285.797, -3.46146, 0.44", "-24.0185, 286.227, -3.43153, 0.44", "-23.9766, 286.836, -3.39467, 0.22", "-23.9698, 286.895, -3.39252, 0.22", "-23.8052, 287.738, -3.42259, 0.22", "-23.978, 295.97, -4.21952, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "35.7373, 141.141, -61.6223, 0.66", "35.892, 141.833, -61.6388, 0.66", "36.0729, 142.485, -61.6527, 0.29", "36.0946, 142.553, -61.6541, 0.29", "36.3227, 143.22, -61.6666, 0.29", "36.6904, 144.377, -61.6907, 0.29", "36.829, 144.882, -61.7029, 0.52", "36.8699, 145.05, -61.707, 0.52", "36.9268, 145.295, -61.7145, 0.52", "37.0217, 145.746, -61.7289, 0.37", "37.122, 146.375, -61.7508, 0.37", "37.1281, 147.347, -61.7931, 0.88", "37.1199, 147.481, -61.7973, 0.88", "37.0765, 148.021, -61.809, 1.03", "37.0413, 148.54, -61.815, 1.18", "37.0238, 149.104, -61.8157, 0.66", "37.0367, 149.8, -61.8091, 0.52", "37.06, 150.134, -61.803, 0.59", "37.1189, 150.492, -61.7979, 0.44", "37.3796, 151.443, -61.788, 0.29", "37.5107, 151.802, -61.7874, 0.37", "37.5393, 151.87, -61.792, 0.37", "37.7014, 152.271, -61.8402, 0.22", "37.9662, 153.077, -61.9258, 0.59", "38.0815, 153.504, -61.9636, 0.88", "38.2403, 154.229, -62.0123, 0.52", "38.4046, 155.151, -62.0566, 0.29", "38.5005, 155.835, -62.0755, 0.29", "38.582, 156.759, -62.082, 0.59", "38.5843, 156.833, -62.0763, 0.59", "38.5921, 157.34, -61.9987, 0.29", "38.594, 157.448, -61.973, 0.29", "38.6943, 158.228, -61.7359, 0.52", "38.7659, 158.583, -61.6529, 0.66", "38.9517, 159.436, -61.5208, 0.52", "38.9674, 159.508, -61.5113, 0.52", "39.0752, 160.021, -61.4606, 0.29", "39.3231, 161.26, -61.4556, 0.29", "39.4904, 162.161, -61.5427, 0.66", "39.5419, 162.488, -61.5794, 0.88", "39.5514, 162.559, -61.5887, 0.88", "39.6014, 163.228, -61.6547, 0.52", "39.6011, 164.109, -61.7136, 0.52", "39.5757, 164.855, -61.7391, 0.29", "39.5749, 165.829, -61.7447, 0.29", "39.5982, 166.581, -61.7258, 1.03", "39.646, 167.38, -61.6878, 0.74", "39.7418, 168.275, -61.5822, 0.29", "39.9317, 169.521, -61.3676, 0.44", "40.0611, 170.16, -61.242, 0.37", "40.2451, 170.907, -61.0919, 0.37", "40.4817, 171.698, -60.8952, 0.96", "40.8742, 172.743, -60.5879, 0.37", "41.1713, 173.427, -60.3555, 0.37", "41.4553, 174.021, -60.1293, 0.59", "41.6229, 174.34, -60.0117, 0.88", "41.7283, 174.531, -59.948, 0.88", "42.0747, 175.133, -59.7736, 0.59", "42.1049, 175.185, -59.7626, 0.52", "42.8834, 176.483, -59.5118, 0.15", "43.2396, 177.078, -59.424, 0.59", "43.2769, 177.139, -59.4159, 0.59", "43.5895, 177.591, -59.3662, 0.59", "43.6336, 177.647, -59.3618, 0.59", "44.0131, 178.104, -59.3393, 0.88", "44.5558, 178.748, -59.3368, 1.18", "44.7933, 179.042, -59.3362, 1.18", "45.6356, 180.185, -59.318, 0.15", "46.1994, 181.06, -59.2972, 0.15", "46.4662, 181.559, -59.2842, 0.52", "46.7325, 182.168, -59.267, 0.66", "46.8547, 182.534, -59.2574, 0.74", "47.0371, 183.295, -59.24, 0.29", "47.1681, 184.028, -59.2255, 0.37", "47.3739, 184.964, -59.1523, 0.29", "47.3962, 185.043, -59.1422, 0.29", "47.8297, 186.041, -58.9613, 0.52", "47.8663, 186.101, -58.9475, 0.52", "48.4756, 186.874, -58.738, 0.81", "49.196, 187.631, -58.4948, 0.37", "49.2475, 187.679, -58.4764, 0.37", "49.9834, 188.447, -58.2123, 0.29", "50.2995, 188.814, -58.0987, 0.37", "50.3359, 188.863, -58.0869, 0.37", "50.6958, 189.419, -57.9981, 0.37", "51.2496, 190.316, -57.8157, 0.29", "51.8839, 191.298, -57.5391, 0.37", "52.12, 191.662, -57.4226, 0.88", "52.4041, 192.057, -57.2881, 0.96", "53.1704, 192.947, -56.915, 0.52", "54.2287, 193.975, -56.4085, 0.66", "54.6645, 194.336, -56.1941, 0.66", "55.2687, 194.762, -55.892, 0.29", "55.9754, 195.224, -55.5327, 0.44", "56.8038, 195.747, -55.0999, 1.11", "57.4641, 196.166, -54.7486, 1.11", "58.4794, 196.832, -54.2412, 1.11", "58.9131, 197.118, -53.9946, 1.55", "59.6396, 197.569, -53.5384, 1.55", "59.7337, 197.622, -53.4726, 1.55", "60.2989, 197.906, -53.0179, 1.55", "60.3446, 197.926, -52.9785, 1.55", "61.0638, 198.195, -52.3346, 2.06", "61.1163, 198.214, -52.2844, 2.06", "62.5473, 198.663, -50.8702, 0.52", "63.403, 198.906, -50.022, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "35.7373, 141.141, -61.6223, 0.74", "35.79, 140.16, -61.4171, 0.74", "35.7901, 140.106, -61.4072, 0.74", "35.7709, 139.444, -61.2948, 0.37", "35.7103, 138.49, -61.144, 0.22", "35.6599, 138.037, -61.0782, 0.37", "35.5844, 137.48, -61.0071, 0.15", "35.4264, 136.633, -60.9255, 0.15", "35.3534, 136.256, -60.8895, 0.44", "35.2642, 135.848, -60.8506, 0.44", "35.0585, 135.065, -60.7845, 0.22", "34.8015, 134.162, -60.7402, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "87.1143, 91.8251, -45.9024, 0.22", "87.7744, 92.2449, -46.9843, 0.22", "88.0077, 92.3932, -47.3666, 0.74", "88.1316, 92.472, -47.5696, 0.74", "89.1048, 93.0907, -49.1645, 0.29", "89.3438, 93.2427, -49.5562, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "87.1143, 91.8251, -45.9024, 0.22", "87.971, 91.4595, -46.1887, 0.22", "88.5918, 91.242, -46.4388, 0.66", "89.0034, 91.1131, -46.6108, 0.66", "89.4873, 90.9888, -46.808, 0.52", "90.4502, 90.8494, -47.2112, 0.22", "90.914, 90.8407, -47.3991, 0.22", "91.5808, 90.9752, -47.6373, 0.59", "91.9131, 91.0846, -47.7368, 0.74", "92.3824, 91.2646, -47.842, 0.74", "93.3188, 91.6682, -47.9751, 0.29", "94.103, 92.0465, -48.0165, 0.29", "95.0625, 92.5293, -48.0352, 0.59", "95.5027, 92.7568, -48.0206, 0.52", "96.3683, 93.202, -47.9755, 0.22", "96.8459, 93.4223, -47.9334, 0.29", "97.5039, 93.6521, -47.8284, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "36.5192, 114.17, 38.1292, 0.29", "38.0488, 121.907, 41.3909, 0.29", "39.428, 130.111, 42.9561, 0.29", "40.4944, 138.325, 44.7217, 0.29", "40.259, 146.544, 46.8173, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "36.5192, 114.17, 38.1292, 0.44", "38.9554, 123.855, 43.093, 0.29", "41.784, 133.553, 47.8055, 0.29", "46.1976, 143.279, 50.9134, 0.29", "49.1629, 153.835, 52.0344, 0.29", "53.4921, 163.943, 51.098, 0.29", "57.1861, 174.311, 50.6018, 0.29", "59.4641, 185.058, 50.451, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-164.264, -246.166, 47.1522, 0.29", "-164.571, -257.589, 48.8134, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-164.264, -246.166, 47.1522, 0.44", "-171.269, -253.455, 47.4557, 0.29", "-178.225, -260.456, 45.3333, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-170.707, -239.711, 71.8865, 0.66", "-170.389, -238.983, 72.7791, 0.66", "-170.177, -238.517, 73.2429, 0.29", "-169.95, -237.968, 73.6996, 0.29", "-169.935, -237.922, 73.7325, 0.29", "-169.7, -237.01, 74.313, 0.52", "-169.661, -236.829, 74.4205, 0.74", "-169.54, -236.09, 74.753, 0.37", "-169.45, -235.446, 75.0156, 0.37", "-169.393, -234.803, 75.2625, 0.29", "-169.362, -234.404, 75.3934, 0.59", "-169.332, -233.954, 75.5057, 0.59", "-169.257, -233.432, 75.6107, 0.59", "-169.091, -232.74, 75.7083, 0.52", "-168.912, -232.231, 75.749, 0.96", "-168.645, -231.628, 75.7719, 0.37", "-168.457, -231.254, 75.7673, 0.29", "-168.068, -230.548, 75.7277, 0.29", "-167.745, -229.975, 75.6895, 0.29", "-167.536, -229.601, 75.6661, 0.52", "-167.512, -229.549, 75.6656, 0.52", "-167.393, -229.237, 75.6791, 0.52", "-167.208, -228.625, 75.7423, 0.37", "-167.025, -227.921, 75.8363, 0.37", "-167.012, -227.865, 75.8457, 0.37", "-166.788, -226.738, 76.0587, 0.37", "-166.615, -225.728, 76.2774, 0.37", "-166.431, -224.473, 76.5779, 0.37", "-166.416, -224.37, 76.6039, 0.37", "-166.265, -223.395, 76.8242, 0.37", "-166.256, -223.346, 76.8343, 0.37", "-166.129, -222.72, 76.9478, 0.88", "-166.101, -222.593, 76.9662, 0.88", "-165.881, -221.807, 77.0327, 0.29", "-165.56, -220.82, 77.0777, 0.29", "-165.325, -220.191, 77.0796, 0.44", "-165.142, -219.724, 77.0771, 0.44", "-164.932, -219.171, 77.0599, 0.29", "-164.907, -219.099, 77.0579, 0.29", "-164.604, -218.301, 76.9998, 0.66", "-164.515, -218.108, 76.9852, 0.66", "-164.344, -217.775, 76.9588, 0.59", "-163.899, -216.944, 76.9134, 0.37", "-163.868, -216.894, 76.9138, 0.37", "-163.148, -215.763, 76.9963, 0.37", "-162.717, -215.125, 77.1045, 0.37", "-162.407, -214.699, 77.193, 0.37", "-162.276, -214.54, 77.2379, 0.88", "-161.821, -214.076, 77.4488, 0.74", "-161.784, -214.036, 77.4726, 0.74", "-161.58, -213.758, 77.8109, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-170.707, -239.711, 71.8865, 0.52", "-171.411, -240.294, 72.127, 0.52", "-172.086, -240.791, 72.365, 0.29", "-172.742, -241.243, 72.5999, 0.29", "-173.765, -241.911, 72.976, 0.44", "-174.626, -242.471, 73.2963, 0.37", "-175.003, -242.715, 73.4375, 0.66", "-175.344, -242.908, 73.5698, 0.88", "-175.795, -243.115, 73.7141, 0.88", "-176.483, -243.383, 73.8879, 0.44", "-177.347, -243.704, 74.0511, 0.44", "-177.409, -243.726, 74.0603, 0.44", "-178.177, -243.982, 74.1564, 0.44", "-179.437, -244.371, 74.3027, 0.29", "-180.226, -244.59, 74.3962, 0.29", "-181.191, -244.821, 74.5786, 0.29", "-181.263, -244.835, 74.5986, 0.74", "-181.323, -244.847, 74.6207, 0.74", "-181.95, -244.998, 74.8541, 0.74", "-182.495, -245.174, 75.0707, 0.74", "-183.638, -245.601, 75.4621, 0.29", "-184.272, -245.875, 75.6128, 0.29", "-185.168, -246.3, 75.7568, 0.29", "-186.344, -246.904, 75.8615, 0.29", "-186.895, -247.216, 75.9091, 0.59", "-187.158, -247.365, 75.9338, 0.59", "-187.943, -247.779, 76.0209, 0.37", "-188.063, -247.829, 76.0742, 0.37", "-188.612, -247.965, 76.5637, 0.37", "-189.456, -248.078, 77.4822, 0.29", "-189.921, -248.15, 78.1602, 0.29", "-190.248, -248.212, 78.7427, 0.59", "-190.829, -248.397, 80.0081, 0.59", "-191.123, -248.538, 80.7445, 0.59", "-191.308, -248.702, 81.3615, 0.59", "-191.757, -249.363, 83.113, 0.44", "-191.769, -249.387, 83.1613, 0.44", "-191.942, -249.79, 83.8639, 0.44", "-191.955, -249.818, 83.9088, 0.44", "-192.284, -250.395, 84.7987, 0.59", "-192.552, -250.738, 85.322, 0.59", "-193.041, -251.148, 85.9371, 0.29", "-193.078, -251.175, 85.9817, 0.29", "-194.017, -251.71, 86.94, 0.44", "-194.463, -251.932, 87.3097, 0.96", "-194.941, -252.138, 87.6303, 1.33", "-195.577, -252.407, 88.0211, 0.88", "-196.652, -252.887, 88.6027, 0.44", "-197.524, -253.281, 89.0033, 0.44", "-198.505, -253.714, 89.3649, 0.52", "-199.219, -253.997, 89.618, 0.52", "-199.279, -254.018, 89.6384, 0.52", "-200.219, -254.279, 89.9401, 0.37", "-200.917, -254.425, 90.1474, 0.37", "-201.631, -254.524, 90.4118, 0.37", "-202.59, -254.581, 90.8566, 0.52", "-202.895, -254.582, 91.0072, 0.96", "-203.236, -254.569, 91.1678, 0.96", "-203.691, -254.532, 91.3701, 0.96", "-204.305, -254.497, 91.6243, 0.81", "-205.364, -254.516, 92.0261, 0.37", "-205.416, -254.522, 92.0441, 0.37", "-206.313, -254.672, 92.3384, 0.37", "-206.836, -254.785, 92.5015, 0.59", "-207.222, -254.874, 92.6182, 0.66", "-207.824, -255.009, 92.7966, 0.52", "-208.599, -255.145, 92.9828, 0.29", "-208.672, -255.154, 93.0013, 0.29", "-209.389, -255.204, 93.1961, 0.29", "-210.088, -255.258, 93.4191, 0.44", "-210.553, -255.307, 93.5815, 0.44", "-211.482, -255.433, 93.9329, 0.44", "-212.403, -255.6, 94.3052, 0.37", "-212.813, -255.691, 94.508, 0.37", "-213.915, -255.972, 95.2541, 0.37", "-214.381, -256.105, 95.6713, 0.37", "-214.817, -256.237, 96.1688, 0.37", "-215.164, -256.33, 96.675, 0.37", "-215.687, -256.422, 97.5829, 0.37", "-216.237, -256.449, 98.6235, 0.37", "-216.405, -256.446, 98.9749, 0.81", "-216.534, -256.467, 99.2302, 1.11", "-216.81, -256.567, 99.7302, 1.11", "-216.841, -256.582, 99.7737, 1.11", "-217.373, -256.885, 100.385, 0.59", "-218.188, -257.403, 101.272, 0.44", "-218.713, -257.743, 101.885, 0.66", "-218.748, -257.765, 101.925, 0.66", "-219.127, -257.977, 102.331, 0.66", "-219.774, -258.264, 102.948, 0.44", "-219.85, -258.296, 103.022, 0.44", "-220.479, -258.56, 103.613, 0.37", "-221.134, -258.865, 104.236, 0.37", "-221.746, -259.174, 104.805, 0.88", "-222.172, -259.406, 105.185, 1.18", "-223.44, -260.081, 106.289, 0.37", "-224.008, -260.371, 106.795, 0.29", "-224.366, -260.545, 107.124, 0.81", "-224.417, -260.567, 107.175, 0.81", "-224.628, -260.664, 107.414, 0.81", "-225.495, -261.051, 108.418, 0.37", "-225.824, -261.181, 108.795, 0.74", "-226.171, -261.331, 109.211, 0.74", "-226.807, -261.603, 109.963, 0.81", "-227.672, -261.992, 110.975, 0.29", "-227.966, -262.134, 111.318, 0.29", "-228.002, -262.153, 111.357, 0.29", "-228.415, -262.38, 111.773, 0.74", "-228.738, -262.549, 112.094, 0.81", "-229.564, -262.907, 112.883, 0.37", "-229.611, -262.923, 112.928, 0.37", "-230.106, -263.091, 113.424, 0.29", "-230.491, -263.221, 113.825, 0.29", "-231.059, -263.41, 114.473, 0.52", "-231.527, -263.579, 115.048, 0.88", "-231.695, -263.626, 115.265, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-6.61083, -108.346, -25.6765, 0.96", "-5.94907, -110.245, -25.4416, 0.96", "-5.5153, -111.414, -25.3252, 0.96", "-5.12745, -112.422, -25.259, 1.03", "-4.88973, -113.02, -25.2498, 1.25", "-4.5855, -113.773, -25.2583, 1.11", "-4.10886, -114.855, -25.2883, 0.74", "-3.72508, -115.716, -25.398, 0.96", "-3.40937, -116.328, -25.5066, 0.74", "-2.89965, -117.255, -25.7259, 0.59", "-2.87425, -117.303, -25.7411, 0.59", "-2.34934, -118.408, -26.147, 0.59", "-2.00612, -119.395, -26.5669, 0.59", "-1.99681, -119.44, -26.5874, 0.59", "-1.86444, -120.374, -26.9624, 0.88", "-1.78525, -121.305, -27.2925, 0.88", "-1.75733, -121.872, -27.479, 0.88", "-1.72716, -122.796, -27.7386, 0.66", "-1.62412, -123.758, -27.9253, 0.52", "-1.43887, -124.701, -28.049, 1.11", "-1.31121, -125.144, -28.0749, 1.11", "-1.0726, -125.834, -28.0895, 0.88", "-0.724176, -126.749, -28.1212, 0.81", "-0.404733, -127.573, -28.1747, 0.88", "-0.200919, -128.18, -28.2785, 1.03", "0.0552733, -129.121, -28.5325, 0.74", "0.224078, -129.82, -28.7645, 0.59", "0.403695, -130.623, -29.0901, 0.52", "0.513125, -131.24, -29.3977, 0.74", "0.677174, -132.319, -30.0107, 0.66", "0.785493, -133.07, -30.4606, 0.74", "0.889672, -133.721, -30.8483, 0.81", "1.0119, -134.334, -31.175, 1.11", "1.17333, -135.002, -31.4876, 0.88", "1.18312, -135.052, -31.5112, 0.88", "1.25299, -135.823, -31.9134, 0.59", "1.24493, -136.607, -32.3716, 0.59", "1.19027, -137.408, -32.8656, 0.81", "1.10527, -138.385, -33.4858, 1.03", "0.941289, -140.144, -34.6883, 1.03", "0.833706, -141.419, -35.6108, 0.81", "0.752768, -142.457, -36.4217, 0.59", "0.749527, -142.503, -36.4582, 0.59", "0.717189, -143.26, -37.044, 0.74", "0.75966, -144.126, -37.6517, 0.66", "0.919721, -144.992, -38.1781, 0.66", "1.11698, -145.863, -38.6698, 0.66", "1.28061, -146.63, -39.0658, 0.96", "1.37918, -147.273, -39.3449, 1.18", "1.42269, -148.095, -39.6238, 1.03", "1.37012, -148.835, -39.7945, 0.88", "1.20057, -149.715, -39.9361, 0.66", "1.05267, -150.269, -39.9921, 0.74", "0.727412, -151.344, -40.0789, 0.74", "0.477182, -152.176, -40.127, 0.81", "0.163599, -153.316, -40.1711, 0.81", "-0.0455258, -154.317, -40.2195, 1.03", "-0.123121, -155.015, -40.2734, 1.11", "-0.13415, -155.762, -40.378, 0.81", "-0.0352256, -156.914, -40.6033, 0.66", "0.141688, -157.808, -40.8116, 0.81", "0.331852, -158.43, -41.0007, 0.81", "0.568829, -159.049, -41.2429, 0.81", "0.75037, -159.45, -41.4366, 1.03", "0.774479, -159.496, -41.4633, 1.03", "1.12152, -160.046, -41.8616, 0.74", "1.4938, -160.634, -42.3771, 0.44", "1.6089, -160.828, -42.5645, 0.74", "1.62798, -160.866, -42.6052, 0.74", "1.76017, -161.187, -42.9384, 0.74", "1.77667, -161.232, -42.9826, 0.74", "2.11102, -162.166, -43.797, 0.59", "2.21279, -162.459, -44.024, 0.88", "2.42767, -163.119, -44.4707, 0.88", "2.70002, -163.999, -44.9802, 0.66", "2.88419, -164.632, -45.2849, 0.74", "3.09063, -165.483, -45.6421, 0.88", "3.17934, -166.092, -45.8705, 0.44", "3.19046, -166.652, -46.0897, 0.44", "3.13581, -167.302, -46.3434, 0.52", "3.02784, -167.834, -46.5784, 0.81", "2.78214, -168.768, -47.0374, 1.03", "2.49274, -169.81, -47.611, 0.88", "2.25985, -170.781, -48.1946, 0.59", "2.16123, -171.302, -48.535, 0.74", "2.09289, -172.221, -49.1651, 0.52", "2.13737, -172.714, -49.508, 0.52", "2.34486, -173.35, -49.9345, 0.81", "2.5938, -173.806, -50.2399, 1.03", "2.798, -174.09, -50.4373, 1.03", "3.41812, -174.851, -50.9846, 0.52", "3.66107, -175.148, -51.1932, 0.66", "4.03385, -175.656, -51.543, 0.66", "4.06502, -175.705, -51.5752, 0.66", "4.33468, -176.184, -51.8831, 0.81", "4.6482, -176.823, -52.2869, 0.59", "4.98911, -177.63, -52.7991, 0.37", "5.1692, -178.052, -53.0716, 0.88", "5.388, -178.546, -53.4286, 1.18", "5.40858, -178.586, -53.4626, 1.18", "5.56492, -178.948, -53.8414, 1.11", "5.67119, -179.32, -54.313, 0.96", "5.6773, -179.354, -54.3607, 0.96", "5.72578, -180.026, -55.2836, 0.59", "5.73185, -180.452, -55.8315, 0.81", "5.72164, -181.576, -57.0931, 0.59", "5.70712, -182.151, -57.638, 0.88", "5.69187, -182.568, -57.9562, 0.88", "5.68231, -183.05, -58.2452, 0.81", "5.68337, -183.734, -58.5298, 0.59", "5.71708, -184.465, -58.7381, 0.66", "5.81437, -185.318, -58.8951, 1.03", "5.88595, -185.853, -58.9921, 1.33", "5.94039, -186.31, -59.0828, 1.18", "5.98504, -186.925, -59.2337, 0.81", "5.97985, -187.708, -59.522, 0.59", "5.96376, -188.436, -59.9039, 0.74", "5.98195, -188.872, -60.1805, 0.96", "5.98691, -188.91, -60.2083, 0.96", "6.14859, -189.669, -60.7828, 0.96", "6.49531, -190.844, -61.7426, 0.74", "6.80877, -191.669, -62.4743, 0.74", "7.13815, -192.396, -63.1421, 0.88", "7.50955, -193.044, -63.6644, 0.88", "7.97086, -193.718, -64.1179, 0.59", "8.39398, -194.224, -64.3195, 0.59", "8.82585, -194.697, -64.3545, 0.59", "8.85666, -194.733, -64.3487, 0.59", "9.98949, -196.33, -63.8629, 0.52", "10.4047, -197.037, -63.5657, 0.52", "10.9833, -198.44, -62.9541, 1.18", "11.2116, -199.291, -62.6089, 1.18", "11.3004, -200.048, -62.3883, 0.52", "11.2519, -201.17, -62.2902, 0.52", "11.0898, -202.06, -62.3985, 0.66", "10.7474, -203.487, -62.7773, 0.66", "10.5062, -204.285, -63.1324, 0.66", "10.0938, -205.648, -63.9024, 0.66", "9.70683, -207.058, -64.8826, 0.74", "9.59856, -207.542, -65.2852, 1.03", "9.5307, -207.973, -65.6888, 1.03", "9.47269, -208.815, -66.5349, 0.66", "9.45375, -209.388, -67.1423, 0.37", "9.49225, -209.907, -67.6748, 0.74", "9.56371, -210.361, -68.1147, 1.03", "9.57128, -210.4, -68.1548, 1.03", "9.63084, -210.562, -68.3375, 1.25", "9.66225, -210.599, -68.3836, 1.25", "9.90346, -210.823, -68.6741, 1.25", "9.93655, -210.855, -68.7088, 1.25", "10.199, -211.135, -68.9699, 1.25", "10.4515, -211.448, -69.2119, 1.25", "11.0796, -212.291, -69.737, 0.59", "11.5763, -212.957, -70.1231, 0.59", "12.1309, -213.708, -70.5281, 0.66", "12.5662, -214.277, -70.8357, 0.66", "13.139, -214.989, -71.2301, 0.59", "13.625, -215.557, -71.5556, 0.44", "14.091, -216.013, -71.8688, 0.29", "14.1279, -216.037, -71.8954, 0.29", "14.7161, -216.226, -72.3393, 0.59", "15.2655, -216.346, -72.775, 0.74", "15.314, -216.355, -72.8099, 0.74", "16.0405, -216.504, -73.3107, 0.74", "16.09, -216.516, -73.3382, 0.74", "17.3662, -216.814, -73.8936, 0.59", "18.0433, -216.97, -74.1336, 0.81", "19.1609, -217.256, -74.4632, 0.66", "19.2231, -217.273, -74.4808, 0.66", "20.3697, -217.539, -74.7658, 1.03", "21.257, -217.69, -74.935, 1.47", "21.7396, -217.753, -74.9748, 1.55", "22.8102, -217.883, -74.9976, 0.29", "23.5891, -217.981, -74.988, 0.59", "24.7342, -218.139, -74.9665, 0.81", "26.1104, -218.341, -74.9207, 1.18", "27.8659, -218.639, -74.8578, 0.44", "29.048, -218.854, -74.8064, 0.59", "29.107, -218.866, -74.8046, 0.59", "29.7765, -219.066, -74.8134, 0.81", "29.8211, -219.086, -74.8189, 0.81", "30.4297, -219.434, -74.9824, 0.37", "31.0541, -219.826, -75.2307, 0.88", "31.5082, -220.15, -75.4238, 1.33", "31.9526, -220.513, -75.6126, 1.47", "32.8261, -221.336, -76.0398, 0.88", "32.8639, -221.375, -76.0615, 0.88", "33.1918, -221.749, -76.2885, 1.03", "33.6611, -222.374, -76.7145, 0.44", "34.0942, -223.022, -77.1924, 0.44", "34.4169, -223.595, -77.6408, 0.66", "34.4364, -223.635, -77.6758, 0.66", "34.633, -224.005, -78.0043, 0.44", "34.8627, -224.402, -78.3677, 0.81", "35.0205, -224.632, -78.5908, 0.96", "35.2813, -224.974, -78.9169, 1.11", "35.6428, -225.423, -79.3015, 0.29", "35.9404, -225.805, -79.6175, 0.22", "35.9699, -225.845, -79.6487, 0.22", "36.3413, -226.323, -80.0429, 1.47", "36.3718, -226.359, -80.0755, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.61083, -108.346, -25.6765, 0.44", "-7.10406, -109.626, -26.7938, 0.44", "-7.55629, -110.895, -27.9427, 0.59", "-8.58352, -114.191, -30.9925, 0.59", "-8.991, -115.709, -32.4008, 0.81", "-9.44098, -117.627, -34.1941, 0.81", "-9.8098, -119.417, -35.8571, 0.88", "-9.97735, -120.442, -36.7896, 1.03", "-10.1202, -121.95, -38.1783, 0.52", "-10.0917, -122.624, -38.7745, 0.88", "-10.0265, -123.698, -39.7141, 0.88", "-10.0073, -124.299, -40.1797, 0.88", "-10.0204, -124.379, -40.2273, 0.88", "-10.5707, -125.513, -40.7891, 0.44", "-11.1227, -126.299, -41.1911, 0.74", "-11.7731, -127.207, -41.7436, 0.74", "-12.5391, -128.331, -42.5566, 0.96", "-13.4741, -129.852, -43.8642, 0.96", "-14.2201, -131.373, -45.322, 0.96", "-14.8191, -132.853, -46.8583, 0.96", "-15.289, -134.529, -48.626, 0.88", "-15.5481, -136.126, -50.292, 0.88", "-15.6449, -137.545, -51.695, 0.59", "-15.6641, -138.989, -53.0533, 0.59", "-15.6709, -140.121, -54.041, 0.96", "-15.7043, -141.284, -54.9575, 1.25", "-15.7914, -142.438, -55.7661, 1.33", "-15.93, -144.125, -56.8364, 0.96", "-16.0344, -145.424, -57.6236, 0.81", "-16.137, -146.838, -58.5172, 0.88", "-16.0893, -147.488, -58.9803, 1.11", "-16.0787, -147.54, -59.0289, 1.11", "-15.7642, -148.291, -59.8687, 1.11", "-15.3849, -148.795, -60.5181, 1.25", "-15.2943, -148.895, -60.6703, 1.25", "-14.7344, -149.558, -61.8328, 1.33", "-14.3021, -150.282, -63.1664, 1.03", "-14.1633, -150.752, -64.0138, 0.59", "-14.159, -151.154, -64.7278, 0.81", "-14.49, -152.296, -66.6543, 0.81", "-14.9959, -153.227, -68.0982, 1.11", "-15.7398, -154.25, -69.5075, 0.88", "-16.7173, -155.499, -71.0407, 0.59", "-17.3131, -156.242, -71.9222, 0.81", "-18.3425, -157.513, -73.4507, 0.96", "-19.1233, -158.582, -74.7081, 0.81", "-19.9717, -160.011, -76.316, 0.37", "-20.5377, -161.315, -77.7488, 1.03", "-21.0052, -163.154, -79.6914, 0.96", "-21.2009, -164.992, -81.5962, 1.18", "-21.1911, -166.323, -82.9906, 1.18", "-21.0761, -167.698, -84.453, 1.18", "-20.9017, -168.989, -85.8374, 0.81", "-20.6376, -170.414, -87.3259, 0.66", "-20.4517, -171.21, -88.1118, 0.96", "-20.0179, -172.738, -89.5785, 1.25", "-19.9993, -172.804, -89.6445, 1.25", "-19.5885, -173.966, -90.8473, 1.11", "-19.2227, -174.877, -91.6888, 0.81", "-18.9684, -175.498, -92.1845, 1.25", "-18.6363, -176.292, -92.6847, 1.25", "-18.3093, -177.12, -93.0397, 0.66", "-18.1055, -177.995, -93.3624, 0.59", "-18.0651, -179.145, -93.6662, 0.59", "-18.1503, -179.714, -93.7967, 0.88", "-18.172, -179.8, -93.8164, 0.88", "-18.4955, -180.899, -94.1301, 0.88", "-18.9924, -182.842, -94.873, 0.59", "-19.1372, -183.684, -95.3231, 0.44", "-19.1456, -183.831, -95.4151, 0.44", "-19.1257, -184.574, -95.9138, 0.74", "-19.0182, -185.73, -96.6804, 0.96", "-18.9109, -186.695, -97.3511, 0.96", "-18.7036, -188.163, -98.3058, 0.59", "-18.6231, -188.943, -98.797, 0.88", "-18.6177, -189.022, -98.8439, 0.88", "-18.567, -189.866, -99.3136, 0.96", "-18.5245, -191.832, -100.354, 0.59", "-18.5191, -192.952, -100.95, 1.03", "-18.4848, -193.819, -101.422, 1.18", "-18.3929, -195.253, -102.246, 0.88", "-18.3031, -196.484, -102.94, 0.74", "-18.1994, -197.813, -103.66, 0.66", "-18.0728, -199.513, -104.475, 0.52", "-18.0477, -200.564, -104.934, 0.81", "-18.1021, -201.67, -105.361, 0.37", "-18.2577, -202.624, -105.648, 0.37", "-18.4308, -203.314, -105.813, 0.88", "-18.6538, -203.974, -105.935, 1.18", "-19.0064, -204.764, -106.038, 1.33", "-19.6581, -206.118, -106.248, 0.88", "-20.3635, -207.595, -106.575, 0.74", "-20.4034, -207.678, -106.596, 0.74", "-21.3434, -209.632, -107.145, 0.52", "-21.9413, -210.87, -107.519, 0.66", "-23.0055, -213.11, -108.225, 0.59", "-23.541, -214.377, -108.631, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "12.2215, -156.687, -42.9114, 0.37", "13.2225, -156.8, -43.2535, 0.37", "14.3221, -156.994, -43.6338, 0.59", "14.9835, -157.121, -43.8796, 0.59", "16.1497, -157.326, -44.3469, 0.59", "16.3044, -157.352, -44.4117, 0.59", "17.1126, -157.481, -44.7924, 0.22", "17.4812, -157.515, -45.0486, 0.44", "17.9793, -157.521, -45.5781, 0.44", "18.3012, -157.506, -46.0461, 0.81", "18.3486, -157.496, -46.1308, 0.81", "18.6347, -157.348, -46.7759, 0.96", "19.1266, -156.899, -48.3227, 0.52", "19.2719, -156.737, -48.845, 0.52", "19.291, -156.713, -48.9174, 0.52", "19.5258, -156.416, -49.8155, 0.44", "19.9837, -155.847, -51.4337, 0.74", "20.3921, -155.295, -52.957, 0.29", "20.5738, -155.04, -53.6074, 0.29", "20.6994, -154.88, -54.0511, 0.59", "20.7174, -154.862, -54.1142, 0.59", "20.8375, -154.774, -54.6114, 1.18", "21.2708, -154.621, -56.151, 1.11", "21.5046, -154.591, -57.019, 0.37", "21.8279, -154.591, -58.2405, 0.29", "22.2301, -154.622, -59.6337, 1.11", "22.8155, -154.674, -61.4471, 0.66", "23.2164, -154.722, -62.5824, 0.44", "23.7453, -154.791, -64.0371, 1.18", "23.936, -154.816, -64.6003, 1.62", "24.221, -154.822, -65.4311, 1.18", "24.5826, -154.786, -66.3655, 0.74", "24.6101, -154.782, -66.4286, 0.74", "25.2187, -154.608, -68.179, 0.59", "25.2395, -154.599, -68.2441, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "12.2215, -156.687, -42.9114, 0.59", "12.4428, -157.999, -42.6095, 0.59", "12.6635, -158.662, -42.2818, 0.66", "12.8273, -158.995, -42.0435, 1.03", "12.8891, -159.12, -41.9419, 1.03", "13.0199, -159.366, -41.6659, 1.03", "13.3778, -160.011, -40.8317, 0.74", "13.9322, -160.937, -39.3468, 1.03", "14.3873, -161.48, -38.2409, 1.11", "14.5904, -161.709, -37.7624, 0.74", "15.4126, -162.714, -35.7221, 0.74", "15.4424, -162.752, -35.6447, 0.74", "15.7462, -163.183, -34.8282, 0.66", "16.8997, -165.116, -31.8532, 0.66", "17.2055, -165.7, -31.1402, 0.52", "17.5651, -166.444, -30.446, 0.74", "17.5825, -166.487, -30.42, 0.74", "17.8076, -167.091, -30.1439, 0.88", "18.3191, -168.633, -29.697, 0.52", "18.4985, -169.376, -29.6208, 0.52", "18.7072, -170.153, -29.5485, 0.52", "18.9195, -170.902, -29.5041, 0.44", "19.066, -171.484, -29.4786, 0.37", "19.3134, -172.506, -29.4289, 0.37", "19.5098, -173.319, -29.4158, 0.59", "19.6428, -173.797, -29.3958, 0.88", "19.6604, -173.847, -29.3901, 0.88", "19.8359, -174.261, -29.3216, 0.96", "20.4062, -175.371, -28.9815, 0.44", "20.7551, -175.961, -28.7498, 0.59", "20.7798, -175.997, -28.7314, 0.59", "21.4051, -176.858, -28.2943, 0.81", "21.6138, -177.158, -28.1426, 0.96", "22.4597, -178.437, -27.516, 0.52", "22.638, -178.741, -27.3776, 0.74", "23.1772, -179.787, -26.939, 0.52", "23.4771, -180.467, -26.7299, 0.74", "23.712, -181.088, -26.5834, 0.44", "23.9023, -181.631, -26.4342, 0.29", "24.0206, -181.976, -26.3159, 0.37", "24.2272, -182.485, -26.0373, 0.59", "24.5224, -183.095, -25.6278, 0.59", "25.0995, -184.069, -24.901, 0.81", "25.8473, -185.071, -24.114, 0.44", "26.7048, -185.99, -23.3507, 0.88", "27.7986, -186.949, -22.5185, 0.74", "28.3109, -187.284, -22.2223, 0.29", "29.1592, -187.674, -21.9044, 0.37", "30.0004, -187.785, -22.005, 0.37", "30.6215, -187.714, -22.3024, 0.66", "30.6673, -187.703, -22.3326, 0.66", "31.3372, -187.477, -22.8905, 0.29", "31.3844, -187.459, -22.9289, 0.29", "32.1514, -187.15, -23.4858, 0.15", "32.8492, -186.814, -24.0533, 0.15", "36.9015, -192.078, -20.6145, 0.15", "40.3537, -197.476, -16.7683, 0.15", "44.2323, -203.322, -14.3176, 0.15", "49.7018, -207.838, -11.8016, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-17.1703, -331.66, -46.8168, 1.18", "-16.5442, -332.556, -47.062, 1.18", "-15.8738, -333.447, -47.3077, 0.96", "-15.5858, -333.82, -47.4218, 1.47", "-15.244, -334.266, -47.572, 1.84", "-14.829, -334.806, -47.7652, 1.33", "-14.2723, -335.552, -48.0508, 0.74", "-14.2438, -335.594, -48.0703, 0.74", "-13.879, -336.132, -48.3416, 0.81", "-13.5972, -336.564, -48.5802, 0.44", "-13.5744, -336.605, -48.6064, 0.44", "-13.2753, -337.309, -49.072, 0.29", "-13.0587, -337.942, -49.5336, 0.44", "-12.9331, -338.337, -49.8275, 0.81", "-12.7929, -338.707, -50.1108, 0.81", "-12.4453, -339.402, -50.6738, 0.37", "-12.4171, -339.444, -50.7078, 0.37", "-12.0578, -339.904, -51.054, 0.81", "-11.6621, -340.382, -51.372, 1.11", "-11.1013, -341.08, -51.7558, 1.11", "-10.4049, -342.016, -52.1612, 0.29", "-9.90632, -342.767, -52.3956, 0.29", "-9.58622, -343.33, -52.5073, 0.66", "-9.25832, -344.061, -52.5653, 0.88", "-9.03845, -344.697, -52.5627, 1.03", "-8.92835, -345.242, -52.5129, 1.03", "-8.86056, -345.894, -52.3829, 0.74", "-8.8101, -346.813, -52.1378, 0.22", "-8.76913, -347.402, -51.9447, 0.74", "-8.76311, -347.457, -51.9226, 0.74", "-8.68511, -347.987, -51.6946, 0.74", "-8.67869, -348.035, -51.6725, 0.74", "-8.61329, -348.661, -51.401, 0.29", "-8.57745, -349.11, -51.2494, 0.29", "-8.52294, -349.692, -51.1021, 1.03", "-8.4898, -350.288, -51.0231, 1.4", "-8.47825, -350.955, -50.9984, 0.52", "-8.50083, -351.381, -51.001, 0.29", "-8.65027, -352.077, -51.0613, 0.37", "-8.82516, -352.51, -51.141, 0.66", "-9.23382, -353.177, -51.3621, 0.37", "-9.49136, -353.476, -51.5267, 0.96", "-9.77078, -353.766, -51.724, 0.96", "-10.5289, -354.486, -52.2623, 0.37", "-11.2733, -355.155, -52.8191, 0.74", "-12.0735, -355.875, -53.4752, 1.25", "-13.4696, -357.162, -54.7915, 0.29", "-13.9374, -357.593, -55.2678, 0.29", "-13.9718, -357.625, -55.3064, 0.29", "-14.4182, -358.079, -55.8864, 0.88", "-14.6049, -358.29, -56.1725, 1.18", "-15.0481, -358.897, -57.0571, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-17.1703, -331.66, -46.8168, 0.44", "-16.4741, -332.354, -47.1125, 0.44", "-15.6259, -333.22, -47.4479, 0.44", "-15.5777, -333.274, -47.4655, 0.44", "-15.243, -333.654, -47.582, 0.29", "-14.8289, -334.109, -47.722, 0.81", "-14.3482, -334.61, -47.8818, 1.11", "-14.3103, -334.651, -47.8914, 1.11", "-13.7775, -335.252, -48.0375, 0.44", "-13.7374, -335.299, -48.0497, 0.44", "-13.2565, -335.903, -48.2142, 0.37", "-12.9316, -336.35, -48.3271, 0.37", "-12.4234, -337.126, -48.5081, 0.29", "-12.1358, -337.574, -48.6206, 0.74", "-11.9675, -337.834, -48.6913, 0.81", "-11.8959, -337.946, -48.7288, 0.81", "-11.4927, -338.581, -48.9725, 0.44", "-11.1287, -339.131, -49.2101, 0.29", "-10.7061, -339.702, -49.4928, 0.52", "-10.4561, -340.009, -49.66, 0.52", "-9.80556, -340.796, -50.13, 0.29", "-9.3574, -341.356, -50.5049, 0.59", "-9.32547, -341.402, -50.5398, 0.59", "-9.15181, -341.71, -50.7667, 0.59", "-9.12861, -341.757, -50.8012, 0.59", "-8.73769, -342.69, -51.472, 0.81", "-8.55232, -343.221, -51.8497, 1.03", "-8.33392, -343.99, -52.422, 0.59", "-8.11814, -344.833, -53.0521, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-78.1318, -117.664, 36.1832, 0.37", "-81.6339, -123.794, 40.137, 0.37", "-87.0605, -128.778, 43.6684, 0.37", "-93.6042, -132.66, 46.8077, 0.37", "-99.0442, -137.291, 50.8198, 0.37", "-104.41, -141.759, 55.1264, 0.37", "-109.328, -147.218, 58.6274, 0.37", "-113.329, -153.27, 62.219, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-78.1318, -117.664, 36.1832, 0.29", "-82.8017, -126.675, 41.7517, 0.37", "-86.446, -136.532, 46.4237, 0.37", "-90.1738, -146.761, 49.9938, 0.37", "-93.9989, -156.382, 55.0528, 0.37", "-99.5748, -165.82, 58.6133, 0.37", "-104.516, -174.953, 63.7003, 0.37", "-108.84, -183.318, 70.5328, 0.37", "-113.283, -191.446, 77.6025, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "40.259, 146.544, 46.8173, 0.29", "41.3811, 156.007, 49.3269, 0.29", "41.8972, 165.124, 53.1931, 0.29", "41.7866, 174.483, 56.3892, 0.29", "42.1134, 183.573, 60.3512, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "40.259, 146.544, 46.8173, 0.44", "41.773, 156.311, 48.7263, 0.29", "42.5208, 166.284, 49.6507, 0.29", "42.241, 176.155, 51.7696, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-178.225, -260.456, 45.3333, 0.29", "-187.445, -268.247, 45.5381, 0.29", "-197.907, -274.452, 45.7273, 0.29", "-208.819, -279.793, 44.7152, 0.29", "-218.859, -286.52, 46.0561, 0.29", "-228.781, -293.416, 47.3185, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-178.225, -260.456, 45.3333, 0.44", "-183.045, -265.566, 44.5458, 0.29", "-187.64, -270.775, 43.3323, 0.29", "-191.407, -276.486, 41.8075, 0.29", "-195.246, -282.284, 40.8635, 0.29", "-198.82, -288.288, 40.2877, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-161.58, -213.758, 77.8109, 0.22", "-160.759, -213.366, 77.9189, 0.22", "-160.39, -213.192, 77.9558, 0.52", "-160.128, -213.074, 77.9627, 0.74", "-159.309, -212.732, 77.9364, 0.37", "-158.403, -212.357, 77.8641, 0.37", "-158.068, -212.218, 77.8374, 0.37", "-157.928, -212.163, 77.8165, 0.37", "-157.26, -211.926, 77.705, 0.37", "-156.953, -211.825, 77.6378, 0.88", "-156.525, -211.682, 77.467, 0.88", "-149.799, -209.943, 77.4972, 0.88", "-143.584, -206.962, 77.2554, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-161.58, -213.758, 77.8109, 0.44", "-161.529, -213.086, 77.9498, 0.44", "-161.453, -212.438, 78.0736, 0.37", "-161.447, -212.409, 78.0799, 0.37", "-161.347, -211.9, 78.2096, 0.37", "-161.337, -211.849, 78.2266, 0.37", "-161.218, -211.246, 78.4572, 0.37", "-161.21, -211.215, 78.4723, 0.37", "-161.123, -210.838, 78.6899, 0.29", "-161.052, -210.44, 78.9382, 0.29", "-161.007, -210.076, 79.1853, 0.29", "-161.003, -209.989, 79.2478, 0.66", "-161.007, -209.924, 79.2955, 0.66", "-161.035, -209.696, 79.4431, 0.66", "-161.112, -209.321, 79.6545, 0.29", "-161.156, -209.16, 79.7401, 0.44", "-161.176, -209.1, 79.7717, 0.44", "-161.287, -208.816, 79.9385, 0.37", "-161.419, -208.507, 80.1353, 0.37", "-161.431, -208.48, 80.1538, 0.37", "-161.665, -207.99, 80.5168, 0.29", "-161.8, -207.697, 80.7379, 0.44", "-161.836, -207.612, 80.8053, 0.44", "-161.938, -207.341, 81.0327, 0.44", "-162.03, -207.075, 81.2579, 0.29", "-162.047, -207.018, 81.3059, 0.29", "-162.086, -206.851, 81.4425, 0.44", "-162.125, -206.666, 81.5935, 0.44", "-162.131, -206.634, 81.6185, 0.44", "-162.166, -206.409, 81.7851, 0.44", "-162.183, -206.165, 81.9564, 0.44", "-162.182, -206.135, 81.9749, 0.44", "-162.16, -205.851, 82.1259, 0.37", "-162.148, -205.711, 82.1938, 0.37", "-162.115, -205.344, 82.3521, 0.44", "-162.081, -205.016, 82.4799, 0.44", "-162.059, -204.647, 82.5847, 0.44", "-162.044, -204.121, 82.7033, 0.44", "-162.048, -203.632, 82.7989, 0.74", "-162.077, -202.973, 82.9121, 0.81", "-162.1, -202.699, 82.9512, 0.74", "-162.229, -201.728, 83.0572, 0.29", "-162.234, -201.698, 83.0598, 0.29", "-162.273, -201.475, 83.0728, 0.29", "-162.283, -201.4, 83.0778, 0.29", "-162.293, -201.219, 83.1051, 0.44", "-162.292, -201.185, 83.1117, 0.44", "-162.27, -200.946, 83.1721, 0.44", "-162.227, -200.557, 83.2584, 0.88", "-162.153, -200.009, 83.3638, 0.52", "-162.091, -199.582, 83.443, 0.52", "-162.045, -199.235, 83.501, 0.44", "-162.001, -198.853, 83.5651, 0.29", "-161.974, -198.566, 83.6126, 0.59", "-161.966, -198.455, 83.6323, 0.59", "-161.955, -198.175, 83.6888, 0.59", "-161.945, -197.897, 83.7466, 0.29", "-161.927, -197.519, 83.8338, 0.29", "-161.924, -197.48, 83.8424, 0.29", "-161.904, -197.194, 83.9013, 0.59", "-161.901, -197.149, 83.9101, 0.59", "-161.872, -196.83, 83.9755, 0.66", "-161.835, -196.479, 84.0511, 0.66", "-161.793, -196.106, 84.1285, 0.29", "-161.73, -195.584, 84.2356, 0.29", "-161.725, -195.545, 84.2431, 0.29", "-161.607, -194.891, 84.3856, 0.29", "-161.592, -194.817, 84.4039, 0.29", "-161.501, -194.408, 84.5221, 0.52", "-161.485, -194.337, 84.546, 0.52", "-161.385, -193.922, 84.706, 0.81", "-161.303, -193.527, 84.8688, 0.52", "-161.245, -193.206, 85.0116, 0.52", "-161.204, -192.907, 85.1439, 0.74", "-161.172, -192.548, 85.2965, 0.88", "-161.162, -192.41, 85.3423, 0.88", "-161.13, -191.955, 85.4201, 0.88", "-161.126, -191.92, 85.4207, 0.88", "-161.087, -191.669, 85.4013, 0.66", "-160.996, -191.29, 85.3658, 0.44", "-160.818, -190.738, 85.3336, 0.37", "-160.622, -190.204, 85.3324, 0.29", "-160.477, -189.846, 85.344, 0.29", "-160.463, -189.814, 85.347, 0.29", "-160.216, -189.223, 85.4484, 0.29", "-159.914, -188.492, 85.6275, 0.29", "-159.754, -188.069, 85.7694, 0.37", "-159.732, -188.001, 85.7953, 0.37", "-159.636, -187.641, 85.9284, 0.37", "-159.542, -187.283, 86.0551, 0.37", "-159.526, -187.217, 86.0766, 0.37", "-159.409, -186.722, 86.2572, 0.52", "-159.296, -186.22, 86.4563, 0.44", "-159.181, -185.694, 86.6768, 1.11", "-159.02, -184.993, 86.9721, 0.29", "-159.011, -184.957, 86.9883, 0.29", "-158.848, -184.428, 87.2299, 0.29", "-158.746, -184.129, 87.3634, 0.29", "-158.737, -184.103, 87.3746, 0.29", "-158.546, -183.567, 87.5893, 0.37", "-158.271, -182.76, 87.8818, 0.37", "-158.067, -182.185, 88.0726, 0.37", "-157.892, -181.723, 88.2089, 0.81", "-157.776, -181.417, 88.2936, 1.03", "-157.59, -180.897, 88.4306, 0.29", "-157.475, -180.541, 88.5183, 0.29", "-157.411, -180.296, 88.5683, 0.44", "-157.403, -180.263, 88.5758, 0.44", "-157.369, -180.087, 88.6223, 0.44", "-157.29, -179.654, 88.7678, 0.29", "-157.279, -179.59, 88.7932, 0.29", "-157.189, -179.061, 89.0262, 0.29", "-157.184, -179.029, 89.0413, 0.29", "-157.11, -178.457, 89.328, 0.29", "-157.069, -178.122, 89.4987, 0.66", "-157.037, -177.881, 89.6198, 0.74", "-157.026, -177.818, 89.6482, 0.74", "-156.9, -177.225, 89.8768, 0.29", "-156.885, -177.163, 89.8965, 0.29", "-156.795, -176.784, 89.9902, 0.29", "-156.735, -176.516, 90.0453, 0.74", "-156.63, -176.09, 90.1208, 0.22", "-156.464, -175.475, 90.2121, 0.22", "-156.283, -174.915, 90.267, 1.03", "-156.088, -174.35, 90.3099, 0.29", "-156.05, -174.244, 90.3163, 0.29", "-155.834, -173.671, 90.3447, 0.29", "-155.792, -173.567, 90.3485, 0.29", "-155.415, -172.674, 90.3652, 0.29", "-155.377, -172.585, 90.3677, 0.29", "-155.12, -171.961, 90.3786, 0.29", "-155.106, -171.923, 90.3793, 0.29", "-154.96, -171.425, 90.3932, 0.44", "-154.952, -171.391, 90.3944, 0.44", "-154.882, -170.966, 90.4143, 0.44", "-154.815, -170.525, 90.4334, 0.74", "-154.81, -170.489, 90.4352, 0.74", "-154.788, -170.282, 90.449, 1.03", "-154.752, -169.902, 90.4895, 0.59", "-154.694, -169.519, 90.5899, 0.29", "-154.679, -169.451, 90.6192, 0.29", "-154.617, -169.226, 90.7558, 0.29", "-154.608, -169.193, 90.778, 0.29", "-154.509, -168.856, 91.0312, 0.88", "-154.371, -168.365, 91.4014, 0.88", "-154.357, -168.309, 91.4412, 0.88", "-154.298, -168.071, 91.598, 0.66", "-154.223, -167.837, 91.7486, 0.29", "-154.133, -167.594, 91.8973, 0.29", "-153.945, -167.123, 92.1641, 0.29", "-153.846, -166.882, 92.2845, 0.44", "-153.831, -166.849, 92.3019, 0.44", "-153.558, -166.383, 92.5963, 0.37", "-153.37, -166.074, 92.8154, 0.29", "-153.356, -166.048, 92.8349, 0.29", "-153.249, -165.834, 92.9977, 0.74", "-153.24, -165.811, 93.0144, 0.74", "-153.09, -165.21, 93.4408, 0.29", "-153.012, -164.645, 93.8116, 0.29", "-152.953, -164.17, 94.1246, 0.22", "-152.943, -164.079, 94.1859, 0.22", "-152.884, -163.45, 94.6008, 0.29", "-152.881, -163.416, 94.6224, 0.29", "-152.854, -162.859, 94.952, 0.29", "-152.814, -162.393, 95.244, 0.29", "-152.755, -161.922, 95.5559, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-231.695, -263.626, 115.265, 0.37", "-232.03, -264.006, 114.98, 0.37", "-232.789, -264.809, 114.449, 0.37", "-233.423, -265.501, 114.043, 0.29", "-233.813, -265.908, 113.8, 0.44", "-234.196, -266.315, 113.565, 0.44", "-234.941, -267.126, 113.116, 0.29", "-235.222, -267.425, 112.968, 0.37", "-235.625, -267.857, 112.8, 0.37", "-236.478, -268.711, 112.43, 0.37", "-236.88, -269.104, 112.243, 0.37", "-237.159, -269.382, 112.1, 0.66", "-237.196, -269.42, 112.081, 0.66", "-237.465, -269.668, 111.959, 0.74", "-238.202, -270.272, 111.666, 0.37", "-238.662, -270.626, 111.53, 0.37", "-238.717, -270.66, 111.514, 0.37", "-239.147, -270.898, 111.387, 0.37", "-243.467, -277.202, 108.95, 0.37", "-246.441, -284.252, 106.706, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-231.695, -263.626, 115.265, 0.29", "-232.297, -263.554, 116.012, 0.29", "-232.8, -263.545, 116.774, 0.52", "-233.516, -263.601, 117.848, 0.44", "-233.776, -263.66, 118.212, 0.29", "-234.288, -263.819, 118.861, 0.29", "-234.702, -263.964, 119.404, 0.44", "-235.67, -264.37, 120.75, 0.29", "-236.083, -264.537, 121.298, 0.29", "-236.686, -264.794, 122.081, 0.29", "-237.237, -265.046, 122.861, 0.29", "-237.804, -265.303, 123.705, 0.29", "-237.832, -265.316, 123.746, 0.29", "-238.334, -265.49, 124.461, 0.44", "-239.015, -265.65, 125.582, 0.44", "-239.076, -265.653, 125.699, 0.44", "-239.398, -265.667, 126.368, 0.66", "-239.792, -265.729, 126.996, 0.66", "-244.372, -266.854, 134.058, 0.66", "-247.215, -268.053, 141.97, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "36.3718, -226.359, -80.0755, 0.52", "35.9573, -227.086, -79.5367, 0.52", "35.6289, -227.676, -79.1343, 0.29", "35.273, -228.346, -78.7351, 0.22", "35.102, -228.702, -78.5261, 0.52", "34.9544, -229.026, -78.3354, 0.74", "34.7705, -229.444, -78.0926, 0.81", "34.597, -229.832, -77.8679, 0.66", "34.3388, -230.393, -77.5638, 0.29", "34.0715, -231.096, -77.2267, 0.29", "34.0555, -231.142, -77.206, 0.29", "34.0066, -231.29, -77.1427, 0.66", "33.8661, -231.714, -76.9588, 0.81", "33.6838, -232.237, -76.7281, 0.22", "33.5161, -232.69, -76.5378, 0.22", "33.4251, -232.914, -76.4686, 0.52", "33.3146, -233.195, -76.3867, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "36.3718, -226.359, -80.0755, 1.18", "36.8823, -226.986, -80.4297, 1.18", "37.1023, -227.285, -80.5635, 1.4", "37.5181, -227.868, -80.727, 0.37", "37.8939, -228.425, -80.7461, 0.44", "38.18, -228.907, -80.6776, 0.66", "38.5704, -229.61, -80.4547, 0.66", "38.7472, -229.979, -80.2856, 0.66", "39.1187, -230.827, -79.8498, 0.59", "39.5726, -231.932, -79.2487, 0.37", "39.8378, -232.587, -78.8928, 1.55", "40.3209, -233.753, -78.3294, 0.37", "40.6226, -234.483, -78.0625, 0.44", "40.935, -235.204, -77.9051, 0.44", "41.1065, -235.605, -77.8987, 0.88", "41.2617, -235.971, -77.9605, 1.03", "41.5472, -236.686, -78.1274, 0.37", "41.7293, -237.247, -78.2793, 0.37", "41.8147, -237.529, -78.3431, 0.88", "41.9248, -237.913, -78.4185, 0.96", "42.0915, -238.555, -78.519, 0.96", "42.2926, -239.351, -78.6355, 0.29", "42.5601, -240.155, -78.7301, 0.29", "42.6772, -240.441, -78.758, 0.66", "42.8482, -240.764, -78.771, 0.88", "42.8781, -240.811, -78.7707, 0.88", "43.1591, -241.194, -78.7525, 0.74", "43.8911, -242.153, -78.6329, 0.29", "44.2619, -242.667, -78.5397, 0.29", "44.741, -243.354, -78.4608, 1.11", "44.9783, -243.688, -78.4622, 1.11", "45.0105, -243.733, -78.4684, 1.11", "45.2733, -244.117, -78.5718, 1.11", "45.9035, -244.989, -78.9071, 0.29", "46.4551, -245.719, -79.2164, 0.29", "46.934, -246.357, -79.4856, 0.29", "47.2038, -246.715, -79.6226, 0.81", "47.5426, -247.154, -79.7555, 0.96", "48.2995, -247.991, -79.9152, 0.96", "48.78, -248.487, -79.9475, 0.37", "49.2657, -248.983, -79.9207, 0.88", "49.652, -249.39, -79.8696, 0.88", "50.3943, -250.207, -79.7429, 0.59", "51.3273, -251.326, -79.5693, 0.44", "51.6532, -251.777, -79.5202, 0.59", "51.8836, -252.148, -79.488, 0.59", "52.176, -252.748, -79.4616, 0.88", "52.38, -253.296, -79.4794, 0.29", "52.5561, -253.942, -79.5428, 0.29", "52.7289, -254.612, -79.6251, 0.37", "52.9555, -255.337, -79.7114, 0.96", "53.1388, -255.859, -79.7689, 1.33", "53.5092, -256.717, -79.8315, 0.37", "53.8038, -257.33, -79.8423, 0.52", "54.2087, -258.125, -79.8104, 0.44", "54.4313, -258.543, -79.7791, 0.29", "54.6818, -258.993, -79.745, 0.88", "55.1162, -259.794, -79.6746, 0.74", "55.4236, -260.315, -79.6243, 0.29", "55.7276, -260.794, -79.6146, 0.59", "56.0526, -261.311, -79.6244, 0.74", "56.3382, -261.726, -79.6213, 0.88", "56.3735, -261.778, -79.6192, 0.88", "57.0367, -262.836, -79.5205, 0.52", "57.2792, -263.261, -79.4279, 0.52", "57.6142, -263.91, -79.1832, 0.52", "57.9322, -264.588, -78.8875, 0.96", "58.1131, -264.939, -78.7114, 1.33", "58.3971, -265.435, -78.4586, 0.59", "58.7604, -266.065, -78.1466, 0.37", "59.3214, -266.957, -77.7485, 0.44", "59.6566, -267.481, -77.5691, 0.66", "60.2422, -268.444, -77.3567, 0.96", "60.8341, -269.415, -77.2187, 0.44", "61.1269, -269.91, -77.1831, 1.03", "61.4573, -270.498, -77.1993, 1.18", "61.8322, -271.313, -77.2976, 0.29", "62.0988, -272.1, -77.446, 0.29", "62.1239, -272.219, -77.4772, 0.88", "62.1617, -272.507, -77.5549, 1.25", "62.2439, -273.103, -77.6859, 0.66", "62.3371, -273.76, -77.7908, 0.59", "62.4752, -274.675, -77.8899, 0.52", "62.5522, -275.221, -77.9227, 0.52", "62.6664, -276.006, -77.9499, 0.52", "62.8015, -276.745, -77.9464, 0.37", "62.9104, -277.431, -77.9355, 0.29", "62.9508, -277.703, -77.9383, 0.74", "62.9725, -277.864, -77.9479, 0.74", "63.0152, -278.311, -78.005, 0.74", "63.056, -279.029, -78.1523, 0.81", "63.0408, -280.139, -78.4341, 0.81", "63.0273, -280.858, -78.6504, 0.81", "63.0231, -281.65, -78.9154, 0.81", "63.0236, -281.702, -78.9334, 0.81", "63.0409, -282.391, -79.1882, 0.59", "63.0805, -283.247, -79.5215, 0.44", "63.1566, -283.789, -79.7247, 0.44", "63.2748, -284.406, -79.9621, 0.29", "63.3985, -284.926, -80.1499, 0.74", "63.4748, -285.239, -80.2455, 0.96", "63.4898, -285.29, -80.2553, 0.96", "63.6572, -285.832, -80.2931, 0.52", "63.9113, -286.636, -80.248, 0.52", "64.17, -287.39, -80.149, 0.52", "64.3563, -287.887, -80.0774, 0.59", "64.7037, -288.736, -79.9741, 0.74", "64.9096, -289.198, -79.9356, 0.52", "65.294, -290.043, -79.9032, 0.37", "65.3174, -290.094, -79.9041, 0.37", "65.6738, -290.849, -80.0111, 0.44", "65.9218, -291.382, -80.164, 0.37", "66.0715, -291.752, -80.3258, 0.74", "66.2754, -292.317, -80.596, 0.29", "66.2863, -292.358, -80.6149, 0.29", "66.3516, -292.631, -80.7294, 0.44", "66.3596, -292.674, -80.7434, 0.44", "66.4132, -293.064, -80.839, 0.44", "66.522, -293.835, -80.9953, 0.22", "66.6328, -294.375, -81.0965, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-23.541, -214.377, -108.631, 0.29", "-24.85, -213.835, -109.439, 0.29", "-25.02, -213.767, -109.529, 0.29", "-25.8223, -213.426, -109.902, 0.29", "-27.7347, -212.534, -110.692, 0.29", "-28.4219, -212.176, -110.994, 0.59", "-30.3109, -211.066, -111.83, 0.59", "-31.3229, -210.355, -112.284, 0.37", "-31.8475, -209.922, -112.541, 0.66", "-32.3873, -209.428, -112.833, 0.88", "-34.2024, -207.615, -113.883, 0.22", "-34.8632, -206.906, -114.303, 0.44", "-35.3965, -206.266, -114.664, 0.59", "-36.2806, -205.166, -115.391, 0.29", "-37.067, -204.213, -116.097, 0.74", "-38.0157, -203.115, -116.998, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-23.541, -214.377, -108.631, 0.52", "-24.935, -216.026, -110.505, 0.52", "-24.9716, -216.075, -110.544, 0.52", "-25.2834, -216.538, -110.83, 0.52", "-26.2554, -218.177, -111.679, 1.33", "-26.6087, -218.815, -111.978, 1.77", "-27.0591, -219.761, -112.372, 0.66", "-27.5157, -220.951, -112.702, 0.66", "-28.0606, -222.545, -113.191, 0.66", "-28.3009, -223.413, -113.52, 0.88", "-28.3371, -223.637, -113.62, 0.88", "-28.4596, -225.013, -114.323, 0.88", "-28.4618, -225.066, -114.354, 0.88", "-28.4093, -226.711, -115.367, 0.66", "-28.3053, -227.978, -116.251, 0.44", "-28.2441, -228.739, -116.847, 0.96", "-28.1624, -229.813, -117.753, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-113.283, -191.446, 77.6025, 0.29", "-110.883, -198.664, 83.5612, 0.29", "-108.636, -205.466, 90.085, 0.29", "-106.762, -212.448, 96.5164, 0.29", "-107.514, -220.381, 101.813, 0.29", "-107.319, -228.425, 107.003, 0.29", "-106.702, -236.414, 112.263, 0.29", "-105.939, -244.182, 117.864, 0.29", "-105.331, -252.275, 122.945, 0.29", "-104.755, -260.612, 127.567, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-113.283, -191.446, 77.6025, 0.44", "-121.031, -199.863, 77.4179, 0.29", "-130.1, -206.989, 77.2323, 0.29", "-138.649, -214.66, 76.7747, 0.29", "-146.383, -222.808, 74.5851, 0.29", "-153.425, -230.869, 70.5508, 0.29", "-160.118, -238.497, 65.2199, 0.29", "-167.675, -244.972, 59.3741, 0.29", "-176.263, -250.785, 54.2081, 0.29", "-183.118, -258.532, 49.2831, 0.29", "-189.233, -267.574, 46.1169, 0.29", "-194.958, -277.293, 45.1009, 0.29", "-201.303, -286.578, 46.9162, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "42.1134, 183.573, 60.3512, 0.29", "42.729, 191.779, 61.9797, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "42.1134, 183.573, 60.3512, 0.44", "42.4871, 191.962, 63.4168, 0.29", "42.8897, 200.095, 67.1806, 0.29", "42.9321, 208.334, 70.7205, 0.29", "42.5224, 216.17, 75.1731, 0.29", "41.0794, 224.5, 78.2234, 0.29", "39.0799, 232.464, 81.9976, 0.29", "36.6553, 240.894, 83.941, 0.29", "33.546, 249.088, 86.0756, 0.29", "28.9596, 256.411, 88.9765, 0.29", "25.3584, 263.96, 92.5431, 0.29", "23.0348, 270.979, 97.8858, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-152.755, -161.922, 95.5559, 0.22", "-153.627, -162.021, 96.2192, 0.22", "-155.069, -162.186, 97.316, 0.22", "-155.7, -162.258, 97.7961, 0.52", "-156.087, -162.303, 98.091, 0.74", "-163.745, -161.743, 105.394, 0.74", "-170.873, -161.805, 113.244, 0.74", "-176.779, -160.653, 121.946, 0.74", "-181.738, -160.934, 131.313, 0.74", "-185.86, -159.495, 140.935, 0.74", "-187.908, -158.349, 151.241, 0.74", "-187.882, -156.752, 161.672, 0.74", "-187.584, -154.312, 171.903, 0.74", "-187.923, -151.082, 181.878, 0.74", "-187.209, -148.865, 192.148, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-152.755, -161.922, 95.5559, 0.44", "-152.522, -161.017, 95.8731, 0.44", "-152.37, -160.356, 96.1013, 0.66", "-152.346, -160.233, 96.1443, 0.66", "-152.277, -159.861, 96.2738, 0.59", "-152.115, -159.007, 96.5592, 0.29", "-151.835, -157.635, 96.983, 0.29", "-151.803, -157.492, 97.031, 0.29", "-151.555, -156.508, 97.3918, 0.52", "-151.534, -156.434, 97.4201, 0.52", "-151.238, -155.435, 97.8146, 0.52", "-150.841, -154.227, 98.2898, 1.03", "-150.284, -152.758, 98.8575, 0.29", "-150.258, -152.694, 98.8816, 0.29", "-149.851, -151.853, 99.1971, 0.29", "-149.529, -151.265, 99.3919, 0.52", "-149.167, -150.669, 99.5655, 0.52", "-148.748, -150.017, 99.7101, 0.96", "-148.716, -149.967, 99.7178, 0.96", "-147.762, -148.46, 99.9503, 0.29", "-146.979, -147.205, 100.147, 0.29", "-146.938, -147.134, 100.16, 0.29", "-146.356, -145.961, 100.407, 0.29", "-146.204, -145.562, 100.505, 0.59", "-146.148, -145.361, 100.562, 0.59", "-146.077, -144.816, 100.753, 0.52", "-146.04, -144.244, 100.987, 0.66", "-146.006, -143.64, 101.238, 0.66", "-145.971, -142.707, 101.641, 0.29", "-145.956, -142.569, 101.706, 0.29", "-145.856, -141.98, 101.998, 0.29", "-145.721, -141.543, 102.264, 0.52", "-145.698, -141.489, 102.302, 0.52", "-145.292, -140.721, 102.845, 0.37", "-144.74, -139.818, 103.502, 0.59", "-144.449, -139.373, 103.81, 0.96", "-143.598, -138.133, 104.642, 0.37", "-143.543, -138.061, 104.69, 0.37", "-142.865, -137.233, 105.219, 0.37", "-142.82, -137.183, 105.249, 0.37", "-142.319, -136.588, 105.552, 0.37", "-142.2, -136.412, 105.626, 0.37", "-141.583, -135.06, 106.095, 0.59", "-141.486, -134.806, 106.185, 0.88", "-141.464, -134.741, 106.207, 0.88", "-141.303, -134.202, 106.372, 0.88", "-140.755, -132.225, 106.91, 0.29", "-140.319, -130.467, 107.265, 0.29", "-140.262, -130.212, 107.302, 0.29", "-139.77, -128.155, 107.633, 0.29", "-139.704, -127.871, 107.688, 0.29", "-139.399, -126.523, 107.983, 0.37", "-139.044, -124.87, 108.419, 0.37", "-138.861, -124.082, 108.709, 0.37", "-138.57, -122.905, 109.263, 0.29", "-138.307, -121.778, 109.926, 0.29", "-138.277, -121.653, 110.011, 0.29", "-138.142, -121.128, 110.501, 0.29", "-137.778, -120.008, 111.927, 1.18", "-137.7, -119.794, 112.213, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-28.1624, -229.813, -117.753, 0.88", "-28.7881, -230.984, -118.025, 0.88", "-29.18, -231.82, -118.192, 1.47", "-29.5007, -232.64, -118.352, 1.69", "-30.0206, -234.318, -118.681, 0.59", "-30.0359, -234.374, -118.694, 0.59", "-30.2777, -235.398, -118.951, 0.29", "-30.4083, -236.202, -119.167, 0.44", "-30.5191, -236.899, -119.432, 0.66", "-30.6725, -237.654, -119.85, 1.11", "-30.8172, -238.385, -120.317, 1.47", "-30.9064, -238.758, -120.564, 1.47", "-30.9229, -238.818, -120.604, 1.47", "-31.4341, -240.583, -121.667, 1.11", "-31.9062, -242.2, -122.441, 0.59", "-32.1049, -243.038, -122.749, 0.81", "-32.2323, -243.814, -122.967, 1.11", "-32.2972, -244.61, -123.148, 1.25", "-32.302, -245.778, -123.344, 0.66", "-32.1887, -247.105, -123.449, 0.52", "-32.0193, -248.369, -123.511, 1.03", "-31.9412, -248.989, -123.561, 1.25", "-31.7764, -250.292, -123.718, 0.66", "-31.7394, -250.682, -123.786, 0.44", "-31.696, -251.187, -123.912, 0.96", "-31.6655, -251.627, -124.049, 1.25", "-31.6291, -252.764, -124.43, 1.11", "-31.629, -253.666, -124.752, 0.96", "-31.6107, -254.647, -125.083, 0.66", "-31.5668, -255.678, -125.389, 0.59", "-31.5622, -255.748, -125.407, 0.59", "-31.5016, -256.545, -125.555, 0.59", "-31.4419, -257.625, -125.598, 0.52", "-31.455, -258.691, -125.472, 0.81", "-31.5316, -259.488, -125.241, 1.03", "-31.5524, -259.591, -125.199, 1.03", "-31.734, -260.34, -124.847, 1.03", "-32.0449, -261.321, -124.284, 0.52", "-32.2512, -261.857, -123.922, 1.11", "-32.5519, -262.431, -123.54, 1.33", "-32.5827, -262.487, -123.5, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-28.1624, -229.813, -117.753, 0.52", "-27.9698, -229.831, -117.833, 0.52", "-27.6075, -229.862, -117.972, 0.29", "-27.3946, -229.884, -118.055, 0.59", "-27.2629, -229.898, -118.101, 0.96", "-26.859, -229.94, -118.24, 0.22", "-26.5849, -229.968, -118.336, 0.59", "-26.5703, -229.969, -118.341, 0.59", "-26.3765, -229.988, -118.419, 0.52", "-26.0852, -230.033, -118.534, 0.37", "-25.9621, -230.061, -118.586, 0.81", "-25.8697, -230.09, -118.635, 0.96", "-25.6447, -230.173, -118.77, 0.37", "-25.4617, -230.252, -118.914, 0.37", "-25.313, -230.333, -119.076, 0.44", "-25.2432, -230.382, -119.185, 0.44", "-25.1509, -230.45, -119.334, 0.22", "-25.0866, -230.494, -119.441, 0.44", "-24.8538, -230.637, -119.843, 0.37", "-24.7624, -230.686, -120.002, 0.52", "-24.6606, -230.734, -120.181, 0.59", "-24.5377, -230.78, -120.375, 0.81", "-24.3997, -230.821, -120.567, 0.29", "-24.2641, -230.849, -120.725, 0.52", "-24.1825, -230.859, -120.802, 0.81", "-24.1025, -230.861, -120.882, 1.11", "-24.0702, -230.86, -120.918, 1.11", "-24.0108, -230.852, -120.991, 0.96", "-23.891, -230.825, -121.114, 0.59", "-23.6658, -230.755, -121.283, 0.29", "-23.5466, -230.72, -121.358, 0.52", "-23.4497, -230.692, -121.412, 0.66", "-23.4365, -230.689, -121.419, 0.66", "-23.0915, -230.624, -121.581, 0.52", "-22.8217, -230.583, -121.698, 0.74", "-22.5535, -230.548, -121.813, 0.22", "-22.482, -230.541, -121.847, 0.74", "-22.353, -230.536, -121.913, 0.81", "-22.0751, -230.545, -122.073, 0.22", "-21.9941, -230.558, -122.131, 0.66", "-21.9195, -230.577, -122.188, 0.74", "-21.7345, -230.637, -122.327, 0.22", "-21.5679, -230.702, -122.443, 0.66", "-21.5089, -230.728, -122.483, 0.81", "-21.4029, -230.787, -122.556, 0.52", "-21.3934, -230.793, -122.562, 0.52", "-21.2505, -230.885, -122.664, 0.22", "-21.0705, -231.015, -122.806, 0.74", "-20.9892, -231.084, -122.897, 0.81", "-20.9733, -231.098, -122.918, 0.81", "-20.905, -231.159, -123.029, 0.59", "-20.8561, -231.214, -123.153, 0.29", "-20.8208, -231.272, -123.299, 1.03", "-20.7844, -231.373, -123.534, 1.03", "-20.7789, -231.395, -123.578, 1.25", "-20.7578, -231.495, -123.74, 0.66", "-20.7203, -231.686, -123.996, 0.52", "-20.6903, -231.819, -124.144, 0.37", "-20.6641, -231.933, -124.248, 0.29", "-20.632, -232.055, -124.331, 0.29", "-20.5706, -232.276, -124.451, 0.29", "-20.5495, -232.354, -124.488, 0.81", "-20.5179, -232.463, -124.537, 1.03", "-20.5138, -232.475, -124.544, 1.03", "-20.4517, -232.643, -124.66, 0.59", "-20.3795, -232.794, -124.777, 0.44", "-20.2887, -232.961, -124.907, 0.88", "-20.2608, -233.008, -124.943, 1.25", "-20.2024, -233.089, -125.003, 1.55", "-20.1157, -233.189, -125.077, 0.29", "-19.9276, -233.333, -125.169, 0.29", "-19.7409, -233.449, -125.228, 0.29", "-19.7285, -233.457, -125.231, 0.29", "-19.5368, -233.572, -125.275, 1.47", "-19.373, -233.674, -125.312, 1.77", "-18.946, -233.94, -125.409, 0.37", "-18.7991, -234.031, -125.442, 0.22", "-18.6019, -234.15, -125.484, 0.29", "-18.5138, -234.208, -125.503, 0.52", "-18.4059, -234.291, -125.529, 0.66", "-18.395, -234.301, -125.532, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-187.209, -148.865, 192.148, 0.37", "-191.457, -147.591, 205.44, 0.37", "-197.142, -147.637, 218.284, 0.37", "-200.147, -147.482, 231.991, 0.37", "-204.077, -149.04, 245.4, 0.37", "-210.775, -152.486, 257.264, 0.37", "-215.593, -156.087, 269.968, 0.37", "-219.462, -161.124, 282.486, 0.37", "-220.211, -168.065, 294.616, 0.37", "-221.42, -177.767, 304.426, 0.37", "-223.68, -188.842, 312.214, 0.37", "-224.478, -200.228, 319.817, 0.37", "-225.181, -211.601, 327.451, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-187.209, -148.865, 192.148, 0.29", "-190.23, -148.174, 202.567, 0.37", "-193.939, -147.171, 212.735, 0.37", "-198.428, -146.931, 222.657, 0.37", "-200.45, -145.719, 233.243, 0.37", "-201.37, -145.3, 244.056, 0.37", "-202.951, -146.075, 254.807, 0.37", "-206.405, -145.217, 265.078, 0.37", "-211.551, -142.732, 274.293, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-137.7, -119.794, 112.213, 0.59", "-135.672, -119.058, 112.164, 0.59", "-135.581, -119.027, 112.162, 0.59", "-133.776, -118.258, 112.142, 0.29", "-132.866, -117.754, 112.107, 0.29", "-132.783, -117.703, 112.104, 0.29", "-131.056, -116.436, 111.951, 0.29", "-131.006, -116.387, 111.944, 0.29", "-129.706, -114.934, 111.689, 0.29", "-128.353, -113.25, 111.277, 0.29", "-128.246, -113.112, 111.236, 0.29", "-127.118, -111.677, 110.743, 0.74", "-126.15, -110.508, 110.305, 0.29", "-125.85, -110.209, 110.196, 0.29", "-124.298, -108.82, 109.644, 0.29", "-123.533, -108.219, 109.394, 0.29", "-122.231, -107.312, 109.015, 0.29", "-120.51, -106.365, 108.632, 0.29", "-118.968, -105.652, 108.357, 0.88", "-111.035, -97.0669, 108.25, 0.88", "-103.292, -88.6451, 110.52, 0.88", "-95.8217, -79.7855, 111.687, 0.88", "-87.9695, -71.1373, 111.8, 0.88", "-79.4249, -63.1276, 112.284, 0.88", "-71.6758, -54.4497, 113.151, 0.88", "-63.129, -46.4559, 113.797, 0.88", "-53.542, -39.5683, 113.693, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-137.7, -119.794, 112.213, 0.59", "-137.606, -119.015, 113.018, 0.59", "-137.474, -118.334, 113.734, 0.59", "-137.285, -117.685, 114.445, 0.37", "-137.01, -116.864, 115.348, 0.29", "-136.677, -116.112, 116.199, 0.29", "-136.651, -116.061, 116.259, 0.29", "-136.263, -115.428, 117.007, 0.29", "-135.9, -114.885, 117.676, 0.66", "-135.67, -114.53, 118.079, 0.81", "-135.211, -113.677, 118.912, 0.29", "-135.183, -113.621, 118.966, 0.29", "-134.853, -112.824, 119.64, 0.29", "-134.835, -112.767, 119.682, 0.29", "-134.587, -111.796, 120.266, 0.52", "-134.456, -111.099, 120.642, 0.74", "-134.45, -111.026, 120.679, 0.74", "-134.385, -110.378, 121.06, 0.74", "-134.378, -110.317, 121.099, 0.74", "-134.303, -109.454, 121.707, 0.29", "-134.245, -108.573, 122.386, 0.29", "-134.194, -107.399, 123.336, 0.29", "-134.142, -106.378, 124.132, 0.29", "-134.13, -106.262, 124.219, 0.29", "-133.942, -105.28, 124.845, 0.29", "-133.927, -105.219, 124.881, 0.29", "-133.594, -104.201, 125.353, 0.29", "-133.013, -102.643, 125.956, 0.29", "-132.254, -100.564, 126.674, 0.29", "-131.546, -98.6595, 127.306, 0.29", "-131.498, -98.5331, 127.351, 0.29", "-130.792, -96.6648, 128.059, 0.29", "-130.743, -96.5312, 128.113, 0.29", "-129.998, -94.379, 129.049, 0.29", "-129.975, -94.3074, 129.082, 0.29", "-129.47, -92.4053, 130.099, 0.29", "-129.455, -92.3357, 130.14, 0.29", "-129.306, -90.909, 131.067, 0.29", "-129.284, -90.5367, 131.303, 0.74", "-129.283, -90.4669, 131.347, 0.74", "-129.293, -89.9895, 131.631, 0.59", "-129.478, -88.7312, 132.278, 0.29", "-129.647, -87.9726, 132.692, 0.88", "-129.848, -87.5103, 132.986, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-32.5827, -262.487, -123.5, 0.52", "-32.6623, -263.497, -123.011, 0.52", "-32.7166, -264.303, -122.648, 0.37", "-32.7295, -265.08, -122.304, 0.29", "-32.7376, -265.672, -122.024, 0.66", "-32.7451, -266.188, -121.775, 0.66", "-32.7467, -266.259, -121.739, 0.66", "-32.7512, -266.743, -121.509, 0.59", "-32.785, -267.594, -121.093, 0.29", "-32.8217, -268.485, -120.676, 0.29", "-32.8349, -268.858, -120.516, 0.66", "-32.852, -269.469, -120.279, 0.96", "-32.8514, -269.978, -120.116, 1.18", "-32.8349, -271.037, -119.839, 0.29", "-32.822, -271.729, -119.7, 0.29", "-32.8062, -272.138, -119.625, 0.52", "-32.7895, -272.279, -119.582, 0.52", "-32.6951, -272.797, -119.332, 0.22", "-32.6034, -273.226, -119.033, 0.44", "-32.4887, -273.582, -118.689, 0.66", "-32.3532, -274.025, -118.211, 0.66", "-32.0724, -275.074, -117.051, 0.29", "-31.9996, -275.381, -116.725, 0.96", "-31.9248, -275.714, -116.4, 1.25", "-31.6402, -276.915, -115.39, 0.52", "-31.4653, -277.701, -114.842, 0.52", "-31.3431, -278.373, -114.451, 0.29", "-31.2897, -278.975, -114.155, 0.37", "-31.2668, -279.609, -113.846, 0.44", "-31.2988, -280.039, -113.613, 0.44", "-31.4448, -280.674, -113.234, 0.22", "-31.5579, -281.003, -112.984, 0.37", "-31.7434, -281.496, -112.497, 0.59", "-31.9824, -282.09, -111.798, 1.18", "-32.167, -282.62, -111.091, 0.74", "-32.1798, -282.666, -111.025, 0.74", "-32.3144, -283.419, -109.937, 0.37", "-32.356, -284.191, -108.879, 0.29", "-32.3317, -284.381, -108.607, 0.59", "-32.1744, -284.794, -107.892, 0.74", "-32.1452, -284.834, -107.805, 0.74", "-31.9146, -284.996, -107.31, 0.74", "-31.8881, -285.007, -107.258, 0.74", "-31.3913, -285.147, -106.259, 0.29", "-30.8124, -285.273, -105.085, 0.59", "-30.3156, -285.351, -104.082, 0.96", "-29.432, -285.469, -102.33, 0.59", "-29.0555, -285.505, -101.604, 0.29", "-29.0219, -285.509, -101.54, 0.29", "-28.3699, -285.6, -100.369, 0.88", "-27.7471, -285.673, -99.3132, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-32.5827, -262.487, -123.5, 0.52", "-33.2445, -263.932, -124.743, 0.52", "-33.2748, -264.01, -124.802, 0.52", "-33.71, -265.184, -125.599, 0.66", "-34.583, -267.77, -127.167, 0.44", "-35.2471, -269.705, -128.251, 0.37", "-35.6028, -270.772, -128.782, 0.66", "-35.9711, -271.983, -129.255, 0.88", "-36.4003, -273.359, -129.715, 0.88", "-36.7816, -274.597, -130.051, 0.88", "-37.2663, -276.288, -130.478, 0.59", "-37.6911, -277.825, -130.944, 0.37", "-38.1388, -279.422, -131.553, 0.37", "-38.595, -281.12, -132.37, 0.74", "-38.7593, -281.84, -132.766, 1.11", "-39.349, -284.353, -134.341, 0.74", "-39.6248, -285.538, -135.132, 0.44", "-39.6447, -285.621, -135.186, 0.44", "-40.0605, -287.392, -136.287, 1.03", "-40.2502, -288.343, -136.78, 1.33", "-40.6565, -290.5, -137.609, 0.66", "-40.9546, -292.469, -138.072, 0.66", "-41.2315, -294.429, -138.404, 0.88", "-41.2403, -294.531, -138.418, 0.88", "-41.3015, -296.048, -138.59, 1.11", "-41.2947, -298.312, -138.827, 1.03", "-41.176, -299.99, -138.962, 0.52", "-41.175, -300.092, -138.975, 0.52", "-41.3061, -301.822, -139.293, 0.88", "-41.4585, -302.938, -139.524, 0.96", "-41.7116, -303.935, -139.797, 0.96", "-42.1317, -304.969, -140.141, 0.66", "-43.6304, -307.908, -141.088, 0.44", "-44.2232, -308.988, -141.425, 0.96", "-44.832, -309.98, -141.718, 1.25", "-46.13, -312.017, -142.326, 1.11", "-47.3517, -313.786, -142.912, 0.74", "-48.0429, -314.711, -143.231, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-129.848, -87.5103, 132.986, 0.29", "-130.817, -87.4153, 133.761, 0.29", "-130.874, -87.4128, 133.808, 0.29", "-131.659, -87.3569, 134.299, 0.29", "-131.723, -87.3518, 134.335, 0.29", "-132.458, -87.2501, 134.755, 0.66", "-133.018, -87.1501, 135.08, 0.81", "-133.066, -87.1407, 135.108, 0.81", "-134.453, -86.8217, 136.045, 0.29", "-134.576, -86.7896, 136.136, 0.29", "-135.522, -86.5009, 136.904, 0.29", "-136.573, -86.1191, 137.84, 0.29", "-136.617, -86.1011, 137.884, 0.29", "-137.46, -85.7314, 138.864, 0.44", "-137.495, -85.7125, 138.915, 0.44", "-137.774, -85.5469, 139.325, 0.44", "-137.806, -85.5253, 139.375, 0.44", "-138.384, -85.0636, 140.248, 0.29", "-138.46, -85.0019, 140.343, 0.29", "-139.016, -84.5462, 140.906, 0.29", "-139.293, -84.311, 141.182, 0.59", "-139.375, -84.2382, 141.263, 0.59", "-139.623, -84.0243, 141.505, 0.59", "-140.236, -83.509, 142.097, 0.37", "-140.326, -83.4384, 142.185, 0.37", "-140.84, -83.0539, 142.616, 0.37", "-140.884, -83.0212, 142.649, 0.37", "-141.499, -82.5904, 143.096, 0.37", "-141.599, -82.5244, 143.164, 0.37", "-142.244, -82.1382, 143.629, 0.37", "-143.085, -81.6857, 144.261, 0.22", "-143.191, -81.6375, 144.348, 0.22", "-143.754, -81.4166, 144.853, 0.22", "-143.799, -81.4026, 144.898, 0.22", "-144.256, -81.3604, 145.619, 0.81", "-144.383, -81.3777, 145.891, 0.81", "-144.708, -81.4867, 146.669, 0.22", "-144.733, -81.4994, 146.728, 0.22", "-145.0, -81.685, 147.392, 0.22", "-145.766, -82.2533, 149.218, 0.22", "-145.819, -82.2934, 149.34, 0.22", "-146.207, -82.5808, 150.204, 0.22", "-146.585, -82.858, 151.02, 0.22", "-147.181, -83.2598, 152.246, 0.22", "-147.628, -83.5251, 153.107, 0.22", "-147.666, -83.5396, 153.169, 0.22", "-148.258, -83.6115, 154.1, 0.52", "-148.443, -83.5566, 154.376, 0.81", "-148.518, -83.5071, 154.477, 0.81", "-148.718, -83.3414, 154.696, 0.81", "-148.765, -83.3034, 154.736, 0.81", "-149.543, -82.7505, 155.26, 0.37", "-150.004, -82.4346, 155.515, 0.59", "-150.053, -82.402, 155.54, 0.59", "-150.675, -81.9794, 155.838, 0.44", "-151.808, -81.2754, 156.216, 0.29", "-151.923, -81.2076, 156.244, 0.29", "-152.667, -80.8586, 156.3, 0.29", "-152.719, -80.8368, 156.3, 0.29", "-153.517, -80.5259, 156.291, 0.29", "-154.983, -80.0371, 156.099, 0.29", "-155.034, -80.0225, 156.091, 0.29", "-156.85, -79.6155, 155.763, 0.29", "-156.902, -79.6066, 155.754, 0.29", "-157.429, -79.5278, 155.686, 0.66", "-159.81, -79.2575, 155.458, 0.37", "-159.955, -79.2441, 155.454, 0.37", "-160.743, -79.1915, 155.488, 0.29", "-161.464, -79.1547, 155.616, 0.15", "-161.889, -79.1369, 155.722, 0.74", "-162.068, -79.1344, 155.795, 0.74", "-163.124, -79.1548, 156.462, 0.37", "-163.623, -79.141, 156.786, 0.29", "-164.268, -79.0774, 157.257, 0.29", "-164.338, -79.0677, 157.315, 0.29", "-165.167, -78.9301, 158.119, 0.29", "-165.258, -78.9089, 158.222, 0.29", "-165.716, -78.7619, 158.845, 0.29", "-166.161, -78.6037, 159.447, 0.29", "-166.202, -78.5915, 159.496, 0.29", "-166.877, -78.4119, 160.212, 0.29", "-167.582, -78.2538, 160.836, 0.29", "-167.725, -78.2289, 160.948, 0.29", "-168.454, -78.0996, 161.408, 0.29", "-169.31, -77.9009, 161.868, 0.52", "-169.752, -77.7669, 162.092, 0.66", "-170.793, -77.382, 162.58, 0.29", "-171.964, -76.8939, 163.109, 1.11", "-173.187, -76.3713, 163.599, 0.29", "-173.86, -76.071, 163.843, 0.29", "-174.435, -75.8017, 164.056, 0.74", "-174.561, -75.7433, 164.099, 0.74", "-174.918, -75.577, 164.215, 0.74", "-176.788, -74.8022, 164.766, 0.29", "-176.875, -74.772, 164.793, 0.29", "-177.543, -74.5608, 165.003, 0.29", "-177.592, -74.5447, 165.019, 0.29", "-178.425, -74.254, 165.295, 0.59", "-179.959, -73.6326, 165.864, 0.29", "-180.018, -73.6002, 165.892, 0.29", "-180.435, -73.3191, 166.112, 0.29", "-180.652, -73.114, 166.237, 0.59", "-180.695, -73.0635, 166.265, 0.59", "-181.007, -72.6051, 166.5, 0.59", "-181.291, -72.1139, 166.745, 0.29", "-181.552, -71.7237, 166.959, 0.29", "-182.402, -70.6246, 167.628, 0.29", "-182.435, -70.589, 167.654, 0.29", "-182.909, -70.1397, 168.03, 0.29", "-183.128, -69.9671, 168.205, 0.29", "-183.743, -69.5892, 168.705, 0.52", "-184.008, -69.4632, 168.935, 0.59", "-184.756, -69.1873, 169.651, 0.22", "-184.965, -69.1104, 169.837, 0.22", "-185.402, -68.9199, 170.208, 0.22", "-185.823, -68.6899, 170.55, 0.81", "-186.118, -68.5057, 170.778, 1.03", "-186.605, -68.1984, 171.136, 0.52", "-187.513, -67.6382, 171.777, 0.29", "-188.56, -67.016, 172.507, 0.22", "-189.574, -66.3795, 173.198, 0.22", "-189.695, -66.2979, 173.279, 0.22", "-190.203, -65.9458, 173.618, 0.74", "-190.474, -65.7586, 173.807, 0.74", "-190.784, -65.5535, 174.071, 0.74", "-198.31, -63.0164, 178.077, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-129.848, -87.5103, 132.986, 0.29", "-129.6, -86.5746, 133.119, 0.29", "-129.184, -84.9119, 133.281, 0.29", "-129.167, -84.8419, 133.288, 0.29", "-128.796, -83.2716, 133.428, 0.29", "-128.779, -83.193, 133.436, 0.29", "-128.311, -80.8611, 133.741, 0.52", "-128.08, -79.5559, 133.954, 0.52", "-127.947, -78.6154, 134.134, 0.52", "-127.921, -78.3497, 134.19, 0.52", "-127.808, -77.2312, 134.541, 0.52", "-127.727, -76.4046, 134.905, 0.81", "-127.717, -76.2574, 135.005, 0.81", "-127.675, -75.6712, 135.524, 0.66", "-127.659, -75.1229, 136.078, 0.37", "-127.639, -73.4948, 137.84, 0.37", "-127.641, -73.4372, 137.901, 0.37", "-127.71, -72.8528, 138.503, 0.52", "-127.727, -72.7652, 138.582, 0.52", "-128.004, -71.637, 139.493, 0.44", "-128.043, -71.5033, 139.587, 0.44", "-128.424, -70.5189, 140.164, 0.44", "-128.53, -70.2167, 140.335, 0.44", "-128.974, -68.6745, 141.153, 0.44", "-128.991, -68.6016, 141.19, 0.44", "-129.137, -67.8478, 141.564, 0.52", "-129.162, -67.6864, 141.635, 0.52", "-129.287, -66.6857, 142.049, 0.37", "-129.402, -65.5123, 142.484, 0.74", "-129.408, -65.434, 142.512, 0.74", "-129.447, -64.8908, 142.705, 0.74", "-129.546, -62.337, 143.673, 0.52", "-129.547, -62.2595, 143.704, 0.52", "-129.515, -60.1768, 144.568, 0.52", "-129.427, -57.7247, 145.634, 0.52", "-129.422, -57.6265, 145.678, 0.52", "-129.304, -56.0584, 146.422, 0.88", "-129.269, -55.7234, 146.592, 0.88", "-129.065, -53.843, 147.539, 0.52", "-128.926, -52.6457, 148.132, 0.52", "-128.891, -52.4258, 148.245, 0.52", "-128.741, -51.3176, 148.789, 0.52", "-128.717, -51.0068, 148.935, 0.52", "-128.691, -50.2368, 149.316, 0.59", "-128.688, -49.3447, 149.763, 0.37", "-128.704, -47.9104, 150.486, 0.44", "-128.731, -46.3507, 151.255, 0.22", "-128.768, -44.9446, 151.938, 0.22", "-128.775, -44.3489, 152.232, 0.37", "-128.789, -42.9653, 152.925, 0.22", "-128.79, -42.8256, 152.993, 0.22", "-128.736, -41.6719, 153.603, 0.22", "-128.724, -41.6013, 153.646, 0.22", "-128.466, -40.4597, 154.336, 0.22", "-128.452, -40.3986, 154.372, 0.22", "-128.081, -38.9079, 155.263, 0.22", "-127.664, -37.2253, 156.237, 0.66", "-127.509, -36.5783, 156.601, 0.96", "-127.209, -35.3898, 157.279, 0.22", "-126.954, -34.3679, 157.861, 0.22", "-126.933, -34.2882, 157.907, 0.22", "-126.777, -33.6999, 158.261, 0.59", "-126.694, -33.1792, 158.547, 0.88", "-126.562, -31.9438, 159.214, 0.44", "-126.521, -31.1974, 159.604, 0.29", "-126.515, -30.9641, 159.715, 0.29", "-126.51, -30.4079, 159.952, 0.29", "-126.54, -28.9647, 160.395, 0.74", "-126.57, -28.2556, 160.543, 0.29", "-126.621, -27.5117, 160.651, 0.44", "-126.654, -26.9107, 160.735, 0.59", "-126.657, -26.8284, 160.748, 0.59", "-126.68, -25.0487, 161.065, 0.22", "-126.677, -24.7885, 161.124, 0.22", "-126.603, -23.3434, 161.559, 0.22", "-126.595, -23.2679, 161.586, 0.22", "-126.45, -22.4347, 161.932, 0.44", "-126.43, -22.3513, 161.971, 0.44", "-126.285, -21.9294, 162.209, 0.44", "-125.718, -20.568, 162.985, 0.29", "-125.449, -20.0777, 163.273, 0.44", "-125.367, -19.9413, 163.355, 0.44", "-124.942, -19.3288, 163.742, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-48.0429, -314.711, -143.231, 0.29", "-48.3379, -314.964, -142.726, 0.29", "-48.6921, -315.374, -142.153, 0.29", "-48.7561, -315.456, -142.051, 0.59", "-48.9832, -315.761, -141.691, 0.66", "-49.0357, -315.82, -141.625, 0.66", "-49.3237, -316.119, -141.291, 0.66", "-49.8427, -316.676, -140.726, 0.22", "-50.0561, -316.914, -140.498, 0.66", "-50.3099, -317.194, -140.234, 0.66", "-51.0016, -317.939, -139.535, 0.22", "-51.4091, -318.363, -139.131, 0.22", "-51.9912, -318.941, -138.573, 0.22", "-52.4043, -319.32, -138.18, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-48.0429, -314.711, -143.231, 0.29", "-48.03, -316.314, -143.826, 0.29", "-48.0123, -317.285, -144.269, 0.29", "-48.018, -317.77, -144.471, 0.74", "-48.0472, -318.2, -144.658, 0.88", "-48.0576, -318.306, -144.704, 0.88", "-48.1434, -319.063, -145.002, 0.88", "-48.217, -320.375, -145.478, 0.22", "-48.2752, -321.126, -145.744, 0.22", "-48.37, -321.993, -146.063, 0.88", "-48.3749, -322.063, -146.091, 0.88", "-48.3979, -322.952, -146.462, 0.74", "-48.3185, -324.033, -146.96, 0.37", "-48.2994, -324.097, -146.997, 0.37", "-47.5399, -325.401, -147.841, 0.29", "-47.0732, -325.985, -148.246, 0.59", "-46.9284, -326.141, -148.362, 0.59", "-46.1959, -326.813, -148.918, 0.88", "-44.9637, -327.721, -149.582, 0.74", "-43.4106, -328.72, -150.244, 0.29", "-42.5485, -329.22, -150.552, 0.74", "-42.4839, -329.258, -150.573, 0.74", "-41.9422, -329.56, -150.73, 0.74", "-39.3843, -330.849, -151.271, 0.44", "-38.4927, -331.256, -151.368, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-124.942, -19.3288, 163.742, 0.29", "-124.086, -19.8655, 163.063, 0.29", "-123.993, -19.9287, 162.979, 0.29", "-123.71, -20.1241, 162.712, 0.29", "-123.664, -20.1556, 162.669, 0.29", "-123.011, -20.6062, 162.054, 0.29", "-122.727, -20.8016, 161.787, 0.81", "-122.433, -20.9953, 161.443, 1.03", "-122.393, -21.0254, 161.394, 1.03", "-117.709, -25.6254, 154.415, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-124.942, -19.3288, 163.742, 0.44", "-124.729, -17.9236, 164.384, 0.44", "-124.482, -16.3469, 165.083, 0.37", "-123.935, -13.5011, 166.415, 0.29", "-123.442, -10.9942, 167.657, 0.29", "-123.205, -9.86856, 168.215, 0.74", "-123.084, -9.31814, 168.487, 0.74", "-122.914, -8.60558, 168.817, 0.44", "-122.442, -6.9743, 169.539, 0.37", "-121.868, -5.27408, 170.25, 0.29", "-121.266, -3.57038, 170.943, 0.29", "-121.2, -3.40065, 171.012, 0.29", "-120.254, -1.07899, 171.964, 0.29", "-120.07, -0.637085, 172.139, 0.29", "-119.476, 0.812546, 172.679, 0.29", "-119.443, 0.884316, 172.707, 0.29", "-118.921, 2.23207, 173.376, 0.29", "-118.752, 2.95735, 173.81, 0.44", "-118.739, 3.10561, 173.914, 0.44", "-118.738, 3.64187, 174.3, 0.29", "-118.744, 3.73276, 174.365, 0.29", "-118.92, 5.1904, 175.304, 0.29", "-119.334, 7.73266, 176.782, 0.29", "-119.38, 8.03004, 176.948, 0.29", "-119.51, 8.95094, 177.44, 0.74", "-119.605, 9.71851, 177.839, 0.88", "-119.787, 11.2589, 178.626, 0.52", "-119.944, 12.6546, 179.332, 0.37", "-120.155, 14.5699, 180.346, 0.29", "-120.186, 14.8682, 180.512, 0.29", "-120.41, 17.2747, 181.916, 0.29", "-120.426, 17.4734, 182.04, 0.29", "-120.499, 19.0758, 183.122, 0.29", "-120.514, 19.6784, 183.571, 0.52", "-120.515, 20.1367, 183.96, 0.66", "-120.511, 20.2717, 184.087, 0.66", "-120.47, 20.734, 184.605, 0.66", "-120.465, 20.8147, 184.696, 0.66", "-120.485, 21.6348, 185.602, 0.29", "-120.506, 21.8921, 185.883, 0.22", "-120.554, 22.3695, 186.418, 0.52", "-120.576, 22.6416, 186.709, 0.52", "-120.624, 23.3294, 187.419, 0.29", "-120.679, 24.2797, 188.317, 0.29", "-120.694, 25.7669, 189.656, 0.29", "-120.691, 25.8571, 189.737, 0.29", "-120.572, 27.3767, 191.086, 0.29", "-120.556, 27.5152, 191.208, 0.29", "-120.313, 29.1708, 192.615, 0.29", "-120.093, 30.5701, 193.738, 0.29", "-120.069, 30.7841, 193.882, 0.29", "-120.011, 31.5356, 194.322, 0.29", "-120.008, 31.5999, 194.354, 0.29", "-119.992, 32.6386, 194.808, 0.88", "-119.995, 32.9594, 194.925, 0.88", "-120.024, 34.4962, 195.432, 0.22", "-120.062, 36.0222, 195.879, 0.22", "-120.068, 36.2574, 195.945, 0.22", "-120.11, 37.9475, 196.4, 0.22", "-120.111, 38.0199, 196.419, 0.22", "-120.273, 40.3288, 196.925, 0.52", "-120.452, 42.0167, 197.258, 0.29", "-120.57, 42.7825, 197.382, 0.37", "-120.598, 42.9374, 197.404, 0.37", "-120.771, 43.7969, 197.521, 0.37", "-121.413, 46.4672, 197.776, 0.22", "-121.828, 48.0699, 197.909, 0.22", "-121.847, 48.1543, 197.917, 0.22", "-122.022, 49.001, 198.002, 0.52", "-122.239, 50.187, 198.14, 0.66", "-122.681, 52.6045, 198.365, 0.15", "-122.988, 54.5868, 198.55, 0.15", "-123.18, 55.5996, 198.594, 0.29", "-123.199, 55.6847, 198.597, 0.29", "-123.346, 56.2991, 198.609, 0.29", "-123.843, 58.2002, 198.651, 0.44", "-124.015, 58.7272, 198.629, 0.44", "-124.529, 60.0412, 198.58, 0.22", "-124.803, 60.7442, 198.583, 0.52", "-124.833, 60.826, 198.586, 0.52", "-125.039, 61.4162, 198.642, 0.88", "-126.085, 64.8075, 199.237, 0.29", "-126.912, 67.6141, 199.81, 0.29", "-127.14, 68.5864, 200.039, 0.29", "-127.153, 68.6694, 200.06, 0.29", "-127.262, 70.2993, 200.496, 0.29", "-127.179, 71.7168, 200.904, 0.29", "-127.163, 71.7825, 200.925, 0.29", "-126.521, 73.754, 201.423, 0.29", "-125.986, 75.2252, 201.755, 0.59", "-125.703, 75.9556, 201.904, 0.59", "-125.222, 77.2236, 202.167, 0.22", "-124.706, 78.6569, 202.485, 0.22", "-124.648, 78.8348, 202.529, 0.22", "-123.988, 81.0355, 203.122, 0.22", "-123.941, 81.2058, 203.172, 0.22", "-123.074, 84.6667, 204.251, 0.22", "-123.055, 84.7569, 204.282, 0.22", "-122.697, 86.811, 205.054, 0.22", "-122.665, 87.0498, 205.152, 0.22", "-122.637, 87.3922, 205.308, 0.59", "-122.604, 88.0957, 205.649, 0.59", "-122.679, 89.8772, 206.452, 0.29", "-122.754, 90.696, 206.796, 0.59", "-122.929, 91.9833, 207.313, 0.52", "-123.086, 93.1088, 207.735, 0.74", "-123.225, 94.0898, 208.077, 0.74", "-123.481, 96.0711, 208.686, 0.22", "-123.576, 96.9198, 208.901, 0.44", "-123.643, 97.6776, 209.081, 0.74", "-123.666, 98.1145, 209.188, 1.03", "-123.668, 98.1842, 209.206, 1.03", "-123.663, 99.1116, 209.492, 1.03", "-123.655, 99.1897, 209.528, 1.03", "-123.515, 100.457, 210.089, 0.37", "-123.388, 101.717, 210.642, 0.29", "-121.114, 112.501, 214.882, 0.29", "-119.326, 122.476, 221.002, 0.29", "-116.965, 132.166, 227.392, 0.29", "-113.425, 140.977, 234.53, 0.29", "-108.512, 149.127, 241.693, 0.29", "-103.837, 155.569, 250.687, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-117.709, -25.6254, 154.415, 0.22", "-112.538, -29.3509, 147.958, 0.22", "-106.651, -33.1623, 142.189, 0.22", "-100.571, -36.0951, 136.058, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-117.709, -25.6254, 154.415, 0.22", "-112.977, -28.9187, 148.451, 0.22", "-108.188, -32.2354, 142.547, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L5_DBC_8be7b81168_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.01289, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.5944, -1.99962, -8.98235, 1.11 ) }
    dend_92 { pt3dadd( 2.69028, -3.84326, -9.27216, 1.11 ) }
    dend_92 { pt3dadd( 2.75044, -4.88437, -9.47302, 1.03 ) }
    dend_92 { pt3dadd( 2.82801, -6.25649, -9.75121, 1.03 ) }
    dend_92 { pt3dadd( 2.89519, -7.93527, -10.2834, 1.03 ) }
    dend_92 { pt3dadd( 2.89645, -9.29488, -10.8368, 1.18 ) }
    dend_92 { pt3dadd( 2.85112, -10.6086, -11.4845, 1.18 ) }
    dend_92 { pt3dadd( 2.75699, -11.9382, -12.2809, 1.4 ) }
    dend_92 { pt3dadd( 2.64079, -12.7057, -12.9335, 1.55 ) }
    dend_92 { pt3dadd( 2.10163, -15.1965, -15.569, 1.25 ) }
    dend_92 { pt3dadd( 1.77569, -16.4644, -17.2895, 1.25 ) }
    dend_92 { pt3dadd( 1.63674, -17.0069, -18.1953, 1.47 ) }
    dend_92 { pt3dadd( 1.41159, -18.2255, -20.4484, 1.69 ) }
    dend_92 { pt3dadd( 1.17884, -20.6652, -25.1127, 1.69 ) }
    dend_92 { pt3dadd( 1.17908, -20.6977, -25.1742, 1.69 ) }
    dend_92 { pt3dadd( 1.41764, -22.8051, -28.9181, 1.33 ) }
    dend_92 { pt3dadd( 1.68129, -24.2284, -31.2242, 1.11 ) }
    dend_92 { pt3dadd( 1.95112, -25.5629, -33.0974, 1.25 ) }
    dend_92 { pt3dadd( 2.20705, -26.8652, -34.4677, 1.4 ) }
    dend_92 { pt3dadd( 2.31665, -27.7554, -35.0869, 1.4 ) }
    dend_92 { pt3dadd( 2.31748, -28.8858, -35.7404, 1.33 ) }
    dend_92 { pt3dadd( 2.07657, -30.4117, -36.3518, 1.18 ) }
    dend_92 { pt3dadd( 1.7115, -31.5657, -36.8103, 1.18 ) }
    dend_92 { pt3dadd( 1.10646, -32.9394, -37.4645, 1.33 ) }
    dend_92 { pt3dadd( 0.292154, -34.6877, -38.4239, 1.03 ) }
    dend_92 { pt3dadd( -0.267282, -36.0001, -39.1809, 1.25 ) }
    dend_92 { pt3dadd( -0.556924, -36.8231, -39.6617, 1.62 ) }
    dend_92 { pt3dadd( -1.07815, -38.7219, -40.7537, 1.62 ) }
    dend_92 { pt3dadd( -1.33462, -40.0844, -41.4788, 1.03 ) }
    dend_92 { pt3dadd( -1.54621, -42.3469, -42.5118, 1.03 ) }
    dend_92 { pt3dadd( -1.57025, -44.0638, -43.1509, 1.18 ) }
    dend_92 { pt3dadd( -1.49672, -45.6718, -43.6569, 1.18 ) }
    dend_92 { pt3dadd( -1.4481, -46.232, -43.8132, 1.55 ) }
    dend_92 { pt3dadd( -1.35007, -47.1788, -44.0193, 1.55 ) }
    dend_92 { pt3dadd( -1.23277, -48.474, -44.3079, 1.69 ) }
    dend_92 { pt3dadd( -1.14851, -49.8136, -44.7071, 1.84 ) }
    dend_92 { pt3dadd( -1.1029, -51.0338, -45.1961, 1.47 ) }
    dend_92 { pt3dadd( -1.06098, -52.7026, -45.9529, 1.18 ) }
    dend_92 { pt3dadd( -1.06054, -54.1381, -46.671, 1.18 ) }
    dend_92 { pt3dadd( -1.09552, -55.7758, -47.565, 1.18 ) }
    dend_92 { pt3dadd( -1.09934, -57.5967, -48.4777, 1.33 ) }
    dend_92 { pt3dadd( -1.01513, -59.1097, -49.069, 1.03 ) }
    dend_92 { pt3dadd( -0.891886, -60.2685, -49.4932, 1.03 ) }
    dend_92 { pt3dadd( -0.712238, -61.4823, -49.8791, 1.03 ) }
    dend_92 { pt3dadd( -0.472928, -63.0086, -50.3307, 1.33 ) }
    dend_92 { pt3dadd( -0.0553332, -66.1346, -51.2488, 1.33 ) }
    dend_92 { pt3dadd( 0.21709, -68.8807, -52.1461, 1.33 ) }
    dend_92 { pt3dadd( 0.352494, -70.8366, -52.8808, 1.18 ) }
    dend_92 { pt3dadd( 0.422017, -71.9514, -53.3596, 1.4 ) }
    dend_92 { pt3dadd( 0.572679, -73.997, -54.4248, 1.4 ) }
    dend_92 { pt3dadd( 0.73571, -76.1368, -55.7512, 1.33 ) }
    dend_92 { pt3dadd( 0.886277, -78.025, -57.1791, 1.18 ) }
    dend_92 { pt3dadd( 0.894133, -78.0957, -57.237, 1.18 ) }
    dend_92 { pt3dadd( 1.08734, -79.35, -58.2575, 1.47 ) }
    dend_92 { pt3dadd( 1.46204, -81.1475, -59.7615, 1.84 ) }
    dend_92 { pt3dadd( 1.78113, -82.2418, -60.6516, 1.62 ) }
    dend_92 { pt3dadd( 2.26608, -83.5576, -61.6806, 1.55 ) }
    dend_92 { pt3dadd( 2.86165, -85.0927, -62.8738, 1.33 ) }
    dend_92 { pt3dadd( 3.3243, -86.4224, -63.9399, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -9.61039, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.493608, -9.67381, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.345998, -10.1898, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.1686, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.45989, 10.9263, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.17977, 12.3378, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.68167, 13.3536, 0.147807, 1.92 ) }
    dend_0 { pt3dadd( 2.86928, 13.7446, 0.150885, 1.92 ) }
    dend_0 { pt3dadd( 3.14451, 14.3031, 0.156116, 1.92 ) }
    dend_0 { pt3dadd( 3.32998, 14.6678, 0.159701, 1.92 ) }
    dend_0 { pt3dadd( 3.62325, 15.2143, 0.165856, 1.92 ) }
    dend_0 { pt3dadd( 3.86027, 15.6423, 0.170811, 1.99 ) }
    dend_0 { pt3dadd( 4.21655, 16.2846, 0.17737, 1.99 ) }
    dend_0 { pt3dadd( 4.74066, 17.2811, 0.185811, 1.99 ) }
    dend_0 { pt3dadd( 5.17108, 18.1101, 0.191564, 1.99 ) }
    dend_0 { pt3dadd( 5.62578, 19.027, 0.196217, 1.99 ) }
    dend_0 { pt3dadd( 6.12433, 20.1158, 0.177861, 2.21 ) }
    dend_0 { pt3dadd( 6.54511, 21.1634, 0.140539, 2.21 ) }
    dend_0 { pt3dadd( 6.81042, 21.9492, 0.0883735, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 6.90154, 22.2916, 0.0505902, 1.99 ) }
    dend_0 { pt3dadd( 7.0648, 23.0572, -0.0569264, 1.99 ) }
    dend_0 { pt3dadd( 7.22211, 24.0394, -0.211751, 2.06 ) }
    dend_0 { pt3dadd( 7.36664, 25.268, -0.439636, 1.92 ) }
    dend_0 { pt3dadd( 7.47504, 26.4556, -0.698281, 1.92 ) }
    dend_0 { pt3dadd( 7.58341, 27.7821, -1.04037, 1.99 ) }
    dend_0 { pt3dadd( 7.63188, 28.4781, -1.24869, 2.14 ) }
    dend_0 { pt3dadd( 7.70929, 29.6432, -1.61481, 2.14 ) }
    dend_0 { pt3dadd( 7.79919, 31.0789, -2.08211, 1.99 ) }
    dend_0 { pt3dadd( 7.841, 31.9536, -2.39682, 2.06 ) }
    dend_0 { pt3dadd( 7.85838, 32.9993, -2.79505, 2.43 ) }
    dend_0 { pt3dadd( 7.86007, 33.811, -3.13941, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.642029 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.642029 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.642029 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.3243, -86.4224, -63.9399, 0.52 ) }
    dend_98 { pt3dadd( 2.21252, -87.8288, -65.2051, 0.52 ) }
    dend_98 { pt3dadd( 1.48097, -88.9738, -66.2112, 0.52 ) }
    dend_98 { pt3dadd( 1.09315, -89.8555, -67.0071, 0.52 ) }
    dend_98 { pt3dadd( 0.74183, -91.1614, -68.2371, 0.52 ) }
    dend_98 { pt3dadd( 0.652054, -91.8033, -68.8746, 1.11 ) }
    dend_98 { pt3dadd( 0.605732, -92.5777, -69.624, 1.4 ) }
    dend_98 { pt3dadd( 0.711441, -93.1614, -70.1762, 1.69 ) }
    dend_98 { pt3dadd( 1.08024, -94.2438, -71.1793, 1.62 ) }
    dend_98 { pt3dadd( 1.4724, -95.119, -71.9913, 1.4 ) }
    dend_98 { pt3dadd( 2.05898, -96.2796, -73.0339, 0.88 ) }
    dend_98 { pt3dadd( 2.42875, -97.0118, -73.687, 0.66 ) }
    dend_98 { pt3dadd( 2.95388, -98.071, -74.5632, 0.66 ) }
    dend_98 { pt3dadd( 3.25915, -98.7113, -75.0861, 0.88 ) }
    dend_98 { pt3dadd( 3.61065, -99.4713, -75.6576, 1.11 ) }
    dend_98 { pt3dadd( 3.93575, -100.104, -76.1017, 1.18 ) }
    dend_98 { pt3dadd( 4.29261, -100.707, -76.5064, 1.18 ) }
    dend_98 { pt3dadd( 4.58698, -101.162, -76.8542, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.3243, -86.4224, -63.9399, 0.66 ) }
    dend_93 { pt3dadd( 3.05717, -87.4825, -63.4314, 0.66 ) }
    dend_93 { pt3dadd( 2.7564, -88.2481, -62.9758, 0.52 ) }
    dend_93 { pt3dadd( 2.72883, -88.3036, -62.9428, 0.52 ) }
    dend_93 { pt3dadd( 2.18777, -89.2626, -62.3619, 0.74 ) }
    dend_93 { pt3dadd( 1.65072, -90.1857, -61.8434, 0.88 ) }
    dend_93 { pt3dadd( 1.24418, -90.8801, -61.4392, 0.74 ) }
    dend_93 { pt3dadd( 0.673402, -91.8068, -60.8287, 0.37 ) }
    dend_93 { pt3dadd( 0.278486, -92.4896, -60.3443, 1.18 ) }
    dend_93 { pt3dadd( -0.0994888, -93.2788, -59.7731, 1.4 ) }
    dend_93 { pt3dadd( -0.448939, -94.176, -59.1138, 0.96 ) }
    dend_93 { pt3dadd( -0.658451, -95.1209, -58.3047, 0.74 ) }
    dend_93 { pt3dadd( -0.706508, -96.0614, -57.3691, 0.29 ) }
    dend_93 { pt3dadd( -0.625417, -96.9318, -56.4477, 0.74 ) }
    dend_93 { pt3dadd( -0.507471, -97.51, -55.8113, 0.96 ) }
    dend_93 { pt3dadd( -0.496538, -97.5507, -55.7687, 0.96 ) }
    dend_93 { pt3dadd( -0.0562021, -99.1644, -54.2523, 0.59 ) }
    dend_93 { pt3dadd( 0.0937432, -99.9042, -53.7243, 1.11 ) }
    dend_93 { pt3dadd( 0.162898, -100.516, -53.3855, 1.25 ) }
    dend_93 { pt3dadd( 0.147506, -101.144, -53.1378, 1.18 ) }
    dend_93 { pt3dadd( -0.00970952, -102.266, -52.7714, 0.81 ) }
    dend_93 { pt3dadd( -0.227692, -103.244, -52.5175, 0.59 ) }
    dend_93 { pt3dadd( -0.558444, -104.294, -52.3382, 0.44 ) }
    dend_93 { pt3dadd( -0.585943, -104.369, -52.3249, 0.44 ) }
    dend_93 { pt3dadd( -0.939983, -105.159, -52.1429, 0.29 ) }
    dend_93 { pt3dadd( -1.5722, -106.345, -51.8194, 0.29 ) }
    dend_93 { pt3dadd( -1.98932, -107.072, -51.6018, 0.81 ) }
    dend_93 { pt3dadd( -2.29979, -107.648, -51.4329, 1.33 ) }
    dend_93 { pt3dadd( -2.60161, -108.297, -51.3031, 1.33 ) }
    dend_93 { pt3dadd( -3.01202, -109.395, -51.2495, 0.96 ) }
    dend_93 { pt3dadd( -3.21525, -110.168, -51.328, 0.81 ) }
    dend_93 { pt3dadd( -3.35495, -111.001, -51.5228, 0.81 ) }
    dend_93 { pt3dadd( -3.46009, -112.018, -51.8417, 0.74 ) }
    dend_93 { pt3dadd( -3.52955, -113.374, -52.3377, 0.44 ) }
    dend_93 { pt3dadd( -3.54743, -114.589, -52.8662, 0.66 ) }
    dend_93 { pt3dadd( -3.54303, -115.372, -53.258, 0.74 ) }
    dend_93 { pt3dadd( -3.55465, -116.082, -53.6181, 1.03 ) }
    dend_93 { pt3dadd( -3.61282, -116.914, -54.0231, 1.25 ) }
    dend_93 { pt3dadd( -3.73061, -117.791, -54.3948, 1.11 ) }
    dend_93 { pt3dadd( -3.93256, -118.869, -54.7678, 0.59 ) }
    dend_93 { pt3dadd( -4.11967, -119.748, -55.0306, 0.59 ) }
    dend_93 { pt3dadd( -4.33139, -120.674, -55.3181, 0.66 ) }
    dend_93 { pt3dadd( -4.48668, -121.345, -55.5225, 0.66 ) }
    dend_93 { pt3dadd( -4.7016, -122.372, -55.8045, 0.52 ) }
    dend_93 { pt3dadd( -4.87181, -123.322, -56.0619, 0.52 ) }
    dend_93 { pt3dadd( -4.97725, -124.156, -56.267, 0.59 ) }
    dend_93 { pt3dadd( -5.05529, -125.227, -56.5638, 1.25 ) }
    dend_93 { pt3dadd( -5.06647, -125.638, -56.6916, 1.4 ) }
    dend_93 { pt3dadd( -5.05819, -126.379, -56.937, 1.4 ) }
    dend_93 { pt3dadd( -5.02932, -127.461, -57.248, 0.88 ) }
    dend_93 { pt3dadd( -5.01154, -128.152, -57.4061, 0.52 ) }
    dend_93 { pt3dadd( -5.02651, -129.356, -57.6171, 0.52 ) }
    dend_93 { pt3dadd( -5.08395, -130.114, -57.62, 0.52 ) }
    dend_93 { pt3dadd( -5.09494, -130.193, -57.6067, 0.52 ) }
    dend_93 { pt3dadd( -5.29509, -131.369, -57.174, 0.52 ) }
    dend_93 { pt3dadd( -5.3047, -131.431, -57.1434, 0.52 ) }
    dend_93 { pt3dadd( -5.37329, -131.934, -56.8638, 0.96 ) }
    dend_93 { pt3dadd( -5.49717, -133.281, -56.0678, 1.33 ) }
    dend_93 { pt3dadd( -5.54581, -134.299, -55.5236, 0.66 ) }
    dend_93 { pt3dadd( -5.57018, -135.29, -55.0745, 0.59 ) }
    dend_93 { pt3dadd( -5.57711, -136.251, -54.7337, 0.74 ) }
    dend_93 { pt3dadd( -5.57865, -136.328, -54.7108, 0.74 ) }
    dend_93 { pt3dadd( -5.61018, -137.145, -54.5313, 0.74 ) }
    dend_93 { pt3dadd( -5.67156, -137.8, -54.452, 1.03 ) }
    dend_93 { pt3dadd( -5.77927, -138.337, -54.3942, 1.25 ) }
    dend_93 { pt3dadd( -5.98388, -139.027, -54.3396, 1.18 ) }
    dend_93 { pt3dadd( -6.2255, -139.664, -54.2924, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -6.51285, -140.314, -54.2516, 0.29 ) }
    dend_93 { pt3dadd( -6.78788, -140.857, -54.2259, 0.29 ) }
    dend_93 { pt3dadd( -7.01125, -141.272, -54.2089, 0.81 ) }
    dend_93 { pt3dadd( -7.20517, -141.631, -54.1971, 1.11 ) }
    dend_93 { pt3dadd( -7.48269, -142.193, -54.1866, 1.11 ) }
    dend_93 { pt3dadd( -7.75606, -142.906, -54.1808, 0.59 ) }
    dend_93 { pt3dadd( -7.77099, -142.983, -54.1813, 0.59 ) }
    dend_93 { pt3dadd( -7.76034, -143.66, -54.1941, 0.44 ) }
    dend_93 { pt3dadd( -7.74427, -143.727, -54.1962, 0.44 ) }
    dend_93 { pt3dadd( -7.44786, -144.392, -54.2232, 0.44 ) }
    dend_93 { pt3dadd( -7.11438, -144.942, -54.2632, 0.81 ) }
    dend_93 { pt3dadd( -6.72409, -145.503, -54.3147, 1.11 ) }
    dend_93 { pt3dadd( -6.47744, -145.855, -54.3648, 1.11 ) }
    dend_93 { pt3dadd( -6.1403, -146.351, -54.4639, 0.88 ) }
    dend_93 { pt3dadd( -5.85993, -146.812, -54.571, 0.66 ) }
    dend_93 { pt3dadd( -5.53191, -147.426, -54.7289, 0.66 ) }
    dend_93 { pt3dadd( -5.24215, -148.064, -54.8954, 0.44 ) }
    dend_93 { pt3dadd( -4.98074, -148.761, -55.0684, 0.29 ) }
    dend_93 { pt3dadd( -4.75146, -149.559, -55.2464, 0.88 ) }
    dend_93 { pt3dadd( -4.62823, -150.174, -55.3582, 0.88 ) }
    dend_93 { pt3dadd( -4.57094, -150.674, -55.4259, 0.88 ) }
    dend_93 { pt3dadd( -4.53869, -151.387, -55.4855, 0.74 ) }
    dend_93 { pt3dadd( -4.54132, -152.106, -55.5188, 0.37 ) }
    dend_93 { pt3dadd( -4.55996, -152.78, -55.5197, 0.29 ) }
    dend_93 { pt3dadd( -4.59319, -153.766, -55.5022, 0.29 ) }
    dend_93 { pt3dadd( -4.61679, -154.571, -55.4882, 0.81 ) }
    dend_93 { pt3dadd( -4.62387, -155.313, -55.4769, 1.03 ) }
    dend_93 { pt3dadd( -4.62065, -155.393, -55.4761, 1.03 ) }
    dend_93 { pt3dadd( -4.54976, -156.027, -55.4737, 1.18 ) }
    dend_93 { pt3dadd( -4.4388, -156.735, -55.4752, 1.33 ) }
    dend_93 { pt3dadd( -4.32324, -157.35, -55.4797, 1.33 ) }
    dend_93 { pt3dadd( -4.12924, -158.287, -55.4973, 0.59 ) }
    dend_93 { pt3dadd( -3.93871, -159.213, -55.5215, 0.44 ) }
    dend_93 { pt3dadd( -3.77758, -160.039, -55.5466, 0.44 ) }
    dend_93 { pt3dadd( -3.63487, -160.796, -55.5699, 0.81 ) }
    dend_93 { pt3dadd( -3.48346, -161.646, -55.5955, 1.11 ) }
    dend_93 { pt3dadd( -3.36822, -162.431, -55.617, 1.11 ) }
    dend_93 { pt3dadd( -3.33295, -162.926, -55.6281, 1.25 ) }
    dend_93 { pt3dadd( -3.36183, -163.72, -55.6389, 1.11 ) }
    dend_93 { pt3dadd( -3.48974, -164.711, -55.6667, 0.66 ) }
    dend_93 { pt3dadd( -3.62576, -165.419, -55.6957, 0.37 ) }
    dend_93 { pt3dadd( -3.81131, -166.101, -55.7293, 0.29 ) }
    dend_93 { pt3dadd( -4.08799, -167.082, -55.782, 0.37 ) }
    dend_93 { pt3dadd( -4.23277, -167.775, -55.864, 0.52 ) }
    dend_93 { pt3dadd( -4.28945, -168.505, -55.9672, 0.88 ) }
    dend_93 { pt3dadd( -4.25893, -168.997, -56.0429, 1.03 ) }
    dend_93 { pt3dadd( -4.21731, -169.209, -56.0768, 1.03 ) }
    dend_93 { pt3dadd( -3.93833, -170.297, -56.1665, 0.74 ) }
    dend_93 { pt3dadd( -3.59807, -171.532, -56.1973, 0.59 ) }
    dend_93 { pt3dadd( -3.34699, -172.506, -56.1883, 0.59 ) }
    dend_93 { pt3dadd( -3.22219, -173.027, -56.1402, 1.4 ) }
    dend_93 { pt3dadd( -3.08598, -173.618, -56.0593, 1.77 ) }
    dend_93 { pt3dadd( -2.73906, -175.249, -55.7263, 0.81 ) }
    dend_93 { pt3dadd( -2.5866, -176.084, -55.4956, 0.81 ) }
    dend_93 { pt3dadd( -2.4005, -177.234, -55.0605, 0.81 ) }
    dend_93 { pt3dadd( -2.19974, -178.354, -54.5931, 1.11 ) }
    dend_93 { pt3dadd( -2.07887, -178.906, -54.3425, 1.11 ) }
    dend_93 { pt3dadd( -1.84704, -179.774, -53.9307, 0.88 ) }
    dend_93 { pt3dadd( -1.81746, -179.876, -53.8798, 0.88 ) }
    dend_93 { pt3dadd( -1.61636, -180.739, -53.4275, 0.59 ) }
    dend_93 { pt3dadd( -1.50147, -181.641, -52.9747, 0.59 ) }
    dend_93 { pt3dadd( -1.44759, -182.355, -52.6565, 0.52 ) }
    dend_93 { pt3dadd( -1.42449, -182.968, -52.3949, 0.52 ) }
    dend_93 { pt3dadd( -1.394, -184.416, -51.8532, 0.74 ) }
    dend_93 { pt3dadd( -1.39063, -185.084, -51.6236, 1.33 ) }
    dend_93 { pt3dadd( -1.41673, -185.957, -51.3651, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.345998, -10.1898, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.0441435, -12.3212, -0.0286079, 2.73 ) }
    dend_41 { pt3dadd( 0.236711, -14.5008, -0.0774166, 2.14 ) }
    dend_41 { pt3dadd( 0.430264, -16.2176, -0.112115, 2.14 ) }
    dend_41 { pt3dadd( 0.626849, -18.183, -0.148454, 2.28 ) }
    dend_41 { pt3dadd( 0.793512, -20.0609, -0.204975, 2.14 ) }
    dend_41 { pt3dadd( 1.00208, -22.4961, -0.294512, 1.92 ) }
    dend_41 { pt3dadd( 1.12109, -24.2854, -0.39062, 2.06 ) }
    dend_41 { pt3dadd( 1.23691, -26.7731, -0.555084, 1.84 ) }
    dend_41 { pt3dadd( 1.26791, -29.0932, -0.760646, 1.84 ) }
    dend_41 { pt3dadd( 1.24553, -30.8426, -0.946935, 1.84 ) }
    dend_41 { pt3dadd( 1.14969, -33.0459, -1.23328, 1.92 ) }
    dend_41 { pt3dadd( 0.95739, -35.1615, -1.58825, 1.92 ) }
    dend_41 { pt3dadd( 0.687336, -36.9048, -1.94153, 1.92 ) }
    dend_41 { pt3dadd( 0.267068, -38.655, -2.32639, 1.84 ) }
    dend_41 { pt3dadd( -0.310806, -40.5266, -2.75352, 1.84 ) }
    dend_41 { pt3dadd( -0.73907, -41.6529, -3.01844, 1.77 ) }
    dend_41 { pt3dadd( -1.75811, -43.9979, -3.59838, 1.69 ) }
    dend_41 { pt3dadd( -2.92399, -46.4482, -4.20758, 1.69 ) }
    dend_41 { pt3dadd( -3.94969, -48.4445, -4.72412, 1.84 ) }
    dend_41 { pt3dadd( -3.98977, -48.5146, -4.74122, 1.84 ) }
    dend_41 { pt3dadd( -4.59491, -49.4308, -4.9727, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.345998, -10.1898, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.71668, -11.6423, -0.751545, 0.96 ) }
    dend_26 { pt3dadd( -1.11303, -13.1009, -1.36163, 1.25 ) }
    dend_26 { pt3dadd( -1.63492, -14.822, -1.91857, 0.96 ) }
    dend_26 { pt3dadd( -1.99691, -15.9426, -2.13713, 1.25 ) }
    dend_26 { pt3dadd( -2.27936, -16.7346, -2.22828, 1.47 ) }
    dend_26 { pt3dadd( -2.66319, -17.7576, -2.30315, 1.11 ) }
    dend_26 { pt3dadd( -3.18775, -19.071, -2.26442, 0.96 ) }
    dend_26 { pt3dadd( -3.75756, -20.3243, -2.09938, 1.11 ) }
    dend_26 { pt3dadd( -4.5917, -21.9085, -1.79304, 1.11 ) }
    dend_26 { pt3dadd( -5.20713, -22.9343, -1.59005, 1.11 ) }
    dend_26 { pt3dadd( -5.25989, -23.0131, -1.57438, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -5.99801, -23.9639, -1.38759, 0.96 ) }
    dend_26 { pt3dadd( -6.03384, -24.0034, -1.38174, 0.96 ) }
    dend_26 { pt3dadd( -6.78846, -24.6862, -1.33087, 1.03 ) }
    dend_26 { pt3dadd( -7.36386, -25.1548, -1.3529, 1.25 ) }
    dend_26 { pt3dadd( -7.41979, -25.2034, -1.35612, 1.25 ) }
    dend_26 { pt3dadd( -8.20532, -25.9191, -1.41123, 0.88 ) }
    dend_26 { pt3dadd( -8.95305, -26.6457, -1.47902, 0.88 ) }
    dend_26 { pt3dadd( -9.9105, -27.6332, -1.60966, 1.11 ) }
    dend_26 { pt3dadd( -10.6658, -28.4803, -1.74054, 1.11 ) }
    dend_26 { pt3dadd( -11.3854, -29.3427, -1.88827, 1.25 ) }
    dend_26 { pt3dadd( -11.4528, -29.4355, -1.9039, 1.25 ) }
    dend_26 { pt3dadd( -12.0852, -30.4862, -2.09978, 0.96 ) }
    dend_26 { pt3dadd( -12.6483, -31.5858, -2.29931, 0.96 ) }
    dend_26 { pt3dadd( -13.0637, -32.5071, -2.4615, 1.03 ) }
    dend_26 { pt3dadd( -13.0926, -32.573, -2.47213, 1.03 ) }
    dend_26 { pt3dadd( -13.596, -33.7195, -2.6362, 1.03 ) }
    dend_26 { pt3dadd( -13.9824, -34.6151, -2.73836, 1.03 ) }
    dend_26 { pt3dadd( -14.3114, -35.4141, -2.78407, 1.25 ) }
    dend_26 { pt3dadd( -14.6425, -36.2576, -2.78496, 1.62 ) }
    dend_26 { pt3dadd( -15.1513, -37.5234, -2.73946, 1.25 ) }
    dend_26 { pt3dadd( -15.5369, -38.4535, -2.67483, 1.18 ) }
    dend_26 { pt3dadd( -15.8394, -39.1247, -2.5738, 1.18 ) }
    dend_26 { pt3dadd( -16.2267, -39.9412, -2.38043, 1.33 ) }
    dend_26 { pt3dadd( -16.7133, -40.874, -2.09914, 1.33 ) }
    dend_26 { pt3dadd( -17.1687, -41.6872, -1.83586, 1.03 ) }
    dend_26 { pt3dadd( -17.1966, -41.7333, -1.81999, 1.03 ) }
    dend_26 { pt3dadd( -17.7342, -42.5865, -1.59258, 0.81 ) }
    dend_26 { pt3dadd( -18.1579, -43.2439, -1.51134, 0.66 ) }
    dend_26 { pt3dadd( -18.6091, -43.9149, -1.56325, 0.81 ) }
    dend_26 { pt3dadd( -19.1937, -44.7537, -1.80963, 1.03 ) }
    dend_26 { pt3dadd( -19.5097, -45.2141, -2.01591, 1.33 ) }
    dend_26 { pt3dadd( -19.8906, -45.8358, -2.36516, 1.62 ) }
    dend_26 { pt3dadd( -20.2802, -46.5718, -2.83108, 1.55 ) }
    dend_26 { pt3dadd( -20.6572, -47.3992, -3.33942, 1.18 ) }
    dend_26 { pt3dadd( -21.055, -48.3888, -3.88341, 0.96 ) }
    dend_26 { pt3dadd( -21.0753, -48.4441, -3.90967, 0.96 ) }
    dend_26 { pt3dadd( -21.5019, -49.7292, -4.43234, 0.88 ) }
    dend_26 { pt3dadd( -21.8399, -50.8379, -4.78253, 0.88 ) }
    dend_26 { pt3dadd( -22.0905, -51.8091, -5.00685, 1.18 ) }
    dend_26 { pt3dadd( -22.3046, -52.7892, -5.18495, 1.4 ) }
    dend_26 { pt3dadd( -22.5404, -53.8809, -5.3581, 1.4 ) }
    dend_26 { pt3dadd( -22.7354, -54.6365, -5.48701, 1.18 ) }
    dend_26 { pt3dadd( -23.0166, -55.5019, -5.63404, 0.96 ) }
    dend_26 { pt3dadd( -23.3405, -56.2789, -5.79395, 1.11 ) }
    dend_26 { pt3dadd( -23.8813, -57.2485, -6.08012, 0.88 ) }
    dend_26 { pt3dadd( -24.3551, -57.9915, -6.33193, 0.74 ) }
    dend_26 { pt3dadd( -24.924, -58.7267, -6.61133, 0.96 ) }
    dend_26 { pt3dadd( -25.3712, -59.2036, -6.82958, 1.25 ) }
    dend_26 { pt3dadd( -26.0556, -59.7883, -7.15766, 1.33 ) }
    dend_26 { pt3dadd( -26.9608, -60.3859, -7.55378, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 7.86007, 33.811, -3.13941, 1.4 ) }
    dend_14 { pt3dadd( 7.49951, 35.0239, -3.72522, 1.4 ) }
    dend_14 { pt3dadd( 7.28733, 35.8764, -4.05415, 1.4 ) }
    dend_14 { pt3dadd( 6.97316, 37.1319, -4.33792, 1.25 ) }
    dend_14 { pt3dadd( 6.91981, 37.3319, -4.34727, 1.25 ) }
    dend_14 { pt3dadd( 6.75307, 37.9426, -4.31814, 1.03 ) }
    dend_14 { pt3dadd( 6.55047, 38.6801, -4.25206, 1.03 ) }
    dend_14 { pt3dadd( 6.37129, 39.3986, -4.10342, 1.18 ) }
    dend_14 { pt3dadd( 6.04597, 40.5372, -3.68954, 1.33 ) }
    dend_14 { pt3dadd( 5.71347, 41.5838, -3.16424, 1.33 ) }
    dend_14 { pt3dadd( 5.48067, 42.3206, -2.76501, 1.47 ) }
    dend_14 { pt3dadd( 5.32284, 42.8651, -2.46323, 1.47 ) }
    dend_14 { pt3dadd( 5.14297, 43.619, -2.06937, 1.47 ) }
    dend_14 { pt3dadd( 4.85351, 45.2482, -1.31715, 1.4 ) }
    dend_14 { pt3dadd( 4.74097, 46.2695, -0.922352, 1.4 ) }
    dend_14 { pt3dadd( 4.70627, 46.9422, -0.709006, 1.4 ) }
    dend_14 { pt3dadd( 4.70565, 47.8712, -0.455849, 1.62 ) }
    dend_14 { pt3dadd( 4.75185, 48.9464, -0.227947, 1.18 ) }
    dend_14 { pt3dadd( 4.83757, 49.819, -0.120143, 1.18 ) }
    dend_14 { pt3dadd( 4.84839, 49.8886, -0.11915, 1.18 ) }
    dend_14 { pt3dadd( 5.01476, 51.0401, -0.142448, 1.18 ) }
    dend_14 { pt3dadd( 5.12266, 51.9636, -0.165026, 1.47 ) }
    dend_14 { pt3dadd( 5.14945, 52.2531, -0.173434, 1.47 ) }
    dend_14 { pt3dadd( 5.23157, 53.2344, -0.202642, 1.4 ) }
    dend_14 { pt3dadd( 5.31811, 54.2737, -0.231494, 1.33 ) }
    dend_14 { pt3dadd( 5.41761, 55.52, -0.265057, 1.33 ) }
    dend_14 { pt3dadd( 5.49908, 56.6919, -0.295873, 1.62 ) }
    dend_14 { pt3dadd( 5.53915, 57.5443, -0.321712, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.86007, 33.811, -3.13941, 1.18 ) }
    dend_1 { pt3dadd( 8.59746, 33.9912, -2.81776, 1.18 ) }
    dend_1 { pt3dadd( 9.26268, 34.1294, -2.39714, 0.96 ) }
    dend_1 { pt3dadd( 9.62459, 34.1979, -2.15657, 1.25 ) }
    dend_1 { pt3dadd( 9.66542, 34.2078, -2.12545, 1.25 ) }
    dend_1 { pt3dadd( 10.2565, 34.3748, -1.67145, 1.25 ) }
    dend_1 { pt3dadd( 10.8065, 34.5631, -1.25527, 1.25 ) }
    dend_1 { pt3dadd( 11.8002, 34.9258, -0.506892, 1.18 ) }
    dend_1 { pt3dadd( 12.2615, 35.1201, -0.167377, 0.81 ) }
    dend_1 { pt3dadd( 12.8971, 35.4363, 0.306387, 0.96 ) }
    dend_1 { pt3dadd( 13.3886, 35.736, 0.645243, 0.96 ) }
    dend_1 { pt3dadd( 13.7822, 36.0565, 0.872672, 0.96 ) }
    dend_1 { pt3dadd( 13.8099, 36.0825, 0.882506, 0.96 ) }
    dend_1 { pt3dadd( 14.2807, 36.5332, 0.92755, 0.96 ) }
    dend_1 { pt3dadd( 14.3128, 36.5648, 0.927625, 0.96 ) }
    dend_1 { pt3dadd( 14.7448, 36.977, 0.887417, 1.18 ) }
    dend_1 { pt3dadd( 15.3058, 37.5087, 0.830945, 1.4 ) }
    dend_1 { pt3dadd( 15.772, 37.9303, 0.788001, 1.33 ) }
    dend_1 { pt3dadd( 15.8251, 37.977, 0.786612, 1.33 ) }
    dend_1 { pt3dadd( 16.3425, 38.4049, 0.814782, 1.18 ) }
    dend_1 { pt3dadd( 16.4302, 38.4693, 0.834655, 1.18 ) }
    dend_1 { pt3dadd( 16.8109, 38.7205, 0.982131, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 16.9098, 38.7796, 1.04405, 1.18 ) }
    dend_1 { pt3dadd( 17.3986, 39.0625, 1.43464, 0.96 ) }
    dend_1 { pt3dadd( 17.8625, 39.3351, 1.85082, 0.96 ) }
    dend_1 { pt3dadd( 18.489, 39.7405, 2.49602, 1.03 ) }
    dend_1 { pt3dadd( 18.535, 39.7753, 2.54454, 1.03 ) }
    dend_1 { pt3dadd( 19.2167, 40.3958, 3.26061, 1.03 ) }
    dend_1 { pt3dadd( 19.2596, 40.4373, 3.30668, 1.03 ) }
    dend_1 { pt3dadd( 19.5004, 40.7028, 3.57306, 1.03 ) }
    dend_1 { pt3dadd( 19.8166, 41.1182, 3.92965, 1.18 ) }
    dend_1 { pt3dadd( 20.2207, 41.7457, 4.29305, 1.4 ) }
    dend_1 { pt3dadd( 20.5547, 42.2872, 4.53089, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 4.58698, -101.162, -76.8542, 0.52 ) }
    dend_102 { pt3dadd( 3.82204, -101.901, -77.1488, 0.52 ) }
    dend_102 { pt3dadd( 2.89437, -102.871, -77.4586, 0.52 ) }
    dend_102 { pt3dadd( 2.54358, -103.29, -77.6057, 0.96 ) }
    dend_102 { pt3dadd( 1.81277, -104.316, -78.0418, 1.33 ) }
    dend_102 { pt3dadd( 1.43841, -104.947, -78.3358, 0.81 ) }
    dend_102 { pt3dadd( 1.02326, -105.844, -78.7814, 0.52 ) }
    dend_102 { pt3dadd( 1.01419, -105.893, -78.8072, 0.52 ) }
    dend_102 { pt3dadd( 1.12383, -106.941, -79.5465, 0.88 ) }
    dend_102 { pt3dadd( 1.3703, -107.666, -80.196, 1.25 ) }
    dend_102 { pt3dadd( 1.58098, -108.038, -80.6072, 1.47 ) }
    dend_102 { pt3dadd( 1.92111, -108.515, -81.2338, 1.47 ) }
    dend_102 { pt3dadd( 2.36269, -109.026, -81.9874, 0.88 ) }
    dend_102 { pt3dadd( 3.02853, -109.753, -83.1207, 0.88 ) }
    dend_102 { pt3dadd( 3.35827, -110.116, -83.7355, 0.37 ) }
    dend_102 { pt3dadd( 3.68161, -110.558, -84.4612, 0.66 ) }
    dend_102 { pt3dadd( 3.69997, -110.599, -84.5236, 0.66 ) }
    dend_102 { pt3dadd( 3.75916, -110.892, -84.92, 0.96 ) }
    dend_102 { pt3dadd( 3.77966, -111.74, -85.8396, 1.11 ) }
    dend_102 { pt3dadd( 3.65149, -113.023, -86.8582, 0.44 ) }
    dend_102 { pt3dadd( 3.54195, -113.734, -87.3122, 0.44 ) }
    dend_102 { pt3dadd( 3.35066, -114.806, -87.9408, 0.52 ) }
    dend_102 { pt3dadd( 3.24084, -115.399, -88.2861, 0.74 ) }
    dend_102 { pt3dadd( 3.10392, -116.063, -88.6287, 0.74 ) }
    dend_102 { pt3dadd( 2.90349, -116.908, -89.0338, 1.03 ) }
    dend_102 { pt3dadd( 2.59555, -118.307, -89.7556, 0.88 ) }
    dend_102 { pt3dadd( 2.3488, -119.64, -90.5378, 1.18 ) }
    dend_102 { pt3dadd( 2.16512, -120.901, -91.4276, 0.96 ) }
    dend_102 { pt3dadd( 2.02899, -121.912, -92.3787, 0.59 ) }
    dend_102 { pt3dadd( 1.86992, -123.024, -93.6339, 0.29 ) }
    dend_102 { pt3dadd( 1.74372, -123.84, -94.6777, 0.88 ) }
    dend_102 { pt3dadd( 1.69616, -124.081, -95.0069, 1.47 ) }
    dend_102 { pt3dadd( 1.48246, -125.091, -96.3936, 1.33 ) }
    dend_102 { pt3dadd( 1.13343, -126.608, -98.419, 0.52 ) }
    dend_102 { pt3dadd( 1.03417, -127.017, -98.9215, 0.29 ) }
    dend_102 { pt3dadd( 0.943126, -127.38, -99.2565, 0.96 ) }
    dend_102 { pt3dadd( 0.648057, -128.419, -99.988, 1.77 ) }
    dend_102 { pt3dadd( 0.528855, -128.857, -100.276, 1.77 ) }
    dend_102 { pt3dadd( 0.290096, -129.823, -100.814, 1.11 ) }
    dend_102 { pt3dadd( 0.110533, -130.607, -101.346, 0.37 ) }
    dend_102 { pt3dadd( -0.0206538, -131.135, -101.918, 0.29 ) }
    dend_102 { pt3dadd( -0.21845, -131.902, -102.975, 0.74 ) }
    dend_102 { pt3dadd( -0.450295, -132.978, -104.724, 1.33 ) }
    dend_102 { pt3dadd( -0.45686, -133.01, -104.783, 1.33 ) }
    dend_102 { pt3dadd( -0.664638, -133.971, -106.834, 1.55 ) }
    dend_102 { pt3dadd( -0.949631, -135.181, -109.603, 0.96 ) }
    dend_102 { pt3dadd( -0.957369, -135.21, -109.669, 0.96 ) }
    dend_102 { pt3dadd( -1.0554, -135.592, -110.43, 1.18 ) }
    dend_102 { pt3dadd( -1.06165, -135.622, -110.479, 1.18 ) }
    dend_102 { pt3dadd( -1.27149, -136.85, -112.089, 0.44 ) }
    dend_102 { pt3dadd( -1.39507, -137.525, -112.637, 0.37 ) }
    dend_102 { pt3dadd( -1.56772, -138.117, -113.133, 0.52 ) }
    dend_102 { pt3dadd( -1.73668, -138.586, -113.615, 0.81 ) }
    dend_102 { pt3dadd( -1.94132, -139.146, -114.225, 1.33 ) }
    dend_102 { pt3dadd( -2.06508, -139.522, -114.658, 0.96 ) }
    dend_102 { pt3dadd( -2.37093, -140.685, -116.084, 1.25 ) }
    dend_102 { pt3dadd( -2.80764, -143.039, -119.217, 0.52 ) }
    dend_102 { pt3dadd( -2.94407, -144.116, -120.779, 0.44 ) }
    dend_102 { pt3dadd( -2.96735, -144.638, -121.597, 0.59 ) }
    dend_102 { pt3dadd( -2.92478, -145.479, -123.012, 0.59 ) }
    dend_102 { pt3dadd( -2.76689, -146.249, -124.381, 0.74 ) }
    dend_102 { pt3dadd( -2.59437, -146.624, -125.065, 1.18 ) }
    dend_102 { pt3dadd( -2.56922, -146.657, -125.118, 1.18 ) }
    dend_102 { pt3dadd( -2.26802, -146.967, -125.625, 1.47 ) }
    dend_102 { pt3dadd( -2.2354, -146.995, -125.676, 1.47 ) }
    dend_102 { pt3dadd( -1.41287, -147.679, -126.712, 1.18 ) }
    dend_102 { pt3dadd( -1.3747, -147.715, -126.757, 1.18 ) }
    dend_102 { pt3dadd( -0.999386, -148.17, -127.183, 1.18 ) }
    dend_102 { pt3dadd( -0.512762, -149.001, -127.835, 0.52 ) }
    dend_102 { pt3dadd( -0.300289, -149.588, -128.212, 0.29 ) }
    dend_102 { pt3dadd( -0.13944, -150.286, -128.63, 0.29 ) }
    dend_102 { pt3dadd( -0.0667478, -150.777, -128.913, 0.88 ) }
    dend_102 { pt3dadd( -0.0123326, -151.46, -129.325, 1.11 ) }
    dend_102 { pt3dadd( 0.0145078, -152.789, -130.132, 0.81 ) }
    dend_102 { pt3dadd( -0.0117194, -153.644, -130.731, 0.37 ) }
    dend_102 { pt3dadd( -0.133203, -154.564, -131.649, 0.29 ) }
    dend_102 { pt3dadd( -0.23643, -154.996, -132.189, 0.96 ) }
    dend_102 { pt3dadd( -0.253514, -155.038, -132.254, 0.96 ) }
    dend_102 { pt3dadd( -0.470207, -155.418, -132.905, 1.18 ) }
    dend_102 { pt3dadd( -1.08117, -156.263, -134.376, 1.11 ) }
    dend_102 { pt3dadd( -2.37637, -157.793, -136.942, 0.44 ) }
    dend_102 { pt3dadd( -2.84188, -158.281, -137.709, 0.74 ) }
    dend_102 { pt3dadd( -3.67316, -159.138, -138.9, 0.59 ) }
    dend_102 { pt3dadd( -4.15322, -159.643, -139.508, 0.81 ) }
    dend_102 { pt3dadd( -4.82653, -160.367, -140.199, 0.44 ) }
    dend_102 { pt3dadd( -5.20554, -160.87, -140.476, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( -5.23512, -160.931, -140.488, 0.59 ) }
    dend_102 { pt3dadd( -5.49996, -161.785, -140.614, 0.52 ) }
    dend_102 { pt3dadd( -5.62438, -162.447, -140.701, 1.03 ) }
    dend_102 { pt3dadd( -5.7115, -163.215, -140.837, 1.4 ) }
    dend_102 { pt3dadd( -5.78373, -164.375, -141.05, 1.33 ) }
    dend_102 { pt3dadd( -5.83426, -165.182, -141.261, 1.11 ) }
    dend_102 { pt3dadd( -5.8732, -165.971, -141.619, 0.59 ) }
    dend_102 { pt3dadd( -5.8738, -166.028, -141.656, 0.59 ) }
    dend_102 { pt3dadd( -5.85697, -166.532, -142.103, 0.44 ) }
    dend_102 { pt3dadd( -5.80148, -167.313, -143.03, 0.44 ) }
    dend_102 { pt3dadd( -5.72347, -168.158, -144.251, 0.74 ) }
    dend_102 { pt3dadd( -5.60938, -169.345, -146.132, 0.74 ) }
    dend_102 { pt3dadd( -5.57863, -169.628, -146.585, 1.25 ) }
    dend_102 { pt3dadd( -5.50894, -170.509, -147.983, 1.55 ) }
    dend_102 { pt3dadd( -5.46848, -171.468, -149.494, 1.77 ) }
    dend_102 { pt3dadd( -5.50812, -172.662, -151.326, 0.74 ) }
    dend_102 { pt3dadd( -5.58546, -173.321, -152.205, 0.52 ) }
    dend_102 { pt3dadd( -5.68508, -173.789, -152.724, 0.52 ) }
    dend_102 { pt3dadd( -5.98183, -174.812, -153.74, 0.96 ) }
    dend_102 { pt3dadd( -6.1397, -175.258, -154.095, 1.18 ) }
    dend_102 { pt3dadd( -6.64361, -176.388, -154.82, 0.52 ) }
    dend_102 { pt3dadd( -6.95821, -176.959, -155.13, 0.52 ) }
    dend_102 { pt3dadd( -7.18742, -177.313, -155.312, 0.66 ) }
    dend_102 { pt3dadd( -7.22488, -177.364, -155.337, 0.66 ) }
    dend_102 { pt3dadd( -7.54177, -177.751, -155.494, 0.44 ) }
    dend_102 { pt3dadd( -8.3703, -178.67, -155.81, 0.29 ) }
    dend_102 { pt3dadd( -8.41875, -178.717, -155.817, 0.29 ) }
    dend_102 { pt3dadd( -8.80206, -179.04, -155.851, 0.52 ) }
    dend_102 { pt3dadd( -9.18331, -179.352, -155.846, 0.81 ) }
    dend_102 { pt3dadd( -9.61283, -179.741, -155.779, 0.96 ) }
    dend_102 { pt3dadd( -10.0084, -180.131, -155.656, 1.11 ) }
    dend_102 { pt3dadd( -10.5044, -180.701, -155.405, 0.29 ) }
    dend_102 { pt3dadd( -10.5641, -180.777, -155.369, 0.29 ) }
    dend_102 { pt3dadd( -11.0681, -181.452, -155.035, 0.29 ) }
    dend_102 { pt3dadd( -11.5255, -182.057, -154.71, 0.88 ) }
    dend_102 { pt3dadd( -11.6891, -182.271, -154.586, 1.03 ) }
    dend_102 { pt3dadd( -12.0722, -182.729, -154.301, 1.18 ) }
    dend_102 { pt3dadd( -12.6966, -183.354, -153.896, 0.29 ) }
    dend_102 { pt3dadd( -13.4896, -184.02, -153.456, 0.29 ) }
    dend_102 { pt3dadd( -13.843, -184.267, -153.306, 0.59 ) }
    dend_102 { pt3dadd( -13.8988, -184.303, -153.29, 0.59 ) }
    dend_102 { pt3dadd( -14.5708, -184.726, -153.165, 0.59 ) }
    dend_102 { pt3dadd( -15.242, -185.185, -153.114, 1.11 ) }
    dend_102 { pt3dadd( -15.8124, -185.632, -153.128, 1.4 ) }
    dend_102 { pt3dadd( -16.4979, -186.247, -153.198, 0.96 ) }
    dend_102 { pt3dadd( -17.1667, -186.951, -153.296, 0.59 ) }
    dend_102 { pt3dadd( -17.9076, -187.86, -153.425, 0.37 ) }
    dend_102 { pt3dadd( -18.4339, -188.635, -153.526, 0.37 ) }
    dend_102 { pt3dadd( -18.7305, -189.135, -153.557, 0.74 ) }
    dend_102 { pt3dadd( -18.7623, -189.196, -153.558, 0.74 ) }
    dend_102 { pt3dadd( -19.0376, -189.84, -153.505, 0.74 ) }
    dend_102 { pt3dadd( -19.2353, -190.358, -153.436, 1.03 ) }
    dend_102 { pt3dadd( -19.4474, -190.965, -153.324, 1.33 ) }
    dend_102 { pt3dadd( -19.7833, -191.805, -153.122, 1.47 ) }
    dend_102 { pt3dadd( -20.1781, -192.693, -152.888, 0.37 ) }
    dend_102 { pt3dadd( -20.6708, -193.76, -152.601, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 4.58698, -101.162, -76.8542, 0.52 ) }
    dend_99 { pt3dadd( 5.52087, -101.581, -76.0684, 0.52 ) }
    dend_99 { pt3dadd( 6.58488, -102.141, -75.2729, 0.44 ) }
    dend_99 { pt3dadd( 7.11731, -102.476, -74.9293, 0.88 ) }
    dend_99 { pt3dadd( 7.159, -102.507, -74.9057, 0.88 ) }
    dend_99 { pt3dadd( 7.50653, -102.797, -74.7292, 1.03 ) }
    dend_99 { pt3dadd( 7.87358, -103.139, -74.5617, 0.81 ) }
    dend_99 { pt3dadd( 8.2742, -103.628, -74.4685, 0.29 ) }
    dend_99 { pt3dadd( 8.66128, -104.192, -74.4361, 0.22 ) }
    dend_99 { pt3dadd( 8.93622, -104.629, -74.4206, 0.52 ) }
    dend_99 { pt3dadd( 9.07442, -104.867, -74.4093, 0.74 ) }
    dend_99 { pt3dadd( 9.39997, -105.496, -74.3719, 0.29 ) }
    dend_99 { pt3dadd( 9.65385, -106.056, -74.3267, 0.29 ) }
    dend_99 { pt3dadd( 9.87565, -106.619, -74.277, 0.74 ) }
    dend_99 { pt3dadd( 9.98899, -106.944, -74.2403, 1.03 ) }
    dend_99 { pt3dadd( 10.123, -107.348, -74.1907, 0.96 ) }
    dend_99 { pt3dadd( 10.2526, -107.778, -74.1356, 0.59 ) }
    dend_99 { pt3dadd( 10.4431, -108.386, -74.0383, 0.22 ) }
    dend_99 { pt3dadd( 10.5799, -108.755, -73.9696, 0.37 ) }
    dend_99 { pt3dadd( 10.6236, -108.846, -73.9529, 0.37 ) }
    dend_99 { pt3dadd( 10.8506, -109.204, -73.9074, 0.37 ) }
    dend_99 { pt3dadd( 10.8847, -109.246, -73.9059, 0.37 ) }
    dend_99 { pt3dadd( 11.4372, -109.84, -74.0158, 0.29 ) }
    dend_99 { pt3dadd( 11.8305, -110.232, -74.1565, 0.88 ) }
    dend_99 { pt3dadd( 12.0755, -110.48, -74.2652, 1.18 ) }
    dend_99 { pt3dadd( 12.542, -110.978, -74.5023, 0.29 ) }
    dend_99 { pt3dadd( 12.9694, -111.455, -74.7489, 0.29 ) }
    dend_99 { pt3dadd( 13.6097, -112.195, -75.0978, 0.52 ) }
    dend_99 { pt3dadd( 13.886, -112.534, -75.2417, 0.81 ) }
    dend_99 { pt3dadd( 14.3296, -113.088, -75.431, 0.22 ) }
    dend_99 { pt3dadd( 14.5338, -113.353, -75.4973, 0.59 ) }
    dend_99 { pt3dadd( 14.5762, -113.411, -75.5074, 0.59 ) }
    dend_99 { pt3dadd( 15.2119, -114.34, -75.6176, 0.44 ) }
    dend_99 { pt3dadd( 15.6484, -115.0, -75.6641, 0.66 ) }
    dend_99 { pt3dadd( 15.9352, -115.448, -75.7043, 0.59 ) }
    dend_99 { pt3dadd( 16.168, -115.826, -75.7603, 0.44 ) }
    dend_99 { pt3dadd( 16.5351, -116.448, -75.889, 0.96 ) }
    dend_99 { pt3dadd( 16.816, -116.918, -76.0567, 1.33 ) }
    dend_99 { pt3dadd( 17.1166, -117.383, -76.3339, 0.59 ) }
    dend_99 { pt3dadd( 17.1503, -117.426, -76.3676, 0.59 ) }
    dend_99 { pt3dadd( 17.4845, -117.774, -76.7293, 0.59 ) }
    dend_99 { pt3dadd( 17.5106, -117.8, -76.7625, 0.59 ) }
    dend_99 { pt3dadd( 18.0129, -118.369, -77.5519, 0.29 ) }
    dend_99 { pt3dadd( 18.216, -118.656, -77.9511, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 18.3808, -118.934, -78.2887, 0.44 ) }
    dend_99 { pt3dadd( 18.606, -119.362, -78.7497, 0.44 ) }
    dend_99 { pt3dadd( 18.8631, -119.932, -79.2676, 1.33 ) }
    dend_99 { pt3dadd( 19.1653, -120.625, -79.8304, 1.11 ) }
    dend_99 { pt3dadd( 19.4339, -121.278, -80.2903, 0.52 ) }
    dend_99 { pt3dadd( 19.6984, -121.87, -80.7096, 0.29 ) }
    dend_99 { pt3dadd( 19.7179, -121.912, -80.7385, 0.29 ) }
    dend_99 { pt3dadd( 19.9226, -122.269, -80.956, 0.29 ) }
    dend_99 { pt3dadd( 20.3192, -122.699, -81.2124, 0.29 ) }
    dend_99 { pt3dadd( 20.5972, -122.88, -81.3111, 0.96 ) }
    dend_99 { pt3dadd( 20.9608, -122.99, -81.4015, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -1.41673, -185.957, -51.3651, 0.29 ) }
    dend_97 { pt3dadd( -2.36758, -186.574, -50.3021, 0.29 ) }
    dend_97 { pt3dadd( -2.91488, -187.05, -49.574, 0.29 ) }
    dend_97 { pt3dadd( -3.07948, -187.203, -49.3519, 0.74 ) }
    dend_97 { pt3dadd( -3.12152, -187.243, -49.2962, 0.74 ) }
    dend_97 { pt3dadd( -3.39906, -187.497, -48.9536, 0.74 ) }
    dend_97 { pt3dadd( -4.0602, -188.001, -48.3187, 0.29 ) }
    dend_97 { pt3dadd( -4.61744, -188.394, -47.9517, 0.29 ) }
    dend_97 { pt3dadd( -4.90766, -188.558, -47.8152, 0.74 ) }
    dend_97 { pt3dadd( -5.17425, -188.677, -47.7298, 1.11 ) }
    dend_97 { pt3dadd( -5.63013, -188.87, -47.6095, 1.11 ) }
    dend_97 { pt3dadd( -6.84167, -189.37, -47.3633, 0.29 ) }
    dend_97 { pt3dadd( -7.23647, -189.55, -47.2891, 0.37 ) }
    dend_97 { pt3dadd( -7.76916, -189.858, -47.1143, 0.37 ) }
    dend_97 { pt3dadd( -8.3301, -190.275, -46.8316, 0.66 ) }
    dend_97 { pt3dadd( -8.86185, -190.773, -46.4715, 0.52 ) }
    dend_97 { pt3dadd( -9.158, -191.1, -46.2228, 0.96 ) }
    dend_97 { pt3dadd( -9.66899, -191.728, -45.7256, 1.33 ) }
    dend_97 { pt3dadd( -10.431, -192.617, -45.0271, 0.59 ) }
    dend_97 { pt3dadd( -10.7698, -193.009, -44.6931, 0.37 ) }
    dend_97 { pt3dadd( -11.0409, -193.314, -44.4198, 0.22 ) }
    dend_97 { pt3dadd( -11.5272, -193.836, -43.9539, 0.22 ) }
    dend_97 { pt3dadd( -11.9455, -194.286, -43.5687, 0.66 ) }
    dend_97 { pt3dadd( -12.4819, -194.897, -43.1183, 0.66 ) }
    dend_97 { pt3dadd( -13.2848, -195.924, -42.4909, 0.52 ) }
    dend_97 { pt3dadd( -13.3939, -196.084, -42.4015, 0.29 ) }
    dend_97 { pt3dadd( -13.6823, -196.559, -42.1819, 0.74 ) }
    dend_97 { pt3dadd( -13.7965, -196.782, -42.0716, 0.74 ) }
    dend_97 { pt3dadd( -14.2898, -197.842, -41.5463, 0.37 ) }
    dend_97 { pt3dadd( -14.6883, -198.769, -41.1191, 0.44 ) }
    dend_97 { pt3dadd( -14.8961, -199.228, -40.939, 0.59 ) }
    dend_97 { pt3dadd( -15.2652, -200.018, -40.6317, 0.52 ) }
    dend_97 { pt3dadd( -16.0873, -201.634, -39.9929, 0.37 ) }
    dend_97 { pt3dadd( -16.4833, -202.323, -39.7117, 0.37 ) }
    dend_97 { pt3dadd( -16.9767, -203.065, -39.4024, 0.29 ) }
    dend_97 { pt3dadd( -17.6246, -203.933, -39.0298, 0.59 ) }
    dend_97 { pt3dadd( -17.7584, -204.106, -38.9613, 0.88 ) }
    dend_97 { pt3dadd( -18.2068, -204.632, -38.7762, 0.66 ) }
    dend_97 { pt3dadd( -18.7769, -205.222, -38.6479, 0.15 ) }
    dend_97 { pt3dadd( -19.4443, -205.801, -38.4834, 0.15 ) }
    dend_97 { pt3dadd( -19.5002, -205.839, -38.4693, 0.15 ) }
    dend_97 { pt3dadd( -20.1872, -206.231, -38.3454, 0.59 ) }
    dend_97 { pt3dadd( -20.6576, -206.505, -38.3032, 0.88 ) }
    dend_97 { pt3dadd( -20.7095, -206.538, -38.3029, 0.88 ) }
    dend_97 { pt3dadd( -21.0954, -206.812, -38.3279, 0.88 ) }
    dend_97 { pt3dadd( -21.679, -207.293, -38.4065, 0.88 ) }
    dend_97 { pt3dadd( -22.5419, -208.165, -38.5824, 0.29 ) }
    dend_97 { pt3dadd( -22.959, -208.662, -38.6891, 0.29 ) }
    dend_97 { pt3dadd( -23.291, -209.145, -38.7897, 0.66 ) }
    dend_97 { pt3dadd( -23.5434, -209.567, -38.8624, 0.81 ) }
    dend_97 { pt3dadd( -23.8572, -210.213, -38.9527, 0.66 ) }
    dend_97 { pt3dadd( -24.2079, -211.084, -39.0365, 0.29 ) }
    dend_97 { pt3dadd( -24.3692, -211.541, -39.0587, 0.81 ) }
    dend_97 { pt3dadd( -24.4898, -211.874, -39.0675, 0.81 ) }
    dend_97 { pt3dadd( -24.8178, -212.653, -39.0557, 0.22 ) }
    dend_97 { pt3dadd( -25.065, -213.172, -38.9859, 0.22 ) }
    dend_97 { pt3dadd( -25.2199, -213.483, -38.907, 0.81 ) }
    dend_97 { pt3dadd( -25.3626, -213.738, -38.8163, 0.96 ) }
    dend_97 { pt3dadd( -25.8361, -214.5, -38.3856, 0.22 ) }
    dend_97 { pt3dadd( -26.127, -214.895, -37.9494, 0.22 ) }
    dend_97 { pt3dadd( -26.5093, -215.325, -37.1306, 0.74 ) }
    dend_97 { pt3dadd( -26.6372, -215.453, -36.8161, 1.18 ) }
    dend_97 { pt3dadd( -26.8553, -215.658, -36.2376, 0.74 ) }
    dend_97 { pt3dadd( -27.3678, -216.092, -34.8471, 0.59 ) }
    dend_97 { pt3dadd( -28.0717, -216.645, -32.947, 0.44 ) }
    dend_97 { pt3dadd( -28.6445, -217.134, -31.4544, 0.37 ) }
    dend_97 { pt3dadd( -28.6749, -217.162, -31.3849, 0.37 ) }
    dend_97 { pt3dadd( -28.8437, -217.334, -31.0299, 0.66 ) }
    dend_97 { pt3dadd( -28.982, -217.557, -30.692, 0.74 ) }
    dend_97 { pt3dadd( -29.2911, -218.261, -29.8684, 0.29 ) }
    dend_97 { pt3dadd( -29.4852, -218.828, -29.3004, 0.29 ) }
    dend_97 { pt3dadd( -29.6771, -219.392, -28.6985, 0.29 ) }
    dend_97 { pt3dadd( -29.7207, -219.537, -28.5349, 0.74 ) }
    dend_97 { pt3dadd( -30.0446, -220.993, -26.7421, 0.66 ) }
    dend_97 { pt3dadd( -30.1183, -221.646, -25.8471, 0.22 ) }
    dend_97 { pt3dadd( -30.1097, -221.824, -25.5428, 0.22 ) }
    dend_97 { pt3dadd( -30.0537, -222.162, -24.7406, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -1.41673, -185.957, -51.3651, 0.37 ) }
    dend_94 { pt3dadd( -0.967234, -187.55, -52.6733, 0.37 ) }
    dend_94 { pt3dadd( -0.725584, -188.429, -53.3174, 0.37 ) }
    dend_94 { pt3dadd( -0.712464, -188.482, -53.3507, 0.37 ) }
    dend_94 { pt3dadd( -0.591922, -189.052, -53.6682, 0.81 ) }
    dend_94 { pt3dadd( -0.424315, -189.906, -54.1012, 0.88 ) }
    dend_94 { pt3dadd( -0.358232, -190.263, -54.2676, 0.88 ) }
    dend_94 { pt3dadd( -0.231758, -190.993, -54.5428, 0.52 ) }
    dend_94 { pt3dadd( -0.115082, -191.827, -54.8431, 0.52 ) }
    dend_94 { pt3dadd( -0.0508165, -192.597, -55.1516, 0.52 ) }
    dend_94 { pt3dadd( -0.0547606, -193.026, -55.335, 0.96 ) }
    dend_94 { pt3dadd( -0.0894136, -193.403, -55.4956, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -0.250817, -194.423, -55.9616, 0.37 ) }
    dend_94 { pt3dadd( -0.395808, -195.031, -56.2509, 0.29 ) }
    dend_94 { pt3dadd( -0.596808, -195.63, -56.5592, 0.59 ) }
    dend_94 { pt3dadd( -0.841783, -196.186, -56.8444, 0.96 ) }
    dend_94 { pt3dadd( -1.0519, -196.589, -57.0409, 1.18 ) }
    dend_94 { pt3dadd( -1.0827, -196.642, -57.0634, 1.18 ) }
    dend_94 { pt3dadd( -1.27906, -196.964, -57.1958, 1.18 ) }
    dend_94 { pt3dadd( -1.5902, -197.551, -57.4486, 1.03 ) }
    dend_94 { pt3dadd( -1.89285, -198.244, -57.7304, 0.59 ) }
    dend_94 { pt3dadd( -2.06129, -198.709, -57.8896, 0.52 ) }
    dend_94 { pt3dadd( -2.19277, -199.096, -57.9935, 0.66 ) }
    dend_94 { pt3dadd( -2.54351, -200.082, -58.1822, 0.29 ) }
    dend_94 { pt3dadd( -2.80313, -200.766, -58.2457, 0.44 ) }
    dend_94 { pt3dadd( -2.92684, -201.079, -58.2351, 0.52 ) }
    dend_94 { pt3dadd( -3.35103, -202.076, -58.1116, 0.66 ) }
    dend_94 { pt3dadd( -3.61898, -202.641, -58.0095, 0.37 ) }
    dend_94 { pt3dadd( -3.94802, -203.269, -57.8707, 0.88 ) }
    dend_94 { pt3dadd( -4.15916, -203.626, -57.7809, 1.18 ) }
    dend_94 { pt3dadd( -4.59575, -204.326, -57.6262, 0.96 ) }
    dend_94 { pt3dadd( -4.89213, -204.824, -57.5409, 0.66 ) }
    dend_94 { pt3dadd( -5.08446, -205.195, -57.4847, 1.03 ) }
    dend_94 { pt3dadd( -5.37055, -205.898, -57.3611, 0.52 ) }
    dend_94 { pt3dadd( -5.62358, -206.783, -57.1854, 0.52 ) }
    dend_94 { pt3dadd( -5.72391, -207.384, -57.0655, 1.11 ) }
    dend_94 { pt3dadd( -5.74869, -207.979, -56.9446, 1.11 ) }
    dend_94 { pt3dadd( -5.70567, -208.925, -56.762, 0.74 ) }
    dend_94 { pt3dadd( -5.65329, -209.458, -56.6664, 0.44 ) }
    dend_94 { pt3dadd( -5.54741, -210.268, -56.5319, 0.59 ) }
    dend_94 { pt3dadd( -5.40739, -211.373, -56.3803, 0.59 ) }
    dend_94 { pt3dadd( -5.32394, -212.43, -56.2767, 0.59 ) }
    dend_94 { pt3dadd( -5.2968, -213.328, -56.2145, 0.52 ) }
    dend_94 { pt3dadd( -5.31642, -213.903, -56.1964, 1.18 ) }
    dend_94 { pt3dadd( -5.3487, -214.273, -56.1874, 1.33 ) }
    dend_94 { pt3dadd( -5.50279, -215.269, -56.1747, 1.18 ) }
    dend_94 { pt3dadd( -5.67608, -216.063, -56.1633, 0.88 ) }
    dend_94 { pt3dadd( -5.84102, -216.698, -56.1536, 0.52 ) }
    dend_94 { pt3dadd( -6.01496, -217.41, -56.143, 0.66 ) }
    dend_94 { pt3dadd( -6.02701, -217.484, -56.1387, 0.66 ) }
    dend_94 { pt3dadd( -6.05431, -218.099, -56.0817, 0.81 ) }
    dend_94 { pt3dadd( -6.04808, -218.805, -56.0045, 0.44 ) }
    dend_94 { pt3dadd( -6.0019, -219.57, -55.9079, 0.44 ) }
    dend_94 { pt3dadd( -5.90667, -220.507, -55.7743, 0.44 ) }
    dend_94 { pt3dadd( -5.71722, -221.695, -55.5771, 0.37 ) }
    dend_94 { pt3dadd( -5.56526, -222.471, -55.4327, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -4.59491, -49.4308, -4.9727, 1.03 ) }
    dend_65 { pt3dadd( -6.07781, -49.8653, -4.51717, 1.03 ) }
    dend_65 { pt3dadd( -7.06342, -50.3147, -4.04993, 1.03 ) }
    dend_65 { pt3dadd( -8.24876, -51.0305, -3.40654, 0.96 ) }
    dend_65 { pt3dadd( -9.02758, -51.6248, -2.9701, 0.96 ) }
    dend_65 { pt3dadd( -9.1288, -51.7104, -2.91264, 0.96 ) }
    dend_65 { pt3dadd( -11.1124, -53.6176, -1.79942, 0.81 ) }
    dend_65 { pt3dadd( -11.8186, -54.5034, -1.36373, 1.11 ) }
    dend_65 { pt3dadd( -12.5039, -55.4683, -0.92764, 1.11 ) }
    dend_65 { pt3dadd( -13.3814, -56.7556, -0.373075, 1.03 ) }
    dend_65 { pt3dadd( -13.4256, -56.817, -0.347277, 1.03 ) }
    dend_65 { pt3dadd( -14.3817, -58.0221, 0.194463, 1.03 ) }
    dend_65 { pt3dadd( -15.0869, -58.855, 0.537389, 1.25 ) }
    dend_65 { pt3dadd( -15.6797, -59.5421, 0.884538, 1.4 ) }
    dend_65 { pt3dadd( -16.082, -59.9994, 1.15686, 1.4 ) }
    dend_65 { pt3dadd( -16.8338, -60.9043, 1.77546, 1.25 ) }
    dend_65 { pt3dadd( -17.5853, -61.9779, 2.49399, 1.11 ) }
    dend_65 { pt3dadd( -17.968, -62.6575, 2.92392, 1.11 ) }
    dend_65 { pt3dadd( -18.3517, -63.563, 3.43178, 1.03 ) }
    dend_65 { pt3dadd( -18.3971, -63.6971, 3.49229, 1.03 ) }
    dend_65 { pt3dadd( -18.7117, -64.6853, 3.79179, 0.81 ) }
    dend_65 { pt3dadd( -19.0539, -65.7667, 3.97546, 0.96 ) }
    dend_65 { pt3dadd( -19.4262, -66.9464, 4.07227, 0.96 ) }
    dend_65 { pt3dadd( -19.8356, -68.2852, 4.13625, 0.81 ) }
    dend_65 { pt3dadd( -20.0975, -69.2692, 4.12673, 0.74 ) }
    dend_65 { pt3dadd( -20.4593, -70.7431, 4.04961, 0.81 ) }
    dend_65 { pt3dadd( -20.6284, -71.5466, 3.9693, 1.11 ) }
    dend_65 { pt3dadd( -20.8125, -72.7015, 3.82812, 1.11 ) }
    dend_65 { pt3dadd( -20.9026, -73.5766, 3.70672, 1.11 ) }
    dend_65 { pt3dadd( -21.0055, -75.275, 3.46256, 0.88 ) }
    dend_65 { pt3dadd( -21.0239, -76.129, 3.37348, 1.11 ) }
    dend_65 { pt3dadd( -21.0177, -77.1316, 3.28184, 1.11 ) }
    dend_65 { pt3dadd( -21.0084, -77.9076, 3.1988, 1.33 ) }
    dend_65 { pt3dadd( -21.0121, -78.7126, 3.11216, 0.96 ) }
    dend_65 { pt3dadd( -21.0364, -79.6758, 3.01359, 1.11 ) }
    dend_65 { pt3dadd( -21.0567, -80.8521, 2.90105, 1.11 ) }
    dend_65 { pt3dadd( -21.0516, -81.833, 2.78439, 1.4 ) }
    dend_65 { pt3dadd( -21.0499, -82.6936, 2.66084, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -4.59491, -49.4308, -4.9727, 1.47 ) }
    dend_42 { pt3dadd( -4.56231, -51.0276, -5.02769, 1.47 ) }
    dend_42 { pt3dadd( -4.54222, -52.0116, -5.06158, 1.47 ) }
    dend_42 { pt3dadd( -4.49845, -54.1555, -5.13541, 1.47 ) }
    dend_42 { pt3dadd( -4.46926, -55.5852, -5.18465, 1.62 ) }
    dend_42 { pt3dadd( -4.43353, -57.3351, -5.24491, 1.92 ) }
    dend_42 { pt3dadd( -4.39897, -59.0278, -5.30321, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -26.9608, -60.3859, -7.55378, 0.88 ) }
    dend_30 { pt3dadd( -28.5033, -60.5029, -7.14039, 0.88 ) }
    dend_30 { pt3dadd( -28.9705, -60.564, -7.05114, 1.11 ) }
    dend_30 { pt3dadd( -29.5146, -60.6608, -7.00352, 0.88 ) }
    dend_30 { pt3dadd( -30.1994, -60.795, -6.96797, 0.81 ) }
    dend_30 { pt3dadd( -31.0033, -60.9941, -6.96219, 0.74 ) }
    dend_30 { pt3dadd( -31.7666, -61.2367, -6.97504, 0.96 ) }
    dend_30 { pt3dadd( -32.5189, -61.5538, -7.06183, 0.96 ) }
    dend_30 { pt3dadd( -33.5317, -62.084, -7.19306, 0.81 ) }
    dend_30 { pt3dadd( -33.5778, -62.1141, -7.19911, 0.81 ) }
    dend_30 { pt3dadd( -34.3801, -62.739, -7.30331, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -35.06, -63.3407, -7.38823, 0.74 ) }
    dend_30 { pt3dadd( -35.2997, -63.5628, -7.4088, 1.03 ) }
    dend_30 { pt3dadd( -35.7554, -63.9745, -7.43271, 1.11 ) }
    dend_30 { pt3dadd( -36.5265, -64.6235, -7.43797, 1.11 ) }
    dend_30 { pt3dadd( -36.5869, -64.6693, -7.43893, 1.11 ) }
    dend_30 { pt3dadd( -37.5006, -65.2647, -7.45005, 0.88 ) }
    dend_30 { pt3dadd( -38.585, -65.91, -7.47339, 0.88 ) }
    dend_30 { pt3dadd( -39.0666, -66.1774, -7.48698, 1.25 ) }
    dend_30 { pt3dadd( -39.6748, -66.4858, -7.50939, 1.25 ) }
    dend_30 { pt3dadd( -40.5155, -66.8801, -7.54736, 1.4 ) }
    dend_30 { pt3dadd( -41.1357, -67.1698, -7.5735, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -26.9608, -60.3859, -7.55378, 0.74 ) }
    dend_27 { pt3dadd( -26.9234, -60.8213, -8.57163, 0.74 ) }
    dend_27 { pt3dadd( -26.8958, -61.3956, -9.92787, 0.44 ) }
    dend_27 { pt3dadd( -26.8934, -61.4367, -10.0195, 0.44 ) }
    dend_27 { pt3dadd( -26.8441, -61.8644, -10.8784, 0.44 ) }
    dend_27 { pt3dadd( -26.7244, -62.6418, -12.3492, 1.03 ) }
    dend_27 { pt3dadd( -26.5048, -64.2321, -15.1661, 1.03 ) }
    dend_27 { pt3dadd( -26.4581, -64.7529, -16.0701, 1.33 ) }
    dend_27 { pt3dadd( -26.4345, -65.5017, -17.3007, 1.11 ) }
    dend_27 { pt3dadd( -26.4688, -66.0355, -18.2045, 0.59 ) }
    dend_27 { pt3dadd( -26.5936, -66.8388, -19.5813, 0.44 ) }
    dend_27 { pt3dadd( -26.8659, -67.9099, -21.2862, 0.44 ) }
    dend_27 { pt3dadd( -27.1082, -68.6207, -22.4007, 0.88 ) }
    dend_27 { pt3dadd( -27.2702, -68.949, -22.9531, 1.25 ) }
    dend_27 { pt3dadd( -28.0691, -70.2279, -25.1364, 1.25 ) }
    dend_27 { pt3dadd( -28.0936, -70.2609, -25.1941, 1.25 ) }
    dend_27 { pt3dadd( -28.2096, -70.4148, -25.4374, 1.25 ) }
    dend_27 { pt3dadd( -28.2322, -70.4513, -25.4835, 1.25 ) }
    dend_27 { pt3dadd( -28.6814, -71.7182, -26.515, 0.74 ) }
    dend_27 { pt3dadd( -28.8596, -72.4883, -27.0063, 0.74 ) }
    dend_27 { pt3dadd( -28.8698, -72.549, -27.0353, 0.74 ) }
    dend_27 { pt3dadd( -28.9701, -73.0964, -27.3473, 0.74 ) }
    dend_27 { pt3dadd( -29.1467, -73.8624, -27.9176, 0.81 ) }
    dend_27 { pt3dadd( -29.3375, -74.5063, -28.4585, 0.81 ) }
    dend_27 { pt3dadd( -29.8515, -75.7978, -29.701, 0.44 ) }
    dend_27 { pt3dadd( -29.875, -75.8427, -29.7484, 0.44 ) }
    dend_27 { pt3dadd( -30.3443, -76.6247, -30.6153, 0.74 ) }
    dend_27 { pt3dadd( -31.0318, -77.6668, -31.8499, 0.88 ) }
    dend_27 { pt3dadd( -31.3504, -78.1594, -32.4338, 1.03 ) }
    dend_27 { pt3dadd( -31.8326, -78.956, -33.3226, 1.03 ) }
    dend_27 { pt3dadd( -32.085, -79.4721, -33.8015, 1.18 ) }
    dend_27 { pt3dadd( -32.1028, -79.5184, -33.8391, 1.18 ) }
    dend_27 { pt3dadd( -32.3253, -80.6086, -34.5267, 0.52 ) }
    dend_27 { pt3dadd( -32.2795, -81.406, -34.9129, 0.44 ) }
    dend_27 { pt3dadd( -32.1476, -81.8239, -35.1253, 0.81 ) }
    dend_27 { pt3dadd( -31.9805, -82.1687, -35.3037, 0.88 ) }
    dend_27 { pt3dadd( -31.9186, -82.2896, -35.3748, 0.88 ) }
    dend_27 { pt3dadd( -31.6511, -82.8605, -35.7148, 0.74 ) }
    dend_27 { pt3dadd( -31.3724, -83.5645, -36.127, 0.44 ) }
    dend_27 { pt3dadd( -31.1722, -84.2961, -36.5559, 0.59 ) }
    dend_27 { pt3dadd( -31.0091, -85.3051, -37.0913, 0.52 ) }
    dend_27 { pt3dadd( -30.9456, -86.1078, -37.4967, 0.88 ) }
    dend_27 { pt3dadd( -30.9342, -86.6585, -37.7563, 1.18 ) }
    dend_27 { pt3dadd( -30.9734, -87.452, -38.1302, 0.52 ) }
    dend_27 { pt3dadd( -31.0427, -87.9757, -38.3636, 0.44 ) }
    dend_27 { pt3dadd( -31.1865, -88.7492, -38.6654, 0.44 ) }
    dend_27 { pt3dadd( -31.3417, -89.4347, -38.9036, 0.74 ) }
    dend_27 { pt3dadd( -31.4414, -89.821, -39.0307, 0.74 ) }
    dend_27 { pt3dadd( -31.7927, -91.057, -39.4544, 0.59 ) }
    dend_27 { pt3dadd( -32.0708, -91.9615, -39.7537, 0.66 ) }
    dend_27 { pt3dadd( -32.2327, -92.4736, -39.9375, 1.18 ) }
    dend_27 { pt3dadd( -32.4729, -93.2582, -40.2212, 1.33 ) }
    dend_27 { pt3dadd( -32.6699, -94.0311, -40.4792, 1.11 ) }
    dend_27 { pt3dadd( -32.6812, -94.0947, -40.5021, 1.11 ) }
    dend_27 { pt3dadd( -32.7413, -94.8182, -40.7568, 0.96 ) }
    dend_27 { pt3dadd( -32.7523, -95.7638, -41.11, 0.66 ) }
    dend_27 { pt3dadd( -32.7492, -96.4855, -41.4125, 0.37 ) }
    dend_27 { pt3dadd( -32.7764, -97.1834, -41.7181, 0.29 ) }
    dend_27 { pt3dadd( -32.9054, -98.4079, -42.2991, 1.03 ) }
    dend_27 { pt3dadd( -32.9999, -99.0164, -42.598, 1.33 ) }
    dend_27 { pt3dadd( -33.0877, -99.5049, -42.8425, 1.47 ) }
    dend_27 { pt3dadd( -33.322, -100.76, -43.4193, 0.37 ) }
    dend_27 { pt3dadd( -33.4589, -101.523, -43.7836, 0.37 ) }
    dend_27 { pt3dadd( -33.6498, -102.584, -44.2576, 0.29 ) }
    dend_27 { pt3dadd( -33.709, -102.982, -44.4105, 0.44 ) }
    dend_27 { pt3dadd( -33.7816, -103.585, -44.6144, 0.59 ) }
    dend_27 { pt3dadd( -33.8689, -104.539, -44.8918, 0.59 ) }
    dend_27 { pt3dadd( -33.9361, -105.749, -45.2044, 0.74 ) }
    dend_27 { pt3dadd( -33.9525, -106.643, -45.423, 0.59 ) }
    dend_27 { pt3dadd( -33.9733, -107.448, -45.594, 0.44 ) }
    dend_27 { pt3dadd( -34.0102, -108.531, -45.8299, 0.44 ) }
    dend_27 { pt3dadd( -34.0134, -108.601, -45.8684, 0.44 ) }
    dend_27 { pt3dadd( -34.0251, -109.294, -46.4553, 0.96 ) }
    dend_27 { pt3dadd( -34.008, -109.693, -46.8788, 1.4 ) }
    dend_27 { pt3dadd( -34.0032, -109.74, -46.9334, 1.4 ) }
    dend_27 { pt3dadd( -33.9422, -110.183, -47.4577, 1.18 ) }
    dend_27 { pt3dadd( -33.5671, -112.94, -50.6899, 0.59 ) }
    dend_27 { pt3dadd( -33.4959, -113.521, -51.3451, 0.88 ) }
    dend_27 { pt3dadd( -33.4433, -114.068, -51.9357, 1.03 ) }
    dend_27 { pt3dadd( -33.4084, -114.673, -52.5582, 0.52 ) }
    dend_27 { pt3dadd( -33.405, -115.376, -53.1871, 0.37 ) }
    dend_27 { pt3dadd( -33.4479, -116.094, -53.6824, 0.37 ) }
    dend_27 { pt3dadd( -33.4516, -116.149, -53.699, 0.37 ) }
    dend_27 { pt3dadd( -33.4691, -116.399, -53.7704, 1.03 ) }
    dend_27 { pt3dadd( -33.4959, -116.933, -53.9019, 1.03 ) }
    dend_27 { pt3dadd( -33.484, -117.756, -54.1071, 0.44 ) }
    dend_27 { pt3dadd( -33.3722, -118.633, -54.4118, 0.37 ) }
    dend_27 { pt3dadd( -33.1605, -119.489, -54.7757, 0.88 ) }
    dend_27 { pt3dadd( -33.0161, -119.992, -55.0464, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -32.9073, -120.367, -55.274, 1.25 ) }
    dend_27 { pt3dadd( -32.7125, -121.081, -55.766, 0.81 ) }
    dend_27 { pt3dadd( -32.4146, -122.403, -56.7272, 0.29 ) }
    dend_27 { pt3dadd( -32.3629, -122.752, -56.9723, 0.29 ) }
    dend_27 { pt3dadd( -32.3152, -123.568, -57.5451, 0.37 ) }
    dend_27 { pt3dadd( -32.3225, -124.318, -58.0786, 0.37 ) }
    dend_27 { pt3dadd( -32.3655, -125.084, -58.5947, 0.66 ) }
    dend_27 { pt3dadd( -32.4285, -125.725, -58.9693, 1.25 ) }
    dend_27 { pt3dadd( -32.4793, -126.392, -59.2859, 1.4 ) }
    dend_27 { pt3dadd( -32.507, -127.583, -59.8033, 0.81 ) }
    dend_27 { pt3dadd( -32.449, -128.668, -60.23, 0.59 ) }
    dend_27 { pt3dadd( -32.3771, -129.269, -60.4546, 0.29 ) }
    dend_27 { pt3dadd( -32.2436, -130.045, -60.7202, 0.29 ) }
    dend_27 { pt3dadd( -32.0869, -130.939, -61.1828, 0.29 ) }
    dend_27 { pt3dadd( -32.0371, -131.246, -61.3968, 1.03 ) }
    dend_27 { pt3dadd( -32.0283, -131.299, -61.4407, 1.03 ) }
    dend_27 { pt3dadd( -31.9493, -131.781, -61.8774, 1.4 ) }
    dend_27 { pt3dadd( -31.8577, -132.481, -62.5481, 1.4 ) }
    dend_27 { pt3dadd( -31.6214, -134.585, -64.6063, 0.52 ) }
    dend_27 { pt3dadd( -31.5602, -135.443, -65.4051, 0.74 ) }
    dend_27 { pt3dadd( -31.5571, -135.533, -65.4816, 0.74 ) }
    dend_27 { pt3dadd( -31.5473, -136.214, -66.0129, 0.52 ) }
    dend_27 { pt3dadd( -31.5613, -136.907, -66.4899, 0.52 ) }
    dend_27 { pt3dadd( -31.5968, -137.494, -66.7837, 0.74 ) }
    dend_27 { pt3dadd( -31.6651, -138.316, -67.0685, 0.66 ) }
    dend_27 { pt3dadd( -31.8015, -139.644, -67.7029, 0.59 ) }
    dend_27 { pt3dadd( -31.8053, -139.693, -67.735, 0.59 ) }
    dend_27 { pt3dadd( -31.8334, -140.265, -68.1761, 0.52 ) }
    dend_27 { pt3dadd( -31.8381, -140.881, -68.6759, 1.18 ) }
    dend_27 { pt3dadd( -31.8147, -141.923, -69.5266, 1.62 ) }
    dend_27 { pt3dadd( -31.709, -143.485, -70.8472, 1.18 ) }
    dend_27 { pt3dadd( -31.5948, -144.537, -71.7044, 0.52 ) }
    dend_27 { pt3dadd( -31.4893, -145.335, -72.3182, 0.37 ) }
    dend_27 { pt3dadd( -31.3702, -146.092, -72.8498, 0.74 ) }
    dend_27 { pt3dadd( -31.3186, -146.449, -73.064, 1.11 ) }
    dend_27 { pt3dadd( -31.2372, -147.536, -73.5097, 0.88 ) }
    dend_27 { pt3dadd( -31.2826, -148.165, -73.6548, 0.81 ) }
    dend_27 { pt3dadd( -31.492, -148.967, -73.7891, 0.44 ) }
    dend_27 { pt3dadd( -31.762, -149.58, -73.881, 0.59 ) }
    dend_27 { pt3dadd( -32.146, -150.223, -74.003, 0.59 ) }
    dend_27 { pt3dadd( -32.6542, -150.955, -74.149, 0.37 ) }
    dend_27 { pt3dadd( -33.311, -151.834, -74.3067, 0.29 ) }
    dend_27 { pt3dadd( -33.7492, -152.415, -74.4294, 0.81 ) }
    dend_27 { pt3dadd( -34.124, -152.944, -74.5675, 1.11 ) }
    dend_27 { pt3dadd( -34.7637, -153.931, -74.847, 1.4 ) }
    dend_27 { pt3dadd( -35.0461, -154.413, -74.9828, 1.33 ) }
    dend_27 { pt3dadd( -35.4523, -155.205, -75.1817, 0.81 ) }
    dend_27 { pt3dadd( -35.7989, -155.973, -75.324, 0.52 ) }
    dend_27 { pt3dadd( -36.2219, -156.994, -75.4417, 0.44 ) }
    dend_27 { pt3dadd( -36.51, -157.763, -75.4907, 0.37 ) }
    dend_27 { pt3dadd( -36.7882, -158.657, -75.4533, 0.37 ) }
    dend_27 { pt3dadd( -37.0027, -159.502, -75.3794, 0.66 ) }
    dend_27 { pt3dadd( -37.1659, -160.395, -75.2623, 0.96 ) }
    dend_27 { pt3dadd( -37.2356, -161.086, -75.1442, 1.03 ) }
    dend_27 { pt3dadd( -37.251, -161.78, -75.0018, 1.25 ) }
    dend_27 { pt3dadd( -37.1322, -163.054, -74.7622, 0.81 ) }
    dend_27 { pt3dadd( -37.0389, -163.604, -74.6754, 0.52 ) }
    dend_27 { pt3dadd( -36.8968, -164.364, -74.601, 0.52 ) }
    dend_27 { pt3dadd( -36.8066, -164.928, -74.5779, 0.29 ) }
    dend_27 { pt3dadd( -36.7384, -165.752, -74.5804, 0.29 ) }
    dend_27 { pt3dadd( -36.764, -166.879, -74.6709, 0.29 ) }
    dend_27 { pt3dadd( -36.9053, -167.594, -74.7849, 0.81 ) }
    dend_27 { pt3dadd( -37.1657, -168.327, -74.9115, 1.11 ) }
    dend_27 { pt3dadd( -37.4686, -168.92, -75.0215, 1.11 ) }
    dend_27 { pt3dadd( -37.8464, -169.505, -75.1298, 0.74 ) }
    dend_27 { pt3dadd( -38.3229, -170.099, -75.2422, 0.37 ) }
    dend_27 { pt3dadd( -39.0335, -170.89, -75.4205, 0.29 ) }
    dend_27 { pt3dadd( -39.2532, -171.163, -75.4846, 0.74 ) }
    dend_27 { pt3dadd( -39.2961, -171.229, -75.4998, 0.74 ) }
    dend_27 { pt3dadd( -39.5061, -171.68, -75.6464, 0.96 ) }
    dend_27 { pt3dadd( -39.5439, -171.794, -75.6877, 0.96 ) }
    dend_27 { pt3dadd( -39.8055, -172.822, -76.0493, 0.29 ) }
    dend_27 { pt3dadd( -39.9813, -173.485, -76.2761, 0.29 ) }
    dend_27 { pt3dadd( -40.124, -173.946, -76.4166, 0.81 ) }
    dend_27 { pt3dadd( -40.4884, -174.917, -76.6689, 1.03 ) }
    dend_27 { pt3dadd( -40.7576, -175.491, -76.7868, 0.81 ) }
    dend_27 { pt3dadd( -41.1916, -176.225, -76.9087, 0.29 ) }
    dend_27 { pt3dadd( -41.7523, -176.977, -76.9928, 0.29 ) }
    dend_27 { pt3dadd( -42.0997, -177.359, -77.0248, 0.44 ) }
    dend_27 { pt3dadd( -42.5399, -177.808, -77.0481, 0.44 ) }
    dend_27 { pt3dadd( -43.1005, -178.317, -77.0378, 0.66 ) }
    dend_27 { pt3dadd( -43.7545, -178.832, -77.0314, 0.96 ) }
    dend_27 { pt3dadd( -44.1062, -179.067, -77.0353, 1.4 ) }
    dend_27 { pt3dadd( -45.0854, -179.659, -77.0764, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.53915, 57.5443, -0.321712, 1.11 ) }
    dend_20 { pt3dadd( 5.29384, 58.5591, -0.417597, 1.11 ) }
    dend_20 { pt3dadd( 5.21663, 58.852, -0.454025, 0.96 ) }
    dend_20 { pt3dadd( 5.09963, 59.2301, -0.516582, 0.96 ) }
    dend_20 { pt3dadd( 4.95852, 59.6515, -0.595364, 0.96 ) }
    dend_20 { pt3dadd( 4.77692, 60.1427, -0.697821, 0.96 ) }
    dend_20 { pt3dadd( 4.48511, 60.8844, -0.862995, 0.96 ) }
    dend_20 { pt3dadd( 4.46676, 60.9214, -0.874877, 0.96 ) }
    dend_20 { pt3dadd( 4.1563, 61.4867, -1.06959, 1.11 ) }
    dend_20 { pt3dadd( 4.1245, 61.5398, -1.0888, 1.11 ) }
    dend_20 { pt3dadd( 3.8506, 61.9701, -1.24955, 1.11 ) }
    dend_20 { pt3dadd( 3.82397, 62.0088, -1.26452, 1.11 ) }
    dend_20 { pt3dadd( 3.52368, 62.4324, -1.42924, 1.33 ) }
    dend_20 { pt3dadd( 3.25096, 62.8251, -1.58047, 1.18 ) }
    dend_20 { pt3dadd( 2.97117, 63.2673, -1.74039, 0.96 ) }
    dend_20 { pt3dadd( 2.94855, 63.3099, -1.75414, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 2.78183, 63.6762, -1.86015, 0.88 ) }
    dend_20 { pt3dadd( 2.59753, 64.166, -1.98634, 0.88 ) }
    dend_20 { pt3dadd( 2.58676, 64.206, -1.99483, 0.88 ) }
    dend_20 { pt3dadd( 2.47259, 64.8429, -2.10672, 0.88 ) }
    dend_20 { pt3dadd( 2.40705, 65.4706, -2.19864, 1.11 ) }
    dend_20 { pt3dadd( 2.40407, 65.5308, -2.20596, 1.11 ) }
    dend_20 { pt3dadd( 2.40733, 66.0558, -2.25708, 1.11 ) }
    dend_20 { pt3dadd( 2.42644, 66.5028, -2.2913, 1.33 ) }
    dend_20 { pt3dadd( 2.44533, 66.7815, -2.3082, 1.33 ) }
    dend_20 { pt3dadd( 2.51569, 67.2821, -2.34355, 1.18 ) }
    dend_20 { pt3dadd( 2.61199, 67.7723, -2.38383, 1.18 ) }
    dend_20 { pt3dadd( 2.6285, 67.8292, -2.3914, 1.18 ) }
    dend_20 { pt3dadd( 2.80956, 68.3051, -2.4722, 1.11 ) }
    dend_20 { pt3dadd( 3.026, 68.7795, -2.56487, 1.11 ) }
    dend_20 { pt3dadd( 3.2756, 69.2515, -2.66464, 1.03 ) }
    dend_20 { pt3dadd( 3.51502, 69.6777, -2.76494, 0.88 ) }
    dend_20 { pt3dadd( 3.86985, 70.3326, -2.93991, 0.88 ) }
    dend_20 { pt3dadd( 3.90534, 70.4102, -2.96285, 0.88 ) }
    dend_20 { pt3dadd( 4.09322, 70.9604, -3.10173, 0.88 ) }
    dend_20 { pt3dadd( 4.10074, 71.0016, -3.10958, 0.88 ) }
    dend_20 { pt3dadd( 4.08557, 71.4534, -3.16284, 0.88 ) }
    dend_20 { pt3dadd( 3.96607, 72.0452, -3.20916, 0.88 ) }
    dend_20 { pt3dadd( 3.81892, 72.4694, -3.23254, 0.88 ) }
    dend_20 { pt3dadd( 3.54612, 73.1177, -3.29125, 0.96 ) }
    dend_20 { pt3dadd( 3.48064, 73.2404, -3.30952, 0.96 ) }
    dend_20 { pt3dadd( 3.27412, 73.5967, -3.37834, 1.47 ) }
    dend_20 { pt3dadd( 3.07208, 73.9311, -3.44641, 1.62 ) }
    dend_20 { pt3dadd( 2.78773, 74.3734, -3.53563, 1.11 ) }
    dend_20 { pt3dadd( 2.50859, 74.8111, -3.63206, 1.11 ) }
    dend_20 { pt3dadd( 2.16569, 75.3614, -3.7715, 1.11 ) }
    dend_20 { pt3dadd( 1.88822, 75.841, -3.87633, 0.96 ) }
    dend_20 { pt3dadd( 1.64629, 76.2969, -3.95862, 0.96 ) }
    dend_20 { pt3dadd( 1.36263, 76.8445, -4.05096, 0.96 ) }
    dend_20 { pt3dadd( 1.34233, 76.8897, -4.05767, 0.96 ) }
    dend_20 { pt3dadd( 1.22129, 77.2219, -4.11362, 0.96 ) }
    dend_20 { pt3dadd( 1.06655, 77.8184, -4.26227, 1.18 ) }
    dend_20 { pt3dadd( 1.0557, 77.8748, -4.28073, 1.18 ) }
    dend_20 { pt3dadd( 0.940934, 78.5882, -4.5558, 1.18 ) }
    dend_20 { pt3dadd( 0.838986, 79.3204, -4.86088, 1.03 ) }
    dend_20 { pt3dadd( 0.763278, 79.8432, -5.08065, 0.88 ) }
    dend_20 { pt3dadd( 0.660225, 80.5504, -5.38522, 1.03 ) }
    dend_20 { pt3dadd( 0.587146, 81.04, -5.59653, 1.03 ) }
    dend_20 { pt3dadd( 0.547439, 81.3177, -5.70519, 1.03 ) }
    dend_20 { pt3dadd( 0.540232, 81.3922, -5.72855, 1.03 ) }
    dend_20 { pt3dadd( 0.489149, 81.8616, -5.84015, 1.03 ) }
    dend_20 { pt3dadd( 0.477382, 81.9508, -5.85426, 1.03 ) }
    dend_20 { pt3dadd( 0.391202, 82.3777, -5.87877, 1.03 ) }
    dend_20 { pt3dadd( 0.220887, 83.1071, -5.90339, 1.18 ) }
    dend_20 { pt3dadd( 0.0523384, 83.7541, -5.90048, 1.18 ) }
    dend_20 { pt3dadd( -0.0598974, 84.1505, -5.88834, 1.18 ) }
    dend_20 { pt3dadd( -0.190917, 84.5802, -5.86407, 1.18 ) }
    dend_20 { pt3dadd( -0.476211, 85.477, -5.80696, 1.18 ) }
    dend_20 { pt3dadd( -0.686939, 86.1104, -5.74634, 1.18 ) }
    dend_20 { pt3dadd( -0.903851, 86.7595, -5.67119, 1.18 ) }
    dend_20 { pt3dadd( -0.917201, 86.8012, -5.6669, 1.18 ) }
    dend_20 { pt3dadd( -1.02647, 87.1784, -5.64631, 1.18 ) }
    dend_20 { pt3dadd( -1.20423, 87.8618, -5.65233, 1.47 ) }
    dend_20 { pt3dadd( -1.30447, 88.3289, -5.68623, 1.47 ) }
    dend_20 { pt3dadd( -1.40015, 88.7919, -5.73246, 1.33 ) }
    dend_20 { pt3dadd( -1.52848, 89.486, -5.81771, 1.03 ) }
    dend_20 { pt3dadd( -1.70476, 90.4419, -5.94442, 0.96 ) }
    dend_20 { pt3dadd( -1.84717, 91.2253, -6.05636, 0.96 ) }
    dend_20 { pt3dadd( -1.94376, 91.7808, -6.15413, 0.96 ) }
    dend_20 { pt3dadd( -2.02132, 92.2473, -6.25303, 1.11 ) }
    dend_20 { pt3dadd( -2.06318, 92.5208, -6.31313, 1.11 ) }
    dend_20 { pt3dadd( -2.13262, 93.0788, -6.43988, 1.25 ) }
    dend_20 { pt3dadd( -2.15424, 93.3307, -6.49635, 1.25 ) }
    dend_20 { pt3dadd( -2.20646, 93.963, -6.65287, 1.03 ) }
    dend_20 { pt3dadd( -2.21771, 94.0582, -6.67909, 1.03 ) }
    dend_20 { pt3dadd( -2.25968, 94.348, -6.74933, 1.03 ) }
    dend_20 { pt3dadd( -2.31069, 94.6376, -6.80922, 1.03 ) }
    dend_20 { pt3dadd( -2.37728, 94.9873, -6.84381, 1.03 ) }
    dend_20 { pt3dadd( -2.50209, 95.5643, -6.85145, 1.03 ) }
    dend_20 { pt3dadd( -2.59869, 95.995, -6.8215, 1.03 ) }
    dend_20 { pt3dadd( -2.7011, 96.3972, -6.75462, 1.03 ) }
    dend_20 { pt3dadd( -2.72317, 96.4764, -6.73551, 1.03 ) }
    dend_20 { pt3dadd( -2.9038, 97.0983, -6.55451, 1.03 ) }
    dend_20 { pt3dadd( -2.91601, 97.1375, -6.54152, 1.03 ) }
    dend_20 { pt3dadd( -3.14471, 97.8231, -6.32009, 1.03 ) }
    dend_20 { pt3dadd( -3.38271, 98.5286, -6.12877, 1.03 ) }
    dend_20 { pt3dadd( -3.40199, 98.5891, -6.11779, 1.03 ) }
    dend_20 { pt3dadd( -3.51893, 99.0604, -6.05834, 1.03 ) }
    dend_20 { pt3dadd( -3.5265, 99.1035, -6.05382, 1.03 ) }
    dend_20 { pt3dadd( -3.5977, 99.8884, -5.96744, 1.03 ) }
    dend_20 { pt3dadd( -3.59812, 99.9786, -5.95814, 1.03 ) }
    dend_20 { pt3dadd( -3.5734, 100.518, -5.92066, 1.25 ) }
    dend_20 { pt3dadd( -3.5344, 101.307, -5.87011, 1.25 ) }
    dend_20 { pt3dadd( -3.49616, 101.971, -5.82787, 1.25 ) }
    dend_20 { pt3dadd( -3.47723, 102.573, -5.80246, 0.88 ) }
    dend_20 { pt3dadd( -3.47576, 103.165, -5.80644, 0.74 ) }
    dend_20 { pt3dadd( -3.49834, 103.657, -5.84984, 1.18 ) }
    dend_20 { pt3dadd( -3.57371, 104.427, -5.98131, 1.4 ) }
    dend_20 { pt3dadd( -3.58876, 104.515, -6.00465, 1.4 ) }
    dend_20 { pt3dadd( -3.72512, 105.121, -6.21504, 1.4 ) }
    dend_20 { pt3dadd( -3.90987, 105.772, -6.46813, 1.18 ) }
    dend_20 { pt3dadd( -4.09142, 106.364, -6.71173, 1.03 ) }
    dend_20 { pt3dadd( -4.10319, 106.401, -6.72806, 1.03 ) }
    dend_20 { pt3dadd( -4.27607, 106.947, -6.97548, 1.03 ) }
    dend_20 { pt3dadd( -4.36441, 107.231, -7.10119, 0.88 ) }
    dend_20 { pt3dadd( -4.60019, 108.029, -7.4295, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -4.61313, 108.069, -7.44268, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.53915, 57.5443, -0.321712, 0.52 ) }
    dend_15 { pt3dadd( 5.53002, 58.3672, -1.27922, 0.52 ) }
    dend_15 { pt3dadd( 5.44487, 58.9636, -2.05124, 0.74 ) }
    dend_15 { pt3dadd( 5.30584, 59.377, -2.71763, 0.74 ) }
    dend_15 { pt3dadd( 5.24138, 59.5155, -2.96948, 0.74 ) }
    dend_15 { pt3dadd( 5.15508, 59.7263, -3.5103, 0.74 ) }
    dend_15 { pt3dadd( 5.07887, 60.004, -4.49799, 0.44 ) }
    dend_15 { pt3dadd( 5.05334, 60.116, -5.08422, 0.81 ) }
    dend_15 { pt3dadd( 5.03958, 60.295, -6.17065, 0.81 ) }
    dend_15 { pt3dadd( 5.04263, 60.3053, -6.23376, 0.81 ) }
    dend_15 { pt3dadd( 5.20866, 60.7565, -8.53028, 1.03 ) }
    dend_15 { pt3dadd( 5.38359, 61.1548, -10.1689, 0.81 ) }
    dend_15 { pt3dadd( 5.44872, 61.3051, -10.6539, 0.81 ) }
    dend_15 { pt3dadd( 5.57138, 61.6942, -11.6621, 0.88 ) }
    dend_15 { pt3dadd( 5.65632, 62.2029, -12.7638, 0.81 ) }
    dend_15 { pt3dadd( 5.64258, 62.5878, -13.5727, 0.81 ) }
    dend_15 { pt3dadd( 5.47746, 63.0886, -14.5931, 0.59 ) }
    dend_15 { pt3dadd( 5.34769, 63.293, -15.1408, 0.59 ) }
    dend_15 { pt3dadd( 5.11548, 63.4609, -16.0929, 0.88 ) }
    dend_15 { pt3dadd( 5.11184, 63.4607, -17.7015, 0.88 ) }
    dend_15 { pt3dadd( 5.27814, 63.3579, -19.153, 0.88 ) }
    dend_15 { pt3dadd( 5.41799, 63.2754, -19.9363, 1.25 ) }
    dend_15 { pt3dadd( 5.73546, 63.0893, -21.4307, 1.25 ) }
    dend_15 { pt3dadd( 6.16681, 62.856, -23.2557, 1.11 ) }
    dend_15 { pt3dadd( 7.76255, 62.1802, -29.2344, 1.03 ) }
    dend_15 { pt3dadd( 8.26897, 62.0229, -30.943, 0.66 ) }
    dend_15 { pt3dadd( 8.29249, 62.0201, -31.0107, 0.66 ) }
    dend_15 { pt3dadd( 8.80503, 62.041, -32.3242, 0.52 ) }
    dend_15 { pt3dadd( 9.05846, 62.0966, -32.9136, 0.52 ) }
    dend_15 { pt3dadd( 9.47531, 62.2836, -33.7827, 0.52 ) }
    dend_15 { pt3dadd( 9.51326, 62.3143, -33.837, 0.52 ) }
    dend_15 { pt3dadd( 10.6565, 63.1595, -35.0675, 1.25 ) }
    dend_15 { pt3dadd( 10.9132, 63.3483, -35.3502, 1.69 ) }
    dend_15 { pt3dadd( 10.9643, 63.3845, -35.4041, 1.69 ) }
    dend_15 { pt3dadd( 11.2278, 63.5789, -35.7102, 1.69 ) }
    dend_15 { pt3dadd( 12.2747, 64.4689, -37.2821, 0.88 ) }
    dend_15 { pt3dadd( 13.0271, 65.3918, -38.8884, 0.59 ) }
    dend_15 { pt3dadd( 13.1915, 65.7286, -39.4941, 0.81 ) }
    dend_15 { pt3dadd( 13.2086, 65.7653, -39.566, 0.81 ) }
    dend_15 { pt3dadd( 13.389, 66.094, -40.2574, 1.11 ) }
    dend_15 { pt3dadd( 13.7815, 66.7783, -41.7025, 1.11 ) }
    dend_15 { pt3dadd( 13.9919, 67.1645, -42.4728, 0.96 ) }
    dend_15 { pt3dadd( 14.479, 67.9085, -43.9287, 0.88 ) }
    dend_15 { pt3dadd( 15.1141, 68.8473, -45.6039, 0.81 ) }
    dend_15 { pt3dadd( 15.7501, 69.6918, -47.0235, 0.52 ) }
    dend_15 { pt3dadd( 16.0129, 69.9435, -47.4673, 0.52 ) }
    dend_15 { pt3dadd( 16.4197, 70.2659, -48.0016, 0.59 ) }
    dend_15 { pt3dadd( 16.5154, 70.3315, -48.0992, 0.59 ) }
    dend_15 { pt3dadd( 17.2177, 70.7885, -48.6667, 0.59 ) }
    dend_15 { pt3dadd( 18.4118, 71.5477, -49.5259, 0.81 ) }
    dend_15 { pt3dadd( 20.1485, 72.5526, -50.6854, 1.4 ) }
    dend_15 { pt3dadd( 20.7676, 72.8511, -51.0892, 1.62 ) }
    dend_15 { pt3dadd( 21.6798, 73.2045, -51.6436, 1.84 ) }
    dend_15 { pt3dadd( 21.7395, 73.224, -51.6777, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 20.5547, 42.2872, 4.53089, 1.18 ) }
    dend_3 { pt3dadd( 19.6567, 44.2602, 5.70974, 1.18 ) }
    dend_3 { pt3dadd( 19.3096, 45.4784, 6.27081, 0.96 ) }
    dend_3 { pt3dadd( 19.3028, 45.5732, 6.30235, 0.96 ) }
    dend_3 { pt3dadd( 19.4772, 46.8643, 6.64188, 0.74 ) }
    dend_3 { pt3dadd( 19.5019, 46.9566, 6.66145, 0.74 ) }
    dend_3 { pt3dadd( 19.7713, 47.658, 6.79216, 0.88 ) }
    dend_3 { pt3dadd( 20.3069, 48.6011, 6.9387, 0.88 ) }
    dend_3 { pt3dadd( 20.9086, 49.5566, 7.13578, 0.59 ) }
    dend_3 { pt3dadd( 21.4456, 50.4341, 7.46202, 0.52 ) }
    dend_3 { pt3dadd( 21.8486, 51.1026, 7.82355, 0.81 ) }
    dend_3 { pt3dadd( 22.3697, 52.0001, 8.35534, 0.52 ) }
    dend_3 { pt3dadd( 23.1491, 53.431, 9.3518, 0.88 ) }
    dend_3 { pt3dadd( 23.2495, 53.656, 9.53856, 0.88 ) }
    dend_3 { pt3dadd( 23.6671, 54.9162, 10.8031, 1.33 ) }
    dend_3 { pt3dadd( 23.7024, 55.115, 11.0405, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.5547, 42.2872, 4.53089, 1.11 ) }
    dend_2 { pt3dadd( 21.8469, 41.9025, 3.17818, 1.11 ) }
    dend_2 { pt3dadd( 22.2951, 41.7996, 2.80142, 1.03 ) }
    dend_2 { pt3dadd( 22.8168, 41.6866, 2.41681, 0.88 ) }
    dend_2 { pt3dadd( 23.7911, 41.4773, 1.82572, 0.59 ) }
    dend_2 { pt3dadd( 24.3445, 41.3426, 1.51467, 0.81 ) }
    dend_2 { pt3dadd( 24.841, 41.2108, 1.23899, 0.81 ) }
    dend_2 { pt3dadd( 25.2712, 41.1002, 1.03768, 1.03 ) }
    dend_2 { pt3dadd( 25.4537, 41.0688, 0.939911, 1.03 ) }
    dend_2 { pt3dadd( 26.0807, 40.9967, 0.521722, 1.03 ) }
    dend_2 { pt3dadd( 26.9897, 40.8608, -0.195294, 0.66 ) }
    dend_2 { pt3dadd( 27.6789, 40.7185, -0.832842, 0.81 ) }
    dend_2 { pt3dadd( 28.3151, 40.5331, -1.50235, 0.59 ) }
    dend_2 { pt3dadd( 28.8913, 40.3135, -2.18788, 0.96 ) }
    dend_2 { pt3dadd( 29.6713, 39.9423, -3.19968, 0.59 ) }
    dend_2 { pt3dadd( 30.1914, 39.6353, -3.94053, 0.59 ) }
    dend_2 { pt3dadd( 30.6819, 39.2946, -4.62853, 0.96 ) }
    dend_2 { pt3dadd( 31.1265, 38.9546, -5.18918, 0.81 ) }
    dend_2 { pt3dadd( 31.5743, 38.5965, -5.65421, 0.81 ) }
    dend_2 { pt3dadd( 31.8575, 38.3862, -5.87046, 0.96 ) }
    dend_2 { pt3dadd( 32.5132, 38.0191, -6.22766, 0.37 ) }
    dend_2 { pt3dadd( 33.1331, 37.8115, -6.49251, 0.37 ) }
    dend_2 { pt3dadd( 33.8868, 37.6833, -6.75054, 0.44 ) }
    dend_2 { pt3dadd( 34.3912, 37.6592, -6.90889, 0.81 ) }
    dend_2 { pt3dadd( 34.9814, 37.6696, -7.08763, 1.03 ) }
    dend_2 { pt3dadd( 35.8527, 37.6876, -7.36414, 0.52 ) }
    dend_2 { pt3dadd( 36.1644, 37.6731, -7.47862, 0.44 ) }
    dend_2 { pt3dadd( 36.2049, 37.6654, -7.49943, 0.44 ) }
    dend_2 { pt3dadd( 37.015, 37.3379, -7.98699, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 37.2936, 37.1779, -8.16452, 0.88 ) }
    dend_2 { pt3dadd( 37.7787, 36.8294, -8.45197, 1.03 ) }
    dend_2 { pt3dadd( 38.4225, 36.323, -8.74913, 1.03 ) }
    dend_2 { pt3dadd( 39.0065, 35.8721, -8.96741, 0.96 ) }
    dend_2 { pt3dadd( 39.6229, 35.4502, -9.12797, 0.52 ) }
    dend_2 { pt3dadd( 39.6602, 35.427, -9.1333, 0.52 ) }
    dend_2 { pt3dadd( 40.1226, 35.2047, -9.15202, 0.59 ) }
    dend_2 { pt3dadd( 40.7471, 35.0007, -9.09752, 0.59 ) }
    dend_2 { pt3dadd( 41.2019, 34.9001, -9.00319, 0.29 ) }
    dend_2 { pt3dadd( 41.8726, 34.7893, -8.82485, 0.29 ) }
    dend_2 { pt3dadd( 41.9155, 34.7826, -8.81347, 0.29 ) }
    dend_2 { pt3dadd( 42.4475, 34.6743, -8.67826, 0.66 ) }
    dend_2 { pt3dadd( 42.8767, 34.565, -8.5745, 0.81 ) }
    dend_2 { pt3dadd( 43.41, 34.3661, -8.44871, 0.88 ) }
    dend_2 { pt3dadd( 43.4865, 34.3251, -8.42553, 0.88 ) }
    dend_2 { pt3dadd( 43.9039, 34.0423, -8.28502, 1.03 ) }
    dend_2 { pt3dadd( 44.2395, 33.8019, -8.17546, 1.03 ) }
    dend_2 { pt3dadd( 44.2739, 33.7763, -8.16536, 1.03 ) }
    dend_2 { pt3dadd( 44.7132, 33.4428, -8.03827, 0.81 ) }
    dend_2 { pt3dadd( 45.4377, 32.9069, -7.8395, 0.37 ) }
    dend_2 { pt3dadd( 45.8338, 32.6356, -7.74289, 0.66 ) }
    dend_2 { pt3dadd( 46.1678, 32.4199, -7.67248, 0.66 ) }
    dend_2 { pt3dadd( 46.649, 32.1279, -7.61019, 0.52 ) }
    dend_2 { pt3dadd( 47.0482, 31.9056, -7.60016, 0.52 ) }
    dend_2 { pt3dadd( 47.6271, 31.5974, -7.64019, 0.96 ) }
    dend_2 { pt3dadd( 48.0572, 31.3567, -7.71291, 1.25 ) }
    dend_2 { pt3dadd( 48.5844, 31.0454, -7.81903, 1.03 ) }
    dend_2 { pt3dadd( 49.1516, 30.69, -7.94911, 0.81 ) }
    dend_2 { pt3dadd( 49.7577, 30.3168, -8.0994, 0.66 ) }
    dend_2 { pt3dadd( 50.0682, 30.1419, -8.17311, 0.74 ) }
    dend_2 { pt3dadd( 50.4303, 29.9538, -8.24881, 0.74 ) }
    dend_2 { pt3dadd( 50.9684, 29.6963, -8.32401, 0.37 ) }
    dend_2 { pt3dadd( 51.0031, 29.6815, -8.32545, 0.37 ) }
    dend_2 { pt3dadd( 51.4821, 29.4961, -8.29988, 0.29 ) }
    dend_2 { pt3dadd( 52.1734, 29.2679, -8.30328, 0.66 ) }
    dend_2 { pt3dadd( 52.675, 29.1156, -8.34144, 1.03 ) }
    dend_2 { pt3dadd( 53.2035, 28.9547, -8.40763, 0.74 ) }
    dend_2 { pt3dadd( 53.824, 28.7506, -8.51157, 0.74 ) }
    dend_2 { pt3dadd( 54.209, 28.6024, -8.58656, 0.96 ) }
    dend_2 { pt3dadd( 55.1278, 28.1784, -8.79099, 1.18 ) }
    dend_2 { pt3dadd( 55.4813, 28.0009, -8.87836, 0.96 ) }
    dend_2 { pt3dadd( 55.9363, 27.7634, -8.98969, 0.44 ) }
    dend_2 { pt3dadd( 55.98, 27.7402, -9.00014, 0.44 ) }
    dend_2 { pt3dadd( 56.5247, 27.4393, -9.13613, 0.66 ) }
    dend_2 { pt3dadd( 56.8832, 27.2406, -9.23462, 0.81 ) }
    dend_2 { pt3dadd( 57.0574, 27.1467, -9.29625, 0.81 ) }
    dend_2 { pt3dadd( 57.4712, 26.9416, -9.47824, 0.66 ) }
    dend_2 { pt3dadd( 57.6158, 26.876, -9.54453, 0.66 ) }
    dend_2 { pt3dadd( 58.1515, 26.6469, -9.76037, 0.66 ) }
    dend_2 { pt3dadd( 58.7665, 26.4036, -9.97875, 0.44 ) }
    dend_2 { pt3dadd( 59.7101, 26.0225, -10.2652, 0.37 ) }
    dend_2 { pt3dadd( 60.203, 25.8058, -10.3964, 0.88 ) }
    dend_2 { pt3dadd( 60.9052, 25.4725, -10.5241, 0.88 ) }
    dend_2 { pt3dadd( 61.4702, 25.2021, -10.5726, 1.03 ) }
    dend_2 { pt3dadd( 61.9179, 24.9903, -10.5613, 1.03 ) }
    dend_2 { pt3dadd( 62.3403, 24.8058, -10.5101, 0.74 ) }
    dend_2 { pt3dadd( 62.8594, 24.5999, -10.41, 0.52 ) }
    dend_2 { pt3dadd( 63.52, 24.3596, -10.2872, 0.52 ) }
    dend_2 { pt3dadd( 64.081, 24.1577, -10.1922, 0.29 ) }
    dend_2 { pt3dadd( 64.1296, 24.1398, -10.1879, 0.29 ) }
    dend_2 { pt3dadd( 64.5727, 23.9452, -10.1677, 0.29 ) }
    dend_2 { pt3dadd( 64.9547, 23.7377, -10.1814, 0.59 ) }
    dend_2 { pt3dadd( 65.0108, 23.7006, -10.188, 0.59 ) }
    dend_2 { pt3dadd( 65.4216, 23.3453, -10.3002, 0.88 ) }
    dend_2 { pt3dadd( 65.7992, 22.9274, -10.4347, 0.74 ) }
    dend_2 { pt3dadd( 66.1426, 22.4729, -10.6178, 0.44 ) }
    dend_2 { pt3dadd( 66.3943, 22.0764, -10.8011, 0.29 ) }
    dend_2 { pt3dadd( 66.5185, 21.8504, -10.9171, 0.59 ) }
    dend_2 { pt3dadd( 66.6756, 21.4985, -11.1111, 0.44 ) }
    dend_2 { pt3dadd( 66.777, 21.1954, -11.2944, 0.44 ) }
    dend_2 { pt3dadd( 66.8963, 20.6075, -11.646, 0.81 ) }
    dend_2 { pt3dadd( 66.899, 20.5704, -11.668, 0.81 ) }
    dend_2 { pt3dadd( 66.8897, 20.2103, -11.8495, 1.03 ) }
    dend_2 { pt3dadd( 66.859, 19.7711, -12.0414, 0.88 ) }
    dend_2 { pt3dadd( 66.8565, 19.7313, -12.056, 0.88 ) }
    dend_2 { pt3dadd( 66.8375, 19.1631, -12.2273, 0.59 ) }
    dend_2 { pt3dadd( 66.8434, 18.7563, -12.3173, 0.59 ) }
    dend_2 { pt3dadd( 66.8797, 18.2982, -12.4033, 0.88 ) }
    dend_2 { pt3dadd( 66.8965, 18.1716, -12.4235, 0.88 ) }
    dend_2 { pt3dadd( 67.0317, 17.5501, -12.4943, 0.37 ) }
    dend_2 { pt3dadd( 67.142, 17.1779, -12.5293, 0.74 ) }
    dend_2 { pt3dadd( 67.2744, 16.8216, -12.555, 0.96 ) }
    dend_2 { pt3dadd( 67.4679, 16.3293, -12.6111, 0.96 ) }
    dend_2 { pt3dadd( 67.4836, 16.2901, -12.6165, 0.96 ) }
    dend_2 { pt3dadd( 67.6581, 15.8706, -12.6999, 1.25 ) }
    dend_2 { pt3dadd( 67.9331, 15.3086, -12.8328, 0.44 ) }
    dend_2 { pt3dadd( 68.135, 14.9698, -12.9463, 0.37 ) }
    dend_2 { pt3dadd( 68.4773, 14.4809, -13.1435, 0.96 ) }
    dend_2 { pt3dadd( 68.8033, 14.0731, -13.3233, 0.96 ) }
    dend_2 { pt3dadd( 69.3224, 13.5073, -13.6032, 0.74 ) }
    dend_2 { pt3dadd( 69.7603, 13.0879, -13.8507, 0.74 ) }
    dend_2 { pt3dadd( 70.3292, 12.6031, -14.1636, 0.29 ) }
    dend_2 { pt3dadd( 70.6194, 12.3657, -14.3036, 0.52 ) }
    dend_2 { pt3dadd( 71.0642, 11.9936, -14.488, 0.88 ) }
    dend_2 { pt3dadd( 71.4396, 11.6642, -14.6273, 1.03 ) }
    dend_2 { pt3dadd( 72.0666, 11.0574, -14.8206, 0.29 ) }
    dend_2 { pt3dadd( 72.3209, 10.7751, -14.8588, 0.88 ) }
    dend_2 { pt3dadd( 72.7751, 10.2283, -14.7847, 0.81 ) }
    dend_2 { pt3dadd( 73.0306, 9.92349, -14.649, 0.96 ) }
    dend_2 { pt3dadd( 73.3116, 9.60577, -14.3979, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 73.3389, 9.57618, -14.3658, 0.59 ) }
    dend_2 { pt3dadd( 73.8905, 9.01472, -13.6282, 0.52 ) }
    dend_2 { pt3dadd( 74.2056, 8.6999, -13.223, 0.52 ) }
    dend_2 { pt3dadd( 74.5755, 8.32914, -12.806, 0.88 ) }
    dend_2 { pt3dadd( 74.6007, 8.30246, -12.7816, 0.88 ) }
    dend_2 { pt3dadd( 74.7366, 8.14147, -12.6609, 1.03 ) }
    dend_2 { pt3dadd( 75.0233, 7.75391, -12.4362, 1.03 ) }
    dend_2 { pt3dadd( 75.2835, 7.31271, -12.2536, 0.44 ) }
    dend_2 { pt3dadd( 75.5206, 6.80665, -12.0716, 0.44 ) }
    dend_2 { pt3dadd( 75.7238, 6.31728, -11.9102, 0.44 ) }
    dend_2 { pt3dadd( 75.9328, 5.81876, -11.7363, 0.52 ) }
    dend_2 { pt3dadd( 76.0914, 5.45658, -11.606, 0.44 ) }
    dend_2 { pt3dadd( 76.338, 4.92624, -11.4138, 0.44 ) }
    dend_2 { pt3dadd( 76.5155, 4.56685, -11.2914, 0.81 ) }
    dend_2 { pt3dadd( 76.7188, 4.18484, -11.1844, 0.81 ) }
    dend_2 { pt3dadd( 76.989, 3.72889, -11.0693, 0.37 ) }
    dend_2 { pt3dadd( 77.2744, 3.27866, -10.9806, 0.81 ) }
    dend_2 { pt3dadd( 77.4668, 2.99268, -10.9286, 0.88 ) }
    dend_2 { pt3dadd( 77.6148, 2.77868, -10.8961, 0.88 ) }
    dend_2 { pt3dadd( 77.8624, 2.40933, -10.8345, 0.66 ) }
    dend_2 { pt3dadd( 78.2301, 1.84303, -10.7357, 0.44 ) }
    dend_2 { pt3dadd( 78.5544, 1.36841, -10.6519, 0.29 ) }
    dend_2 { pt3dadd( 78.8313, 1.01355, -10.6102, 0.59 ) }
    dend_2 { pt3dadd( 79.11, 0.684933, -10.5919, 0.74 ) }
    dend_2 { pt3dadd( 79.1717, 0.614958, -10.5925, 0.74 ) }
    dend_2 { pt3dadd( 79.4647, 0.28303, -10.641, 0.59 ) }
    dend_2 { pt3dadd( 79.8878, -0.215401, -10.7986, 0.44 ) }
    dend_2 { pt3dadd( 80.3241, -0.764439, -11.0156, 0.44 ) }
    dend_2 { pt3dadd( 80.5214, -1.04409, -11.1371, 0.44 ) }
    dend_2 { pt3dadd( 80.7621, -1.43364, -11.3083, 0.74 ) }
    dend_2 { pt3dadd( 81.0529, -1.96601, -11.5401, 0.74 ) }
    dend_2 { pt3dadd( 81.3239, -2.53723, -11.7842, 0.29 ) }
    dend_2 { pt3dadd( 81.4279, -2.78086, -11.8874, 0.96 ) }
    dend_2 { pt3dadd( 81.5441, -3.05034, -11.9899, 0.96 ) }
    dend_2 { pt3dadd( 81.7308, -3.43172, -12.1316, 0.81 ) }
    dend_2 { pt3dadd( 81.7522, -3.46899, -12.1433, 0.81 ) }
    dend_2 { pt3dadd( 81.9438, -3.75929, -12.1987, 0.96 ) }
    dend_2 { pt3dadd( 82.2528, -4.17721, -12.2712, 0.52 ) }
    dend_2 { pt3dadd( 82.4819, -4.46713, -12.3246, 0.52 ) }
    dend_2 { pt3dadd( 82.5044, -4.4959, -12.3298, 0.52 ) }
    dend_2 { pt3dadd( 82.7938, -4.89763, -12.4211, 0.44 ) }
    dend_2 { pt3dadd( 83.1128, -5.37631, -12.5447, 0.59 ) }
    dend_2 { pt3dadd( 83.5581, -6.08764, -12.7346, 0.29 ) }
    dend_2 { pt3dadd( 83.7128, -6.34453, -12.8029, 0.96 ) }
    dend_2 { pt3dadd( 83.9591, -6.77178, -12.9201, 1.33 ) }
    dend_2 { pt3dadd( 84.3622, -7.49671, -13.1151, 0.29 ) }
    dend_2 { pt3dadd( 84.7185, -8.14787, -13.2823, 0.29 ) }
    dend_2 { pt3dadd( 84.9189, -8.51765, -13.3695, 0.88 ) }
    dend_2 { pt3dadd( 84.9391, -8.55669, -13.3755, 0.88 ) }
    dend_2 { pt3dadd( 85.1555, -9.00145, -13.4083, 0.88 ) }
    dend_2 { pt3dadd( 85.465, -9.69576, -13.394, 0.29 ) }
    dend_2 { pt3dadd( 85.6801, -10.226, -13.3259, 0.29 ) }
    dend_2 { pt3dadd( 85.7384, -10.3949, -13.2906, 0.66 ) }
    dend_2 { pt3dadd( 85.9167, -11.0036, -13.1442, 0.66 ) }
    dend_2 { pt3dadd( 86.037, -11.451, -13.0256, 0.66 ) }
    dend_2 { pt3dadd( 86.1411, -11.8596, -12.9082, 0.96 ) }
    dend_2 { pt3dadd( 86.2291, -12.2441, -12.8032, 0.74 ) }
    dend_2 { pt3dadd( 86.32, -12.6794, -12.6839, 0.52 ) }
    dend_2 { pt3dadd( 86.4327, -13.2262, -12.5227, 0.44 ) }
    dend_2 { pt3dadd( 86.4648, -13.3601, -12.4843, 0.44 ) }
    dend_2 { pt3dadd( 86.6212, -13.9194, -12.3429, 0.37 ) }
    dend_2 { pt3dadd( 86.8316, -14.5843, -12.1929, 0.37 ) }
    dend_2 { pt3dadd( 87.066, -15.2907, -12.0528, 0.74 ) }
    dend_2 { pt3dadd( 87.2974, -15.8683, -11.9867, 0.29 ) }
    dend_2 { pt3dadd( 87.587, -16.4206, -11.9566, 0.29 ) }
    dend_2 { pt3dadd( 87.949, -16.9849, -11.9845, 0.74 ) }
    dend_2 { pt3dadd( 88.1336, -17.2031, -12.0247, 1.03 ) }
    dend_2 { pt3dadd( 88.165, -17.232, -12.0347, 1.03 ) }
    dend_2 { pt3dadd( 88.863, -17.7727, -12.2956, 0.22 ) }
    dend_2 { pt3dadd( 89.4468, -18.1944, -12.5367, 0.22 ) }
    dend_2 { pt3dadd( 89.8019, -18.4453, -12.6807, 0.81 ) }
    dend_2 { pt3dadd( 90.1782, -18.7238, -12.8185, 0.81 ) }
    dend_2 { pt3dadd( 90.2113, -18.7503, -12.8306, 0.81 ) }
    dend_2 { pt3dadd( 90.7073, -19.211, -12.999, 0.29 ) }
    dend_2 { pt3dadd( 91.0339, -19.5973, -13.1413, 0.44 ) }
    dend_2 { pt3dadd( 91.0701, -19.6435, -13.1656, 0.44 ) }
    dend_2 { pt3dadd( 91.292, -19.9087, -13.3279, 0.44 ) }
    dend_2 { pt3dadd( 91.3197, -19.9417, -13.3556, 0.44 ) }
    dend_2 { pt3dadd( 91.6221, -20.3266, -13.7088, 0.52 ) }
    dend_2 { pt3dadd( 92.0683, -20.9539, -14.3668, 0.52 ) }
    dend_2 { pt3dadd( 92.3466, -21.3364, -14.8357, 0.66 ) }
    dend_2 { pt3dadd( 92.5392, -21.5721, -15.1794, 0.59 ) }
    dend_2 { pt3dadd( 92.9994, -22.0938, -16.051, 0.37 ) }
    dend_2 { pt3dadd( 93.2072, -22.3235, -16.4416, 0.29 ) }
    dend_2 { pt3dadd( 93.6323, -22.7866, -17.2447, 0.74 ) }
    dend_2 { pt3dadd( 94.1283, -23.3458, -18.1523, 0.81 ) }
    dend_2 { pt3dadd( 94.7423, -24.074, -19.2898, 0.29 ) }
    dend_2 { pt3dadd( 94.9562, -24.335, -19.7161, 0.66 ) }
    dend_2 { pt3dadd( 95.2278, -24.6563, -20.2415, 0.29 ) }
    dend_2 { pt3dadd( 95.5286, -25.0122, -20.8185, 0.59 ) }
    dend_2 { pt3dadd( 95.7121, -25.2392, -21.1712, 0.74 ) }
    dend_2 { pt3dadd( 96.1281, -25.8044, -22.0005, 1.33 ) }
    dend_2 { pt3dadd( 96.7915, -26.7392, -23.3414, 0.29 ) }
    dend_2 { pt3dadd( 96.9198, -26.9102, -23.5893, 0.59 ) }
    dend_2 { pt3dadd( 97.013, -27.0255, -23.7564, 0.59 ) }
    dend_2 { pt3dadd( 97.508, -27.5784, -24.4898, 0.52 ) }
    dend_2 { pt3dadd( 97.7597, -27.8296, -24.7868, 0.74 ) }
    dend_2 { pt3dadd( 97.9663, -28.0169, -24.9541, 0.74 ) }
    dend_2 { pt3dadd( 98.4113, -28.3829, -25.1886, 0.37 ) }
    dend_2 { pt3dadd( 99.0842, -28.9043, -25.5271, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 99.5806, -29.2691, -25.736, 0.37 ) }
    dend_2 { pt3dadd( 99.8424, -29.4557, -25.8218, 0.66 ) }
    dend_2 { pt3dadd( 100.095, -29.6333, -25.9074, 0.88 ) }
    dend_2 { pt3dadd( 100.299, -29.7786, -25.9823, 0.88 ) }
    dend_2 { pt3dadd( 101.155, -30.3988, -26.3079, 0.29 ) }
    dend_2 { pt3dadd( 101.868, -30.943, -26.5993, 0.22 ) }
    dend_2 { pt3dadd( 102.007, -31.0574, -26.66, 0.66 ) }
    dend_2 { pt3dadd( 102.5, -31.4908, -26.8881, 0.22 ) }
    dend_2 { pt3dadd( 102.684, -31.6702, -26.9898, 0.52 ) }
    dend_2 { pt3dadd( 103.0, -32.0226, -27.188, 0.29 ) }
    dend_2 { pt3dadd( 103.15, -32.2292, -27.2927, 0.74 ) }
    dend_2 { pt3dadd( 103.286, -32.4594, -27.4156, 0.74 ) }
    dend_2 { pt3dadd( 103.534, -32.9363, -27.6821, 0.22 ) }
    dend_2 { pt3dadd( 103.801, -33.5159, -28.0056, 0.37 ) }
    dend_2 { pt3dadd( 103.918, -33.7736, -28.1702, 0.37 ) }
    dend_2 { pt3dadd( 104.035, -34.0577, -28.3631, 0.59 ) }
    dend_2 { pt3dadd( 104.139, -34.3033, -28.5274, 0.59 ) }
    dend_2 { pt3dadd( 104.311, -34.7251, -28.8069, 0.22 ) }
    dend_2 { pt3dadd( 104.391, -34.9141, -28.9255, 0.52 ) }
    dend_2 { pt3dadd( 104.708, -35.5665, -29.3148, 0.29 ) }
    dend_2 { pt3dadd( 104.881, -35.8828, -29.5267, 1.11 ) }
    dend_2 { pt3dadd( 105.075, -36.2092, -29.7683, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -20.6708, -193.76, -152.601, 0.29 ) }
    dend_104 { pt3dadd( -20.1455, -195.393, -153.06, 0.29 ) }
    dend_104 { pt3dadd( -19.8533, -196.436, -153.304, 0.29 ) }
    dend_104 { pt3dadd( -19.4957, -197.716, -153.395, 0.22 ) }
    dend_104 { pt3dadd( -19.275, -198.525, -153.279, 0.74 ) }
    dend_104 { pt3dadd( -19.0829, -199.133, -153.07, 0.88 ) }
    dend_104 { pt3dadd( -19.0537, -199.214, -153.036, 0.88 ) }
    dend_104 { pt3dadd( -18.8837, -199.707, -152.74, 0.88 ) }
    dend_104 { pt3dadd( -18.4102, -201.045, -151.752, 0.29 ) }
    dend_104 { pt3dadd( -17.9493, -202.131, -150.785, 0.29 ) }
    dend_104 { pt3dadd( -17.4242, -203.171, -149.751, 0.88 ) }
    dend_104 { pt3dadd( -17.0883, -203.782, -149.1, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -20.6708, -193.76, -152.601, 0.59 ) }
    dend_103 { pt3dadd( -22.0533, -195.08, -154.366, 0.59 ) }
    dend_103 { pt3dadd( -22.4098, -195.433, -154.819, 0.37 ) }
    dend_103 { pt3dadd( -22.8538, -195.864, -155.332, 0.37 ) }
    dend_103 { pt3dadd( -23.4324, -196.442, -155.976, 0.96 ) }
    dend_103 { pt3dadd( -23.9666, -197.001, -156.571, 1.33 ) }
    dend_103 { pt3dadd( -25.0302, -198.18, -157.789, 0.59 ) }
    dend_103 { pt3dadd( -25.2579, -198.494, -158.08, 0.29 ) }
    dend_103 { pt3dadd( -25.5909, -198.971, -158.549, 0.29 ) }
    dend_103 { pt3dadd( -25.8038, -199.288, -158.913, 0.88 ) }
    dend_103 { pt3dadd( -25.9354, -199.482, -159.164, 0.88 ) }
    dend_103 { pt3dadd( -26.2003, -199.88, -159.715, 0.66 ) }
    dend_103 { pt3dadd( -26.5072, -200.368, -160.433, 0.88 ) }
    dend_103 { pt3dadd( -26.9454, -201.11, -161.554, 1.4 ) }
    dend_103 { pt3dadd( -27.781, -202.536, -163.752, 0.59 ) }
    dend_103 { pt3dadd( -28.2051, -203.188, -164.747, 0.59 ) }
    dend_103 { pt3dadd( -28.3795, -203.443, -165.142, 0.52 ) }
    dend_103 { pt3dadd( -28.4947, -203.612, -165.41, 1.03 ) }
    dend_103 { pt3dadd( -28.6587, -203.853, -165.783, 0.88 ) }
    dend_103 { pt3dadd( -29.271, -204.74, -167.087, 0.22 ) }
    dend_103 { pt3dadd( -29.6923, -205.318, -167.84, 0.59 ) }
    dend_103 { pt3dadd( -30.2509, -205.967, -168.685, 0.74 ) }
    dend_103 { pt3dadd( -30.8309, -206.571, -169.494, 0.44 ) }
    dend_103 { pt3dadd( -31.1827, -206.926, -169.954, 0.74 ) }
    dend_103 { pt3dadd( -31.813, -207.597, -170.773, 1.11 ) }
    dend_103 { pt3dadd( -32.1159, -207.961, -171.161, 0.96 ) }
    dend_103 { pt3dadd( -33.1226, -209.291, -172.378, 0.74 ) }
    dend_103 { pt3dadd( -33.1438, -209.319, -172.4, 0.74 ) }
    dend_103 { pt3dadd( -33.5021, -209.814, -172.72, 0.74 ) }
    dend_103 { pt3dadd( -33.9847, -210.552, -173.167, 0.74 ) }
    dend_103 { pt3dadd( -34.4208, -211.33, -173.567, 0.37 ) }
    dend_103 { pt3dadd( -34.6347, -211.759, -173.783, 1.03 ) }
    dend_103 { pt3dadd( -34.8144, -212.211, -173.973, 1.18 ) }
    dend_103 { pt3dadd( -35.3204, -213.473, -174.522, 0.29 ) }
    dend_103 { pt3dadd( -35.494, -213.895, -174.708, 0.59 ) }
    dend_103 { pt3dadd( -35.6245, -214.235, -174.839, 0.59 ) }
    dend_103 { pt3dadd( -35.771, -214.746, -175.003, 0.44 ) }
    dend_103 { pt3dadd( -35.8554, -215.152, -175.113, 0.29 ) }
    dend_103 { pt3dadd( -35.8627, -215.197, -175.122, 0.29 ) }
    dend_103 { pt3dadd( -35.9096, -215.555, -175.159, 0.59 ) }
    dend_103 { pt3dadd( -35.9987, -215.939, -175.314, 0.59 ) }
    dend_103 { pt3dadd( -36.0966, -216.284, -175.579, 0.44 ) }
    dend_103 { pt3dadd( -36.2031, -216.622, -175.963, 0.29 ) }
    dend_103 { pt3dadd( -36.3561, -217.004, -176.509, 0.88 ) }
    dend_103 { pt3dadd( -36.5501, -217.415, -177.197, 1.11 ) }
    dend_103 { pt3dadd( -37.0496, -218.337, -178.919, 0.74 ) }
    dend_103 { pt3dadd( -37.3451, -218.859, -179.916, 0.59 ) }
    dend_103 { pt3dadd( -37.6909, -219.451, -181.047, 0.29 ) }
    dend_103 { pt3dadd( -38.0847, -220.104, -182.251, 0.74 ) }
    dend_103 { pt3dadd( -38.6376, -221.006, -183.798, 1.03 ) }
    dend_103 { pt3dadd( -39.2145, -221.95, -185.209, 0.52 ) }
    dend_103 { pt3dadd( -39.433, -222.334, -185.639, 0.44 ) }
    dend_103 { pt3dadd( -39.5807, -222.611, -185.867, 0.88 ) }
    dend_103 { pt3dadd( -39.8374, -223.153, -186.145, 1.11 ) }
    dend_103 { pt3dadd( -39.9656, -223.478, -186.206, 1.11 ) }
    dend_103 { pt3dadd( -40.1746, -224.085, -186.164, 0.59 ) }
    dend_103 { pt3dadd( -40.3702, -224.734, -186.048, 0.44 ) }
    dend_103 { pt3dadd( -40.4807, -225.117, -185.997, 0.66 ) }
    dend_103 { pt3dadd( -40.6534, -225.832, -185.939, 0.59 ) }
    dend_103 { pt3dadd( -40.8201, -226.393, -186.058, 0.37 ) }
    dend_103 { pt3dadd( -41.0053, -226.886, -186.268, 0.44 ) }
    dend_103 { pt3dadd( -41.274, -227.488, -186.628, 0.66 ) }
    dend_103 { pt3dadd( -41.5018, -227.949, -186.962, 0.81 ) }
    dend_103 { pt3dadd( -41.7289, -228.382, -187.317, 0.88 ) }
    dend_103 { pt3dadd( -42.9775, -230.549, -189.205, 0.52 ) }
    dend_103 { pt3dadd( -43.1965, -230.879, -189.498, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -43.3399, -231.066, -189.664, 0.59 ) }
    dend_103 { pt3dadd( -43.5232, -231.276, -189.825, 0.59 ) }
    dend_103 { pt3dadd( -43.9756, -231.75, -190.066, 0.37 ) }
    dend_103 { pt3dadd( -44.4303, -232.188, -190.127, 0.37 ) }
    dend_103 { pt3dadd( -44.8583, -232.603, -189.941, 0.37 ) }
    dend_103 { pt3dadd( -44.8951, -232.637, -189.925, 0.37 ) }
    dend_103 { pt3dadd( -45.4591, -233.138, -189.669, 0.22 ) }
    dend_103 { pt3dadd( -45.6913, -233.32, -189.554, 0.37 ) }
    dend_103 { pt3dadd( -45.9154, -233.464, -189.423, 0.37 ) }
    dend_103 { pt3dadd( -46.4629, -233.767, -189.115, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 20.9608, -122.99, -81.4015, 0.29 ) }
    dend_101 { pt3dadd( 21.4974, -123.05, -81.9586, 0.29 ) }
    dend_101 { pt3dadd( 21.7419, -123.102, -82.208, 0.37 ) }
    dend_101 { pt3dadd( 21.7839, -123.114, -82.2465, 0.37 ) }
    dend_101 { pt3dadd( 22.304, -123.34, -82.7173, 0.22 ) }
    dend_101 { pt3dadd( 22.3492, -123.362, -82.7578, 0.22 ) }
    dend_101 { pt3dadd( 22.643, -123.508, -83.0138, 0.52 ) }
    dend_101 { pt3dadd( 22.6811, -123.533, -83.0456, 0.52 ) }
    dend_101 { pt3dadd( 23.0146, -123.752, -83.2808, 0.52 ) }
    dend_101 { pt3dadd( 23.6225, -124.126, -83.6565, 0.22 ) }
    dend_101 { pt3dadd( 23.6663, -124.152, -83.6806, 0.22 ) }
    dend_101 { pt3dadd( 23.8639, -124.267, -83.7889, 0.37 ) }
    dend_101 { pt3dadd( 24.2163, -124.471, -83.981, 0.22 ) }
    dend_101 { pt3dadd( 24.9354, -124.883, -84.3589, 0.96 ) }
    dend_101 { pt3dadd( 24.9815, -124.91, -84.3807, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 20.9608, -122.99, -81.4015, 0.37 ) }
    dend_100 { pt3dadd( 21.5428, -124.103, -82.8345, 0.37 ) }
    dend_100 { pt3dadd( 21.9067, -124.937, -83.7962, 0.66 ) }
    dend_100 { pt3dadd( 22.0749, -125.364, -84.243, 0.88 ) }
    dend_100 { pt3dadd( 22.2486, -125.844, -84.6983, 1.18 ) }
    dend_100 { pt3dadd( 22.7624, -127.393, -86.0252, 0.44 ) }
    dend_100 { pt3dadd( 22.9003, -127.818, -86.3576, 0.29 ) }
    dend_100 { pt3dadd( 23.083, -128.513, -86.7845, 0.88 ) }
    dend_100 { pt3dadd( 23.1884, -128.923, -86.9875, 1.11 ) }
    dend_100 { pt3dadd( 23.3411, -129.445, -87.203, 0.66 ) }
    dend_100 { pt3dadd( 23.5793, -130.12, -87.4018, 0.37 ) }
    dend_100 { pt3dadd( 23.8833, -130.717, -87.4772, 0.52 ) }
    dend_100 { pt3dadd( 23.9576, -130.827, -87.4888, 0.52 ) }
    dend_100 { pt3dadd( 24.505, -131.453, -87.5704, 0.59 ) }
    dend_100 { pt3dadd( 24.8926, -131.834, -87.6265, 0.66 ) }
    dend_100 { pt3dadd( 24.9871, -131.913, -87.6325, 0.66 ) }
    dend_100 { pt3dadd( 25.5462, -132.366, -87.6378, 0.37 ) }
    dend_100 { pt3dadd( 26.205, -132.881, -87.5068, 0.37 ) }
    dend_100 { pt3dadd( 26.7177, -133.269, -87.3535, 0.37 ) }
    dend_100 { pt3dadd( 27.2666, -133.673, -87.1635, 0.96 ) }
    dend_100 { pt3dadd( 28.1274, -134.268, -86.857, 1.25 ) }
    dend_100 { pt3dadd( 28.9116, -134.774, -86.6062, 0.96 ) }
    dend_100 { pt3dadd( 30.8857, -135.964, -85.9414, 0.52 ) }
    dend_100 { pt3dadd( 31.7141, -136.441, -85.6572, 0.59 ) }
    dend_100 { pt3dadd( 32.2174, -136.719, -85.4882, 0.74 ) }
    dend_100 { pt3dadd( 32.8535, -137.06, -85.2951, 0.74 ) }
    dend_100 { pt3dadd( 33.8571, -137.598, -85.0742, 0.29 ) }
    dend_100 { pt3dadd( 34.7427, -138.065, -84.9439, 0.66 ) }
    dend_100 { pt3dadd( 34.7994, -138.1, -84.9451, 0.66 ) }
    dend_100 { pt3dadd( 35.242, -138.443, -84.9598, 0.29 ) }
    dend_100 { pt3dadd( 35.6496, -138.836, -84.9817, 0.74 ) }
    dend_100 { pt3dadd( 36.0223, -139.288, -85.0211, 0.88 ) }
    dend_100 { pt3dadd( 36.0622, -139.341, -85.0269, 0.88 ) }
    dend_100 { pt3dadd( 36.521, -139.927, -85.13, 0.37 ) }
    dend_100 { pt3dadd( 37.0398, -140.54, -85.2389, 0.59 ) }
    dend_100 { pt3dadd( 37.3577, -140.89, -85.3024, 0.88 ) }
    dend_100 { pt3dadd( 37.9277, -141.476, -85.4149, 0.29 ) }
    dend_100 { pt3dadd( 38.3919, -141.919, -85.4851, 0.22 ) }
    dend_100 { pt3dadd( 38.6117, -142.12, -85.5121, 0.81 ) }
    dend_100 { pt3dadd( 38.9882, -142.444, -85.5489, 1.18 ) }
    dend_100 { pt3dadd( 39.0414, -142.487, -85.5538, 1.18 ) }
    dend_100 { pt3dadd( 39.6524, -142.965, -85.6008, 1.03 ) }
    dend_100 { pt3dadd( 40.4853, -143.645, -85.5701, 0.29 ) }
    dend_100 { pt3dadd( 41.202, -144.311, -85.4746, 0.22 ) }
    dend_100 { pt3dadd( 41.2664, -144.38, -85.4557, 0.22 ) }
    dend_100 { pt3dadd( 41.7202, -144.921, -85.2721, 0.29 ) }
    dend_100 { pt3dadd( 42.0978, -145.388, -85.1062, 1.18 ) }
    dend_100 { pt3dadd( 42.8985, -146.34, -84.7323, 0.74 ) }
    dend_100 { pt3dadd( 43.318, -146.825, -84.5409, 0.52 ) }
    dend_100 { pt3dadd( 43.894, -147.428, -84.2648, 0.29 ) }
    dend_100 { pt3dadd( 44.3963, -147.916, -83.9973, 0.52 ) }
    dend_100 { pt3dadd( 44.945, -148.398, -83.6804, 0.96 ) }
    dend_100 { pt3dadd( 45.7345, -149.016, -83.2733, 1.18 ) }
    dend_100 { pt3dadd( 46.5364, -149.573, -82.8766, 1.03 ) }
    dend_100 { pt3dadd( 47.6457, -150.312, -82.3123, 0.74 ) }
    dend_100 { pt3dadd( 48.8102, -151.115, -81.7028, 0.66 ) }
    dend_100 { pt3dadd( 49.483, -151.633, -81.3314, 1.03 ) }
    dend_100 { pt3dadd( 50.3485, -152.386, -80.8532, 0.88 ) }
    dend_100 { pt3dadd( 51.2632, -153.284, -80.4003, 0.74 ) }
    dend_100 { pt3dadd( 51.9031, -153.983, -80.1513, 0.74 ) }
    dend_100 { pt3dadd( 52.4456, -154.656, -80.0273, 0.74 ) }
    dend_100 { pt3dadd( 53.0456, -155.485, -79.9782, 0.52 ) }
    dend_100 { pt3dadd( 53.5085, -156.161, -79.9826, 0.52 ) }
    dend_100 { pt3dadd( 53.9834, -156.875, -80.018, 0.44 ) }
    dend_100 { pt3dadd( 54.4328, -157.555, -80.0992, 0.74 ) }
    dend_100 { pt3dadd( 54.7798, -158.047, -80.1706, 0.96 ) }
    dend_100 { pt3dadd( 55.1071, -158.488, -80.2402, 0.96 ) }
    dend_100 { pt3dadd( 55.7922, -159.387, -80.3905, 0.37 ) }
    dend_100 { pt3dadd( 56.3893, -160.131, -80.5312, 0.37 ) }
    dend_100 { pt3dadd( 56.4249, -160.173, -80.54, 0.37 ) }
    dend_100 { pt3dadd( 56.94, -160.699, -80.6809, 0.66 ) }
    dend_100 { pt3dadd( 57.336, -161.085, -80.7948, 0.88 ) }
    dend_100 { pt3dadd( 57.8615, -161.566, -80.9602, 0.59 ) }
    dend_100 { pt3dadd( 58.3767, -162.005, -81.1519, 0.22 ) }
    dend_100 { pt3dadd( 58.4313, -162.042, -81.1719, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 59.1174, -162.445, -81.4211, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -5.56526, -222.471, -55.4327, 0.52 ) }
    dend_96 { pt3dadd( -4.20095, -222.302, -56.2432, 0.52 ) }
    dend_96 { pt3dadd( -3.52537, -222.28, -56.6829, 0.52 ) }
    dend_96 { pt3dadd( -2.83025, -222.318, -57.2585, 0.66 ) }
    dend_96 { pt3dadd( -2.13861, -222.406, -57.9252, 0.59 ) }
    dend_96 { pt3dadd( -1.30584, -222.564, -58.7764, 0.29 ) }
    dend_96 { pt3dadd( -1.06634, -222.633, -59.0602, 0.59 ) }
    dend_96 { pt3dadd( -0.81833, -222.747, -59.4674, 0.59 ) }
    dend_96 { pt3dadd( -0.168669, -223.126, -60.6789, 0.29 ) }
    dend_96 { pt3dadd( 0.176997, -223.37, -61.3709, 0.88 ) }
    dend_96 { pt3dadd( 0.315657, -223.48, -61.681, 0.88 ) }
    dend_96 { pt3dadd( 0.935996, -223.941, -63.4403, 0.29 ) }
    dend_96 { pt3dadd( 1.28138, -224.154, -64.6355, 0.59 ) }
    dend_96 { pt3dadd( 1.39404, -224.2, -65.1924, 0.44 ) }
    dend_96 { pt3dadd( 1.40221, -224.201, -65.2514, 0.44 ) }
    dend_96 { pt3dadd( 1.5334, -224.154, -66.6019, 0.44 ) }
    dend_96 { pt3dadd( 1.69535, -223.941, -68.985, 0.29 ) }
    dend_96 { pt3dadd( 1.719, -223.868, -69.4768, 0.29 ) }
    dend_96 { pt3dadd( 1.86958, -223.472, -71.5832, 0.29 ) }
    dend_96 { pt3dadd( 1.87254, -223.46, -71.6497, 0.29 ) }
    dend_96 { pt3dadd( 1.87618, -223.449, -71.7098, 0.44 ) }
    dend_96 { pt3dadd( 1.88529, -223.426, -71.8276, 0.44 ) }
    dend_96 { pt3dadd( 1.95578, -223.26, -72.7213, 0.29 ) }
    dend_96 { pt3dadd( 2.01465, -223.115, -73.4716, 0.81 ) }
    dend_96 { pt3dadd( 2.4821, -221.938, -79.4045, 0.29 ) }
    dend_96 { pt3dadd( 2.57832, -221.682, -80.6787, 0.22 ) }
    dend_96 { pt3dadd( 2.67125, -221.427, -82.0308, 0.44 ) }
    dend_96 { pt3dadd( 2.80582, -220.993, -84.6776, 0.29 ) }
    dend_96 { pt3dadd( 2.82266, -220.917, -85.1986, 0.88 ) }
    dend_96 { pt3dadd( 2.83182, -220.885, -85.5677, 0.88 ) }
    dend_96 { pt3dadd( 2.83533, -220.882, -85.6271, 0.88 ) }
    dend_96 { pt3dadd( 2.95289, -220.818, -88.5971, 0.29 ) }
    dend_96 { pt3dadd( 2.99494, -220.75, -91.5347, 0.52 ) }
    dend_96 { pt3dadd( 2.99476, -220.748, -91.5935, 0.52 ) }
    dend_96 { pt3dadd( 2.95576, -220.633, -95.4544, 0.22 ) }
    dend_96 { pt3dadd( 2.94081, -220.596, -96.3535, 0.37 ) }
    dend_96 { pt3dadd( 2.90209, -220.505, -98.0874, 0.96 ) }
    dend_96 { pt3dadd( 2.82592, -220.319, -100.357, 0.22 ) }
    dend_96 { pt3dadd( 2.81123, -220.273, -100.732, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -5.56526, -222.471, -55.4327, 0.81 ) }
    dend_95 { pt3dadd( -5.53342, -223.051, -55.5771, 0.81 ) }
    dend_95 { pt3dadd( -5.48962, -223.594, -55.6959, 1.03 ) }
    dend_95 { pt3dadd( -5.40456, -224.398, -55.8523, 0.96 ) }
    dend_95 { pt3dadd( -5.30526, -225.116, -55.9753, 0.74 ) }
    dend_95 { pt3dadd( -5.20763, -225.747, -56.0021, 0.29 ) }
    dend_95 { pt3dadd( -5.14666, -226.139, -55.9848, 0.29 ) }
    dend_95 { pt3dadd( -5.09801, -226.429, -55.9399, 0.52 ) }
    dend_95 { pt3dadd( -5.06597, -226.69, -55.867, 0.52 ) }
    dend_95 { pt3dadd( -5.0423, -227.027, -55.7366, 0.52 ) }
    dend_95 { pt3dadd( -4.99324, -228.191, -55.2643, 0.29 ) }
    dend_95 { pt3dadd( -4.97262, -228.713, -55.0681, 0.52 ) }
    dend_95 { pt3dadd( -4.95342, -229.029, -54.9497, 0.81 ) }
    dend_95 { pt3dadd( -4.8904, -229.631, -54.7113, 0.88 ) }
    dend_95 { pt3dadd( -4.79217, -230.105, -54.5233, 1.18 ) }
    dend_95 { pt3dadd( -4.61622, -230.712, -54.289, 1.4 ) }
    dend_95 { pt3dadd( -4.27192, -231.583, -53.9831, 0.52 ) }
    dend_95 { pt3dadd( -3.88516, -232.354, -53.704, 0.52 ) }
    dend_95 { pt3dadd( -3.3596, -233.245, -53.3928, 0.52 ) }
    dend_95 { pt3dadd( -2.77723, -234.139, -53.1004, 0.74 ) }
    dend_95 { pt3dadd( -2.74196, -234.192, -53.0844, 0.74 ) }
    dend_95 { pt3dadd( -2.34509, -234.832, -52.9395, 0.29 ) }
    dend_95 { pt3dadd( -1.95074, -235.573, -52.8426, 0.29 ) }
    dend_95 { pt3dadd( -1.57806, -236.403, -52.8214, 0.66 ) }
    dend_95 { pt3dadd( -1.40849, -236.867, -52.8446, 0.88 ) }
    dend_95 { pt3dadd( -1.23229, -237.504, -52.8946, 0.88 ) }
    dend_95 { pt3dadd( -0.977389, -238.487, -53.0192, 0.29 ) }
    dend_95 { pt3dadd( -0.870455, -238.9, -53.0901, 0.88 ) }
    dend_95 { pt3dadd( -0.85402, -238.962, -53.1082, 0.88 ) }
    dend_95 { pt3dadd( -0.724948, -239.385, -53.2665, 1.03 ) }
    dend_95 { pt3dadd( -0.701805, -239.452, -53.2935, 1.03 ) }
    dend_95 { pt3dadd( -0.34272, -240.449, -53.6779, 0.74 ) }
    dend_95 { pt3dadd( -0.0394406, -241.167, -53.9178, 0.88 ) }
    dend_95 { pt3dadd( 0.402667, -242.129, -54.2065, 1.18 ) }
    dend_95 { pt3dadd( 0.623565, -242.601, -54.3256, 1.18 ) }
    dend_95 { pt3dadd( 0.884105, -243.148, -54.4338, 0.66 ) }
    dend_95 { pt3dadd( 1.23697, -243.877, -54.5306, 0.29 ) }
    dend_95 { pt3dadd( 1.5912, -244.598, -54.5633, 0.29 ) }
    dend_95 { pt3dadd( 1.8276, -245.089, -54.5566, 0.59 ) }
    dend_95 { pt3dadd( 2.1182, -245.703, -54.5052, 0.74 ) }
    dend_95 { pt3dadd( 2.39957, -246.32, -54.446, 0.74 ) }
    dend_95 { pt3dadd( 2.5471, -246.694, -54.3679, 0.74 ) }
    dend_95 { pt3dadd( 2.66465, -247.088, -54.2546, 0.88 ) }
    dend_95 { pt3dadd( 2.81968, -247.731, -54.0317, 0.81 ) }
    dend_95 { pt3dadd( 3.01228, -248.512, -53.7168, 0.81 ) }
    dend_95 { pt3dadd( 3.21129, -249.272, -53.3676, 0.59 ) }
    dend_95 { pt3dadd( 3.60392, -250.63, -52.6859, 0.37 ) }
    dend_95 { pt3dadd( 3.79889, -251.223, -52.3659, 0.52 ) }
    dend_95 { pt3dadd( 3.98934, -251.698, -52.0966, 0.44 ) }
    dend_95 { pt3dadd( 4.20279, -252.106, -51.8582, 0.52 ) }
    dend_95 { pt3dadd( 4.273, -252.214, -51.7986, 0.52 ) }
    dend_95 { pt3dadd( 4.57968, -252.598, -51.6541, 0.37 ) }
    dend_95 { pt3dadd( 4.66966, -252.706, -51.6403, 0.37 ) }
    dend_95 { pt3dadd( 4.99462, -253.177, -51.599, 0.81 ) }
    dend_95 { pt3dadd( 5.15946, -253.55, -51.6048, 0.96 ) }
    dend_95 { pt3dadd( 5.17502, -253.605, -51.6136, 0.96 ) }
    dend_95 { pt3dadd( 5.22999, -253.942, -51.6956, 0.81 ) }
    dend_95 { pt3dadd( 5.29272, -254.636, -51.9335, 0.52 ) }
    dend_95 { pt3dadd( 5.32149, -255.102, -52.1078, 0.52 ) }
    dend_95 { pt3dadd( 5.36775, -255.919, -52.4222, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( 5.42206, -256.759, -52.7353, 0.74 ) }
    dend_95 { pt3dadd( 5.46455, -257.339, -52.9437, 0.88 ) }
    dend_95 { pt3dadd( 5.53899, -258.177, -53.1862, 0.52 ) }
    dend_95 { pt3dadd( 5.62482, -259.021, -53.3579, 0.52 ) }
    dend_95 { pt3dadd( 5.69094, -259.637, -53.4136, 0.74 ) }
    dend_95 { pt3dadd( 5.76295, -260.226, -53.3982, 0.44 ) }
    dend_95 { pt3dadd( 5.7803, -260.362, -53.3821, 0.44 ) }
    dend_95 { pt3dadd( 5.88866, -261.436, -53.2014, 0.44 ) }
    dend_95 { pt3dadd( 5.91044, -262.077, -53.0548, 0.22 ) }
    dend_95 { pt3dadd( 5.87002, -262.692, -52.9153, 0.22 ) }
    dend_95 { pt3dadd( 5.80048, -263.148, -52.854, 0.74 ) }
    dend_95 { pt3dadd( 5.78768, -263.211, -52.8519, 0.74 ) }
    dend_95 { pt3dadd( 5.668, -263.725, -52.8843, 0.96 ) }
    dend_95 { pt3dadd( 5.65156, -263.788, -52.896, 0.96 ) }
    dend_95 { pt3dadd( 5.52436, -264.389, -53.0127, 0.96 ) }
    dend_95 { pt3dadd( 5.4257, -265.421, -53.2394, 0.44 ) }
    dend_95 { pt3dadd( 5.40521, -265.962, -53.3057, 0.52 ) }
    dend_95 { pt3dadd( 5.40541, -266.026, -53.3093, 0.52 ) }
    dend_95 { pt3dadd( 5.41787, -266.562, -53.3298, 0.81 ) }
    dend_95 { pt3dadd( 5.45879, -267.303, -53.3631, 0.74 ) }
    dend_95 { pt3dadd( 5.54868, -268.362, -53.4038, 0.37 ) }
    dend_95 { pt3dadd( 5.64277, -269.709, -53.435, 0.37 ) }
    dend_95 { pt3dadd( 5.65948, -270.209, -53.4267, 1.18 ) }
    dend_95 { pt3dadd( 5.66633, -271.127, -53.3901, 0.96 ) }
    dend_95 { pt3dadd( 5.65042, -272.113, -53.3321, 0.52 ) }
    dend_95 { pt3dadd( 5.60239, -273.238, -53.2477, 0.52 ) }
    dend_95 { pt3dadd( 5.52897, -274.501, -53.1192, 0.74 ) }
    dend_95 { pt3dadd( 5.48134, -275.824, -52.9918, 0.81 ) }
    dend_95 { pt3dadd( 5.47952, -275.896, -52.9806, 0.81 ) }
    dend_95 { pt3dadd( 5.46483, -276.477, -52.8266, 1.03 ) }
    dend_95 { pt3dadd( 5.46222, -276.548, -52.8017, 1.03 ) }
    dend_95 { pt3dadd( 5.45519, -277.205, -52.545, 0.52 ) }
    dend_95 { pt3dadd( 5.4746, -277.833, -52.3075, 0.37 ) }
    dend_95 { pt3dadd( 5.51822, -278.44, -52.1167, 0.88 ) }
    dend_95 { pt3dadd( 5.56726, -279.094, -51.9208, 0.96 ) }
    dend_95 { pt3dadd( 5.61505, -279.601, -51.7704, 0.74 ) }
    dend_95 { pt3dadd( 5.69019, -280.198, -51.6071, 0.22 ) }
    dend_95 { pt3dadd( 5.79827, -280.799, -51.4416, 0.22 ) }
    dend_95 { pt3dadd( 5.95256, -281.3, -51.2983, 0.74 ) }
    dend_95 { pt3dadd( 6.116, -281.642, -51.1945, 1.03 ) }
    dend_95 { pt3dadd( 6.37542, -282.037, -51.0685, 1.03 ) }
    dend_95 { pt3dadd( 6.77161, -282.504, -50.8645, 0.59 ) }
    dend_95 { pt3dadd( 7.37883, -283.123, -50.5448, 0.37 ) }
    dend_95 { pt3dadd( 7.99971, -283.723, -50.2081, 0.22 ) }
    dend_95 { pt3dadd( 8.44766, -284.181, -49.9571, 0.81 ) }
    dend_95 { pt3dadd( 8.79175, -284.562, -49.7656, 0.81 ) }
    dend_95 { pt3dadd( 9.36538, -285.283, -49.454, 0.29 ) }
    dend_95 { pt3dadd( 9.63702, -285.657, -49.314, 0.59 ) }
    dend_95 { pt3dadd( 9.90068, -286.056, -49.202, 0.74 ) }
    dend_95 { pt3dadd( 10.2638, -286.692, -49.0655, 0.74 ) }
    dend_95 { pt3dadd( 10.573, -287.281, -48.9835, 0.52 ) }
    dend_95 { pt3dadd( 11.0917, -288.244, -48.9869, 0.22 ) }
    dend_95 { pt3dadd( 11.3601, -288.747, -49.0496, 0.22 ) }
    dend_95 { pt3dadd( 11.5483, -289.106, -49.1096, 0.74 ) }
    dend_95 { pt3dadd( 11.7858, -289.584, -49.21, 0.74 ) }
    dend_95 { pt3dadd( 12.3253, -290.733, -49.4912, 0.22 ) }
    dend_95 { pt3dadd( 12.827, -291.972, -49.8231, 0.81 ) }
    dend_95 { pt3dadd( 13.0013, -292.491, -49.9591, 0.81 ) }
    dend_95 { pt3dadd( 13.2554, -293.39, -50.163, 0.22 ) }
    dend_95 { pt3dadd( 13.433, -294.127, -50.2899, 0.22 ) }
    dend_95 { pt3dadd( 13.4993, -294.447, -50.3292, 0.81 ) }
    dend_95 { pt3dadd( 13.5803, -294.923, -50.3578, 1.03 ) }
    dend_95 { pt3dadd( 13.7488, -296.035, -50.3429, 0.29 ) }
    dend_95 { pt3dadd( 13.8131, -296.439, -50.3379, 0.29 ) }
    dend_95 { pt3dadd( 13.9549, -297.367, -50.329, 0.29 ) }
    dend_95 { pt3dadd( 14.0668, -298.164, -50.3067, 0.15 ) }
    dend_95 { pt3dadd( 14.106, -298.486, -50.2985, 0.52 ) }
    dend_95 { pt3dadd( 14.1408, -298.755, -50.2913, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -21.0499, -82.6936, 2.66084, 0.96 ) }
    dend_67 { pt3dadd( -20.9584, -84.2285, 1.80882, 0.96 ) }
    dend_67 { pt3dadd( -20.8897, -85.8528, 0.967624, 0.96 ) }
    dend_67 { pt3dadd( -20.8456, -87.6734, 0.111777, 0.96 ) }
    dend_67 { pt3dadd( -20.8291, -89.5615, -0.698719, 0.81 ) }
    dend_67 { pt3dadd( -20.871, -91.4548, -1.51538, 0.66 ) }
    dend_67 { pt3dadd( -20.9413, -93.0563, -2.18249, 0.66 ) }
    dend_67 { pt3dadd( -20.9555, -93.2386, -2.24976, 0.66 ) }
    dend_67 { pt3dadd( -21.071, -94.433, -2.67776, 0.88 ) }
    dend_67 { pt3dadd( -21.134, -95.2225, -2.96007, 1.03 ) }
    dend_67 { pt3dadd( -21.1332, -97.2399, -3.80685, 0.74 ) }
    dend_67 { pt3dadd( -21.0069, -98.4553, -4.40027, 0.74 ) }
    dend_67 { pt3dadd( -20.7387, -99.7445, -5.11651, 0.74 ) }
    dend_67 { pt3dadd( -20.2764, -101.342, -6.06128, 0.96 ) }
    dend_67 { pt3dadd( -19.9163, -102.284, -6.64756, 1.03 ) }
    dend_67 { pt3dadd( -19.3806, -103.549, -7.39035, 1.03 ) }
    dend_67 { pt3dadd( -18.7107, -105.148, -8.19193, 0.88 ) }
    dend_67 { pt3dadd( -18.3374, -106.225, -8.63952, 0.88 ) }
    dend_67 { pt3dadd( -18.2767, -106.57, -8.72914, 0.88 ) }
    dend_67 { pt3dadd( -18.3109, -107.443, -8.70297, 0.59 ) }
    dend_67 { pt3dadd( -18.8222, -109.155, -8.25095, 0.52 ) }
    dend_67 { pt3dadd( -19.5108, -110.448, -7.65881, 0.74 ) }
    dend_67 { pt3dadd( -20.1097, -111.292, -7.06558, 0.66 ) }
    dend_67 { pt3dadd( -20.9525, -112.32, -6.20285, 0.52 ) }
    dend_67 { pt3dadd( -22.268, -113.831, -4.76711, 0.52 ) }
    dend_67 { pt3dadd( -22.9238, -114.563, -4.02057, 0.74 ) }
    dend_67 { pt3dadd( -23.7701, -115.513, -3.05781, 1.03 ) }
    dend_67 { pt3dadd( -24.8432, -116.795, -1.88311, 1.03 ) }
    dend_67 { pt3dadd( -25.5928, -117.747, -1.12166, 1.03 ) }
    dend_67 { pt3dadd( -26.6393, -119.191, -0.156827, 0.74 ) }
    dend_67 { pt3dadd( -27.3279, -120.192, 0.344614, 0.66 ) }
    dend_67 { pt3dadd( -28.022, -121.343, 0.851379, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -28.5588, -122.425, 1.26811, 0.52 ) }
    dend_67 { pt3dadd( -28.5951, -122.511, 1.2952, 0.52 ) }
    dend_67 { pt3dadd( -28.9034, -123.431, 1.60297, 0.66 ) }
    dend_67 { pt3dadd( -29.1375, -124.35, 1.91171, 0.81 ) }
    dend_67 { pt3dadd( -29.4172, -125.627, 2.40328, 0.52 ) }
    dend_67 { pt3dadd( -29.7929, -127.198, 2.95363, 0.52 ) }
    dend_67 { pt3dadd( -29.9007, -127.514, 3.01879, 0.81 ) }
    dend_67 { pt3dadd( -30.3991, -128.519, 3.07392, 0.81 ) }
    dend_67 { pt3dadd( -30.9781, -129.322, 2.99692, 0.96 ) }
    dend_67 { pt3dadd( -32.0072, -130.324, 2.71883, 1.03 ) }
    dend_67 { pt3dadd( -33.5692, -131.399, 2.28214, 1.18 ) }
    dend_67 { pt3dadd( -35.5365, -132.495, 1.76516, 0.81 ) }
    dend_67 { pt3dadd( -36.5044, -132.964, 1.51482, 0.88 ) }
    dend_67 { pt3dadd( -37.7142, -133.474, 1.23507, 1.18 ) }
    dend_67 { pt3dadd( -38.9689, -133.984, 1.00021, 1.55 ) }
    dend_67 { pt3dadd( -40.7187, -134.76, 0.831386, 0.66 ) }
    dend_67 { pt3dadd( -41.4718, -135.18, 0.862966, 0.66 ) }
    dend_67 { pt3dadd( -42.1019, -135.667, 0.986453, 0.52 ) }
    dend_67 { pt3dadd( -43.1337, -136.724, 1.29578, 0.52 ) }
    dend_67 { pt3dadd( -43.8771, -137.745, 1.60001, 0.37 ) }
    dend_67 { pt3dadd( -44.5939, -139.141, 2.08313, 0.37 ) }
    dend_67 { pt3dadd( -44.9817, -140.182, 2.44236, 0.74 ) }
    dend_67 { pt3dadd( -45.3569, -141.405, 2.90274, 1.25 ) }
    dend_67 { pt3dadd( -45.3792, -141.478, 2.93297, 1.25 ) }
    dend_67 { pt3dadd( -45.7373, -142.533, 3.38957, 1.18 ) }
    dend_67 { pt3dadd( -46.3534, -144.046, 4.07534, 1.03 ) }
    dend_67 { pt3dadd( -46.8124, -144.954, 4.47923, 0.66 ) }
    dend_67 { pt3dadd( -47.4171, -146.001, 4.9238, 0.37 ) }
    dend_67 { pt3dadd( -48.267, -147.324, 5.42376, 0.37 ) }
    dend_67 { pt3dadd( -48.889, -148.215, 5.72714, 0.44 ) }
    dend_67 { pt3dadd( -48.9566, -148.3, 5.75313, 0.44 ) }
    dend_67 { pt3dadd( -49.8629, -149.309, 6.00075, 0.37 ) }
    dend_67 { pt3dadd( -50.5446, -150.05, 6.16509, 0.59 ) }
    dend_67 { pt3dadd( -50.9679, -150.521, 6.25114, 0.59 ) }
    dend_67 { pt3dadd( -51.6928, -151.396, 6.36592, 0.44 ) }
    dend_67 { pt3dadd( -52.2846, -152.147, 6.44622, 0.66 ) }
    dend_67 { pt3dadd( -52.9412, -153.006, 6.53466, 0.88 ) }
    dend_67 { pt3dadd( -53.6626, -153.987, 6.62908, 0.88 ) }
    dend_67 { pt3dadd( -54.6836, -155.368, 6.73871, 0.66 ) }
    dend_67 { pt3dadd( -55.4833, -156.464, 6.79091, 0.96 ) }
    dend_67 { pt3dadd( -56.0808, -157.253, 6.81656, 1.18 ) }
    dend_67 { pt3dadd( -57.3688, -158.811, 6.90459, 0.88 ) }
    dend_67 { pt3dadd( -57.9004, -159.364, 6.96211, 0.96 ) }
    dend_67 { pt3dadd( -59.1679, -160.415, 7.1666, 0.59 ) }
    dend_67 { pt3dadd( -59.2398, -160.456, 7.18329, 0.59 ) }
    dend_67 { pt3dadd( -60.6395, -160.987, 7.64024, 0.59 ) }
    dend_67 { pt3dadd( -61.8449, -161.284, 8.09844, 0.52 ) }
    dend_67 { pt3dadd( -62.7056, -161.437, 8.46206, 0.52 ) }
    dend_67 { pt3dadd( -63.5603, -161.609, 8.91279, 0.74 ) }
    dend_67 { pt3dadd( -64.4298, -161.819, 9.44765, 0.96 ) }
    dend_67 { pt3dadd( -65.2744, -162.066, 9.98313, 0.81 ) }
    dend_67 { pt3dadd( -66.755, -162.61, 10.9336, 0.96 ) }
    dend_67 { pt3dadd( -67.7203, -163.044, 11.5308, 0.96 ) }
    dend_67 { pt3dadd( -69.1794, -163.778, 12.4339, 0.44 ) }
    dend_67 { pt3dadd( -70.0694, -164.276, 12.9712, 0.44 ) }
    dend_67 { pt3dadd( -71.0449, -164.863, 13.5188, 0.66 ) }
    dend_67 { pt3dadd( -71.8902, -165.353, 13.9296, 0.59 ) }
    dend_67 { pt3dadd( -72.9066, -165.934, 14.3744, 0.59 ) }
    dend_67 { pt3dadd( -73.0038, -165.987, 14.4101, 0.59 ) }
    dend_67 { pt3dadd( -73.8439, -166.43, 14.6315, 0.88 ) }
    dend_67 { pt3dadd( -75.3708, -167.33, 14.9886, 0.96 ) }
    dend_67 { pt3dadd( -76.5071, -168.089, 15.2219, 0.37 ) }
    dend_67 { pt3dadd( -76.6672, -168.222, 15.262, 0.37 ) }
    dend_67 { pt3dadd( -77.6493, -169.268, 15.5692, 0.37 ) }
    dend_67 { pt3dadd( -78.3482, -170.216, 15.8408, 0.29 ) }
    dend_67 { pt3dadd( -78.9322, -171.252, 16.1278, 0.29 ) }
    dend_67 { pt3dadd( -79.3188, -172.076, 16.358, 0.52 ) }
    dend_67 { pt3dadd( -80.1264, -173.831, 16.8688, 1.03 ) }
    dend_67 { pt3dadd( -80.5562, -174.689, 17.1283, 1.25 ) }
    dend_67 { pt3dadd( -80.9341, -175.358, 17.3309, 1.25 ) }
    dend_67 { pt3dadd( -81.7434, -176.49, 17.708, 0.88 ) }
    dend_67 { pt3dadd( -82.6232, -177.44, 18.0435, 0.74 ) }
    dend_67 { pt3dadd( -83.6295, -178.31, 18.3274, 0.74 ) }
    dend_67 { pt3dadd( -84.4829, -178.922, 18.4965, 0.96 ) }
    dend_67 { pt3dadd( -85.6893, -179.71, 18.7122, 0.66 ) }
    dend_67 { pt3dadd( -86.7359, -180.36, 18.8278, 0.74 ) }
    dend_67 { pt3dadd( -87.3671, -180.758, 18.8721, 1.03 ) }
    dend_67 { pt3dadd( -88.2621, -181.373, 18.9027, 1.4 ) }
    dend_67 { pt3dadd( -88.3316, -181.428, 18.9031, 1.4 ) }
    dend_67 { pt3dadd( -88.9836, -182.076, 18.8918, 1.4 ) }
    dend_67 { pt3dadd( -90.1302, -183.624, 18.8626, 0.52 ) }
    dend_67 { pt3dadd( -90.6886, -184.592, 18.8225, 0.81 ) }
    dend_67 { pt3dadd( -91.0552, -185.291, 18.8037, 0.88 ) }
    dend_67 { pt3dadd( -91.4072, -186.014, 18.8033, 0.52 ) }
    dend_67 { pt3dadd( -91.9472, -187.085, 18.8211, 0.44 ) }
    dend_67 { pt3dadd( -92.4143, -188.003, 18.8563, 0.44 ) }
    dend_67 { pt3dadd( -92.8595, -188.766, 18.9456, 0.44 ) }
    dend_67 { pt3dadd( -93.4154, -189.487, 19.0386, 0.66 ) }
    dend_67 { pt3dadd( -93.5589, -189.623, 19.084, 0.66 ) }
    dend_67 { pt3dadd( -94.1586, -190.038, 19.3401, 0.88 ) }
    dend_67 { pt3dadd( -94.2763, -190.1, 19.399, 0.88 ) }
    dend_67 { pt3dadd( -95.0258, -190.493, 19.8172, 0.96 ) }
    dend_67 { pt3dadd( -95.4533, -190.751, 20.069, 0.66 ) }
    dend_67 { pt3dadd( -96.5032, -191.463, 20.6867, 0.52 ) }
    dend_67 { pt3dadd( -97.2232, -191.986, 21.0931, 0.44 ) }
    dend_67 { pt3dadd( -97.7586, -192.413, 21.374, 0.74 ) }
    dend_67 { pt3dadd( -98.4469, -193.004, 21.701, 0.81 ) }
    dend_67 { pt3dadd( -99.3169, -193.876, 22.0619, 0.52 ) }
    dend_67 { pt3dadd( -99.3918, -193.96, 22.0815, 0.52 ) }
    dend_67 { pt3dadd( -99.8929, -194.56, 22.1341, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -100.635, -195.539, 22.1558, 0.96 ) }
    dend_67 { pt3dadd( -101.049, -196.14, 22.1382, 1.11 ) }
    dend_67 { pt3dadd( -101.665, -197.039, 22.1072, 0.81 ) }
    dend_67 { pt3dadd( -102.509, -198.193, 22.0337, 0.66 ) }
    dend_67 { pt3dadd( -102.562, -198.256, 22.028, 0.66 ) }
    dend_67 { pt3dadd( -103.422, -199.141, 21.9841, 0.52 ) }
    dend_67 { pt3dadd( -104.298, -199.799, 22.0383, 0.37 ) }
    dend_67 { pt3dadd( -104.996, -200.149, 22.2301, 0.29 ) }
    dend_67 { pt3dadd( -106.104, -200.524, 22.7423, 0.66 ) }
    dend_67 { pt3dadd( -106.728, -200.708, 23.114, 0.74 ) }
    dend_67 { pt3dadd( -107.938, -201.158, 23.9719, 0.29 ) }
    dend_67 { pt3dadd( -108.484, -201.41, 24.4022, 0.66 ) }
    dend_67 { pt3dadd( -109.219, -201.857, 25.0099, 0.88 ) }
    dend_67 { pt3dadd( -109.928, -202.389, 25.5883, 0.88 ) }
    dend_67 { pt3dadd( -110.329, -202.732, 25.9068, 0.88 ) }
    dend_67 { pt3dadd( -111.523, -203.793, 26.7489, 0.58 ) }
    dend_67 { pt3dadd( -112.325, -204.51, 27.2111, 0.81 ) }
    dend_67 { pt3dadd( -113.059, -205.164, 27.5861, 1.11 ) }
    dend_67 { pt3dadd( -113.734, -205.765, 27.8807, 0.74 ) }
    dend_67 { pt3dadd( -114.498, -206.435, 28.2134, 0.88 ) }
    dend_67 { pt3dadd( -115.264, -207.037, 28.535, 0.81 ) }
    dend_67 { pt3dadd( -116.031, -207.557, 28.835, 0.74 ) }
    dend_67 { pt3dadd( -117.266, -208.321, 29.336, 0.44 ) }
    dend_67 { pt3dadd( -118.413, -208.995, 29.81, 0.74 ) }
    dend_67 { pt3dadd( -119.333, -209.498, 30.2046, 0.88 ) }
    dend_67 { pt3dadd( -120.53, -210.048, 30.8552, 0.52 ) }
    dend_67 { pt3dadd( -121.185, -210.322, 31.2998, 0.59 ) }
    dend_67 { pt3dadd( -122.357, -210.795, 32.2287, 0.59 ) }
    dend_67 { pt3dadd( -122.417, -210.822, 32.2823, 0.59 ) }
    dend_67 { pt3dadd( -123.005, -211.162, 32.8339, 0.66 ) }
    dend_67 { pt3dadd( -124.671, -212.506, 34.29, 0.59 ) }
    dend_67 { pt3dadd( -125.43, -213.31, 34.9126, 0.59 ) }
    dend_67 { pt3dadd( -125.937, -213.934, 35.2475, 0.81 ) }
    dend_67 { pt3dadd( -126.705, -214.962, 35.6504, 0.52 ) }
    dend_67 { pt3dadd( -127.555, -216.118, 35.954, 0.66 ) }
    dend_67 { pt3dadd( -128.545, -217.499, 36.1355, 0.44 ) }
    dend_67 { pt3dadd( -129.149, -218.384, 36.1401, 1.11 ) }
    dend_67 { pt3dadd( -130.319, -220.084, 36.0885, 0.59 ) }
    dend_67 { pt3dadd( -130.373, -220.163, 36.0878, 0.59 ) }
    dend_67 { pt3dadd( -131.024, -221.086, 36.1113, 0.44 ) }
    dend_67 { pt3dadd( -131.333, -221.488, 36.1469, 0.44 ) }
    dend_67 { pt3dadd( -132.308, -222.634, 36.4254, 0.44 ) }
    dend_67 { pt3dadd( -132.962, -223.28, 36.7042, 0.37 ) }
    dend_67 { pt3dadd( -133.679, -223.85, 37.1148, 0.29 ) }
    dend_67 { pt3dadd( -134.269, -224.271, 37.5478, 0.66 ) }
    dend_67 { pt3dadd( -134.831, -224.611, 38.0324, 1.03 ) }
    dend_67 { pt3dadd( -135.523, -224.964, 38.6564, 1.03 ) }
    dend_67 { pt3dadd( -136.041, -225.184, 39.1244, 0.81 ) }
    dend_67 { pt3dadd( -136.942, -225.587, 39.9081, 0.52 ) }
    dend_67 { pt3dadd( -137.949, -226.165, 40.716, 0.66 ) }
    dend_67 { pt3dadd( -138.513, -226.603, 41.142, 0.29 ) }
    dend_67 { pt3dadd( -138.796, -226.873, 41.3377, 0.59 ) }
    dend_67 { pt3dadd( -139.326, -227.391, 41.6425, 0.81 ) }
    dend_67 { pt3dadd( -139.963, -227.969, 41.9598, 0.81 ) }
    dend_67 { pt3dadd( -140.812, -228.601, 42.3096, 0.52 ) }
    dend_67 { pt3dadd( -141.91, -229.276, 42.661, 0.74 ) }
    dend_67 { pt3dadd( -141.986, -229.316, 42.6856, 0.74 ) }
    dend_67 { pt3dadd( -143.134, -229.857, 43.0604, 0.44 ) }
    dend_67 { pt3dadd( -143.951, -230.228, 43.3151, 0.74 ) }
    dend_67 { pt3dadd( -144.846, -230.636, 43.584, 1.11 ) }
    dend_67 { pt3dadd( -146.169, -231.275, 43.9687, 0.59 ) }
    dend_67 { pt3dadd( -146.955, -231.729, 44.1885, 0.66 ) }
    dend_67 { pt3dadd( -147.741, -232.296, 44.3974, 0.81 ) }
    dend_67 { pt3dadd( -148.644, -233.144, 44.6223, 0.52 ) }
    dend_67 { pt3dadd( -149.217, -233.775, 44.7581, 0.66 ) }
    dend_67 { pt3dadd( -149.725, -234.367, 44.8778, 0.66 ) }
    dend_67 { pt3dadd( -150.249, -234.931, 44.9654, 0.44 ) }
    dend_67 { pt3dadd( -150.32, -234.999, 44.9741, 0.44 ) }
    dend_67 { pt3dadd( -151.46, -235.832, 45.0921, 0.37 ) }
    dend_67 { pt3dadd( -151.655, -235.924, 45.1135, 0.37 ) }
    dend_67 { pt3dadd( -152.993, -236.204, 45.285, 0.37 ) }
    dend_67 { pt3dadd( -154.241, -236.225, 45.3914, 0.29 ) }
    dend_67 { pt3dadd( -154.993, -236.165, 45.4388, 0.37 ) }
    dend_67 { pt3dadd( -155.784, -236.076, 45.5125, 0.44 ) }
    dend_67 { pt3dadd( -156.879, -235.87, 45.6048, 0.37 ) }
    dend_67 { pt3dadd( -158.374, -235.532, 45.734, 0.29 ) }
    dend_67 { pt3dadd( -160.027, -235.039, 45.8927, 0.22 ) }
    dend_67 { pt3dadd( -160.36, -234.926, 45.9437, 0.44 ) }
    dend_67 { pt3dadd( -161.904, -234.372, 46.1093, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -21.0499, -82.6936, 2.66084, 0.74 ) }
    dend_66 { pt3dadd( -21.4342, -83.0357, 2.83023, 0.74 ) }
    dend_66 { pt3dadd( -21.9033, -83.4558, 3.03655, 0.44 ) }
    dend_66 { pt3dadd( -22.3662, -83.8628, 3.23867, 0.59 ) }
    dend_66 { pt3dadd( -22.9519, -84.3549, 3.46181, 0.37 ) }
    dend_66 { pt3dadd( -23.4007, -84.7363, 3.63187, 0.59 ) }
    dend_66 { pt3dadd( -23.5945, -84.8992, 3.70484, 0.88 ) }
    dend_66 { pt3dadd( -23.639, -84.9349, 3.71962, 0.88 ) }
    dend_66 { pt3dadd( -23.8315, -85.0831, 3.77365, 1.11 ) }
    dend_66 { pt3dadd( -24.2711, -85.3618, 3.87877, 0.88 ) }
    dend_66 { pt3dadd( -24.8168, -85.6195, 3.99608, 0.37 ) }
    dend_66 { pt3dadd( -25.1586, -85.7417, 4.06084, 0.66 ) }
    dend_66 { pt3dadd( -25.6963, -85.8952, 4.13655, 0.81 ) }
    dend_66 { pt3dadd( -26.1957, -86.0316, 4.19687, 0.74 ) }
    dend_66 { pt3dadd( -26.8921, -86.2104, 4.27249, 0.88 ) }
    dend_66 { pt3dadd( -27.3829, -86.3319, 4.32618, 0.74 ) }
    dend_66 { pt3dadd( -28.1413, -86.5283, 4.3749, 0.52 ) }
    dend_66 { pt3dadd( -29.0434, -86.8082, 4.42372, 0.52 ) }
    dend_66 { pt3dadd( -29.5804, -87.0175, 4.47856, 0.74 ) }
    dend_66 { pt3dadd( -29.6267, -87.0413, 4.48918, 0.74 ) }
    dend_66 { pt3dadd( -29.9841, -87.3424, 4.86845, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -30.349, -87.7759, 5.63277, 1.03 ) }
    dend_66 { pt3dadd( -30.5401, -88.0427, 6.17467, 1.18 ) }
    dend_66 { pt3dadd( -30.79, -88.4152, 7.03123, 0.96 ) }
    dend_66 { pt3dadd( -31.112, -88.9029, 8.26365, 1.18 ) }
    dend_66 { pt3dadd( -32.0445, -90.252, 11.876, 0.66 ) }
    dend_66 { pt3dadd( -32.1666, -90.4447, 12.4173, 0.66 ) }
    dend_66 { pt3dadd( -32.2914, -90.6525, 12.9972, 0.81 ) }
    dend_66 { pt3dadd( -32.4194, -90.8551, 13.5289, 0.81 ) }
    dend_66 { pt3dadd( -32.4372, -90.8826, 13.5902, 0.81 ) }
    dend_66 { pt3dadd( -32.6591, -91.2625, 14.2597, 0.88 ) }
    dend_66 { pt3dadd( -33.0148, -91.9367, 15.3614, 0.88 ) }
    dend_66 { pt3dadd( -33.1727, -92.3588, 16.123, 0.74 ) }
    dend_66 { pt3dadd( -33.2284, -92.5533, 16.4901, 0.96 ) }
    dend_66 { pt3dadd( -33.4441, -93.4199, 18.1087, 0.44 ) }
    dend_66 { pt3dadd( -33.6185, -94.1839, 19.5223, 1.25 ) }
    dend_66 { pt3dadd( -33.8349, -95.2561, 21.4621, 0.59 ) }
    dend_66 { pt3dadd( -33.9902, -95.8904, 22.5769, 0.96 ) }
    dend_66 { pt3dadd( -33.9988, -95.9216, 22.6287, 0.96 ) }
    dend_66 { pt3dadd( -34.142, -96.3472, 23.2528, 0.59 ) }
    dend_66 { pt3dadd( -34.3398, -96.7856, 23.7699, 0.52 ) }
    dend_66 { pt3dadd( -34.7816, -97.6237, 24.5624, 0.81 ) }
    dend_66 { pt3dadd( -35.3676, -98.7145, 25.388, 0.44 ) }
    dend_66 { pt3dadd( -35.6729, -99.2767, 25.7759, 0.59 ) }
    dend_66 { pt3dadd( -35.9303, -99.7934, 26.1447, 0.74 ) }
    dend_66 { pt3dadd( -36.1717, -100.357, 26.5979, 0.44 ) }
    dend_66 { pt3dadd( -36.4154, -101.015, 27.1615, 0.44 ) }
    dend_66 { pt3dadd( -36.665, -101.766, 27.8051, 0.29 ) }
    dend_66 { pt3dadd( -36.8403, -102.449, 28.3999, 0.44 ) }
    dend_66 { pt3dadd( -36.9963, -103.319, 29.2326, 0.81 ) }
    dend_66 { pt3dadd( -37.0946, -104.318, 30.2928, 1.03 ) }
    dend_66 { pt3dadd( -37.0944, -104.352, 30.3329, 1.03 ) }
    dend_66 { pt3dadd( -40.0007, -109.959, 35.7348, 1.03 ) }
    dend_66 { pt3dadd( -43.3811, -115.426, 41.0153, 1.03 ) }
    dend_66 { pt3dadd( -46.434, -121.78, 45.3021, 1.03 ) }
    dend_66 { pt3dadd( -50.6324, -127.664, 49.3528, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -4.39897, -59.0278, -5.30321, 1.4 ) }
    dend_48 { pt3dadd( -3.94044, -59.5039, -5.60245, 1.4 ) }
    dend_48 { pt3dadd( -3.23764, -60.2391, -6.17385, 1.11 ) }
    dend_48 { pt3dadd( -2.46774, -61.1719, -7.02362, 0.96 ) }
    dend_48 { pt3dadd( -1.94438, -61.9364, -7.8032, 0.96 ) }
    dend_48 { pt3dadd( -1.58912, -62.5975, -8.53309, 1.11 ) }
    dend_48 { pt3dadd( -1.22249, -63.3734, -9.39918, 1.25 ) }
    dend_48 { pt3dadd( -0.815165, -64.4043, -10.593, 1.18 ) }
    dend_48 { pt3dadd( -0.420388, -65.6293, -11.973, 1.18 ) }
    dend_48 { pt3dadd( -0.169372, -66.6636, -13.0418, 1.03 ) }
    dend_48 { pt3dadd( 0.0665735, -68.0531, -14.2905, 0.88 ) }
    dend_48 { pt3dadd( 0.149134, -68.7372, -14.7908, 0.96 ) }
    dend_48 { pt3dadd( 0.273459, -70.0131, -15.532, 1.11 ) }
    dend_48 { pt3dadd( 0.38156, -71.3764, -16.1258, 1.11 ) }
    dend_48 { pt3dadd( 0.447094, -72.3362, -16.4025, 0.96 ) }
    dend_48 { pt3dadd( 0.499382, -73.6215, -16.6376, 1.11 ) }
    dend_48 { pt3dadd( 0.467788, -75.4083, -16.8419, 1.18 ) }
    dend_48 { pt3dadd( 0.387668, -76.2911, -16.9292, 1.18 ) }
    dend_48 { pt3dadd( 0.23795, -77.2835, -17.0212, 1.18 ) }
    dend_48 { pt3dadd( -0.114049, -79.1737, -17.202, 0.96 ) }
    dend_48 { pt3dadd( -0.373438, -80.4355, -17.3348, 1.03 ) }
    dend_48 { pt3dadd( -0.810368, -82.3736, -17.5809, 1.03 ) }
    dend_48 { pt3dadd( -1.16346, -83.7717, -17.7895, 1.33 ) }
    dend_48 { pt3dadd( -1.42742, -84.795, -17.9727, 1.55 ) }
    dend_48 { pt3dadd( -1.63678, -85.6332, -18.1647, 1.33 ) }
    dend_48 { pt3dadd( -1.95337, -86.9655, -18.5295, 1.03 ) }
    dend_48 { pt3dadd( -2.17038, -88.0796, -18.8572, 1.33 ) }
    dend_48 { pt3dadd( -2.32216, -89.0659, -19.1592, 1.33 ) }
    dend_48 { pt3dadd( -2.57794, -90.9327, -19.7034, 1.25 ) }
    dend_48 { pt3dadd( -2.88408, -92.946, -20.2956, 1.03 ) }
    dend_48 { pt3dadd( -3.08498, -94.0887, -20.6302, 0.96 ) }
    dend_48 { pt3dadd( -3.39129, -95.5294, -21.0421, 0.96 ) }
    dend_48 { pt3dadd( -3.61796, -96.4177, -21.2808, 0.96 ) }
    dend_48 { pt3dadd( -3.99171, -97.7301, -21.6426, 0.96 ) }
    dend_48 { pt3dadd( -4.42579, -98.9581, -21.9639, 1.11 ) }
    dend_48 { pt3dadd( -4.69964, -99.5553, -22.0964, 1.25 ) }
    dend_48 { pt3dadd( -5.31602, -100.593, -22.3246, 1.4 ) }
    dend_48 { pt3dadd( -5.81713, -101.214, -22.466, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -4.39897, -59.0278, -5.30321, 1.11 ) }
    dend_43 { pt3dadd( -3.68242, -61.2832, -3.32783, 1.11 ) }
    dend_43 { pt3dadd( -3.55467, -61.7973, -3.03606, 1.11 ) }
    dend_43 { pt3dadd( -3.36782, -62.6265, -2.6559, 1.03 ) }
    dend_43 { pt3dadd( -3.1018, -63.8916, -2.22551, 1.11 ) }
    dend_43 { pt3dadd( -3.09059, -63.95, -2.21184, 1.11 ) }
    dend_43 { pt3dadd( -2.91646, -65.003, -2.0254, 1.11 ) }
    dend_43 { pt3dadd( -2.75555, -66.1881, -1.98752, 1.11 ) }
    dend_43 { pt3dadd( -2.74726, -66.2502, -1.98592, 1.11 ) }
    dend_43 { pt3dadd( -2.61692, -67.3152, -1.96653, 1.11 ) }
    dend_43 { pt3dadd( -2.48194, -68.6362, -1.96715, 1.03 ) }
    dend_43 { pt3dadd( -2.41374, -69.4888, -1.9724, 1.33 ) }
    dend_43 { pt3dadd( -2.37584, -70.506, -1.96492, 1.18 ) }
    dend_43 { pt3dadd( -2.43156, -71.7951, -1.90668, 0.88 ) }
    dend_43 { pt3dadd( -2.43761, -71.8574, -1.90254, 0.88 ) }
    dend_43 { pt3dadd( -2.67305, -73.2713, -1.73617, 0.88 ) }
    dend_43 { pt3dadd( -2.93279, -74.3869, -1.55772, 0.88 ) }
    dend_43 { pt3dadd( -3.22595, -75.3621, -1.36584, 1.11 ) }
    dend_43 { pt3dadd( -3.64394, -76.6754, -1.02859, 0.88 ) }
    dend_43 { pt3dadd( -3.65957, -76.7254, -1.01186, 0.88 ) }
    dend_43 { pt3dadd( -3.90699, -77.6528, -0.668922, 0.88 ) }
    dend_43 { pt3dadd( -3.94391, -77.8222, -0.596818, 0.88 ) }
    dend_43 { pt3dadd( -4.02158, -78.6122, -0.276915, 0.96 ) }
    dend_43 { pt3dadd( -3.99356, -80.208, 0.283644, 0.81 ) }
    dend_43 { pt3dadd( -3.95359, -80.6846, 0.425791, 1.18 ) }
    dend_43 { pt3dadd( -3.87558, -81.4763, 0.631204, 0.96 ) }
    dend_43 { pt3dadd( -3.86286, -81.5966, 0.655822, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -3.73646, -82.7295, 0.835639, 0.74 ) }
    dend_43 { pt3dadd( -3.67845, -83.5166, 0.869771, 0.96 ) }
    dend_43 { pt3dadd( -3.67702, -84.1844, 0.818097, 1.03 ) }
    dend_43 { pt3dadd( -3.68428, -84.3051, 0.794313, 1.03 ) }
    dend_43 { pt3dadd( -3.76453, -85.0894, 0.573481, 1.33 ) }
    dend_43 { pt3dadd( -3.86971, -85.8826, 0.284833, 1.55 ) }
    dend_43 { pt3dadd( -4.06149, -87.0834, -0.237336, 1.25 ) }
    dend_43 { pt3dadd( -4.17582, -87.9763, -0.692174, 1.4 ) }
    dend_43 { pt3dadd( -4.29674, -89.2253, -1.36338, 1.55 ) }
    dend_43 { pt3dadd( -4.36865, -90.1177, -1.85176, 1.11 ) }
    dend_43 { pt3dadd( -4.44189, -91.2451, -2.49226, 0.74 ) }
    dend_43 { pt3dadd( -4.44539, -91.3069, -2.52485, 0.74 ) }
    dend_43 { pt3dadd( -4.48879, -92.0936, -2.89886, 0.74 ) }
    dend_43 { pt3dadd( -4.49338, -92.6588, -3.10251, 0.96 ) }
    dend_43 { pt3dadd( -4.48935, -92.7381, -3.11977, 0.96 ) }
    dend_43 { pt3dadd( -4.42956, -93.8169, -3.2751, 1.11 ) }
    dend_43 { pt3dadd( -4.32207, -94.7182, -3.38642, 1.11 ) }
    dend_43 { pt3dadd( -4.19989, -95.9241, -3.61754, 1.25 ) }
    dend_43 { pt3dadd( -4.03767, -97.7518, -4.04186, 0.96 ) }
    dend_43 { pt3dadd( -3.92451, -99.0304, -4.41482, 0.96 ) }
    dend_43 { pt3dadd( -3.83911, -99.9518, -4.72234, 1.11 ) }
    dend_43 { pt3dadd( -3.64966, -101.795, -5.40934, 1.11 ) }
    dend_43 { pt3dadd( -3.47564, -103.539, -6.14501, 1.25 ) }
    dend_43 { pt3dadd( -3.43229, -104.056, -6.37877, 1.55 ) }
    dend_43 { pt3dadd( -3.42109, -105.104, -6.90707, 1.47 ) }
    dend_43 { pt3dadd( -3.42084, -105.161, -6.93067, 1.47 ) }
    dend_43 { pt3dadd( -3.42411, -105.83, -7.11755, 0.88 ) }
    dend_43 { pt3dadd( -3.41979, -106.743, -7.14858, 0.59 ) }
    dend_43 { pt3dadd( -3.3469, -107.686, -6.99629, 0.74 ) }
    dend_43 { pt3dadd( -3.2851, -108.357, -6.83378, 1.03 ) }
    dend_43 { pt3dadd( -3.15899, -109.675, -6.46442, 1.03 ) }
    dend_43 { pt3dadd( -3.10681, -110.252, -6.29865, 1.25 ) }
    dend_43 { pt3dadd( -2.98542, -111.574, -5.91062, 1.25 ) }
    dend_43 { pt3dadd( -2.88856, -112.582, -5.61225, 0.74 ) }
    dend_43 { pt3dadd( -2.83689, -113.413, -5.40492, 0.74 ) }
    dend_43 { pt3dadd( -2.84618, -114.263, -5.305, 0.96 ) }
    dend_43 { pt3dadd( -2.85141, -114.317, -5.30866, 0.96 ) }
    dend_43 { pt3dadd( -2.97389, -115.27, -5.49619, 1.18 ) }
    dend_43 { pt3dadd( -2.98358, -115.337, -5.51758, 1.18 ) }
    dend_43 { pt3dadd( -3.12005, -116.532, -5.96404, 1.33 ) }
    dend_43 { pt3dadd( -3.22142, -117.958, -6.50403, 1.03 ) }
    dend_43 { pt3dadd( -3.27094, -119.127, -6.91451, 0.88 ) }
    dend_43 { pt3dadd( -3.28547, -119.568, -7.05355, 1.33 ) }
    dend_43 { pt3dadd( -3.31388, -120.47, -7.29567, 1.33 ) }
    dend_43 { pt3dadd( -3.34919, -121.487, -7.50098, 1.55 ) }
    dend_43 { pt3dadd( -3.3957, -122.498, -7.59384, 1.33 ) }
    dend_43 { pt3dadd( -3.48797, -123.425, -7.57411, 1.11 ) }
    dend_43 { pt3dadd( -3.66402, -124.421, -7.46919, 0.66 ) }
    dend_43 { pt3dadd( -3.91091, -125.403, -7.30307, 0.66 ) }
    dend_43 { pt3dadd( -4.21739, -126.349, -7.08326, 0.74 ) }
    dend_43 { pt3dadd( -4.58859, -127.347, -6.80517, 0.59 ) }
    dend_43 { pt3dadd( -4.83105, -128.016, -6.60809, 0.88 ) }
    dend_43 { pt3dadd( -5.03089, -128.691, -6.43351, 0.96 ) }
    dend_43 { pt3dadd( -5.13925, -129.345, -6.3212, 0.88 ) }
    dend_43 { pt3dadd( -5.13442, -129.405, -6.31451, 0.88 ) }
    dend_43 { pt3dadd( -4.90287, -130.26, -6.26916, 0.74 ) }
    dend_43 { pt3dadd( -4.61227, -131.072, -6.25539, 1.25 ) }
    dend_43 { pt3dadd( -4.28112, -131.954, -6.22986, 1.25 ) }
    dend_43 { pt3dadd( -3.94548, -132.938, -6.17024, 1.03 ) }
    dend_43 { pt3dadd( -3.50567, -134.601, -5.98647, 0.74 ) }
    dend_43 { pt3dadd( -3.33376, -135.55, -5.83444, 0.59 ) }
    dend_43 { pt3dadd( -3.29996, -136.113, -5.70782, 0.81 ) }
    dend_43 { pt3dadd( -3.379, -136.91, -5.48135, 0.88 ) }
    dend_43 { pt3dadd( -3.58877, -137.838, -5.194, 1.03 ) }
    dend_43 { pt3dadd( -3.80729, -138.622, -4.98744, 1.11 ) }
    dend_43 { pt3dadd( -3.86727, -138.798, -4.96385, 1.11 ) }
    dend_43 { pt3dadd( -4.17332, -139.661, -4.95768, 0.96 ) }
    dend_43 { pt3dadd( -4.51371, -140.635, -5.04524, 1.11 ) }
    dend_43 { pt3dadd( -4.83205, -141.609, -5.22125, 0.96 ) }
    dend_43 { pt3dadd( -5.26236, -143.024, -5.56626, 1.18 ) }
    dend_43 { pt3dadd( -5.67603, -144.543, -5.90707, 1.03 ) }
    dend_43 { pt3dadd( -6.07777, -146.102, -6.22971, 0.96 ) }
    dend_43 { pt3dadd( -6.10127, -146.209, -6.25147, 0.96 ) }
    dend_43 { pt3dadd( -6.27702, -147.341, -6.45656, 0.96 ) }
    dend_43 { pt3dadd( -6.32191, -148.17, -6.54296, 1.4 ) }
    dend_43 { pt3dadd( -6.21119, -149.79, -6.56804, 1.11 ) }
    dend_43 { pt3dadd( -6.19634, -149.87, -6.56346, 1.11 ) }
    dend_43 { pt3dadd( -5.96722, -150.813, -6.48751, 1.25 ) }
    dend_43 { pt3dadd( -5.65796, -152.038, -6.4035, 1.11 ) }
    dend_43 { pt3dadd( -5.30508, -153.382, -6.35062, 0.88 ) }
    dend_43 { pt3dadd( -5.11267, -154.117, -6.35759, 1.18 ) }
    dend_43 { pt3dadd( -4.80521, -155.277, -6.45741, 1.25 ) }
    dend_43 { pt3dadd( -4.61265, -156.07, -6.52688, 1.4 ) }
    dend_43 { pt3dadd( -4.59937, -156.138, -6.53296, 1.4 ) }
    dend_43 { pt3dadd( -4.42575, -157.317, -6.62023, 1.03 ) }
    dend_43 { pt3dadd( -4.41338, -157.502, -6.62955, 1.03 ) }
    dend_43 { pt3dadd( -4.40836, -158.518, -6.6201, 0.74 ) }
    dend_43 { pt3dadd( -4.44702, -159.398, -6.51205, 0.74 ) }
    dend_43 { pt3dadd( -4.52776, -160.09, -6.35067, 0.96 ) }
    dend_43 { pt3dadd( -4.71291, -161.123, -6.02539, 0.88 ) }
    dend_43 { pt3dadd( -4.94574, -162.061, -5.64933, 0.88 ) }
    dend_43 { pt3dadd( -5.18028, -162.864, -5.28887, 0.88 ) }
    dend_43 { pt3dadd( -5.54546, -163.924, -4.75008, 1.11 ) }
    dend_43 { pt3dadd( -5.80821, -164.663, -4.36795, 1.25 ) }
    dend_43 { pt3dadd( -6.05291, -165.367, -4.02566, 1.4 ) }
    dend_43 { pt3dadd( -6.13022, -165.579, -3.94141, 1.4 ) }
    dend_43 { pt3dadd( -6.32054, -166.172, -3.77397, 1.4 ) }
    dend_43 { pt3dadd( -6.38225, -166.349, -3.76229, 1.4 ) }
    dend_43 { pt3dadd( -6.77441, -167.38, -3.92602, 1.25 ) }
    dend_43 { pt3dadd( -7.06232, -168.155, -4.13896, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -7.30822, -168.841, -4.41204, 0.96 ) }
    dend_43 { pt3dadd( -7.65001, -169.81, -4.86533, 0.96 ) }
    dend_43 { pt3dadd( -8.26408, -171.435, -5.77625, 0.81 ) }
    dend_43 { pt3dadd( -8.81027, -172.791, -6.66087, 0.81 ) }
    dend_43 { pt3dadd( -9.07995, -173.394, -7.0931, 1.03 ) }
    dend_43 { pt3dadd( -9.74576, -174.824, -8.10542, 1.03 ) }
    dend_43 { pt3dadd( -9.77774, -174.893, -8.15199, 1.03 ) }
    dend_43 { pt3dadd( -10.3146, -176.098, -8.89228, 1.55 ) }
    dend_43 { pt3dadd( -10.883, -177.546, -9.62097, 0.88 ) }
    dend_43 { pt3dadd( -11.3944, -178.92, -10.222, 0.81 ) }
    dend_43 { pt3dadd( -11.802, -179.991, -10.6566, 0.81 ) }
    dend_43 { pt3dadd( -12.0988, -180.781, -10.9414, 0.96 ) }
    dend_43 { pt3dadd( -12.3899, -181.608, -11.2148, 0.96 ) }
    dend_43 { pt3dadd( -12.6461, -182.452, -11.4492, 0.74 ) }
    dend_43 { pt3dadd( -13.0266, -183.836, -11.8026, 1.25 ) }
    dend_43 { pt3dadd( -13.3392, -185.163, -12.1686, 0.81 ) }
    dend_43 { pt3dadd( -13.3517, -185.221, -12.1845, 0.81 ) }
    dend_43 { pt3dadd( -13.5158, -186.181, -12.3674, 0.81 ) }
    dend_43 { pt3dadd( -13.6239, -186.937, -12.4401, 1.18 ) }
    dend_43 { pt3dadd( -13.6342, -187.053, -12.4397, 1.18 ) }
    dend_43 { pt3dadd( -13.6612, -187.875, -12.3635, 1.18 ) }
    dend_43 { pt3dadd( -13.6404, -189.308, -12.1861, 0.81 ) }
    dend_43 { pt3dadd( -13.6156, -190.713, -12.0186, 0.81 ) }
    dend_43 { pt3dadd( -13.5982, -191.475, -11.9276, 1.11 ) }
    dend_43 { pt3dadd( -13.5851, -192.751, -11.7941, 1.11 ) }
    dend_43 { pt3dadd( -13.5814, -192.884, -11.779, 1.11 ) }
    dend_43 { pt3dadd( -13.4801, -193.995, -11.5787, 0.96 ) }
    dend_43 { pt3dadd( -13.3978, -194.538, -11.4628, 1.25 ) }
    dend_43 { pt3dadd( -13.3881, -194.597, -11.4496, 1.25 ) }
    dend_43 { pt3dadd( -13.1989, -195.619, -11.1884, 1.25 ) }
    dend_43 { pt3dadd( -12.9155, -197.262, -10.7192, 1.03 ) }
    dend_43 { pt3dadd( -12.5964, -199.234, -10.1303, 0.81 ) }
    dend_43 { pt3dadd( -12.4879, -199.916, -9.93337, 1.11 ) }
    dend_43 { pt3dadd( -12.3079, -201.094, -9.64152, 0.96 ) }
    dend_43 { pt3dadd( -12.2835, -201.286, -9.60305, 0.96 ) }
    dend_43 { pt3dadd( -12.1819, -202.286, -9.4531, 0.81 ) }
    dend_43 { pt3dadd( -12.1799, -202.367, -9.44936, 0.81 ) }
    dend_43 { pt3dadd( -12.2333, -203.752, -9.4857, 0.96 ) }
    dend_43 { pt3dadd( -12.2635, -204.643, -9.51413, 1.18 ) }
    dend_43 { pt3dadd( -12.2878, -205.598, -9.55194, 1.03 ) }
    dend_43 { pt3dadd( -12.2903, -205.66, -9.55372, 1.03 ) }
    dend_43 { pt3dadd( -12.3543, -206.76, -9.5679, 0.74 ) }
    dend_43 { pt3dadd( -12.4839, -208.247, -9.57991, 0.74 ) }
    dend_43 { pt3dadd( -12.5899, -209.059, -9.61222, 0.81 ) }
    dend_43 { pt3dadd( -12.6015, -209.139, -9.61814, 0.81 ) }
    dend_43 { pt3dadd( -12.7052, -209.919, -9.71271, 0.81 ) }
    dend_43 { pt3dadd( -12.8304, -211.081, -9.90463, 0.81 ) }
    dend_43 { pt3dadd( -12.933, -212.43, -10.23, 1.03 ) }
    dend_43 { pt3dadd( -13.0013, -213.578, -10.5616, 1.03 ) }
    dend_43 { pt3dadd( -13.0054, -213.637, -10.5783, 1.03 ) }
    dend_43 { pt3dadd( -13.0822, -214.429, -10.78, 1.25 ) }
    dend_43 { pt3dadd( -13.1682, -215.179, -10.9563, 0.96 ) }
    dend_43 { pt3dadd( -13.306, -216.184, -11.1299, 0.81 ) }
    dend_43 { pt3dadd( -13.4142, -216.831, -11.1954, 1.11 ) }
    dend_43 { pt3dadd( -13.5727, -217.801, -11.2554, 1.33 ) }
    dend_43 { pt3dadd( -13.7409, -218.745, -11.3144, 1.33 ) }
    dend_43 { pt3dadd( -13.7539, -218.813, -11.3204, 1.33 ) }
    dend_43 { pt3dadd( -13.9795, -220.099, -11.4642, 0.74 ) }
    dend_43 { pt3dadd( -14.1706, -221.438, -11.691, 0.96 ) }
    dend_43 { pt3dadd( -14.258, -222.546, -11.9665, 0.96 ) }
    dend_43 { pt3dadd( -14.2567, -222.654, -11.9971, 0.96 ) }
    dend_43 { pt3dadd( -14.1588, -223.771, -12.3299, 0.96 ) }
    dend_43 { pt3dadd( -14.0022, -224.774, -12.5696, 0.81 ) }
    dend_43 { pt3dadd( -13.7783, -225.856, -12.7498, 0.66 ) }
    dend_43 { pt3dadd( -13.5424, -226.922, -12.8283, 0.66 ) }
    dend_43 { pt3dadd( -13.335, -227.945, -12.8251, 1.33 ) }
    dend_43 { pt3dadd( -13.1734, -228.806, -12.7415, 1.33 ) }
    dend_43 { pt3dadd( -12.9129, -230.37, -12.4409, 1.11 ) }
    dend_43 { pt3dadd( -12.7341, -231.493, -12.1788, 1.18 ) }
    dend_43 { pt3dadd( -12.6399, -232.121, -12.0215, 1.4 ) }
    dend_43 { pt3dadd( -12.5028, -233.09, -11.824, 1.11 ) }
    dend_43 { pt3dadd( -12.329, -234.219, -11.7064, 0.59 ) }
    dend_43 { pt3dadd( -12.1927, -234.945, -11.7101, 0.52 ) }
    dend_43 { pt3dadd( -11.9744, -235.93, -11.8283, 0.88 ) }
    dend_43 { pt3dadd( -11.7353, -236.895, -12.0318, 1.18 ) }
    dend_43 { pt3dadd( -11.4942, -237.941, -12.3016, 1.03 ) }
    dend_43 { pt3dadd( -11.2229, -239.259, -12.6983, 0.96 ) }
    dend_43 { pt3dadd( -11.0351, -240.567, -13.1444, 0.81 ) }
    dend_43 { pt3dadd( -10.9708, -241.34, -13.4082, 1.11 ) }
    dend_43 { pt3dadd( -10.972, -242.244, -13.6977, 1.69 ) }
    dend_43 { pt3dadd( -11.0513, -243.258, -14.01, 1.18 ) }
    dend_43 { pt3dadd( -11.0603, -243.326, -14.0247, 1.18 ) }
    dend_43 { pt3dadd( -11.2256, -244.399, -14.1447, 0.59 ) }
    dend_43 { pt3dadd( -11.228, -244.459, -14.1396, 0.59 ) }
    dend_43 { pt3dadd( -11.1272, -245.379, -13.9122, 1.03 ) }
    dend_43 { pt3dadd( -11.1039, -245.483, -13.8761, 1.03 ) }
    dend_43 { pt3dadd( -10.6744, -246.827, -13.3934, 1.25 ) }
    dend_43 { pt3dadd( -10.4666, -247.402, -13.194, 1.25 ) }
    dend_43 { pt3dadd( -9.94527, -248.769, -12.737, 0.96 ) }
    dend_43 { pt3dadd( -9.68116, -249.547, -12.5055, 0.66 ) }
    dend_43 { pt3dadd( -9.48238, -250.241, -12.3322, 0.66 ) }
    dend_43 { pt3dadd( -9.35976, -250.842, -12.2222, 0.37 ) }
    dend_43 { pt3dadd( -9.31566, -251.661, -12.1979, 0.52 ) }
    dend_43 { pt3dadd( -9.39204, -252.613, -12.2434, 0.81 ) }
    dend_43 { pt3dadd( -9.56547, -253.371, -12.316, 1.11 ) }
    dend_43 { pt3dadd( -9.81222, -254.123, -12.4208, 1.4 ) }
    dend_43 { pt3dadd( -10.1563, -255.054, -12.5768, 1.4 ) }
    dend_43 { pt3dadd( -10.8197, -256.678, -12.8757, 0.81 ) }
    dend_43 { pt3dadd( -11.2002, -257.592, -13.0818, 0.66 ) }
    dend_43 { pt3dadd( -11.5327, -258.465, -13.3266, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -11.8843, -259.647, -13.7254, 0.37 ) }
    dend_43 { pt3dadd( -12.0313, -260.301, -13.9727, 0.88 ) }
    dend_43 { pt3dadd( -12.0402, -260.358, -13.9932, 0.88 ) }
    dend_43 { pt3dadd( -12.0967, -260.964, -14.1429, 1.25 ) }
    dend_43 { pt3dadd( -12.1712, -261.672, -14.2743, 1.25 ) }
    dend_43 { pt3dadd( -12.2828, -262.482, -14.3598, 0.88 ) }
    dend_43 { pt3dadd( -12.5525, -263.863, -14.367, 0.66 ) }
    dend_43 { pt3dadd( -12.8947, -265.16, -14.2947, 0.66 ) }
    dend_43 { pt3dadd( -13.2976, -266.391, -14.1781, 0.88 ) }
    dend_43 { pt3dadd( -13.65, -267.275, -14.0965, 0.88 ) }
    dend_43 { pt3dadd( -13.9889, -268.006, -14.0556, 1.11 ) }
    dend_43 { pt3dadd( -14.3037, -268.67, -14.0473, 1.18 ) }
    dend_43 { pt3dadd( -14.5215, -269.188, -14.0444, 1.18 ) }
    dend_43 { pt3dadd( -15.0885, -270.737, -14.095, 0.88 ) }
    dend_43 { pt3dadd( -15.4807, -272.052, -14.1869, 1.25 ) }
    dend_43 { pt3dadd( -15.8072, -273.496, -14.3181, 0.74 ) }
    dend_43 { pt3dadd( -16.0051, -274.677, -14.4307, 0.59 ) }
    dend_43 { pt3dadd( -16.1585, -276.03, -14.5518, 1.03 ) }
    dend_43 { pt3dadd( -16.1988, -276.847, -14.594, 0.74 ) }
    dend_43 { pt3dadd( -16.1654, -277.783, -14.5736, 0.59 ) }
    dend_43 { pt3dadd( -16.1523, -277.973, -14.5496, 0.59 ) }
    dend_43 { pt3dadd( -16.1041, -278.949, -14.339, 0.74 ) }
    dend_43 { pt3dadd( -16.1116, -279.01, -14.3261, 0.74 ) }
    dend_43 { pt3dadd( -16.3536, -279.904, -14.2192, 0.59 ) }
    dend_43 { pt3dadd( -16.3761, -279.972, -14.2141, 0.59 ) }
    dend_43 { pt3dadd( -16.7732, -281.147, -14.1939, 0.74 ) }
    dend_43 { pt3dadd( -17.1534, -282.33, -14.2317, 0.59 ) }
    dend_43 { pt3dadd( -17.5893, -283.86, -14.3854, 0.59 ) }
    dend_43 { pt3dadd( -17.9573, -285.242, -14.5981, 0.59 ) }
    dend_43 { pt3dadd( -18.1852, -286.216, -14.8172, 0.59 ) }
    dend_43 { pt3dadd( -18.3587, -287.069, -15.0541, 0.81 ) }
    dend_43 { pt3dadd( -18.3871, -287.25, -15.1172, 0.81 ) }
    dend_43 { pt3dadd( -18.4467, -287.959, -15.415, 0.81 ) }
    dend_43 { pt3dadd( -18.4439, -288.009, -15.433, 0.81 ) }
    dend_43 { pt3dadd( -18.3733, -288.876, -15.6197, 0.81 ) }
    dend_43 { pt3dadd( -18.369, -288.93, -15.6211, 0.81 ) }
    dend_43 { pt3dadd( -18.3109, -289.86, -15.5511, 0.66 ) }
    dend_43 { pt3dadd( -18.3068, -289.914, -15.5459, 0.66 ) }
    dend_43 { pt3dadd( -18.2194, -290.991, -15.4249, 0.66 ) }
    dend_43 { pt3dadd( -18.0637, -292.306, -15.3106, 0.44 ) }
    dend_43 { pt3dadd( -17.8072, -294.053, -15.1846, 0.66 ) }
    dend_43 { pt3dadd( -17.4795, -295.556, -15.1107, 0.96 ) }
    dend_43 { pt3dadd( -17.1165, -296.824, -15.0759, 0.96 ) }
    dend_43 { pt3dadd( -17.0847, -296.917, -15.076, 0.96 ) }
    dend_43 { pt3dadd( -16.5675, -298.131, -15.1325, 0.81 ) }
    dend_43 { pt3dadd( -16.512, -298.244, -15.1446, 0.81 ) }
    dend_43 { pt3dadd( -15.892, -299.475, -15.3786, 0.74 ) }
    dend_43 { pt3dadd( -15.8631, -299.53, -15.389, 0.74 ) }
    dend_43 { pt3dadd( -15.6106, -300.113, -15.4722, 0.96 ) }
    dend_43 { pt3dadd( -15.5741, -300.232, -15.4938, 0.96 ) }
    dend_43 { pt3dadd( -15.3692, -301.246, -15.653, 0.96 ) }
    dend_43 { pt3dadd( -15.2791, -301.969, -15.7741, 0.96 ) }
    dend_43 { pt3dadd( -15.2797, -302.031, -15.7857, 0.96 ) }
    dend_43 { pt3dadd( -15.295, -302.955, -15.9636, 0.52 ) }
    dend_43 { pt3dadd( -15.3236, -303.973, -16.1724, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -41.1357, -67.1698, -7.5735, 0.74 ) }
    dend_34 { pt3dadd( -41.6401, -67.1417, -6.91477, 0.74 ) }
    dend_34 { pt3dadd( -41.6786, -67.1499, -6.84231, 0.74 ) }
    dend_34 { pt3dadd( -42.1449, -67.3822, -5.72186, 0.52 ) }
    dend_34 { pt3dadd( -42.3853, -67.5277, -5.13267, 0.44 ) }
    dend_34 { pt3dadd( -42.8026, -67.774, -4.18404, 0.44 ) }
    dend_34 { pt3dadd( -43.2271, -68.0082, -3.31058, 0.96 ) }
    dend_34 { pt3dadd( -44.0308, -68.5071, -1.7583, 0.74 ) }
    dend_34 { pt3dadd( -44.5485, -68.8294, -0.88147, 0.74 ) }
    dend_34 { pt3dadd( -44.8231, -69.0081, -0.491673, 0.74 ) }
    dend_34 { pt3dadd( -45.2436, -69.252, 0.016646, 0.59 ) }
    dend_34 { pt3dadd( -45.6347, -69.4328, 0.419218, 0.52 ) }
    dend_34 { pt3dadd( -46.2219, -69.6451, 0.931905, 0.52 ) }
    dend_34 { pt3dadd( -46.6392, -69.7657, 1.23773, 0.88 ) }
    dend_34 { pt3dadd( -47.34, -69.9338, 1.74093, 0.59 ) }
    dend_34 { pt3dadd( -48.3761, -70.1443, 2.58297, 0.96 ) }
    dend_34 { pt3dadd( -49.5023, -70.3481, 3.59725, 1.33 ) }
    dend_34 { pt3dadd( -49.9217, -70.419, 4.00934, 1.33 ) }
    dend_34 { pt3dadd( -50.5902, -70.5335, 4.69312, 0.44 ) }
    dend_34 { pt3dadd( -50.9867, -70.5881, 5.09671, 0.44 ) }
    dend_34 { pt3dadd( -51.8666, -70.6721, 5.92954, 0.44 ) }
    dend_34 { pt3dadd( -51.913, -70.676, 5.96736, 0.44 ) }
    dend_34 { pt3dadd( -52.6842, -70.7051, 6.50072, 0.81 ) }
    dend_34 { pt3dadd( -53.1954, -70.7238, 6.92185, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -41.1357, -67.1698, -7.5735, 0.59 ) }
    dend_31 { pt3dadd( -42.0743, -67.9452, -7.64703, 0.59 ) }
    dend_31 { pt3dadd( -42.5611, -68.3881, -7.6589, 0.52 ) }
    dend_31 { pt3dadd( -42.8519, -68.6522, -7.66866, 0.88 ) }
    dend_31 { pt3dadd( -43.4191, -69.1121, -7.72034, 0.88 ) }
    dend_31 { pt3dadd( -43.852, -69.4034, -7.82997, 0.88 ) }
    dend_31 { pt3dadd( -44.262, -69.6354, -7.96851, 1.03 ) }
    dend_31 { pt3dadd( -44.8704, -69.8779, -8.19666, 0.59 ) }
    dend_31 { pt3dadd( -45.4294, -69.9926, -8.46828, 0.44 ) }
    dend_31 { pt3dadd( -46.1964, -70.01, -8.88056, 0.74 ) }
    dend_31 { pt3dadd( -47.5366, -69.8089, -9.66516, 0.44 ) }
    dend_31 { pt3dadd( -47.8766, -69.7074, -9.85933, 0.44 ) }
    dend_31 { pt3dadd( -48.259, -69.5609, -10.0647, 0.44 ) }
    dend_31 { pt3dadd( -48.6905, -69.3743, -10.2683, 0.74 ) }
    dend_31 { pt3dadd( -48.9722, -69.256, -10.3688, 0.96 ) }
    dend_31 { pt3dadd( -49.0177, -69.2419, -10.3763, 0.96 ) }
    dend_31 { pt3dadd( -49.4725, -69.1607, -10.3712, 0.88 ) }
    dend_31 { pt3dadd( -50.4424, -69.0289, -10.3606, 0.44 ) }
    dend_31 { pt3dadd( -50.7384, -68.9862, -10.3554, 0.44 ) }
    dend_31 { pt3dadd( -50.7868, -68.9758, -10.36, 0.44 ) }
    dend_31 { pt3dadd( -51.1436, -68.8699, -10.4113, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -51.6788, -68.6668, -10.5111, 0.44 ) }
    dend_31 { pt3dadd( -52.0307, -68.498, -10.5797, 0.81 ) }
    dend_31 { pt3dadd( -52.3559, -68.3068, -10.654, 1.33 ) }
    dend_31 { pt3dadd( -53.4314, -67.6378, -10.9284, 1.33 ) }
    dend_31 { pt3dadd( -53.8764, -67.3681, -11.036, 1.25 ) }
    dend_31 { pt3dadd( -54.3876, -67.0718, -11.1526, 0.96 ) }
    dend_31 { pt3dadd( -54.9385, -66.7814, -11.2819, 0.88 ) }
    dend_31 { pt3dadd( -55.5688, -66.4707, -11.414, 0.74 ) }
    dend_31 { pt3dadd( -56.0531, -66.2466, -11.4935, 0.74 ) }
    dend_31 { pt3dadd( -56.7148, -65.9532, -11.5766, 0.66 ) }
    dend_31 { pt3dadd( -57.08, -65.7945, -11.6377, 0.52 ) }
    dend_31 { pt3dadd( -57.6779, -65.5303, -11.7397, 0.29 ) }
    dend_31 { pt3dadd( -58.0825, -65.3367, -11.8497, 0.37 ) }
    dend_31 { pt3dadd( -58.1287, -65.3121, -11.8653, 0.37 ) }
    dend_31 { pt3dadd( -58.8436, -64.835, -12.1848, 0.88 ) }
    dend_31 { pt3dadd( -59.0821, -64.6365, -12.3427, 1.25 ) }
    dend_31 { pt3dadd( -59.425, -64.3425, -12.6213, 1.18 ) }
    dend_31 { pt3dadd( -60.0856, -63.8074, -13.1626, 0.66 ) }
    dend_31 { pt3dadd( -60.1193, -63.7827, -13.1888, 0.66 ) }
    dend_31 { pt3dadd( -60.5496, -63.4942, -13.4786, 0.74 ) }
    dend_31 { pt3dadd( -61.4388, -62.9739, -13.9824, 0.88 ) }
    dend_31 { pt3dadd( -62.0931, -62.6274, -14.3242, 0.52 ) }
    dend_31 { pt3dadd( -62.5825, -62.418, -14.5262, 0.88 ) }
    dend_31 { pt3dadd( -63.1066, -62.2683, -14.6639, 1.03 ) }
    dend_31 { pt3dadd( -63.6681, -62.1557, -14.7759, 1.33 ) }
    dend_31 { pt3dadd( -64.1681, -62.0969, -14.8342, 0.88 ) }
    dend_31 { pt3dadd( -64.2176, -62.0921, -14.8373, 0.88 ) }
    dend_31 { pt3dadd( -64.8608, -62.0255, -14.8977, 0.59 ) }
    dend_31 { pt3dadd( -65.7011, -61.9292, -15.0436, 0.52 ) }
    dend_31 { pt3dadd( -65.7972, -61.9158, -15.0661, 0.52 ) }
    dend_31 { pt3dadd( -66.0959, -61.8556, -15.1466, 0.81 ) }
    dend_31 { pt3dadd( -67.1021, -61.5462, -15.5095, 0.29 ) }
    dend_31 { pt3dadd( -67.1443, -61.532, -15.528, 0.29 ) }
    dend_31 { pt3dadd( -67.5287, -61.3925, -15.7661, 0.29 ) }
    dend_31 { pt3dadd( -67.6839, -61.3373, -15.8767, 0.88 ) }
    dend_31 { pt3dadd( -67.8693, -61.2889, -16.0289, 1.18 ) }
    dend_31 { pt3dadd( -68.7596, -61.1267, -16.8107, 0.37 ) }
    dend_31 { pt3dadd( -69.305, -61.0756, -17.2881, 0.74 ) }
    dend_31 { pt3dadd( -70.0537, -61.069, -17.9527, 1.03 ) }
    dend_31 { pt3dadd( -70.0902, -61.0716, -17.9844, 1.03 ) }
    dend_31 { pt3dadd( -70.88, -61.1764, -18.6324, 0.44 ) }
    dend_31 { pt3dadd( -71.0866, -61.2109, -18.7858, 1.18 ) }
    dend_31 { pt3dadd( -71.4422, -61.2757, -18.997, 1.47 ) }
    dend_31 { pt3dadd( -72.4071, -61.3852, -19.6523, 0.81 ) }
    dend_31 { pt3dadd( -72.8183, -61.4162, -19.9406, 0.52 ) }
    dend_31 { pt3dadd( -73.4044, -61.4481, -20.359, 0.37 ) }
    dend_31 { pt3dadd( -73.7522, -61.4619, -20.6046, 0.37 ) }
    dend_31 { pt3dadd( -74.1992, -61.4811, -20.925, 1.18 ) }
    dend_31 { pt3dadd( -76.5076, -61.6005, -22.6275, 0.81 ) }
    dend_31 { pt3dadd( -76.5865, -61.6054, -22.6854, 0.81 ) }
    dend_31 { pt3dadd( -77.0272, -61.6435, -23.0118, 0.81 ) }
    dend_31 { pt3dadd( -77.3319, -61.6741, -23.2198, 0.88 ) }
    dend_31 { pt3dadd( -77.6484, -61.7183, -23.4281, 0.81 ) }
    dend_31 { pt3dadd( -78.3507, -61.8632, -23.8238, 0.29 ) }
    dend_31 { pt3dadd( -78.5023, -61.903, -23.873, 0.29 ) }
    dend_31 { pt3dadd( -78.7723, -61.9856, -23.9926, 0.29 ) }
    dend_31 { pt3dadd( -79.2762, -62.171, -24.2571, 1.18 ) }
    dend_31 { pt3dadd( -80.3498, -62.679, -24.8579, 0.59 ) }
    dend_31 { pt3dadd( -80.6807, -62.8823, -25.0387, 1.33 ) }
    dend_31 { pt3dadd( -80.7207, -62.9125, -25.0592, 1.33 ) }
    dend_31 { pt3dadd( -81.4735, -63.5485, -25.4161, 0.74 ) }
    dend_31 { pt3dadd( -81.8437, -63.8958, -25.5822, 0.66 ) }
    dend_31 { pt3dadd( -82.2747, -64.3158, -25.7868, 0.37 ) }
    dend_31 { pt3dadd( -82.7056, -64.7402, -25.9674, 0.88 ) }
    dend_31 { pt3dadd( -83.1575, -65.1767, -26.1658, 1.03 ) }
    dend_31 { pt3dadd( -83.5386, -65.538, -26.3482, 0.88 ) }
    dend_31 { pt3dadd( -83.5702, -65.569, -26.3645, 0.88 ) }
    dend_31 { pt3dadd( -84.3606, -66.3956, -26.8633, 0.74 ) }
    dend_31 { pt3dadd( -84.7653, -66.8015, -27.1947, 0.44 ) }
    dend_31 { pt3dadd( -84.9948, -67.0152, -27.403, 1.47 ) }
    dend_31 { pt3dadd( -85.4923, -67.4277, -27.8723, 1.03 ) }
    dend_31 { pt3dadd( -85.7966, -67.6363, -28.146, 0.74 ) }
    dend_31 { pt3dadd( -86.0732, -67.7798, -28.3535, 0.74 ) }
    dend_31 { pt3dadd( -87.1402, -68.147, -29.0086, 0.52 ) }
    dend_31 { pt3dadd( -87.6677, -68.2601, -29.32, 0.66 ) }
    dend_31 { pt3dadd( -88.1635, -68.3484, -29.6243, 0.37 ) }
    dend_31 { pt3dadd( -88.5486, -68.4187, -29.9153, 0.29 ) }
    dend_31 { pt3dadd( -88.9121, -68.487, -30.2222, 0.29 ) }
    dend_31 { pt3dadd( -89.3437, -68.5745, -30.6172, 0.74 ) }
    dend_31 { pt3dadd( -89.9485, -68.7226, -31.2101, 0.96 ) }
    dend_31 { pt3dadd( -90.7617, -68.9225, -32.0575, 0.96 ) }
    dend_31 { pt3dadd( -91.9493, -69.178, -33.3457, 0.88 ) }
    dend_31 { pt3dadd( -91.9773, -69.1824, -33.3753, 0.88 ) }
    dend_31 { pt3dadd( -92.488, -69.2289, -33.8933, 0.88 ) }
    dend_31 { pt3dadd( -92.7254, -69.2335, -34.1129, 1.03 ) }
    dend_31 { pt3dadd( -93.1119, -69.228, -34.4231, 1.03 ) }
    dend_31 { pt3dadd( -93.729, -69.234, -34.8426, 0.74 ) }
    dend_31 { pt3dadd( -94.4154, -69.2981, -35.2717, 0.37 ) }
    dend_31 { pt3dadd( -94.4553, -69.3061, -35.3002, 0.37 ) }
    dend_31 { pt3dadd( -95.2208, -69.5245, -35.899, 0.37 ) }
    dend_31 { pt3dadd( -95.909, -69.7676, -36.4909, 0.37 ) }
    dend_31 { pt3dadd( -96.5389, -70.0235, -37.0493, 0.88 ) }
    dend_31 { pt3dadd( -97.1384, -70.273, -37.5572, 1.18 ) }
    dend_31 { pt3dadd( -98.0547, -70.6064, -38.3826, 0.59 ) }
    dend_31 { pt3dadd( -98.091, -70.6158, -38.4151, 0.59 ) }
    dend_31 { pt3dadd( -98.9156, -70.709, -39.1184, 0.44 ) }
    dend_31 { pt3dadd( -99.1711, -70.6961, -39.3564, 0.37 ) }
    dend_31 { pt3dadd( -99.632, -70.6141, -39.8161, 0.37 ) }
    dend_31 { pt3dadd( -100.684, -70.3338, -40.8641, 1.03 ) }
    dend_31 { pt3dadd( -101.216, -70.1627, -41.376, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -101.665, -70.0268, -41.7849, 1.25 ) }
    dend_31 { pt3dadd( -102.783, -69.7514, -42.8164, 1.18 ) }
    dend_31 { pt3dadd( -102.818, -69.7477, -42.8501, 1.18 ) }
    dend_31 { pt3dadd( -103.331, -69.7677, -43.3359, 0.59 ) }
    dend_31 { pt3dadd( -103.638, -69.8227, -43.6019, 0.74 ) }
    dend_31 { pt3dadd( -103.975, -69.9184, -43.8873, 0.74 ) }
    dend_31 { pt3dadd( -105.094, -70.3095, -44.8447, 0.88 ) }
    dend_31 { pt3dadd( -106.196, -70.6965, -45.9808, 0.52 ) }
    dend_31 { pt3dadd( -106.496, -70.8042, -46.3272, 1.18 ) }
    dend_31 { pt3dadd( -107.025, -70.9973, -47.0123, 1.55 ) }
    dend_31 { pt3dadd( -107.295, -71.0956, -47.3816, 1.25 ) }
    dend_31 { pt3dadd( -108.261, -71.4586, -48.7133, 0.74 ) }
    dend_31 { pt3dadd( -110.079, -72.1789, -51.2172, 0.74 ) }
    dend_31 { pt3dadd( -110.299, -72.268, -51.5303, 1.4 ) }
    dend_31 { pt3dadd( -111.368, -72.6879, -53.1017, 0.74 ) }
    dend_31 { pt3dadd( -111.425, -72.7085, -53.1862, 0.74 ) }
    dend_31 { pt3dadd( -111.783, -72.8168, -53.6991, 0.59 ) }
    dend_31 { pt3dadd( -111.814, -72.8245, -53.7373, 0.59 ) }
    dend_31 { pt3dadd( -112.957, -73.0496, -54.7875, 0.59 ) }
    dend_31 { pt3dadd( -113.021, -73.0609, -54.8381, 0.59 ) }
    dend_31 { pt3dadd( -113.639, -73.1495, -55.2811, 0.66 ) }
    dend_31 { pt3dadd( -114.004, -73.1961, -55.5451, 0.88 ) }
    dend_31 { pt3dadd( -115.309, -73.3285, -56.4873, 0.44 ) }
    dend_31 { pt3dadd( -115.478, -73.3484, -56.5956, 1.03 ) }
    dend_31 { pt3dadd( -116.368, -73.4901, -57.0011, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -45.0854, -179.659, -77.0764, 0.29 ) }
    dend_29 { pt3dadd( -45.7774, -180.031, -76.9255, 0.29 ) }
    dend_29 { pt3dadd( -46.2027, -180.246, -76.8232, 0.29 ) }
    dend_29 { pt3dadd( -46.842, -180.539, -76.7131, 0.22 ) }
    dend_29 { pt3dadd( -47.1237, -180.68, -76.6707, 0.81 ) }
    dend_29 { pt3dadd( -47.3985, -180.826, -76.6309, 0.81 ) }
    dend_29 { pt3dadd( -47.6389, -180.955, -76.6135, 0.81 ) }
    dend_29 { pt3dadd( -48.0578, -181.183, -76.6149, 0.52 ) }
    dend_29 { pt3dadd( -48.8959, -181.655, -76.6756, 0.22 ) }
    dend_29 { pt3dadd( -49.4579, -181.991, -76.7372, 0.22 ) }
    dend_29 { pt3dadd( -49.7217, -182.158, -76.7747, 0.81 ) }
    dend_29 { pt3dadd( -50.4732, -182.658, -76.8939, 0.96 ) }
    dend_29 { pt3dadd( -50.6628, -182.786, -76.9392, 1.11 ) }
    dend_29 { pt3dadd( -51.3235, -183.242, -77.1759, 0.22 ) }
    dend_29 { pt3dadd( -51.6527, -183.472, -77.3073, 0.22 ) }
    dend_29 { pt3dadd( -51.8394, -183.599, -77.3854, 0.74 ) }
    dend_29 { pt3dadd( -52.0485, -183.747, -77.478, 0.96 ) }
    dend_29 { pt3dadd( -52.8159, -184.306, -77.851, 0.59 ) }
    dend_29 { pt3dadd( -53.5466, -184.834, -78.2367, 0.29 ) }
    dend_29 { pt3dadd( -54.0814, -185.195, -78.5594, 0.22 ) }
    dend_29 { pt3dadd( -54.2257, -185.286, -78.649, 0.37 ) }
    dend_29 { pt3dadd( -54.9031, -185.69, -79.0658, 0.22 ) }
    dend_29 { pt3dadd( -55.4661, -186.018, -79.4134, 0.81 ) }
    dend_29 { pt3dadd( -55.7083, -186.16, -79.5583, 1.03 ) }
    dend_29 { pt3dadd( -56.5875, -186.671, -80.1542, 0.37 ) }
    dend_29 { pt3dadd( -56.9008, -186.85, -80.3824, 0.52 ) }
    dend_29 { pt3dadd( -57.6374, -187.274, -80.9231, 0.29 ) }
    dend_29 { pt3dadd( -57.9259, -187.442, -81.1229, 0.66 ) }
    dend_29 { pt3dadd( -58.161, -187.586, -81.2789, 0.81 ) }
    dend_29 { pt3dadd( -59.2066, -188.251, -82.033, 0.29 ) }
    dend_29 { pt3dadd( -59.4671, -188.433, -82.2303, 0.44 ) }
    dend_29 { pt3dadd( -59.5017, -188.458, -82.2601, 0.44 ) }
    dend_29 { pt3dadd( -59.8194, -188.699, -82.5401, 0.59 ) }
    dend_29 { pt3dadd( -60.2261, -189.034, -82.9515, 1.03 ) }
    dend_29 { pt3dadd( -60.9129, -189.675, -83.7968, 1.03 ) }
    dend_29 { pt3dadd( -61.4315, -190.231, -84.5686, 0.29 ) }
    dend_29 { pt3dadd( -61.8756, -190.738, -85.3067, 0.88 ) }
    dend_29 { pt3dadd( -62.0338, -190.921, -85.5746, 1.25 ) }
    dend_29 { pt3dadd( -63.0812, -192.105, -87.3131, 0.29 ) }
    dend_29 { pt3dadd( -63.7388, -192.844, -88.3894, 0.37 ) }
    dend_29 { pt3dadd( -64.2191, -193.391, -89.1438, 0.81 ) }
    dend_29 { pt3dadd( -64.6731, -193.893, -89.8273, 0.44 ) }
    dend_29 { pt3dadd( -64.9652, -194.206, -90.2269, 0.37 ) }
    dend_29 { pt3dadd( -65.394, -194.654, -90.7537, 0.37 ) }
    dend_29 { pt3dadd( -65.9764, -195.25, -91.3082, 0.37 ) }
    dend_29 { pt3dadd( -66.441, -195.715, -91.6625, 0.37 ) }
    dend_29 { pt3dadd( -66.8112, -196.101, -91.9249, 1.11 ) }
    dend_29 { pt3dadd( -67.0499, -196.355, -92.0885, 1.25 ) }
    dend_29 { pt3dadd( -67.6432, -196.948, -92.4857, 0.81 ) }
    dend_29 { pt3dadd( -68.1986, -197.474, -92.8149, 0.52 ) }
    dend_29 { pt3dadd( -68.4633, -197.708, -92.9222, 0.52 ) }
    dend_29 { pt3dadd( -68.5014, -197.74, -92.9378, 0.52 ) }
    dend_29 { pt3dadd( -68.9772, -198.129, -93.121, 0.52 ) }
    dend_29 { pt3dadd( -69.826, -198.785, -93.4552, 0.44 ) }
    dend_29 { pt3dadd( -70.2259, -199.089, -93.6036, 0.44 ) }
    dend_29 { pt3dadd( -70.9226, -199.604, -93.9168, 0.74 ) }
    dend_29 { pt3dadd( -71.8233, -200.277, -94.3723, 0.74 ) }
    dend_29 { pt3dadd( -71.8544, -200.301, -94.3891, 0.74 ) }
    dend_29 { pt3dadd( -72.5979, -200.913, -94.8293, 0.37 ) }
    dend_29 { pt3dadd( -72.8812, -201.147, -95.0037, 0.81 ) }
    dend_29 { pt3dadd( -73.854, -201.87, -95.6094, 0.29 ) }
    dend_29 { pt3dadd( -74.1952, -202.094, -95.8146, 0.29 ) }
    dend_29 { pt3dadd( -74.516, -202.314, -95.9751, 0.88 ) }
    dend_29 { pt3dadd( -74.6459, -202.407, -96.0407, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -45.0854, -179.659, -77.0764, 0.59 ) }
    dend_28 { pt3dadd( -44.9144, -182.358, -78.6131, 0.59 ) }
    dend_28 { pt3dadd( -44.8166, -183.486, -79.1982, 0.59 ) }
    dend_28 { pt3dadd( -44.7784, -183.8, -79.3568, 0.81 ) }
    dend_28 { pt3dadd( -44.6565, -184.523, -79.721, 0.81 ) }
    dend_28 { pt3dadd( -44.4444, -185.56, -80.2503, 0.15 ) }
    dend_28 { pt3dadd( -44.211, -186.503, -80.7417, 0.15 ) }
    dend_28 { pt3dadd( -44.1801, -186.569, -80.7687, 0.15 ) }
    dend_28 { pt3dadd( -43.9869, -186.954, -80.9432, 0.59 ) }
    dend_28 { pt3dadd( -43.6964, -187.519, -81.2132, 0.88 ) }
    dend_28 { pt3dadd( -43.624, -187.665, -81.2825, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -43.4068, -188.187, -81.4996, 0.88 ) }
    dend_28 { pt3dadd( -43.0067, -189.319, -81.8701, 0.52 ) }
    dend_28 { pt3dadd( -42.739, -190.274, -82.1004, 0.44 ) }
    dend_28 { pt3dadd( -42.6205, -190.825, -82.1935, 0.74 ) }
    dend_28 { pt3dadd( -42.5016, -191.534, -82.2733, 0.44 ) }
    dend_28 { pt3dadd( -42.3427, -192.532, -82.3038, 0.29 ) }
    dend_28 { pt3dadd( -42.2559, -193.229, -82.2648, 0.88 ) }
    dend_28 { pt3dadd( -42.1601, -193.875, -82.2084, 0.96 ) }
    dend_28 { pt3dadd( -41.9591, -194.864, -82.1328, 0.81 ) }
    dend_28 { pt3dadd( -41.6664, -195.983, -82.0983, 0.29 ) }
    dend_28 { pt3dadd( -41.3046, -197.126, -82.1567, 0.44 ) }
    dend_28 { pt3dadd( -40.9956, -197.916, -82.2555, 0.22 ) }
    dend_28 { pt3dadd( -40.4308, -199.138, -82.5244, 0.22 ) }
    dend_28 { pt3dadd( -40.0196, -199.848, -82.7644, 0.59 ) }
    dend_28 { pt3dadd( -39.4441, -200.615, -83.0878, 0.81 ) }
    dend_28 { pt3dadd( -38.8758, -201.258, -83.411, 0.81 ) }
    dend_28 { pt3dadd( -38.4274, -201.742, -83.6749, 0.88 ) }
    dend_28 { pt3dadd( -37.6162, -202.674, -84.1062, 0.37 ) }
    dend_28 { pt3dadd( -36.9413, -203.68, -84.4014, 0.59 ) }
    dend_28 { pt3dadd( -36.415, -204.722, -84.6022, 0.96 ) }
    dend_28 { pt3dadd( -36.1168, -205.491, -84.6972, 0.59 ) }
    dend_28 { pt3dadd( -35.8545, -206.45, -84.7626, 0.29 ) }
    dend_28 { pt3dadd( -35.6859, -207.819, -84.8744, 0.29 ) }
    dend_28 { pt3dadd( -35.6726, -209.34, -85.0093, 0.74 ) }
    dend_28 { pt3dadd( -35.727, -210.231, -85.1156, 0.96 ) }
    dend_28 { pt3dadd( -35.7358, -210.363, -85.1355, 0.96 ) }
    dend_28 { pt3dadd( -35.762, -211.074, -85.25, 0.96 ) }
    dend_28 { pt3dadd( -35.7743, -212.375, -85.4665, 0.44 ) }
    dend_28 { pt3dadd( -35.7527, -213.268, -85.614, 0.29 ) }
    dend_28 { pt3dadd( -35.7063, -214.489, -85.7014, 0.59 ) }
    dend_28 { pt3dadd( -35.6751, -215.511, -85.6549, 1.03 ) }
    dend_28 { pt3dadd( -35.6713, -215.83, -85.614, 1.11 ) }
    dend_28 { pt3dadd( -35.6607, -216.46, -85.493, 0.96 ) }
    dend_28 { pt3dadd( -35.6404, -217.22, -85.3109, 0.96 ) }
    dend_28 { pt3dadd( -35.6245, -218.362, -85.0116, 0.37 ) }
    dend_28 { pt3dadd( -35.628, -219.486, -84.7197, 0.22 ) }
    dend_28 { pt3dadd( -35.631, -220.203, -84.5653, 0.44 ) }
    dend_28 { pt3dadd( -35.6035, -221.414, -84.3414, 0.44 ) }
    dend_28 { pt3dadd( -35.534, -222.253, -84.2378, 0.66 ) }
    dend_28 { pt3dadd( -35.4019, -223.088, -84.2103, 0.88 ) }
    dend_28 { pt3dadd( -35.2388, -223.957, -84.2488, 0.29 ) }
    dend_28 { pt3dadd( -34.9796, -224.921, -84.2354, 0.29 ) }
    dend_28 { pt3dadd( -34.944, -225.026, -84.2298, 0.29 ) }
    dend_28 { pt3dadd( -34.6152, -225.943, -84.1396, 0.29 ) }
    dend_28 { pt3dadd( -34.2028, -227.116, -84.0009, 0.29 ) }
    dend_28 { pt3dadd( -33.7478, -228.448, -83.8315, 0.29 ) }
    dend_28 { pt3dadd( -33.1731, -230.148, -83.4926, 0.59 ) }
    dend_28 { pt3dadd( -33.0485, -230.586, -83.3705, 0.74 ) }
    dend_28 { pt3dadd( -32.7805, -231.743, -83.0062, 0.29 ) }
    dend_28 { pt3dadd( -32.6195, -232.657, -82.7038, 0.29 ) }
    dend_28 { pt3dadd( -32.6033, -232.743, -82.6812, 0.29 ) }
    dend_28 { pt3dadd( -32.3747, -233.779, -82.5841, 0.81 ) }
    dend_28 { pt3dadd( -32.2443, -234.408, -82.635, 1.25 ) }
    dend_28 { pt3dadd( -32.11, -235.088, -82.7563, 0.88 ) }
    dend_28 { pt3dadd( -31.8615, -236.202, -83.0731, 0.52 ) }
    dend_28 { pt3dadd( -31.4911, -237.541, -83.5174, 0.29 ) }
    dend_28 { pt3dadd( -31.2902, -238.205, -83.76, 0.66 ) }
    dend_28 { pt3dadd( -30.9877, -239.06, -84.1329, 0.74 ) }
    dend_28 { pt3dadd( -30.3634, -240.435, -84.8136, 0.22 ) }
    dend_28 { pt3dadd( -29.9436, -241.219, -85.2327, 0.22 ) }
    dend_28 { pt3dadd( -29.4304, -241.986, -85.6422, 0.88 ) }
    dend_28 { pt3dadd( -29.374, -242.061, -85.6758, 0.88 ) }
    dend_28 { pt3dadd( -28.8148, -242.744, -85.9288, 0.81 ) }
    dend_28 { pt3dadd( -28.1958, -243.474, -86.1791, 0.74 ) }
    dend_28 { pt3dadd( -28.1414, -243.544, -86.1979, 0.74 ) }
    dend_28 { pt3dadd( -27.5325, -244.614, -86.4128, 0.29 ) }
    dend_28 { pt3dadd( -27.0732, -245.7, -86.597, 0.74 ) }
    dend_28 { pt3dadd( -26.9532, -246.086, -86.638, 0.81 ) }
    dend_28 { pt3dadd( -26.7632, -247.224, -86.7007, 0.22 ) }
    dend_28 { pt3dadd( -26.7397, -247.808, -86.7085, 0.66 ) }
    dend_28 { pt3dadd( -26.7624, -248.409, -86.7151, 0.74 ) }
    dend_28 { pt3dadd( -26.7731, -248.487, -86.7161, 0.74 ) }
    dend_28 { pt3dadd( -26.9509, -249.385, -86.7133, 0.74 ) }
    dend_28 { pt3dadd( -27.2193, -250.44, -86.6782, 0.22 ) }
    dend_28 { pt3dadd( -27.5572, -251.304, -86.6787, 0.22 ) }
    dend_28 { pt3dadd( -27.5889, -251.372, -86.6827, 0.22 ) }
    dend_28 { pt3dadd( -27.8197, -251.856, -86.7594, 0.66 ) }
    dend_28 { pt3dadd( -27.8559, -251.946, -86.7855, 0.66 ) }
    dend_28 { pt3dadd( -28.0136, -252.419, -86.9883, 0.66 ) }
    dend_28 { pt3dadd( -28.3706, -253.721, -87.5751, 0.52 ) }
    dend_28 { pt3dadd( -28.3967, -253.786, -87.6124, 0.52 ) }
    dend_28 { pt3dadd( -28.7789, -254.662, -88.1027, 0.22 ) }
    dend_28 { pt3dadd( -29.1037, -255.384, -88.477, 1.03 ) }
    dend_28 { pt3dadd( -29.3071, -255.825, -88.7143, 1.11 ) }
    dend_28 { pt3dadd( -29.6629, -256.636, -89.1381, 0.88 ) }
    dend_28 { pt3dadd( -30.7202, -259.251, -90.3767, 0.22 ) }
    dend_28 { pt3dadd( -30.9626, -259.881, -90.6653, 0.88 ) }
    dend_28 { pt3dadd( -31.2304, -260.562, -90.9713, 0.59 ) }
    dend_28 { pt3dadd( -31.5974, -261.573, -91.4192, 0.52 ) }
    dend_28 { pt3dadd( -31.8571, -262.479, -91.8142, 0.81 ) }
    dend_28 { pt3dadd( -32.0246, -263.126, -92.1754, 0.81 ) }
    dend_28 { pt3dadd( -32.4187, -264.462, -93.1358, 0.29 ) }
    dend_28 { pt3dadd( -32.4378, -264.517, -93.1841, 0.29 ) }
    dend_28 { pt3dadd( -32.6288, -264.974, -93.6813, 0.96 ) }
    dend_28 { pt3dadd( -32.843, -265.41, -94.2408, 1.25 ) }
    dend_28 { pt3dadd( -33.8776, -267.316, -97.0427, 0.52 ) }
    dend_28 { pt3dadd( -34.5762, -268.535, -99.012, 0.44 ) }
    dend_28 { pt3dadd( -34.7539, -268.86, -99.5768, 0.66 ) }
    dend_28 { pt3dadd( -35.2257, -269.805, -101.269, 0.52 ) }
    dend_28 { pt3dadd( -35.6524, -270.799, -103.12, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -35.7258, -271.034, -103.56, 0.59 ) }
    dend_28 { pt3dadd( -35.7321, -271.134, -103.731, 0.59 ) }
    dend_28 { pt3dadd( -35.6175, -272.087, -105.311, 0.22 ) }
    dend_28 { pt3dadd( -35.6088, -272.142, -105.4, 0.22 ) }
    dend_28 { pt3dadd( -35.4515, -272.534, -105.952, 0.59 ) }
    dend_28 { pt3dadd( -35.3746, -272.652, -106.105, 0.59 ) }
    dend_28 { pt3dadd( -35.272, -272.811, -106.316, 0.59 ) }
    dend_28 { pt3dadd( -35.237, -272.862, -106.383, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -4.61313, 108.069, -7.44268, 0.29 ) }
    dend_24 { pt3dadd( -5.49571, 108.69, -8.50183, 0.29 ) }
    dend_24 { pt3dadd( -6.14253, 109.112, -9.16535, 0.29 ) }
    dend_24 { pt3dadd( -7.06635, 109.691, -10.0331, 0.66 ) }
    dend_24 { pt3dadd( -7.86014, 110.194, -10.8114, 0.29 ) }
    dend_24 { pt3dadd( -8.25604, 110.448, -11.2052, 0.37 ) }
    dend_24 { pt3dadd( -9.07479, 110.979, -12.0173, 0.37 ) }
    dend_24 { pt3dadd( -9.94412, 111.563, -12.8177, 0.59 ) }
    dend_24 { pt3dadd( -10.3792, 111.86, -13.2208, 0.81 ) }
    dend_24 { pt3dadd( -11.1274, 112.37, -13.8922, 0.37 ) }
    dend_24 { pt3dadd( -11.3719, 112.554, -14.0922, 0.88 ) }
    dend_24 { pt3dadd( -11.7191, 112.853, -14.3912, 1.03 ) }
    dend_24 { pt3dadd( -12.1507, 113.282, -14.7761, 0.81 ) }
    dend_24 { pt3dadd( -12.4927, 113.661, -15.0738, 0.37 ) }
    dend_24 { pt3dadd( -12.5354, 113.716, -15.1069, 0.37 ) }
    dend_24 { pt3dadd( -12.9675, 114.392, -15.3942, 0.37 ) }
    dend_24 { pt3dadd( -13.0107, 114.475, -15.4255, 0.37 ) }
    dend_24 { pt3dadd( -13.3544, 115.16, -15.5683, 0.37 ) }
    dend_24 { pt3dadd( -13.3839, 115.222, -15.5723, 0.37 ) }
    dend_24 { pt3dadd( -13.8518, 116.159, -15.548, 0.22 ) }
    dend_24 { pt3dadd( -14.1194, 116.679, -15.5137, 0.74 ) }
    dend_24 { pt3dadd( -14.1504, 116.74, -15.5075, 0.74 ) }
    dend_24 { pt3dadd( -14.8609, 118.176, -15.3673, 0.29 ) }
    dend_24 { pt3dadd( -15.002, 118.467, -15.3292, 0.66 ) }
    dend_24 { pt3dadd( -15.1994, 118.865, -15.2754, 0.66 ) }
    dend_24 { pt3dadd( -15.5615, 119.568, -15.1818, 0.37 ) }
    dend_24 { pt3dadd( -15.8034, 120.072, -15.1291, 0.29 ) }
    dend_24 { pt3dadd( -16.0149, 120.581, -15.1105, 0.29 ) }
    dend_24 { pt3dadd( -16.2612, 121.332, -15.1433, 0.96 ) }
    dend_24 { pt3dadd( -16.2822, 121.394, -15.146, 0.96 ) }
    dend_24 { pt3dadd( -16.4018, 121.805, -15.1592, 0.66 ) }
    dend_24 { pt3dadd( -16.5677, 122.433, -15.176, 0.29 ) }
    dend_24 { pt3dadd( -16.7339, 123.053, -15.2144, 0.29 ) }
    dend_24 { pt3dadd( -16.7505, 123.116, -15.2229, 0.29 ) }
    dend_24 { pt3dadd( -16.902, 123.741, -15.3502, 1.11 ) }
    dend_24 { pt3dadd( -16.9987, 124.341, -15.4647, 1.47 ) }
    dend_24 { pt3dadd( -17.0139, 124.505, -15.4935, 1.47 ) }
    dend_24 { pt3dadd( -17.0589, 125.343, -15.636, 0.66 ) }
    dend_24 { pt3dadd( -17.0824, 125.997, -15.7399, 0.37 ) }
    dend_24 { pt3dadd( -17.1106, 126.82, -15.8667, 0.37 ) }
    dend_24 { pt3dadd( -17.1082, 128.095, -16.1359, 0.29 ) }
    dend_24 { pt3dadd( -17.0906, 129.437, -16.4821, 0.29 ) }
    dend_24 { pt3dadd( -17.0874, 129.575, -16.5186, 0.29 ) }
    dend_24 { pt3dadd( -17.0415, 130.436, -16.751, 0.96 ) }
    dend_24 { pt3dadd( -17.0113, 130.9, -16.8827, 1.18 ) }
    dend_24 { pt3dadd( -16.8988, 132.405, -17.4102, 0.37 ) }
    dend_24 { pt3dadd( -16.8752, 132.894, -17.6559, 0.37 ) }
    dend_24 { pt3dadd( -21.3389, 140.42, -21.5189, 0.37 ) }
    dend_24 { pt3dadd( -23.6576, 148.626, -25.7042, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -4.61313, 108.069, -7.44268, 1.03 ) }
    dend_21 { pt3dadd( -4.72808, 108.476, -7.39116, 1.03 ) }
    dend_21 { pt3dadd( -5.01599, 109.447, -7.31523, 1.4 ) }
    dend_21 { pt3dadd( -5.34271, 110.665, -7.26272, 1.4 ) }
    dend_21 { pt3dadd( -5.36104, 110.741, -7.26074, 1.4 ) }
    dend_21 { pt3dadd( -5.59203, 111.846, -7.24997, 1.25 ) }
    dend_21 { pt3dadd( -5.8012, 113.016, -7.22197, 0.81 ) }
    dend_21 { pt3dadd( -5.81382, 113.092, -7.21591, 0.81 ) }
    dend_21 { pt3dadd( -5.94105, 113.965, -7.12473, 0.96 ) }
    dend_21 { pt3dadd( -5.97418, 114.273, -7.09415, 0.96 ) }
    dend_21 { pt3dadd( -6.06156, 115.142, -6.99345, 1.18 ) }
    dend_21 { pt3dadd( -6.14627, 116.139, -6.8445, 0.96 ) }
    dend_21 { pt3dadd( -6.25746, 117.543, -6.6979, 1.18 ) }
    dend_21 { pt3dadd( -6.26771, 117.658, -6.69177, 1.18 ) }
    dend_21 { pt3dadd( -6.3445, 118.591, -6.7094, 1.18 ) }
    dend_21 { pt3dadd( -6.38704, 119.644, -6.83287, 0.96 ) }
    dend_21 { pt3dadd( -6.3868, 119.738, -6.85345, 0.96 ) }
    dend_21 { pt3dadd( -6.3202, 120.998, -7.21549, 1.47 ) }
    dend_21 { pt3dadd( -6.31261, 121.071, -7.23978, 1.47 ) }
    dend_21 { pt3dadd( -6.14954, 122.232, -7.57022, 1.18 ) }
    dend_21 { pt3dadd( -5.91167, 123.433, -7.86218, 0.81 ) }
    dend_21 { pt3dadd( -5.87771, 123.568, -7.88295, 0.81 ) }
    dend_21 { pt3dadd( -5.70776, 124.418, -7.87329, 0.74 ) }
    dend_21 { pt3dadd( -5.70052, 124.487, -7.85934, 0.74 ) }
    dend_21 { pt3dadd( -5.72117, 125.077, -7.70461, 0.74 ) }
    dend_21 { pt3dadd( -5.73744, 125.15, -7.68374, 0.74 ) }
    dend_21 { pt3dadd( -5.95595, 125.76, -7.55085, 0.81 ) }
    dend_21 { pt3dadd( -6.53968, 127.085, -7.37773, 1.18 ) }
    dend_21 { pt3dadd( -6.80488, 127.612, -7.34421, 1.4 ) }
    dend_21 { pt3dadd( -7.29646, 128.56, -7.32321, 0.96 ) }
    dend_21 { pt3dadd( -7.77715, 129.472, -7.33393, 0.96 ) }
    dend_21 { pt3dadd( -8.19214, 130.282, -7.37467, 0.96 ) }
    dend_21 { pt3dadd( -8.67372, 131.289, -7.49102, 0.96 ) }
    dend_21 { pt3dadd( -8.70548, 131.36, -7.49702, 0.96 ) }
    dend_21 { pt3dadd( -8.94213, 131.892, -7.48974, 0.96 ) }
    dend_21 { pt3dadd( -9.11155, 132.29, -7.45438, 1.18 ) }
    dend_21 { pt3dadd( -9.1889, 132.481, -7.42379, 1.18 ) }
    dend_21 { pt3dadd( -9.50336, 133.272, -7.28577, 1.18 ) }
    dend_21 { pt3dadd( -10.1106, 134.868, -7.04049, 0.96 ) }
    dend_21 { pt3dadd( -10.6129, 136.176, -6.84065, 0.66 ) }
    dend_21 { pt3dadd( -10.8586, 136.803, -6.746, 0.66 ) }
    dend_21 { pt3dadd( -11.1838, 137.637, -6.64646, 0.88 ) }
    dend_21 { pt3dadd( -11.4985, 138.485, -6.56741, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -11.7793, 139.288, -6.51596, 1.03 ) }
    dend_21 { pt3dadd( -12.0458, 140.155, -6.51501, 1.03 ) }
    dend_21 { pt3dadd( -12.0657, 140.221, -6.51381, 1.03 ) }
    dend_21 { pt3dadd( -12.2861, 140.962, -6.51786, 1.11 ) }
    dend_21 { pt3dadd( -12.5091, 141.744, -6.55388, 1.11 ) }
    dend_21 { pt3dadd( -12.5412, 141.855, -6.56166, 1.11 ) }
    dend_21 { pt3dadd( -12.8682, 142.997, -6.682, 0.96 ) }
    dend_21 { pt3dadd( -13.1092, 143.794, -6.75119, 0.96 ) }
    dend_21 { pt3dadd( -13.4322, 144.879, -6.81049, 1.4 ) }
    dend_21 { pt3dadd( -13.6542, 145.642, -6.83219, 1.03 ) }
    dend_21 { pt3dadd( -13.9035, 146.593, -6.84946, 1.25 ) }
    dend_21 { pt3dadd( -14.147, 147.765, -6.84822, 0.88 ) }
    dend_21 { pt3dadd( -14.2936, 148.865, -6.81625, 0.88 ) }
    dend_21 { pt3dadd( -14.3648, 149.821, -6.75305, 0.88 ) }
    dend_21 { pt3dadd( -14.364, 150.042, -6.73033, 0.88 ) }
    dend_21 { pt3dadd( -14.3186, 150.839, -6.64779, 0.88 ) }
    dend_21 { pt3dadd( -14.2429, 151.926, -6.57681, 0.81 ) }
    dend_21 { pt3dadd( -14.1687, 152.927, -6.56274, 0.81 ) }
    dend_21 { pt3dadd( -14.1667, 152.995, -6.56773, 0.81 ) }
    dend_21 { pt3dadd( -14.2147, 153.657, -6.60621, 0.96 ) }
    dend_21 { pt3dadd( -14.4106, 154.793, -6.67621, 0.96 ) }
    dend_21 { pt3dadd( -14.7135, 156.009, -6.75627, 1.03 ) }
    dend_21 { pt3dadd( -14.731, 156.067, -6.76013, 1.03 ) }
    dend_21 { pt3dadd( -15.2237, 157.544, -6.86743, 1.03 ) }
    dend_21 { pt3dadd( -15.6291, 158.768, -6.96043, 1.03 ) }
    dend_21 { pt3dadd( -16.0078, 159.989, -7.04801, 1.03 ) }
    dend_21 { pt3dadd( -16.1268, 160.449, -7.07263, 1.03 ) }
    dend_21 { pt3dadd( -16.2326, 161.027, -7.09518, 1.03 ) }
    dend_21 { pt3dadd( -16.3502, 161.957, -7.13343, 0.88 ) }
    dend_21 { pt3dadd( -16.3984, 163.092, -7.18918, 0.88 ) }
    dend_21 { pt3dadd( -16.3677, 164.066, -7.26884, 1.11 ) }
    dend_21 { pt3dadd( -16.3249, 164.465, -7.30798, 1.11 ) }
    dend_21 { pt3dadd( -16.1823, 165.529, -7.44939, 1.11 ) }
    dend_21 { pt3dadd( -16.1579, 165.672, -7.47206, 1.11 ) }
    dend_21 { pt3dadd( -16.0095, 166.41, -7.60731, 0.96 ) }
    dend_21 { pt3dadd( -15.9985, 166.465, -7.61994, 0.96 ) }
    dend_21 { pt3dadd( -15.8085, 167.632, -7.92298, 0.88 ) }
    dend_21 { pt3dadd( -15.6991, 168.515, -8.16878, 0.66 ) }
    dend_21 { pt3dadd( -15.6869, 168.65, -8.20574, 0.66 ) }
    dend_21 { pt3dadd( -15.6173, 169.476, -8.40508, 0.66 ) }
    dend_21 { pt3dadd( -15.611, 169.552, -8.41977, 0.66 ) }
    dend_21 { pt3dadd( -15.5185, 170.434, -8.52154, 0.96 ) }
    dend_21 { pt3dadd( -15.5011, 170.571, -8.52467, 0.96 ) }
    dend_21 { pt3dadd( -15.3314, 171.45, -8.52075, 0.96 ) }
    dend_21 { pt3dadd( -15.2951, 171.612, -8.51816, 0.96 ) }
    dend_21 { pt3dadd( -15.1887, 172.08, -8.5084, 0.96 ) }
    dend_21 { pt3dadd( -15.0189, 172.976, -8.44658, 0.96 ) }
    dend_21 { pt3dadd( -14.9126, 173.627, -8.37831, 1.18 ) }
    dend_21 { pt3dadd( -14.8197, 174.394, -8.29329, 0.74 ) }
    dend_21 { pt3dadd( -14.7662, 175.303, -8.20599, 0.74 ) }
    dend_21 { pt3dadd( -14.7745, 175.997, -8.16068, 1.18 ) }
    dend_21 { pt3dadd( -14.9022, 177.071, -8.15067, 0.66 ) }
    dend_21 { pt3dadd( -15.0877, 177.87, -8.196, 0.66 ) }
    dend_21 { pt3dadd( -15.3877, 178.822, -8.30502, 0.66 ) }
    dend_21 { pt3dadd( -15.7461, 179.751, -8.45662, 1.18 ) }
    dend_21 { pt3dadd( -16.0236, 180.415, -8.61035, 1.18 ) }
    dend_21 { pt3dadd( -16.5722, 181.705, -8.99109, 0.96 ) }
    dend_21 { pt3dadd( -16.9473, 182.584, -9.26418, 0.96 ) }
    dend_21 { pt3dadd( -17.2186, 183.226, -9.44019, 0.66 ) }
    dend_21 { pt3dadd( -17.2395, 183.279, -9.45233, 0.66 ) }
    dend_21 { pt3dadd( -17.6162, 184.33, -9.64353, 0.59 ) }
    dend_21 { pt3dadd( -17.8351, 185.005, -9.73734, 1.03 ) }
    dend_21 { pt3dadd( -18.2527, 186.255, -9.80046, 0.81 ) }
    dend_21 { pt3dadd( -18.4949, 186.924, -9.79832, 1.03 ) }
    dend_21 { pt3dadd( -18.5471, 187.055, -9.79567, 1.03 ) }
    dend_21 { pt3dadd( -18.8962, 187.875, -9.78299, 1.03 ) }
    dend_21 { pt3dadd( -19.0257, 188.15, -9.77986, 1.03 ) }
    dend_21 { pt3dadd( -19.5577, 189.255, -9.8095, 0.96 ) }
    dend_21 { pt3dadd( -19.9953, 190.248, -9.88581, 0.96 ) }
    dend_21 { pt3dadd( -20.2811, 191.009, -9.9426, 0.96 ) }
    dend_21 { pt3dadd( -20.5215, 191.78, -9.99854, 1.11 ) }
    dend_21 { pt3dadd( -20.6494, 192.343, -10.0385, 1.33 ) }
    dend_21 { pt3dadd( -20.6612, 192.42, -10.045, 1.33 ) }
    dend_21 { pt3dadd( -20.7053, 193.454, -10.16, 0.88 ) }
    dend_21 { pt3dadd( -20.684, 194.252, -10.22, 1.11 ) }
    dend_21 { pt3dadd( -20.6704, 194.399, -10.219, 1.11 ) }
    dend_21 { pt3dadd( -20.5641, 195.044, -10.1588, 1.11 ) }
    dend_21 { pt3dadd( -20.5485, 195.109, -10.1477, 1.11 ) }
    dend_21 { pt3dadd( -20.383, 195.777, -9.93742, 0.88 ) }
    dend_21 { pt3dadd( -20.3671, 195.839, -9.91175, 0.81 ) }
    dend_21 { pt3dadd( -20.1986, 196.522, -9.62399, 1.03 ) }
    dend_21 { pt3dadd( -20.0883, 197.022, -9.41141, 1.03 ) }
    dend_21 { pt3dadd( -19.9385, 197.85, -9.07957, 0.81 ) }
    dend_21 { pt3dadd( -19.7759, 199.099, -8.63704, 0.74 ) }
    dend_21 { pt3dadd( -19.7066, 200.005, -8.36753, 0.74 ) }
    dend_21 { pt3dadd( -19.6881, 200.922, -8.12136, 0.88 ) }
    dend_21 { pt3dadd( -19.6983, 201.434, -8.00317, 0.88 ) }
    dend_21 { pt3dadd( -19.7596, 202.195, -7.84686, 0.88 ) }
    dend_21 { pt3dadd( -19.817, 202.695, -7.76331, 0.88 ) }
    dend_21 { pt3dadd( -19.8703, 203.381, -7.6787, 0.88 ) }
    dend_21 { pt3dadd( -19.8943, 204.362, -7.54417, 0.88 ) }
    dend_21 { pt3dadd( -19.8775, 204.867, -7.4471, 0.88 ) }
    dend_21 { pt3dadd( -19.8662, 205.012, -7.41767, 0.88 ) }
    dend_21 { pt3dadd( -19.7615, 205.901, -7.22107, 0.88 ) }
    dend_21 { pt3dadd( -19.6367, 206.832, -7.02888, 0.88 ) }
    dend_21 { pt3dadd( -19.4821, 207.85, -6.83735, 0.44 ) }
    dend_21 { pt3dadd( -19.37, 208.78, -6.67561, 0.81 ) }
    dend_21 { pt3dadd( -19.3334, 209.48, -6.56155, 1.25 ) }
    dend_21 { pt3dadd( -19.3321, 210.359, -6.42661, 0.96 ) }
    dend_21 { pt3dadd( -19.4077, 211.497, -6.27873, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -19.4512, 211.847, -6.24262, 1.47 ) }
    dend_21 { pt3dadd( -19.6863, 213.313, -6.1492, 1.11 ) }
    dend_21 { pt3dadd( -19.8459, 214.192, -6.13843, 0.96 ) }
    dend_21 { pt3dadd( -19.8589, 214.259, -6.13876, 0.96 ) }
    dend_21 { pt3dadd( -19.9872, 215.033, -6.16424, 0.96 ) }
    dend_21 { pt3dadd( -19.9944, 215.093, -6.16799, 0.96 ) }
    dend_21 { pt3dadd( -20.0487, 216.078, -6.23924, 0.96 ) }
    dend_21 { pt3dadd( -20.0437, 216.215, -6.25386, 0.96 ) }
    dend_21 { pt3dadd( -19.9321, 217.494, -6.39015, 0.96 ) }
    dend_21 { pt3dadd( -19.7246, 218.948, -6.59332, 0.96 ) }
    dend_21 { pt3dadd( -19.4817, 220.251, -6.80414, 0.96 ) }
    dend_21 { pt3dadd( -19.3285, 221.037, -6.91496, 0.96 ) }
    dend_21 { pt3dadd( -19.1779, 221.739, -7.00318, 0.96 ) }
    dend_21 { pt3dadd( -18.9642, 222.694, -7.10537, 1.11 ) }
    dend_21 { pt3dadd( -18.6315, 224.119, -7.22867, 1.11 ) }
    dend_21 { pt3dadd( -18.6198, 224.179, -7.2288, 1.11 ) }
    dend_21 { pt3dadd( -18.4547, 225.472, -7.06786, 1.11 ) }
    dend_21 { pt3dadd( -18.4515, 225.539, -7.0531, 1.11 ) }
    dend_21 { pt3dadd( -18.4623, 226.385, -6.79191, 1.11 ) }
    dend_21 { pt3dadd( -18.493, 227.083, -6.54179, 1.18 ) }
    dend_21 { pt3dadd( -18.5891, 228.275, -6.07732, 0.88 ) }
    dend_21 { pt3dadd( -18.6412, 229.11, -5.78355, 0.66 ) }
    dend_21 { pt3dadd( -18.6447, 229.177, -5.76482, 0.66 ) }
    dend_21 { pt3dadd( -18.7188, 229.809, -5.63834, 0.81 ) }
    dend_21 { pt3dadd( -18.847, 230.615, -5.53987, 0.81 ) }
    dend_21 { pt3dadd( -18.8579, 230.684, -5.5367, 0.81 ) }
    dend_21 { pt3dadd( -18.9583, 231.432, -5.56593, 0.66 ) }
    dend_21 { pt3dadd( -19.0432, 232.218, -5.62221, 1.18 ) }
    dend_21 { pt3dadd( -19.162, 233.462, -5.72009, 1.03 ) }
    dend_21 { pt3dadd( -19.2259, 234.249, -5.78833, 0.88 ) }
    dend_21 { pt3dadd( -19.2728, 235.246, -5.89875, 0.74 ) }
    dend_21 { pt3dadd( -19.2862, 236.381, -6.04442, 1.25 ) }
    dend_21 { pt3dadd( -19.275, 236.984, -6.13751, 1.03 ) }
    dend_21 { pt3dadd( -19.2663, 237.127, -6.15991, 1.03 ) }
    dend_21 { pt3dadd( -19.1605, 238.118, -6.338, 1.03 ) }
    dend_21 { pt3dadd( -19.1084, 238.923, -6.43411, 1.03 ) }
    dend_21 { pt3dadd( -19.1048, 238.993, -6.43353, 1.03 ) }
    dend_21 { pt3dadd( -19.0637, 240.038, -6.29234, 1.25 ) }
    dend_21 { pt3dadd( -19.061, 240.104, -6.27387, 1.25 ) }
    dend_21 { pt3dadd( -19.0046, 241.195, -5.8707, 1.4 ) }
    dend_21 { pt3dadd( -18.9089, 242.883, -5.09986, 0.74 ) }
    dend_21 { pt3dadd( -18.8553, 243.915, -4.59267, 0.59 ) }
    dend_21 { pt3dadd( -18.8497, 244.005, -4.54791, 0.59 ) }
    dend_21 { pt3dadd( -18.7372, 245.213, -3.93892, 0.59 ) }
    dend_21 { pt3dadd( -18.6613, 245.891, -3.63873, 0.81 ) }
    dend_21 { pt3dadd( -18.6532, 245.956, -3.61601, 0.81 ) }
    dend_21 { pt3dadd( -18.5369, 246.732, -3.48809, 0.81 ) }
    dend_21 { pt3dadd( -18.5135, 246.938, -3.47593, 0.81 ) }
    dend_21 { pt3dadd( -18.4309, 247.792, -3.47306, 1.03 ) }
    dend_21 { pt3dadd( -18.353, 248.642, -3.51701, 1.25 ) }
    dend_21 { pt3dadd( -18.2958, 249.295, -3.50717, 1.25 ) }
    dend_21 { pt3dadd( -18.2903, 249.353, -3.50331, 1.25 ) }
    dend_21 { pt3dadd( -18.236, 250.196, -3.36618, 0.96 ) }
    dend_21 { pt3dadd( -18.1838, 251.425, -3.0912, 0.74 ) }
    dend_21 { pt3dadd( -18.1962, 251.981, -2.91644, 0.74 ) }
    dend_21 { pt3dadd( -18.2745, 253.226, -2.45188, 0.88 ) }
    dend_21 { pt3dadd( -18.3364, 253.846, -2.2099, 0.74 ) }
    dend_21 { pt3dadd( -18.4954, 255.146, -1.70672, 0.74 ) }
    dend_21 { pt3dadd( -18.5963, 255.797, -1.46231, 0.74 ) }
    dend_21 { pt3dadd( -18.8373, 257.086, -1.02109, 0.96 ) }
    dend_21 { pt3dadd( -18.9895, 257.849, -0.806179, 1.03 ) }
    dend_21 { pt3dadd( -19.1473, 258.608, -0.663768, 1.03 ) }
    dend_21 { pt3dadd( -19.2881, 259.36, -0.567888, 1.18 ) }
    dend_21 { pt3dadd( -19.3855, 260.177, -0.533958, 0.59 ) }
    dend_21 { pt3dadd( -19.4173, 260.66, -0.531538, 0.37 ) }
    dend_21 { pt3dadd( -19.4127, 261.047, -0.55007, 0.81 ) }
    dend_21 { pt3dadd( -19.39, 261.45, -0.574826, 0.81 ) }
    dend_21 { pt3dadd( -19.3366, 262.203, -0.638054, 0.81 ) }
    dend_21 { pt3dadd( -19.3084, 262.9, -0.725769, 0.81 ) }
    dend_21 { pt3dadd( -19.3252, 263.479, -0.831542, 0.88 ) }
    dend_21 { pt3dadd( -19.3892, 263.939, -0.946178, 0.81 ) }
    dend_21 { pt3dadd( -19.5746, 264.678, -1.17633, 0.74 ) }
    dend_21 { pt3dadd( -19.8229, 265.4, -1.43585, 0.74 ) }
    dend_21 { pt3dadd( -20.1477, 266.134, -1.73426, 0.96 ) }
    dend_21 { pt3dadd( -20.5125, 266.864, -2.04133, 0.44 ) }
    dend_21 { pt3dadd( -20.8795, 267.557, -2.33003, 0.44 ) }
    dend_21 { pt3dadd( -21.2314, 268.218, -2.58771, 0.96 ) }
    dend_21 { pt3dadd( -21.2673, 268.285, -2.6114, 0.96 ) }
    dend_21 { pt3dadd( -21.5033, 268.784, -2.76973, 0.96 ) }
    dend_21 { pt3dadd( -21.7642, 269.424, -2.94995, 0.96 ) }
    dend_21 { pt3dadd( -21.8324, 269.615, -2.98804, 0.96 ) }
    dend_21 { pt3dadd( -22.0682, 270.204, -3.0902, 0.81 ) }
    dend_21 { pt3dadd( -22.1574, 270.401, -3.10498, 0.81 ) }
    dend_21 { pt3dadd( -22.5916, 271.268, -3.1267, 0.81 ) }
    dend_21 { pt3dadd( -22.6227, 271.328, -3.12572, 0.81 ) }
    dend_21 { pt3dadd( -23.0378, 272.127, -3.0876, 0.96 ) }
    dend_21 { pt3dadd( -23.4863, 273.046, -3.02894, 0.81 ) }
    dend_21 { pt3dadd( -24.0362, 274.246, -2.92632, 0.81 ) }
    dend_21 { pt3dadd( -24.0615, 274.31, -2.92035, 0.81 ) }
    dend_21 { pt3dadd( -24.3117, 275.141, -2.84106, 0.81 ) }
    dend_21 { pt3dadd( -24.3244, 275.208, -2.83715, 0.81 ) }
    dend_21 { pt3dadd( -24.3319, 276.0, -2.8908, 0.59 ) }
    dend_21 { pt3dadd( -24.3244, 276.102, -2.90108, 0.59 ) }
    dend_21 { pt3dadd( -24.2548, 276.656, -3.00984, 0.59 ) }
    dend_21 { pt3dadd( -24.1434, 277.443, -3.1765, 0.59 ) }
    dend_21 { pt3dadd( -23.9851, 278.364, -3.40088, 0.81 ) }
    dend_21 { pt3dadd( -23.7224, 279.691, -3.75205, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 21.7395, 73.224, -51.6777, 0.52 ) }
    dend_17 { pt3dadd( 23.1153, 73.834, -52.7085, 0.52 ) }
    dend_17 { pt3dadd( 23.1495, 73.8529, -52.7351, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 23.8079, 74.3316, -53.258, 0.44 ) }
    dend_17 { pt3dadd( 23.8466, 74.3675, -53.2905, 0.44 ) }
    dend_17 { pt3dadd( 24.1962, 74.6821, -53.5855, 0.88 ) }
    dend_17 { pt3dadd( 24.5535, 74.9671, -53.8594, 1.11 ) }
    dend_17 { pt3dadd( 24.589, 74.9983, -53.885, 1.11 ) }
    dend_17 { pt3dadd( 25.0652, 75.3488, -54.1845, 1.03 ) }
    dend_17 { pt3dadd( 25.8141, 75.8076, -54.596, 0.37 ) }
    dend_17 { pt3dadd( 26.8039, 76.2606, -55.1134, 0.44 ) }
    dend_17 { pt3dadd( 27.3577, 76.4508, -55.3842, 0.44 ) }
    dend_17 { pt3dadd( 27.4465, 76.4787, -55.4274, 0.44 ) }
    dend_17 { pt3dadd( 27.9188, 76.6477, -55.7026, 0.44 ) }
    dend_17 { pt3dadd( 27.9723, 76.6745, -55.745, 0.44 ) }
    dend_17 { pt3dadd( 28.602, 77.1303, -56.3951, 0.96 ) }
    dend_17 { pt3dadd( 28.7683, 77.3203, -56.6169, 1.33 ) }
    dend_17 { pt3dadd( 29.0926, 77.7789, -57.096, 1.18 ) }
    dend_17 { pt3dadd( 29.5349, 78.4837, -57.7751, 0.81 ) }
    dend_17 { pt3dadd( 29.9589, 79.2622, -58.4361, 0.37 ) }
    dend_17 { pt3dadd( 29.9826, 79.3072, -58.4705, 0.37 ) }
    dend_17 { pt3dadd( 30.2051, 79.7671, -58.7599, 0.66 ) }
    dend_17 { pt3dadd( 30.3708, 80.0663, -58.9381, 0.88 ) }
    dend_17 { pt3dadd( 30.4285, 80.165, -58.9864, 0.88 ) }
    dend_17 { pt3dadd( 30.7062, 80.6171, -59.1879, 0.88 ) }
    dend_17 { pt3dadd( 31.0542, 81.1821, -59.4478, 0.74 ) }
    dend_17 { pt3dadd( 31.3338, 81.68, -59.6912, 0.59 ) }
    dend_17 { pt3dadd( 31.6902, 82.3853, -60.0501, 1.03 ) }
    dend_17 { pt3dadd( 31.9191, 82.9384, -60.3317, 0.29 ) }
    dend_17 { pt3dadd( 32.143, 83.5912, -60.6406, 0.81 ) }
    dend_17 { pt3dadd( 32.2336, 83.934, -60.7876, 0.88 ) }
    dend_17 { pt3dadd( 32.3085, 84.3415, -60.9327, 0.96 ) }
    dend_17 { pt3dadd( 32.3723, 84.7488, -61.0765, 0.66 ) }
    dend_17 { pt3dadd( 32.4688, 85.4781, -61.303, 0.22 ) }
    dend_17 { pt3dadd( 32.5711, 86.1554, -61.5023, 1.62 ) }
    dend_17 { pt3dadd( 32.6499, 86.6235, -61.6216, 1.99 ) }
    dend_17 { pt3dadd( 32.7227, 87.0415, -61.7171, 1.77 ) }
    dend_17 { pt3dadd( 32.8599, 87.9159, -61.891, 1.25 ) }
    dend_17 { pt3dadd( 32.9437, 88.5691, -61.9913, 0.81 ) }
    dend_17 { pt3dadd( 32.9962, 89.0729, -62.0439, 0.66 ) }
    dend_17 { pt3dadd( 33.0354, 89.613, -62.0821, 0.81 ) }
    dend_17 { pt3dadd( 33.0732, 90.2559, -62.0998, 0.29 ) }
    dend_17 { pt3dadd( 33.1023, 91.022, -62.0838, 0.29 ) }
    dend_17 { pt3dadd( 33.105, 91.4227, -62.0421, 0.44 ) }
    dend_17 { pt3dadd( 33.106, 91.4753, -62.0359, 0.44 ) }
    dend_17 { pt3dadd( 33.1232, 92.0787, -61.9733, 0.59 ) }
    dend_17 { pt3dadd( 33.145, 92.4837, -61.942, 1.11 ) }
    dend_17 { pt3dadd( 33.1786, 92.9313, -61.9242, 1.11 ) }
    dend_17 { pt3dadd( 33.2282, 93.5038, -61.9119, 0.88 ) }
    dend_17 { pt3dadd( 33.3015, 94.331, -61.9094, 0.52 ) }
    dend_17 { pt3dadd( 33.3848, 95.256, -61.9128, 0.52 ) }
    dend_17 { pt3dadd( 33.4666, 96.1069, -61.9206, 0.66 ) }
    dend_17 { pt3dadd( 33.5438, 96.8099, -61.9327, 0.29 ) }
    dend_17 { pt3dadd( 33.6358, 97.4847, -61.952, 0.81 ) }
    dend_17 { pt3dadd( 33.6456, 97.5382, -61.9545, 0.81 ) }
    dend_17 { pt3dadd( 33.7373, 97.8856, -61.9762, 1.03 ) }
    dend_17 { pt3dadd( 33.7826, 98.0046, -61.9866, 1.03 ) }
    dend_17 { pt3dadd( 33.9615, 98.403, -62.0371, 1.03 ) }
    dend_17 { pt3dadd( 34.1769, 98.8411, -62.1041, 0.96 ) }
    dend_17 { pt3dadd( 34.3539, 99.2303, -62.177, 0.66 ) }
    dend_17 { pt3dadd( 34.538, 99.7474, -62.2859, 0.52 ) }
    dend_17 { pt3dadd( 34.6141, 100.113, -62.3728, 0.44 ) }
    dend_17 { pt3dadd( 34.6847, 100.809, -62.5494, 0.44 ) }
    dend_17 { pt3dadd( 34.6797, 100.92, -62.5785, 0.44 ) }
    dend_17 { pt3dadd( 34.6048, 101.341, -62.684, 0.37 ) }
    dend_17 { pt3dadd( 34.451, 101.87, -62.8034, 0.37 ) }
    dend_17 { pt3dadd( 34.2104, 102.551, -62.9254, 1.03 ) }
    dend_17 { pt3dadd( 34.1939, 102.601, -62.9332, 1.03 ) }
    dend_17 { pt3dadd( 34.0751, 103.033, -62.991, 1.18 ) }
    dend_17 { pt3dadd( 33.9856, 103.465, -63.0404, 0.59 ) }
    dend_17 { pt3dadd( 33.9229, 103.966, -63.0862, 0.37 ) }
    dend_17 { pt3dadd( 33.9027, 104.513, -63.1263, 0.29 ) }
    dend_17 { pt3dadd( 33.9214, 105.243, -63.1449, 0.22 ) }
    dend_17 { pt3dadd( 33.9346, 105.59, -63.1455, 0.44 ) }
    dend_17 { pt3dadd( 33.9414, 105.706, -63.1439, 0.44 ) }
    dend_17 { pt3dadd( 33.9578, 106.191, -63.0851, 0.44 ) }
    dend_17 { pt3dadd( 33.9579, 106.242, -63.0713, 0.44 ) }
    dend_17 { pt3dadd( 33.9421, 106.962, -62.8108, 0.74 ) }
    dend_17 { pt3dadd( 33.9157, 107.531, -62.5769, 1.33 ) }
    dend_17 { pt3dadd( 33.8802, 108.236, -62.2684, 1.4 ) }
    dend_17 { pt3dadd( 33.8269, 109.335, -61.7806, 0.52 ) }
    dend_17 { pt3dadd( 33.7922, 110.047, -61.4726, 0.59 ) }
    dend_17 { pt3dadd( 33.7675, 110.576, -61.2635, 0.74 ) }
    dend_17 { pt3dadd( 33.7571, 110.938, -61.141, 0.74 ) }
    dend_17 { pt3dadd( 33.7562, 110.998, -61.1254, 0.74 ) }
    dend_17 { pt3dadd( 33.7538, 111.429, -61.0603, 0.44 ) }
    dend_17 { pt3dadd( 33.7602, 112.032, -61.0647, 0.52 ) }
    dend_17 { pt3dadd( 33.7745, 112.428, -61.0869, 0.66 ) }
    dend_17 { pt3dadd( 33.7911, 112.786, -61.0924, 0.44 ) }
    dend_17 { pt3dadd( 33.8175, 113.282, -61.0859, 0.22 ) }
    dend_17 { pt3dadd( 33.8481, 113.975, -61.0655, 0.66 ) }
    dend_17 { pt3dadd( 33.8572, 114.319, -61.0618, 0.88 ) }
    dend_17 { pt3dadd( 33.862, 114.803, -61.0644, 0.29 ) }
    dend_17 { pt3dadd( 33.8549, 115.387, -61.0748, 0.22 ) }
    dend_17 { pt3dadd( 33.8432, 115.778, -61.088, 0.37 ) }
    dend_17 { pt3dadd( 33.8285, 116.178, -61.1244, 0.52 ) }
    dend_17 { pt3dadd( 33.8095, 116.782, -61.2341, 0.29 ) }
    dend_17 { pt3dadd( 33.8053, 117.098, -61.3003, 0.59 ) }
    dend_17 { pt3dadd( 33.8092, 117.219, -61.3222, 0.59 ) }
    dend_17 { pt3dadd( 33.8492, 117.546, -61.3661, 0.59 ) }
    dend_17 { pt3dadd( 33.8592, 117.597, -61.3694, 0.59 ) }
    dend_17 { pt3dadd( 33.9698, 118.074, -61.3733, 0.59 ) }
    dend_17 { pt3dadd( 34.1376, 118.78, -61.3241, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( 34.2678, 119.361, -61.2702, 0.59 ) }
    dend_17 { pt3dadd( 34.3677, 119.844, -61.2223, 1.03 ) }
    dend_17 { pt3dadd( 34.4534, 120.33, -61.1745, 1.03 ) }
    dend_17 { pt3dadd( 34.5177, 120.82, -61.1328, 0.81 ) }
    dend_17 { pt3dadd( 34.5602, 121.34, -61.0984, 0.59 ) }
    dend_17 { pt3dadd( 34.5748, 121.893, -61.0829, 0.37 ) }
    dend_17 { pt3dadd( 34.5615, 122.679, -61.0959, 0.37 ) }
    dend_17 { pt3dadd( 34.5392, 123.326, -61.1174, 0.37 ) }
    dend_17 { pt3dadd( 34.5175, 123.848, -61.1437, 0.44 ) }
    dend_17 { pt3dadd( 34.4952, 124.396, -61.1818, 0.44 ) }
    dend_17 { pt3dadd( 34.4884, 124.911, -61.2143, 0.29 ) }
    dend_17 { pt3dadd( 34.4939, 125.577, -61.2386, 0.29 ) }
    dend_17 { pt3dadd( 34.5231, 126.089, -61.24, 0.81 ) }
    dend_17 { pt3dadd( 34.5753, 126.58, -61.2077, 1.11 ) }
    dend_17 { pt3dadd( 34.6464, 127.074, -61.1489, 0.81 ) }
    dend_17 { pt3dadd( 34.7626, 127.797, -61.0365, 0.52 ) }
    dend_17 { pt3dadd( 34.7714, 127.849, -61.0271, 0.52 ) }
    dend_17 { pt3dadd( 34.8613, 128.495, -60.904, 0.52 ) }
    dend_17 { pt3dadd( 34.9213, 129.201, -60.7817, 0.29 ) }
    dend_17 { pt3dadd( 34.9405, 129.691, -60.7081, 0.59 ) }
    dend_17 { pt3dadd( 34.9241, 130.185, -60.661, 0.81 ) }
    dend_17 { pt3dadd( 34.912, 130.291, -60.6585, 0.81 ) }
    dend_17 { pt3dadd( 34.8569, 130.756, -60.6608, 0.81 ) }
    dend_17 { pt3dadd( 34.8178, 131.203, -60.6754, 0.66 ) }
    dend_17 { pt3dadd( 34.8151, 131.263, -60.6794, 0.66 ) }
    dend_17 { pt3dadd( 34.8028, 131.816, -60.7118, 0.44 ) }
    dend_17 { pt3dadd( 34.7929, 132.479, -60.7498, 0.37 ) }
    dend_17 { pt3dadd( 34.7892, 133.093, -60.7849, 0.37 ) }
    dend_17 { pt3dadd( 34.7862, 133.759, -60.8242, 0.52 ) }
    dend_17 { pt3dadd( 34.7771, 134.298, -60.8596, 0.37 ) }
    dend_17 { pt3dadd( 34.7554, 134.73, -60.894, 0.37 ) }
    dend_17 { pt3dadd( 34.725, 135.183, -60.9355, 0.81 ) }
    dend_17 { pt3dadd( 34.6857, 135.607, -60.9814, 0.88 ) }
    dend_17 { pt3dadd( 34.6364, 135.976, -61.0254, 0.59 ) }
    dend_17 { pt3dadd( 34.6039, 136.197, -61.0526, 0.44 ) }
    dend_17 { pt3dadd( 34.5364, 136.861, -61.126, 0.37 ) }
    dend_17 { pt3dadd( 34.5054, 137.647, -61.1997, 0.37 ) }
    dend_17 { pt3dadd( 34.5277, 138.033, -61.2403, 0.66 ) }
    dend_17 { pt3dadd( 34.5357, 138.092, -61.247, 0.66 ) }
    dend_17 { pt3dadd( 34.6758, 138.667, -61.3087, 0.74 ) }
    dend_17 { pt3dadd( 34.7605, 138.956, -61.3401, 0.88 ) }
    dend_17 { pt3dadd( 34.9993, 139.607, -61.4141, 0.59 ) }
    dend_17 { pt3dadd( 35.2705, 140.245, -61.4963, 0.29 ) }
    dend_17 { pt3dadd( 35.2966, 140.299, -61.5036, 0.29 ) }
    dend_17 { pt3dadd( 35.7373, 141.141, -61.6223, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 21.7395, 73.224, -51.6777, 0.59 ) }
    dend_16 { pt3dadd( 21.7144, 73.9914, -51.6036, 0.59 ) }
    dend_16 { pt3dadd( 21.6821, 74.5433, -51.5431, 0.29 ) }
    dend_16 { pt3dadd( 21.6494, 75.0034, -51.4962, 0.29 ) }
    dend_16 { pt3dadd( 21.6005, 75.6083, -51.4418, 0.29 ) }
    dend_16 { pt3dadd( 21.4672, 76.9949, -51.3351, 0.29 ) }
    dend_16 { pt3dadd( 21.3725, 77.891, -51.279, 0.74 ) }
    dend_16 { pt3dadd( 21.2942, 78.4741, -51.2639, 0.74 ) }
    dend_16 { pt3dadd( 21.2075, 79.0738, -51.2705, 0.52 ) }
    dend_16 { pt3dadd( 21.1564, 79.4357, -51.2896, 0.44 ) }
    dend_16 { pt3dadd( 21.0956, 79.8834, -51.3263, 0.29 ) }
    dend_16 { pt3dadd( 21.0343, 80.4098, -51.3906, 0.29 ) }
    dend_16 { pt3dadd( 20.9738, 81.1059, -51.4894, 0.66 ) }
    dend_16 { pt3dadd( 20.9401, 81.5601, -51.5399, 0.96 ) }
    dend_16 { pt3dadd( 20.9218, 81.9837, -51.5642, 0.66 ) }
    dend_16 { pt3dadd( 20.919, 82.1404, -51.5664, 0.66 ) }
    dend_16 { pt3dadd( 20.9196, 82.6161, -51.5567, 0.44 ) }
    dend_16 { pt3dadd( 20.9084, 83.1047, -51.5418, 0.29 ) }
    dend_16 { pt3dadd( 20.8844, 83.5865, -51.5266, 0.22 ) }
    dend_16 { pt3dadd( 20.7711, 84.3718, -51.48, 0.29 ) }
    dend_16 { pt3dadd( 20.7563, 84.435, -51.4767, 0.29 ) }
    dend_16 { pt3dadd( 20.5844, 85.0281, -51.4502, 0.37 ) }
    dend_16 { pt3dadd( 20.361, 85.6677, -51.4425, 0.66 ) }
    dend_16 { pt3dadd( 20.1861, 86.1088, -51.4498, 0.96 ) }
    dend_16 { pt3dadd( 19.7919, 87.112, -51.4814, 0.81 ) }
    dend_16 { pt3dadd( 19.5647, 87.7499, -51.5001, 0.59 ) }
    dend_16 { pt3dadd( 19.5455, 87.82, -51.5016, 0.59 ) }
    dend_16 { pt3dadd( 19.4012, 88.5789, -51.5136, 0.59 ) }
    dend_16 { pt3dadd( 19.3527, 89.058, -51.5199, 0.66 ) }
    dend_16 { pt3dadd( 19.337, 90.0793, -51.5276, 0.22 ) }
    dend_16 { pt3dadd( 19.3837, 90.5901, -51.5311, 0.22 ) }
    dend_16 { pt3dadd( 19.4743, 91.2269, -51.5089, 0.74 ) }
    dend_16 { pt3dadd( 19.559, 91.7667, -51.4822, 0.81 ) }
    dend_16 { pt3dadd( 19.5707, 91.8405, -51.478, 0.81 ) }
    dend_16 { pt3dadd( 19.6449, 92.4316, -51.4566, 0.88 ) }
    dend_16 { pt3dadd( 19.6869, 92.9072, -51.4435, 0.81 ) }
    dend_16 { pt3dadd( 19.7295, 93.4831, -51.4378, 0.29 ) }
    dend_16 { pt3dadd( 19.7499, 94.4674, -51.4688, 0.29 ) }
    dend_16 { pt3dadd( 19.7305, 95.8651, -51.5548, 0.74 ) }
    dend_16 { pt3dadd( 19.6969, 96.5385, -51.6182, 1.11 ) }
    dend_16 { pt3dadd( 19.643, 97.1271, -51.6975, 0.88 ) }
    dend_16 { pt3dadd( 19.5117, 98.0889, -51.8538, 0.22 ) }
    dend_16 { pt3dadd( 19.3424, 99.0889, -52.0376, 0.22 ) }
    dend_16 { pt3dadd( 19.3261, 99.1878, -52.0595, 0.22 ) }
    dend_16 { pt3dadd( 19.2972, 99.4371, -52.1321, 0.22 ) }
    dend_16 { pt3dadd( 19.2579, 100.005, -52.3161, 0.74 ) }
    dend_16 { pt3dadd( 19.238, 100.36, -52.4403, 1.11 ) }
    dend_16 { pt3dadd( 19.2192, 101.033, -52.716, 1.25 ) }
    dend_16 { pt3dadd( 19.2166, 101.8, -53.043, 0.74 ) }
    dend_16 { pt3dadd( 19.2251, 102.829, -53.5171, 0.22 ) }
    dend_16 { pt3dadd( 19.2292, 103.447, -53.8111, 0.37 ) }
    dend_16 { pt3dadd( 19.227, 104.269, -54.2074, 0.37 ) }
    dend_16 { pt3dadd( 19.2035, 105.442, -54.759, 0.52 ) }
    dend_16 { pt3dadd( 19.1859, 105.92, -54.9716, 0.88 ) }
    dend_16 { pt3dadd( 19.1216, 106.931, -55.3774, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( 19.0775, 107.572, -55.607, 0.66 ) }
    dend_16 { pt3dadd( 19.03, 108.292, -55.8435, 0.29 ) }
    dend_16 { pt3dadd( 18.9776, 109.099, -56.0765, 0.22 ) }
    dend_16 { pt3dadd( 18.9176, 109.786, -56.2394, 0.22 ) }
    dend_16 { pt3dadd( 18.8574, 110.446, -56.3832, 0.44 ) }
    dend_16 { pt3dadd( 18.8182, 110.887, -56.4638, 0.59 ) }
    dend_16 { pt3dadd( 18.7836, 111.525, -56.5735, 0.37 ) }
    dend_16 { pt3dadd( 18.7704, 112.153, -56.6714, 0.29 ) }
    dend_16 { pt3dadd( 18.7841, 112.898, -56.7704, 0.44 ) }
    dend_16 { pt3dadd( 18.8486, 113.604, -56.86, 0.29 ) }
    dend_16 { pt3dadd( 19.0233, 114.386, -56.9785, 0.66 ) }
    dend_16 { pt3dadd( 19.1496, 114.862, -57.0722, 1.03 ) }
    dend_16 { pt3dadd( 19.2384, 115.162, -57.1411, 1.25 ) }
    dend_16 { pt3dadd( 19.4068, 115.754, -57.3021, 0.44 ) }
    dend_16 { pt3dadd( 19.6298, 116.653, -57.5892, 0.52 ) }
    dend_16 { pt3dadd( 19.8399, 117.699, -57.9739, 0.29 ) }
    dend_16 { pt3dadd( 20.0324, 118.938, -58.4602, 0.29 ) }
    dend_16 { pt3dadd( 20.0445, 119.028, -58.4937, 0.29 ) }
    dend_16 { pt3dadd( 20.1181, 119.592, -58.7009, 0.29 ) }
    dend_16 { pt3dadd( 20.2457, 120.381, -58.9473, 0.81 ) }
    dend_16 { pt3dadd( 20.2589, 120.453, -58.9622, 0.81 ) }
    dend_16 { pt3dadd( 20.3834, 120.924, -59.0271, 0.88 ) }
    dend_16 { pt3dadd( 20.6669, 121.619, -59.1435, 0.88 ) }
    dend_16 { pt3dadd( 20.9234, 122.222, -59.2694, 0.44 ) }
    dend_16 { pt3dadd( 21.2678, 123.023, -59.4641, 0.22 ) }
    dend_16 { pt3dadd( 21.6029, 123.794, -59.7318, 0.22 ) }
    dend_16 { pt3dadd( 22.0053, 124.754, -60.1432, 0.81 ) }
    dend_16 { pt3dadd( 22.2942, 125.518, -60.5282, 0.88 ) }
    dend_16 { pt3dadd( 22.4562, 126.048, -60.8186, 0.96 ) }
    dend_16 { pt3dadd( 22.5686, 126.498, -61.0699, 0.96 ) }
    dend_16 { pt3dadd( 22.7941, 127.602, -61.7306, 0.44 ) }
    dend_16 { pt3dadd( 22.8063, 127.664, -61.7654, 0.44 ) }
    dend_16 { pt3dadd( 22.9079, 128.281, -62.0361, 0.44 ) }
    dend_16 { pt3dadd( 23.0397, 129.152, -62.3568, 0.66 ) }
    dend_16 { pt3dadd( 23.0619, 129.298, -62.4067, 0.66 ) }
    dend_16 { pt3dadd( 23.137, 129.7, -62.5677, 0.88 ) }
    dend_16 { pt3dadd( 23.2731, 130.387, -62.8523, 0.52 ) }
    dend_16 { pt3dadd( 23.4276, 131.0, -63.1332, 0.37 ) }
    dend_16 { pt3dadd( 23.817, 132.378, -63.857, 1.11 ) }
    dend_16 { pt3dadd( 23.9056, 132.702, -64.0494, 1.25 ) }
    dend_16 { pt3dadd( 24.2017, 133.975, -64.8589, 0.22 ) }
    dend_16 { pt3dadd( 24.2115, 134.034, -64.901, 0.22 ) }
    dend_16 { pt3dadd( 24.2475, 134.453, -65.2618, 0.22 ) }
    dend_16 { pt3dadd( 24.2452, 134.952, -65.7377, 0.22 ) }
    dend_16 { pt3dadd( 24.1946, 135.273, -66.0383, 0.74 ) }
    dend_16 { pt3dadd( 24.129, 135.573, -66.3206, 1.03 ) }
    dend_16 { pt3dadd( 23.9967, 136.032, -66.726, 0.81 ) }
    dend_16 { pt3dadd( 23.7891, 136.829, -67.423, 0.52 ) }
    dend_16 { pt3dadd( 23.7417, 137.106, -67.6977, 0.37 ) }
    dend_16 { pt3dadd( 23.7141, 137.641, -68.2612, 0.29 ) }
    dend_16 { pt3dadd( 23.7397, 138.194, -68.8268, 0.59 ) }
    dend_16 { pt3dadd( 23.7889, 138.541, -69.1458, 0.96 ) }
    dend_16 { pt3dadd( 23.8636, 138.891, -69.4303, 1.11 ) }
    dend_16 { pt3dadd( 24.0928, 139.994, -70.1774, 0.37 ) }
    dend_16 { pt3dadd( 24.1052, 140.055, -70.2159, 0.37 ) }
    dend_16 { pt3dadd( 24.1961, 140.729, -70.5956, 0.29 ) }
    dend_16 { pt3dadd( 24.201, 141.43, -70.9067, 0.29 ) }
    dend_16 { pt3dadd( 24.1908, 141.497, -70.9326, 0.29 ) }
    dend_16 { pt3dadd( 23.9768, 142.182, -71.1672, 0.37 ) }
    dend_16 { pt3dadd( 23.8394, 142.528, -71.26, 0.59 ) }
    dend_16 { pt3dadd( 23.5493, 143.232, -71.4457, 0.74 ) }
    dend_16 { pt3dadd( 23.2972, 143.804, -71.5994, 0.52 ) }
    dend_16 { pt3dadd( 22.9218, 144.678, -71.8246, 0.22 ) }
    dend_16 { pt3dadd( 22.6913, 145.299, -71.9681, 0.22 ) }
    dend_16 { pt3dadd( 22.5447, 145.8, -72.0973, 0.22 ) }
    dend_16 { pt3dadd( 22.3774, 146.536, -72.3126, 0.74 ) }
    dend_16 { pt3dadd( 22.2731, 147.174, -72.5186, 0.88 ) }
    dend_16 { pt3dadd( 22.2036, 147.752, -72.7241, 0.74 ) }
    dend_16 { pt3dadd( 22.1378, 148.466, -72.988, 0.66 ) }
    dend_16 { pt3dadd( 22.019, 149.654, -73.4587, 0.29 ) }
    dend_16 { pt3dadd( 21.9189, 150.446, -73.7972, 0.29 ) }
    dend_16 { pt3dadd( 21.8674, 150.861, -73.9799, 0.44 ) }
    dend_16 { pt3dadd( 21.8503, 151.004, -74.0419, 0.44 ) }
    dend_16 { pt3dadd( 21.8028, 151.423, -74.205, 0.44 ) }
    dend_16 { pt3dadd( 21.7605, 151.83, -74.3328, 0.29 ) }
    dend_16 { pt3dadd( 21.7288, 152.249, -74.4126, 0.74 ) }
    dend_16 { pt3dadd( 21.7275, 152.854, -74.4852, 0.96 ) }
    dend_16 { pt3dadd( 21.7431, 153.166, -74.5106, 0.88 ) }
    dend_16 { pt3dadd( 21.8044, 153.921, -74.5561, 0.29 ) }
    dend_16 { pt3dadd( 21.8588, 154.439, -74.5788, 0.44 ) }
    dend_16 { pt3dadd( 21.9363, 155.104, -74.6012, 0.29 ) }
    dend_16 { pt3dadd( 22.021, 156.072, -74.6465, 0.37 ) }
    dend_16 { pt3dadd( 22.0549, 156.482, -74.6649, 0.59 ) }
    dend_16 { pt3dadd( 22.1168, 157.085, -74.6848, 0.74 ) }
    dend_16 { pt3dadd( 22.154, 157.463, -74.6981, 0.52 ) }
    dend_16 { pt3dadd( 22.1942, 157.933, -74.706, 0.37 ) }
    dend_16 { pt3dadd( 22.2535, 159.047, -74.6894, 0.52 ) }
    dend_16 { pt3dadd( 22.2832, 159.965, -74.6516, 0.44 ) }
    dend_16 { pt3dadd( 22.3179, 161.314, -74.5692, 0.88 ) }
    dend_16 { pt3dadd( 22.3351, 161.854, -74.5261, 1.25 ) }
    dend_16 { pt3dadd( 22.3486, 162.397, -74.4816, 1.03 ) }
    dend_16 { pt3dadd( 22.3654, 163.251, -74.4078, 0.29 ) }
    dend_16 { pt3dadd( 22.3685, 163.991, -74.3493, 0.44 ) }
    dend_16 { pt3dadd( 22.3311, 164.821, -74.3411, 0.37 ) }
    dend_16 { pt3dadd( 22.269, 165.611, -74.3891, 0.74 ) }
    dend_16 { pt3dadd( 22.2031, 166.428, -74.4914, 0.74 ) }
    dend_16 { pt3dadd( 22.1964, 166.499, -74.5059, 0.74 ) }
    dend_16 { pt3dadd( 22.1022, 167.291, -74.7168, 0.74 ) }
    dend_16 { pt3dadd( 21.9717, 168.157, -74.9705, 0.22 ) }
    dend_16 { pt3dadd( 21.9018, 168.606, -75.1026, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( 21.8231, 169.109, -75.2453, 0.96 ) }
    dend_16 { pt3dadd( 21.7059, 169.897, -75.4525, 0.22 ) }
    dend_16 { pt3dadd( 21.6203, 170.545, -75.602, 0.66 ) }
    dend_16 { pt3dadd( 21.5564, 171.138, -75.7127, 1.03 ) }
    dend_16 { pt3dadd( 21.4622, 171.973, -75.797, 0.81 ) }
    dend_16 { pt3dadd( 21.3417, 172.881, -75.8553, 0.52 ) }
    dend_16 { pt3dadd( 21.2638, 173.395, -75.8887, 0.44 ) }
    dend_16 { pt3dadd( 21.0769, 174.457, -75.9701, 0.37 ) }
    dend_16 { pt3dadd( 20.8861, 175.389, -76.0586, 0.88 ) }
    dend_16 { pt3dadd( 20.6685, 176.406, -76.165, 1.25 ) }
    dend_16 { pt3dadd( 20.547, 177.003, -76.2292, 0.88 ) }
    dend_16 { pt3dadd( 20.4083, 177.811, -76.3156, 0.44 ) }
    dend_16 { pt3dadd( 20.2733, 178.69, -76.4238, 0.59 ) }
    dend_16 { pt3dadd( 20.2067, 179.212, -76.4973, 0.81 ) }
    dend_16 { pt3dadd( 20.1544, 179.792, -76.5896, 0.59 ) }
    dend_16 { pt3dadd( 20.1228, 180.525, -76.7147, 0.37 ) }
    dend_16 { pt3dadd( 20.099, 181.728, -76.866, 0.52 ) }
    dend_16 { pt3dadd( 20.078, 182.5, -76.9362, 0.37 ) }
    dend_16 { pt3dadd( 20.06, 182.856, -76.972, 0.74 ) }
    dend_16 { pt3dadd( 20.0017, 183.379, -77.0422, 0.88 ) }
    dend_16 { pt3dadd( 19.9497, 183.658, -77.1066, 0.88 ) }
    dend_16 { pt3dadd( 19.864, 184.15, -77.2992, 1.11 ) }
    dend_16 { pt3dadd( 19.8191, 184.647, -77.5365, 1.03 ) }
    dend_16 { pt3dadd( 19.8075, 185.118, -77.778, 0.37 ) }
    dend_16 { pt3dadd( 19.8222, 185.684, -78.0726, 0.37 ) }
    dend_16 { pt3dadd( 19.9117, 186.542, -78.5203, 0.66 ) }
    dend_16 { pt3dadd( 20.103, 187.866, -79.1788, 0.29 ) }
    dend_16 { pt3dadd( 20.2489, 188.748, -79.5905, 0.52 ) }
    dend_16 { pt3dadd( 20.2592, 188.807, -79.6161, 0.52 ) }
    dend_16 { pt3dadd( 20.3429, 189.304, -79.8074, 0.66 ) }
    dend_16 { pt3dadd( 20.4636, 190.181, -80.0866, 0.37 ) }
    dend_16 { pt3dadd( 20.5466, 191.181, -80.3367, 0.66 ) }
    dend_16 { pt3dadd( 20.562, 191.918, -80.4868, 0.59 ) }
    dend_16 { pt3dadd( 20.5438, 192.447, -80.5781, 0.74 ) }
    dend_16 { pt3dadd( 20.4933, 193.152, -80.6721, 0.37 ) }
    dend_16 { pt3dadd( 20.3561, 194.115, -80.6943, 0.59 ) }
    dend_16 { pt3dadd( 20.3274, 194.259, -80.6842, 0.59 ) }
    dend_16 { pt3dadd( 20.2055, 194.824, -80.621, 0.37 ) }
    dend_16 { pt3dadd( 19.9574, 195.946, -80.4687, 0.29 ) }
    dend_16 { pt3dadd( 19.7525, 196.91, -80.3494, 0.52 ) }
    dend_16 { pt3dadd( 19.4317, 198.452, -80.1727, 0.22 ) }
    dend_16 { pt3dadd( 19.2672, 199.407, -80.0759, 0.52 ) }
    dend_16 { pt3dadd( 19.1876, 199.91, -80.0484, 0.81 ) }
    dend_16 { pt3dadd( 19.0964, 200.49, -80.06, 0.52 ) }
    dend_16 { pt3dadd( 18.9579, 201.508, -80.1816, 0.74 ) }
    dend_16 { pt3dadd( 18.9477, 201.578, -80.198, 0.74 ) }
    dend_16 { pt3dadd( 18.7862, 202.475, -80.5308, 1.33 ) }
    dend_16 { pt3dadd( 18.617, 203.16, -80.8076, 0.88 ) }
    dend_16 { pt3dadd( 18.374, 203.924, -81.1327, 0.66 ) }
    dend_16 { pt3dadd( 18.0813, 204.648, -81.4489, 0.52 ) }
    dend_16 { pt3dadd( 17.7, 205.48, -81.8261, 0.52 ) }
    dend_16 { pt3dadd( 17.3713, 206.152, -82.1454, 0.52 ) }
    dend_16 { pt3dadd( 16.9697, 206.888, -82.5255, 0.29 ) }
    dend_16 { pt3dadd( 16.6989, 207.405, -82.7855, 0.52 ) }
    dend_16 { pt3dadd( 16.4367, 207.887, -83.0277, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 23.7024, 55.115, 11.0405, 0.59 ) }
    dend_11 { pt3dadd( 25.5431, 55.6043, 8.32356, 0.59 ) }
    dend_11 { pt3dadd( 26.5333, 55.8934, 7.05181, 0.74 ) }
    dend_11 { pt3dadd( 26.5763, 55.9066, 7.00154, 0.74 ) }
    dend_11 { pt3dadd( 27.0253, 56.061, 6.52544, 0.74 ) }
    dend_11 { pt3dadd( 27.7899, 56.3128, 5.82068, 0.96 ) }
    dend_11 { pt3dadd( 27.8405, 56.3263, 5.77822, 0.96 ) }
    dend_11 { pt3dadd( 28.4585, 56.4424, 5.48199, 0.96 ) }
    dend_11 { pt3dadd( 28.519, 56.4513, 5.45347, 0.96 ) }
    dend_11 { pt3dadd( 29.6773, 56.6328, 4.85436, 0.52 ) }
    dend_11 { pt3dadd( 30.4261, 56.759, 4.4313, 0.52 ) }
    dend_11 { pt3dadd( 31.4321, 56.9378, 3.84607, 0.81 ) }
    dend_11 { pt3dadd( 31.9822, 57.0453, 3.53342, 0.88 ) }
    dend_11 { pt3dadd( 32.9376, 57.2165, 2.96283, 0.52 ) }
    dend_11 { pt3dadd( 33.2258, 57.2718, 2.79957, 0.74 ) }
    dend_11 { pt3dadd( 33.3354, 57.2958, 2.7246, 0.74 ) }
    dend_11 { pt3dadd( 33.7222, 57.4105, 2.40138, 0.29 ) }
    dend_11 { pt3dadd( 34.1935, 57.5899, 1.96857, 0.59 ) }
    dend_11 { pt3dadd( 34.9832, 57.9368, 1.07178, 0.74 ) }
    dend_11 { pt3dadd( 35.4155, 58.143, 0.543734, 0.59 ) }
    dend_11 { pt3dadd( 36.4263, 58.6539, -0.789814, 1.03 ) }
    dend_11 { pt3dadd( 36.4881, 58.6879, -0.872618, 1.03 ) }
    dend_11 { pt3dadd( 36.6838, 58.8059, -1.14528, 0.74 ) }
    dend_11 { pt3dadd( 37.4702, 59.3621, -2.26475, 0.44 ) }
    dend_11 { pt3dadd( 37.767, 59.6085, -2.66394, 0.59 ) }
    dend_11 { pt3dadd( 38.3363, 60.0717, -3.35552, 0.66 ) }
    dend_11 { pt3dadd( 38.7151, 60.3575, -3.70049, 0.74 ) }
    dend_11 { pt3dadd( 38.7591, 60.3885, -3.73763, 0.74 ) }
    dend_11 { pt3dadd( 38.9278, 60.5018, -3.86545, 0.74 ) }
    dend_11 { pt3dadd( 38.9701, 60.5296, -3.8909, 0.74 ) }
    dend_11 { pt3dadd( 39.8616, 61.1779, -4.58018, 0.29 ) }
    dend_11 { pt3dadd( 40.087, 61.4037, -4.84469, 0.66 ) }
    dend_11 { pt3dadd( 40.1417, 61.4808, -4.94627, 0.66 ) }
    dend_11 { pt3dadd( 40.2662, 61.657, -5.22594, 0.88 ) }
    dend_11 { pt3dadd( 40.2856, 61.6892, -5.29064, 0.88 ) }
    dend_11 { pt3dadd( 40.5939, 62.3164, -6.63349, 0.29 ) }
    dend_11 { pt3dadd( 40.8046, 62.8547, -7.8414, 0.29 ) }
    dend_11 { pt3dadd( 41.0188, 63.4879, -9.32533, 1.11 ) }
    dend_11 { pt3dadd( 41.1946, 64.0777, -10.7528, 0.96 ) }
    dend_11 { pt3dadd( 41.4648, 65.205, -13.4622, 0.66 ) }
    dend_11 { pt3dadd( 41.5047, 65.4268, -13.9842, 0.66 ) }
    dend_11 { pt3dadd( 41.5114, 65.5025, -14.1524, 0.66 ) }
    dend_11 { pt3dadd( 41.5367, 65.917, -14.9903, 0.59 ) }
    dend_11 { pt3dadd( 41.5405, 65.9973, -15.1209, 0.59 ) }
    dend_11 { pt3dadd( 41.5687, 66.7735, -16.0064, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 41.5756, 66.8112, -16.0359, 0.52 ) }
    dend_11 { pt3dadd( 41.6922, 67.2269, -16.3478, 0.96 ) }
    dend_11 { pt3dadd( 41.8673, 67.7228, -16.6876, 1.11 ) }
    dend_11 { pt3dadd( 42.3069, 68.7596, -17.299, 0.29 ) }
    dend_11 { pt3dadd( 42.3316, 68.8037, -17.3274, 0.29 ) }
    dend_11 { pt3dadd( 42.5712, 69.0821, -17.5598, 0.52 ) }
    dend_11 { pt3dadd( 42.6051, 69.1139, -17.5929, 0.52 ) }
    dend_11 { pt3dadd( 42.7382, 69.2201, -17.7221, 0.74 ) }
    dend_11 { pt3dadd( 42.7764, 69.2522, -17.7643, 0.74 ) }
    dend_11 { pt3dadd( 43.3512, 69.8428, -18.4168, 0.74 ) }
    dend_11 { pt3dadd( 43.7945, 70.4315, -18.9741, 0.59 ) }
    dend_11 { pt3dadd( 43.8216, 70.476, -19.0122, 0.59 ) }
    dend_11 { pt3dadd( 44.0523, 70.8973, -19.324, 0.29 ) }
    dend_11 { pt3dadd( 44.3923, 71.6128, -19.7706, 0.29 ) }
    dend_11 { pt3dadd( 44.6372, 72.2146, -20.1061, 0.88 ) }
    dend_11 { pt3dadd( 44.7515, 72.5703, -20.2557, 1.11 ) }
    dend_11 { pt3dadd( 44.7664, 72.6205, -20.2744, 1.11 ) }
    dend_11 { pt3dadd( 44.9393, 73.1203, -20.4599, 0.88 ) }
    dend_11 { pt3dadd( 45.0286, 73.313, -20.5469, 0.52 ) }
    dend_11 { pt3dadd( 45.4748, 74.0318, -20.8979, 0.37 ) }
    dend_11 { pt3dadd( 45.9134, 74.6242, -21.2342, 0.22 ) }
    dend_11 { pt3dadd( 45.951, 74.6707, -21.2621, 0.22 ) }
    dend_11 { pt3dadd( 46.1888, 74.9747, -21.4368, 0.74 ) }
    dend_11 { pt3dadd( 46.6885, 75.6853, -21.8761, 0.88 ) }
    dend_11 { pt3dadd( 46.9357, 76.0351, -22.0891, 0.22 ) }
    dend_11 { pt3dadd( 47.1894, 76.348, -22.3045, 0.29 ) }
    dend_11 { pt3dadd( 47.2282, 76.3882, -22.3373, 0.29 ) }
    dend_11 { pt3dadd( 47.5427, 76.6746, -22.675, 0.29 ) }
    dend_11 { pt3dadd( 48.1787, 77.1554, -23.5106, 0.88 ) }
    dend_11 { pt3dadd( 48.4195, 77.3084, -23.8357, 1.18 ) }
    dend_11 { pt3dadd( 49.1649, 77.7218, -24.8679, 0.29 ) }
    dend_11 { pt3dadd( 49.5005, 77.8929, -25.3328, 0.88 ) }
    dend_11 { pt3dadd( 50.6438, 78.4775, -26.8868, 1.33 ) }
    dend_11 { pt3dadd( 51.5903, 78.9428, -28.1296, 0.52 ) }
    dend_11 { pt3dadd( 51.9146, 79.1074, -28.5405, 1.25 ) }
    dend_11 { pt3dadd( 51.9482, 79.1275, -28.5828, 1.25 ) }
    dend_11 { pt3dadd( 52.6932, 79.6878, -29.5164, 0.29 ) }
    dend_11 { pt3dadd( 53.0495, 80.0023, -29.9402, 0.29 ) }
    dend_11 { pt3dadd( 53.3711, 80.3362, -30.2293, 0.59 ) }
    dend_11 { pt3dadd( 53.5439, 80.5362, -30.374, 0.96 ) }
    dend_11 { pt3dadd( 53.8975, 80.9428, -30.6732, 0.96 ) }
    dend_11 { pt3dadd( 54.4875, 81.5498, -31.1477, 0.59 ) }
    dend_11 { pt3dadd( 54.5302, 81.5881, -31.1783, 0.59 ) }
    dend_11 { pt3dadd( 54.8698, 81.8737, -31.4116, 0.29 ) }
    dend_11 { pt3dadd( 55.351, 82.2896, -31.7218, 0.44 ) }
    dend_11 { pt3dadd( 55.6434, 82.5488, -31.896, 0.66 ) }
    dend_11 { pt3dadd( 56.0693, 82.9699, -32.1541, 0.29 ) }
    dend_11 { pt3dadd( 56.3445, 83.2517, -32.2988, 0.22 ) }
    dend_11 { pt3dadd( 56.7041, 83.6307, -32.4948, 0.66 ) }
    dend_11 { pt3dadd( 56.8966, 83.8324, -32.5986, 0.74 ) }
    dend_11 { pt3dadd( 57.0946, 84.0487, -32.7015, 0.59 ) }
    dend_11 { pt3dadd( 57.8026, 84.7669, -33.0522, 0.22 ) }
    dend_11 { pt3dadd( 58.1336, 85.0202, -33.212, 0.44 ) }
    dend_11 { pt3dadd( 58.1888, 85.0479, -33.2382, 0.44 ) }
    dend_11 { pt3dadd( 58.511, 85.1552, -33.3783, 0.59 ) }
    dend_11 { pt3dadd( 58.5621, 85.1693, -33.4012, 0.59 ) }
    dend_11 { pt3dadd( 59.0606, 85.285, -33.6201, 0.59 ) }
    dend_11 { pt3dadd( 59.8683, 85.4624, -33.9505, 0.22 ) }
    dend_11 { pt3dadd( 60.3028, 85.5924, -34.1347, 0.59 ) }
    dend_11 { pt3dadd( 60.5887, 85.6944, -34.2535, 0.66 ) }
    dend_11 { pt3dadd( 61.1228, 85.933, -34.519, 0.66 ) }
    dend_11 { pt3dadd( 61.1701, 85.9585, -34.5439, 0.66 ) }
    dend_11 { pt3dadd( 61.7814, 86.3582, -34.8989, 0.22 ) }
    dend_11 { pt3dadd( 62.209, 86.6758, -35.1462, 0.66 ) }
    dend_11 { pt3dadd( 62.3979, 86.8232, -35.259, 0.96 ) }
    dend_11 { pt3dadd( 63.3829, 87.6148, -35.8436, 0.22 ) }
    dend_11 { pt3dadd( 63.722, 87.8943, -36.0763, 0.22 ) }
    dend_11 { pt3dadd( 64.214, 88.3192, -36.539, 0.59 ) }
    dend_11 { pt3dadd( 64.4412, 88.5287, -36.8287, 0.96 ) }
    dend_11 { pt3dadd( 64.5481, 88.6257, -36.9843, 1.18 ) }
    dend_11 { pt3dadd( 64.5767, 88.6503, -37.0276, 1.18 ) }
    dend_11 { pt3dadd( 65.3563, 89.2111, -38.104, 0.44 ) }
    dend_11 { pt3dadd( 66.0301, 89.6024, -38.942, 0.37 ) }
    dend_11 { pt3dadd( 66.5599, 89.8619, -39.5361, 0.29 ) }
    dend_11 { pt3dadd( 66.8931, 90.0097, -39.8678, 0.44 ) }
    dend_11 { pt3dadd( 67.1421, 90.1221, -40.0997, 0.44 ) }
    dend_11 { pt3dadd( 67.8689, 90.452, -40.6649, 0.22 ) }
    dend_11 { pt3dadd( 68.4303, 90.6693, -40.9749, 0.81 ) }
    dend_11 { pt3dadd( 68.5375, 90.706, -41.024, 0.81 ) }
    dend_11 { pt3dadd( 68.8894, 90.803, -41.1765, 0.96 ) }
    dend_11 { pt3dadd( 70.2395, 91.1315, -41.7644, 0.37 ) }
    dend_11 { pt3dadd( 71.016, 91.3323, -42.1078, 0.37 ) }
    dend_11 { pt3dadd( 71.7517, 91.5554, -42.4945, 0.29 ) }
    dend_11 { pt3dadd( 71.7932, 91.567, -42.5195, 0.29 ) }
    dend_11 { pt3dadd( 72.3224, 91.7017, -42.855, 0.29 ) }
    dend_11 { pt3dadd( 72.7325, 91.7992, -43.1126, 0.74 ) }
    dend_11 { pt3dadd( 73.2607, 91.9172, -43.3771, 1.03 ) }
    dend_11 { pt3dadd( 74.2207, 92.1524, -43.8351, 0.88 ) }
    dend_11 { pt3dadd( 75.5301, 92.5066, -44.2801, 0.29 ) }
    dend_11 { pt3dadd( 75.9904, 92.617, -44.3738, 0.44 ) }
    dend_11 { pt3dadd( 76.6475, 92.7465, -44.4312, 0.29 ) }
    dend_11 { pt3dadd( 77.7066, 92.8883, -44.3999, 1.33 ) }
    dend_11 { pt3dadd( 78.0893, 92.9113, -44.3405, 1.69 ) }
    dend_11 { pt3dadd( 79.3482, 92.944, -43.9976, 0.29 ) }
    dend_11 { pt3dadd( 79.8889, 92.9511, -43.8079, 0.29 ) }
    dend_11 { pt3dadd( 80.2192, 92.944, -43.7003, 0.66 ) }
    dend_11 { pt3dadd( 80.2692, 92.941, -43.6871, 0.66 ) }
    dend_11 { pt3dadd( 80.6463, 92.9104, -43.6381, 0.66 ) }
    dend_11 { pt3dadd( 81.3082, 92.8355, -43.6093, 0.22 ) }
    dend_11 { pt3dadd( 81.7163, 92.7535, -43.6315, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 81.7818, 92.7384, -43.6326, 0.44 ) }
    dend_11 { pt3dadd( 82.2638, 92.6132, -43.6267, 0.44 ) }
    dend_11 { pt3dadd( 82.3114, 92.6011, -43.6326, 0.44 ) }
    dend_11 { pt3dadd( 82.9233, 92.4637, -43.7573, 0.29 ) }
    dend_11 { pt3dadd( 83.5878, 92.319, -43.9683, 0.29 ) }
    dend_11 { pt3dadd( 84.0756, 92.2161, -44.1615, 0.74 ) }
    dend_11 { pt3dadd( 84.3426, 92.1623, -44.2772, 0.96 ) }
    dend_11 { pt3dadd( 85.7343, 91.9106, -44.9647, 0.37 ) }
    dend_11 { pt3dadd( 86.0409, 91.868, -45.1342, 1.03 ) }
    dend_11 { pt3dadd( 86.7864, 91.8218, -45.6359, 1.03 ) }
    dend_11 { pt3dadd( 87.1143, 91.8251, -45.9024, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 23.7024, 55.115, 11.0405, 0.88 ) }
    dend_4 { pt3dadd( 24.0604, 56.341, 12.9472, 0.88 ) }
    dend_4 { pt3dadd( 24.3103, 56.9723, 13.7708, 0.66 ) }
    dend_4 { pt3dadd( 24.4537, 57.3595, 14.1907, 0.66 ) }
    dend_4 { pt3dadd( 24.467, 57.399, 14.2266, 0.66 ) }
    dend_4 { pt3dadd( 24.6179, 57.9001, 14.5946, 0.66 ) }
    dend_4 { pt3dadd( 24.6312, 57.9463, 14.6236, 0.66 ) }
    dend_4 { pt3dadd( 24.8076, 58.5836, 14.8652, 0.74 ) }
    dend_4 { pt3dadd( 25.0054, 59.6412, 15.2345, 0.44 ) }
    dend_4 { pt3dadd( 25.0663, 60.1251, 15.4122, 0.37 ) }
    dend_4 { pt3dadd( 25.1351, 60.8208, 15.6799, 0.37 ) }
    dend_4 { pt3dadd( 25.1612, 61.148, 15.808, 0.59 ) }
    dend_4 { pt3dadd( 25.225, 61.9262, 16.1075, 0.59 ) }
    dend_4 { pt3dadd( 25.2809, 62.4879, 16.3179, 0.59 ) }
    dend_4 { pt3dadd( 25.3334, 62.7384, 16.4026, 0.88 ) }
    dend_4 { pt3dadd( 25.349, 62.7926, 16.4265, 0.88 ) }
    dend_4 { pt3dadd( 25.498, 63.2857, 16.7296, 1.18 ) }
    dend_4 { pt3dadd( 25.5233, 63.3794, 16.8006, 1.18 ) }
    dend_4 { pt3dadd( 25.5857, 63.6619, 17.0384, 0.88 ) }
    dend_4 { pt3dadd( 25.7051, 64.2722, 17.5704, 0.44 ) }
    dend_4 { pt3dadd( 25.8596, 64.9767, 18.179, 0.74 ) }
    dend_4 { pt3dadd( 26.07, 65.8869, 18.9776, 1.33 ) }
    dend_4 { pt3dadd( 26.2682, 66.7113, 19.6924, 0.96 ) }
    dend_4 { pt3dadd( 26.479, 67.561, 20.4052, 0.52 ) }
    dend_4 { pt3dadd( 26.6097, 68.0927, 20.8223, 0.44 ) }
    dend_4 { pt3dadd( 26.7703, 68.8081, 21.3643, 0.37 ) }
    dend_4 { pt3dadd( 26.8933, 69.5485, 21.8957, 0.37 ) }
    dend_4 { pt3dadd( 26.9393, 70.0487, 22.252, 0.37 ) }
    dend_4 { pt3dadd( 26.9369, 70.1841, 22.3495, 0.37 ) }
    dend_4 { pt3dadd( 26.8711, 70.6421, 22.7041, 0.59 ) }
    dend_4 { pt3dadd( 26.579, 71.6691, 23.54, 0.88 ) }
    dend_4 { pt3dadd( 26.258, 72.4491, 24.1877, 0.88 ) }
    dend_4 { pt3dadd( 25.9598, 73.0593, 24.6748, 0.52 ) }
    dend_4 { pt3dadd( 25.7597, 73.4291, 24.9741, 0.52 ) }
    dend_4 { pt3dadd( 25.7423, 73.4637, 25.0001, 0.52 ) }
    dend_4 { pt3dadd( 25.6236, 73.7788, 25.1863, 0.52 ) }
    dend_4 { pt3dadd( 25.6231, 73.8314, 25.1969, 0.52 ) }
    dend_4 { pt3dadd( 25.7163, 74.1787, 25.2078, 0.74 ) }
    dend_4 { pt3dadd( 25.7458, 74.2538, 25.2061, 0.74 ) }
    dend_4 { pt3dadd( 25.9611, 74.7136, 25.2041, 0.37 ) }
    dend_4 { pt3dadd( 26.3014, 75.3948, 25.205, 0.44 ) }
    dend_4 { pt3dadd( 26.6222, 75.9515, 25.1792, 0.44 ) }
    dend_4 { pt3dadd( 26.9014, 76.4021, 25.1411, 0.74 ) }
    dend_4 { pt3dadd( 26.9614, 76.4915, 25.1307, 0.74 ) }
    dend_4 { pt3dadd( 27.3424, 77.0566, 25.0364, 0.74 ) }
    dend_4 { pt3dadd( 27.3725, 77.1006, 25.0272, 0.74 ) }
    dend_4 { pt3dadd( 27.8098, 77.7599, 24.8729, 0.66 ) }
    dend_4 { pt3dadd( 27.8384, 77.8063, 24.862, 0.66 ) }
    dend_4 { pt3dadd( 28.0796, 78.2166, 24.7836, 0.74 ) }
    dend_4 { pt3dadd( 28.4879, 78.9658, 24.6672, 0.29 ) }
    dend_4 { pt3dadd( 28.7073, 79.4314, 24.6368, 0.44 ) }
    dend_4 { pt3dadd( 28.933, 79.9846, 24.6439, 0.22 ) }
    dend_4 { pt3dadd( 29.0697, 80.4097, 24.6851, 0.66 ) }
    dend_4 { pt3dadd( 29.1579, 80.737, 24.7251, 0.66 ) }
    dend_4 { pt3dadd( 29.1688, 80.7979, 24.7342, 0.66 ) }
    dend_4 { pt3dadd( 29.279, 81.5722, 24.9017, 0.44 ) }
    dend_4 { pt3dadd( 29.2902, 81.6253, 24.9122, 0.44 ) }
    dend_4 { pt3dadd( 29.3715, 81.8881, 24.9578, 0.52 ) }
    dend_4 { pt3dadd( 29.4318, 82.0462, 24.974, 0.52 ) }
    dend_4 { pt3dadd( 29.5625, 82.3519, 24.9806, 0.52 ) }
    dend_4 { pt3dadd( 29.8509, 83.025, 24.9524, 0.29 ) }
    dend_4 { pt3dadd( 30.1, 83.6728, 24.8926, 0.29 ) }
    dend_4 { pt3dadd( 30.1122, 83.717, 24.8883, 0.29 ) }
    dend_4 { pt3dadd( 30.2074, 84.2137, 24.839, 0.44 ) }
    dend_4 { pt3dadd( 30.2233, 84.3871, 24.8204, 0.44 ) }
    dend_4 { pt3dadd( 30.2044, 84.932, 24.7867, 0.44 ) }
    dend_4 { pt3dadd( 30.1219, 85.4449, 24.7688, 0.59 ) }
    dend_4 { pt3dadd( 30.032, 85.9017, 24.8043, 0.74 ) }
    dend_4 { pt3dadd( 30.0234, 85.9615, 24.8138, 0.74 ) }
    dend_4 { pt3dadd( 30.0018, 86.4046, 24.9212, 0.74 ) }
    dend_4 { pt3dadd( 30.0274, 87.0656, 25.2234, 0.52 ) }
    dend_4 { pt3dadd( 30.0333, 87.1119, 25.2515, 0.52 ) }
    dend_4 { pt3dadd( 30.1291, 87.6395, 25.586, 0.44 ) }
    dend_4 { pt3dadd( 30.1765, 87.9371, 25.7859, 0.29 ) }
    dend_4 { pt3dadd( 30.2292, 88.4214, 26.0923, 0.29 ) }
    dend_4 { pt3dadd( 30.2526, 89.4712, 26.7928, 0.29 ) }
    dend_4 { pt3dadd( 30.245, 89.8625, 27.0409, 0.37 ) }
    dend_4 { pt3dadd( 30.2308, 90.4023, 27.368, 0.44 ) }
    dend_4 { pt3dadd( 30.1957, 91.1911, 27.8221, 0.96 ) }
    dend_4 { pt3dadd( 30.1842, 91.6789, 28.1008, 1.25 ) }
    dend_4 { pt3dadd( 30.2393, 92.8818, 28.8231, 0.52 ) }
    dend_4 { pt3dadd( 30.3155, 93.3747, 29.1073, 0.52 ) }
    dend_4 { pt3dadd( 30.4217, 93.7763, 29.3634, 0.66 ) }
    dend_4 { pt3dadd( 30.4409, 93.8246, 29.3981, 0.66 ) }
    dend_4 { pt3dadd( 30.6802, 94.2659, 29.7071, 0.44 ) }
    dend_4 { pt3dadd( 31.074, 94.8993, 30.1349, 0.29 ) }
    dend_4 { pt3dadd( 31.199, 95.1193, 30.2496, 0.52 ) }
    dend_4 { pt3dadd( 31.3695, 95.5031, 30.4429, 0.52 ) }
    dend_4 { pt3dadd( 31.5584, 96.0008, 30.6842, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 31.7103, 96.382, 30.8582, 0.29 ) }
    dend_4 { pt3dadd( 31.8336, 96.7024, 31.0272, 0.52 ) }
    dend_4 { pt3dadd( 32.1226, 97.3509, 31.3858, 0.88 ) }
    dend_4 { pt3dadd( 32.2769, 97.6591, 31.5702, 0.52 ) }
    dend_4 { pt3dadd( 32.642, 98.293, 31.9811, 0.44 ) }
    dend_4 { pt3dadd( 32.951, 98.7597, 32.2962, 0.59 ) }
    dend_4 { pt3dadd( 33.5218, 99.5182, 32.8872, 0.29 ) }
    dend_4 { pt3dadd( 33.9451, 100.025, 33.334, 0.29 ) }
    dend_4 { pt3dadd( 35.2444, 106.845, 36.5812, 0.29 ) }
    dend_4 { pt3dadd( 36.5192, 114.17, 38.1292, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -161.904, -234.372, 46.1093, 0.29 ) }
    dend_87 { pt3dadd( -162.054, -235.387, 46.2879, 0.29 ) }
    dend_87 { pt3dadd( -162.105, -235.733, 46.3487, 0.74 ) }
    dend_87 { pt3dadd( -162.201, -236.38, 46.4625, 0.29 ) }
    dend_87 { pt3dadd( -162.291, -236.988, 46.5694, 0.29 ) }
    dend_87 { pt3dadd( -162.413, -237.815, 46.7149, 0.37 ) }
    dend_87 { pt3dadd( -164.264, -246.166, 47.1522, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -161.904, -234.372, 46.1093, 0.37 ) }
    dend_68 { pt3dadd( -162.343, -234.616, 47.296, 0.37 ) }
    dend_68 { pt3dadd( -162.607, -234.74, 47.8944, 0.37 ) }
    dend_68 { pt3dadd( -163.095, -234.942, 49.0001, 0.44 ) }
    dend_68 { pt3dadd( -163.451, -235.082, 49.7585, 0.37 ) }
    dend_68 { pt3dadd( -164.174, -235.386, 51.2254, 0.88 ) }
    dend_68 { pt3dadd( -164.415, -235.515, 51.7625, 1.11 ) }
    dend_68 { pt3dadd( -164.71, -235.688, 52.4137, 0.81 ) }
    dend_68 { pt3dadd( -165.368, -236.195, 54.0209, 0.29 ) }
    dend_68 { pt3dadd( -165.588, -236.367, 54.5239, 0.29 ) }
    dend_68 { pt3dadd( -165.78, -236.521, 54.98, 0.74 ) }
    dend_68 { pt3dadd( -166.46, -237.016, 56.443, 0.44 ) }
    dend_68 { pt3dadd( -166.669, -237.161, 56.901, 0.44 ) }
    dend_68 { pt3dadd( -167.152, -237.423, 57.8699, 0.29 ) }
    dend_68 { pt3dadd( -167.642, -237.723, 58.9743, 0.29 ) }
    dend_68 { pt3dadd( -167.899, -237.924, 59.8409, 0.59 ) }
    dend_68 { pt3dadd( -168.055, -238.05, 60.4709, 0.66 ) }
    dend_68 { pt3dadd( -168.278, -238.217, 61.414, 0.44 ) }
    dend_68 { pt3dadd( -168.455, -238.374, 62.3445, 0.37 ) }
    dend_68 { pt3dadd( -168.817, -238.78, 64.725, 0.66 ) }
    dend_68 { pt3dadd( -169.124, -239.212, 67.092, 0.81 ) }
    dend_68 { pt3dadd( -169.203, -239.3, 67.6095, 0.88 ) }
    dend_68 { pt3dadd( -169.264, -239.376, 68.0763, 0.88 ) }
    dend_68 { pt3dadd( -169.274, -239.389, 68.1559, 0.88 ) }
    dend_68 { pt3dadd( -169.487, -239.586, 69.4945, 0.52 ) }
    dend_68 { pt3dadd( -169.729, -239.617, 70.111, 0.52 ) }
    dend_68 { pt3dadd( -170.707, -239.711, 71.8865, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -5.81713, -101.214, -22.466, 0.74 ) }
    dend_52 { pt3dadd( -6.06792, -102.071, -22.7697, 0.74 ) }
    dend_52 { pt3dadd( -6.21269, -102.759, -23.0564, 0.74 ) }
    dend_52 { pt3dadd( -6.35422, -103.697, -23.4636, 0.88 ) }
    dend_52 { pt3dadd( -6.41682, -104.27, -23.7184, 0.88 ) }
    dend_52 { pt3dadd( -6.51945, -105.208, -24.1362, 0.81 ) }
    dend_52 { pt3dadd( -6.65867, -106.481, -24.703, 0.88 ) }
    dend_52 { pt3dadd( -6.67956, -107.252, -25.0778, 0.88 ) }
    dend_52 { pt3dadd( -6.6649, -107.786, -25.3656, 1.33 ) }
    dend_52 { pt3dadd( -6.61083, -108.346, -25.6765, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.81713, -101.214, -22.466, 0.59 ) }
    dend_49 { pt3dadd( -5.80789, -102.07, -22.7125, 0.59 ) }
    dend_49 { pt3dadd( -5.894, -103.186, -23.1938, 0.52 ) }
    dend_49 { pt3dadd( -5.96866, -104.304, -23.74, 0.44 ) }
    dend_49 { pt3dadd( -6.02698, -105.268, -24.2341, 0.44 ) }
    dend_49 { pt3dadd( -6.05257, -106.574, -24.9011, 0.59 ) }
    dend_49 { pt3dadd( -6.04892, -108.131, -25.7232, 0.74 ) }
    dend_49 { pt3dadd( -6.03596, -109.295, -26.396, 0.59 ) }
    dend_49 { pt3dadd( -6.00882, -110.135, -26.9126, 0.59 ) }
    dend_49 { pt3dadd( -6.00295, -110.201, -26.9537, 0.59 ) }
    dend_49 { pt3dadd( -5.79988, -111.494, -27.692, 0.59 ) }
    dend_49 { pt3dadd( -5.43892, -112.878, -28.344, 0.74 ) }
    dend_49 { pt3dadd( -5.16986, -113.665, -28.6667, 0.74 ) }
    dend_49 { pt3dadd( -4.68386, -114.937, -29.1585, 0.66 ) }
    dend_49 { pt3dadd( -4.20584, -116.105, -29.5984, 0.59 ) }
    dend_49 { pt3dadd( -4.13166, -116.249, -29.6471, 0.59 ) }
    dend_49 { pt3dadd( -3.38889, -117.309, -29.9598, 0.59 ) }
    dend_49 { pt3dadd( -3.04758, -117.675, -30.0473, 0.81 ) }
    dend_49 { pt3dadd( -2.98189, -117.739, -30.0612, 0.81 ) }
    dend_49 { pt3dadd( -2.35248, -118.341, -30.1965, 0.81 ) }
    dend_49 { pt3dadd( -1.24463, -119.489, -30.5402, 0.66 ) }
    dend_49 { pt3dadd( -0.485965, -120.397, -30.8405, 0.66 ) }
    dend_49 { pt3dadd( 0.157018, -121.295, -31.0967, 0.66 ) }
    dend_49 { pt3dadd( 0.825009, -122.311, -31.308, 0.81 ) }
    dend_49 { pt3dadd( 1.31233, -123.123, -31.4382, 0.96 ) }
    dend_49 { pt3dadd( 1.96083, -124.339, -31.5909, 0.52 ) }
    dend_49 { pt3dadd( 2.41676, -125.298, -31.701, 0.52 ) }
    dend_49 { pt3dadd( 3.01415, -126.558, -31.7773, 0.81 ) }
    dend_49 { pt3dadd( 3.52557, -127.565, -31.8126, 0.81 ) }
    dend_49 { pt3dadd( 4.0104, -128.489, -31.8274, 0.81 ) }
    dend_49 { pt3dadd( 4.0509, -128.57, -31.827, 0.81 ) }
    dend_49 { pt3dadd( 4.62409, -129.817, -31.833, 0.81 ) }
    dend_49 { pt3dadd( 4.68369, -129.962, -31.8416, 0.81 ) }
    dend_49 { pt3dadd( 5.18499, -131.437, -31.9718, 0.81 ) }
    dend_49 { pt3dadd( 5.49863, -132.558, -32.0554, 0.81 ) }
    dend_49 { pt3dadd( 5.75924, -133.618, -32.0977, 0.66 ) }
    dend_49 { pt3dadd( 5.78055, -133.706, -32.0956, 0.66 ) }
    dend_49 { pt3dadd( 6.0407, -134.837, -32.0109, 0.37 ) }
    dend_49 { pt3dadd( 6.36962, -136.177, -31.8944, 0.66 ) }
    dend_49 { pt3dadd( 6.52861, -136.795, -31.8298, 0.96 ) }
    dend_49 { pt3dadd( 6.90278, -138.01, -31.6622, 0.74 ) }
    dend_49 { pt3dadd( 7.39801, -139.472, -31.4251, 0.96 ) }
    dend_49 { pt3dadd( 7.76479, -140.591, -31.2506, 0.81 ) }
    dend_49 { pt3dadd( 8.18369, -141.914, -31.0598, 0.74 ) }
    dend_49 { pt3dadd( 8.20008, -141.979, -31.0546, 0.74 ) }
    dend_49 { pt3dadd( 8.48004, -143.366, -31.0466, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 8.49383, -143.444, -31.0554, 0.74 ) }
    dend_49 { pt3dadd( 8.68672, -144.777, -31.5185, 0.44 ) }
    dend_49 { pt3dadd( 8.78215, -145.46, -31.845, 0.44 ) }
    dend_49 { pt3dadd( 8.9588, -146.838, -32.6377, 1.4 ) }
    dend_49 { pt3dadd( 9.07508, -147.709, -33.2498, 1.18 ) }
    dend_49 { pt3dadd( 9.2159, -148.767, -34.1631, 1.03 ) }
    dend_49 { pt3dadd( 9.5274, -150.473, -35.8303, 0.66 ) }
    dend_49 { pt3dadd( 9.69638, -151.101, -36.5023, 0.66 ) }
    dend_49 { pt3dadd( 9.74438, -151.241, -36.6567, 0.66 ) }
    dend_49 { pt3dadd( 10.2684, -152.496, -38.0299, 0.81 ) }
    dend_49 { pt3dadd( 10.6457, -153.417, -39.0847, 0.96 ) }
    dend_49 { pt3dadd( 11.1414, -154.607, -40.4941, 0.74 ) }
    dend_49 { pt3dadd( 11.5753, -155.498, -41.5476, 0.74 ) }
    dend_49 { pt3dadd( 11.9299, -156.172, -42.3452, 0.96 ) }
    dend_49 { pt3dadd( 12.2215, -156.687, -42.9114, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -15.3236, -303.973, -16.1724, 0.29 ) }
    dend_47 { pt3dadd( -14.3141, -303.867, -17.0863, 0.29 ) }
    dend_47 { pt3dadd( -13.7021, -303.802, -17.6402, 0.29 ) }
    dend_47 { pt3dadd( -12.5071, -303.676, -18.722, 0.22 ) }
    dend_47 { pt3dadd( -11.9219, -303.615, -19.2517, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -15.3236, -303.973, -16.1724, 0.59 ) }
    dend_44 { pt3dadd( -15.5056, -304.805, -16.194, 0.59 ) }
    dend_44 { pt3dadd( -15.5195, -304.859, -16.1939, 0.59 ) }
    dend_44 { pt3dadd( -15.764, -305.718, -16.1622, 0.52 ) }
    dend_44 { pt3dadd( -16.0165, -306.586, -16.1191, 0.66 ) }
    dend_44 { pt3dadd( -16.2308, -307.407, -16.081, 0.66 ) }
    dend_44 { pt3dadd( -16.4391, -308.256, -16.0434, 0.81 ) }
    dend_44 { pt3dadd( -16.4828, -308.428, -16.03, 0.81 ) }
    dend_44 { pt3dadd( -16.6406, -309.29, -15.9385, 0.81 ) }
    dend_44 { pt3dadd( -16.6515, -309.404, -15.924, 0.81 ) }
    dend_44 { pt3dadd( -16.5678, -310.401, -15.762, 0.81 ) }
    dend_44 { pt3dadd( -16.5602, -310.462, -15.756, 0.81 ) }
    dend_44 { pt3dadd( -16.5021, -311.354, -15.805, 0.59 ) }
    dend_44 { pt3dadd( -16.4981, -312.242, -15.9386, 0.37 ) }
    dend_44 { pt3dadd( -16.5426, -312.779, -16.1165, 0.74 ) }
    dend_44 { pt3dadd( -16.818, -313.833, -16.7365, 0.81 ) }
    dend_44 { pt3dadd( -17.209, -314.924, -17.5937, 0.52 ) }
    dend_44 { pt3dadd( -17.7174, -316.219, -18.8086, 0.52 ) }
    dend_44 { pt3dadd( -17.732, -316.252, -18.843, 0.52 ) }
    dend_44 { pt3dadd( -18.2414, -317.177, -20.0419, 0.96 ) }
    dend_44 { pt3dadd( -18.9144, -318.255, -21.7383, 1.69 ) }
    dend_44 { pt3dadd( -19.1796, -318.65, -22.4895, 0.37 ) }
    dend_44 { pt3dadd( -19.5081, -319.137, -23.602, 0.37 ) }
    dend_44 { pt3dadd( -19.6362, -319.346, -24.1351, 0.66 ) }
    dend_44 { pt3dadd( -20.158, -320.298, -26.6679, 1.25 ) }
    dend_44 { pt3dadd( -20.4582, -320.92, -28.4481, 0.44 ) }
    dend_44 { pt3dadd( -20.6025, -321.298, -29.5587, 0.81 ) }
    dend_44 { pt3dadd( -20.847, -322.019, -31.6819, 0.37 ) }
    dend_44 { pt3dadd( -20.9082, -322.301, -32.5045, 0.29 ) }
    dend_44 { pt3dadd( -20.907, -322.694, -33.6204, 0.29 ) }
    dend_44 { pt3dadd( -20.8458, -322.895, -34.0942, 0.96 ) }
    dend_44 { pt3dadd( -20.743, -323.109, -34.5694, 0.96 ) }
    dend_44 { pt3dadd( -20.4742, -323.609, -35.5405, 0.44 ) }
    dend_44 { pt3dadd( -20.3826, -323.778, -35.9089, 0.81 ) }
    dend_44 { pt3dadd( -20.2743, -323.981, -36.4447, 1.03 ) }
    dend_44 { pt3dadd( -20.2615, -324.004, -36.5051, 1.03 ) }
    dend_44 { pt3dadd( -19.9005, -324.662, -38.0918, 0.37 ) }
    dend_44 { pt3dadd( -19.6512, -325.139, -39.1497, 1.4 ) }
    dend_44 { pt3dadd( -19.328, -326.11, -41.1165, 0.37 ) }
    dend_44 { pt3dadd( -19.2602, -326.422, -41.6857, 0.66 ) }
    dend_44 { pt3dadd( -19.1669, -326.918, -42.4948, 0.29 ) }
    dend_44 { pt3dadd( -19.0581, -327.365, -43.1306, 0.96 ) }
    dend_44 { pt3dadd( -18.9912, -327.583, -43.3879, 0.96 ) }
    dend_44 { pt3dadd( -18.3827, -329.344, -45.1282, 0.37 ) }
    dend_44 { pt3dadd( -18.2856, -329.6, -45.3231, 0.59 ) }
    dend_44 { pt3dadd( -18.017, -330.304, -45.8763, 0.29 ) }
    dend_44 { pt3dadd( -17.7424, -331.005, -46.5129, 0.96 ) }
    dend_44 { pt3dadd( -17.7262, -331.043, -46.5502, 0.96 ) }
    dend_44 { pt3dadd( -17.5154, -331.366, -46.8034, 1.33 ) }
    dend_44 { pt3dadd( -17.472, -331.403, -46.8075, 1.33 ) }
    dend_44 { pt3dadd( -17.1703, -331.66, -46.8168, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -53.1954, -70.7238, 6.92185, 0.29 ) }
    dend_40 { pt3dadd( -52.8016, -71.625, 7.13428, 0.29 ) }
    dend_40 { pt3dadd( -52.521, -72.2672, 7.28565, 0.37 ) }
    dend_40 { pt3dadd( -52.262, -72.86, 7.42538, 0.37 ) }
    dend_40 { pt3dadd( -51.8911, -73.709, 7.62552, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -53.1954, -70.7238, 6.92185, 0.37 ) }
    dend_35 { pt3dadd( -54.0894, -71.3981, 7.5038, 0.37 ) }
    dend_35 { pt3dadd( -54.6721, -71.7942, 8.00404, 0.37 ) }
    dend_35 { pt3dadd( -55.3258, -72.1663, 8.61808, 0.81 ) }
    dend_35 { pt3dadd( -55.7293, -72.3785, 9.1374, 1.25 ) }
    dend_35 { pt3dadd( -56.0153, -72.5208, 9.57, 1.25 ) }
    dend_35 { pt3dadd( -57.2232, -73.1324, 11.4303, 0.44 ) }
    dend_35 { pt3dadd( -57.3038, -73.1684, 11.5651, 0.44 ) }
    dend_35 { pt3dadd( -57.5751, -73.2774, 12.0237, 0.74 ) }
    dend_35 { pt3dadd( -58.6698, -73.7163, 13.7853, 0.52 ) }
    dend_35 { pt3dadd( -59.2669, -73.9931, 14.6542, 0.59 ) }
    dend_35 { pt3dadd( -59.7634, -74.2675, 15.1786, 0.44 ) }
    dend_35 { pt3dadd( -60.2274, -74.5663, 15.4538, 0.29 ) }
    dend_35 { pt3dadd( -60.7552, -74.9421, 15.6672, 0.29 ) }
    dend_35 { pt3dadd( -61.4571, -75.5092, 15.8202, 1.11 ) }
    dend_35 { pt3dadd( -61.9201, -75.9242, 15.8393, 1.33 ) }
    dend_35 { pt3dadd( -63.0302, -77.1112, 15.7923, 0.74 ) }
    dend_35 { pt3dadd( -63.5721, -77.8162, 15.7514, 0.74 ) }
    dend_35 { pt3dadd( -63.8549, -78.2723, 15.7235, 1.11 ) }
    dend_35 { pt3dadd( -64.156, -78.8461, 15.7166, 0.88 ) }
    dend_35 { pt3dadd( -64.476, -79.5576, 15.7456, 0.66 ) }
    dend_35 { pt3dadd( -64.808, -80.4058, 15.8173, 0.37 ) }
    dend_35 { pt3dadd( -64.9736, -80.9798, 15.8901, 0.37 ) }
    dend_35 { pt3dadd( -65.1946, -81.8726, 15.9934, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -65.397, -82.863, 16.0891, 0.37 ) }
    dend_35 { pt3dadd( -65.5269, -83.5994, 16.1474, 0.29 ) }
    dend_35 { pt3dadd( -65.6119, -84.3053, 16.2079, 0.59 ) }
    dend_35 { pt3dadd( -65.6652, -85.0258, 16.2963, 0.81 ) }
    dend_35 { pt3dadd( -65.6655, -85.0845, 16.3025, 0.81 ) }
    dend_35 { pt3dadd( -65.6056, -85.8842, 16.3949, 0.74 ) }
    dend_35 { pt3dadd( -65.5379, -86.3905, 16.4452, 1.11 ) }
    dend_35 { pt3dadd( -65.3573, -87.5069, 16.5688, 0.59 ) }
    dend_35 { pt3dadd( -65.2755, -88.0174, 16.6361, 1.03 ) }
    dend_35 { pt3dadd( -65.132, -89.0115, 16.8076, 0.52 ) }
    dend_35 { pt3dadd( -65.0292, -89.8411, 16.9683, 0.74 ) }
    dend_35 { pt3dadd( -64.9733, -90.4258, 17.0869, 0.66 ) }
    dend_35 { pt3dadd( -64.8954, -91.4869, 17.3017, 0.44 ) }
    dend_35 { pt3dadd( -64.8771, -92.425, 17.5033, 0.44 ) }
    dend_35 { pt3dadd( -64.9408, -93.4012, 17.7456, 0.44 ) }
    dend_35 { pt3dadd( -65.0105, -93.7922, 17.8593, 0.81 ) }
    dend_35 { pt3dadd( -65.204, -94.491, 18.0699, 1.18 ) }
    dend_35 { pt3dadd( -65.3027, -94.7531, 18.16, 1.33 ) }
    dend_35 { pt3dadd( -65.7744, -95.8124, 18.575, 0.44 ) }
    dend_35 { pt3dadd( -66.175, -96.64, 18.9068, 0.59 ) }
    dend_35 { pt3dadd( -66.4706, -97.2495, 19.2341, 0.81 ) }
    dend_35 { pt3dadd( -66.6191, -97.5333, 19.4264, 0.81 ) }
    dend_35 { pt3dadd( -66.988, -98.1571, 19.9852, 0.37 ) }
    dend_35 { pt3dadd( -67.4081, -98.7609, 20.6243, 0.74 ) }
    dend_35 { pt3dadd( -67.5834, -98.9726, 20.8905, 0.96 ) }
    dend_35 { pt3dadd( -68.5521, -100.065, 22.4314, 0.59 ) }
    dend_35 { pt3dadd( -68.9767, -100.5, 23.1076, 0.81 ) }
    dend_35 { pt3dadd( -69.8309, -101.293, 24.4632, 0.52 ) }
    dend_35 { pt3dadd( -70.3612, -101.712, 25.2785, 0.52 ) }
    dend_35 { pt3dadd( -70.8487, -102.033, 25.9608, 0.74 ) }
    dend_35 { pt3dadd( -74.1426, -109.735, 31.5186, 0.74 ) }
    dend_35 { pt3dadd( -78.1318, -117.664, 36.1832, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -116.368, -73.4901, -57.0011, 0.52 ) }
    dend_33 { pt3dadd( -116.299, -74.5796, -57.7829, 0.52 ) }
    dend_33 { pt3dadd( -116.19, -75.844, -58.6675, 0.88 ) }
    dend_33 { pt3dadd( -116.103, -76.4389, -59.0678, 0.88 ) }
    dend_33 { pt3dadd( -115.906, -77.4293, -59.7413, 0.37 ) }
    dend_33 { pt3dadd( -115.806, -77.8622, -60.0254, 0.29 ) }
    dend_33 { pt3dadd( -115.716, -78.2644, -60.2741, 0.88 ) }
    dend_33 { pt3dadd( -115.696, -78.3474, -60.3215, 0.88 ) }
    dend_33 { pt3dadd( -115.527, -79.0162, -60.6101, 0.88 ) }
    dend_33 { pt3dadd( -115.326, -79.9091, -60.9334, 0.29 ) }
    dend_33 { pt3dadd( -115.198, -80.535, -61.0944, 0.29 ) }
    dend_33 { pt3dadd( -115.109, -81.1157, -61.2173, 0.22 ) }
    dend_33 { pt3dadd( -115.041, -81.784, -61.3285, 0.22 ) }
    dend_33 { pt3dadd( -115.03, -82.1087, -61.3676, 0.81 ) }
    dend_33 { pt3dadd( -115.05, -82.7001, -61.4065, 1.25 ) }
    dend_33 { pt3dadd( -115.104, -83.6746, -61.4249, 0.37 ) }
    dend_33 { pt3dadd( -115.17, -84.5858, -61.4378, 0.22 ) }
    dend_33 { pt3dadd( -115.215, -85.1428, -61.4443, 0.66 ) }
    dend_33 { pt3dadd( -115.269, -85.6676, -61.4478, 0.81 ) }
    dend_33 { pt3dadd( -115.403, -86.7213, -61.4493, 0.22 ) }
    dend_33 { pt3dadd( -115.487, -87.2346, -61.4457, 0.88 ) }
    dend_33 { pt3dadd( -115.545, -87.5185, -61.4414, 1.03 ) }
    dend_33 { pt3dadd( -115.625, -87.9465, -61.44, 1.03 ) }
    dend_33 { pt3dadd( -115.691, -88.3968, -61.4432, 0.74 ) }
    dend_33 { pt3dadd( -115.696, -88.4702, -61.4453, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -116.368, -73.4901, -57.0011, 0.22 ) }
    dend_32 { pt3dadd( -119.0, -73.4853, -58.1709, 0.22 ) }
    dend_32 { pt3dadd( -120.02, -73.5448, -58.592, 0.22 ) }
    dend_32 { pt3dadd( -121.079, -73.6605, -58.9756, 0.81 ) }
    dend_32 { pt3dadd( -121.629, -73.7502, -59.144, 1.11 ) }
    dend_32 { pt3dadd( -122.281, -73.8922, -59.305, 1.03 ) }
    dend_32 { pt3dadd( -124.069, -74.3401, -59.6636, 0.22 ) }
    dend_32 { pt3dadd( -124.376, -74.4562, -59.6896, 0.66 ) }
    dend_32 { pt3dadd( -125.057, -74.7394, -59.7476, 0.96 ) }
    dend_32 { pt3dadd( -125.821, -75.0453, -59.7575, 0.29 ) }
    dend_32 { pt3dadd( -126.698, -75.3399, -59.7424, 0.29 ) }
    dend_32 { pt3dadd( -127.028, -75.4324, -59.717, 0.96 ) }
    dend_32 { pt3dadd( -127.696, -75.5757, -59.6506, 1.18 ) }
    dend_32 { pt3dadd( -127.763, -75.5838, -59.648, 1.18 ) }
    dend_32 { pt3dadd( -128.649, -75.635, -59.6421, 0.88 ) }
    dend_32 { pt3dadd( -128.783, -75.6404, -59.6427, 0.88 ) }
    dend_32 { pt3dadd( -129.338, -75.683, -59.6438, 0.66 ) }
    dend_32 { pt3dadd( -130.683, -75.8754, -59.7191, 0.29 ) }
    dend_32 { pt3dadd( -130.935, -75.9225, -59.7347, 0.29 ) }
    dend_32 { pt3dadd( -131.977, -76.1554, -59.8116, 0.29 ) }
    dend_32 { pt3dadd( -132.554, -76.2496, -59.9132, 0.59 ) }
    dend_32 { pt3dadd( -133.031, -76.2983, -60.0144, 0.59 ) }
    dend_32 { pt3dadd( -134.489, -76.3786, -60.3812, 0.29 ) }
    dend_32 { pt3dadd( -134.892, -76.3864, -60.4815, 1.03 ) }
    dend_32 { pt3dadd( -135.52, -76.3408, -60.6865, 1.33 ) }
    dend_32 { pt3dadd( -137.548, -75.9545, -61.532, 0.29 ) }
    dend_32 { pt3dadd( -137.922, -75.8544, -61.6909, 0.29 ) }
    dend_32 { pt3dadd( -137.993, -75.8314, -61.7225, 0.29 ) }
    dend_32 { pt3dadd( -138.63, -75.6341, -62.0463, 0.59 ) }
    dend_32 { pt3dadd( -140.159, -75.2412, -62.8948, 0.81 ) }
    dend_32 { pt3dadd( -141.231, -75.0524, -63.5859, 0.52 ) }
    dend_32 { pt3dadd( -141.779, -75.0219, -63.9842, 1.11 ) }
    dend_32 { pt3dadd( -142.796, -75.0394, -64.812, 1.4 ) }
    dend_32 { pt3dadd( -144.306, -75.0961, -66.0969, 0.29 ) }
    dend_32 { pt3dadd( -144.661, -75.1238, -66.4211, 0.88 ) }
    dend_32 { pt3dadd( -146.098, -75.3953, -67.8056, 0.52 ) }
    dend_32 { pt3dadd( -147.213, -75.7167, -68.9736, 0.81 ) }
    dend_32 { pt3dadd( -147.624, -75.865, -69.4491, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -23.7224, 279.691, -3.75205, 0.37 ) }
    dend_23 { pt3dadd( -23.2155, 279.672, -3.81964, 0.37 ) }
    dend_23 { pt3dadd( -22.2393, 279.582, -3.94751, 0.66 ) }
    dend_23 { pt3dadd( -22.1753, 279.572, -3.9543, 0.66 ) }
    dend_23 { pt3dadd( -21.7092, 279.502, -4.00213, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -21.6344, 279.491, -4.00934, 0.29 ) }
    dend_23 { pt3dadd( -20.3659, 279.344, -4.18948, 0.29 ) }
    dend_23 { pt3dadd( -20.3023, 279.339, -4.19928, 0.29 ) }
    dend_23 { pt3dadd( -20.0024, 279.341, -4.23998, 0.66 ) }
    dend_23 { pt3dadd( -19.6458, 279.353, -4.30001, 0.52 ) }
    dend_23 { pt3dadd( -19.5804, 279.359, -4.31421, 0.52 ) }
    dend_23 { pt3dadd( -18.3793, 279.56, -4.57588, 0.22 ) }
    dend_23 { pt3dadd( -17.7967, 279.774, -4.69203, 0.22 ) }
    dend_23 { pt3dadd( -17.48, 279.9, -4.76195, 0.29 ) }
    dend_23 { pt3dadd( -8.52164, 281.988, -4.90685, 0.29 ) }
    dend_23 { pt3dadd( -0.154718, 285.678, -4.77935, 0.29 ) }
    dend_23 { pt3dadd( 7.78188, 289.875, -6.35507, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -23.7224, 279.691, -3.75205, 0.29 ) }
    dend_22 { pt3dadd( -23.4962, 280.995, -3.69502, 0.29 ) }
    dend_22 { pt3dadd( -23.4368, 281.434, -3.6976, 0.29 ) }
    dend_22 { pt3dadd( -23.4349, 281.493, -3.69809, 0.29 ) }
    dend_22 { pt3dadd( -23.4553, 282.167, -3.70625, 0.29 ) }
    dend_22 { pt3dadd( -23.4591, 282.217, -3.70724, 0.29 ) }
    dend_22 { pt3dadd( -23.5955, 283.127, -3.70597, 0.29 ) }
    dend_22 { pt3dadd( -23.6113, 283.174, -3.70804, 0.29 ) }
    dend_22 { pt3dadd( -23.8066, 283.74, -3.68446, 0.52 ) }
    dend_22 { pt3dadd( -23.8409, 283.854, -3.67346, 0.52 ) }
    dend_22 { pt3dadd( -23.8933, 284.092, -3.64397, 0.52 ) }
    dend_22 { pt3dadd( -23.9806, 284.671, -3.57131, 0.22 ) }
    dend_22 { pt3dadd( -24.0203, 285.234, -3.51324, 0.22 ) }
    dend_22 { pt3dadd( -24.0368, 285.797, -3.46146, 0.44 ) }
    dend_22 { pt3dadd( -24.0185, 286.227, -3.43153, 0.44 ) }
    dend_22 { pt3dadd( -23.9766, 286.836, -3.39467, 0.22 ) }
    dend_22 { pt3dadd( -23.9698, 286.895, -3.39252, 0.22 ) }
    dend_22 { pt3dadd( -23.8052, 287.738, -3.42259, 0.22 ) }
    dend_22 { pt3dadd( -23.978, 295.97, -4.21952, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 35.7373, 141.141, -61.6223, 0.66 ) }
    dend_19 { pt3dadd( 35.892, 141.833, -61.6388, 0.66 ) }
    dend_19 { pt3dadd( 36.0729, 142.485, -61.6527, 0.29 ) }
    dend_19 { pt3dadd( 36.0946, 142.553, -61.6541, 0.29 ) }
    dend_19 { pt3dadd( 36.3227, 143.22, -61.6666, 0.29 ) }
    dend_19 { pt3dadd( 36.6904, 144.377, -61.6907, 0.29 ) }
    dend_19 { pt3dadd( 36.829, 144.882, -61.7029, 0.52 ) }
    dend_19 { pt3dadd( 36.8699, 145.05, -61.707, 0.52 ) }
    dend_19 { pt3dadd( 36.9268, 145.295, -61.7145, 0.52 ) }
    dend_19 { pt3dadd( 37.0217, 145.746, -61.7289, 0.37 ) }
    dend_19 { pt3dadd( 37.122, 146.375, -61.7508, 0.37 ) }
    dend_19 { pt3dadd( 37.1281, 147.347, -61.7931, 0.88 ) }
    dend_19 { pt3dadd( 37.1199, 147.481, -61.7973, 0.88 ) }
    dend_19 { pt3dadd( 37.0765, 148.021, -61.809, 1.03 ) }
    dend_19 { pt3dadd( 37.0413, 148.54, -61.815, 1.18 ) }
    dend_19 { pt3dadd( 37.0238, 149.104, -61.8157, 0.66 ) }
    dend_19 { pt3dadd( 37.0367, 149.8, -61.8091, 0.52 ) }
    dend_19 { pt3dadd( 37.06, 150.134, -61.803, 0.59 ) }
    dend_19 { pt3dadd( 37.1189, 150.492, -61.7979, 0.44 ) }
    dend_19 { pt3dadd( 37.3796, 151.443, -61.788, 0.29 ) }
    dend_19 { pt3dadd( 37.5107, 151.802, -61.7874, 0.37 ) }
    dend_19 { pt3dadd( 37.5393, 151.87, -61.792, 0.37 ) }
    dend_19 { pt3dadd( 37.7014, 152.271, -61.8402, 0.22 ) }
    dend_19 { pt3dadd( 37.9662, 153.077, -61.9258, 0.59 ) }
    dend_19 { pt3dadd( 38.0815, 153.504, -61.9636, 0.88 ) }
    dend_19 { pt3dadd( 38.2403, 154.229, -62.0123, 0.52 ) }
    dend_19 { pt3dadd( 38.4046, 155.151, -62.0566, 0.29 ) }
    dend_19 { pt3dadd( 38.5005, 155.835, -62.0755, 0.29 ) }
    dend_19 { pt3dadd( 38.582, 156.759, -62.082, 0.59 ) }
    dend_19 { pt3dadd( 38.5843, 156.833, -62.0763, 0.59 ) }
    dend_19 { pt3dadd( 38.5921, 157.34, -61.9987, 0.29 ) }
    dend_19 { pt3dadd( 38.594, 157.448, -61.973, 0.29 ) }
    dend_19 { pt3dadd( 38.6943, 158.228, -61.7359, 0.52 ) }
    dend_19 { pt3dadd( 38.7659, 158.583, -61.6529, 0.66 ) }
    dend_19 { pt3dadd( 38.9517, 159.436, -61.5208, 0.52 ) }
    dend_19 { pt3dadd( 38.9674, 159.508, -61.5113, 0.52 ) }
    dend_19 { pt3dadd( 39.0752, 160.021, -61.4606, 0.29 ) }
    dend_19 { pt3dadd( 39.3231, 161.26, -61.4556, 0.29 ) }
    dend_19 { pt3dadd( 39.4904, 162.161, -61.5427, 0.66 ) }
    dend_19 { pt3dadd( 39.5419, 162.488, -61.5794, 0.88 ) }
    dend_19 { pt3dadd( 39.5514, 162.559, -61.5887, 0.88 ) }
    dend_19 { pt3dadd( 39.6014, 163.228, -61.6547, 0.52 ) }
    dend_19 { pt3dadd( 39.6011, 164.109, -61.7136, 0.52 ) }
    dend_19 { pt3dadd( 39.5757, 164.855, -61.7391, 0.29 ) }
    dend_19 { pt3dadd( 39.5749, 165.829, -61.7447, 0.29 ) }
    dend_19 { pt3dadd( 39.5982, 166.581, -61.7258, 1.03 ) }
    dend_19 { pt3dadd( 39.646, 167.38, -61.6878, 0.74 ) }
    dend_19 { pt3dadd( 39.7418, 168.275, -61.5822, 0.29 ) }
    dend_19 { pt3dadd( 39.9317, 169.521, -61.3676, 0.44 ) }
    dend_19 { pt3dadd( 40.0611, 170.16, -61.242, 0.37 ) }
    dend_19 { pt3dadd( 40.2451, 170.907, -61.0919, 0.37 ) }
    dend_19 { pt3dadd( 40.4817, 171.698, -60.8952, 0.96 ) }
    dend_19 { pt3dadd( 40.8742, 172.743, -60.5879, 0.37 ) }
    dend_19 { pt3dadd( 41.1713, 173.427, -60.3555, 0.37 ) }
    dend_19 { pt3dadd( 41.4553, 174.021, -60.1293, 0.59 ) }
    dend_19 { pt3dadd( 41.6229, 174.34, -60.0117, 0.88 ) }
    dend_19 { pt3dadd( 41.7283, 174.531, -59.948, 0.88 ) }
    dend_19 { pt3dadd( 42.0747, 175.133, -59.7736, 0.59 ) }
    dend_19 { pt3dadd( 42.1049, 175.185, -59.7626, 0.52 ) }
    dend_19 { pt3dadd( 42.8834, 176.483, -59.5118, 0.15 ) }
    dend_19 { pt3dadd( 43.2396, 177.078, -59.424, 0.59 ) }
    dend_19 { pt3dadd( 43.2769, 177.139, -59.4159, 0.59 ) }
    dend_19 { pt3dadd( 43.5895, 177.591, -59.3662, 0.59 ) }
    dend_19 { pt3dadd( 43.6336, 177.647, -59.3618, 0.59 ) }
    dend_19 { pt3dadd( 44.0131, 178.104, -59.3393, 0.88 ) }
    dend_19 { pt3dadd( 44.5558, 178.748, -59.3368, 1.18 ) }
    dend_19 { pt3dadd( 44.7933, 179.042, -59.3362, 1.18 ) }
    dend_19 { pt3dadd( 45.6356, 180.185, -59.318, 0.15 ) }
    dend_19 { pt3dadd( 46.1994, 181.06, -59.2972, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( 46.4662, 181.559, -59.2842, 0.52 ) }
    dend_19 { pt3dadd( 46.7325, 182.168, -59.267, 0.66 ) }
    dend_19 { pt3dadd( 46.8547, 182.534, -59.2574, 0.74 ) }
    dend_19 { pt3dadd( 47.0371, 183.295, -59.24, 0.29 ) }
    dend_19 { pt3dadd( 47.1681, 184.028, -59.2255, 0.37 ) }
    dend_19 { pt3dadd( 47.3739, 184.964, -59.1523, 0.29 ) }
    dend_19 { pt3dadd( 47.3962, 185.043, -59.1422, 0.29 ) }
    dend_19 { pt3dadd( 47.8297, 186.041, -58.9613, 0.52 ) }
    dend_19 { pt3dadd( 47.8663, 186.101, -58.9475, 0.52 ) }
    dend_19 { pt3dadd( 48.4756, 186.874, -58.738, 0.81 ) }
    dend_19 { pt3dadd( 49.196, 187.631, -58.4948, 0.37 ) }
    dend_19 { pt3dadd( 49.2475, 187.679, -58.4764, 0.37 ) }
    dend_19 { pt3dadd( 49.9834, 188.447, -58.2123, 0.29 ) }
    dend_19 { pt3dadd( 50.2995, 188.814, -58.0987, 0.37 ) }
    dend_19 { pt3dadd( 50.3359, 188.863, -58.0869, 0.37 ) }
    dend_19 { pt3dadd( 50.6958, 189.419, -57.9981, 0.37 ) }
    dend_19 { pt3dadd( 51.2496, 190.316, -57.8157, 0.29 ) }
    dend_19 { pt3dadd( 51.8839, 191.298, -57.5391, 0.37 ) }
    dend_19 { pt3dadd( 52.12, 191.662, -57.4226, 0.88 ) }
    dend_19 { pt3dadd( 52.4041, 192.057, -57.2881, 0.96 ) }
    dend_19 { pt3dadd( 53.1704, 192.947, -56.915, 0.52 ) }
    dend_19 { pt3dadd( 54.2287, 193.975, -56.4085, 0.66 ) }
    dend_19 { pt3dadd( 54.6645, 194.336, -56.1941, 0.66 ) }
    dend_19 { pt3dadd( 55.2687, 194.762, -55.892, 0.29 ) }
    dend_19 { pt3dadd( 55.9754, 195.224, -55.5327, 0.44 ) }
    dend_19 { pt3dadd( 56.8038, 195.747, -55.0999, 1.11 ) }
    dend_19 { pt3dadd( 57.4641, 196.166, -54.7486, 1.11 ) }
    dend_19 { pt3dadd( 58.4794, 196.832, -54.2412, 1.11 ) }
    dend_19 { pt3dadd( 58.9131, 197.118, -53.9946, 1.55 ) }
    dend_19 { pt3dadd( 59.6396, 197.569, -53.5384, 1.55 ) }
    dend_19 { pt3dadd( 59.7337, 197.622, -53.4726, 1.55 ) }
    dend_19 { pt3dadd( 60.2989, 197.906, -53.0179, 1.55 ) }
    dend_19 { pt3dadd( 60.3446, 197.926, -52.9785, 1.55 ) }
    dend_19 { pt3dadd( 61.0638, 198.195, -52.3346, 2.06 ) }
    dend_19 { pt3dadd( 61.1163, 198.214, -52.2844, 2.06 ) }
    dend_19 { pt3dadd( 62.5473, 198.663, -50.8702, 0.52 ) }
    dend_19 { pt3dadd( 63.403, 198.906, -50.022, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 35.7373, 141.141, -61.6223, 0.74 ) }
    dend_18 { pt3dadd( 35.79, 140.16, -61.4171, 0.74 ) }
    dend_18 { pt3dadd( 35.7901, 140.106, -61.4072, 0.74 ) }
    dend_18 { pt3dadd( 35.7709, 139.444, -61.2948, 0.37 ) }
    dend_18 { pt3dadd( 35.7103, 138.49, -61.144, 0.22 ) }
    dend_18 { pt3dadd( 35.6599, 138.037, -61.0782, 0.37 ) }
    dend_18 { pt3dadd( 35.5844, 137.48, -61.0071, 0.15 ) }
    dend_18 { pt3dadd( 35.4264, 136.633, -60.9255, 0.15 ) }
    dend_18 { pt3dadd( 35.3534, 136.256, -60.8895, 0.44 ) }
    dend_18 { pt3dadd( 35.2642, 135.848, -60.8506, 0.44 ) }
    dend_18 { pt3dadd( 35.0585, 135.065, -60.7845, 0.22 ) }
    dend_18 { pt3dadd( 34.8015, 134.162, -60.7402, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 87.1143, 91.8251, -45.9024, 0.22 ) }
    dend_13 { pt3dadd( 87.7744, 92.2449, -46.9843, 0.22 ) }
    dend_13 { pt3dadd( 88.0077, 92.3932, -47.3666, 0.74 ) }
    dend_13 { pt3dadd( 88.1316, 92.472, -47.5696, 0.74 ) }
    dend_13 { pt3dadd( 89.1048, 93.0907, -49.1645, 0.29 ) }
    dend_13 { pt3dadd( 89.3438, 93.2427, -49.5562, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 87.1143, 91.8251, -45.9024, 0.22 ) }
    dend_12 { pt3dadd( 87.971, 91.4595, -46.1887, 0.22 ) }
    dend_12 { pt3dadd( 88.5918, 91.242, -46.4388, 0.66 ) }
    dend_12 { pt3dadd( 89.0034, 91.1131, -46.6108, 0.66 ) }
    dend_12 { pt3dadd( 89.4873, 90.9888, -46.808, 0.52 ) }
    dend_12 { pt3dadd( 90.4502, 90.8494, -47.2112, 0.22 ) }
    dend_12 { pt3dadd( 90.914, 90.8407, -47.3991, 0.22 ) }
    dend_12 { pt3dadd( 91.5808, 90.9752, -47.6373, 0.59 ) }
    dend_12 { pt3dadd( 91.9131, 91.0846, -47.7368, 0.74 ) }
    dend_12 { pt3dadd( 92.3824, 91.2646, -47.842, 0.74 ) }
    dend_12 { pt3dadd( 93.3188, 91.6682, -47.9751, 0.29 ) }
    dend_12 { pt3dadd( 94.103, 92.0465, -48.0165, 0.29 ) }
    dend_12 { pt3dadd( 95.0625, 92.5293, -48.0352, 0.59 ) }
    dend_12 { pt3dadd( 95.5027, 92.7568, -48.0206, 0.52 ) }
    dend_12 { pt3dadd( 96.3683, 93.202, -47.9755, 0.22 ) }
    dend_12 { pt3dadd( 96.8459, 93.4223, -47.9334, 0.29 ) }
    dend_12 { pt3dadd( 97.5039, 93.6521, -47.8284, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 36.5192, 114.17, 38.1292, 0.29 ) }
    dend_6 { pt3dadd( 38.0488, 121.907, 41.3909, 0.29 ) }
    dend_6 { pt3dadd( 39.428, 130.111, 42.9561, 0.29 ) }
    dend_6 { pt3dadd( 40.4944, 138.325, 44.7217, 0.29 ) }
    dend_6 { pt3dadd( 40.259, 146.544, 46.8173, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 36.5192, 114.17, 38.1292, 0.44 ) }
    dend_5 { pt3dadd( 38.9554, 123.855, 43.093, 0.29 ) }
    dend_5 { pt3dadd( 41.784, 133.553, 47.8055, 0.29 ) }
    dend_5 { pt3dadd( 46.1976, 143.279, 50.9134, 0.29 ) }
    dend_5 { pt3dadd( 49.1629, 153.835, 52.0344, 0.29 ) }
    dend_5 { pt3dadd( 53.4921, 163.943, 51.098, 0.29 ) }
    dend_5 { pt3dadd( 57.1861, 174.311, 50.6018, 0.29 ) }
    dend_5 { pt3dadd( 59.4641, 185.058, 50.451, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -164.264, -246.166, 47.1522, 0.29 ) }
    dend_91 { pt3dadd( -164.571, -257.589, 48.8134, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -164.264, -246.166, 47.1522, 0.44 ) }
    dend_88 { pt3dadd( -171.269, -253.455, 47.4557, 0.29 ) }
    dend_88 { pt3dadd( -178.225, -260.456, 45.3333, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -170.707, -239.711, 71.8865, 0.66 ) }
    dend_72 { pt3dadd( -170.389, -238.983, 72.7791, 0.66 ) }
    dend_72 { pt3dadd( -170.177, -238.517, 73.2429, 0.29 ) }
    dend_72 { pt3dadd( -169.95, -237.968, 73.6996, 0.29 ) }
    dend_72 { pt3dadd( -169.935, -237.922, 73.7325, 0.29 ) }
    dend_72 { pt3dadd( -169.7, -237.01, 74.313, 0.52 ) }
    dend_72 { pt3dadd( -169.661, -236.829, 74.4205, 0.74 ) }
    dend_72 { pt3dadd( -169.54, -236.09, 74.753, 0.37 ) }
    dend_72 { pt3dadd( -169.45, -235.446, 75.0156, 0.37 ) }
    dend_72 { pt3dadd( -169.393, -234.803, 75.2625, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -169.362, -234.404, 75.3934, 0.59 ) }
    dend_72 { pt3dadd( -169.332, -233.954, 75.5057, 0.59 ) }
    dend_72 { pt3dadd( -169.257, -233.432, 75.6107, 0.59 ) }
    dend_72 { pt3dadd( -169.091, -232.74, 75.7083, 0.52 ) }
    dend_72 { pt3dadd( -168.912, -232.231, 75.749, 0.96 ) }
    dend_72 { pt3dadd( -168.645, -231.628, 75.7719, 0.37 ) }
    dend_72 { pt3dadd( -168.457, -231.254, 75.7673, 0.29 ) }
    dend_72 { pt3dadd( -168.068, -230.548, 75.7277, 0.29 ) }
    dend_72 { pt3dadd( -167.745, -229.975, 75.6895, 0.29 ) }
    dend_72 { pt3dadd( -167.536, -229.601, 75.6661, 0.52 ) }
    dend_72 { pt3dadd( -167.512, -229.549, 75.6656, 0.52 ) }
    dend_72 { pt3dadd( -167.393, -229.237, 75.6791, 0.52 ) }
    dend_72 { pt3dadd( -167.208, -228.625, 75.7423, 0.37 ) }
    dend_72 { pt3dadd( -167.025, -227.921, 75.8363, 0.37 ) }
    dend_72 { pt3dadd( -167.012, -227.865, 75.8457, 0.37 ) }
    dend_72 { pt3dadd( -166.788, -226.738, 76.0587, 0.37 ) }
    dend_72 { pt3dadd( -166.615, -225.728, 76.2774, 0.37 ) }
    dend_72 { pt3dadd( -166.431, -224.473, 76.5779, 0.37 ) }
    dend_72 { pt3dadd( -166.416, -224.37, 76.6039, 0.37 ) }
    dend_72 { pt3dadd( -166.265, -223.395, 76.8242, 0.37 ) }
    dend_72 { pt3dadd( -166.256, -223.346, 76.8343, 0.37 ) }
    dend_72 { pt3dadd( -166.129, -222.72, 76.9478, 0.88 ) }
    dend_72 { pt3dadd( -166.101, -222.593, 76.9662, 0.88 ) }
    dend_72 { pt3dadd( -165.881, -221.807, 77.0327, 0.29 ) }
    dend_72 { pt3dadd( -165.56, -220.82, 77.0777, 0.29 ) }
    dend_72 { pt3dadd( -165.325, -220.191, 77.0796, 0.44 ) }
    dend_72 { pt3dadd( -165.142, -219.724, 77.0771, 0.44 ) }
    dend_72 { pt3dadd( -164.932, -219.171, 77.0599, 0.29 ) }
    dend_72 { pt3dadd( -164.907, -219.099, 77.0579, 0.29 ) }
    dend_72 { pt3dadd( -164.604, -218.301, 76.9998, 0.66 ) }
    dend_72 { pt3dadd( -164.515, -218.108, 76.9852, 0.66 ) }
    dend_72 { pt3dadd( -164.344, -217.775, 76.9588, 0.59 ) }
    dend_72 { pt3dadd( -163.899, -216.944, 76.9134, 0.37 ) }
    dend_72 { pt3dadd( -163.868, -216.894, 76.9138, 0.37 ) }
    dend_72 { pt3dadd( -163.148, -215.763, 76.9963, 0.37 ) }
    dend_72 { pt3dadd( -162.717, -215.125, 77.1045, 0.37 ) }
    dend_72 { pt3dadd( -162.407, -214.699, 77.193, 0.37 ) }
    dend_72 { pt3dadd( -162.276, -214.54, 77.2379, 0.88 ) }
    dend_72 { pt3dadd( -161.821, -214.076, 77.4488, 0.74 ) }
    dend_72 { pt3dadd( -161.784, -214.036, 77.4726, 0.74 ) }
    dend_72 { pt3dadd( -161.58, -213.758, 77.8109, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -170.707, -239.711, 71.8865, 0.52 ) }
    dend_69 { pt3dadd( -171.411, -240.294, 72.127, 0.52 ) }
    dend_69 { pt3dadd( -172.086, -240.791, 72.365, 0.29 ) }
    dend_69 { pt3dadd( -172.742, -241.243, 72.5999, 0.29 ) }
    dend_69 { pt3dadd( -173.765, -241.911, 72.976, 0.44 ) }
    dend_69 { pt3dadd( -174.626, -242.471, 73.2963, 0.37 ) }
    dend_69 { pt3dadd( -175.003, -242.715, 73.4375, 0.66 ) }
    dend_69 { pt3dadd( -175.344, -242.908, 73.5698, 0.88 ) }
    dend_69 { pt3dadd( -175.795, -243.115, 73.7141, 0.88 ) }
    dend_69 { pt3dadd( -176.483, -243.383, 73.8879, 0.44 ) }
    dend_69 { pt3dadd( -177.347, -243.704, 74.0511, 0.44 ) }
    dend_69 { pt3dadd( -177.409, -243.726, 74.0603, 0.44 ) }
    dend_69 { pt3dadd( -178.177, -243.982, 74.1564, 0.44 ) }
    dend_69 { pt3dadd( -179.437, -244.371, 74.3027, 0.29 ) }
    dend_69 { pt3dadd( -180.226, -244.59, 74.3962, 0.29 ) }
    dend_69 { pt3dadd( -181.191, -244.821, 74.5786, 0.29 ) }
    dend_69 { pt3dadd( -181.263, -244.835, 74.5986, 0.74 ) }
    dend_69 { pt3dadd( -181.323, -244.847, 74.6207, 0.74 ) }
    dend_69 { pt3dadd( -181.95, -244.998, 74.8541, 0.74 ) }
    dend_69 { pt3dadd( -182.495, -245.174, 75.0707, 0.74 ) }
    dend_69 { pt3dadd( -183.638, -245.601, 75.4621, 0.29 ) }
    dend_69 { pt3dadd( -184.272, -245.875, 75.6128, 0.29 ) }
    dend_69 { pt3dadd( -185.168, -246.3, 75.7568, 0.29 ) }
    dend_69 { pt3dadd( -186.344, -246.904, 75.8615, 0.29 ) }
    dend_69 { pt3dadd( -186.895, -247.216, 75.9091, 0.59 ) }
    dend_69 { pt3dadd( -187.158, -247.365, 75.9338, 0.59 ) }
    dend_69 { pt3dadd( -187.943, -247.779, 76.0209, 0.37 ) }
    dend_69 { pt3dadd( -188.063, -247.829, 76.0742, 0.37 ) }
    dend_69 { pt3dadd( -188.612, -247.965, 76.5637, 0.37 ) }
    dend_69 { pt3dadd( -189.456, -248.078, 77.4822, 0.29 ) }
    dend_69 { pt3dadd( -189.921, -248.15, 78.1602, 0.29 ) }
    dend_69 { pt3dadd( -190.248, -248.212, 78.7427, 0.59 ) }
    dend_69 { pt3dadd( -190.829, -248.397, 80.0081, 0.59 ) }
    dend_69 { pt3dadd( -191.123, -248.538, 80.7445, 0.59 ) }
    dend_69 { pt3dadd( -191.308, -248.702, 81.3615, 0.59 ) }
    dend_69 { pt3dadd( -191.757, -249.363, 83.113, 0.44 ) }
    dend_69 { pt3dadd( -191.769, -249.387, 83.1613, 0.44 ) }
    dend_69 { pt3dadd( -191.942, -249.79, 83.8639, 0.44 ) }
    dend_69 { pt3dadd( -191.955, -249.818, 83.9088, 0.44 ) }
    dend_69 { pt3dadd( -192.284, -250.395, 84.7987, 0.59 ) }
    dend_69 { pt3dadd( -192.552, -250.738, 85.322, 0.59 ) }
    dend_69 { pt3dadd( -193.041, -251.148, 85.9371, 0.29 ) }
    dend_69 { pt3dadd( -193.078, -251.175, 85.9817, 0.29 ) }
    dend_69 { pt3dadd( -194.017, -251.71, 86.94, 0.44 ) }
    dend_69 { pt3dadd( -194.463, -251.932, 87.3097, 0.96 ) }
    dend_69 { pt3dadd( -194.941, -252.138, 87.6303, 1.33 ) }
    dend_69 { pt3dadd( -195.577, -252.407, 88.0211, 0.88 ) }
    dend_69 { pt3dadd( -196.652, -252.887, 88.6027, 0.44 ) }
    dend_69 { pt3dadd( -197.524, -253.281, 89.0033, 0.44 ) }
    dend_69 { pt3dadd( -198.505, -253.714, 89.3649, 0.52 ) }
    dend_69 { pt3dadd( -199.219, -253.997, 89.618, 0.52 ) }
    dend_69 { pt3dadd( -199.279, -254.018, 89.6384, 0.52 ) }
    dend_69 { pt3dadd( -200.219, -254.279, 89.9401, 0.37 ) }
    dend_69 { pt3dadd( -200.917, -254.425, 90.1474, 0.37 ) }
    dend_69 { pt3dadd( -201.631, -254.524, 90.4118, 0.37 ) }
    dend_69 { pt3dadd( -202.59, -254.581, 90.8566, 0.52 ) }
    dend_69 { pt3dadd( -202.895, -254.582, 91.0072, 0.96 ) }
    dend_69 { pt3dadd( -203.236, -254.569, 91.1678, 0.96 ) }
    dend_69 { pt3dadd( -203.691, -254.532, 91.3701, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -204.305, -254.497, 91.6243, 0.81 ) }
    dend_69 { pt3dadd( -205.364, -254.516, 92.0261, 0.37 ) }
    dend_69 { pt3dadd( -205.416, -254.522, 92.0441, 0.37 ) }
    dend_69 { pt3dadd( -206.313, -254.672, 92.3384, 0.37 ) }
    dend_69 { pt3dadd( -206.836, -254.785, 92.5015, 0.59 ) }
    dend_69 { pt3dadd( -207.222, -254.874, 92.6182, 0.66 ) }
    dend_69 { pt3dadd( -207.824, -255.009, 92.7966, 0.52 ) }
    dend_69 { pt3dadd( -208.599, -255.145, 92.9828, 0.29 ) }
    dend_69 { pt3dadd( -208.672, -255.154, 93.0013, 0.29 ) }
    dend_69 { pt3dadd( -209.389, -255.204, 93.1961, 0.29 ) }
    dend_69 { pt3dadd( -210.088, -255.258, 93.4191, 0.44 ) }
    dend_69 { pt3dadd( -210.553, -255.307, 93.5815, 0.44 ) }
    dend_69 { pt3dadd( -211.482, -255.433, 93.9329, 0.44 ) }
    dend_69 { pt3dadd( -212.403, -255.6, 94.3052, 0.37 ) }
    dend_69 { pt3dadd( -212.813, -255.691, 94.508, 0.37 ) }
    dend_69 { pt3dadd( -213.915, -255.972, 95.2541, 0.37 ) }
    dend_69 { pt3dadd( -214.381, -256.105, 95.6713, 0.37 ) }
    dend_69 { pt3dadd( -214.817, -256.237, 96.1688, 0.37 ) }
    dend_69 { pt3dadd( -215.164, -256.33, 96.675, 0.37 ) }
    dend_69 { pt3dadd( -215.687, -256.422, 97.5829, 0.37 ) }
    dend_69 { pt3dadd( -216.237, -256.449, 98.6235, 0.37 ) }
    dend_69 { pt3dadd( -216.405, -256.446, 98.9749, 0.81 ) }
    dend_69 { pt3dadd( -216.534, -256.467, 99.2302, 1.11 ) }
    dend_69 { pt3dadd( -216.81, -256.567, 99.7302, 1.11 ) }
    dend_69 { pt3dadd( -216.841, -256.582, 99.7737, 1.11 ) }
    dend_69 { pt3dadd( -217.373, -256.885, 100.385, 0.59 ) }
    dend_69 { pt3dadd( -218.188, -257.403, 101.272, 0.44 ) }
    dend_69 { pt3dadd( -218.713, -257.743, 101.885, 0.66 ) }
    dend_69 { pt3dadd( -218.748, -257.765, 101.925, 0.66 ) }
    dend_69 { pt3dadd( -219.127, -257.977, 102.331, 0.66 ) }
    dend_69 { pt3dadd( -219.774, -258.264, 102.948, 0.44 ) }
    dend_69 { pt3dadd( -219.85, -258.296, 103.022, 0.44 ) }
    dend_69 { pt3dadd( -220.479, -258.56, 103.613, 0.37 ) }
    dend_69 { pt3dadd( -221.134, -258.865, 104.236, 0.37 ) }
    dend_69 { pt3dadd( -221.746, -259.174, 104.805, 0.88 ) }
    dend_69 { pt3dadd( -222.172, -259.406, 105.185, 1.18 ) }
    dend_69 { pt3dadd( -223.44, -260.081, 106.289, 0.37 ) }
    dend_69 { pt3dadd( -224.008, -260.371, 106.795, 0.29 ) }
    dend_69 { pt3dadd( -224.366, -260.545, 107.124, 0.81 ) }
    dend_69 { pt3dadd( -224.417, -260.567, 107.175, 0.81 ) }
    dend_69 { pt3dadd( -224.628, -260.664, 107.414, 0.81 ) }
    dend_69 { pt3dadd( -225.495, -261.051, 108.418, 0.37 ) }
    dend_69 { pt3dadd( -225.824, -261.181, 108.795, 0.74 ) }
    dend_69 { pt3dadd( -226.171, -261.331, 109.211, 0.74 ) }
    dend_69 { pt3dadd( -226.807, -261.603, 109.963, 0.81 ) }
    dend_69 { pt3dadd( -227.672, -261.992, 110.975, 0.29 ) }
    dend_69 { pt3dadd( -227.966, -262.134, 111.318, 0.29 ) }
    dend_69 { pt3dadd( -228.002, -262.153, 111.357, 0.29 ) }
    dend_69 { pt3dadd( -228.415, -262.38, 111.773, 0.74 ) }
    dend_69 { pt3dadd( -228.738, -262.549, 112.094, 0.81 ) }
    dend_69 { pt3dadd( -229.564, -262.907, 112.883, 0.37 ) }
    dend_69 { pt3dadd( -229.611, -262.923, 112.928, 0.37 ) }
    dend_69 { pt3dadd( -230.106, -263.091, 113.424, 0.29 ) }
    dend_69 { pt3dadd( -230.491, -263.221, 113.825, 0.29 ) }
    dend_69 { pt3dadd( -231.059, -263.41, 114.473, 0.52 ) }
    dend_69 { pt3dadd( -231.527, -263.579, 115.048, 0.88 ) }
    dend_69 { pt3dadd( -231.695, -263.626, 115.265, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -6.61083, -108.346, -25.6765, 0.96 ) }
    dend_62 { pt3dadd( -5.94907, -110.245, -25.4416, 0.96 ) }
    dend_62 { pt3dadd( -5.5153, -111.414, -25.3252, 0.96 ) }
    dend_62 { pt3dadd( -5.12745, -112.422, -25.259, 1.03 ) }
    dend_62 { pt3dadd( -4.88973, -113.02, -25.2498, 1.25 ) }
    dend_62 { pt3dadd( -4.5855, -113.773, -25.2583, 1.11 ) }
    dend_62 { pt3dadd( -4.10886, -114.855, -25.2883, 0.74 ) }
    dend_62 { pt3dadd( -3.72508, -115.716, -25.398, 0.96 ) }
    dend_62 { pt3dadd( -3.40937, -116.328, -25.5066, 0.74 ) }
    dend_62 { pt3dadd( -2.89965, -117.255, -25.7259, 0.59 ) }
    dend_62 { pt3dadd( -2.87425, -117.303, -25.7411, 0.59 ) }
    dend_62 { pt3dadd( -2.34934, -118.408, -26.147, 0.59 ) }
    dend_62 { pt3dadd( -2.00612, -119.395, -26.5669, 0.59 ) }
    dend_62 { pt3dadd( -1.99681, -119.44, -26.5874, 0.59 ) }
    dend_62 { pt3dadd( -1.86444, -120.374, -26.9624, 0.88 ) }
    dend_62 { pt3dadd( -1.78525, -121.305, -27.2925, 0.88 ) }
    dend_62 { pt3dadd( -1.75733, -121.872, -27.479, 0.88 ) }
    dend_62 { pt3dadd( -1.72716, -122.796, -27.7386, 0.66 ) }
    dend_62 { pt3dadd( -1.62412, -123.758, -27.9253, 0.52 ) }
    dend_62 { pt3dadd( -1.43887, -124.701, -28.049, 1.11 ) }
    dend_62 { pt3dadd( -1.31121, -125.144, -28.0749, 1.11 ) }
    dend_62 { pt3dadd( -1.0726, -125.834, -28.0895, 0.88 ) }
    dend_62 { pt3dadd( -0.724176, -126.749, -28.1212, 0.81 ) }
    dend_62 { pt3dadd( -0.404733, -127.573, -28.1747, 0.88 ) }
    dend_62 { pt3dadd( -0.200919, -128.18, -28.2785, 1.03 ) }
    dend_62 { pt3dadd( 0.0552733, -129.121, -28.5325, 0.74 ) }
    dend_62 { pt3dadd( 0.224078, -129.82, -28.7645, 0.59 ) }
    dend_62 { pt3dadd( 0.403695, -130.623, -29.0901, 0.52 ) }
    dend_62 { pt3dadd( 0.513125, -131.24, -29.3977, 0.74 ) }
    dend_62 { pt3dadd( 0.677174, -132.319, -30.0107, 0.66 ) }
    dend_62 { pt3dadd( 0.785493, -133.07, -30.4606, 0.74 ) }
    dend_62 { pt3dadd( 0.889672, -133.721, -30.8483, 0.81 ) }
    dend_62 { pt3dadd( 1.0119, -134.334, -31.175, 1.11 ) }
    dend_62 { pt3dadd( 1.17333, -135.002, -31.4876, 0.88 ) }
    dend_62 { pt3dadd( 1.18312, -135.052, -31.5112, 0.88 ) }
    dend_62 { pt3dadd( 1.25299, -135.823, -31.9134, 0.59 ) }
    dend_62 { pt3dadd( 1.24493, -136.607, -32.3716, 0.59 ) }
    dend_62 { pt3dadd( 1.19027, -137.408, -32.8656, 0.81 ) }
    dend_62 { pt3dadd( 1.10527, -138.385, -33.4858, 1.03 ) }
    dend_62 { pt3dadd( 0.941289, -140.144, -34.6883, 1.03 ) }
    dend_62 { pt3dadd( 0.833706, -141.419, -35.6108, 0.81 ) }
    dend_62 { pt3dadd( 0.752768, -142.457, -36.4217, 0.59 ) }
    dend_62 { pt3dadd( 0.749527, -142.503, -36.4582, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 0.717189, -143.26, -37.044, 0.74 ) }
    dend_62 { pt3dadd( 0.75966, -144.126, -37.6517, 0.66 ) }
    dend_62 { pt3dadd( 0.919721, -144.992, -38.1781, 0.66 ) }
    dend_62 { pt3dadd( 1.11698, -145.863, -38.6698, 0.66 ) }
    dend_62 { pt3dadd( 1.28061, -146.63, -39.0658, 0.96 ) }
    dend_62 { pt3dadd( 1.37918, -147.273, -39.3449, 1.18 ) }
    dend_62 { pt3dadd( 1.42269, -148.095, -39.6238, 1.03 ) }
    dend_62 { pt3dadd( 1.37012, -148.835, -39.7945, 0.88 ) }
    dend_62 { pt3dadd( 1.20057, -149.715, -39.9361, 0.66 ) }
    dend_62 { pt3dadd( 1.05267, -150.269, -39.9921, 0.74 ) }
    dend_62 { pt3dadd( 0.727412, -151.344, -40.0789, 0.74 ) }
    dend_62 { pt3dadd( 0.477182, -152.176, -40.127, 0.81 ) }
    dend_62 { pt3dadd( 0.163599, -153.316, -40.1711, 0.81 ) }
    dend_62 { pt3dadd( -0.0455258, -154.317, -40.2195, 1.03 ) }
    dend_62 { pt3dadd( -0.123121, -155.015, -40.2734, 1.11 ) }
    dend_62 { pt3dadd( -0.13415, -155.762, -40.378, 0.81 ) }
    dend_62 { pt3dadd( -0.0352256, -156.914, -40.6033, 0.66 ) }
    dend_62 { pt3dadd( 0.141688, -157.808, -40.8116, 0.81 ) }
    dend_62 { pt3dadd( 0.331852, -158.43, -41.0007, 0.81 ) }
    dend_62 { pt3dadd( 0.568829, -159.049, -41.2429, 0.81 ) }
    dend_62 { pt3dadd( 0.75037, -159.45, -41.4366, 1.03 ) }
    dend_62 { pt3dadd( 0.774479, -159.496, -41.4633, 1.03 ) }
    dend_62 { pt3dadd( 1.12152, -160.046, -41.8616, 0.74 ) }
    dend_62 { pt3dadd( 1.4938, -160.634, -42.3771, 0.44 ) }
    dend_62 { pt3dadd( 1.6089, -160.828, -42.5645, 0.74 ) }
    dend_62 { pt3dadd( 1.62798, -160.866, -42.6052, 0.74 ) }
    dend_62 { pt3dadd( 1.76017, -161.187, -42.9384, 0.74 ) }
    dend_62 { pt3dadd( 1.77667, -161.232, -42.9826, 0.74 ) }
    dend_62 { pt3dadd( 2.11102, -162.166, -43.797, 0.59 ) }
    dend_62 { pt3dadd( 2.21279, -162.459, -44.024, 0.88 ) }
    dend_62 { pt3dadd( 2.42767, -163.119, -44.4707, 0.88 ) }
    dend_62 { pt3dadd( 2.70002, -163.999, -44.9802, 0.66 ) }
    dend_62 { pt3dadd( 2.88419, -164.632, -45.2849, 0.74 ) }
    dend_62 { pt3dadd( 3.09063, -165.483, -45.6421, 0.88 ) }
    dend_62 { pt3dadd( 3.17934, -166.092, -45.8705, 0.44 ) }
    dend_62 { pt3dadd( 3.19046, -166.652, -46.0897, 0.44 ) }
    dend_62 { pt3dadd( 3.13581, -167.302, -46.3434, 0.52 ) }
    dend_62 { pt3dadd( 3.02784, -167.834, -46.5784, 0.81 ) }
    dend_62 { pt3dadd( 2.78214, -168.768, -47.0374, 1.03 ) }
    dend_62 { pt3dadd( 2.49274, -169.81, -47.611, 0.88 ) }
    dend_62 { pt3dadd( 2.25985, -170.781, -48.1946, 0.59 ) }
    dend_62 { pt3dadd( 2.16123, -171.302, -48.535, 0.74 ) }
    dend_62 { pt3dadd( 2.09289, -172.221, -49.1651, 0.52 ) }
    dend_62 { pt3dadd( 2.13737, -172.714, -49.508, 0.52 ) }
    dend_62 { pt3dadd( 2.34486, -173.35, -49.9345, 0.81 ) }
    dend_62 { pt3dadd( 2.5938, -173.806, -50.2399, 1.03 ) }
    dend_62 { pt3dadd( 2.798, -174.09, -50.4373, 1.03 ) }
    dend_62 { pt3dadd( 3.41812, -174.851, -50.9846, 0.52 ) }
    dend_62 { pt3dadd( 3.66107, -175.148, -51.1932, 0.66 ) }
    dend_62 { pt3dadd( 4.03385, -175.656, -51.543, 0.66 ) }
    dend_62 { pt3dadd( 4.06502, -175.705, -51.5752, 0.66 ) }
    dend_62 { pt3dadd( 4.33468, -176.184, -51.8831, 0.81 ) }
    dend_62 { pt3dadd( 4.6482, -176.823, -52.2869, 0.59 ) }
    dend_62 { pt3dadd( 4.98911, -177.63, -52.7991, 0.37 ) }
    dend_62 { pt3dadd( 5.1692, -178.052, -53.0716, 0.88 ) }
    dend_62 { pt3dadd( 5.388, -178.546, -53.4286, 1.18 ) }
    dend_62 { pt3dadd( 5.40858, -178.586, -53.4626, 1.18 ) }
    dend_62 { pt3dadd( 5.56492, -178.948, -53.8414, 1.11 ) }
    dend_62 { pt3dadd( 5.67119, -179.32, -54.313, 0.96 ) }
    dend_62 { pt3dadd( 5.6773, -179.354, -54.3607, 0.96 ) }
    dend_62 { pt3dadd( 5.72578, -180.026, -55.2836, 0.59 ) }
    dend_62 { pt3dadd( 5.73185, -180.452, -55.8315, 0.81 ) }
    dend_62 { pt3dadd( 5.72164, -181.576, -57.0931, 0.59 ) }
    dend_62 { pt3dadd( 5.70712, -182.151, -57.638, 0.88 ) }
    dend_62 { pt3dadd( 5.69187, -182.568, -57.9562, 0.88 ) }
    dend_62 { pt3dadd( 5.68231, -183.05, -58.2452, 0.81 ) }
    dend_62 { pt3dadd( 5.68337, -183.734, -58.5298, 0.59 ) }
    dend_62 { pt3dadd( 5.71708, -184.465, -58.7381, 0.66 ) }
    dend_62 { pt3dadd( 5.81437, -185.318, -58.8951, 1.03 ) }
    dend_62 { pt3dadd( 5.88595, -185.853, -58.9921, 1.33 ) }
    dend_62 { pt3dadd( 5.94039, -186.31, -59.0828, 1.18 ) }
    dend_62 { pt3dadd( 5.98504, -186.925, -59.2337, 0.81 ) }
    dend_62 { pt3dadd( 5.97985, -187.708, -59.522, 0.59 ) }
    dend_62 { pt3dadd( 5.96376, -188.436, -59.9039, 0.74 ) }
    dend_62 { pt3dadd( 5.98195, -188.872, -60.1805, 0.96 ) }
    dend_62 { pt3dadd( 5.98691, -188.91, -60.2083, 0.96 ) }
    dend_62 { pt3dadd( 6.14859, -189.669, -60.7828, 0.96 ) }
    dend_62 { pt3dadd( 6.49531, -190.844, -61.7426, 0.74 ) }
    dend_62 { pt3dadd( 6.80877, -191.669, -62.4743, 0.74 ) }
    dend_62 { pt3dadd( 7.13815, -192.396, -63.1421, 0.88 ) }
    dend_62 { pt3dadd( 7.50955, -193.044, -63.6644, 0.88 ) }
    dend_62 { pt3dadd( 7.97086, -193.718, -64.1179, 0.59 ) }
    dend_62 { pt3dadd( 8.39398, -194.224, -64.3195, 0.59 ) }
    dend_62 { pt3dadd( 8.82585, -194.697, -64.3545, 0.59 ) }
    dend_62 { pt3dadd( 8.85666, -194.733, -64.3487, 0.59 ) }
    dend_62 { pt3dadd( 9.98949, -196.33, -63.8629, 0.52 ) }
    dend_62 { pt3dadd( 10.4047, -197.037, -63.5657, 0.52 ) }
    dend_62 { pt3dadd( 10.9833, -198.44, -62.9541, 1.18 ) }
    dend_62 { pt3dadd( 11.2116, -199.291, -62.6089, 1.18 ) }
    dend_62 { pt3dadd( 11.3004, -200.048, -62.3883, 0.52 ) }
    dend_62 { pt3dadd( 11.2519, -201.17, -62.2902, 0.52 ) }
    dend_62 { pt3dadd( 11.0898, -202.06, -62.3985, 0.66 ) }
    dend_62 { pt3dadd( 10.7474, -203.487, -62.7773, 0.66 ) }
    dend_62 { pt3dadd( 10.5062, -204.285, -63.1324, 0.66 ) }
    dend_62 { pt3dadd( 10.0938, -205.648, -63.9024, 0.66 ) }
    dend_62 { pt3dadd( 9.70683, -207.058, -64.8826, 0.74 ) }
    dend_62 { pt3dadd( 9.59856, -207.542, -65.2852, 1.03 ) }
    dend_62 { pt3dadd( 9.5307, -207.973, -65.6888, 1.03 ) }
    dend_62 { pt3dadd( 9.47269, -208.815, -66.5349, 0.66 ) }
    dend_62 { pt3dadd( 9.45375, -209.388, -67.1423, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 9.49225, -209.907, -67.6748, 0.74 ) }
    dend_62 { pt3dadd( 9.56371, -210.361, -68.1147, 1.03 ) }
    dend_62 { pt3dadd( 9.57128, -210.4, -68.1548, 1.03 ) }
    dend_62 { pt3dadd( 9.63084, -210.562, -68.3375, 1.25 ) }
    dend_62 { pt3dadd( 9.66225, -210.599, -68.3836, 1.25 ) }
    dend_62 { pt3dadd( 9.90346, -210.823, -68.6741, 1.25 ) }
    dend_62 { pt3dadd( 9.93655, -210.855, -68.7088, 1.25 ) }
    dend_62 { pt3dadd( 10.199, -211.135, -68.9699, 1.25 ) }
    dend_62 { pt3dadd( 10.4515, -211.448, -69.2119, 1.25 ) }
    dend_62 { pt3dadd( 11.0796, -212.291, -69.737, 0.59 ) }
    dend_62 { pt3dadd( 11.5763, -212.957, -70.1231, 0.59 ) }
    dend_62 { pt3dadd( 12.1309, -213.708, -70.5281, 0.66 ) }
    dend_62 { pt3dadd( 12.5662, -214.277, -70.8357, 0.66 ) }
    dend_62 { pt3dadd( 13.139, -214.989, -71.2301, 0.59 ) }
    dend_62 { pt3dadd( 13.625, -215.557, -71.5556, 0.44 ) }
    dend_62 { pt3dadd( 14.091, -216.013, -71.8688, 0.29 ) }
    dend_62 { pt3dadd( 14.1279, -216.037, -71.8954, 0.29 ) }
    dend_62 { pt3dadd( 14.7161, -216.226, -72.3393, 0.59 ) }
    dend_62 { pt3dadd( 15.2655, -216.346, -72.775, 0.74 ) }
    dend_62 { pt3dadd( 15.314, -216.355, -72.8099, 0.74 ) }
    dend_62 { pt3dadd( 16.0405, -216.504, -73.3107, 0.74 ) }
    dend_62 { pt3dadd( 16.09, -216.516, -73.3382, 0.74 ) }
    dend_62 { pt3dadd( 17.3662, -216.814, -73.8936, 0.59 ) }
    dend_62 { pt3dadd( 18.0433, -216.97, -74.1336, 0.81 ) }
    dend_62 { pt3dadd( 19.1609, -217.256, -74.4632, 0.66 ) }
    dend_62 { pt3dadd( 19.2231, -217.273, -74.4808, 0.66 ) }
    dend_62 { pt3dadd( 20.3697, -217.539, -74.7658, 1.03 ) }
    dend_62 { pt3dadd( 21.257, -217.69, -74.935, 1.47 ) }
    dend_62 { pt3dadd( 21.7396, -217.753, -74.9748, 1.55 ) }
    dend_62 { pt3dadd( 22.8102, -217.883, -74.9976, 0.29 ) }
    dend_62 { pt3dadd( 23.5891, -217.981, -74.988, 0.59 ) }
    dend_62 { pt3dadd( 24.7342, -218.139, -74.9665, 0.81 ) }
    dend_62 { pt3dadd( 26.1104, -218.341, -74.9207, 1.18 ) }
    dend_62 { pt3dadd( 27.8659, -218.639, -74.8578, 0.44 ) }
    dend_62 { pt3dadd( 29.048, -218.854, -74.8064, 0.59 ) }
    dend_62 { pt3dadd( 29.107, -218.866, -74.8046, 0.59 ) }
    dend_62 { pt3dadd( 29.7765, -219.066, -74.8134, 0.81 ) }
    dend_62 { pt3dadd( 29.8211, -219.086, -74.8189, 0.81 ) }
    dend_62 { pt3dadd( 30.4297, -219.434, -74.9824, 0.37 ) }
    dend_62 { pt3dadd( 31.0541, -219.826, -75.2307, 0.88 ) }
    dend_62 { pt3dadd( 31.5082, -220.15, -75.4238, 1.33 ) }
    dend_62 { pt3dadd( 31.9526, -220.513, -75.6126, 1.47 ) }
    dend_62 { pt3dadd( 32.8261, -221.336, -76.0398, 0.88 ) }
    dend_62 { pt3dadd( 32.8639, -221.375, -76.0615, 0.88 ) }
    dend_62 { pt3dadd( 33.1918, -221.749, -76.2885, 1.03 ) }
    dend_62 { pt3dadd( 33.6611, -222.374, -76.7145, 0.44 ) }
    dend_62 { pt3dadd( 34.0942, -223.022, -77.1924, 0.44 ) }
    dend_62 { pt3dadd( 34.4169, -223.595, -77.6408, 0.66 ) }
    dend_62 { pt3dadd( 34.4364, -223.635, -77.6758, 0.66 ) }
    dend_62 { pt3dadd( 34.633, -224.005, -78.0043, 0.44 ) }
    dend_62 { pt3dadd( 34.8627, -224.402, -78.3677, 0.81 ) }
    dend_62 { pt3dadd( 35.0205, -224.632, -78.5908, 0.96 ) }
    dend_62 { pt3dadd( 35.2813, -224.974, -78.9169, 1.11 ) }
    dend_62 { pt3dadd( 35.6428, -225.423, -79.3015, 0.29 ) }
    dend_62 { pt3dadd( 35.9404, -225.805, -79.6175, 0.22 ) }
    dend_62 { pt3dadd( 35.9699, -225.845, -79.6487, 0.22 ) }
    dend_62 { pt3dadd( 36.3413, -226.323, -80.0429, 1.47 ) }
    dend_62 { pt3dadd( 36.3718, -226.359, -80.0755, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.61083, -108.346, -25.6765, 0.44 ) }
    dend_53 { pt3dadd( -7.10406, -109.626, -26.7938, 0.44 ) }
    dend_53 { pt3dadd( -7.55629, -110.895, -27.9427, 0.59 ) }
    dend_53 { pt3dadd( -8.58352, -114.191, -30.9925, 0.59 ) }
    dend_53 { pt3dadd( -8.991, -115.709, -32.4008, 0.81 ) }
    dend_53 { pt3dadd( -9.44098, -117.627, -34.1941, 0.81 ) }
    dend_53 { pt3dadd( -9.8098, -119.417, -35.8571, 0.88 ) }
    dend_53 { pt3dadd( -9.97735, -120.442, -36.7896, 1.03 ) }
    dend_53 { pt3dadd( -10.1202, -121.95, -38.1783, 0.52 ) }
    dend_53 { pt3dadd( -10.0917, -122.624, -38.7745, 0.88 ) }
    dend_53 { pt3dadd( -10.0265, -123.698, -39.7141, 0.88 ) }
    dend_53 { pt3dadd( -10.0073, -124.299, -40.1797, 0.88 ) }
    dend_53 { pt3dadd( -10.0204, -124.379, -40.2273, 0.88 ) }
    dend_53 { pt3dadd( -10.5707, -125.513, -40.7891, 0.44 ) }
    dend_53 { pt3dadd( -11.1227, -126.299, -41.1911, 0.74 ) }
    dend_53 { pt3dadd( -11.7731, -127.207, -41.7436, 0.74 ) }
    dend_53 { pt3dadd( -12.5391, -128.331, -42.5566, 0.96 ) }
    dend_53 { pt3dadd( -13.4741, -129.852, -43.8642, 0.96 ) }
    dend_53 { pt3dadd( -14.2201, -131.373, -45.322, 0.96 ) }
    dend_53 { pt3dadd( -14.8191, -132.853, -46.8583, 0.96 ) }
    dend_53 { pt3dadd( -15.289, -134.529, -48.626, 0.88 ) }
    dend_53 { pt3dadd( -15.5481, -136.126, -50.292, 0.88 ) }
    dend_53 { pt3dadd( -15.6449, -137.545, -51.695, 0.59 ) }
    dend_53 { pt3dadd( -15.6641, -138.989, -53.0533, 0.59 ) }
    dend_53 { pt3dadd( -15.6709, -140.121, -54.041, 0.96 ) }
    dend_53 { pt3dadd( -15.7043, -141.284, -54.9575, 1.25 ) }
    dend_53 { pt3dadd( -15.7914, -142.438, -55.7661, 1.33 ) }
    dend_53 { pt3dadd( -15.93, -144.125, -56.8364, 0.96 ) }
    dend_53 { pt3dadd( -16.0344, -145.424, -57.6236, 0.81 ) }
    dend_53 { pt3dadd( -16.137, -146.838, -58.5172, 0.88 ) }
    dend_53 { pt3dadd( -16.0893, -147.488, -58.9803, 1.11 ) }
    dend_53 { pt3dadd( -16.0787, -147.54, -59.0289, 1.11 ) }
    dend_53 { pt3dadd( -15.7642, -148.291, -59.8687, 1.11 ) }
    dend_53 { pt3dadd( -15.3849, -148.795, -60.5181, 1.25 ) }
    dend_53 { pt3dadd( -15.2943, -148.895, -60.6703, 1.25 ) }
    dend_53 { pt3dadd( -14.7344, -149.558, -61.8328, 1.33 ) }
    dend_53 { pt3dadd( -14.3021, -150.282, -63.1664, 1.03 ) }
    dend_53 { pt3dadd( -14.1633, -150.752, -64.0138, 0.59 ) }
    dend_53 { pt3dadd( -14.159, -151.154, -64.7278, 0.81 ) }
    dend_53 { pt3dadd( -14.49, -152.296, -66.6543, 0.81 ) }
    dend_53 { pt3dadd( -14.9959, -153.227, -68.0982, 1.11 ) }
    dend_53 { pt3dadd( -15.7398, -154.25, -69.5075, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( -16.7173, -155.499, -71.0407, 0.59 ) }
    dend_53 { pt3dadd( -17.3131, -156.242, -71.9222, 0.81 ) }
    dend_53 { pt3dadd( -18.3425, -157.513, -73.4507, 0.96 ) }
    dend_53 { pt3dadd( -19.1233, -158.582, -74.7081, 0.81 ) }
    dend_53 { pt3dadd( -19.9717, -160.011, -76.316, 0.37 ) }
    dend_53 { pt3dadd( -20.5377, -161.315, -77.7488, 1.03 ) }
    dend_53 { pt3dadd( -21.0052, -163.154, -79.6914, 0.96 ) }
    dend_53 { pt3dadd( -21.2009, -164.992, -81.5962, 1.18 ) }
    dend_53 { pt3dadd( -21.1911, -166.323, -82.9906, 1.18 ) }
    dend_53 { pt3dadd( -21.0761, -167.698, -84.453, 1.18 ) }
    dend_53 { pt3dadd( -20.9017, -168.989, -85.8374, 0.81 ) }
    dend_53 { pt3dadd( -20.6376, -170.414, -87.3259, 0.66 ) }
    dend_53 { pt3dadd( -20.4517, -171.21, -88.1118, 0.96 ) }
    dend_53 { pt3dadd( -20.0179, -172.738, -89.5785, 1.25 ) }
    dend_53 { pt3dadd( -19.9993, -172.804, -89.6445, 1.25 ) }
    dend_53 { pt3dadd( -19.5885, -173.966, -90.8473, 1.11 ) }
    dend_53 { pt3dadd( -19.2227, -174.877, -91.6888, 0.81 ) }
    dend_53 { pt3dadd( -18.9684, -175.498, -92.1845, 1.25 ) }
    dend_53 { pt3dadd( -18.6363, -176.292, -92.6847, 1.25 ) }
    dend_53 { pt3dadd( -18.3093, -177.12, -93.0397, 0.66 ) }
    dend_53 { pt3dadd( -18.1055, -177.995, -93.3624, 0.59 ) }
    dend_53 { pt3dadd( -18.0651, -179.145, -93.6662, 0.59 ) }
    dend_53 { pt3dadd( -18.1503, -179.714, -93.7967, 0.88 ) }
    dend_53 { pt3dadd( -18.172, -179.8, -93.8164, 0.88 ) }
    dend_53 { pt3dadd( -18.4955, -180.899, -94.1301, 0.88 ) }
    dend_53 { pt3dadd( -18.9924, -182.842, -94.873, 0.59 ) }
    dend_53 { pt3dadd( -19.1372, -183.684, -95.3231, 0.44 ) }
    dend_53 { pt3dadd( -19.1456, -183.831, -95.4151, 0.44 ) }
    dend_53 { pt3dadd( -19.1257, -184.574, -95.9138, 0.74 ) }
    dend_53 { pt3dadd( -19.0182, -185.73, -96.6804, 0.96 ) }
    dend_53 { pt3dadd( -18.9109, -186.695, -97.3511, 0.96 ) }
    dend_53 { pt3dadd( -18.7036, -188.163, -98.3058, 0.59 ) }
    dend_53 { pt3dadd( -18.6231, -188.943, -98.797, 0.88 ) }
    dend_53 { pt3dadd( -18.6177, -189.022, -98.8439, 0.88 ) }
    dend_53 { pt3dadd( -18.567, -189.866, -99.3136, 0.96 ) }
    dend_53 { pt3dadd( -18.5245, -191.832, -100.354, 0.59 ) }
    dend_53 { pt3dadd( -18.5191, -192.952, -100.95, 1.03 ) }
    dend_53 { pt3dadd( -18.4848, -193.819, -101.422, 1.18 ) }
    dend_53 { pt3dadd( -18.3929, -195.253, -102.246, 0.88 ) }
    dend_53 { pt3dadd( -18.3031, -196.484, -102.94, 0.74 ) }
    dend_53 { pt3dadd( -18.1994, -197.813, -103.66, 0.66 ) }
    dend_53 { pt3dadd( -18.0728, -199.513, -104.475, 0.52 ) }
    dend_53 { pt3dadd( -18.0477, -200.564, -104.934, 0.81 ) }
    dend_53 { pt3dadd( -18.1021, -201.67, -105.361, 0.37 ) }
    dend_53 { pt3dadd( -18.2577, -202.624, -105.648, 0.37 ) }
    dend_53 { pt3dadd( -18.4308, -203.314, -105.813, 0.88 ) }
    dend_53 { pt3dadd( -18.6538, -203.974, -105.935, 1.18 ) }
    dend_53 { pt3dadd( -19.0064, -204.764, -106.038, 1.33 ) }
    dend_53 { pt3dadd( -19.6581, -206.118, -106.248, 0.88 ) }
    dend_53 { pt3dadd( -20.3635, -207.595, -106.575, 0.74 ) }
    dend_53 { pt3dadd( -20.4034, -207.678, -106.596, 0.74 ) }
    dend_53 { pt3dadd( -21.3434, -209.632, -107.145, 0.52 ) }
    dend_53 { pt3dadd( -21.9413, -210.87, -107.519, 0.66 ) }
    dend_53 { pt3dadd( -23.0055, -213.11, -108.225, 0.59 ) }
    dend_53 { pt3dadd( -23.541, -214.377, -108.631, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 12.2215, -156.687, -42.9114, 0.37 ) }
    dend_51 { pt3dadd( 13.2225, -156.8, -43.2535, 0.37 ) }
    dend_51 { pt3dadd( 14.3221, -156.994, -43.6338, 0.59 ) }
    dend_51 { pt3dadd( 14.9835, -157.121, -43.8796, 0.59 ) }
    dend_51 { pt3dadd( 16.1497, -157.326, -44.3469, 0.59 ) }
    dend_51 { pt3dadd( 16.3044, -157.352, -44.4117, 0.59 ) }
    dend_51 { pt3dadd( 17.1126, -157.481, -44.7924, 0.22 ) }
    dend_51 { pt3dadd( 17.4812, -157.515, -45.0486, 0.44 ) }
    dend_51 { pt3dadd( 17.9793, -157.521, -45.5781, 0.44 ) }
    dend_51 { pt3dadd( 18.3012, -157.506, -46.0461, 0.81 ) }
    dend_51 { pt3dadd( 18.3486, -157.496, -46.1308, 0.81 ) }
    dend_51 { pt3dadd( 18.6347, -157.348, -46.7759, 0.96 ) }
    dend_51 { pt3dadd( 19.1266, -156.899, -48.3227, 0.52 ) }
    dend_51 { pt3dadd( 19.2719, -156.737, -48.845, 0.52 ) }
    dend_51 { pt3dadd( 19.291, -156.713, -48.9174, 0.52 ) }
    dend_51 { pt3dadd( 19.5258, -156.416, -49.8155, 0.44 ) }
    dend_51 { pt3dadd( 19.9837, -155.847, -51.4337, 0.74 ) }
    dend_51 { pt3dadd( 20.3921, -155.295, -52.957, 0.29 ) }
    dend_51 { pt3dadd( 20.5738, -155.04, -53.6074, 0.29 ) }
    dend_51 { pt3dadd( 20.6994, -154.88, -54.0511, 0.59 ) }
    dend_51 { pt3dadd( 20.7174, -154.862, -54.1142, 0.59 ) }
    dend_51 { pt3dadd( 20.8375, -154.774, -54.6114, 1.18 ) }
    dend_51 { pt3dadd( 21.2708, -154.621, -56.151, 1.11 ) }
    dend_51 { pt3dadd( 21.5046, -154.591, -57.019, 0.37 ) }
    dend_51 { pt3dadd( 21.8279, -154.591, -58.2405, 0.29 ) }
    dend_51 { pt3dadd( 22.2301, -154.622, -59.6337, 1.11 ) }
    dend_51 { pt3dadd( 22.8155, -154.674, -61.4471, 0.66 ) }
    dend_51 { pt3dadd( 23.2164, -154.722, -62.5824, 0.44 ) }
    dend_51 { pt3dadd( 23.7453, -154.791, -64.0371, 1.18 ) }
    dend_51 { pt3dadd( 23.936, -154.816, -64.6003, 1.62 ) }
    dend_51 { pt3dadd( 24.221, -154.822, -65.4311, 1.18 ) }
    dend_51 { pt3dadd( 24.5826, -154.786, -66.3655, 0.74 ) }
    dend_51 { pt3dadd( 24.6101, -154.782, -66.4286, 0.74 ) }
    dend_51 { pt3dadd( 25.2187, -154.608, -68.179, 0.59 ) }
    dend_51 { pt3dadd( 25.2395, -154.599, -68.2441, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 12.2215, -156.687, -42.9114, 0.59 ) }
    dend_50 { pt3dadd( 12.4428, -157.999, -42.6095, 0.59 ) }
    dend_50 { pt3dadd( 12.6635, -158.662, -42.2818, 0.66 ) }
    dend_50 { pt3dadd( 12.8273, -158.995, -42.0435, 1.03 ) }
    dend_50 { pt3dadd( 12.8891, -159.12, -41.9419, 1.03 ) }
    dend_50 { pt3dadd( 13.0199, -159.366, -41.6659, 1.03 ) }
    dend_50 { pt3dadd( 13.3778, -160.011, -40.8317, 0.74 ) }
    dend_50 { pt3dadd( 13.9322, -160.937, -39.3468, 1.03 ) }
    dend_50 { pt3dadd( 14.3873, -161.48, -38.2409, 1.11 ) }
    dend_50 { pt3dadd( 14.5904, -161.709, -37.7624, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 15.4126, -162.714, -35.7221, 0.74 ) }
    dend_50 { pt3dadd( 15.4424, -162.752, -35.6447, 0.74 ) }
    dend_50 { pt3dadd( 15.7462, -163.183, -34.8282, 0.66 ) }
    dend_50 { pt3dadd( 16.8997, -165.116, -31.8532, 0.66 ) }
    dend_50 { pt3dadd( 17.2055, -165.7, -31.1402, 0.52 ) }
    dend_50 { pt3dadd( 17.5651, -166.444, -30.446, 0.74 ) }
    dend_50 { pt3dadd( 17.5825, -166.487, -30.42, 0.74 ) }
    dend_50 { pt3dadd( 17.8076, -167.091, -30.1439, 0.88 ) }
    dend_50 { pt3dadd( 18.3191, -168.633, -29.697, 0.52 ) }
    dend_50 { pt3dadd( 18.4985, -169.376, -29.6208, 0.52 ) }
    dend_50 { pt3dadd( 18.7072, -170.153, -29.5485, 0.52 ) }
    dend_50 { pt3dadd( 18.9195, -170.902, -29.5041, 0.44 ) }
    dend_50 { pt3dadd( 19.066, -171.484, -29.4786, 0.37 ) }
    dend_50 { pt3dadd( 19.3134, -172.506, -29.4289, 0.37 ) }
    dend_50 { pt3dadd( 19.5098, -173.319, -29.4158, 0.59 ) }
    dend_50 { pt3dadd( 19.6428, -173.797, -29.3958, 0.88 ) }
    dend_50 { pt3dadd( 19.6604, -173.847, -29.3901, 0.88 ) }
    dend_50 { pt3dadd( 19.8359, -174.261, -29.3216, 0.96 ) }
    dend_50 { pt3dadd( 20.4062, -175.371, -28.9815, 0.44 ) }
    dend_50 { pt3dadd( 20.7551, -175.961, -28.7498, 0.59 ) }
    dend_50 { pt3dadd( 20.7798, -175.997, -28.7314, 0.59 ) }
    dend_50 { pt3dadd( 21.4051, -176.858, -28.2943, 0.81 ) }
    dend_50 { pt3dadd( 21.6138, -177.158, -28.1426, 0.96 ) }
    dend_50 { pt3dadd( 22.4597, -178.437, -27.516, 0.52 ) }
    dend_50 { pt3dadd( 22.638, -178.741, -27.3776, 0.74 ) }
    dend_50 { pt3dadd( 23.1772, -179.787, -26.939, 0.52 ) }
    dend_50 { pt3dadd( 23.4771, -180.467, -26.7299, 0.74 ) }
    dend_50 { pt3dadd( 23.712, -181.088, -26.5834, 0.44 ) }
    dend_50 { pt3dadd( 23.9023, -181.631, -26.4342, 0.29 ) }
    dend_50 { pt3dadd( 24.0206, -181.976, -26.3159, 0.37 ) }
    dend_50 { pt3dadd( 24.2272, -182.485, -26.0373, 0.59 ) }
    dend_50 { pt3dadd( 24.5224, -183.095, -25.6278, 0.59 ) }
    dend_50 { pt3dadd( 25.0995, -184.069, -24.901, 0.81 ) }
    dend_50 { pt3dadd( 25.8473, -185.071, -24.114, 0.44 ) }
    dend_50 { pt3dadd( 26.7048, -185.99, -23.3507, 0.88 ) }
    dend_50 { pt3dadd( 27.7986, -186.949, -22.5185, 0.74 ) }
    dend_50 { pt3dadd( 28.3109, -187.284, -22.2223, 0.29 ) }
    dend_50 { pt3dadd( 29.1592, -187.674, -21.9044, 0.37 ) }
    dend_50 { pt3dadd( 30.0004, -187.785, -22.005, 0.37 ) }
    dend_50 { pt3dadd( 30.6215, -187.714, -22.3024, 0.66 ) }
    dend_50 { pt3dadd( 30.6673, -187.703, -22.3326, 0.66 ) }
    dend_50 { pt3dadd( 31.3372, -187.477, -22.8905, 0.29 ) }
    dend_50 { pt3dadd( 31.3844, -187.459, -22.9289, 0.29 ) }
    dend_50 { pt3dadd( 32.1514, -187.15, -23.4858, 0.15 ) }
    dend_50 { pt3dadd( 32.8492, -186.814, -24.0533, 0.15 ) }
    dend_50 { pt3dadd( 36.9015, -192.078, -20.6145, 0.15 ) }
    dend_50 { pt3dadd( 40.3537, -197.476, -16.7683, 0.15 ) }
    dend_50 { pt3dadd( 44.2323, -203.322, -14.3176, 0.15 ) }
    dend_50 { pt3dadd( 49.7018, -207.838, -11.8016, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -17.1703, -331.66, -46.8168, 1.18 ) }
    dend_46 { pt3dadd( -16.5442, -332.556, -47.062, 1.18 ) }
    dend_46 { pt3dadd( -15.8738, -333.447, -47.3077, 0.96 ) }
    dend_46 { pt3dadd( -15.5858, -333.82, -47.4218, 1.47 ) }
    dend_46 { pt3dadd( -15.244, -334.266, -47.572, 1.84 ) }
    dend_46 { pt3dadd( -14.829, -334.806, -47.7652, 1.33 ) }
    dend_46 { pt3dadd( -14.2723, -335.552, -48.0508, 0.74 ) }
    dend_46 { pt3dadd( -14.2438, -335.594, -48.0703, 0.74 ) }
    dend_46 { pt3dadd( -13.879, -336.132, -48.3416, 0.81 ) }
    dend_46 { pt3dadd( -13.5972, -336.564, -48.5802, 0.44 ) }
    dend_46 { pt3dadd( -13.5744, -336.605, -48.6064, 0.44 ) }
    dend_46 { pt3dadd( -13.2753, -337.309, -49.072, 0.29 ) }
    dend_46 { pt3dadd( -13.0587, -337.942, -49.5336, 0.44 ) }
    dend_46 { pt3dadd( -12.9331, -338.337, -49.8275, 0.81 ) }
    dend_46 { pt3dadd( -12.7929, -338.707, -50.1108, 0.81 ) }
    dend_46 { pt3dadd( -12.4453, -339.402, -50.6738, 0.37 ) }
    dend_46 { pt3dadd( -12.4171, -339.444, -50.7078, 0.37 ) }
    dend_46 { pt3dadd( -12.0578, -339.904, -51.054, 0.81 ) }
    dend_46 { pt3dadd( -11.6621, -340.382, -51.372, 1.11 ) }
    dend_46 { pt3dadd( -11.1013, -341.08, -51.7558, 1.11 ) }
    dend_46 { pt3dadd( -10.4049, -342.016, -52.1612, 0.29 ) }
    dend_46 { pt3dadd( -9.90632, -342.767, -52.3956, 0.29 ) }
    dend_46 { pt3dadd( -9.58622, -343.33, -52.5073, 0.66 ) }
    dend_46 { pt3dadd( -9.25832, -344.061, -52.5653, 0.88 ) }
    dend_46 { pt3dadd( -9.03845, -344.697, -52.5627, 1.03 ) }
    dend_46 { pt3dadd( -8.92835, -345.242, -52.5129, 1.03 ) }
    dend_46 { pt3dadd( -8.86056, -345.894, -52.3829, 0.74 ) }
    dend_46 { pt3dadd( -8.8101, -346.813, -52.1378, 0.22 ) }
    dend_46 { pt3dadd( -8.76913, -347.402, -51.9447, 0.74 ) }
    dend_46 { pt3dadd( -8.76311, -347.457, -51.9226, 0.74 ) }
    dend_46 { pt3dadd( -8.68511, -347.987, -51.6946, 0.74 ) }
    dend_46 { pt3dadd( -8.67869, -348.035, -51.6725, 0.74 ) }
    dend_46 { pt3dadd( -8.61329, -348.661, -51.401, 0.29 ) }
    dend_46 { pt3dadd( -8.57745, -349.11, -51.2494, 0.29 ) }
    dend_46 { pt3dadd( -8.52294, -349.692, -51.1021, 1.03 ) }
    dend_46 { pt3dadd( -8.4898, -350.288, -51.0231, 1.4 ) }
    dend_46 { pt3dadd( -8.47825, -350.955, -50.9984, 0.52 ) }
    dend_46 { pt3dadd( -8.50083, -351.381, -51.001, 0.29 ) }
    dend_46 { pt3dadd( -8.65027, -352.077, -51.0613, 0.37 ) }
    dend_46 { pt3dadd( -8.82516, -352.51, -51.141, 0.66 ) }
    dend_46 { pt3dadd( -9.23382, -353.177, -51.3621, 0.37 ) }
    dend_46 { pt3dadd( -9.49136, -353.476, -51.5267, 0.96 ) }
    dend_46 { pt3dadd( -9.77078, -353.766, -51.724, 0.96 ) }
    dend_46 { pt3dadd( -10.5289, -354.486, -52.2623, 0.37 ) }
    dend_46 { pt3dadd( -11.2733, -355.155, -52.8191, 0.74 ) }
    dend_46 { pt3dadd( -12.0735, -355.875, -53.4752, 1.25 ) }
    dend_46 { pt3dadd( -13.4696, -357.162, -54.7915, 0.29 ) }
    dend_46 { pt3dadd( -13.9374, -357.593, -55.2678, 0.29 ) }
    dend_46 { pt3dadd( -13.9718, -357.625, -55.3064, 0.29 ) }
    dend_46 { pt3dadd( -14.4182, -358.079, -55.8864, 0.88 ) }
    dend_46 { pt3dadd( -14.6049, -358.29, -56.1725, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( -15.0481, -358.897, -57.0571, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -17.1703, -331.66, -46.8168, 0.44 ) }
    dend_45 { pt3dadd( -16.4741, -332.354, -47.1125, 0.44 ) }
    dend_45 { pt3dadd( -15.6259, -333.22, -47.4479, 0.44 ) }
    dend_45 { pt3dadd( -15.5777, -333.274, -47.4655, 0.44 ) }
    dend_45 { pt3dadd( -15.243, -333.654, -47.582, 0.29 ) }
    dend_45 { pt3dadd( -14.8289, -334.109, -47.722, 0.81 ) }
    dend_45 { pt3dadd( -14.3482, -334.61, -47.8818, 1.11 ) }
    dend_45 { pt3dadd( -14.3103, -334.651, -47.8914, 1.11 ) }
    dend_45 { pt3dadd( -13.7775, -335.252, -48.0375, 0.44 ) }
    dend_45 { pt3dadd( -13.7374, -335.299, -48.0497, 0.44 ) }
    dend_45 { pt3dadd( -13.2565, -335.903, -48.2142, 0.37 ) }
    dend_45 { pt3dadd( -12.9316, -336.35, -48.3271, 0.37 ) }
    dend_45 { pt3dadd( -12.4234, -337.126, -48.5081, 0.29 ) }
    dend_45 { pt3dadd( -12.1358, -337.574, -48.6206, 0.74 ) }
    dend_45 { pt3dadd( -11.9675, -337.834, -48.6913, 0.81 ) }
    dend_45 { pt3dadd( -11.8959, -337.946, -48.7288, 0.81 ) }
    dend_45 { pt3dadd( -11.4927, -338.581, -48.9725, 0.44 ) }
    dend_45 { pt3dadd( -11.1287, -339.131, -49.2101, 0.29 ) }
    dend_45 { pt3dadd( -10.7061, -339.702, -49.4928, 0.52 ) }
    dend_45 { pt3dadd( -10.4561, -340.009, -49.66, 0.52 ) }
    dend_45 { pt3dadd( -9.80556, -340.796, -50.13, 0.29 ) }
    dend_45 { pt3dadd( -9.3574, -341.356, -50.5049, 0.59 ) }
    dend_45 { pt3dadd( -9.32547, -341.402, -50.5398, 0.59 ) }
    dend_45 { pt3dadd( -9.15181, -341.71, -50.7667, 0.59 ) }
    dend_45 { pt3dadd( -9.12861, -341.757, -50.8012, 0.59 ) }
    dend_45 { pt3dadd( -8.73769, -342.69, -51.472, 0.81 ) }
    dend_45 { pt3dadd( -8.55232, -343.221, -51.8497, 1.03 ) }
    dend_45 { pt3dadd( -8.33392, -343.99, -52.422, 0.59 ) }
    dend_45 { pt3dadd( -8.11814, -344.833, -53.0521, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -78.1318, -117.664, 36.1832, 0.37 ) }
    dend_39 { pt3dadd( -81.6339, -123.794, 40.137, 0.37 ) }
    dend_39 { pt3dadd( -87.0605, -128.778, 43.6684, 0.37 ) }
    dend_39 { pt3dadd( -93.6042, -132.66, 46.8077, 0.37 ) }
    dend_39 { pt3dadd( -99.0442, -137.291, 50.8198, 0.37 ) }
    dend_39 { pt3dadd( -104.41, -141.759, 55.1264, 0.37 ) }
    dend_39 { pt3dadd( -109.328, -147.218, 58.6274, 0.37 ) }
    dend_39 { pt3dadd( -113.329, -153.27, 62.219, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -78.1318, -117.664, 36.1832, 0.29 ) }
    dend_36 { pt3dadd( -82.8017, -126.675, 41.7517, 0.37 ) }
    dend_36 { pt3dadd( -86.446, -136.532, 46.4237, 0.37 ) }
    dend_36 { pt3dadd( -90.1738, -146.761, 49.9938, 0.37 ) }
    dend_36 { pt3dadd( -93.9989, -156.382, 55.0528, 0.37 ) }
    dend_36 { pt3dadd( -99.5748, -165.82, 58.6133, 0.37 ) }
    dend_36 { pt3dadd( -104.516, -174.953, 63.7003, 0.37 ) }
    dend_36 { pt3dadd( -108.84, -183.318, 70.5328, 0.37 ) }
    dend_36 { pt3dadd( -113.283, -191.446, 77.6025, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 40.259, 146.544, 46.8173, 0.29 ) }
    dend_8 { pt3dadd( 41.3811, 156.007, 49.3269, 0.29 ) }
    dend_8 { pt3dadd( 41.8972, 165.124, 53.1931, 0.29 ) }
    dend_8 { pt3dadd( 41.7866, 174.483, 56.3892, 0.29 ) }
    dend_8 { pt3dadd( 42.1134, 183.573, 60.3512, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 40.259, 146.544, 46.8173, 0.44 ) }
    dend_7 { pt3dadd( 41.773, 156.311, 48.7263, 0.29 ) }
    dend_7 { pt3dadd( 42.5208, 166.284, 49.6507, 0.29 ) }
    dend_7 { pt3dadd( 42.241, 176.155, 51.7696, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -178.225, -260.456, 45.3333, 0.29 ) }
    dend_90 { pt3dadd( -187.445, -268.247, 45.5381, 0.29 ) }
    dend_90 { pt3dadd( -197.907, -274.452, 45.7273, 0.29 ) }
    dend_90 { pt3dadd( -208.819, -279.793, 44.7152, 0.29 ) }
    dend_90 { pt3dadd( -218.859, -286.52, 46.0561, 0.29 ) }
    dend_90 { pt3dadd( -228.781, -293.416, 47.3185, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -178.225, -260.456, 45.3333, 0.44 ) }
    dend_89 { pt3dadd( -183.045, -265.566, 44.5458, 0.29 ) }
    dend_89 { pt3dadd( -187.64, -270.775, 43.3323, 0.29 ) }
    dend_89 { pt3dadd( -191.407, -276.486, 41.8075, 0.29 ) }
    dend_89 { pt3dadd( -195.246, -282.284, 40.8635, 0.29 ) }
    dend_89 { pt3dadd( -198.82, -288.288, 40.2877, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -161.58, -213.758, 77.8109, 0.22 ) }
    dend_86 { pt3dadd( -160.759, -213.366, 77.9189, 0.22 ) }
    dend_86 { pt3dadd( -160.39, -213.192, 77.9558, 0.52 ) }
    dend_86 { pt3dadd( -160.128, -213.074, 77.9627, 0.74 ) }
    dend_86 { pt3dadd( -159.309, -212.732, 77.9364, 0.37 ) }
    dend_86 { pt3dadd( -158.403, -212.357, 77.8641, 0.37 ) }
    dend_86 { pt3dadd( -158.068, -212.218, 77.8374, 0.37 ) }
    dend_86 { pt3dadd( -157.928, -212.163, 77.8165, 0.37 ) }
    dend_86 { pt3dadd( -157.26, -211.926, 77.705, 0.37 ) }
    dend_86 { pt3dadd( -156.953, -211.825, 77.6378, 0.88 ) }
    dend_86 { pt3dadd( -156.525, -211.682, 77.467, 0.88 ) }
    dend_86 { pt3dadd( -149.799, -209.943, 77.4972, 0.88 ) }
    dend_86 { pt3dadd( -143.584, -206.962, 77.2554, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -161.58, -213.758, 77.8109, 0.44 ) }
    dend_73 { pt3dadd( -161.529, -213.086, 77.9498, 0.44 ) }
    dend_73 { pt3dadd( -161.453, -212.438, 78.0736, 0.37 ) }
    dend_73 { pt3dadd( -161.447, -212.409, 78.0799, 0.37 ) }
    dend_73 { pt3dadd( -161.347, -211.9, 78.2096, 0.37 ) }
    dend_73 { pt3dadd( -161.337, -211.849, 78.2266, 0.37 ) }
    dend_73 { pt3dadd( -161.218, -211.246, 78.4572, 0.37 ) }
    dend_73 { pt3dadd( -161.21, -211.215, 78.4723, 0.37 ) }
    dend_73 { pt3dadd( -161.123, -210.838, 78.6899, 0.29 ) }
    dend_73 { pt3dadd( -161.052, -210.44, 78.9382, 0.29 ) }
    dend_73 { pt3dadd( -161.007, -210.076, 79.1853, 0.29 ) }
    dend_73 { pt3dadd( -161.003, -209.989, 79.2478, 0.66 ) }
    dend_73 { pt3dadd( -161.007, -209.924, 79.2955, 0.66 ) }
    dend_73 { pt3dadd( -161.035, -209.696, 79.4431, 0.66 ) }
    dend_73 { pt3dadd( -161.112, -209.321, 79.6545, 0.29 ) }
    dend_73 { pt3dadd( -161.156, -209.16, 79.7401, 0.44 ) }
    dend_73 { pt3dadd( -161.176, -209.1, 79.7717, 0.44 ) }
    dend_73 { pt3dadd( -161.287, -208.816, 79.9385, 0.37 ) }
    dend_73 { pt3dadd( -161.419, -208.507, 80.1353, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -161.431, -208.48, 80.1538, 0.37 ) }
    dend_73 { pt3dadd( -161.665, -207.99, 80.5168, 0.29 ) }
    dend_73 { pt3dadd( -161.8, -207.697, 80.7379, 0.44 ) }
    dend_73 { pt3dadd( -161.836, -207.612, 80.8053, 0.44 ) }
    dend_73 { pt3dadd( -161.938, -207.341, 81.0327, 0.44 ) }
    dend_73 { pt3dadd( -162.03, -207.075, 81.2579, 0.29 ) }
    dend_73 { pt3dadd( -162.047, -207.018, 81.3059, 0.29 ) }
    dend_73 { pt3dadd( -162.086, -206.851, 81.4425, 0.44 ) }
    dend_73 { pt3dadd( -162.125, -206.666, 81.5935, 0.44 ) }
    dend_73 { pt3dadd( -162.131, -206.634, 81.6185, 0.44 ) }
    dend_73 { pt3dadd( -162.166, -206.409, 81.7851, 0.44 ) }
    dend_73 { pt3dadd( -162.183, -206.165, 81.9564, 0.44 ) }
    dend_73 { pt3dadd( -162.182, -206.135, 81.9749, 0.44 ) }
    dend_73 { pt3dadd( -162.16, -205.851, 82.1259, 0.37 ) }
    dend_73 { pt3dadd( -162.148, -205.711, 82.1938, 0.37 ) }
    dend_73 { pt3dadd( -162.115, -205.344, 82.3521, 0.44 ) }
    dend_73 { pt3dadd( -162.081, -205.016, 82.4799, 0.44 ) }
    dend_73 { pt3dadd( -162.059, -204.647, 82.5847, 0.44 ) }
    dend_73 { pt3dadd( -162.044, -204.121, 82.7033, 0.44 ) }
    dend_73 { pt3dadd( -162.048, -203.632, 82.7989, 0.74 ) }
    dend_73 { pt3dadd( -162.077, -202.973, 82.9121, 0.81 ) }
    dend_73 { pt3dadd( -162.1, -202.699, 82.9512, 0.74 ) }
    dend_73 { pt3dadd( -162.229, -201.728, 83.0572, 0.29 ) }
    dend_73 { pt3dadd( -162.234, -201.698, 83.0598, 0.29 ) }
    dend_73 { pt3dadd( -162.273, -201.475, 83.0728, 0.29 ) }
    dend_73 { pt3dadd( -162.283, -201.4, 83.0778, 0.29 ) }
    dend_73 { pt3dadd( -162.293, -201.219, 83.1051, 0.44 ) }
    dend_73 { pt3dadd( -162.292, -201.185, 83.1117, 0.44 ) }
    dend_73 { pt3dadd( -162.27, -200.946, 83.1721, 0.44 ) }
    dend_73 { pt3dadd( -162.227, -200.557, 83.2584, 0.88 ) }
    dend_73 { pt3dadd( -162.153, -200.009, 83.3638, 0.52 ) }
    dend_73 { pt3dadd( -162.091, -199.582, 83.443, 0.52 ) }
    dend_73 { pt3dadd( -162.045, -199.235, 83.501, 0.44 ) }
    dend_73 { pt3dadd( -162.001, -198.853, 83.5651, 0.29 ) }
    dend_73 { pt3dadd( -161.974, -198.566, 83.6126, 0.59 ) }
    dend_73 { pt3dadd( -161.966, -198.455, 83.6323, 0.59 ) }
    dend_73 { pt3dadd( -161.955, -198.175, 83.6888, 0.59 ) }
    dend_73 { pt3dadd( -161.945, -197.897, 83.7466, 0.29 ) }
    dend_73 { pt3dadd( -161.927, -197.519, 83.8338, 0.29 ) }
    dend_73 { pt3dadd( -161.924, -197.48, 83.8424, 0.29 ) }
    dend_73 { pt3dadd( -161.904, -197.194, 83.9013, 0.59 ) }
    dend_73 { pt3dadd( -161.901, -197.149, 83.9101, 0.59 ) }
    dend_73 { pt3dadd( -161.872, -196.83, 83.9755, 0.66 ) }
    dend_73 { pt3dadd( -161.835, -196.479, 84.0511, 0.66 ) }
    dend_73 { pt3dadd( -161.793, -196.106, 84.1285, 0.29 ) }
    dend_73 { pt3dadd( -161.73, -195.584, 84.2356, 0.29 ) }
    dend_73 { pt3dadd( -161.725, -195.545, 84.2431, 0.29 ) }
    dend_73 { pt3dadd( -161.607, -194.891, 84.3856, 0.29 ) }
    dend_73 { pt3dadd( -161.592, -194.817, 84.4039, 0.29 ) }
    dend_73 { pt3dadd( -161.501, -194.408, 84.5221, 0.52 ) }
    dend_73 { pt3dadd( -161.485, -194.337, 84.546, 0.52 ) }
    dend_73 { pt3dadd( -161.385, -193.922, 84.706, 0.81 ) }
    dend_73 { pt3dadd( -161.303, -193.527, 84.8688, 0.52 ) }
    dend_73 { pt3dadd( -161.245, -193.206, 85.0116, 0.52 ) }
    dend_73 { pt3dadd( -161.204, -192.907, 85.1439, 0.74 ) }
    dend_73 { pt3dadd( -161.172, -192.548, 85.2965, 0.88 ) }
    dend_73 { pt3dadd( -161.162, -192.41, 85.3423, 0.88 ) }
    dend_73 { pt3dadd( -161.13, -191.955, 85.4201, 0.88 ) }
    dend_73 { pt3dadd( -161.126, -191.92, 85.4207, 0.88 ) }
    dend_73 { pt3dadd( -161.087, -191.669, 85.4013, 0.66 ) }
    dend_73 { pt3dadd( -160.996, -191.29, 85.3658, 0.44 ) }
    dend_73 { pt3dadd( -160.818, -190.738, 85.3336, 0.37 ) }
    dend_73 { pt3dadd( -160.622, -190.204, 85.3324, 0.29 ) }
    dend_73 { pt3dadd( -160.477, -189.846, 85.344, 0.29 ) }
    dend_73 { pt3dadd( -160.463, -189.814, 85.347, 0.29 ) }
    dend_73 { pt3dadd( -160.216, -189.223, 85.4484, 0.29 ) }
    dend_73 { pt3dadd( -159.914, -188.492, 85.6275, 0.29 ) }
    dend_73 { pt3dadd( -159.754, -188.069, 85.7694, 0.37 ) }
    dend_73 { pt3dadd( -159.732, -188.001, 85.7953, 0.37 ) }
    dend_73 { pt3dadd( -159.636, -187.641, 85.9284, 0.37 ) }
    dend_73 { pt3dadd( -159.542, -187.283, 86.0551, 0.37 ) }
    dend_73 { pt3dadd( -159.526, -187.217, 86.0766, 0.37 ) }
    dend_73 { pt3dadd( -159.409, -186.722, 86.2572, 0.52 ) }
    dend_73 { pt3dadd( -159.296, -186.22, 86.4563, 0.44 ) }
    dend_73 { pt3dadd( -159.181, -185.694, 86.6768, 1.11 ) }
    dend_73 { pt3dadd( -159.02, -184.993, 86.9721, 0.29 ) }
    dend_73 { pt3dadd( -159.011, -184.957, 86.9883, 0.29 ) }
    dend_73 { pt3dadd( -158.848, -184.428, 87.2299, 0.29 ) }
    dend_73 { pt3dadd( -158.746, -184.129, 87.3634, 0.29 ) }
    dend_73 { pt3dadd( -158.737, -184.103, 87.3746, 0.29 ) }
    dend_73 { pt3dadd( -158.546, -183.567, 87.5893, 0.37 ) }
    dend_73 { pt3dadd( -158.271, -182.76, 87.8818, 0.37 ) }
    dend_73 { pt3dadd( -158.067, -182.185, 88.0726, 0.37 ) }
    dend_73 { pt3dadd( -157.892, -181.723, 88.2089, 0.81 ) }
    dend_73 { pt3dadd( -157.776, -181.417, 88.2936, 1.03 ) }
    dend_73 { pt3dadd( -157.59, -180.897, 88.4306, 0.29 ) }
    dend_73 { pt3dadd( -157.475, -180.541, 88.5183, 0.29 ) }
    dend_73 { pt3dadd( -157.411, -180.296, 88.5683, 0.44 ) }
    dend_73 { pt3dadd( -157.403, -180.263, 88.5758, 0.44 ) }
    dend_73 { pt3dadd( -157.369, -180.087, 88.6223, 0.44 ) }
    dend_73 { pt3dadd( -157.29, -179.654, 88.7678, 0.29 ) }
    dend_73 { pt3dadd( -157.279, -179.59, 88.7932, 0.29 ) }
    dend_73 { pt3dadd( -157.189, -179.061, 89.0262, 0.29 ) }
    dend_73 { pt3dadd( -157.184, -179.029, 89.0413, 0.29 ) }
    dend_73 { pt3dadd( -157.11, -178.457, 89.328, 0.29 ) }
    dend_73 { pt3dadd( -157.069, -178.122, 89.4987, 0.66 ) }
    dend_73 { pt3dadd( -157.037, -177.881, 89.6198, 0.74 ) }
    dend_73 { pt3dadd( -157.026, -177.818, 89.6482, 0.74 ) }
    dend_73 { pt3dadd( -156.9, -177.225, 89.8768, 0.29 ) }
    dend_73 { pt3dadd( -156.885, -177.163, 89.8965, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -156.795, -176.784, 89.9902, 0.29 ) }
    dend_73 { pt3dadd( -156.735, -176.516, 90.0453, 0.74 ) }
    dend_73 { pt3dadd( -156.63, -176.09, 90.1208, 0.22 ) }
    dend_73 { pt3dadd( -156.464, -175.475, 90.2121, 0.22 ) }
    dend_73 { pt3dadd( -156.283, -174.915, 90.267, 1.03 ) }
    dend_73 { pt3dadd( -156.088, -174.35, 90.3099, 0.29 ) }
    dend_73 { pt3dadd( -156.05, -174.244, 90.3163, 0.29 ) }
    dend_73 { pt3dadd( -155.834, -173.671, 90.3447, 0.29 ) }
    dend_73 { pt3dadd( -155.792, -173.567, 90.3485, 0.29 ) }
    dend_73 { pt3dadd( -155.415, -172.674, 90.3652, 0.29 ) }
    dend_73 { pt3dadd( -155.377, -172.585, 90.3677, 0.29 ) }
    dend_73 { pt3dadd( -155.12, -171.961, 90.3786, 0.29 ) }
    dend_73 { pt3dadd( -155.106, -171.923, 90.3793, 0.29 ) }
    dend_73 { pt3dadd( -154.96, -171.425, 90.3932, 0.44 ) }
    dend_73 { pt3dadd( -154.952, -171.391, 90.3944, 0.44 ) }
    dend_73 { pt3dadd( -154.882, -170.966, 90.4143, 0.44 ) }
    dend_73 { pt3dadd( -154.815, -170.525, 90.4334, 0.74 ) }
    dend_73 { pt3dadd( -154.81, -170.489, 90.4352, 0.74 ) }
    dend_73 { pt3dadd( -154.788, -170.282, 90.449, 1.03 ) }
    dend_73 { pt3dadd( -154.752, -169.902, 90.4895, 0.59 ) }
    dend_73 { pt3dadd( -154.694, -169.519, 90.5899, 0.29 ) }
    dend_73 { pt3dadd( -154.679, -169.451, 90.6192, 0.29 ) }
    dend_73 { pt3dadd( -154.617, -169.226, 90.7558, 0.29 ) }
    dend_73 { pt3dadd( -154.608, -169.193, 90.778, 0.29 ) }
    dend_73 { pt3dadd( -154.509, -168.856, 91.0312, 0.88 ) }
    dend_73 { pt3dadd( -154.371, -168.365, 91.4014, 0.88 ) }
    dend_73 { pt3dadd( -154.357, -168.309, 91.4412, 0.88 ) }
    dend_73 { pt3dadd( -154.298, -168.071, 91.598, 0.66 ) }
    dend_73 { pt3dadd( -154.223, -167.837, 91.7486, 0.29 ) }
    dend_73 { pt3dadd( -154.133, -167.594, 91.8973, 0.29 ) }
    dend_73 { pt3dadd( -153.945, -167.123, 92.1641, 0.29 ) }
    dend_73 { pt3dadd( -153.846, -166.882, 92.2845, 0.44 ) }
    dend_73 { pt3dadd( -153.831, -166.849, 92.3019, 0.44 ) }
    dend_73 { pt3dadd( -153.558, -166.383, 92.5963, 0.37 ) }
    dend_73 { pt3dadd( -153.37, -166.074, 92.8154, 0.29 ) }
    dend_73 { pt3dadd( -153.356, -166.048, 92.8349, 0.29 ) }
    dend_73 { pt3dadd( -153.249, -165.834, 92.9977, 0.74 ) }
    dend_73 { pt3dadd( -153.24, -165.811, 93.0144, 0.74 ) }
    dend_73 { pt3dadd( -153.09, -165.21, 93.4408, 0.29 ) }
    dend_73 { pt3dadd( -153.012, -164.645, 93.8116, 0.29 ) }
    dend_73 { pt3dadd( -152.953, -164.17, 94.1246, 0.22 ) }
    dend_73 { pt3dadd( -152.943, -164.079, 94.1859, 0.22 ) }
    dend_73 { pt3dadd( -152.884, -163.45, 94.6008, 0.29 ) }
    dend_73 { pt3dadd( -152.881, -163.416, 94.6224, 0.29 ) }
    dend_73 { pt3dadd( -152.854, -162.859, 94.952, 0.29 ) }
    dend_73 { pt3dadd( -152.814, -162.393, 95.244, 0.29 ) }
    dend_73 { pt3dadd( -152.755, -161.922, 95.5559, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -231.695, -263.626, 115.265, 0.37 ) }
    dend_71 { pt3dadd( -232.03, -264.006, 114.98, 0.37 ) }
    dend_71 { pt3dadd( -232.789, -264.809, 114.449, 0.37 ) }
    dend_71 { pt3dadd( -233.423, -265.501, 114.043, 0.29 ) }
    dend_71 { pt3dadd( -233.813, -265.908, 113.8, 0.44 ) }
    dend_71 { pt3dadd( -234.196, -266.315, 113.565, 0.44 ) }
    dend_71 { pt3dadd( -234.941, -267.126, 113.116, 0.29 ) }
    dend_71 { pt3dadd( -235.222, -267.425, 112.968, 0.37 ) }
    dend_71 { pt3dadd( -235.625, -267.857, 112.8, 0.37 ) }
    dend_71 { pt3dadd( -236.478, -268.711, 112.43, 0.37 ) }
    dend_71 { pt3dadd( -236.88, -269.104, 112.243, 0.37 ) }
    dend_71 { pt3dadd( -237.159, -269.382, 112.1, 0.66 ) }
    dend_71 { pt3dadd( -237.196, -269.42, 112.081, 0.66 ) }
    dend_71 { pt3dadd( -237.465, -269.668, 111.959, 0.74 ) }
    dend_71 { pt3dadd( -238.202, -270.272, 111.666, 0.37 ) }
    dend_71 { pt3dadd( -238.662, -270.626, 111.53, 0.37 ) }
    dend_71 { pt3dadd( -238.717, -270.66, 111.514, 0.37 ) }
    dend_71 { pt3dadd( -239.147, -270.898, 111.387, 0.37 ) }
    dend_71 { pt3dadd( -243.467, -277.202, 108.95, 0.37 ) }
    dend_71 { pt3dadd( -246.441, -284.252, 106.706, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -231.695, -263.626, 115.265, 0.29 ) }
    dend_70 { pt3dadd( -232.297, -263.554, 116.012, 0.29 ) }
    dend_70 { pt3dadd( -232.8, -263.545, 116.774, 0.52 ) }
    dend_70 { pt3dadd( -233.516, -263.601, 117.848, 0.44 ) }
    dend_70 { pt3dadd( -233.776, -263.66, 118.212, 0.29 ) }
    dend_70 { pt3dadd( -234.288, -263.819, 118.861, 0.29 ) }
    dend_70 { pt3dadd( -234.702, -263.964, 119.404, 0.44 ) }
    dend_70 { pt3dadd( -235.67, -264.37, 120.75, 0.29 ) }
    dend_70 { pt3dadd( -236.083, -264.537, 121.298, 0.29 ) }
    dend_70 { pt3dadd( -236.686, -264.794, 122.081, 0.29 ) }
    dend_70 { pt3dadd( -237.237, -265.046, 122.861, 0.29 ) }
    dend_70 { pt3dadd( -237.804, -265.303, 123.705, 0.29 ) }
    dend_70 { pt3dadd( -237.832, -265.316, 123.746, 0.29 ) }
    dend_70 { pt3dadd( -238.334, -265.49, 124.461, 0.44 ) }
    dend_70 { pt3dadd( -239.015, -265.65, 125.582, 0.44 ) }
    dend_70 { pt3dadd( -239.076, -265.653, 125.699, 0.44 ) }
    dend_70 { pt3dadd( -239.398, -265.667, 126.368, 0.66 ) }
    dend_70 { pt3dadd( -239.792, -265.729, 126.996, 0.66 ) }
    dend_70 { pt3dadd( -244.372, -266.854, 134.058, 0.66 ) }
    dend_70 { pt3dadd( -247.215, -268.053, 141.97, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 36.3718, -226.359, -80.0755, 0.52 ) }
    dend_64 { pt3dadd( 35.9573, -227.086, -79.5367, 0.52 ) }
    dend_64 { pt3dadd( 35.6289, -227.676, -79.1343, 0.29 ) }
    dend_64 { pt3dadd( 35.273, -228.346, -78.7351, 0.22 ) }
    dend_64 { pt3dadd( 35.102, -228.702, -78.5261, 0.52 ) }
    dend_64 { pt3dadd( 34.9544, -229.026, -78.3354, 0.74 ) }
    dend_64 { pt3dadd( 34.7705, -229.444, -78.0926, 0.81 ) }
    dend_64 { pt3dadd( 34.597, -229.832, -77.8679, 0.66 ) }
    dend_64 { pt3dadd( 34.3388, -230.393, -77.5638, 0.29 ) }
    dend_64 { pt3dadd( 34.0715, -231.096, -77.2267, 0.29 ) }
    dend_64 { pt3dadd( 34.0555, -231.142, -77.206, 0.29 ) }
    dend_64 { pt3dadd( 34.0066, -231.29, -77.1427, 0.66 ) }
    dend_64 { pt3dadd( 33.8661, -231.714, -76.9588, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 33.6838, -232.237, -76.7281, 0.22 ) }
    dend_64 { pt3dadd( 33.5161, -232.69, -76.5378, 0.22 ) }
    dend_64 { pt3dadd( 33.4251, -232.914, -76.4686, 0.52 ) }
    dend_64 { pt3dadd( 33.3146, -233.195, -76.3867, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 36.3718, -226.359, -80.0755, 1.18 ) }
    dend_63 { pt3dadd( 36.8823, -226.986, -80.4297, 1.18 ) }
    dend_63 { pt3dadd( 37.1023, -227.285, -80.5635, 1.4 ) }
    dend_63 { pt3dadd( 37.5181, -227.868, -80.727, 0.37 ) }
    dend_63 { pt3dadd( 37.8939, -228.425, -80.7461, 0.44 ) }
    dend_63 { pt3dadd( 38.18, -228.907, -80.6776, 0.66 ) }
    dend_63 { pt3dadd( 38.5704, -229.61, -80.4547, 0.66 ) }
    dend_63 { pt3dadd( 38.7472, -229.979, -80.2856, 0.66 ) }
    dend_63 { pt3dadd( 39.1187, -230.827, -79.8498, 0.59 ) }
    dend_63 { pt3dadd( 39.5726, -231.932, -79.2487, 0.37 ) }
    dend_63 { pt3dadd( 39.8378, -232.587, -78.8928, 1.55 ) }
    dend_63 { pt3dadd( 40.3209, -233.753, -78.3294, 0.37 ) }
    dend_63 { pt3dadd( 40.6226, -234.483, -78.0625, 0.44 ) }
    dend_63 { pt3dadd( 40.935, -235.204, -77.9051, 0.44 ) }
    dend_63 { pt3dadd( 41.1065, -235.605, -77.8987, 0.88 ) }
    dend_63 { pt3dadd( 41.2617, -235.971, -77.9605, 1.03 ) }
    dend_63 { pt3dadd( 41.5472, -236.686, -78.1274, 0.37 ) }
    dend_63 { pt3dadd( 41.7293, -237.247, -78.2793, 0.37 ) }
    dend_63 { pt3dadd( 41.8147, -237.529, -78.3431, 0.88 ) }
    dend_63 { pt3dadd( 41.9248, -237.913, -78.4185, 0.96 ) }
    dend_63 { pt3dadd( 42.0915, -238.555, -78.519, 0.96 ) }
    dend_63 { pt3dadd( 42.2926, -239.351, -78.6355, 0.29 ) }
    dend_63 { pt3dadd( 42.5601, -240.155, -78.7301, 0.29 ) }
    dend_63 { pt3dadd( 42.6772, -240.441, -78.758, 0.66 ) }
    dend_63 { pt3dadd( 42.8482, -240.764, -78.771, 0.88 ) }
    dend_63 { pt3dadd( 42.8781, -240.811, -78.7707, 0.88 ) }
    dend_63 { pt3dadd( 43.1591, -241.194, -78.7525, 0.74 ) }
    dend_63 { pt3dadd( 43.8911, -242.153, -78.6329, 0.29 ) }
    dend_63 { pt3dadd( 44.2619, -242.667, -78.5397, 0.29 ) }
    dend_63 { pt3dadd( 44.741, -243.354, -78.4608, 1.11 ) }
    dend_63 { pt3dadd( 44.9783, -243.688, -78.4622, 1.11 ) }
    dend_63 { pt3dadd( 45.0105, -243.733, -78.4684, 1.11 ) }
    dend_63 { pt3dadd( 45.2733, -244.117, -78.5718, 1.11 ) }
    dend_63 { pt3dadd( 45.9035, -244.989, -78.9071, 0.29 ) }
    dend_63 { pt3dadd( 46.4551, -245.719, -79.2164, 0.29 ) }
    dend_63 { pt3dadd( 46.934, -246.357, -79.4856, 0.29 ) }
    dend_63 { pt3dadd( 47.2038, -246.715, -79.6226, 0.81 ) }
    dend_63 { pt3dadd( 47.5426, -247.154, -79.7555, 0.96 ) }
    dend_63 { pt3dadd( 48.2995, -247.991, -79.9152, 0.96 ) }
    dend_63 { pt3dadd( 48.78, -248.487, -79.9475, 0.37 ) }
    dend_63 { pt3dadd( 49.2657, -248.983, -79.9207, 0.88 ) }
    dend_63 { pt3dadd( 49.652, -249.39, -79.8696, 0.88 ) }
    dend_63 { pt3dadd( 50.3943, -250.207, -79.7429, 0.59 ) }
    dend_63 { pt3dadd( 51.3273, -251.326, -79.5693, 0.44 ) }
    dend_63 { pt3dadd( 51.6532, -251.777, -79.5202, 0.59 ) }
    dend_63 { pt3dadd( 51.8836, -252.148, -79.488, 0.59 ) }
    dend_63 { pt3dadd( 52.176, -252.748, -79.4616, 0.88 ) }
    dend_63 { pt3dadd( 52.38, -253.296, -79.4794, 0.29 ) }
    dend_63 { pt3dadd( 52.5561, -253.942, -79.5428, 0.29 ) }
    dend_63 { pt3dadd( 52.7289, -254.612, -79.6251, 0.37 ) }
    dend_63 { pt3dadd( 52.9555, -255.337, -79.7114, 0.96 ) }
    dend_63 { pt3dadd( 53.1388, -255.859, -79.7689, 1.33 ) }
    dend_63 { pt3dadd( 53.5092, -256.717, -79.8315, 0.37 ) }
    dend_63 { pt3dadd( 53.8038, -257.33, -79.8423, 0.52 ) }
    dend_63 { pt3dadd( 54.2087, -258.125, -79.8104, 0.44 ) }
    dend_63 { pt3dadd( 54.4313, -258.543, -79.7791, 0.29 ) }
    dend_63 { pt3dadd( 54.6818, -258.993, -79.745, 0.88 ) }
    dend_63 { pt3dadd( 55.1162, -259.794, -79.6746, 0.74 ) }
    dend_63 { pt3dadd( 55.4236, -260.315, -79.6243, 0.29 ) }
    dend_63 { pt3dadd( 55.7276, -260.794, -79.6146, 0.59 ) }
    dend_63 { pt3dadd( 56.0526, -261.311, -79.6244, 0.74 ) }
    dend_63 { pt3dadd( 56.3382, -261.726, -79.6213, 0.88 ) }
    dend_63 { pt3dadd( 56.3735, -261.778, -79.6192, 0.88 ) }
    dend_63 { pt3dadd( 57.0367, -262.836, -79.5205, 0.52 ) }
    dend_63 { pt3dadd( 57.2792, -263.261, -79.4279, 0.52 ) }
    dend_63 { pt3dadd( 57.6142, -263.91, -79.1832, 0.52 ) }
    dend_63 { pt3dadd( 57.9322, -264.588, -78.8875, 0.96 ) }
    dend_63 { pt3dadd( 58.1131, -264.939, -78.7114, 1.33 ) }
    dend_63 { pt3dadd( 58.3971, -265.435, -78.4586, 0.59 ) }
    dend_63 { pt3dadd( 58.7604, -266.065, -78.1466, 0.37 ) }
    dend_63 { pt3dadd( 59.3214, -266.957, -77.7485, 0.44 ) }
    dend_63 { pt3dadd( 59.6566, -267.481, -77.5691, 0.66 ) }
    dend_63 { pt3dadd( 60.2422, -268.444, -77.3567, 0.96 ) }
    dend_63 { pt3dadd( 60.8341, -269.415, -77.2187, 0.44 ) }
    dend_63 { pt3dadd( 61.1269, -269.91, -77.1831, 1.03 ) }
    dend_63 { pt3dadd( 61.4573, -270.498, -77.1993, 1.18 ) }
    dend_63 { pt3dadd( 61.8322, -271.313, -77.2976, 0.29 ) }
    dend_63 { pt3dadd( 62.0988, -272.1, -77.446, 0.29 ) }
    dend_63 { pt3dadd( 62.1239, -272.219, -77.4772, 0.88 ) }
    dend_63 { pt3dadd( 62.1617, -272.507, -77.5549, 1.25 ) }
    dend_63 { pt3dadd( 62.2439, -273.103, -77.6859, 0.66 ) }
    dend_63 { pt3dadd( 62.3371, -273.76, -77.7908, 0.59 ) }
    dend_63 { pt3dadd( 62.4752, -274.675, -77.8899, 0.52 ) }
    dend_63 { pt3dadd( 62.5522, -275.221, -77.9227, 0.52 ) }
    dend_63 { pt3dadd( 62.6664, -276.006, -77.9499, 0.52 ) }
    dend_63 { pt3dadd( 62.8015, -276.745, -77.9464, 0.37 ) }
    dend_63 { pt3dadd( 62.9104, -277.431, -77.9355, 0.29 ) }
    dend_63 { pt3dadd( 62.9508, -277.703, -77.9383, 0.74 ) }
    dend_63 { pt3dadd( 62.9725, -277.864, -77.9479, 0.74 ) }
    dend_63 { pt3dadd( 63.0152, -278.311, -78.005, 0.74 ) }
    dend_63 { pt3dadd( 63.056, -279.029, -78.1523, 0.81 ) }
    dend_63 { pt3dadd( 63.0408, -280.139, -78.4341, 0.81 ) }
    dend_63 { pt3dadd( 63.0273, -280.858, -78.6504, 0.81 ) }
    dend_63 { pt3dadd( 63.0231, -281.65, -78.9154, 0.81 ) }
    dend_63 { pt3dadd( 63.0236, -281.702, -78.9334, 0.81 ) }
    dend_63 { pt3dadd( 63.0409, -282.391, -79.1882, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 63.0805, -283.247, -79.5215, 0.44 ) }
    dend_63 { pt3dadd( 63.1566, -283.789, -79.7247, 0.44 ) }
    dend_63 { pt3dadd( 63.2748, -284.406, -79.9621, 0.29 ) }
    dend_63 { pt3dadd( 63.3985, -284.926, -80.1499, 0.74 ) }
    dend_63 { pt3dadd( 63.4748, -285.239, -80.2455, 0.96 ) }
    dend_63 { pt3dadd( 63.4898, -285.29, -80.2553, 0.96 ) }
    dend_63 { pt3dadd( 63.6572, -285.832, -80.2931, 0.52 ) }
    dend_63 { pt3dadd( 63.9113, -286.636, -80.248, 0.52 ) }
    dend_63 { pt3dadd( 64.17, -287.39, -80.149, 0.52 ) }
    dend_63 { pt3dadd( 64.3563, -287.887, -80.0774, 0.59 ) }
    dend_63 { pt3dadd( 64.7037, -288.736, -79.9741, 0.74 ) }
    dend_63 { pt3dadd( 64.9096, -289.198, -79.9356, 0.52 ) }
    dend_63 { pt3dadd( 65.294, -290.043, -79.9032, 0.37 ) }
    dend_63 { pt3dadd( 65.3174, -290.094, -79.9041, 0.37 ) }
    dend_63 { pt3dadd( 65.6738, -290.849, -80.0111, 0.44 ) }
    dend_63 { pt3dadd( 65.9218, -291.382, -80.164, 0.37 ) }
    dend_63 { pt3dadd( 66.0715, -291.752, -80.3258, 0.74 ) }
    dend_63 { pt3dadd( 66.2754, -292.317, -80.596, 0.29 ) }
    dend_63 { pt3dadd( 66.2863, -292.358, -80.6149, 0.29 ) }
    dend_63 { pt3dadd( 66.3516, -292.631, -80.7294, 0.44 ) }
    dend_63 { pt3dadd( 66.3596, -292.674, -80.7434, 0.44 ) }
    dend_63 { pt3dadd( 66.4132, -293.064, -80.839, 0.44 ) }
    dend_63 { pt3dadd( 66.522, -293.835, -80.9953, 0.22 ) }
    dend_63 { pt3dadd( 66.6328, -294.375, -81.0965, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -23.541, -214.377, -108.631, 0.29 ) }
    dend_61 { pt3dadd( -24.85, -213.835, -109.439, 0.29 ) }
    dend_61 { pt3dadd( -25.02, -213.767, -109.529, 0.29 ) }
    dend_61 { pt3dadd( -25.8223, -213.426, -109.902, 0.29 ) }
    dend_61 { pt3dadd( -27.7347, -212.534, -110.692, 0.29 ) }
    dend_61 { pt3dadd( -28.4219, -212.176, -110.994, 0.59 ) }
    dend_61 { pt3dadd( -30.3109, -211.066, -111.83, 0.59 ) }
    dend_61 { pt3dadd( -31.3229, -210.355, -112.284, 0.37 ) }
    dend_61 { pt3dadd( -31.8475, -209.922, -112.541, 0.66 ) }
    dend_61 { pt3dadd( -32.3873, -209.428, -112.833, 0.88 ) }
    dend_61 { pt3dadd( -34.2024, -207.615, -113.883, 0.22 ) }
    dend_61 { pt3dadd( -34.8632, -206.906, -114.303, 0.44 ) }
    dend_61 { pt3dadd( -35.3965, -206.266, -114.664, 0.59 ) }
    dend_61 { pt3dadd( -36.2806, -205.166, -115.391, 0.29 ) }
    dend_61 { pt3dadd( -37.067, -204.213, -116.097, 0.74 ) }
    dend_61 { pt3dadd( -38.0157, -203.115, -116.998, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -23.541, -214.377, -108.631, 0.52 ) }
    dend_54 { pt3dadd( -24.935, -216.026, -110.505, 0.52 ) }
    dend_54 { pt3dadd( -24.9716, -216.075, -110.544, 0.52 ) }
    dend_54 { pt3dadd( -25.2834, -216.538, -110.83, 0.52 ) }
    dend_54 { pt3dadd( -26.2554, -218.177, -111.679, 1.33 ) }
    dend_54 { pt3dadd( -26.6087, -218.815, -111.978, 1.77 ) }
    dend_54 { pt3dadd( -27.0591, -219.761, -112.372, 0.66 ) }
    dend_54 { pt3dadd( -27.5157, -220.951, -112.702, 0.66 ) }
    dend_54 { pt3dadd( -28.0606, -222.545, -113.191, 0.66 ) }
    dend_54 { pt3dadd( -28.3009, -223.413, -113.52, 0.88 ) }
    dend_54 { pt3dadd( -28.3371, -223.637, -113.62, 0.88 ) }
    dend_54 { pt3dadd( -28.4596, -225.013, -114.323, 0.88 ) }
    dend_54 { pt3dadd( -28.4618, -225.066, -114.354, 0.88 ) }
    dend_54 { pt3dadd( -28.4093, -226.711, -115.367, 0.66 ) }
    dend_54 { pt3dadd( -28.3053, -227.978, -116.251, 0.44 ) }
    dend_54 { pt3dadd( -28.2441, -228.739, -116.847, 0.96 ) }
    dend_54 { pt3dadd( -28.1624, -229.813, -117.753, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -113.283, -191.446, 77.6025, 0.29 ) }
    dend_38 { pt3dadd( -110.883, -198.664, 83.5612, 0.29 ) }
    dend_38 { pt3dadd( -108.636, -205.466, 90.085, 0.29 ) }
    dend_38 { pt3dadd( -106.762, -212.448, 96.5164, 0.29 ) }
    dend_38 { pt3dadd( -107.514, -220.381, 101.813, 0.29 ) }
    dend_38 { pt3dadd( -107.319, -228.425, 107.003, 0.29 ) }
    dend_38 { pt3dadd( -106.702, -236.414, 112.263, 0.29 ) }
    dend_38 { pt3dadd( -105.939, -244.182, 117.864, 0.29 ) }
    dend_38 { pt3dadd( -105.331, -252.275, 122.945, 0.29 ) }
    dend_38 { pt3dadd( -104.755, -260.612, 127.567, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -113.283, -191.446, 77.6025, 0.44 ) }
    dend_37 { pt3dadd( -121.031, -199.863, 77.4179, 0.29 ) }
    dend_37 { pt3dadd( -130.1, -206.989, 77.2323, 0.29 ) }
    dend_37 { pt3dadd( -138.649, -214.66, 76.7747, 0.29 ) }
    dend_37 { pt3dadd( -146.383, -222.808, 74.5851, 0.29 ) }
    dend_37 { pt3dadd( -153.425, -230.869, 70.5508, 0.29 ) }
    dend_37 { pt3dadd( -160.118, -238.497, 65.2199, 0.29 ) }
    dend_37 { pt3dadd( -167.675, -244.972, 59.3741, 0.29 ) }
    dend_37 { pt3dadd( -176.263, -250.785, 54.2081, 0.29 ) }
    dend_37 { pt3dadd( -183.118, -258.532, 49.2831, 0.29 ) }
    dend_37 { pt3dadd( -189.233, -267.574, 46.1169, 0.29 ) }
    dend_37 { pt3dadd( -194.958, -277.293, 45.1009, 0.29 ) }
    dend_37 { pt3dadd( -201.303, -286.578, 46.9162, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 42.1134, 183.573, 60.3512, 0.29 ) }
    dend_10 { pt3dadd( 42.729, 191.779, 61.9797, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 42.1134, 183.573, 60.3512, 0.44 ) }
    dend_9 { pt3dadd( 42.4871, 191.962, 63.4168, 0.29 ) }
    dend_9 { pt3dadd( 42.8897, 200.095, 67.1806, 0.29 ) }
    dend_9 { pt3dadd( 42.9321, 208.334, 70.7205, 0.29 ) }
    dend_9 { pt3dadd( 42.5224, 216.17, 75.1731, 0.29 ) }
    dend_9 { pt3dadd( 41.0794, 224.5, 78.2234, 0.29 ) }
    dend_9 { pt3dadd( 39.0799, 232.464, 81.9976, 0.29 ) }
    dend_9 { pt3dadd( 36.6553, 240.894, 83.941, 0.29 ) }
    dend_9 { pt3dadd( 33.546, 249.088, 86.0756, 0.29 ) }
    dend_9 { pt3dadd( 28.9596, 256.411, 88.9765, 0.29 ) }
    dend_9 { pt3dadd( 25.3584, 263.96, 92.5431, 0.29 ) }
    dend_9 { pt3dadd( 23.0348, 270.979, 97.8858, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -152.755, -161.922, 95.5559, 0.22 ) }
    dend_83 { pt3dadd( -153.627, -162.021, 96.2192, 0.22 ) }
    dend_83 { pt3dadd( -155.069, -162.186, 97.316, 0.22 ) }
    dend_83 { pt3dadd( -155.7, -162.258, 97.7961, 0.52 ) }
    dend_83 { pt3dadd( -156.087, -162.303, 98.091, 0.74 ) }
    dend_83 { pt3dadd( -163.745, -161.743, 105.394, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -170.873, -161.805, 113.244, 0.74 ) }
    dend_83 { pt3dadd( -176.779, -160.653, 121.946, 0.74 ) }
    dend_83 { pt3dadd( -181.738, -160.934, 131.313, 0.74 ) }
    dend_83 { pt3dadd( -185.86, -159.495, 140.935, 0.74 ) }
    dend_83 { pt3dadd( -187.908, -158.349, 151.241, 0.74 ) }
    dend_83 { pt3dadd( -187.882, -156.752, 161.672, 0.74 ) }
    dend_83 { pt3dadd( -187.584, -154.312, 171.903, 0.74 ) }
    dend_83 { pt3dadd( -187.923, -151.082, 181.878, 0.74 ) }
    dend_83 { pt3dadd( -187.209, -148.865, 192.148, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -152.755, -161.922, 95.5559, 0.44 ) }
    dend_74 { pt3dadd( -152.522, -161.017, 95.8731, 0.44 ) }
    dend_74 { pt3dadd( -152.37, -160.356, 96.1013, 0.66 ) }
    dend_74 { pt3dadd( -152.346, -160.233, 96.1443, 0.66 ) }
    dend_74 { pt3dadd( -152.277, -159.861, 96.2738, 0.59 ) }
    dend_74 { pt3dadd( -152.115, -159.007, 96.5592, 0.29 ) }
    dend_74 { pt3dadd( -151.835, -157.635, 96.983, 0.29 ) }
    dend_74 { pt3dadd( -151.803, -157.492, 97.031, 0.29 ) }
    dend_74 { pt3dadd( -151.555, -156.508, 97.3918, 0.52 ) }
    dend_74 { pt3dadd( -151.534, -156.434, 97.4201, 0.52 ) }
    dend_74 { pt3dadd( -151.238, -155.435, 97.8146, 0.52 ) }
    dend_74 { pt3dadd( -150.841, -154.227, 98.2898, 1.03 ) }
    dend_74 { pt3dadd( -150.284, -152.758, 98.8575, 0.29 ) }
    dend_74 { pt3dadd( -150.258, -152.694, 98.8816, 0.29 ) }
    dend_74 { pt3dadd( -149.851, -151.853, 99.1971, 0.29 ) }
    dend_74 { pt3dadd( -149.529, -151.265, 99.3919, 0.52 ) }
    dend_74 { pt3dadd( -149.167, -150.669, 99.5655, 0.52 ) }
    dend_74 { pt3dadd( -148.748, -150.017, 99.7101, 0.96 ) }
    dend_74 { pt3dadd( -148.716, -149.967, 99.7178, 0.96 ) }
    dend_74 { pt3dadd( -147.762, -148.46, 99.9503, 0.29 ) }
    dend_74 { pt3dadd( -146.979, -147.205, 100.147, 0.29 ) }
    dend_74 { pt3dadd( -146.938, -147.134, 100.16, 0.29 ) }
    dend_74 { pt3dadd( -146.356, -145.961, 100.407, 0.29 ) }
    dend_74 { pt3dadd( -146.204, -145.562, 100.505, 0.59 ) }
    dend_74 { pt3dadd( -146.148, -145.361, 100.562, 0.59 ) }
    dend_74 { pt3dadd( -146.077, -144.816, 100.753, 0.52 ) }
    dend_74 { pt3dadd( -146.04, -144.244, 100.987, 0.66 ) }
    dend_74 { pt3dadd( -146.006, -143.64, 101.238, 0.66 ) }
    dend_74 { pt3dadd( -145.971, -142.707, 101.641, 0.29 ) }
    dend_74 { pt3dadd( -145.956, -142.569, 101.706, 0.29 ) }
    dend_74 { pt3dadd( -145.856, -141.98, 101.998, 0.29 ) }
    dend_74 { pt3dadd( -145.721, -141.543, 102.264, 0.52 ) }
    dend_74 { pt3dadd( -145.698, -141.489, 102.302, 0.52 ) }
    dend_74 { pt3dadd( -145.292, -140.721, 102.845, 0.37 ) }
    dend_74 { pt3dadd( -144.74, -139.818, 103.502, 0.59 ) }
    dend_74 { pt3dadd( -144.449, -139.373, 103.81, 0.96 ) }
    dend_74 { pt3dadd( -143.598, -138.133, 104.642, 0.37 ) }
    dend_74 { pt3dadd( -143.543, -138.061, 104.69, 0.37 ) }
    dend_74 { pt3dadd( -142.865, -137.233, 105.219, 0.37 ) }
    dend_74 { pt3dadd( -142.82, -137.183, 105.249, 0.37 ) }
    dend_74 { pt3dadd( -142.319, -136.588, 105.552, 0.37 ) }
    dend_74 { pt3dadd( -142.2, -136.412, 105.626, 0.37 ) }
    dend_74 { pt3dadd( -141.583, -135.06, 106.095, 0.59 ) }
    dend_74 { pt3dadd( -141.486, -134.806, 106.185, 0.88 ) }
    dend_74 { pt3dadd( -141.464, -134.741, 106.207, 0.88 ) }
    dend_74 { pt3dadd( -141.303, -134.202, 106.372, 0.88 ) }
    dend_74 { pt3dadd( -140.755, -132.225, 106.91, 0.29 ) }
    dend_74 { pt3dadd( -140.319, -130.467, 107.265, 0.29 ) }
    dend_74 { pt3dadd( -140.262, -130.212, 107.302, 0.29 ) }
    dend_74 { pt3dadd( -139.77, -128.155, 107.633, 0.29 ) }
    dend_74 { pt3dadd( -139.704, -127.871, 107.688, 0.29 ) }
    dend_74 { pt3dadd( -139.399, -126.523, 107.983, 0.37 ) }
    dend_74 { pt3dadd( -139.044, -124.87, 108.419, 0.37 ) }
    dend_74 { pt3dadd( -138.861, -124.082, 108.709, 0.37 ) }
    dend_74 { pt3dadd( -138.57, -122.905, 109.263, 0.29 ) }
    dend_74 { pt3dadd( -138.307, -121.778, 109.926, 0.29 ) }
    dend_74 { pt3dadd( -138.277, -121.653, 110.011, 0.29 ) }
    dend_74 { pt3dadd( -138.142, -121.128, 110.501, 0.29 ) }
    dend_74 { pt3dadd( -137.778, -120.008, 111.927, 1.18 ) }
    dend_74 { pt3dadd( -137.7, -119.794, 112.213, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -28.1624, -229.813, -117.753, 0.88 ) }
    dend_56 { pt3dadd( -28.7881, -230.984, -118.025, 0.88 ) }
    dend_56 { pt3dadd( -29.18, -231.82, -118.192, 1.47 ) }
    dend_56 { pt3dadd( -29.5007, -232.64, -118.352, 1.69 ) }
    dend_56 { pt3dadd( -30.0206, -234.318, -118.681, 0.59 ) }
    dend_56 { pt3dadd( -30.0359, -234.374, -118.694, 0.59 ) }
    dend_56 { pt3dadd( -30.2777, -235.398, -118.951, 0.29 ) }
    dend_56 { pt3dadd( -30.4083, -236.202, -119.167, 0.44 ) }
    dend_56 { pt3dadd( -30.5191, -236.899, -119.432, 0.66 ) }
    dend_56 { pt3dadd( -30.6725, -237.654, -119.85, 1.11 ) }
    dend_56 { pt3dadd( -30.8172, -238.385, -120.317, 1.47 ) }
    dend_56 { pt3dadd( -30.9064, -238.758, -120.564, 1.47 ) }
    dend_56 { pt3dadd( -30.9229, -238.818, -120.604, 1.47 ) }
    dend_56 { pt3dadd( -31.4341, -240.583, -121.667, 1.11 ) }
    dend_56 { pt3dadd( -31.9062, -242.2, -122.441, 0.59 ) }
    dend_56 { pt3dadd( -32.1049, -243.038, -122.749, 0.81 ) }
    dend_56 { pt3dadd( -32.2323, -243.814, -122.967, 1.11 ) }
    dend_56 { pt3dadd( -32.2972, -244.61, -123.148, 1.25 ) }
    dend_56 { pt3dadd( -32.302, -245.778, -123.344, 0.66 ) }
    dend_56 { pt3dadd( -32.1887, -247.105, -123.449, 0.52 ) }
    dend_56 { pt3dadd( -32.0193, -248.369, -123.511, 1.03 ) }
    dend_56 { pt3dadd( -31.9412, -248.989, -123.561, 1.25 ) }
    dend_56 { pt3dadd( -31.7764, -250.292, -123.718, 0.66 ) }
    dend_56 { pt3dadd( -31.7394, -250.682, -123.786, 0.44 ) }
    dend_56 { pt3dadd( -31.696, -251.187, -123.912, 0.96 ) }
    dend_56 { pt3dadd( -31.6655, -251.627, -124.049, 1.25 ) }
    dend_56 { pt3dadd( -31.6291, -252.764, -124.43, 1.11 ) }
    dend_56 { pt3dadd( -31.629, -253.666, -124.752, 0.96 ) }
    dend_56 { pt3dadd( -31.6107, -254.647, -125.083, 0.66 ) }
    dend_56 { pt3dadd( -31.5668, -255.678, -125.389, 0.59 ) }
    dend_56 { pt3dadd( -31.5622, -255.748, -125.407, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( -31.5016, -256.545, -125.555, 0.59 ) }
    dend_56 { pt3dadd( -31.4419, -257.625, -125.598, 0.52 ) }
    dend_56 { pt3dadd( -31.455, -258.691, -125.472, 0.81 ) }
    dend_56 { pt3dadd( -31.5316, -259.488, -125.241, 1.03 ) }
    dend_56 { pt3dadd( -31.5524, -259.591, -125.199, 1.03 ) }
    dend_56 { pt3dadd( -31.734, -260.34, -124.847, 1.03 ) }
    dend_56 { pt3dadd( -32.0449, -261.321, -124.284, 0.52 ) }
    dend_56 { pt3dadd( -32.2512, -261.857, -123.922, 1.11 ) }
    dend_56 { pt3dadd( -32.5519, -262.431, -123.54, 1.33 ) }
    dend_56 { pt3dadd( -32.5827, -262.487, -123.5, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -28.1624, -229.813, -117.753, 0.52 ) }
    dend_55 { pt3dadd( -27.9698, -229.831, -117.833, 0.52 ) }
    dend_55 { pt3dadd( -27.6075, -229.862, -117.972, 0.29 ) }
    dend_55 { pt3dadd( -27.3946, -229.884, -118.055, 0.59 ) }
    dend_55 { pt3dadd( -27.2629, -229.898, -118.101, 0.96 ) }
    dend_55 { pt3dadd( -26.859, -229.94, -118.24, 0.22 ) }
    dend_55 { pt3dadd( -26.5849, -229.968, -118.336, 0.59 ) }
    dend_55 { pt3dadd( -26.5703, -229.969, -118.341, 0.59 ) }
    dend_55 { pt3dadd( -26.3765, -229.988, -118.419, 0.52 ) }
    dend_55 { pt3dadd( -26.0852, -230.033, -118.534, 0.37 ) }
    dend_55 { pt3dadd( -25.9621, -230.061, -118.586, 0.81 ) }
    dend_55 { pt3dadd( -25.8697, -230.09, -118.635, 0.96 ) }
    dend_55 { pt3dadd( -25.6447, -230.173, -118.77, 0.37 ) }
    dend_55 { pt3dadd( -25.4617, -230.252, -118.914, 0.37 ) }
    dend_55 { pt3dadd( -25.313, -230.333, -119.076, 0.44 ) }
    dend_55 { pt3dadd( -25.2432, -230.382, -119.185, 0.44 ) }
    dend_55 { pt3dadd( -25.1509, -230.45, -119.334, 0.22 ) }
    dend_55 { pt3dadd( -25.0866, -230.494, -119.441, 0.44 ) }
    dend_55 { pt3dadd( -24.8538, -230.637, -119.843, 0.37 ) }
    dend_55 { pt3dadd( -24.7624, -230.686, -120.002, 0.52 ) }
    dend_55 { pt3dadd( -24.6606, -230.734, -120.181, 0.59 ) }
    dend_55 { pt3dadd( -24.5377, -230.78, -120.375, 0.81 ) }
    dend_55 { pt3dadd( -24.3997, -230.821, -120.567, 0.29 ) }
    dend_55 { pt3dadd( -24.2641, -230.849, -120.725, 0.52 ) }
    dend_55 { pt3dadd( -24.1825, -230.859, -120.802, 0.81 ) }
    dend_55 { pt3dadd( -24.1025, -230.861, -120.882, 1.11 ) }
    dend_55 { pt3dadd( -24.0702, -230.86, -120.918, 1.11 ) }
    dend_55 { pt3dadd( -24.0108, -230.852, -120.991, 0.96 ) }
    dend_55 { pt3dadd( -23.891, -230.825, -121.114, 0.59 ) }
    dend_55 { pt3dadd( -23.6658, -230.755, -121.283, 0.29 ) }
    dend_55 { pt3dadd( -23.5466, -230.72, -121.358, 0.52 ) }
    dend_55 { pt3dadd( -23.4497, -230.692, -121.412, 0.66 ) }
    dend_55 { pt3dadd( -23.4365, -230.689, -121.419, 0.66 ) }
    dend_55 { pt3dadd( -23.0915, -230.624, -121.581, 0.52 ) }
    dend_55 { pt3dadd( -22.8217, -230.583, -121.698, 0.74 ) }
    dend_55 { pt3dadd( -22.5535, -230.548, -121.813, 0.22 ) }
    dend_55 { pt3dadd( -22.482, -230.541, -121.847, 0.74 ) }
    dend_55 { pt3dadd( -22.353, -230.536, -121.913, 0.81 ) }
    dend_55 { pt3dadd( -22.0751, -230.545, -122.073, 0.22 ) }
    dend_55 { pt3dadd( -21.9941, -230.558, -122.131, 0.66 ) }
    dend_55 { pt3dadd( -21.9195, -230.577, -122.188, 0.74 ) }
    dend_55 { pt3dadd( -21.7345, -230.637, -122.327, 0.22 ) }
    dend_55 { pt3dadd( -21.5679, -230.702, -122.443, 0.66 ) }
    dend_55 { pt3dadd( -21.5089, -230.728, -122.483, 0.81 ) }
    dend_55 { pt3dadd( -21.4029, -230.787, -122.556, 0.52 ) }
    dend_55 { pt3dadd( -21.3934, -230.793, -122.562, 0.52 ) }
    dend_55 { pt3dadd( -21.2505, -230.885, -122.664, 0.22 ) }
    dend_55 { pt3dadd( -21.0705, -231.015, -122.806, 0.74 ) }
    dend_55 { pt3dadd( -20.9892, -231.084, -122.897, 0.81 ) }
    dend_55 { pt3dadd( -20.9733, -231.098, -122.918, 0.81 ) }
    dend_55 { pt3dadd( -20.905, -231.159, -123.029, 0.59 ) }
    dend_55 { pt3dadd( -20.8561, -231.214, -123.153, 0.29 ) }
    dend_55 { pt3dadd( -20.8208, -231.272, -123.299, 1.03 ) }
    dend_55 { pt3dadd( -20.7844, -231.373, -123.534, 1.03 ) }
    dend_55 { pt3dadd( -20.7789, -231.395, -123.578, 1.25 ) }
    dend_55 { pt3dadd( -20.7578, -231.495, -123.74, 0.66 ) }
    dend_55 { pt3dadd( -20.7203, -231.686, -123.996, 0.52 ) }
    dend_55 { pt3dadd( -20.6903, -231.819, -124.144, 0.37 ) }
    dend_55 { pt3dadd( -20.6641, -231.933, -124.248, 0.29 ) }
    dend_55 { pt3dadd( -20.632, -232.055, -124.331, 0.29 ) }
    dend_55 { pt3dadd( -20.5706, -232.276, -124.451, 0.29 ) }
    dend_55 { pt3dadd( -20.5495, -232.354, -124.488, 0.81 ) }
    dend_55 { pt3dadd( -20.5179, -232.463, -124.537, 1.03 ) }
    dend_55 { pt3dadd( -20.5138, -232.475, -124.544, 1.03 ) }
    dend_55 { pt3dadd( -20.4517, -232.643, -124.66, 0.59 ) }
    dend_55 { pt3dadd( -20.3795, -232.794, -124.777, 0.44 ) }
    dend_55 { pt3dadd( -20.2887, -232.961, -124.907, 0.88 ) }
    dend_55 { pt3dadd( -20.2608, -233.008, -124.943, 1.25 ) }
    dend_55 { pt3dadd( -20.2024, -233.089, -125.003, 1.55 ) }
    dend_55 { pt3dadd( -20.1157, -233.189, -125.077, 0.29 ) }
    dend_55 { pt3dadd( -19.9276, -233.333, -125.169, 0.29 ) }
    dend_55 { pt3dadd( -19.7409, -233.449, -125.228, 0.29 ) }
    dend_55 { pt3dadd( -19.7285, -233.457, -125.231, 0.29 ) }
    dend_55 { pt3dadd( -19.5368, -233.572, -125.275, 1.47 ) }
    dend_55 { pt3dadd( -19.373, -233.674, -125.312, 1.77 ) }
    dend_55 { pt3dadd( -18.946, -233.94, -125.409, 0.37 ) }
    dend_55 { pt3dadd( -18.7991, -234.031, -125.442, 0.22 ) }
    dend_55 { pt3dadd( -18.6019, -234.15, -125.484, 0.29 ) }
    dend_55 { pt3dadd( -18.5138, -234.208, -125.503, 0.52 ) }
    dend_55 { pt3dadd( -18.4059, -234.291, -125.529, 0.66 ) }
    dend_55 { pt3dadd( -18.395, -234.301, -125.532, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -187.209, -148.865, 192.148, 0.37 ) }
    dend_85 { pt3dadd( -191.457, -147.591, 205.44, 0.37 ) }
    dend_85 { pt3dadd( -197.142, -147.637, 218.284, 0.37 ) }
    dend_85 { pt3dadd( -200.147, -147.482, 231.991, 0.37 ) }
    dend_85 { pt3dadd( -204.077, -149.04, 245.4, 0.37 ) }
    dend_85 { pt3dadd( -210.775, -152.486, 257.264, 0.37 ) }
    dend_85 { pt3dadd( -215.593, -156.087, 269.968, 0.37 ) }
    dend_85 { pt3dadd( -219.462, -161.124, 282.486, 0.37 ) }
    dend_85 { pt3dadd( -220.211, -168.065, 294.616, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -221.42, -177.767, 304.426, 0.37 ) }
    dend_85 { pt3dadd( -223.68, -188.842, 312.214, 0.37 ) }
    dend_85 { pt3dadd( -224.478, -200.228, 319.817, 0.37 ) }
    dend_85 { pt3dadd( -225.181, -211.601, 327.451, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -187.209, -148.865, 192.148, 0.29 ) }
    dend_84 { pt3dadd( -190.23, -148.174, 202.567, 0.37 ) }
    dend_84 { pt3dadd( -193.939, -147.171, 212.735, 0.37 ) }
    dend_84 { pt3dadd( -198.428, -146.931, 222.657, 0.37 ) }
    dend_84 { pt3dadd( -200.45, -145.719, 233.243, 0.37 ) }
    dend_84 { pt3dadd( -201.37, -145.3, 244.056, 0.37 ) }
    dend_84 { pt3dadd( -202.951, -146.075, 254.807, 0.37 ) }
    dend_84 { pt3dadd( -206.405, -145.217, 265.078, 0.37 ) }
    dend_84 { pt3dadd( -211.551, -142.732, 274.293, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -137.7, -119.794, 112.213, 0.59 ) }
    dend_82 { pt3dadd( -135.672, -119.058, 112.164, 0.59 ) }
    dend_82 { pt3dadd( -135.581, -119.027, 112.162, 0.59 ) }
    dend_82 { pt3dadd( -133.776, -118.258, 112.142, 0.29 ) }
    dend_82 { pt3dadd( -132.866, -117.754, 112.107, 0.29 ) }
    dend_82 { pt3dadd( -132.783, -117.703, 112.104, 0.29 ) }
    dend_82 { pt3dadd( -131.056, -116.436, 111.951, 0.29 ) }
    dend_82 { pt3dadd( -131.006, -116.387, 111.944, 0.29 ) }
    dend_82 { pt3dadd( -129.706, -114.934, 111.689, 0.29 ) }
    dend_82 { pt3dadd( -128.353, -113.25, 111.277, 0.29 ) }
    dend_82 { pt3dadd( -128.246, -113.112, 111.236, 0.29 ) }
    dend_82 { pt3dadd( -127.118, -111.677, 110.743, 0.74 ) }
    dend_82 { pt3dadd( -126.15, -110.508, 110.305, 0.29 ) }
    dend_82 { pt3dadd( -125.85, -110.209, 110.196, 0.29 ) }
    dend_82 { pt3dadd( -124.298, -108.82, 109.644, 0.29 ) }
    dend_82 { pt3dadd( -123.533, -108.219, 109.394, 0.29 ) }
    dend_82 { pt3dadd( -122.231, -107.312, 109.015, 0.29 ) }
    dend_82 { pt3dadd( -120.51, -106.365, 108.632, 0.29 ) }
    dend_82 { pt3dadd( -118.968, -105.652, 108.357, 0.88 ) }
    dend_82 { pt3dadd( -111.035, -97.0669, 108.25, 0.88 ) }
    dend_82 { pt3dadd( -103.292, -88.6451, 110.52, 0.88 ) }
    dend_82 { pt3dadd( -95.8217, -79.7855, 111.687, 0.88 ) }
    dend_82 { pt3dadd( -87.9695, -71.1373, 111.8, 0.88 ) }
    dend_82 { pt3dadd( -79.4249, -63.1276, 112.284, 0.88 ) }
    dend_82 { pt3dadd( -71.6758, -54.4497, 113.151, 0.88 ) }
    dend_82 { pt3dadd( -63.129, -46.4559, 113.797, 0.88 ) }
    dend_82 { pt3dadd( -53.542, -39.5683, 113.693, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -137.7, -119.794, 112.213, 0.59 ) }
    dend_75 { pt3dadd( -137.606, -119.015, 113.018, 0.59 ) }
    dend_75 { pt3dadd( -137.474, -118.334, 113.734, 0.59 ) }
    dend_75 { pt3dadd( -137.285, -117.685, 114.445, 0.37 ) }
    dend_75 { pt3dadd( -137.01, -116.864, 115.348, 0.29 ) }
    dend_75 { pt3dadd( -136.677, -116.112, 116.199, 0.29 ) }
    dend_75 { pt3dadd( -136.651, -116.061, 116.259, 0.29 ) }
    dend_75 { pt3dadd( -136.263, -115.428, 117.007, 0.29 ) }
    dend_75 { pt3dadd( -135.9, -114.885, 117.676, 0.66 ) }
    dend_75 { pt3dadd( -135.67, -114.53, 118.079, 0.81 ) }
    dend_75 { pt3dadd( -135.211, -113.677, 118.912, 0.29 ) }
    dend_75 { pt3dadd( -135.183, -113.621, 118.966, 0.29 ) }
    dend_75 { pt3dadd( -134.853, -112.824, 119.64, 0.29 ) }
    dend_75 { pt3dadd( -134.835, -112.767, 119.682, 0.29 ) }
    dend_75 { pt3dadd( -134.587, -111.796, 120.266, 0.52 ) }
    dend_75 { pt3dadd( -134.456, -111.099, 120.642, 0.74 ) }
    dend_75 { pt3dadd( -134.45, -111.026, 120.679, 0.74 ) }
    dend_75 { pt3dadd( -134.385, -110.378, 121.06, 0.74 ) }
    dend_75 { pt3dadd( -134.378, -110.317, 121.099, 0.74 ) }
    dend_75 { pt3dadd( -134.303, -109.454, 121.707, 0.29 ) }
    dend_75 { pt3dadd( -134.245, -108.573, 122.386, 0.29 ) }
    dend_75 { pt3dadd( -134.194, -107.399, 123.336, 0.29 ) }
    dend_75 { pt3dadd( -134.142, -106.378, 124.132, 0.29 ) }
    dend_75 { pt3dadd( -134.13, -106.262, 124.219, 0.29 ) }
    dend_75 { pt3dadd( -133.942, -105.28, 124.845, 0.29 ) }
    dend_75 { pt3dadd( -133.927, -105.219, 124.881, 0.29 ) }
    dend_75 { pt3dadd( -133.594, -104.201, 125.353, 0.29 ) }
    dend_75 { pt3dadd( -133.013, -102.643, 125.956, 0.29 ) }
    dend_75 { pt3dadd( -132.254, -100.564, 126.674, 0.29 ) }
    dend_75 { pt3dadd( -131.546, -98.6595, 127.306, 0.29 ) }
    dend_75 { pt3dadd( -131.498, -98.5331, 127.351, 0.29 ) }
    dend_75 { pt3dadd( -130.792, -96.6648, 128.059, 0.29 ) }
    dend_75 { pt3dadd( -130.743, -96.5312, 128.113, 0.29 ) }
    dend_75 { pt3dadd( -129.998, -94.379, 129.049, 0.29 ) }
    dend_75 { pt3dadd( -129.975, -94.3074, 129.082, 0.29 ) }
    dend_75 { pt3dadd( -129.47, -92.4053, 130.099, 0.29 ) }
    dend_75 { pt3dadd( -129.455, -92.3357, 130.14, 0.29 ) }
    dend_75 { pt3dadd( -129.306, -90.909, 131.067, 0.29 ) }
    dend_75 { pt3dadd( -129.284, -90.5367, 131.303, 0.74 ) }
    dend_75 { pt3dadd( -129.283, -90.4669, 131.347, 0.74 ) }
    dend_75 { pt3dadd( -129.293, -89.9895, 131.631, 0.59 ) }
    dend_75 { pt3dadd( -129.478, -88.7312, 132.278, 0.29 ) }
    dend_75 { pt3dadd( -129.647, -87.9726, 132.692, 0.88 ) }
    dend_75 { pt3dadd( -129.848, -87.5103, 132.986, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -32.5827, -262.487, -123.5, 0.52 ) }
    dend_60 { pt3dadd( -32.6623, -263.497, -123.011, 0.52 ) }
    dend_60 { pt3dadd( -32.7166, -264.303, -122.648, 0.37 ) }
    dend_60 { pt3dadd( -32.7295, -265.08, -122.304, 0.29 ) }
    dend_60 { pt3dadd( -32.7376, -265.672, -122.024, 0.66 ) }
    dend_60 { pt3dadd( -32.7451, -266.188, -121.775, 0.66 ) }
    dend_60 { pt3dadd( -32.7467, -266.259, -121.739, 0.66 ) }
    dend_60 { pt3dadd( -32.7512, -266.743, -121.509, 0.59 ) }
    dend_60 { pt3dadd( -32.785, -267.594, -121.093, 0.29 ) }
    dend_60 { pt3dadd( -32.8217, -268.485, -120.676, 0.29 ) }
    dend_60 { pt3dadd( -32.8349, -268.858, -120.516, 0.66 ) }
    dend_60 { pt3dadd( -32.852, -269.469, -120.279, 0.96 ) }
    dend_60 { pt3dadd( -32.8514, -269.978, -120.116, 1.18 ) }
    dend_60 { pt3dadd( -32.8349, -271.037, -119.839, 0.29 ) }
    dend_60 { pt3dadd( -32.822, -271.729, -119.7, 0.29 ) }
    dend_60 { pt3dadd( -32.8062, -272.138, -119.625, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( -32.7895, -272.279, -119.582, 0.52 ) }
    dend_60 { pt3dadd( -32.6951, -272.797, -119.332, 0.22 ) }
    dend_60 { pt3dadd( -32.6034, -273.226, -119.033, 0.44 ) }
    dend_60 { pt3dadd( -32.4887, -273.582, -118.689, 0.66 ) }
    dend_60 { pt3dadd( -32.3532, -274.025, -118.211, 0.66 ) }
    dend_60 { pt3dadd( -32.0724, -275.074, -117.051, 0.29 ) }
    dend_60 { pt3dadd( -31.9996, -275.381, -116.725, 0.96 ) }
    dend_60 { pt3dadd( -31.9248, -275.714, -116.4, 1.25 ) }
    dend_60 { pt3dadd( -31.6402, -276.915, -115.39, 0.52 ) }
    dend_60 { pt3dadd( -31.4653, -277.701, -114.842, 0.52 ) }
    dend_60 { pt3dadd( -31.3431, -278.373, -114.451, 0.29 ) }
    dend_60 { pt3dadd( -31.2897, -278.975, -114.155, 0.37 ) }
    dend_60 { pt3dadd( -31.2668, -279.609, -113.846, 0.44 ) }
    dend_60 { pt3dadd( -31.2988, -280.039, -113.613, 0.44 ) }
    dend_60 { pt3dadd( -31.4448, -280.674, -113.234, 0.22 ) }
    dend_60 { pt3dadd( -31.5579, -281.003, -112.984, 0.37 ) }
    dend_60 { pt3dadd( -31.7434, -281.496, -112.497, 0.59 ) }
    dend_60 { pt3dadd( -31.9824, -282.09, -111.798, 1.18 ) }
    dend_60 { pt3dadd( -32.167, -282.62, -111.091, 0.74 ) }
    dend_60 { pt3dadd( -32.1798, -282.666, -111.025, 0.74 ) }
    dend_60 { pt3dadd( -32.3144, -283.419, -109.937, 0.37 ) }
    dend_60 { pt3dadd( -32.356, -284.191, -108.879, 0.29 ) }
    dend_60 { pt3dadd( -32.3317, -284.381, -108.607, 0.59 ) }
    dend_60 { pt3dadd( -32.1744, -284.794, -107.892, 0.74 ) }
    dend_60 { pt3dadd( -32.1452, -284.834, -107.805, 0.74 ) }
    dend_60 { pt3dadd( -31.9146, -284.996, -107.31, 0.74 ) }
    dend_60 { pt3dadd( -31.8881, -285.007, -107.258, 0.74 ) }
    dend_60 { pt3dadd( -31.3913, -285.147, -106.259, 0.29 ) }
    dend_60 { pt3dadd( -30.8124, -285.273, -105.085, 0.59 ) }
    dend_60 { pt3dadd( -30.3156, -285.351, -104.082, 0.96 ) }
    dend_60 { pt3dadd( -29.432, -285.469, -102.33, 0.59 ) }
    dend_60 { pt3dadd( -29.0555, -285.505, -101.604, 0.29 ) }
    dend_60 { pt3dadd( -29.0219, -285.509, -101.54, 0.29 ) }
    dend_60 { pt3dadd( -28.3699, -285.6, -100.369, 0.88 ) }
    dend_60 { pt3dadd( -27.7471, -285.673, -99.3132, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -32.5827, -262.487, -123.5, 0.52 ) }
    dend_57 { pt3dadd( -33.2445, -263.932, -124.743, 0.52 ) }
    dend_57 { pt3dadd( -33.2748, -264.01, -124.802, 0.52 ) }
    dend_57 { pt3dadd( -33.71, -265.184, -125.599, 0.66 ) }
    dend_57 { pt3dadd( -34.583, -267.77, -127.167, 0.44 ) }
    dend_57 { pt3dadd( -35.2471, -269.705, -128.251, 0.37 ) }
    dend_57 { pt3dadd( -35.6028, -270.772, -128.782, 0.66 ) }
    dend_57 { pt3dadd( -35.9711, -271.983, -129.255, 0.88 ) }
    dend_57 { pt3dadd( -36.4003, -273.359, -129.715, 0.88 ) }
    dend_57 { pt3dadd( -36.7816, -274.597, -130.051, 0.88 ) }
    dend_57 { pt3dadd( -37.2663, -276.288, -130.478, 0.59 ) }
    dend_57 { pt3dadd( -37.6911, -277.825, -130.944, 0.37 ) }
    dend_57 { pt3dadd( -38.1388, -279.422, -131.553, 0.37 ) }
    dend_57 { pt3dadd( -38.595, -281.12, -132.37, 0.74 ) }
    dend_57 { pt3dadd( -38.7593, -281.84, -132.766, 1.11 ) }
    dend_57 { pt3dadd( -39.349, -284.353, -134.341, 0.74 ) }
    dend_57 { pt3dadd( -39.6248, -285.538, -135.132, 0.44 ) }
    dend_57 { pt3dadd( -39.6447, -285.621, -135.186, 0.44 ) }
    dend_57 { pt3dadd( -40.0605, -287.392, -136.287, 1.03 ) }
    dend_57 { pt3dadd( -40.2502, -288.343, -136.78, 1.33 ) }
    dend_57 { pt3dadd( -40.6565, -290.5, -137.609, 0.66 ) }
    dend_57 { pt3dadd( -40.9546, -292.469, -138.072, 0.66 ) }
    dend_57 { pt3dadd( -41.2315, -294.429, -138.404, 0.88 ) }
    dend_57 { pt3dadd( -41.2403, -294.531, -138.418, 0.88 ) }
    dend_57 { pt3dadd( -41.3015, -296.048, -138.59, 1.11 ) }
    dend_57 { pt3dadd( -41.2947, -298.312, -138.827, 1.03 ) }
    dend_57 { pt3dadd( -41.176, -299.99, -138.962, 0.52 ) }
    dend_57 { pt3dadd( -41.175, -300.092, -138.975, 0.52 ) }
    dend_57 { pt3dadd( -41.3061, -301.822, -139.293, 0.88 ) }
    dend_57 { pt3dadd( -41.4585, -302.938, -139.524, 0.96 ) }
    dend_57 { pt3dadd( -41.7116, -303.935, -139.797, 0.96 ) }
    dend_57 { pt3dadd( -42.1317, -304.969, -140.141, 0.66 ) }
    dend_57 { pt3dadd( -43.6304, -307.908, -141.088, 0.44 ) }
    dend_57 { pt3dadd( -44.2232, -308.988, -141.425, 0.96 ) }
    dend_57 { pt3dadd( -44.832, -309.98, -141.718, 1.25 ) }
    dend_57 { pt3dadd( -46.13, -312.017, -142.326, 1.11 ) }
    dend_57 { pt3dadd( -47.3517, -313.786, -142.912, 0.74 ) }
    dend_57 { pt3dadd( -48.0429, -314.711, -143.231, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -129.848, -87.5103, 132.986, 0.29 ) }
    dend_81 { pt3dadd( -130.817, -87.4153, 133.761, 0.29 ) }
    dend_81 { pt3dadd( -130.874, -87.4128, 133.808, 0.29 ) }
    dend_81 { pt3dadd( -131.659, -87.3569, 134.299, 0.29 ) }
    dend_81 { pt3dadd( -131.723, -87.3518, 134.335, 0.29 ) }
    dend_81 { pt3dadd( -132.458, -87.2501, 134.755, 0.66 ) }
    dend_81 { pt3dadd( -133.018, -87.1501, 135.08, 0.81 ) }
    dend_81 { pt3dadd( -133.066, -87.1407, 135.108, 0.81 ) }
    dend_81 { pt3dadd( -134.453, -86.8217, 136.045, 0.29 ) }
    dend_81 { pt3dadd( -134.576, -86.7896, 136.136, 0.29 ) }
    dend_81 { pt3dadd( -135.522, -86.5009, 136.904, 0.29 ) }
    dend_81 { pt3dadd( -136.573, -86.1191, 137.84, 0.29 ) }
    dend_81 { pt3dadd( -136.617, -86.1011, 137.884, 0.29 ) }
    dend_81 { pt3dadd( -137.46, -85.7314, 138.864, 0.44 ) }
    dend_81 { pt3dadd( -137.495, -85.7125, 138.915, 0.44 ) }
    dend_81 { pt3dadd( -137.774, -85.5469, 139.325, 0.44 ) }
    dend_81 { pt3dadd( -137.806, -85.5253, 139.375, 0.44 ) }
    dend_81 { pt3dadd( -138.384, -85.0636, 140.248, 0.29 ) }
    dend_81 { pt3dadd( -138.46, -85.0019, 140.343, 0.29 ) }
    dend_81 { pt3dadd( -139.016, -84.5462, 140.906, 0.29 ) }
    dend_81 { pt3dadd( -139.293, -84.311, 141.182, 0.59 ) }
    dend_81 { pt3dadd( -139.375, -84.2382, 141.263, 0.59 ) }
    dend_81 { pt3dadd( -139.623, -84.0243, 141.505, 0.59 ) }
    dend_81 { pt3dadd( -140.236, -83.509, 142.097, 0.37 ) }
    dend_81 { pt3dadd( -140.326, -83.4384, 142.185, 0.37 ) }
    dend_81 { pt3dadd( -140.84, -83.0539, 142.616, 0.37 ) }
    dend_81 { pt3dadd( -140.884, -83.0212, 142.649, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -141.499, -82.5904, 143.096, 0.37 ) }
    dend_81 { pt3dadd( -141.599, -82.5244, 143.164, 0.37 ) }
    dend_81 { pt3dadd( -142.244, -82.1382, 143.629, 0.37 ) }
    dend_81 { pt3dadd( -143.085, -81.6857, 144.261, 0.22 ) }
    dend_81 { pt3dadd( -143.191, -81.6375, 144.348, 0.22 ) }
    dend_81 { pt3dadd( -143.754, -81.4166, 144.853, 0.22 ) }
    dend_81 { pt3dadd( -143.799, -81.4026, 144.898, 0.22 ) }
    dend_81 { pt3dadd( -144.256, -81.3604, 145.619, 0.81 ) }
    dend_81 { pt3dadd( -144.383, -81.3777, 145.891, 0.81 ) }
    dend_81 { pt3dadd( -144.708, -81.4867, 146.669, 0.22 ) }
    dend_81 { pt3dadd( -144.733, -81.4994, 146.728, 0.22 ) }
    dend_81 { pt3dadd( -145.0, -81.685, 147.392, 0.22 ) }
    dend_81 { pt3dadd( -145.766, -82.2533, 149.218, 0.22 ) }
    dend_81 { pt3dadd( -145.819, -82.2934, 149.34, 0.22 ) }
    dend_81 { pt3dadd( -146.207, -82.5808, 150.204, 0.22 ) }
    dend_81 { pt3dadd( -146.585, -82.858, 151.02, 0.22 ) }
    dend_81 { pt3dadd( -147.181, -83.2598, 152.246, 0.22 ) }
    dend_81 { pt3dadd( -147.628, -83.5251, 153.107, 0.22 ) }
    dend_81 { pt3dadd( -147.666, -83.5396, 153.169, 0.22 ) }
    dend_81 { pt3dadd( -148.258, -83.6115, 154.1, 0.52 ) }
    dend_81 { pt3dadd( -148.443, -83.5566, 154.376, 0.81 ) }
    dend_81 { pt3dadd( -148.518, -83.5071, 154.477, 0.81 ) }
    dend_81 { pt3dadd( -148.718, -83.3414, 154.696, 0.81 ) }
    dend_81 { pt3dadd( -148.765, -83.3034, 154.736, 0.81 ) }
    dend_81 { pt3dadd( -149.543, -82.7505, 155.26, 0.37 ) }
    dend_81 { pt3dadd( -150.004, -82.4346, 155.515, 0.59 ) }
    dend_81 { pt3dadd( -150.053, -82.402, 155.54, 0.59 ) }
    dend_81 { pt3dadd( -150.675, -81.9794, 155.838, 0.44 ) }
    dend_81 { pt3dadd( -151.808, -81.2754, 156.216, 0.29 ) }
    dend_81 { pt3dadd( -151.923, -81.2076, 156.244, 0.29 ) }
    dend_81 { pt3dadd( -152.667, -80.8586, 156.3, 0.29 ) }
    dend_81 { pt3dadd( -152.719, -80.8368, 156.3, 0.29 ) }
    dend_81 { pt3dadd( -153.517, -80.5259, 156.291, 0.29 ) }
    dend_81 { pt3dadd( -154.983, -80.0371, 156.099, 0.29 ) }
    dend_81 { pt3dadd( -155.034, -80.0225, 156.091, 0.29 ) }
    dend_81 { pt3dadd( -156.85, -79.6155, 155.763, 0.29 ) }
    dend_81 { pt3dadd( -156.902, -79.6066, 155.754, 0.29 ) }
    dend_81 { pt3dadd( -157.429, -79.5278, 155.686, 0.66 ) }
    dend_81 { pt3dadd( -159.81, -79.2575, 155.458, 0.37 ) }
    dend_81 { pt3dadd( -159.955, -79.2441, 155.454, 0.37 ) }
    dend_81 { pt3dadd( -160.743, -79.1915, 155.488, 0.29 ) }
    dend_81 { pt3dadd( -161.464, -79.1547, 155.616, 0.15 ) }
    dend_81 { pt3dadd( -161.889, -79.1369, 155.722, 0.74 ) }
    dend_81 { pt3dadd( -162.068, -79.1344, 155.795, 0.74 ) }
    dend_81 { pt3dadd( -163.124, -79.1548, 156.462, 0.37 ) }
    dend_81 { pt3dadd( -163.623, -79.141, 156.786, 0.29 ) }
    dend_81 { pt3dadd( -164.268, -79.0774, 157.257, 0.29 ) }
    dend_81 { pt3dadd( -164.338, -79.0677, 157.315, 0.29 ) }
    dend_81 { pt3dadd( -165.167, -78.9301, 158.119, 0.29 ) }
    dend_81 { pt3dadd( -165.258, -78.9089, 158.222, 0.29 ) }
    dend_81 { pt3dadd( -165.716, -78.7619, 158.845, 0.29 ) }
    dend_81 { pt3dadd( -166.161, -78.6037, 159.447, 0.29 ) }
    dend_81 { pt3dadd( -166.202, -78.5915, 159.496, 0.29 ) }
    dend_81 { pt3dadd( -166.877, -78.4119, 160.212, 0.29 ) }
    dend_81 { pt3dadd( -167.582, -78.2538, 160.836, 0.29 ) }
    dend_81 { pt3dadd( -167.725, -78.2289, 160.948, 0.29 ) }
    dend_81 { pt3dadd( -168.454, -78.0996, 161.408, 0.29 ) }
    dend_81 { pt3dadd( -169.31, -77.9009, 161.868, 0.52 ) }
    dend_81 { pt3dadd( -169.752, -77.7669, 162.092, 0.66 ) }
    dend_81 { pt3dadd( -170.793, -77.382, 162.58, 0.29 ) }
    dend_81 { pt3dadd( -171.964, -76.8939, 163.109, 1.11 ) }
    dend_81 { pt3dadd( -173.187, -76.3713, 163.599, 0.29 ) }
    dend_81 { pt3dadd( -173.86, -76.071, 163.843, 0.29 ) }
    dend_81 { pt3dadd( -174.435, -75.8017, 164.056, 0.74 ) }
    dend_81 { pt3dadd( -174.561, -75.7433, 164.099, 0.74 ) }
    dend_81 { pt3dadd( -174.918, -75.577, 164.215, 0.74 ) }
    dend_81 { pt3dadd( -176.788, -74.8022, 164.766, 0.29 ) }
    dend_81 { pt3dadd( -176.875, -74.772, 164.793, 0.29 ) }
    dend_81 { pt3dadd( -177.543, -74.5608, 165.003, 0.29 ) }
    dend_81 { pt3dadd( -177.592, -74.5447, 165.019, 0.29 ) }
    dend_81 { pt3dadd( -178.425, -74.254, 165.295, 0.59 ) }
    dend_81 { pt3dadd( -179.959, -73.6326, 165.864, 0.29 ) }
    dend_81 { pt3dadd( -180.018, -73.6002, 165.892, 0.29 ) }
    dend_81 { pt3dadd( -180.435, -73.3191, 166.112, 0.29 ) }
    dend_81 { pt3dadd( -180.652, -73.114, 166.237, 0.59 ) }
    dend_81 { pt3dadd( -180.695, -73.0635, 166.265, 0.59 ) }
    dend_81 { pt3dadd( -181.007, -72.6051, 166.5, 0.59 ) }
    dend_81 { pt3dadd( -181.291, -72.1139, 166.745, 0.29 ) }
    dend_81 { pt3dadd( -181.552, -71.7237, 166.959, 0.29 ) }
    dend_81 { pt3dadd( -182.402, -70.6246, 167.628, 0.29 ) }
    dend_81 { pt3dadd( -182.435, -70.589, 167.654, 0.29 ) }
    dend_81 { pt3dadd( -182.909, -70.1397, 168.03, 0.29 ) }
    dend_81 { pt3dadd( -183.128, -69.9671, 168.205, 0.29 ) }
    dend_81 { pt3dadd( -183.743, -69.5892, 168.705, 0.52 ) }
    dend_81 { pt3dadd( -184.008, -69.4632, 168.935, 0.59 ) }
    dend_81 { pt3dadd( -184.756, -69.1873, 169.651, 0.22 ) }
    dend_81 { pt3dadd( -184.965, -69.1104, 169.837, 0.22 ) }
    dend_81 { pt3dadd( -185.402, -68.9199, 170.208, 0.22 ) }
    dend_81 { pt3dadd( -185.823, -68.6899, 170.55, 0.81 ) }
    dend_81 { pt3dadd( -186.118, -68.5057, 170.778, 1.03 ) }
    dend_81 { pt3dadd( -186.605, -68.1984, 171.136, 0.52 ) }
    dend_81 { pt3dadd( -187.513, -67.6382, 171.777, 0.29 ) }
    dend_81 { pt3dadd( -188.56, -67.016, 172.507, 0.22 ) }
    dend_81 { pt3dadd( -189.574, -66.3795, 173.198, 0.22 ) }
    dend_81 { pt3dadd( -189.695, -66.2979, 173.279, 0.22 ) }
    dend_81 { pt3dadd( -190.203, -65.9458, 173.618, 0.74 ) }
    dend_81 { pt3dadd( -190.474, -65.7586, 173.807, 0.74 ) }
    dend_81 { pt3dadd( -190.784, -65.5535, 174.071, 0.74 ) }
    dend_81 { pt3dadd( -198.31, -63.0164, 178.077, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -129.848, -87.5103, 132.986, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -129.6, -86.5746, 133.119, 0.29 ) }
    dend_76 { pt3dadd( -129.184, -84.9119, 133.281, 0.29 ) }
    dend_76 { pt3dadd( -129.167, -84.8419, 133.288, 0.29 ) }
    dend_76 { pt3dadd( -128.796, -83.2716, 133.428, 0.29 ) }
    dend_76 { pt3dadd( -128.779, -83.193, 133.436, 0.29 ) }
    dend_76 { pt3dadd( -128.311, -80.8611, 133.741, 0.52 ) }
    dend_76 { pt3dadd( -128.08, -79.5559, 133.954, 0.52 ) }
    dend_76 { pt3dadd( -127.947, -78.6154, 134.134, 0.52 ) }
    dend_76 { pt3dadd( -127.921, -78.3497, 134.19, 0.52 ) }
    dend_76 { pt3dadd( -127.808, -77.2312, 134.541, 0.52 ) }
    dend_76 { pt3dadd( -127.727, -76.4046, 134.905, 0.81 ) }
    dend_76 { pt3dadd( -127.717, -76.2574, 135.005, 0.81 ) }
    dend_76 { pt3dadd( -127.675, -75.6712, 135.524, 0.66 ) }
    dend_76 { pt3dadd( -127.659, -75.1229, 136.078, 0.37 ) }
    dend_76 { pt3dadd( -127.639, -73.4948, 137.84, 0.37 ) }
    dend_76 { pt3dadd( -127.641, -73.4372, 137.901, 0.37 ) }
    dend_76 { pt3dadd( -127.71, -72.8528, 138.503, 0.52 ) }
    dend_76 { pt3dadd( -127.727, -72.7652, 138.582, 0.52 ) }
    dend_76 { pt3dadd( -128.004, -71.637, 139.493, 0.44 ) }
    dend_76 { pt3dadd( -128.043, -71.5033, 139.587, 0.44 ) }
    dend_76 { pt3dadd( -128.424, -70.5189, 140.164, 0.44 ) }
    dend_76 { pt3dadd( -128.53, -70.2167, 140.335, 0.44 ) }
    dend_76 { pt3dadd( -128.974, -68.6745, 141.153, 0.44 ) }
    dend_76 { pt3dadd( -128.991, -68.6016, 141.19, 0.44 ) }
    dend_76 { pt3dadd( -129.137, -67.8478, 141.564, 0.52 ) }
    dend_76 { pt3dadd( -129.162, -67.6864, 141.635, 0.52 ) }
    dend_76 { pt3dadd( -129.287, -66.6857, 142.049, 0.37 ) }
    dend_76 { pt3dadd( -129.402, -65.5123, 142.484, 0.74 ) }
    dend_76 { pt3dadd( -129.408, -65.434, 142.512, 0.74 ) }
    dend_76 { pt3dadd( -129.447, -64.8908, 142.705, 0.74 ) }
    dend_76 { pt3dadd( -129.546, -62.337, 143.673, 0.52 ) }
    dend_76 { pt3dadd( -129.547, -62.2595, 143.704, 0.52 ) }
    dend_76 { pt3dadd( -129.515, -60.1768, 144.568, 0.52 ) }
    dend_76 { pt3dadd( -129.427, -57.7247, 145.634, 0.52 ) }
    dend_76 { pt3dadd( -129.422, -57.6265, 145.678, 0.52 ) }
    dend_76 { pt3dadd( -129.304, -56.0584, 146.422, 0.88 ) }
    dend_76 { pt3dadd( -129.269, -55.7234, 146.592, 0.88 ) }
    dend_76 { pt3dadd( -129.065, -53.843, 147.539, 0.52 ) }
    dend_76 { pt3dadd( -128.926, -52.6457, 148.132, 0.52 ) }
    dend_76 { pt3dadd( -128.891, -52.4258, 148.245, 0.52 ) }
    dend_76 { pt3dadd( -128.741, -51.3176, 148.789, 0.52 ) }
    dend_76 { pt3dadd( -128.717, -51.0068, 148.935, 0.52 ) }
    dend_76 { pt3dadd( -128.691, -50.2368, 149.316, 0.59 ) }
    dend_76 { pt3dadd( -128.688, -49.3447, 149.763, 0.37 ) }
    dend_76 { pt3dadd( -128.704, -47.9104, 150.486, 0.44 ) }
    dend_76 { pt3dadd( -128.731, -46.3507, 151.255, 0.22 ) }
    dend_76 { pt3dadd( -128.768, -44.9446, 151.938, 0.22 ) }
    dend_76 { pt3dadd( -128.775, -44.3489, 152.232, 0.37 ) }
    dend_76 { pt3dadd( -128.789, -42.9653, 152.925, 0.22 ) }
    dend_76 { pt3dadd( -128.79, -42.8256, 152.993, 0.22 ) }
    dend_76 { pt3dadd( -128.736, -41.6719, 153.603, 0.22 ) }
    dend_76 { pt3dadd( -128.724, -41.6013, 153.646, 0.22 ) }
    dend_76 { pt3dadd( -128.466, -40.4597, 154.336, 0.22 ) }
    dend_76 { pt3dadd( -128.452, -40.3986, 154.372, 0.22 ) }
    dend_76 { pt3dadd( -128.081, -38.9079, 155.263, 0.22 ) }
    dend_76 { pt3dadd( -127.664, -37.2253, 156.237, 0.66 ) }
    dend_76 { pt3dadd( -127.509, -36.5783, 156.601, 0.96 ) }
    dend_76 { pt3dadd( -127.209, -35.3898, 157.279, 0.22 ) }
    dend_76 { pt3dadd( -126.954, -34.3679, 157.861, 0.22 ) }
    dend_76 { pt3dadd( -126.933, -34.2882, 157.907, 0.22 ) }
    dend_76 { pt3dadd( -126.777, -33.6999, 158.261, 0.59 ) }
    dend_76 { pt3dadd( -126.694, -33.1792, 158.547, 0.88 ) }
    dend_76 { pt3dadd( -126.562, -31.9438, 159.214, 0.44 ) }
    dend_76 { pt3dadd( -126.521, -31.1974, 159.604, 0.29 ) }
    dend_76 { pt3dadd( -126.515, -30.9641, 159.715, 0.29 ) }
    dend_76 { pt3dadd( -126.51, -30.4079, 159.952, 0.29 ) }
    dend_76 { pt3dadd( -126.54, -28.9647, 160.395, 0.74 ) }
    dend_76 { pt3dadd( -126.57, -28.2556, 160.543, 0.29 ) }
    dend_76 { pt3dadd( -126.621, -27.5117, 160.651, 0.44 ) }
    dend_76 { pt3dadd( -126.654, -26.9107, 160.735, 0.59 ) }
    dend_76 { pt3dadd( -126.657, -26.8284, 160.748, 0.59 ) }
    dend_76 { pt3dadd( -126.68, -25.0487, 161.065, 0.22 ) }
    dend_76 { pt3dadd( -126.677, -24.7885, 161.124, 0.22 ) }
    dend_76 { pt3dadd( -126.603, -23.3434, 161.559, 0.22 ) }
    dend_76 { pt3dadd( -126.595, -23.2679, 161.586, 0.22 ) }
    dend_76 { pt3dadd( -126.45, -22.4347, 161.932, 0.44 ) }
    dend_76 { pt3dadd( -126.43, -22.3513, 161.971, 0.44 ) }
    dend_76 { pt3dadd( -126.285, -21.9294, 162.209, 0.44 ) }
    dend_76 { pt3dadd( -125.718, -20.568, 162.985, 0.29 ) }
    dend_76 { pt3dadd( -125.449, -20.0777, 163.273, 0.44 ) }
    dend_76 { pt3dadd( -125.367, -19.9413, 163.355, 0.44 ) }
    dend_76 { pt3dadd( -124.942, -19.3288, 163.742, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -48.0429, -314.711, -143.231, 0.29 ) }
    dend_59 { pt3dadd( -48.3379, -314.964, -142.726, 0.29 ) }
    dend_59 { pt3dadd( -48.6921, -315.374, -142.153, 0.29 ) }
    dend_59 { pt3dadd( -48.7561, -315.456, -142.051, 0.59 ) }
    dend_59 { pt3dadd( -48.9832, -315.761, -141.691, 0.66 ) }
    dend_59 { pt3dadd( -49.0357, -315.82, -141.625, 0.66 ) }
    dend_59 { pt3dadd( -49.3237, -316.119, -141.291, 0.66 ) }
    dend_59 { pt3dadd( -49.8427, -316.676, -140.726, 0.22 ) }
    dend_59 { pt3dadd( -50.0561, -316.914, -140.498, 0.66 ) }
    dend_59 { pt3dadd( -50.3099, -317.194, -140.234, 0.66 ) }
    dend_59 { pt3dadd( -51.0016, -317.939, -139.535, 0.22 ) }
    dend_59 { pt3dadd( -51.4091, -318.363, -139.131, 0.22 ) }
    dend_59 { pt3dadd( -51.9912, -318.941, -138.573, 0.22 ) }
    dend_59 { pt3dadd( -52.4043, -319.32, -138.18, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -48.0429, -314.711, -143.231, 0.29 ) }
    dend_58 { pt3dadd( -48.03, -316.314, -143.826, 0.29 ) }
    dend_58 { pt3dadd( -48.0123, -317.285, -144.269, 0.29 ) }
    dend_58 { pt3dadd( -48.018, -317.77, -144.471, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( -48.0472, -318.2, -144.658, 0.88 ) }
    dend_58 { pt3dadd( -48.0576, -318.306, -144.704, 0.88 ) }
    dend_58 { pt3dadd( -48.1434, -319.063, -145.002, 0.88 ) }
    dend_58 { pt3dadd( -48.217, -320.375, -145.478, 0.22 ) }
    dend_58 { pt3dadd( -48.2752, -321.126, -145.744, 0.22 ) }
    dend_58 { pt3dadd( -48.37, -321.993, -146.063, 0.88 ) }
    dend_58 { pt3dadd( -48.3749, -322.063, -146.091, 0.88 ) }
    dend_58 { pt3dadd( -48.3979, -322.952, -146.462, 0.74 ) }
    dend_58 { pt3dadd( -48.3185, -324.033, -146.96, 0.37 ) }
    dend_58 { pt3dadd( -48.2994, -324.097, -146.997, 0.37 ) }
    dend_58 { pt3dadd( -47.5399, -325.401, -147.841, 0.29 ) }
    dend_58 { pt3dadd( -47.0732, -325.985, -148.246, 0.59 ) }
    dend_58 { pt3dadd( -46.9284, -326.141, -148.362, 0.59 ) }
    dend_58 { pt3dadd( -46.1959, -326.813, -148.918, 0.88 ) }
    dend_58 { pt3dadd( -44.9637, -327.721, -149.582, 0.74 ) }
    dend_58 { pt3dadd( -43.4106, -328.72, -150.244, 0.29 ) }
    dend_58 { pt3dadd( -42.5485, -329.22, -150.552, 0.74 ) }
    dend_58 { pt3dadd( -42.4839, -329.258, -150.573, 0.74 ) }
    dend_58 { pt3dadd( -41.9422, -329.56, -150.73, 0.74 ) }
    dend_58 { pt3dadd( -39.3843, -330.849, -151.271, 0.44 ) }
    dend_58 { pt3dadd( -38.4927, -331.256, -151.368, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -124.942, -19.3288, 163.742, 0.29 ) }
    dend_78 { pt3dadd( -124.086, -19.8655, 163.063, 0.29 ) }
    dend_78 { pt3dadd( -123.993, -19.9287, 162.979, 0.29 ) }
    dend_78 { pt3dadd( -123.71, -20.1241, 162.712, 0.29 ) }
    dend_78 { pt3dadd( -123.664, -20.1556, 162.669, 0.29 ) }
    dend_78 { pt3dadd( -123.011, -20.6062, 162.054, 0.29 ) }
    dend_78 { pt3dadd( -122.727, -20.8016, 161.787, 0.81 ) }
    dend_78 { pt3dadd( -122.433, -20.9953, 161.443, 1.03 ) }
    dend_78 { pt3dadd( -122.393, -21.0254, 161.394, 1.03 ) }
    dend_78 { pt3dadd( -117.709, -25.6254, 154.415, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -124.942, -19.3288, 163.742, 0.44 ) }
    dend_77 { pt3dadd( -124.729, -17.9236, 164.384, 0.44 ) }
    dend_77 { pt3dadd( -124.482, -16.3469, 165.083, 0.37 ) }
    dend_77 { pt3dadd( -123.935, -13.5011, 166.415, 0.29 ) }
    dend_77 { pt3dadd( -123.442, -10.9942, 167.657, 0.29 ) }
    dend_77 { pt3dadd( -123.205, -9.86856, 168.215, 0.74 ) }
    dend_77 { pt3dadd( -123.084, -9.31814, 168.487, 0.74 ) }
    dend_77 { pt3dadd( -122.914, -8.60558, 168.817, 0.44 ) }
    dend_77 { pt3dadd( -122.442, -6.9743, 169.539, 0.37 ) }
    dend_77 { pt3dadd( -121.868, -5.27408, 170.25, 0.29 ) }
    dend_77 { pt3dadd( -121.266, -3.57038, 170.943, 0.29 ) }
    dend_77 { pt3dadd( -121.2, -3.40065, 171.012, 0.29 ) }
    dend_77 { pt3dadd( -120.254, -1.07899, 171.964, 0.29 ) }
    dend_77 { pt3dadd( -120.07, -0.637085, 172.139, 0.29 ) }
    dend_77 { pt3dadd( -119.476, 0.812546, 172.679, 0.29 ) }
    dend_77 { pt3dadd( -119.443, 0.884316, 172.707, 0.29 ) }
    dend_77 { pt3dadd( -118.921, 2.23207, 173.376, 0.29 ) }
    dend_77 { pt3dadd( -118.752, 2.95735, 173.81, 0.44 ) }
    dend_77 { pt3dadd( -118.739, 3.10561, 173.914, 0.44 ) }
    dend_77 { pt3dadd( -118.738, 3.64187, 174.3, 0.29 ) }
    dend_77 { pt3dadd( -118.744, 3.73276, 174.365, 0.29 ) }
    dend_77 { pt3dadd( -118.92, 5.1904, 175.304, 0.29 ) }
    dend_77 { pt3dadd( -119.334, 7.73266, 176.782, 0.29 ) }
    dend_77 { pt3dadd( -119.38, 8.03004, 176.948, 0.29 ) }
    dend_77 { pt3dadd( -119.51, 8.95094, 177.44, 0.74 ) }
    dend_77 { pt3dadd( -119.605, 9.71851, 177.839, 0.88 ) }
    dend_77 { pt3dadd( -119.787, 11.2589, 178.626, 0.52 ) }
    dend_77 { pt3dadd( -119.944, 12.6546, 179.332, 0.37 ) }
    dend_77 { pt3dadd( -120.155, 14.5699, 180.346, 0.29 ) }
    dend_77 { pt3dadd( -120.186, 14.8682, 180.512, 0.29 ) }
    dend_77 { pt3dadd( -120.41, 17.2747, 181.916, 0.29 ) }
    dend_77 { pt3dadd( -120.426, 17.4734, 182.04, 0.29 ) }
    dend_77 { pt3dadd( -120.499, 19.0758, 183.122, 0.29 ) }
    dend_77 { pt3dadd( -120.514, 19.6784, 183.571, 0.52 ) }
    dend_77 { pt3dadd( -120.515, 20.1367, 183.96, 0.66 ) }
    dend_77 { pt3dadd( -120.511, 20.2717, 184.087, 0.66 ) }
    dend_77 { pt3dadd( -120.47, 20.734, 184.605, 0.66 ) }
    dend_77 { pt3dadd( -120.465, 20.8147, 184.696, 0.66 ) }
    dend_77 { pt3dadd( -120.485, 21.6348, 185.602, 0.29 ) }
    dend_77 { pt3dadd( -120.506, 21.8921, 185.883, 0.22 ) }
    dend_77 { pt3dadd( -120.554, 22.3695, 186.418, 0.52 ) }
    dend_77 { pt3dadd( -120.576, 22.6416, 186.709, 0.52 ) }
    dend_77 { pt3dadd( -120.624, 23.3294, 187.419, 0.29 ) }
    dend_77 { pt3dadd( -120.679, 24.2797, 188.317, 0.29 ) }
    dend_77 { pt3dadd( -120.694, 25.7669, 189.656, 0.29 ) }
    dend_77 { pt3dadd( -120.691, 25.8571, 189.737, 0.29 ) }
    dend_77 { pt3dadd( -120.572, 27.3767, 191.086, 0.29 ) }
    dend_77 { pt3dadd( -120.556, 27.5152, 191.208, 0.29 ) }
    dend_77 { pt3dadd( -120.313, 29.1708, 192.615, 0.29 ) }
    dend_77 { pt3dadd( -120.093, 30.5701, 193.738, 0.29 ) }
    dend_77 { pt3dadd( -120.069, 30.7841, 193.882, 0.29 ) }
    dend_77 { pt3dadd( -120.011, 31.5356, 194.322, 0.29 ) }
    dend_77 { pt3dadd( -120.008, 31.5999, 194.354, 0.29 ) }
    dend_77 { pt3dadd( -119.992, 32.6386, 194.808, 0.88 ) }
    dend_77 { pt3dadd( -119.995, 32.9594, 194.925, 0.88 ) }
    dend_77 { pt3dadd( -120.024, 34.4962, 195.432, 0.22 ) }
    dend_77 { pt3dadd( -120.062, 36.0222, 195.879, 0.22 ) }
    dend_77 { pt3dadd( -120.068, 36.2574, 195.945, 0.22 ) }
    dend_77 { pt3dadd( -120.11, 37.9475, 196.4, 0.22 ) }
    dend_77 { pt3dadd( -120.111, 38.0199, 196.419, 0.22 ) }
    dend_77 { pt3dadd( -120.273, 40.3288, 196.925, 0.52 ) }
    dend_77 { pt3dadd( -120.452, 42.0167, 197.258, 0.29 ) }
    dend_77 { pt3dadd( -120.57, 42.7825, 197.382, 0.37 ) }
    dend_77 { pt3dadd( -120.598, 42.9374, 197.404, 0.37 ) }
    dend_77 { pt3dadd( -120.771, 43.7969, 197.521, 0.37 ) }
    dend_77 { pt3dadd( -121.413, 46.4672, 197.776, 0.22 ) }
    dend_77 { pt3dadd( -121.828, 48.0699, 197.909, 0.22 ) }
    dend_77 { pt3dadd( -121.847, 48.1543, 197.917, 0.22 ) }
    dend_77 { pt3dadd( -122.022, 49.001, 198.002, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -122.239, 50.187, 198.14, 0.66 ) }
    dend_77 { pt3dadd( -122.681, 52.6045, 198.365, 0.15 ) }
    dend_77 { pt3dadd( -122.988, 54.5868, 198.55, 0.15 ) }
    dend_77 { pt3dadd( -123.18, 55.5996, 198.594, 0.29 ) }
    dend_77 { pt3dadd( -123.199, 55.6847, 198.597, 0.29 ) }
    dend_77 { pt3dadd( -123.346, 56.2991, 198.609, 0.29 ) }
    dend_77 { pt3dadd( -123.843, 58.2002, 198.651, 0.44 ) }
    dend_77 { pt3dadd( -124.015, 58.7272, 198.629, 0.44 ) }
    dend_77 { pt3dadd( -124.529, 60.0412, 198.58, 0.22 ) }
    dend_77 { pt3dadd( -124.803, 60.7442, 198.583, 0.52 ) }
    dend_77 { pt3dadd( -124.833, 60.826, 198.586, 0.52 ) }
    dend_77 { pt3dadd( -125.039, 61.4162, 198.642, 0.88 ) }
    dend_77 { pt3dadd( -126.085, 64.8075, 199.237, 0.29 ) }
    dend_77 { pt3dadd( -126.912, 67.6141, 199.81, 0.29 ) }
    dend_77 { pt3dadd( -127.14, 68.5864, 200.039, 0.29 ) }
    dend_77 { pt3dadd( -127.153, 68.6694, 200.06, 0.29 ) }
    dend_77 { pt3dadd( -127.262, 70.2993, 200.496, 0.29 ) }
    dend_77 { pt3dadd( -127.179, 71.7168, 200.904, 0.29 ) }
    dend_77 { pt3dadd( -127.163, 71.7825, 200.925, 0.29 ) }
    dend_77 { pt3dadd( -126.521, 73.754, 201.423, 0.29 ) }
    dend_77 { pt3dadd( -125.986, 75.2252, 201.755, 0.59 ) }
    dend_77 { pt3dadd( -125.703, 75.9556, 201.904, 0.59 ) }
    dend_77 { pt3dadd( -125.222, 77.2236, 202.167, 0.22 ) }
    dend_77 { pt3dadd( -124.706, 78.6569, 202.485, 0.22 ) }
    dend_77 { pt3dadd( -124.648, 78.8348, 202.529, 0.22 ) }
    dend_77 { pt3dadd( -123.988, 81.0355, 203.122, 0.22 ) }
    dend_77 { pt3dadd( -123.941, 81.2058, 203.172, 0.22 ) }
    dend_77 { pt3dadd( -123.074, 84.6667, 204.251, 0.22 ) }
    dend_77 { pt3dadd( -123.055, 84.7569, 204.282, 0.22 ) }
    dend_77 { pt3dadd( -122.697, 86.811, 205.054, 0.22 ) }
    dend_77 { pt3dadd( -122.665, 87.0498, 205.152, 0.22 ) }
    dend_77 { pt3dadd( -122.637, 87.3922, 205.308, 0.59 ) }
    dend_77 { pt3dadd( -122.604, 88.0957, 205.649, 0.59 ) }
    dend_77 { pt3dadd( -122.679, 89.8772, 206.452, 0.29 ) }
    dend_77 { pt3dadd( -122.754, 90.696, 206.796, 0.59 ) }
    dend_77 { pt3dadd( -122.929, 91.9833, 207.313, 0.52 ) }
    dend_77 { pt3dadd( -123.086, 93.1088, 207.735, 0.74 ) }
    dend_77 { pt3dadd( -123.225, 94.0898, 208.077, 0.74 ) }
    dend_77 { pt3dadd( -123.481, 96.0711, 208.686, 0.22 ) }
    dend_77 { pt3dadd( -123.576, 96.9198, 208.901, 0.44 ) }
    dend_77 { pt3dadd( -123.643, 97.6776, 209.081, 0.74 ) }
    dend_77 { pt3dadd( -123.666, 98.1145, 209.188, 1.03 ) }
    dend_77 { pt3dadd( -123.668, 98.1842, 209.206, 1.03 ) }
    dend_77 { pt3dadd( -123.663, 99.1116, 209.492, 1.03 ) }
    dend_77 { pt3dadd( -123.655, 99.1897, 209.528, 1.03 ) }
    dend_77 { pt3dadd( -123.515, 100.457, 210.089, 0.37 ) }
    dend_77 { pt3dadd( -123.388, 101.717, 210.642, 0.29 ) }
    dend_77 { pt3dadd( -121.114, 112.501, 214.882, 0.29 ) }
    dend_77 { pt3dadd( -119.326, 122.476, 221.002, 0.29 ) }
    dend_77 { pt3dadd( -116.965, 132.166, 227.392, 0.29 ) }
    dend_77 { pt3dadd( -113.425, 140.977, 234.53, 0.29 ) }
    dend_77 { pt3dadd( -108.512, 149.127, 241.693, 0.29 ) }
    dend_77 { pt3dadd( -103.837, 155.569, 250.687, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -117.709, -25.6254, 154.415, 0.22 ) }
    dend_80 { pt3dadd( -112.538, -29.3509, 147.958, 0.22 ) }
    dend_80 { pt3dadd( -106.651, -33.1623, 142.189, 0.22 ) }
    dend_80 { pt3dadd( -100.571, -36.0951, 136.058, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -117.709, -25.6254, 154.415, 0.22 ) }
    dend_79 { pt3dadd( -112.977, -28.9187, 148.451, 0.22 ) }
    dend_79 { pt3dadd( -108.188, -32.2354, 142.547, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 5
    dend_93 nseg = 5
    dend_41 nseg = 3
    dend_26 nseg = 3
    dend_102 nseg = 7
    dend_97 nseg = 3
    dend_65 nseg = 3
    dend_27 nseg = 7
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_2 nseg = 7
    dend_103 nseg = 3
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 5
    dend_67 nseg = 13
    dend_66 nseg = 3
    dend_48 nseg = 3
    dend_43 nseg = 13
    dend_31 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 9
    dend_17 nseg = 3
    dend_16 nseg = 7
    dend_11 nseg = 5
    dend_4 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_19 nseg = 3
    dend_5 nseg = 3
    dend_69 nseg = 5
    dend_62 nseg = 7
    dend_53 nseg = 7
    dend_50 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 5
    dend_90 nseg = 3
    dend_73 nseg = 3
    dend_63 nseg = 3
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_9 nseg = 5
    dend_83 nseg = 5
    dend_74 nseg = 3
    dend_85 nseg = 9
    dend_84 nseg = 5
    dend_82 nseg = 5
    dend_75 nseg = 3
    dend_57 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 3
    dend_77 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L5_DBC_8be7b81168_0_0


